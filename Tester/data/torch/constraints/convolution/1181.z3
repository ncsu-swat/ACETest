(declare-fun temp10305_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10305_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10305_3 () (_ BitVec 64))
(declare-fun temp10305_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10305_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10305_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10305_7 () (_ BitVec 64))
(declare-fun temp10305_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10305_9 () (_ BitVec 64))
(declare-fun temp10305_10 () (_ BitVec 64))
(declare-fun temp10305_11 () (_ BitVec 64))
(declare-fun temp10305_12 () (_ BitVec 64))
(declare-fun temp10305_13 () (_ BitVec 64))
(declare-fun temp10305_14 () (_ BitVec 64))
(declare-fun temp10305_15 () (_ BitVec 64))
(declare-fun temp10305_16 () (_ BitVec 64))
(declare-fun temp10305_17 () (_ BitVec 64))
(declare-fun temp10305_18 () (_ BitVec 64))
(declare-fun temp10305_19 () (_ BitVec 64))
(declare-fun temp10305_20 () (_ BitVec 64))
(declare-fun temp10305_21 () (_ BitVec 64))
(declare-fun temp10305_22 () (_ BitVec 64))
(declare-fun temp10305_23 () (_ BitVec 64))
(declare-fun temp10305_24 () (_ BitVec 64))
(declare-fun temp10305_25 () (_ BitVec 64))
(declare-fun temp10305_26 () (_ BitVec 64))
(declare-fun temp10305_27 () (_ BitVec 64))
(declare-fun temp10305_28 () (_ BitVec 64))
(declare-fun temp10305_29 () (_ BitVec 64))
(declare-fun temp10305_30 () (_ BitVec 64))
(declare-fun temp10305_31 () (_ BitVec 64))
(declare-fun temp10305_32 () (_ BitVec 64))
(declare-fun temp10305_33 () (_ BitVec 64))
(declare-fun temp10305_34 () (_ BitVec 64))
(declare-fun temp10305_35 () (_ BitVec 64))
(declare-fun temp10305_36 () (_ BitVec 64))
(declare-fun temp10305_37 () (_ BitVec 64))
(declare-fun temp10305_38 () (_ BitVec 64))
(declare-fun temp10305_39 () (_ BitVec 64))
(declare-fun temp10305_40 () (_ BitVec 64))
(declare-fun temp10305_41 () (_ BitVec 64))
(declare-fun temp10305_42 () (_ BitVec 64))
(declare-fun temp10305_43 () (_ BitVec 64))
(declare-fun temp10305_44 () (_ BitVec 64))
(declare-fun temp10305_45 () (_ BitVec 64))
(declare-fun temp10305_46 () (_ BitVec 64))
(declare-fun temp10305_47 () (_ BitVec 64))
(declare-fun temp10305_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10305_49 () (_ BitVec 64))
(declare-fun temp10305_50 () (_ BitVec 64))
(declare-fun temp10305_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10305_52 () (_ BitVec 64))
(declare-fun temp10305_53 () (_ BitVec 64))
(declare-fun temp10305_54 () (_ BitVec 64))
(declare-fun temp10305_55 () (_ BitVec 64))
(declare-fun temp10305_56 () (_ BitVec 64))
(declare-fun temp10305_57 () (_ BitVec 64))
(declare-fun temp10305_58 () (_ BitVec 64))
(declare-fun temp10305_59 () (_ BitVec 64))
(declare-fun temp10305_60 () (_ BitVec 64))
(declare-fun temp10305_61 () (_ BitVec 64))
(declare-fun temp10305_62 () (_ BitVec 64))
(declare-fun temp10305_63 () (_ BitVec 64))
(declare-fun temp10305_64 () (_ BitVec 64))
(declare-fun temp10305_65 () (_ BitVec 64))
(declare-fun temp10305_66 () (_ BitVec 64))
(declare-fun temp10305_67 () (_ BitVec 64))
(declare-fun temp10305_68 () (_ BitVec 64))
(declare-fun temp10305_69 () (_ BitVec 64))
(declare-fun temp10305_70 () (_ BitVec 64))
(declare-fun temp10305_71 () (_ BitVec 64))
(declare-fun temp10305_72 () (_ BitVec 64))
(declare-fun temp10305_73 () (_ BitVec 64))
(declare-fun temp10305_74 () (_ BitVec 64))
(declare-fun temp10305_75 () (_ BitVec 64))
(declare-fun temp10305_76 () (_ BitVec 64))
(declare-fun temp10305_77 () (_ BitVec 64))
(declare-fun temp10305_78 () (_ BitVec 64))
(declare-fun temp10305_79 () (_ BitVec 64))
(declare-fun temp10305_80 () (_ BitVec 64))
(declare-fun temp10305_81 () (_ BitVec 64))
(declare-fun temp10305_82 () (_ BitVec 64))
(declare-fun temp10305_83 () (_ BitVec 64))
(declare-fun temp10305_84 () (_ BitVec 64))
(declare-fun temp10305_85 () (_ BitVec 64))
(declare-fun temp10305_86 () (_ BitVec 64))
(declare-fun temp10305_87 () (_ BitVec 64))
(declare-fun temp10305_88 () (_ BitVec 64))
(declare-fun temp10305_89 () (_ BitVec 64))
(declare-fun temp10305_90 () (_ BitVec 64))
(declare-fun temp10305_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10305_92 () (_ BitVec 64))
(declare-fun temp10305_93 () (_ BitVec 64))
(declare-fun temp10305_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10305_95 () (_ BitVec 64))
(declare-fun temp10305_96 () (_ BitVec 64))
(declare-fun temp10305_97 () (_ BitVec 64))
(declare-fun temp10305_98 () (_ BitVec 64))
(declare-fun temp10305_99 () (_ BitVec 64))
(declare-fun temp10305_100 () (_ BitVec 64))
(declare-fun temp10305_101 () (_ BitVec 64))
(declare-fun temp10305_102 () (_ BitVec 64))
(declare-fun temp10305_103 () (_ BitVec 64))
(declare-fun temp10305_104 () (_ BitVec 64))
(declare-fun temp10305_105 () (_ BitVec 64))
(declare-fun temp10305_106 () (_ BitVec 64))
(declare-fun temp10305_107 () (_ BitVec 64))
(declare-fun temp10305_108 () (_ BitVec 64))
(declare-fun temp10305_109 () (_ BitVec 64))
(declare-fun temp10305_110 () (_ BitVec 64))
(declare-fun temp10305_111 () (_ BitVec 64))
(declare-fun temp10305_112 () (_ BitVec 64))
(declare-fun temp10305_113 () (_ BitVec 64))
(declare-fun temp10305_114 () (_ BitVec 64))
(declare-fun temp10305_115 () (_ BitVec 64))
(declare-fun temp10305_116 () (_ BitVec 64))
(declare-fun temp10305_117 () (_ BitVec 64))
(declare-fun temp10305_118 () (_ BitVec 64))
(declare-fun temp10305_119 () (_ BitVec 64))
(declare-fun temp10305_120 () (_ BitVec 64))
(declare-fun temp10305_121 () (_ BitVec 64))
(declare-fun temp10305_122 () (_ BitVec 64))
(declare-fun temp10305_123 () (_ BitVec 64))
(declare-fun temp10305_124 () (_ BitVec 64))
(declare-fun temp10305_125 () (_ BitVec 64))
(declare-fun temp10305_126 () (_ BitVec 64))
(declare-fun temp10305_127 () (_ BitVec 64))
(declare-fun temp10305_128 () (_ BitVec 64))
(declare-fun temp10305_129 () (_ BitVec 64))
(declare-fun temp10305_130 () (_ BitVec 64))
(declare-fun temp10305_131 () (_ BitVec 64))
(declare-fun temp10305_132 () (_ BitVec 64))
(declare-fun temp10305_133 () (_ BitVec 64))
(declare-fun temp10305_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10305_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10305_136 () (_ BitVec 64))
(declare-fun temp10305_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10305_138 () (_ BitVec 64))
(declare-fun temp10305_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10305_140 () (_ BitVec 64))
(declare-fun temp10305_141 () (_ BitVec 64))
(declare-fun temp10305_142 () (_ BitVec 64))
(declare-fun temp10305_143 () (_ BitVec 64))
(declare-fun temp10305_144 () (_ BitVec 64))
(declare-fun temp10305_145 () (_ BitVec 64))
(declare-fun temp10305_146 () (_ BitVec 64))
(declare-fun temp10305_147 () (_ BitVec 64))
(declare-fun temp10305_148 () (_ BitVec 64))
(declare-fun temp10305_149 () (_ BitVec 64))
(declare-fun temp10305_150 () (_ BitVec 64))
(declare-fun temp10305_151 () (_ BitVec 64))
(declare-fun temp10305_152 () (_ BitVec 64))
(declare-fun temp10305_153 () (_ BitVec 64))
(declare-fun temp10305_154 () (_ BitVec 64))
(declare-fun temp10305_155 () (_ BitVec 64))
(declare-fun temp10305_157 () (_ BitVec 64))
(declare-fun temp10305_158 () (_ BitVec 64))
(declare-fun temp10305_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10305_159 () (_ BitVec 64))
(declare-fun temp10305_160 () (_ BitVec 64))
(declare-fun temp10305_162 () (_ BitVec 64))
(declare-fun temp10305_163 () (_ BitVec 64))
(declare-fun temp10305_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10305_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10305_165 () (_ BitVec 64))
(declare-fun temp10305_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10305_167 () (_ BitVec 64))
(declare-fun temp10305_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10305_169 () (_ BitVec 64))
(declare-fun temp10305_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10305_171 () (_ BitVec 64))
(declare-fun temp10305_172 () (_ BitVec 64))
(declare-fun temp10305_173 () (_ BitVec 64))
(declare-fun temp10305_174 () (_ BitVec 64))
(declare-fun temp10305_175 () (_ BitVec 64))
(declare-fun temp10305_176 () (_ BitVec 64))
(declare-fun temp10305_177 () (_ BitVec 64))
(declare-fun temp10305_178 () (_ BitVec 64))
(declare-fun temp10305_179 () (_ BitVec 64))
(declare-fun temp10305_180 () (_ BitVec 64))
(declare-fun temp10305_181 () (_ BitVec 64))
(declare-fun temp10305_182 () (_ BitVec 64))
(declare-fun temp10305_183 () (_ BitVec 64))
(declare-fun temp10305_184 () (_ BitVec 64))
(declare-fun temp10305_185 () (_ BitVec 64))
(declare-fun temp10305_186 () (_ BitVec 64))
(declare-fun temp10305_187 () (_ BitVec 64))
(declare-fun temp10305_188 () (_ BitVec 64))
(declare-fun temp10305_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10305_190 () (_ BitVec 64))
(declare-fun temp10305_192 () (_ BitVec 64))
(declare-fun temp10305_193 () (_ BitVec 64))
(declare-fun temp10305_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10305_194 () (_ BitVec 64))
(declare-fun temp10305_195 () (_ BitVec 64))
(declare-fun temp10305_197 () (_ BitVec 64))
(declare-fun temp10305_198 () (_ BitVec 64))
(declare-fun temp10305_196 () (_ BitVec 64))
(declare-fun temp10305_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10305_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10305_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10305_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10305_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10305_204 () (_ BitVec 64))
(declare-fun temp10305_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10305_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10305_207 () (_ BitVec 64))
(declare-fun temp10305_208 () (_ BitVec 64))
(declare-fun temp10305_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10305_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10305_211 () (_ BitVec 64))
(declare-fun temp10305_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10305_213 () (_ BitVec 64))
(declare-fun temp10305_214 () (_ BitVec 64))
(declare-fun temp10305_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10305_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10305_217 () (_ BitVec 64))
(declare-fun temp10305_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10305_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10305_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10305_221 () (_ BitVec 64))
(assert (= temp10305_1 #x0000000000000001))
(assert (= var77203 temp10305_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10305_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10305_2)))
(assert (= temp10305_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10305_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10305_4 #x0000000000000000))
(assert (= var210941 temp10305_4))
(assert (= temp10305_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10305_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10305_6 #x0000000000000000))
(assert (= var210986 temp10305_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10305_7 #x0000000000000000))
(assert (= temp10305_8 temp10305_7))
(assert (= temp10305_9 (select ARGNAME_padding_NAMEEND_VAL temp10305_8)))
(assert (= temp10305_10 #x0000000000000001))
(assert (= temp10305_11 temp10305_10))
(assert (= temp10305_12 (select ARGNAME_padding_NAMEEND_VAL temp10305_11)))
(assert (= temp10305_13 #x0000000000000002))
(assert (= temp10305_14 temp10305_13))
(assert (= temp10305_15 (select ARGNAME_padding_NAMEEND_VAL temp10305_14)))
(assert (= temp10305_16 #x0000000000000003))
(assert (= temp10305_17 temp10305_16))
(assert (= temp10305_18 (select ARGNAME_padding_NAMEEND_VAL temp10305_17)))
(assert (= temp10305_19 #x0000000000000004))
(assert (= temp10305_20 temp10305_19))
(assert (= temp10305_21 (select ARGNAME_padding_NAMEEND_VAL temp10305_20)))
(assert (= temp10305_22 #x0000000000000005))
(assert (= temp10305_23 temp10305_22))
(assert (= temp10305_24 (select ARGNAME_padding_NAMEEND_VAL temp10305_23)))
(assert (= temp10305_25 #x0000000000000000))
(assert (= temp10305_26 #x0000000000000000))
(assert (= temp10305_27 temp10305_26))
(assert (= temp10305_28 (select ARGNAME_padding_NAMEEND_VAL temp10305_27)))
(assert (= temp10305_29 #x0000000000000000))
(assert (= temp10305_30 #x0000000000000001))
(assert (= temp10305_31 temp10305_30))
(assert (= temp10305_32 (select ARGNAME_padding_NAMEEND_VAL temp10305_31)))
(assert (= temp10305_33 #x0000000000000000))
(assert (= temp10305_34 #x0000000000000002))
(assert (= temp10305_35 temp10305_34))
(assert (= temp10305_36 (select ARGNAME_padding_NAMEEND_VAL temp10305_35)))
(assert (= temp10305_37 #x0000000000000000))
(assert (= temp10305_38 #x0000000000000003))
(assert (= temp10305_39 temp10305_38))
(assert (= temp10305_40 (select ARGNAME_padding_NAMEEND_VAL temp10305_39)))
(assert (= temp10305_41 #x0000000000000000))
(assert (= temp10305_42 #x0000000000000004))
(assert (= temp10305_43 temp10305_42))
(assert (= temp10305_44 (select ARGNAME_padding_NAMEEND_VAL temp10305_43)))
(assert (= temp10305_45 #x0000000000000000))
(assert (= temp10305_46 #x0000000000000005))
(assert (= temp10305_47 temp10305_46))
(assert (= temp10305_48 (select ARGNAME_padding_NAMEEND_VAL temp10305_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10305_28 temp10305_25)
             (bvslt temp10305_32 temp10305_29)
             (bvslt temp10305_36 temp10305_33)
             (bvslt temp10305_40 temp10305_37)
             (bvslt temp10305_44 temp10305_41)
             (bvslt temp10305_48 temp10305_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10305_49 #x0000000000000000))
(assert (= var1191714 temp10305_49))
(assert (= temp10305_50 #x0000000000000000))
(assert (= temp10305_51 temp10305_50))
(assert (= temp10305_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10305_51)))
(assert (= temp10305_53 #x0000000000000001))
(assert (= temp10305_54 temp10305_53))
(assert (= temp10305_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10305_54)))
(assert (= temp10305_56 #x0000000000000002))
(assert (= temp10305_57 temp10305_56))
(assert (= temp10305_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10305_57)))
(assert (= temp10305_59 #x0000000000000003))
(assert (= temp10305_60 temp10305_59))
(assert (= temp10305_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10305_60)))
(assert (= temp10305_62 #x0000000000000004))
(assert (= temp10305_63 temp10305_62))
(assert (= temp10305_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10305_63)))
(assert (= temp10305_65 #x0000000000000005))
(assert (= temp10305_66 temp10305_65))
(assert (= temp10305_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10305_66)))
(assert (= temp10305_68 #x0000000000000000))
(assert (= temp10305_69 #x0000000000000000))
(assert (= temp10305_70 temp10305_69))
(assert (= temp10305_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10305_70)))
(assert (= temp10305_72 #x0000000000000000))
(assert (= temp10305_73 #x0000000000000001))
(assert (= temp10305_74 temp10305_73))
(assert (= temp10305_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10305_74)))
(assert (= temp10305_76 #x0000000000000000))
(assert (= temp10305_77 #x0000000000000002))
(assert (= temp10305_78 temp10305_77))
(assert (= temp10305_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10305_78)))
(assert (= temp10305_80 #x0000000000000000))
(assert (= temp10305_81 #x0000000000000003))
(assert (= temp10305_82 temp10305_81))
(assert (= temp10305_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10305_82)))
(assert (= temp10305_84 #x0000000000000000))
(assert (= temp10305_85 #x0000000000000004))
(assert (= temp10305_86 temp10305_85))
(assert (= temp10305_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10305_86)))
(assert (= temp10305_88 #x0000000000000000))
(assert (= temp10305_89 #x0000000000000005))
(assert (= temp10305_90 temp10305_89))
(assert (= temp10305_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10305_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10305_71 temp10305_68)
             (bvslt temp10305_75 temp10305_72)
             (bvslt temp10305_79 temp10305_76)
             (bvslt temp10305_83 temp10305_80)
             (bvslt temp10305_87 temp10305_84)
             (bvslt temp10305_91 temp10305_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10305_92 #x0000000000000000))
(assert (= var1191725 temp10305_92))
(assert (= temp10305_93 #x0000000000000000))
(assert (= temp10305_94 temp10305_93))
(assert (= temp10305_95 (select ARGNAME_stride_NAMEEND_VAL temp10305_94)))
(assert (= temp10305_96 #x0000000000000001))
(assert (= temp10305_97 temp10305_96))
(assert (= temp10305_98 (select ARGNAME_stride_NAMEEND_VAL temp10305_97)))
(assert (= temp10305_99 #x0000000000000002))
(assert (= temp10305_100 temp10305_99))
(assert (= temp10305_101 (select ARGNAME_stride_NAMEEND_VAL temp10305_100)))
(assert (= temp10305_102 #x0000000000000003))
(assert (= temp10305_103 temp10305_102))
(assert (= temp10305_104 (select ARGNAME_stride_NAMEEND_VAL temp10305_103)))
(assert (= temp10305_105 #x0000000000000004))
(assert (= temp10305_106 temp10305_105))
(assert (= temp10305_107 (select ARGNAME_stride_NAMEEND_VAL temp10305_106)))
(assert (= temp10305_108 #x0000000000000005))
(assert (= temp10305_109 temp10305_108))
(assert (= temp10305_110 (select ARGNAME_stride_NAMEEND_VAL temp10305_109)))
(assert (= temp10305_111 #x0000000000000000))
(assert (= temp10305_112 #x0000000000000000))
(assert (= temp10305_113 temp10305_112))
(assert (= temp10305_114 (select ARGNAME_stride_NAMEEND_VAL temp10305_113)))
(assert (= temp10305_115 #x0000000000000000))
(assert (= temp10305_116 #x0000000000000001))
(assert (= temp10305_117 temp10305_116))
(assert (= temp10305_118 (select ARGNAME_stride_NAMEEND_VAL temp10305_117)))
(assert (= temp10305_119 #x0000000000000000))
(assert (= temp10305_120 #x0000000000000002))
(assert (= temp10305_121 temp10305_120))
(assert (= temp10305_122 (select ARGNAME_stride_NAMEEND_VAL temp10305_121)))
(assert (= temp10305_123 #x0000000000000000))
(assert (= temp10305_124 #x0000000000000003))
(assert (= temp10305_125 temp10305_124))
(assert (= temp10305_126 (select ARGNAME_stride_NAMEEND_VAL temp10305_125)))
(assert (= temp10305_127 #x0000000000000000))
(assert (= temp10305_128 #x0000000000000004))
(assert (= temp10305_129 temp10305_128))
(assert (= temp10305_130 (select ARGNAME_stride_NAMEEND_VAL temp10305_129)))
(assert (= temp10305_131 #x0000000000000000))
(assert (= temp10305_132 #x0000000000000005))
(assert (= temp10305_133 temp10305_132))
(assert (= temp10305_134 (select ARGNAME_stride_NAMEEND_VAL temp10305_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10305_114 temp10305_111)
             (bvsle temp10305_118 temp10305_115)
             (bvsle temp10305_122 temp10305_119)
             (bvsle temp10305_126 temp10305_123)
             (bvsle temp10305_130 temp10305_127)
             (bvsle temp10305_134 temp10305_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10305_135 #x0000000000000000))
(assert (= var1191735 temp10305_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10305_136 #x0000000000000001))
(assert (= var1191747 temp10305_136))
(assert (= temp10305_137 #x0000000000000000))
(assert (= var1179826 temp10305_137))
(assert (= temp10305_138 #x0000000000000000))
(assert (= temp10305_139 temp10305_138))
(assert (= temp10305_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10305_139)))
(assert (= temp10305_141 #x0000000000000001))
(assert (= temp10305_142 temp10305_141))
(assert (= temp10305_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10305_142)))
(assert (= temp10305_144 #x0000000000000002))
(assert (= temp10305_145 temp10305_144))
(assert (= temp10305_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10305_145)))
(assert (= temp10305_147 #x0000000000000003))
(assert (= temp10305_148 temp10305_147))
(assert (= temp10305_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10305_148)))
(assert (= temp10305_150 #x0000000000000004))
(assert (= temp10305_151 temp10305_150))
(assert (= temp10305_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10305_151)))
(assert (= temp10305_153 #x0000000000000005))
(assert (= temp10305_154 temp10305_153))
(assert (= temp10305_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10305_154)))
(assert (= temp10305_157 var1179826))
(assert (= temp10305_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10305_157)))
(assert (= temp10305_156 temp10305_158))
(assert (= var1191780
   (ite (bvslt temp10305_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10305_159 #x0000000000000000))
(assert (= var1191780 temp10305_159))
(assert (= temp10305_160 #x0000000000000000))
(assert (= var1179826 temp10305_160))
(assert (= temp10305_162 var1179826))
(assert (= temp10305_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10305_162)))
(assert (= temp10305_161 temp10305_163))
(assert (= var1191802 (bvsmod temp10305_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10305_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10305_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10305_165 #x0000000000000001))
(assert (= var1191803 temp10305_165))
(assert (= temp10305_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10305_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10305_167 #x0000000000000001))
(assert (= var1191823 temp10305_167))
(assert (= temp10305_168 #x0000000000000001))
(assert (= var1180714 temp10305_168))
(assert (= temp10305_169 #x0000000000000000))
(assert (= temp10305_170 temp10305_169))
(assert (= temp10305_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10305_170)))
(assert (= temp10305_172 #x0000000000000001))
(assert (= temp10305_173 temp10305_172))
(assert (= temp10305_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10305_173)))
(assert (= temp10305_175 #x0000000000000002))
(assert (= temp10305_176 temp10305_175))
(assert (= temp10305_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10305_176)))
(assert (= temp10305_178 #x0000000000000003))
(assert (= temp10305_179 temp10305_178))
(assert (= temp10305_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10305_179)))
(assert (= temp10305_181 #x0000000000000004))
(assert (= temp10305_182 temp10305_181))
(assert (= temp10305_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10305_182)))
(assert (= temp10305_184 #x0000000000000005))
(assert (= temp10305_185 temp10305_184))
(assert (= temp10305_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10305_185)))
(assert (= temp10305_187 #x0000000000000000))
(assert (= temp10305_188
   (ite (bvslt var1180714 temp10305_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10305_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10305_188)))
(assert (= var1191831 temp10305_189))
(assert (bvslt (ite (bvslt var1180714 temp10305_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10305_190 #x0000000000000001))
(assert (= var1180714 temp10305_190))
(assert (= temp10305_192 var1180714))
(assert (= temp10305_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10305_192)))
(assert (= temp10305_191 temp10305_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10305_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10305_194 #x0000000000000001))
(assert (= var1191836 temp10305_194))
(assert (= temp10305_195 #x0000000000000000))
(assert (= var1179826 temp10305_195))
(assert (= temp10305_197 var1179826))
(assert (= temp10305_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10305_197)))
(assert (= temp10305_196 temp10305_198))
(assert (= temp10305_199 #x0000000000000002))
(assert (= var1586025 temp10305_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10305_200 #x0000000000000001))
(assert (= var1191993 temp10305_200))
(assert (= temp10305_201 #x0000000000000001))
(assert (= var2700303 temp10305_201))
(assert (= temp10305_202 #x0000000000000001))
(assert (= var2962447 temp10305_202))
(assert (= temp10305_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10305_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10305_204 #x0000000000000001))
(assert (= var211058 temp10305_204))
(assert (= temp10305_205 #x0000000000000001))
(assert (= var211188 temp10305_205))
(assert (= var3879401 var211188))
(assert (= temp10305_206 #x0000000000000000))
(assert (= var3866802 temp10305_206))
(assert (= temp10305_207 #x0000000000000000))
(assert (= temp10305_208
   (ite (bvslt var3866802 temp10305_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10305_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10305_208)))
(assert (= var3879420 temp10305_209))
(assert (bvslt (ite (bvslt var3866802 temp10305_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10305_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10305_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10305_211 #x0000000000000000))
(assert (= var3879421 temp10305_211))
(assert (= temp10305_212 #x0000000000000001))
(assert (= var3867690 temp10305_212))
(assert (= temp10305_213 #x0000000000000000))
(assert (= temp10305_214
   (ite (bvslt var3867690 temp10305_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10305_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10305_214)))
(assert (= var3879423 temp10305_215))
(assert (bvslt (ite (bvslt var3867690 temp10305_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10305_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10305_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10305_217 #x0000000000000001))
(assert (= var3879424 temp10305_217))
(assert (= temp10305_218 #x0000000000000000))
(assert (= var4079423 temp10305_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10305_219 #x0000000000000002))
(assert (= var4208259 temp10305_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10305_220 #x0000000000000000))
(assert (= var4273820 temp10305_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10305_221 #x0000000000000001))
(assert (= var211058 temp10305_221))
(model-add temp10305_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10305_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10305_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10305_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





