(declare-fun temp240_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp240_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp240_3 () (_ BitVec 64))
(declare-fun temp240_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp240_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp240_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp240_7 () (_ BitVec 64))
(declare-fun temp240_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp240_9 () (_ BitVec 64))
(declare-fun temp240_10 () (_ BitVec 64))
(declare-fun temp240_11 () (_ BitVec 64))
(declare-fun temp240_12 () (_ BitVec 64))
(declare-fun temp240_13 () (_ BitVec 64))
(declare-fun temp240_14 () (_ BitVec 64))
(declare-fun temp240_15 () (_ BitVec 64))
(declare-fun temp240_16 () (_ BitVec 64))
(declare-fun temp240_17 () (_ BitVec 64))
(declare-fun temp240_18 () (_ BitVec 64))
(declare-fun temp240_19 () (_ BitVec 64))
(declare-fun temp240_20 () (_ BitVec 64))
(declare-fun temp240_21 () (_ BitVec 64))
(declare-fun temp240_22 () (_ BitVec 64))
(declare-fun temp240_23 () (_ BitVec 64))
(declare-fun temp240_24 () (_ BitVec 64))
(declare-fun temp240_25 () (_ BitVec 64))
(declare-fun temp240_26 () (_ BitVec 64))
(declare-fun temp240_27 () (_ BitVec 64))
(declare-fun temp240_28 () (_ BitVec 64))
(declare-fun temp240_29 () (_ BitVec 64))
(declare-fun temp240_30 () (_ BitVec 64))
(declare-fun temp240_31 () (_ BitVec 64))
(declare-fun temp240_32 () (_ BitVec 64))
(declare-fun temp240_33 () (_ BitVec 64))
(declare-fun temp240_34 () (_ BitVec 64))
(declare-fun temp240_35 () (_ BitVec 64))
(declare-fun temp240_36 () (_ BitVec 64))
(declare-fun temp240_37 () (_ BitVec 64))
(declare-fun temp240_38 () (_ BitVec 64))
(declare-fun temp240_39 () (_ BitVec 64))
(declare-fun temp240_40 () (_ BitVec 64))
(declare-fun temp240_41 () (_ BitVec 64))
(declare-fun temp240_42 () (_ BitVec 64))
(declare-fun temp240_43 () (_ BitVec 64))
(declare-fun temp240_44 () (_ BitVec 64))
(declare-fun temp240_45 () (_ BitVec 64))
(declare-fun temp240_46 () (_ BitVec 64))
(declare-fun temp240_47 () (_ BitVec 64))
(declare-fun temp240_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp240_49 () (_ BitVec 64))
(declare-fun temp240_50 () (_ BitVec 64))
(declare-fun temp240_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp240_52 () (_ BitVec 64))
(declare-fun temp240_53 () (_ BitVec 64))
(declare-fun temp240_54 () (_ BitVec 64))
(declare-fun temp240_55 () (_ BitVec 64))
(declare-fun temp240_56 () (_ BitVec 64))
(declare-fun temp240_57 () (_ BitVec 64))
(declare-fun temp240_58 () (_ BitVec 64))
(declare-fun temp240_59 () (_ BitVec 64))
(declare-fun temp240_60 () (_ BitVec 64))
(declare-fun temp240_61 () (_ BitVec 64))
(declare-fun temp240_62 () (_ BitVec 64))
(declare-fun temp240_63 () (_ BitVec 64))
(declare-fun temp240_64 () (_ BitVec 64))
(declare-fun temp240_65 () (_ BitVec 64))
(declare-fun temp240_66 () (_ BitVec 64))
(declare-fun temp240_67 () (_ BitVec 64))
(declare-fun temp240_68 () (_ BitVec 64))
(declare-fun temp240_69 () (_ BitVec 64))
(declare-fun temp240_70 () (_ BitVec 64))
(declare-fun temp240_71 () (_ BitVec 64))
(declare-fun temp240_72 () (_ BitVec 64))
(declare-fun temp240_73 () (_ BitVec 64))
(declare-fun temp240_74 () (_ BitVec 64))
(declare-fun temp240_75 () (_ BitVec 64))
(declare-fun temp240_76 () (_ BitVec 64))
(declare-fun temp240_77 () (_ BitVec 64))
(declare-fun temp240_78 () (_ BitVec 64))
(declare-fun temp240_79 () (_ BitVec 64))
(declare-fun temp240_80 () (_ BitVec 64))
(declare-fun temp240_81 () (_ BitVec 64))
(declare-fun temp240_82 () (_ BitVec 64))
(declare-fun temp240_83 () (_ BitVec 64))
(declare-fun temp240_84 () (_ BitVec 64))
(declare-fun temp240_85 () (_ BitVec 64))
(declare-fun temp240_86 () (_ BitVec 64))
(declare-fun temp240_87 () (_ BitVec 64))
(declare-fun temp240_88 () (_ BitVec 64))
(declare-fun temp240_89 () (_ BitVec 64))
(declare-fun temp240_90 () (_ BitVec 64))
(declare-fun temp240_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp240_92 () (_ BitVec 64))
(declare-fun temp240_93 () (_ BitVec 64))
(declare-fun temp240_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp240_95 () (_ BitVec 64))
(declare-fun temp240_96 () (_ BitVec 64))
(declare-fun temp240_97 () (_ BitVec 64))
(declare-fun temp240_98 () (_ BitVec 64))
(declare-fun temp240_99 () (_ BitVec 64))
(declare-fun temp240_100 () (_ BitVec 64))
(declare-fun temp240_101 () (_ BitVec 64))
(declare-fun temp240_102 () (_ BitVec 64))
(declare-fun temp240_103 () (_ BitVec 64))
(declare-fun temp240_104 () (_ BitVec 64))
(declare-fun temp240_105 () (_ BitVec 64))
(declare-fun temp240_106 () (_ BitVec 64))
(declare-fun temp240_107 () (_ BitVec 64))
(declare-fun temp240_108 () (_ BitVec 64))
(declare-fun temp240_109 () (_ BitVec 64))
(declare-fun temp240_110 () (_ BitVec 64))
(declare-fun temp240_111 () (_ BitVec 64))
(declare-fun temp240_112 () (_ BitVec 64))
(declare-fun temp240_113 () (_ BitVec 64))
(declare-fun temp240_114 () (_ BitVec 64))
(declare-fun temp240_115 () (_ BitVec 64))
(declare-fun temp240_116 () (_ BitVec 64))
(declare-fun temp240_117 () (_ BitVec 64))
(declare-fun temp240_118 () (_ BitVec 64))
(declare-fun temp240_119 () (_ BitVec 64))
(declare-fun temp240_120 () (_ BitVec 64))
(declare-fun temp240_121 () (_ BitVec 64))
(declare-fun temp240_122 () (_ BitVec 64))
(declare-fun temp240_123 () (_ BitVec 64))
(declare-fun temp240_124 () (_ BitVec 64))
(declare-fun temp240_125 () (_ BitVec 64))
(declare-fun temp240_126 () (_ BitVec 64))
(declare-fun temp240_127 () (_ BitVec 64))
(declare-fun temp240_128 () (_ BitVec 64))
(declare-fun temp240_129 () (_ BitVec 64))
(declare-fun temp240_130 () (_ BitVec 64))
(declare-fun temp240_131 () (_ BitVec 64))
(declare-fun temp240_132 () (_ BitVec 64))
(declare-fun temp240_133 () (_ BitVec 64))
(declare-fun temp240_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp240_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp240_136 () (_ BitVec 64))
(declare-fun temp240_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp240_138 () (_ BitVec 64))
(declare-fun temp240_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp240_140 () (_ BitVec 64))
(declare-fun temp240_141 () (_ BitVec 64))
(declare-fun temp240_142 () (_ BitVec 64))
(declare-fun temp240_143 () (_ BitVec 64))
(declare-fun temp240_144 () (_ BitVec 64))
(declare-fun temp240_145 () (_ BitVec 64))
(declare-fun temp240_146 () (_ BitVec 64))
(declare-fun temp240_147 () (_ BitVec 64))
(declare-fun temp240_148 () (_ BitVec 64))
(declare-fun temp240_149 () (_ BitVec 64))
(declare-fun temp240_150 () (_ BitVec 64))
(declare-fun temp240_151 () (_ BitVec 64))
(declare-fun temp240_152 () (_ BitVec 64))
(declare-fun temp240_153 () (_ BitVec 64))
(declare-fun temp240_154 () (_ BitVec 64))
(declare-fun temp240_155 () (_ BitVec 64))
(declare-fun temp240_157 () (_ BitVec 64))
(declare-fun temp240_158 () (_ BitVec 64))
(declare-fun temp240_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp240_159 () (_ BitVec 64))
(declare-fun temp240_160 () (_ BitVec 64))
(declare-fun temp240_162 () (_ BitVec 64))
(declare-fun temp240_163 () (_ BitVec 64))
(declare-fun temp240_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp240_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp240_165 () (_ BitVec 64))
(declare-fun temp240_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp240_167 () (_ BitVec 64))
(declare-fun temp240_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp240_169 () (_ BitVec 64))
(declare-fun temp240_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp240_171 () (_ BitVec 64))
(declare-fun temp240_172 () (_ BitVec 64))
(declare-fun temp240_173 () (_ BitVec 64))
(declare-fun temp240_174 () (_ BitVec 64))
(declare-fun temp240_175 () (_ BitVec 64))
(declare-fun temp240_176 () (_ BitVec 64))
(declare-fun temp240_177 () (_ BitVec 64))
(declare-fun temp240_178 () (_ BitVec 64))
(declare-fun temp240_179 () (_ BitVec 64))
(declare-fun temp240_180 () (_ BitVec 64))
(declare-fun temp240_181 () (_ BitVec 64))
(declare-fun temp240_182 () (_ BitVec 64))
(declare-fun temp240_183 () (_ BitVec 64))
(declare-fun temp240_184 () (_ BitVec 64))
(declare-fun temp240_185 () (_ BitVec 64))
(declare-fun temp240_186 () (_ BitVec 64))
(declare-fun temp240_187 () (_ BitVec 64))
(declare-fun temp240_188 () (_ BitVec 64))
(declare-fun temp240_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp240_190 () (_ BitVec 64))
(declare-fun temp240_192 () (_ BitVec 64))
(declare-fun temp240_193 () (_ BitVec 64))
(declare-fun temp240_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp240_194 () (_ BitVec 64))
(declare-fun temp240_195 () (_ BitVec 64))
(declare-fun temp240_197 () (_ BitVec 64))
(declare-fun temp240_198 () (_ BitVec 64))
(declare-fun temp240_196 () (_ BitVec 64))
(declare-fun temp240_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp240_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp240_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp240_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp240_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp240_204 () (_ BitVec 64))
(declare-fun temp240_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp240_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp240_207 () (_ BitVec 64))
(declare-fun temp240_208 () (_ BitVec 64))
(declare-fun temp240_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp240_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp240_211 () (_ BitVec 64))
(declare-fun temp240_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp240_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp240_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211962 () (_ BitVec 64))
(declare-fun temp240_215 () (_ BitVec 64))
(declare-fun var211963 () (_ BitVec 64))
(declare-fun temp240_216 () (_ BitVec 64))
(assert (= temp240_1 #x0000000000000001))
(assert (= var77203 temp240_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp240_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp240_2)))
(assert (= temp240_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp240_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp240_4 #x0000000000000000))
(assert (= var210941 temp240_4))
(assert (= temp240_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp240_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp240_6 #x0000000000000000))
(assert (= var210986 temp240_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp240_7 #x0000000000000000))
(assert (= temp240_8 temp240_7))
(assert (= temp240_9 (select ARGNAME_padding_NAMEEND_VAL temp240_8)))
(assert (= temp240_10 #x0000000000000001))
(assert (= temp240_11 temp240_10))
(assert (= temp240_12 (select ARGNAME_padding_NAMEEND_VAL temp240_11)))
(assert (= temp240_13 #x0000000000000002))
(assert (= temp240_14 temp240_13))
(assert (= temp240_15 (select ARGNAME_padding_NAMEEND_VAL temp240_14)))
(assert (= temp240_16 #x0000000000000003))
(assert (= temp240_17 temp240_16))
(assert (= temp240_18 (select ARGNAME_padding_NAMEEND_VAL temp240_17)))
(assert (= temp240_19 #x0000000000000004))
(assert (= temp240_20 temp240_19))
(assert (= temp240_21 (select ARGNAME_padding_NAMEEND_VAL temp240_20)))
(assert (= temp240_22 #x0000000000000005))
(assert (= temp240_23 temp240_22))
(assert (= temp240_24 (select ARGNAME_padding_NAMEEND_VAL temp240_23)))
(assert (= temp240_25 #x0000000000000000))
(assert (= temp240_26 #x0000000000000000))
(assert (= temp240_27 temp240_26))
(assert (= temp240_28 (select ARGNAME_padding_NAMEEND_VAL temp240_27)))
(assert (= temp240_29 #x0000000000000000))
(assert (= temp240_30 #x0000000000000001))
(assert (= temp240_31 temp240_30))
(assert (= temp240_32 (select ARGNAME_padding_NAMEEND_VAL temp240_31)))
(assert (= temp240_33 #x0000000000000000))
(assert (= temp240_34 #x0000000000000002))
(assert (= temp240_35 temp240_34))
(assert (= temp240_36 (select ARGNAME_padding_NAMEEND_VAL temp240_35)))
(assert (= temp240_37 #x0000000000000000))
(assert (= temp240_38 #x0000000000000003))
(assert (= temp240_39 temp240_38))
(assert (= temp240_40 (select ARGNAME_padding_NAMEEND_VAL temp240_39)))
(assert (= temp240_41 #x0000000000000000))
(assert (= temp240_42 #x0000000000000004))
(assert (= temp240_43 temp240_42))
(assert (= temp240_44 (select ARGNAME_padding_NAMEEND_VAL temp240_43)))
(assert (= temp240_45 #x0000000000000000))
(assert (= temp240_46 #x0000000000000005))
(assert (= temp240_47 temp240_46))
(assert (= temp240_48 (select ARGNAME_padding_NAMEEND_VAL temp240_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp240_28 temp240_25)
             (bvslt temp240_32 temp240_29)
             (bvslt temp240_36 temp240_33)
             (bvslt temp240_40 temp240_37)
             (bvslt temp240_44 temp240_41)
             (bvslt temp240_48 temp240_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp240_49 #x0000000000000000))
(assert (= var1191714 temp240_49))
(assert (= temp240_50 #x0000000000000000))
(assert (= temp240_51 temp240_50))
(assert (= temp240_52 (select ARGNAME_output_padding_NAMEEND_VAL temp240_51)))
(assert (= temp240_53 #x0000000000000001))
(assert (= temp240_54 temp240_53))
(assert (= temp240_55 (select ARGNAME_output_padding_NAMEEND_VAL temp240_54)))
(assert (= temp240_56 #x0000000000000002))
(assert (= temp240_57 temp240_56))
(assert (= temp240_58 (select ARGNAME_output_padding_NAMEEND_VAL temp240_57)))
(assert (= temp240_59 #x0000000000000003))
(assert (= temp240_60 temp240_59))
(assert (= temp240_61 (select ARGNAME_output_padding_NAMEEND_VAL temp240_60)))
(assert (= temp240_62 #x0000000000000004))
(assert (= temp240_63 temp240_62))
(assert (= temp240_64 (select ARGNAME_output_padding_NAMEEND_VAL temp240_63)))
(assert (= temp240_65 #x0000000000000005))
(assert (= temp240_66 temp240_65))
(assert (= temp240_67 (select ARGNAME_output_padding_NAMEEND_VAL temp240_66)))
(assert (= temp240_68 #x0000000000000000))
(assert (= temp240_69 #x0000000000000000))
(assert (= temp240_70 temp240_69))
(assert (= temp240_71 (select ARGNAME_output_padding_NAMEEND_VAL temp240_70)))
(assert (= temp240_72 #x0000000000000000))
(assert (= temp240_73 #x0000000000000001))
(assert (= temp240_74 temp240_73))
(assert (= temp240_75 (select ARGNAME_output_padding_NAMEEND_VAL temp240_74)))
(assert (= temp240_76 #x0000000000000000))
(assert (= temp240_77 #x0000000000000002))
(assert (= temp240_78 temp240_77))
(assert (= temp240_79 (select ARGNAME_output_padding_NAMEEND_VAL temp240_78)))
(assert (= temp240_80 #x0000000000000000))
(assert (= temp240_81 #x0000000000000003))
(assert (= temp240_82 temp240_81))
(assert (= temp240_83 (select ARGNAME_output_padding_NAMEEND_VAL temp240_82)))
(assert (= temp240_84 #x0000000000000000))
(assert (= temp240_85 #x0000000000000004))
(assert (= temp240_86 temp240_85))
(assert (= temp240_87 (select ARGNAME_output_padding_NAMEEND_VAL temp240_86)))
(assert (= temp240_88 #x0000000000000000))
(assert (= temp240_89 #x0000000000000005))
(assert (= temp240_90 temp240_89))
(assert (= temp240_91 (select ARGNAME_output_padding_NAMEEND_VAL temp240_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp240_71 temp240_68)
             (bvslt temp240_75 temp240_72)
             (bvslt temp240_79 temp240_76)
             (bvslt temp240_83 temp240_80)
             (bvslt temp240_87 temp240_84)
             (bvslt temp240_91 temp240_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp240_92 #x0000000000000000))
(assert (= var1191725 temp240_92))
(assert (= temp240_93 #x0000000000000000))
(assert (= temp240_94 temp240_93))
(assert (= temp240_95 (select ARGNAME_stride_NAMEEND_VAL temp240_94)))
(assert (= temp240_96 #x0000000000000001))
(assert (= temp240_97 temp240_96))
(assert (= temp240_98 (select ARGNAME_stride_NAMEEND_VAL temp240_97)))
(assert (= temp240_99 #x0000000000000002))
(assert (= temp240_100 temp240_99))
(assert (= temp240_101 (select ARGNAME_stride_NAMEEND_VAL temp240_100)))
(assert (= temp240_102 #x0000000000000003))
(assert (= temp240_103 temp240_102))
(assert (= temp240_104 (select ARGNAME_stride_NAMEEND_VAL temp240_103)))
(assert (= temp240_105 #x0000000000000004))
(assert (= temp240_106 temp240_105))
(assert (= temp240_107 (select ARGNAME_stride_NAMEEND_VAL temp240_106)))
(assert (= temp240_108 #x0000000000000005))
(assert (= temp240_109 temp240_108))
(assert (= temp240_110 (select ARGNAME_stride_NAMEEND_VAL temp240_109)))
(assert (= temp240_111 #x0000000000000000))
(assert (= temp240_112 #x0000000000000000))
(assert (= temp240_113 temp240_112))
(assert (= temp240_114 (select ARGNAME_stride_NAMEEND_VAL temp240_113)))
(assert (= temp240_115 #x0000000000000000))
(assert (= temp240_116 #x0000000000000001))
(assert (= temp240_117 temp240_116))
(assert (= temp240_118 (select ARGNAME_stride_NAMEEND_VAL temp240_117)))
(assert (= temp240_119 #x0000000000000000))
(assert (= temp240_120 #x0000000000000002))
(assert (= temp240_121 temp240_120))
(assert (= temp240_122 (select ARGNAME_stride_NAMEEND_VAL temp240_121)))
(assert (= temp240_123 #x0000000000000000))
(assert (= temp240_124 #x0000000000000003))
(assert (= temp240_125 temp240_124))
(assert (= temp240_126 (select ARGNAME_stride_NAMEEND_VAL temp240_125)))
(assert (= temp240_127 #x0000000000000000))
(assert (= temp240_128 #x0000000000000004))
(assert (= temp240_129 temp240_128))
(assert (= temp240_130 (select ARGNAME_stride_NAMEEND_VAL temp240_129)))
(assert (= temp240_131 #x0000000000000000))
(assert (= temp240_132 #x0000000000000005))
(assert (= temp240_133 temp240_132))
(assert (= temp240_134 (select ARGNAME_stride_NAMEEND_VAL temp240_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp240_114 temp240_111)
             (bvsle temp240_118 temp240_115)
             (bvsle temp240_122 temp240_119)
             (bvsle temp240_126 temp240_123)
             (bvsle temp240_130 temp240_127)
             (bvsle temp240_134 temp240_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp240_135 #x0000000000000000))
(assert (= var1191735 temp240_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp240_136 #x0000000000000001))
(assert (= var1191747 temp240_136))
(assert (= temp240_137 #x0000000000000000))
(assert (= var1179826 temp240_137))
(assert (= temp240_138 #x0000000000000000))
(assert (= temp240_139 temp240_138))
(assert (= temp240_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp240_139)))
(assert (= temp240_141 #x0000000000000001))
(assert (= temp240_142 temp240_141))
(assert (= temp240_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp240_142)))
(assert (= temp240_144 #x0000000000000002))
(assert (= temp240_145 temp240_144))
(assert (= temp240_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp240_145)))
(assert (= temp240_147 #x0000000000000003))
(assert (= temp240_148 temp240_147))
(assert (= temp240_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp240_148)))
(assert (= temp240_150 #x0000000000000004))
(assert (= temp240_151 temp240_150))
(assert (= temp240_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp240_151)))
(assert (= temp240_153 #x0000000000000005))
(assert (= temp240_154 temp240_153))
(assert (= temp240_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp240_154)))
(assert (= temp240_157 var1179826))
(assert (= temp240_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp240_157)))
(assert (= temp240_156 temp240_158))
(assert (= var1191780
   (ite (bvslt temp240_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp240_159 #x0000000000000000))
(assert (= var1191780 temp240_159))
(assert (= temp240_160 #x0000000000000000))
(assert (= var1179826 temp240_160))
(assert (= temp240_162 var1179826))
(assert (= temp240_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp240_162)))
(assert (= temp240_161 temp240_163))
(assert (= var1191802 (bvsmod temp240_161 ARGNAME_groups_NAMEEND)))
(assert (= temp240_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp240_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp240_165 #x0000000000000001))
(assert (= var1191803 temp240_165))
(assert (= temp240_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp240_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp240_167 #x0000000000000001))
(assert (= var1191823 temp240_167))
(assert (= temp240_168 #x0000000000000001))
(assert (= var1180714 temp240_168))
(assert (= temp240_169 #x0000000000000000))
(assert (= temp240_170 temp240_169))
(assert (= temp240_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp240_170)))
(assert (= temp240_172 #x0000000000000001))
(assert (= temp240_173 temp240_172))
(assert (= temp240_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp240_173)))
(assert (= temp240_175 #x0000000000000002))
(assert (= temp240_176 temp240_175))
(assert (= temp240_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp240_176)))
(assert (= temp240_178 #x0000000000000003))
(assert (= temp240_179 temp240_178))
(assert (= temp240_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp240_179)))
(assert (= temp240_181 #x0000000000000004))
(assert (= temp240_182 temp240_181))
(assert (= temp240_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp240_182)))
(assert (= temp240_184 #x0000000000000005))
(assert (= temp240_185 temp240_184))
(assert (= temp240_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp240_185)))
(assert (= temp240_187 #x0000000000000000))
(assert (= temp240_188
   (ite (bvslt var1180714 temp240_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp240_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp240_188)))
(assert (= var1191831 temp240_189))
(assert (bvslt (ite (bvslt var1180714 temp240_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp240_190 #x0000000000000001))
(assert (= var1180714 temp240_190))
(assert (= temp240_192 var1180714))
(assert (= temp240_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp240_192)))
(assert (= temp240_191 temp240_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp240_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp240_194 #x0000000000000001))
(assert (= var1191836 temp240_194))
(assert (= temp240_195 #x0000000000000000))
(assert (= var1179826 temp240_195))
(assert (= temp240_197 var1179826))
(assert (= temp240_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp240_197)))
(assert (= temp240_196 temp240_198))
(assert (= temp240_199 #x0000000000000002))
(assert (= var1586025 temp240_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp240_200 #x0000000000000001))
(assert (= var1191993 temp240_200))
(assert (= temp240_201 #x0000000000000001))
(assert (= var2700303 temp240_201))
(assert (= temp240_202 #x0000000000000001))
(assert (= var2962447 temp240_202))
(assert (= temp240_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp240_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp240_204 #x0000000000000001))
(assert (= var211058 temp240_204))
(assert (= temp240_205 #x0000000000000001))
(assert (= var211188 temp240_205))
(assert (= var3879401 var211188))
(assert (= temp240_206 #x0000000000000000))
(assert (= var3866802 temp240_206))
(assert (= temp240_207 #x0000000000000000))
(assert (= temp240_208
   (ite (bvslt var3866802 temp240_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp240_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp240_208)))
(assert (= var3879420 temp240_209))
(assert (bvslt (ite (bvslt var3866802 temp240_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp240_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp240_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp240_211 #x0000000000000001))
(assert (= var3879421 temp240_211))
(assert (= temp240_212 #x0000000000000000))
(assert (= var4079423 temp240_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp240_213 #x0000000000000002))
(assert (= var4208259 temp240_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp240_214 #x0000000000000000))
(assert (= var4273820 temp240_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211962 var210913))
(assert (= temp240_215 #x0000000000000000))
(assert (= var211963
   (ite (distinct var211962 temp240_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp240_216 #x0000000000000001))
(assert (= var211058 temp240_216))
(model-add temp240_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp240_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp240_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp240_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





