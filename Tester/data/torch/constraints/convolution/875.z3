(declare-fun temp1166_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1166_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1166_3 () (_ BitVec 64))
(declare-fun temp1166_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1166_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1166_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1166_7 () (_ BitVec 64))
(declare-fun temp1166_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1166_9 () (_ BitVec 64))
(declare-fun temp1166_10 () (_ BitVec 64))
(declare-fun temp1166_11 () (_ BitVec 64))
(declare-fun temp1166_12 () (_ BitVec 64))
(declare-fun temp1166_13 () (_ BitVec 64))
(declare-fun temp1166_14 () (_ BitVec 64))
(declare-fun temp1166_15 () (_ BitVec 64))
(declare-fun temp1166_16 () (_ BitVec 64))
(declare-fun temp1166_17 () (_ BitVec 64))
(declare-fun temp1166_18 () (_ BitVec 64))
(declare-fun temp1166_19 () (_ BitVec 64))
(declare-fun temp1166_20 () (_ BitVec 64))
(declare-fun temp1166_21 () (_ BitVec 64))
(declare-fun temp1166_22 () (_ BitVec 64))
(declare-fun temp1166_23 () (_ BitVec 64))
(declare-fun temp1166_24 () (_ BitVec 64))
(declare-fun temp1166_25 () (_ BitVec 64))
(declare-fun temp1166_26 () (_ BitVec 64))
(declare-fun temp1166_27 () (_ BitVec 64))
(declare-fun temp1166_28 () (_ BitVec 64))
(declare-fun temp1166_29 () (_ BitVec 64))
(declare-fun temp1166_30 () (_ BitVec 64))
(declare-fun temp1166_31 () (_ BitVec 64))
(declare-fun temp1166_32 () (_ BitVec 64))
(declare-fun temp1166_33 () (_ BitVec 64))
(declare-fun temp1166_34 () (_ BitVec 64))
(declare-fun temp1166_35 () (_ BitVec 64))
(declare-fun temp1166_36 () (_ BitVec 64))
(declare-fun temp1166_37 () (_ BitVec 64))
(declare-fun temp1166_38 () (_ BitVec 64))
(declare-fun temp1166_39 () (_ BitVec 64))
(declare-fun temp1166_40 () (_ BitVec 64))
(declare-fun temp1166_41 () (_ BitVec 64))
(declare-fun temp1166_42 () (_ BitVec 64))
(declare-fun temp1166_43 () (_ BitVec 64))
(declare-fun temp1166_44 () (_ BitVec 64))
(declare-fun temp1166_45 () (_ BitVec 64))
(declare-fun temp1166_46 () (_ BitVec 64))
(declare-fun temp1166_47 () (_ BitVec 64))
(declare-fun temp1166_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1166_49 () (_ BitVec 64))
(declare-fun temp1166_50 () (_ BitVec 64))
(declare-fun temp1166_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1166_52 () (_ BitVec 64))
(declare-fun temp1166_53 () (_ BitVec 64))
(declare-fun temp1166_54 () (_ BitVec 64))
(declare-fun temp1166_55 () (_ BitVec 64))
(declare-fun temp1166_56 () (_ BitVec 64))
(declare-fun temp1166_57 () (_ BitVec 64))
(declare-fun temp1166_58 () (_ BitVec 64))
(declare-fun temp1166_59 () (_ BitVec 64))
(declare-fun temp1166_60 () (_ BitVec 64))
(declare-fun temp1166_61 () (_ BitVec 64))
(declare-fun temp1166_62 () (_ BitVec 64))
(declare-fun temp1166_63 () (_ BitVec 64))
(declare-fun temp1166_64 () (_ BitVec 64))
(declare-fun temp1166_65 () (_ BitVec 64))
(declare-fun temp1166_66 () (_ BitVec 64))
(declare-fun temp1166_67 () (_ BitVec 64))
(declare-fun temp1166_68 () (_ BitVec 64))
(declare-fun temp1166_69 () (_ BitVec 64))
(declare-fun temp1166_70 () (_ BitVec 64))
(declare-fun temp1166_71 () (_ BitVec 64))
(declare-fun temp1166_72 () (_ BitVec 64))
(declare-fun temp1166_73 () (_ BitVec 64))
(declare-fun temp1166_74 () (_ BitVec 64))
(declare-fun temp1166_75 () (_ BitVec 64))
(declare-fun temp1166_76 () (_ BitVec 64))
(declare-fun temp1166_77 () (_ BitVec 64))
(declare-fun temp1166_78 () (_ BitVec 64))
(declare-fun temp1166_79 () (_ BitVec 64))
(declare-fun temp1166_80 () (_ BitVec 64))
(declare-fun temp1166_81 () (_ BitVec 64))
(declare-fun temp1166_82 () (_ BitVec 64))
(declare-fun temp1166_83 () (_ BitVec 64))
(declare-fun temp1166_84 () (_ BitVec 64))
(declare-fun temp1166_85 () (_ BitVec 64))
(declare-fun temp1166_86 () (_ BitVec 64))
(declare-fun temp1166_87 () (_ BitVec 64))
(declare-fun temp1166_88 () (_ BitVec 64))
(declare-fun temp1166_89 () (_ BitVec 64))
(declare-fun temp1166_90 () (_ BitVec 64))
(declare-fun temp1166_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1166_92 () (_ BitVec 64))
(declare-fun temp1166_93 () (_ BitVec 64))
(declare-fun temp1166_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1166_95 () (_ BitVec 64))
(declare-fun temp1166_96 () (_ BitVec 64))
(declare-fun temp1166_97 () (_ BitVec 64))
(declare-fun temp1166_98 () (_ BitVec 64))
(declare-fun temp1166_99 () (_ BitVec 64))
(declare-fun temp1166_100 () (_ BitVec 64))
(declare-fun temp1166_101 () (_ BitVec 64))
(declare-fun temp1166_102 () (_ BitVec 64))
(declare-fun temp1166_103 () (_ BitVec 64))
(declare-fun temp1166_104 () (_ BitVec 64))
(declare-fun temp1166_105 () (_ BitVec 64))
(declare-fun temp1166_106 () (_ BitVec 64))
(declare-fun temp1166_107 () (_ BitVec 64))
(declare-fun temp1166_108 () (_ BitVec 64))
(declare-fun temp1166_109 () (_ BitVec 64))
(declare-fun temp1166_110 () (_ BitVec 64))
(declare-fun temp1166_111 () (_ BitVec 64))
(declare-fun temp1166_112 () (_ BitVec 64))
(declare-fun temp1166_113 () (_ BitVec 64))
(declare-fun temp1166_114 () (_ BitVec 64))
(declare-fun temp1166_115 () (_ BitVec 64))
(declare-fun temp1166_116 () (_ BitVec 64))
(declare-fun temp1166_117 () (_ BitVec 64))
(declare-fun temp1166_118 () (_ BitVec 64))
(declare-fun temp1166_119 () (_ BitVec 64))
(declare-fun temp1166_120 () (_ BitVec 64))
(declare-fun temp1166_121 () (_ BitVec 64))
(declare-fun temp1166_122 () (_ BitVec 64))
(declare-fun temp1166_123 () (_ BitVec 64))
(declare-fun temp1166_124 () (_ BitVec 64))
(declare-fun temp1166_125 () (_ BitVec 64))
(declare-fun temp1166_126 () (_ BitVec 64))
(declare-fun temp1166_127 () (_ BitVec 64))
(declare-fun temp1166_128 () (_ BitVec 64))
(declare-fun temp1166_129 () (_ BitVec 64))
(declare-fun temp1166_130 () (_ BitVec 64))
(declare-fun temp1166_131 () (_ BitVec 64))
(declare-fun temp1166_132 () (_ BitVec 64))
(declare-fun temp1166_133 () (_ BitVec 64))
(declare-fun temp1166_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1166_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1166_136 () (_ BitVec 64))
(declare-fun temp1166_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1166_138 () (_ BitVec 64))
(declare-fun temp1166_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1166_140 () (_ BitVec 64))
(declare-fun temp1166_141 () (_ BitVec 64))
(declare-fun temp1166_142 () (_ BitVec 64))
(declare-fun temp1166_143 () (_ BitVec 64))
(declare-fun temp1166_144 () (_ BitVec 64))
(declare-fun temp1166_145 () (_ BitVec 64))
(declare-fun temp1166_146 () (_ BitVec 64))
(declare-fun temp1166_147 () (_ BitVec 64))
(declare-fun temp1166_148 () (_ BitVec 64))
(declare-fun temp1166_149 () (_ BitVec 64))
(declare-fun temp1166_150 () (_ BitVec 64))
(declare-fun temp1166_151 () (_ BitVec 64))
(declare-fun temp1166_152 () (_ BitVec 64))
(declare-fun temp1166_153 () (_ BitVec 64))
(declare-fun temp1166_154 () (_ BitVec 64))
(declare-fun temp1166_155 () (_ BitVec 64))
(declare-fun temp1166_157 () (_ BitVec 64))
(declare-fun temp1166_158 () (_ BitVec 64))
(declare-fun temp1166_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1166_159 () (_ BitVec 64))
(declare-fun temp1166_160 () (_ BitVec 64))
(declare-fun temp1166_162 () (_ BitVec 64))
(declare-fun temp1166_163 () (_ BitVec 64))
(declare-fun temp1166_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1166_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1166_165 () (_ BitVec 64))
(declare-fun temp1166_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1166_167 () (_ BitVec 64))
(declare-fun temp1166_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1166_169 () (_ BitVec 64))
(declare-fun temp1166_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1166_171 () (_ BitVec 64))
(declare-fun temp1166_172 () (_ BitVec 64))
(declare-fun temp1166_173 () (_ BitVec 64))
(declare-fun temp1166_174 () (_ BitVec 64))
(declare-fun temp1166_175 () (_ BitVec 64))
(declare-fun temp1166_176 () (_ BitVec 64))
(declare-fun temp1166_177 () (_ BitVec 64))
(declare-fun temp1166_178 () (_ BitVec 64))
(declare-fun temp1166_179 () (_ BitVec 64))
(declare-fun temp1166_180 () (_ BitVec 64))
(declare-fun temp1166_181 () (_ BitVec 64))
(declare-fun temp1166_182 () (_ BitVec 64))
(declare-fun temp1166_183 () (_ BitVec 64))
(declare-fun temp1166_184 () (_ BitVec 64))
(declare-fun temp1166_185 () (_ BitVec 64))
(declare-fun temp1166_186 () (_ BitVec 64))
(declare-fun temp1166_187 () (_ BitVec 64))
(declare-fun temp1166_188 () (_ BitVec 64))
(declare-fun temp1166_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1166_190 () (_ BitVec 64))
(declare-fun temp1166_192 () (_ BitVec 64))
(declare-fun temp1166_193 () (_ BitVec 64))
(declare-fun temp1166_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1166_194 () (_ BitVec 64))
(declare-fun temp1166_195 () (_ BitVec 64))
(declare-fun temp1166_197 () (_ BitVec 64))
(declare-fun temp1166_198 () (_ BitVec 64))
(declare-fun temp1166_196 () (_ BitVec 64))
(declare-fun temp1166_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1166_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1166_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1166_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1166_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1166_204 () (_ BitVec 64))
(declare-fun temp1166_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1166_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1166_207 () (_ BitVec 64))
(declare-fun temp1166_208 () (_ BitVec 64))
(declare-fun temp1166_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1166_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1166_211 () (_ BitVec 64))
(declare-fun temp1166_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1166_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1166_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp1166_215 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp1166_216 () (_ BitVec 64))
(declare-fun temp1166_217 () (_ BitVec 64))
(assert (= temp1166_1 #x0000000000000001))
(assert (= var77203 temp1166_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1166_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1166_2)))
(assert (= temp1166_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1166_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1166_4 #x0000000000000000))
(assert (= var210941 temp1166_4))
(assert (= temp1166_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1166_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1166_6 #x0000000000000000))
(assert (= var210986 temp1166_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1166_7 #x0000000000000000))
(assert (= temp1166_8 temp1166_7))
(assert (= temp1166_9 (select ARGNAME_padding_NAMEEND_VAL temp1166_8)))
(assert (= temp1166_10 #x0000000000000001))
(assert (= temp1166_11 temp1166_10))
(assert (= temp1166_12 (select ARGNAME_padding_NAMEEND_VAL temp1166_11)))
(assert (= temp1166_13 #x0000000000000002))
(assert (= temp1166_14 temp1166_13))
(assert (= temp1166_15 (select ARGNAME_padding_NAMEEND_VAL temp1166_14)))
(assert (= temp1166_16 #x0000000000000003))
(assert (= temp1166_17 temp1166_16))
(assert (= temp1166_18 (select ARGNAME_padding_NAMEEND_VAL temp1166_17)))
(assert (= temp1166_19 #x0000000000000004))
(assert (= temp1166_20 temp1166_19))
(assert (= temp1166_21 (select ARGNAME_padding_NAMEEND_VAL temp1166_20)))
(assert (= temp1166_22 #x0000000000000005))
(assert (= temp1166_23 temp1166_22))
(assert (= temp1166_24 (select ARGNAME_padding_NAMEEND_VAL temp1166_23)))
(assert (= temp1166_25 #x0000000000000000))
(assert (= temp1166_26 #x0000000000000000))
(assert (= temp1166_27 temp1166_26))
(assert (= temp1166_28 (select ARGNAME_padding_NAMEEND_VAL temp1166_27)))
(assert (= temp1166_29 #x0000000000000000))
(assert (= temp1166_30 #x0000000000000001))
(assert (= temp1166_31 temp1166_30))
(assert (= temp1166_32 (select ARGNAME_padding_NAMEEND_VAL temp1166_31)))
(assert (= temp1166_33 #x0000000000000000))
(assert (= temp1166_34 #x0000000000000002))
(assert (= temp1166_35 temp1166_34))
(assert (= temp1166_36 (select ARGNAME_padding_NAMEEND_VAL temp1166_35)))
(assert (= temp1166_37 #x0000000000000000))
(assert (= temp1166_38 #x0000000000000003))
(assert (= temp1166_39 temp1166_38))
(assert (= temp1166_40 (select ARGNAME_padding_NAMEEND_VAL temp1166_39)))
(assert (= temp1166_41 #x0000000000000000))
(assert (= temp1166_42 #x0000000000000004))
(assert (= temp1166_43 temp1166_42))
(assert (= temp1166_44 (select ARGNAME_padding_NAMEEND_VAL temp1166_43)))
(assert (= temp1166_45 #x0000000000000000))
(assert (= temp1166_46 #x0000000000000005))
(assert (= temp1166_47 temp1166_46))
(assert (= temp1166_48 (select ARGNAME_padding_NAMEEND_VAL temp1166_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1166_28 temp1166_25)
             (bvslt temp1166_32 temp1166_29)
             (bvslt temp1166_36 temp1166_33)
             (bvslt temp1166_40 temp1166_37)
             (bvslt temp1166_44 temp1166_41)
             (bvslt temp1166_48 temp1166_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1166_49 #x0000000000000000))
(assert (= var1191714 temp1166_49))
(assert (= temp1166_50 #x0000000000000000))
(assert (= temp1166_51 temp1166_50))
(assert (= temp1166_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1166_51)))
(assert (= temp1166_53 #x0000000000000001))
(assert (= temp1166_54 temp1166_53))
(assert (= temp1166_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1166_54)))
(assert (= temp1166_56 #x0000000000000002))
(assert (= temp1166_57 temp1166_56))
(assert (= temp1166_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1166_57)))
(assert (= temp1166_59 #x0000000000000003))
(assert (= temp1166_60 temp1166_59))
(assert (= temp1166_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1166_60)))
(assert (= temp1166_62 #x0000000000000004))
(assert (= temp1166_63 temp1166_62))
(assert (= temp1166_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1166_63)))
(assert (= temp1166_65 #x0000000000000005))
(assert (= temp1166_66 temp1166_65))
(assert (= temp1166_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1166_66)))
(assert (= temp1166_68 #x0000000000000000))
(assert (= temp1166_69 #x0000000000000000))
(assert (= temp1166_70 temp1166_69))
(assert (= temp1166_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1166_70)))
(assert (= temp1166_72 #x0000000000000000))
(assert (= temp1166_73 #x0000000000000001))
(assert (= temp1166_74 temp1166_73))
(assert (= temp1166_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1166_74)))
(assert (= temp1166_76 #x0000000000000000))
(assert (= temp1166_77 #x0000000000000002))
(assert (= temp1166_78 temp1166_77))
(assert (= temp1166_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1166_78)))
(assert (= temp1166_80 #x0000000000000000))
(assert (= temp1166_81 #x0000000000000003))
(assert (= temp1166_82 temp1166_81))
(assert (= temp1166_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1166_82)))
(assert (= temp1166_84 #x0000000000000000))
(assert (= temp1166_85 #x0000000000000004))
(assert (= temp1166_86 temp1166_85))
(assert (= temp1166_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1166_86)))
(assert (= temp1166_88 #x0000000000000000))
(assert (= temp1166_89 #x0000000000000005))
(assert (= temp1166_90 temp1166_89))
(assert (= temp1166_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1166_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1166_71 temp1166_68)
             (bvslt temp1166_75 temp1166_72)
             (bvslt temp1166_79 temp1166_76)
             (bvslt temp1166_83 temp1166_80)
             (bvslt temp1166_87 temp1166_84)
             (bvslt temp1166_91 temp1166_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1166_92 #x0000000000000000))
(assert (= var1191725 temp1166_92))
(assert (= temp1166_93 #x0000000000000000))
(assert (= temp1166_94 temp1166_93))
(assert (= temp1166_95 (select ARGNAME_stride_NAMEEND_VAL temp1166_94)))
(assert (= temp1166_96 #x0000000000000001))
(assert (= temp1166_97 temp1166_96))
(assert (= temp1166_98 (select ARGNAME_stride_NAMEEND_VAL temp1166_97)))
(assert (= temp1166_99 #x0000000000000002))
(assert (= temp1166_100 temp1166_99))
(assert (= temp1166_101 (select ARGNAME_stride_NAMEEND_VAL temp1166_100)))
(assert (= temp1166_102 #x0000000000000003))
(assert (= temp1166_103 temp1166_102))
(assert (= temp1166_104 (select ARGNAME_stride_NAMEEND_VAL temp1166_103)))
(assert (= temp1166_105 #x0000000000000004))
(assert (= temp1166_106 temp1166_105))
(assert (= temp1166_107 (select ARGNAME_stride_NAMEEND_VAL temp1166_106)))
(assert (= temp1166_108 #x0000000000000005))
(assert (= temp1166_109 temp1166_108))
(assert (= temp1166_110 (select ARGNAME_stride_NAMEEND_VAL temp1166_109)))
(assert (= temp1166_111 #x0000000000000000))
(assert (= temp1166_112 #x0000000000000000))
(assert (= temp1166_113 temp1166_112))
(assert (= temp1166_114 (select ARGNAME_stride_NAMEEND_VAL temp1166_113)))
(assert (= temp1166_115 #x0000000000000000))
(assert (= temp1166_116 #x0000000000000001))
(assert (= temp1166_117 temp1166_116))
(assert (= temp1166_118 (select ARGNAME_stride_NAMEEND_VAL temp1166_117)))
(assert (= temp1166_119 #x0000000000000000))
(assert (= temp1166_120 #x0000000000000002))
(assert (= temp1166_121 temp1166_120))
(assert (= temp1166_122 (select ARGNAME_stride_NAMEEND_VAL temp1166_121)))
(assert (= temp1166_123 #x0000000000000000))
(assert (= temp1166_124 #x0000000000000003))
(assert (= temp1166_125 temp1166_124))
(assert (= temp1166_126 (select ARGNAME_stride_NAMEEND_VAL temp1166_125)))
(assert (= temp1166_127 #x0000000000000000))
(assert (= temp1166_128 #x0000000000000004))
(assert (= temp1166_129 temp1166_128))
(assert (= temp1166_130 (select ARGNAME_stride_NAMEEND_VAL temp1166_129)))
(assert (= temp1166_131 #x0000000000000000))
(assert (= temp1166_132 #x0000000000000005))
(assert (= temp1166_133 temp1166_132))
(assert (= temp1166_134 (select ARGNAME_stride_NAMEEND_VAL temp1166_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1166_114 temp1166_111)
             (bvsle temp1166_118 temp1166_115)
             (bvsle temp1166_122 temp1166_119)
             (bvsle temp1166_126 temp1166_123)
             (bvsle temp1166_130 temp1166_127)
             (bvsle temp1166_134 temp1166_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1166_135 #x0000000000000000))
(assert (= var1191735 temp1166_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1166_136 #x0000000000000001))
(assert (= var1191747 temp1166_136))
(assert (= temp1166_137 #x0000000000000000))
(assert (= var1179826 temp1166_137))
(assert (= temp1166_138 #x0000000000000000))
(assert (= temp1166_139 temp1166_138))
(assert (= temp1166_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1166_139)))
(assert (= temp1166_141 #x0000000000000001))
(assert (= temp1166_142 temp1166_141))
(assert (= temp1166_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1166_142)))
(assert (= temp1166_144 #x0000000000000002))
(assert (= temp1166_145 temp1166_144))
(assert (= temp1166_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1166_145)))
(assert (= temp1166_147 #x0000000000000003))
(assert (= temp1166_148 temp1166_147))
(assert (= temp1166_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1166_148)))
(assert (= temp1166_150 #x0000000000000004))
(assert (= temp1166_151 temp1166_150))
(assert (= temp1166_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1166_151)))
(assert (= temp1166_153 #x0000000000000005))
(assert (= temp1166_154 temp1166_153))
(assert (= temp1166_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1166_154)))
(assert (= temp1166_157 var1179826))
(assert (= temp1166_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1166_157)))
(assert (= temp1166_156 temp1166_158))
(assert (= var1191780
   (ite (bvslt temp1166_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1166_159 #x0000000000000000))
(assert (= var1191780 temp1166_159))
(assert (= temp1166_160 #x0000000000000000))
(assert (= var1179826 temp1166_160))
(assert (= temp1166_162 var1179826))
(assert (= temp1166_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1166_162)))
(assert (= temp1166_161 temp1166_163))
(assert (= var1191802 (bvsmod temp1166_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1166_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1166_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1166_165 #x0000000000000001))
(assert (= var1191803 temp1166_165))
(assert (= temp1166_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1166_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1166_167 #x0000000000000001))
(assert (= var1191823 temp1166_167))
(assert (= temp1166_168 #x0000000000000001))
(assert (= var1180714 temp1166_168))
(assert (= temp1166_169 #x0000000000000000))
(assert (= temp1166_170 temp1166_169))
(assert (= temp1166_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1166_170)))
(assert (= temp1166_172 #x0000000000000001))
(assert (= temp1166_173 temp1166_172))
(assert (= temp1166_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1166_173)))
(assert (= temp1166_175 #x0000000000000002))
(assert (= temp1166_176 temp1166_175))
(assert (= temp1166_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1166_176)))
(assert (= temp1166_178 #x0000000000000003))
(assert (= temp1166_179 temp1166_178))
(assert (= temp1166_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1166_179)))
(assert (= temp1166_181 #x0000000000000004))
(assert (= temp1166_182 temp1166_181))
(assert (= temp1166_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1166_182)))
(assert (= temp1166_184 #x0000000000000005))
(assert (= temp1166_185 temp1166_184))
(assert (= temp1166_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1166_185)))
(assert (= temp1166_187 #x0000000000000000))
(assert (= temp1166_188
   (ite (bvslt var1180714 temp1166_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1166_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1166_188)))
(assert (= var1191831 temp1166_189))
(assert (bvslt (ite (bvslt var1180714 temp1166_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1166_190 #x0000000000000001))
(assert (= var1180714 temp1166_190))
(assert (= temp1166_192 var1180714))
(assert (= temp1166_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1166_192)))
(assert (= temp1166_191 temp1166_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1166_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1166_194 #x0000000000000001))
(assert (= var1191836 temp1166_194))
(assert (= temp1166_195 #x0000000000000000))
(assert (= var1179826 temp1166_195))
(assert (= temp1166_197 var1179826))
(assert (= temp1166_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1166_197)))
(assert (= temp1166_196 temp1166_198))
(assert (= temp1166_199 #x0000000000000002))
(assert (= var1586025 temp1166_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1166_200 #x0000000000000001))
(assert (= var1191993 temp1166_200))
(assert (= temp1166_201 #x0000000000000001))
(assert (= var2700303 temp1166_201))
(assert (= temp1166_202 #x0000000000000001))
(assert (= var2962447 temp1166_202))
(assert (= temp1166_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1166_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1166_204 #x0000000000000001))
(assert (= var211058 temp1166_204))
(assert (= temp1166_205 #x0000000000000001))
(assert (= var211188 temp1166_205))
(assert (= var3879401 var211188))
(assert (= temp1166_206 #x0000000000000000))
(assert (= var3866802 temp1166_206))
(assert (= temp1166_207 #x0000000000000000))
(assert (= temp1166_208
   (ite (bvslt var3866802 temp1166_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1166_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1166_208)))
(assert (= var3879420 temp1166_209))
(assert (bvslt (ite (bvslt var3866802 temp1166_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1166_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1166_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1166_211 #x0000000000000001))
(assert (= var3879421 temp1166_211))
(assert (= temp1166_212 #x0000000000000000))
(assert (= var4079423 temp1166_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1166_213 #x0000000000000002))
(assert (= var4208259 temp1166_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1166_214 #x0000000000000000))
(assert (= var4273820 temp1166_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp1166_215 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp1166_215)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1166_216 #x0000000000000000))
(assert (= var212414 temp1166_216))
(assert (= temp1166_217 #x0000000000000001))
(assert (= var211058 temp1166_217))
(model-add temp1166_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1166_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1166_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1166_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



