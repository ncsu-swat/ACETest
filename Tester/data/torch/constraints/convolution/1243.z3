(declare-fun temp10388_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10388_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10388_3 () (_ BitVec 64))
(declare-fun temp10388_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10388_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10388_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10388_7 () (_ BitVec 64))
(declare-fun temp10388_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10388_9 () (_ BitVec 64))
(declare-fun temp10388_10 () (_ BitVec 64))
(declare-fun temp10388_11 () (_ BitVec 64))
(declare-fun temp10388_12 () (_ BitVec 64))
(declare-fun temp10388_13 () (_ BitVec 64))
(declare-fun temp10388_14 () (_ BitVec 64))
(declare-fun temp10388_15 () (_ BitVec 64))
(declare-fun temp10388_16 () (_ BitVec 64))
(declare-fun temp10388_17 () (_ BitVec 64))
(declare-fun temp10388_18 () (_ BitVec 64))
(declare-fun temp10388_19 () (_ BitVec 64))
(declare-fun temp10388_20 () (_ BitVec 64))
(declare-fun temp10388_21 () (_ BitVec 64))
(declare-fun temp10388_22 () (_ BitVec 64))
(declare-fun temp10388_23 () (_ BitVec 64))
(declare-fun temp10388_24 () (_ BitVec 64))
(declare-fun temp10388_25 () (_ BitVec 64))
(declare-fun temp10388_26 () (_ BitVec 64))
(declare-fun temp10388_27 () (_ BitVec 64))
(declare-fun temp10388_28 () (_ BitVec 64))
(declare-fun temp10388_29 () (_ BitVec 64))
(declare-fun temp10388_30 () (_ BitVec 64))
(declare-fun temp10388_31 () (_ BitVec 64))
(declare-fun temp10388_32 () (_ BitVec 64))
(declare-fun temp10388_33 () (_ BitVec 64))
(declare-fun temp10388_34 () (_ BitVec 64))
(declare-fun temp10388_35 () (_ BitVec 64))
(declare-fun temp10388_36 () (_ BitVec 64))
(declare-fun temp10388_37 () (_ BitVec 64))
(declare-fun temp10388_38 () (_ BitVec 64))
(declare-fun temp10388_39 () (_ BitVec 64))
(declare-fun temp10388_40 () (_ BitVec 64))
(declare-fun temp10388_41 () (_ BitVec 64))
(declare-fun temp10388_42 () (_ BitVec 64))
(declare-fun temp10388_43 () (_ BitVec 64))
(declare-fun temp10388_44 () (_ BitVec 64))
(declare-fun temp10388_45 () (_ BitVec 64))
(declare-fun temp10388_46 () (_ BitVec 64))
(declare-fun temp10388_47 () (_ BitVec 64))
(declare-fun temp10388_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10388_49 () (_ BitVec 64))
(declare-fun temp10388_50 () (_ BitVec 64))
(declare-fun temp10388_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10388_52 () (_ BitVec 64))
(declare-fun temp10388_53 () (_ BitVec 64))
(declare-fun temp10388_54 () (_ BitVec 64))
(declare-fun temp10388_55 () (_ BitVec 64))
(declare-fun temp10388_56 () (_ BitVec 64))
(declare-fun temp10388_57 () (_ BitVec 64))
(declare-fun temp10388_58 () (_ BitVec 64))
(declare-fun temp10388_59 () (_ BitVec 64))
(declare-fun temp10388_60 () (_ BitVec 64))
(declare-fun temp10388_61 () (_ BitVec 64))
(declare-fun temp10388_62 () (_ BitVec 64))
(declare-fun temp10388_63 () (_ BitVec 64))
(declare-fun temp10388_64 () (_ BitVec 64))
(declare-fun temp10388_65 () (_ BitVec 64))
(declare-fun temp10388_66 () (_ BitVec 64))
(declare-fun temp10388_67 () (_ BitVec 64))
(declare-fun temp10388_68 () (_ BitVec 64))
(declare-fun temp10388_69 () (_ BitVec 64))
(declare-fun temp10388_70 () (_ BitVec 64))
(declare-fun temp10388_71 () (_ BitVec 64))
(declare-fun temp10388_72 () (_ BitVec 64))
(declare-fun temp10388_73 () (_ BitVec 64))
(declare-fun temp10388_74 () (_ BitVec 64))
(declare-fun temp10388_75 () (_ BitVec 64))
(declare-fun temp10388_76 () (_ BitVec 64))
(declare-fun temp10388_77 () (_ BitVec 64))
(declare-fun temp10388_78 () (_ BitVec 64))
(declare-fun temp10388_79 () (_ BitVec 64))
(declare-fun temp10388_80 () (_ BitVec 64))
(declare-fun temp10388_81 () (_ BitVec 64))
(declare-fun temp10388_82 () (_ BitVec 64))
(declare-fun temp10388_83 () (_ BitVec 64))
(declare-fun temp10388_84 () (_ BitVec 64))
(declare-fun temp10388_85 () (_ BitVec 64))
(declare-fun temp10388_86 () (_ BitVec 64))
(declare-fun temp10388_87 () (_ BitVec 64))
(declare-fun temp10388_88 () (_ BitVec 64))
(declare-fun temp10388_89 () (_ BitVec 64))
(declare-fun temp10388_90 () (_ BitVec 64))
(declare-fun temp10388_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10388_92 () (_ BitVec 64))
(declare-fun temp10388_93 () (_ BitVec 64))
(declare-fun temp10388_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10388_95 () (_ BitVec 64))
(declare-fun temp10388_96 () (_ BitVec 64))
(declare-fun temp10388_97 () (_ BitVec 64))
(declare-fun temp10388_98 () (_ BitVec 64))
(declare-fun temp10388_99 () (_ BitVec 64))
(declare-fun temp10388_100 () (_ BitVec 64))
(declare-fun temp10388_101 () (_ BitVec 64))
(declare-fun temp10388_102 () (_ BitVec 64))
(declare-fun temp10388_103 () (_ BitVec 64))
(declare-fun temp10388_104 () (_ BitVec 64))
(declare-fun temp10388_105 () (_ BitVec 64))
(declare-fun temp10388_106 () (_ BitVec 64))
(declare-fun temp10388_107 () (_ BitVec 64))
(declare-fun temp10388_108 () (_ BitVec 64))
(declare-fun temp10388_109 () (_ BitVec 64))
(declare-fun temp10388_110 () (_ BitVec 64))
(declare-fun temp10388_111 () (_ BitVec 64))
(declare-fun temp10388_112 () (_ BitVec 64))
(declare-fun temp10388_113 () (_ BitVec 64))
(declare-fun temp10388_114 () (_ BitVec 64))
(declare-fun temp10388_115 () (_ BitVec 64))
(declare-fun temp10388_116 () (_ BitVec 64))
(declare-fun temp10388_117 () (_ BitVec 64))
(declare-fun temp10388_118 () (_ BitVec 64))
(declare-fun temp10388_119 () (_ BitVec 64))
(declare-fun temp10388_120 () (_ BitVec 64))
(declare-fun temp10388_121 () (_ BitVec 64))
(declare-fun temp10388_122 () (_ BitVec 64))
(declare-fun temp10388_123 () (_ BitVec 64))
(declare-fun temp10388_124 () (_ BitVec 64))
(declare-fun temp10388_125 () (_ BitVec 64))
(declare-fun temp10388_126 () (_ BitVec 64))
(declare-fun temp10388_127 () (_ BitVec 64))
(declare-fun temp10388_128 () (_ BitVec 64))
(declare-fun temp10388_129 () (_ BitVec 64))
(declare-fun temp10388_130 () (_ BitVec 64))
(declare-fun temp10388_131 () (_ BitVec 64))
(declare-fun temp10388_132 () (_ BitVec 64))
(declare-fun temp10388_133 () (_ BitVec 64))
(declare-fun temp10388_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10388_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10388_136 () (_ BitVec 64))
(declare-fun temp10388_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10388_138 () (_ BitVec 64))
(declare-fun temp10388_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10388_140 () (_ BitVec 64))
(declare-fun temp10388_141 () (_ BitVec 64))
(declare-fun temp10388_142 () (_ BitVec 64))
(declare-fun temp10388_143 () (_ BitVec 64))
(declare-fun temp10388_144 () (_ BitVec 64))
(declare-fun temp10388_145 () (_ BitVec 64))
(declare-fun temp10388_146 () (_ BitVec 64))
(declare-fun temp10388_147 () (_ BitVec 64))
(declare-fun temp10388_148 () (_ BitVec 64))
(declare-fun temp10388_149 () (_ BitVec 64))
(declare-fun temp10388_150 () (_ BitVec 64))
(declare-fun temp10388_151 () (_ BitVec 64))
(declare-fun temp10388_152 () (_ BitVec 64))
(declare-fun temp10388_153 () (_ BitVec 64))
(declare-fun temp10388_154 () (_ BitVec 64))
(declare-fun temp10388_155 () (_ BitVec 64))
(declare-fun temp10388_157 () (_ BitVec 64))
(declare-fun temp10388_158 () (_ BitVec 64))
(declare-fun temp10388_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10388_159 () (_ BitVec 64))
(declare-fun temp10388_160 () (_ BitVec 64))
(declare-fun temp10388_162 () (_ BitVec 64))
(declare-fun temp10388_163 () (_ BitVec 64))
(declare-fun temp10388_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10388_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10388_165 () (_ BitVec 64))
(declare-fun temp10388_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10388_167 () (_ BitVec 64))
(declare-fun temp10388_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10388_169 () (_ BitVec 64))
(declare-fun temp10388_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10388_171 () (_ BitVec 64))
(declare-fun temp10388_172 () (_ BitVec 64))
(declare-fun temp10388_173 () (_ BitVec 64))
(declare-fun temp10388_174 () (_ BitVec 64))
(declare-fun temp10388_175 () (_ BitVec 64))
(declare-fun temp10388_176 () (_ BitVec 64))
(declare-fun temp10388_177 () (_ BitVec 64))
(declare-fun temp10388_178 () (_ BitVec 64))
(declare-fun temp10388_179 () (_ BitVec 64))
(declare-fun temp10388_180 () (_ BitVec 64))
(declare-fun temp10388_181 () (_ BitVec 64))
(declare-fun temp10388_182 () (_ BitVec 64))
(declare-fun temp10388_183 () (_ BitVec 64))
(declare-fun temp10388_184 () (_ BitVec 64))
(declare-fun temp10388_185 () (_ BitVec 64))
(declare-fun temp10388_186 () (_ BitVec 64))
(declare-fun temp10388_187 () (_ BitVec 64))
(declare-fun temp10388_188 () (_ BitVec 64))
(declare-fun temp10388_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10388_190 () (_ BitVec 64))
(declare-fun temp10388_192 () (_ BitVec 64))
(declare-fun temp10388_193 () (_ BitVec 64))
(declare-fun temp10388_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10388_194 () (_ BitVec 64))
(declare-fun temp10388_195 () (_ BitVec 64))
(declare-fun temp10388_197 () (_ BitVec 64))
(declare-fun temp10388_198 () (_ BitVec 64))
(declare-fun temp10388_196 () (_ BitVec 64))
(declare-fun temp10388_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10388_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10388_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10388_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10388_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10388_204 () (_ BitVec 64))
(declare-fun temp10388_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10388_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10388_207 () (_ BitVec 64))
(declare-fun temp10388_208 () (_ BitVec 64))
(declare-fun temp10388_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10388_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10388_211 () (_ BitVec 64))
(declare-fun temp10388_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10388_213 () (_ BitVec 64))
(declare-fun temp10388_214 () (_ BitVec 64))
(declare-fun temp10388_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10388_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10388_217 () (_ BitVec 64))
(declare-fun temp10388_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10388_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10388_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10388_221 () (_ BitVec 64))
(declare-fun temp10388_222 () (_ BitVec 64))
(declare-fun var5387028 () (_ BitVec 64))
(declare-fun var5386995 () (_ BitVec 64))
(declare-fun var5255559 () (_ BitVec 64))
(declare-fun var5255555 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10388_223 () (_ BitVec 64))
(assert (= temp10388_1 #x0000000000000001))
(assert (= var77203 temp10388_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10388_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10388_2)))
(assert (= temp10388_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10388_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10388_4 #x0000000000000000))
(assert (= var210941 temp10388_4))
(assert (= temp10388_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10388_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10388_6 #x0000000000000000))
(assert (= var210986 temp10388_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10388_7 #x0000000000000000))
(assert (= temp10388_8 temp10388_7))
(assert (= temp10388_9 (select ARGNAME_padding_NAMEEND_VAL temp10388_8)))
(assert (= temp10388_10 #x0000000000000001))
(assert (= temp10388_11 temp10388_10))
(assert (= temp10388_12 (select ARGNAME_padding_NAMEEND_VAL temp10388_11)))
(assert (= temp10388_13 #x0000000000000002))
(assert (= temp10388_14 temp10388_13))
(assert (= temp10388_15 (select ARGNAME_padding_NAMEEND_VAL temp10388_14)))
(assert (= temp10388_16 #x0000000000000003))
(assert (= temp10388_17 temp10388_16))
(assert (= temp10388_18 (select ARGNAME_padding_NAMEEND_VAL temp10388_17)))
(assert (= temp10388_19 #x0000000000000004))
(assert (= temp10388_20 temp10388_19))
(assert (= temp10388_21 (select ARGNAME_padding_NAMEEND_VAL temp10388_20)))
(assert (= temp10388_22 #x0000000000000005))
(assert (= temp10388_23 temp10388_22))
(assert (= temp10388_24 (select ARGNAME_padding_NAMEEND_VAL temp10388_23)))
(assert (= temp10388_25 #x0000000000000000))
(assert (= temp10388_26 #x0000000000000000))
(assert (= temp10388_27 temp10388_26))
(assert (= temp10388_28 (select ARGNAME_padding_NAMEEND_VAL temp10388_27)))
(assert (= temp10388_29 #x0000000000000000))
(assert (= temp10388_30 #x0000000000000001))
(assert (= temp10388_31 temp10388_30))
(assert (= temp10388_32 (select ARGNAME_padding_NAMEEND_VAL temp10388_31)))
(assert (= temp10388_33 #x0000000000000000))
(assert (= temp10388_34 #x0000000000000002))
(assert (= temp10388_35 temp10388_34))
(assert (= temp10388_36 (select ARGNAME_padding_NAMEEND_VAL temp10388_35)))
(assert (= temp10388_37 #x0000000000000000))
(assert (= temp10388_38 #x0000000000000003))
(assert (= temp10388_39 temp10388_38))
(assert (= temp10388_40 (select ARGNAME_padding_NAMEEND_VAL temp10388_39)))
(assert (= temp10388_41 #x0000000000000000))
(assert (= temp10388_42 #x0000000000000004))
(assert (= temp10388_43 temp10388_42))
(assert (= temp10388_44 (select ARGNAME_padding_NAMEEND_VAL temp10388_43)))
(assert (= temp10388_45 #x0000000000000000))
(assert (= temp10388_46 #x0000000000000005))
(assert (= temp10388_47 temp10388_46))
(assert (= temp10388_48 (select ARGNAME_padding_NAMEEND_VAL temp10388_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10388_28 temp10388_25)
             (bvslt temp10388_32 temp10388_29)
             (bvslt temp10388_36 temp10388_33)
             (bvslt temp10388_40 temp10388_37)
             (bvslt temp10388_44 temp10388_41)
             (bvslt temp10388_48 temp10388_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10388_49 #x0000000000000000))
(assert (= var1191714 temp10388_49))
(assert (= temp10388_50 #x0000000000000000))
(assert (= temp10388_51 temp10388_50))
(assert (= temp10388_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10388_51)))
(assert (= temp10388_53 #x0000000000000001))
(assert (= temp10388_54 temp10388_53))
(assert (= temp10388_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10388_54)))
(assert (= temp10388_56 #x0000000000000002))
(assert (= temp10388_57 temp10388_56))
(assert (= temp10388_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10388_57)))
(assert (= temp10388_59 #x0000000000000003))
(assert (= temp10388_60 temp10388_59))
(assert (= temp10388_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10388_60)))
(assert (= temp10388_62 #x0000000000000004))
(assert (= temp10388_63 temp10388_62))
(assert (= temp10388_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10388_63)))
(assert (= temp10388_65 #x0000000000000005))
(assert (= temp10388_66 temp10388_65))
(assert (= temp10388_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10388_66)))
(assert (= temp10388_68 #x0000000000000000))
(assert (= temp10388_69 #x0000000000000000))
(assert (= temp10388_70 temp10388_69))
(assert (= temp10388_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10388_70)))
(assert (= temp10388_72 #x0000000000000000))
(assert (= temp10388_73 #x0000000000000001))
(assert (= temp10388_74 temp10388_73))
(assert (= temp10388_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10388_74)))
(assert (= temp10388_76 #x0000000000000000))
(assert (= temp10388_77 #x0000000000000002))
(assert (= temp10388_78 temp10388_77))
(assert (= temp10388_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10388_78)))
(assert (= temp10388_80 #x0000000000000000))
(assert (= temp10388_81 #x0000000000000003))
(assert (= temp10388_82 temp10388_81))
(assert (= temp10388_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10388_82)))
(assert (= temp10388_84 #x0000000000000000))
(assert (= temp10388_85 #x0000000000000004))
(assert (= temp10388_86 temp10388_85))
(assert (= temp10388_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10388_86)))
(assert (= temp10388_88 #x0000000000000000))
(assert (= temp10388_89 #x0000000000000005))
(assert (= temp10388_90 temp10388_89))
(assert (= temp10388_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10388_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10388_71 temp10388_68)
             (bvslt temp10388_75 temp10388_72)
             (bvslt temp10388_79 temp10388_76)
             (bvslt temp10388_83 temp10388_80)
             (bvslt temp10388_87 temp10388_84)
             (bvslt temp10388_91 temp10388_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10388_92 #x0000000000000000))
(assert (= var1191725 temp10388_92))
(assert (= temp10388_93 #x0000000000000000))
(assert (= temp10388_94 temp10388_93))
(assert (= temp10388_95 (select ARGNAME_stride_NAMEEND_VAL temp10388_94)))
(assert (= temp10388_96 #x0000000000000001))
(assert (= temp10388_97 temp10388_96))
(assert (= temp10388_98 (select ARGNAME_stride_NAMEEND_VAL temp10388_97)))
(assert (= temp10388_99 #x0000000000000002))
(assert (= temp10388_100 temp10388_99))
(assert (= temp10388_101 (select ARGNAME_stride_NAMEEND_VAL temp10388_100)))
(assert (= temp10388_102 #x0000000000000003))
(assert (= temp10388_103 temp10388_102))
(assert (= temp10388_104 (select ARGNAME_stride_NAMEEND_VAL temp10388_103)))
(assert (= temp10388_105 #x0000000000000004))
(assert (= temp10388_106 temp10388_105))
(assert (= temp10388_107 (select ARGNAME_stride_NAMEEND_VAL temp10388_106)))
(assert (= temp10388_108 #x0000000000000005))
(assert (= temp10388_109 temp10388_108))
(assert (= temp10388_110 (select ARGNAME_stride_NAMEEND_VAL temp10388_109)))
(assert (= temp10388_111 #x0000000000000000))
(assert (= temp10388_112 #x0000000000000000))
(assert (= temp10388_113 temp10388_112))
(assert (= temp10388_114 (select ARGNAME_stride_NAMEEND_VAL temp10388_113)))
(assert (= temp10388_115 #x0000000000000000))
(assert (= temp10388_116 #x0000000000000001))
(assert (= temp10388_117 temp10388_116))
(assert (= temp10388_118 (select ARGNAME_stride_NAMEEND_VAL temp10388_117)))
(assert (= temp10388_119 #x0000000000000000))
(assert (= temp10388_120 #x0000000000000002))
(assert (= temp10388_121 temp10388_120))
(assert (= temp10388_122 (select ARGNAME_stride_NAMEEND_VAL temp10388_121)))
(assert (= temp10388_123 #x0000000000000000))
(assert (= temp10388_124 #x0000000000000003))
(assert (= temp10388_125 temp10388_124))
(assert (= temp10388_126 (select ARGNAME_stride_NAMEEND_VAL temp10388_125)))
(assert (= temp10388_127 #x0000000000000000))
(assert (= temp10388_128 #x0000000000000004))
(assert (= temp10388_129 temp10388_128))
(assert (= temp10388_130 (select ARGNAME_stride_NAMEEND_VAL temp10388_129)))
(assert (= temp10388_131 #x0000000000000000))
(assert (= temp10388_132 #x0000000000000005))
(assert (= temp10388_133 temp10388_132))
(assert (= temp10388_134 (select ARGNAME_stride_NAMEEND_VAL temp10388_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10388_114 temp10388_111)
             (bvsle temp10388_118 temp10388_115)
             (bvsle temp10388_122 temp10388_119)
             (bvsle temp10388_126 temp10388_123)
             (bvsle temp10388_130 temp10388_127)
             (bvsle temp10388_134 temp10388_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10388_135 #x0000000000000000))
(assert (= var1191735 temp10388_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10388_136 #x0000000000000001))
(assert (= var1191747 temp10388_136))
(assert (= temp10388_137 #x0000000000000000))
(assert (= var1179826 temp10388_137))
(assert (= temp10388_138 #x0000000000000000))
(assert (= temp10388_139 temp10388_138))
(assert (= temp10388_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10388_139)))
(assert (= temp10388_141 #x0000000000000001))
(assert (= temp10388_142 temp10388_141))
(assert (= temp10388_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10388_142)))
(assert (= temp10388_144 #x0000000000000002))
(assert (= temp10388_145 temp10388_144))
(assert (= temp10388_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10388_145)))
(assert (= temp10388_147 #x0000000000000003))
(assert (= temp10388_148 temp10388_147))
(assert (= temp10388_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10388_148)))
(assert (= temp10388_150 #x0000000000000004))
(assert (= temp10388_151 temp10388_150))
(assert (= temp10388_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10388_151)))
(assert (= temp10388_153 #x0000000000000005))
(assert (= temp10388_154 temp10388_153))
(assert (= temp10388_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10388_154)))
(assert (= temp10388_157 var1179826))
(assert (= temp10388_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10388_157)))
(assert (= temp10388_156 temp10388_158))
(assert (= var1191780
   (ite (bvslt temp10388_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10388_159 #x0000000000000000))
(assert (= var1191780 temp10388_159))
(assert (= temp10388_160 #x0000000000000000))
(assert (= var1179826 temp10388_160))
(assert (= temp10388_162 var1179826))
(assert (= temp10388_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10388_162)))
(assert (= temp10388_161 temp10388_163))
(assert (= var1191802 (bvsmod temp10388_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10388_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10388_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10388_165 #x0000000000000001))
(assert (= var1191803 temp10388_165))
(assert (= temp10388_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10388_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10388_167 #x0000000000000001))
(assert (= var1191823 temp10388_167))
(assert (= temp10388_168 #x0000000000000001))
(assert (= var1180714 temp10388_168))
(assert (= temp10388_169 #x0000000000000000))
(assert (= temp10388_170 temp10388_169))
(assert (= temp10388_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10388_170)))
(assert (= temp10388_172 #x0000000000000001))
(assert (= temp10388_173 temp10388_172))
(assert (= temp10388_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10388_173)))
(assert (= temp10388_175 #x0000000000000002))
(assert (= temp10388_176 temp10388_175))
(assert (= temp10388_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10388_176)))
(assert (= temp10388_178 #x0000000000000003))
(assert (= temp10388_179 temp10388_178))
(assert (= temp10388_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10388_179)))
(assert (= temp10388_181 #x0000000000000004))
(assert (= temp10388_182 temp10388_181))
(assert (= temp10388_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10388_182)))
(assert (= temp10388_184 #x0000000000000005))
(assert (= temp10388_185 temp10388_184))
(assert (= temp10388_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10388_185)))
(assert (= temp10388_187 #x0000000000000000))
(assert (= temp10388_188
   (ite (bvslt var1180714 temp10388_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10388_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10388_188)))
(assert (= var1191831 temp10388_189))
(assert (bvslt (ite (bvslt var1180714 temp10388_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10388_190 #x0000000000000001))
(assert (= var1180714 temp10388_190))
(assert (= temp10388_192 var1180714))
(assert (= temp10388_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10388_192)))
(assert (= temp10388_191 temp10388_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10388_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10388_194 #x0000000000000001))
(assert (= var1191836 temp10388_194))
(assert (= temp10388_195 #x0000000000000000))
(assert (= var1179826 temp10388_195))
(assert (= temp10388_197 var1179826))
(assert (= temp10388_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10388_197)))
(assert (= temp10388_196 temp10388_198))
(assert (= temp10388_199 #x0000000000000002))
(assert (= var1586025 temp10388_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10388_200 #x0000000000000001))
(assert (= var1191993 temp10388_200))
(assert (= temp10388_201 #x0000000000000001))
(assert (= var2700303 temp10388_201))
(assert (= temp10388_202 #x0000000000000001))
(assert (= var2962447 temp10388_202))
(assert (= temp10388_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10388_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10388_204 #x0000000000000001))
(assert (= var211058 temp10388_204))
(assert (= temp10388_205 #x0000000000000001))
(assert (= var211188 temp10388_205))
(assert (= var3879401 var211188))
(assert (= temp10388_206 #x0000000000000000))
(assert (= var3866802 temp10388_206))
(assert (= temp10388_207 #x0000000000000000))
(assert (= temp10388_208
   (ite (bvslt var3866802 temp10388_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10388_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10388_208)))
(assert (= var3879420 temp10388_209))
(assert (bvslt (ite (bvslt var3866802 temp10388_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10388_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10388_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10388_211 #x0000000000000000))
(assert (= var3879421 temp10388_211))
(assert (= temp10388_212 #x0000000000000001))
(assert (= var3867690 temp10388_212))
(assert (= temp10388_213 #x0000000000000000))
(assert (= temp10388_214
   (ite (bvslt var3867690 temp10388_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10388_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10388_214)))
(assert (= var3879423 temp10388_215))
(assert (bvslt (ite (bvslt var3867690 temp10388_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10388_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10388_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10388_217 #x0000000000000001))
(assert (= var3879424 temp10388_217))
(assert (= temp10388_218 #x0000000000000000))
(assert (= var4079423 temp10388_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10388_219 #x0000000000000002))
(assert (= var4208259 temp10388_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10388_220 #x0000000000000000))
(assert (= var4273820 temp10388_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10388_221 #x0000000000000001))
(assert (= var211058 temp10388_221))
(assert (= temp10388_222 #x0000000000000000))
(assert (= var5387028 temp10388_222))
(assert (= var5386995 var5387028))
(assert (= var5255559 var5386995))
(assert (= var5255555 var5255559))
(assert (= var212669 var5255555))
(assert (= temp10388_223 #x0000000000000000))
(assert (= var212669 temp10388_223))
(model-add temp10388_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10388_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10388_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10388_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



