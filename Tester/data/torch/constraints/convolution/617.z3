(declare-fun temp822_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp822_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp822_3 () (_ BitVec 64))
(declare-fun temp822_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp822_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp822_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp822_7 () (_ BitVec 64))
(declare-fun temp822_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp822_9 () (_ BitVec 64))
(declare-fun temp822_10 () (_ BitVec 64))
(declare-fun temp822_11 () (_ BitVec 64))
(declare-fun temp822_12 () (_ BitVec 64))
(declare-fun temp822_13 () (_ BitVec 64))
(declare-fun temp822_14 () (_ BitVec 64))
(declare-fun temp822_15 () (_ BitVec 64))
(declare-fun temp822_16 () (_ BitVec 64))
(declare-fun temp822_17 () (_ BitVec 64))
(declare-fun temp822_18 () (_ BitVec 64))
(declare-fun temp822_19 () (_ BitVec 64))
(declare-fun temp822_20 () (_ BitVec 64))
(declare-fun temp822_21 () (_ BitVec 64))
(declare-fun temp822_22 () (_ BitVec 64))
(declare-fun temp822_23 () (_ BitVec 64))
(declare-fun temp822_24 () (_ BitVec 64))
(declare-fun temp822_25 () (_ BitVec 64))
(declare-fun temp822_26 () (_ BitVec 64))
(declare-fun temp822_27 () (_ BitVec 64))
(declare-fun temp822_28 () (_ BitVec 64))
(declare-fun temp822_29 () (_ BitVec 64))
(declare-fun temp822_30 () (_ BitVec 64))
(declare-fun temp822_31 () (_ BitVec 64))
(declare-fun temp822_32 () (_ BitVec 64))
(declare-fun temp822_33 () (_ BitVec 64))
(declare-fun temp822_34 () (_ BitVec 64))
(declare-fun temp822_35 () (_ BitVec 64))
(declare-fun temp822_36 () (_ BitVec 64))
(declare-fun temp822_37 () (_ BitVec 64))
(declare-fun temp822_38 () (_ BitVec 64))
(declare-fun temp822_39 () (_ BitVec 64))
(declare-fun temp822_40 () (_ BitVec 64))
(declare-fun temp822_41 () (_ BitVec 64))
(declare-fun temp822_42 () (_ BitVec 64))
(declare-fun temp822_43 () (_ BitVec 64))
(declare-fun temp822_44 () (_ BitVec 64))
(declare-fun temp822_45 () (_ BitVec 64))
(declare-fun temp822_46 () (_ BitVec 64))
(declare-fun temp822_47 () (_ BitVec 64))
(declare-fun temp822_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp822_49 () (_ BitVec 64))
(declare-fun temp822_50 () (_ BitVec 64))
(declare-fun temp822_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp822_52 () (_ BitVec 64))
(declare-fun temp822_53 () (_ BitVec 64))
(declare-fun temp822_54 () (_ BitVec 64))
(declare-fun temp822_55 () (_ BitVec 64))
(declare-fun temp822_56 () (_ BitVec 64))
(declare-fun temp822_57 () (_ BitVec 64))
(declare-fun temp822_58 () (_ BitVec 64))
(declare-fun temp822_59 () (_ BitVec 64))
(declare-fun temp822_60 () (_ BitVec 64))
(declare-fun temp822_61 () (_ BitVec 64))
(declare-fun temp822_62 () (_ BitVec 64))
(declare-fun temp822_63 () (_ BitVec 64))
(declare-fun temp822_64 () (_ BitVec 64))
(declare-fun temp822_65 () (_ BitVec 64))
(declare-fun temp822_66 () (_ BitVec 64))
(declare-fun temp822_67 () (_ BitVec 64))
(declare-fun temp822_68 () (_ BitVec 64))
(declare-fun temp822_69 () (_ BitVec 64))
(declare-fun temp822_70 () (_ BitVec 64))
(declare-fun temp822_71 () (_ BitVec 64))
(declare-fun temp822_72 () (_ BitVec 64))
(declare-fun temp822_73 () (_ BitVec 64))
(declare-fun temp822_74 () (_ BitVec 64))
(declare-fun temp822_75 () (_ BitVec 64))
(declare-fun temp822_76 () (_ BitVec 64))
(declare-fun temp822_77 () (_ BitVec 64))
(declare-fun temp822_78 () (_ BitVec 64))
(declare-fun temp822_79 () (_ BitVec 64))
(declare-fun temp822_80 () (_ BitVec 64))
(declare-fun temp822_81 () (_ BitVec 64))
(declare-fun temp822_82 () (_ BitVec 64))
(declare-fun temp822_83 () (_ BitVec 64))
(declare-fun temp822_84 () (_ BitVec 64))
(declare-fun temp822_85 () (_ BitVec 64))
(declare-fun temp822_86 () (_ BitVec 64))
(declare-fun temp822_87 () (_ BitVec 64))
(declare-fun temp822_88 () (_ BitVec 64))
(declare-fun temp822_89 () (_ BitVec 64))
(declare-fun temp822_90 () (_ BitVec 64))
(declare-fun temp822_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp822_92 () (_ BitVec 64))
(declare-fun temp822_93 () (_ BitVec 64))
(declare-fun temp822_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp822_95 () (_ BitVec 64))
(declare-fun temp822_96 () (_ BitVec 64))
(declare-fun temp822_97 () (_ BitVec 64))
(declare-fun temp822_98 () (_ BitVec 64))
(declare-fun temp822_99 () (_ BitVec 64))
(declare-fun temp822_100 () (_ BitVec 64))
(declare-fun temp822_101 () (_ BitVec 64))
(declare-fun temp822_102 () (_ BitVec 64))
(declare-fun temp822_103 () (_ BitVec 64))
(declare-fun temp822_104 () (_ BitVec 64))
(declare-fun temp822_105 () (_ BitVec 64))
(declare-fun temp822_106 () (_ BitVec 64))
(declare-fun temp822_107 () (_ BitVec 64))
(declare-fun temp822_108 () (_ BitVec 64))
(declare-fun temp822_109 () (_ BitVec 64))
(declare-fun temp822_110 () (_ BitVec 64))
(declare-fun temp822_111 () (_ BitVec 64))
(declare-fun temp822_112 () (_ BitVec 64))
(declare-fun temp822_113 () (_ BitVec 64))
(declare-fun temp822_114 () (_ BitVec 64))
(declare-fun temp822_115 () (_ BitVec 64))
(declare-fun temp822_116 () (_ BitVec 64))
(declare-fun temp822_117 () (_ BitVec 64))
(declare-fun temp822_118 () (_ BitVec 64))
(declare-fun temp822_119 () (_ BitVec 64))
(declare-fun temp822_120 () (_ BitVec 64))
(declare-fun temp822_121 () (_ BitVec 64))
(declare-fun temp822_122 () (_ BitVec 64))
(declare-fun temp822_123 () (_ BitVec 64))
(declare-fun temp822_124 () (_ BitVec 64))
(declare-fun temp822_125 () (_ BitVec 64))
(declare-fun temp822_126 () (_ BitVec 64))
(declare-fun temp822_127 () (_ BitVec 64))
(declare-fun temp822_128 () (_ BitVec 64))
(declare-fun temp822_129 () (_ BitVec 64))
(declare-fun temp822_130 () (_ BitVec 64))
(declare-fun temp822_131 () (_ BitVec 64))
(declare-fun temp822_132 () (_ BitVec 64))
(declare-fun temp822_133 () (_ BitVec 64))
(declare-fun temp822_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp822_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp822_136 () (_ BitVec 64))
(declare-fun temp822_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp822_138 () (_ BitVec 64))
(declare-fun temp822_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp822_140 () (_ BitVec 64))
(declare-fun temp822_141 () (_ BitVec 64))
(declare-fun temp822_142 () (_ BitVec 64))
(declare-fun temp822_143 () (_ BitVec 64))
(declare-fun temp822_144 () (_ BitVec 64))
(declare-fun temp822_145 () (_ BitVec 64))
(declare-fun temp822_146 () (_ BitVec 64))
(declare-fun temp822_147 () (_ BitVec 64))
(declare-fun temp822_148 () (_ BitVec 64))
(declare-fun temp822_149 () (_ BitVec 64))
(declare-fun temp822_150 () (_ BitVec 64))
(declare-fun temp822_151 () (_ BitVec 64))
(declare-fun temp822_152 () (_ BitVec 64))
(declare-fun temp822_153 () (_ BitVec 64))
(declare-fun temp822_154 () (_ BitVec 64))
(declare-fun temp822_155 () (_ BitVec 64))
(declare-fun temp822_157 () (_ BitVec 64))
(declare-fun temp822_158 () (_ BitVec 64))
(declare-fun temp822_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp822_159 () (_ BitVec 64))
(declare-fun temp822_160 () (_ BitVec 64))
(declare-fun temp822_162 () (_ BitVec 64))
(declare-fun temp822_163 () (_ BitVec 64))
(declare-fun temp822_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp822_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp822_165 () (_ BitVec 64))
(declare-fun temp822_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp822_167 () (_ BitVec 64))
(declare-fun temp822_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp822_169 () (_ BitVec 64))
(declare-fun temp822_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp822_171 () (_ BitVec 64))
(declare-fun temp822_172 () (_ BitVec 64))
(declare-fun temp822_173 () (_ BitVec 64))
(declare-fun temp822_174 () (_ BitVec 64))
(declare-fun temp822_175 () (_ BitVec 64))
(declare-fun temp822_176 () (_ BitVec 64))
(declare-fun temp822_177 () (_ BitVec 64))
(declare-fun temp822_178 () (_ BitVec 64))
(declare-fun temp822_179 () (_ BitVec 64))
(declare-fun temp822_180 () (_ BitVec 64))
(declare-fun temp822_181 () (_ BitVec 64))
(declare-fun temp822_182 () (_ BitVec 64))
(declare-fun temp822_183 () (_ BitVec 64))
(declare-fun temp822_184 () (_ BitVec 64))
(declare-fun temp822_185 () (_ BitVec 64))
(declare-fun temp822_186 () (_ BitVec 64))
(declare-fun temp822_187 () (_ BitVec 64))
(declare-fun temp822_188 () (_ BitVec 64))
(declare-fun temp822_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp822_190 () (_ BitVec 64))
(declare-fun temp822_192 () (_ BitVec 64))
(declare-fun temp822_193 () (_ BitVec 64))
(declare-fun temp822_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp822_194 () (_ BitVec 64))
(declare-fun temp822_195 () (_ BitVec 64))
(declare-fun temp822_197 () (_ BitVec 64))
(declare-fun temp822_198 () (_ BitVec 64))
(declare-fun temp822_196 () (_ BitVec 64))
(declare-fun temp822_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp822_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp822_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp822_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp822_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp822_204 () (_ BitVec 64))
(declare-fun temp822_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp822_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp822_207 () (_ BitVec 64))
(declare-fun temp822_208 () (_ BitVec 64))
(declare-fun temp822_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp822_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp822_211 () (_ BitVec 64))
(declare-fun temp822_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp822_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp822_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var211890 () (_ BitVec 64))
(declare-fun temp822_215 () (_ BitVec 64))
(declare-fun var211891 () (_ BitVec 64))
(declare-fun temp822_216 () (_ BitVec 64))
(assert (= temp822_1 #x0000000000000001))
(assert (= var77203 temp822_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp822_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp822_2)))
(assert (= temp822_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp822_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp822_4 #x0000000000000000))
(assert (= var210941 temp822_4))
(assert (= temp822_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp822_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp822_6 #x0000000000000000))
(assert (= var210986 temp822_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp822_7 #x0000000000000000))
(assert (= temp822_8 temp822_7))
(assert (= temp822_9 (select ARGNAME_padding_NAMEEND_VAL temp822_8)))
(assert (= temp822_10 #x0000000000000001))
(assert (= temp822_11 temp822_10))
(assert (= temp822_12 (select ARGNAME_padding_NAMEEND_VAL temp822_11)))
(assert (= temp822_13 #x0000000000000002))
(assert (= temp822_14 temp822_13))
(assert (= temp822_15 (select ARGNAME_padding_NAMEEND_VAL temp822_14)))
(assert (= temp822_16 #x0000000000000003))
(assert (= temp822_17 temp822_16))
(assert (= temp822_18 (select ARGNAME_padding_NAMEEND_VAL temp822_17)))
(assert (= temp822_19 #x0000000000000004))
(assert (= temp822_20 temp822_19))
(assert (= temp822_21 (select ARGNAME_padding_NAMEEND_VAL temp822_20)))
(assert (= temp822_22 #x0000000000000005))
(assert (= temp822_23 temp822_22))
(assert (= temp822_24 (select ARGNAME_padding_NAMEEND_VAL temp822_23)))
(assert (= temp822_25 #x0000000000000000))
(assert (= temp822_26 #x0000000000000000))
(assert (= temp822_27 temp822_26))
(assert (= temp822_28 (select ARGNAME_padding_NAMEEND_VAL temp822_27)))
(assert (= temp822_29 #x0000000000000000))
(assert (= temp822_30 #x0000000000000001))
(assert (= temp822_31 temp822_30))
(assert (= temp822_32 (select ARGNAME_padding_NAMEEND_VAL temp822_31)))
(assert (= temp822_33 #x0000000000000000))
(assert (= temp822_34 #x0000000000000002))
(assert (= temp822_35 temp822_34))
(assert (= temp822_36 (select ARGNAME_padding_NAMEEND_VAL temp822_35)))
(assert (= temp822_37 #x0000000000000000))
(assert (= temp822_38 #x0000000000000003))
(assert (= temp822_39 temp822_38))
(assert (= temp822_40 (select ARGNAME_padding_NAMEEND_VAL temp822_39)))
(assert (= temp822_41 #x0000000000000000))
(assert (= temp822_42 #x0000000000000004))
(assert (= temp822_43 temp822_42))
(assert (= temp822_44 (select ARGNAME_padding_NAMEEND_VAL temp822_43)))
(assert (= temp822_45 #x0000000000000000))
(assert (= temp822_46 #x0000000000000005))
(assert (= temp822_47 temp822_46))
(assert (= temp822_48 (select ARGNAME_padding_NAMEEND_VAL temp822_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp822_28 temp822_25)
             (bvslt temp822_32 temp822_29)
             (bvslt temp822_36 temp822_33)
             (bvslt temp822_40 temp822_37)
             (bvslt temp822_44 temp822_41)
             (bvslt temp822_48 temp822_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp822_49 #x0000000000000000))
(assert (= var1191714 temp822_49))
(assert (= temp822_50 #x0000000000000000))
(assert (= temp822_51 temp822_50))
(assert (= temp822_52 (select ARGNAME_output_padding_NAMEEND_VAL temp822_51)))
(assert (= temp822_53 #x0000000000000001))
(assert (= temp822_54 temp822_53))
(assert (= temp822_55 (select ARGNAME_output_padding_NAMEEND_VAL temp822_54)))
(assert (= temp822_56 #x0000000000000002))
(assert (= temp822_57 temp822_56))
(assert (= temp822_58 (select ARGNAME_output_padding_NAMEEND_VAL temp822_57)))
(assert (= temp822_59 #x0000000000000003))
(assert (= temp822_60 temp822_59))
(assert (= temp822_61 (select ARGNAME_output_padding_NAMEEND_VAL temp822_60)))
(assert (= temp822_62 #x0000000000000004))
(assert (= temp822_63 temp822_62))
(assert (= temp822_64 (select ARGNAME_output_padding_NAMEEND_VAL temp822_63)))
(assert (= temp822_65 #x0000000000000005))
(assert (= temp822_66 temp822_65))
(assert (= temp822_67 (select ARGNAME_output_padding_NAMEEND_VAL temp822_66)))
(assert (= temp822_68 #x0000000000000000))
(assert (= temp822_69 #x0000000000000000))
(assert (= temp822_70 temp822_69))
(assert (= temp822_71 (select ARGNAME_output_padding_NAMEEND_VAL temp822_70)))
(assert (= temp822_72 #x0000000000000000))
(assert (= temp822_73 #x0000000000000001))
(assert (= temp822_74 temp822_73))
(assert (= temp822_75 (select ARGNAME_output_padding_NAMEEND_VAL temp822_74)))
(assert (= temp822_76 #x0000000000000000))
(assert (= temp822_77 #x0000000000000002))
(assert (= temp822_78 temp822_77))
(assert (= temp822_79 (select ARGNAME_output_padding_NAMEEND_VAL temp822_78)))
(assert (= temp822_80 #x0000000000000000))
(assert (= temp822_81 #x0000000000000003))
(assert (= temp822_82 temp822_81))
(assert (= temp822_83 (select ARGNAME_output_padding_NAMEEND_VAL temp822_82)))
(assert (= temp822_84 #x0000000000000000))
(assert (= temp822_85 #x0000000000000004))
(assert (= temp822_86 temp822_85))
(assert (= temp822_87 (select ARGNAME_output_padding_NAMEEND_VAL temp822_86)))
(assert (= temp822_88 #x0000000000000000))
(assert (= temp822_89 #x0000000000000005))
(assert (= temp822_90 temp822_89))
(assert (= temp822_91 (select ARGNAME_output_padding_NAMEEND_VAL temp822_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp822_71 temp822_68)
             (bvslt temp822_75 temp822_72)
             (bvslt temp822_79 temp822_76)
             (bvslt temp822_83 temp822_80)
             (bvslt temp822_87 temp822_84)
             (bvslt temp822_91 temp822_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp822_92 #x0000000000000000))
(assert (= var1191725 temp822_92))
(assert (= temp822_93 #x0000000000000000))
(assert (= temp822_94 temp822_93))
(assert (= temp822_95 (select ARGNAME_stride_NAMEEND_VAL temp822_94)))
(assert (= temp822_96 #x0000000000000001))
(assert (= temp822_97 temp822_96))
(assert (= temp822_98 (select ARGNAME_stride_NAMEEND_VAL temp822_97)))
(assert (= temp822_99 #x0000000000000002))
(assert (= temp822_100 temp822_99))
(assert (= temp822_101 (select ARGNAME_stride_NAMEEND_VAL temp822_100)))
(assert (= temp822_102 #x0000000000000003))
(assert (= temp822_103 temp822_102))
(assert (= temp822_104 (select ARGNAME_stride_NAMEEND_VAL temp822_103)))
(assert (= temp822_105 #x0000000000000004))
(assert (= temp822_106 temp822_105))
(assert (= temp822_107 (select ARGNAME_stride_NAMEEND_VAL temp822_106)))
(assert (= temp822_108 #x0000000000000005))
(assert (= temp822_109 temp822_108))
(assert (= temp822_110 (select ARGNAME_stride_NAMEEND_VAL temp822_109)))
(assert (= temp822_111 #x0000000000000000))
(assert (= temp822_112 #x0000000000000000))
(assert (= temp822_113 temp822_112))
(assert (= temp822_114 (select ARGNAME_stride_NAMEEND_VAL temp822_113)))
(assert (= temp822_115 #x0000000000000000))
(assert (= temp822_116 #x0000000000000001))
(assert (= temp822_117 temp822_116))
(assert (= temp822_118 (select ARGNAME_stride_NAMEEND_VAL temp822_117)))
(assert (= temp822_119 #x0000000000000000))
(assert (= temp822_120 #x0000000000000002))
(assert (= temp822_121 temp822_120))
(assert (= temp822_122 (select ARGNAME_stride_NAMEEND_VAL temp822_121)))
(assert (= temp822_123 #x0000000000000000))
(assert (= temp822_124 #x0000000000000003))
(assert (= temp822_125 temp822_124))
(assert (= temp822_126 (select ARGNAME_stride_NAMEEND_VAL temp822_125)))
(assert (= temp822_127 #x0000000000000000))
(assert (= temp822_128 #x0000000000000004))
(assert (= temp822_129 temp822_128))
(assert (= temp822_130 (select ARGNAME_stride_NAMEEND_VAL temp822_129)))
(assert (= temp822_131 #x0000000000000000))
(assert (= temp822_132 #x0000000000000005))
(assert (= temp822_133 temp822_132))
(assert (= temp822_134 (select ARGNAME_stride_NAMEEND_VAL temp822_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp822_114 temp822_111)
             (bvsle temp822_118 temp822_115)
             (bvsle temp822_122 temp822_119)
             (bvsle temp822_126 temp822_123)
             (bvsle temp822_130 temp822_127)
             (bvsle temp822_134 temp822_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp822_135 #x0000000000000000))
(assert (= var1191735 temp822_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp822_136 #x0000000000000001))
(assert (= var1191747 temp822_136))
(assert (= temp822_137 #x0000000000000000))
(assert (= var1179826 temp822_137))
(assert (= temp822_138 #x0000000000000000))
(assert (= temp822_139 temp822_138))
(assert (= temp822_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp822_139)))
(assert (= temp822_141 #x0000000000000001))
(assert (= temp822_142 temp822_141))
(assert (= temp822_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp822_142)))
(assert (= temp822_144 #x0000000000000002))
(assert (= temp822_145 temp822_144))
(assert (= temp822_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp822_145)))
(assert (= temp822_147 #x0000000000000003))
(assert (= temp822_148 temp822_147))
(assert (= temp822_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp822_148)))
(assert (= temp822_150 #x0000000000000004))
(assert (= temp822_151 temp822_150))
(assert (= temp822_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp822_151)))
(assert (= temp822_153 #x0000000000000005))
(assert (= temp822_154 temp822_153))
(assert (= temp822_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp822_154)))
(assert (= temp822_157 var1179826))
(assert (= temp822_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp822_157)))
(assert (= temp822_156 temp822_158))
(assert (= var1191780
   (ite (bvslt temp822_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp822_159 #x0000000000000000))
(assert (= var1191780 temp822_159))
(assert (= temp822_160 #x0000000000000000))
(assert (= var1179826 temp822_160))
(assert (= temp822_162 var1179826))
(assert (= temp822_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp822_162)))
(assert (= temp822_161 temp822_163))
(assert (= var1191802 (bvsmod temp822_161 ARGNAME_groups_NAMEEND)))
(assert (= temp822_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp822_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp822_165 #x0000000000000001))
(assert (= var1191803 temp822_165))
(assert (= temp822_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp822_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp822_167 #x0000000000000001))
(assert (= var1191823 temp822_167))
(assert (= temp822_168 #x0000000000000001))
(assert (= var1180714 temp822_168))
(assert (= temp822_169 #x0000000000000000))
(assert (= temp822_170 temp822_169))
(assert (= temp822_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp822_170)))
(assert (= temp822_172 #x0000000000000001))
(assert (= temp822_173 temp822_172))
(assert (= temp822_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp822_173)))
(assert (= temp822_175 #x0000000000000002))
(assert (= temp822_176 temp822_175))
(assert (= temp822_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp822_176)))
(assert (= temp822_178 #x0000000000000003))
(assert (= temp822_179 temp822_178))
(assert (= temp822_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp822_179)))
(assert (= temp822_181 #x0000000000000004))
(assert (= temp822_182 temp822_181))
(assert (= temp822_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp822_182)))
(assert (= temp822_184 #x0000000000000005))
(assert (= temp822_185 temp822_184))
(assert (= temp822_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp822_185)))
(assert (= temp822_187 #x0000000000000000))
(assert (= temp822_188
   (ite (bvslt var1180714 temp822_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp822_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp822_188)))
(assert (= var1191831 temp822_189))
(assert (bvslt (ite (bvslt var1180714 temp822_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp822_190 #x0000000000000001))
(assert (= var1180714 temp822_190))
(assert (= temp822_192 var1180714))
(assert (= temp822_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp822_192)))
(assert (= temp822_191 temp822_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp822_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp822_194 #x0000000000000001))
(assert (= var1191836 temp822_194))
(assert (= temp822_195 #x0000000000000000))
(assert (= var1179826 temp822_195))
(assert (= temp822_197 var1179826))
(assert (= temp822_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp822_197)))
(assert (= temp822_196 temp822_198))
(assert (= temp822_199 #x0000000000000002))
(assert (= var1586025 temp822_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp822_200 #x0000000000000001))
(assert (= var1191993 temp822_200))
(assert (= temp822_201 #x0000000000000001))
(assert (= var2700303 temp822_201))
(assert (= temp822_202 #x0000000000000001))
(assert (= var2962447 temp822_202))
(assert (= temp822_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp822_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp822_204 #x0000000000000001))
(assert (= var211058 temp822_204))
(assert (= temp822_205 #x0000000000000001))
(assert (= var211188 temp822_205))
(assert (= var3879401 var211188))
(assert (= temp822_206 #x0000000000000000))
(assert (= var3866802 temp822_206))
(assert (= temp822_207 #x0000000000000000))
(assert (= temp822_208
   (ite (bvslt var3866802 temp822_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp822_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp822_208)))
(assert (= var3879420 temp822_209))
(assert (bvslt (ite (bvslt var3866802 temp822_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp822_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp822_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp822_211 #x0000000000000001))
(assert (= var3879421 temp822_211))
(assert (= temp822_212 #x0000000000000000))
(assert (= var4079423 temp822_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp822_213 #x0000000000000002))
(assert (= var4208259 temp822_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp822_214 #x0000000000000000))
(assert (= var4273820 temp822_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var211890 var210913))
(assert (= temp822_215 #x0000000000000000))
(assert (= var211891
   (ite (distinct var211890 temp822_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp822_216 #x0000000000000001))
(assert (= var211058 temp822_216))
(model-add temp822_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp822_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp822_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp822_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




