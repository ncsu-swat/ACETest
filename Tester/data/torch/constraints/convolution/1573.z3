(declare-fun temp10892_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10892_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10892_3 () (_ BitVec 64))
(declare-fun temp10892_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10892_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10892_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10892_7 () (_ BitVec 64))
(declare-fun temp10892_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10892_9 () (_ BitVec 64))
(declare-fun temp10892_10 () (_ BitVec 64))
(declare-fun temp10892_11 () (_ BitVec 64))
(declare-fun temp10892_12 () (_ BitVec 64))
(declare-fun temp10892_13 () (_ BitVec 64))
(declare-fun temp10892_14 () (_ BitVec 64))
(declare-fun temp10892_15 () (_ BitVec 64))
(declare-fun temp10892_16 () (_ BitVec 64))
(declare-fun temp10892_17 () (_ BitVec 64))
(declare-fun temp10892_18 () (_ BitVec 64))
(declare-fun temp10892_19 () (_ BitVec 64))
(declare-fun temp10892_20 () (_ BitVec 64))
(declare-fun temp10892_21 () (_ BitVec 64))
(declare-fun temp10892_22 () (_ BitVec 64))
(declare-fun temp10892_23 () (_ BitVec 64))
(declare-fun temp10892_24 () (_ BitVec 64))
(declare-fun temp10892_25 () (_ BitVec 64))
(declare-fun temp10892_26 () (_ BitVec 64))
(declare-fun temp10892_27 () (_ BitVec 64))
(declare-fun temp10892_28 () (_ BitVec 64))
(declare-fun temp10892_29 () (_ BitVec 64))
(declare-fun temp10892_30 () (_ BitVec 64))
(declare-fun temp10892_31 () (_ BitVec 64))
(declare-fun temp10892_32 () (_ BitVec 64))
(declare-fun temp10892_33 () (_ BitVec 64))
(declare-fun temp10892_34 () (_ BitVec 64))
(declare-fun temp10892_35 () (_ BitVec 64))
(declare-fun temp10892_36 () (_ BitVec 64))
(declare-fun temp10892_37 () (_ BitVec 64))
(declare-fun temp10892_38 () (_ BitVec 64))
(declare-fun temp10892_39 () (_ BitVec 64))
(declare-fun temp10892_40 () (_ BitVec 64))
(declare-fun temp10892_41 () (_ BitVec 64))
(declare-fun temp10892_42 () (_ BitVec 64))
(declare-fun temp10892_43 () (_ BitVec 64))
(declare-fun temp10892_44 () (_ BitVec 64))
(declare-fun temp10892_45 () (_ BitVec 64))
(declare-fun temp10892_46 () (_ BitVec 64))
(declare-fun temp10892_47 () (_ BitVec 64))
(declare-fun temp10892_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10892_49 () (_ BitVec 64))
(declare-fun temp10892_50 () (_ BitVec 64))
(declare-fun temp10892_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10892_52 () (_ BitVec 64))
(declare-fun temp10892_53 () (_ BitVec 64))
(declare-fun temp10892_54 () (_ BitVec 64))
(declare-fun temp10892_55 () (_ BitVec 64))
(declare-fun temp10892_56 () (_ BitVec 64))
(declare-fun temp10892_57 () (_ BitVec 64))
(declare-fun temp10892_58 () (_ BitVec 64))
(declare-fun temp10892_59 () (_ BitVec 64))
(declare-fun temp10892_60 () (_ BitVec 64))
(declare-fun temp10892_61 () (_ BitVec 64))
(declare-fun temp10892_62 () (_ BitVec 64))
(declare-fun temp10892_63 () (_ BitVec 64))
(declare-fun temp10892_64 () (_ BitVec 64))
(declare-fun temp10892_65 () (_ BitVec 64))
(declare-fun temp10892_66 () (_ BitVec 64))
(declare-fun temp10892_67 () (_ BitVec 64))
(declare-fun temp10892_68 () (_ BitVec 64))
(declare-fun temp10892_69 () (_ BitVec 64))
(declare-fun temp10892_70 () (_ BitVec 64))
(declare-fun temp10892_71 () (_ BitVec 64))
(declare-fun temp10892_72 () (_ BitVec 64))
(declare-fun temp10892_73 () (_ BitVec 64))
(declare-fun temp10892_74 () (_ BitVec 64))
(declare-fun temp10892_75 () (_ BitVec 64))
(declare-fun temp10892_76 () (_ BitVec 64))
(declare-fun temp10892_77 () (_ BitVec 64))
(declare-fun temp10892_78 () (_ BitVec 64))
(declare-fun temp10892_79 () (_ BitVec 64))
(declare-fun temp10892_80 () (_ BitVec 64))
(declare-fun temp10892_81 () (_ BitVec 64))
(declare-fun temp10892_82 () (_ BitVec 64))
(declare-fun temp10892_83 () (_ BitVec 64))
(declare-fun temp10892_84 () (_ BitVec 64))
(declare-fun temp10892_85 () (_ BitVec 64))
(declare-fun temp10892_86 () (_ BitVec 64))
(declare-fun temp10892_87 () (_ BitVec 64))
(declare-fun temp10892_88 () (_ BitVec 64))
(declare-fun temp10892_89 () (_ BitVec 64))
(declare-fun temp10892_90 () (_ BitVec 64))
(declare-fun temp10892_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10892_92 () (_ BitVec 64))
(declare-fun temp10892_93 () (_ BitVec 64))
(declare-fun temp10892_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10892_95 () (_ BitVec 64))
(declare-fun temp10892_96 () (_ BitVec 64))
(declare-fun temp10892_97 () (_ BitVec 64))
(declare-fun temp10892_98 () (_ BitVec 64))
(declare-fun temp10892_99 () (_ BitVec 64))
(declare-fun temp10892_100 () (_ BitVec 64))
(declare-fun temp10892_101 () (_ BitVec 64))
(declare-fun temp10892_102 () (_ BitVec 64))
(declare-fun temp10892_103 () (_ BitVec 64))
(declare-fun temp10892_104 () (_ BitVec 64))
(declare-fun temp10892_105 () (_ BitVec 64))
(declare-fun temp10892_106 () (_ BitVec 64))
(declare-fun temp10892_107 () (_ BitVec 64))
(declare-fun temp10892_108 () (_ BitVec 64))
(declare-fun temp10892_109 () (_ BitVec 64))
(declare-fun temp10892_110 () (_ BitVec 64))
(declare-fun temp10892_111 () (_ BitVec 64))
(declare-fun temp10892_112 () (_ BitVec 64))
(declare-fun temp10892_113 () (_ BitVec 64))
(declare-fun temp10892_114 () (_ BitVec 64))
(declare-fun temp10892_115 () (_ BitVec 64))
(declare-fun temp10892_116 () (_ BitVec 64))
(declare-fun temp10892_117 () (_ BitVec 64))
(declare-fun temp10892_118 () (_ BitVec 64))
(declare-fun temp10892_119 () (_ BitVec 64))
(declare-fun temp10892_120 () (_ BitVec 64))
(declare-fun temp10892_121 () (_ BitVec 64))
(declare-fun temp10892_122 () (_ BitVec 64))
(declare-fun temp10892_123 () (_ BitVec 64))
(declare-fun temp10892_124 () (_ BitVec 64))
(declare-fun temp10892_125 () (_ BitVec 64))
(declare-fun temp10892_126 () (_ BitVec 64))
(declare-fun temp10892_127 () (_ BitVec 64))
(declare-fun temp10892_128 () (_ BitVec 64))
(declare-fun temp10892_129 () (_ BitVec 64))
(declare-fun temp10892_130 () (_ BitVec 64))
(declare-fun temp10892_131 () (_ BitVec 64))
(declare-fun temp10892_132 () (_ BitVec 64))
(declare-fun temp10892_133 () (_ BitVec 64))
(declare-fun temp10892_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10892_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10892_136 () (_ BitVec 64))
(declare-fun temp10892_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10892_138 () (_ BitVec 64))
(declare-fun temp10892_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10892_140 () (_ BitVec 64))
(declare-fun temp10892_141 () (_ BitVec 64))
(declare-fun temp10892_142 () (_ BitVec 64))
(declare-fun temp10892_143 () (_ BitVec 64))
(declare-fun temp10892_144 () (_ BitVec 64))
(declare-fun temp10892_145 () (_ BitVec 64))
(declare-fun temp10892_146 () (_ BitVec 64))
(declare-fun temp10892_147 () (_ BitVec 64))
(declare-fun temp10892_148 () (_ BitVec 64))
(declare-fun temp10892_149 () (_ BitVec 64))
(declare-fun temp10892_150 () (_ BitVec 64))
(declare-fun temp10892_151 () (_ BitVec 64))
(declare-fun temp10892_152 () (_ BitVec 64))
(declare-fun temp10892_153 () (_ BitVec 64))
(declare-fun temp10892_154 () (_ BitVec 64))
(declare-fun temp10892_155 () (_ BitVec 64))
(declare-fun temp10892_157 () (_ BitVec 64))
(declare-fun temp10892_158 () (_ BitVec 64))
(declare-fun temp10892_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10892_159 () (_ BitVec 64))
(declare-fun temp10892_160 () (_ BitVec 64))
(declare-fun temp10892_162 () (_ BitVec 64))
(declare-fun temp10892_163 () (_ BitVec 64))
(declare-fun temp10892_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10892_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10892_165 () (_ BitVec 64))
(declare-fun temp10892_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10892_167 () (_ BitVec 64))
(declare-fun temp10892_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10892_169 () (_ BitVec 64))
(declare-fun temp10892_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10892_171 () (_ BitVec 64))
(declare-fun temp10892_172 () (_ BitVec 64))
(declare-fun temp10892_173 () (_ BitVec 64))
(declare-fun temp10892_174 () (_ BitVec 64))
(declare-fun temp10892_175 () (_ BitVec 64))
(declare-fun temp10892_176 () (_ BitVec 64))
(declare-fun temp10892_177 () (_ BitVec 64))
(declare-fun temp10892_178 () (_ BitVec 64))
(declare-fun temp10892_179 () (_ BitVec 64))
(declare-fun temp10892_180 () (_ BitVec 64))
(declare-fun temp10892_181 () (_ BitVec 64))
(declare-fun temp10892_182 () (_ BitVec 64))
(declare-fun temp10892_183 () (_ BitVec 64))
(declare-fun temp10892_184 () (_ BitVec 64))
(declare-fun temp10892_185 () (_ BitVec 64))
(declare-fun temp10892_186 () (_ BitVec 64))
(declare-fun temp10892_187 () (_ BitVec 64))
(declare-fun temp10892_188 () (_ BitVec 64))
(declare-fun temp10892_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10892_190 () (_ BitVec 64))
(declare-fun temp10892_192 () (_ BitVec 64))
(declare-fun temp10892_193 () (_ BitVec 64))
(declare-fun temp10892_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10892_194 () (_ BitVec 64))
(declare-fun temp10892_195 () (_ BitVec 64))
(declare-fun temp10892_197 () (_ BitVec 64))
(declare-fun temp10892_198 () (_ BitVec 64))
(declare-fun temp10892_196 () (_ BitVec 64))
(declare-fun temp10892_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10892_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10892_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10892_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10892_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10892_204 () (_ BitVec 64))
(declare-fun temp10892_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10892_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10892_207 () (_ BitVec 64))
(declare-fun temp10892_208 () (_ BitVec 64))
(declare-fun temp10892_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10892_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10892_211 () (_ BitVec 64))
(declare-fun temp10892_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10892_213 () (_ BitVec 64))
(declare-fun temp10892_214 () (_ BitVec 64))
(declare-fun temp10892_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10892_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10892_217 () (_ BitVec 64))
(declare-fun temp10892_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10892_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10892_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10892_221 () (_ BitVec 64))
(declare-fun temp10892_222 () (_ BitVec 64))
(declare-fun var6435604 () (_ BitVec 64))
(declare-fun var6435571 () (_ BitVec 64))
(declare-fun var6304135 () (_ BitVec 64))
(declare-fun var6304131 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10892_223 () (_ BitVec 64))
(assert (= temp10892_1 #x0000000000000001))
(assert (= var77203 temp10892_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10892_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10892_2)))
(assert (= temp10892_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10892_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10892_4 #x0000000000000000))
(assert (= var210941 temp10892_4))
(assert (= temp10892_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10892_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10892_6 #x0000000000000000))
(assert (= var210986 temp10892_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10892_7 #x0000000000000000))
(assert (= temp10892_8 temp10892_7))
(assert (= temp10892_9 (select ARGNAME_padding_NAMEEND_VAL temp10892_8)))
(assert (= temp10892_10 #x0000000000000001))
(assert (= temp10892_11 temp10892_10))
(assert (= temp10892_12 (select ARGNAME_padding_NAMEEND_VAL temp10892_11)))
(assert (= temp10892_13 #x0000000000000002))
(assert (= temp10892_14 temp10892_13))
(assert (= temp10892_15 (select ARGNAME_padding_NAMEEND_VAL temp10892_14)))
(assert (= temp10892_16 #x0000000000000003))
(assert (= temp10892_17 temp10892_16))
(assert (= temp10892_18 (select ARGNAME_padding_NAMEEND_VAL temp10892_17)))
(assert (= temp10892_19 #x0000000000000004))
(assert (= temp10892_20 temp10892_19))
(assert (= temp10892_21 (select ARGNAME_padding_NAMEEND_VAL temp10892_20)))
(assert (= temp10892_22 #x0000000000000005))
(assert (= temp10892_23 temp10892_22))
(assert (= temp10892_24 (select ARGNAME_padding_NAMEEND_VAL temp10892_23)))
(assert (= temp10892_25 #x0000000000000000))
(assert (= temp10892_26 #x0000000000000000))
(assert (= temp10892_27 temp10892_26))
(assert (= temp10892_28 (select ARGNAME_padding_NAMEEND_VAL temp10892_27)))
(assert (= temp10892_29 #x0000000000000000))
(assert (= temp10892_30 #x0000000000000001))
(assert (= temp10892_31 temp10892_30))
(assert (= temp10892_32 (select ARGNAME_padding_NAMEEND_VAL temp10892_31)))
(assert (= temp10892_33 #x0000000000000000))
(assert (= temp10892_34 #x0000000000000002))
(assert (= temp10892_35 temp10892_34))
(assert (= temp10892_36 (select ARGNAME_padding_NAMEEND_VAL temp10892_35)))
(assert (= temp10892_37 #x0000000000000000))
(assert (= temp10892_38 #x0000000000000003))
(assert (= temp10892_39 temp10892_38))
(assert (= temp10892_40 (select ARGNAME_padding_NAMEEND_VAL temp10892_39)))
(assert (= temp10892_41 #x0000000000000000))
(assert (= temp10892_42 #x0000000000000004))
(assert (= temp10892_43 temp10892_42))
(assert (= temp10892_44 (select ARGNAME_padding_NAMEEND_VAL temp10892_43)))
(assert (= temp10892_45 #x0000000000000000))
(assert (= temp10892_46 #x0000000000000005))
(assert (= temp10892_47 temp10892_46))
(assert (= temp10892_48 (select ARGNAME_padding_NAMEEND_VAL temp10892_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10892_28 temp10892_25)
             (bvslt temp10892_32 temp10892_29)
             (bvslt temp10892_36 temp10892_33)
             (bvslt temp10892_40 temp10892_37)
             (bvslt temp10892_44 temp10892_41)
             (bvslt temp10892_48 temp10892_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10892_49 #x0000000000000000))
(assert (= var1191714 temp10892_49))
(assert (= temp10892_50 #x0000000000000000))
(assert (= temp10892_51 temp10892_50))
(assert (= temp10892_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10892_51)))
(assert (= temp10892_53 #x0000000000000001))
(assert (= temp10892_54 temp10892_53))
(assert (= temp10892_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10892_54)))
(assert (= temp10892_56 #x0000000000000002))
(assert (= temp10892_57 temp10892_56))
(assert (= temp10892_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10892_57)))
(assert (= temp10892_59 #x0000000000000003))
(assert (= temp10892_60 temp10892_59))
(assert (= temp10892_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10892_60)))
(assert (= temp10892_62 #x0000000000000004))
(assert (= temp10892_63 temp10892_62))
(assert (= temp10892_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10892_63)))
(assert (= temp10892_65 #x0000000000000005))
(assert (= temp10892_66 temp10892_65))
(assert (= temp10892_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10892_66)))
(assert (= temp10892_68 #x0000000000000000))
(assert (= temp10892_69 #x0000000000000000))
(assert (= temp10892_70 temp10892_69))
(assert (= temp10892_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10892_70)))
(assert (= temp10892_72 #x0000000000000000))
(assert (= temp10892_73 #x0000000000000001))
(assert (= temp10892_74 temp10892_73))
(assert (= temp10892_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10892_74)))
(assert (= temp10892_76 #x0000000000000000))
(assert (= temp10892_77 #x0000000000000002))
(assert (= temp10892_78 temp10892_77))
(assert (= temp10892_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10892_78)))
(assert (= temp10892_80 #x0000000000000000))
(assert (= temp10892_81 #x0000000000000003))
(assert (= temp10892_82 temp10892_81))
(assert (= temp10892_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10892_82)))
(assert (= temp10892_84 #x0000000000000000))
(assert (= temp10892_85 #x0000000000000004))
(assert (= temp10892_86 temp10892_85))
(assert (= temp10892_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10892_86)))
(assert (= temp10892_88 #x0000000000000000))
(assert (= temp10892_89 #x0000000000000005))
(assert (= temp10892_90 temp10892_89))
(assert (= temp10892_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10892_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10892_71 temp10892_68)
             (bvslt temp10892_75 temp10892_72)
             (bvslt temp10892_79 temp10892_76)
             (bvslt temp10892_83 temp10892_80)
             (bvslt temp10892_87 temp10892_84)
             (bvslt temp10892_91 temp10892_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10892_92 #x0000000000000000))
(assert (= var1191725 temp10892_92))
(assert (= temp10892_93 #x0000000000000000))
(assert (= temp10892_94 temp10892_93))
(assert (= temp10892_95 (select ARGNAME_stride_NAMEEND_VAL temp10892_94)))
(assert (= temp10892_96 #x0000000000000001))
(assert (= temp10892_97 temp10892_96))
(assert (= temp10892_98 (select ARGNAME_stride_NAMEEND_VAL temp10892_97)))
(assert (= temp10892_99 #x0000000000000002))
(assert (= temp10892_100 temp10892_99))
(assert (= temp10892_101 (select ARGNAME_stride_NAMEEND_VAL temp10892_100)))
(assert (= temp10892_102 #x0000000000000003))
(assert (= temp10892_103 temp10892_102))
(assert (= temp10892_104 (select ARGNAME_stride_NAMEEND_VAL temp10892_103)))
(assert (= temp10892_105 #x0000000000000004))
(assert (= temp10892_106 temp10892_105))
(assert (= temp10892_107 (select ARGNAME_stride_NAMEEND_VAL temp10892_106)))
(assert (= temp10892_108 #x0000000000000005))
(assert (= temp10892_109 temp10892_108))
(assert (= temp10892_110 (select ARGNAME_stride_NAMEEND_VAL temp10892_109)))
(assert (= temp10892_111 #x0000000000000000))
(assert (= temp10892_112 #x0000000000000000))
(assert (= temp10892_113 temp10892_112))
(assert (= temp10892_114 (select ARGNAME_stride_NAMEEND_VAL temp10892_113)))
(assert (= temp10892_115 #x0000000000000000))
(assert (= temp10892_116 #x0000000000000001))
(assert (= temp10892_117 temp10892_116))
(assert (= temp10892_118 (select ARGNAME_stride_NAMEEND_VAL temp10892_117)))
(assert (= temp10892_119 #x0000000000000000))
(assert (= temp10892_120 #x0000000000000002))
(assert (= temp10892_121 temp10892_120))
(assert (= temp10892_122 (select ARGNAME_stride_NAMEEND_VAL temp10892_121)))
(assert (= temp10892_123 #x0000000000000000))
(assert (= temp10892_124 #x0000000000000003))
(assert (= temp10892_125 temp10892_124))
(assert (= temp10892_126 (select ARGNAME_stride_NAMEEND_VAL temp10892_125)))
(assert (= temp10892_127 #x0000000000000000))
(assert (= temp10892_128 #x0000000000000004))
(assert (= temp10892_129 temp10892_128))
(assert (= temp10892_130 (select ARGNAME_stride_NAMEEND_VAL temp10892_129)))
(assert (= temp10892_131 #x0000000000000000))
(assert (= temp10892_132 #x0000000000000005))
(assert (= temp10892_133 temp10892_132))
(assert (= temp10892_134 (select ARGNAME_stride_NAMEEND_VAL temp10892_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10892_114 temp10892_111)
             (bvsle temp10892_118 temp10892_115)
             (bvsle temp10892_122 temp10892_119)
             (bvsle temp10892_126 temp10892_123)
             (bvsle temp10892_130 temp10892_127)
             (bvsle temp10892_134 temp10892_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10892_135 #x0000000000000000))
(assert (= var1191735 temp10892_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10892_136 #x0000000000000001))
(assert (= var1191747 temp10892_136))
(assert (= temp10892_137 #x0000000000000000))
(assert (= var1179826 temp10892_137))
(assert (= temp10892_138 #x0000000000000000))
(assert (= temp10892_139 temp10892_138))
(assert (= temp10892_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10892_139)))
(assert (= temp10892_141 #x0000000000000001))
(assert (= temp10892_142 temp10892_141))
(assert (= temp10892_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10892_142)))
(assert (= temp10892_144 #x0000000000000002))
(assert (= temp10892_145 temp10892_144))
(assert (= temp10892_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10892_145)))
(assert (= temp10892_147 #x0000000000000003))
(assert (= temp10892_148 temp10892_147))
(assert (= temp10892_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10892_148)))
(assert (= temp10892_150 #x0000000000000004))
(assert (= temp10892_151 temp10892_150))
(assert (= temp10892_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10892_151)))
(assert (= temp10892_153 #x0000000000000005))
(assert (= temp10892_154 temp10892_153))
(assert (= temp10892_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10892_154)))
(assert (= temp10892_157 var1179826))
(assert (= temp10892_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10892_157)))
(assert (= temp10892_156 temp10892_158))
(assert (= var1191780
   (ite (bvslt temp10892_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10892_159 #x0000000000000000))
(assert (= var1191780 temp10892_159))
(assert (= temp10892_160 #x0000000000000000))
(assert (= var1179826 temp10892_160))
(assert (= temp10892_162 var1179826))
(assert (= temp10892_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10892_162)))
(assert (= temp10892_161 temp10892_163))
(assert (= var1191802 (bvsmod temp10892_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10892_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10892_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10892_165 #x0000000000000001))
(assert (= var1191803 temp10892_165))
(assert (= temp10892_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10892_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10892_167 #x0000000000000001))
(assert (= var1191823 temp10892_167))
(assert (= temp10892_168 #x0000000000000001))
(assert (= var1180714 temp10892_168))
(assert (= temp10892_169 #x0000000000000000))
(assert (= temp10892_170 temp10892_169))
(assert (= temp10892_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10892_170)))
(assert (= temp10892_172 #x0000000000000001))
(assert (= temp10892_173 temp10892_172))
(assert (= temp10892_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10892_173)))
(assert (= temp10892_175 #x0000000000000002))
(assert (= temp10892_176 temp10892_175))
(assert (= temp10892_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10892_176)))
(assert (= temp10892_178 #x0000000000000003))
(assert (= temp10892_179 temp10892_178))
(assert (= temp10892_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10892_179)))
(assert (= temp10892_181 #x0000000000000004))
(assert (= temp10892_182 temp10892_181))
(assert (= temp10892_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10892_182)))
(assert (= temp10892_184 #x0000000000000005))
(assert (= temp10892_185 temp10892_184))
(assert (= temp10892_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10892_185)))
(assert (= temp10892_187 #x0000000000000000))
(assert (= temp10892_188
   (ite (bvslt var1180714 temp10892_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10892_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10892_188)))
(assert (= var1191831 temp10892_189))
(assert (bvslt (ite (bvslt var1180714 temp10892_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10892_190 #x0000000000000001))
(assert (= var1180714 temp10892_190))
(assert (= temp10892_192 var1180714))
(assert (= temp10892_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10892_192)))
(assert (= temp10892_191 temp10892_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10892_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10892_194 #x0000000000000001))
(assert (= var1191836 temp10892_194))
(assert (= temp10892_195 #x0000000000000000))
(assert (= var1179826 temp10892_195))
(assert (= temp10892_197 var1179826))
(assert (= temp10892_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10892_197)))
(assert (= temp10892_196 temp10892_198))
(assert (= temp10892_199 #x0000000000000002))
(assert (= var1586025 temp10892_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10892_200 #x0000000000000001))
(assert (= var1191993 temp10892_200))
(assert (= temp10892_201 #x0000000000000001))
(assert (= var2700303 temp10892_201))
(assert (= temp10892_202 #x0000000000000001))
(assert (= var2962447 temp10892_202))
(assert (= temp10892_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10892_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10892_204 #x0000000000000001))
(assert (= var211058 temp10892_204))
(assert (= temp10892_205 #x0000000000000001))
(assert (= var211188 temp10892_205))
(assert (= var3879401 var211188))
(assert (= temp10892_206 #x0000000000000000))
(assert (= var3866802 temp10892_206))
(assert (= temp10892_207 #x0000000000000000))
(assert (= temp10892_208
   (ite (bvslt var3866802 temp10892_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10892_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10892_208)))
(assert (= var3879420 temp10892_209))
(assert (bvslt (ite (bvslt var3866802 temp10892_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10892_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10892_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10892_211 #x0000000000000000))
(assert (= var3879421 temp10892_211))
(assert (= temp10892_212 #x0000000000000001))
(assert (= var3867690 temp10892_212))
(assert (= temp10892_213 #x0000000000000000))
(assert (= temp10892_214
   (ite (bvslt var3867690 temp10892_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10892_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10892_214)))
(assert (= var3879423 temp10892_215))
(assert (bvslt (ite (bvslt var3867690 temp10892_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10892_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10892_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10892_217 #x0000000000000001))
(assert (= var3879424 temp10892_217))
(assert (= temp10892_218 #x0000000000000000))
(assert (= var4133117 temp10892_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10892_219 #x0000000000000002))
(assert (= var4339331 temp10892_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10892_220 #x0000000000000000))
(assert (= var4404892 temp10892_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10892_221 #x0000000000000001))
(assert (= var211058 temp10892_221))
(assert (= temp10892_222 #x0000000000000000))
(assert (= var6435604 temp10892_222))
(assert (= var6435571 var6435604))
(assert (= var6304135 var6435571))
(assert (= var6304131 var6304135))
(assert (= var212669 var6304131))
(assert (= temp10892_223 #x0000000000000000))
(assert (= var212669 temp10892_223))
(model-add temp10892_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10892_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10892_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10892_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





