(declare-fun temp48_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp48_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp48_3 () (_ BitVec 64))
(declare-fun temp48_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp48_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp48_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp48_7 () (_ BitVec 64))
(declare-fun temp48_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp48_9 () (_ BitVec 64))
(declare-fun temp48_10 () (_ BitVec 64))
(declare-fun temp48_11 () (_ BitVec 64))
(declare-fun temp48_12 () (_ BitVec 64))
(declare-fun temp48_13 () (_ BitVec 64))
(declare-fun temp48_14 () (_ BitVec 64))
(declare-fun temp48_15 () (_ BitVec 64))
(declare-fun temp48_16 () (_ BitVec 64))
(declare-fun temp48_17 () (_ BitVec 64))
(declare-fun temp48_18 () (_ BitVec 64))
(declare-fun temp48_19 () (_ BitVec 64))
(declare-fun temp48_20 () (_ BitVec 64))
(declare-fun temp48_21 () (_ BitVec 64))
(declare-fun temp48_22 () (_ BitVec 64))
(declare-fun temp48_23 () (_ BitVec 64))
(declare-fun temp48_24 () (_ BitVec 64))
(declare-fun temp48_25 () (_ BitVec 64))
(declare-fun temp48_26 () (_ BitVec 64))
(declare-fun temp48_27 () (_ BitVec 64))
(declare-fun temp48_28 () (_ BitVec 64))
(declare-fun temp48_29 () (_ BitVec 64))
(declare-fun temp48_30 () (_ BitVec 64))
(declare-fun temp48_31 () (_ BitVec 64))
(declare-fun temp48_32 () (_ BitVec 64))
(declare-fun temp48_33 () (_ BitVec 64))
(declare-fun temp48_34 () (_ BitVec 64))
(declare-fun temp48_35 () (_ BitVec 64))
(declare-fun temp48_36 () (_ BitVec 64))
(declare-fun temp48_37 () (_ BitVec 64))
(declare-fun temp48_38 () (_ BitVec 64))
(declare-fun temp48_39 () (_ BitVec 64))
(declare-fun temp48_40 () (_ BitVec 64))
(declare-fun temp48_41 () (_ BitVec 64))
(declare-fun temp48_42 () (_ BitVec 64))
(declare-fun temp48_43 () (_ BitVec 64))
(declare-fun temp48_44 () (_ BitVec 64))
(declare-fun temp48_45 () (_ BitVec 64))
(declare-fun temp48_46 () (_ BitVec 64))
(declare-fun temp48_47 () (_ BitVec 64))
(declare-fun temp48_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp48_49 () (_ BitVec 64))
(declare-fun temp48_50 () (_ BitVec 64))
(declare-fun temp48_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp48_52 () (_ BitVec 64))
(declare-fun temp48_53 () (_ BitVec 64))
(declare-fun temp48_54 () (_ BitVec 64))
(declare-fun temp48_55 () (_ BitVec 64))
(declare-fun temp48_56 () (_ BitVec 64))
(declare-fun temp48_57 () (_ BitVec 64))
(declare-fun temp48_58 () (_ BitVec 64))
(declare-fun temp48_59 () (_ BitVec 64))
(declare-fun temp48_60 () (_ BitVec 64))
(declare-fun temp48_61 () (_ BitVec 64))
(declare-fun temp48_62 () (_ BitVec 64))
(declare-fun temp48_63 () (_ BitVec 64))
(declare-fun temp48_64 () (_ BitVec 64))
(declare-fun temp48_65 () (_ BitVec 64))
(declare-fun temp48_66 () (_ BitVec 64))
(declare-fun temp48_67 () (_ BitVec 64))
(declare-fun temp48_68 () (_ BitVec 64))
(declare-fun temp48_69 () (_ BitVec 64))
(declare-fun temp48_70 () (_ BitVec 64))
(declare-fun temp48_71 () (_ BitVec 64))
(declare-fun temp48_72 () (_ BitVec 64))
(declare-fun temp48_73 () (_ BitVec 64))
(declare-fun temp48_74 () (_ BitVec 64))
(declare-fun temp48_75 () (_ BitVec 64))
(declare-fun temp48_76 () (_ BitVec 64))
(declare-fun temp48_77 () (_ BitVec 64))
(declare-fun temp48_78 () (_ BitVec 64))
(declare-fun temp48_79 () (_ BitVec 64))
(declare-fun temp48_80 () (_ BitVec 64))
(declare-fun temp48_81 () (_ BitVec 64))
(declare-fun temp48_82 () (_ BitVec 64))
(declare-fun temp48_83 () (_ BitVec 64))
(declare-fun temp48_84 () (_ BitVec 64))
(declare-fun temp48_85 () (_ BitVec 64))
(declare-fun temp48_86 () (_ BitVec 64))
(declare-fun temp48_87 () (_ BitVec 64))
(declare-fun temp48_88 () (_ BitVec 64))
(declare-fun temp48_89 () (_ BitVec 64))
(declare-fun temp48_90 () (_ BitVec 64))
(declare-fun temp48_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp48_92 () (_ BitVec 64))
(declare-fun temp48_93 () (_ BitVec 64))
(declare-fun temp48_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp48_95 () (_ BitVec 64))
(declare-fun temp48_96 () (_ BitVec 64))
(declare-fun temp48_97 () (_ BitVec 64))
(declare-fun temp48_98 () (_ BitVec 64))
(declare-fun temp48_99 () (_ BitVec 64))
(declare-fun temp48_100 () (_ BitVec 64))
(declare-fun temp48_101 () (_ BitVec 64))
(declare-fun temp48_102 () (_ BitVec 64))
(declare-fun temp48_103 () (_ BitVec 64))
(declare-fun temp48_104 () (_ BitVec 64))
(declare-fun temp48_105 () (_ BitVec 64))
(declare-fun temp48_106 () (_ BitVec 64))
(declare-fun temp48_107 () (_ BitVec 64))
(declare-fun temp48_108 () (_ BitVec 64))
(declare-fun temp48_109 () (_ BitVec 64))
(declare-fun temp48_110 () (_ BitVec 64))
(declare-fun temp48_111 () (_ BitVec 64))
(declare-fun temp48_112 () (_ BitVec 64))
(declare-fun temp48_113 () (_ BitVec 64))
(declare-fun temp48_114 () (_ BitVec 64))
(declare-fun temp48_115 () (_ BitVec 64))
(declare-fun temp48_116 () (_ BitVec 64))
(declare-fun temp48_117 () (_ BitVec 64))
(declare-fun temp48_118 () (_ BitVec 64))
(declare-fun temp48_119 () (_ BitVec 64))
(declare-fun temp48_120 () (_ BitVec 64))
(declare-fun temp48_121 () (_ BitVec 64))
(declare-fun temp48_122 () (_ BitVec 64))
(declare-fun temp48_123 () (_ BitVec 64))
(declare-fun temp48_124 () (_ BitVec 64))
(declare-fun temp48_125 () (_ BitVec 64))
(declare-fun temp48_126 () (_ BitVec 64))
(declare-fun temp48_127 () (_ BitVec 64))
(declare-fun temp48_128 () (_ BitVec 64))
(declare-fun temp48_129 () (_ BitVec 64))
(declare-fun temp48_130 () (_ BitVec 64))
(declare-fun temp48_131 () (_ BitVec 64))
(declare-fun temp48_132 () (_ BitVec 64))
(declare-fun temp48_133 () (_ BitVec 64))
(declare-fun temp48_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp48_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp48_136 () (_ BitVec 64))
(declare-fun temp48_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp48_138 () (_ BitVec 64))
(declare-fun temp48_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp48_140 () (_ BitVec 64))
(declare-fun temp48_141 () (_ BitVec 64))
(declare-fun temp48_142 () (_ BitVec 64))
(declare-fun temp48_143 () (_ BitVec 64))
(declare-fun temp48_144 () (_ BitVec 64))
(declare-fun temp48_145 () (_ BitVec 64))
(declare-fun temp48_146 () (_ BitVec 64))
(declare-fun temp48_147 () (_ BitVec 64))
(declare-fun temp48_148 () (_ BitVec 64))
(declare-fun temp48_149 () (_ BitVec 64))
(declare-fun temp48_150 () (_ BitVec 64))
(declare-fun temp48_151 () (_ BitVec 64))
(declare-fun temp48_152 () (_ BitVec 64))
(declare-fun temp48_153 () (_ BitVec 64))
(declare-fun temp48_154 () (_ BitVec 64))
(declare-fun temp48_155 () (_ BitVec 64))
(declare-fun temp48_157 () (_ BitVec 64))
(declare-fun temp48_158 () (_ BitVec 64))
(declare-fun temp48_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp48_159 () (_ BitVec 64))
(declare-fun temp48_160 () (_ BitVec 64))
(declare-fun temp48_162 () (_ BitVec 64))
(declare-fun temp48_163 () (_ BitVec 64))
(declare-fun temp48_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp48_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp48_165 () (_ BitVec 64))
(declare-fun temp48_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp48_167 () (_ BitVec 64))
(declare-fun temp48_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp48_169 () (_ BitVec 64))
(declare-fun temp48_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp48_171 () (_ BitVec 64))
(declare-fun temp48_172 () (_ BitVec 64))
(declare-fun temp48_173 () (_ BitVec 64))
(declare-fun temp48_174 () (_ BitVec 64))
(declare-fun temp48_175 () (_ BitVec 64))
(declare-fun temp48_176 () (_ BitVec 64))
(declare-fun temp48_177 () (_ BitVec 64))
(declare-fun temp48_178 () (_ BitVec 64))
(declare-fun temp48_179 () (_ BitVec 64))
(declare-fun temp48_180 () (_ BitVec 64))
(declare-fun temp48_181 () (_ BitVec 64))
(declare-fun temp48_182 () (_ BitVec 64))
(declare-fun temp48_183 () (_ BitVec 64))
(declare-fun temp48_184 () (_ BitVec 64))
(declare-fun temp48_185 () (_ BitVec 64))
(declare-fun temp48_186 () (_ BitVec 64))
(declare-fun temp48_187 () (_ BitVec 64))
(declare-fun temp48_188 () (_ BitVec 64))
(declare-fun temp48_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp48_190 () (_ BitVec 64))
(declare-fun temp48_192 () (_ BitVec 64))
(declare-fun temp48_193 () (_ BitVec 64))
(declare-fun temp48_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp48_194 () (_ BitVec 64))
(declare-fun temp48_195 () (_ BitVec 64))
(declare-fun temp48_197 () (_ BitVec 64))
(declare-fun temp48_198 () (_ BitVec 64))
(declare-fun temp48_196 () (_ BitVec 64))
(declare-fun temp48_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp48_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp48_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp48_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp48_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp48_204 () (_ BitVec 64))
(declare-fun temp48_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp48_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp48_207 () (_ BitVec 64))
(declare-fun temp48_208 () (_ BitVec 64))
(declare-fun temp48_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp48_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp48_211 () (_ BitVec 64))
(declare-fun temp48_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp48_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp48_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp48_215 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5717837 () (_ BitVec 64))
(declare-fun temp48_217 () (_ BitVec 64))
(declare-fun temp48_216 () (_ BitVec 64))
(declare-fun temp48_218 () (_ BitVec 64))
(declare-fun var6557162 () (_ BitVec 64))
(declare-fun temp48_220 () (_ BitVec 64))
(declare-fun temp48_219 () (_ BitVec 64))
(declare-fun temp48_221 () (_ BitVec 64))
(assert (= temp48_1 #x0000000000000001))
(assert (= var77203 temp48_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp48_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp48_2)))
(assert (= temp48_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp48_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp48_4 #x0000000000000000))
(assert (= var210941 temp48_4))
(assert (= temp48_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp48_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp48_6 #x0000000000000000))
(assert (= var210986 temp48_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp48_7 #x0000000000000000))
(assert (= temp48_8 temp48_7))
(assert (= temp48_9 (select ARGNAME_padding_NAMEEND_VAL temp48_8)))
(assert (= temp48_10 #x0000000000000001))
(assert (= temp48_11 temp48_10))
(assert (= temp48_12 (select ARGNAME_padding_NAMEEND_VAL temp48_11)))
(assert (= temp48_13 #x0000000000000002))
(assert (= temp48_14 temp48_13))
(assert (= temp48_15 (select ARGNAME_padding_NAMEEND_VAL temp48_14)))
(assert (= temp48_16 #x0000000000000003))
(assert (= temp48_17 temp48_16))
(assert (= temp48_18 (select ARGNAME_padding_NAMEEND_VAL temp48_17)))
(assert (= temp48_19 #x0000000000000004))
(assert (= temp48_20 temp48_19))
(assert (= temp48_21 (select ARGNAME_padding_NAMEEND_VAL temp48_20)))
(assert (= temp48_22 #x0000000000000005))
(assert (= temp48_23 temp48_22))
(assert (= temp48_24 (select ARGNAME_padding_NAMEEND_VAL temp48_23)))
(assert (= temp48_25 #x0000000000000000))
(assert (= temp48_26 #x0000000000000000))
(assert (= temp48_27 temp48_26))
(assert (= temp48_28 (select ARGNAME_padding_NAMEEND_VAL temp48_27)))
(assert (= temp48_29 #x0000000000000000))
(assert (= temp48_30 #x0000000000000001))
(assert (= temp48_31 temp48_30))
(assert (= temp48_32 (select ARGNAME_padding_NAMEEND_VAL temp48_31)))
(assert (= temp48_33 #x0000000000000000))
(assert (= temp48_34 #x0000000000000002))
(assert (= temp48_35 temp48_34))
(assert (= temp48_36 (select ARGNAME_padding_NAMEEND_VAL temp48_35)))
(assert (= temp48_37 #x0000000000000000))
(assert (= temp48_38 #x0000000000000003))
(assert (= temp48_39 temp48_38))
(assert (= temp48_40 (select ARGNAME_padding_NAMEEND_VAL temp48_39)))
(assert (= temp48_41 #x0000000000000000))
(assert (= temp48_42 #x0000000000000004))
(assert (= temp48_43 temp48_42))
(assert (= temp48_44 (select ARGNAME_padding_NAMEEND_VAL temp48_43)))
(assert (= temp48_45 #x0000000000000000))
(assert (= temp48_46 #x0000000000000005))
(assert (= temp48_47 temp48_46))
(assert (= temp48_48 (select ARGNAME_padding_NAMEEND_VAL temp48_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp48_28 temp48_25)
             (bvslt temp48_32 temp48_29)
             (bvslt temp48_36 temp48_33)
             (bvslt temp48_40 temp48_37)
             (bvslt temp48_44 temp48_41)
             (bvslt temp48_48 temp48_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp48_49 #x0000000000000000))
(assert (= var1191714 temp48_49))
(assert (= temp48_50 #x0000000000000000))
(assert (= temp48_51 temp48_50))
(assert (= temp48_52 (select ARGNAME_output_padding_NAMEEND_VAL temp48_51)))
(assert (= temp48_53 #x0000000000000001))
(assert (= temp48_54 temp48_53))
(assert (= temp48_55 (select ARGNAME_output_padding_NAMEEND_VAL temp48_54)))
(assert (= temp48_56 #x0000000000000002))
(assert (= temp48_57 temp48_56))
(assert (= temp48_58 (select ARGNAME_output_padding_NAMEEND_VAL temp48_57)))
(assert (= temp48_59 #x0000000000000003))
(assert (= temp48_60 temp48_59))
(assert (= temp48_61 (select ARGNAME_output_padding_NAMEEND_VAL temp48_60)))
(assert (= temp48_62 #x0000000000000004))
(assert (= temp48_63 temp48_62))
(assert (= temp48_64 (select ARGNAME_output_padding_NAMEEND_VAL temp48_63)))
(assert (= temp48_65 #x0000000000000005))
(assert (= temp48_66 temp48_65))
(assert (= temp48_67 (select ARGNAME_output_padding_NAMEEND_VAL temp48_66)))
(assert (= temp48_68 #x0000000000000000))
(assert (= temp48_69 #x0000000000000000))
(assert (= temp48_70 temp48_69))
(assert (= temp48_71 (select ARGNAME_output_padding_NAMEEND_VAL temp48_70)))
(assert (= temp48_72 #x0000000000000000))
(assert (= temp48_73 #x0000000000000001))
(assert (= temp48_74 temp48_73))
(assert (= temp48_75 (select ARGNAME_output_padding_NAMEEND_VAL temp48_74)))
(assert (= temp48_76 #x0000000000000000))
(assert (= temp48_77 #x0000000000000002))
(assert (= temp48_78 temp48_77))
(assert (= temp48_79 (select ARGNAME_output_padding_NAMEEND_VAL temp48_78)))
(assert (= temp48_80 #x0000000000000000))
(assert (= temp48_81 #x0000000000000003))
(assert (= temp48_82 temp48_81))
(assert (= temp48_83 (select ARGNAME_output_padding_NAMEEND_VAL temp48_82)))
(assert (= temp48_84 #x0000000000000000))
(assert (= temp48_85 #x0000000000000004))
(assert (= temp48_86 temp48_85))
(assert (= temp48_87 (select ARGNAME_output_padding_NAMEEND_VAL temp48_86)))
(assert (= temp48_88 #x0000000000000000))
(assert (= temp48_89 #x0000000000000005))
(assert (= temp48_90 temp48_89))
(assert (= temp48_91 (select ARGNAME_output_padding_NAMEEND_VAL temp48_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp48_71 temp48_68)
             (bvslt temp48_75 temp48_72)
             (bvslt temp48_79 temp48_76)
             (bvslt temp48_83 temp48_80)
             (bvslt temp48_87 temp48_84)
             (bvslt temp48_91 temp48_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp48_92 #x0000000000000000))
(assert (= var1191725 temp48_92))
(assert (= temp48_93 #x0000000000000000))
(assert (= temp48_94 temp48_93))
(assert (= temp48_95 (select ARGNAME_stride_NAMEEND_VAL temp48_94)))
(assert (= temp48_96 #x0000000000000001))
(assert (= temp48_97 temp48_96))
(assert (= temp48_98 (select ARGNAME_stride_NAMEEND_VAL temp48_97)))
(assert (= temp48_99 #x0000000000000002))
(assert (= temp48_100 temp48_99))
(assert (= temp48_101 (select ARGNAME_stride_NAMEEND_VAL temp48_100)))
(assert (= temp48_102 #x0000000000000003))
(assert (= temp48_103 temp48_102))
(assert (= temp48_104 (select ARGNAME_stride_NAMEEND_VAL temp48_103)))
(assert (= temp48_105 #x0000000000000004))
(assert (= temp48_106 temp48_105))
(assert (= temp48_107 (select ARGNAME_stride_NAMEEND_VAL temp48_106)))
(assert (= temp48_108 #x0000000000000005))
(assert (= temp48_109 temp48_108))
(assert (= temp48_110 (select ARGNAME_stride_NAMEEND_VAL temp48_109)))
(assert (= temp48_111 #x0000000000000000))
(assert (= temp48_112 #x0000000000000000))
(assert (= temp48_113 temp48_112))
(assert (= temp48_114 (select ARGNAME_stride_NAMEEND_VAL temp48_113)))
(assert (= temp48_115 #x0000000000000000))
(assert (= temp48_116 #x0000000000000001))
(assert (= temp48_117 temp48_116))
(assert (= temp48_118 (select ARGNAME_stride_NAMEEND_VAL temp48_117)))
(assert (= temp48_119 #x0000000000000000))
(assert (= temp48_120 #x0000000000000002))
(assert (= temp48_121 temp48_120))
(assert (= temp48_122 (select ARGNAME_stride_NAMEEND_VAL temp48_121)))
(assert (= temp48_123 #x0000000000000000))
(assert (= temp48_124 #x0000000000000003))
(assert (= temp48_125 temp48_124))
(assert (= temp48_126 (select ARGNAME_stride_NAMEEND_VAL temp48_125)))
(assert (= temp48_127 #x0000000000000000))
(assert (= temp48_128 #x0000000000000004))
(assert (= temp48_129 temp48_128))
(assert (= temp48_130 (select ARGNAME_stride_NAMEEND_VAL temp48_129)))
(assert (= temp48_131 #x0000000000000000))
(assert (= temp48_132 #x0000000000000005))
(assert (= temp48_133 temp48_132))
(assert (= temp48_134 (select ARGNAME_stride_NAMEEND_VAL temp48_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp48_114 temp48_111)
             (bvsle temp48_118 temp48_115)
             (bvsle temp48_122 temp48_119)
             (bvsle temp48_126 temp48_123)
             (bvsle temp48_130 temp48_127)
             (bvsle temp48_134 temp48_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp48_135 #x0000000000000000))
(assert (= var1191735 temp48_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp48_136 #x0000000000000001))
(assert (= var1191747 temp48_136))
(assert (= temp48_137 #x0000000000000000))
(assert (= var1179826 temp48_137))
(assert (= temp48_138 #x0000000000000000))
(assert (= temp48_139 temp48_138))
(assert (= temp48_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp48_139)))
(assert (= temp48_141 #x0000000000000001))
(assert (= temp48_142 temp48_141))
(assert (= temp48_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp48_142)))
(assert (= temp48_144 #x0000000000000002))
(assert (= temp48_145 temp48_144))
(assert (= temp48_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp48_145)))
(assert (= temp48_147 #x0000000000000003))
(assert (= temp48_148 temp48_147))
(assert (= temp48_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp48_148)))
(assert (= temp48_150 #x0000000000000004))
(assert (= temp48_151 temp48_150))
(assert (= temp48_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp48_151)))
(assert (= temp48_153 #x0000000000000005))
(assert (= temp48_154 temp48_153))
(assert (= temp48_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp48_154)))
(assert (= temp48_157 var1179826))
(assert (= temp48_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp48_157)))
(assert (= temp48_156 temp48_158))
(assert (= var1191780
   (ite (bvslt temp48_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp48_159 #x0000000000000000))
(assert (= var1191780 temp48_159))
(assert (= temp48_160 #x0000000000000000))
(assert (= var1179826 temp48_160))
(assert (= temp48_162 var1179826))
(assert (= temp48_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp48_162)))
(assert (= temp48_161 temp48_163))
(assert (= var1191802 (bvsmod temp48_161 ARGNAME_groups_NAMEEND)))
(assert (= temp48_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp48_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp48_165 #x0000000000000001))
(assert (= var1191803 temp48_165))
(assert (= temp48_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp48_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp48_167 #x0000000000000001))
(assert (= var1191823 temp48_167))
(assert (= temp48_168 #x0000000000000001))
(assert (= var1180714 temp48_168))
(assert (= temp48_169 #x0000000000000000))
(assert (= temp48_170 temp48_169))
(assert (= temp48_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp48_170)))
(assert (= temp48_172 #x0000000000000001))
(assert (= temp48_173 temp48_172))
(assert (= temp48_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp48_173)))
(assert (= temp48_175 #x0000000000000002))
(assert (= temp48_176 temp48_175))
(assert (= temp48_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp48_176)))
(assert (= temp48_178 #x0000000000000003))
(assert (= temp48_179 temp48_178))
(assert (= temp48_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp48_179)))
(assert (= temp48_181 #x0000000000000004))
(assert (= temp48_182 temp48_181))
(assert (= temp48_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp48_182)))
(assert (= temp48_184 #x0000000000000005))
(assert (= temp48_185 temp48_184))
(assert (= temp48_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp48_185)))
(assert (= temp48_187 #x0000000000000000))
(assert (= temp48_188
   (ite (bvslt var1180714 temp48_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp48_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp48_188)))
(assert (= var1191831 temp48_189))
(assert (bvslt (ite (bvslt var1180714 temp48_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp48_190 #x0000000000000001))
(assert (= var1180714 temp48_190))
(assert (= temp48_192 var1180714))
(assert (= temp48_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp48_192)))
(assert (= temp48_191 temp48_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp48_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp48_194 #x0000000000000001))
(assert (= var1191836 temp48_194))
(assert (= temp48_195 #x0000000000000000))
(assert (= var1179826 temp48_195))
(assert (= temp48_197 var1179826))
(assert (= temp48_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp48_197)))
(assert (= temp48_196 temp48_198))
(assert (= temp48_199 #x0000000000000002))
(assert (= var1586025 temp48_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp48_200 #x0000000000000001))
(assert (= var1191993 temp48_200))
(assert (= temp48_201 #x0000000000000001))
(assert (= var2700303 temp48_201))
(assert (= temp48_202 #x0000000000000001))
(assert (= var2962447 temp48_202))
(assert (= temp48_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp48_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp48_204 #x0000000000000001))
(assert (= var211058 temp48_204))
(assert (= temp48_205 #x0000000000000001))
(assert (= var211188 temp48_205))
(assert (= var3879401 var211188))
(assert (= temp48_206 #x0000000000000000))
(assert (= var3866802 temp48_206))
(assert (= temp48_207 #x0000000000000000))
(assert (= temp48_208
   (ite (bvslt var3866802 temp48_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp48_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp48_208)))
(assert (= var3879420 temp48_209))
(assert (bvslt (ite (bvslt var3866802 temp48_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp48_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp48_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp48_211 #x0000000000000001))
(assert (= var3879421 temp48_211))
(assert (= temp48_212 #x0000000000000000))
(assert (= var4079423 temp48_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp48_213 #x0000000000000002))
(assert (= var4208259 temp48_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp48_214 #x0000000000000000))
(assert (= var4273820 temp48_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211388 var210913))
(assert (= temp48_215 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp48_215) #x0000000000000001 #x0000000000000000)))
(assert (= var5717837 var211389))
(assert (= temp48_217 #x0000000000000001))
(assert (= temp48_216 temp48_217))
(assert (= temp48_218 #x0000000000000001))
(assert (= var6557162 temp48_218))
(assert (= temp48_220 #xffffffffffffffff))
(assert (= temp48_219 temp48_220))
(assert (= temp48_221 #x0000000000000001))
(assert (= var211058 temp48_221))
(model-add temp48_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp48_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp48_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp48_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




