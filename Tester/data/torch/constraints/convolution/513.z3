(declare-fun temp684_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp684_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp684_3 () (_ BitVec 64))
(declare-fun temp684_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp684_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp684_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp684_7 () (_ BitVec 64))
(declare-fun temp684_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp684_9 () (_ BitVec 64))
(declare-fun temp684_10 () (_ BitVec 64))
(declare-fun temp684_11 () (_ BitVec 64))
(declare-fun temp684_12 () (_ BitVec 64))
(declare-fun temp684_13 () (_ BitVec 64))
(declare-fun temp684_14 () (_ BitVec 64))
(declare-fun temp684_15 () (_ BitVec 64))
(declare-fun temp684_16 () (_ BitVec 64))
(declare-fun temp684_17 () (_ BitVec 64))
(declare-fun temp684_18 () (_ BitVec 64))
(declare-fun temp684_19 () (_ BitVec 64))
(declare-fun temp684_20 () (_ BitVec 64))
(declare-fun temp684_21 () (_ BitVec 64))
(declare-fun temp684_22 () (_ BitVec 64))
(declare-fun temp684_23 () (_ BitVec 64))
(declare-fun temp684_24 () (_ BitVec 64))
(declare-fun temp684_25 () (_ BitVec 64))
(declare-fun temp684_26 () (_ BitVec 64))
(declare-fun temp684_27 () (_ BitVec 64))
(declare-fun temp684_28 () (_ BitVec 64))
(declare-fun temp684_29 () (_ BitVec 64))
(declare-fun temp684_30 () (_ BitVec 64))
(declare-fun temp684_31 () (_ BitVec 64))
(declare-fun temp684_32 () (_ BitVec 64))
(declare-fun temp684_33 () (_ BitVec 64))
(declare-fun temp684_34 () (_ BitVec 64))
(declare-fun temp684_35 () (_ BitVec 64))
(declare-fun temp684_36 () (_ BitVec 64))
(declare-fun temp684_37 () (_ BitVec 64))
(declare-fun temp684_38 () (_ BitVec 64))
(declare-fun temp684_39 () (_ BitVec 64))
(declare-fun temp684_40 () (_ BitVec 64))
(declare-fun temp684_41 () (_ BitVec 64))
(declare-fun temp684_42 () (_ BitVec 64))
(declare-fun temp684_43 () (_ BitVec 64))
(declare-fun temp684_44 () (_ BitVec 64))
(declare-fun temp684_45 () (_ BitVec 64))
(declare-fun temp684_46 () (_ BitVec 64))
(declare-fun temp684_47 () (_ BitVec 64))
(declare-fun temp684_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp684_49 () (_ BitVec 64))
(declare-fun temp684_50 () (_ BitVec 64))
(declare-fun temp684_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp684_52 () (_ BitVec 64))
(declare-fun temp684_53 () (_ BitVec 64))
(declare-fun temp684_54 () (_ BitVec 64))
(declare-fun temp684_55 () (_ BitVec 64))
(declare-fun temp684_56 () (_ BitVec 64))
(declare-fun temp684_57 () (_ BitVec 64))
(declare-fun temp684_58 () (_ BitVec 64))
(declare-fun temp684_59 () (_ BitVec 64))
(declare-fun temp684_60 () (_ BitVec 64))
(declare-fun temp684_61 () (_ BitVec 64))
(declare-fun temp684_62 () (_ BitVec 64))
(declare-fun temp684_63 () (_ BitVec 64))
(declare-fun temp684_64 () (_ BitVec 64))
(declare-fun temp684_65 () (_ BitVec 64))
(declare-fun temp684_66 () (_ BitVec 64))
(declare-fun temp684_67 () (_ BitVec 64))
(declare-fun temp684_68 () (_ BitVec 64))
(declare-fun temp684_69 () (_ BitVec 64))
(declare-fun temp684_70 () (_ BitVec 64))
(declare-fun temp684_71 () (_ BitVec 64))
(declare-fun temp684_72 () (_ BitVec 64))
(declare-fun temp684_73 () (_ BitVec 64))
(declare-fun temp684_74 () (_ BitVec 64))
(declare-fun temp684_75 () (_ BitVec 64))
(declare-fun temp684_76 () (_ BitVec 64))
(declare-fun temp684_77 () (_ BitVec 64))
(declare-fun temp684_78 () (_ BitVec 64))
(declare-fun temp684_79 () (_ BitVec 64))
(declare-fun temp684_80 () (_ BitVec 64))
(declare-fun temp684_81 () (_ BitVec 64))
(declare-fun temp684_82 () (_ BitVec 64))
(declare-fun temp684_83 () (_ BitVec 64))
(declare-fun temp684_84 () (_ BitVec 64))
(declare-fun temp684_85 () (_ BitVec 64))
(declare-fun temp684_86 () (_ BitVec 64))
(declare-fun temp684_87 () (_ BitVec 64))
(declare-fun temp684_88 () (_ BitVec 64))
(declare-fun temp684_89 () (_ BitVec 64))
(declare-fun temp684_90 () (_ BitVec 64))
(declare-fun temp684_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp684_92 () (_ BitVec 64))
(declare-fun temp684_93 () (_ BitVec 64))
(declare-fun temp684_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp684_95 () (_ BitVec 64))
(declare-fun temp684_96 () (_ BitVec 64))
(declare-fun temp684_97 () (_ BitVec 64))
(declare-fun temp684_98 () (_ BitVec 64))
(declare-fun temp684_99 () (_ BitVec 64))
(declare-fun temp684_100 () (_ BitVec 64))
(declare-fun temp684_101 () (_ BitVec 64))
(declare-fun temp684_102 () (_ BitVec 64))
(declare-fun temp684_103 () (_ BitVec 64))
(declare-fun temp684_104 () (_ BitVec 64))
(declare-fun temp684_105 () (_ BitVec 64))
(declare-fun temp684_106 () (_ BitVec 64))
(declare-fun temp684_107 () (_ BitVec 64))
(declare-fun temp684_108 () (_ BitVec 64))
(declare-fun temp684_109 () (_ BitVec 64))
(declare-fun temp684_110 () (_ BitVec 64))
(declare-fun temp684_111 () (_ BitVec 64))
(declare-fun temp684_112 () (_ BitVec 64))
(declare-fun temp684_113 () (_ BitVec 64))
(declare-fun temp684_114 () (_ BitVec 64))
(declare-fun temp684_115 () (_ BitVec 64))
(declare-fun temp684_116 () (_ BitVec 64))
(declare-fun temp684_117 () (_ BitVec 64))
(declare-fun temp684_118 () (_ BitVec 64))
(declare-fun temp684_119 () (_ BitVec 64))
(declare-fun temp684_120 () (_ BitVec 64))
(declare-fun temp684_121 () (_ BitVec 64))
(declare-fun temp684_122 () (_ BitVec 64))
(declare-fun temp684_123 () (_ BitVec 64))
(declare-fun temp684_124 () (_ BitVec 64))
(declare-fun temp684_125 () (_ BitVec 64))
(declare-fun temp684_126 () (_ BitVec 64))
(declare-fun temp684_127 () (_ BitVec 64))
(declare-fun temp684_128 () (_ BitVec 64))
(declare-fun temp684_129 () (_ BitVec 64))
(declare-fun temp684_130 () (_ BitVec 64))
(declare-fun temp684_131 () (_ BitVec 64))
(declare-fun temp684_132 () (_ BitVec 64))
(declare-fun temp684_133 () (_ BitVec 64))
(declare-fun temp684_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp684_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp684_136 () (_ BitVec 64))
(declare-fun temp684_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp684_138 () (_ BitVec 64))
(declare-fun temp684_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp684_140 () (_ BitVec 64))
(declare-fun temp684_141 () (_ BitVec 64))
(declare-fun temp684_142 () (_ BitVec 64))
(declare-fun temp684_143 () (_ BitVec 64))
(declare-fun temp684_144 () (_ BitVec 64))
(declare-fun temp684_145 () (_ BitVec 64))
(declare-fun temp684_146 () (_ BitVec 64))
(declare-fun temp684_147 () (_ BitVec 64))
(declare-fun temp684_148 () (_ BitVec 64))
(declare-fun temp684_149 () (_ BitVec 64))
(declare-fun temp684_150 () (_ BitVec 64))
(declare-fun temp684_151 () (_ BitVec 64))
(declare-fun temp684_152 () (_ BitVec 64))
(declare-fun temp684_153 () (_ BitVec 64))
(declare-fun temp684_154 () (_ BitVec 64))
(declare-fun temp684_155 () (_ BitVec 64))
(declare-fun temp684_157 () (_ BitVec 64))
(declare-fun temp684_158 () (_ BitVec 64))
(declare-fun temp684_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp684_159 () (_ BitVec 64))
(declare-fun temp684_160 () (_ BitVec 64))
(declare-fun temp684_162 () (_ BitVec 64))
(declare-fun temp684_163 () (_ BitVec 64))
(declare-fun temp684_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp684_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp684_165 () (_ BitVec 64))
(declare-fun temp684_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp684_167 () (_ BitVec 64))
(declare-fun temp684_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp684_169 () (_ BitVec 64))
(declare-fun temp684_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp684_171 () (_ BitVec 64))
(declare-fun temp684_172 () (_ BitVec 64))
(declare-fun temp684_173 () (_ BitVec 64))
(declare-fun temp684_174 () (_ BitVec 64))
(declare-fun temp684_175 () (_ BitVec 64))
(declare-fun temp684_176 () (_ BitVec 64))
(declare-fun temp684_177 () (_ BitVec 64))
(declare-fun temp684_178 () (_ BitVec 64))
(declare-fun temp684_179 () (_ BitVec 64))
(declare-fun temp684_180 () (_ BitVec 64))
(declare-fun temp684_181 () (_ BitVec 64))
(declare-fun temp684_182 () (_ BitVec 64))
(declare-fun temp684_183 () (_ BitVec 64))
(declare-fun temp684_184 () (_ BitVec 64))
(declare-fun temp684_185 () (_ BitVec 64))
(declare-fun temp684_186 () (_ BitVec 64))
(declare-fun temp684_187 () (_ BitVec 64))
(declare-fun temp684_188 () (_ BitVec 64))
(declare-fun temp684_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp684_190 () (_ BitVec 64))
(declare-fun temp684_192 () (_ BitVec 64))
(declare-fun temp684_193 () (_ BitVec 64))
(declare-fun temp684_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp684_194 () (_ BitVec 64))
(declare-fun temp684_195 () (_ BitVec 64))
(declare-fun temp684_197 () (_ BitVec 64))
(declare-fun temp684_198 () (_ BitVec 64))
(declare-fun temp684_196 () (_ BitVec 64))
(declare-fun temp684_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp684_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp684_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp684_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp684_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp684_204 () (_ BitVec 64))
(declare-fun temp684_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp684_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp684_207 () (_ BitVec 64))
(declare-fun temp684_208 () (_ BitVec 64))
(declare-fun temp684_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp684_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp684_211 () (_ BitVec 64))
(declare-fun temp684_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp684_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp684_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp684_216 () (_ BitVec 64))
(declare-fun temp684_215 () (_ BitVec 64))
(declare-fun temp684_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp684_218 () (_ BitVec 64))
(declare-fun temp684_219 () (_ BitVec 64))
(declare-fun temp684_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp684_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp684_222 () (_ BitVec 64))
(declare-fun temp684_224 () (_ BitVec 64))
(declare-fun temp684_223 () (_ BitVec 64))
(declare-fun temp684_225 () (_ BitVec 64))
(declare-fun temp684_226 () (_ BitVec 64))
(declare-fun var5518100 () (_ BitVec 64))
(declare-fun var5518067 () (_ BitVec 64))
(declare-fun var5386631 () (_ BitVec 64))
(declare-fun var5386627 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp684_227 () (_ BitVec 64))
(assert (= temp684_1 #x0000000000000001))
(assert (= var77203 temp684_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp684_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp684_2)))
(assert (= temp684_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp684_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp684_4 #x0000000000000000))
(assert (= var210941 temp684_4))
(assert (= temp684_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp684_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp684_6 #x0000000000000000))
(assert (= var210986 temp684_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp684_7 #x0000000000000000))
(assert (= temp684_8 temp684_7))
(assert (= temp684_9 (select ARGNAME_padding_NAMEEND_VAL temp684_8)))
(assert (= temp684_10 #x0000000000000001))
(assert (= temp684_11 temp684_10))
(assert (= temp684_12 (select ARGNAME_padding_NAMEEND_VAL temp684_11)))
(assert (= temp684_13 #x0000000000000002))
(assert (= temp684_14 temp684_13))
(assert (= temp684_15 (select ARGNAME_padding_NAMEEND_VAL temp684_14)))
(assert (= temp684_16 #x0000000000000003))
(assert (= temp684_17 temp684_16))
(assert (= temp684_18 (select ARGNAME_padding_NAMEEND_VAL temp684_17)))
(assert (= temp684_19 #x0000000000000004))
(assert (= temp684_20 temp684_19))
(assert (= temp684_21 (select ARGNAME_padding_NAMEEND_VAL temp684_20)))
(assert (= temp684_22 #x0000000000000005))
(assert (= temp684_23 temp684_22))
(assert (= temp684_24 (select ARGNAME_padding_NAMEEND_VAL temp684_23)))
(assert (= temp684_25 #x0000000000000000))
(assert (= temp684_26 #x0000000000000000))
(assert (= temp684_27 temp684_26))
(assert (= temp684_28 (select ARGNAME_padding_NAMEEND_VAL temp684_27)))
(assert (= temp684_29 #x0000000000000000))
(assert (= temp684_30 #x0000000000000001))
(assert (= temp684_31 temp684_30))
(assert (= temp684_32 (select ARGNAME_padding_NAMEEND_VAL temp684_31)))
(assert (= temp684_33 #x0000000000000000))
(assert (= temp684_34 #x0000000000000002))
(assert (= temp684_35 temp684_34))
(assert (= temp684_36 (select ARGNAME_padding_NAMEEND_VAL temp684_35)))
(assert (= temp684_37 #x0000000000000000))
(assert (= temp684_38 #x0000000000000003))
(assert (= temp684_39 temp684_38))
(assert (= temp684_40 (select ARGNAME_padding_NAMEEND_VAL temp684_39)))
(assert (= temp684_41 #x0000000000000000))
(assert (= temp684_42 #x0000000000000004))
(assert (= temp684_43 temp684_42))
(assert (= temp684_44 (select ARGNAME_padding_NAMEEND_VAL temp684_43)))
(assert (= temp684_45 #x0000000000000000))
(assert (= temp684_46 #x0000000000000005))
(assert (= temp684_47 temp684_46))
(assert (= temp684_48 (select ARGNAME_padding_NAMEEND_VAL temp684_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp684_28 temp684_25)
             (bvslt temp684_32 temp684_29)
             (bvslt temp684_36 temp684_33)
             (bvslt temp684_40 temp684_37)
             (bvslt temp684_44 temp684_41)
             (bvslt temp684_48 temp684_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp684_49 #x0000000000000000))
(assert (= var1191714 temp684_49))
(assert (= temp684_50 #x0000000000000000))
(assert (= temp684_51 temp684_50))
(assert (= temp684_52 (select ARGNAME_output_padding_NAMEEND_VAL temp684_51)))
(assert (= temp684_53 #x0000000000000001))
(assert (= temp684_54 temp684_53))
(assert (= temp684_55 (select ARGNAME_output_padding_NAMEEND_VAL temp684_54)))
(assert (= temp684_56 #x0000000000000002))
(assert (= temp684_57 temp684_56))
(assert (= temp684_58 (select ARGNAME_output_padding_NAMEEND_VAL temp684_57)))
(assert (= temp684_59 #x0000000000000003))
(assert (= temp684_60 temp684_59))
(assert (= temp684_61 (select ARGNAME_output_padding_NAMEEND_VAL temp684_60)))
(assert (= temp684_62 #x0000000000000004))
(assert (= temp684_63 temp684_62))
(assert (= temp684_64 (select ARGNAME_output_padding_NAMEEND_VAL temp684_63)))
(assert (= temp684_65 #x0000000000000005))
(assert (= temp684_66 temp684_65))
(assert (= temp684_67 (select ARGNAME_output_padding_NAMEEND_VAL temp684_66)))
(assert (= temp684_68 #x0000000000000000))
(assert (= temp684_69 #x0000000000000000))
(assert (= temp684_70 temp684_69))
(assert (= temp684_71 (select ARGNAME_output_padding_NAMEEND_VAL temp684_70)))
(assert (= temp684_72 #x0000000000000000))
(assert (= temp684_73 #x0000000000000001))
(assert (= temp684_74 temp684_73))
(assert (= temp684_75 (select ARGNAME_output_padding_NAMEEND_VAL temp684_74)))
(assert (= temp684_76 #x0000000000000000))
(assert (= temp684_77 #x0000000000000002))
(assert (= temp684_78 temp684_77))
(assert (= temp684_79 (select ARGNAME_output_padding_NAMEEND_VAL temp684_78)))
(assert (= temp684_80 #x0000000000000000))
(assert (= temp684_81 #x0000000000000003))
(assert (= temp684_82 temp684_81))
(assert (= temp684_83 (select ARGNAME_output_padding_NAMEEND_VAL temp684_82)))
(assert (= temp684_84 #x0000000000000000))
(assert (= temp684_85 #x0000000000000004))
(assert (= temp684_86 temp684_85))
(assert (= temp684_87 (select ARGNAME_output_padding_NAMEEND_VAL temp684_86)))
(assert (= temp684_88 #x0000000000000000))
(assert (= temp684_89 #x0000000000000005))
(assert (= temp684_90 temp684_89))
(assert (= temp684_91 (select ARGNAME_output_padding_NAMEEND_VAL temp684_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp684_71 temp684_68)
             (bvslt temp684_75 temp684_72)
             (bvslt temp684_79 temp684_76)
             (bvslt temp684_83 temp684_80)
             (bvslt temp684_87 temp684_84)
             (bvslt temp684_91 temp684_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp684_92 #x0000000000000000))
(assert (= var1191725 temp684_92))
(assert (= temp684_93 #x0000000000000000))
(assert (= temp684_94 temp684_93))
(assert (= temp684_95 (select ARGNAME_stride_NAMEEND_VAL temp684_94)))
(assert (= temp684_96 #x0000000000000001))
(assert (= temp684_97 temp684_96))
(assert (= temp684_98 (select ARGNAME_stride_NAMEEND_VAL temp684_97)))
(assert (= temp684_99 #x0000000000000002))
(assert (= temp684_100 temp684_99))
(assert (= temp684_101 (select ARGNAME_stride_NAMEEND_VAL temp684_100)))
(assert (= temp684_102 #x0000000000000003))
(assert (= temp684_103 temp684_102))
(assert (= temp684_104 (select ARGNAME_stride_NAMEEND_VAL temp684_103)))
(assert (= temp684_105 #x0000000000000004))
(assert (= temp684_106 temp684_105))
(assert (= temp684_107 (select ARGNAME_stride_NAMEEND_VAL temp684_106)))
(assert (= temp684_108 #x0000000000000005))
(assert (= temp684_109 temp684_108))
(assert (= temp684_110 (select ARGNAME_stride_NAMEEND_VAL temp684_109)))
(assert (= temp684_111 #x0000000000000000))
(assert (= temp684_112 #x0000000000000000))
(assert (= temp684_113 temp684_112))
(assert (= temp684_114 (select ARGNAME_stride_NAMEEND_VAL temp684_113)))
(assert (= temp684_115 #x0000000000000000))
(assert (= temp684_116 #x0000000000000001))
(assert (= temp684_117 temp684_116))
(assert (= temp684_118 (select ARGNAME_stride_NAMEEND_VAL temp684_117)))
(assert (= temp684_119 #x0000000000000000))
(assert (= temp684_120 #x0000000000000002))
(assert (= temp684_121 temp684_120))
(assert (= temp684_122 (select ARGNAME_stride_NAMEEND_VAL temp684_121)))
(assert (= temp684_123 #x0000000000000000))
(assert (= temp684_124 #x0000000000000003))
(assert (= temp684_125 temp684_124))
(assert (= temp684_126 (select ARGNAME_stride_NAMEEND_VAL temp684_125)))
(assert (= temp684_127 #x0000000000000000))
(assert (= temp684_128 #x0000000000000004))
(assert (= temp684_129 temp684_128))
(assert (= temp684_130 (select ARGNAME_stride_NAMEEND_VAL temp684_129)))
(assert (= temp684_131 #x0000000000000000))
(assert (= temp684_132 #x0000000000000005))
(assert (= temp684_133 temp684_132))
(assert (= temp684_134 (select ARGNAME_stride_NAMEEND_VAL temp684_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp684_114 temp684_111)
             (bvsle temp684_118 temp684_115)
             (bvsle temp684_122 temp684_119)
             (bvsle temp684_126 temp684_123)
             (bvsle temp684_130 temp684_127)
             (bvsle temp684_134 temp684_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp684_135 #x0000000000000000))
(assert (= var1191735 temp684_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp684_136 #x0000000000000001))
(assert (= var1191747 temp684_136))
(assert (= temp684_137 #x0000000000000000))
(assert (= var1179826 temp684_137))
(assert (= temp684_138 #x0000000000000000))
(assert (= temp684_139 temp684_138))
(assert (= temp684_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp684_139)))
(assert (= temp684_141 #x0000000000000001))
(assert (= temp684_142 temp684_141))
(assert (= temp684_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp684_142)))
(assert (= temp684_144 #x0000000000000002))
(assert (= temp684_145 temp684_144))
(assert (= temp684_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp684_145)))
(assert (= temp684_147 #x0000000000000003))
(assert (= temp684_148 temp684_147))
(assert (= temp684_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp684_148)))
(assert (= temp684_150 #x0000000000000004))
(assert (= temp684_151 temp684_150))
(assert (= temp684_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp684_151)))
(assert (= temp684_153 #x0000000000000005))
(assert (= temp684_154 temp684_153))
(assert (= temp684_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp684_154)))
(assert (= temp684_157 var1179826))
(assert (= temp684_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp684_157)))
(assert (= temp684_156 temp684_158))
(assert (= var1191780
   (ite (bvslt temp684_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp684_159 #x0000000000000000))
(assert (= var1191780 temp684_159))
(assert (= temp684_160 #x0000000000000000))
(assert (= var1179826 temp684_160))
(assert (= temp684_162 var1179826))
(assert (= temp684_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp684_162)))
(assert (= temp684_161 temp684_163))
(assert (= var1191802 (bvsmod temp684_161 ARGNAME_groups_NAMEEND)))
(assert (= temp684_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp684_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp684_165 #x0000000000000001))
(assert (= var1191803 temp684_165))
(assert (= temp684_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp684_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp684_167 #x0000000000000001))
(assert (= var1191823 temp684_167))
(assert (= temp684_168 #x0000000000000001))
(assert (= var1180714 temp684_168))
(assert (= temp684_169 #x0000000000000000))
(assert (= temp684_170 temp684_169))
(assert (= temp684_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_170)))
(assert (= temp684_172 #x0000000000000001))
(assert (= temp684_173 temp684_172))
(assert (= temp684_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_173)))
(assert (= temp684_175 #x0000000000000002))
(assert (= temp684_176 temp684_175))
(assert (= temp684_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_176)))
(assert (= temp684_178 #x0000000000000003))
(assert (= temp684_179 temp684_178))
(assert (= temp684_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_179)))
(assert (= temp684_181 #x0000000000000004))
(assert (= temp684_182 temp684_181))
(assert (= temp684_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_182)))
(assert (= temp684_184 #x0000000000000005))
(assert (= temp684_185 temp684_184))
(assert (= temp684_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_185)))
(assert (= temp684_187 #x0000000000000000))
(assert (= temp684_188
   (ite (bvslt var1180714 temp684_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp684_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_188)))
(assert (= var1191831 temp684_189))
(assert (bvslt (ite (bvslt var1180714 temp684_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp684_190 #x0000000000000001))
(assert (= var1180714 temp684_190))
(assert (= temp684_192 var1180714))
(assert (= temp684_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp684_192)))
(assert (= temp684_191 temp684_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp684_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp684_194 #x0000000000000001))
(assert (= var1191836 temp684_194))
(assert (= temp684_195 #x0000000000000000))
(assert (= var1179826 temp684_195))
(assert (= temp684_197 var1179826))
(assert (= temp684_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp684_197)))
(assert (= temp684_196 temp684_198))
(assert (= temp684_199 #x0000000000000002))
(assert (= var1586025 temp684_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp684_200 #x0000000000000001))
(assert (= var1191993 temp684_200))
(assert (= temp684_201 #x0000000000000001))
(assert (= var2700303 temp684_201))
(assert (= temp684_202 #x0000000000000001))
(assert (= var2962447 temp684_202))
(assert (= temp684_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp684_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp684_204 #x0000000000000001))
(assert (= var211058 temp684_204))
(assert (= temp684_205 #x0000000000000001))
(assert (= var211188 temp684_205))
(assert (= var3879401 var211188))
(assert (= temp684_206 #x0000000000000000))
(assert (= var3866802 temp684_206))
(assert (= temp684_207 #x0000000000000000))
(assert (= temp684_208
   (ite (bvslt var3866802 temp684_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp684_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_208)))
(assert (= var3879420 temp684_209))
(assert (bvslt (ite (bvslt var3866802 temp684_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp684_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp684_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp684_211 #x0000000000000001))
(assert (= var3879421 temp684_211))
(assert (= temp684_212 #x0000000000000000))
(assert (= var4079423 temp684_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp684_213 #x0000000000000002))
(assert (= var4208259 temp684_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp684_214 #x0000000000000000))
(assert (= var4273820 temp684_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp684_216 #xffffffffffffffff))
(assert (= temp684_215 temp684_216))
(assert (= temp684_217 #x0000000000000001))
(assert (= var197674 temp684_217))
(assert (= temp684_218 #x0000000000000000))
(assert (= temp684_219
   (ite (bvslt var197674 temp684_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp684_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_219)))
(assert (= var211595 temp684_220))
(assert (bvslt (ite (bvslt var197674 temp684_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp684_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp684_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp684_222 #x0000000000000001))
(assert (= var211596 temp684_222))
(assert (= temp684_224 #xffffffffffffffff))
(assert (= temp684_223 temp684_224))
(assert (= temp684_225 #x0000000000000001))
(assert (= var211058 temp684_225))
(assert (= temp684_226 #x0000000000000000))
(assert (= var5518100 temp684_226))
(assert (= var5518067 var5518100))
(assert (= var5386631 var5518067))
(assert (= var5386627 var5386631))
(assert (= var212669 var5386627))
(assert (= temp684_227 #x0000000000000000))
(assert (= var212669 temp684_227))
(model-add temp684_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp684_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp684_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp684_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



