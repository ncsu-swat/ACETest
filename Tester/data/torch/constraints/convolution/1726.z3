(declare-fun temp11096_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11096_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11096_3 () (_ BitVec 64))
(declare-fun temp11096_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11096_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11096_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11096_7 () (_ BitVec 64))
(declare-fun temp11096_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11096_9 () (_ BitVec 64))
(declare-fun temp11096_10 () (_ BitVec 64))
(declare-fun temp11096_11 () (_ BitVec 64))
(declare-fun temp11096_12 () (_ BitVec 64))
(declare-fun temp11096_13 () (_ BitVec 64))
(declare-fun temp11096_14 () (_ BitVec 64))
(declare-fun temp11096_15 () (_ BitVec 64))
(declare-fun temp11096_16 () (_ BitVec 64))
(declare-fun temp11096_17 () (_ BitVec 64))
(declare-fun temp11096_18 () (_ BitVec 64))
(declare-fun temp11096_19 () (_ BitVec 64))
(declare-fun temp11096_20 () (_ BitVec 64))
(declare-fun temp11096_21 () (_ BitVec 64))
(declare-fun temp11096_22 () (_ BitVec 64))
(declare-fun temp11096_23 () (_ BitVec 64))
(declare-fun temp11096_24 () (_ BitVec 64))
(declare-fun temp11096_25 () (_ BitVec 64))
(declare-fun temp11096_26 () (_ BitVec 64))
(declare-fun temp11096_27 () (_ BitVec 64))
(declare-fun temp11096_28 () (_ BitVec 64))
(declare-fun temp11096_29 () (_ BitVec 64))
(declare-fun temp11096_30 () (_ BitVec 64))
(declare-fun temp11096_31 () (_ BitVec 64))
(declare-fun temp11096_32 () (_ BitVec 64))
(declare-fun temp11096_33 () (_ BitVec 64))
(declare-fun temp11096_34 () (_ BitVec 64))
(declare-fun temp11096_35 () (_ BitVec 64))
(declare-fun temp11096_36 () (_ BitVec 64))
(declare-fun temp11096_37 () (_ BitVec 64))
(declare-fun temp11096_38 () (_ BitVec 64))
(declare-fun temp11096_39 () (_ BitVec 64))
(declare-fun temp11096_40 () (_ BitVec 64))
(declare-fun temp11096_41 () (_ BitVec 64))
(declare-fun temp11096_42 () (_ BitVec 64))
(declare-fun temp11096_43 () (_ BitVec 64))
(declare-fun temp11096_44 () (_ BitVec 64))
(declare-fun temp11096_45 () (_ BitVec 64))
(declare-fun temp11096_46 () (_ BitVec 64))
(declare-fun temp11096_47 () (_ BitVec 64))
(declare-fun temp11096_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11096_49 () (_ BitVec 64))
(declare-fun temp11096_50 () (_ BitVec 64))
(declare-fun temp11096_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11096_52 () (_ BitVec 64))
(declare-fun temp11096_53 () (_ BitVec 64))
(declare-fun temp11096_54 () (_ BitVec 64))
(declare-fun temp11096_55 () (_ BitVec 64))
(declare-fun temp11096_56 () (_ BitVec 64))
(declare-fun temp11096_57 () (_ BitVec 64))
(declare-fun temp11096_58 () (_ BitVec 64))
(declare-fun temp11096_59 () (_ BitVec 64))
(declare-fun temp11096_60 () (_ BitVec 64))
(declare-fun temp11096_61 () (_ BitVec 64))
(declare-fun temp11096_62 () (_ BitVec 64))
(declare-fun temp11096_63 () (_ BitVec 64))
(declare-fun temp11096_64 () (_ BitVec 64))
(declare-fun temp11096_65 () (_ BitVec 64))
(declare-fun temp11096_66 () (_ BitVec 64))
(declare-fun temp11096_67 () (_ BitVec 64))
(declare-fun temp11096_68 () (_ BitVec 64))
(declare-fun temp11096_69 () (_ BitVec 64))
(declare-fun temp11096_70 () (_ BitVec 64))
(declare-fun temp11096_71 () (_ BitVec 64))
(declare-fun temp11096_72 () (_ BitVec 64))
(declare-fun temp11096_73 () (_ BitVec 64))
(declare-fun temp11096_74 () (_ BitVec 64))
(declare-fun temp11096_75 () (_ BitVec 64))
(declare-fun temp11096_76 () (_ BitVec 64))
(declare-fun temp11096_77 () (_ BitVec 64))
(declare-fun temp11096_78 () (_ BitVec 64))
(declare-fun temp11096_79 () (_ BitVec 64))
(declare-fun temp11096_80 () (_ BitVec 64))
(declare-fun temp11096_81 () (_ BitVec 64))
(declare-fun temp11096_82 () (_ BitVec 64))
(declare-fun temp11096_83 () (_ BitVec 64))
(declare-fun temp11096_84 () (_ BitVec 64))
(declare-fun temp11096_85 () (_ BitVec 64))
(declare-fun temp11096_86 () (_ BitVec 64))
(declare-fun temp11096_87 () (_ BitVec 64))
(declare-fun temp11096_88 () (_ BitVec 64))
(declare-fun temp11096_89 () (_ BitVec 64))
(declare-fun temp11096_90 () (_ BitVec 64))
(declare-fun temp11096_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11096_92 () (_ BitVec 64))
(declare-fun temp11096_93 () (_ BitVec 64))
(declare-fun temp11096_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11096_95 () (_ BitVec 64))
(declare-fun temp11096_96 () (_ BitVec 64))
(declare-fun temp11096_97 () (_ BitVec 64))
(declare-fun temp11096_98 () (_ BitVec 64))
(declare-fun temp11096_99 () (_ BitVec 64))
(declare-fun temp11096_100 () (_ BitVec 64))
(declare-fun temp11096_101 () (_ BitVec 64))
(declare-fun temp11096_102 () (_ BitVec 64))
(declare-fun temp11096_103 () (_ BitVec 64))
(declare-fun temp11096_104 () (_ BitVec 64))
(declare-fun temp11096_105 () (_ BitVec 64))
(declare-fun temp11096_106 () (_ BitVec 64))
(declare-fun temp11096_107 () (_ BitVec 64))
(declare-fun temp11096_108 () (_ BitVec 64))
(declare-fun temp11096_109 () (_ BitVec 64))
(declare-fun temp11096_110 () (_ BitVec 64))
(declare-fun temp11096_111 () (_ BitVec 64))
(declare-fun temp11096_112 () (_ BitVec 64))
(declare-fun temp11096_113 () (_ BitVec 64))
(declare-fun temp11096_114 () (_ BitVec 64))
(declare-fun temp11096_115 () (_ BitVec 64))
(declare-fun temp11096_116 () (_ BitVec 64))
(declare-fun temp11096_117 () (_ BitVec 64))
(declare-fun temp11096_118 () (_ BitVec 64))
(declare-fun temp11096_119 () (_ BitVec 64))
(declare-fun temp11096_120 () (_ BitVec 64))
(declare-fun temp11096_121 () (_ BitVec 64))
(declare-fun temp11096_122 () (_ BitVec 64))
(declare-fun temp11096_123 () (_ BitVec 64))
(declare-fun temp11096_124 () (_ BitVec 64))
(declare-fun temp11096_125 () (_ BitVec 64))
(declare-fun temp11096_126 () (_ BitVec 64))
(declare-fun temp11096_127 () (_ BitVec 64))
(declare-fun temp11096_128 () (_ BitVec 64))
(declare-fun temp11096_129 () (_ BitVec 64))
(declare-fun temp11096_130 () (_ BitVec 64))
(declare-fun temp11096_131 () (_ BitVec 64))
(declare-fun temp11096_132 () (_ BitVec 64))
(declare-fun temp11096_133 () (_ BitVec 64))
(declare-fun temp11096_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11096_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11096_136 () (_ BitVec 64))
(declare-fun temp11096_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11096_138 () (_ BitVec 64))
(declare-fun temp11096_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11096_140 () (_ BitVec 64))
(declare-fun temp11096_141 () (_ BitVec 64))
(declare-fun temp11096_142 () (_ BitVec 64))
(declare-fun temp11096_143 () (_ BitVec 64))
(declare-fun temp11096_144 () (_ BitVec 64))
(declare-fun temp11096_145 () (_ BitVec 64))
(declare-fun temp11096_146 () (_ BitVec 64))
(declare-fun temp11096_147 () (_ BitVec 64))
(declare-fun temp11096_148 () (_ BitVec 64))
(declare-fun temp11096_149 () (_ BitVec 64))
(declare-fun temp11096_150 () (_ BitVec 64))
(declare-fun temp11096_151 () (_ BitVec 64))
(declare-fun temp11096_152 () (_ BitVec 64))
(declare-fun temp11096_153 () (_ BitVec 64))
(declare-fun temp11096_154 () (_ BitVec 64))
(declare-fun temp11096_155 () (_ BitVec 64))
(declare-fun temp11096_157 () (_ BitVec 64))
(declare-fun temp11096_158 () (_ BitVec 64))
(declare-fun temp11096_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11096_159 () (_ BitVec 64))
(declare-fun temp11096_160 () (_ BitVec 64))
(declare-fun temp11096_162 () (_ BitVec 64))
(declare-fun temp11096_163 () (_ BitVec 64))
(declare-fun temp11096_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11096_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11096_165 () (_ BitVec 64))
(declare-fun temp11096_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11096_167 () (_ BitVec 64))
(declare-fun temp11096_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11096_169 () (_ BitVec 64))
(declare-fun temp11096_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11096_171 () (_ BitVec 64))
(declare-fun temp11096_172 () (_ BitVec 64))
(declare-fun temp11096_173 () (_ BitVec 64))
(declare-fun temp11096_174 () (_ BitVec 64))
(declare-fun temp11096_175 () (_ BitVec 64))
(declare-fun temp11096_176 () (_ BitVec 64))
(declare-fun temp11096_177 () (_ BitVec 64))
(declare-fun temp11096_178 () (_ BitVec 64))
(declare-fun temp11096_179 () (_ BitVec 64))
(declare-fun temp11096_180 () (_ BitVec 64))
(declare-fun temp11096_181 () (_ BitVec 64))
(declare-fun temp11096_182 () (_ BitVec 64))
(declare-fun temp11096_183 () (_ BitVec 64))
(declare-fun temp11096_184 () (_ BitVec 64))
(declare-fun temp11096_185 () (_ BitVec 64))
(declare-fun temp11096_186 () (_ BitVec 64))
(declare-fun temp11096_187 () (_ BitVec 64))
(declare-fun temp11096_188 () (_ BitVec 64))
(declare-fun temp11096_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11096_190 () (_ BitVec 64))
(declare-fun temp11096_192 () (_ BitVec 64))
(declare-fun temp11096_193 () (_ BitVec 64))
(declare-fun temp11096_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11096_194 () (_ BitVec 64))
(declare-fun temp11096_195 () (_ BitVec 64))
(declare-fun temp11096_197 () (_ BitVec 64))
(declare-fun temp11096_198 () (_ BitVec 64))
(declare-fun temp11096_196 () (_ BitVec 64))
(declare-fun temp11096_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11096_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11096_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11096_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11096_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11096_204 () (_ BitVec 64))
(declare-fun temp11096_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11096_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11096_207 () (_ BitVec 64))
(declare-fun temp11096_208 () (_ BitVec 64))
(declare-fun temp11096_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11096_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11096_211 () (_ BitVec 64))
(declare-fun temp11096_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11096_213 () (_ BitVec 64))
(declare-fun temp11096_214 () (_ BitVec 64))
(declare-fun temp11096_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11096_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11096_217 () (_ BitVec 64))
(declare-fun temp11096_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11096_219 () (_ BitVec 64))
(declare-fun var4404867 () (_ BitVec 64))
(declare-fun var4404869 () (_ BitVec 64))
(declare-fun var4470412 () (_ BitVec 64))
(declare-fun var4470413 () (_ BitVec 64))
(declare-fun var4470426 () (_ BitVec 64))
(declare-fun var4470428 () (_ BitVec 64))
(declare-fun temp11096_220 () (_ BitVec 64))
(declare-fun var4470453 () (_ BitVec 64))
(declare-fun var4470455 () (_ BitVec 64))
(declare-fun var4591443 () (_ BitVec 64))
(declare-fun temp11096_221 () (_ BitVec 64))
(assert (= temp11096_1 #x0000000000000001))
(assert (= var77203 temp11096_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11096_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11096_2)))
(assert (= temp11096_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11096_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11096_4 #x0000000000000000))
(assert (= var210941 temp11096_4))
(assert (= temp11096_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11096_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11096_6 #x0000000000000000))
(assert (= var210986 temp11096_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11096_7 #x0000000000000000))
(assert (= temp11096_8 temp11096_7))
(assert (= temp11096_9 (select ARGNAME_padding_NAMEEND_VAL temp11096_8)))
(assert (= temp11096_10 #x0000000000000001))
(assert (= temp11096_11 temp11096_10))
(assert (= temp11096_12 (select ARGNAME_padding_NAMEEND_VAL temp11096_11)))
(assert (= temp11096_13 #x0000000000000002))
(assert (= temp11096_14 temp11096_13))
(assert (= temp11096_15 (select ARGNAME_padding_NAMEEND_VAL temp11096_14)))
(assert (= temp11096_16 #x0000000000000003))
(assert (= temp11096_17 temp11096_16))
(assert (= temp11096_18 (select ARGNAME_padding_NAMEEND_VAL temp11096_17)))
(assert (= temp11096_19 #x0000000000000004))
(assert (= temp11096_20 temp11096_19))
(assert (= temp11096_21 (select ARGNAME_padding_NAMEEND_VAL temp11096_20)))
(assert (= temp11096_22 #x0000000000000005))
(assert (= temp11096_23 temp11096_22))
(assert (= temp11096_24 (select ARGNAME_padding_NAMEEND_VAL temp11096_23)))
(assert (= temp11096_25 #x0000000000000000))
(assert (= temp11096_26 #x0000000000000000))
(assert (= temp11096_27 temp11096_26))
(assert (= temp11096_28 (select ARGNAME_padding_NAMEEND_VAL temp11096_27)))
(assert (= temp11096_29 #x0000000000000000))
(assert (= temp11096_30 #x0000000000000001))
(assert (= temp11096_31 temp11096_30))
(assert (= temp11096_32 (select ARGNAME_padding_NAMEEND_VAL temp11096_31)))
(assert (= temp11096_33 #x0000000000000000))
(assert (= temp11096_34 #x0000000000000002))
(assert (= temp11096_35 temp11096_34))
(assert (= temp11096_36 (select ARGNAME_padding_NAMEEND_VAL temp11096_35)))
(assert (= temp11096_37 #x0000000000000000))
(assert (= temp11096_38 #x0000000000000003))
(assert (= temp11096_39 temp11096_38))
(assert (= temp11096_40 (select ARGNAME_padding_NAMEEND_VAL temp11096_39)))
(assert (= temp11096_41 #x0000000000000000))
(assert (= temp11096_42 #x0000000000000004))
(assert (= temp11096_43 temp11096_42))
(assert (= temp11096_44 (select ARGNAME_padding_NAMEEND_VAL temp11096_43)))
(assert (= temp11096_45 #x0000000000000000))
(assert (= temp11096_46 #x0000000000000005))
(assert (= temp11096_47 temp11096_46))
(assert (= temp11096_48 (select ARGNAME_padding_NAMEEND_VAL temp11096_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11096_28 temp11096_25)
             (bvslt temp11096_32 temp11096_29)
             (bvslt temp11096_36 temp11096_33)
             (bvslt temp11096_40 temp11096_37)
             (bvslt temp11096_44 temp11096_41)
             (bvslt temp11096_48 temp11096_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11096_49 #x0000000000000000))
(assert (= var1191714 temp11096_49))
(assert (= temp11096_50 #x0000000000000000))
(assert (= temp11096_51 temp11096_50))
(assert (= temp11096_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11096_51)))
(assert (= temp11096_53 #x0000000000000001))
(assert (= temp11096_54 temp11096_53))
(assert (= temp11096_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11096_54)))
(assert (= temp11096_56 #x0000000000000002))
(assert (= temp11096_57 temp11096_56))
(assert (= temp11096_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11096_57)))
(assert (= temp11096_59 #x0000000000000003))
(assert (= temp11096_60 temp11096_59))
(assert (= temp11096_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11096_60)))
(assert (= temp11096_62 #x0000000000000004))
(assert (= temp11096_63 temp11096_62))
(assert (= temp11096_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11096_63)))
(assert (= temp11096_65 #x0000000000000005))
(assert (= temp11096_66 temp11096_65))
(assert (= temp11096_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11096_66)))
(assert (= temp11096_68 #x0000000000000000))
(assert (= temp11096_69 #x0000000000000000))
(assert (= temp11096_70 temp11096_69))
(assert (= temp11096_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11096_70)))
(assert (= temp11096_72 #x0000000000000000))
(assert (= temp11096_73 #x0000000000000001))
(assert (= temp11096_74 temp11096_73))
(assert (= temp11096_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11096_74)))
(assert (= temp11096_76 #x0000000000000000))
(assert (= temp11096_77 #x0000000000000002))
(assert (= temp11096_78 temp11096_77))
(assert (= temp11096_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11096_78)))
(assert (= temp11096_80 #x0000000000000000))
(assert (= temp11096_81 #x0000000000000003))
(assert (= temp11096_82 temp11096_81))
(assert (= temp11096_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11096_82)))
(assert (= temp11096_84 #x0000000000000000))
(assert (= temp11096_85 #x0000000000000004))
(assert (= temp11096_86 temp11096_85))
(assert (= temp11096_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11096_86)))
(assert (= temp11096_88 #x0000000000000000))
(assert (= temp11096_89 #x0000000000000005))
(assert (= temp11096_90 temp11096_89))
(assert (= temp11096_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11096_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11096_71 temp11096_68)
             (bvslt temp11096_75 temp11096_72)
             (bvslt temp11096_79 temp11096_76)
             (bvslt temp11096_83 temp11096_80)
             (bvslt temp11096_87 temp11096_84)
             (bvslt temp11096_91 temp11096_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11096_92 #x0000000000000000))
(assert (= var1191725 temp11096_92))
(assert (= temp11096_93 #x0000000000000000))
(assert (= temp11096_94 temp11096_93))
(assert (= temp11096_95 (select ARGNAME_stride_NAMEEND_VAL temp11096_94)))
(assert (= temp11096_96 #x0000000000000001))
(assert (= temp11096_97 temp11096_96))
(assert (= temp11096_98 (select ARGNAME_stride_NAMEEND_VAL temp11096_97)))
(assert (= temp11096_99 #x0000000000000002))
(assert (= temp11096_100 temp11096_99))
(assert (= temp11096_101 (select ARGNAME_stride_NAMEEND_VAL temp11096_100)))
(assert (= temp11096_102 #x0000000000000003))
(assert (= temp11096_103 temp11096_102))
(assert (= temp11096_104 (select ARGNAME_stride_NAMEEND_VAL temp11096_103)))
(assert (= temp11096_105 #x0000000000000004))
(assert (= temp11096_106 temp11096_105))
(assert (= temp11096_107 (select ARGNAME_stride_NAMEEND_VAL temp11096_106)))
(assert (= temp11096_108 #x0000000000000005))
(assert (= temp11096_109 temp11096_108))
(assert (= temp11096_110 (select ARGNAME_stride_NAMEEND_VAL temp11096_109)))
(assert (= temp11096_111 #x0000000000000000))
(assert (= temp11096_112 #x0000000000000000))
(assert (= temp11096_113 temp11096_112))
(assert (= temp11096_114 (select ARGNAME_stride_NAMEEND_VAL temp11096_113)))
(assert (= temp11096_115 #x0000000000000000))
(assert (= temp11096_116 #x0000000000000001))
(assert (= temp11096_117 temp11096_116))
(assert (= temp11096_118 (select ARGNAME_stride_NAMEEND_VAL temp11096_117)))
(assert (= temp11096_119 #x0000000000000000))
(assert (= temp11096_120 #x0000000000000002))
(assert (= temp11096_121 temp11096_120))
(assert (= temp11096_122 (select ARGNAME_stride_NAMEEND_VAL temp11096_121)))
(assert (= temp11096_123 #x0000000000000000))
(assert (= temp11096_124 #x0000000000000003))
(assert (= temp11096_125 temp11096_124))
(assert (= temp11096_126 (select ARGNAME_stride_NAMEEND_VAL temp11096_125)))
(assert (= temp11096_127 #x0000000000000000))
(assert (= temp11096_128 #x0000000000000004))
(assert (= temp11096_129 temp11096_128))
(assert (= temp11096_130 (select ARGNAME_stride_NAMEEND_VAL temp11096_129)))
(assert (= temp11096_131 #x0000000000000000))
(assert (= temp11096_132 #x0000000000000005))
(assert (= temp11096_133 temp11096_132))
(assert (= temp11096_134 (select ARGNAME_stride_NAMEEND_VAL temp11096_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11096_114 temp11096_111)
             (bvsle temp11096_118 temp11096_115)
             (bvsle temp11096_122 temp11096_119)
             (bvsle temp11096_126 temp11096_123)
             (bvsle temp11096_130 temp11096_127)
             (bvsle temp11096_134 temp11096_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11096_135 #x0000000000000000))
(assert (= var1191735 temp11096_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11096_136 #x0000000000000001))
(assert (= var1191747 temp11096_136))
(assert (= temp11096_137 #x0000000000000000))
(assert (= var1179826 temp11096_137))
(assert (= temp11096_138 #x0000000000000000))
(assert (= temp11096_139 temp11096_138))
(assert (= temp11096_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11096_139)))
(assert (= temp11096_141 #x0000000000000001))
(assert (= temp11096_142 temp11096_141))
(assert (= temp11096_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11096_142)))
(assert (= temp11096_144 #x0000000000000002))
(assert (= temp11096_145 temp11096_144))
(assert (= temp11096_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11096_145)))
(assert (= temp11096_147 #x0000000000000003))
(assert (= temp11096_148 temp11096_147))
(assert (= temp11096_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11096_148)))
(assert (= temp11096_150 #x0000000000000004))
(assert (= temp11096_151 temp11096_150))
(assert (= temp11096_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11096_151)))
(assert (= temp11096_153 #x0000000000000005))
(assert (= temp11096_154 temp11096_153))
(assert (= temp11096_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11096_154)))
(assert (= temp11096_157 var1179826))
(assert (= temp11096_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11096_157)))
(assert (= temp11096_156 temp11096_158))
(assert (= var1191780
   (ite (bvslt temp11096_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11096_159 #x0000000000000000))
(assert (= var1191780 temp11096_159))
(assert (= temp11096_160 #x0000000000000000))
(assert (= var1179826 temp11096_160))
(assert (= temp11096_162 var1179826))
(assert (= temp11096_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11096_162)))
(assert (= temp11096_161 temp11096_163))
(assert (= var1191802 (bvsmod temp11096_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11096_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11096_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11096_165 #x0000000000000001))
(assert (= var1191803 temp11096_165))
(assert (= temp11096_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11096_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11096_167 #x0000000000000001))
(assert (= var1191823 temp11096_167))
(assert (= temp11096_168 #x0000000000000001))
(assert (= var1180714 temp11096_168))
(assert (= temp11096_169 #x0000000000000000))
(assert (= temp11096_170 temp11096_169))
(assert (= temp11096_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11096_170)))
(assert (= temp11096_172 #x0000000000000001))
(assert (= temp11096_173 temp11096_172))
(assert (= temp11096_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11096_173)))
(assert (= temp11096_175 #x0000000000000002))
(assert (= temp11096_176 temp11096_175))
(assert (= temp11096_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11096_176)))
(assert (= temp11096_178 #x0000000000000003))
(assert (= temp11096_179 temp11096_178))
(assert (= temp11096_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11096_179)))
(assert (= temp11096_181 #x0000000000000004))
(assert (= temp11096_182 temp11096_181))
(assert (= temp11096_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11096_182)))
(assert (= temp11096_184 #x0000000000000005))
(assert (= temp11096_185 temp11096_184))
(assert (= temp11096_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11096_185)))
(assert (= temp11096_187 #x0000000000000000))
(assert (= temp11096_188
   (ite (bvslt var1180714 temp11096_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11096_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11096_188)))
(assert (= var1191831 temp11096_189))
(assert (bvslt (ite (bvslt var1180714 temp11096_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11096_190 #x0000000000000001))
(assert (= var1180714 temp11096_190))
(assert (= temp11096_192 var1180714))
(assert (= temp11096_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11096_192)))
(assert (= temp11096_191 temp11096_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11096_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11096_194 #x0000000000000001))
(assert (= var1191836 temp11096_194))
(assert (= temp11096_195 #x0000000000000000))
(assert (= var1179826 temp11096_195))
(assert (= temp11096_197 var1179826))
(assert (= temp11096_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11096_197)))
(assert (= temp11096_196 temp11096_198))
(assert (= temp11096_199 #x0000000000000002))
(assert (= var1586025 temp11096_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11096_200 #x0000000000000001))
(assert (= var1191993 temp11096_200))
(assert (= temp11096_201 #x0000000000000001))
(assert (= var2700303 temp11096_201))
(assert (= temp11096_202 #x0000000000000001))
(assert (= var2962447 temp11096_202))
(assert (= temp11096_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11096_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11096_204 #x0000000000000001))
(assert (= var211058 temp11096_204))
(assert (= temp11096_205 #x0000000000000001))
(assert (= var211188 temp11096_205))
(assert (= var3879401 var211188))
(assert (= temp11096_206 #x0000000000000000))
(assert (= var3866802 temp11096_206))
(assert (= temp11096_207 #x0000000000000000))
(assert (= temp11096_208
   (ite (bvslt var3866802 temp11096_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11096_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11096_208)))
(assert (= var3879420 temp11096_209))
(assert (bvslt (ite (bvslt var3866802 temp11096_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11096_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11096_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11096_211 #x0000000000000000))
(assert (= var3879421 temp11096_211))
(assert (= temp11096_212 #x0000000000000001))
(assert (= var3867690 temp11096_212))
(assert (= temp11096_213 #x0000000000000000))
(assert (= temp11096_214
   (ite (bvslt var3867690 temp11096_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11096_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11096_214)))
(assert (= var3879423 temp11096_215))
(assert (bvslt (ite (bvslt var3867690 temp11096_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11096_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11096_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11096_217 #x0000000000000001))
(assert (= var3879424 temp11096_217))
(assert (= temp11096_218 #x0000000000000000))
(assert (= var4133117 temp11096_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11096_219 #x0000000000000002))
(assert (= var4404867 temp11096_219))
(assert (= var4404869 (bvsub ARGNAME_weight_NAMEEND_DIM var4404867)))
(assert (= var4470412 var4404867))
(assert (= var4470413 var4404869))
(assert (= var4470426 (bvadd var4470413 var4470412)))
(assert (= var4470428
   (ite (bvsgt var4470426 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11096_220 #x0000000000000000))
(assert (= var4470428 temp11096_220))
(assert (= var4470453 var4470412))
(assert (= var4470455 var4470413))
(assert (= var4591443 var4470455))
(assert (= temp11096_221 #x0000000000000001))
(assert (= var211058 temp11096_221))
(model-add temp11096_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11096_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11096_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11096_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






