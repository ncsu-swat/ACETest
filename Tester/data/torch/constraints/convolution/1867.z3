(declare-fun temp11348_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11348_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11348_3 () (_ BitVec 64))
(declare-fun temp11348_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11348_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11348_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11348_7 () (_ BitVec 64))
(declare-fun temp11348_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11348_9 () (_ BitVec 64))
(declare-fun temp11348_10 () (_ BitVec 64))
(declare-fun temp11348_11 () (_ BitVec 64))
(declare-fun temp11348_12 () (_ BitVec 64))
(declare-fun temp11348_13 () (_ BitVec 64))
(declare-fun temp11348_14 () (_ BitVec 64))
(declare-fun temp11348_15 () (_ BitVec 64))
(declare-fun temp11348_16 () (_ BitVec 64))
(declare-fun temp11348_17 () (_ BitVec 64))
(declare-fun temp11348_18 () (_ BitVec 64))
(declare-fun temp11348_19 () (_ BitVec 64))
(declare-fun temp11348_20 () (_ BitVec 64))
(declare-fun temp11348_21 () (_ BitVec 64))
(declare-fun temp11348_22 () (_ BitVec 64))
(declare-fun temp11348_23 () (_ BitVec 64))
(declare-fun temp11348_24 () (_ BitVec 64))
(declare-fun temp11348_25 () (_ BitVec 64))
(declare-fun temp11348_26 () (_ BitVec 64))
(declare-fun temp11348_27 () (_ BitVec 64))
(declare-fun temp11348_28 () (_ BitVec 64))
(declare-fun temp11348_29 () (_ BitVec 64))
(declare-fun temp11348_30 () (_ BitVec 64))
(declare-fun temp11348_31 () (_ BitVec 64))
(declare-fun temp11348_32 () (_ BitVec 64))
(declare-fun temp11348_33 () (_ BitVec 64))
(declare-fun temp11348_34 () (_ BitVec 64))
(declare-fun temp11348_35 () (_ BitVec 64))
(declare-fun temp11348_36 () (_ BitVec 64))
(declare-fun temp11348_37 () (_ BitVec 64))
(declare-fun temp11348_38 () (_ BitVec 64))
(declare-fun temp11348_39 () (_ BitVec 64))
(declare-fun temp11348_40 () (_ BitVec 64))
(declare-fun temp11348_41 () (_ BitVec 64))
(declare-fun temp11348_42 () (_ BitVec 64))
(declare-fun temp11348_43 () (_ BitVec 64))
(declare-fun temp11348_44 () (_ BitVec 64))
(declare-fun temp11348_45 () (_ BitVec 64))
(declare-fun temp11348_46 () (_ BitVec 64))
(declare-fun temp11348_47 () (_ BitVec 64))
(declare-fun temp11348_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11348_49 () (_ BitVec 64))
(declare-fun temp11348_50 () (_ BitVec 64))
(declare-fun temp11348_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11348_52 () (_ BitVec 64))
(declare-fun temp11348_53 () (_ BitVec 64))
(declare-fun temp11348_54 () (_ BitVec 64))
(declare-fun temp11348_55 () (_ BitVec 64))
(declare-fun temp11348_56 () (_ BitVec 64))
(declare-fun temp11348_57 () (_ BitVec 64))
(declare-fun temp11348_58 () (_ BitVec 64))
(declare-fun temp11348_59 () (_ BitVec 64))
(declare-fun temp11348_60 () (_ BitVec 64))
(declare-fun temp11348_61 () (_ BitVec 64))
(declare-fun temp11348_62 () (_ BitVec 64))
(declare-fun temp11348_63 () (_ BitVec 64))
(declare-fun temp11348_64 () (_ BitVec 64))
(declare-fun temp11348_65 () (_ BitVec 64))
(declare-fun temp11348_66 () (_ BitVec 64))
(declare-fun temp11348_67 () (_ BitVec 64))
(declare-fun temp11348_68 () (_ BitVec 64))
(declare-fun temp11348_69 () (_ BitVec 64))
(declare-fun temp11348_70 () (_ BitVec 64))
(declare-fun temp11348_71 () (_ BitVec 64))
(declare-fun temp11348_72 () (_ BitVec 64))
(declare-fun temp11348_73 () (_ BitVec 64))
(declare-fun temp11348_74 () (_ BitVec 64))
(declare-fun temp11348_75 () (_ BitVec 64))
(declare-fun temp11348_76 () (_ BitVec 64))
(declare-fun temp11348_77 () (_ BitVec 64))
(declare-fun temp11348_78 () (_ BitVec 64))
(declare-fun temp11348_79 () (_ BitVec 64))
(declare-fun temp11348_80 () (_ BitVec 64))
(declare-fun temp11348_81 () (_ BitVec 64))
(declare-fun temp11348_82 () (_ BitVec 64))
(declare-fun temp11348_83 () (_ BitVec 64))
(declare-fun temp11348_84 () (_ BitVec 64))
(declare-fun temp11348_85 () (_ BitVec 64))
(declare-fun temp11348_86 () (_ BitVec 64))
(declare-fun temp11348_87 () (_ BitVec 64))
(declare-fun temp11348_88 () (_ BitVec 64))
(declare-fun temp11348_89 () (_ BitVec 64))
(declare-fun temp11348_90 () (_ BitVec 64))
(declare-fun temp11348_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11348_92 () (_ BitVec 64))
(declare-fun temp11348_93 () (_ BitVec 64))
(declare-fun temp11348_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11348_95 () (_ BitVec 64))
(declare-fun temp11348_96 () (_ BitVec 64))
(declare-fun temp11348_97 () (_ BitVec 64))
(declare-fun temp11348_98 () (_ BitVec 64))
(declare-fun temp11348_99 () (_ BitVec 64))
(declare-fun temp11348_100 () (_ BitVec 64))
(declare-fun temp11348_101 () (_ BitVec 64))
(declare-fun temp11348_102 () (_ BitVec 64))
(declare-fun temp11348_103 () (_ BitVec 64))
(declare-fun temp11348_104 () (_ BitVec 64))
(declare-fun temp11348_105 () (_ BitVec 64))
(declare-fun temp11348_106 () (_ BitVec 64))
(declare-fun temp11348_107 () (_ BitVec 64))
(declare-fun temp11348_108 () (_ BitVec 64))
(declare-fun temp11348_109 () (_ BitVec 64))
(declare-fun temp11348_110 () (_ BitVec 64))
(declare-fun temp11348_111 () (_ BitVec 64))
(declare-fun temp11348_112 () (_ BitVec 64))
(declare-fun temp11348_113 () (_ BitVec 64))
(declare-fun temp11348_114 () (_ BitVec 64))
(declare-fun temp11348_115 () (_ BitVec 64))
(declare-fun temp11348_116 () (_ BitVec 64))
(declare-fun temp11348_117 () (_ BitVec 64))
(declare-fun temp11348_118 () (_ BitVec 64))
(declare-fun temp11348_119 () (_ BitVec 64))
(declare-fun temp11348_120 () (_ BitVec 64))
(declare-fun temp11348_121 () (_ BitVec 64))
(declare-fun temp11348_122 () (_ BitVec 64))
(declare-fun temp11348_123 () (_ BitVec 64))
(declare-fun temp11348_124 () (_ BitVec 64))
(declare-fun temp11348_125 () (_ BitVec 64))
(declare-fun temp11348_126 () (_ BitVec 64))
(declare-fun temp11348_127 () (_ BitVec 64))
(declare-fun temp11348_128 () (_ BitVec 64))
(declare-fun temp11348_129 () (_ BitVec 64))
(declare-fun temp11348_130 () (_ BitVec 64))
(declare-fun temp11348_131 () (_ BitVec 64))
(declare-fun temp11348_132 () (_ BitVec 64))
(declare-fun temp11348_133 () (_ BitVec 64))
(declare-fun temp11348_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11348_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11348_136 () (_ BitVec 64))
(declare-fun temp11348_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11348_138 () (_ BitVec 64))
(declare-fun temp11348_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11348_140 () (_ BitVec 64))
(declare-fun temp11348_141 () (_ BitVec 64))
(declare-fun temp11348_142 () (_ BitVec 64))
(declare-fun temp11348_143 () (_ BitVec 64))
(declare-fun temp11348_144 () (_ BitVec 64))
(declare-fun temp11348_145 () (_ BitVec 64))
(declare-fun temp11348_146 () (_ BitVec 64))
(declare-fun temp11348_147 () (_ BitVec 64))
(declare-fun temp11348_148 () (_ BitVec 64))
(declare-fun temp11348_149 () (_ BitVec 64))
(declare-fun temp11348_150 () (_ BitVec 64))
(declare-fun temp11348_151 () (_ BitVec 64))
(declare-fun temp11348_152 () (_ BitVec 64))
(declare-fun temp11348_153 () (_ BitVec 64))
(declare-fun temp11348_154 () (_ BitVec 64))
(declare-fun temp11348_155 () (_ BitVec 64))
(declare-fun temp11348_157 () (_ BitVec 64))
(declare-fun temp11348_158 () (_ BitVec 64))
(declare-fun temp11348_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11348_159 () (_ BitVec 64))
(declare-fun temp11348_160 () (_ BitVec 64))
(declare-fun temp11348_162 () (_ BitVec 64))
(declare-fun temp11348_163 () (_ BitVec 64))
(declare-fun temp11348_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11348_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11348_165 () (_ BitVec 64))
(declare-fun temp11348_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11348_167 () (_ BitVec 64))
(declare-fun temp11348_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11348_169 () (_ BitVec 64))
(declare-fun temp11348_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11348_171 () (_ BitVec 64))
(declare-fun temp11348_172 () (_ BitVec 64))
(declare-fun temp11348_173 () (_ BitVec 64))
(declare-fun temp11348_174 () (_ BitVec 64))
(declare-fun temp11348_175 () (_ BitVec 64))
(declare-fun temp11348_176 () (_ BitVec 64))
(declare-fun temp11348_177 () (_ BitVec 64))
(declare-fun temp11348_178 () (_ BitVec 64))
(declare-fun temp11348_179 () (_ BitVec 64))
(declare-fun temp11348_180 () (_ BitVec 64))
(declare-fun temp11348_181 () (_ BitVec 64))
(declare-fun temp11348_182 () (_ BitVec 64))
(declare-fun temp11348_183 () (_ BitVec 64))
(declare-fun temp11348_184 () (_ BitVec 64))
(declare-fun temp11348_185 () (_ BitVec 64))
(declare-fun temp11348_186 () (_ BitVec 64))
(declare-fun temp11348_187 () (_ BitVec 64))
(declare-fun temp11348_188 () (_ BitVec 64))
(declare-fun temp11348_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11348_190 () (_ BitVec 64))
(declare-fun temp11348_192 () (_ BitVec 64))
(declare-fun temp11348_193 () (_ BitVec 64))
(declare-fun temp11348_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11348_194 () (_ BitVec 64))
(declare-fun temp11348_195 () (_ BitVec 64))
(declare-fun temp11348_197 () (_ BitVec 64))
(declare-fun temp11348_198 () (_ BitVec 64))
(declare-fun temp11348_196 () (_ BitVec 64))
(declare-fun temp11348_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11348_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11348_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11348_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11348_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11348_204 () (_ BitVec 64))
(declare-fun temp11348_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11348_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11348_207 () (_ BitVec 64))
(declare-fun temp11348_208 () (_ BitVec 64))
(declare-fun temp11348_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11348_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11348_211 () (_ BitVec 64))
(declare-fun temp11348_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11348_213 () (_ BitVec 64))
(declare-fun temp11348_214 () (_ BitVec 64))
(declare-fun temp11348_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11348_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11348_217 () (_ BitVec 64))
(declare-fun temp11348_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11348_219 () (_ BitVec 64))
(declare-fun var4404867 () (_ BitVec 64))
(declare-fun var4404869 () (_ BitVec 64))
(declare-fun var4470412 () (_ BitVec 64))
(declare-fun var4470413 () (_ BitVec 64))
(declare-fun var4470426 () (_ BitVec 64))
(declare-fun var4470428 () (_ BitVec 64))
(declare-fun temp11348_220 () (_ BitVec 64))
(declare-fun var4470453 () (_ BitVec 64))
(declare-fun var4470455 () (_ BitVec 64))
(declare-fun var4591443 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211962 () (_ BitVec 64))
(declare-fun temp11348_221 () (_ BitVec 64))
(declare-fun var211963 () (_ BitVec 64))
(declare-fun temp11348_222 () (_ BitVec 64))
(declare-fun temp11348_223 () (_ BitVec 64))
(declare-fun var6632212 () (_ BitVec 64))
(declare-fun var6632179 () (_ BitVec 64))
(declare-fun var6500743 () (_ BitVec 64))
(declare-fun var6500739 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp11348_224 () (_ BitVec 64))
(assert (= temp11348_1 #x0000000000000001))
(assert (= var77203 temp11348_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11348_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11348_2)))
(assert (= temp11348_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11348_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11348_4 #x0000000000000000))
(assert (= var210941 temp11348_4))
(assert (= temp11348_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11348_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11348_6 #x0000000000000000))
(assert (= var210986 temp11348_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11348_7 #x0000000000000000))
(assert (= temp11348_8 temp11348_7))
(assert (= temp11348_9 (select ARGNAME_padding_NAMEEND_VAL temp11348_8)))
(assert (= temp11348_10 #x0000000000000001))
(assert (= temp11348_11 temp11348_10))
(assert (= temp11348_12 (select ARGNAME_padding_NAMEEND_VAL temp11348_11)))
(assert (= temp11348_13 #x0000000000000002))
(assert (= temp11348_14 temp11348_13))
(assert (= temp11348_15 (select ARGNAME_padding_NAMEEND_VAL temp11348_14)))
(assert (= temp11348_16 #x0000000000000003))
(assert (= temp11348_17 temp11348_16))
(assert (= temp11348_18 (select ARGNAME_padding_NAMEEND_VAL temp11348_17)))
(assert (= temp11348_19 #x0000000000000004))
(assert (= temp11348_20 temp11348_19))
(assert (= temp11348_21 (select ARGNAME_padding_NAMEEND_VAL temp11348_20)))
(assert (= temp11348_22 #x0000000000000005))
(assert (= temp11348_23 temp11348_22))
(assert (= temp11348_24 (select ARGNAME_padding_NAMEEND_VAL temp11348_23)))
(assert (= temp11348_25 #x0000000000000000))
(assert (= temp11348_26 #x0000000000000000))
(assert (= temp11348_27 temp11348_26))
(assert (= temp11348_28 (select ARGNAME_padding_NAMEEND_VAL temp11348_27)))
(assert (= temp11348_29 #x0000000000000000))
(assert (= temp11348_30 #x0000000000000001))
(assert (= temp11348_31 temp11348_30))
(assert (= temp11348_32 (select ARGNAME_padding_NAMEEND_VAL temp11348_31)))
(assert (= temp11348_33 #x0000000000000000))
(assert (= temp11348_34 #x0000000000000002))
(assert (= temp11348_35 temp11348_34))
(assert (= temp11348_36 (select ARGNAME_padding_NAMEEND_VAL temp11348_35)))
(assert (= temp11348_37 #x0000000000000000))
(assert (= temp11348_38 #x0000000000000003))
(assert (= temp11348_39 temp11348_38))
(assert (= temp11348_40 (select ARGNAME_padding_NAMEEND_VAL temp11348_39)))
(assert (= temp11348_41 #x0000000000000000))
(assert (= temp11348_42 #x0000000000000004))
(assert (= temp11348_43 temp11348_42))
(assert (= temp11348_44 (select ARGNAME_padding_NAMEEND_VAL temp11348_43)))
(assert (= temp11348_45 #x0000000000000000))
(assert (= temp11348_46 #x0000000000000005))
(assert (= temp11348_47 temp11348_46))
(assert (= temp11348_48 (select ARGNAME_padding_NAMEEND_VAL temp11348_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11348_28 temp11348_25)
             (bvslt temp11348_32 temp11348_29)
             (bvslt temp11348_36 temp11348_33)
             (bvslt temp11348_40 temp11348_37)
             (bvslt temp11348_44 temp11348_41)
             (bvslt temp11348_48 temp11348_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11348_49 #x0000000000000000))
(assert (= var1191714 temp11348_49))
(assert (= temp11348_50 #x0000000000000000))
(assert (= temp11348_51 temp11348_50))
(assert (= temp11348_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11348_51)))
(assert (= temp11348_53 #x0000000000000001))
(assert (= temp11348_54 temp11348_53))
(assert (= temp11348_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11348_54)))
(assert (= temp11348_56 #x0000000000000002))
(assert (= temp11348_57 temp11348_56))
(assert (= temp11348_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11348_57)))
(assert (= temp11348_59 #x0000000000000003))
(assert (= temp11348_60 temp11348_59))
(assert (= temp11348_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11348_60)))
(assert (= temp11348_62 #x0000000000000004))
(assert (= temp11348_63 temp11348_62))
(assert (= temp11348_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11348_63)))
(assert (= temp11348_65 #x0000000000000005))
(assert (= temp11348_66 temp11348_65))
(assert (= temp11348_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11348_66)))
(assert (= temp11348_68 #x0000000000000000))
(assert (= temp11348_69 #x0000000000000000))
(assert (= temp11348_70 temp11348_69))
(assert (= temp11348_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11348_70)))
(assert (= temp11348_72 #x0000000000000000))
(assert (= temp11348_73 #x0000000000000001))
(assert (= temp11348_74 temp11348_73))
(assert (= temp11348_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11348_74)))
(assert (= temp11348_76 #x0000000000000000))
(assert (= temp11348_77 #x0000000000000002))
(assert (= temp11348_78 temp11348_77))
(assert (= temp11348_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11348_78)))
(assert (= temp11348_80 #x0000000000000000))
(assert (= temp11348_81 #x0000000000000003))
(assert (= temp11348_82 temp11348_81))
(assert (= temp11348_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11348_82)))
(assert (= temp11348_84 #x0000000000000000))
(assert (= temp11348_85 #x0000000000000004))
(assert (= temp11348_86 temp11348_85))
(assert (= temp11348_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11348_86)))
(assert (= temp11348_88 #x0000000000000000))
(assert (= temp11348_89 #x0000000000000005))
(assert (= temp11348_90 temp11348_89))
(assert (= temp11348_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11348_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11348_71 temp11348_68)
             (bvslt temp11348_75 temp11348_72)
             (bvslt temp11348_79 temp11348_76)
             (bvslt temp11348_83 temp11348_80)
             (bvslt temp11348_87 temp11348_84)
             (bvslt temp11348_91 temp11348_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11348_92 #x0000000000000000))
(assert (= var1191725 temp11348_92))
(assert (= temp11348_93 #x0000000000000000))
(assert (= temp11348_94 temp11348_93))
(assert (= temp11348_95 (select ARGNAME_stride_NAMEEND_VAL temp11348_94)))
(assert (= temp11348_96 #x0000000000000001))
(assert (= temp11348_97 temp11348_96))
(assert (= temp11348_98 (select ARGNAME_stride_NAMEEND_VAL temp11348_97)))
(assert (= temp11348_99 #x0000000000000002))
(assert (= temp11348_100 temp11348_99))
(assert (= temp11348_101 (select ARGNAME_stride_NAMEEND_VAL temp11348_100)))
(assert (= temp11348_102 #x0000000000000003))
(assert (= temp11348_103 temp11348_102))
(assert (= temp11348_104 (select ARGNAME_stride_NAMEEND_VAL temp11348_103)))
(assert (= temp11348_105 #x0000000000000004))
(assert (= temp11348_106 temp11348_105))
(assert (= temp11348_107 (select ARGNAME_stride_NAMEEND_VAL temp11348_106)))
(assert (= temp11348_108 #x0000000000000005))
(assert (= temp11348_109 temp11348_108))
(assert (= temp11348_110 (select ARGNAME_stride_NAMEEND_VAL temp11348_109)))
(assert (= temp11348_111 #x0000000000000000))
(assert (= temp11348_112 #x0000000000000000))
(assert (= temp11348_113 temp11348_112))
(assert (= temp11348_114 (select ARGNAME_stride_NAMEEND_VAL temp11348_113)))
(assert (= temp11348_115 #x0000000000000000))
(assert (= temp11348_116 #x0000000000000001))
(assert (= temp11348_117 temp11348_116))
(assert (= temp11348_118 (select ARGNAME_stride_NAMEEND_VAL temp11348_117)))
(assert (= temp11348_119 #x0000000000000000))
(assert (= temp11348_120 #x0000000000000002))
(assert (= temp11348_121 temp11348_120))
(assert (= temp11348_122 (select ARGNAME_stride_NAMEEND_VAL temp11348_121)))
(assert (= temp11348_123 #x0000000000000000))
(assert (= temp11348_124 #x0000000000000003))
(assert (= temp11348_125 temp11348_124))
(assert (= temp11348_126 (select ARGNAME_stride_NAMEEND_VAL temp11348_125)))
(assert (= temp11348_127 #x0000000000000000))
(assert (= temp11348_128 #x0000000000000004))
(assert (= temp11348_129 temp11348_128))
(assert (= temp11348_130 (select ARGNAME_stride_NAMEEND_VAL temp11348_129)))
(assert (= temp11348_131 #x0000000000000000))
(assert (= temp11348_132 #x0000000000000005))
(assert (= temp11348_133 temp11348_132))
(assert (= temp11348_134 (select ARGNAME_stride_NAMEEND_VAL temp11348_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11348_114 temp11348_111)
             (bvsle temp11348_118 temp11348_115)
             (bvsle temp11348_122 temp11348_119)
             (bvsle temp11348_126 temp11348_123)
             (bvsle temp11348_130 temp11348_127)
             (bvsle temp11348_134 temp11348_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11348_135 #x0000000000000000))
(assert (= var1191735 temp11348_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11348_136 #x0000000000000001))
(assert (= var1191747 temp11348_136))
(assert (= temp11348_137 #x0000000000000000))
(assert (= var1179826 temp11348_137))
(assert (= temp11348_138 #x0000000000000000))
(assert (= temp11348_139 temp11348_138))
(assert (= temp11348_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11348_139)))
(assert (= temp11348_141 #x0000000000000001))
(assert (= temp11348_142 temp11348_141))
(assert (= temp11348_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11348_142)))
(assert (= temp11348_144 #x0000000000000002))
(assert (= temp11348_145 temp11348_144))
(assert (= temp11348_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11348_145)))
(assert (= temp11348_147 #x0000000000000003))
(assert (= temp11348_148 temp11348_147))
(assert (= temp11348_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11348_148)))
(assert (= temp11348_150 #x0000000000000004))
(assert (= temp11348_151 temp11348_150))
(assert (= temp11348_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11348_151)))
(assert (= temp11348_153 #x0000000000000005))
(assert (= temp11348_154 temp11348_153))
(assert (= temp11348_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11348_154)))
(assert (= temp11348_157 var1179826))
(assert (= temp11348_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11348_157)))
(assert (= temp11348_156 temp11348_158))
(assert (= var1191780
   (ite (bvslt temp11348_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11348_159 #x0000000000000000))
(assert (= var1191780 temp11348_159))
(assert (= temp11348_160 #x0000000000000000))
(assert (= var1179826 temp11348_160))
(assert (= temp11348_162 var1179826))
(assert (= temp11348_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11348_162)))
(assert (= temp11348_161 temp11348_163))
(assert (= var1191802 (bvsmod temp11348_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11348_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11348_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11348_165 #x0000000000000001))
(assert (= var1191803 temp11348_165))
(assert (= temp11348_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11348_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11348_167 #x0000000000000001))
(assert (= var1191823 temp11348_167))
(assert (= temp11348_168 #x0000000000000001))
(assert (= var1180714 temp11348_168))
(assert (= temp11348_169 #x0000000000000000))
(assert (= temp11348_170 temp11348_169))
(assert (= temp11348_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11348_170)))
(assert (= temp11348_172 #x0000000000000001))
(assert (= temp11348_173 temp11348_172))
(assert (= temp11348_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11348_173)))
(assert (= temp11348_175 #x0000000000000002))
(assert (= temp11348_176 temp11348_175))
(assert (= temp11348_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11348_176)))
(assert (= temp11348_178 #x0000000000000003))
(assert (= temp11348_179 temp11348_178))
(assert (= temp11348_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11348_179)))
(assert (= temp11348_181 #x0000000000000004))
(assert (= temp11348_182 temp11348_181))
(assert (= temp11348_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11348_182)))
(assert (= temp11348_184 #x0000000000000005))
(assert (= temp11348_185 temp11348_184))
(assert (= temp11348_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11348_185)))
(assert (= temp11348_187 #x0000000000000000))
(assert (= temp11348_188
   (ite (bvslt var1180714 temp11348_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11348_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11348_188)))
(assert (= var1191831 temp11348_189))
(assert (bvslt (ite (bvslt var1180714 temp11348_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11348_190 #x0000000000000001))
(assert (= var1180714 temp11348_190))
(assert (= temp11348_192 var1180714))
(assert (= temp11348_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11348_192)))
(assert (= temp11348_191 temp11348_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11348_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11348_194 #x0000000000000001))
(assert (= var1191836 temp11348_194))
(assert (= temp11348_195 #x0000000000000000))
(assert (= var1179826 temp11348_195))
(assert (= temp11348_197 var1179826))
(assert (= temp11348_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11348_197)))
(assert (= temp11348_196 temp11348_198))
(assert (= temp11348_199 #x0000000000000002))
(assert (= var1586025 temp11348_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11348_200 #x0000000000000001))
(assert (= var1191993 temp11348_200))
(assert (= temp11348_201 #x0000000000000001))
(assert (= var2700303 temp11348_201))
(assert (= temp11348_202 #x0000000000000001))
(assert (= var2962447 temp11348_202))
(assert (= temp11348_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11348_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11348_204 #x0000000000000001))
(assert (= var211058 temp11348_204))
(assert (= temp11348_205 #x0000000000000001))
(assert (= var211188 temp11348_205))
(assert (= var3879401 var211188))
(assert (= temp11348_206 #x0000000000000000))
(assert (= var3866802 temp11348_206))
(assert (= temp11348_207 #x0000000000000000))
(assert (= temp11348_208
   (ite (bvslt var3866802 temp11348_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11348_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11348_208)))
(assert (= var3879420 temp11348_209))
(assert (bvslt (ite (bvslt var3866802 temp11348_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11348_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11348_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11348_211 #x0000000000000000))
(assert (= var3879421 temp11348_211))
(assert (= temp11348_212 #x0000000000000001))
(assert (= var3867690 temp11348_212))
(assert (= temp11348_213 #x0000000000000000))
(assert (= temp11348_214
   (ite (bvslt var3867690 temp11348_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11348_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11348_214)))
(assert (= var3879423 temp11348_215))
(assert (bvslt (ite (bvslt var3867690 temp11348_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11348_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11348_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11348_217 #x0000000000000001))
(assert (= var3879424 temp11348_217))
(assert (= temp11348_218 #x0000000000000000))
(assert (= var4133117 temp11348_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11348_219 #x0000000000000002))
(assert (= var4404867 temp11348_219))
(assert (= var4404869 (bvsub ARGNAME_weight_NAMEEND_DIM var4404867)))
(assert (= var4470412 var4404867))
(assert (= var4470413 var4404869))
(assert (= var4470426 (bvadd var4470413 var4470412)))
(assert (= var4470428
   (ite (bvsgt var4470426 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11348_220 #x0000000000000000))
(assert (= var4470428 temp11348_220))
(assert (= var4470453 var4470412))
(assert (= var4470455 var4470413))
(assert (= var4591443 var4470455))
(assert (= var4993424 var211201))
(assert (= var211962 var210913))
(assert (= temp11348_221 #x0000000000000000))
(assert (= var211963
   (ite (distinct var211962 temp11348_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11348_222 #x0000000000000001))
(assert (= var211058 temp11348_222))
(assert (= temp11348_223 #x0000000000000000))
(assert (= var6632212 temp11348_223))
(assert (= var6632179 var6632212))
(assert (= var6500743 var6632179))
(assert (= var6500739 var6500743))
(assert (= var212669 var6500739))
(assert (= temp11348_224 #x0000000000000000))
(assert (= var212669 temp11348_224))
(model-add temp11348_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11348_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11348_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11348_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




