(declare-fun temp841_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp841_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp841_3 () (_ BitVec 64))
(declare-fun temp841_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp841_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp841_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp841_7 () (_ BitVec 64))
(declare-fun temp841_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp841_9 () (_ BitVec 64))
(declare-fun temp841_10 () (_ BitVec 64))
(declare-fun temp841_11 () (_ BitVec 64))
(declare-fun temp841_12 () (_ BitVec 64))
(declare-fun temp841_13 () (_ BitVec 64))
(declare-fun temp841_14 () (_ BitVec 64))
(declare-fun temp841_15 () (_ BitVec 64))
(declare-fun temp841_16 () (_ BitVec 64))
(declare-fun temp841_17 () (_ BitVec 64))
(declare-fun temp841_18 () (_ BitVec 64))
(declare-fun temp841_19 () (_ BitVec 64))
(declare-fun temp841_20 () (_ BitVec 64))
(declare-fun temp841_21 () (_ BitVec 64))
(declare-fun temp841_22 () (_ BitVec 64))
(declare-fun temp841_23 () (_ BitVec 64))
(declare-fun temp841_24 () (_ BitVec 64))
(declare-fun temp841_25 () (_ BitVec 64))
(declare-fun temp841_26 () (_ BitVec 64))
(declare-fun temp841_27 () (_ BitVec 64))
(declare-fun temp841_28 () (_ BitVec 64))
(declare-fun temp841_29 () (_ BitVec 64))
(declare-fun temp841_30 () (_ BitVec 64))
(declare-fun temp841_31 () (_ BitVec 64))
(declare-fun temp841_32 () (_ BitVec 64))
(declare-fun temp841_33 () (_ BitVec 64))
(declare-fun temp841_34 () (_ BitVec 64))
(declare-fun temp841_35 () (_ BitVec 64))
(declare-fun temp841_36 () (_ BitVec 64))
(declare-fun temp841_37 () (_ BitVec 64))
(declare-fun temp841_38 () (_ BitVec 64))
(declare-fun temp841_39 () (_ BitVec 64))
(declare-fun temp841_40 () (_ BitVec 64))
(declare-fun temp841_41 () (_ BitVec 64))
(declare-fun temp841_42 () (_ BitVec 64))
(declare-fun temp841_43 () (_ BitVec 64))
(declare-fun temp841_44 () (_ BitVec 64))
(declare-fun temp841_45 () (_ BitVec 64))
(declare-fun temp841_46 () (_ BitVec 64))
(declare-fun temp841_47 () (_ BitVec 64))
(declare-fun temp841_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp841_49 () (_ BitVec 64))
(declare-fun temp841_50 () (_ BitVec 64))
(declare-fun temp841_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp841_52 () (_ BitVec 64))
(declare-fun temp841_53 () (_ BitVec 64))
(declare-fun temp841_54 () (_ BitVec 64))
(declare-fun temp841_55 () (_ BitVec 64))
(declare-fun temp841_56 () (_ BitVec 64))
(declare-fun temp841_57 () (_ BitVec 64))
(declare-fun temp841_58 () (_ BitVec 64))
(declare-fun temp841_59 () (_ BitVec 64))
(declare-fun temp841_60 () (_ BitVec 64))
(declare-fun temp841_61 () (_ BitVec 64))
(declare-fun temp841_62 () (_ BitVec 64))
(declare-fun temp841_63 () (_ BitVec 64))
(declare-fun temp841_64 () (_ BitVec 64))
(declare-fun temp841_65 () (_ BitVec 64))
(declare-fun temp841_66 () (_ BitVec 64))
(declare-fun temp841_67 () (_ BitVec 64))
(declare-fun temp841_68 () (_ BitVec 64))
(declare-fun temp841_69 () (_ BitVec 64))
(declare-fun temp841_70 () (_ BitVec 64))
(declare-fun temp841_71 () (_ BitVec 64))
(declare-fun temp841_72 () (_ BitVec 64))
(declare-fun temp841_73 () (_ BitVec 64))
(declare-fun temp841_74 () (_ BitVec 64))
(declare-fun temp841_75 () (_ BitVec 64))
(declare-fun temp841_76 () (_ BitVec 64))
(declare-fun temp841_77 () (_ BitVec 64))
(declare-fun temp841_78 () (_ BitVec 64))
(declare-fun temp841_79 () (_ BitVec 64))
(declare-fun temp841_80 () (_ BitVec 64))
(declare-fun temp841_81 () (_ BitVec 64))
(declare-fun temp841_82 () (_ BitVec 64))
(declare-fun temp841_83 () (_ BitVec 64))
(declare-fun temp841_84 () (_ BitVec 64))
(declare-fun temp841_85 () (_ BitVec 64))
(declare-fun temp841_86 () (_ BitVec 64))
(declare-fun temp841_87 () (_ BitVec 64))
(declare-fun temp841_88 () (_ BitVec 64))
(declare-fun temp841_89 () (_ BitVec 64))
(declare-fun temp841_90 () (_ BitVec 64))
(declare-fun temp841_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp841_92 () (_ BitVec 64))
(declare-fun temp841_93 () (_ BitVec 64))
(declare-fun temp841_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp841_95 () (_ BitVec 64))
(declare-fun temp841_96 () (_ BitVec 64))
(declare-fun temp841_97 () (_ BitVec 64))
(declare-fun temp841_98 () (_ BitVec 64))
(declare-fun temp841_99 () (_ BitVec 64))
(declare-fun temp841_100 () (_ BitVec 64))
(declare-fun temp841_101 () (_ BitVec 64))
(declare-fun temp841_102 () (_ BitVec 64))
(declare-fun temp841_103 () (_ BitVec 64))
(declare-fun temp841_104 () (_ BitVec 64))
(declare-fun temp841_105 () (_ BitVec 64))
(declare-fun temp841_106 () (_ BitVec 64))
(declare-fun temp841_107 () (_ BitVec 64))
(declare-fun temp841_108 () (_ BitVec 64))
(declare-fun temp841_109 () (_ BitVec 64))
(declare-fun temp841_110 () (_ BitVec 64))
(declare-fun temp841_111 () (_ BitVec 64))
(declare-fun temp841_112 () (_ BitVec 64))
(declare-fun temp841_113 () (_ BitVec 64))
(declare-fun temp841_114 () (_ BitVec 64))
(declare-fun temp841_115 () (_ BitVec 64))
(declare-fun temp841_116 () (_ BitVec 64))
(declare-fun temp841_117 () (_ BitVec 64))
(declare-fun temp841_118 () (_ BitVec 64))
(declare-fun temp841_119 () (_ BitVec 64))
(declare-fun temp841_120 () (_ BitVec 64))
(declare-fun temp841_121 () (_ BitVec 64))
(declare-fun temp841_122 () (_ BitVec 64))
(declare-fun temp841_123 () (_ BitVec 64))
(declare-fun temp841_124 () (_ BitVec 64))
(declare-fun temp841_125 () (_ BitVec 64))
(declare-fun temp841_126 () (_ BitVec 64))
(declare-fun temp841_127 () (_ BitVec 64))
(declare-fun temp841_128 () (_ BitVec 64))
(declare-fun temp841_129 () (_ BitVec 64))
(declare-fun temp841_130 () (_ BitVec 64))
(declare-fun temp841_131 () (_ BitVec 64))
(declare-fun temp841_132 () (_ BitVec 64))
(declare-fun temp841_133 () (_ BitVec 64))
(declare-fun temp841_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp841_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp841_136 () (_ BitVec 64))
(declare-fun temp841_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp841_138 () (_ BitVec 64))
(declare-fun temp841_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp841_140 () (_ BitVec 64))
(declare-fun temp841_141 () (_ BitVec 64))
(declare-fun temp841_142 () (_ BitVec 64))
(declare-fun temp841_143 () (_ BitVec 64))
(declare-fun temp841_144 () (_ BitVec 64))
(declare-fun temp841_145 () (_ BitVec 64))
(declare-fun temp841_146 () (_ BitVec 64))
(declare-fun temp841_147 () (_ BitVec 64))
(declare-fun temp841_148 () (_ BitVec 64))
(declare-fun temp841_149 () (_ BitVec 64))
(declare-fun temp841_150 () (_ BitVec 64))
(declare-fun temp841_151 () (_ BitVec 64))
(declare-fun temp841_152 () (_ BitVec 64))
(declare-fun temp841_153 () (_ BitVec 64))
(declare-fun temp841_154 () (_ BitVec 64))
(declare-fun temp841_155 () (_ BitVec 64))
(declare-fun temp841_157 () (_ BitVec 64))
(declare-fun temp841_158 () (_ BitVec 64))
(declare-fun temp841_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp841_159 () (_ BitVec 64))
(declare-fun temp841_160 () (_ BitVec 64))
(declare-fun temp841_162 () (_ BitVec 64))
(declare-fun temp841_163 () (_ BitVec 64))
(declare-fun temp841_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp841_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp841_165 () (_ BitVec 64))
(declare-fun temp841_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp841_167 () (_ BitVec 64))
(declare-fun temp841_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp841_169 () (_ BitVec 64))
(declare-fun temp841_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp841_171 () (_ BitVec 64))
(declare-fun temp841_172 () (_ BitVec 64))
(declare-fun temp841_173 () (_ BitVec 64))
(declare-fun temp841_174 () (_ BitVec 64))
(declare-fun temp841_175 () (_ BitVec 64))
(declare-fun temp841_176 () (_ BitVec 64))
(declare-fun temp841_177 () (_ BitVec 64))
(declare-fun temp841_178 () (_ BitVec 64))
(declare-fun temp841_179 () (_ BitVec 64))
(declare-fun temp841_180 () (_ BitVec 64))
(declare-fun temp841_181 () (_ BitVec 64))
(declare-fun temp841_182 () (_ BitVec 64))
(declare-fun temp841_183 () (_ BitVec 64))
(declare-fun temp841_184 () (_ BitVec 64))
(declare-fun temp841_185 () (_ BitVec 64))
(declare-fun temp841_186 () (_ BitVec 64))
(declare-fun temp841_187 () (_ BitVec 64))
(declare-fun temp841_188 () (_ BitVec 64))
(declare-fun temp841_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp841_190 () (_ BitVec 64))
(declare-fun temp841_192 () (_ BitVec 64))
(declare-fun temp841_193 () (_ BitVec 64))
(declare-fun temp841_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp841_194 () (_ BitVec 64))
(declare-fun temp841_195 () (_ BitVec 64))
(declare-fun temp841_197 () (_ BitVec 64))
(declare-fun temp841_198 () (_ BitVec 64))
(declare-fun temp841_196 () (_ BitVec 64))
(declare-fun temp841_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp841_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp841_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp841_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp841_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp841_204 () (_ BitVec 64))
(declare-fun temp841_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp841_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp841_207 () (_ BitVec 64))
(declare-fun temp841_208 () (_ BitVec 64))
(declare-fun temp841_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp841_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp841_211 () (_ BitVec 64))
(declare-fun temp841_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp841_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp841_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp841_215 () (_ BitVec 64))
(assert (= temp841_1 #x0000000000000001))
(assert (= var77203 temp841_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp841_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp841_2)))
(assert (= temp841_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp841_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp841_4 #x0000000000000000))
(assert (= var210941 temp841_4))
(assert (= temp841_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp841_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp841_6 #x0000000000000000))
(assert (= var210986 temp841_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp841_7 #x0000000000000000))
(assert (= temp841_8 temp841_7))
(assert (= temp841_9 (select ARGNAME_padding_NAMEEND_VAL temp841_8)))
(assert (= temp841_10 #x0000000000000001))
(assert (= temp841_11 temp841_10))
(assert (= temp841_12 (select ARGNAME_padding_NAMEEND_VAL temp841_11)))
(assert (= temp841_13 #x0000000000000002))
(assert (= temp841_14 temp841_13))
(assert (= temp841_15 (select ARGNAME_padding_NAMEEND_VAL temp841_14)))
(assert (= temp841_16 #x0000000000000003))
(assert (= temp841_17 temp841_16))
(assert (= temp841_18 (select ARGNAME_padding_NAMEEND_VAL temp841_17)))
(assert (= temp841_19 #x0000000000000004))
(assert (= temp841_20 temp841_19))
(assert (= temp841_21 (select ARGNAME_padding_NAMEEND_VAL temp841_20)))
(assert (= temp841_22 #x0000000000000005))
(assert (= temp841_23 temp841_22))
(assert (= temp841_24 (select ARGNAME_padding_NAMEEND_VAL temp841_23)))
(assert (= temp841_25 #x0000000000000000))
(assert (= temp841_26 #x0000000000000000))
(assert (= temp841_27 temp841_26))
(assert (= temp841_28 (select ARGNAME_padding_NAMEEND_VAL temp841_27)))
(assert (= temp841_29 #x0000000000000000))
(assert (= temp841_30 #x0000000000000001))
(assert (= temp841_31 temp841_30))
(assert (= temp841_32 (select ARGNAME_padding_NAMEEND_VAL temp841_31)))
(assert (= temp841_33 #x0000000000000000))
(assert (= temp841_34 #x0000000000000002))
(assert (= temp841_35 temp841_34))
(assert (= temp841_36 (select ARGNAME_padding_NAMEEND_VAL temp841_35)))
(assert (= temp841_37 #x0000000000000000))
(assert (= temp841_38 #x0000000000000003))
(assert (= temp841_39 temp841_38))
(assert (= temp841_40 (select ARGNAME_padding_NAMEEND_VAL temp841_39)))
(assert (= temp841_41 #x0000000000000000))
(assert (= temp841_42 #x0000000000000004))
(assert (= temp841_43 temp841_42))
(assert (= temp841_44 (select ARGNAME_padding_NAMEEND_VAL temp841_43)))
(assert (= temp841_45 #x0000000000000000))
(assert (= temp841_46 #x0000000000000005))
(assert (= temp841_47 temp841_46))
(assert (= temp841_48 (select ARGNAME_padding_NAMEEND_VAL temp841_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp841_28 temp841_25)
             (bvslt temp841_32 temp841_29)
             (bvslt temp841_36 temp841_33)
             (bvslt temp841_40 temp841_37)
             (bvslt temp841_44 temp841_41)
             (bvslt temp841_48 temp841_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp841_49 #x0000000000000000))
(assert (= var1191714 temp841_49))
(assert (= temp841_50 #x0000000000000000))
(assert (= temp841_51 temp841_50))
(assert (= temp841_52 (select ARGNAME_output_padding_NAMEEND_VAL temp841_51)))
(assert (= temp841_53 #x0000000000000001))
(assert (= temp841_54 temp841_53))
(assert (= temp841_55 (select ARGNAME_output_padding_NAMEEND_VAL temp841_54)))
(assert (= temp841_56 #x0000000000000002))
(assert (= temp841_57 temp841_56))
(assert (= temp841_58 (select ARGNAME_output_padding_NAMEEND_VAL temp841_57)))
(assert (= temp841_59 #x0000000000000003))
(assert (= temp841_60 temp841_59))
(assert (= temp841_61 (select ARGNAME_output_padding_NAMEEND_VAL temp841_60)))
(assert (= temp841_62 #x0000000000000004))
(assert (= temp841_63 temp841_62))
(assert (= temp841_64 (select ARGNAME_output_padding_NAMEEND_VAL temp841_63)))
(assert (= temp841_65 #x0000000000000005))
(assert (= temp841_66 temp841_65))
(assert (= temp841_67 (select ARGNAME_output_padding_NAMEEND_VAL temp841_66)))
(assert (= temp841_68 #x0000000000000000))
(assert (= temp841_69 #x0000000000000000))
(assert (= temp841_70 temp841_69))
(assert (= temp841_71 (select ARGNAME_output_padding_NAMEEND_VAL temp841_70)))
(assert (= temp841_72 #x0000000000000000))
(assert (= temp841_73 #x0000000000000001))
(assert (= temp841_74 temp841_73))
(assert (= temp841_75 (select ARGNAME_output_padding_NAMEEND_VAL temp841_74)))
(assert (= temp841_76 #x0000000000000000))
(assert (= temp841_77 #x0000000000000002))
(assert (= temp841_78 temp841_77))
(assert (= temp841_79 (select ARGNAME_output_padding_NAMEEND_VAL temp841_78)))
(assert (= temp841_80 #x0000000000000000))
(assert (= temp841_81 #x0000000000000003))
(assert (= temp841_82 temp841_81))
(assert (= temp841_83 (select ARGNAME_output_padding_NAMEEND_VAL temp841_82)))
(assert (= temp841_84 #x0000000000000000))
(assert (= temp841_85 #x0000000000000004))
(assert (= temp841_86 temp841_85))
(assert (= temp841_87 (select ARGNAME_output_padding_NAMEEND_VAL temp841_86)))
(assert (= temp841_88 #x0000000000000000))
(assert (= temp841_89 #x0000000000000005))
(assert (= temp841_90 temp841_89))
(assert (= temp841_91 (select ARGNAME_output_padding_NAMEEND_VAL temp841_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp841_71 temp841_68)
             (bvslt temp841_75 temp841_72)
             (bvslt temp841_79 temp841_76)
             (bvslt temp841_83 temp841_80)
             (bvslt temp841_87 temp841_84)
             (bvslt temp841_91 temp841_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp841_92 #x0000000000000000))
(assert (= var1191725 temp841_92))
(assert (= temp841_93 #x0000000000000000))
(assert (= temp841_94 temp841_93))
(assert (= temp841_95 (select ARGNAME_stride_NAMEEND_VAL temp841_94)))
(assert (= temp841_96 #x0000000000000001))
(assert (= temp841_97 temp841_96))
(assert (= temp841_98 (select ARGNAME_stride_NAMEEND_VAL temp841_97)))
(assert (= temp841_99 #x0000000000000002))
(assert (= temp841_100 temp841_99))
(assert (= temp841_101 (select ARGNAME_stride_NAMEEND_VAL temp841_100)))
(assert (= temp841_102 #x0000000000000003))
(assert (= temp841_103 temp841_102))
(assert (= temp841_104 (select ARGNAME_stride_NAMEEND_VAL temp841_103)))
(assert (= temp841_105 #x0000000000000004))
(assert (= temp841_106 temp841_105))
(assert (= temp841_107 (select ARGNAME_stride_NAMEEND_VAL temp841_106)))
(assert (= temp841_108 #x0000000000000005))
(assert (= temp841_109 temp841_108))
(assert (= temp841_110 (select ARGNAME_stride_NAMEEND_VAL temp841_109)))
(assert (= temp841_111 #x0000000000000000))
(assert (= temp841_112 #x0000000000000000))
(assert (= temp841_113 temp841_112))
(assert (= temp841_114 (select ARGNAME_stride_NAMEEND_VAL temp841_113)))
(assert (= temp841_115 #x0000000000000000))
(assert (= temp841_116 #x0000000000000001))
(assert (= temp841_117 temp841_116))
(assert (= temp841_118 (select ARGNAME_stride_NAMEEND_VAL temp841_117)))
(assert (= temp841_119 #x0000000000000000))
(assert (= temp841_120 #x0000000000000002))
(assert (= temp841_121 temp841_120))
(assert (= temp841_122 (select ARGNAME_stride_NAMEEND_VAL temp841_121)))
(assert (= temp841_123 #x0000000000000000))
(assert (= temp841_124 #x0000000000000003))
(assert (= temp841_125 temp841_124))
(assert (= temp841_126 (select ARGNAME_stride_NAMEEND_VAL temp841_125)))
(assert (= temp841_127 #x0000000000000000))
(assert (= temp841_128 #x0000000000000004))
(assert (= temp841_129 temp841_128))
(assert (= temp841_130 (select ARGNAME_stride_NAMEEND_VAL temp841_129)))
(assert (= temp841_131 #x0000000000000000))
(assert (= temp841_132 #x0000000000000005))
(assert (= temp841_133 temp841_132))
(assert (= temp841_134 (select ARGNAME_stride_NAMEEND_VAL temp841_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp841_114 temp841_111)
             (bvsle temp841_118 temp841_115)
             (bvsle temp841_122 temp841_119)
             (bvsle temp841_126 temp841_123)
             (bvsle temp841_130 temp841_127)
             (bvsle temp841_134 temp841_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp841_135 #x0000000000000000))
(assert (= var1191735 temp841_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp841_136 #x0000000000000001))
(assert (= var1191747 temp841_136))
(assert (= temp841_137 #x0000000000000000))
(assert (= var1179826 temp841_137))
(assert (= temp841_138 #x0000000000000000))
(assert (= temp841_139 temp841_138))
(assert (= temp841_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp841_139)))
(assert (= temp841_141 #x0000000000000001))
(assert (= temp841_142 temp841_141))
(assert (= temp841_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp841_142)))
(assert (= temp841_144 #x0000000000000002))
(assert (= temp841_145 temp841_144))
(assert (= temp841_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp841_145)))
(assert (= temp841_147 #x0000000000000003))
(assert (= temp841_148 temp841_147))
(assert (= temp841_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp841_148)))
(assert (= temp841_150 #x0000000000000004))
(assert (= temp841_151 temp841_150))
(assert (= temp841_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp841_151)))
(assert (= temp841_153 #x0000000000000005))
(assert (= temp841_154 temp841_153))
(assert (= temp841_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp841_154)))
(assert (= temp841_157 var1179826))
(assert (= temp841_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp841_157)))
(assert (= temp841_156 temp841_158))
(assert (= var1191780
   (ite (bvslt temp841_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp841_159 #x0000000000000000))
(assert (= var1191780 temp841_159))
(assert (= temp841_160 #x0000000000000000))
(assert (= var1179826 temp841_160))
(assert (= temp841_162 var1179826))
(assert (= temp841_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp841_162)))
(assert (= temp841_161 temp841_163))
(assert (= var1191802 (bvsmod temp841_161 ARGNAME_groups_NAMEEND)))
(assert (= temp841_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp841_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp841_165 #x0000000000000001))
(assert (= var1191803 temp841_165))
(assert (= temp841_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp841_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp841_167 #x0000000000000001))
(assert (= var1191823 temp841_167))
(assert (= temp841_168 #x0000000000000001))
(assert (= var1180714 temp841_168))
(assert (= temp841_169 #x0000000000000000))
(assert (= temp841_170 temp841_169))
(assert (= temp841_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp841_170)))
(assert (= temp841_172 #x0000000000000001))
(assert (= temp841_173 temp841_172))
(assert (= temp841_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp841_173)))
(assert (= temp841_175 #x0000000000000002))
(assert (= temp841_176 temp841_175))
(assert (= temp841_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp841_176)))
(assert (= temp841_178 #x0000000000000003))
(assert (= temp841_179 temp841_178))
(assert (= temp841_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp841_179)))
(assert (= temp841_181 #x0000000000000004))
(assert (= temp841_182 temp841_181))
(assert (= temp841_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp841_182)))
(assert (= temp841_184 #x0000000000000005))
(assert (= temp841_185 temp841_184))
(assert (= temp841_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp841_185)))
(assert (= temp841_187 #x0000000000000000))
(assert (= temp841_188
   (ite (bvslt var1180714 temp841_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp841_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp841_188)))
(assert (= var1191831 temp841_189))
(assert (bvslt (ite (bvslt var1180714 temp841_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp841_190 #x0000000000000001))
(assert (= var1180714 temp841_190))
(assert (= temp841_192 var1180714))
(assert (= temp841_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp841_192)))
(assert (= temp841_191 temp841_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp841_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp841_194 #x0000000000000001))
(assert (= var1191836 temp841_194))
(assert (= temp841_195 #x0000000000000000))
(assert (= var1179826 temp841_195))
(assert (= temp841_197 var1179826))
(assert (= temp841_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp841_197)))
(assert (= temp841_196 temp841_198))
(assert (= temp841_199 #x0000000000000002))
(assert (= var1586025 temp841_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp841_200 #x0000000000000001))
(assert (= var1191993 temp841_200))
(assert (= temp841_201 #x0000000000000001))
(assert (= var2700303 temp841_201))
(assert (= temp841_202 #x0000000000000001))
(assert (= var2962447 temp841_202))
(assert (= temp841_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp841_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp841_204 #x0000000000000001))
(assert (= var211058 temp841_204))
(assert (= temp841_205 #x0000000000000001))
(assert (= var211188 temp841_205))
(assert (= var3879401 var211188))
(assert (= temp841_206 #x0000000000000000))
(assert (= var3866802 temp841_206))
(assert (= temp841_207 #x0000000000000000))
(assert (= temp841_208
   (ite (bvslt var3866802 temp841_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp841_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp841_208)))
(assert (= var3879420 temp841_209))
(assert (bvslt (ite (bvslt var3866802 temp841_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp841_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp841_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp841_211 #x0000000000000001))
(assert (= var3879421 temp841_211))
(assert (= temp841_212 #x0000000000000000))
(assert (= var4079423 temp841_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp841_213 #x0000000000000002))
(assert (= var4208259 temp841_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp841_214 #x0000000000000000))
(assert (= var4273820 temp841_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp841_215 #x0000000000000001))
(assert (= var211058 temp841_215))
(model-add temp841_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp841_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp841_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp841_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




