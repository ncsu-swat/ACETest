(declare-fun temp1232_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1232_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1232_3 () (_ BitVec 64))
(declare-fun temp1232_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1232_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1232_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1232_7 () (_ BitVec 64))
(declare-fun temp1232_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1232_9 () (_ BitVec 64))
(declare-fun temp1232_10 () (_ BitVec 64))
(declare-fun temp1232_11 () (_ BitVec 64))
(declare-fun temp1232_12 () (_ BitVec 64))
(declare-fun temp1232_13 () (_ BitVec 64))
(declare-fun temp1232_14 () (_ BitVec 64))
(declare-fun temp1232_15 () (_ BitVec 64))
(declare-fun temp1232_16 () (_ BitVec 64))
(declare-fun temp1232_17 () (_ BitVec 64))
(declare-fun temp1232_18 () (_ BitVec 64))
(declare-fun temp1232_19 () (_ BitVec 64))
(declare-fun temp1232_20 () (_ BitVec 64))
(declare-fun temp1232_21 () (_ BitVec 64))
(declare-fun temp1232_22 () (_ BitVec 64))
(declare-fun temp1232_23 () (_ BitVec 64))
(declare-fun temp1232_24 () (_ BitVec 64))
(declare-fun temp1232_25 () (_ BitVec 64))
(declare-fun temp1232_26 () (_ BitVec 64))
(declare-fun temp1232_27 () (_ BitVec 64))
(declare-fun temp1232_28 () (_ BitVec 64))
(declare-fun temp1232_29 () (_ BitVec 64))
(declare-fun temp1232_30 () (_ BitVec 64))
(declare-fun temp1232_31 () (_ BitVec 64))
(declare-fun temp1232_32 () (_ BitVec 64))
(declare-fun temp1232_33 () (_ BitVec 64))
(declare-fun temp1232_34 () (_ BitVec 64))
(declare-fun temp1232_35 () (_ BitVec 64))
(declare-fun temp1232_36 () (_ BitVec 64))
(declare-fun temp1232_37 () (_ BitVec 64))
(declare-fun temp1232_38 () (_ BitVec 64))
(declare-fun temp1232_39 () (_ BitVec 64))
(declare-fun temp1232_40 () (_ BitVec 64))
(declare-fun temp1232_41 () (_ BitVec 64))
(declare-fun temp1232_42 () (_ BitVec 64))
(declare-fun temp1232_43 () (_ BitVec 64))
(declare-fun temp1232_44 () (_ BitVec 64))
(declare-fun temp1232_45 () (_ BitVec 64))
(declare-fun temp1232_46 () (_ BitVec 64))
(declare-fun temp1232_47 () (_ BitVec 64))
(declare-fun temp1232_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1232_49 () (_ BitVec 64))
(declare-fun temp1232_50 () (_ BitVec 64))
(declare-fun temp1232_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1232_52 () (_ BitVec 64))
(declare-fun temp1232_53 () (_ BitVec 64))
(declare-fun temp1232_54 () (_ BitVec 64))
(declare-fun temp1232_55 () (_ BitVec 64))
(declare-fun temp1232_56 () (_ BitVec 64))
(declare-fun temp1232_57 () (_ BitVec 64))
(declare-fun temp1232_58 () (_ BitVec 64))
(declare-fun temp1232_59 () (_ BitVec 64))
(declare-fun temp1232_60 () (_ BitVec 64))
(declare-fun temp1232_61 () (_ BitVec 64))
(declare-fun temp1232_62 () (_ BitVec 64))
(declare-fun temp1232_63 () (_ BitVec 64))
(declare-fun temp1232_64 () (_ BitVec 64))
(declare-fun temp1232_65 () (_ BitVec 64))
(declare-fun temp1232_66 () (_ BitVec 64))
(declare-fun temp1232_67 () (_ BitVec 64))
(declare-fun temp1232_68 () (_ BitVec 64))
(declare-fun temp1232_69 () (_ BitVec 64))
(declare-fun temp1232_70 () (_ BitVec 64))
(declare-fun temp1232_71 () (_ BitVec 64))
(declare-fun temp1232_72 () (_ BitVec 64))
(declare-fun temp1232_73 () (_ BitVec 64))
(declare-fun temp1232_74 () (_ BitVec 64))
(declare-fun temp1232_75 () (_ BitVec 64))
(declare-fun temp1232_76 () (_ BitVec 64))
(declare-fun temp1232_77 () (_ BitVec 64))
(declare-fun temp1232_78 () (_ BitVec 64))
(declare-fun temp1232_79 () (_ BitVec 64))
(declare-fun temp1232_80 () (_ BitVec 64))
(declare-fun temp1232_81 () (_ BitVec 64))
(declare-fun temp1232_82 () (_ BitVec 64))
(declare-fun temp1232_83 () (_ BitVec 64))
(declare-fun temp1232_84 () (_ BitVec 64))
(declare-fun temp1232_85 () (_ BitVec 64))
(declare-fun temp1232_86 () (_ BitVec 64))
(declare-fun temp1232_87 () (_ BitVec 64))
(declare-fun temp1232_88 () (_ BitVec 64))
(declare-fun temp1232_89 () (_ BitVec 64))
(declare-fun temp1232_90 () (_ BitVec 64))
(declare-fun temp1232_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1232_92 () (_ BitVec 64))
(declare-fun temp1232_93 () (_ BitVec 64))
(declare-fun temp1232_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1232_95 () (_ BitVec 64))
(declare-fun temp1232_96 () (_ BitVec 64))
(declare-fun temp1232_97 () (_ BitVec 64))
(declare-fun temp1232_98 () (_ BitVec 64))
(declare-fun temp1232_99 () (_ BitVec 64))
(declare-fun temp1232_100 () (_ BitVec 64))
(declare-fun temp1232_101 () (_ BitVec 64))
(declare-fun temp1232_102 () (_ BitVec 64))
(declare-fun temp1232_103 () (_ BitVec 64))
(declare-fun temp1232_104 () (_ BitVec 64))
(declare-fun temp1232_105 () (_ BitVec 64))
(declare-fun temp1232_106 () (_ BitVec 64))
(declare-fun temp1232_107 () (_ BitVec 64))
(declare-fun temp1232_108 () (_ BitVec 64))
(declare-fun temp1232_109 () (_ BitVec 64))
(declare-fun temp1232_110 () (_ BitVec 64))
(declare-fun temp1232_111 () (_ BitVec 64))
(declare-fun temp1232_112 () (_ BitVec 64))
(declare-fun temp1232_113 () (_ BitVec 64))
(declare-fun temp1232_114 () (_ BitVec 64))
(declare-fun temp1232_115 () (_ BitVec 64))
(declare-fun temp1232_116 () (_ BitVec 64))
(declare-fun temp1232_117 () (_ BitVec 64))
(declare-fun temp1232_118 () (_ BitVec 64))
(declare-fun temp1232_119 () (_ BitVec 64))
(declare-fun temp1232_120 () (_ BitVec 64))
(declare-fun temp1232_121 () (_ BitVec 64))
(declare-fun temp1232_122 () (_ BitVec 64))
(declare-fun temp1232_123 () (_ BitVec 64))
(declare-fun temp1232_124 () (_ BitVec 64))
(declare-fun temp1232_125 () (_ BitVec 64))
(declare-fun temp1232_126 () (_ BitVec 64))
(declare-fun temp1232_127 () (_ BitVec 64))
(declare-fun temp1232_128 () (_ BitVec 64))
(declare-fun temp1232_129 () (_ BitVec 64))
(declare-fun temp1232_130 () (_ BitVec 64))
(declare-fun temp1232_131 () (_ BitVec 64))
(declare-fun temp1232_132 () (_ BitVec 64))
(declare-fun temp1232_133 () (_ BitVec 64))
(declare-fun temp1232_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1232_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1232_136 () (_ BitVec 64))
(declare-fun temp1232_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1232_138 () (_ BitVec 64))
(declare-fun temp1232_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1232_140 () (_ BitVec 64))
(declare-fun temp1232_141 () (_ BitVec 64))
(declare-fun temp1232_142 () (_ BitVec 64))
(declare-fun temp1232_143 () (_ BitVec 64))
(declare-fun temp1232_144 () (_ BitVec 64))
(declare-fun temp1232_145 () (_ BitVec 64))
(declare-fun temp1232_146 () (_ BitVec 64))
(declare-fun temp1232_147 () (_ BitVec 64))
(declare-fun temp1232_148 () (_ BitVec 64))
(declare-fun temp1232_149 () (_ BitVec 64))
(declare-fun temp1232_150 () (_ BitVec 64))
(declare-fun temp1232_151 () (_ BitVec 64))
(declare-fun temp1232_152 () (_ BitVec 64))
(declare-fun temp1232_153 () (_ BitVec 64))
(declare-fun temp1232_154 () (_ BitVec 64))
(declare-fun temp1232_155 () (_ BitVec 64))
(declare-fun temp1232_157 () (_ BitVec 64))
(declare-fun temp1232_158 () (_ BitVec 64))
(declare-fun temp1232_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1232_159 () (_ BitVec 64))
(declare-fun temp1232_160 () (_ BitVec 64))
(declare-fun temp1232_162 () (_ BitVec 64))
(declare-fun temp1232_163 () (_ BitVec 64))
(declare-fun temp1232_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1232_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1232_165 () (_ BitVec 64))
(declare-fun temp1232_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1232_167 () (_ BitVec 64))
(declare-fun temp1232_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1232_169 () (_ BitVec 64))
(declare-fun temp1232_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1232_171 () (_ BitVec 64))
(declare-fun temp1232_172 () (_ BitVec 64))
(declare-fun temp1232_173 () (_ BitVec 64))
(declare-fun temp1232_174 () (_ BitVec 64))
(declare-fun temp1232_175 () (_ BitVec 64))
(declare-fun temp1232_176 () (_ BitVec 64))
(declare-fun temp1232_177 () (_ BitVec 64))
(declare-fun temp1232_178 () (_ BitVec 64))
(declare-fun temp1232_179 () (_ BitVec 64))
(declare-fun temp1232_180 () (_ BitVec 64))
(declare-fun temp1232_181 () (_ BitVec 64))
(declare-fun temp1232_182 () (_ BitVec 64))
(declare-fun temp1232_183 () (_ BitVec 64))
(declare-fun temp1232_184 () (_ BitVec 64))
(declare-fun temp1232_185 () (_ BitVec 64))
(declare-fun temp1232_186 () (_ BitVec 64))
(declare-fun temp1232_187 () (_ BitVec 64))
(declare-fun temp1232_188 () (_ BitVec 64))
(declare-fun temp1232_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1232_190 () (_ BitVec 64))
(declare-fun temp1232_192 () (_ BitVec 64))
(declare-fun temp1232_193 () (_ BitVec 64))
(declare-fun temp1232_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1232_194 () (_ BitVec 64))
(declare-fun temp1232_195 () (_ BitVec 64))
(declare-fun temp1232_197 () (_ BitVec 64))
(declare-fun temp1232_198 () (_ BitVec 64))
(declare-fun temp1232_196 () (_ BitVec 64))
(declare-fun temp1232_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1232_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1232_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1232_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1232_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1232_204 () (_ BitVec 64))
(declare-fun temp1232_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1232_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1232_207 () (_ BitVec 64))
(declare-fun temp1232_208 () (_ BitVec 64))
(declare-fun temp1232_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1232_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1232_211 () (_ BitVec 64))
(declare-fun temp1232_212 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1232_213 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp1232_214 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp1232_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp1232_217 () (_ BitVec 64))
(declare-fun temp1232_216 () (_ BitVec 64))
(declare-fun temp1232_218 () (_ BitVec 64))
(declare-fun var7081450 () (_ BitVec 64))
(declare-fun temp1232_220 () (_ BitVec 64))
(declare-fun temp1232_219 () (_ BitVec 64))
(declare-fun temp1232_221 () (_ BitVec 64))
(assert (= temp1232_1 #x0000000000000001))
(assert (= var77203 temp1232_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1232_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1232_2)))
(assert (= temp1232_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1232_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1232_4 #x0000000000000000))
(assert (= var210941 temp1232_4))
(assert (= temp1232_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1232_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1232_6 #x0000000000000000))
(assert (= var210986 temp1232_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1232_7 #x0000000000000000))
(assert (= temp1232_8 temp1232_7))
(assert (= temp1232_9 (select ARGNAME_padding_NAMEEND_VAL temp1232_8)))
(assert (= temp1232_10 #x0000000000000001))
(assert (= temp1232_11 temp1232_10))
(assert (= temp1232_12 (select ARGNAME_padding_NAMEEND_VAL temp1232_11)))
(assert (= temp1232_13 #x0000000000000002))
(assert (= temp1232_14 temp1232_13))
(assert (= temp1232_15 (select ARGNAME_padding_NAMEEND_VAL temp1232_14)))
(assert (= temp1232_16 #x0000000000000003))
(assert (= temp1232_17 temp1232_16))
(assert (= temp1232_18 (select ARGNAME_padding_NAMEEND_VAL temp1232_17)))
(assert (= temp1232_19 #x0000000000000004))
(assert (= temp1232_20 temp1232_19))
(assert (= temp1232_21 (select ARGNAME_padding_NAMEEND_VAL temp1232_20)))
(assert (= temp1232_22 #x0000000000000005))
(assert (= temp1232_23 temp1232_22))
(assert (= temp1232_24 (select ARGNAME_padding_NAMEEND_VAL temp1232_23)))
(assert (= temp1232_25 #x0000000000000000))
(assert (= temp1232_26 #x0000000000000000))
(assert (= temp1232_27 temp1232_26))
(assert (= temp1232_28 (select ARGNAME_padding_NAMEEND_VAL temp1232_27)))
(assert (= temp1232_29 #x0000000000000000))
(assert (= temp1232_30 #x0000000000000001))
(assert (= temp1232_31 temp1232_30))
(assert (= temp1232_32 (select ARGNAME_padding_NAMEEND_VAL temp1232_31)))
(assert (= temp1232_33 #x0000000000000000))
(assert (= temp1232_34 #x0000000000000002))
(assert (= temp1232_35 temp1232_34))
(assert (= temp1232_36 (select ARGNAME_padding_NAMEEND_VAL temp1232_35)))
(assert (= temp1232_37 #x0000000000000000))
(assert (= temp1232_38 #x0000000000000003))
(assert (= temp1232_39 temp1232_38))
(assert (= temp1232_40 (select ARGNAME_padding_NAMEEND_VAL temp1232_39)))
(assert (= temp1232_41 #x0000000000000000))
(assert (= temp1232_42 #x0000000000000004))
(assert (= temp1232_43 temp1232_42))
(assert (= temp1232_44 (select ARGNAME_padding_NAMEEND_VAL temp1232_43)))
(assert (= temp1232_45 #x0000000000000000))
(assert (= temp1232_46 #x0000000000000005))
(assert (= temp1232_47 temp1232_46))
(assert (= temp1232_48 (select ARGNAME_padding_NAMEEND_VAL temp1232_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1232_28 temp1232_25)
             (bvslt temp1232_32 temp1232_29)
             (bvslt temp1232_36 temp1232_33)
             (bvslt temp1232_40 temp1232_37)
             (bvslt temp1232_44 temp1232_41)
             (bvslt temp1232_48 temp1232_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1232_49 #x0000000000000000))
(assert (= var1191714 temp1232_49))
(assert (= temp1232_50 #x0000000000000000))
(assert (= temp1232_51 temp1232_50))
(assert (= temp1232_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1232_51)))
(assert (= temp1232_53 #x0000000000000001))
(assert (= temp1232_54 temp1232_53))
(assert (= temp1232_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1232_54)))
(assert (= temp1232_56 #x0000000000000002))
(assert (= temp1232_57 temp1232_56))
(assert (= temp1232_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1232_57)))
(assert (= temp1232_59 #x0000000000000003))
(assert (= temp1232_60 temp1232_59))
(assert (= temp1232_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1232_60)))
(assert (= temp1232_62 #x0000000000000004))
(assert (= temp1232_63 temp1232_62))
(assert (= temp1232_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1232_63)))
(assert (= temp1232_65 #x0000000000000005))
(assert (= temp1232_66 temp1232_65))
(assert (= temp1232_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1232_66)))
(assert (= temp1232_68 #x0000000000000000))
(assert (= temp1232_69 #x0000000000000000))
(assert (= temp1232_70 temp1232_69))
(assert (= temp1232_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1232_70)))
(assert (= temp1232_72 #x0000000000000000))
(assert (= temp1232_73 #x0000000000000001))
(assert (= temp1232_74 temp1232_73))
(assert (= temp1232_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1232_74)))
(assert (= temp1232_76 #x0000000000000000))
(assert (= temp1232_77 #x0000000000000002))
(assert (= temp1232_78 temp1232_77))
(assert (= temp1232_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1232_78)))
(assert (= temp1232_80 #x0000000000000000))
(assert (= temp1232_81 #x0000000000000003))
(assert (= temp1232_82 temp1232_81))
(assert (= temp1232_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1232_82)))
(assert (= temp1232_84 #x0000000000000000))
(assert (= temp1232_85 #x0000000000000004))
(assert (= temp1232_86 temp1232_85))
(assert (= temp1232_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1232_86)))
(assert (= temp1232_88 #x0000000000000000))
(assert (= temp1232_89 #x0000000000000005))
(assert (= temp1232_90 temp1232_89))
(assert (= temp1232_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1232_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1232_71 temp1232_68)
             (bvslt temp1232_75 temp1232_72)
             (bvslt temp1232_79 temp1232_76)
             (bvslt temp1232_83 temp1232_80)
             (bvslt temp1232_87 temp1232_84)
             (bvslt temp1232_91 temp1232_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1232_92 #x0000000000000000))
(assert (= var1191725 temp1232_92))
(assert (= temp1232_93 #x0000000000000000))
(assert (= temp1232_94 temp1232_93))
(assert (= temp1232_95 (select ARGNAME_stride_NAMEEND_VAL temp1232_94)))
(assert (= temp1232_96 #x0000000000000001))
(assert (= temp1232_97 temp1232_96))
(assert (= temp1232_98 (select ARGNAME_stride_NAMEEND_VAL temp1232_97)))
(assert (= temp1232_99 #x0000000000000002))
(assert (= temp1232_100 temp1232_99))
(assert (= temp1232_101 (select ARGNAME_stride_NAMEEND_VAL temp1232_100)))
(assert (= temp1232_102 #x0000000000000003))
(assert (= temp1232_103 temp1232_102))
(assert (= temp1232_104 (select ARGNAME_stride_NAMEEND_VAL temp1232_103)))
(assert (= temp1232_105 #x0000000000000004))
(assert (= temp1232_106 temp1232_105))
(assert (= temp1232_107 (select ARGNAME_stride_NAMEEND_VAL temp1232_106)))
(assert (= temp1232_108 #x0000000000000005))
(assert (= temp1232_109 temp1232_108))
(assert (= temp1232_110 (select ARGNAME_stride_NAMEEND_VAL temp1232_109)))
(assert (= temp1232_111 #x0000000000000000))
(assert (= temp1232_112 #x0000000000000000))
(assert (= temp1232_113 temp1232_112))
(assert (= temp1232_114 (select ARGNAME_stride_NAMEEND_VAL temp1232_113)))
(assert (= temp1232_115 #x0000000000000000))
(assert (= temp1232_116 #x0000000000000001))
(assert (= temp1232_117 temp1232_116))
(assert (= temp1232_118 (select ARGNAME_stride_NAMEEND_VAL temp1232_117)))
(assert (= temp1232_119 #x0000000000000000))
(assert (= temp1232_120 #x0000000000000002))
(assert (= temp1232_121 temp1232_120))
(assert (= temp1232_122 (select ARGNAME_stride_NAMEEND_VAL temp1232_121)))
(assert (= temp1232_123 #x0000000000000000))
(assert (= temp1232_124 #x0000000000000003))
(assert (= temp1232_125 temp1232_124))
(assert (= temp1232_126 (select ARGNAME_stride_NAMEEND_VAL temp1232_125)))
(assert (= temp1232_127 #x0000000000000000))
(assert (= temp1232_128 #x0000000000000004))
(assert (= temp1232_129 temp1232_128))
(assert (= temp1232_130 (select ARGNAME_stride_NAMEEND_VAL temp1232_129)))
(assert (= temp1232_131 #x0000000000000000))
(assert (= temp1232_132 #x0000000000000005))
(assert (= temp1232_133 temp1232_132))
(assert (= temp1232_134 (select ARGNAME_stride_NAMEEND_VAL temp1232_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1232_114 temp1232_111)
             (bvsle temp1232_118 temp1232_115)
             (bvsle temp1232_122 temp1232_119)
             (bvsle temp1232_126 temp1232_123)
             (bvsle temp1232_130 temp1232_127)
             (bvsle temp1232_134 temp1232_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1232_135 #x0000000000000000))
(assert (= var1191735 temp1232_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1232_136 #x0000000000000001))
(assert (= var1191747 temp1232_136))
(assert (= temp1232_137 #x0000000000000000))
(assert (= var1179826 temp1232_137))
(assert (= temp1232_138 #x0000000000000000))
(assert (= temp1232_139 temp1232_138))
(assert (= temp1232_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1232_139)))
(assert (= temp1232_141 #x0000000000000001))
(assert (= temp1232_142 temp1232_141))
(assert (= temp1232_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1232_142)))
(assert (= temp1232_144 #x0000000000000002))
(assert (= temp1232_145 temp1232_144))
(assert (= temp1232_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1232_145)))
(assert (= temp1232_147 #x0000000000000003))
(assert (= temp1232_148 temp1232_147))
(assert (= temp1232_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1232_148)))
(assert (= temp1232_150 #x0000000000000004))
(assert (= temp1232_151 temp1232_150))
(assert (= temp1232_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1232_151)))
(assert (= temp1232_153 #x0000000000000005))
(assert (= temp1232_154 temp1232_153))
(assert (= temp1232_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1232_154)))
(assert (= temp1232_157 var1179826))
(assert (= temp1232_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1232_157)))
(assert (= temp1232_156 temp1232_158))
(assert (= var1191780
   (ite (bvslt temp1232_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1232_159 #x0000000000000000))
(assert (= var1191780 temp1232_159))
(assert (= temp1232_160 #x0000000000000000))
(assert (= var1179826 temp1232_160))
(assert (= temp1232_162 var1179826))
(assert (= temp1232_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1232_162)))
(assert (= temp1232_161 temp1232_163))
(assert (= var1191802 (bvsmod temp1232_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1232_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1232_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1232_165 #x0000000000000001))
(assert (= var1191803 temp1232_165))
(assert (= temp1232_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1232_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1232_167 #x0000000000000001))
(assert (= var1191823 temp1232_167))
(assert (= temp1232_168 #x0000000000000001))
(assert (= var1180714 temp1232_168))
(assert (= temp1232_169 #x0000000000000000))
(assert (= temp1232_170 temp1232_169))
(assert (= temp1232_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1232_170)))
(assert (= temp1232_172 #x0000000000000001))
(assert (= temp1232_173 temp1232_172))
(assert (= temp1232_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1232_173)))
(assert (= temp1232_175 #x0000000000000002))
(assert (= temp1232_176 temp1232_175))
(assert (= temp1232_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1232_176)))
(assert (= temp1232_178 #x0000000000000003))
(assert (= temp1232_179 temp1232_178))
(assert (= temp1232_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1232_179)))
(assert (= temp1232_181 #x0000000000000004))
(assert (= temp1232_182 temp1232_181))
(assert (= temp1232_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1232_182)))
(assert (= temp1232_184 #x0000000000000005))
(assert (= temp1232_185 temp1232_184))
(assert (= temp1232_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1232_185)))
(assert (= temp1232_187 #x0000000000000000))
(assert (= temp1232_188
   (ite (bvslt var1180714 temp1232_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1232_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1232_188)))
(assert (= var1191831 temp1232_189))
(assert (bvslt (ite (bvslt var1180714 temp1232_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1232_190 #x0000000000000001))
(assert (= var1180714 temp1232_190))
(assert (= temp1232_192 var1180714))
(assert (= temp1232_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1232_192)))
(assert (= temp1232_191 temp1232_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1232_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1232_194 #x0000000000000001))
(assert (= var1191836 temp1232_194))
(assert (= temp1232_195 #x0000000000000000))
(assert (= var1179826 temp1232_195))
(assert (= temp1232_197 var1179826))
(assert (= temp1232_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1232_197)))
(assert (= temp1232_196 temp1232_198))
(assert (= temp1232_199 #x0000000000000002))
(assert (= var1586025 temp1232_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1232_200 #x0000000000000001))
(assert (= var1191993 temp1232_200))
(assert (= temp1232_201 #x0000000000000001))
(assert (= var2700303 temp1232_201))
(assert (= temp1232_202 #x0000000000000001))
(assert (= var2962447 temp1232_202))
(assert (= temp1232_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1232_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1232_204 #x0000000000000001))
(assert (= var211058 temp1232_204))
(assert (= temp1232_205 #x0000000000000001))
(assert (= var211188 temp1232_205))
(assert (= var3879401 var211188))
(assert (= temp1232_206 #x0000000000000000))
(assert (= var3866802 temp1232_206))
(assert (= temp1232_207 #x0000000000000000))
(assert (= temp1232_208
   (ite (bvslt var3866802 temp1232_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1232_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1232_208)))
(assert (= var3879420 temp1232_209))
(assert (bvslt (ite (bvslt var3866802 temp1232_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1232_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1232_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1232_211 #x0000000000000001))
(assert (= var3879421 temp1232_211))
(assert (= temp1232_212 #x0000000000000000))
(assert (= var4133117 temp1232_212))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1232_213 #x0000000000000002))
(assert (= var4339331 temp1232_213))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1232_214 #x0000000000000000))
(assert (= var4404892 temp1232_214))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5124496 var211201))
(assert (= var211494 var210913))
(assert (= temp1232_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp1232_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp1232_217 #x0000000000000001))
(assert (= temp1232_216 temp1232_217))
(assert (= temp1232_218 #x0000000000000001))
(assert (= var7081450 temp1232_218))
(assert (= temp1232_220 #xffffffffffffffff))
(assert (= temp1232_219 temp1232_220))
(assert (= temp1232_221 #x0000000000000001))
(assert (= var211058 temp1232_221))
(model-add temp1232_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1232_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1232_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1232_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





