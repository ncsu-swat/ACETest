(declare-fun temp825_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp825_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp825_3 () (_ BitVec 64))
(declare-fun temp825_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp825_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp825_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp825_7 () (_ BitVec 64))
(declare-fun temp825_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp825_9 () (_ BitVec 64))
(declare-fun temp825_10 () (_ BitVec 64))
(declare-fun temp825_11 () (_ BitVec 64))
(declare-fun temp825_12 () (_ BitVec 64))
(declare-fun temp825_13 () (_ BitVec 64))
(declare-fun temp825_14 () (_ BitVec 64))
(declare-fun temp825_15 () (_ BitVec 64))
(declare-fun temp825_16 () (_ BitVec 64))
(declare-fun temp825_17 () (_ BitVec 64))
(declare-fun temp825_18 () (_ BitVec 64))
(declare-fun temp825_19 () (_ BitVec 64))
(declare-fun temp825_20 () (_ BitVec 64))
(declare-fun temp825_21 () (_ BitVec 64))
(declare-fun temp825_22 () (_ BitVec 64))
(declare-fun temp825_23 () (_ BitVec 64))
(declare-fun temp825_24 () (_ BitVec 64))
(declare-fun temp825_25 () (_ BitVec 64))
(declare-fun temp825_26 () (_ BitVec 64))
(declare-fun temp825_27 () (_ BitVec 64))
(declare-fun temp825_28 () (_ BitVec 64))
(declare-fun temp825_29 () (_ BitVec 64))
(declare-fun temp825_30 () (_ BitVec 64))
(declare-fun temp825_31 () (_ BitVec 64))
(declare-fun temp825_32 () (_ BitVec 64))
(declare-fun temp825_33 () (_ BitVec 64))
(declare-fun temp825_34 () (_ BitVec 64))
(declare-fun temp825_35 () (_ BitVec 64))
(declare-fun temp825_36 () (_ BitVec 64))
(declare-fun temp825_37 () (_ BitVec 64))
(declare-fun temp825_38 () (_ BitVec 64))
(declare-fun temp825_39 () (_ BitVec 64))
(declare-fun temp825_40 () (_ BitVec 64))
(declare-fun temp825_41 () (_ BitVec 64))
(declare-fun temp825_42 () (_ BitVec 64))
(declare-fun temp825_43 () (_ BitVec 64))
(declare-fun temp825_44 () (_ BitVec 64))
(declare-fun temp825_45 () (_ BitVec 64))
(declare-fun temp825_46 () (_ BitVec 64))
(declare-fun temp825_47 () (_ BitVec 64))
(declare-fun temp825_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp825_49 () (_ BitVec 64))
(declare-fun temp825_50 () (_ BitVec 64))
(declare-fun temp825_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp825_52 () (_ BitVec 64))
(declare-fun temp825_53 () (_ BitVec 64))
(declare-fun temp825_54 () (_ BitVec 64))
(declare-fun temp825_55 () (_ BitVec 64))
(declare-fun temp825_56 () (_ BitVec 64))
(declare-fun temp825_57 () (_ BitVec 64))
(declare-fun temp825_58 () (_ BitVec 64))
(declare-fun temp825_59 () (_ BitVec 64))
(declare-fun temp825_60 () (_ BitVec 64))
(declare-fun temp825_61 () (_ BitVec 64))
(declare-fun temp825_62 () (_ BitVec 64))
(declare-fun temp825_63 () (_ BitVec 64))
(declare-fun temp825_64 () (_ BitVec 64))
(declare-fun temp825_65 () (_ BitVec 64))
(declare-fun temp825_66 () (_ BitVec 64))
(declare-fun temp825_67 () (_ BitVec 64))
(declare-fun temp825_68 () (_ BitVec 64))
(declare-fun temp825_69 () (_ BitVec 64))
(declare-fun temp825_70 () (_ BitVec 64))
(declare-fun temp825_71 () (_ BitVec 64))
(declare-fun temp825_72 () (_ BitVec 64))
(declare-fun temp825_73 () (_ BitVec 64))
(declare-fun temp825_74 () (_ BitVec 64))
(declare-fun temp825_75 () (_ BitVec 64))
(declare-fun temp825_76 () (_ BitVec 64))
(declare-fun temp825_77 () (_ BitVec 64))
(declare-fun temp825_78 () (_ BitVec 64))
(declare-fun temp825_79 () (_ BitVec 64))
(declare-fun temp825_80 () (_ BitVec 64))
(declare-fun temp825_81 () (_ BitVec 64))
(declare-fun temp825_82 () (_ BitVec 64))
(declare-fun temp825_83 () (_ BitVec 64))
(declare-fun temp825_84 () (_ BitVec 64))
(declare-fun temp825_85 () (_ BitVec 64))
(declare-fun temp825_86 () (_ BitVec 64))
(declare-fun temp825_87 () (_ BitVec 64))
(declare-fun temp825_88 () (_ BitVec 64))
(declare-fun temp825_89 () (_ BitVec 64))
(declare-fun temp825_90 () (_ BitVec 64))
(declare-fun temp825_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp825_92 () (_ BitVec 64))
(declare-fun temp825_93 () (_ BitVec 64))
(declare-fun temp825_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp825_95 () (_ BitVec 64))
(declare-fun temp825_96 () (_ BitVec 64))
(declare-fun temp825_97 () (_ BitVec 64))
(declare-fun temp825_98 () (_ BitVec 64))
(declare-fun temp825_99 () (_ BitVec 64))
(declare-fun temp825_100 () (_ BitVec 64))
(declare-fun temp825_101 () (_ BitVec 64))
(declare-fun temp825_102 () (_ BitVec 64))
(declare-fun temp825_103 () (_ BitVec 64))
(declare-fun temp825_104 () (_ BitVec 64))
(declare-fun temp825_105 () (_ BitVec 64))
(declare-fun temp825_106 () (_ BitVec 64))
(declare-fun temp825_107 () (_ BitVec 64))
(declare-fun temp825_108 () (_ BitVec 64))
(declare-fun temp825_109 () (_ BitVec 64))
(declare-fun temp825_110 () (_ BitVec 64))
(declare-fun temp825_111 () (_ BitVec 64))
(declare-fun temp825_112 () (_ BitVec 64))
(declare-fun temp825_113 () (_ BitVec 64))
(declare-fun temp825_114 () (_ BitVec 64))
(declare-fun temp825_115 () (_ BitVec 64))
(declare-fun temp825_116 () (_ BitVec 64))
(declare-fun temp825_117 () (_ BitVec 64))
(declare-fun temp825_118 () (_ BitVec 64))
(declare-fun temp825_119 () (_ BitVec 64))
(declare-fun temp825_120 () (_ BitVec 64))
(declare-fun temp825_121 () (_ BitVec 64))
(declare-fun temp825_122 () (_ BitVec 64))
(declare-fun temp825_123 () (_ BitVec 64))
(declare-fun temp825_124 () (_ BitVec 64))
(declare-fun temp825_125 () (_ BitVec 64))
(declare-fun temp825_126 () (_ BitVec 64))
(declare-fun temp825_127 () (_ BitVec 64))
(declare-fun temp825_128 () (_ BitVec 64))
(declare-fun temp825_129 () (_ BitVec 64))
(declare-fun temp825_130 () (_ BitVec 64))
(declare-fun temp825_131 () (_ BitVec 64))
(declare-fun temp825_132 () (_ BitVec 64))
(declare-fun temp825_133 () (_ BitVec 64))
(declare-fun temp825_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp825_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp825_136 () (_ BitVec 64))
(declare-fun temp825_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp825_138 () (_ BitVec 64))
(declare-fun temp825_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp825_140 () (_ BitVec 64))
(declare-fun temp825_141 () (_ BitVec 64))
(declare-fun temp825_142 () (_ BitVec 64))
(declare-fun temp825_143 () (_ BitVec 64))
(declare-fun temp825_144 () (_ BitVec 64))
(declare-fun temp825_145 () (_ BitVec 64))
(declare-fun temp825_146 () (_ BitVec 64))
(declare-fun temp825_147 () (_ BitVec 64))
(declare-fun temp825_148 () (_ BitVec 64))
(declare-fun temp825_149 () (_ BitVec 64))
(declare-fun temp825_150 () (_ BitVec 64))
(declare-fun temp825_151 () (_ BitVec 64))
(declare-fun temp825_152 () (_ BitVec 64))
(declare-fun temp825_153 () (_ BitVec 64))
(declare-fun temp825_154 () (_ BitVec 64))
(declare-fun temp825_155 () (_ BitVec 64))
(declare-fun temp825_157 () (_ BitVec 64))
(declare-fun temp825_158 () (_ BitVec 64))
(declare-fun temp825_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp825_159 () (_ BitVec 64))
(declare-fun temp825_160 () (_ BitVec 64))
(declare-fun temp825_162 () (_ BitVec 64))
(declare-fun temp825_163 () (_ BitVec 64))
(declare-fun temp825_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp825_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp825_165 () (_ BitVec 64))
(declare-fun temp825_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp825_167 () (_ BitVec 64))
(declare-fun temp825_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp825_169 () (_ BitVec 64))
(declare-fun temp825_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp825_171 () (_ BitVec 64))
(declare-fun temp825_172 () (_ BitVec 64))
(declare-fun temp825_173 () (_ BitVec 64))
(declare-fun temp825_174 () (_ BitVec 64))
(declare-fun temp825_175 () (_ BitVec 64))
(declare-fun temp825_176 () (_ BitVec 64))
(declare-fun temp825_177 () (_ BitVec 64))
(declare-fun temp825_178 () (_ BitVec 64))
(declare-fun temp825_179 () (_ BitVec 64))
(declare-fun temp825_180 () (_ BitVec 64))
(declare-fun temp825_181 () (_ BitVec 64))
(declare-fun temp825_182 () (_ BitVec 64))
(declare-fun temp825_183 () (_ BitVec 64))
(declare-fun temp825_184 () (_ BitVec 64))
(declare-fun temp825_185 () (_ BitVec 64))
(declare-fun temp825_186 () (_ BitVec 64))
(declare-fun temp825_187 () (_ BitVec 64))
(declare-fun temp825_188 () (_ BitVec 64))
(declare-fun temp825_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp825_190 () (_ BitVec 64))
(declare-fun temp825_192 () (_ BitVec 64))
(declare-fun temp825_193 () (_ BitVec 64))
(declare-fun temp825_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp825_194 () (_ BitVec 64))
(declare-fun temp825_195 () (_ BitVec 64))
(declare-fun temp825_197 () (_ BitVec 64))
(declare-fun temp825_198 () (_ BitVec 64))
(declare-fun temp825_196 () (_ BitVec 64))
(declare-fun temp825_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp825_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp825_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp825_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp825_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp825_204 () (_ BitVec 64))
(declare-fun temp825_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp825_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp825_207 () (_ BitVec 64))
(declare-fun temp825_208 () (_ BitVec 64))
(declare-fun temp825_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp825_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp825_211 () (_ BitVec 64))
(declare-fun temp825_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp825_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp825_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211962 () (_ BitVec 64))
(declare-fun temp825_215 () (_ BitVec 64))
(declare-fun var211963 () (_ BitVec 64))
(declare-fun temp825_216 () (_ BitVec 64))
(assert (= temp825_1 #x0000000000000001))
(assert (= var77203 temp825_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp825_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp825_2)))
(assert (= temp825_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp825_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp825_4 #x0000000000000000))
(assert (= var210941 temp825_4))
(assert (= temp825_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp825_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp825_6 #x0000000000000000))
(assert (= var210986 temp825_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp825_7 #x0000000000000000))
(assert (= temp825_8 temp825_7))
(assert (= temp825_9 (select ARGNAME_padding_NAMEEND_VAL temp825_8)))
(assert (= temp825_10 #x0000000000000001))
(assert (= temp825_11 temp825_10))
(assert (= temp825_12 (select ARGNAME_padding_NAMEEND_VAL temp825_11)))
(assert (= temp825_13 #x0000000000000002))
(assert (= temp825_14 temp825_13))
(assert (= temp825_15 (select ARGNAME_padding_NAMEEND_VAL temp825_14)))
(assert (= temp825_16 #x0000000000000003))
(assert (= temp825_17 temp825_16))
(assert (= temp825_18 (select ARGNAME_padding_NAMEEND_VAL temp825_17)))
(assert (= temp825_19 #x0000000000000004))
(assert (= temp825_20 temp825_19))
(assert (= temp825_21 (select ARGNAME_padding_NAMEEND_VAL temp825_20)))
(assert (= temp825_22 #x0000000000000005))
(assert (= temp825_23 temp825_22))
(assert (= temp825_24 (select ARGNAME_padding_NAMEEND_VAL temp825_23)))
(assert (= temp825_25 #x0000000000000000))
(assert (= temp825_26 #x0000000000000000))
(assert (= temp825_27 temp825_26))
(assert (= temp825_28 (select ARGNAME_padding_NAMEEND_VAL temp825_27)))
(assert (= temp825_29 #x0000000000000000))
(assert (= temp825_30 #x0000000000000001))
(assert (= temp825_31 temp825_30))
(assert (= temp825_32 (select ARGNAME_padding_NAMEEND_VAL temp825_31)))
(assert (= temp825_33 #x0000000000000000))
(assert (= temp825_34 #x0000000000000002))
(assert (= temp825_35 temp825_34))
(assert (= temp825_36 (select ARGNAME_padding_NAMEEND_VAL temp825_35)))
(assert (= temp825_37 #x0000000000000000))
(assert (= temp825_38 #x0000000000000003))
(assert (= temp825_39 temp825_38))
(assert (= temp825_40 (select ARGNAME_padding_NAMEEND_VAL temp825_39)))
(assert (= temp825_41 #x0000000000000000))
(assert (= temp825_42 #x0000000000000004))
(assert (= temp825_43 temp825_42))
(assert (= temp825_44 (select ARGNAME_padding_NAMEEND_VAL temp825_43)))
(assert (= temp825_45 #x0000000000000000))
(assert (= temp825_46 #x0000000000000005))
(assert (= temp825_47 temp825_46))
(assert (= temp825_48 (select ARGNAME_padding_NAMEEND_VAL temp825_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp825_28 temp825_25)
             (bvslt temp825_32 temp825_29)
             (bvslt temp825_36 temp825_33)
             (bvslt temp825_40 temp825_37)
             (bvslt temp825_44 temp825_41)
             (bvslt temp825_48 temp825_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp825_49 #x0000000000000000))
(assert (= var1191714 temp825_49))
(assert (= temp825_50 #x0000000000000000))
(assert (= temp825_51 temp825_50))
(assert (= temp825_52 (select ARGNAME_output_padding_NAMEEND_VAL temp825_51)))
(assert (= temp825_53 #x0000000000000001))
(assert (= temp825_54 temp825_53))
(assert (= temp825_55 (select ARGNAME_output_padding_NAMEEND_VAL temp825_54)))
(assert (= temp825_56 #x0000000000000002))
(assert (= temp825_57 temp825_56))
(assert (= temp825_58 (select ARGNAME_output_padding_NAMEEND_VAL temp825_57)))
(assert (= temp825_59 #x0000000000000003))
(assert (= temp825_60 temp825_59))
(assert (= temp825_61 (select ARGNAME_output_padding_NAMEEND_VAL temp825_60)))
(assert (= temp825_62 #x0000000000000004))
(assert (= temp825_63 temp825_62))
(assert (= temp825_64 (select ARGNAME_output_padding_NAMEEND_VAL temp825_63)))
(assert (= temp825_65 #x0000000000000005))
(assert (= temp825_66 temp825_65))
(assert (= temp825_67 (select ARGNAME_output_padding_NAMEEND_VAL temp825_66)))
(assert (= temp825_68 #x0000000000000000))
(assert (= temp825_69 #x0000000000000000))
(assert (= temp825_70 temp825_69))
(assert (= temp825_71 (select ARGNAME_output_padding_NAMEEND_VAL temp825_70)))
(assert (= temp825_72 #x0000000000000000))
(assert (= temp825_73 #x0000000000000001))
(assert (= temp825_74 temp825_73))
(assert (= temp825_75 (select ARGNAME_output_padding_NAMEEND_VAL temp825_74)))
(assert (= temp825_76 #x0000000000000000))
(assert (= temp825_77 #x0000000000000002))
(assert (= temp825_78 temp825_77))
(assert (= temp825_79 (select ARGNAME_output_padding_NAMEEND_VAL temp825_78)))
(assert (= temp825_80 #x0000000000000000))
(assert (= temp825_81 #x0000000000000003))
(assert (= temp825_82 temp825_81))
(assert (= temp825_83 (select ARGNAME_output_padding_NAMEEND_VAL temp825_82)))
(assert (= temp825_84 #x0000000000000000))
(assert (= temp825_85 #x0000000000000004))
(assert (= temp825_86 temp825_85))
(assert (= temp825_87 (select ARGNAME_output_padding_NAMEEND_VAL temp825_86)))
(assert (= temp825_88 #x0000000000000000))
(assert (= temp825_89 #x0000000000000005))
(assert (= temp825_90 temp825_89))
(assert (= temp825_91 (select ARGNAME_output_padding_NAMEEND_VAL temp825_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp825_71 temp825_68)
             (bvslt temp825_75 temp825_72)
             (bvslt temp825_79 temp825_76)
             (bvslt temp825_83 temp825_80)
             (bvslt temp825_87 temp825_84)
             (bvslt temp825_91 temp825_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp825_92 #x0000000000000000))
(assert (= var1191725 temp825_92))
(assert (= temp825_93 #x0000000000000000))
(assert (= temp825_94 temp825_93))
(assert (= temp825_95 (select ARGNAME_stride_NAMEEND_VAL temp825_94)))
(assert (= temp825_96 #x0000000000000001))
(assert (= temp825_97 temp825_96))
(assert (= temp825_98 (select ARGNAME_stride_NAMEEND_VAL temp825_97)))
(assert (= temp825_99 #x0000000000000002))
(assert (= temp825_100 temp825_99))
(assert (= temp825_101 (select ARGNAME_stride_NAMEEND_VAL temp825_100)))
(assert (= temp825_102 #x0000000000000003))
(assert (= temp825_103 temp825_102))
(assert (= temp825_104 (select ARGNAME_stride_NAMEEND_VAL temp825_103)))
(assert (= temp825_105 #x0000000000000004))
(assert (= temp825_106 temp825_105))
(assert (= temp825_107 (select ARGNAME_stride_NAMEEND_VAL temp825_106)))
(assert (= temp825_108 #x0000000000000005))
(assert (= temp825_109 temp825_108))
(assert (= temp825_110 (select ARGNAME_stride_NAMEEND_VAL temp825_109)))
(assert (= temp825_111 #x0000000000000000))
(assert (= temp825_112 #x0000000000000000))
(assert (= temp825_113 temp825_112))
(assert (= temp825_114 (select ARGNAME_stride_NAMEEND_VAL temp825_113)))
(assert (= temp825_115 #x0000000000000000))
(assert (= temp825_116 #x0000000000000001))
(assert (= temp825_117 temp825_116))
(assert (= temp825_118 (select ARGNAME_stride_NAMEEND_VAL temp825_117)))
(assert (= temp825_119 #x0000000000000000))
(assert (= temp825_120 #x0000000000000002))
(assert (= temp825_121 temp825_120))
(assert (= temp825_122 (select ARGNAME_stride_NAMEEND_VAL temp825_121)))
(assert (= temp825_123 #x0000000000000000))
(assert (= temp825_124 #x0000000000000003))
(assert (= temp825_125 temp825_124))
(assert (= temp825_126 (select ARGNAME_stride_NAMEEND_VAL temp825_125)))
(assert (= temp825_127 #x0000000000000000))
(assert (= temp825_128 #x0000000000000004))
(assert (= temp825_129 temp825_128))
(assert (= temp825_130 (select ARGNAME_stride_NAMEEND_VAL temp825_129)))
(assert (= temp825_131 #x0000000000000000))
(assert (= temp825_132 #x0000000000000005))
(assert (= temp825_133 temp825_132))
(assert (= temp825_134 (select ARGNAME_stride_NAMEEND_VAL temp825_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp825_114 temp825_111)
             (bvsle temp825_118 temp825_115)
             (bvsle temp825_122 temp825_119)
             (bvsle temp825_126 temp825_123)
             (bvsle temp825_130 temp825_127)
             (bvsle temp825_134 temp825_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp825_135 #x0000000000000000))
(assert (= var1191735 temp825_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp825_136 #x0000000000000001))
(assert (= var1191747 temp825_136))
(assert (= temp825_137 #x0000000000000000))
(assert (= var1179826 temp825_137))
(assert (= temp825_138 #x0000000000000000))
(assert (= temp825_139 temp825_138))
(assert (= temp825_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp825_139)))
(assert (= temp825_141 #x0000000000000001))
(assert (= temp825_142 temp825_141))
(assert (= temp825_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp825_142)))
(assert (= temp825_144 #x0000000000000002))
(assert (= temp825_145 temp825_144))
(assert (= temp825_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp825_145)))
(assert (= temp825_147 #x0000000000000003))
(assert (= temp825_148 temp825_147))
(assert (= temp825_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp825_148)))
(assert (= temp825_150 #x0000000000000004))
(assert (= temp825_151 temp825_150))
(assert (= temp825_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp825_151)))
(assert (= temp825_153 #x0000000000000005))
(assert (= temp825_154 temp825_153))
(assert (= temp825_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp825_154)))
(assert (= temp825_157 var1179826))
(assert (= temp825_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp825_157)))
(assert (= temp825_156 temp825_158))
(assert (= var1191780
   (ite (bvslt temp825_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp825_159 #x0000000000000000))
(assert (= var1191780 temp825_159))
(assert (= temp825_160 #x0000000000000000))
(assert (= var1179826 temp825_160))
(assert (= temp825_162 var1179826))
(assert (= temp825_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp825_162)))
(assert (= temp825_161 temp825_163))
(assert (= var1191802 (bvsmod temp825_161 ARGNAME_groups_NAMEEND)))
(assert (= temp825_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp825_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp825_165 #x0000000000000001))
(assert (= var1191803 temp825_165))
(assert (= temp825_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp825_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp825_167 #x0000000000000001))
(assert (= var1191823 temp825_167))
(assert (= temp825_168 #x0000000000000001))
(assert (= var1180714 temp825_168))
(assert (= temp825_169 #x0000000000000000))
(assert (= temp825_170 temp825_169))
(assert (= temp825_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp825_170)))
(assert (= temp825_172 #x0000000000000001))
(assert (= temp825_173 temp825_172))
(assert (= temp825_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp825_173)))
(assert (= temp825_175 #x0000000000000002))
(assert (= temp825_176 temp825_175))
(assert (= temp825_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp825_176)))
(assert (= temp825_178 #x0000000000000003))
(assert (= temp825_179 temp825_178))
(assert (= temp825_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp825_179)))
(assert (= temp825_181 #x0000000000000004))
(assert (= temp825_182 temp825_181))
(assert (= temp825_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp825_182)))
(assert (= temp825_184 #x0000000000000005))
(assert (= temp825_185 temp825_184))
(assert (= temp825_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp825_185)))
(assert (= temp825_187 #x0000000000000000))
(assert (= temp825_188
   (ite (bvslt var1180714 temp825_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp825_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp825_188)))
(assert (= var1191831 temp825_189))
(assert (bvslt (ite (bvslt var1180714 temp825_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp825_190 #x0000000000000001))
(assert (= var1180714 temp825_190))
(assert (= temp825_192 var1180714))
(assert (= temp825_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp825_192)))
(assert (= temp825_191 temp825_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp825_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp825_194 #x0000000000000001))
(assert (= var1191836 temp825_194))
(assert (= temp825_195 #x0000000000000000))
(assert (= var1179826 temp825_195))
(assert (= temp825_197 var1179826))
(assert (= temp825_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp825_197)))
(assert (= temp825_196 temp825_198))
(assert (= temp825_199 #x0000000000000002))
(assert (= var1586025 temp825_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp825_200 #x0000000000000001))
(assert (= var1191993 temp825_200))
(assert (= temp825_201 #x0000000000000001))
(assert (= var2700303 temp825_201))
(assert (= temp825_202 #x0000000000000001))
(assert (= var2962447 temp825_202))
(assert (= temp825_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp825_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp825_204 #x0000000000000001))
(assert (= var211058 temp825_204))
(assert (= temp825_205 #x0000000000000001))
(assert (= var211188 temp825_205))
(assert (= var3879401 var211188))
(assert (= temp825_206 #x0000000000000000))
(assert (= var3866802 temp825_206))
(assert (= temp825_207 #x0000000000000000))
(assert (= temp825_208
   (ite (bvslt var3866802 temp825_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp825_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp825_208)))
(assert (= var3879420 temp825_209))
(assert (bvslt (ite (bvslt var3866802 temp825_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp825_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp825_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp825_211 #x0000000000000001))
(assert (= var3879421 temp825_211))
(assert (= temp825_212 #x0000000000000000))
(assert (= var4079423 temp825_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp825_213 #x0000000000000002))
(assert (= var4208259 temp825_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp825_214 #x0000000000000000))
(assert (= var4273820 temp825_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211962 var210913))
(assert (= temp825_215 #x0000000000000000))
(assert (= var211963
   (ite (distinct var211962 temp825_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp825_216 #x0000000000000001))
(assert (= var211058 temp825_216))
(model-add temp825_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp825_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp825_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp825_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




