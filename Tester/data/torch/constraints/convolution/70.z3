(declare-fun temp93_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp93_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp93_3 () (_ BitVec 64))
(declare-fun temp93_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp93_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp93_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp93_7 () (_ BitVec 64))
(declare-fun temp93_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp93_9 () (_ BitVec 64))
(declare-fun temp93_10 () (_ BitVec 64))
(declare-fun temp93_11 () (_ BitVec 64))
(declare-fun temp93_12 () (_ BitVec 64))
(declare-fun temp93_13 () (_ BitVec 64))
(declare-fun temp93_14 () (_ BitVec 64))
(declare-fun temp93_15 () (_ BitVec 64))
(declare-fun temp93_16 () (_ BitVec 64))
(declare-fun temp93_17 () (_ BitVec 64))
(declare-fun temp93_18 () (_ BitVec 64))
(declare-fun temp93_19 () (_ BitVec 64))
(declare-fun temp93_20 () (_ BitVec 64))
(declare-fun temp93_21 () (_ BitVec 64))
(declare-fun temp93_22 () (_ BitVec 64))
(declare-fun temp93_23 () (_ BitVec 64))
(declare-fun temp93_24 () (_ BitVec 64))
(declare-fun temp93_25 () (_ BitVec 64))
(declare-fun temp93_26 () (_ BitVec 64))
(declare-fun temp93_27 () (_ BitVec 64))
(declare-fun temp93_28 () (_ BitVec 64))
(declare-fun temp93_29 () (_ BitVec 64))
(declare-fun temp93_30 () (_ BitVec 64))
(declare-fun temp93_31 () (_ BitVec 64))
(declare-fun temp93_32 () (_ BitVec 64))
(declare-fun temp93_33 () (_ BitVec 64))
(declare-fun temp93_34 () (_ BitVec 64))
(declare-fun temp93_35 () (_ BitVec 64))
(declare-fun temp93_36 () (_ BitVec 64))
(declare-fun temp93_37 () (_ BitVec 64))
(declare-fun temp93_38 () (_ BitVec 64))
(declare-fun temp93_39 () (_ BitVec 64))
(declare-fun temp93_40 () (_ BitVec 64))
(declare-fun temp93_41 () (_ BitVec 64))
(declare-fun temp93_42 () (_ BitVec 64))
(declare-fun temp93_43 () (_ BitVec 64))
(declare-fun temp93_44 () (_ BitVec 64))
(declare-fun temp93_45 () (_ BitVec 64))
(declare-fun temp93_46 () (_ BitVec 64))
(declare-fun temp93_47 () (_ BitVec 64))
(declare-fun temp93_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp93_49 () (_ BitVec 64))
(declare-fun temp93_50 () (_ BitVec 64))
(declare-fun temp93_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp93_52 () (_ BitVec 64))
(declare-fun temp93_53 () (_ BitVec 64))
(declare-fun temp93_54 () (_ BitVec 64))
(declare-fun temp93_55 () (_ BitVec 64))
(declare-fun temp93_56 () (_ BitVec 64))
(declare-fun temp93_57 () (_ BitVec 64))
(declare-fun temp93_58 () (_ BitVec 64))
(declare-fun temp93_59 () (_ BitVec 64))
(declare-fun temp93_60 () (_ BitVec 64))
(declare-fun temp93_61 () (_ BitVec 64))
(declare-fun temp93_62 () (_ BitVec 64))
(declare-fun temp93_63 () (_ BitVec 64))
(declare-fun temp93_64 () (_ BitVec 64))
(declare-fun temp93_65 () (_ BitVec 64))
(declare-fun temp93_66 () (_ BitVec 64))
(declare-fun temp93_67 () (_ BitVec 64))
(declare-fun temp93_68 () (_ BitVec 64))
(declare-fun temp93_69 () (_ BitVec 64))
(declare-fun temp93_70 () (_ BitVec 64))
(declare-fun temp93_71 () (_ BitVec 64))
(declare-fun temp93_72 () (_ BitVec 64))
(declare-fun temp93_73 () (_ BitVec 64))
(declare-fun temp93_74 () (_ BitVec 64))
(declare-fun temp93_75 () (_ BitVec 64))
(declare-fun temp93_76 () (_ BitVec 64))
(declare-fun temp93_77 () (_ BitVec 64))
(declare-fun temp93_78 () (_ BitVec 64))
(declare-fun temp93_79 () (_ BitVec 64))
(declare-fun temp93_80 () (_ BitVec 64))
(declare-fun temp93_81 () (_ BitVec 64))
(declare-fun temp93_82 () (_ BitVec 64))
(declare-fun temp93_83 () (_ BitVec 64))
(declare-fun temp93_84 () (_ BitVec 64))
(declare-fun temp93_85 () (_ BitVec 64))
(declare-fun temp93_86 () (_ BitVec 64))
(declare-fun temp93_87 () (_ BitVec 64))
(declare-fun temp93_88 () (_ BitVec 64))
(declare-fun temp93_89 () (_ BitVec 64))
(declare-fun temp93_90 () (_ BitVec 64))
(declare-fun temp93_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp93_92 () (_ BitVec 64))
(declare-fun temp93_93 () (_ BitVec 64))
(declare-fun temp93_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp93_95 () (_ BitVec 64))
(declare-fun temp93_96 () (_ BitVec 64))
(declare-fun temp93_97 () (_ BitVec 64))
(declare-fun temp93_98 () (_ BitVec 64))
(declare-fun temp93_99 () (_ BitVec 64))
(declare-fun temp93_100 () (_ BitVec 64))
(declare-fun temp93_101 () (_ BitVec 64))
(declare-fun temp93_102 () (_ BitVec 64))
(declare-fun temp93_103 () (_ BitVec 64))
(declare-fun temp93_104 () (_ BitVec 64))
(declare-fun temp93_105 () (_ BitVec 64))
(declare-fun temp93_106 () (_ BitVec 64))
(declare-fun temp93_107 () (_ BitVec 64))
(declare-fun temp93_108 () (_ BitVec 64))
(declare-fun temp93_109 () (_ BitVec 64))
(declare-fun temp93_110 () (_ BitVec 64))
(declare-fun temp93_111 () (_ BitVec 64))
(declare-fun temp93_112 () (_ BitVec 64))
(declare-fun temp93_113 () (_ BitVec 64))
(declare-fun temp93_114 () (_ BitVec 64))
(declare-fun temp93_115 () (_ BitVec 64))
(declare-fun temp93_116 () (_ BitVec 64))
(declare-fun temp93_117 () (_ BitVec 64))
(declare-fun temp93_118 () (_ BitVec 64))
(declare-fun temp93_119 () (_ BitVec 64))
(declare-fun temp93_120 () (_ BitVec 64))
(declare-fun temp93_121 () (_ BitVec 64))
(declare-fun temp93_122 () (_ BitVec 64))
(declare-fun temp93_123 () (_ BitVec 64))
(declare-fun temp93_124 () (_ BitVec 64))
(declare-fun temp93_125 () (_ BitVec 64))
(declare-fun temp93_126 () (_ BitVec 64))
(declare-fun temp93_127 () (_ BitVec 64))
(declare-fun temp93_128 () (_ BitVec 64))
(declare-fun temp93_129 () (_ BitVec 64))
(declare-fun temp93_130 () (_ BitVec 64))
(declare-fun temp93_131 () (_ BitVec 64))
(declare-fun temp93_132 () (_ BitVec 64))
(declare-fun temp93_133 () (_ BitVec 64))
(declare-fun temp93_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp93_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp93_136 () (_ BitVec 64))
(declare-fun temp93_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp93_138 () (_ BitVec 64))
(declare-fun temp93_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp93_140 () (_ BitVec 64))
(declare-fun temp93_141 () (_ BitVec 64))
(declare-fun temp93_142 () (_ BitVec 64))
(declare-fun temp93_143 () (_ BitVec 64))
(declare-fun temp93_144 () (_ BitVec 64))
(declare-fun temp93_145 () (_ BitVec 64))
(declare-fun temp93_146 () (_ BitVec 64))
(declare-fun temp93_147 () (_ BitVec 64))
(declare-fun temp93_148 () (_ BitVec 64))
(declare-fun temp93_149 () (_ BitVec 64))
(declare-fun temp93_150 () (_ BitVec 64))
(declare-fun temp93_151 () (_ BitVec 64))
(declare-fun temp93_152 () (_ BitVec 64))
(declare-fun temp93_153 () (_ BitVec 64))
(declare-fun temp93_154 () (_ BitVec 64))
(declare-fun temp93_155 () (_ BitVec 64))
(declare-fun temp93_157 () (_ BitVec 64))
(declare-fun temp93_158 () (_ BitVec 64))
(declare-fun temp93_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp93_159 () (_ BitVec 64))
(declare-fun temp93_160 () (_ BitVec 64))
(declare-fun temp93_162 () (_ BitVec 64))
(declare-fun temp93_163 () (_ BitVec 64))
(declare-fun temp93_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp93_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp93_165 () (_ BitVec 64))
(declare-fun temp93_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp93_167 () (_ BitVec 64))
(declare-fun temp93_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp93_169 () (_ BitVec 64))
(declare-fun temp93_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp93_171 () (_ BitVec 64))
(declare-fun temp93_172 () (_ BitVec 64))
(declare-fun temp93_173 () (_ BitVec 64))
(declare-fun temp93_174 () (_ BitVec 64))
(declare-fun temp93_175 () (_ BitVec 64))
(declare-fun temp93_176 () (_ BitVec 64))
(declare-fun temp93_177 () (_ BitVec 64))
(declare-fun temp93_178 () (_ BitVec 64))
(declare-fun temp93_179 () (_ BitVec 64))
(declare-fun temp93_180 () (_ BitVec 64))
(declare-fun temp93_181 () (_ BitVec 64))
(declare-fun temp93_182 () (_ BitVec 64))
(declare-fun temp93_183 () (_ BitVec 64))
(declare-fun temp93_184 () (_ BitVec 64))
(declare-fun temp93_185 () (_ BitVec 64))
(declare-fun temp93_186 () (_ BitVec 64))
(declare-fun temp93_187 () (_ BitVec 64))
(declare-fun temp93_188 () (_ BitVec 64))
(declare-fun temp93_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp93_190 () (_ BitVec 64))
(declare-fun temp93_192 () (_ BitVec 64))
(declare-fun temp93_193 () (_ BitVec 64))
(declare-fun temp93_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp93_194 () (_ BitVec 64))
(declare-fun temp93_195 () (_ BitVec 64))
(declare-fun temp93_197 () (_ BitVec 64))
(declare-fun temp93_198 () (_ BitVec 64))
(declare-fun temp93_196 () (_ BitVec 64))
(declare-fun temp93_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp93_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp93_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp93_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp93_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp93_204 () (_ BitVec 64))
(declare-fun temp93_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp93_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp93_207 () (_ BitVec 64))
(declare-fun temp93_208 () (_ BitVec 64))
(declare-fun temp93_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp93_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp93_211 () (_ BitVec 64))
(declare-fun temp93_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp93_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp93_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp93_216 () (_ BitVec 64))
(declare-fun temp93_215 () (_ BitVec 64))
(declare-fun temp93_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp93_218 () (_ BitVec 64))
(declare-fun temp93_219 () (_ BitVec 64))
(declare-fun temp93_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp93_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp93_222 () (_ BitVec 64))
(declare-fun temp93_224 () (_ BitVec 64))
(declare-fun temp93_223 () (_ BitVec 64))
(declare-fun temp93_225 () (_ BitVec 64))
(assert (= temp93_1 #x0000000000000001))
(assert (= var77203 temp93_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp93_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp93_2)))
(assert (= temp93_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp93_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_4 #x0000000000000000))
(assert (= var210941 temp93_4))
(assert (= temp93_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp93_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_6 #x0000000000000000))
(assert (= var210986 temp93_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp93_7 #x0000000000000000))
(assert (= temp93_8 temp93_7))
(assert (= temp93_9 (select ARGNAME_padding_NAMEEND_VAL temp93_8)))
(assert (= temp93_10 #x0000000000000001))
(assert (= temp93_11 temp93_10))
(assert (= temp93_12 (select ARGNAME_padding_NAMEEND_VAL temp93_11)))
(assert (= temp93_13 #x0000000000000002))
(assert (= temp93_14 temp93_13))
(assert (= temp93_15 (select ARGNAME_padding_NAMEEND_VAL temp93_14)))
(assert (= temp93_16 #x0000000000000003))
(assert (= temp93_17 temp93_16))
(assert (= temp93_18 (select ARGNAME_padding_NAMEEND_VAL temp93_17)))
(assert (= temp93_19 #x0000000000000004))
(assert (= temp93_20 temp93_19))
(assert (= temp93_21 (select ARGNAME_padding_NAMEEND_VAL temp93_20)))
(assert (= temp93_22 #x0000000000000005))
(assert (= temp93_23 temp93_22))
(assert (= temp93_24 (select ARGNAME_padding_NAMEEND_VAL temp93_23)))
(assert (= temp93_25 #x0000000000000000))
(assert (= temp93_26 #x0000000000000000))
(assert (= temp93_27 temp93_26))
(assert (= temp93_28 (select ARGNAME_padding_NAMEEND_VAL temp93_27)))
(assert (= temp93_29 #x0000000000000000))
(assert (= temp93_30 #x0000000000000001))
(assert (= temp93_31 temp93_30))
(assert (= temp93_32 (select ARGNAME_padding_NAMEEND_VAL temp93_31)))
(assert (= temp93_33 #x0000000000000000))
(assert (= temp93_34 #x0000000000000002))
(assert (= temp93_35 temp93_34))
(assert (= temp93_36 (select ARGNAME_padding_NAMEEND_VAL temp93_35)))
(assert (= temp93_37 #x0000000000000000))
(assert (= temp93_38 #x0000000000000003))
(assert (= temp93_39 temp93_38))
(assert (= temp93_40 (select ARGNAME_padding_NAMEEND_VAL temp93_39)))
(assert (= temp93_41 #x0000000000000000))
(assert (= temp93_42 #x0000000000000004))
(assert (= temp93_43 temp93_42))
(assert (= temp93_44 (select ARGNAME_padding_NAMEEND_VAL temp93_43)))
(assert (= temp93_45 #x0000000000000000))
(assert (= temp93_46 #x0000000000000005))
(assert (= temp93_47 temp93_46))
(assert (= temp93_48 (select ARGNAME_padding_NAMEEND_VAL temp93_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp93_28 temp93_25)
             (bvslt temp93_32 temp93_29)
             (bvslt temp93_36 temp93_33)
             (bvslt temp93_40 temp93_37)
             (bvslt temp93_44 temp93_41)
             (bvslt temp93_48 temp93_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_49 #x0000000000000000))
(assert (= var1191714 temp93_49))
(assert (= temp93_50 #x0000000000000000))
(assert (= temp93_51 temp93_50))
(assert (= temp93_52 (select ARGNAME_output_padding_NAMEEND_VAL temp93_51)))
(assert (= temp93_53 #x0000000000000001))
(assert (= temp93_54 temp93_53))
(assert (= temp93_55 (select ARGNAME_output_padding_NAMEEND_VAL temp93_54)))
(assert (= temp93_56 #x0000000000000002))
(assert (= temp93_57 temp93_56))
(assert (= temp93_58 (select ARGNAME_output_padding_NAMEEND_VAL temp93_57)))
(assert (= temp93_59 #x0000000000000003))
(assert (= temp93_60 temp93_59))
(assert (= temp93_61 (select ARGNAME_output_padding_NAMEEND_VAL temp93_60)))
(assert (= temp93_62 #x0000000000000004))
(assert (= temp93_63 temp93_62))
(assert (= temp93_64 (select ARGNAME_output_padding_NAMEEND_VAL temp93_63)))
(assert (= temp93_65 #x0000000000000005))
(assert (= temp93_66 temp93_65))
(assert (= temp93_67 (select ARGNAME_output_padding_NAMEEND_VAL temp93_66)))
(assert (= temp93_68 #x0000000000000000))
(assert (= temp93_69 #x0000000000000000))
(assert (= temp93_70 temp93_69))
(assert (= temp93_71 (select ARGNAME_output_padding_NAMEEND_VAL temp93_70)))
(assert (= temp93_72 #x0000000000000000))
(assert (= temp93_73 #x0000000000000001))
(assert (= temp93_74 temp93_73))
(assert (= temp93_75 (select ARGNAME_output_padding_NAMEEND_VAL temp93_74)))
(assert (= temp93_76 #x0000000000000000))
(assert (= temp93_77 #x0000000000000002))
(assert (= temp93_78 temp93_77))
(assert (= temp93_79 (select ARGNAME_output_padding_NAMEEND_VAL temp93_78)))
(assert (= temp93_80 #x0000000000000000))
(assert (= temp93_81 #x0000000000000003))
(assert (= temp93_82 temp93_81))
(assert (= temp93_83 (select ARGNAME_output_padding_NAMEEND_VAL temp93_82)))
(assert (= temp93_84 #x0000000000000000))
(assert (= temp93_85 #x0000000000000004))
(assert (= temp93_86 temp93_85))
(assert (= temp93_87 (select ARGNAME_output_padding_NAMEEND_VAL temp93_86)))
(assert (= temp93_88 #x0000000000000000))
(assert (= temp93_89 #x0000000000000005))
(assert (= temp93_90 temp93_89))
(assert (= temp93_91 (select ARGNAME_output_padding_NAMEEND_VAL temp93_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp93_71 temp93_68)
             (bvslt temp93_75 temp93_72)
             (bvslt temp93_79 temp93_76)
             (bvslt temp93_83 temp93_80)
             (bvslt temp93_87 temp93_84)
             (bvslt temp93_91 temp93_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_92 #x0000000000000000))
(assert (= var1191725 temp93_92))
(assert (= temp93_93 #x0000000000000000))
(assert (= temp93_94 temp93_93))
(assert (= temp93_95 (select ARGNAME_stride_NAMEEND_VAL temp93_94)))
(assert (= temp93_96 #x0000000000000001))
(assert (= temp93_97 temp93_96))
(assert (= temp93_98 (select ARGNAME_stride_NAMEEND_VAL temp93_97)))
(assert (= temp93_99 #x0000000000000002))
(assert (= temp93_100 temp93_99))
(assert (= temp93_101 (select ARGNAME_stride_NAMEEND_VAL temp93_100)))
(assert (= temp93_102 #x0000000000000003))
(assert (= temp93_103 temp93_102))
(assert (= temp93_104 (select ARGNAME_stride_NAMEEND_VAL temp93_103)))
(assert (= temp93_105 #x0000000000000004))
(assert (= temp93_106 temp93_105))
(assert (= temp93_107 (select ARGNAME_stride_NAMEEND_VAL temp93_106)))
(assert (= temp93_108 #x0000000000000005))
(assert (= temp93_109 temp93_108))
(assert (= temp93_110 (select ARGNAME_stride_NAMEEND_VAL temp93_109)))
(assert (= temp93_111 #x0000000000000000))
(assert (= temp93_112 #x0000000000000000))
(assert (= temp93_113 temp93_112))
(assert (= temp93_114 (select ARGNAME_stride_NAMEEND_VAL temp93_113)))
(assert (= temp93_115 #x0000000000000000))
(assert (= temp93_116 #x0000000000000001))
(assert (= temp93_117 temp93_116))
(assert (= temp93_118 (select ARGNAME_stride_NAMEEND_VAL temp93_117)))
(assert (= temp93_119 #x0000000000000000))
(assert (= temp93_120 #x0000000000000002))
(assert (= temp93_121 temp93_120))
(assert (= temp93_122 (select ARGNAME_stride_NAMEEND_VAL temp93_121)))
(assert (= temp93_123 #x0000000000000000))
(assert (= temp93_124 #x0000000000000003))
(assert (= temp93_125 temp93_124))
(assert (= temp93_126 (select ARGNAME_stride_NAMEEND_VAL temp93_125)))
(assert (= temp93_127 #x0000000000000000))
(assert (= temp93_128 #x0000000000000004))
(assert (= temp93_129 temp93_128))
(assert (= temp93_130 (select ARGNAME_stride_NAMEEND_VAL temp93_129)))
(assert (= temp93_131 #x0000000000000000))
(assert (= temp93_132 #x0000000000000005))
(assert (= temp93_133 temp93_132))
(assert (= temp93_134 (select ARGNAME_stride_NAMEEND_VAL temp93_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp93_114 temp93_111)
             (bvsle temp93_118 temp93_115)
             (bvsle temp93_122 temp93_119)
             (bvsle temp93_126 temp93_123)
             (bvsle temp93_130 temp93_127)
             (bvsle temp93_134 temp93_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_135 #x0000000000000000))
(assert (= var1191735 temp93_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_136 #x0000000000000001))
(assert (= var1191747 temp93_136))
(assert (= temp93_137 #x0000000000000000))
(assert (= var1179826 temp93_137))
(assert (= temp93_138 #x0000000000000000))
(assert (= temp93_139 temp93_138))
(assert (= temp93_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_139)))
(assert (= temp93_141 #x0000000000000001))
(assert (= temp93_142 temp93_141))
(assert (= temp93_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_142)))
(assert (= temp93_144 #x0000000000000002))
(assert (= temp93_145 temp93_144))
(assert (= temp93_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_145)))
(assert (= temp93_147 #x0000000000000003))
(assert (= temp93_148 temp93_147))
(assert (= temp93_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_148)))
(assert (= temp93_150 #x0000000000000004))
(assert (= temp93_151 temp93_150))
(assert (= temp93_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_151)))
(assert (= temp93_153 #x0000000000000005))
(assert (= temp93_154 temp93_153))
(assert (= temp93_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_154)))
(assert (= temp93_157 var1179826))
(assert (= temp93_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_157)))
(assert (= temp93_156 temp93_158))
(assert (= var1191780
   (ite (bvslt temp93_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_159 #x0000000000000000))
(assert (= var1191780 temp93_159))
(assert (= temp93_160 #x0000000000000000))
(assert (= var1179826 temp93_160))
(assert (= temp93_162 var1179826))
(assert (= temp93_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_162)))
(assert (= temp93_161 temp93_163))
(assert (= var1191802 (bvsmod temp93_161 ARGNAME_groups_NAMEEND)))
(assert (= temp93_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp93_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp93_165 #x0000000000000001))
(assert (= var1191803 temp93_165))
(assert (= temp93_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp93_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_167 #x0000000000000001))
(assert (= var1191823 temp93_167))
(assert (= temp93_168 #x0000000000000001))
(assert (= var1180714 temp93_168))
(assert (= temp93_169 #x0000000000000000))
(assert (= temp93_170 temp93_169))
(assert (= temp93_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp93_170)))
(assert (= temp93_172 #x0000000000000001))
(assert (= temp93_173 temp93_172))
(assert (= temp93_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp93_173)))
(assert (= temp93_175 #x0000000000000002))
(assert (= temp93_176 temp93_175))
(assert (= temp93_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp93_176)))
(assert (= temp93_178 #x0000000000000003))
(assert (= temp93_179 temp93_178))
(assert (= temp93_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp93_179)))
(assert (= temp93_181 #x0000000000000004))
(assert (= temp93_182 temp93_181))
(assert (= temp93_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp93_182)))
(assert (= temp93_184 #x0000000000000005))
(assert (= temp93_185 temp93_184))
(assert (= temp93_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp93_185)))
(assert (= temp93_187 #x0000000000000000))
(assert (= temp93_188
   (ite (bvslt var1180714 temp93_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp93_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp93_188)))
(assert (= var1191831 temp93_189))
(assert (bvslt (ite (bvslt var1180714 temp93_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp93_190 #x0000000000000001))
(assert (= var1180714 temp93_190))
(assert (= temp93_192 var1180714))
(assert (= temp93_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_192)))
(assert (= temp93_191 temp93_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp93_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp93_194 #x0000000000000001))
(assert (= var1191836 temp93_194))
(assert (= temp93_195 #x0000000000000000))
(assert (= var1179826 temp93_195))
(assert (= temp93_197 var1179826))
(assert (= temp93_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_197)))
(assert (= temp93_196 temp93_198))
(assert (= temp93_199 #x0000000000000002))
(assert (= var1586025 temp93_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp93_200 #x0000000000000001))
(assert (= var1191993 temp93_200))
(assert (= temp93_201 #x0000000000000001))
(assert (= var2700303 temp93_201))
(assert (= temp93_202 #x0000000000000001))
(assert (= var2962447 temp93_202))
(assert (= temp93_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp93_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_204 #x0000000000000001))
(assert (= var211058 temp93_204))
(assert (= temp93_205 #x0000000000000001))
(assert (= var211188 temp93_205))
(assert (= var3879401 var211188))
(assert (= temp93_206 #x0000000000000000))
(assert (= var3866802 temp93_206))
(assert (= temp93_207 #x0000000000000000))
(assert (= temp93_208
   (ite (bvslt var3866802 temp93_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp93_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp93_208)))
(assert (= var3879420 temp93_209))
(assert (bvslt (ite (bvslt var3866802 temp93_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp93_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp93_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp93_211 #x0000000000000001))
(assert (= var3879421 temp93_211))
(assert (= temp93_212 #x0000000000000000))
(assert (= var4079423 temp93_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp93_213 #x0000000000000002))
(assert (= var4208259 temp93_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_214 #x0000000000000000))
(assert (= var4273820 temp93_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp93_216 #xffffffffffffffff))
(assert (= temp93_215 temp93_216))
(assert (= temp93_217 #x0000000000000001))
(assert (= var197674 temp93_217))
(assert (= temp93_218 #x0000000000000000))
(assert (= temp93_219
   (ite (bvslt var197674 temp93_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp93_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp93_219)))
(assert (= var211595 temp93_220))
(assert (bvslt (ite (bvslt var197674 temp93_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp93_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp93_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp93_222 #x0000000000000001))
(assert (= var211596 temp93_222))
(assert (= temp93_224 #xffffffffffffffff))
(assert (= temp93_223 temp93_224))
(assert (= temp93_225 #x0000000000000001))
(assert (= var211058 temp93_225))
(model-add temp93_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp93_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp93_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp93_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





