(declare-fun temp10836_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10836_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10836_3 () (_ BitVec 64))
(declare-fun temp10836_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10836_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10836_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10836_7 () (_ BitVec 64))
(declare-fun temp10836_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10836_9 () (_ BitVec 64))
(declare-fun temp10836_10 () (_ BitVec 64))
(declare-fun temp10836_11 () (_ BitVec 64))
(declare-fun temp10836_12 () (_ BitVec 64))
(declare-fun temp10836_13 () (_ BitVec 64))
(declare-fun temp10836_14 () (_ BitVec 64))
(declare-fun temp10836_15 () (_ BitVec 64))
(declare-fun temp10836_16 () (_ BitVec 64))
(declare-fun temp10836_17 () (_ BitVec 64))
(declare-fun temp10836_18 () (_ BitVec 64))
(declare-fun temp10836_19 () (_ BitVec 64))
(declare-fun temp10836_20 () (_ BitVec 64))
(declare-fun temp10836_21 () (_ BitVec 64))
(declare-fun temp10836_22 () (_ BitVec 64))
(declare-fun temp10836_23 () (_ BitVec 64))
(declare-fun temp10836_24 () (_ BitVec 64))
(declare-fun temp10836_25 () (_ BitVec 64))
(declare-fun temp10836_26 () (_ BitVec 64))
(declare-fun temp10836_27 () (_ BitVec 64))
(declare-fun temp10836_28 () (_ BitVec 64))
(declare-fun temp10836_29 () (_ BitVec 64))
(declare-fun temp10836_30 () (_ BitVec 64))
(declare-fun temp10836_31 () (_ BitVec 64))
(declare-fun temp10836_32 () (_ BitVec 64))
(declare-fun temp10836_33 () (_ BitVec 64))
(declare-fun temp10836_34 () (_ BitVec 64))
(declare-fun temp10836_35 () (_ BitVec 64))
(declare-fun temp10836_36 () (_ BitVec 64))
(declare-fun temp10836_37 () (_ BitVec 64))
(declare-fun temp10836_38 () (_ BitVec 64))
(declare-fun temp10836_39 () (_ BitVec 64))
(declare-fun temp10836_40 () (_ BitVec 64))
(declare-fun temp10836_41 () (_ BitVec 64))
(declare-fun temp10836_42 () (_ BitVec 64))
(declare-fun temp10836_43 () (_ BitVec 64))
(declare-fun temp10836_44 () (_ BitVec 64))
(declare-fun temp10836_45 () (_ BitVec 64))
(declare-fun temp10836_46 () (_ BitVec 64))
(declare-fun temp10836_47 () (_ BitVec 64))
(declare-fun temp10836_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10836_49 () (_ BitVec 64))
(declare-fun temp10836_50 () (_ BitVec 64))
(declare-fun temp10836_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10836_52 () (_ BitVec 64))
(declare-fun temp10836_53 () (_ BitVec 64))
(declare-fun temp10836_54 () (_ BitVec 64))
(declare-fun temp10836_55 () (_ BitVec 64))
(declare-fun temp10836_56 () (_ BitVec 64))
(declare-fun temp10836_57 () (_ BitVec 64))
(declare-fun temp10836_58 () (_ BitVec 64))
(declare-fun temp10836_59 () (_ BitVec 64))
(declare-fun temp10836_60 () (_ BitVec 64))
(declare-fun temp10836_61 () (_ BitVec 64))
(declare-fun temp10836_62 () (_ BitVec 64))
(declare-fun temp10836_63 () (_ BitVec 64))
(declare-fun temp10836_64 () (_ BitVec 64))
(declare-fun temp10836_65 () (_ BitVec 64))
(declare-fun temp10836_66 () (_ BitVec 64))
(declare-fun temp10836_67 () (_ BitVec 64))
(declare-fun temp10836_68 () (_ BitVec 64))
(declare-fun temp10836_69 () (_ BitVec 64))
(declare-fun temp10836_70 () (_ BitVec 64))
(declare-fun temp10836_71 () (_ BitVec 64))
(declare-fun temp10836_72 () (_ BitVec 64))
(declare-fun temp10836_73 () (_ BitVec 64))
(declare-fun temp10836_74 () (_ BitVec 64))
(declare-fun temp10836_75 () (_ BitVec 64))
(declare-fun temp10836_76 () (_ BitVec 64))
(declare-fun temp10836_77 () (_ BitVec 64))
(declare-fun temp10836_78 () (_ BitVec 64))
(declare-fun temp10836_79 () (_ BitVec 64))
(declare-fun temp10836_80 () (_ BitVec 64))
(declare-fun temp10836_81 () (_ BitVec 64))
(declare-fun temp10836_82 () (_ BitVec 64))
(declare-fun temp10836_83 () (_ BitVec 64))
(declare-fun temp10836_84 () (_ BitVec 64))
(declare-fun temp10836_85 () (_ BitVec 64))
(declare-fun temp10836_86 () (_ BitVec 64))
(declare-fun temp10836_87 () (_ BitVec 64))
(declare-fun temp10836_88 () (_ BitVec 64))
(declare-fun temp10836_89 () (_ BitVec 64))
(declare-fun temp10836_90 () (_ BitVec 64))
(declare-fun temp10836_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10836_92 () (_ BitVec 64))
(declare-fun temp10836_93 () (_ BitVec 64))
(declare-fun temp10836_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10836_95 () (_ BitVec 64))
(declare-fun temp10836_96 () (_ BitVec 64))
(declare-fun temp10836_97 () (_ BitVec 64))
(declare-fun temp10836_98 () (_ BitVec 64))
(declare-fun temp10836_99 () (_ BitVec 64))
(declare-fun temp10836_100 () (_ BitVec 64))
(declare-fun temp10836_101 () (_ BitVec 64))
(declare-fun temp10836_102 () (_ BitVec 64))
(declare-fun temp10836_103 () (_ BitVec 64))
(declare-fun temp10836_104 () (_ BitVec 64))
(declare-fun temp10836_105 () (_ BitVec 64))
(declare-fun temp10836_106 () (_ BitVec 64))
(declare-fun temp10836_107 () (_ BitVec 64))
(declare-fun temp10836_108 () (_ BitVec 64))
(declare-fun temp10836_109 () (_ BitVec 64))
(declare-fun temp10836_110 () (_ BitVec 64))
(declare-fun temp10836_111 () (_ BitVec 64))
(declare-fun temp10836_112 () (_ BitVec 64))
(declare-fun temp10836_113 () (_ BitVec 64))
(declare-fun temp10836_114 () (_ BitVec 64))
(declare-fun temp10836_115 () (_ BitVec 64))
(declare-fun temp10836_116 () (_ BitVec 64))
(declare-fun temp10836_117 () (_ BitVec 64))
(declare-fun temp10836_118 () (_ BitVec 64))
(declare-fun temp10836_119 () (_ BitVec 64))
(declare-fun temp10836_120 () (_ BitVec 64))
(declare-fun temp10836_121 () (_ BitVec 64))
(declare-fun temp10836_122 () (_ BitVec 64))
(declare-fun temp10836_123 () (_ BitVec 64))
(declare-fun temp10836_124 () (_ BitVec 64))
(declare-fun temp10836_125 () (_ BitVec 64))
(declare-fun temp10836_126 () (_ BitVec 64))
(declare-fun temp10836_127 () (_ BitVec 64))
(declare-fun temp10836_128 () (_ BitVec 64))
(declare-fun temp10836_129 () (_ BitVec 64))
(declare-fun temp10836_130 () (_ BitVec 64))
(declare-fun temp10836_131 () (_ BitVec 64))
(declare-fun temp10836_132 () (_ BitVec 64))
(declare-fun temp10836_133 () (_ BitVec 64))
(declare-fun temp10836_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10836_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10836_136 () (_ BitVec 64))
(declare-fun temp10836_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10836_138 () (_ BitVec 64))
(declare-fun temp10836_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10836_140 () (_ BitVec 64))
(declare-fun temp10836_141 () (_ BitVec 64))
(declare-fun temp10836_142 () (_ BitVec 64))
(declare-fun temp10836_143 () (_ BitVec 64))
(declare-fun temp10836_144 () (_ BitVec 64))
(declare-fun temp10836_145 () (_ BitVec 64))
(declare-fun temp10836_146 () (_ BitVec 64))
(declare-fun temp10836_147 () (_ BitVec 64))
(declare-fun temp10836_148 () (_ BitVec 64))
(declare-fun temp10836_149 () (_ BitVec 64))
(declare-fun temp10836_150 () (_ BitVec 64))
(declare-fun temp10836_151 () (_ BitVec 64))
(declare-fun temp10836_152 () (_ BitVec 64))
(declare-fun temp10836_153 () (_ BitVec 64))
(declare-fun temp10836_154 () (_ BitVec 64))
(declare-fun temp10836_155 () (_ BitVec 64))
(declare-fun temp10836_157 () (_ BitVec 64))
(declare-fun temp10836_158 () (_ BitVec 64))
(declare-fun temp10836_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10836_159 () (_ BitVec 64))
(declare-fun temp10836_160 () (_ BitVec 64))
(declare-fun temp10836_162 () (_ BitVec 64))
(declare-fun temp10836_163 () (_ BitVec 64))
(declare-fun temp10836_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10836_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10836_165 () (_ BitVec 64))
(declare-fun temp10836_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10836_167 () (_ BitVec 64))
(declare-fun temp10836_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10836_169 () (_ BitVec 64))
(declare-fun temp10836_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10836_171 () (_ BitVec 64))
(declare-fun temp10836_172 () (_ BitVec 64))
(declare-fun temp10836_173 () (_ BitVec 64))
(declare-fun temp10836_174 () (_ BitVec 64))
(declare-fun temp10836_175 () (_ BitVec 64))
(declare-fun temp10836_176 () (_ BitVec 64))
(declare-fun temp10836_177 () (_ BitVec 64))
(declare-fun temp10836_178 () (_ BitVec 64))
(declare-fun temp10836_179 () (_ BitVec 64))
(declare-fun temp10836_180 () (_ BitVec 64))
(declare-fun temp10836_181 () (_ BitVec 64))
(declare-fun temp10836_182 () (_ BitVec 64))
(declare-fun temp10836_183 () (_ BitVec 64))
(declare-fun temp10836_184 () (_ BitVec 64))
(declare-fun temp10836_185 () (_ BitVec 64))
(declare-fun temp10836_186 () (_ BitVec 64))
(declare-fun temp10836_187 () (_ BitVec 64))
(declare-fun temp10836_188 () (_ BitVec 64))
(declare-fun temp10836_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10836_190 () (_ BitVec 64))
(declare-fun temp10836_192 () (_ BitVec 64))
(declare-fun temp10836_193 () (_ BitVec 64))
(declare-fun temp10836_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10836_194 () (_ BitVec 64))
(declare-fun temp10836_195 () (_ BitVec 64))
(declare-fun temp10836_197 () (_ BitVec 64))
(declare-fun temp10836_198 () (_ BitVec 64))
(declare-fun temp10836_196 () (_ BitVec 64))
(declare-fun temp10836_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10836_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10836_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10836_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10836_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10836_204 () (_ BitVec 64))
(declare-fun temp10836_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10836_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10836_207 () (_ BitVec 64))
(declare-fun temp10836_208 () (_ BitVec 64))
(declare-fun temp10836_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10836_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10836_211 () (_ BitVec 64))
(declare-fun temp10836_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10836_213 () (_ BitVec 64))
(declare-fun temp10836_214 () (_ BitVec 64))
(declare-fun temp10836_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10836_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10836_217 () (_ BitVec 64))
(declare-fun temp10836_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10836_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10836_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var5255568 () (_ BitVec 64))
(declare-fun temp10836_221 () (_ BitVec 64))
(declare-fun temp10836_222 () (_ BitVec 64))
(declare-fun var6894356 () (_ BitVec 64))
(declare-fun var6894323 () (_ BitVec 64))
(declare-fun var6762887 () (_ BitVec 64))
(declare-fun var6762883 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10836_223 () (_ BitVec 64))
(assert (= temp10836_1 #x0000000000000001))
(assert (= var77203 temp10836_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10836_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10836_2)))
(assert (= temp10836_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10836_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10836_4 #x0000000000000000))
(assert (= var210941 temp10836_4))
(assert (= temp10836_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10836_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10836_6 #x0000000000000000))
(assert (= var210986 temp10836_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10836_7 #x0000000000000000))
(assert (= temp10836_8 temp10836_7))
(assert (= temp10836_9 (select ARGNAME_padding_NAMEEND_VAL temp10836_8)))
(assert (= temp10836_10 #x0000000000000001))
(assert (= temp10836_11 temp10836_10))
(assert (= temp10836_12 (select ARGNAME_padding_NAMEEND_VAL temp10836_11)))
(assert (= temp10836_13 #x0000000000000002))
(assert (= temp10836_14 temp10836_13))
(assert (= temp10836_15 (select ARGNAME_padding_NAMEEND_VAL temp10836_14)))
(assert (= temp10836_16 #x0000000000000003))
(assert (= temp10836_17 temp10836_16))
(assert (= temp10836_18 (select ARGNAME_padding_NAMEEND_VAL temp10836_17)))
(assert (= temp10836_19 #x0000000000000004))
(assert (= temp10836_20 temp10836_19))
(assert (= temp10836_21 (select ARGNAME_padding_NAMEEND_VAL temp10836_20)))
(assert (= temp10836_22 #x0000000000000005))
(assert (= temp10836_23 temp10836_22))
(assert (= temp10836_24 (select ARGNAME_padding_NAMEEND_VAL temp10836_23)))
(assert (= temp10836_25 #x0000000000000000))
(assert (= temp10836_26 #x0000000000000000))
(assert (= temp10836_27 temp10836_26))
(assert (= temp10836_28 (select ARGNAME_padding_NAMEEND_VAL temp10836_27)))
(assert (= temp10836_29 #x0000000000000000))
(assert (= temp10836_30 #x0000000000000001))
(assert (= temp10836_31 temp10836_30))
(assert (= temp10836_32 (select ARGNAME_padding_NAMEEND_VAL temp10836_31)))
(assert (= temp10836_33 #x0000000000000000))
(assert (= temp10836_34 #x0000000000000002))
(assert (= temp10836_35 temp10836_34))
(assert (= temp10836_36 (select ARGNAME_padding_NAMEEND_VAL temp10836_35)))
(assert (= temp10836_37 #x0000000000000000))
(assert (= temp10836_38 #x0000000000000003))
(assert (= temp10836_39 temp10836_38))
(assert (= temp10836_40 (select ARGNAME_padding_NAMEEND_VAL temp10836_39)))
(assert (= temp10836_41 #x0000000000000000))
(assert (= temp10836_42 #x0000000000000004))
(assert (= temp10836_43 temp10836_42))
(assert (= temp10836_44 (select ARGNAME_padding_NAMEEND_VAL temp10836_43)))
(assert (= temp10836_45 #x0000000000000000))
(assert (= temp10836_46 #x0000000000000005))
(assert (= temp10836_47 temp10836_46))
(assert (= temp10836_48 (select ARGNAME_padding_NAMEEND_VAL temp10836_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10836_28 temp10836_25)
             (bvslt temp10836_32 temp10836_29)
             (bvslt temp10836_36 temp10836_33)
             (bvslt temp10836_40 temp10836_37)
             (bvslt temp10836_44 temp10836_41)
             (bvslt temp10836_48 temp10836_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10836_49 #x0000000000000000))
(assert (= var1191714 temp10836_49))
(assert (= temp10836_50 #x0000000000000000))
(assert (= temp10836_51 temp10836_50))
(assert (= temp10836_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10836_51)))
(assert (= temp10836_53 #x0000000000000001))
(assert (= temp10836_54 temp10836_53))
(assert (= temp10836_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10836_54)))
(assert (= temp10836_56 #x0000000000000002))
(assert (= temp10836_57 temp10836_56))
(assert (= temp10836_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10836_57)))
(assert (= temp10836_59 #x0000000000000003))
(assert (= temp10836_60 temp10836_59))
(assert (= temp10836_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10836_60)))
(assert (= temp10836_62 #x0000000000000004))
(assert (= temp10836_63 temp10836_62))
(assert (= temp10836_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10836_63)))
(assert (= temp10836_65 #x0000000000000005))
(assert (= temp10836_66 temp10836_65))
(assert (= temp10836_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10836_66)))
(assert (= temp10836_68 #x0000000000000000))
(assert (= temp10836_69 #x0000000000000000))
(assert (= temp10836_70 temp10836_69))
(assert (= temp10836_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10836_70)))
(assert (= temp10836_72 #x0000000000000000))
(assert (= temp10836_73 #x0000000000000001))
(assert (= temp10836_74 temp10836_73))
(assert (= temp10836_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10836_74)))
(assert (= temp10836_76 #x0000000000000000))
(assert (= temp10836_77 #x0000000000000002))
(assert (= temp10836_78 temp10836_77))
(assert (= temp10836_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10836_78)))
(assert (= temp10836_80 #x0000000000000000))
(assert (= temp10836_81 #x0000000000000003))
(assert (= temp10836_82 temp10836_81))
(assert (= temp10836_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10836_82)))
(assert (= temp10836_84 #x0000000000000000))
(assert (= temp10836_85 #x0000000000000004))
(assert (= temp10836_86 temp10836_85))
(assert (= temp10836_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10836_86)))
(assert (= temp10836_88 #x0000000000000000))
(assert (= temp10836_89 #x0000000000000005))
(assert (= temp10836_90 temp10836_89))
(assert (= temp10836_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10836_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10836_71 temp10836_68)
             (bvslt temp10836_75 temp10836_72)
             (bvslt temp10836_79 temp10836_76)
             (bvslt temp10836_83 temp10836_80)
             (bvslt temp10836_87 temp10836_84)
             (bvslt temp10836_91 temp10836_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10836_92 #x0000000000000000))
(assert (= var1191725 temp10836_92))
(assert (= temp10836_93 #x0000000000000000))
(assert (= temp10836_94 temp10836_93))
(assert (= temp10836_95 (select ARGNAME_stride_NAMEEND_VAL temp10836_94)))
(assert (= temp10836_96 #x0000000000000001))
(assert (= temp10836_97 temp10836_96))
(assert (= temp10836_98 (select ARGNAME_stride_NAMEEND_VAL temp10836_97)))
(assert (= temp10836_99 #x0000000000000002))
(assert (= temp10836_100 temp10836_99))
(assert (= temp10836_101 (select ARGNAME_stride_NAMEEND_VAL temp10836_100)))
(assert (= temp10836_102 #x0000000000000003))
(assert (= temp10836_103 temp10836_102))
(assert (= temp10836_104 (select ARGNAME_stride_NAMEEND_VAL temp10836_103)))
(assert (= temp10836_105 #x0000000000000004))
(assert (= temp10836_106 temp10836_105))
(assert (= temp10836_107 (select ARGNAME_stride_NAMEEND_VAL temp10836_106)))
(assert (= temp10836_108 #x0000000000000005))
(assert (= temp10836_109 temp10836_108))
(assert (= temp10836_110 (select ARGNAME_stride_NAMEEND_VAL temp10836_109)))
(assert (= temp10836_111 #x0000000000000000))
(assert (= temp10836_112 #x0000000000000000))
(assert (= temp10836_113 temp10836_112))
(assert (= temp10836_114 (select ARGNAME_stride_NAMEEND_VAL temp10836_113)))
(assert (= temp10836_115 #x0000000000000000))
(assert (= temp10836_116 #x0000000000000001))
(assert (= temp10836_117 temp10836_116))
(assert (= temp10836_118 (select ARGNAME_stride_NAMEEND_VAL temp10836_117)))
(assert (= temp10836_119 #x0000000000000000))
(assert (= temp10836_120 #x0000000000000002))
(assert (= temp10836_121 temp10836_120))
(assert (= temp10836_122 (select ARGNAME_stride_NAMEEND_VAL temp10836_121)))
(assert (= temp10836_123 #x0000000000000000))
(assert (= temp10836_124 #x0000000000000003))
(assert (= temp10836_125 temp10836_124))
(assert (= temp10836_126 (select ARGNAME_stride_NAMEEND_VAL temp10836_125)))
(assert (= temp10836_127 #x0000000000000000))
(assert (= temp10836_128 #x0000000000000004))
(assert (= temp10836_129 temp10836_128))
(assert (= temp10836_130 (select ARGNAME_stride_NAMEEND_VAL temp10836_129)))
(assert (= temp10836_131 #x0000000000000000))
(assert (= temp10836_132 #x0000000000000005))
(assert (= temp10836_133 temp10836_132))
(assert (= temp10836_134 (select ARGNAME_stride_NAMEEND_VAL temp10836_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10836_114 temp10836_111)
             (bvsle temp10836_118 temp10836_115)
             (bvsle temp10836_122 temp10836_119)
             (bvsle temp10836_126 temp10836_123)
             (bvsle temp10836_130 temp10836_127)
             (bvsle temp10836_134 temp10836_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10836_135 #x0000000000000000))
(assert (= var1191735 temp10836_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10836_136 #x0000000000000001))
(assert (= var1191747 temp10836_136))
(assert (= temp10836_137 #x0000000000000000))
(assert (= var1179826 temp10836_137))
(assert (= temp10836_138 #x0000000000000000))
(assert (= temp10836_139 temp10836_138))
(assert (= temp10836_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10836_139)))
(assert (= temp10836_141 #x0000000000000001))
(assert (= temp10836_142 temp10836_141))
(assert (= temp10836_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10836_142)))
(assert (= temp10836_144 #x0000000000000002))
(assert (= temp10836_145 temp10836_144))
(assert (= temp10836_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10836_145)))
(assert (= temp10836_147 #x0000000000000003))
(assert (= temp10836_148 temp10836_147))
(assert (= temp10836_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10836_148)))
(assert (= temp10836_150 #x0000000000000004))
(assert (= temp10836_151 temp10836_150))
(assert (= temp10836_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10836_151)))
(assert (= temp10836_153 #x0000000000000005))
(assert (= temp10836_154 temp10836_153))
(assert (= temp10836_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10836_154)))
(assert (= temp10836_157 var1179826))
(assert (= temp10836_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10836_157)))
(assert (= temp10836_156 temp10836_158))
(assert (= var1191780
   (ite (bvslt temp10836_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10836_159 #x0000000000000000))
(assert (= var1191780 temp10836_159))
(assert (= temp10836_160 #x0000000000000000))
(assert (= var1179826 temp10836_160))
(assert (= temp10836_162 var1179826))
(assert (= temp10836_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10836_162)))
(assert (= temp10836_161 temp10836_163))
(assert (= var1191802 (bvsmod temp10836_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10836_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10836_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10836_165 #x0000000000000001))
(assert (= var1191803 temp10836_165))
(assert (= temp10836_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10836_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10836_167 #x0000000000000001))
(assert (= var1191823 temp10836_167))
(assert (= temp10836_168 #x0000000000000001))
(assert (= var1180714 temp10836_168))
(assert (= temp10836_169 #x0000000000000000))
(assert (= temp10836_170 temp10836_169))
(assert (= temp10836_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10836_170)))
(assert (= temp10836_172 #x0000000000000001))
(assert (= temp10836_173 temp10836_172))
(assert (= temp10836_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10836_173)))
(assert (= temp10836_175 #x0000000000000002))
(assert (= temp10836_176 temp10836_175))
(assert (= temp10836_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10836_176)))
(assert (= temp10836_178 #x0000000000000003))
(assert (= temp10836_179 temp10836_178))
(assert (= temp10836_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10836_179)))
(assert (= temp10836_181 #x0000000000000004))
(assert (= temp10836_182 temp10836_181))
(assert (= temp10836_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10836_182)))
(assert (= temp10836_184 #x0000000000000005))
(assert (= temp10836_185 temp10836_184))
(assert (= temp10836_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10836_185)))
(assert (= temp10836_187 #x0000000000000000))
(assert (= temp10836_188
   (ite (bvslt var1180714 temp10836_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10836_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10836_188)))
(assert (= var1191831 temp10836_189))
(assert (bvslt (ite (bvslt var1180714 temp10836_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10836_190 #x0000000000000001))
(assert (= var1180714 temp10836_190))
(assert (= temp10836_192 var1180714))
(assert (= temp10836_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10836_192)))
(assert (= temp10836_191 temp10836_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10836_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10836_194 #x0000000000000001))
(assert (= var1191836 temp10836_194))
(assert (= temp10836_195 #x0000000000000000))
(assert (= var1179826 temp10836_195))
(assert (= temp10836_197 var1179826))
(assert (= temp10836_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10836_197)))
(assert (= temp10836_196 temp10836_198))
(assert (= temp10836_199 #x0000000000000002))
(assert (= var1586025 temp10836_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10836_200 #x0000000000000001))
(assert (= var1191993 temp10836_200))
(assert (= temp10836_201 #x0000000000000001))
(assert (= var2700303 temp10836_201))
(assert (= temp10836_202 #x0000000000000001))
(assert (= var2962447 temp10836_202))
(assert (= temp10836_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10836_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10836_204 #x0000000000000001))
(assert (= var211058 temp10836_204))
(assert (= temp10836_205 #x0000000000000001))
(assert (= var211188 temp10836_205))
(assert (= var3879401 var211188))
(assert (= temp10836_206 #x0000000000000000))
(assert (= var3866802 temp10836_206))
(assert (= temp10836_207 #x0000000000000000))
(assert (= temp10836_208
   (ite (bvslt var3866802 temp10836_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10836_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10836_208)))
(assert (= var3879420 temp10836_209))
(assert (bvslt (ite (bvslt var3866802 temp10836_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10836_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10836_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10836_211 #x0000000000000000))
(assert (= var3879421 temp10836_211))
(assert (= temp10836_212 #x0000000000000001))
(assert (= var3867690 temp10836_212))
(assert (= temp10836_213 #x0000000000000000))
(assert (= temp10836_214
   (ite (bvslt var3867690 temp10836_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10836_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10836_214)))
(assert (= var3879423 temp10836_215))
(assert (bvslt (ite (bvslt var3867690 temp10836_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10836_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10836_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10836_217 #x0000000000000001))
(assert (= var3879424 temp10836_217))
(assert (= temp10836_218 #x0000000000000000))
(assert (= var4133117 temp10836_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10836_219 #x0000000000000002))
(assert (= var4339331 temp10836_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10836_220 #x0000000000000000))
(assert (= var4404892 temp10836_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4993424 var211201))
(assert (= var5255568 var211201))
(assert (= temp10836_221 #x0000000000000001))
(assert (= var211058 temp10836_221))
(assert (= temp10836_222 #x0000000000000000))
(assert (= var6894356 temp10836_222))
(assert (= var6894323 var6894356))
(assert (= var6762887 var6894323))
(assert (= var6762883 var6762887))
(assert (= var212669 var6762883))
(assert (= temp10836_223 #x0000000000000000))
(assert (= var212669 temp10836_223))
(model-add temp10836_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10836_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10836_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10836_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





