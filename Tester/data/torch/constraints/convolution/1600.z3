(declare-fun temp10928_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10928_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10928_3 () (_ BitVec 64))
(declare-fun temp10928_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10928_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10928_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10928_7 () (_ BitVec 64))
(declare-fun temp10928_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10928_9 () (_ BitVec 64))
(declare-fun temp10928_10 () (_ BitVec 64))
(declare-fun temp10928_11 () (_ BitVec 64))
(declare-fun temp10928_12 () (_ BitVec 64))
(declare-fun temp10928_13 () (_ BitVec 64))
(declare-fun temp10928_14 () (_ BitVec 64))
(declare-fun temp10928_15 () (_ BitVec 64))
(declare-fun temp10928_16 () (_ BitVec 64))
(declare-fun temp10928_17 () (_ BitVec 64))
(declare-fun temp10928_18 () (_ BitVec 64))
(declare-fun temp10928_19 () (_ BitVec 64))
(declare-fun temp10928_20 () (_ BitVec 64))
(declare-fun temp10928_21 () (_ BitVec 64))
(declare-fun temp10928_22 () (_ BitVec 64))
(declare-fun temp10928_23 () (_ BitVec 64))
(declare-fun temp10928_24 () (_ BitVec 64))
(declare-fun temp10928_25 () (_ BitVec 64))
(declare-fun temp10928_26 () (_ BitVec 64))
(declare-fun temp10928_27 () (_ BitVec 64))
(declare-fun temp10928_28 () (_ BitVec 64))
(declare-fun temp10928_29 () (_ BitVec 64))
(declare-fun temp10928_30 () (_ BitVec 64))
(declare-fun temp10928_31 () (_ BitVec 64))
(declare-fun temp10928_32 () (_ BitVec 64))
(declare-fun temp10928_33 () (_ BitVec 64))
(declare-fun temp10928_34 () (_ BitVec 64))
(declare-fun temp10928_35 () (_ BitVec 64))
(declare-fun temp10928_36 () (_ BitVec 64))
(declare-fun temp10928_37 () (_ BitVec 64))
(declare-fun temp10928_38 () (_ BitVec 64))
(declare-fun temp10928_39 () (_ BitVec 64))
(declare-fun temp10928_40 () (_ BitVec 64))
(declare-fun temp10928_41 () (_ BitVec 64))
(declare-fun temp10928_42 () (_ BitVec 64))
(declare-fun temp10928_43 () (_ BitVec 64))
(declare-fun temp10928_44 () (_ BitVec 64))
(declare-fun temp10928_45 () (_ BitVec 64))
(declare-fun temp10928_46 () (_ BitVec 64))
(declare-fun temp10928_47 () (_ BitVec 64))
(declare-fun temp10928_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10928_49 () (_ BitVec 64))
(declare-fun temp10928_50 () (_ BitVec 64))
(declare-fun temp10928_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10928_52 () (_ BitVec 64))
(declare-fun temp10928_53 () (_ BitVec 64))
(declare-fun temp10928_54 () (_ BitVec 64))
(declare-fun temp10928_55 () (_ BitVec 64))
(declare-fun temp10928_56 () (_ BitVec 64))
(declare-fun temp10928_57 () (_ BitVec 64))
(declare-fun temp10928_58 () (_ BitVec 64))
(declare-fun temp10928_59 () (_ BitVec 64))
(declare-fun temp10928_60 () (_ BitVec 64))
(declare-fun temp10928_61 () (_ BitVec 64))
(declare-fun temp10928_62 () (_ BitVec 64))
(declare-fun temp10928_63 () (_ BitVec 64))
(declare-fun temp10928_64 () (_ BitVec 64))
(declare-fun temp10928_65 () (_ BitVec 64))
(declare-fun temp10928_66 () (_ BitVec 64))
(declare-fun temp10928_67 () (_ BitVec 64))
(declare-fun temp10928_68 () (_ BitVec 64))
(declare-fun temp10928_69 () (_ BitVec 64))
(declare-fun temp10928_70 () (_ BitVec 64))
(declare-fun temp10928_71 () (_ BitVec 64))
(declare-fun temp10928_72 () (_ BitVec 64))
(declare-fun temp10928_73 () (_ BitVec 64))
(declare-fun temp10928_74 () (_ BitVec 64))
(declare-fun temp10928_75 () (_ BitVec 64))
(declare-fun temp10928_76 () (_ BitVec 64))
(declare-fun temp10928_77 () (_ BitVec 64))
(declare-fun temp10928_78 () (_ BitVec 64))
(declare-fun temp10928_79 () (_ BitVec 64))
(declare-fun temp10928_80 () (_ BitVec 64))
(declare-fun temp10928_81 () (_ BitVec 64))
(declare-fun temp10928_82 () (_ BitVec 64))
(declare-fun temp10928_83 () (_ BitVec 64))
(declare-fun temp10928_84 () (_ BitVec 64))
(declare-fun temp10928_85 () (_ BitVec 64))
(declare-fun temp10928_86 () (_ BitVec 64))
(declare-fun temp10928_87 () (_ BitVec 64))
(declare-fun temp10928_88 () (_ BitVec 64))
(declare-fun temp10928_89 () (_ BitVec 64))
(declare-fun temp10928_90 () (_ BitVec 64))
(declare-fun temp10928_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10928_92 () (_ BitVec 64))
(declare-fun temp10928_93 () (_ BitVec 64))
(declare-fun temp10928_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10928_95 () (_ BitVec 64))
(declare-fun temp10928_96 () (_ BitVec 64))
(declare-fun temp10928_97 () (_ BitVec 64))
(declare-fun temp10928_98 () (_ BitVec 64))
(declare-fun temp10928_99 () (_ BitVec 64))
(declare-fun temp10928_100 () (_ BitVec 64))
(declare-fun temp10928_101 () (_ BitVec 64))
(declare-fun temp10928_102 () (_ BitVec 64))
(declare-fun temp10928_103 () (_ BitVec 64))
(declare-fun temp10928_104 () (_ BitVec 64))
(declare-fun temp10928_105 () (_ BitVec 64))
(declare-fun temp10928_106 () (_ BitVec 64))
(declare-fun temp10928_107 () (_ BitVec 64))
(declare-fun temp10928_108 () (_ BitVec 64))
(declare-fun temp10928_109 () (_ BitVec 64))
(declare-fun temp10928_110 () (_ BitVec 64))
(declare-fun temp10928_111 () (_ BitVec 64))
(declare-fun temp10928_112 () (_ BitVec 64))
(declare-fun temp10928_113 () (_ BitVec 64))
(declare-fun temp10928_114 () (_ BitVec 64))
(declare-fun temp10928_115 () (_ BitVec 64))
(declare-fun temp10928_116 () (_ BitVec 64))
(declare-fun temp10928_117 () (_ BitVec 64))
(declare-fun temp10928_118 () (_ BitVec 64))
(declare-fun temp10928_119 () (_ BitVec 64))
(declare-fun temp10928_120 () (_ BitVec 64))
(declare-fun temp10928_121 () (_ BitVec 64))
(declare-fun temp10928_122 () (_ BitVec 64))
(declare-fun temp10928_123 () (_ BitVec 64))
(declare-fun temp10928_124 () (_ BitVec 64))
(declare-fun temp10928_125 () (_ BitVec 64))
(declare-fun temp10928_126 () (_ BitVec 64))
(declare-fun temp10928_127 () (_ BitVec 64))
(declare-fun temp10928_128 () (_ BitVec 64))
(declare-fun temp10928_129 () (_ BitVec 64))
(declare-fun temp10928_130 () (_ BitVec 64))
(declare-fun temp10928_131 () (_ BitVec 64))
(declare-fun temp10928_132 () (_ BitVec 64))
(declare-fun temp10928_133 () (_ BitVec 64))
(declare-fun temp10928_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10928_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10928_136 () (_ BitVec 64))
(declare-fun temp10928_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10928_138 () (_ BitVec 64))
(declare-fun temp10928_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10928_140 () (_ BitVec 64))
(declare-fun temp10928_141 () (_ BitVec 64))
(declare-fun temp10928_142 () (_ BitVec 64))
(declare-fun temp10928_143 () (_ BitVec 64))
(declare-fun temp10928_144 () (_ BitVec 64))
(declare-fun temp10928_145 () (_ BitVec 64))
(declare-fun temp10928_146 () (_ BitVec 64))
(declare-fun temp10928_147 () (_ BitVec 64))
(declare-fun temp10928_148 () (_ BitVec 64))
(declare-fun temp10928_149 () (_ BitVec 64))
(declare-fun temp10928_150 () (_ BitVec 64))
(declare-fun temp10928_151 () (_ BitVec 64))
(declare-fun temp10928_152 () (_ BitVec 64))
(declare-fun temp10928_153 () (_ BitVec 64))
(declare-fun temp10928_154 () (_ BitVec 64))
(declare-fun temp10928_155 () (_ BitVec 64))
(declare-fun temp10928_157 () (_ BitVec 64))
(declare-fun temp10928_158 () (_ BitVec 64))
(declare-fun temp10928_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10928_159 () (_ BitVec 64))
(declare-fun temp10928_160 () (_ BitVec 64))
(declare-fun temp10928_162 () (_ BitVec 64))
(declare-fun temp10928_163 () (_ BitVec 64))
(declare-fun temp10928_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10928_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10928_165 () (_ BitVec 64))
(declare-fun temp10928_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10928_167 () (_ BitVec 64))
(declare-fun temp10928_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10928_169 () (_ BitVec 64))
(declare-fun temp10928_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10928_171 () (_ BitVec 64))
(declare-fun temp10928_172 () (_ BitVec 64))
(declare-fun temp10928_173 () (_ BitVec 64))
(declare-fun temp10928_174 () (_ BitVec 64))
(declare-fun temp10928_175 () (_ BitVec 64))
(declare-fun temp10928_176 () (_ BitVec 64))
(declare-fun temp10928_177 () (_ BitVec 64))
(declare-fun temp10928_178 () (_ BitVec 64))
(declare-fun temp10928_179 () (_ BitVec 64))
(declare-fun temp10928_180 () (_ BitVec 64))
(declare-fun temp10928_181 () (_ BitVec 64))
(declare-fun temp10928_182 () (_ BitVec 64))
(declare-fun temp10928_183 () (_ BitVec 64))
(declare-fun temp10928_184 () (_ BitVec 64))
(declare-fun temp10928_185 () (_ BitVec 64))
(declare-fun temp10928_186 () (_ BitVec 64))
(declare-fun temp10928_187 () (_ BitVec 64))
(declare-fun temp10928_188 () (_ BitVec 64))
(declare-fun temp10928_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10928_190 () (_ BitVec 64))
(declare-fun temp10928_192 () (_ BitVec 64))
(declare-fun temp10928_193 () (_ BitVec 64))
(declare-fun temp10928_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10928_194 () (_ BitVec 64))
(declare-fun temp10928_195 () (_ BitVec 64))
(declare-fun temp10928_197 () (_ BitVec 64))
(declare-fun temp10928_198 () (_ BitVec 64))
(declare-fun temp10928_196 () (_ BitVec 64))
(declare-fun temp10928_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10928_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10928_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10928_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10928_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10928_204 () (_ BitVec 64))
(declare-fun temp10928_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10928_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10928_207 () (_ BitVec 64))
(declare-fun temp10928_208 () (_ BitVec 64))
(declare-fun temp10928_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10928_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10928_211 () (_ BitVec 64))
(declare-fun temp10928_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10928_213 () (_ BitVec 64))
(declare-fun temp10928_214 () (_ BitVec 64))
(declare-fun temp10928_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10928_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10928_217 () (_ BitVec 64))
(declare-fun temp10928_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10928_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10928_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5255568 () (_ BitVec 64))
(declare-fun var5517712 () (_ BitVec 64))
(declare-fun temp10928_221 () (_ BitVec 64))
(assert (= temp10928_1 #x0000000000000001))
(assert (= var77203 temp10928_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10928_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10928_2)))
(assert (= temp10928_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10928_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10928_4 #x0000000000000000))
(assert (= var210941 temp10928_4))
(assert (= temp10928_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10928_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10928_6 #x0000000000000000))
(assert (= var210986 temp10928_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10928_7 #x0000000000000000))
(assert (= temp10928_8 temp10928_7))
(assert (= temp10928_9 (select ARGNAME_padding_NAMEEND_VAL temp10928_8)))
(assert (= temp10928_10 #x0000000000000001))
(assert (= temp10928_11 temp10928_10))
(assert (= temp10928_12 (select ARGNAME_padding_NAMEEND_VAL temp10928_11)))
(assert (= temp10928_13 #x0000000000000002))
(assert (= temp10928_14 temp10928_13))
(assert (= temp10928_15 (select ARGNAME_padding_NAMEEND_VAL temp10928_14)))
(assert (= temp10928_16 #x0000000000000003))
(assert (= temp10928_17 temp10928_16))
(assert (= temp10928_18 (select ARGNAME_padding_NAMEEND_VAL temp10928_17)))
(assert (= temp10928_19 #x0000000000000004))
(assert (= temp10928_20 temp10928_19))
(assert (= temp10928_21 (select ARGNAME_padding_NAMEEND_VAL temp10928_20)))
(assert (= temp10928_22 #x0000000000000005))
(assert (= temp10928_23 temp10928_22))
(assert (= temp10928_24 (select ARGNAME_padding_NAMEEND_VAL temp10928_23)))
(assert (= temp10928_25 #x0000000000000000))
(assert (= temp10928_26 #x0000000000000000))
(assert (= temp10928_27 temp10928_26))
(assert (= temp10928_28 (select ARGNAME_padding_NAMEEND_VAL temp10928_27)))
(assert (= temp10928_29 #x0000000000000000))
(assert (= temp10928_30 #x0000000000000001))
(assert (= temp10928_31 temp10928_30))
(assert (= temp10928_32 (select ARGNAME_padding_NAMEEND_VAL temp10928_31)))
(assert (= temp10928_33 #x0000000000000000))
(assert (= temp10928_34 #x0000000000000002))
(assert (= temp10928_35 temp10928_34))
(assert (= temp10928_36 (select ARGNAME_padding_NAMEEND_VAL temp10928_35)))
(assert (= temp10928_37 #x0000000000000000))
(assert (= temp10928_38 #x0000000000000003))
(assert (= temp10928_39 temp10928_38))
(assert (= temp10928_40 (select ARGNAME_padding_NAMEEND_VAL temp10928_39)))
(assert (= temp10928_41 #x0000000000000000))
(assert (= temp10928_42 #x0000000000000004))
(assert (= temp10928_43 temp10928_42))
(assert (= temp10928_44 (select ARGNAME_padding_NAMEEND_VAL temp10928_43)))
(assert (= temp10928_45 #x0000000000000000))
(assert (= temp10928_46 #x0000000000000005))
(assert (= temp10928_47 temp10928_46))
(assert (= temp10928_48 (select ARGNAME_padding_NAMEEND_VAL temp10928_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10928_28 temp10928_25)
             (bvslt temp10928_32 temp10928_29)
             (bvslt temp10928_36 temp10928_33)
             (bvslt temp10928_40 temp10928_37)
             (bvslt temp10928_44 temp10928_41)
             (bvslt temp10928_48 temp10928_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10928_49 #x0000000000000000))
(assert (= var1191714 temp10928_49))
(assert (= temp10928_50 #x0000000000000000))
(assert (= temp10928_51 temp10928_50))
(assert (= temp10928_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10928_51)))
(assert (= temp10928_53 #x0000000000000001))
(assert (= temp10928_54 temp10928_53))
(assert (= temp10928_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10928_54)))
(assert (= temp10928_56 #x0000000000000002))
(assert (= temp10928_57 temp10928_56))
(assert (= temp10928_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10928_57)))
(assert (= temp10928_59 #x0000000000000003))
(assert (= temp10928_60 temp10928_59))
(assert (= temp10928_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10928_60)))
(assert (= temp10928_62 #x0000000000000004))
(assert (= temp10928_63 temp10928_62))
(assert (= temp10928_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10928_63)))
(assert (= temp10928_65 #x0000000000000005))
(assert (= temp10928_66 temp10928_65))
(assert (= temp10928_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10928_66)))
(assert (= temp10928_68 #x0000000000000000))
(assert (= temp10928_69 #x0000000000000000))
(assert (= temp10928_70 temp10928_69))
(assert (= temp10928_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10928_70)))
(assert (= temp10928_72 #x0000000000000000))
(assert (= temp10928_73 #x0000000000000001))
(assert (= temp10928_74 temp10928_73))
(assert (= temp10928_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10928_74)))
(assert (= temp10928_76 #x0000000000000000))
(assert (= temp10928_77 #x0000000000000002))
(assert (= temp10928_78 temp10928_77))
(assert (= temp10928_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10928_78)))
(assert (= temp10928_80 #x0000000000000000))
(assert (= temp10928_81 #x0000000000000003))
(assert (= temp10928_82 temp10928_81))
(assert (= temp10928_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10928_82)))
(assert (= temp10928_84 #x0000000000000000))
(assert (= temp10928_85 #x0000000000000004))
(assert (= temp10928_86 temp10928_85))
(assert (= temp10928_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10928_86)))
(assert (= temp10928_88 #x0000000000000000))
(assert (= temp10928_89 #x0000000000000005))
(assert (= temp10928_90 temp10928_89))
(assert (= temp10928_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10928_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10928_71 temp10928_68)
             (bvslt temp10928_75 temp10928_72)
             (bvslt temp10928_79 temp10928_76)
             (bvslt temp10928_83 temp10928_80)
             (bvslt temp10928_87 temp10928_84)
             (bvslt temp10928_91 temp10928_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10928_92 #x0000000000000000))
(assert (= var1191725 temp10928_92))
(assert (= temp10928_93 #x0000000000000000))
(assert (= temp10928_94 temp10928_93))
(assert (= temp10928_95 (select ARGNAME_stride_NAMEEND_VAL temp10928_94)))
(assert (= temp10928_96 #x0000000000000001))
(assert (= temp10928_97 temp10928_96))
(assert (= temp10928_98 (select ARGNAME_stride_NAMEEND_VAL temp10928_97)))
(assert (= temp10928_99 #x0000000000000002))
(assert (= temp10928_100 temp10928_99))
(assert (= temp10928_101 (select ARGNAME_stride_NAMEEND_VAL temp10928_100)))
(assert (= temp10928_102 #x0000000000000003))
(assert (= temp10928_103 temp10928_102))
(assert (= temp10928_104 (select ARGNAME_stride_NAMEEND_VAL temp10928_103)))
(assert (= temp10928_105 #x0000000000000004))
(assert (= temp10928_106 temp10928_105))
(assert (= temp10928_107 (select ARGNAME_stride_NAMEEND_VAL temp10928_106)))
(assert (= temp10928_108 #x0000000000000005))
(assert (= temp10928_109 temp10928_108))
(assert (= temp10928_110 (select ARGNAME_stride_NAMEEND_VAL temp10928_109)))
(assert (= temp10928_111 #x0000000000000000))
(assert (= temp10928_112 #x0000000000000000))
(assert (= temp10928_113 temp10928_112))
(assert (= temp10928_114 (select ARGNAME_stride_NAMEEND_VAL temp10928_113)))
(assert (= temp10928_115 #x0000000000000000))
(assert (= temp10928_116 #x0000000000000001))
(assert (= temp10928_117 temp10928_116))
(assert (= temp10928_118 (select ARGNAME_stride_NAMEEND_VAL temp10928_117)))
(assert (= temp10928_119 #x0000000000000000))
(assert (= temp10928_120 #x0000000000000002))
(assert (= temp10928_121 temp10928_120))
(assert (= temp10928_122 (select ARGNAME_stride_NAMEEND_VAL temp10928_121)))
(assert (= temp10928_123 #x0000000000000000))
(assert (= temp10928_124 #x0000000000000003))
(assert (= temp10928_125 temp10928_124))
(assert (= temp10928_126 (select ARGNAME_stride_NAMEEND_VAL temp10928_125)))
(assert (= temp10928_127 #x0000000000000000))
(assert (= temp10928_128 #x0000000000000004))
(assert (= temp10928_129 temp10928_128))
(assert (= temp10928_130 (select ARGNAME_stride_NAMEEND_VAL temp10928_129)))
(assert (= temp10928_131 #x0000000000000000))
(assert (= temp10928_132 #x0000000000000005))
(assert (= temp10928_133 temp10928_132))
(assert (= temp10928_134 (select ARGNAME_stride_NAMEEND_VAL temp10928_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10928_114 temp10928_111)
             (bvsle temp10928_118 temp10928_115)
             (bvsle temp10928_122 temp10928_119)
             (bvsle temp10928_126 temp10928_123)
             (bvsle temp10928_130 temp10928_127)
             (bvsle temp10928_134 temp10928_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10928_135 #x0000000000000000))
(assert (= var1191735 temp10928_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10928_136 #x0000000000000001))
(assert (= var1191747 temp10928_136))
(assert (= temp10928_137 #x0000000000000000))
(assert (= var1179826 temp10928_137))
(assert (= temp10928_138 #x0000000000000000))
(assert (= temp10928_139 temp10928_138))
(assert (= temp10928_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10928_139)))
(assert (= temp10928_141 #x0000000000000001))
(assert (= temp10928_142 temp10928_141))
(assert (= temp10928_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10928_142)))
(assert (= temp10928_144 #x0000000000000002))
(assert (= temp10928_145 temp10928_144))
(assert (= temp10928_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10928_145)))
(assert (= temp10928_147 #x0000000000000003))
(assert (= temp10928_148 temp10928_147))
(assert (= temp10928_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10928_148)))
(assert (= temp10928_150 #x0000000000000004))
(assert (= temp10928_151 temp10928_150))
(assert (= temp10928_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10928_151)))
(assert (= temp10928_153 #x0000000000000005))
(assert (= temp10928_154 temp10928_153))
(assert (= temp10928_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10928_154)))
(assert (= temp10928_157 var1179826))
(assert (= temp10928_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10928_157)))
(assert (= temp10928_156 temp10928_158))
(assert (= var1191780
   (ite (bvslt temp10928_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10928_159 #x0000000000000000))
(assert (= var1191780 temp10928_159))
(assert (= temp10928_160 #x0000000000000000))
(assert (= var1179826 temp10928_160))
(assert (= temp10928_162 var1179826))
(assert (= temp10928_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10928_162)))
(assert (= temp10928_161 temp10928_163))
(assert (= var1191802 (bvsmod temp10928_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10928_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10928_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10928_165 #x0000000000000001))
(assert (= var1191803 temp10928_165))
(assert (= temp10928_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10928_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10928_167 #x0000000000000001))
(assert (= var1191823 temp10928_167))
(assert (= temp10928_168 #x0000000000000001))
(assert (= var1180714 temp10928_168))
(assert (= temp10928_169 #x0000000000000000))
(assert (= temp10928_170 temp10928_169))
(assert (= temp10928_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10928_170)))
(assert (= temp10928_172 #x0000000000000001))
(assert (= temp10928_173 temp10928_172))
(assert (= temp10928_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10928_173)))
(assert (= temp10928_175 #x0000000000000002))
(assert (= temp10928_176 temp10928_175))
(assert (= temp10928_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10928_176)))
(assert (= temp10928_178 #x0000000000000003))
(assert (= temp10928_179 temp10928_178))
(assert (= temp10928_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10928_179)))
(assert (= temp10928_181 #x0000000000000004))
(assert (= temp10928_182 temp10928_181))
(assert (= temp10928_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10928_182)))
(assert (= temp10928_184 #x0000000000000005))
(assert (= temp10928_185 temp10928_184))
(assert (= temp10928_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10928_185)))
(assert (= temp10928_187 #x0000000000000000))
(assert (= temp10928_188
   (ite (bvslt var1180714 temp10928_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10928_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10928_188)))
(assert (= var1191831 temp10928_189))
(assert (bvslt (ite (bvslt var1180714 temp10928_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10928_190 #x0000000000000001))
(assert (= var1180714 temp10928_190))
(assert (= temp10928_192 var1180714))
(assert (= temp10928_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10928_192)))
(assert (= temp10928_191 temp10928_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10928_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10928_194 #x0000000000000001))
(assert (= var1191836 temp10928_194))
(assert (= temp10928_195 #x0000000000000000))
(assert (= var1179826 temp10928_195))
(assert (= temp10928_197 var1179826))
(assert (= temp10928_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10928_197)))
(assert (= temp10928_196 temp10928_198))
(assert (= temp10928_199 #x0000000000000002))
(assert (= var1586025 temp10928_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10928_200 #x0000000000000001))
(assert (= var1191993 temp10928_200))
(assert (= temp10928_201 #x0000000000000001))
(assert (= var2700303 temp10928_201))
(assert (= temp10928_202 #x0000000000000001))
(assert (= var2962447 temp10928_202))
(assert (= temp10928_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10928_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10928_204 #x0000000000000001))
(assert (= var211058 temp10928_204))
(assert (= temp10928_205 #x0000000000000001))
(assert (= var211188 temp10928_205))
(assert (= var3879401 var211188))
(assert (= temp10928_206 #x0000000000000000))
(assert (= var3866802 temp10928_206))
(assert (= temp10928_207 #x0000000000000000))
(assert (= temp10928_208
   (ite (bvslt var3866802 temp10928_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10928_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10928_208)))
(assert (= var3879420 temp10928_209))
(assert (bvslt (ite (bvslt var3866802 temp10928_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10928_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10928_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10928_211 #x0000000000000000))
(assert (= var3879421 temp10928_211))
(assert (= temp10928_212 #x0000000000000001))
(assert (= var3867690 temp10928_212))
(assert (= temp10928_213 #x0000000000000000))
(assert (= temp10928_214
   (ite (bvslt var3867690 temp10928_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10928_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10928_214)))
(assert (= var3879423 temp10928_215))
(assert (bvslt (ite (bvslt var3867690 temp10928_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10928_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10928_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10928_217 #x0000000000000001))
(assert (= var3879424 temp10928_217))
(assert (= temp10928_218 #x0000000000000000))
(assert (= var4133117 temp10928_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10928_219 #x0000000000000002))
(assert (= var4339331 temp10928_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10928_220 #x0000000000000000))
(assert (= var4404892 temp10928_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5255568 var211201))
(assert (= var5517712 var211201))
(assert (= temp10928_221 #x0000000000000001))
(assert (= var211058 temp10928_221))
(model-add temp10928_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10928_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10928_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10928_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




