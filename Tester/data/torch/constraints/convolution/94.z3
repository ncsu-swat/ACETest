(declare-fun temp125_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp125_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp125_3 () (_ BitVec 64))
(declare-fun temp125_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp125_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp125_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp125_7 () (_ BitVec 64))
(declare-fun temp125_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp125_9 () (_ BitVec 64))
(declare-fun temp125_10 () (_ BitVec 64))
(declare-fun temp125_11 () (_ BitVec 64))
(declare-fun temp125_12 () (_ BitVec 64))
(declare-fun temp125_13 () (_ BitVec 64))
(declare-fun temp125_14 () (_ BitVec 64))
(declare-fun temp125_15 () (_ BitVec 64))
(declare-fun temp125_16 () (_ BitVec 64))
(declare-fun temp125_17 () (_ BitVec 64))
(declare-fun temp125_18 () (_ BitVec 64))
(declare-fun temp125_19 () (_ BitVec 64))
(declare-fun temp125_20 () (_ BitVec 64))
(declare-fun temp125_21 () (_ BitVec 64))
(declare-fun temp125_22 () (_ BitVec 64))
(declare-fun temp125_23 () (_ BitVec 64))
(declare-fun temp125_24 () (_ BitVec 64))
(declare-fun temp125_25 () (_ BitVec 64))
(declare-fun temp125_26 () (_ BitVec 64))
(declare-fun temp125_27 () (_ BitVec 64))
(declare-fun temp125_28 () (_ BitVec 64))
(declare-fun temp125_29 () (_ BitVec 64))
(declare-fun temp125_30 () (_ BitVec 64))
(declare-fun temp125_31 () (_ BitVec 64))
(declare-fun temp125_32 () (_ BitVec 64))
(declare-fun temp125_33 () (_ BitVec 64))
(declare-fun temp125_34 () (_ BitVec 64))
(declare-fun temp125_35 () (_ BitVec 64))
(declare-fun temp125_36 () (_ BitVec 64))
(declare-fun temp125_37 () (_ BitVec 64))
(declare-fun temp125_38 () (_ BitVec 64))
(declare-fun temp125_39 () (_ BitVec 64))
(declare-fun temp125_40 () (_ BitVec 64))
(declare-fun temp125_41 () (_ BitVec 64))
(declare-fun temp125_42 () (_ BitVec 64))
(declare-fun temp125_43 () (_ BitVec 64))
(declare-fun temp125_44 () (_ BitVec 64))
(declare-fun temp125_45 () (_ BitVec 64))
(declare-fun temp125_46 () (_ BitVec 64))
(declare-fun temp125_47 () (_ BitVec 64))
(declare-fun temp125_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp125_49 () (_ BitVec 64))
(declare-fun temp125_50 () (_ BitVec 64))
(declare-fun temp125_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp125_52 () (_ BitVec 64))
(declare-fun temp125_53 () (_ BitVec 64))
(declare-fun temp125_54 () (_ BitVec 64))
(declare-fun temp125_55 () (_ BitVec 64))
(declare-fun temp125_56 () (_ BitVec 64))
(declare-fun temp125_57 () (_ BitVec 64))
(declare-fun temp125_58 () (_ BitVec 64))
(declare-fun temp125_59 () (_ BitVec 64))
(declare-fun temp125_60 () (_ BitVec 64))
(declare-fun temp125_61 () (_ BitVec 64))
(declare-fun temp125_62 () (_ BitVec 64))
(declare-fun temp125_63 () (_ BitVec 64))
(declare-fun temp125_64 () (_ BitVec 64))
(declare-fun temp125_65 () (_ BitVec 64))
(declare-fun temp125_66 () (_ BitVec 64))
(declare-fun temp125_67 () (_ BitVec 64))
(declare-fun temp125_68 () (_ BitVec 64))
(declare-fun temp125_69 () (_ BitVec 64))
(declare-fun temp125_70 () (_ BitVec 64))
(declare-fun temp125_71 () (_ BitVec 64))
(declare-fun temp125_72 () (_ BitVec 64))
(declare-fun temp125_73 () (_ BitVec 64))
(declare-fun temp125_74 () (_ BitVec 64))
(declare-fun temp125_75 () (_ BitVec 64))
(declare-fun temp125_76 () (_ BitVec 64))
(declare-fun temp125_77 () (_ BitVec 64))
(declare-fun temp125_78 () (_ BitVec 64))
(declare-fun temp125_79 () (_ BitVec 64))
(declare-fun temp125_80 () (_ BitVec 64))
(declare-fun temp125_81 () (_ BitVec 64))
(declare-fun temp125_82 () (_ BitVec 64))
(declare-fun temp125_83 () (_ BitVec 64))
(declare-fun temp125_84 () (_ BitVec 64))
(declare-fun temp125_85 () (_ BitVec 64))
(declare-fun temp125_86 () (_ BitVec 64))
(declare-fun temp125_87 () (_ BitVec 64))
(declare-fun temp125_88 () (_ BitVec 64))
(declare-fun temp125_89 () (_ BitVec 64))
(declare-fun temp125_90 () (_ BitVec 64))
(declare-fun temp125_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp125_92 () (_ BitVec 64))
(declare-fun temp125_93 () (_ BitVec 64))
(declare-fun temp125_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp125_95 () (_ BitVec 64))
(declare-fun temp125_96 () (_ BitVec 64))
(declare-fun temp125_97 () (_ BitVec 64))
(declare-fun temp125_98 () (_ BitVec 64))
(declare-fun temp125_99 () (_ BitVec 64))
(declare-fun temp125_100 () (_ BitVec 64))
(declare-fun temp125_101 () (_ BitVec 64))
(declare-fun temp125_102 () (_ BitVec 64))
(declare-fun temp125_103 () (_ BitVec 64))
(declare-fun temp125_104 () (_ BitVec 64))
(declare-fun temp125_105 () (_ BitVec 64))
(declare-fun temp125_106 () (_ BitVec 64))
(declare-fun temp125_107 () (_ BitVec 64))
(declare-fun temp125_108 () (_ BitVec 64))
(declare-fun temp125_109 () (_ BitVec 64))
(declare-fun temp125_110 () (_ BitVec 64))
(declare-fun temp125_111 () (_ BitVec 64))
(declare-fun temp125_112 () (_ BitVec 64))
(declare-fun temp125_113 () (_ BitVec 64))
(declare-fun temp125_114 () (_ BitVec 64))
(declare-fun temp125_115 () (_ BitVec 64))
(declare-fun temp125_116 () (_ BitVec 64))
(declare-fun temp125_117 () (_ BitVec 64))
(declare-fun temp125_118 () (_ BitVec 64))
(declare-fun temp125_119 () (_ BitVec 64))
(declare-fun temp125_120 () (_ BitVec 64))
(declare-fun temp125_121 () (_ BitVec 64))
(declare-fun temp125_122 () (_ BitVec 64))
(declare-fun temp125_123 () (_ BitVec 64))
(declare-fun temp125_124 () (_ BitVec 64))
(declare-fun temp125_125 () (_ BitVec 64))
(declare-fun temp125_126 () (_ BitVec 64))
(declare-fun temp125_127 () (_ BitVec 64))
(declare-fun temp125_128 () (_ BitVec 64))
(declare-fun temp125_129 () (_ BitVec 64))
(declare-fun temp125_130 () (_ BitVec 64))
(declare-fun temp125_131 () (_ BitVec 64))
(declare-fun temp125_132 () (_ BitVec 64))
(declare-fun temp125_133 () (_ BitVec 64))
(declare-fun temp125_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp125_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp125_136 () (_ BitVec 64))
(declare-fun temp125_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp125_138 () (_ BitVec 64))
(declare-fun temp125_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp125_140 () (_ BitVec 64))
(declare-fun temp125_141 () (_ BitVec 64))
(declare-fun temp125_142 () (_ BitVec 64))
(declare-fun temp125_143 () (_ BitVec 64))
(declare-fun temp125_144 () (_ BitVec 64))
(declare-fun temp125_145 () (_ BitVec 64))
(declare-fun temp125_146 () (_ BitVec 64))
(declare-fun temp125_147 () (_ BitVec 64))
(declare-fun temp125_148 () (_ BitVec 64))
(declare-fun temp125_149 () (_ BitVec 64))
(declare-fun temp125_150 () (_ BitVec 64))
(declare-fun temp125_151 () (_ BitVec 64))
(declare-fun temp125_152 () (_ BitVec 64))
(declare-fun temp125_153 () (_ BitVec 64))
(declare-fun temp125_154 () (_ BitVec 64))
(declare-fun temp125_155 () (_ BitVec 64))
(declare-fun temp125_157 () (_ BitVec 64))
(declare-fun temp125_158 () (_ BitVec 64))
(declare-fun temp125_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp125_159 () (_ BitVec 64))
(declare-fun temp125_160 () (_ BitVec 64))
(declare-fun temp125_162 () (_ BitVec 64))
(declare-fun temp125_163 () (_ BitVec 64))
(declare-fun temp125_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp125_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp125_165 () (_ BitVec 64))
(declare-fun temp125_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp125_167 () (_ BitVec 64))
(declare-fun temp125_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp125_169 () (_ BitVec 64))
(declare-fun temp125_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp125_171 () (_ BitVec 64))
(declare-fun temp125_172 () (_ BitVec 64))
(declare-fun temp125_173 () (_ BitVec 64))
(declare-fun temp125_174 () (_ BitVec 64))
(declare-fun temp125_175 () (_ BitVec 64))
(declare-fun temp125_176 () (_ BitVec 64))
(declare-fun temp125_177 () (_ BitVec 64))
(declare-fun temp125_178 () (_ BitVec 64))
(declare-fun temp125_179 () (_ BitVec 64))
(declare-fun temp125_180 () (_ BitVec 64))
(declare-fun temp125_181 () (_ BitVec 64))
(declare-fun temp125_182 () (_ BitVec 64))
(declare-fun temp125_183 () (_ BitVec 64))
(declare-fun temp125_184 () (_ BitVec 64))
(declare-fun temp125_185 () (_ BitVec 64))
(declare-fun temp125_186 () (_ BitVec 64))
(declare-fun temp125_187 () (_ BitVec 64))
(declare-fun temp125_188 () (_ BitVec 64))
(declare-fun temp125_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp125_190 () (_ BitVec 64))
(declare-fun temp125_192 () (_ BitVec 64))
(declare-fun temp125_193 () (_ BitVec 64))
(declare-fun temp125_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp125_194 () (_ BitVec 64))
(declare-fun temp125_195 () (_ BitVec 64))
(declare-fun temp125_197 () (_ BitVec 64))
(declare-fun temp125_198 () (_ BitVec 64))
(declare-fun temp125_196 () (_ BitVec 64))
(declare-fun temp125_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp125_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp125_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp125_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp125_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp125_204 () (_ BitVec 64))
(declare-fun temp125_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp125_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp125_207 () (_ BitVec 64))
(declare-fun temp125_208 () (_ BitVec 64))
(declare-fun temp125_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp125_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp125_211 () (_ BitVec 64))
(declare-fun temp125_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp125_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp125_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp125_216 () (_ BitVec 64))
(declare-fun temp125_215 () (_ BitVec 64))
(declare-fun temp125_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp125_218 () (_ BitVec 64))
(declare-fun temp125_219 () (_ BitVec 64))
(declare-fun temp125_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp125_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp125_222 () (_ BitVec 64))
(declare-fun temp125_224 () (_ BitVec 64))
(declare-fun temp125_223 () (_ BitVec 64))
(declare-fun temp125_225 () (_ BitVec 64))
(assert (= temp125_1 #x0000000000000001))
(assert (= var77203 temp125_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp125_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp125_2)))
(assert (= temp125_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp125_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp125_4 #x0000000000000000))
(assert (= var210941 temp125_4))
(assert (= temp125_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp125_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp125_6 #x0000000000000000))
(assert (= var210986 temp125_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp125_7 #x0000000000000000))
(assert (= temp125_8 temp125_7))
(assert (= temp125_9 (select ARGNAME_padding_NAMEEND_VAL temp125_8)))
(assert (= temp125_10 #x0000000000000001))
(assert (= temp125_11 temp125_10))
(assert (= temp125_12 (select ARGNAME_padding_NAMEEND_VAL temp125_11)))
(assert (= temp125_13 #x0000000000000002))
(assert (= temp125_14 temp125_13))
(assert (= temp125_15 (select ARGNAME_padding_NAMEEND_VAL temp125_14)))
(assert (= temp125_16 #x0000000000000003))
(assert (= temp125_17 temp125_16))
(assert (= temp125_18 (select ARGNAME_padding_NAMEEND_VAL temp125_17)))
(assert (= temp125_19 #x0000000000000004))
(assert (= temp125_20 temp125_19))
(assert (= temp125_21 (select ARGNAME_padding_NAMEEND_VAL temp125_20)))
(assert (= temp125_22 #x0000000000000005))
(assert (= temp125_23 temp125_22))
(assert (= temp125_24 (select ARGNAME_padding_NAMEEND_VAL temp125_23)))
(assert (= temp125_25 #x0000000000000000))
(assert (= temp125_26 #x0000000000000000))
(assert (= temp125_27 temp125_26))
(assert (= temp125_28 (select ARGNAME_padding_NAMEEND_VAL temp125_27)))
(assert (= temp125_29 #x0000000000000000))
(assert (= temp125_30 #x0000000000000001))
(assert (= temp125_31 temp125_30))
(assert (= temp125_32 (select ARGNAME_padding_NAMEEND_VAL temp125_31)))
(assert (= temp125_33 #x0000000000000000))
(assert (= temp125_34 #x0000000000000002))
(assert (= temp125_35 temp125_34))
(assert (= temp125_36 (select ARGNAME_padding_NAMEEND_VAL temp125_35)))
(assert (= temp125_37 #x0000000000000000))
(assert (= temp125_38 #x0000000000000003))
(assert (= temp125_39 temp125_38))
(assert (= temp125_40 (select ARGNAME_padding_NAMEEND_VAL temp125_39)))
(assert (= temp125_41 #x0000000000000000))
(assert (= temp125_42 #x0000000000000004))
(assert (= temp125_43 temp125_42))
(assert (= temp125_44 (select ARGNAME_padding_NAMEEND_VAL temp125_43)))
(assert (= temp125_45 #x0000000000000000))
(assert (= temp125_46 #x0000000000000005))
(assert (= temp125_47 temp125_46))
(assert (= temp125_48 (select ARGNAME_padding_NAMEEND_VAL temp125_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp125_28 temp125_25)
             (bvslt temp125_32 temp125_29)
             (bvslt temp125_36 temp125_33)
             (bvslt temp125_40 temp125_37)
             (bvslt temp125_44 temp125_41)
             (bvslt temp125_48 temp125_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp125_49 #x0000000000000000))
(assert (= var1191714 temp125_49))
(assert (= temp125_50 #x0000000000000000))
(assert (= temp125_51 temp125_50))
(assert (= temp125_52 (select ARGNAME_output_padding_NAMEEND_VAL temp125_51)))
(assert (= temp125_53 #x0000000000000001))
(assert (= temp125_54 temp125_53))
(assert (= temp125_55 (select ARGNAME_output_padding_NAMEEND_VAL temp125_54)))
(assert (= temp125_56 #x0000000000000002))
(assert (= temp125_57 temp125_56))
(assert (= temp125_58 (select ARGNAME_output_padding_NAMEEND_VAL temp125_57)))
(assert (= temp125_59 #x0000000000000003))
(assert (= temp125_60 temp125_59))
(assert (= temp125_61 (select ARGNAME_output_padding_NAMEEND_VAL temp125_60)))
(assert (= temp125_62 #x0000000000000004))
(assert (= temp125_63 temp125_62))
(assert (= temp125_64 (select ARGNAME_output_padding_NAMEEND_VAL temp125_63)))
(assert (= temp125_65 #x0000000000000005))
(assert (= temp125_66 temp125_65))
(assert (= temp125_67 (select ARGNAME_output_padding_NAMEEND_VAL temp125_66)))
(assert (= temp125_68 #x0000000000000000))
(assert (= temp125_69 #x0000000000000000))
(assert (= temp125_70 temp125_69))
(assert (= temp125_71 (select ARGNAME_output_padding_NAMEEND_VAL temp125_70)))
(assert (= temp125_72 #x0000000000000000))
(assert (= temp125_73 #x0000000000000001))
(assert (= temp125_74 temp125_73))
(assert (= temp125_75 (select ARGNAME_output_padding_NAMEEND_VAL temp125_74)))
(assert (= temp125_76 #x0000000000000000))
(assert (= temp125_77 #x0000000000000002))
(assert (= temp125_78 temp125_77))
(assert (= temp125_79 (select ARGNAME_output_padding_NAMEEND_VAL temp125_78)))
(assert (= temp125_80 #x0000000000000000))
(assert (= temp125_81 #x0000000000000003))
(assert (= temp125_82 temp125_81))
(assert (= temp125_83 (select ARGNAME_output_padding_NAMEEND_VAL temp125_82)))
(assert (= temp125_84 #x0000000000000000))
(assert (= temp125_85 #x0000000000000004))
(assert (= temp125_86 temp125_85))
(assert (= temp125_87 (select ARGNAME_output_padding_NAMEEND_VAL temp125_86)))
(assert (= temp125_88 #x0000000000000000))
(assert (= temp125_89 #x0000000000000005))
(assert (= temp125_90 temp125_89))
(assert (= temp125_91 (select ARGNAME_output_padding_NAMEEND_VAL temp125_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp125_71 temp125_68)
             (bvslt temp125_75 temp125_72)
             (bvslt temp125_79 temp125_76)
             (bvslt temp125_83 temp125_80)
             (bvslt temp125_87 temp125_84)
             (bvslt temp125_91 temp125_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp125_92 #x0000000000000000))
(assert (= var1191725 temp125_92))
(assert (= temp125_93 #x0000000000000000))
(assert (= temp125_94 temp125_93))
(assert (= temp125_95 (select ARGNAME_stride_NAMEEND_VAL temp125_94)))
(assert (= temp125_96 #x0000000000000001))
(assert (= temp125_97 temp125_96))
(assert (= temp125_98 (select ARGNAME_stride_NAMEEND_VAL temp125_97)))
(assert (= temp125_99 #x0000000000000002))
(assert (= temp125_100 temp125_99))
(assert (= temp125_101 (select ARGNAME_stride_NAMEEND_VAL temp125_100)))
(assert (= temp125_102 #x0000000000000003))
(assert (= temp125_103 temp125_102))
(assert (= temp125_104 (select ARGNAME_stride_NAMEEND_VAL temp125_103)))
(assert (= temp125_105 #x0000000000000004))
(assert (= temp125_106 temp125_105))
(assert (= temp125_107 (select ARGNAME_stride_NAMEEND_VAL temp125_106)))
(assert (= temp125_108 #x0000000000000005))
(assert (= temp125_109 temp125_108))
(assert (= temp125_110 (select ARGNAME_stride_NAMEEND_VAL temp125_109)))
(assert (= temp125_111 #x0000000000000000))
(assert (= temp125_112 #x0000000000000000))
(assert (= temp125_113 temp125_112))
(assert (= temp125_114 (select ARGNAME_stride_NAMEEND_VAL temp125_113)))
(assert (= temp125_115 #x0000000000000000))
(assert (= temp125_116 #x0000000000000001))
(assert (= temp125_117 temp125_116))
(assert (= temp125_118 (select ARGNAME_stride_NAMEEND_VAL temp125_117)))
(assert (= temp125_119 #x0000000000000000))
(assert (= temp125_120 #x0000000000000002))
(assert (= temp125_121 temp125_120))
(assert (= temp125_122 (select ARGNAME_stride_NAMEEND_VAL temp125_121)))
(assert (= temp125_123 #x0000000000000000))
(assert (= temp125_124 #x0000000000000003))
(assert (= temp125_125 temp125_124))
(assert (= temp125_126 (select ARGNAME_stride_NAMEEND_VAL temp125_125)))
(assert (= temp125_127 #x0000000000000000))
(assert (= temp125_128 #x0000000000000004))
(assert (= temp125_129 temp125_128))
(assert (= temp125_130 (select ARGNAME_stride_NAMEEND_VAL temp125_129)))
(assert (= temp125_131 #x0000000000000000))
(assert (= temp125_132 #x0000000000000005))
(assert (= temp125_133 temp125_132))
(assert (= temp125_134 (select ARGNAME_stride_NAMEEND_VAL temp125_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp125_114 temp125_111)
             (bvsle temp125_118 temp125_115)
             (bvsle temp125_122 temp125_119)
             (bvsle temp125_126 temp125_123)
             (bvsle temp125_130 temp125_127)
             (bvsle temp125_134 temp125_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp125_135 #x0000000000000000))
(assert (= var1191735 temp125_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp125_136 #x0000000000000001))
(assert (= var1191747 temp125_136))
(assert (= temp125_137 #x0000000000000000))
(assert (= var1179826 temp125_137))
(assert (= temp125_138 #x0000000000000000))
(assert (= temp125_139 temp125_138))
(assert (= temp125_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp125_139)))
(assert (= temp125_141 #x0000000000000001))
(assert (= temp125_142 temp125_141))
(assert (= temp125_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp125_142)))
(assert (= temp125_144 #x0000000000000002))
(assert (= temp125_145 temp125_144))
(assert (= temp125_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp125_145)))
(assert (= temp125_147 #x0000000000000003))
(assert (= temp125_148 temp125_147))
(assert (= temp125_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp125_148)))
(assert (= temp125_150 #x0000000000000004))
(assert (= temp125_151 temp125_150))
(assert (= temp125_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp125_151)))
(assert (= temp125_153 #x0000000000000005))
(assert (= temp125_154 temp125_153))
(assert (= temp125_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp125_154)))
(assert (= temp125_157 var1179826))
(assert (= temp125_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp125_157)))
(assert (= temp125_156 temp125_158))
(assert (= var1191780
   (ite (bvslt temp125_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp125_159 #x0000000000000000))
(assert (= var1191780 temp125_159))
(assert (= temp125_160 #x0000000000000000))
(assert (= var1179826 temp125_160))
(assert (= temp125_162 var1179826))
(assert (= temp125_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp125_162)))
(assert (= temp125_161 temp125_163))
(assert (= var1191802 (bvsmod temp125_161 ARGNAME_groups_NAMEEND)))
(assert (= temp125_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp125_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp125_165 #x0000000000000001))
(assert (= var1191803 temp125_165))
(assert (= temp125_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp125_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp125_167 #x0000000000000001))
(assert (= var1191823 temp125_167))
(assert (= temp125_168 #x0000000000000001))
(assert (= var1180714 temp125_168))
(assert (= temp125_169 #x0000000000000000))
(assert (= temp125_170 temp125_169))
(assert (= temp125_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp125_170)))
(assert (= temp125_172 #x0000000000000001))
(assert (= temp125_173 temp125_172))
(assert (= temp125_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp125_173)))
(assert (= temp125_175 #x0000000000000002))
(assert (= temp125_176 temp125_175))
(assert (= temp125_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp125_176)))
(assert (= temp125_178 #x0000000000000003))
(assert (= temp125_179 temp125_178))
(assert (= temp125_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp125_179)))
(assert (= temp125_181 #x0000000000000004))
(assert (= temp125_182 temp125_181))
(assert (= temp125_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp125_182)))
(assert (= temp125_184 #x0000000000000005))
(assert (= temp125_185 temp125_184))
(assert (= temp125_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp125_185)))
(assert (= temp125_187 #x0000000000000000))
(assert (= temp125_188
   (ite (bvslt var1180714 temp125_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp125_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp125_188)))
(assert (= var1191831 temp125_189))
(assert (bvslt (ite (bvslt var1180714 temp125_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp125_190 #x0000000000000001))
(assert (= var1180714 temp125_190))
(assert (= temp125_192 var1180714))
(assert (= temp125_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp125_192)))
(assert (= temp125_191 temp125_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp125_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp125_194 #x0000000000000001))
(assert (= var1191836 temp125_194))
(assert (= temp125_195 #x0000000000000000))
(assert (= var1179826 temp125_195))
(assert (= temp125_197 var1179826))
(assert (= temp125_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp125_197)))
(assert (= temp125_196 temp125_198))
(assert (= temp125_199 #x0000000000000002))
(assert (= var1586025 temp125_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp125_200 #x0000000000000001))
(assert (= var1191993 temp125_200))
(assert (= temp125_201 #x0000000000000001))
(assert (= var2700303 temp125_201))
(assert (= temp125_202 #x0000000000000001))
(assert (= var2962447 temp125_202))
(assert (= temp125_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp125_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp125_204 #x0000000000000001))
(assert (= var211058 temp125_204))
(assert (= temp125_205 #x0000000000000001))
(assert (= var211188 temp125_205))
(assert (= var3879401 var211188))
(assert (= temp125_206 #x0000000000000000))
(assert (= var3866802 temp125_206))
(assert (= temp125_207 #x0000000000000000))
(assert (= temp125_208
   (ite (bvslt var3866802 temp125_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp125_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp125_208)))
(assert (= var3879420 temp125_209))
(assert (bvslt (ite (bvslt var3866802 temp125_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp125_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp125_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp125_211 #x0000000000000001))
(assert (= var3879421 temp125_211))
(assert (= temp125_212 #x0000000000000000))
(assert (= var4079423 temp125_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp125_213 #x0000000000000002))
(assert (= var4208259 temp125_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp125_214 #x0000000000000000))
(assert (= var4273820 temp125_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp125_216 #xffffffffffffffff))
(assert (= temp125_215 temp125_216))
(assert (= temp125_217 #x0000000000000001))
(assert (= var197674 temp125_217))
(assert (= temp125_218 #x0000000000000000))
(assert (= temp125_219
   (ite (bvslt var197674 temp125_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp125_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp125_219)))
(assert (= var211595 temp125_220))
(assert (bvslt (ite (bvslt var197674 temp125_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp125_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp125_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp125_222 #x0000000000000001))
(assert (= var211596 temp125_222))
(assert (= temp125_224 #xffffffffffffffff))
(assert (= temp125_223 temp125_224))
(assert (= temp125_225 #x0000000000000001))
(assert (= var211058 temp125_225))
(model-add temp125_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp125_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp125_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp125_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




