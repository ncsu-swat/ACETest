(declare-fun temp672_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp672_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp672_3 () (_ BitVec 64))
(declare-fun temp672_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp672_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp672_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp672_7 () (_ BitVec 64))
(declare-fun temp672_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp672_9 () (_ BitVec 64))
(declare-fun temp672_10 () (_ BitVec 64))
(declare-fun temp672_11 () (_ BitVec 64))
(declare-fun temp672_12 () (_ BitVec 64))
(declare-fun temp672_13 () (_ BitVec 64))
(declare-fun temp672_14 () (_ BitVec 64))
(declare-fun temp672_15 () (_ BitVec 64))
(declare-fun temp672_16 () (_ BitVec 64))
(declare-fun temp672_17 () (_ BitVec 64))
(declare-fun temp672_18 () (_ BitVec 64))
(declare-fun temp672_19 () (_ BitVec 64))
(declare-fun temp672_20 () (_ BitVec 64))
(declare-fun temp672_21 () (_ BitVec 64))
(declare-fun temp672_22 () (_ BitVec 64))
(declare-fun temp672_23 () (_ BitVec 64))
(declare-fun temp672_24 () (_ BitVec 64))
(declare-fun temp672_25 () (_ BitVec 64))
(declare-fun temp672_26 () (_ BitVec 64))
(declare-fun temp672_27 () (_ BitVec 64))
(declare-fun temp672_28 () (_ BitVec 64))
(declare-fun temp672_29 () (_ BitVec 64))
(declare-fun temp672_30 () (_ BitVec 64))
(declare-fun temp672_31 () (_ BitVec 64))
(declare-fun temp672_32 () (_ BitVec 64))
(declare-fun temp672_33 () (_ BitVec 64))
(declare-fun temp672_34 () (_ BitVec 64))
(declare-fun temp672_35 () (_ BitVec 64))
(declare-fun temp672_36 () (_ BitVec 64))
(declare-fun temp672_37 () (_ BitVec 64))
(declare-fun temp672_38 () (_ BitVec 64))
(declare-fun temp672_39 () (_ BitVec 64))
(declare-fun temp672_40 () (_ BitVec 64))
(declare-fun temp672_41 () (_ BitVec 64))
(declare-fun temp672_42 () (_ BitVec 64))
(declare-fun temp672_43 () (_ BitVec 64))
(declare-fun temp672_44 () (_ BitVec 64))
(declare-fun temp672_45 () (_ BitVec 64))
(declare-fun temp672_46 () (_ BitVec 64))
(declare-fun temp672_47 () (_ BitVec 64))
(declare-fun temp672_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp672_49 () (_ BitVec 64))
(declare-fun temp672_50 () (_ BitVec 64))
(declare-fun temp672_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp672_52 () (_ BitVec 64))
(declare-fun temp672_53 () (_ BitVec 64))
(declare-fun temp672_54 () (_ BitVec 64))
(declare-fun temp672_55 () (_ BitVec 64))
(declare-fun temp672_56 () (_ BitVec 64))
(declare-fun temp672_57 () (_ BitVec 64))
(declare-fun temp672_58 () (_ BitVec 64))
(declare-fun temp672_59 () (_ BitVec 64))
(declare-fun temp672_60 () (_ BitVec 64))
(declare-fun temp672_61 () (_ BitVec 64))
(declare-fun temp672_62 () (_ BitVec 64))
(declare-fun temp672_63 () (_ BitVec 64))
(declare-fun temp672_64 () (_ BitVec 64))
(declare-fun temp672_65 () (_ BitVec 64))
(declare-fun temp672_66 () (_ BitVec 64))
(declare-fun temp672_67 () (_ BitVec 64))
(declare-fun temp672_68 () (_ BitVec 64))
(declare-fun temp672_69 () (_ BitVec 64))
(declare-fun temp672_70 () (_ BitVec 64))
(declare-fun temp672_71 () (_ BitVec 64))
(declare-fun temp672_72 () (_ BitVec 64))
(declare-fun temp672_73 () (_ BitVec 64))
(declare-fun temp672_74 () (_ BitVec 64))
(declare-fun temp672_75 () (_ BitVec 64))
(declare-fun temp672_76 () (_ BitVec 64))
(declare-fun temp672_77 () (_ BitVec 64))
(declare-fun temp672_78 () (_ BitVec 64))
(declare-fun temp672_79 () (_ BitVec 64))
(declare-fun temp672_80 () (_ BitVec 64))
(declare-fun temp672_81 () (_ BitVec 64))
(declare-fun temp672_82 () (_ BitVec 64))
(declare-fun temp672_83 () (_ BitVec 64))
(declare-fun temp672_84 () (_ BitVec 64))
(declare-fun temp672_85 () (_ BitVec 64))
(declare-fun temp672_86 () (_ BitVec 64))
(declare-fun temp672_87 () (_ BitVec 64))
(declare-fun temp672_88 () (_ BitVec 64))
(declare-fun temp672_89 () (_ BitVec 64))
(declare-fun temp672_90 () (_ BitVec 64))
(declare-fun temp672_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp672_92 () (_ BitVec 64))
(declare-fun temp672_93 () (_ BitVec 64))
(declare-fun temp672_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp672_95 () (_ BitVec 64))
(declare-fun temp672_96 () (_ BitVec 64))
(declare-fun temp672_97 () (_ BitVec 64))
(declare-fun temp672_98 () (_ BitVec 64))
(declare-fun temp672_99 () (_ BitVec 64))
(declare-fun temp672_100 () (_ BitVec 64))
(declare-fun temp672_101 () (_ BitVec 64))
(declare-fun temp672_102 () (_ BitVec 64))
(declare-fun temp672_103 () (_ BitVec 64))
(declare-fun temp672_104 () (_ BitVec 64))
(declare-fun temp672_105 () (_ BitVec 64))
(declare-fun temp672_106 () (_ BitVec 64))
(declare-fun temp672_107 () (_ BitVec 64))
(declare-fun temp672_108 () (_ BitVec 64))
(declare-fun temp672_109 () (_ BitVec 64))
(declare-fun temp672_110 () (_ BitVec 64))
(declare-fun temp672_111 () (_ BitVec 64))
(declare-fun temp672_112 () (_ BitVec 64))
(declare-fun temp672_113 () (_ BitVec 64))
(declare-fun temp672_114 () (_ BitVec 64))
(declare-fun temp672_115 () (_ BitVec 64))
(declare-fun temp672_116 () (_ BitVec 64))
(declare-fun temp672_117 () (_ BitVec 64))
(declare-fun temp672_118 () (_ BitVec 64))
(declare-fun temp672_119 () (_ BitVec 64))
(declare-fun temp672_120 () (_ BitVec 64))
(declare-fun temp672_121 () (_ BitVec 64))
(declare-fun temp672_122 () (_ BitVec 64))
(declare-fun temp672_123 () (_ BitVec 64))
(declare-fun temp672_124 () (_ BitVec 64))
(declare-fun temp672_125 () (_ BitVec 64))
(declare-fun temp672_126 () (_ BitVec 64))
(declare-fun temp672_127 () (_ BitVec 64))
(declare-fun temp672_128 () (_ BitVec 64))
(declare-fun temp672_129 () (_ BitVec 64))
(declare-fun temp672_130 () (_ BitVec 64))
(declare-fun temp672_131 () (_ BitVec 64))
(declare-fun temp672_132 () (_ BitVec 64))
(declare-fun temp672_133 () (_ BitVec 64))
(declare-fun temp672_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp672_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp672_136 () (_ BitVec 64))
(declare-fun temp672_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp672_138 () (_ BitVec 64))
(declare-fun temp672_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp672_140 () (_ BitVec 64))
(declare-fun temp672_141 () (_ BitVec 64))
(declare-fun temp672_142 () (_ BitVec 64))
(declare-fun temp672_143 () (_ BitVec 64))
(declare-fun temp672_144 () (_ BitVec 64))
(declare-fun temp672_145 () (_ BitVec 64))
(declare-fun temp672_146 () (_ BitVec 64))
(declare-fun temp672_147 () (_ BitVec 64))
(declare-fun temp672_148 () (_ BitVec 64))
(declare-fun temp672_149 () (_ BitVec 64))
(declare-fun temp672_150 () (_ BitVec 64))
(declare-fun temp672_151 () (_ BitVec 64))
(declare-fun temp672_152 () (_ BitVec 64))
(declare-fun temp672_153 () (_ BitVec 64))
(declare-fun temp672_154 () (_ BitVec 64))
(declare-fun temp672_155 () (_ BitVec 64))
(declare-fun temp672_157 () (_ BitVec 64))
(declare-fun temp672_158 () (_ BitVec 64))
(declare-fun temp672_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp672_159 () (_ BitVec 64))
(declare-fun temp672_160 () (_ BitVec 64))
(declare-fun temp672_162 () (_ BitVec 64))
(declare-fun temp672_163 () (_ BitVec 64))
(declare-fun temp672_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp672_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp672_165 () (_ BitVec 64))
(declare-fun temp672_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp672_167 () (_ BitVec 64))
(declare-fun temp672_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp672_169 () (_ BitVec 64))
(declare-fun temp672_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp672_171 () (_ BitVec 64))
(declare-fun temp672_172 () (_ BitVec 64))
(declare-fun temp672_173 () (_ BitVec 64))
(declare-fun temp672_174 () (_ BitVec 64))
(declare-fun temp672_175 () (_ BitVec 64))
(declare-fun temp672_176 () (_ BitVec 64))
(declare-fun temp672_177 () (_ BitVec 64))
(declare-fun temp672_178 () (_ BitVec 64))
(declare-fun temp672_179 () (_ BitVec 64))
(declare-fun temp672_180 () (_ BitVec 64))
(declare-fun temp672_181 () (_ BitVec 64))
(declare-fun temp672_182 () (_ BitVec 64))
(declare-fun temp672_183 () (_ BitVec 64))
(declare-fun temp672_184 () (_ BitVec 64))
(declare-fun temp672_185 () (_ BitVec 64))
(declare-fun temp672_186 () (_ BitVec 64))
(declare-fun temp672_187 () (_ BitVec 64))
(declare-fun temp672_188 () (_ BitVec 64))
(declare-fun temp672_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp672_190 () (_ BitVec 64))
(declare-fun temp672_192 () (_ BitVec 64))
(declare-fun temp672_193 () (_ BitVec 64))
(declare-fun temp672_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp672_194 () (_ BitVec 64))
(declare-fun temp672_195 () (_ BitVec 64))
(declare-fun temp672_197 () (_ BitVec 64))
(declare-fun temp672_198 () (_ BitVec 64))
(declare-fun temp672_196 () (_ BitVec 64))
(declare-fun temp672_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp672_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp672_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp672_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp672_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp672_204 () (_ BitVec 64))
(declare-fun temp672_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp672_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp672_207 () (_ BitVec 64))
(declare-fun temp672_208 () (_ BitVec 64))
(declare-fun temp672_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp672_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp672_211 () (_ BitVec 64))
(declare-fun temp672_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp672_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp672_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp672_216 () (_ BitVec 64))
(declare-fun temp672_215 () (_ BitVec 64))
(declare-fun temp672_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp672_218 () (_ BitVec 64))
(declare-fun temp672_219 () (_ BitVec 64))
(declare-fun temp672_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp672_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp672_222 () (_ BitVec 64))
(declare-fun temp672_224 () (_ BitVec 64))
(declare-fun temp672_223 () (_ BitVec 64))
(declare-fun temp672_225 () (_ BitVec 64))
(assert (= temp672_1 #x0000000000000001))
(assert (= var77203 temp672_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp672_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp672_2)))
(assert (= temp672_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp672_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp672_4 #x0000000000000000))
(assert (= var210941 temp672_4))
(assert (= temp672_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp672_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp672_6 #x0000000000000000))
(assert (= var210986 temp672_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp672_7 #x0000000000000000))
(assert (= temp672_8 temp672_7))
(assert (= temp672_9 (select ARGNAME_padding_NAMEEND_VAL temp672_8)))
(assert (= temp672_10 #x0000000000000001))
(assert (= temp672_11 temp672_10))
(assert (= temp672_12 (select ARGNAME_padding_NAMEEND_VAL temp672_11)))
(assert (= temp672_13 #x0000000000000002))
(assert (= temp672_14 temp672_13))
(assert (= temp672_15 (select ARGNAME_padding_NAMEEND_VAL temp672_14)))
(assert (= temp672_16 #x0000000000000003))
(assert (= temp672_17 temp672_16))
(assert (= temp672_18 (select ARGNAME_padding_NAMEEND_VAL temp672_17)))
(assert (= temp672_19 #x0000000000000004))
(assert (= temp672_20 temp672_19))
(assert (= temp672_21 (select ARGNAME_padding_NAMEEND_VAL temp672_20)))
(assert (= temp672_22 #x0000000000000005))
(assert (= temp672_23 temp672_22))
(assert (= temp672_24 (select ARGNAME_padding_NAMEEND_VAL temp672_23)))
(assert (= temp672_25 #x0000000000000000))
(assert (= temp672_26 #x0000000000000000))
(assert (= temp672_27 temp672_26))
(assert (= temp672_28 (select ARGNAME_padding_NAMEEND_VAL temp672_27)))
(assert (= temp672_29 #x0000000000000000))
(assert (= temp672_30 #x0000000000000001))
(assert (= temp672_31 temp672_30))
(assert (= temp672_32 (select ARGNAME_padding_NAMEEND_VAL temp672_31)))
(assert (= temp672_33 #x0000000000000000))
(assert (= temp672_34 #x0000000000000002))
(assert (= temp672_35 temp672_34))
(assert (= temp672_36 (select ARGNAME_padding_NAMEEND_VAL temp672_35)))
(assert (= temp672_37 #x0000000000000000))
(assert (= temp672_38 #x0000000000000003))
(assert (= temp672_39 temp672_38))
(assert (= temp672_40 (select ARGNAME_padding_NAMEEND_VAL temp672_39)))
(assert (= temp672_41 #x0000000000000000))
(assert (= temp672_42 #x0000000000000004))
(assert (= temp672_43 temp672_42))
(assert (= temp672_44 (select ARGNAME_padding_NAMEEND_VAL temp672_43)))
(assert (= temp672_45 #x0000000000000000))
(assert (= temp672_46 #x0000000000000005))
(assert (= temp672_47 temp672_46))
(assert (= temp672_48 (select ARGNAME_padding_NAMEEND_VAL temp672_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp672_28 temp672_25)
             (bvslt temp672_32 temp672_29)
             (bvslt temp672_36 temp672_33)
             (bvslt temp672_40 temp672_37)
             (bvslt temp672_44 temp672_41)
             (bvslt temp672_48 temp672_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp672_49 #x0000000000000000))
(assert (= var1191714 temp672_49))
(assert (= temp672_50 #x0000000000000000))
(assert (= temp672_51 temp672_50))
(assert (= temp672_52 (select ARGNAME_output_padding_NAMEEND_VAL temp672_51)))
(assert (= temp672_53 #x0000000000000001))
(assert (= temp672_54 temp672_53))
(assert (= temp672_55 (select ARGNAME_output_padding_NAMEEND_VAL temp672_54)))
(assert (= temp672_56 #x0000000000000002))
(assert (= temp672_57 temp672_56))
(assert (= temp672_58 (select ARGNAME_output_padding_NAMEEND_VAL temp672_57)))
(assert (= temp672_59 #x0000000000000003))
(assert (= temp672_60 temp672_59))
(assert (= temp672_61 (select ARGNAME_output_padding_NAMEEND_VAL temp672_60)))
(assert (= temp672_62 #x0000000000000004))
(assert (= temp672_63 temp672_62))
(assert (= temp672_64 (select ARGNAME_output_padding_NAMEEND_VAL temp672_63)))
(assert (= temp672_65 #x0000000000000005))
(assert (= temp672_66 temp672_65))
(assert (= temp672_67 (select ARGNAME_output_padding_NAMEEND_VAL temp672_66)))
(assert (= temp672_68 #x0000000000000000))
(assert (= temp672_69 #x0000000000000000))
(assert (= temp672_70 temp672_69))
(assert (= temp672_71 (select ARGNAME_output_padding_NAMEEND_VAL temp672_70)))
(assert (= temp672_72 #x0000000000000000))
(assert (= temp672_73 #x0000000000000001))
(assert (= temp672_74 temp672_73))
(assert (= temp672_75 (select ARGNAME_output_padding_NAMEEND_VAL temp672_74)))
(assert (= temp672_76 #x0000000000000000))
(assert (= temp672_77 #x0000000000000002))
(assert (= temp672_78 temp672_77))
(assert (= temp672_79 (select ARGNAME_output_padding_NAMEEND_VAL temp672_78)))
(assert (= temp672_80 #x0000000000000000))
(assert (= temp672_81 #x0000000000000003))
(assert (= temp672_82 temp672_81))
(assert (= temp672_83 (select ARGNAME_output_padding_NAMEEND_VAL temp672_82)))
(assert (= temp672_84 #x0000000000000000))
(assert (= temp672_85 #x0000000000000004))
(assert (= temp672_86 temp672_85))
(assert (= temp672_87 (select ARGNAME_output_padding_NAMEEND_VAL temp672_86)))
(assert (= temp672_88 #x0000000000000000))
(assert (= temp672_89 #x0000000000000005))
(assert (= temp672_90 temp672_89))
(assert (= temp672_91 (select ARGNAME_output_padding_NAMEEND_VAL temp672_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp672_71 temp672_68)
             (bvslt temp672_75 temp672_72)
             (bvslt temp672_79 temp672_76)
             (bvslt temp672_83 temp672_80)
             (bvslt temp672_87 temp672_84)
             (bvslt temp672_91 temp672_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp672_92 #x0000000000000000))
(assert (= var1191725 temp672_92))
(assert (= temp672_93 #x0000000000000000))
(assert (= temp672_94 temp672_93))
(assert (= temp672_95 (select ARGNAME_stride_NAMEEND_VAL temp672_94)))
(assert (= temp672_96 #x0000000000000001))
(assert (= temp672_97 temp672_96))
(assert (= temp672_98 (select ARGNAME_stride_NAMEEND_VAL temp672_97)))
(assert (= temp672_99 #x0000000000000002))
(assert (= temp672_100 temp672_99))
(assert (= temp672_101 (select ARGNAME_stride_NAMEEND_VAL temp672_100)))
(assert (= temp672_102 #x0000000000000003))
(assert (= temp672_103 temp672_102))
(assert (= temp672_104 (select ARGNAME_stride_NAMEEND_VAL temp672_103)))
(assert (= temp672_105 #x0000000000000004))
(assert (= temp672_106 temp672_105))
(assert (= temp672_107 (select ARGNAME_stride_NAMEEND_VAL temp672_106)))
(assert (= temp672_108 #x0000000000000005))
(assert (= temp672_109 temp672_108))
(assert (= temp672_110 (select ARGNAME_stride_NAMEEND_VAL temp672_109)))
(assert (= temp672_111 #x0000000000000000))
(assert (= temp672_112 #x0000000000000000))
(assert (= temp672_113 temp672_112))
(assert (= temp672_114 (select ARGNAME_stride_NAMEEND_VAL temp672_113)))
(assert (= temp672_115 #x0000000000000000))
(assert (= temp672_116 #x0000000000000001))
(assert (= temp672_117 temp672_116))
(assert (= temp672_118 (select ARGNAME_stride_NAMEEND_VAL temp672_117)))
(assert (= temp672_119 #x0000000000000000))
(assert (= temp672_120 #x0000000000000002))
(assert (= temp672_121 temp672_120))
(assert (= temp672_122 (select ARGNAME_stride_NAMEEND_VAL temp672_121)))
(assert (= temp672_123 #x0000000000000000))
(assert (= temp672_124 #x0000000000000003))
(assert (= temp672_125 temp672_124))
(assert (= temp672_126 (select ARGNAME_stride_NAMEEND_VAL temp672_125)))
(assert (= temp672_127 #x0000000000000000))
(assert (= temp672_128 #x0000000000000004))
(assert (= temp672_129 temp672_128))
(assert (= temp672_130 (select ARGNAME_stride_NAMEEND_VAL temp672_129)))
(assert (= temp672_131 #x0000000000000000))
(assert (= temp672_132 #x0000000000000005))
(assert (= temp672_133 temp672_132))
(assert (= temp672_134 (select ARGNAME_stride_NAMEEND_VAL temp672_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp672_114 temp672_111)
             (bvsle temp672_118 temp672_115)
             (bvsle temp672_122 temp672_119)
             (bvsle temp672_126 temp672_123)
             (bvsle temp672_130 temp672_127)
             (bvsle temp672_134 temp672_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp672_135 #x0000000000000000))
(assert (= var1191735 temp672_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp672_136 #x0000000000000001))
(assert (= var1191747 temp672_136))
(assert (= temp672_137 #x0000000000000000))
(assert (= var1179826 temp672_137))
(assert (= temp672_138 #x0000000000000000))
(assert (= temp672_139 temp672_138))
(assert (= temp672_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp672_139)))
(assert (= temp672_141 #x0000000000000001))
(assert (= temp672_142 temp672_141))
(assert (= temp672_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp672_142)))
(assert (= temp672_144 #x0000000000000002))
(assert (= temp672_145 temp672_144))
(assert (= temp672_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp672_145)))
(assert (= temp672_147 #x0000000000000003))
(assert (= temp672_148 temp672_147))
(assert (= temp672_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp672_148)))
(assert (= temp672_150 #x0000000000000004))
(assert (= temp672_151 temp672_150))
(assert (= temp672_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp672_151)))
(assert (= temp672_153 #x0000000000000005))
(assert (= temp672_154 temp672_153))
(assert (= temp672_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp672_154)))
(assert (= temp672_157 var1179826))
(assert (= temp672_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp672_157)))
(assert (= temp672_156 temp672_158))
(assert (= var1191780
   (ite (bvslt temp672_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp672_159 #x0000000000000000))
(assert (= var1191780 temp672_159))
(assert (= temp672_160 #x0000000000000000))
(assert (= var1179826 temp672_160))
(assert (= temp672_162 var1179826))
(assert (= temp672_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp672_162)))
(assert (= temp672_161 temp672_163))
(assert (= var1191802 (bvsmod temp672_161 ARGNAME_groups_NAMEEND)))
(assert (= temp672_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp672_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp672_165 #x0000000000000001))
(assert (= var1191803 temp672_165))
(assert (= temp672_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp672_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp672_167 #x0000000000000001))
(assert (= var1191823 temp672_167))
(assert (= temp672_168 #x0000000000000001))
(assert (= var1180714 temp672_168))
(assert (= temp672_169 #x0000000000000000))
(assert (= temp672_170 temp672_169))
(assert (= temp672_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp672_170)))
(assert (= temp672_172 #x0000000000000001))
(assert (= temp672_173 temp672_172))
(assert (= temp672_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp672_173)))
(assert (= temp672_175 #x0000000000000002))
(assert (= temp672_176 temp672_175))
(assert (= temp672_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp672_176)))
(assert (= temp672_178 #x0000000000000003))
(assert (= temp672_179 temp672_178))
(assert (= temp672_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp672_179)))
(assert (= temp672_181 #x0000000000000004))
(assert (= temp672_182 temp672_181))
(assert (= temp672_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp672_182)))
(assert (= temp672_184 #x0000000000000005))
(assert (= temp672_185 temp672_184))
(assert (= temp672_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp672_185)))
(assert (= temp672_187 #x0000000000000000))
(assert (= temp672_188
   (ite (bvslt var1180714 temp672_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp672_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp672_188)))
(assert (= var1191831 temp672_189))
(assert (bvslt (ite (bvslt var1180714 temp672_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp672_190 #x0000000000000001))
(assert (= var1180714 temp672_190))
(assert (= temp672_192 var1180714))
(assert (= temp672_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp672_192)))
(assert (= temp672_191 temp672_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp672_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp672_194 #x0000000000000001))
(assert (= var1191836 temp672_194))
(assert (= temp672_195 #x0000000000000000))
(assert (= var1179826 temp672_195))
(assert (= temp672_197 var1179826))
(assert (= temp672_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp672_197)))
(assert (= temp672_196 temp672_198))
(assert (= temp672_199 #x0000000000000002))
(assert (= var1586025 temp672_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp672_200 #x0000000000000001))
(assert (= var1191993 temp672_200))
(assert (= temp672_201 #x0000000000000001))
(assert (= var2700303 temp672_201))
(assert (= temp672_202 #x0000000000000001))
(assert (= var2962447 temp672_202))
(assert (= temp672_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp672_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp672_204 #x0000000000000001))
(assert (= var211058 temp672_204))
(assert (= temp672_205 #x0000000000000001))
(assert (= var211188 temp672_205))
(assert (= var3879401 var211188))
(assert (= temp672_206 #x0000000000000000))
(assert (= var3866802 temp672_206))
(assert (= temp672_207 #x0000000000000000))
(assert (= temp672_208
   (ite (bvslt var3866802 temp672_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp672_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp672_208)))
(assert (= var3879420 temp672_209))
(assert (bvslt (ite (bvslt var3866802 temp672_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp672_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp672_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp672_211 #x0000000000000001))
(assert (= var3879421 temp672_211))
(assert (= temp672_212 #x0000000000000000))
(assert (= var4079423 temp672_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp672_213 #x0000000000000002))
(assert (= var4208259 temp672_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp672_214 #x0000000000000000))
(assert (= var4273820 temp672_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp672_216 #xffffffffffffffff))
(assert (= temp672_215 temp672_216))
(assert (= temp672_217 #x0000000000000001))
(assert (= var197674 temp672_217))
(assert (= temp672_218 #x0000000000000000))
(assert (= temp672_219
   (ite (bvslt var197674 temp672_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp672_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp672_219)))
(assert (= var211595 temp672_220))
(assert (bvslt (ite (bvslt var197674 temp672_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp672_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp672_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp672_222 #x0000000000000001))
(assert (= var211596 temp672_222))
(assert (= temp672_224 #xffffffffffffffff))
(assert (= temp672_223 temp672_224))
(assert (= temp672_225 #x0000000000000001))
(assert (= var211058 temp672_225))
(model-add temp672_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp672_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp672_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp672_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





