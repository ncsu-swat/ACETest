(declare-fun temp889_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp889_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp889_3 () (_ BitVec 64))
(declare-fun temp889_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp889_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp889_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp889_7 () (_ BitVec 64))
(declare-fun temp889_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp889_9 () (_ BitVec 64))
(declare-fun temp889_10 () (_ BitVec 64))
(declare-fun temp889_11 () (_ BitVec 64))
(declare-fun temp889_12 () (_ BitVec 64))
(declare-fun temp889_13 () (_ BitVec 64))
(declare-fun temp889_14 () (_ BitVec 64))
(declare-fun temp889_15 () (_ BitVec 64))
(declare-fun temp889_16 () (_ BitVec 64))
(declare-fun temp889_17 () (_ BitVec 64))
(declare-fun temp889_18 () (_ BitVec 64))
(declare-fun temp889_19 () (_ BitVec 64))
(declare-fun temp889_20 () (_ BitVec 64))
(declare-fun temp889_21 () (_ BitVec 64))
(declare-fun temp889_22 () (_ BitVec 64))
(declare-fun temp889_23 () (_ BitVec 64))
(declare-fun temp889_24 () (_ BitVec 64))
(declare-fun temp889_25 () (_ BitVec 64))
(declare-fun temp889_26 () (_ BitVec 64))
(declare-fun temp889_27 () (_ BitVec 64))
(declare-fun temp889_28 () (_ BitVec 64))
(declare-fun temp889_29 () (_ BitVec 64))
(declare-fun temp889_30 () (_ BitVec 64))
(declare-fun temp889_31 () (_ BitVec 64))
(declare-fun temp889_32 () (_ BitVec 64))
(declare-fun temp889_33 () (_ BitVec 64))
(declare-fun temp889_34 () (_ BitVec 64))
(declare-fun temp889_35 () (_ BitVec 64))
(declare-fun temp889_36 () (_ BitVec 64))
(declare-fun temp889_37 () (_ BitVec 64))
(declare-fun temp889_38 () (_ BitVec 64))
(declare-fun temp889_39 () (_ BitVec 64))
(declare-fun temp889_40 () (_ BitVec 64))
(declare-fun temp889_41 () (_ BitVec 64))
(declare-fun temp889_42 () (_ BitVec 64))
(declare-fun temp889_43 () (_ BitVec 64))
(declare-fun temp889_44 () (_ BitVec 64))
(declare-fun temp889_45 () (_ BitVec 64))
(declare-fun temp889_46 () (_ BitVec 64))
(declare-fun temp889_47 () (_ BitVec 64))
(declare-fun temp889_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp889_49 () (_ BitVec 64))
(declare-fun temp889_50 () (_ BitVec 64))
(declare-fun temp889_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp889_52 () (_ BitVec 64))
(declare-fun temp889_53 () (_ BitVec 64))
(declare-fun temp889_54 () (_ BitVec 64))
(declare-fun temp889_55 () (_ BitVec 64))
(declare-fun temp889_56 () (_ BitVec 64))
(declare-fun temp889_57 () (_ BitVec 64))
(declare-fun temp889_58 () (_ BitVec 64))
(declare-fun temp889_59 () (_ BitVec 64))
(declare-fun temp889_60 () (_ BitVec 64))
(declare-fun temp889_61 () (_ BitVec 64))
(declare-fun temp889_62 () (_ BitVec 64))
(declare-fun temp889_63 () (_ BitVec 64))
(declare-fun temp889_64 () (_ BitVec 64))
(declare-fun temp889_65 () (_ BitVec 64))
(declare-fun temp889_66 () (_ BitVec 64))
(declare-fun temp889_67 () (_ BitVec 64))
(declare-fun temp889_68 () (_ BitVec 64))
(declare-fun temp889_69 () (_ BitVec 64))
(declare-fun temp889_70 () (_ BitVec 64))
(declare-fun temp889_71 () (_ BitVec 64))
(declare-fun temp889_72 () (_ BitVec 64))
(declare-fun temp889_73 () (_ BitVec 64))
(declare-fun temp889_74 () (_ BitVec 64))
(declare-fun temp889_75 () (_ BitVec 64))
(declare-fun temp889_76 () (_ BitVec 64))
(declare-fun temp889_77 () (_ BitVec 64))
(declare-fun temp889_78 () (_ BitVec 64))
(declare-fun temp889_79 () (_ BitVec 64))
(declare-fun temp889_80 () (_ BitVec 64))
(declare-fun temp889_81 () (_ BitVec 64))
(declare-fun temp889_82 () (_ BitVec 64))
(declare-fun temp889_83 () (_ BitVec 64))
(declare-fun temp889_84 () (_ BitVec 64))
(declare-fun temp889_85 () (_ BitVec 64))
(declare-fun temp889_86 () (_ BitVec 64))
(declare-fun temp889_87 () (_ BitVec 64))
(declare-fun temp889_88 () (_ BitVec 64))
(declare-fun temp889_89 () (_ BitVec 64))
(declare-fun temp889_90 () (_ BitVec 64))
(declare-fun temp889_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp889_92 () (_ BitVec 64))
(declare-fun temp889_93 () (_ BitVec 64))
(declare-fun temp889_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp889_95 () (_ BitVec 64))
(declare-fun temp889_96 () (_ BitVec 64))
(declare-fun temp889_97 () (_ BitVec 64))
(declare-fun temp889_98 () (_ BitVec 64))
(declare-fun temp889_99 () (_ BitVec 64))
(declare-fun temp889_100 () (_ BitVec 64))
(declare-fun temp889_101 () (_ BitVec 64))
(declare-fun temp889_102 () (_ BitVec 64))
(declare-fun temp889_103 () (_ BitVec 64))
(declare-fun temp889_104 () (_ BitVec 64))
(declare-fun temp889_105 () (_ BitVec 64))
(declare-fun temp889_106 () (_ BitVec 64))
(declare-fun temp889_107 () (_ BitVec 64))
(declare-fun temp889_108 () (_ BitVec 64))
(declare-fun temp889_109 () (_ BitVec 64))
(declare-fun temp889_110 () (_ BitVec 64))
(declare-fun temp889_111 () (_ BitVec 64))
(declare-fun temp889_112 () (_ BitVec 64))
(declare-fun temp889_113 () (_ BitVec 64))
(declare-fun temp889_114 () (_ BitVec 64))
(declare-fun temp889_115 () (_ BitVec 64))
(declare-fun temp889_116 () (_ BitVec 64))
(declare-fun temp889_117 () (_ BitVec 64))
(declare-fun temp889_118 () (_ BitVec 64))
(declare-fun temp889_119 () (_ BitVec 64))
(declare-fun temp889_120 () (_ BitVec 64))
(declare-fun temp889_121 () (_ BitVec 64))
(declare-fun temp889_122 () (_ BitVec 64))
(declare-fun temp889_123 () (_ BitVec 64))
(declare-fun temp889_124 () (_ BitVec 64))
(declare-fun temp889_125 () (_ BitVec 64))
(declare-fun temp889_126 () (_ BitVec 64))
(declare-fun temp889_127 () (_ BitVec 64))
(declare-fun temp889_128 () (_ BitVec 64))
(declare-fun temp889_129 () (_ BitVec 64))
(declare-fun temp889_130 () (_ BitVec 64))
(declare-fun temp889_131 () (_ BitVec 64))
(declare-fun temp889_132 () (_ BitVec 64))
(declare-fun temp889_133 () (_ BitVec 64))
(declare-fun temp889_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp889_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp889_136 () (_ BitVec 64))
(declare-fun temp889_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp889_138 () (_ BitVec 64))
(declare-fun temp889_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp889_140 () (_ BitVec 64))
(declare-fun temp889_141 () (_ BitVec 64))
(declare-fun temp889_142 () (_ BitVec 64))
(declare-fun temp889_143 () (_ BitVec 64))
(declare-fun temp889_144 () (_ BitVec 64))
(declare-fun temp889_145 () (_ BitVec 64))
(declare-fun temp889_146 () (_ BitVec 64))
(declare-fun temp889_147 () (_ BitVec 64))
(declare-fun temp889_148 () (_ BitVec 64))
(declare-fun temp889_149 () (_ BitVec 64))
(declare-fun temp889_150 () (_ BitVec 64))
(declare-fun temp889_151 () (_ BitVec 64))
(declare-fun temp889_152 () (_ BitVec 64))
(declare-fun temp889_153 () (_ BitVec 64))
(declare-fun temp889_154 () (_ BitVec 64))
(declare-fun temp889_155 () (_ BitVec 64))
(declare-fun temp889_157 () (_ BitVec 64))
(declare-fun temp889_158 () (_ BitVec 64))
(declare-fun temp889_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp889_159 () (_ BitVec 64))
(declare-fun temp889_160 () (_ BitVec 64))
(declare-fun temp889_162 () (_ BitVec 64))
(declare-fun temp889_163 () (_ BitVec 64))
(declare-fun temp889_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp889_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp889_165 () (_ BitVec 64))
(declare-fun temp889_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp889_167 () (_ BitVec 64))
(declare-fun temp889_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp889_169 () (_ BitVec 64))
(declare-fun temp889_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp889_171 () (_ BitVec 64))
(declare-fun temp889_172 () (_ BitVec 64))
(declare-fun temp889_173 () (_ BitVec 64))
(declare-fun temp889_174 () (_ BitVec 64))
(declare-fun temp889_175 () (_ BitVec 64))
(declare-fun temp889_176 () (_ BitVec 64))
(declare-fun temp889_177 () (_ BitVec 64))
(declare-fun temp889_178 () (_ BitVec 64))
(declare-fun temp889_179 () (_ BitVec 64))
(declare-fun temp889_180 () (_ BitVec 64))
(declare-fun temp889_181 () (_ BitVec 64))
(declare-fun temp889_182 () (_ BitVec 64))
(declare-fun temp889_183 () (_ BitVec 64))
(declare-fun temp889_184 () (_ BitVec 64))
(declare-fun temp889_185 () (_ BitVec 64))
(declare-fun temp889_186 () (_ BitVec 64))
(declare-fun temp889_187 () (_ BitVec 64))
(declare-fun temp889_188 () (_ BitVec 64))
(declare-fun temp889_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp889_190 () (_ BitVec 64))
(declare-fun temp889_192 () (_ BitVec 64))
(declare-fun temp889_193 () (_ BitVec 64))
(declare-fun temp889_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp889_194 () (_ BitVec 64))
(declare-fun temp889_195 () (_ BitVec 64))
(declare-fun temp889_197 () (_ BitVec 64))
(declare-fun temp889_198 () (_ BitVec 64))
(declare-fun temp889_196 () (_ BitVec 64))
(declare-fun temp889_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp889_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp889_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp889_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp889_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp889_204 () (_ BitVec 64))
(declare-fun temp889_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp889_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp889_207 () (_ BitVec 64))
(declare-fun temp889_208 () (_ BitVec 64))
(declare-fun temp889_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp889_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp889_211 () (_ BitVec 64))
(declare-fun temp889_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp889_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp889_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp889_215 () (_ BitVec 64))
(assert (= temp889_1 #x0000000000000001))
(assert (= var77203 temp889_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp889_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp889_2)))
(assert (= temp889_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp889_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp889_4 #x0000000000000000))
(assert (= var210941 temp889_4))
(assert (= temp889_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp889_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp889_6 #x0000000000000000))
(assert (= var210986 temp889_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp889_7 #x0000000000000000))
(assert (= temp889_8 temp889_7))
(assert (= temp889_9 (select ARGNAME_padding_NAMEEND_VAL temp889_8)))
(assert (= temp889_10 #x0000000000000001))
(assert (= temp889_11 temp889_10))
(assert (= temp889_12 (select ARGNAME_padding_NAMEEND_VAL temp889_11)))
(assert (= temp889_13 #x0000000000000002))
(assert (= temp889_14 temp889_13))
(assert (= temp889_15 (select ARGNAME_padding_NAMEEND_VAL temp889_14)))
(assert (= temp889_16 #x0000000000000003))
(assert (= temp889_17 temp889_16))
(assert (= temp889_18 (select ARGNAME_padding_NAMEEND_VAL temp889_17)))
(assert (= temp889_19 #x0000000000000004))
(assert (= temp889_20 temp889_19))
(assert (= temp889_21 (select ARGNAME_padding_NAMEEND_VAL temp889_20)))
(assert (= temp889_22 #x0000000000000005))
(assert (= temp889_23 temp889_22))
(assert (= temp889_24 (select ARGNAME_padding_NAMEEND_VAL temp889_23)))
(assert (= temp889_25 #x0000000000000000))
(assert (= temp889_26 #x0000000000000000))
(assert (= temp889_27 temp889_26))
(assert (= temp889_28 (select ARGNAME_padding_NAMEEND_VAL temp889_27)))
(assert (= temp889_29 #x0000000000000000))
(assert (= temp889_30 #x0000000000000001))
(assert (= temp889_31 temp889_30))
(assert (= temp889_32 (select ARGNAME_padding_NAMEEND_VAL temp889_31)))
(assert (= temp889_33 #x0000000000000000))
(assert (= temp889_34 #x0000000000000002))
(assert (= temp889_35 temp889_34))
(assert (= temp889_36 (select ARGNAME_padding_NAMEEND_VAL temp889_35)))
(assert (= temp889_37 #x0000000000000000))
(assert (= temp889_38 #x0000000000000003))
(assert (= temp889_39 temp889_38))
(assert (= temp889_40 (select ARGNAME_padding_NAMEEND_VAL temp889_39)))
(assert (= temp889_41 #x0000000000000000))
(assert (= temp889_42 #x0000000000000004))
(assert (= temp889_43 temp889_42))
(assert (= temp889_44 (select ARGNAME_padding_NAMEEND_VAL temp889_43)))
(assert (= temp889_45 #x0000000000000000))
(assert (= temp889_46 #x0000000000000005))
(assert (= temp889_47 temp889_46))
(assert (= temp889_48 (select ARGNAME_padding_NAMEEND_VAL temp889_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp889_28 temp889_25)
             (bvslt temp889_32 temp889_29)
             (bvslt temp889_36 temp889_33)
             (bvslt temp889_40 temp889_37)
             (bvslt temp889_44 temp889_41)
             (bvslt temp889_48 temp889_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp889_49 #x0000000000000000))
(assert (= var1191714 temp889_49))
(assert (= temp889_50 #x0000000000000000))
(assert (= temp889_51 temp889_50))
(assert (= temp889_52 (select ARGNAME_output_padding_NAMEEND_VAL temp889_51)))
(assert (= temp889_53 #x0000000000000001))
(assert (= temp889_54 temp889_53))
(assert (= temp889_55 (select ARGNAME_output_padding_NAMEEND_VAL temp889_54)))
(assert (= temp889_56 #x0000000000000002))
(assert (= temp889_57 temp889_56))
(assert (= temp889_58 (select ARGNAME_output_padding_NAMEEND_VAL temp889_57)))
(assert (= temp889_59 #x0000000000000003))
(assert (= temp889_60 temp889_59))
(assert (= temp889_61 (select ARGNAME_output_padding_NAMEEND_VAL temp889_60)))
(assert (= temp889_62 #x0000000000000004))
(assert (= temp889_63 temp889_62))
(assert (= temp889_64 (select ARGNAME_output_padding_NAMEEND_VAL temp889_63)))
(assert (= temp889_65 #x0000000000000005))
(assert (= temp889_66 temp889_65))
(assert (= temp889_67 (select ARGNAME_output_padding_NAMEEND_VAL temp889_66)))
(assert (= temp889_68 #x0000000000000000))
(assert (= temp889_69 #x0000000000000000))
(assert (= temp889_70 temp889_69))
(assert (= temp889_71 (select ARGNAME_output_padding_NAMEEND_VAL temp889_70)))
(assert (= temp889_72 #x0000000000000000))
(assert (= temp889_73 #x0000000000000001))
(assert (= temp889_74 temp889_73))
(assert (= temp889_75 (select ARGNAME_output_padding_NAMEEND_VAL temp889_74)))
(assert (= temp889_76 #x0000000000000000))
(assert (= temp889_77 #x0000000000000002))
(assert (= temp889_78 temp889_77))
(assert (= temp889_79 (select ARGNAME_output_padding_NAMEEND_VAL temp889_78)))
(assert (= temp889_80 #x0000000000000000))
(assert (= temp889_81 #x0000000000000003))
(assert (= temp889_82 temp889_81))
(assert (= temp889_83 (select ARGNAME_output_padding_NAMEEND_VAL temp889_82)))
(assert (= temp889_84 #x0000000000000000))
(assert (= temp889_85 #x0000000000000004))
(assert (= temp889_86 temp889_85))
(assert (= temp889_87 (select ARGNAME_output_padding_NAMEEND_VAL temp889_86)))
(assert (= temp889_88 #x0000000000000000))
(assert (= temp889_89 #x0000000000000005))
(assert (= temp889_90 temp889_89))
(assert (= temp889_91 (select ARGNAME_output_padding_NAMEEND_VAL temp889_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp889_71 temp889_68)
             (bvslt temp889_75 temp889_72)
             (bvslt temp889_79 temp889_76)
             (bvslt temp889_83 temp889_80)
             (bvslt temp889_87 temp889_84)
             (bvslt temp889_91 temp889_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp889_92 #x0000000000000000))
(assert (= var1191725 temp889_92))
(assert (= temp889_93 #x0000000000000000))
(assert (= temp889_94 temp889_93))
(assert (= temp889_95 (select ARGNAME_stride_NAMEEND_VAL temp889_94)))
(assert (= temp889_96 #x0000000000000001))
(assert (= temp889_97 temp889_96))
(assert (= temp889_98 (select ARGNAME_stride_NAMEEND_VAL temp889_97)))
(assert (= temp889_99 #x0000000000000002))
(assert (= temp889_100 temp889_99))
(assert (= temp889_101 (select ARGNAME_stride_NAMEEND_VAL temp889_100)))
(assert (= temp889_102 #x0000000000000003))
(assert (= temp889_103 temp889_102))
(assert (= temp889_104 (select ARGNAME_stride_NAMEEND_VAL temp889_103)))
(assert (= temp889_105 #x0000000000000004))
(assert (= temp889_106 temp889_105))
(assert (= temp889_107 (select ARGNAME_stride_NAMEEND_VAL temp889_106)))
(assert (= temp889_108 #x0000000000000005))
(assert (= temp889_109 temp889_108))
(assert (= temp889_110 (select ARGNAME_stride_NAMEEND_VAL temp889_109)))
(assert (= temp889_111 #x0000000000000000))
(assert (= temp889_112 #x0000000000000000))
(assert (= temp889_113 temp889_112))
(assert (= temp889_114 (select ARGNAME_stride_NAMEEND_VAL temp889_113)))
(assert (= temp889_115 #x0000000000000000))
(assert (= temp889_116 #x0000000000000001))
(assert (= temp889_117 temp889_116))
(assert (= temp889_118 (select ARGNAME_stride_NAMEEND_VAL temp889_117)))
(assert (= temp889_119 #x0000000000000000))
(assert (= temp889_120 #x0000000000000002))
(assert (= temp889_121 temp889_120))
(assert (= temp889_122 (select ARGNAME_stride_NAMEEND_VAL temp889_121)))
(assert (= temp889_123 #x0000000000000000))
(assert (= temp889_124 #x0000000000000003))
(assert (= temp889_125 temp889_124))
(assert (= temp889_126 (select ARGNAME_stride_NAMEEND_VAL temp889_125)))
(assert (= temp889_127 #x0000000000000000))
(assert (= temp889_128 #x0000000000000004))
(assert (= temp889_129 temp889_128))
(assert (= temp889_130 (select ARGNAME_stride_NAMEEND_VAL temp889_129)))
(assert (= temp889_131 #x0000000000000000))
(assert (= temp889_132 #x0000000000000005))
(assert (= temp889_133 temp889_132))
(assert (= temp889_134 (select ARGNAME_stride_NAMEEND_VAL temp889_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp889_114 temp889_111)
             (bvsle temp889_118 temp889_115)
             (bvsle temp889_122 temp889_119)
             (bvsle temp889_126 temp889_123)
             (bvsle temp889_130 temp889_127)
             (bvsle temp889_134 temp889_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp889_135 #x0000000000000000))
(assert (= var1191735 temp889_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp889_136 #x0000000000000001))
(assert (= var1191747 temp889_136))
(assert (= temp889_137 #x0000000000000000))
(assert (= var1179826 temp889_137))
(assert (= temp889_138 #x0000000000000000))
(assert (= temp889_139 temp889_138))
(assert (= temp889_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp889_139)))
(assert (= temp889_141 #x0000000000000001))
(assert (= temp889_142 temp889_141))
(assert (= temp889_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp889_142)))
(assert (= temp889_144 #x0000000000000002))
(assert (= temp889_145 temp889_144))
(assert (= temp889_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp889_145)))
(assert (= temp889_147 #x0000000000000003))
(assert (= temp889_148 temp889_147))
(assert (= temp889_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp889_148)))
(assert (= temp889_150 #x0000000000000004))
(assert (= temp889_151 temp889_150))
(assert (= temp889_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp889_151)))
(assert (= temp889_153 #x0000000000000005))
(assert (= temp889_154 temp889_153))
(assert (= temp889_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp889_154)))
(assert (= temp889_157 var1179826))
(assert (= temp889_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp889_157)))
(assert (= temp889_156 temp889_158))
(assert (= var1191780
   (ite (bvslt temp889_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp889_159 #x0000000000000000))
(assert (= var1191780 temp889_159))
(assert (= temp889_160 #x0000000000000000))
(assert (= var1179826 temp889_160))
(assert (= temp889_162 var1179826))
(assert (= temp889_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp889_162)))
(assert (= temp889_161 temp889_163))
(assert (= var1191802 (bvsmod temp889_161 ARGNAME_groups_NAMEEND)))
(assert (= temp889_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp889_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp889_165 #x0000000000000001))
(assert (= var1191803 temp889_165))
(assert (= temp889_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp889_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp889_167 #x0000000000000001))
(assert (= var1191823 temp889_167))
(assert (= temp889_168 #x0000000000000001))
(assert (= var1180714 temp889_168))
(assert (= temp889_169 #x0000000000000000))
(assert (= temp889_170 temp889_169))
(assert (= temp889_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp889_170)))
(assert (= temp889_172 #x0000000000000001))
(assert (= temp889_173 temp889_172))
(assert (= temp889_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp889_173)))
(assert (= temp889_175 #x0000000000000002))
(assert (= temp889_176 temp889_175))
(assert (= temp889_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp889_176)))
(assert (= temp889_178 #x0000000000000003))
(assert (= temp889_179 temp889_178))
(assert (= temp889_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp889_179)))
(assert (= temp889_181 #x0000000000000004))
(assert (= temp889_182 temp889_181))
(assert (= temp889_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp889_182)))
(assert (= temp889_184 #x0000000000000005))
(assert (= temp889_185 temp889_184))
(assert (= temp889_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp889_185)))
(assert (= temp889_187 #x0000000000000000))
(assert (= temp889_188
   (ite (bvslt var1180714 temp889_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp889_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp889_188)))
(assert (= var1191831 temp889_189))
(assert (bvslt (ite (bvslt var1180714 temp889_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp889_190 #x0000000000000001))
(assert (= var1180714 temp889_190))
(assert (= temp889_192 var1180714))
(assert (= temp889_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp889_192)))
(assert (= temp889_191 temp889_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp889_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp889_194 #x0000000000000001))
(assert (= var1191836 temp889_194))
(assert (= temp889_195 #x0000000000000000))
(assert (= var1179826 temp889_195))
(assert (= temp889_197 var1179826))
(assert (= temp889_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp889_197)))
(assert (= temp889_196 temp889_198))
(assert (= temp889_199 #x0000000000000002))
(assert (= var1586025 temp889_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp889_200 #x0000000000000001))
(assert (= var1191993 temp889_200))
(assert (= temp889_201 #x0000000000000001))
(assert (= var2700303 temp889_201))
(assert (= temp889_202 #x0000000000000001))
(assert (= var2962447 temp889_202))
(assert (= temp889_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp889_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp889_204 #x0000000000000001))
(assert (= var211058 temp889_204))
(assert (= temp889_205 #x0000000000000001))
(assert (= var211188 temp889_205))
(assert (= var3879401 var211188))
(assert (= temp889_206 #x0000000000000000))
(assert (= var3866802 temp889_206))
(assert (= temp889_207 #x0000000000000000))
(assert (= temp889_208
   (ite (bvslt var3866802 temp889_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp889_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp889_208)))
(assert (= var3879420 temp889_209))
(assert (bvslt (ite (bvslt var3866802 temp889_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp889_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp889_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp889_211 #x0000000000000001))
(assert (= var3879421 temp889_211))
(assert (= temp889_212 #x0000000000000000))
(assert (= var4079423 temp889_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp889_213 #x0000000000000002))
(assert (= var4208259 temp889_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp889_214 #x0000000000000000))
(assert (= var4273820 temp889_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp889_215 #x0000000000000001))
(assert (= var211058 temp889_215))
(model-add temp889_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp889_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp889_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp889_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





