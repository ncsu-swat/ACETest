(declare-fun temp10930_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10930_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10930_3 () (_ BitVec 64))
(declare-fun temp10930_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10930_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10930_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10930_7 () (_ BitVec 64))
(declare-fun temp10930_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10930_9 () (_ BitVec 64))
(declare-fun temp10930_10 () (_ BitVec 64))
(declare-fun temp10930_11 () (_ BitVec 64))
(declare-fun temp10930_12 () (_ BitVec 64))
(declare-fun temp10930_13 () (_ BitVec 64))
(declare-fun temp10930_14 () (_ BitVec 64))
(declare-fun temp10930_15 () (_ BitVec 64))
(declare-fun temp10930_16 () (_ BitVec 64))
(declare-fun temp10930_17 () (_ BitVec 64))
(declare-fun temp10930_18 () (_ BitVec 64))
(declare-fun temp10930_19 () (_ BitVec 64))
(declare-fun temp10930_20 () (_ BitVec 64))
(declare-fun temp10930_21 () (_ BitVec 64))
(declare-fun temp10930_22 () (_ BitVec 64))
(declare-fun temp10930_23 () (_ BitVec 64))
(declare-fun temp10930_24 () (_ BitVec 64))
(declare-fun temp10930_25 () (_ BitVec 64))
(declare-fun temp10930_26 () (_ BitVec 64))
(declare-fun temp10930_27 () (_ BitVec 64))
(declare-fun temp10930_28 () (_ BitVec 64))
(declare-fun temp10930_29 () (_ BitVec 64))
(declare-fun temp10930_30 () (_ BitVec 64))
(declare-fun temp10930_31 () (_ BitVec 64))
(declare-fun temp10930_32 () (_ BitVec 64))
(declare-fun temp10930_33 () (_ BitVec 64))
(declare-fun temp10930_34 () (_ BitVec 64))
(declare-fun temp10930_35 () (_ BitVec 64))
(declare-fun temp10930_36 () (_ BitVec 64))
(declare-fun temp10930_37 () (_ BitVec 64))
(declare-fun temp10930_38 () (_ BitVec 64))
(declare-fun temp10930_39 () (_ BitVec 64))
(declare-fun temp10930_40 () (_ BitVec 64))
(declare-fun temp10930_41 () (_ BitVec 64))
(declare-fun temp10930_42 () (_ BitVec 64))
(declare-fun temp10930_43 () (_ BitVec 64))
(declare-fun temp10930_44 () (_ BitVec 64))
(declare-fun temp10930_45 () (_ BitVec 64))
(declare-fun temp10930_46 () (_ BitVec 64))
(declare-fun temp10930_47 () (_ BitVec 64))
(declare-fun temp10930_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10930_49 () (_ BitVec 64))
(declare-fun temp10930_50 () (_ BitVec 64))
(declare-fun temp10930_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10930_52 () (_ BitVec 64))
(declare-fun temp10930_53 () (_ BitVec 64))
(declare-fun temp10930_54 () (_ BitVec 64))
(declare-fun temp10930_55 () (_ BitVec 64))
(declare-fun temp10930_56 () (_ BitVec 64))
(declare-fun temp10930_57 () (_ BitVec 64))
(declare-fun temp10930_58 () (_ BitVec 64))
(declare-fun temp10930_59 () (_ BitVec 64))
(declare-fun temp10930_60 () (_ BitVec 64))
(declare-fun temp10930_61 () (_ BitVec 64))
(declare-fun temp10930_62 () (_ BitVec 64))
(declare-fun temp10930_63 () (_ BitVec 64))
(declare-fun temp10930_64 () (_ BitVec 64))
(declare-fun temp10930_65 () (_ BitVec 64))
(declare-fun temp10930_66 () (_ BitVec 64))
(declare-fun temp10930_67 () (_ BitVec 64))
(declare-fun temp10930_68 () (_ BitVec 64))
(declare-fun temp10930_69 () (_ BitVec 64))
(declare-fun temp10930_70 () (_ BitVec 64))
(declare-fun temp10930_71 () (_ BitVec 64))
(declare-fun temp10930_72 () (_ BitVec 64))
(declare-fun temp10930_73 () (_ BitVec 64))
(declare-fun temp10930_74 () (_ BitVec 64))
(declare-fun temp10930_75 () (_ BitVec 64))
(declare-fun temp10930_76 () (_ BitVec 64))
(declare-fun temp10930_77 () (_ BitVec 64))
(declare-fun temp10930_78 () (_ BitVec 64))
(declare-fun temp10930_79 () (_ BitVec 64))
(declare-fun temp10930_80 () (_ BitVec 64))
(declare-fun temp10930_81 () (_ BitVec 64))
(declare-fun temp10930_82 () (_ BitVec 64))
(declare-fun temp10930_83 () (_ BitVec 64))
(declare-fun temp10930_84 () (_ BitVec 64))
(declare-fun temp10930_85 () (_ BitVec 64))
(declare-fun temp10930_86 () (_ BitVec 64))
(declare-fun temp10930_87 () (_ BitVec 64))
(declare-fun temp10930_88 () (_ BitVec 64))
(declare-fun temp10930_89 () (_ BitVec 64))
(declare-fun temp10930_90 () (_ BitVec 64))
(declare-fun temp10930_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10930_92 () (_ BitVec 64))
(declare-fun temp10930_93 () (_ BitVec 64))
(declare-fun temp10930_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10930_95 () (_ BitVec 64))
(declare-fun temp10930_96 () (_ BitVec 64))
(declare-fun temp10930_97 () (_ BitVec 64))
(declare-fun temp10930_98 () (_ BitVec 64))
(declare-fun temp10930_99 () (_ BitVec 64))
(declare-fun temp10930_100 () (_ BitVec 64))
(declare-fun temp10930_101 () (_ BitVec 64))
(declare-fun temp10930_102 () (_ BitVec 64))
(declare-fun temp10930_103 () (_ BitVec 64))
(declare-fun temp10930_104 () (_ BitVec 64))
(declare-fun temp10930_105 () (_ BitVec 64))
(declare-fun temp10930_106 () (_ BitVec 64))
(declare-fun temp10930_107 () (_ BitVec 64))
(declare-fun temp10930_108 () (_ BitVec 64))
(declare-fun temp10930_109 () (_ BitVec 64))
(declare-fun temp10930_110 () (_ BitVec 64))
(declare-fun temp10930_111 () (_ BitVec 64))
(declare-fun temp10930_112 () (_ BitVec 64))
(declare-fun temp10930_113 () (_ BitVec 64))
(declare-fun temp10930_114 () (_ BitVec 64))
(declare-fun temp10930_115 () (_ BitVec 64))
(declare-fun temp10930_116 () (_ BitVec 64))
(declare-fun temp10930_117 () (_ BitVec 64))
(declare-fun temp10930_118 () (_ BitVec 64))
(declare-fun temp10930_119 () (_ BitVec 64))
(declare-fun temp10930_120 () (_ BitVec 64))
(declare-fun temp10930_121 () (_ BitVec 64))
(declare-fun temp10930_122 () (_ BitVec 64))
(declare-fun temp10930_123 () (_ BitVec 64))
(declare-fun temp10930_124 () (_ BitVec 64))
(declare-fun temp10930_125 () (_ BitVec 64))
(declare-fun temp10930_126 () (_ BitVec 64))
(declare-fun temp10930_127 () (_ BitVec 64))
(declare-fun temp10930_128 () (_ BitVec 64))
(declare-fun temp10930_129 () (_ BitVec 64))
(declare-fun temp10930_130 () (_ BitVec 64))
(declare-fun temp10930_131 () (_ BitVec 64))
(declare-fun temp10930_132 () (_ BitVec 64))
(declare-fun temp10930_133 () (_ BitVec 64))
(declare-fun temp10930_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10930_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10930_136 () (_ BitVec 64))
(declare-fun temp10930_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10930_138 () (_ BitVec 64))
(declare-fun temp10930_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10930_140 () (_ BitVec 64))
(declare-fun temp10930_141 () (_ BitVec 64))
(declare-fun temp10930_142 () (_ BitVec 64))
(declare-fun temp10930_143 () (_ BitVec 64))
(declare-fun temp10930_144 () (_ BitVec 64))
(declare-fun temp10930_145 () (_ BitVec 64))
(declare-fun temp10930_146 () (_ BitVec 64))
(declare-fun temp10930_147 () (_ BitVec 64))
(declare-fun temp10930_148 () (_ BitVec 64))
(declare-fun temp10930_149 () (_ BitVec 64))
(declare-fun temp10930_150 () (_ BitVec 64))
(declare-fun temp10930_151 () (_ BitVec 64))
(declare-fun temp10930_152 () (_ BitVec 64))
(declare-fun temp10930_153 () (_ BitVec 64))
(declare-fun temp10930_154 () (_ BitVec 64))
(declare-fun temp10930_155 () (_ BitVec 64))
(declare-fun temp10930_157 () (_ BitVec 64))
(declare-fun temp10930_158 () (_ BitVec 64))
(declare-fun temp10930_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10930_159 () (_ BitVec 64))
(declare-fun temp10930_160 () (_ BitVec 64))
(declare-fun temp10930_162 () (_ BitVec 64))
(declare-fun temp10930_163 () (_ BitVec 64))
(declare-fun temp10930_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10930_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10930_165 () (_ BitVec 64))
(declare-fun temp10930_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10930_167 () (_ BitVec 64))
(declare-fun temp10930_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10930_169 () (_ BitVec 64))
(declare-fun temp10930_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10930_171 () (_ BitVec 64))
(declare-fun temp10930_172 () (_ BitVec 64))
(declare-fun temp10930_173 () (_ BitVec 64))
(declare-fun temp10930_174 () (_ BitVec 64))
(declare-fun temp10930_175 () (_ BitVec 64))
(declare-fun temp10930_176 () (_ BitVec 64))
(declare-fun temp10930_177 () (_ BitVec 64))
(declare-fun temp10930_178 () (_ BitVec 64))
(declare-fun temp10930_179 () (_ BitVec 64))
(declare-fun temp10930_180 () (_ BitVec 64))
(declare-fun temp10930_181 () (_ BitVec 64))
(declare-fun temp10930_182 () (_ BitVec 64))
(declare-fun temp10930_183 () (_ BitVec 64))
(declare-fun temp10930_184 () (_ BitVec 64))
(declare-fun temp10930_185 () (_ BitVec 64))
(declare-fun temp10930_186 () (_ BitVec 64))
(declare-fun temp10930_187 () (_ BitVec 64))
(declare-fun temp10930_188 () (_ BitVec 64))
(declare-fun temp10930_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10930_190 () (_ BitVec 64))
(declare-fun temp10930_192 () (_ BitVec 64))
(declare-fun temp10930_193 () (_ BitVec 64))
(declare-fun temp10930_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10930_194 () (_ BitVec 64))
(declare-fun temp10930_195 () (_ BitVec 64))
(declare-fun temp10930_197 () (_ BitVec 64))
(declare-fun temp10930_198 () (_ BitVec 64))
(declare-fun temp10930_196 () (_ BitVec 64))
(declare-fun temp10930_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10930_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10930_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10930_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10930_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10930_204 () (_ BitVec 64))
(declare-fun temp10930_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10930_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10930_207 () (_ BitVec 64))
(declare-fun temp10930_208 () (_ BitVec 64))
(declare-fun temp10930_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10930_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10930_211 () (_ BitVec 64))
(declare-fun temp10930_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10930_213 () (_ BitVec 64))
(declare-fun temp10930_214 () (_ BitVec 64))
(declare-fun temp10930_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10930_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10930_217 () (_ BitVec 64))
(declare-fun temp10930_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10930_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10930_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5255568 () (_ BitVec 64))
(declare-fun var5517712 () (_ BitVec 64))
(declare-fun temp10930_221 () (_ BitVec 64))
(assert (= temp10930_1 #x0000000000000001))
(assert (= var77203 temp10930_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10930_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10930_2)))
(assert (= temp10930_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10930_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10930_4 #x0000000000000000))
(assert (= var210941 temp10930_4))
(assert (= temp10930_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10930_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10930_6 #x0000000000000000))
(assert (= var210986 temp10930_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10930_7 #x0000000000000000))
(assert (= temp10930_8 temp10930_7))
(assert (= temp10930_9 (select ARGNAME_padding_NAMEEND_VAL temp10930_8)))
(assert (= temp10930_10 #x0000000000000001))
(assert (= temp10930_11 temp10930_10))
(assert (= temp10930_12 (select ARGNAME_padding_NAMEEND_VAL temp10930_11)))
(assert (= temp10930_13 #x0000000000000002))
(assert (= temp10930_14 temp10930_13))
(assert (= temp10930_15 (select ARGNAME_padding_NAMEEND_VAL temp10930_14)))
(assert (= temp10930_16 #x0000000000000003))
(assert (= temp10930_17 temp10930_16))
(assert (= temp10930_18 (select ARGNAME_padding_NAMEEND_VAL temp10930_17)))
(assert (= temp10930_19 #x0000000000000004))
(assert (= temp10930_20 temp10930_19))
(assert (= temp10930_21 (select ARGNAME_padding_NAMEEND_VAL temp10930_20)))
(assert (= temp10930_22 #x0000000000000005))
(assert (= temp10930_23 temp10930_22))
(assert (= temp10930_24 (select ARGNAME_padding_NAMEEND_VAL temp10930_23)))
(assert (= temp10930_25 #x0000000000000000))
(assert (= temp10930_26 #x0000000000000000))
(assert (= temp10930_27 temp10930_26))
(assert (= temp10930_28 (select ARGNAME_padding_NAMEEND_VAL temp10930_27)))
(assert (= temp10930_29 #x0000000000000000))
(assert (= temp10930_30 #x0000000000000001))
(assert (= temp10930_31 temp10930_30))
(assert (= temp10930_32 (select ARGNAME_padding_NAMEEND_VAL temp10930_31)))
(assert (= temp10930_33 #x0000000000000000))
(assert (= temp10930_34 #x0000000000000002))
(assert (= temp10930_35 temp10930_34))
(assert (= temp10930_36 (select ARGNAME_padding_NAMEEND_VAL temp10930_35)))
(assert (= temp10930_37 #x0000000000000000))
(assert (= temp10930_38 #x0000000000000003))
(assert (= temp10930_39 temp10930_38))
(assert (= temp10930_40 (select ARGNAME_padding_NAMEEND_VAL temp10930_39)))
(assert (= temp10930_41 #x0000000000000000))
(assert (= temp10930_42 #x0000000000000004))
(assert (= temp10930_43 temp10930_42))
(assert (= temp10930_44 (select ARGNAME_padding_NAMEEND_VAL temp10930_43)))
(assert (= temp10930_45 #x0000000000000000))
(assert (= temp10930_46 #x0000000000000005))
(assert (= temp10930_47 temp10930_46))
(assert (= temp10930_48 (select ARGNAME_padding_NAMEEND_VAL temp10930_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10930_28 temp10930_25)
             (bvslt temp10930_32 temp10930_29)
             (bvslt temp10930_36 temp10930_33)
             (bvslt temp10930_40 temp10930_37)
             (bvslt temp10930_44 temp10930_41)
             (bvslt temp10930_48 temp10930_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10930_49 #x0000000000000000))
(assert (= var1191714 temp10930_49))
(assert (= temp10930_50 #x0000000000000000))
(assert (= temp10930_51 temp10930_50))
(assert (= temp10930_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10930_51)))
(assert (= temp10930_53 #x0000000000000001))
(assert (= temp10930_54 temp10930_53))
(assert (= temp10930_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10930_54)))
(assert (= temp10930_56 #x0000000000000002))
(assert (= temp10930_57 temp10930_56))
(assert (= temp10930_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10930_57)))
(assert (= temp10930_59 #x0000000000000003))
(assert (= temp10930_60 temp10930_59))
(assert (= temp10930_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10930_60)))
(assert (= temp10930_62 #x0000000000000004))
(assert (= temp10930_63 temp10930_62))
(assert (= temp10930_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10930_63)))
(assert (= temp10930_65 #x0000000000000005))
(assert (= temp10930_66 temp10930_65))
(assert (= temp10930_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10930_66)))
(assert (= temp10930_68 #x0000000000000000))
(assert (= temp10930_69 #x0000000000000000))
(assert (= temp10930_70 temp10930_69))
(assert (= temp10930_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10930_70)))
(assert (= temp10930_72 #x0000000000000000))
(assert (= temp10930_73 #x0000000000000001))
(assert (= temp10930_74 temp10930_73))
(assert (= temp10930_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10930_74)))
(assert (= temp10930_76 #x0000000000000000))
(assert (= temp10930_77 #x0000000000000002))
(assert (= temp10930_78 temp10930_77))
(assert (= temp10930_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10930_78)))
(assert (= temp10930_80 #x0000000000000000))
(assert (= temp10930_81 #x0000000000000003))
(assert (= temp10930_82 temp10930_81))
(assert (= temp10930_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10930_82)))
(assert (= temp10930_84 #x0000000000000000))
(assert (= temp10930_85 #x0000000000000004))
(assert (= temp10930_86 temp10930_85))
(assert (= temp10930_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10930_86)))
(assert (= temp10930_88 #x0000000000000000))
(assert (= temp10930_89 #x0000000000000005))
(assert (= temp10930_90 temp10930_89))
(assert (= temp10930_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10930_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10930_71 temp10930_68)
             (bvslt temp10930_75 temp10930_72)
             (bvslt temp10930_79 temp10930_76)
             (bvslt temp10930_83 temp10930_80)
             (bvslt temp10930_87 temp10930_84)
             (bvslt temp10930_91 temp10930_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10930_92 #x0000000000000000))
(assert (= var1191725 temp10930_92))
(assert (= temp10930_93 #x0000000000000000))
(assert (= temp10930_94 temp10930_93))
(assert (= temp10930_95 (select ARGNAME_stride_NAMEEND_VAL temp10930_94)))
(assert (= temp10930_96 #x0000000000000001))
(assert (= temp10930_97 temp10930_96))
(assert (= temp10930_98 (select ARGNAME_stride_NAMEEND_VAL temp10930_97)))
(assert (= temp10930_99 #x0000000000000002))
(assert (= temp10930_100 temp10930_99))
(assert (= temp10930_101 (select ARGNAME_stride_NAMEEND_VAL temp10930_100)))
(assert (= temp10930_102 #x0000000000000003))
(assert (= temp10930_103 temp10930_102))
(assert (= temp10930_104 (select ARGNAME_stride_NAMEEND_VAL temp10930_103)))
(assert (= temp10930_105 #x0000000000000004))
(assert (= temp10930_106 temp10930_105))
(assert (= temp10930_107 (select ARGNAME_stride_NAMEEND_VAL temp10930_106)))
(assert (= temp10930_108 #x0000000000000005))
(assert (= temp10930_109 temp10930_108))
(assert (= temp10930_110 (select ARGNAME_stride_NAMEEND_VAL temp10930_109)))
(assert (= temp10930_111 #x0000000000000000))
(assert (= temp10930_112 #x0000000000000000))
(assert (= temp10930_113 temp10930_112))
(assert (= temp10930_114 (select ARGNAME_stride_NAMEEND_VAL temp10930_113)))
(assert (= temp10930_115 #x0000000000000000))
(assert (= temp10930_116 #x0000000000000001))
(assert (= temp10930_117 temp10930_116))
(assert (= temp10930_118 (select ARGNAME_stride_NAMEEND_VAL temp10930_117)))
(assert (= temp10930_119 #x0000000000000000))
(assert (= temp10930_120 #x0000000000000002))
(assert (= temp10930_121 temp10930_120))
(assert (= temp10930_122 (select ARGNAME_stride_NAMEEND_VAL temp10930_121)))
(assert (= temp10930_123 #x0000000000000000))
(assert (= temp10930_124 #x0000000000000003))
(assert (= temp10930_125 temp10930_124))
(assert (= temp10930_126 (select ARGNAME_stride_NAMEEND_VAL temp10930_125)))
(assert (= temp10930_127 #x0000000000000000))
(assert (= temp10930_128 #x0000000000000004))
(assert (= temp10930_129 temp10930_128))
(assert (= temp10930_130 (select ARGNAME_stride_NAMEEND_VAL temp10930_129)))
(assert (= temp10930_131 #x0000000000000000))
(assert (= temp10930_132 #x0000000000000005))
(assert (= temp10930_133 temp10930_132))
(assert (= temp10930_134 (select ARGNAME_stride_NAMEEND_VAL temp10930_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10930_114 temp10930_111)
             (bvsle temp10930_118 temp10930_115)
             (bvsle temp10930_122 temp10930_119)
             (bvsle temp10930_126 temp10930_123)
             (bvsle temp10930_130 temp10930_127)
             (bvsle temp10930_134 temp10930_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10930_135 #x0000000000000000))
(assert (= var1191735 temp10930_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10930_136 #x0000000000000001))
(assert (= var1191747 temp10930_136))
(assert (= temp10930_137 #x0000000000000000))
(assert (= var1179826 temp10930_137))
(assert (= temp10930_138 #x0000000000000000))
(assert (= temp10930_139 temp10930_138))
(assert (= temp10930_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10930_139)))
(assert (= temp10930_141 #x0000000000000001))
(assert (= temp10930_142 temp10930_141))
(assert (= temp10930_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10930_142)))
(assert (= temp10930_144 #x0000000000000002))
(assert (= temp10930_145 temp10930_144))
(assert (= temp10930_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10930_145)))
(assert (= temp10930_147 #x0000000000000003))
(assert (= temp10930_148 temp10930_147))
(assert (= temp10930_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10930_148)))
(assert (= temp10930_150 #x0000000000000004))
(assert (= temp10930_151 temp10930_150))
(assert (= temp10930_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10930_151)))
(assert (= temp10930_153 #x0000000000000005))
(assert (= temp10930_154 temp10930_153))
(assert (= temp10930_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10930_154)))
(assert (= temp10930_157 var1179826))
(assert (= temp10930_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10930_157)))
(assert (= temp10930_156 temp10930_158))
(assert (= var1191780
   (ite (bvslt temp10930_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10930_159 #x0000000000000000))
(assert (= var1191780 temp10930_159))
(assert (= temp10930_160 #x0000000000000000))
(assert (= var1179826 temp10930_160))
(assert (= temp10930_162 var1179826))
(assert (= temp10930_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10930_162)))
(assert (= temp10930_161 temp10930_163))
(assert (= var1191802 (bvsmod temp10930_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10930_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10930_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10930_165 #x0000000000000001))
(assert (= var1191803 temp10930_165))
(assert (= temp10930_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10930_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10930_167 #x0000000000000001))
(assert (= var1191823 temp10930_167))
(assert (= temp10930_168 #x0000000000000001))
(assert (= var1180714 temp10930_168))
(assert (= temp10930_169 #x0000000000000000))
(assert (= temp10930_170 temp10930_169))
(assert (= temp10930_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10930_170)))
(assert (= temp10930_172 #x0000000000000001))
(assert (= temp10930_173 temp10930_172))
(assert (= temp10930_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10930_173)))
(assert (= temp10930_175 #x0000000000000002))
(assert (= temp10930_176 temp10930_175))
(assert (= temp10930_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10930_176)))
(assert (= temp10930_178 #x0000000000000003))
(assert (= temp10930_179 temp10930_178))
(assert (= temp10930_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10930_179)))
(assert (= temp10930_181 #x0000000000000004))
(assert (= temp10930_182 temp10930_181))
(assert (= temp10930_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10930_182)))
(assert (= temp10930_184 #x0000000000000005))
(assert (= temp10930_185 temp10930_184))
(assert (= temp10930_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10930_185)))
(assert (= temp10930_187 #x0000000000000000))
(assert (= temp10930_188
   (ite (bvslt var1180714 temp10930_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10930_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10930_188)))
(assert (= var1191831 temp10930_189))
(assert (bvslt (ite (bvslt var1180714 temp10930_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10930_190 #x0000000000000001))
(assert (= var1180714 temp10930_190))
(assert (= temp10930_192 var1180714))
(assert (= temp10930_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10930_192)))
(assert (= temp10930_191 temp10930_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10930_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10930_194 #x0000000000000001))
(assert (= var1191836 temp10930_194))
(assert (= temp10930_195 #x0000000000000000))
(assert (= var1179826 temp10930_195))
(assert (= temp10930_197 var1179826))
(assert (= temp10930_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10930_197)))
(assert (= temp10930_196 temp10930_198))
(assert (= temp10930_199 #x0000000000000002))
(assert (= var1586025 temp10930_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10930_200 #x0000000000000001))
(assert (= var1191993 temp10930_200))
(assert (= temp10930_201 #x0000000000000001))
(assert (= var2700303 temp10930_201))
(assert (= temp10930_202 #x0000000000000001))
(assert (= var2962447 temp10930_202))
(assert (= temp10930_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10930_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10930_204 #x0000000000000001))
(assert (= var211058 temp10930_204))
(assert (= temp10930_205 #x0000000000000001))
(assert (= var211188 temp10930_205))
(assert (= var3879401 var211188))
(assert (= temp10930_206 #x0000000000000000))
(assert (= var3866802 temp10930_206))
(assert (= temp10930_207 #x0000000000000000))
(assert (= temp10930_208
   (ite (bvslt var3866802 temp10930_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10930_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10930_208)))
(assert (= var3879420 temp10930_209))
(assert (bvslt (ite (bvslt var3866802 temp10930_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10930_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10930_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10930_211 #x0000000000000000))
(assert (= var3879421 temp10930_211))
(assert (= temp10930_212 #x0000000000000001))
(assert (= var3867690 temp10930_212))
(assert (= temp10930_213 #x0000000000000000))
(assert (= temp10930_214
   (ite (bvslt var3867690 temp10930_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10930_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10930_214)))
(assert (= var3879423 temp10930_215))
(assert (bvslt (ite (bvslt var3867690 temp10930_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10930_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10930_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10930_217 #x0000000000000001))
(assert (= var3879424 temp10930_217))
(assert (= temp10930_218 #x0000000000000000))
(assert (= var4133117 temp10930_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10930_219 #x0000000000000002))
(assert (= var4339331 temp10930_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10930_220 #x0000000000000000))
(assert (= var4404892 temp10930_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5255568 var211201))
(assert (= var5517712 var211201))
(assert (= temp10930_221 #x0000000000000001))
(assert (= var211058 temp10930_221))
(model-add temp10930_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10930_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10930_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10930_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





