(declare-fun temp10644_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10644_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10644_3 () (_ BitVec 64))
(declare-fun temp10644_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10644_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10644_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10644_7 () (_ BitVec 64))
(declare-fun temp10644_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10644_9 () (_ BitVec 64))
(declare-fun temp10644_10 () (_ BitVec 64))
(declare-fun temp10644_11 () (_ BitVec 64))
(declare-fun temp10644_12 () (_ BitVec 64))
(declare-fun temp10644_13 () (_ BitVec 64))
(declare-fun temp10644_14 () (_ BitVec 64))
(declare-fun temp10644_15 () (_ BitVec 64))
(declare-fun temp10644_16 () (_ BitVec 64))
(declare-fun temp10644_17 () (_ BitVec 64))
(declare-fun temp10644_18 () (_ BitVec 64))
(declare-fun temp10644_19 () (_ BitVec 64))
(declare-fun temp10644_20 () (_ BitVec 64))
(declare-fun temp10644_21 () (_ BitVec 64))
(declare-fun temp10644_22 () (_ BitVec 64))
(declare-fun temp10644_23 () (_ BitVec 64))
(declare-fun temp10644_24 () (_ BitVec 64))
(declare-fun temp10644_25 () (_ BitVec 64))
(declare-fun temp10644_26 () (_ BitVec 64))
(declare-fun temp10644_27 () (_ BitVec 64))
(declare-fun temp10644_28 () (_ BitVec 64))
(declare-fun temp10644_29 () (_ BitVec 64))
(declare-fun temp10644_30 () (_ BitVec 64))
(declare-fun temp10644_31 () (_ BitVec 64))
(declare-fun temp10644_32 () (_ BitVec 64))
(declare-fun temp10644_33 () (_ BitVec 64))
(declare-fun temp10644_34 () (_ BitVec 64))
(declare-fun temp10644_35 () (_ BitVec 64))
(declare-fun temp10644_36 () (_ BitVec 64))
(declare-fun temp10644_37 () (_ BitVec 64))
(declare-fun temp10644_38 () (_ BitVec 64))
(declare-fun temp10644_39 () (_ BitVec 64))
(declare-fun temp10644_40 () (_ BitVec 64))
(declare-fun temp10644_41 () (_ BitVec 64))
(declare-fun temp10644_42 () (_ BitVec 64))
(declare-fun temp10644_43 () (_ BitVec 64))
(declare-fun temp10644_44 () (_ BitVec 64))
(declare-fun temp10644_45 () (_ BitVec 64))
(declare-fun temp10644_46 () (_ BitVec 64))
(declare-fun temp10644_47 () (_ BitVec 64))
(declare-fun temp10644_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10644_49 () (_ BitVec 64))
(declare-fun temp10644_50 () (_ BitVec 64))
(declare-fun temp10644_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10644_52 () (_ BitVec 64))
(declare-fun temp10644_53 () (_ BitVec 64))
(declare-fun temp10644_54 () (_ BitVec 64))
(declare-fun temp10644_55 () (_ BitVec 64))
(declare-fun temp10644_56 () (_ BitVec 64))
(declare-fun temp10644_57 () (_ BitVec 64))
(declare-fun temp10644_58 () (_ BitVec 64))
(declare-fun temp10644_59 () (_ BitVec 64))
(declare-fun temp10644_60 () (_ BitVec 64))
(declare-fun temp10644_61 () (_ BitVec 64))
(declare-fun temp10644_62 () (_ BitVec 64))
(declare-fun temp10644_63 () (_ BitVec 64))
(declare-fun temp10644_64 () (_ BitVec 64))
(declare-fun temp10644_65 () (_ BitVec 64))
(declare-fun temp10644_66 () (_ BitVec 64))
(declare-fun temp10644_67 () (_ BitVec 64))
(declare-fun temp10644_68 () (_ BitVec 64))
(declare-fun temp10644_69 () (_ BitVec 64))
(declare-fun temp10644_70 () (_ BitVec 64))
(declare-fun temp10644_71 () (_ BitVec 64))
(declare-fun temp10644_72 () (_ BitVec 64))
(declare-fun temp10644_73 () (_ BitVec 64))
(declare-fun temp10644_74 () (_ BitVec 64))
(declare-fun temp10644_75 () (_ BitVec 64))
(declare-fun temp10644_76 () (_ BitVec 64))
(declare-fun temp10644_77 () (_ BitVec 64))
(declare-fun temp10644_78 () (_ BitVec 64))
(declare-fun temp10644_79 () (_ BitVec 64))
(declare-fun temp10644_80 () (_ BitVec 64))
(declare-fun temp10644_81 () (_ BitVec 64))
(declare-fun temp10644_82 () (_ BitVec 64))
(declare-fun temp10644_83 () (_ BitVec 64))
(declare-fun temp10644_84 () (_ BitVec 64))
(declare-fun temp10644_85 () (_ BitVec 64))
(declare-fun temp10644_86 () (_ BitVec 64))
(declare-fun temp10644_87 () (_ BitVec 64))
(declare-fun temp10644_88 () (_ BitVec 64))
(declare-fun temp10644_89 () (_ BitVec 64))
(declare-fun temp10644_90 () (_ BitVec 64))
(declare-fun temp10644_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10644_92 () (_ BitVec 64))
(declare-fun temp10644_93 () (_ BitVec 64))
(declare-fun temp10644_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10644_95 () (_ BitVec 64))
(declare-fun temp10644_96 () (_ BitVec 64))
(declare-fun temp10644_97 () (_ BitVec 64))
(declare-fun temp10644_98 () (_ BitVec 64))
(declare-fun temp10644_99 () (_ BitVec 64))
(declare-fun temp10644_100 () (_ BitVec 64))
(declare-fun temp10644_101 () (_ BitVec 64))
(declare-fun temp10644_102 () (_ BitVec 64))
(declare-fun temp10644_103 () (_ BitVec 64))
(declare-fun temp10644_104 () (_ BitVec 64))
(declare-fun temp10644_105 () (_ BitVec 64))
(declare-fun temp10644_106 () (_ BitVec 64))
(declare-fun temp10644_107 () (_ BitVec 64))
(declare-fun temp10644_108 () (_ BitVec 64))
(declare-fun temp10644_109 () (_ BitVec 64))
(declare-fun temp10644_110 () (_ BitVec 64))
(declare-fun temp10644_111 () (_ BitVec 64))
(declare-fun temp10644_112 () (_ BitVec 64))
(declare-fun temp10644_113 () (_ BitVec 64))
(declare-fun temp10644_114 () (_ BitVec 64))
(declare-fun temp10644_115 () (_ BitVec 64))
(declare-fun temp10644_116 () (_ BitVec 64))
(declare-fun temp10644_117 () (_ BitVec 64))
(declare-fun temp10644_118 () (_ BitVec 64))
(declare-fun temp10644_119 () (_ BitVec 64))
(declare-fun temp10644_120 () (_ BitVec 64))
(declare-fun temp10644_121 () (_ BitVec 64))
(declare-fun temp10644_122 () (_ BitVec 64))
(declare-fun temp10644_123 () (_ BitVec 64))
(declare-fun temp10644_124 () (_ BitVec 64))
(declare-fun temp10644_125 () (_ BitVec 64))
(declare-fun temp10644_126 () (_ BitVec 64))
(declare-fun temp10644_127 () (_ BitVec 64))
(declare-fun temp10644_128 () (_ BitVec 64))
(declare-fun temp10644_129 () (_ BitVec 64))
(declare-fun temp10644_130 () (_ BitVec 64))
(declare-fun temp10644_131 () (_ BitVec 64))
(declare-fun temp10644_132 () (_ BitVec 64))
(declare-fun temp10644_133 () (_ BitVec 64))
(declare-fun temp10644_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10644_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10644_136 () (_ BitVec 64))
(declare-fun temp10644_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10644_138 () (_ BitVec 64))
(declare-fun temp10644_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10644_140 () (_ BitVec 64))
(declare-fun temp10644_141 () (_ BitVec 64))
(declare-fun temp10644_142 () (_ BitVec 64))
(declare-fun temp10644_143 () (_ BitVec 64))
(declare-fun temp10644_144 () (_ BitVec 64))
(declare-fun temp10644_145 () (_ BitVec 64))
(declare-fun temp10644_146 () (_ BitVec 64))
(declare-fun temp10644_147 () (_ BitVec 64))
(declare-fun temp10644_148 () (_ BitVec 64))
(declare-fun temp10644_149 () (_ BitVec 64))
(declare-fun temp10644_150 () (_ BitVec 64))
(declare-fun temp10644_151 () (_ BitVec 64))
(declare-fun temp10644_152 () (_ BitVec 64))
(declare-fun temp10644_153 () (_ BitVec 64))
(declare-fun temp10644_154 () (_ BitVec 64))
(declare-fun temp10644_155 () (_ BitVec 64))
(declare-fun temp10644_157 () (_ BitVec 64))
(declare-fun temp10644_158 () (_ BitVec 64))
(declare-fun temp10644_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10644_159 () (_ BitVec 64))
(declare-fun temp10644_160 () (_ BitVec 64))
(declare-fun temp10644_162 () (_ BitVec 64))
(declare-fun temp10644_163 () (_ BitVec 64))
(declare-fun temp10644_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10644_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10644_165 () (_ BitVec 64))
(declare-fun temp10644_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10644_167 () (_ BitVec 64))
(declare-fun temp10644_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10644_169 () (_ BitVec 64))
(declare-fun temp10644_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10644_171 () (_ BitVec 64))
(declare-fun temp10644_172 () (_ BitVec 64))
(declare-fun temp10644_173 () (_ BitVec 64))
(declare-fun temp10644_174 () (_ BitVec 64))
(declare-fun temp10644_175 () (_ BitVec 64))
(declare-fun temp10644_176 () (_ BitVec 64))
(declare-fun temp10644_177 () (_ BitVec 64))
(declare-fun temp10644_178 () (_ BitVec 64))
(declare-fun temp10644_179 () (_ BitVec 64))
(declare-fun temp10644_180 () (_ BitVec 64))
(declare-fun temp10644_181 () (_ BitVec 64))
(declare-fun temp10644_182 () (_ BitVec 64))
(declare-fun temp10644_183 () (_ BitVec 64))
(declare-fun temp10644_184 () (_ BitVec 64))
(declare-fun temp10644_185 () (_ BitVec 64))
(declare-fun temp10644_186 () (_ BitVec 64))
(declare-fun temp10644_187 () (_ BitVec 64))
(declare-fun temp10644_188 () (_ BitVec 64))
(declare-fun temp10644_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10644_190 () (_ BitVec 64))
(declare-fun temp10644_192 () (_ BitVec 64))
(declare-fun temp10644_193 () (_ BitVec 64))
(declare-fun temp10644_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10644_194 () (_ BitVec 64))
(declare-fun temp10644_195 () (_ BitVec 64))
(declare-fun temp10644_197 () (_ BitVec 64))
(declare-fun temp10644_198 () (_ BitVec 64))
(declare-fun temp10644_196 () (_ BitVec 64))
(declare-fun temp10644_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10644_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10644_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10644_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10644_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10644_204 () (_ BitVec 64))
(declare-fun temp10644_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10644_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10644_207 () (_ BitVec 64))
(declare-fun temp10644_208 () (_ BitVec 64))
(declare-fun temp10644_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10644_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10644_211 () (_ BitVec 64))
(declare-fun temp10644_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10644_213 () (_ BitVec 64))
(declare-fun temp10644_214 () (_ BitVec 64))
(declare-fun temp10644_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10644_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10644_217 () (_ BitVec 64))
(declare-fun temp10644_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10644_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10644_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10644_222 () (_ BitVec 64))
(declare-fun temp10644_221 () (_ BitVec 64))
(declare-fun temp10644_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10644_224 () (_ BitVec 64))
(declare-fun temp10644_225 () (_ BitVec 64))
(declare-fun temp10644_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10644_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10644_228 () (_ BitVec 64))
(declare-fun temp10644_230 () (_ BitVec 64))
(declare-fun temp10644_229 () (_ BitVec 64))
(declare-fun temp10644_231 () (_ BitVec 64))
(declare-fun temp10644_232 () (_ BitVec 64))
(declare-fun var5583636 () (_ BitVec 64))
(declare-fun var5583603 () (_ BitVec 64))
(declare-fun var5452167 () (_ BitVec 64))
(declare-fun var5452163 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10644_233 () (_ BitVec 64))
(assert (= temp10644_1 #x0000000000000001))
(assert (= var77203 temp10644_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10644_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10644_2)))
(assert (= temp10644_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10644_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10644_4 #x0000000000000000))
(assert (= var210941 temp10644_4))
(assert (= temp10644_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10644_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10644_6 #x0000000000000000))
(assert (= var210986 temp10644_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10644_7 #x0000000000000000))
(assert (= temp10644_8 temp10644_7))
(assert (= temp10644_9 (select ARGNAME_padding_NAMEEND_VAL temp10644_8)))
(assert (= temp10644_10 #x0000000000000001))
(assert (= temp10644_11 temp10644_10))
(assert (= temp10644_12 (select ARGNAME_padding_NAMEEND_VAL temp10644_11)))
(assert (= temp10644_13 #x0000000000000002))
(assert (= temp10644_14 temp10644_13))
(assert (= temp10644_15 (select ARGNAME_padding_NAMEEND_VAL temp10644_14)))
(assert (= temp10644_16 #x0000000000000003))
(assert (= temp10644_17 temp10644_16))
(assert (= temp10644_18 (select ARGNAME_padding_NAMEEND_VAL temp10644_17)))
(assert (= temp10644_19 #x0000000000000004))
(assert (= temp10644_20 temp10644_19))
(assert (= temp10644_21 (select ARGNAME_padding_NAMEEND_VAL temp10644_20)))
(assert (= temp10644_22 #x0000000000000005))
(assert (= temp10644_23 temp10644_22))
(assert (= temp10644_24 (select ARGNAME_padding_NAMEEND_VAL temp10644_23)))
(assert (= temp10644_25 #x0000000000000000))
(assert (= temp10644_26 #x0000000000000000))
(assert (= temp10644_27 temp10644_26))
(assert (= temp10644_28 (select ARGNAME_padding_NAMEEND_VAL temp10644_27)))
(assert (= temp10644_29 #x0000000000000000))
(assert (= temp10644_30 #x0000000000000001))
(assert (= temp10644_31 temp10644_30))
(assert (= temp10644_32 (select ARGNAME_padding_NAMEEND_VAL temp10644_31)))
(assert (= temp10644_33 #x0000000000000000))
(assert (= temp10644_34 #x0000000000000002))
(assert (= temp10644_35 temp10644_34))
(assert (= temp10644_36 (select ARGNAME_padding_NAMEEND_VAL temp10644_35)))
(assert (= temp10644_37 #x0000000000000000))
(assert (= temp10644_38 #x0000000000000003))
(assert (= temp10644_39 temp10644_38))
(assert (= temp10644_40 (select ARGNAME_padding_NAMEEND_VAL temp10644_39)))
(assert (= temp10644_41 #x0000000000000000))
(assert (= temp10644_42 #x0000000000000004))
(assert (= temp10644_43 temp10644_42))
(assert (= temp10644_44 (select ARGNAME_padding_NAMEEND_VAL temp10644_43)))
(assert (= temp10644_45 #x0000000000000000))
(assert (= temp10644_46 #x0000000000000005))
(assert (= temp10644_47 temp10644_46))
(assert (= temp10644_48 (select ARGNAME_padding_NAMEEND_VAL temp10644_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10644_28 temp10644_25)
             (bvslt temp10644_32 temp10644_29)
             (bvslt temp10644_36 temp10644_33)
             (bvslt temp10644_40 temp10644_37)
             (bvslt temp10644_44 temp10644_41)
             (bvslt temp10644_48 temp10644_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10644_49 #x0000000000000000))
(assert (= var1191714 temp10644_49))
(assert (= temp10644_50 #x0000000000000000))
(assert (= temp10644_51 temp10644_50))
(assert (= temp10644_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10644_51)))
(assert (= temp10644_53 #x0000000000000001))
(assert (= temp10644_54 temp10644_53))
(assert (= temp10644_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10644_54)))
(assert (= temp10644_56 #x0000000000000002))
(assert (= temp10644_57 temp10644_56))
(assert (= temp10644_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10644_57)))
(assert (= temp10644_59 #x0000000000000003))
(assert (= temp10644_60 temp10644_59))
(assert (= temp10644_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10644_60)))
(assert (= temp10644_62 #x0000000000000004))
(assert (= temp10644_63 temp10644_62))
(assert (= temp10644_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10644_63)))
(assert (= temp10644_65 #x0000000000000005))
(assert (= temp10644_66 temp10644_65))
(assert (= temp10644_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10644_66)))
(assert (= temp10644_68 #x0000000000000000))
(assert (= temp10644_69 #x0000000000000000))
(assert (= temp10644_70 temp10644_69))
(assert (= temp10644_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10644_70)))
(assert (= temp10644_72 #x0000000000000000))
(assert (= temp10644_73 #x0000000000000001))
(assert (= temp10644_74 temp10644_73))
(assert (= temp10644_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10644_74)))
(assert (= temp10644_76 #x0000000000000000))
(assert (= temp10644_77 #x0000000000000002))
(assert (= temp10644_78 temp10644_77))
(assert (= temp10644_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10644_78)))
(assert (= temp10644_80 #x0000000000000000))
(assert (= temp10644_81 #x0000000000000003))
(assert (= temp10644_82 temp10644_81))
(assert (= temp10644_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10644_82)))
(assert (= temp10644_84 #x0000000000000000))
(assert (= temp10644_85 #x0000000000000004))
(assert (= temp10644_86 temp10644_85))
(assert (= temp10644_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10644_86)))
(assert (= temp10644_88 #x0000000000000000))
(assert (= temp10644_89 #x0000000000000005))
(assert (= temp10644_90 temp10644_89))
(assert (= temp10644_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10644_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10644_71 temp10644_68)
             (bvslt temp10644_75 temp10644_72)
             (bvslt temp10644_79 temp10644_76)
             (bvslt temp10644_83 temp10644_80)
             (bvslt temp10644_87 temp10644_84)
             (bvslt temp10644_91 temp10644_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10644_92 #x0000000000000000))
(assert (= var1191725 temp10644_92))
(assert (= temp10644_93 #x0000000000000000))
(assert (= temp10644_94 temp10644_93))
(assert (= temp10644_95 (select ARGNAME_stride_NAMEEND_VAL temp10644_94)))
(assert (= temp10644_96 #x0000000000000001))
(assert (= temp10644_97 temp10644_96))
(assert (= temp10644_98 (select ARGNAME_stride_NAMEEND_VAL temp10644_97)))
(assert (= temp10644_99 #x0000000000000002))
(assert (= temp10644_100 temp10644_99))
(assert (= temp10644_101 (select ARGNAME_stride_NAMEEND_VAL temp10644_100)))
(assert (= temp10644_102 #x0000000000000003))
(assert (= temp10644_103 temp10644_102))
(assert (= temp10644_104 (select ARGNAME_stride_NAMEEND_VAL temp10644_103)))
(assert (= temp10644_105 #x0000000000000004))
(assert (= temp10644_106 temp10644_105))
(assert (= temp10644_107 (select ARGNAME_stride_NAMEEND_VAL temp10644_106)))
(assert (= temp10644_108 #x0000000000000005))
(assert (= temp10644_109 temp10644_108))
(assert (= temp10644_110 (select ARGNAME_stride_NAMEEND_VAL temp10644_109)))
(assert (= temp10644_111 #x0000000000000000))
(assert (= temp10644_112 #x0000000000000000))
(assert (= temp10644_113 temp10644_112))
(assert (= temp10644_114 (select ARGNAME_stride_NAMEEND_VAL temp10644_113)))
(assert (= temp10644_115 #x0000000000000000))
(assert (= temp10644_116 #x0000000000000001))
(assert (= temp10644_117 temp10644_116))
(assert (= temp10644_118 (select ARGNAME_stride_NAMEEND_VAL temp10644_117)))
(assert (= temp10644_119 #x0000000000000000))
(assert (= temp10644_120 #x0000000000000002))
(assert (= temp10644_121 temp10644_120))
(assert (= temp10644_122 (select ARGNAME_stride_NAMEEND_VAL temp10644_121)))
(assert (= temp10644_123 #x0000000000000000))
(assert (= temp10644_124 #x0000000000000003))
(assert (= temp10644_125 temp10644_124))
(assert (= temp10644_126 (select ARGNAME_stride_NAMEEND_VAL temp10644_125)))
(assert (= temp10644_127 #x0000000000000000))
(assert (= temp10644_128 #x0000000000000004))
(assert (= temp10644_129 temp10644_128))
(assert (= temp10644_130 (select ARGNAME_stride_NAMEEND_VAL temp10644_129)))
(assert (= temp10644_131 #x0000000000000000))
(assert (= temp10644_132 #x0000000000000005))
(assert (= temp10644_133 temp10644_132))
(assert (= temp10644_134 (select ARGNAME_stride_NAMEEND_VAL temp10644_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10644_114 temp10644_111)
             (bvsle temp10644_118 temp10644_115)
             (bvsle temp10644_122 temp10644_119)
             (bvsle temp10644_126 temp10644_123)
             (bvsle temp10644_130 temp10644_127)
             (bvsle temp10644_134 temp10644_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10644_135 #x0000000000000000))
(assert (= var1191735 temp10644_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10644_136 #x0000000000000001))
(assert (= var1191747 temp10644_136))
(assert (= temp10644_137 #x0000000000000000))
(assert (= var1179826 temp10644_137))
(assert (= temp10644_138 #x0000000000000000))
(assert (= temp10644_139 temp10644_138))
(assert (= temp10644_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10644_139)))
(assert (= temp10644_141 #x0000000000000001))
(assert (= temp10644_142 temp10644_141))
(assert (= temp10644_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10644_142)))
(assert (= temp10644_144 #x0000000000000002))
(assert (= temp10644_145 temp10644_144))
(assert (= temp10644_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10644_145)))
(assert (= temp10644_147 #x0000000000000003))
(assert (= temp10644_148 temp10644_147))
(assert (= temp10644_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10644_148)))
(assert (= temp10644_150 #x0000000000000004))
(assert (= temp10644_151 temp10644_150))
(assert (= temp10644_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10644_151)))
(assert (= temp10644_153 #x0000000000000005))
(assert (= temp10644_154 temp10644_153))
(assert (= temp10644_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10644_154)))
(assert (= temp10644_157 var1179826))
(assert (= temp10644_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10644_157)))
(assert (= temp10644_156 temp10644_158))
(assert (= var1191780
   (ite (bvslt temp10644_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10644_159 #x0000000000000000))
(assert (= var1191780 temp10644_159))
(assert (= temp10644_160 #x0000000000000000))
(assert (= var1179826 temp10644_160))
(assert (= temp10644_162 var1179826))
(assert (= temp10644_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10644_162)))
(assert (= temp10644_161 temp10644_163))
(assert (= var1191802 (bvsmod temp10644_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10644_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10644_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10644_165 #x0000000000000001))
(assert (= var1191803 temp10644_165))
(assert (= temp10644_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10644_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10644_167 #x0000000000000001))
(assert (= var1191823 temp10644_167))
(assert (= temp10644_168 #x0000000000000001))
(assert (= var1180714 temp10644_168))
(assert (= temp10644_169 #x0000000000000000))
(assert (= temp10644_170 temp10644_169))
(assert (= temp10644_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10644_170)))
(assert (= temp10644_172 #x0000000000000001))
(assert (= temp10644_173 temp10644_172))
(assert (= temp10644_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10644_173)))
(assert (= temp10644_175 #x0000000000000002))
(assert (= temp10644_176 temp10644_175))
(assert (= temp10644_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10644_176)))
(assert (= temp10644_178 #x0000000000000003))
(assert (= temp10644_179 temp10644_178))
(assert (= temp10644_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10644_179)))
(assert (= temp10644_181 #x0000000000000004))
(assert (= temp10644_182 temp10644_181))
(assert (= temp10644_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10644_182)))
(assert (= temp10644_184 #x0000000000000005))
(assert (= temp10644_185 temp10644_184))
(assert (= temp10644_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10644_185)))
(assert (= temp10644_187 #x0000000000000000))
(assert (= temp10644_188
   (ite (bvslt var1180714 temp10644_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10644_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10644_188)))
(assert (= var1191831 temp10644_189))
(assert (bvslt (ite (bvslt var1180714 temp10644_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10644_190 #x0000000000000001))
(assert (= var1180714 temp10644_190))
(assert (= temp10644_192 var1180714))
(assert (= temp10644_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10644_192)))
(assert (= temp10644_191 temp10644_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10644_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10644_194 #x0000000000000001))
(assert (= var1191836 temp10644_194))
(assert (= temp10644_195 #x0000000000000000))
(assert (= var1179826 temp10644_195))
(assert (= temp10644_197 var1179826))
(assert (= temp10644_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10644_197)))
(assert (= temp10644_196 temp10644_198))
(assert (= temp10644_199 #x0000000000000002))
(assert (= var1586025 temp10644_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10644_200 #x0000000000000001))
(assert (= var1191993 temp10644_200))
(assert (= temp10644_201 #x0000000000000001))
(assert (= var2700303 temp10644_201))
(assert (= temp10644_202 #x0000000000000001))
(assert (= var2962447 temp10644_202))
(assert (= temp10644_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10644_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10644_204 #x0000000000000001))
(assert (= var211058 temp10644_204))
(assert (= temp10644_205 #x0000000000000001))
(assert (= var211188 temp10644_205))
(assert (= var3879401 var211188))
(assert (= temp10644_206 #x0000000000000000))
(assert (= var3866802 temp10644_206))
(assert (= temp10644_207 #x0000000000000000))
(assert (= temp10644_208
   (ite (bvslt var3866802 temp10644_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10644_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10644_208)))
(assert (= var3879420 temp10644_209))
(assert (bvslt (ite (bvslt var3866802 temp10644_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10644_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10644_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10644_211 #x0000000000000000))
(assert (= var3879421 temp10644_211))
(assert (= temp10644_212 #x0000000000000001))
(assert (= var3867690 temp10644_212))
(assert (= temp10644_213 #x0000000000000000))
(assert (= temp10644_214
   (ite (bvslt var3867690 temp10644_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10644_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10644_214)))
(assert (= var3879423 temp10644_215))
(assert (bvslt (ite (bvslt var3867690 temp10644_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10644_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10644_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10644_217 #x0000000000000001))
(assert (= var3879424 temp10644_217))
(assert (= temp10644_218 #x0000000000000000))
(assert (= var4133117 temp10644_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10644_219 #x0000000000000002))
(assert (= var4339331 temp10644_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10644_220 #x0000000000000000))
(assert (= var4404892 temp10644_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10644_222 #xffffffffffffffff))
(assert (= temp10644_221 temp10644_222))
(assert (= temp10644_223 #x0000000000000001))
(assert (= var197674 temp10644_223))
(assert (= temp10644_224 #x0000000000000000))
(assert (= temp10644_225
   (ite (bvslt var197674 temp10644_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10644_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10644_225)))
(assert (= var211595 temp10644_226))
(assert (bvslt (ite (bvslt var197674 temp10644_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10644_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10644_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10644_228 #x0000000000000001))
(assert (= var211596 temp10644_228))
(assert (= temp10644_230 #xffffffffffffffff))
(assert (= temp10644_229 temp10644_230))
(assert (= temp10644_231 #x0000000000000001))
(assert (= var211058 temp10644_231))
(assert (= temp10644_232 #x0000000000000000))
(assert (= var5583636 temp10644_232))
(assert (= var5583603 var5583636))
(assert (= var5452167 var5583603))
(assert (= var5452163 var5452167))
(assert (= var212669 var5452163))
(assert (= temp10644_233 #x0000000000000000))
(assert (= var212669 temp10644_233))
(model-add temp10644_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10644_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10644_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10644_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





