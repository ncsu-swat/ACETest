(declare-fun temp1208_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1208_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1208_3 () (_ BitVec 64))
(declare-fun temp1208_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1208_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1208_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1208_7 () (_ BitVec 64))
(declare-fun temp1208_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1208_9 () (_ BitVec 64))
(declare-fun temp1208_10 () (_ BitVec 64))
(declare-fun temp1208_11 () (_ BitVec 64))
(declare-fun temp1208_12 () (_ BitVec 64))
(declare-fun temp1208_13 () (_ BitVec 64))
(declare-fun temp1208_14 () (_ BitVec 64))
(declare-fun temp1208_15 () (_ BitVec 64))
(declare-fun temp1208_16 () (_ BitVec 64))
(declare-fun temp1208_17 () (_ BitVec 64))
(declare-fun temp1208_18 () (_ BitVec 64))
(declare-fun temp1208_19 () (_ BitVec 64))
(declare-fun temp1208_20 () (_ BitVec 64))
(declare-fun temp1208_21 () (_ BitVec 64))
(declare-fun temp1208_22 () (_ BitVec 64))
(declare-fun temp1208_23 () (_ BitVec 64))
(declare-fun temp1208_24 () (_ BitVec 64))
(declare-fun temp1208_25 () (_ BitVec 64))
(declare-fun temp1208_26 () (_ BitVec 64))
(declare-fun temp1208_27 () (_ BitVec 64))
(declare-fun temp1208_28 () (_ BitVec 64))
(declare-fun temp1208_29 () (_ BitVec 64))
(declare-fun temp1208_30 () (_ BitVec 64))
(declare-fun temp1208_31 () (_ BitVec 64))
(declare-fun temp1208_32 () (_ BitVec 64))
(declare-fun temp1208_33 () (_ BitVec 64))
(declare-fun temp1208_34 () (_ BitVec 64))
(declare-fun temp1208_35 () (_ BitVec 64))
(declare-fun temp1208_36 () (_ BitVec 64))
(declare-fun temp1208_37 () (_ BitVec 64))
(declare-fun temp1208_38 () (_ BitVec 64))
(declare-fun temp1208_39 () (_ BitVec 64))
(declare-fun temp1208_40 () (_ BitVec 64))
(declare-fun temp1208_41 () (_ BitVec 64))
(declare-fun temp1208_42 () (_ BitVec 64))
(declare-fun temp1208_43 () (_ BitVec 64))
(declare-fun temp1208_44 () (_ BitVec 64))
(declare-fun temp1208_45 () (_ BitVec 64))
(declare-fun temp1208_46 () (_ BitVec 64))
(declare-fun temp1208_47 () (_ BitVec 64))
(declare-fun temp1208_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1208_49 () (_ BitVec 64))
(declare-fun temp1208_50 () (_ BitVec 64))
(declare-fun temp1208_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1208_52 () (_ BitVec 64))
(declare-fun temp1208_53 () (_ BitVec 64))
(declare-fun temp1208_54 () (_ BitVec 64))
(declare-fun temp1208_55 () (_ BitVec 64))
(declare-fun temp1208_56 () (_ BitVec 64))
(declare-fun temp1208_57 () (_ BitVec 64))
(declare-fun temp1208_58 () (_ BitVec 64))
(declare-fun temp1208_59 () (_ BitVec 64))
(declare-fun temp1208_60 () (_ BitVec 64))
(declare-fun temp1208_61 () (_ BitVec 64))
(declare-fun temp1208_62 () (_ BitVec 64))
(declare-fun temp1208_63 () (_ BitVec 64))
(declare-fun temp1208_64 () (_ BitVec 64))
(declare-fun temp1208_65 () (_ BitVec 64))
(declare-fun temp1208_66 () (_ BitVec 64))
(declare-fun temp1208_67 () (_ BitVec 64))
(declare-fun temp1208_68 () (_ BitVec 64))
(declare-fun temp1208_69 () (_ BitVec 64))
(declare-fun temp1208_70 () (_ BitVec 64))
(declare-fun temp1208_71 () (_ BitVec 64))
(declare-fun temp1208_72 () (_ BitVec 64))
(declare-fun temp1208_73 () (_ BitVec 64))
(declare-fun temp1208_74 () (_ BitVec 64))
(declare-fun temp1208_75 () (_ BitVec 64))
(declare-fun temp1208_76 () (_ BitVec 64))
(declare-fun temp1208_77 () (_ BitVec 64))
(declare-fun temp1208_78 () (_ BitVec 64))
(declare-fun temp1208_79 () (_ BitVec 64))
(declare-fun temp1208_80 () (_ BitVec 64))
(declare-fun temp1208_81 () (_ BitVec 64))
(declare-fun temp1208_82 () (_ BitVec 64))
(declare-fun temp1208_83 () (_ BitVec 64))
(declare-fun temp1208_84 () (_ BitVec 64))
(declare-fun temp1208_85 () (_ BitVec 64))
(declare-fun temp1208_86 () (_ BitVec 64))
(declare-fun temp1208_87 () (_ BitVec 64))
(declare-fun temp1208_88 () (_ BitVec 64))
(declare-fun temp1208_89 () (_ BitVec 64))
(declare-fun temp1208_90 () (_ BitVec 64))
(declare-fun temp1208_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1208_92 () (_ BitVec 64))
(declare-fun temp1208_93 () (_ BitVec 64))
(declare-fun temp1208_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1208_95 () (_ BitVec 64))
(declare-fun temp1208_96 () (_ BitVec 64))
(declare-fun temp1208_97 () (_ BitVec 64))
(declare-fun temp1208_98 () (_ BitVec 64))
(declare-fun temp1208_99 () (_ BitVec 64))
(declare-fun temp1208_100 () (_ BitVec 64))
(declare-fun temp1208_101 () (_ BitVec 64))
(declare-fun temp1208_102 () (_ BitVec 64))
(declare-fun temp1208_103 () (_ BitVec 64))
(declare-fun temp1208_104 () (_ BitVec 64))
(declare-fun temp1208_105 () (_ BitVec 64))
(declare-fun temp1208_106 () (_ BitVec 64))
(declare-fun temp1208_107 () (_ BitVec 64))
(declare-fun temp1208_108 () (_ BitVec 64))
(declare-fun temp1208_109 () (_ BitVec 64))
(declare-fun temp1208_110 () (_ BitVec 64))
(declare-fun temp1208_111 () (_ BitVec 64))
(declare-fun temp1208_112 () (_ BitVec 64))
(declare-fun temp1208_113 () (_ BitVec 64))
(declare-fun temp1208_114 () (_ BitVec 64))
(declare-fun temp1208_115 () (_ BitVec 64))
(declare-fun temp1208_116 () (_ BitVec 64))
(declare-fun temp1208_117 () (_ BitVec 64))
(declare-fun temp1208_118 () (_ BitVec 64))
(declare-fun temp1208_119 () (_ BitVec 64))
(declare-fun temp1208_120 () (_ BitVec 64))
(declare-fun temp1208_121 () (_ BitVec 64))
(declare-fun temp1208_122 () (_ BitVec 64))
(declare-fun temp1208_123 () (_ BitVec 64))
(declare-fun temp1208_124 () (_ BitVec 64))
(declare-fun temp1208_125 () (_ BitVec 64))
(declare-fun temp1208_126 () (_ BitVec 64))
(declare-fun temp1208_127 () (_ BitVec 64))
(declare-fun temp1208_128 () (_ BitVec 64))
(declare-fun temp1208_129 () (_ BitVec 64))
(declare-fun temp1208_130 () (_ BitVec 64))
(declare-fun temp1208_131 () (_ BitVec 64))
(declare-fun temp1208_132 () (_ BitVec 64))
(declare-fun temp1208_133 () (_ BitVec 64))
(declare-fun temp1208_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1208_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1208_136 () (_ BitVec 64))
(declare-fun temp1208_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1208_138 () (_ BitVec 64))
(declare-fun temp1208_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1208_140 () (_ BitVec 64))
(declare-fun temp1208_141 () (_ BitVec 64))
(declare-fun temp1208_142 () (_ BitVec 64))
(declare-fun temp1208_143 () (_ BitVec 64))
(declare-fun temp1208_144 () (_ BitVec 64))
(declare-fun temp1208_145 () (_ BitVec 64))
(declare-fun temp1208_146 () (_ BitVec 64))
(declare-fun temp1208_147 () (_ BitVec 64))
(declare-fun temp1208_148 () (_ BitVec 64))
(declare-fun temp1208_149 () (_ BitVec 64))
(declare-fun temp1208_150 () (_ BitVec 64))
(declare-fun temp1208_151 () (_ BitVec 64))
(declare-fun temp1208_152 () (_ BitVec 64))
(declare-fun temp1208_153 () (_ BitVec 64))
(declare-fun temp1208_154 () (_ BitVec 64))
(declare-fun temp1208_155 () (_ BitVec 64))
(declare-fun temp1208_157 () (_ BitVec 64))
(declare-fun temp1208_158 () (_ BitVec 64))
(declare-fun temp1208_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1208_159 () (_ BitVec 64))
(declare-fun temp1208_160 () (_ BitVec 64))
(declare-fun temp1208_162 () (_ BitVec 64))
(declare-fun temp1208_163 () (_ BitVec 64))
(declare-fun temp1208_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1208_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1208_165 () (_ BitVec 64))
(declare-fun temp1208_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1208_167 () (_ BitVec 64))
(declare-fun temp1208_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1208_169 () (_ BitVec 64))
(declare-fun temp1208_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1208_171 () (_ BitVec 64))
(declare-fun temp1208_172 () (_ BitVec 64))
(declare-fun temp1208_173 () (_ BitVec 64))
(declare-fun temp1208_174 () (_ BitVec 64))
(declare-fun temp1208_175 () (_ BitVec 64))
(declare-fun temp1208_176 () (_ BitVec 64))
(declare-fun temp1208_177 () (_ BitVec 64))
(declare-fun temp1208_178 () (_ BitVec 64))
(declare-fun temp1208_179 () (_ BitVec 64))
(declare-fun temp1208_180 () (_ BitVec 64))
(declare-fun temp1208_181 () (_ BitVec 64))
(declare-fun temp1208_182 () (_ BitVec 64))
(declare-fun temp1208_183 () (_ BitVec 64))
(declare-fun temp1208_184 () (_ BitVec 64))
(declare-fun temp1208_185 () (_ BitVec 64))
(declare-fun temp1208_186 () (_ BitVec 64))
(declare-fun temp1208_187 () (_ BitVec 64))
(declare-fun temp1208_188 () (_ BitVec 64))
(declare-fun temp1208_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1208_190 () (_ BitVec 64))
(declare-fun temp1208_192 () (_ BitVec 64))
(declare-fun temp1208_193 () (_ BitVec 64))
(declare-fun temp1208_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1208_194 () (_ BitVec 64))
(declare-fun temp1208_195 () (_ BitVec 64))
(declare-fun temp1208_197 () (_ BitVec 64))
(declare-fun temp1208_198 () (_ BitVec 64))
(declare-fun temp1208_196 () (_ BitVec 64))
(declare-fun temp1208_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1208_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1208_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1208_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1208_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1208_204 () (_ BitVec 64))
(declare-fun temp1208_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1208_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1208_207 () (_ BitVec 64))
(declare-fun temp1208_208 () (_ BitVec 64))
(declare-fun temp1208_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1208_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1208_211 () (_ BitVec 64))
(declare-fun temp1208_212 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1208_213 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp1208_214 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp1208_215 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5848909 () (_ BitVec 64))
(declare-fun temp1208_216 () (_ BitVec 64))
(assert (= temp1208_1 #x0000000000000001))
(assert (= var77203 temp1208_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1208_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1208_2)))
(assert (= temp1208_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1208_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1208_4 #x0000000000000000))
(assert (= var210941 temp1208_4))
(assert (= temp1208_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1208_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1208_6 #x0000000000000000))
(assert (= var210986 temp1208_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1208_7 #x0000000000000000))
(assert (= temp1208_8 temp1208_7))
(assert (= temp1208_9 (select ARGNAME_padding_NAMEEND_VAL temp1208_8)))
(assert (= temp1208_10 #x0000000000000001))
(assert (= temp1208_11 temp1208_10))
(assert (= temp1208_12 (select ARGNAME_padding_NAMEEND_VAL temp1208_11)))
(assert (= temp1208_13 #x0000000000000002))
(assert (= temp1208_14 temp1208_13))
(assert (= temp1208_15 (select ARGNAME_padding_NAMEEND_VAL temp1208_14)))
(assert (= temp1208_16 #x0000000000000003))
(assert (= temp1208_17 temp1208_16))
(assert (= temp1208_18 (select ARGNAME_padding_NAMEEND_VAL temp1208_17)))
(assert (= temp1208_19 #x0000000000000004))
(assert (= temp1208_20 temp1208_19))
(assert (= temp1208_21 (select ARGNAME_padding_NAMEEND_VAL temp1208_20)))
(assert (= temp1208_22 #x0000000000000005))
(assert (= temp1208_23 temp1208_22))
(assert (= temp1208_24 (select ARGNAME_padding_NAMEEND_VAL temp1208_23)))
(assert (= temp1208_25 #x0000000000000000))
(assert (= temp1208_26 #x0000000000000000))
(assert (= temp1208_27 temp1208_26))
(assert (= temp1208_28 (select ARGNAME_padding_NAMEEND_VAL temp1208_27)))
(assert (= temp1208_29 #x0000000000000000))
(assert (= temp1208_30 #x0000000000000001))
(assert (= temp1208_31 temp1208_30))
(assert (= temp1208_32 (select ARGNAME_padding_NAMEEND_VAL temp1208_31)))
(assert (= temp1208_33 #x0000000000000000))
(assert (= temp1208_34 #x0000000000000002))
(assert (= temp1208_35 temp1208_34))
(assert (= temp1208_36 (select ARGNAME_padding_NAMEEND_VAL temp1208_35)))
(assert (= temp1208_37 #x0000000000000000))
(assert (= temp1208_38 #x0000000000000003))
(assert (= temp1208_39 temp1208_38))
(assert (= temp1208_40 (select ARGNAME_padding_NAMEEND_VAL temp1208_39)))
(assert (= temp1208_41 #x0000000000000000))
(assert (= temp1208_42 #x0000000000000004))
(assert (= temp1208_43 temp1208_42))
(assert (= temp1208_44 (select ARGNAME_padding_NAMEEND_VAL temp1208_43)))
(assert (= temp1208_45 #x0000000000000000))
(assert (= temp1208_46 #x0000000000000005))
(assert (= temp1208_47 temp1208_46))
(assert (= temp1208_48 (select ARGNAME_padding_NAMEEND_VAL temp1208_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1208_28 temp1208_25)
             (bvslt temp1208_32 temp1208_29)
             (bvslt temp1208_36 temp1208_33)
             (bvslt temp1208_40 temp1208_37)
             (bvslt temp1208_44 temp1208_41)
             (bvslt temp1208_48 temp1208_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1208_49 #x0000000000000000))
(assert (= var1191714 temp1208_49))
(assert (= temp1208_50 #x0000000000000000))
(assert (= temp1208_51 temp1208_50))
(assert (= temp1208_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1208_51)))
(assert (= temp1208_53 #x0000000000000001))
(assert (= temp1208_54 temp1208_53))
(assert (= temp1208_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1208_54)))
(assert (= temp1208_56 #x0000000000000002))
(assert (= temp1208_57 temp1208_56))
(assert (= temp1208_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1208_57)))
(assert (= temp1208_59 #x0000000000000003))
(assert (= temp1208_60 temp1208_59))
(assert (= temp1208_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1208_60)))
(assert (= temp1208_62 #x0000000000000004))
(assert (= temp1208_63 temp1208_62))
(assert (= temp1208_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1208_63)))
(assert (= temp1208_65 #x0000000000000005))
(assert (= temp1208_66 temp1208_65))
(assert (= temp1208_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1208_66)))
(assert (= temp1208_68 #x0000000000000000))
(assert (= temp1208_69 #x0000000000000000))
(assert (= temp1208_70 temp1208_69))
(assert (= temp1208_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1208_70)))
(assert (= temp1208_72 #x0000000000000000))
(assert (= temp1208_73 #x0000000000000001))
(assert (= temp1208_74 temp1208_73))
(assert (= temp1208_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1208_74)))
(assert (= temp1208_76 #x0000000000000000))
(assert (= temp1208_77 #x0000000000000002))
(assert (= temp1208_78 temp1208_77))
(assert (= temp1208_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1208_78)))
(assert (= temp1208_80 #x0000000000000000))
(assert (= temp1208_81 #x0000000000000003))
(assert (= temp1208_82 temp1208_81))
(assert (= temp1208_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1208_82)))
(assert (= temp1208_84 #x0000000000000000))
(assert (= temp1208_85 #x0000000000000004))
(assert (= temp1208_86 temp1208_85))
(assert (= temp1208_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1208_86)))
(assert (= temp1208_88 #x0000000000000000))
(assert (= temp1208_89 #x0000000000000005))
(assert (= temp1208_90 temp1208_89))
(assert (= temp1208_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1208_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1208_71 temp1208_68)
             (bvslt temp1208_75 temp1208_72)
             (bvslt temp1208_79 temp1208_76)
             (bvslt temp1208_83 temp1208_80)
             (bvslt temp1208_87 temp1208_84)
             (bvslt temp1208_91 temp1208_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1208_92 #x0000000000000000))
(assert (= var1191725 temp1208_92))
(assert (= temp1208_93 #x0000000000000000))
(assert (= temp1208_94 temp1208_93))
(assert (= temp1208_95 (select ARGNAME_stride_NAMEEND_VAL temp1208_94)))
(assert (= temp1208_96 #x0000000000000001))
(assert (= temp1208_97 temp1208_96))
(assert (= temp1208_98 (select ARGNAME_stride_NAMEEND_VAL temp1208_97)))
(assert (= temp1208_99 #x0000000000000002))
(assert (= temp1208_100 temp1208_99))
(assert (= temp1208_101 (select ARGNAME_stride_NAMEEND_VAL temp1208_100)))
(assert (= temp1208_102 #x0000000000000003))
(assert (= temp1208_103 temp1208_102))
(assert (= temp1208_104 (select ARGNAME_stride_NAMEEND_VAL temp1208_103)))
(assert (= temp1208_105 #x0000000000000004))
(assert (= temp1208_106 temp1208_105))
(assert (= temp1208_107 (select ARGNAME_stride_NAMEEND_VAL temp1208_106)))
(assert (= temp1208_108 #x0000000000000005))
(assert (= temp1208_109 temp1208_108))
(assert (= temp1208_110 (select ARGNAME_stride_NAMEEND_VAL temp1208_109)))
(assert (= temp1208_111 #x0000000000000000))
(assert (= temp1208_112 #x0000000000000000))
(assert (= temp1208_113 temp1208_112))
(assert (= temp1208_114 (select ARGNAME_stride_NAMEEND_VAL temp1208_113)))
(assert (= temp1208_115 #x0000000000000000))
(assert (= temp1208_116 #x0000000000000001))
(assert (= temp1208_117 temp1208_116))
(assert (= temp1208_118 (select ARGNAME_stride_NAMEEND_VAL temp1208_117)))
(assert (= temp1208_119 #x0000000000000000))
(assert (= temp1208_120 #x0000000000000002))
(assert (= temp1208_121 temp1208_120))
(assert (= temp1208_122 (select ARGNAME_stride_NAMEEND_VAL temp1208_121)))
(assert (= temp1208_123 #x0000000000000000))
(assert (= temp1208_124 #x0000000000000003))
(assert (= temp1208_125 temp1208_124))
(assert (= temp1208_126 (select ARGNAME_stride_NAMEEND_VAL temp1208_125)))
(assert (= temp1208_127 #x0000000000000000))
(assert (= temp1208_128 #x0000000000000004))
(assert (= temp1208_129 temp1208_128))
(assert (= temp1208_130 (select ARGNAME_stride_NAMEEND_VAL temp1208_129)))
(assert (= temp1208_131 #x0000000000000000))
(assert (= temp1208_132 #x0000000000000005))
(assert (= temp1208_133 temp1208_132))
(assert (= temp1208_134 (select ARGNAME_stride_NAMEEND_VAL temp1208_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1208_114 temp1208_111)
             (bvsle temp1208_118 temp1208_115)
             (bvsle temp1208_122 temp1208_119)
             (bvsle temp1208_126 temp1208_123)
             (bvsle temp1208_130 temp1208_127)
             (bvsle temp1208_134 temp1208_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1208_135 #x0000000000000000))
(assert (= var1191735 temp1208_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1208_136 #x0000000000000001))
(assert (= var1191747 temp1208_136))
(assert (= temp1208_137 #x0000000000000000))
(assert (= var1179826 temp1208_137))
(assert (= temp1208_138 #x0000000000000000))
(assert (= temp1208_139 temp1208_138))
(assert (= temp1208_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1208_139)))
(assert (= temp1208_141 #x0000000000000001))
(assert (= temp1208_142 temp1208_141))
(assert (= temp1208_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1208_142)))
(assert (= temp1208_144 #x0000000000000002))
(assert (= temp1208_145 temp1208_144))
(assert (= temp1208_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1208_145)))
(assert (= temp1208_147 #x0000000000000003))
(assert (= temp1208_148 temp1208_147))
(assert (= temp1208_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1208_148)))
(assert (= temp1208_150 #x0000000000000004))
(assert (= temp1208_151 temp1208_150))
(assert (= temp1208_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1208_151)))
(assert (= temp1208_153 #x0000000000000005))
(assert (= temp1208_154 temp1208_153))
(assert (= temp1208_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1208_154)))
(assert (= temp1208_157 var1179826))
(assert (= temp1208_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1208_157)))
(assert (= temp1208_156 temp1208_158))
(assert (= var1191780
   (ite (bvslt temp1208_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1208_159 #x0000000000000000))
(assert (= var1191780 temp1208_159))
(assert (= temp1208_160 #x0000000000000000))
(assert (= var1179826 temp1208_160))
(assert (= temp1208_162 var1179826))
(assert (= temp1208_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1208_162)))
(assert (= temp1208_161 temp1208_163))
(assert (= var1191802 (bvsmod temp1208_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1208_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1208_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1208_165 #x0000000000000001))
(assert (= var1191803 temp1208_165))
(assert (= temp1208_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1208_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1208_167 #x0000000000000001))
(assert (= var1191823 temp1208_167))
(assert (= temp1208_168 #x0000000000000001))
(assert (= var1180714 temp1208_168))
(assert (= temp1208_169 #x0000000000000000))
(assert (= temp1208_170 temp1208_169))
(assert (= temp1208_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1208_170)))
(assert (= temp1208_172 #x0000000000000001))
(assert (= temp1208_173 temp1208_172))
(assert (= temp1208_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1208_173)))
(assert (= temp1208_175 #x0000000000000002))
(assert (= temp1208_176 temp1208_175))
(assert (= temp1208_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1208_176)))
(assert (= temp1208_178 #x0000000000000003))
(assert (= temp1208_179 temp1208_178))
(assert (= temp1208_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1208_179)))
(assert (= temp1208_181 #x0000000000000004))
(assert (= temp1208_182 temp1208_181))
(assert (= temp1208_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1208_182)))
(assert (= temp1208_184 #x0000000000000005))
(assert (= temp1208_185 temp1208_184))
(assert (= temp1208_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1208_185)))
(assert (= temp1208_187 #x0000000000000000))
(assert (= temp1208_188
   (ite (bvslt var1180714 temp1208_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1208_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1208_188)))
(assert (= var1191831 temp1208_189))
(assert (bvslt (ite (bvslt var1180714 temp1208_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1208_190 #x0000000000000001))
(assert (= var1180714 temp1208_190))
(assert (= temp1208_192 var1180714))
(assert (= temp1208_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1208_192)))
(assert (= temp1208_191 temp1208_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1208_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1208_194 #x0000000000000001))
(assert (= var1191836 temp1208_194))
(assert (= temp1208_195 #x0000000000000000))
(assert (= var1179826 temp1208_195))
(assert (= temp1208_197 var1179826))
(assert (= temp1208_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1208_197)))
(assert (= temp1208_196 temp1208_198))
(assert (= temp1208_199 #x0000000000000002))
(assert (= var1586025 temp1208_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1208_200 #x0000000000000001))
(assert (= var1191993 temp1208_200))
(assert (= temp1208_201 #x0000000000000001))
(assert (= var2700303 temp1208_201))
(assert (= temp1208_202 #x0000000000000001))
(assert (= var2962447 temp1208_202))
(assert (= temp1208_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1208_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1208_204 #x0000000000000001))
(assert (= var211058 temp1208_204))
(assert (= temp1208_205 #x0000000000000001))
(assert (= var211188 temp1208_205))
(assert (= var3879401 var211188))
(assert (= temp1208_206 #x0000000000000000))
(assert (= var3866802 temp1208_206))
(assert (= temp1208_207 #x0000000000000000))
(assert (= temp1208_208
   (ite (bvslt var3866802 temp1208_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1208_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1208_208)))
(assert (= var3879420 temp1208_209))
(assert (bvslt (ite (bvslt var3866802 temp1208_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1208_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1208_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1208_211 #x0000000000000001))
(assert (= var3879421 temp1208_211))
(assert (= temp1208_212 #x0000000000000000))
(assert (= var4133117 temp1208_212))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1208_213 #x0000000000000002))
(assert (= var4339331 temp1208_213))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1208_214 #x0000000000000000))
(assert (= var4404892 temp1208_214))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4927888 var211201))
(assert (= var211388 var210913))
(assert (= temp1208_215 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp1208_215) #x0000000000000001 #x0000000000000000)))
(assert (= var5848909 var211389))
(assert (= temp1208_216 #x0000000000000001))
(assert (= var211058 temp1208_216))
(model-add temp1208_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1208_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1208_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1208_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





