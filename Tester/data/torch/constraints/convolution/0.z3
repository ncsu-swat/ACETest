(declare-fun temp0_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp0_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp0_3 () (_ BitVec 64))
(declare-fun temp0_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp0_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp0_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp0_7 () (_ BitVec 64))
(declare-fun temp0_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_9 () (_ BitVec 64))
(declare-fun temp0_10 () (_ BitVec 64))
(declare-fun temp0_11 () (_ BitVec 64))
(declare-fun temp0_12 () (_ BitVec 64))
(declare-fun temp0_13 () (_ BitVec 64))
(declare-fun temp0_14 () (_ BitVec 64))
(declare-fun temp0_15 () (_ BitVec 64))
(declare-fun temp0_16 () (_ BitVec 64))
(declare-fun temp0_17 () (_ BitVec 64))
(declare-fun temp0_18 () (_ BitVec 64))
(declare-fun temp0_19 () (_ BitVec 64))
(declare-fun temp0_20 () (_ BitVec 64))
(declare-fun temp0_21 () (_ BitVec 64))
(declare-fun temp0_22 () (_ BitVec 64))
(declare-fun temp0_23 () (_ BitVec 64))
(declare-fun temp0_24 () (_ BitVec 64))
(declare-fun temp0_25 () (_ BitVec 64))
(declare-fun temp0_26 () (_ BitVec 64))
(declare-fun temp0_27 () (_ BitVec 64))
(declare-fun temp0_28 () (_ BitVec 64))
(declare-fun temp0_29 () (_ BitVec 64))
(declare-fun temp0_30 () (_ BitVec 64))
(declare-fun temp0_31 () (_ BitVec 64))
(declare-fun temp0_32 () (_ BitVec 64))
(declare-fun temp0_33 () (_ BitVec 64))
(declare-fun temp0_34 () (_ BitVec 64))
(declare-fun temp0_35 () (_ BitVec 64))
(declare-fun temp0_36 () (_ BitVec 64))
(declare-fun temp0_37 () (_ BitVec 64))
(declare-fun temp0_38 () (_ BitVec 64))
(declare-fun temp0_39 () (_ BitVec 64))
(declare-fun temp0_40 () (_ BitVec 64))
(declare-fun temp0_41 () (_ BitVec 64))
(declare-fun temp0_42 () (_ BitVec 64))
(declare-fun temp0_43 () (_ BitVec 64))
(declare-fun temp0_44 () (_ BitVec 64))
(declare-fun temp0_45 () (_ BitVec 64))
(declare-fun temp0_46 () (_ BitVec 64))
(declare-fun temp0_47 () (_ BitVec 64))
(declare-fun temp0_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp0_49 () (_ BitVec 64))
(declare-fun temp0_50 () (_ BitVec 64))
(declare-fun temp0_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_52 () (_ BitVec 64))
(declare-fun temp0_53 () (_ BitVec 64))
(declare-fun temp0_54 () (_ BitVec 64))
(declare-fun temp0_55 () (_ BitVec 64))
(declare-fun temp0_56 () (_ BitVec 64))
(declare-fun temp0_57 () (_ BitVec 64))
(declare-fun temp0_58 () (_ BitVec 64))
(declare-fun temp0_59 () (_ BitVec 64))
(declare-fun temp0_60 () (_ BitVec 64))
(declare-fun temp0_61 () (_ BitVec 64))
(declare-fun temp0_62 () (_ BitVec 64))
(declare-fun temp0_63 () (_ BitVec 64))
(declare-fun temp0_64 () (_ BitVec 64))
(declare-fun temp0_65 () (_ BitVec 64))
(declare-fun temp0_66 () (_ BitVec 64))
(declare-fun temp0_67 () (_ BitVec 64))
(declare-fun temp0_68 () (_ BitVec 64))
(declare-fun temp0_69 () (_ BitVec 64))
(declare-fun temp0_70 () (_ BitVec 64))
(declare-fun temp0_71 () (_ BitVec 64))
(declare-fun temp0_72 () (_ BitVec 64))
(declare-fun temp0_73 () (_ BitVec 64))
(declare-fun temp0_74 () (_ BitVec 64))
(declare-fun temp0_75 () (_ BitVec 64))
(declare-fun temp0_76 () (_ BitVec 64))
(declare-fun temp0_77 () (_ BitVec 64))
(declare-fun temp0_78 () (_ BitVec 64))
(declare-fun temp0_79 () (_ BitVec 64))
(declare-fun temp0_80 () (_ BitVec 64))
(declare-fun temp0_81 () (_ BitVec 64))
(declare-fun temp0_82 () (_ BitVec 64))
(declare-fun temp0_83 () (_ BitVec 64))
(declare-fun temp0_84 () (_ BitVec 64))
(declare-fun temp0_85 () (_ BitVec 64))
(declare-fun temp0_86 () (_ BitVec 64))
(declare-fun temp0_87 () (_ BitVec 64))
(declare-fun temp0_88 () (_ BitVec 64))
(declare-fun temp0_89 () (_ BitVec 64))
(declare-fun temp0_90 () (_ BitVec 64))
(declare-fun temp0_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp0_92 () (_ BitVec 64))
(declare-fun temp0_93 () (_ BitVec 64))
(declare-fun temp0_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_95 () (_ BitVec 64))
(declare-fun temp0_96 () (_ BitVec 64))
(declare-fun temp0_97 () (_ BitVec 64))
(declare-fun temp0_98 () (_ BitVec 64))
(declare-fun temp0_99 () (_ BitVec 64))
(declare-fun temp0_100 () (_ BitVec 64))
(declare-fun temp0_101 () (_ BitVec 64))
(declare-fun temp0_102 () (_ BitVec 64))
(declare-fun temp0_103 () (_ BitVec 64))
(declare-fun temp0_104 () (_ BitVec 64))
(declare-fun temp0_105 () (_ BitVec 64))
(declare-fun temp0_106 () (_ BitVec 64))
(declare-fun temp0_107 () (_ BitVec 64))
(declare-fun temp0_108 () (_ BitVec 64))
(declare-fun temp0_109 () (_ BitVec 64))
(declare-fun temp0_110 () (_ BitVec 64))
(declare-fun temp0_111 () (_ BitVec 64))
(declare-fun temp0_112 () (_ BitVec 64))
(declare-fun temp0_113 () (_ BitVec 64))
(declare-fun temp0_114 () (_ BitVec 64))
(declare-fun temp0_115 () (_ BitVec 64))
(declare-fun temp0_116 () (_ BitVec 64))
(declare-fun temp0_117 () (_ BitVec 64))
(declare-fun temp0_118 () (_ BitVec 64))
(declare-fun temp0_119 () (_ BitVec 64))
(declare-fun temp0_120 () (_ BitVec 64))
(declare-fun temp0_121 () (_ BitVec 64))
(declare-fun temp0_122 () (_ BitVec 64))
(declare-fun temp0_123 () (_ BitVec 64))
(declare-fun temp0_124 () (_ BitVec 64))
(declare-fun temp0_125 () (_ BitVec 64))
(declare-fun temp0_126 () (_ BitVec 64))
(declare-fun temp0_127 () (_ BitVec 64))
(declare-fun temp0_128 () (_ BitVec 64))
(declare-fun temp0_129 () (_ BitVec 64))
(declare-fun temp0_130 () (_ BitVec 64))
(declare-fun temp0_131 () (_ BitVec 64))
(declare-fun temp0_132 () (_ BitVec 64))
(declare-fun temp0_133 () (_ BitVec 64))
(declare-fun temp0_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp0_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp0_136 () (_ BitVec 64))
(declare-fun temp0_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp0_138 () (_ BitVec 64))
(declare-fun temp0_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_140 () (_ BitVec 64))
(declare-fun temp0_141 () (_ BitVec 64))
(declare-fun temp0_142 () (_ BitVec 64))
(declare-fun temp0_143 () (_ BitVec 64))
(declare-fun temp0_144 () (_ BitVec 64))
(declare-fun temp0_145 () (_ BitVec 64))
(declare-fun temp0_146 () (_ BitVec 64))
(declare-fun temp0_147 () (_ BitVec 64))
(declare-fun temp0_148 () (_ BitVec 64))
(declare-fun temp0_149 () (_ BitVec 64))
(declare-fun temp0_150 () (_ BitVec 64))
(declare-fun temp0_151 () (_ BitVec 64))
(declare-fun temp0_152 () (_ BitVec 64))
(declare-fun temp0_153 () (_ BitVec 64))
(declare-fun temp0_154 () (_ BitVec 64))
(declare-fun temp0_155 () (_ BitVec 64))
(declare-fun temp0_157 () (_ BitVec 64))
(declare-fun temp0_158 () (_ BitVec 64))
(declare-fun temp0_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp0_159 () (_ BitVec 64))
(declare-fun temp0_160 () (_ BitVec 64))
(declare-fun temp0_162 () (_ BitVec 64))
(declare-fun temp0_163 () (_ BitVec 64))
(declare-fun temp0_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp0_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp0_165 () (_ BitVec 64))
(declare-fun temp0_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp0_167 () (_ BitVec 64))
(declare-fun temp0_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp0_169 () (_ BitVec 64))
(declare-fun temp0_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_171 () (_ BitVec 64))
(declare-fun temp0_172 () (_ BitVec 64))
(declare-fun temp0_173 () (_ BitVec 64))
(declare-fun temp0_174 () (_ BitVec 64))
(declare-fun temp0_175 () (_ BitVec 64))
(declare-fun temp0_176 () (_ BitVec 64))
(declare-fun temp0_177 () (_ BitVec 64))
(declare-fun temp0_178 () (_ BitVec 64))
(declare-fun temp0_179 () (_ BitVec 64))
(declare-fun temp0_180 () (_ BitVec 64))
(declare-fun temp0_181 () (_ BitVec 64))
(declare-fun temp0_182 () (_ BitVec 64))
(declare-fun temp0_183 () (_ BitVec 64))
(declare-fun temp0_184 () (_ BitVec 64))
(declare-fun temp0_185 () (_ BitVec 64))
(declare-fun temp0_186 () (_ BitVec 64))
(declare-fun temp0_187 () (_ BitVec 64))
(declare-fun temp0_188 () (_ BitVec 64))
(declare-fun temp0_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp0_190 () (_ BitVec 64))
(declare-fun temp0_192 () (_ BitVec 64))
(declare-fun temp0_193 () (_ BitVec 64))
(declare-fun temp0_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp0_194 () (_ BitVec 64))
(declare-fun temp0_195 () (_ BitVec 64))
(declare-fun temp0_197 () (_ BitVec 64))
(declare-fun temp0_198 () (_ BitVec 64))
(declare-fun temp0_196 () (_ BitVec 64))
(declare-fun temp0_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp0_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp0_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp0_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp0_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp0_204 () (_ BitVec 64))
(declare-fun temp0_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp0_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp0_207 () (_ BitVec 64))
(declare-fun temp0_208 () (_ BitVec 64))
(declare-fun temp0_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp0_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp0_211 () (_ BitVec 64))
(declare-fun temp0_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp0_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp0_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp0_215 () (_ BitVec 64))
(assert (= temp0_1 #x0000000000000001))
(assert (= var77203 temp0_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp0_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp0_2)))
(assert (= temp0_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp0_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_4 #x0000000000000000))
(assert (= var210941 temp0_4))
(assert (= temp0_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp0_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_6 #x0000000000000000))
(assert (= var210986 temp0_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp0_7 #x0000000000000000))
(assert (= temp0_8 temp0_7))
(assert (= temp0_9 (select ARGNAME_padding_NAMEEND_VAL temp0_8)))
(assert (= temp0_10 #x0000000000000001))
(assert (= temp0_11 temp0_10))
(assert (= temp0_12 (select ARGNAME_padding_NAMEEND_VAL temp0_11)))
(assert (= temp0_13 #x0000000000000002))
(assert (= temp0_14 temp0_13))
(assert (= temp0_15 (select ARGNAME_padding_NAMEEND_VAL temp0_14)))
(assert (= temp0_16 #x0000000000000003))
(assert (= temp0_17 temp0_16))
(assert (= temp0_18 (select ARGNAME_padding_NAMEEND_VAL temp0_17)))
(assert (= temp0_19 #x0000000000000004))
(assert (= temp0_20 temp0_19))
(assert (= temp0_21 (select ARGNAME_padding_NAMEEND_VAL temp0_20)))
(assert (= temp0_22 #x0000000000000005))
(assert (= temp0_23 temp0_22))
(assert (= temp0_24 (select ARGNAME_padding_NAMEEND_VAL temp0_23)))
(assert (= temp0_25 #x0000000000000000))
(assert (= temp0_26 #x0000000000000000))
(assert (= temp0_27 temp0_26))
(assert (= temp0_28 (select ARGNAME_padding_NAMEEND_VAL temp0_27)))
(assert (= temp0_29 #x0000000000000000))
(assert (= temp0_30 #x0000000000000001))
(assert (= temp0_31 temp0_30))
(assert (= temp0_32 (select ARGNAME_padding_NAMEEND_VAL temp0_31)))
(assert (= temp0_33 #x0000000000000000))
(assert (= temp0_34 #x0000000000000002))
(assert (= temp0_35 temp0_34))
(assert (= temp0_36 (select ARGNAME_padding_NAMEEND_VAL temp0_35)))
(assert (= temp0_37 #x0000000000000000))
(assert (= temp0_38 #x0000000000000003))
(assert (= temp0_39 temp0_38))
(assert (= temp0_40 (select ARGNAME_padding_NAMEEND_VAL temp0_39)))
(assert (= temp0_41 #x0000000000000000))
(assert (= temp0_42 #x0000000000000004))
(assert (= temp0_43 temp0_42))
(assert (= temp0_44 (select ARGNAME_padding_NAMEEND_VAL temp0_43)))
(assert (= temp0_45 #x0000000000000000))
(assert (= temp0_46 #x0000000000000005))
(assert (= temp0_47 temp0_46))
(assert (= temp0_48 (select ARGNAME_padding_NAMEEND_VAL temp0_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp0_28 temp0_25)
             (bvslt temp0_32 temp0_29)
             (bvslt temp0_36 temp0_33)
             (bvslt temp0_40 temp0_37)
             (bvslt temp0_44 temp0_41)
             (bvslt temp0_48 temp0_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_49 #x0000000000000000))
(assert (= var1191714 temp0_49))
(assert (= temp0_50 #x0000000000000000))
(assert (= temp0_51 temp0_50))
(assert (= temp0_52 (select ARGNAME_output_padding_NAMEEND_VAL temp0_51)))
(assert (= temp0_53 #x0000000000000001))
(assert (= temp0_54 temp0_53))
(assert (= temp0_55 (select ARGNAME_output_padding_NAMEEND_VAL temp0_54)))
(assert (= temp0_56 #x0000000000000002))
(assert (= temp0_57 temp0_56))
(assert (= temp0_58 (select ARGNAME_output_padding_NAMEEND_VAL temp0_57)))
(assert (= temp0_59 #x0000000000000003))
(assert (= temp0_60 temp0_59))
(assert (= temp0_61 (select ARGNAME_output_padding_NAMEEND_VAL temp0_60)))
(assert (= temp0_62 #x0000000000000004))
(assert (= temp0_63 temp0_62))
(assert (= temp0_64 (select ARGNAME_output_padding_NAMEEND_VAL temp0_63)))
(assert (= temp0_65 #x0000000000000005))
(assert (= temp0_66 temp0_65))
(assert (= temp0_67 (select ARGNAME_output_padding_NAMEEND_VAL temp0_66)))
(assert (= temp0_68 #x0000000000000000))
(assert (= temp0_69 #x0000000000000000))
(assert (= temp0_70 temp0_69))
(assert (= temp0_71 (select ARGNAME_output_padding_NAMEEND_VAL temp0_70)))
(assert (= temp0_72 #x0000000000000000))
(assert (= temp0_73 #x0000000000000001))
(assert (= temp0_74 temp0_73))
(assert (= temp0_75 (select ARGNAME_output_padding_NAMEEND_VAL temp0_74)))
(assert (= temp0_76 #x0000000000000000))
(assert (= temp0_77 #x0000000000000002))
(assert (= temp0_78 temp0_77))
(assert (= temp0_79 (select ARGNAME_output_padding_NAMEEND_VAL temp0_78)))
(assert (= temp0_80 #x0000000000000000))
(assert (= temp0_81 #x0000000000000003))
(assert (= temp0_82 temp0_81))
(assert (= temp0_83 (select ARGNAME_output_padding_NAMEEND_VAL temp0_82)))
(assert (= temp0_84 #x0000000000000000))
(assert (= temp0_85 #x0000000000000004))
(assert (= temp0_86 temp0_85))
(assert (= temp0_87 (select ARGNAME_output_padding_NAMEEND_VAL temp0_86)))
(assert (= temp0_88 #x0000000000000000))
(assert (= temp0_89 #x0000000000000005))
(assert (= temp0_90 temp0_89))
(assert (= temp0_91 (select ARGNAME_output_padding_NAMEEND_VAL temp0_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp0_71 temp0_68)
             (bvslt temp0_75 temp0_72)
             (bvslt temp0_79 temp0_76)
             (bvslt temp0_83 temp0_80)
             (bvslt temp0_87 temp0_84)
             (bvslt temp0_91 temp0_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_92 #x0000000000000000))
(assert (= var1191725 temp0_92))
(assert (= temp0_93 #x0000000000000000))
(assert (= temp0_94 temp0_93))
(assert (= temp0_95 (select ARGNAME_stride_NAMEEND_VAL temp0_94)))
(assert (= temp0_96 #x0000000000000001))
(assert (= temp0_97 temp0_96))
(assert (= temp0_98 (select ARGNAME_stride_NAMEEND_VAL temp0_97)))
(assert (= temp0_99 #x0000000000000002))
(assert (= temp0_100 temp0_99))
(assert (= temp0_101 (select ARGNAME_stride_NAMEEND_VAL temp0_100)))
(assert (= temp0_102 #x0000000000000003))
(assert (= temp0_103 temp0_102))
(assert (= temp0_104 (select ARGNAME_stride_NAMEEND_VAL temp0_103)))
(assert (= temp0_105 #x0000000000000004))
(assert (= temp0_106 temp0_105))
(assert (= temp0_107 (select ARGNAME_stride_NAMEEND_VAL temp0_106)))
(assert (= temp0_108 #x0000000000000005))
(assert (= temp0_109 temp0_108))
(assert (= temp0_110 (select ARGNAME_stride_NAMEEND_VAL temp0_109)))
(assert (= temp0_111 #x0000000000000000))
(assert (= temp0_112 #x0000000000000000))
(assert (= temp0_113 temp0_112))
(assert (= temp0_114 (select ARGNAME_stride_NAMEEND_VAL temp0_113)))
(assert (= temp0_115 #x0000000000000000))
(assert (= temp0_116 #x0000000000000001))
(assert (= temp0_117 temp0_116))
(assert (= temp0_118 (select ARGNAME_stride_NAMEEND_VAL temp0_117)))
(assert (= temp0_119 #x0000000000000000))
(assert (= temp0_120 #x0000000000000002))
(assert (= temp0_121 temp0_120))
(assert (= temp0_122 (select ARGNAME_stride_NAMEEND_VAL temp0_121)))
(assert (= temp0_123 #x0000000000000000))
(assert (= temp0_124 #x0000000000000003))
(assert (= temp0_125 temp0_124))
(assert (= temp0_126 (select ARGNAME_stride_NAMEEND_VAL temp0_125)))
(assert (= temp0_127 #x0000000000000000))
(assert (= temp0_128 #x0000000000000004))
(assert (= temp0_129 temp0_128))
(assert (= temp0_130 (select ARGNAME_stride_NAMEEND_VAL temp0_129)))
(assert (= temp0_131 #x0000000000000000))
(assert (= temp0_132 #x0000000000000005))
(assert (= temp0_133 temp0_132))
(assert (= temp0_134 (select ARGNAME_stride_NAMEEND_VAL temp0_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp0_114 temp0_111)
             (bvsle temp0_118 temp0_115)
             (bvsle temp0_122 temp0_119)
             (bvsle temp0_126 temp0_123)
             (bvsle temp0_130 temp0_127)
             (bvsle temp0_134 temp0_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_135 #x0000000000000000))
(assert (= var1191735 temp0_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_136 #x0000000000000001))
(assert (= var1191747 temp0_136))
(assert (= temp0_137 #x0000000000000000))
(assert (= var1179826 temp0_137))
(assert (= temp0_138 #x0000000000000000))
(assert (= temp0_139 temp0_138))
(assert (= temp0_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp0_139)))
(assert (= temp0_141 #x0000000000000001))
(assert (= temp0_142 temp0_141))
(assert (= temp0_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp0_142)))
(assert (= temp0_144 #x0000000000000002))
(assert (= temp0_145 temp0_144))
(assert (= temp0_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp0_145)))
(assert (= temp0_147 #x0000000000000003))
(assert (= temp0_148 temp0_147))
(assert (= temp0_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp0_148)))
(assert (= temp0_150 #x0000000000000004))
(assert (= temp0_151 temp0_150))
(assert (= temp0_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp0_151)))
(assert (= temp0_153 #x0000000000000005))
(assert (= temp0_154 temp0_153))
(assert (= temp0_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp0_154)))
(assert (= temp0_157 var1179826))
(assert (= temp0_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp0_157)))
(assert (= temp0_156 temp0_158))
(assert (= var1191780
   (ite (bvslt temp0_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_159 #x0000000000000000))
(assert (= var1191780 temp0_159))
(assert (= temp0_160 #x0000000000000000))
(assert (= var1179826 temp0_160))
(assert (= temp0_162 var1179826))
(assert (= temp0_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp0_162)))
(assert (= temp0_161 temp0_163))
(assert (= var1191802 (bvsmod temp0_161 ARGNAME_groups_NAMEEND)))
(assert (= temp0_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp0_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_165 #x0000000000000001))
(assert (= var1191803 temp0_165))
(assert (= temp0_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp0_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_167 #x0000000000000001))
(assert (= var1191823 temp0_167))
(assert (= temp0_168 #x0000000000000001))
(assert (= var1180714 temp0_168))
(assert (= temp0_169 #x0000000000000000))
(assert (= temp0_170 temp0_169))
(assert (= temp0_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_170)))
(assert (= temp0_172 #x0000000000000001))
(assert (= temp0_173 temp0_172))
(assert (= temp0_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_173)))
(assert (= temp0_175 #x0000000000000002))
(assert (= temp0_176 temp0_175))
(assert (= temp0_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_176)))
(assert (= temp0_178 #x0000000000000003))
(assert (= temp0_179 temp0_178))
(assert (= temp0_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_179)))
(assert (= temp0_181 #x0000000000000004))
(assert (= temp0_182 temp0_181))
(assert (= temp0_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_182)))
(assert (= temp0_184 #x0000000000000005))
(assert (= temp0_185 temp0_184))
(assert (= temp0_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_185)))
(assert (= temp0_187 #x0000000000000000))
(assert (= temp0_188
   (ite (bvslt var1180714 temp0_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp0_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_188)))
(assert (= var1191831 temp0_189))
(assert (bvslt (ite (bvslt var1180714 temp0_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp0_190 #x0000000000000001))
(assert (= var1180714 temp0_190))
(assert (= temp0_192 var1180714))
(assert (= temp0_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp0_192)))
(assert (= temp0_191 temp0_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp0_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_194 #x0000000000000001))
(assert (= var1191836 temp0_194))
(assert (= temp0_195 #x0000000000000000))
(assert (= var1179826 temp0_195))
(assert (= temp0_197 var1179826))
(assert (= temp0_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp0_197)))
(assert (= temp0_196 temp0_198))
(assert (= temp0_199 #x0000000000000002))
(assert (= var1586025 temp0_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp0_200 #x0000000000000001))
(assert (= var1191993 temp0_200))
(assert (= temp0_201 #x0000000000000001))
(assert (= var2700303 temp0_201))
(assert (= temp0_202 #x0000000000000001))
(assert (= var2962447 temp0_202))
(assert (= temp0_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp0_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_204 #x0000000000000001))
(assert (= var211058 temp0_204))
(assert (= temp0_205 #x0000000000000001))
(assert (= var211188 temp0_205))
(assert (= var3879401 var211188))
(assert (= temp0_206 #x0000000000000000))
(assert (= var3866802 temp0_206))
(assert (= temp0_207 #x0000000000000000))
(assert (= temp0_208
   (ite (bvslt var3866802 temp0_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp0_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_208)))
(assert (= var3879420 temp0_209))
(assert (bvslt (ite (bvslt var3866802 temp0_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp0_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp0_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_211 #x0000000000000001))
(assert (= var3879421 temp0_211))
(assert (= temp0_212 #x0000000000000000))
(assert (= var4079423 temp0_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp0_213 #x0000000000000002))
(assert (= var4208259 temp0_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_214 #x0000000000000000))
(assert (= var4273820 temp0_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp0_215 #x0000000000000001))
(assert (= var211058 temp0_215))
(model-add temp0_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp0_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp0_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp0_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





