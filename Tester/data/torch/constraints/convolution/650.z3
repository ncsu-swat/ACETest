(declare-fun temp866_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp866_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp866_3 () (_ BitVec 64))
(declare-fun temp866_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp866_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp866_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp866_7 () (_ BitVec 64))
(declare-fun temp866_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp866_9 () (_ BitVec 64))
(declare-fun temp866_10 () (_ BitVec 64))
(declare-fun temp866_11 () (_ BitVec 64))
(declare-fun temp866_12 () (_ BitVec 64))
(declare-fun temp866_13 () (_ BitVec 64))
(declare-fun temp866_14 () (_ BitVec 64))
(declare-fun temp866_15 () (_ BitVec 64))
(declare-fun temp866_16 () (_ BitVec 64))
(declare-fun temp866_17 () (_ BitVec 64))
(declare-fun temp866_18 () (_ BitVec 64))
(declare-fun temp866_19 () (_ BitVec 64))
(declare-fun temp866_20 () (_ BitVec 64))
(declare-fun temp866_21 () (_ BitVec 64))
(declare-fun temp866_22 () (_ BitVec 64))
(declare-fun temp866_23 () (_ BitVec 64))
(declare-fun temp866_24 () (_ BitVec 64))
(declare-fun temp866_25 () (_ BitVec 64))
(declare-fun temp866_26 () (_ BitVec 64))
(declare-fun temp866_27 () (_ BitVec 64))
(declare-fun temp866_28 () (_ BitVec 64))
(declare-fun temp866_29 () (_ BitVec 64))
(declare-fun temp866_30 () (_ BitVec 64))
(declare-fun temp866_31 () (_ BitVec 64))
(declare-fun temp866_32 () (_ BitVec 64))
(declare-fun temp866_33 () (_ BitVec 64))
(declare-fun temp866_34 () (_ BitVec 64))
(declare-fun temp866_35 () (_ BitVec 64))
(declare-fun temp866_36 () (_ BitVec 64))
(declare-fun temp866_37 () (_ BitVec 64))
(declare-fun temp866_38 () (_ BitVec 64))
(declare-fun temp866_39 () (_ BitVec 64))
(declare-fun temp866_40 () (_ BitVec 64))
(declare-fun temp866_41 () (_ BitVec 64))
(declare-fun temp866_42 () (_ BitVec 64))
(declare-fun temp866_43 () (_ BitVec 64))
(declare-fun temp866_44 () (_ BitVec 64))
(declare-fun temp866_45 () (_ BitVec 64))
(declare-fun temp866_46 () (_ BitVec 64))
(declare-fun temp866_47 () (_ BitVec 64))
(declare-fun temp866_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp866_49 () (_ BitVec 64))
(declare-fun temp866_50 () (_ BitVec 64))
(declare-fun temp866_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp866_52 () (_ BitVec 64))
(declare-fun temp866_53 () (_ BitVec 64))
(declare-fun temp866_54 () (_ BitVec 64))
(declare-fun temp866_55 () (_ BitVec 64))
(declare-fun temp866_56 () (_ BitVec 64))
(declare-fun temp866_57 () (_ BitVec 64))
(declare-fun temp866_58 () (_ BitVec 64))
(declare-fun temp866_59 () (_ BitVec 64))
(declare-fun temp866_60 () (_ BitVec 64))
(declare-fun temp866_61 () (_ BitVec 64))
(declare-fun temp866_62 () (_ BitVec 64))
(declare-fun temp866_63 () (_ BitVec 64))
(declare-fun temp866_64 () (_ BitVec 64))
(declare-fun temp866_65 () (_ BitVec 64))
(declare-fun temp866_66 () (_ BitVec 64))
(declare-fun temp866_67 () (_ BitVec 64))
(declare-fun temp866_68 () (_ BitVec 64))
(declare-fun temp866_69 () (_ BitVec 64))
(declare-fun temp866_70 () (_ BitVec 64))
(declare-fun temp866_71 () (_ BitVec 64))
(declare-fun temp866_72 () (_ BitVec 64))
(declare-fun temp866_73 () (_ BitVec 64))
(declare-fun temp866_74 () (_ BitVec 64))
(declare-fun temp866_75 () (_ BitVec 64))
(declare-fun temp866_76 () (_ BitVec 64))
(declare-fun temp866_77 () (_ BitVec 64))
(declare-fun temp866_78 () (_ BitVec 64))
(declare-fun temp866_79 () (_ BitVec 64))
(declare-fun temp866_80 () (_ BitVec 64))
(declare-fun temp866_81 () (_ BitVec 64))
(declare-fun temp866_82 () (_ BitVec 64))
(declare-fun temp866_83 () (_ BitVec 64))
(declare-fun temp866_84 () (_ BitVec 64))
(declare-fun temp866_85 () (_ BitVec 64))
(declare-fun temp866_86 () (_ BitVec 64))
(declare-fun temp866_87 () (_ BitVec 64))
(declare-fun temp866_88 () (_ BitVec 64))
(declare-fun temp866_89 () (_ BitVec 64))
(declare-fun temp866_90 () (_ BitVec 64))
(declare-fun temp866_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp866_92 () (_ BitVec 64))
(declare-fun temp866_93 () (_ BitVec 64))
(declare-fun temp866_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp866_95 () (_ BitVec 64))
(declare-fun temp866_96 () (_ BitVec 64))
(declare-fun temp866_97 () (_ BitVec 64))
(declare-fun temp866_98 () (_ BitVec 64))
(declare-fun temp866_99 () (_ BitVec 64))
(declare-fun temp866_100 () (_ BitVec 64))
(declare-fun temp866_101 () (_ BitVec 64))
(declare-fun temp866_102 () (_ BitVec 64))
(declare-fun temp866_103 () (_ BitVec 64))
(declare-fun temp866_104 () (_ BitVec 64))
(declare-fun temp866_105 () (_ BitVec 64))
(declare-fun temp866_106 () (_ BitVec 64))
(declare-fun temp866_107 () (_ BitVec 64))
(declare-fun temp866_108 () (_ BitVec 64))
(declare-fun temp866_109 () (_ BitVec 64))
(declare-fun temp866_110 () (_ BitVec 64))
(declare-fun temp866_111 () (_ BitVec 64))
(declare-fun temp866_112 () (_ BitVec 64))
(declare-fun temp866_113 () (_ BitVec 64))
(declare-fun temp866_114 () (_ BitVec 64))
(declare-fun temp866_115 () (_ BitVec 64))
(declare-fun temp866_116 () (_ BitVec 64))
(declare-fun temp866_117 () (_ BitVec 64))
(declare-fun temp866_118 () (_ BitVec 64))
(declare-fun temp866_119 () (_ BitVec 64))
(declare-fun temp866_120 () (_ BitVec 64))
(declare-fun temp866_121 () (_ BitVec 64))
(declare-fun temp866_122 () (_ BitVec 64))
(declare-fun temp866_123 () (_ BitVec 64))
(declare-fun temp866_124 () (_ BitVec 64))
(declare-fun temp866_125 () (_ BitVec 64))
(declare-fun temp866_126 () (_ BitVec 64))
(declare-fun temp866_127 () (_ BitVec 64))
(declare-fun temp866_128 () (_ BitVec 64))
(declare-fun temp866_129 () (_ BitVec 64))
(declare-fun temp866_130 () (_ BitVec 64))
(declare-fun temp866_131 () (_ BitVec 64))
(declare-fun temp866_132 () (_ BitVec 64))
(declare-fun temp866_133 () (_ BitVec 64))
(declare-fun temp866_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp866_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp866_136 () (_ BitVec 64))
(declare-fun temp866_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp866_138 () (_ BitVec 64))
(declare-fun temp866_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp866_140 () (_ BitVec 64))
(declare-fun temp866_141 () (_ BitVec 64))
(declare-fun temp866_142 () (_ BitVec 64))
(declare-fun temp866_143 () (_ BitVec 64))
(declare-fun temp866_144 () (_ BitVec 64))
(declare-fun temp866_145 () (_ BitVec 64))
(declare-fun temp866_146 () (_ BitVec 64))
(declare-fun temp866_147 () (_ BitVec 64))
(declare-fun temp866_148 () (_ BitVec 64))
(declare-fun temp866_149 () (_ BitVec 64))
(declare-fun temp866_150 () (_ BitVec 64))
(declare-fun temp866_151 () (_ BitVec 64))
(declare-fun temp866_152 () (_ BitVec 64))
(declare-fun temp866_153 () (_ BitVec 64))
(declare-fun temp866_154 () (_ BitVec 64))
(declare-fun temp866_155 () (_ BitVec 64))
(declare-fun temp866_157 () (_ BitVec 64))
(declare-fun temp866_158 () (_ BitVec 64))
(declare-fun temp866_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp866_159 () (_ BitVec 64))
(declare-fun temp866_160 () (_ BitVec 64))
(declare-fun temp866_162 () (_ BitVec 64))
(declare-fun temp866_163 () (_ BitVec 64))
(declare-fun temp866_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp866_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp866_165 () (_ BitVec 64))
(declare-fun temp866_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp866_167 () (_ BitVec 64))
(declare-fun temp866_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp866_169 () (_ BitVec 64))
(declare-fun temp866_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp866_171 () (_ BitVec 64))
(declare-fun temp866_172 () (_ BitVec 64))
(declare-fun temp866_173 () (_ BitVec 64))
(declare-fun temp866_174 () (_ BitVec 64))
(declare-fun temp866_175 () (_ BitVec 64))
(declare-fun temp866_176 () (_ BitVec 64))
(declare-fun temp866_177 () (_ BitVec 64))
(declare-fun temp866_178 () (_ BitVec 64))
(declare-fun temp866_179 () (_ BitVec 64))
(declare-fun temp866_180 () (_ BitVec 64))
(declare-fun temp866_181 () (_ BitVec 64))
(declare-fun temp866_182 () (_ BitVec 64))
(declare-fun temp866_183 () (_ BitVec 64))
(declare-fun temp866_184 () (_ BitVec 64))
(declare-fun temp866_185 () (_ BitVec 64))
(declare-fun temp866_186 () (_ BitVec 64))
(declare-fun temp866_187 () (_ BitVec 64))
(declare-fun temp866_188 () (_ BitVec 64))
(declare-fun temp866_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp866_190 () (_ BitVec 64))
(declare-fun temp866_192 () (_ BitVec 64))
(declare-fun temp866_193 () (_ BitVec 64))
(declare-fun temp866_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp866_194 () (_ BitVec 64))
(declare-fun temp866_195 () (_ BitVec 64))
(declare-fun temp866_197 () (_ BitVec 64))
(declare-fun temp866_198 () (_ BitVec 64))
(declare-fun temp866_196 () (_ BitVec 64))
(declare-fun temp866_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp866_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp866_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp866_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp866_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp866_204 () (_ BitVec 64))
(declare-fun temp866_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp866_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp866_207 () (_ BitVec 64))
(declare-fun temp866_208 () (_ BitVec 64))
(declare-fun temp866_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp866_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp866_211 () (_ BitVec 64))
(declare-fun temp866_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp866_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp866_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp866_215 () (_ BitVec 64))
(assert (= temp866_1 #x0000000000000001))
(assert (= var77203 temp866_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp866_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp866_2)))
(assert (= temp866_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp866_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_4 #x0000000000000000))
(assert (= var210941 temp866_4))
(assert (= temp866_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp866_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_6 #x0000000000000000))
(assert (= var210986 temp866_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp866_7 #x0000000000000000))
(assert (= temp866_8 temp866_7))
(assert (= temp866_9 (select ARGNAME_padding_NAMEEND_VAL temp866_8)))
(assert (= temp866_10 #x0000000000000001))
(assert (= temp866_11 temp866_10))
(assert (= temp866_12 (select ARGNAME_padding_NAMEEND_VAL temp866_11)))
(assert (= temp866_13 #x0000000000000002))
(assert (= temp866_14 temp866_13))
(assert (= temp866_15 (select ARGNAME_padding_NAMEEND_VAL temp866_14)))
(assert (= temp866_16 #x0000000000000003))
(assert (= temp866_17 temp866_16))
(assert (= temp866_18 (select ARGNAME_padding_NAMEEND_VAL temp866_17)))
(assert (= temp866_19 #x0000000000000004))
(assert (= temp866_20 temp866_19))
(assert (= temp866_21 (select ARGNAME_padding_NAMEEND_VAL temp866_20)))
(assert (= temp866_22 #x0000000000000005))
(assert (= temp866_23 temp866_22))
(assert (= temp866_24 (select ARGNAME_padding_NAMEEND_VAL temp866_23)))
(assert (= temp866_25 #x0000000000000000))
(assert (= temp866_26 #x0000000000000000))
(assert (= temp866_27 temp866_26))
(assert (= temp866_28 (select ARGNAME_padding_NAMEEND_VAL temp866_27)))
(assert (= temp866_29 #x0000000000000000))
(assert (= temp866_30 #x0000000000000001))
(assert (= temp866_31 temp866_30))
(assert (= temp866_32 (select ARGNAME_padding_NAMEEND_VAL temp866_31)))
(assert (= temp866_33 #x0000000000000000))
(assert (= temp866_34 #x0000000000000002))
(assert (= temp866_35 temp866_34))
(assert (= temp866_36 (select ARGNAME_padding_NAMEEND_VAL temp866_35)))
(assert (= temp866_37 #x0000000000000000))
(assert (= temp866_38 #x0000000000000003))
(assert (= temp866_39 temp866_38))
(assert (= temp866_40 (select ARGNAME_padding_NAMEEND_VAL temp866_39)))
(assert (= temp866_41 #x0000000000000000))
(assert (= temp866_42 #x0000000000000004))
(assert (= temp866_43 temp866_42))
(assert (= temp866_44 (select ARGNAME_padding_NAMEEND_VAL temp866_43)))
(assert (= temp866_45 #x0000000000000000))
(assert (= temp866_46 #x0000000000000005))
(assert (= temp866_47 temp866_46))
(assert (= temp866_48 (select ARGNAME_padding_NAMEEND_VAL temp866_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp866_28 temp866_25)
             (bvslt temp866_32 temp866_29)
             (bvslt temp866_36 temp866_33)
             (bvslt temp866_40 temp866_37)
             (bvslt temp866_44 temp866_41)
             (bvslt temp866_48 temp866_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_49 #x0000000000000000))
(assert (= var1191714 temp866_49))
(assert (= temp866_50 #x0000000000000000))
(assert (= temp866_51 temp866_50))
(assert (= temp866_52 (select ARGNAME_output_padding_NAMEEND_VAL temp866_51)))
(assert (= temp866_53 #x0000000000000001))
(assert (= temp866_54 temp866_53))
(assert (= temp866_55 (select ARGNAME_output_padding_NAMEEND_VAL temp866_54)))
(assert (= temp866_56 #x0000000000000002))
(assert (= temp866_57 temp866_56))
(assert (= temp866_58 (select ARGNAME_output_padding_NAMEEND_VAL temp866_57)))
(assert (= temp866_59 #x0000000000000003))
(assert (= temp866_60 temp866_59))
(assert (= temp866_61 (select ARGNAME_output_padding_NAMEEND_VAL temp866_60)))
(assert (= temp866_62 #x0000000000000004))
(assert (= temp866_63 temp866_62))
(assert (= temp866_64 (select ARGNAME_output_padding_NAMEEND_VAL temp866_63)))
(assert (= temp866_65 #x0000000000000005))
(assert (= temp866_66 temp866_65))
(assert (= temp866_67 (select ARGNAME_output_padding_NAMEEND_VAL temp866_66)))
(assert (= temp866_68 #x0000000000000000))
(assert (= temp866_69 #x0000000000000000))
(assert (= temp866_70 temp866_69))
(assert (= temp866_71 (select ARGNAME_output_padding_NAMEEND_VAL temp866_70)))
(assert (= temp866_72 #x0000000000000000))
(assert (= temp866_73 #x0000000000000001))
(assert (= temp866_74 temp866_73))
(assert (= temp866_75 (select ARGNAME_output_padding_NAMEEND_VAL temp866_74)))
(assert (= temp866_76 #x0000000000000000))
(assert (= temp866_77 #x0000000000000002))
(assert (= temp866_78 temp866_77))
(assert (= temp866_79 (select ARGNAME_output_padding_NAMEEND_VAL temp866_78)))
(assert (= temp866_80 #x0000000000000000))
(assert (= temp866_81 #x0000000000000003))
(assert (= temp866_82 temp866_81))
(assert (= temp866_83 (select ARGNAME_output_padding_NAMEEND_VAL temp866_82)))
(assert (= temp866_84 #x0000000000000000))
(assert (= temp866_85 #x0000000000000004))
(assert (= temp866_86 temp866_85))
(assert (= temp866_87 (select ARGNAME_output_padding_NAMEEND_VAL temp866_86)))
(assert (= temp866_88 #x0000000000000000))
(assert (= temp866_89 #x0000000000000005))
(assert (= temp866_90 temp866_89))
(assert (= temp866_91 (select ARGNAME_output_padding_NAMEEND_VAL temp866_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp866_71 temp866_68)
             (bvslt temp866_75 temp866_72)
             (bvslt temp866_79 temp866_76)
             (bvslt temp866_83 temp866_80)
             (bvslt temp866_87 temp866_84)
             (bvslt temp866_91 temp866_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_92 #x0000000000000000))
(assert (= var1191725 temp866_92))
(assert (= temp866_93 #x0000000000000000))
(assert (= temp866_94 temp866_93))
(assert (= temp866_95 (select ARGNAME_stride_NAMEEND_VAL temp866_94)))
(assert (= temp866_96 #x0000000000000001))
(assert (= temp866_97 temp866_96))
(assert (= temp866_98 (select ARGNAME_stride_NAMEEND_VAL temp866_97)))
(assert (= temp866_99 #x0000000000000002))
(assert (= temp866_100 temp866_99))
(assert (= temp866_101 (select ARGNAME_stride_NAMEEND_VAL temp866_100)))
(assert (= temp866_102 #x0000000000000003))
(assert (= temp866_103 temp866_102))
(assert (= temp866_104 (select ARGNAME_stride_NAMEEND_VAL temp866_103)))
(assert (= temp866_105 #x0000000000000004))
(assert (= temp866_106 temp866_105))
(assert (= temp866_107 (select ARGNAME_stride_NAMEEND_VAL temp866_106)))
(assert (= temp866_108 #x0000000000000005))
(assert (= temp866_109 temp866_108))
(assert (= temp866_110 (select ARGNAME_stride_NAMEEND_VAL temp866_109)))
(assert (= temp866_111 #x0000000000000000))
(assert (= temp866_112 #x0000000000000000))
(assert (= temp866_113 temp866_112))
(assert (= temp866_114 (select ARGNAME_stride_NAMEEND_VAL temp866_113)))
(assert (= temp866_115 #x0000000000000000))
(assert (= temp866_116 #x0000000000000001))
(assert (= temp866_117 temp866_116))
(assert (= temp866_118 (select ARGNAME_stride_NAMEEND_VAL temp866_117)))
(assert (= temp866_119 #x0000000000000000))
(assert (= temp866_120 #x0000000000000002))
(assert (= temp866_121 temp866_120))
(assert (= temp866_122 (select ARGNAME_stride_NAMEEND_VAL temp866_121)))
(assert (= temp866_123 #x0000000000000000))
(assert (= temp866_124 #x0000000000000003))
(assert (= temp866_125 temp866_124))
(assert (= temp866_126 (select ARGNAME_stride_NAMEEND_VAL temp866_125)))
(assert (= temp866_127 #x0000000000000000))
(assert (= temp866_128 #x0000000000000004))
(assert (= temp866_129 temp866_128))
(assert (= temp866_130 (select ARGNAME_stride_NAMEEND_VAL temp866_129)))
(assert (= temp866_131 #x0000000000000000))
(assert (= temp866_132 #x0000000000000005))
(assert (= temp866_133 temp866_132))
(assert (= temp866_134 (select ARGNAME_stride_NAMEEND_VAL temp866_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp866_114 temp866_111)
             (bvsle temp866_118 temp866_115)
             (bvsle temp866_122 temp866_119)
             (bvsle temp866_126 temp866_123)
             (bvsle temp866_130 temp866_127)
             (bvsle temp866_134 temp866_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_135 #x0000000000000000))
(assert (= var1191735 temp866_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_136 #x0000000000000001))
(assert (= var1191747 temp866_136))
(assert (= temp866_137 #x0000000000000000))
(assert (= var1179826 temp866_137))
(assert (= temp866_138 #x0000000000000000))
(assert (= temp866_139 temp866_138))
(assert (= temp866_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_139)))
(assert (= temp866_141 #x0000000000000001))
(assert (= temp866_142 temp866_141))
(assert (= temp866_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_142)))
(assert (= temp866_144 #x0000000000000002))
(assert (= temp866_145 temp866_144))
(assert (= temp866_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_145)))
(assert (= temp866_147 #x0000000000000003))
(assert (= temp866_148 temp866_147))
(assert (= temp866_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_148)))
(assert (= temp866_150 #x0000000000000004))
(assert (= temp866_151 temp866_150))
(assert (= temp866_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_151)))
(assert (= temp866_153 #x0000000000000005))
(assert (= temp866_154 temp866_153))
(assert (= temp866_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_154)))
(assert (= temp866_157 var1179826))
(assert (= temp866_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_157)))
(assert (= temp866_156 temp866_158))
(assert (= var1191780
   (ite (bvslt temp866_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_159 #x0000000000000000))
(assert (= var1191780 temp866_159))
(assert (= temp866_160 #x0000000000000000))
(assert (= var1179826 temp866_160))
(assert (= temp866_162 var1179826))
(assert (= temp866_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_162)))
(assert (= temp866_161 temp866_163))
(assert (= var1191802 (bvsmod temp866_161 ARGNAME_groups_NAMEEND)))
(assert (= temp866_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp866_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp866_165 #x0000000000000001))
(assert (= var1191803 temp866_165))
(assert (= temp866_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp866_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_167 #x0000000000000001))
(assert (= var1191823 temp866_167))
(assert (= temp866_168 #x0000000000000001))
(assert (= var1180714 temp866_168))
(assert (= temp866_169 #x0000000000000000))
(assert (= temp866_170 temp866_169))
(assert (= temp866_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_170)))
(assert (= temp866_172 #x0000000000000001))
(assert (= temp866_173 temp866_172))
(assert (= temp866_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_173)))
(assert (= temp866_175 #x0000000000000002))
(assert (= temp866_176 temp866_175))
(assert (= temp866_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_176)))
(assert (= temp866_178 #x0000000000000003))
(assert (= temp866_179 temp866_178))
(assert (= temp866_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_179)))
(assert (= temp866_181 #x0000000000000004))
(assert (= temp866_182 temp866_181))
(assert (= temp866_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_182)))
(assert (= temp866_184 #x0000000000000005))
(assert (= temp866_185 temp866_184))
(assert (= temp866_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_185)))
(assert (= temp866_187 #x0000000000000000))
(assert (= temp866_188
   (ite (bvslt var1180714 temp866_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp866_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_188)))
(assert (= var1191831 temp866_189))
(assert (bvslt (ite (bvslt var1180714 temp866_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp866_190 #x0000000000000001))
(assert (= var1180714 temp866_190))
(assert (= temp866_192 var1180714))
(assert (= temp866_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_192)))
(assert (= temp866_191 temp866_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp866_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp866_194 #x0000000000000001))
(assert (= var1191836 temp866_194))
(assert (= temp866_195 #x0000000000000000))
(assert (= var1179826 temp866_195))
(assert (= temp866_197 var1179826))
(assert (= temp866_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_197)))
(assert (= temp866_196 temp866_198))
(assert (= temp866_199 #x0000000000000002))
(assert (= var1586025 temp866_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp866_200 #x0000000000000001))
(assert (= var1191993 temp866_200))
(assert (= temp866_201 #x0000000000000001))
(assert (= var2700303 temp866_201))
(assert (= temp866_202 #x0000000000000001))
(assert (= var2962447 temp866_202))
(assert (= temp866_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp866_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_204 #x0000000000000001))
(assert (= var211058 temp866_204))
(assert (= temp866_205 #x0000000000000001))
(assert (= var211188 temp866_205))
(assert (= var3879401 var211188))
(assert (= temp866_206 #x0000000000000000))
(assert (= var3866802 temp866_206))
(assert (= temp866_207 #x0000000000000000))
(assert (= temp866_208
   (ite (bvslt var3866802 temp866_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp866_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_208)))
(assert (= var3879420 temp866_209))
(assert (bvslt (ite (bvslt var3866802 temp866_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp866_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp866_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp866_211 #x0000000000000001))
(assert (= var3879421 temp866_211))
(assert (= temp866_212 #x0000000000000000))
(assert (= var4079423 temp866_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp866_213 #x0000000000000002))
(assert (= var4208259 temp866_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_214 #x0000000000000000))
(assert (= var4273820 temp866_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp866_215 #x0000000000000001))
(assert (= var211058 temp866_215))
(model-add temp866_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp866_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp866_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp866_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




