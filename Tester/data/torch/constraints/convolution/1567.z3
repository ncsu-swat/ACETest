(declare-fun temp10884_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10884_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10884_3 () (_ BitVec 64))
(declare-fun temp10884_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10884_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10884_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10884_7 () (_ BitVec 64))
(declare-fun temp10884_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10884_9 () (_ BitVec 64))
(declare-fun temp10884_10 () (_ BitVec 64))
(declare-fun temp10884_11 () (_ BitVec 64))
(declare-fun temp10884_12 () (_ BitVec 64))
(declare-fun temp10884_13 () (_ BitVec 64))
(declare-fun temp10884_14 () (_ BitVec 64))
(declare-fun temp10884_15 () (_ BitVec 64))
(declare-fun temp10884_16 () (_ BitVec 64))
(declare-fun temp10884_17 () (_ BitVec 64))
(declare-fun temp10884_18 () (_ BitVec 64))
(declare-fun temp10884_19 () (_ BitVec 64))
(declare-fun temp10884_20 () (_ BitVec 64))
(declare-fun temp10884_21 () (_ BitVec 64))
(declare-fun temp10884_22 () (_ BitVec 64))
(declare-fun temp10884_23 () (_ BitVec 64))
(declare-fun temp10884_24 () (_ BitVec 64))
(declare-fun temp10884_25 () (_ BitVec 64))
(declare-fun temp10884_26 () (_ BitVec 64))
(declare-fun temp10884_27 () (_ BitVec 64))
(declare-fun temp10884_28 () (_ BitVec 64))
(declare-fun temp10884_29 () (_ BitVec 64))
(declare-fun temp10884_30 () (_ BitVec 64))
(declare-fun temp10884_31 () (_ BitVec 64))
(declare-fun temp10884_32 () (_ BitVec 64))
(declare-fun temp10884_33 () (_ BitVec 64))
(declare-fun temp10884_34 () (_ BitVec 64))
(declare-fun temp10884_35 () (_ BitVec 64))
(declare-fun temp10884_36 () (_ BitVec 64))
(declare-fun temp10884_37 () (_ BitVec 64))
(declare-fun temp10884_38 () (_ BitVec 64))
(declare-fun temp10884_39 () (_ BitVec 64))
(declare-fun temp10884_40 () (_ BitVec 64))
(declare-fun temp10884_41 () (_ BitVec 64))
(declare-fun temp10884_42 () (_ BitVec 64))
(declare-fun temp10884_43 () (_ BitVec 64))
(declare-fun temp10884_44 () (_ BitVec 64))
(declare-fun temp10884_45 () (_ BitVec 64))
(declare-fun temp10884_46 () (_ BitVec 64))
(declare-fun temp10884_47 () (_ BitVec 64))
(declare-fun temp10884_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10884_49 () (_ BitVec 64))
(declare-fun temp10884_50 () (_ BitVec 64))
(declare-fun temp10884_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10884_52 () (_ BitVec 64))
(declare-fun temp10884_53 () (_ BitVec 64))
(declare-fun temp10884_54 () (_ BitVec 64))
(declare-fun temp10884_55 () (_ BitVec 64))
(declare-fun temp10884_56 () (_ BitVec 64))
(declare-fun temp10884_57 () (_ BitVec 64))
(declare-fun temp10884_58 () (_ BitVec 64))
(declare-fun temp10884_59 () (_ BitVec 64))
(declare-fun temp10884_60 () (_ BitVec 64))
(declare-fun temp10884_61 () (_ BitVec 64))
(declare-fun temp10884_62 () (_ BitVec 64))
(declare-fun temp10884_63 () (_ BitVec 64))
(declare-fun temp10884_64 () (_ BitVec 64))
(declare-fun temp10884_65 () (_ BitVec 64))
(declare-fun temp10884_66 () (_ BitVec 64))
(declare-fun temp10884_67 () (_ BitVec 64))
(declare-fun temp10884_68 () (_ BitVec 64))
(declare-fun temp10884_69 () (_ BitVec 64))
(declare-fun temp10884_70 () (_ BitVec 64))
(declare-fun temp10884_71 () (_ BitVec 64))
(declare-fun temp10884_72 () (_ BitVec 64))
(declare-fun temp10884_73 () (_ BitVec 64))
(declare-fun temp10884_74 () (_ BitVec 64))
(declare-fun temp10884_75 () (_ BitVec 64))
(declare-fun temp10884_76 () (_ BitVec 64))
(declare-fun temp10884_77 () (_ BitVec 64))
(declare-fun temp10884_78 () (_ BitVec 64))
(declare-fun temp10884_79 () (_ BitVec 64))
(declare-fun temp10884_80 () (_ BitVec 64))
(declare-fun temp10884_81 () (_ BitVec 64))
(declare-fun temp10884_82 () (_ BitVec 64))
(declare-fun temp10884_83 () (_ BitVec 64))
(declare-fun temp10884_84 () (_ BitVec 64))
(declare-fun temp10884_85 () (_ BitVec 64))
(declare-fun temp10884_86 () (_ BitVec 64))
(declare-fun temp10884_87 () (_ BitVec 64))
(declare-fun temp10884_88 () (_ BitVec 64))
(declare-fun temp10884_89 () (_ BitVec 64))
(declare-fun temp10884_90 () (_ BitVec 64))
(declare-fun temp10884_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10884_92 () (_ BitVec 64))
(declare-fun temp10884_93 () (_ BitVec 64))
(declare-fun temp10884_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10884_95 () (_ BitVec 64))
(declare-fun temp10884_96 () (_ BitVec 64))
(declare-fun temp10884_97 () (_ BitVec 64))
(declare-fun temp10884_98 () (_ BitVec 64))
(declare-fun temp10884_99 () (_ BitVec 64))
(declare-fun temp10884_100 () (_ BitVec 64))
(declare-fun temp10884_101 () (_ BitVec 64))
(declare-fun temp10884_102 () (_ BitVec 64))
(declare-fun temp10884_103 () (_ BitVec 64))
(declare-fun temp10884_104 () (_ BitVec 64))
(declare-fun temp10884_105 () (_ BitVec 64))
(declare-fun temp10884_106 () (_ BitVec 64))
(declare-fun temp10884_107 () (_ BitVec 64))
(declare-fun temp10884_108 () (_ BitVec 64))
(declare-fun temp10884_109 () (_ BitVec 64))
(declare-fun temp10884_110 () (_ BitVec 64))
(declare-fun temp10884_111 () (_ BitVec 64))
(declare-fun temp10884_112 () (_ BitVec 64))
(declare-fun temp10884_113 () (_ BitVec 64))
(declare-fun temp10884_114 () (_ BitVec 64))
(declare-fun temp10884_115 () (_ BitVec 64))
(declare-fun temp10884_116 () (_ BitVec 64))
(declare-fun temp10884_117 () (_ BitVec 64))
(declare-fun temp10884_118 () (_ BitVec 64))
(declare-fun temp10884_119 () (_ BitVec 64))
(declare-fun temp10884_120 () (_ BitVec 64))
(declare-fun temp10884_121 () (_ BitVec 64))
(declare-fun temp10884_122 () (_ BitVec 64))
(declare-fun temp10884_123 () (_ BitVec 64))
(declare-fun temp10884_124 () (_ BitVec 64))
(declare-fun temp10884_125 () (_ BitVec 64))
(declare-fun temp10884_126 () (_ BitVec 64))
(declare-fun temp10884_127 () (_ BitVec 64))
(declare-fun temp10884_128 () (_ BitVec 64))
(declare-fun temp10884_129 () (_ BitVec 64))
(declare-fun temp10884_130 () (_ BitVec 64))
(declare-fun temp10884_131 () (_ BitVec 64))
(declare-fun temp10884_132 () (_ BitVec 64))
(declare-fun temp10884_133 () (_ BitVec 64))
(declare-fun temp10884_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10884_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10884_136 () (_ BitVec 64))
(declare-fun temp10884_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10884_138 () (_ BitVec 64))
(declare-fun temp10884_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10884_140 () (_ BitVec 64))
(declare-fun temp10884_141 () (_ BitVec 64))
(declare-fun temp10884_142 () (_ BitVec 64))
(declare-fun temp10884_143 () (_ BitVec 64))
(declare-fun temp10884_144 () (_ BitVec 64))
(declare-fun temp10884_145 () (_ BitVec 64))
(declare-fun temp10884_146 () (_ BitVec 64))
(declare-fun temp10884_147 () (_ BitVec 64))
(declare-fun temp10884_148 () (_ BitVec 64))
(declare-fun temp10884_149 () (_ BitVec 64))
(declare-fun temp10884_150 () (_ BitVec 64))
(declare-fun temp10884_151 () (_ BitVec 64))
(declare-fun temp10884_152 () (_ BitVec 64))
(declare-fun temp10884_153 () (_ BitVec 64))
(declare-fun temp10884_154 () (_ BitVec 64))
(declare-fun temp10884_155 () (_ BitVec 64))
(declare-fun temp10884_157 () (_ BitVec 64))
(declare-fun temp10884_158 () (_ BitVec 64))
(declare-fun temp10884_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10884_159 () (_ BitVec 64))
(declare-fun temp10884_160 () (_ BitVec 64))
(declare-fun temp10884_162 () (_ BitVec 64))
(declare-fun temp10884_163 () (_ BitVec 64))
(declare-fun temp10884_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10884_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10884_165 () (_ BitVec 64))
(declare-fun temp10884_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10884_167 () (_ BitVec 64))
(declare-fun temp10884_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10884_169 () (_ BitVec 64))
(declare-fun temp10884_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10884_171 () (_ BitVec 64))
(declare-fun temp10884_172 () (_ BitVec 64))
(declare-fun temp10884_173 () (_ BitVec 64))
(declare-fun temp10884_174 () (_ BitVec 64))
(declare-fun temp10884_175 () (_ BitVec 64))
(declare-fun temp10884_176 () (_ BitVec 64))
(declare-fun temp10884_177 () (_ BitVec 64))
(declare-fun temp10884_178 () (_ BitVec 64))
(declare-fun temp10884_179 () (_ BitVec 64))
(declare-fun temp10884_180 () (_ BitVec 64))
(declare-fun temp10884_181 () (_ BitVec 64))
(declare-fun temp10884_182 () (_ BitVec 64))
(declare-fun temp10884_183 () (_ BitVec 64))
(declare-fun temp10884_184 () (_ BitVec 64))
(declare-fun temp10884_185 () (_ BitVec 64))
(declare-fun temp10884_186 () (_ BitVec 64))
(declare-fun temp10884_187 () (_ BitVec 64))
(declare-fun temp10884_188 () (_ BitVec 64))
(declare-fun temp10884_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10884_190 () (_ BitVec 64))
(declare-fun temp10884_192 () (_ BitVec 64))
(declare-fun temp10884_193 () (_ BitVec 64))
(declare-fun temp10884_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10884_194 () (_ BitVec 64))
(declare-fun temp10884_195 () (_ BitVec 64))
(declare-fun temp10884_197 () (_ BitVec 64))
(declare-fun temp10884_198 () (_ BitVec 64))
(declare-fun temp10884_196 () (_ BitVec 64))
(declare-fun temp10884_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10884_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10884_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10884_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10884_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10884_204 () (_ BitVec 64))
(declare-fun temp10884_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10884_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10884_207 () (_ BitVec 64))
(declare-fun temp10884_208 () (_ BitVec 64))
(declare-fun temp10884_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10884_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10884_211 () (_ BitVec 64))
(declare-fun temp10884_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10884_213 () (_ BitVec 64))
(declare-fun temp10884_214 () (_ BitVec 64))
(declare-fun temp10884_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10884_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10884_217 () (_ BitVec 64))
(declare-fun temp10884_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10884_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10884_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun var5976464 () (_ BitVec 64))
(declare-fun temp10884_221 () (_ BitVec 64))
(declare-fun temp10884_222 () (_ BitVec 64))
(declare-fun var7615252 () (_ BitVec 64))
(declare-fun var7615219 () (_ BitVec 64))
(declare-fun var7483783 () (_ BitVec 64))
(declare-fun var7483779 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10884_223 () (_ BitVec 64))
(assert (= temp10884_1 #x0000000000000001))
(assert (= var77203 temp10884_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10884_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10884_2)))
(assert (= temp10884_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10884_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10884_4 #x0000000000000000))
(assert (= var210941 temp10884_4))
(assert (= temp10884_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10884_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10884_6 #x0000000000000000))
(assert (= var210986 temp10884_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10884_7 #x0000000000000000))
(assert (= temp10884_8 temp10884_7))
(assert (= temp10884_9 (select ARGNAME_padding_NAMEEND_VAL temp10884_8)))
(assert (= temp10884_10 #x0000000000000001))
(assert (= temp10884_11 temp10884_10))
(assert (= temp10884_12 (select ARGNAME_padding_NAMEEND_VAL temp10884_11)))
(assert (= temp10884_13 #x0000000000000002))
(assert (= temp10884_14 temp10884_13))
(assert (= temp10884_15 (select ARGNAME_padding_NAMEEND_VAL temp10884_14)))
(assert (= temp10884_16 #x0000000000000003))
(assert (= temp10884_17 temp10884_16))
(assert (= temp10884_18 (select ARGNAME_padding_NAMEEND_VAL temp10884_17)))
(assert (= temp10884_19 #x0000000000000004))
(assert (= temp10884_20 temp10884_19))
(assert (= temp10884_21 (select ARGNAME_padding_NAMEEND_VAL temp10884_20)))
(assert (= temp10884_22 #x0000000000000005))
(assert (= temp10884_23 temp10884_22))
(assert (= temp10884_24 (select ARGNAME_padding_NAMEEND_VAL temp10884_23)))
(assert (= temp10884_25 #x0000000000000000))
(assert (= temp10884_26 #x0000000000000000))
(assert (= temp10884_27 temp10884_26))
(assert (= temp10884_28 (select ARGNAME_padding_NAMEEND_VAL temp10884_27)))
(assert (= temp10884_29 #x0000000000000000))
(assert (= temp10884_30 #x0000000000000001))
(assert (= temp10884_31 temp10884_30))
(assert (= temp10884_32 (select ARGNAME_padding_NAMEEND_VAL temp10884_31)))
(assert (= temp10884_33 #x0000000000000000))
(assert (= temp10884_34 #x0000000000000002))
(assert (= temp10884_35 temp10884_34))
(assert (= temp10884_36 (select ARGNAME_padding_NAMEEND_VAL temp10884_35)))
(assert (= temp10884_37 #x0000000000000000))
(assert (= temp10884_38 #x0000000000000003))
(assert (= temp10884_39 temp10884_38))
(assert (= temp10884_40 (select ARGNAME_padding_NAMEEND_VAL temp10884_39)))
(assert (= temp10884_41 #x0000000000000000))
(assert (= temp10884_42 #x0000000000000004))
(assert (= temp10884_43 temp10884_42))
(assert (= temp10884_44 (select ARGNAME_padding_NAMEEND_VAL temp10884_43)))
(assert (= temp10884_45 #x0000000000000000))
(assert (= temp10884_46 #x0000000000000005))
(assert (= temp10884_47 temp10884_46))
(assert (= temp10884_48 (select ARGNAME_padding_NAMEEND_VAL temp10884_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10884_28 temp10884_25)
             (bvslt temp10884_32 temp10884_29)
             (bvslt temp10884_36 temp10884_33)
             (bvslt temp10884_40 temp10884_37)
             (bvslt temp10884_44 temp10884_41)
             (bvslt temp10884_48 temp10884_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10884_49 #x0000000000000000))
(assert (= var1191714 temp10884_49))
(assert (= temp10884_50 #x0000000000000000))
(assert (= temp10884_51 temp10884_50))
(assert (= temp10884_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10884_51)))
(assert (= temp10884_53 #x0000000000000001))
(assert (= temp10884_54 temp10884_53))
(assert (= temp10884_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10884_54)))
(assert (= temp10884_56 #x0000000000000002))
(assert (= temp10884_57 temp10884_56))
(assert (= temp10884_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10884_57)))
(assert (= temp10884_59 #x0000000000000003))
(assert (= temp10884_60 temp10884_59))
(assert (= temp10884_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10884_60)))
(assert (= temp10884_62 #x0000000000000004))
(assert (= temp10884_63 temp10884_62))
(assert (= temp10884_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10884_63)))
(assert (= temp10884_65 #x0000000000000005))
(assert (= temp10884_66 temp10884_65))
(assert (= temp10884_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10884_66)))
(assert (= temp10884_68 #x0000000000000000))
(assert (= temp10884_69 #x0000000000000000))
(assert (= temp10884_70 temp10884_69))
(assert (= temp10884_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10884_70)))
(assert (= temp10884_72 #x0000000000000000))
(assert (= temp10884_73 #x0000000000000001))
(assert (= temp10884_74 temp10884_73))
(assert (= temp10884_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10884_74)))
(assert (= temp10884_76 #x0000000000000000))
(assert (= temp10884_77 #x0000000000000002))
(assert (= temp10884_78 temp10884_77))
(assert (= temp10884_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10884_78)))
(assert (= temp10884_80 #x0000000000000000))
(assert (= temp10884_81 #x0000000000000003))
(assert (= temp10884_82 temp10884_81))
(assert (= temp10884_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10884_82)))
(assert (= temp10884_84 #x0000000000000000))
(assert (= temp10884_85 #x0000000000000004))
(assert (= temp10884_86 temp10884_85))
(assert (= temp10884_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10884_86)))
(assert (= temp10884_88 #x0000000000000000))
(assert (= temp10884_89 #x0000000000000005))
(assert (= temp10884_90 temp10884_89))
(assert (= temp10884_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10884_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10884_71 temp10884_68)
             (bvslt temp10884_75 temp10884_72)
             (bvslt temp10884_79 temp10884_76)
             (bvslt temp10884_83 temp10884_80)
             (bvslt temp10884_87 temp10884_84)
             (bvslt temp10884_91 temp10884_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10884_92 #x0000000000000000))
(assert (= var1191725 temp10884_92))
(assert (= temp10884_93 #x0000000000000000))
(assert (= temp10884_94 temp10884_93))
(assert (= temp10884_95 (select ARGNAME_stride_NAMEEND_VAL temp10884_94)))
(assert (= temp10884_96 #x0000000000000001))
(assert (= temp10884_97 temp10884_96))
(assert (= temp10884_98 (select ARGNAME_stride_NAMEEND_VAL temp10884_97)))
(assert (= temp10884_99 #x0000000000000002))
(assert (= temp10884_100 temp10884_99))
(assert (= temp10884_101 (select ARGNAME_stride_NAMEEND_VAL temp10884_100)))
(assert (= temp10884_102 #x0000000000000003))
(assert (= temp10884_103 temp10884_102))
(assert (= temp10884_104 (select ARGNAME_stride_NAMEEND_VAL temp10884_103)))
(assert (= temp10884_105 #x0000000000000004))
(assert (= temp10884_106 temp10884_105))
(assert (= temp10884_107 (select ARGNAME_stride_NAMEEND_VAL temp10884_106)))
(assert (= temp10884_108 #x0000000000000005))
(assert (= temp10884_109 temp10884_108))
(assert (= temp10884_110 (select ARGNAME_stride_NAMEEND_VAL temp10884_109)))
(assert (= temp10884_111 #x0000000000000000))
(assert (= temp10884_112 #x0000000000000000))
(assert (= temp10884_113 temp10884_112))
(assert (= temp10884_114 (select ARGNAME_stride_NAMEEND_VAL temp10884_113)))
(assert (= temp10884_115 #x0000000000000000))
(assert (= temp10884_116 #x0000000000000001))
(assert (= temp10884_117 temp10884_116))
(assert (= temp10884_118 (select ARGNAME_stride_NAMEEND_VAL temp10884_117)))
(assert (= temp10884_119 #x0000000000000000))
(assert (= temp10884_120 #x0000000000000002))
(assert (= temp10884_121 temp10884_120))
(assert (= temp10884_122 (select ARGNAME_stride_NAMEEND_VAL temp10884_121)))
(assert (= temp10884_123 #x0000000000000000))
(assert (= temp10884_124 #x0000000000000003))
(assert (= temp10884_125 temp10884_124))
(assert (= temp10884_126 (select ARGNAME_stride_NAMEEND_VAL temp10884_125)))
(assert (= temp10884_127 #x0000000000000000))
(assert (= temp10884_128 #x0000000000000004))
(assert (= temp10884_129 temp10884_128))
(assert (= temp10884_130 (select ARGNAME_stride_NAMEEND_VAL temp10884_129)))
(assert (= temp10884_131 #x0000000000000000))
(assert (= temp10884_132 #x0000000000000005))
(assert (= temp10884_133 temp10884_132))
(assert (= temp10884_134 (select ARGNAME_stride_NAMEEND_VAL temp10884_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10884_114 temp10884_111)
             (bvsle temp10884_118 temp10884_115)
             (bvsle temp10884_122 temp10884_119)
             (bvsle temp10884_126 temp10884_123)
             (bvsle temp10884_130 temp10884_127)
             (bvsle temp10884_134 temp10884_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10884_135 #x0000000000000000))
(assert (= var1191735 temp10884_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10884_136 #x0000000000000001))
(assert (= var1191747 temp10884_136))
(assert (= temp10884_137 #x0000000000000000))
(assert (= var1179826 temp10884_137))
(assert (= temp10884_138 #x0000000000000000))
(assert (= temp10884_139 temp10884_138))
(assert (= temp10884_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10884_139)))
(assert (= temp10884_141 #x0000000000000001))
(assert (= temp10884_142 temp10884_141))
(assert (= temp10884_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10884_142)))
(assert (= temp10884_144 #x0000000000000002))
(assert (= temp10884_145 temp10884_144))
(assert (= temp10884_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10884_145)))
(assert (= temp10884_147 #x0000000000000003))
(assert (= temp10884_148 temp10884_147))
(assert (= temp10884_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10884_148)))
(assert (= temp10884_150 #x0000000000000004))
(assert (= temp10884_151 temp10884_150))
(assert (= temp10884_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10884_151)))
(assert (= temp10884_153 #x0000000000000005))
(assert (= temp10884_154 temp10884_153))
(assert (= temp10884_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10884_154)))
(assert (= temp10884_157 var1179826))
(assert (= temp10884_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10884_157)))
(assert (= temp10884_156 temp10884_158))
(assert (= var1191780
   (ite (bvslt temp10884_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10884_159 #x0000000000000000))
(assert (= var1191780 temp10884_159))
(assert (= temp10884_160 #x0000000000000000))
(assert (= var1179826 temp10884_160))
(assert (= temp10884_162 var1179826))
(assert (= temp10884_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10884_162)))
(assert (= temp10884_161 temp10884_163))
(assert (= var1191802 (bvsmod temp10884_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10884_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10884_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10884_165 #x0000000000000001))
(assert (= var1191803 temp10884_165))
(assert (= temp10884_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10884_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10884_167 #x0000000000000001))
(assert (= var1191823 temp10884_167))
(assert (= temp10884_168 #x0000000000000001))
(assert (= var1180714 temp10884_168))
(assert (= temp10884_169 #x0000000000000000))
(assert (= temp10884_170 temp10884_169))
(assert (= temp10884_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10884_170)))
(assert (= temp10884_172 #x0000000000000001))
(assert (= temp10884_173 temp10884_172))
(assert (= temp10884_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10884_173)))
(assert (= temp10884_175 #x0000000000000002))
(assert (= temp10884_176 temp10884_175))
(assert (= temp10884_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10884_176)))
(assert (= temp10884_178 #x0000000000000003))
(assert (= temp10884_179 temp10884_178))
(assert (= temp10884_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10884_179)))
(assert (= temp10884_181 #x0000000000000004))
(assert (= temp10884_182 temp10884_181))
(assert (= temp10884_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10884_182)))
(assert (= temp10884_184 #x0000000000000005))
(assert (= temp10884_185 temp10884_184))
(assert (= temp10884_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10884_185)))
(assert (= temp10884_187 #x0000000000000000))
(assert (= temp10884_188
   (ite (bvslt var1180714 temp10884_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10884_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10884_188)))
(assert (= var1191831 temp10884_189))
(assert (bvslt (ite (bvslt var1180714 temp10884_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10884_190 #x0000000000000001))
(assert (= var1180714 temp10884_190))
(assert (= temp10884_192 var1180714))
(assert (= temp10884_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10884_192)))
(assert (= temp10884_191 temp10884_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10884_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10884_194 #x0000000000000001))
(assert (= var1191836 temp10884_194))
(assert (= temp10884_195 #x0000000000000000))
(assert (= var1179826 temp10884_195))
(assert (= temp10884_197 var1179826))
(assert (= temp10884_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10884_197)))
(assert (= temp10884_196 temp10884_198))
(assert (= temp10884_199 #x0000000000000002))
(assert (= var1586025 temp10884_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10884_200 #x0000000000000001))
(assert (= var1191993 temp10884_200))
(assert (= temp10884_201 #x0000000000000001))
(assert (= var2700303 temp10884_201))
(assert (= temp10884_202 #x0000000000000001))
(assert (= var2962447 temp10884_202))
(assert (= temp10884_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10884_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10884_204 #x0000000000000001))
(assert (= var211058 temp10884_204))
(assert (= temp10884_205 #x0000000000000001))
(assert (= var211188 temp10884_205))
(assert (= var3879401 var211188))
(assert (= temp10884_206 #x0000000000000000))
(assert (= var3866802 temp10884_206))
(assert (= temp10884_207 #x0000000000000000))
(assert (= temp10884_208
   (ite (bvslt var3866802 temp10884_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10884_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10884_208)))
(assert (= var3879420 temp10884_209))
(assert (bvslt (ite (bvslt var3866802 temp10884_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10884_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10884_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10884_211 #x0000000000000000))
(assert (= var3879421 temp10884_211))
(assert (= temp10884_212 #x0000000000000001))
(assert (= var3867690 temp10884_212))
(assert (= temp10884_213 #x0000000000000000))
(assert (= temp10884_214
   (ite (bvslt var3867690 temp10884_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10884_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10884_214)))
(assert (= var3879423 temp10884_215))
(assert (bvslt (ite (bvslt var3867690 temp10884_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10884_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10884_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10884_217 #x0000000000000001))
(assert (= var3879424 temp10884_217))
(assert (= temp10884_218 #x0000000000000000))
(assert (= var4133117 temp10884_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10884_219 #x0000000000000002))
(assert (= var4339331 temp10884_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10884_220 #x0000000000000000))
(assert (= var4404892 temp10884_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5714320 var211201))
(assert (= var5976464 var211201))
(assert (= temp10884_221 #x0000000000000001))
(assert (= var211058 temp10884_221))
(assert (= temp10884_222 #x0000000000000000))
(assert (= var7615252 temp10884_222))
(assert (= var7615219 var7615252))
(assert (= var7483783 var7615219))
(assert (= var7483779 var7483783))
(assert (= var212669 var7483779))
(assert (= temp10884_223 #x0000000000000000))
(assert (= var212669 temp10884_223))
(model-add temp10884_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10884_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10884_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10884_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






