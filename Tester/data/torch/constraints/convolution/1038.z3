(declare-fun temp10050_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10050_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10050_3 () (_ BitVec 64))
(declare-fun temp10050_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10050_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10050_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10050_7 () (_ BitVec 64))
(declare-fun temp10050_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10050_9 () (_ BitVec 64))
(declare-fun temp10050_10 () (_ BitVec 64))
(declare-fun temp10050_11 () (_ BitVec 64))
(declare-fun temp10050_12 () (_ BitVec 64))
(declare-fun temp10050_13 () (_ BitVec 64))
(declare-fun temp10050_14 () (_ BitVec 64))
(declare-fun temp10050_15 () (_ BitVec 64))
(declare-fun temp10050_16 () (_ BitVec 64))
(declare-fun temp10050_17 () (_ BitVec 64))
(declare-fun temp10050_18 () (_ BitVec 64))
(declare-fun temp10050_19 () (_ BitVec 64))
(declare-fun temp10050_20 () (_ BitVec 64))
(declare-fun temp10050_21 () (_ BitVec 64))
(declare-fun temp10050_22 () (_ BitVec 64))
(declare-fun temp10050_23 () (_ BitVec 64))
(declare-fun temp10050_24 () (_ BitVec 64))
(declare-fun temp10050_25 () (_ BitVec 64))
(declare-fun temp10050_26 () (_ BitVec 64))
(declare-fun temp10050_27 () (_ BitVec 64))
(declare-fun temp10050_28 () (_ BitVec 64))
(declare-fun temp10050_29 () (_ BitVec 64))
(declare-fun temp10050_30 () (_ BitVec 64))
(declare-fun temp10050_31 () (_ BitVec 64))
(declare-fun temp10050_32 () (_ BitVec 64))
(declare-fun temp10050_33 () (_ BitVec 64))
(declare-fun temp10050_34 () (_ BitVec 64))
(declare-fun temp10050_35 () (_ BitVec 64))
(declare-fun temp10050_36 () (_ BitVec 64))
(declare-fun temp10050_37 () (_ BitVec 64))
(declare-fun temp10050_38 () (_ BitVec 64))
(declare-fun temp10050_39 () (_ BitVec 64))
(declare-fun temp10050_40 () (_ BitVec 64))
(declare-fun temp10050_41 () (_ BitVec 64))
(declare-fun temp10050_42 () (_ BitVec 64))
(declare-fun temp10050_43 () (_ BitVec 64))
(declare-fun temp10050_44 () (_ BitVec 64))
(declare-fun temp10050_45 () (_ BitVec 64))
(declare-fun temp10050_46 () (_ BitVec 64))
(declare-fun temp10050_47 () (_ BitVec 64))
(declare-fun temp10050_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10050_49 () (_ BitVec 64))
(declare-fun temp10050_50 () (_ BitVec 64))
(declare-fun temp10050_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10050_52 () (_ BitVec 64))
(declare-fun temp10050_53 () (_ BitVec 64))
(declare-fun temp10050_54 () (_ BitVec 64))
(declare-fun temp10050_55 () (_ BitVec 64))
(declare-fun temp10050_56 () (_ BitVec 64))
(declare-fun temp10050_57 () (_ BitVec 64))
(declare-fun temp10050_58 () (_ BitVec 64))
(declare-fun temp10050_59 () (_ BitVec 64))
(declare-fun temp10050_60 () (_ BitVec 64))
(declare-fun temp10050_61 () (_ BitVec 64))
(declare-fun temp10050_62 () (_ BitVec 64))
(declare-fun temp10050_63 () (_ BitVec 64))
(declare-fun temp10050_64 () (_ BitVec 64))
(declare-fun temp10050_65 () (_ BitVec 64))
(declare-fun temp10050_66 () (_ BitVec 64))
(declare-fun temp10050_67 () (_ BitVec 64))
(declare-fun temp10050_68 () (_ BitVec 64))
(declare-fun temp10050_69 () (_ BitVec 64))
(declare-fun temp10050_70 () (_ BitVec 64))
(declare-fun temp10050_71 () (_ BitVec 64))
(declare-fun temp10050_72 () (_ BitVec 64))
(declare-fun temp10050_73 () (_ BitVec 64))
(declare-fun temp10050_74 () (_ BitVec 64))
(declare-fun temp10050_75 () (_ BitVec 64))
(declare-fun temp10050_76 () (_ BitVec 64))
(declare-fun temp10050_77 () (_ BitVec 64))
(declare-fun temp10050_78 () (_ BitVec 64))
(declare-fun temp10050_79 () (_ BitVec 64))
(declare-fun temp10050_80 () (_ BitVec 64))
(declare-fun temp10050_81 () (_ BitVec 64))
(declare-fun temp10050_82 () (_ BitVec 64))
(declare-fun temp10050_83 () (_ BitVec 64))
(declare-fun temp10050_84 () (_ BitVec 64))
(declare-fun temp10050_85 () (_ BitVec 64))
(declare-fun temp10050_86 () (_ BitVec 64))
(declare-fun temp10050_87 () (_ BitVec 64))
(declare-fun temp10050_88 () (_ BitVec 64))
(declare-fun temp10050_89 () (_ BitVec 64))
(declare-fun temp10050_90 () (_ BitVec 64))
(declare-fun temp10050_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10050_92 () (_ BitVec 64))
(declare-fun temp10050_93 () (_ BitVec 64))
(declare-fun temp10050_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10050_95 () (_ BitVec 64))
(declare-fun temp10050_96 () (_ BitVec 64))
(declare-fun temp10050_97 () (_ BitVec 64))
(declare-fun temp10050_98 () (_ BitVec 64))
(declare-fun temp10050_99 () (_ BitVec 64))
(declare-fun temp10050_100 () (_ BitVec 64))
(declare-fun temp10050_101 () (_ BitVec 64))
(declare-fun temp10050_102 () (_ BitVec 64))
(declare-fun temp10050_103 () (_ BitVec 64))
(declare-fun temp10050_104 () (_ BitVec 64))
(declare-fun temp10050_105 () (_ BitVec 64))
(declare-fun temp10050_106 () (_ BitVec 64))
(declare-fun temp10050_107 () (_ BitVec 64))
(declare-fun temp10050_108 () (_ BitVec 64))
(declare-fun temp10050_109 () (_ BitVec 64))
(declare-fun temp10050_110 () (_ BitVec 64))
(declare-fun temp10050_111 () (_ BitVec 64))
(declare-fun temp10050_112 () (_ BitVec 64))
(declare-fun temp10050_113 () (_ BitVec 64))
(declare-fun temp10050_114 () (_ BitVec 64))
(declare-fun temp10050_115 () (_ BitVec 64))
(declare-fun temp10050_116 () (_ BitVec 64))
(declare-fun temp10050_117 () (_ BitVec 64))
(declare-fun temp10050_118 () (_ BitVec 64))
(declare-fun temp10050_119 () (_ BitVec 64))
(declare-fun temp10050_120 () (_ BitVec 64))
(declare-fun temp10050_121 () (_ BitVec 64))
(declare-fun temp10050_122 () (_ BitVec 64))
(declare-fun temp10050_123 () (_ BitVec 64))
(declare-fun temp10050_124 () (_ BitVec 64))
(declare-fun temp10050_125 () (_ BitVec 64))
(declare-fun temp10050_126 () (_ BitVec 64))
(declare-fun temp10050_127 () (_ BitVec 64))
(declare-fun temp10050_128 () (_ BitVec 64))
(declare-fun temp10050_129 () (_ BitVec 64))
(declare-fun temp10050_130 () (_ BitVec 64))
(declare-fun temp10050_131 () (_ BitVec 64))
(declare-fun temp10050_132 () (_ BitVec 64))
(declare-fun temp10050_133 () (_ BitVec 64))
(declare-fun temp10050_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10050_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10050_136 () (_ BitVec 64))
(declare-fun temp10050_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10050_138 () (_ BitVec 64))
(declare-fun temp10050_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10050_140 () (_ BitVec 64))
(declare-fun temp10050_141 () (_ BitVec 64))
(declare-fun temp10050_142 () (_ BitVec 64))
(declare-fun temp10050_143 () (_ BitVec 64))
(declare-fun temp10050_144 () (_ BitVec 64))
(declare-fun temp10050_145 () (_ BitVec 64))
(declare-fun temp10050_146 () (_ BitVec 64))
(declare-fun temp10050_147 () (_ BitVec 64))
(declare-fun temp10050_148 () (_ BitVec 64))
(declare-fun temp10050_149 () (_ BitVec 64))
(declare-fun temp10050_150 () (_ BitVec 64))
(declare-fun temp10050_151 () (_ BitVec 64))
(declare-fun temp10050_152 () (_ BitVec 64))
(declare-fun temp10050_153 () (_ BitVec 64))
(declare-fun temp10050_154 () (_ BitVec 64))
(declare-fun temp10050_155 () (_ BitVec 64))
(declare-fun temp10050_157 () (_ BitVec 64))
(declare-fun temp10050_158 () (_ BitVec 64))
(declare-fun temp10050_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10050_159 () (_ BitVec 64))
(declare-fun temp10050_160 () (_ BitVec 64))
(declare-fun temp10050_162 () (_ BitVec 64))
(declare-fun temp10050_163 () (_ BitVec 64))
(declare-fun temp10050_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10050_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10050_165 () (_ BitVec 64))
(declare-fun temp10050_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10050_167 () (_ BitVec 64))
(declare-fun temp10050_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10050_169 () (_ BitVec 64))
(declare-fun temp10050_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10050_171 () (_ BitVec 64))
(declare-fun temp10050_172 () (_ BitVec 64))
(declare-fun temp10050_173 () (_ BitVec 64))
(declare-fun temp10050_174 () (_ BitVec 64))
(declare-fun temp10050_175 () (_ BitVec 64))
(declare-fun temp10050_176 () (_ BitVec 64))
(declare-fun temp10050_177 () (_ BitVec 64))
(declare-fun temp10050_178 () (_ BitVec 64))
(declare-fun temp10050_179 () (_ BitVec 64))
(declare-fun temp10050_180 () (_ BitVec 64))
(declare-fun temp10050_181 () (_ BitVec 64))
(declare-fun temp10050_182 () (_ BitVec 64))
(declare-fun temp10050_183 () (_ BitVec 64))
(declare-fun temp10050_184 () (_ BitVec 64))
(declare-fun temp10050_185 () (_ BitVec 64))
(declare-fun temp10050_186 () (_ BitVec 64))
(declare-fun temp10050_187 () (_ BitVec 64))
(declare-fun temp10050_188 () (_ BitVec 64))
(declare-fun temp10050_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10050_190 () (_ BitVec 64))
(declare-fun temp10050_192 () (_ BitVec 64))
(declare-fun temp10050_193 () (_ BitVec 64))
(declare-fun temp10050_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10050_194 () (_ BitVec 64))
(declare-fun temp10050_195 () (_ BitVec 64))
(declare-fun temp10050_197 () (_ BitVec 64))
(declare-fun temp10050_198 () (_ BitVec 64))
(declare-fun temp10050_196 () (_ BitVec 64))
(declare-fun temp10050_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10050_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10050_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10050_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10050_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10050_204 () (_ BitVec 64))
(declare-fun temp10050_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10050_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10050_207 () (_ BitVec 64))
(declare-fun temp10050_208 () (_ BitVec 64))
(declare-fun temp10050_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10050_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10050_211 () (_ BitVec 64))
(declare-fun temp10050_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10050_213 () (_ BitVec 64))
(declare-fun temp10050_214 () (_ BitVec 64))
(declare-fun temp10050_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10050_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10050_217 () (_ BitVec 64))
(declare-fun temp10050_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10050_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10050_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10050_222 () (_ BitVec 64))
(declare-fun temp10050_221 () (_ BitVec 64))
(declare-fun temp10050_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10050_224 () (_ BitVec 64))
(declare-fun temp10050_225 () (_ BitVec 64))
(declare-fun temp10050_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10050_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10050_228 () (_ BitVec 64))
(declare-fun temp10050_230 () (_ BitVec 64))
(declare-fun temp10050_229 () (_ BitVec 64))
(declare-fun temp10050_231 () (_ BitVec 64))
(assert (= temp10050_1 #x0000000000000001))
(assert (= var77203 temp10050_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10050_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10050_2)))
(assert (= temp10050_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10050_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10050_4 #x0000000000000000))
(assert (= var210941 temp10050_4))
(assert (= temp10050_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10050_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10050_6 #x0000000000000000))
(assert (= var210986 temp10050_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10050_7 #x0000000000000000))
(assert (= temp10050_8 temp10050_7))
(assert (= temp10050_9 (select ARGNAME_padding_NAMEEND_VAL temp10050_8)))
(assert (= temp10050_10 #x0000000000000001))
(assert (= temp10050_11 temp10050_10))
(assert (= temp10050_12 (select ARGNAME_padding_NAMEEND_VAL temp10050_11)))
(assert (= temp10050_13 #x0000000000000002))
(assert (= temp10050_14 temp10050_13))
(assert (= temp10050_15 (select ARGNAME_padding_NAMEEND_VAL temp10050_14)))
(assert (= temp10050_16 #x0000000000000003))
(assert (= temp10050_17 temp10050_16))
(assert (= temp10050_18 (select ARGNAME_padding_NAMEEND_VAL temp10050_17)))
(assert (= temp10050_19 #x0000000000000004))
(assert (= temp10050_20 temp10050_19))
(assert (= temp10050_21 (select ARGNAME_padding_NAMEEND_VAL temp10050_20)))
(assert (= temp10050_22 #x0000000000000005))
(assert (= temp10050_23 temp10050_22))
(assert (= temp10050_24 (select ARGNAME_padding_NAMEEND_VAL temp10050_23)))
(assert (= temp10050_25 #x0000000000000000))
(assert (= temp10050_26 #x0000000000000000))
(assert (= temp10050_27 temp10050_26))
(assert (= temp10050_28 (select ARGNAME_padding_NAMEEND_VAL temp10050_27)))
(assert (= temp10050_29 #x0000000000000000))
(assert (= temp10050_30 #x0000000000000001))
(assert (= temp10050_31 temp10050_30))
(assert (= temp10050_32 (select ARGNAME_padding_NAMEEND_VAL temp10050_31)))
(assert (= temp10050_33 #x0000000000000000))
(assert (= temp10050_34 #x0000000000000002))
(assert (= temp10050_35 temp10050_34))
(assert (= temp10050_36 (select ARGNAME_padding_NAMEEND_VAL temp10050_35)))
(assert (= temp10050_37 #x0000000000000000))
(assert (= temp10050_38 #x0000000000000003))
(assert (= temp10050_39 temp10050_38))
(assert (= temp10050_40 (select ARGNAME_padding_NAMEEND_VAL temp10050_39)))
(assert (= temp10050_41 #x0000000000000000))
(assert (= temp10050_42 #x0000000000000004))
(assert (= temp10050_43 temp10050_42))
(assert (= temp10050_44 (select ARGNAME_padding_NAMEEND_VAL temp10050_43)))
(assert (= temp10050_45 #x0000000000000000))
(assert (= temp10050_46 #x0000000000000005))
(assert (= temp10050_47 temp10050_46))
(assert (= temp10050_48 (select ARGNAME_padding_NAMEEND_VAL temp10050_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10050_28 temp10050_25)
             (bvslt temp10050_32 temp10050_29)
             (bvslt temp10050_36 temp10050_33)
             (bvslt temp10050_40 temp10050_37)
             (bvslt temp10050_44 temp10050_41)
             (bvslt temp10050_48 temp10050_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10050_49 #x0000000000000000))
(assert (= var1191714 temp10050_49))
(assert (= temp10050_50 #x0000000000000000))
(assert (= temp10050_51 temp10050_50))
(assert (= temp10050_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10050_51)))
(assert (= temp10050_53 #x0000000000000001))
(assert (= temp10050_54 temp10050_53))
(assert (= temp10050_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10050_54)))
(assert (= temp10050_56 #x0000000000000002))
(assert (= temp10050_57 temp10050_56))
(assert (= temp10050_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10050_57)))
(assert (= temp10050_59 #x0000000000000003))
(assert (= temp10050_60 temp10050_59))
(assert (= temp10050_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10050_60)))
(assert (= temp10050_62 #x0000000000000004))
(assert (= temp10050_63 temp10050_62))
(assert (= temp10050_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10050_63)))
(assert (= temp10050_65 #x0000000000000005))
(assert (= temp10050_66 temp10050_65))
(assert (= temp10050_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10050_66)))
(assert (= temp10050_68 #x0000000000000000))
(assert (= temp10050_69 #x0000000000000000))
(assert (= temp10050_70 temp10050_69))
(assert (= temp10050_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10050_70)))
(assert (= temp10050_72 #x0000000000000000))
(assert (= temp10050_73 #x0000000000000001))
(assert (= temp10050_74 temp10050_73))
(assert (= temp10050_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10050_74)))
(assert (= temp10050_76 #x0000000000000000))
(assert (= temp10050_77 #x0000000000000002))
(assert (= temp10050_78 temp10050_77))
(assert (= temp10050_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10050_78)))
(assert (= temp10050_80 #x0000000000000000))
(assert (= temp10050_81 #x0000000000000003))
(assert (= temp10050_82 temp10050_81))
(assert (= temp10050_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10050_82)))
(assert (= temp10050_84 #x0000000000000000))
(assert (= temp10050_85 #x0000000000000004))
(assert (= temp10050_86 temp10050_85))
(assert (= temp10050_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10050_86)))
(assert (= temp10050_88 #x0000000000000000))
(assert (= temp10050_89 #x0000000000000005))
(assert (= temp10050_90 temp10050_89))
(assert (= temp10050_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10050_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10050_71 temp10050_68)
             (bvslt temp10050_75 temp10050_72)
             (bvslt temp10050_79 temp10050_76)
             (bvslt temp10050_83 temp10050_80)
             (bvslt temp10050_87 temp10050_84)
             (bvslt temp10050_91 temp10050_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10050_92 #x0000000000000000))
(assert (= var1191725 temp10050_92))
(assert (= temp10050_93 #x0000000000000000))
(assert (= temp10050_94 temp10050_93))
(assert (= temp10050_95 (select ARGNAME_stride_NAMEEND_VAL temp10050_94)))
(assert (= temp10050_96 #x0000000000000001))
(assert (= temp10050_97 temp10050_96))
(assert (= temp10050_98 (select ARGNAME_stride_NAMEEND_VAL temp10050_97)))
(assert (= temp10050_99 #x0000000000000002))
(assert (= temp10050_100 temp10050_99))
(assert (= temp10050_101 (select ARGNAME_stride_NAMEEND_VAL temp10050_100)))
(assert (= temp10050_102 #x0000000000000003))
(assert (= temp10050_103 temp10050_102))
(assert (= temp10050_104 (select ARGNAME_stride_NAMEEND_VAL temp10050_103)))
(assert (= temp10050_105 #x0000000000000004))
(assert (= temp10050_106 temp10050_105))
(assert (= temp10050_107 (select ARGNAME_stride_NAMEEND_VAL temp10050_106)))
(assert (= temp10050_108 #x0000000000000005))
(assert (= temp10050_109 temp10050_108))
(assert (= temp10050_110 (select ARGNAME_stride_NAMEEND_VAL temp10050_109)))
(assert (= temp10050_111 #x0000000000000000))
(assert (= temp10050_112 #x0000000000000000))
(assert (= temp10050_113 temp10050_112))
(assert (= temp10050_114 (select ARGNAME_stride_NAMEEND_VAL temp10050_113)))
(assert (= temp10050_115 #x0000000000000000))
(assert (= temp10050_116 #x0000000000000001))
(assert (= temp10050_117 temp10050_116))
(assert (= temp10050_118 (select ARGNAME_stride_NAMEEND_VAL temp10050_117)))
(assert (= temp10050_119 #x0000000000000000))
(assert (= temp10050_120 #x0000000000000002))
(assert (= temp10050_121 temp10050_120))
(assert (= temp10050_122 (select ARGNAME_stride_NAMEEND_VAL temp10050_121)))
(assert (= temp10050_123 #x0000000000000000))
(assert (= temp10050_124 #x0000000000000003))
(assert (= temp10050_125 temp10050_124))
(assert (= temp10050_126 (select ARGNAME_stride_NAMEEND_VAL temp10050_125)))
(assert (= temp10050_127 #x0000000000000000))
(assert (= temp10050_128 #x0000000000000004))
(assert (= temp10050_129 temp10050_128))
(assert (= temp10050_130 (select ARGNAME_stride_NAMEEND_VAL temp10050_129)))
(assert (= temp10050_131 #x0000000000000000))
(assert (= temp10050_132 #x0000000000000005))
(assert (= temp10050_133 temp10050_132))
(assert (= temp10050_134 (select ARGNAME_stride_NAMEEND_VAL temp10050_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10050_114 temp10050_111)
             (bvsle temp10050_118 temp10050_115)
             (bvsle temp10050_122 temp10050_119)
             (bvsle temp10050_126 temp10050_123)
             (bvsle temp10050_130 temp10050_127)
             (bvsle temp10050_134 temp10050_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10050_135 #x0000000000000000))
(assert (= var1191735 temp10050_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10050_136 #x0000000000000001))
(assert (= var1191747 temp10050_136))
(assert (= temp10050_137 #x0000000000000000))
(assert (= var1179826 temp10050_137))
(assert (= temp10050_138 #x0000000000000000))
(assert (= temp10050_139 temp10050_138))
(assert (= temp10050_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10050_139)))
(assert (= temp10050_141 #x0000000000000001))
(assert (= temp10050_142 temp10050_141))
(assert (= temp10050_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10050_142)))
(assert (= temp10050_144 #x0000000000000002))
(assert (= temp10050_145 temp10050_144))
(assert (= temp10050_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10050_145)))
(assert (= temp10050_147 #x0000000000000003))
(assert (= temp10050_148 temp10050_147))
(assert (= temp10050_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10050_148)))
(assert (= temp10050_150 #x0000000000000004))
(assert (= temp10050_151 temp10050_150))
(assert (= temp10050_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10050_151)))
(assert (= temp10050_153 #x0000000000000005))
(assert (= temp10050_154 temp10050_153))
(assert (= temp10050_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10050_154)))
(assert (= temp10050_157 var1179826))
(assert (= temp10050_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10050_157)))
(assert (= temp10050_156 temp10050_158))
(assert (= var1191780
   (ite (bvslt temp10050_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10050_159 #x0000000000000000))
(assert (= var1191780 temp10050_159))
(assert (= temp10050_160 #x0000000000000000))
(assert (= var1179826 temp10050_160))
(assert (= temp10050_162 var1179826))
(assert (= temp10050_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10050_162)))
(assert (= temp10050_161 temp10050_163))
(assert (= var1191802 (bvsmod temp10050_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10050_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10050_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10050_165 #x0000000000000001))
(assert (= var1191803 temp10050_165))
(assert (= temp10050_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10050_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10050_167 #x0000000000000001))
(assert (= var1191823 temp10050_167))
(assert (= temp10050_168 #x0000000000000001))
(assert (= var1180714 temp10050_168))
(assert (= temp10050_169 #x0000000000000000))
(assert (= temp10050_170 temp10050_169))
(assert (= temp10050_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10050_170)))
(assert (= temp10050_172 #x0000000000000001))
(assert (= temp10050_173 temp10050_172))
(assert (= temp10050_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10050_173)))
(assert (= temp10050_175 #x0000000000000002))
(assert (= temp10050_176 temp10050_175))
(assert (= temp10050_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10050_176)))
(assert (= temp10050_178 #x0000000000000003))
(assert (= temp10050_179 temp10050_178))
(assert (= temp10050_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10050_179)))
(assert (= temp10050_181 #x0000000000000004))
(assert (= temp10050_182 temp10050_181))
(assert (= temp10050_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10050_182)))
(assert (= temp10050_184 #x0000000000000005))
(assert (= temp10050_185 temp10050_184))
(assert (= temp10050_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10050_185)))
(assert (= temp10050_187 #x0000000000000000))
(assert (= temp10050_188
   (ite (bvslt var1180714 temp10050_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10050_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10050_188)))
(assert (= var1191831 temp10050_189))
(assert (bvslt (ite (bvslt var1180714 temp10050_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10050_190 #x0000000000000001))
(assert (= var1180714 temp10050_190))
(assert (= temp10050_192 var1180714))
(assert (= temp10050_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10050_192)))
(assert (= temp10050_191 temp10050_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10050_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10050_194 #x0000000000000001))
(assert (= var1191836 temp10050_194))
(assert (= temp10050_195 #x0000000000000000))
(assert (= var1179826 temp10050_195))
(assert (= temp10050_197 var1179826))
(assert (= temp10050_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10050_197)))
(assert (= temp10050_196 temp10050_198))
(assert (= temp10050_199 #x0000000000000002))
(assert (= var1586025 temp10050_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10050_200 #x0000000000000001))
(assert (= var1191993 temp10050_200))
(assert (= temp10050_201 #x0000000000000001))
(assert (= var2700303 temp10050_201))
(assert (= temp10050_202 #x0000000000000001))
(assert (= var2962447 temp10050_202))
(assert (= temp10050_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10050_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10050_204 #x0000000000000001))
(assert (= var211058 temp10050_204))
(assert (= temp10050_205 #x0000000000000001))
(assert (= var211188 temp10050_205))
(assert (= var3879401 var211188))
(assert (= temp10050_206 #x0000000000000000))
(assert (= var3866802 temp10050_206))
(assert (= temp10050_207 #x0000000000000000))
(assert (= temp10050_208
   (ite (bvslt var3866802 temp10050_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10050_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10050_208)))
(assert (= var3879420 temp10050_209))
(assert (bvslt (ite (bvslt var3866802 temp10050_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10050_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10050_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10050_211 #x0000000000000000))
(assert (= var3879421 temp10050_211))
(assert (= temp10050_212 #x0000000000000001))
(assert (= var3867690 temp10050_212))
(assert (= temp10050_213 #x0000000000000000))
(assert (= temp10050_214
   (ite (bvslt var3867690 temp10050_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10050_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10050_214)))
(assert (= var3879423 temp10050_215))
(assert (bvslt (ite (bvslt var3867690 temp10050_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10050_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10050_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10050_217 #x0000000000000001))
(assert (= var3879424 temp10050_217))
(assert (= temp10050_218 #x0000000000000000))
(assert (= var4079423 temp10050_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10050_219 #x0000000000000002))
(assert (= var4208259 temp10050_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10050_220 #x0000000000000000))
(assert (= var4273820 temp10050_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10050_222 #xffffffffffffffff))
(assert (= temp10050_221 temp10050_222))
(assert (= temp10050_223 #x0000000000000001))
(assert (= var197674 temp10050_223))
(assert (= temp10050_224 #x0000000000000000))
(assert (= temp10050_225
   (ite (bvslt var197674 temp10050_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10050_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10050_225)))
(assert (= var211595 temp10050_226))
(assert (bvslt (ite (bvslt var197674 temp10050_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10050_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10050_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10050_228 #x0000000000000001))
(assert (= var211596 temp10050_228))
(assert (= temp10050_230 #xffffffffffffffff))
(assert (= temp10050_229 temp10050_230))
(assert (= temp10050_231 #x0000000000000001))
(assert (= var211058 temp10050_231))
(model-add temp10050_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10050_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10050_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10050_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




