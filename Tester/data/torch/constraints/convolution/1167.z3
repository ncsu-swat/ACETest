(declare-fun temp10286_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10286_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10286_3 () (_ BitVec 64))
(declare-fun temp10286_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10286_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10286_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10286_7 () (_ BitVec 64))
(declare-fun temp10286_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10286_9 () (_ BitVec 64))
(declare-fun temp10286_10 () (_ BitVec 64))
(declare-fun temp10286_11 () (_ BitVec 64))
(declare-fun temp10286_12 () (_ BitVec 64))
(declare-fun temp10286_13 () (_ BitVec 64))
(declare-fun temp10286_14 () (_ BitVec 64))
(declare-fun temp10286_15 () (_ BitVec 64))
(declare-fun temp10286_16 () (_ BitVec 64))
(declare-fun temp10286_17 () (_ BitVec 64))
(declare-fun temp10286_18 () (_ BitVec 64))
(declare-fun temp10286_19 () (_ BitVec 64))
(declare-fun temp10286_20 () (_ BitVec 64))
(declare-fun temp10286_21 () (_ BitVec 64))
(declare-fun temp10286_22 () (_ BitVec 64))
(declare-fun temp10286_23 () (_ BitVec 64))
(declare-fun temp10286_24 () (_ BitVec 64))
(declare-fun temp10286_25 () (_ BitVec 64))
(declare-fun temp10286_26 () (_ BitVec 64))
(declare-fun temp10286_27 () (_ BitVec 64))
(declare-fun temp10286_28 () (_ BitVec 64))
(declare-fun temp10286_29 () (_ BitVec 64))
(declare-fun temp10286_30 () (_ BitVec 64))
(declare-fun temp10286_31 () (_ BitVec 64))
(declare-fun temp10286_32 () (_ BitVec 64))
(declare-fun temp10286_33 () (_ BitVec 64))
(declare-fun temp10286_34 () (_ BitVec 64))
(declare-fun temp10286_35 () (_ BitVec 64))
(declare-fun temp10286_36 () (_ BitVec 64))
(declare-fun temp10286_37 () (_ BitVec 64))
(declare-fun temp10286_38 () (_ BitVec 64))
(declare-fun temp10286_39 () (_ BitVec 64))
(declare-fun temp10286_40 () (_ BitVec 64))
(declare-fun temp10286_41 () (_ BitVec 64))
(declare-fun temp10286_42 () (_ BitVec 64))
(declare-fun temp10286_43 () (_ BitVec 64))
(declare-fun temp10286_44 () (_ BitVec 64))
(declare-fun temp10286_45 () (_ BitVec 64))
(declare-fun temp10286_46 () (_ BitVec 64))
(declare-fun temp10286_47 () (_ BitVec 64))
(declare-fun temp10286_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10286_49 () (_ BitVec 64))
(declare-fun temp10286_50 () (_ BitVec 64))
(declare-fun temp10286_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10286_52 () (_ BitVec 64))
(declare-fun temp10286_53 () (_ BitVec 64))
(declare-fun temp10286_54 () (_ BitVec 64))
(declare-fun temp10286_55 () (_ BitVec 64))
(declare-fun temp10286_56 () (_ BitVec 64))
(declare-fun temp10286_57 () (_ BitVec 64))
(declare-fun temp10286_58 () (_ BitVec 64))
(declare-fun temp10286_59 () (_ BitVec 64))
(declare-fun temp10286_60 () (_ BitVec 64))
(declare-fun temp10286_61 () (_ BitVec 64))
(declare-fun temp10286_62 () (_ BitVec 64))
(declare-fun temp10286_63 () (_ BitVec 64))
(declare-fun temp10286_64 () (_ BitVec 64))
(declare-fun temp10286_65 () (_ BitVec 64))
(declare-fun temp10286_66 () (_ BitVec 64))
(declare-fun temp10286_67 () (_ BitVec 64))
(declare-fun temp10286_68 () (_ BitVec 64))
(declare-fun temp10286_69 () (_ BitVec 64))
(declare-fun temp10286_70 () (_ BitVec 64))
(declare-fun temp10286_71 () (_ BitVec 64))
(declare-fun temp10286_72 () (_ BitVec 64))
(declare-fun temp10286_73 () (_ BitVec 64))
(declare-fun temp10286_74 () (_ BitVec 64))
(declare-fun temp10286_75 () (_ BitVec 64))
(declare-fun temp10286_76 () (_ BitVec 64))
(declare-fun temp10286_77 () (_ BitVec 64))
(declare-fun temp10286_78 () (_ BitVec 64))
(declare-fun temp10286_79 () (_ BitVec 64))
(declare-fun temp10286_80 () (_ BitVec 64))
(declare-fun temp10286_81 () (_ BitVec 64))
(declare-fun temp10286_82 () (_ BitVec 64))
(declare-fun temp10286_83 () (_ BitVec 64))
(declare-fun temp10286_84 () (_ BitVec 64))
(declare-fun temp10286_85 () (_ BitVec 64))
(declare-fun temp10286_86 () (_ BitVec 64))
(declare-fun temp10286_87 () (_ BitVec 64))
(declare-fun temp10286_88 () (_ BitVec 64))
(declare-fun temp10286_89 () (_ BitVec 64))
(declare-fun temp10286_90 () (_ BitVec 64))
(declare-fun temp10286_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10286_92 () (_ BitVec 64))
(declare-fun temp10286_93 () (_ BitVec 64))
(declare-fun temp10286_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10286_95 () (_ BitVec 64))
(declare-fun temp10286_96 () (_ BitVec 64))
(declare-fun temp10286_97 () (_ BitVec 64))
(declare-fun temp10286_98 () (_ BitVec 64))
(declare-fun temp10286_99 () (_ BitVec 64))
(declare-fun temp10286_100 () (_ BitVec 64))
(declare-fun temp10286_101 () (_ BitVec 64))
(declare-fun temp10286_102 () (_ BitVec 64))
(declare-fun temp10286_103 () (_ BitVec 64))
(declare-fun temp10286_104 () (_ BitVec 64))
(declare-fun temp10286_105 () (_ BitVec 64))
(declare-fun temp10286_106 () (_ BitVec 64))
(declare-fun temp10286_107 () (_ BitVec 64))
(declare-fun temp10286_108 () (_ BitVec 64))
(declare-fun temp10286_109 () (_ BitVec 64))
(declare-fun temp10286_110 () (_ BitVec 64))
(declare-fun temp10286_111 () (_ BitVec 64))
(declare-fun temp10286_112 () (_ BitVec 64))
(declare-fun temp10286_113 () (_ BitVec 64))
(declare-fun temp10286_114 () (_ BitVec 64))
(declare-fun temp10286_115 () (_ BitVec 64))
(declare-fun temp10286_116 () (_ BitVec 64))
(declare-fun temp10286_117 () (_ BitVec 64))
(declare-fun temp10286_118 () (_ BitVec 64))
(declare-fun temp10286_119 () (_ BitVec 64))
(declare-fun temp10286_120 () (_ BitVec 64))
(declare-fun temp10286_121 () (_ BitVec 64))
(declare-fun temp10286_122 () (_ BitVec 64))
(declare-fun temp10286_123 () (_ BitVec 64))
(declare-fun temp10286_124 () (_ BitVec 64))
(declare-fun temp10286_125 () (_ BitVec 64))
(declare-fun temp10286_126 () (_ BitVec 64))
(declare-fun temp10286_127 () (_ BitVec 64))
(declare-fun temp10286_128 () (_ BitVec 64))
(declare-fun temp10286_129 () (_ BitVec 64))
(declare-fun temp10286_130 () (_ BitVec 64))
(declare-fun temp10286_131 () (_ BitVec 64))
(declare-fun temp10286_132 () (_ BitVec 64))
(declare-fun temp10286_133 () (_ BitVec 64))
(declare-fun temp10286_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10286_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10286_136 () (_ BitVec 64))
(declare-fun temp10286_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10286_138 () (_ BitVec 64))
(declare-fun temp10286_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10286_140 () (_ BitVec 64))
(declare-fun temp10286_141 () (_ BitVec 64))
(declare-fun temp10286_142 () (_ BitVec 64))
(declare-fun temp10286_143 () (_ BitVec 64))
(declare-fun temp10286_144 () (_ BitVec 64))
(declare-fun temp10286_145 () (_ BitVec 64))
(declare-fun temp10286_146 () (_ BitVec 64))
(declare-fun temp10286_147 () (_ BitVec 64))
(declare-fun temp10286_148 () (_ BitVec 64))
(declare-fun temp10286_149 () (_ BitVec 64))
(declare-fun temp10286_150 () (_ BitVec 64))
(declare-fun temp10286_151 () (_ BitVec 64))
(declare-fun temp10286_152 () (_ BitVec 64))
(declare-fun temp10286_153 () (_ BitVec 64))
(declare-fun temp10286_154 () (_ BitVec 64))
(declare-fun temp10286_155 () (_ BitVec 64))
(declare-fun temp10286_157 () (_ BitVec 64))
(declare-fun temp10286_158 () (_ BitVec 64))
(declare-fun temp10286_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10286_159 () (_ BitVec 64))
(declare-fun temp10286_160 () (_ BitVec 64))
(declare-fun temp10286_162 () (_ BitVec 64))
(declare-fun temp10286_163 () (_ BitVec 64))
(declare-fun temp10286_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10286_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10286_165 () (_ BitVec 64))
(declare-fun temp10286_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10286_167 () (_ BitVec 64))
(declare-fun temp10286_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10286_169 () (_ BitVec 64))
(declare-fun temp10286_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10286_171 () (_ BitVec 64))
(declare-fun temp10286_172 () (_ BitVec 64))
(declare-fun temp10286_173 () (_ BitVec 64))
(declare-fun temp10286_174 () (_ BitVec 64))
(declare-fun temp10286_175 () (_ BitVec 64))
(declare-fun temp10286_176 () (_ BitVec 64))
(declare-fun temp10286_177 () (_ BitVec 64))
(declare-fun temp10286_178 () (_ BitVec 64))
(declare-fun temp10286_179 () (_ BitVec 64))
(declare-fun temp10286_180 () (_ BitVec 64))
(declare-fun temp10286_181 () (_ BitVec 64))
(declare-fun temp10286_182 () (_ BitVec 64))
(declare-fun temp10286_183 () (_ BitVec 64))
(declare-fun temp10286_184 () (_ BitVec 64))
(declare-fun temp10286_185 () (_ BitVec 64))
(declare-fun temp10286_186 () (_ BitVec 64))
(declare-fun temp10286_187 () (_ BitVec 64))
(declare-fun temp10286_188 () (_ BitVec 64))
(declare-fun temp10286_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10286_190 () (_ BitVec 64))
(declare-fun temp10286_192 () (_ BitVec 64))
(declare-fun temp10286_193 () (_ BitVec 64))
(declare-fun temp10286_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10286_194 () (_ BitVec 64))
(declare-fun temp10286_195 () (_ BitVec 64))
(declare-fun temp10286_197 () (_ BitVec 64))
(declare-fun temp10286_198 () (_ BitVec 64))
(declare-fun temp10286_196 () (_ BitVec 64))
(declare-fun temp10286_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10286_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10286_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10286_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10286_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10286_204 () (_ BitVec 64))
(declare-fun temp10286_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10286_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10286_207 () (_ BitVec 64))
(declare-fun temp10286_208 () (_ BitVec 64))
(declare-fun temp10286_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10286_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10286_211 () (_ BitVec 64))
(declare-fun temp10286_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10286_213 () (_ BitVec 64))
(declare-fun temp10286_214 () (_ BitVec 64))
(declare-fun temp10286_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10286_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10286_217 () (_ BitVec 64))
(declare-fun temp10286_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10286_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10286_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10286_221 () (_ BitVec 64))
(assert (= temp10286_1 #x0000000000000001))
(assert (= var77203 temp10286_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10286_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10286_2)))
(assert (= temp10286_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10286_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10286_4 #x0000000000000000))
(assert (= var210941 temp10286_4))
(assert (= temp10286_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10286_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10286_6 #x0000000000000000))
(assert (= var210986 temp10286_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10286_7 #x0000000000000000))
(assert (= temp10286_8 temp10286_7))
(assert (= temp10286_9 (select ARGNAME_padding_NAMEEND_VAL temp10286_8)))
(assert (= temp10286_10 #x0000000000000001))
(assert (= temp10286_11 temp10286_10))
(assert (= temp10286_12 (select ARGNAME_padding_NAMEEND_VAL temp10286_11)))
(assert (= temp10286_13 #x0000000000000002))
(assert (= temp10286_14 temp10286_13))
(assert (= temp10286_15 (select ARGNAME_padding_NAMEEND_VAL temp10286_14)))
(assert (= temp10286_16 #x0000000000000003))
(assert (= temp10286_17 temp10286_16))
(assert (= temp10286_18 (select ARGNAME_padding_NAMEEND_VAL temp10286_17)))
(assert (= temp10286_19 #x0000000000000004))
(assert (= temp10286_20 temp10286_19))
(assert (= temp10286_21 (select ARGNAME_padding_NAMEEND_VAL temp10286_20)))
(assert (= temp10286_22 #x0000000000000005))
(assert (= temp10286_23 temp10286_22))
(assert (= temp10286_24 (select ARGNAME_padding_NAMEEND_VAL temp10286_23)))
(assert (= temp10286_25 #x0000000000000000))
(assert (= temp10286_26 #x0000000000000000))
(assert (= temp10286_27 temp10286_26))
(assert (= temp10286_28 (select ARGNAME_padding_NAMEEND_VAL temp10286_27)))
(assert (= temp10286_29 #x0000000000000000))
(assert (= temp10286_30 #x0000000000000001))
(assert (= temp10286_31 temp10286_30))
(assert (= temp10286_32 (select ARGNAME_padding_NAMEEND_VAL temp10286_31)))
(assert (= temp10286_33 #x0000000000000000))
(assert (= temp10286_34 #x0000000000000002))
(assert (= temp10286_35 temp10286_34))
(assert (= temp10286_36 (select ARGNAME_padding_NAMEEND_VAL temp10286_35)))
(assert (= temp10286_37 #x0000000000000000))
(assert (= temp10286_38 #x0000000000000003))
(assert (= temp10286_39 temp10286_38))
(assert (= temp10286_40 (select ARGNAME_padding_NAMEEND_VAL temp10286_39)))
(assert (= temp10286_41 #x0000000000000000))
(assert (= temp10286_42 #x0000000000000004))
(assert (= temp10286_43 temp10286_42))
(assert (= temp10286_44 (select ARGNAME_padding_NAMEEND_VAL temp10286_43)))
(assert (= temp10286_45 #x0000000000000000))
(assert (= temp10286_46 #x0000000000000005))
(assert (= temp10286_47 temp10286_46))
(assert (= temp10286_48 (select ARGNAME_padding_NAMEEND_VAL temp10286_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10286_28 temp10286_25)
             (bvslt temp10286_32 temp10286_29)
             (bvslt temp10286_36 temp10286_33)
             (bvslt temp10286_40 temp10286_37)
             (bvslt temp10286_44 temp10286_41)
             (bvslt temp10286_48 temp10286_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10286_49 #x0000000000000000))
(assert (= var1191714 temp10286_49))
(assert (= temp10286_50 #x0000000000000000))
(assert (= temp10286_51 temp10286_50))
(assert (= temp10286_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10286_51)))
(assert (= temp10286_53 #x0000000000000001))
(assert (= temp10286_54 temp10286_53))
(assert (= temp10286_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10286_54)))
(assert (= temp10286_56 #x0000000000000002))
(assert (= temp10286_57 temp10286_56))
(assert (= temp10286_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10286_57)))
(assert (= temp10286_59 #x0000000000000003))
(assert (= temp10286_60 temp10286_59))
(assert (= temp10286_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10286_60)))
(assert (= temp10286_62 #x0000000000000004))
(assert (= temp10286_63 temp10286_62))
(assert (= temp10286_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10286_63)))
(assert (= temp10286_65 #x0000000000000005))
(assert (= temp10286_66 temp10286_65))
(assert (= temp10286_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10286_66)))
(assert (= temp10286_68 #x0000000000000000))
(assert (= temp10286_69 #x0000000000000000))
(assert (= temp10286_70 temp10286_69))
(assert (= temp10286_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10286_70)))
(assert (= temp10286_72 #x0000000000000000))
(assert (= temp10286_73 #x0000000000000001))
(assert (= temp10286_74 temp10286_73))
(assert (= temp10286_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10286_74)))
(assert (= temp10286_76 #x0000000000000000))
(assert (= temp10286_77 #x0000000000000002))
(assert (= temp10286_78 temp10286_77))
(assert (= temp10286_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10286_78)))
(assert (= temp10286_80 #x0000000000000000))
(assert (= temp10286_81 #x0000000000000003))
(assert (= temp10286_82 temp10286_81))
(assert (= temp10286_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10286_82)))
(assert (= temp10286_84 #x0000000000000000))
(assert (= temp10286_85 #x0000000000000004))
(assert (= temp10286_86 temp10286_85))
(assert (= temp10286_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10286_86)))
(assert (= temp10286_88 #x0000000000000000))
(assert (= temp10286_89 #x0000000000000005))
(assert (= temp10286_90 temp10286_89))
(assert (= temp10286_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10286_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10286_71 temp10286_68)
             (bvslt temp10286_75 temp10286_72)
             (bvslt temp10286_79 temp10286_76)
             (bvslt temp10286_83 temp10286_80)
             (bvslt temp10286_87 temp10286_84)
             (bvslt temp10286_91 temp10286_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10286_92 #x0000000000000000))
(assert (= var1191725 temp10286_92))
(assert (= temp10286_93 #x0000000000000000))
(assert (= temp10286_94 temp10286_93))
(assert (= temp10286_95 (select ARGNAME_stride_NAMEEND_VAL temp10286_94)))
(assert (= temp10286_96 #x0000000000000001))
(assert (= temp10286_97 temp10286_96))
(assert (= temp10286_98 (select ARGNAME_stride_NAMEEND_VAL temp10286_97)))
(assert (= temp10286_99 #x0000000000000002))
(assert (= temp10286_100 temp10286_99))
(assert (= temp10286_101 (select ARGNAME_stride_NAMEEND_VAL temp10286_100)))
(assert (= temp10286_102 #x0000000000000003))
(assert (= temp10286_103 temp10286_102))
(assert (= temp10286_104 (select ARGNAME_stride_NAMEEND_VAL temp10286_103)))
(assert (= temp10286_105 #x0000000000000004))
(assert (= temp10286_106 temp10286_105))
(assert (= temp10286_107 (select ARGNAME_stride_NAMEEND_VAL temp10286_106)))
(assert (= temp10286_108 #x0000000000000005))
(assert (= temp10286_109 temp10286_108))
(assert (= temp10286_110 (select ARGNAME_stride_NAMEEND_VAL temp10286_109)))
(assert (= temp10286_111 #x0000000000000000))
(assert (= temp10286_112 #x0000000000000000))
(assert (= temp10286_113 temp10286_112))
(assert (= temp10286_114 (select ARGNAME_stride_NAMEEND_VAL temp10286_113)))
(assert (= temp10286_115 #x0000000000000000))
(assert (= temp10286_116 #x0000000000000001))
(assert (= temp10286_117 temp10286_116))
(assert (= temp10286_118 (select ARGNAME_stride_NAMEEND_VAL temp10286_117)))
(assert (= temp10286_119 #x0000000000000000))
(assert (= temp10286_120 #x0000000000000002))
(assert (= temp10286_121 temp10286_120))
(assert (= temp10286_122 (select ARGNAME_stride_NAMEEND_VAL temp10286_121)))
(assert (= temp10286_123 #x0000000000000000))
(assert (= temp10286_124 #x0000000000000003))
(assert (= temp10286_125 temp10286_124))
(assert (= temp10286_126 (select ARGNAME_stride_NAMEEND_VAL temp10286_125)))
(assert (= temp10286_127 #x0000000000000000))
(assert (= temp10286_128 #x0000000000000004))
(assert (= temp10286_129 temp10286_128))
(assert (= temp10286_130 (select ARGNAME_stride_NAMEEND_VAL temp10286_129)))
(assert (= temp10286_131 #x0000000000000000))
(assert (= temp10286_132 #x0000000000000005))
(assert (= temp10286_133 temp10286_132))
(assert (= temp10286_134 (select ARGNAME_stride_NAMEEND_VAL temp10286_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10286_114 temp10286_111)
             (bvsle temp10286_118 temp10286_115)
             (bvsle temp10286_122 temp10286_119)
             (bvsle temp10286_126 temp10286_123)
             (bvsle temp10286_130 temp10286_127)
             (bvsle temp10286_134 temp10286_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10286_135 #x0000000000000000))
(assert (= var1191735 temp10286_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10286_136 #x0000000000000001))
(assert (= var1191747 temp10286_136))
(assert (= temp10286_137 #x0000000000000000))
(assert (= var1179826 temp10286_137))
(assert (= temp10286_138 #x0000000000000000))
(assert (= temp10286_139 temp10286_138))
(assert (= temp10286_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10286_139)))
(assert (= temp10286_141 #x0000000000000001))
(assert (= temp10286_142 temp10286_141))
(assert (= temp10286_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10286_142)))
(assert (= temp10286_144 #x0000000000000002))
(assert (= temp10286_145 temp10286_144))
(assert (= temp10286_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10286_145)))
(assert (= temp10286_147 #x0000000000000003))
(assert (= temp10286_148 temp10286_147))
(assert (= temp10286_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10286_148)))
(assert (= temp10286_150 #x0000000000000004))
(assert (= temp10286_151 temp10286_150))
(assert (= temp10286_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10286_151)))
(assert (= temp10286_153 #x0000000000000005))
(assert (= temp10286_154 temp10286_153))
(assert (= temp10286_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10286_154)))
(assert (= temp10286_157 var1179826))
(assert (= temp10286_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10286_157)))
(assert (= temp10286_156 temp10286_158))
(assert (= var1191780
   (ite (bvslt temp10286_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10286_159 #x0000000000000000))
(assert (= var1191780 temp10286_159))
(assert (= temp10286_160 #x0000000000000000))
(assert (= var1179826 temp10286_160))
(assert (= temp10286_162 var1179826))
(assert (= temp10286_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10286_162)))
(assert (= temp10286_161 temp10286_163))
(assert (= var1191802 (bvsmod temp10286_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10286_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10286_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10286_165 #x0000000000000001))
(assert (= var1191803 temp10286_165))
(assert (= temp10286_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10286_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10286_167 #x0000000000000001))
(assert (= var1191823 temp10286_167))
(assert (= temp10286_168 #x0000000000000001))
(assert (= var1180714 temp10286_168))
(assert (= temp10286_169 #x0000000000000000))
(assert (= temp10286_170 temp10286_169))
(assert (= temp10286_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10286_170)))
(assert (= temp10286_172 #x0000000000000001))
(assert (= temp10286_173 temp10286_172))
(assert (= temp10286_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10286_173)))
(assert (= temp10286_175 #x0000000000000002))
(assert (= temp10286_176 temp10286_175))
(assert (= temp10286_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10286_176)))
(assert (= temp10286_178 #x0000000000000003))
(assert (= temp10286_179 temp10286_178))
(assert (= temp10286_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10286_179)))
(assert (= temp10286_181 #x0000000000000004))
(assert (= temp10286_182 temp10286_181))
(assert (= temp10286_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10286_182)))
(assert (= temp10286_184 #x0000000000000005))
(assert (= temp10286_185 temp10286_184))
(assert (= temp10286_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10286_185)))
(assert (= temp10286_187 #x0000000000000000))
(assert (= temp10286_188
   (ite (bvslt var1180714 temp10286_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10286_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10286_188)))
(assert (= var1191831 temp10286_189))
(assert (bvslt (ite (bvslt var1180714 temp10286_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10286_190 #x0000000000000001))
(assert (= var1180714 temp10286_190))
(assert (= temp10286_192 var1180714))
(assert (= temp10286_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10286_192)))
(assert (= temp10286_191 temp10286_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10286_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10286_194 #x0000000000000001))
(assert (= var1191836 temp10286_194))
(assert (= temp10286_195 #x0000000000000000))
(assert (= var1179826 temp10286_195))
(assert (= temp10286_197 var1179826))
(assert (= temp10286_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10286_197)))
(assert (= temp10286_196 temp10286_198))
(assert (= temp10286_199 #x0000000000000002))
(assert (= var1586025 temp10286_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10286_200 #x0000000000000001))
(assert (= var1191993 temp10286_200))
(assert (= temp10286_201 #x0000000000000001))
(assert (= var2700303 temp10286_201))
(assert (= temp10286_202 #x0000000000000001))
(assert (= var2962447 temp10286_202))
(assert (= temp10286_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10286_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10286_204 #x0000000000000001))
(assert (= var211058 temp10286_204))
(assert (= temp10286_205 #x0000000000000001))
(assert (= var211188 temp10286_205))
(assert (= var3879401 var211188))
(assert (= temp10286_206 #x0000000000000000))
(assert (= var3866802 temp10286_206))
(assert (= temp10286_207 #x0000000000000000))
(assert (= temp10286_208
   (ite (bvslt var3866802 temp10286_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10286_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10286_208)))
(assert (= var3879420 temp10286_209))
(assert (bvslt (ite (bvslt var3866802 temp10286_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10286_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10286_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10286_211 #x0000000000000000))
(assert (= var3879421 temp10286_211))
(assert (= temp10286_212 #x0000000000000001))
(assert (= var3867690 temp10286_212))
(assert (= temp10286_213 #x0000000000000000))
(assert (= temp10286_214
   (ite (bvslt var3867690 temp10286_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10286_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10286_214)))
(assert (= var3879423 temp10286_215))
(assert (bvslt (ite (bvslt var3867690 temp10286_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10286_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10286_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10286_217 #x0000000000000001))
(assert (= var3879424 temp10286_217))
(assert (= temp10286_218 #x0000000000000000))
(assert (= var4079423 temp10286_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10286_219 #x0000000000000002))
(assert (= var4208259 temp10286_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10286_220 #x0000000000000000))
(assert (= var4273820 temp10286_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10286_221 #x0000000000000001))
(assert (= var211058 temp10286_221))
(model-add temp10286_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10286_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10286_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10286_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



