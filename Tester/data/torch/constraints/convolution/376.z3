(declare-fun temp501_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp501_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp501_3 () (_ BitVec 64))
(declare-fun temp501_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp501_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp501_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp501_7 () (_ BitVec 64))
(declare-fun temp501_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp501_9 () (_ BitVec 64))
(declare-fun temp501_10 () (_ BitVec 64))
(declare-fun temp501_11 () (_ BitVec 64))
(declare-fun temp501_12 () (_ BitVec 64))
(declare-fun temp501_13 () (_ BitVec 64))
(declare-fun temp501_14 () (_ BitVec 64))
(declare-fun temp501_15 () (_ BitVec 64))
(declare-fun temp501_16 () (_ BitVec 64))
(declare-fun temp501_17 () (_ BitVec 64))
(declare-fun temp501_18 () (_ BitVec 64))
(declare-fun temp501_19 () (_ BitVec 64))
(declare-fun temp501_20 () (_ BitVec 64))
(declare-fun temp501_21 () (_ BitVec 64))
(declare-fun temp501_22 () (_ BitVec 64))
(declare-fun temp501_23 () (_ BitVec 64))
(declare-fun temp501_24 () (_ BitVec 64))
(declare-fun temp501_25 () (_ BitVec 64))
(declare-fun temp501_26 () (_ BitVec 64))
(declare-fun temp501_27 () (_ BitVec 64))
(declare-fun temp501_28 () (_ BitVec 64))
(declare-fun temp501_29 () (_ BitVec 64))
(declare-fun temp501_30 () (_ BitVec 64))
(declare-fun temp501_31 () (_ BitVec 64))
(declare-fun temp501_32 () (_ BitVec 64))
(declare-fun temp501_33 () (_ BitVec 64))
(declare-fun temp501_34 () (_ BitVec 64))
(declare-fun temp501_35 () (_ BitVec 64))
(declare-fun temp501_36 () (_ BitVec 64))
(declare-fun temp501_37 () (_ BitVec 64))
(declare-fun temp501_38 () (_ BitVec 64))
(declare-fun temp501_39 () (_ BitVec 64))
(declare-fun temp501_40 () (_ BitVec 64))
(declare-fun temp501_41 () (_ BitVec 64))
(declare-fun temp501_42 () (_ BitVec 64))
(declare-fun temp501_43 () (_ BitVec 64))
(declare-fun temp501_44 () (_ BitVec 64))
(declare-fun temp501_45 () (_ BitVec 64))
(declare-fun temp501_46 () (_ BitVec 64))
(declare-fun temp501_47 () (_ BitVec 64))
(declare-fun temp501_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp501_49 () (_ BitVec 64))
(declare-fun temp501_50 () (_ BitVec 64))
(declare-fun temp501_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp501_52 () (_ BitVec 64))
(declare-fun temp501_53 () (_ BitVec 64))
(declare-fun temp501_54 () (_ BitVec 64))
(declare-fun temp501_55 () (_ BitVec 64))
(declare-fun temp501_56 () (_ BitVec 64))
(declare-fun temp501_57 () (_ BitVec 64))
(declare-fun temp501_58 () (_ BitVec 64))
(declare-fun temp501_59 () (_ BitVec 64))
(declare-fun temp501_60 () (_ BitVec 64))
(declare-fun temp501_61 () (_ BitVec 64))
(declare-fun temp501_62 () (_ BitVec 64))
(declare-fun temp501_63 () (_ BitVec 64))
(declare-fun temp501_64 () (_ BitVec 64))
(declare-fun temp501_65 () (_ BitVec 64))
(declare-fun temp501_66 () (_ BitVec 64))
(declare-fun temp501_67 () (_ BitVec 64))
(declare-fun temp501_68 () (_ BitVec 64))
(declare-fun temp501_69 () (_ BitVec 64))
(declare-fun temp501_70 () (_ BitVec 64))
(declare-fun temp501_71 () (_ BitVec 64))
(declare-fun temp501_72 () (_ BitVec 64))
(declare-fun temp501_73 () (_ BitVec 64))
(declare-fun temp501_74 () (_ BitVec 64))
(declare-fun temp501_75 () (_ BitVec 64))
(declare-fun temp501_76 () (_ BitVec 64))
(declare-fun temp501_77 () (_ BitVec 64))
(declare-fun temp501_78 () (_ BitVec 64))
(declare-fun temp501_79 () (_ BitVec 64))
(declare-fun temp501_80 () (_ BitVec 64))
(declare-fun temp501_81 () (_ BitVec 64))
(declare-fun temp501_82 () (_ BitVec 64))
(declare-fun temp501_83 () (_ BitVec 64))
(declare-fun temp501_84 () (_ BitVec 64))
(declare-fun temp501_85 () (_ BitVec 64))
(declare-fun temp501_86 () (_ BitVec 64))
(declare-fun temp501_87 () (_ BitVec 64))
(declare-fun temp501_88 () (_ BitVec 64))
(declare-fun temp501_89 () (_ BitVec 64))
(declare-fun temp501_90 () (_ BitVec 64))
(declare-fun temp501_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp501_92 () (_ BitVec 64))
(declare-fun temp501_93 () (_ BitVec 64))
(declare-fun temp501_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp501_95 () (_ BitVec 64))
(declare-fun temp501_96 () (_ BitVec 64))
(declare-fun temp501_97 () (_ BitVec 64))
(declare-fun temp501_98 () (_ BitVec 64))
(declare-fun temp501_99 () (_ BitVec 64))
(declare-fun temp501_100 () (_ BitVec 64))
(declare-fun temp501_101 () (_ BitVec 64))
(declare-fun temp501_102 () (_ BitVec 64))
(declare-fun temp501_103 () (_ BitVec 64))
(declare-fun temp501_104 () (_ BitVec 64))
(declare-fun temp501_105 () (_ BitVec 64))
(declare-fun temp501_106 () (_ BitVec 64))
(declare-fun temp501_107 () (_ BitVec 64))
(declare-fun temp501_108 () (_ BitVec 64))
(declare-fun temp501_109 () (_ BitVec 64))
(declare-fun temp501_110 () (_ BitVec 64))
(declare-fun temp501_111 () (_ BitVec 64))
(declare-fun temp501_112 () (_ BitVec 64))
(declare-fun temp501_113 () (_ BitVec 64))
(declare-fun temp501_114 () (_ BitVec 64))
(declare-fun temp501_115 () (_ BitVec 64))
(declare-fun temp501_116 () (_ BitVec 64))
(declare-fun temp501_117 () (_ BitVec 64))
(declare-fun temp501_118 () (_ BitVec 64))
(declare-fun temp501_119 () (_ BitVec 64))
(declare-fun temp501_120 () (_ BitVec 64))
(declare-fun temp501_121 () (_ BitVec 64))
(declare-fun temp501_122 () (_ BitVec 64))
(declare-fun temp501_123 () (_ BitVec 64))
(declare-fun temp501_124 () (_ BitVec 64))
(declare-fun temp501_125 () (_ BitVec 64))
(declare-fun temp501_126 () (_ BitVec 64))
(declare-fun temp501_127 () (_ BitVec 64))
(declare-fun temp501_128 () (_ BitVec 64))
(declare-fun temp501_129 () (_ BitVec 64))
(declare-fun temp501_130 () (_ BitVec 64))
(declare-fun temp501_131 () (_ BitVec 64))
(declare-fun temp501_132 () (_ BitVec 64))
(declare-fun temp501_133 () (_ BitVec 64))
(declare-fun temp501_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp501_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp501_136 () (_ BitVec 64))
(declare-fun temp501_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp501_138 () (_ BitVec 64))
(declare-fun temp501_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp501_140 () (_ BitVec 64))
(declare-fun temp501_141 () (_ BitVec 64))
(declare-fun temp501_142 () (_ BitVec 64))
(declare-fun temp501_143 () (_ BitVec 64))
(declare-fun temp501_144 () (_ BitVec 64))
(declare-fun temp501_145 () (_ BitVec 64))
(declare-fun temp501_146 () (_ BitVec 64))
(declare-fun temp501_147 () (_ BitVec 64))
(declare-fun temp501_148 () (_ BitVec 64))
(declare-fun temp501_149 () (_ BitVec 64))
(declare-fun temp501_150 () (_ BitVec 64))
(declare-fun temp501_151 () (_ BitVec 64))
(declare-fun temp501_152 () (_ BitVec 64))
(declare-fun temp501_153 () (_ BitVec 64))
(declare-fun temp501_154 () (_ BitVec 64))
(declare-fun temp501_155 () (_ BitVec 64))
(declare-fun temp501_157 () (_ BitVec 64))
(declare-fun temp501_158 () (_ BitVec 64))
(declare-fun temp501_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp501_159 () (_ BitVec 64))
(declare-fun temp501_160 () (_ BitVec 64))
(declare-fun temp501_162 () (_ BitVec 64))
(declare-fun temp501_163 () (_ BitVec 64))
(declare-fun temp501_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp501_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp501_165 () (_ BitVec 64))
(declare-fun temp501_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp501_167 () (_ BitVec 64))
(declare-fun temp501_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp501_169 () (_ BitVec 64))
(declare-fun temp501_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp501_171 () (_ BitVec 64))
(declare-fun temp501_172 () (_ BitVec 64))
(declare-fun temp501_173 () (_ BitVec 64))
(declare-fun temp501_174 () (_ BitVec 64))
(declare-fun temp501_175 () (_ BitVec 64))
(declare-fun temp501_176 () (_ BitVec 64))
(declare-fun temp501_177 () (_ BitVec 64))
(declare-fun temp501_178 () (_ BitVec 64))
(declare-fun temp501_179 () (_ BitVec 64))
(declare-fun temp501_180 () (_ BitVec 64))
(declare-fun temp501_181 () (_ BitVec 64))
(declare-fun temp501_182 () (_ BitVec 64))
(declare-fun temp501_183 () (_ BitVec 64))
(declare-fun temp501_184 () (_ BitVec 64))
(declare-fun temp501_185 () (_ BitVec 64))
(declare-fun temp501_186 () (_ BitVec 64))
(declare-fun temp501_187 () (_ BitVec 64))
(declare-fun temp501_188 () (_ BitVec 64))
(declare-fun temp501_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp501_190 () (_ BitVec 64))
(declare-fun temp501_192 () (_ BitVec 64))
(declare-fun temp501_193 () (_ BitVec 64))
(declare-fun temp501_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp501_194 () (_ BitVec 64))
(declare-fun temp501_195 () (_ BitVec 64))
(declare-fun temp501_197 () (_ BitVec 64))
(declare-fun temp501_198 () (_ BitVec 64))
(declare-fun temp501_196 () (_ BitVec 64))
(declare-fun temp501_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp501_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp501_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp501_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp501_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp501_204 () (_ BitVec 64))
(declare-fun temp501_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp501_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp501_207 () (_ BitVec 64))
(declare-fun temp501_208 () (_ BitVec 64))
(declare-fun temp501_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp501_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp501_211 () (_ BitVec 64))
(declare-fun temp501_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp501_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp501_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp501_215 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp501_216 () (_ BitVec 64))
(declare-fun temp501_217 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5060229 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun var5125773 () (_ BitVec 64))
(declare-fun temp501_218 () (_ BitVec 64))
(assert (= temp501_1 #x0000000000000001))
(assert (= var77203 temp501_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp501_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp501_2)))
(assert (= temp501_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp501_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_4 #x0000000000000000))
(assert (= var210941 temp501_4))
(assert (= temp501_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp501_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_6 #x0000000000000000))
(assert (= var210986 temp501_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp501_7 #x0000000000000000))
(assert (= temp501_8 temp501_7))
(assert (= temp501_9 (select ARGNAME_padding_NAMEEND_VAL temp501_8)))
(assert (= temp501_10 #x0000000000000001))
(assert (= temp501_11 temp501_10))
(assert (= temp501_12 (select ARGNAME_padding_NAMEEND_VAL temp501_11)))
(assert (= temp501_13 #x0000000000000002))
(assert (= temp501_14 temp501_13))
(assert (= temp501_15 (select ARGNAME_padding_NAMEEND_VAL temp501_14)))
(assert (= temp501_16 #x0000000000000003))
(assert (= temp501_17 temp501_16))
(assert (= temp501_18 (select ARGNAME_padding_NAMEEND_VAL temp501_17)))
(assert (= temp501_19 #x0000000000000004))
(assert (= temp501_20 temp501_19))
(assert (= temp501_21 (select ARGNAME_padding_NAMEEND_VAL temp501_20)))
(assert (= temp501_22 #x0000000000000005))
(assert (= temp501_23 temp501_22))
(assert (= temp501_24 (select ARGNAME_padding_NAMEEND_VAL temp501_23)))
(assert (= temp501_25 #x0000000000000000))
(assert (= temp501_26 #x0000000000000000))
(assert (= temp501_27 temp501_26))
(assert (= temp501_28 (select ARGNAME_padding_NAMEEND_VAL temp501_27)))
(assert (= temp501_29 #x0000000000000000))
(assert (= temp501_30 #x0000000000000001))
(assert (= temp501_31 temp501_30))
(assert (= temp501_32 (select ARGNAME_padding_NAMEEND_VAL temp501_31)))
(assert (= temp501_33 #x0000000000000000))
(assert (= temp501_34 #x0000000000000002))
(assert (= temp501_35 temp501_34))
(assert (= temp501_36 (select ARGNAME_padding_NAMEEND_VAL temp501_35)))
(assert (= temp501_37 #x0000000000000000))
(assert (= temp501_38 #x0000000000000003))
(assert (= temp501_39 temp501_38))
(assert (= temp501_40 (select ARGNAME_padding_NAMEEND_VAL temp501_39)))
(assert (= temp501_41 #x0000000000000000))
(assert (= temp501_42 #x0000000000000004))
(assert (= temp501_43 temp501_42))
(assert (= temp501_44 (select ARGNAME_padding_NAMEEND_VAL temp501_43)))
(assert (= temp501_45 #x0000000000000000))
(assert (= temp501_46 #x0000000000000005))
(assert (= temp501_47 temp501_46))
(assert (= temp501_48 (select ARGNAME_padding_NAMEEND_VAL temp501_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp501_28 temp501_25)
             (bvslt temp501_32 temp501_29)
             (bvslt temp501_36 temp501_33)
             (bvslt temp501_40 temp501_37)
             (bvslt temp501_44 temp501_41)
             (bvslt temp501_48 temp501_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_49 #x0000000000000000))
(assert (= var1191714 temp501_49))
(assert (= temp501_50 #x0000000000000000))
(assert (= temp501_51 temp501_50))
(assert (= temp501_52 (select ARGNAME_output_padding_NAMEEND_VAL temp501_51)))
(assert (= temp501_53 #x0000000000000001))
(assert (= temp501_54 temp501_53))
(assert (= temp501_55 (select ARGNAME_output_padding_NAMEEND_VAL temp501_54)))
(assert (= temp501_56 #x0000000000000002))
(assert (= temp501_57 temp501_56))
(assert (= temp501_58 (select ARGNAME_output_padding_NAMEEND_VAL temp501_57)))
(assert (= temp501_59 #x0000000000000003))
(assert (= temp501_60 temp501_59))
(assert (= temp501_61 (select ARGNAME_output_padding_NAMEEND_VAL temp501_60)))
(assert (= temp501_62 #x0000000000000004))
(assert (= temp501_63 temp501_62))
(assert (= temp501_64 (select ARGNAME_output_padding_NAMEEND_VAL temp501_63)))
(assert (= temp501_65 #x0000000000000005))
(assert (= temp501_66 temp501_65))
(assert (= temp501_67 (select ARGNAME_output_padding_NAMEEND_VAL temp501_66)))
(assert (= temp501_68 #x0000000000000000))
(assert (= temp501_69 #x0000000000000000))
(assert (= temp501_70 temp501_69))
(assert (= temp501_71 (select ARGNAME_output_padding_NAMEEND_VAL temp501_70)))
(assert (= temp501_72 #x0000000000000000))
(assert (= temp501_73 #x0000000000000001))
(assert (= temp501_74 temp501_73))
(assert (= temp501_75 (select ARGNAME_output_padding_NAMEEND_VAL temp501_74)))
(assert (= temp501_76 #x0000000000000000))
(assert (= temp501_77 #x0000000000000002))
(assert (= temp501_78 temp501_77))
(assert (= temp501_79 (select ARGNAME_output_padding_NAMEEND_VAL temp501_78)))
(assert (= temp501_80 #x0000000000000000))
(assert (= temp501_81 #x0000000000000003))
(assert (= temp501_82 temp501_81))
(assert (= temp501_83 (select ARGNAME_output_padding_NAMEEND_VAL temp501_82)))
(assert (= temp501_84 #x0000000000000000))
(assert (= temp501_85 #x0000000000000004))
(assert (= temp501_86 temp501_85))
(assert (= temp501_87 (select ARGNAME_output_padding_NAMEEND_VAL temp501_86)))
(assert (= temp501_88 #x0000000000000000))
(assert (= temp501_89 #x0000000000000005))
(assert (= temp501_90 temp501_89))
(assert (= temp501_91 (select ARGNAME_output_padding_NAMEEND_VAL temp501_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp501_71 temp501_68)
             (bvslt temp501_75 temp501_72)
             (bvslt temp501_79 temp501_76)
             (bvslt temp501_83 temp501_80)
             (bvslt temp501_87 temp501_84)
             (bvslt temp501_91 temp501_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_92 #x0000000000000000))
(assert (= var1191725 temp501_92))
(assert (= temp501_93 #x0000000000000000))
(assert (= temp501_94 temp501_93))
(assert (= temp501_95 (select ARGNAME_stride_NAMEEND_VAL temp501_94)))
(assert (= temp501_96 #x0000000000000001))
(assert (= temp501_97 temp501_96))
(assert (= temp501_98 (select ARGNAME_stride_NAMEEND_VAL temp501_97)))
(assert (= temp501_99 #x0000000000000002))
(assert (= temp501_100 temp501_99))
(assert (= temp501_101 (select ARGNAME_stride_NAMEEND_VAL temp501_100)))
(assert (= temp501_102 #x0000000000000003))
(assert (= temp501_103 temp501_102))
(assert (= temp501_104 (select ARGNAME_stride_NAMEEND_VAL temp501_103)))
(assert (= temp501_105 #x0000000000000004))
(assert (= temp501_106 temp501_105))
(assert (= temp501_107 (select ARGNAME_stride_NAMEEND_VAL temp501_106)))
(assert (= temp501_108 #x0000000000000005))
(assert (= temp501_109 temp501_108))
(assert (= temp501_110 (select ARGNAME_stride_NAMEEND_VAL temp501_109)))
(assert (= temp501_111 #x0000000000000000))
(assert (= temp501_112 #x0000000000000000))
(assert (= temp501_113 temp501_112))
(assert (= temp501_114 (select ARGNAME_stride_NAMEEND_VAL temp501_113)))
(assert (= temp501_115 #x0000000000000000))
(assert (= temp501_116 #x0000000000000001))
(assert (= temp501_117 temp501_116))
(assert (= temp501_118 (select ARGNAME_stride_NAMEEND_VAL temp501_117)))
(assert (= temp501_119 #x0000000000000000))
(assert (= temp501_120 #x0000000000000002))
(assert (= temp501_121 temp501_120))
(assert (= temp501_122 (select ARGNAME_stride_NAMEEND_VAL temp501_121)))
(assert (= temp501_123 #x0000000000000000))
(assert (= temp501_124 #x0000000000000003))
(assert (= temp501_125 temp501_124))
(assert (= temp501_126 (select ARGNAME_stride_NAMEEND_VAL temp501_125)))
(assert (= temp501_127 #x0000000000000000))
(assert (= temp501_128 #x0000000000000004))
(assert (= temp501_129 temp501_128))
(assert (= temp501_130 (select ARGNAME_stride_NAMEEND_VAL temp501_129)))
(assert (= temp501_131 #x0000000000000000))
(assert (= temp501_132 #x0000000000000005))
(assert (= temp501_133 temp501_132))
(assert (= temp501_134 (select ARGNAME_stride_NAMEEND_VAL temp501_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp501_114 temp501_111)
             (bvsle temp501_118 temp501_115)
             (bvsle temp501_122 temp501_119)
             (bvsle temp501_126 temp501_123)
             (bvsle temp501_130 temp501_127)
             (bvsle temp501_134 temp501_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_135 #x0000000000000000))
(assert (= var1191735 temp501_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_136 #x0000000000000001))
(assert (= var1191747 temp501_136))
(assert (= temp501_137 #x0000000000000000))
(assert (= var1179826 temp501_137))
(assert (= temp501_138 #x0000000000000000))
(assert (= temp501_139 temp501_138))
(assert (= temp501_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp501_139)))
(assert (= temp501_141 #x0000000000000001))
(assert (= temp501_142 temp501_141))
(assert (= temp501_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp501_142)))
(assert (= temp501_144 #x0000000000000002))
(assert (= temp501_145 temp501_144))
(assert (= temp501_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp501_145)))
(assert (= temp501_147 #x0000000000000003))
(assert (= temp501_148 temp501_147))
(assert (= temp501_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp501_148)))
(assert (= temp501_150 #x0000000000000004))
(assert (= temp501_151 temp501_150))
(assert (= temp501_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp501_151)))
(assert (= temp501_153 #x0000000000000005))
(assert (= temp501_154 temp501_153))
(assert (= temp501_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp501_154)))
(assert (= temp501_157 var1179826))
(assert (= temp501_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp501_157)))
(assert (= temp501_156 temp501_158))
(assert (= var1191780
   (ite (bvslt temp501_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_159 #x0000000000000000))
(assert (= var1191780 temp501_159))
(assert (= temp501_160 #x0000000000000000))
(assert (= var1179826 temp501_160))
(assert (= temp501_162 var1179826))
(assert (= temp501_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp501_162)))
(assert (= temp501_161 temp501_163))
(assert (= var1191802 (bvsmod temp501_161 ARGNAME_groups_NAMEEND)))
(assert (= temp501_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp501_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp501_165 #x0000000000000001))
(assert (= var1191803 temp501_165))
(assert (= temp501_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp501_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_167 #x0000000000000001))
(assert (= var1191823 temp501_167))
(assert (= temp501_168 #x0000000000000001))
(assert (= var1180714 temp501_168))
(assert (= temp501_169 #x0000000000000000))
(assert (= temp501_170 temp501_169))
(assert (= temp501_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp501_170)))
(assert (= temp501_172 #x0000000000000001))
(assert (= temp501_173 temp501_172))
(assert (= temp501_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp501_173)))
(assert (= temp501_175 #x0000000000000002))
(assert (= temp501_176 temp501_175))
(assert (= temp501_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp501_176)))
(assert (= temp501_178 #x0000000000000003))
(assert (= temp501_179 temp501_178))
(assert (= temp501_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp501_179)))
(assert (= temp501_181 #x0000000000000004))
(assert (= temp501_182 temp501_181))
(assert (= temp501_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp501_182)))
(assert (= temp501_184 #x0000000000000005))
(assert (= temp501_185 temp501_184))
(assert (= temp501_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp501_185)))
(assert (= temp501_187 #x0000000000000000))
(assert (= temp501_188
   (ite (bvslt var1180714 temp501_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp501_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp501_188)))
(assert (= var1191831 temp501_189))
(assert (bvslt (ite (bvslt var1180714 temp501_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp501_190 #x0000000000000001))
(assert (= var1180714 temp501_190))
(assert (= temp501_192 var1180714))
(assert (= temp501_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp501_192)))
(assert (= temp501_191 temp501_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp501_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp501_194 #x0000000000000001))
(assert (= var1191836 temp501_194))
(assert (= temp501_195 #x0000000000000000))
(assert (= var1179826 temp501_195))
(assert (= temp501_197 var1179826))
(assert (= temp501_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp501_197)))
(assert (= temp501_196 temp501_198))
(assert (= temp501_199 #x0000000000000002))
(assert (= var1586025 temp501_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp501_200 #x0000000000000001))
(assert (= var1191993 temp501_200))
(assert (= temp501_201 #x0000000000000001))
(assert (= var2700303 temp501_201))
(assert (= temp501_202 #x0000000000000001))
(assert (= var2962447 temp501_202))
(assert (= temp501_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp501_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_204 #x0000000000000001))
(assert (= var211058 temp501_204))
(assert (= temp501_205 #x0000000000000001))
(assert (= var211188 temp501_205))
(assert (= var3879401 var211188))
(assert (= temp501_206 #x0000000000000000))
(assert (= var3866802 temp501_206))
(assert (= temp501_207 #x0000000000000000))
(assert (= temp501_208
   (ite (bvslt var3866802 temp501_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp501_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp501_208)))
(assert (= var3879420 temp501_209))
(assert (bvslt (ite (bvslt var3866802 temp501_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp501_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp501_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp501_211 #x0000000000000001))
(assert (= var3879421 temp501_211))
(assert (= temp501_212 #x0000000000000000))
(assert (= var4079423 temp501_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp501_213 #x0000000000000002))
(assert (= var4208259 temp501_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_214 #x0000000000000000))
(assert (= var4273820 temp501_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp501_215 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp501_215)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp501_216 #x0000000000000001))
(assert (= var212414 temp501_216))
(assert (= temp501_217 #x0000000000000002))
(assert (= var5060227 temp501_217))
(assert (= var5060229 (bvsub ARGNAME_weight_NAMEEND_DIM var5060227)))
(assert (= var5125772 var5060227))
(assert (= var5125773 var5060229))
(assert (= temp501_218 #x0000000000000001))
(assert (= var211058 temp501_218))
(model-add temp501_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp501_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp501_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp501_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





