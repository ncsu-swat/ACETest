(declare-fun temp1069_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1069_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1069_3 () (_ BitVec 64))
(declare-fun temp1069_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1069_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1069_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1069_7 () (_ BitVec 64))
(declare-fun temp1069_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1069_9 () (_ BitVec 64))
(declare-fun temp1069_10 () (_ BitVec 64))
(declare-fun temp1069_11 () (_ BitVec 64))
(declare-fun temp1069_12 () (_ BitVec 64))
(declare-fun temp1069_13 () (_ BitVec 64))
(declare-fun temp1069_14 () (_ BitVec 64))
(declare-fun temp1069_15 () (_ BitVec 64))
(declare-fun temp1069_16 () (_ BitVec 64))
(declare-fun temp1069_17 () (_ BitVec 64))
(declare-fun temp1069_18 () (_ BitVec 64))
(declare-fun temp1069_19 () (_ BitVec 64))
(declare-fun temp1069_20 () (_ BitVec 64))
(declare-fun temp1069_21 () (_ BitVec 64))
(declare-fun temp1069_22 () (_ BitVec 64))
(declare-fun temp1069_23 () (_ BitVec 64))
(declare-fun temp1069_24 () (_ BitVec 64))
(declare-fun temp1069_25 () (_ BitVec 64))
(declare-fun temp1069_26 () (_ BitVec 64))
(declare-fun temp1069_27 () (_ BitVec 64))
(declare-fun temp1069_28 () (_ BitVec 64))
(declare-fun temp1069_29 () (_ BitVec 64))
(declare-fun temp1069_30 () (_ BitVec 64))
(declare-fun temp1069_31 () (_ BitVec 64))
(declare-fun temp1069_32 () (_ BitVec 64))
(declare-fun temp1069_33 () (_ BitVec 64))
(declare-fun temp1069_34 () (_ BitVec 64))
(declare-fun temp1069_35 () (_ BitVec 64))
(declare-fun temp1069_36 () (_ BitVec 64))
(declare-fun temp1069_37 () (_ BitVec 64))
(declare-fun temp1069_38 () (_ BitVec 64))
(declare-fun temp1069_39 () (_ BitVec 64))
(declare-fun temp1069_40 () (_ BitVec 64))
(declare-fun temp1069_41 () (_ BitVec 64))
(declare-fun temp1069_42 () (_ BitVec 64))
(declare-fun temp1069_43 () (_ BitVec 64))
(declare-fun temp1069_44 () (_ BitVec 64))
(declare-fun temp1069_45 () (_ BitVec 64))
(declare-fun temp1069_46 () (_ BitVec 64))
(declare-fun temp1069_47 () (_ BitVec 64))
(declare-fun temp1069_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1069_49 () (_ BitVec 64))
(declare-fun temp1069_50 () (_ BitVec 64))
(declare-fun temp1069_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1069_52 () (_ BitVec 64))
(declare-fun temp1069_53 () (_ BitVec 64))
(declare-fun temp1069_54 () (_ BitVec 64))
(declare-fun temp1069_55 () (_ BitVec 64))
(declare-fun temp1069_56 () (_ BitVec 64))
(declare-fun temp1069_57 () (_ BitVec 64))
(declare-fun temp1069_58 () (_ BitVec 64))
(declare-fun temp1069_59 () (_ BitVec 64))
(declare-fun temp1069_60 () (_ BitVec 64))
(declare-fun temp1069_61 () (_ BitVec 64))
(declare-fun temp1069_62 () (_ BitVec 64))
(declare-fun temp1069_63 () (_ BitVec 64))
(declare-fun temp1069_64 () (_ BitVec 64))
(declare-fun temp1069_65 () (_ BitVec 64))
(declare-fun temp1069_66 () (_ BitVec 64))
(declare-fun temp1069_67 () (_ BitVec 64))
(declare-fun temp1069_68 () (_ BitVec 64))
(declare-fun temp1069_69 () (_ BitVec 64))
(declare-fun temp1069_70 () (_ BitVec 64))
(declare-fun temp1069_71 () (_ BitVec 64))
(declare-fun temp1069_72 () (_ BitVec 64))
(declare-fun temp1069_73 () (_ BitVec 64))
(declare-fun temp1069_74 () (_ BitVec 64))
(declare-fun temp1069_75 () (_ BitVec 64))
(declare-fun temp1069_76 () (_ BitVec 64))
(declare-fun temp1069_77 () (_ BitVec 64))
(declare-fun temp1069_78 () (_ BitVec 64))
(declare-fun temp1069_79 () (_ BitVec 64))
(declare-fun temp1069_80 () (_ BitVec 64))
(declare-fun temp1069_81 () (_ BitVec 64))
(declare-fun temp1069_82 () (_ BitVec 64))
(declare-fun temp1069_83 () (_ BitVec 64))
(declare-fun temp1069_84 () (_ BitVec 64))
(declare-fun temp1069_85 () (_ BitVec 64))
(declare-fun temp1069_86 () (_ BitVec 64))
(declare-fun temp1069_87 () (_ BitVec 64))
(declare-fun temp1069_88 () (_ BitVec 64))
(declare-fun temp1069_89 () (_ BitVec 64))
(declare-fun temp1069_90 () (_ BitVec 64))
(declare-fun temp1069_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1069_92 () (_ BitVec 64))
(declare-fun temp1069_93 () (_ BitVec 64))
(declare-fun temp1069_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1069_95 () (_ BitVec 64))
(declare-fun temp1069_96 () (_ BitVec 64))
(declare-fun temp1069_97 () (_ BitVec 64))
(declare-fun temp1069_98 () (_ BitVec 64))
(declare-fun temp1069_99 () (_ BitVec 64))
(declare-fun temp1069_100 () (_ BitVec 64))
(declare-fun temp1069_101 () (_ BitVec 64))
(declare-fun temp1069_102 () (_ BitVec 64))
(declare-fun temp1069_103 () (_ BitVec 64))
(declare-fun temp1069_104 () (_ BitVec 64))
(declare-fun temp1069_105 () (_ BitVec 64))
(declare-fun temp1069_106 () (_ BitVec 64))
(declare-fun temp1069_107 () (_ BitVec 64))
(declare-fun temp1069_108 () (_ BitVec 64))
(declare-fun temp1069_109 () (_ BitVec 64))
(declare-fun temp1069_110 () (_ BitVec 64))
(declare-fun temp1069_111 () (_ BitVec 64))
(declare-fun temp1069_112 () (_ BitVec 64))
(declare-fun temp1069_113 () (_ BitVec 64))
(declare-fun temp1069_114 () (_ BitVec 64))
(declare-fun temp1069_115 () (_ BitVec 64))
(declare-fun temp1069_116 () (_ BitVec 64))
(declare-fun temp1069_117 () (_ BitVec 64))
(declare-fun temp1069_118 () (_ BitVec 64))
(declare-fun temp1069_119 () (_ BitVec 64))
(declare-fun temp1069_120 () (_ BitVec 64))
(declare-fun temp1069_121 () (_ BitVec 64))
(declare-fun temp1069_122 () (_ BitVec 64))
(declare-fun temp1069_123 () (_ BitVec 64))
(declare-fun temp1069_124 () (_ BitVec 64))
(declare-fun temp1069_125 () (_ BitVec 64))
(declare-fun temp1069_126 () (_ BitVec 64))
(declare-fun temp1069_127 () (_ BitVec 64))
(declare-fun temp1069_128 () (_ BitVec 64))
(declare-fun temp1069_129 () (_ BitVec 64))
(declare-fun temp1069_130 () (_ BitVec 64))
(declare-fun temp1069_131 () (_ BitVec 64))
(declare-fun temp1069_132 () (_ BitVec 64))
(declare-fun temp1069_133 () (_ BitVec 64))
(declare-fun temp1069_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1069_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1069_136 () (_ BitVec 64))
(declare-fun temp1069_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1069_138 () (_ BitVec 64))
(declare-fun temp1069_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1069_140 () (_ BitVec 64))
(declare-fun temp1069_141 () (_ BitVec 64))
(declare-fun temp1069_142 () (_ BitVec 64))
(declare-fun temp1069_143 () (_ BitVec 64))
(declare-fun temp1069_144 () (_ BitVec 64))
(declare-fun temp1069_145 () (_ BitVec 64))
(declare-fun temp1069_146 () (_ BitVec 64))
(declare-fun temp1069_147 () (_ BitVec 64))
(declare-fun temp1069_148 () (_ BitVec 64))
(declare-fun temp1069_149 () (_ BitVec 64))
(declare-fun temp1069_150 () (_ BitVec 64))
(declare-fun temp1069_151 () (_ BitVec 64))
(declare-fun temp1069_152 () (_ BitVec 64))
(declare-fun temp1069_153 () (_ BitVec 64))
(declare-fun temp1069_154 () (_ BitVec 64))
(declare-fun temp1069_155 () (_ BitVec 64))
(declare-fun temp1069_157 () (_ BitVec 64))
(declare-fun temp1069_158 () (_ BitVec 64))
(declare-fun temp1069_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1069_159 () (_ BitVec 64))
(declare-fun temp1069_160 () (_ BitVec 64))
(declare-fun temp1069_162 () (_ BitVec 64))
(declare-fun temp1069_163 () (_ BitVec 64))
(declare-fun temp1069_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1069_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1069_165 () (_ BitVec 64))
(declare-fun temp1069_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1069_167 () (_ BitVec 64))
(declare-fun temp1069_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1069_169 () (_ BitVec 64))
(declare-fun temp1069_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1069_171 () (_ BitVec 64))
(declare-fun temp1069_172 () (_ BitVec 64))
(declare-fun temp1069_173 () (_ BitVec 64))
(declare-fun temp1069_174 () (_ BitVec 64))
(declare-fun temp1069_175 () (_ BitVec 64))
(declare-fun temp1069_176 () (_ BitVec 64))
(declare-fun temp1069_177 () (_ BitVec 64))
(declare-fun temp1069_178 () (_ BitVec 64))
(declare-fun temp1069_179 () (_ BitVec 64))
(declare-fun temp1069_180 () (_ BitVec 64))
(declare-fun temp1069_181 () (_ BitVec 64))
(declare-fun temp1069_182 () (_ BitVec 64))
(declare-fun temp1069_183 () (_ BitVec 64))
(declare-fun temp1069_184 () (_ BitVec 64))
(declare-fun temp1069_185 () (_ BitVec 64))
(declare-fun temp1069_186 () (_ BitVec 64))
(declare-fun temp1069_187 () (_ BitVec 64))
(declare-fun temp1069_188 () (_ BitVec 64))
(declare-fun temp1069_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1069_190 () (_ BitVec 64))
(declare-fun temp1069_192 () (_ BitVec 64))
(declare-fun temp1069_193 () (_ BitVec 64))
(declare-fun temp1069_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1069_194 () (_ BitVec 64))
(declare-fun temp1069_195 () (_ BitVec 64))
(declare-fun temp1069_197 () (_ BitVec 64))
(declare-fun temp1069_198 () (_ BitVec 64))
(declare-fun temp1069_196 () (_ BitVec 64))
(declare-fun temp1069_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1069_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1069_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1069_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1069_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1069_204 () (_ BitVec 64))
(declare-fun temp1069_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1069_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1069_207 () (_ BitVec 64))
(declare-fun temp1069_208 () (_ BitVec 64))
(declare-fun temp1069_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1069_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1069_211 () (_ BitVec 64))
(declare-fun temp1069_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1069_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1069_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp1069_215 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp1069_216 () (_ BitVec 64))
(declare-fun temp1069_217 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5060229 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun var5125773 () (_ BitVec 64))
(declare-fun temp1069_218 () (_ BitVec 64))
(assert (= temp1069_1 #x0000000000000001))
(assert (= var77203 temp1069_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1069_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1069_2)))
(assert (= temp1069_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1069_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1069_4 #x0000000000000000))
(assert (= var210941 temp1069_4))
(assert (= temp1069_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1069_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1069_6 #x0000000000000000))
(assert (= var210986 temp1069_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1069_7 #x0000000000000000))
(assert (= temp1069_8 temp1069_7))
(assert (= temp1069_9 (select ARGNAME_padding_NAMEEND_VAL temp1069_8)))
(assert (= temp1069_10 #x0000000000000001))
(assert (= temp1069_11 temp1069_10))
(assert (= temp1069_12 (select ARGNAME_padding_NAMEEND_VAL temp1069_11)))
(assert (= temp1069_13 #x0000000000000002))
(assert (= temp1069_14 temp1069_13))
(assert (= temp1069_15 (select ARGNAME_padding_NAMEEND_VAL temp1069_14)))
(assert (= temp1069_16 #x0000000000000003))
(assert (= temp1069_17 temp1069_16))
(assert (= temp1069_18 (select ARGNAME_padding_NAMEEND_VAL temp1069_17)))
(assert (= temp1069_19 #x0000000000000004))
(assert (= temp1069_20 temp1069_19))
(assert (= temp1069_21 (select ARGNAME_padding_NAMEEND_VAL temp1069_20)))
(assert (= temp1069_22 #x0000000000000005))
(assert (= temp1069_23 temp1069_22))
(assert (= temp1069_24 (select ARGNAME_padding_NAMEEND_VAL temp1069_23)))
(assert (= temp1069_25 #x0000000000000000))
(assert (= temp1069_26 #x0000000000000000))
(assert (= temp1069_27 temp1069_26))
(assert (= temp1069_28 (select ARGNAME_padding_NAMEEND_VAL temp1069_27)))
(assert (= temp1069_29 #x0000000000000000))
(assert (= temp1069_30 #x0000000000000001))
(assert (= temp1069_31 temp1069_30))
(assert (= temp1069_32 (select ARGNAME_padding_NAMEEND_VAL temp1069_31)))
(assert (= temp1069_33 #x0000000000000000))
(assert (= temp1069_34 #x0000000000000002))
(assert (= temp1069_35 temp1069_34))
(assert (= temp1069_36 (select ARGNAME_padding_NAMEEND_VAL temp1069_35)))
(assert (= temp1069_37 #x0000000000000000))
(assert (= temp1069_38 #x0000000000000003))
(assert (= temp1069_39 temp1069_38))
(assert (= temp1069_40 (select ARGNAME_padding_NAMEEND_VAL temp1069_39)))
(assert (= temp1069_41 #x0000000000000000))
(assert (= temp1069_42 #x0000000000000004))
(assert (= temp1069_43 temp1069_42))
(assert (= temp1069_44 (select ARGNAME_padding_NAMEEND_VAL temp1069_43)))
(assert (= temp1069_45 #x0000000000000000))
(assert (= temp1069_46 #x0000000000000005))
(assert (= temp1069_47 temp1069_46))
(assert (= temp1069_48 (select ARGNAME_padding_NAMEEND_VAL temp1069_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1069_28 temp1069_25)
             (bvslt temp1069_32 temp1069_29)
             (bvslt temp1069_36 temp1069_33)
             (bvslt temp1069_40 temp1069_37)
             (bvslt temp1069_44 temp1069_41)
             (bvslt temp1069_48 temp1069_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1069_49 #x0000000000000000))
(assert (= var1191714 temp1069_49))
(assert (= temp1069_50 #x0000000000000000))
(assert (= temp1069_51 temp1069_50))
(assert (= temp1069_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1069_51)))
(assert (= temp1069_53 #x0000000000000001))
(assert (= temp1069_54 temp1069_53))
(assert (= temp1069_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1069_54)))
(assert (= temp1069_56 #x0000000000000002))
(assert (= temp1069_57 temp1069_56))
(assert (= temp1069_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1069_57)))
(assert (= temp1069_59 #x0000000000000003))
(assert (= temp1069_60 temp1069_59))
(assert (= temp1069_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1069_60)))
(assert (= temp1069_62 #x0000000000000004))
(assert (= temp1069_63 temp1069_62))
(assert (= temp1069_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1069_63)))
(assert (= temp1069_65 #x0000000000000005))
(assert (= temp1069_66 temp1069_65))
(assert (= temp1069_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1069_66)))
(assert (= temp1069_68 #x0000000000000000))
(assert (= temp1069_69 #x0000000000000000))
(assert (= temp1069_70 temp1069_69))
(assert (= temp1069_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1069_70)))
(assert (= temp1069_72 #x0000000000000000))
(assert (= temp1069_73 #x0000000000000001))
(assert (= temp1069_74 temp1069_73))
(assert (= temp1069_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1069_74)))
(assert (= temp1069_76 #x0000000000000000))
(assert (= temp1069_77 #x0000000000000002))
(assert (= temp1069_78 temp1069_77))
(assert (= temp1069_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1069_78)))
(assert (= temp1069_80 #x0000000000000000))
(assert (= temp1069_81 #x0000000000000003))
(assert (= temp1069_82 temp1069_81))
(assert (= temp1069_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1069_82)))
(assert (= temp1069_84 #x0000000000000000))
(assert (= temp1069_85 #x0000000000000004))
(assert (= temp1069_86 temp1069_85))
(assert (= temp1069_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1069_86)))
(assert (= temp1069_88 #x0000000000000000))
(assert (= temp1069_89 #x0000000000000005))
(assert (= temp1069_90 temp1069_89))
(assert (= temp1069_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1069_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1069_71 temp1069_68)
             (bvslt temp1069_75 temp1069_72)
             (bvslt temp1069_79 temp1069_76)
             (bvslt temp1069_83 temp1069_80)
             (bvslt temp1069_87 temp1069_84)
             (bvslt temp1069_91 temp1069_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1069_92 #x0000000000000000))
(assert (= var1191725 temp1069_92))
(assert (= temp1069_93 #x0000000000000000))
(assert (= temp1069_94 temp1069_93))
(assert (= temp1069_95 (select ARGNAME_stride_NAMEEND_VAL temp1069_94)))
(assert (= temp1069_96 #x0000000000000001))
(assert (= temp1069_97 temp1069_96))
(assert (= temp1069_98 (select ARGNAME_stride_NAMEEND_VAL temp1069_97)))
(assert (= temp1069_99 #x0000000000000002))
(assert (= temp1069_100 temp1069_99))
(assert (= temp1069_101 (select ARGNAME_stride_NAMEEND_VAL temp1069_100)))
(assert (= temp1069_102 #x0000000000000003))
(assert (= temp1069_103 temp1069_102))
(assert (= temp1069_104 (select ARGNAME_stride_NAMEEND_VAL temp1069_103)))
(assert (= temp1069_105 #x0000000000000004))
(assert (= temp1069_106 temp1069_105))
(assert (= temp1069_107 (select ARGNAME_stride_NAMEEND_VAL temp1069_106)))
(assert (= temp1069_108 #x0000000000000005))
(assert (= temp1069_109 temp1069_108))
(assert (= temp1069_110 (select ARGNAME_stride_NAMEEND_VAL temp1069_109)))
(assert (= temp1069_111 #x0000000000000000))
(assert (= temp1069_112 #x0000000000000000))
(assert (= temp1069_113 temp1069_112))
(assert (= temp1069_114 (select ARGNAME_stride_NAMEEND_VAL temp1069_113)))
(assert (= temp1069_115 #x0000000000000000))
(assert (= temp1069_116 #x0000000000000001))
(assert (= temp1069_117 temp1069_116))
(assert (= temp1069_118 (select ARGNAME_stride_NAMEEND_VAL temp1069_117)))
(assert (= temp1069_119 #x0000000000000000))
(assert (= temp1069_120 #x0000000000000002))
(assert (= temp1069_121 temp1069_120))
(assert (= temp1069_122 (select ARGNAME_stride_NAMEEND_VAL temp1069_121)))
(assert (= temp1069_123 #x0000000000000000))
(assert (= temp1069_124 #x0000000000000003))
(assert (= temp1069_125 temp1069_124))
(assert (= temp1069_126 (select ARGNAME_stride_NAMEEND_VAL temp1069_125)))
(assert (= temp1069_127 #x0000000000000000))
(assert (= temp1069_128 #x0000000000000004))
(assert (= temp1069_129 temp1069_128))
(assert (= temp1069_130 (select ARGNAME_stride_NAMEEND_VAL temp1069_129)))
(assert (= temp1069_131 #x0000000000000000))
(assert (= temp1069_132 #x0000000000000005))
(assert (= temp1069_133 temp1069_132))
(assert (= temp1069_134 (select ARGNAME_stride_NAMEEND_VAL temp1069_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1069_114 temp1069_111)
             (bvsle temp1069_118 temp1069_115)
             (bvsle temp1069_122 temp1069_119)
             (bvsle temp1069_126 temp1069_123)
             (bvsle temp1069_130 temp1069_127)
             (bvsle temp1069_134 temp1069_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1069_135 #x0000000000000000))
(assert (= var1191735 temp1069_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1069_136 #x0000000000000001))
(assert (= var1191747 temp1069_136))
(assert (= temp1069_137 #x0000000000000000))
(assert (= var1179826 temp1069_137))
(assert (= temp1069_138 #x0000000000000000))
(assert (= temp1069_139 temp1069_138))
(assert (= temp1069_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1069_139)))
(assert (= temp1069_141 #x0000000000000001))
(assert (= temp1069_142 temp1069_141))
(assert (= temp1069_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1069_142)))
(assert (= temp1069_144 #x0000000000000002))
(assert (= temp1069_145 temp1069_144))
(assert (= temp1069_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1069_145)))
(assert (= temp1069_147 #x0000000000000003))
(assert (= temp1069_148 temp1069_147))
(assert (= temp1069_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1069_148)))
(assert (= temp1069_150 #x0000000000000004))
(assert (= temp1069_151 temp1069_150))
(assert (= temp1069_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1069_151)))
(assert (= temp1069_153 #x0000000000000005))
(assert (= temp1069_154 temp1069_153))
(assert (= temp1069_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1069_154)))
(assert (= temp1069_157 var1179826))
(assert (= temp1069_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1069_157)))
(assert (= temp1069_156 temp1069_158))
(assert (= var1191780
   (ite (bvslt temp1069_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1069_159 #x0000000000000000))
(assert (= var1191780 temp1069_159))
(assert (= temp1069_160 #x0000000000000000))
(assert (= var1179826 temp1069_160))
(assert (= temp1069_162 var1179826))
(assert (= temp1069_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1069_162)))
(assert (= temp1069_161 temp1069_163))
(assert (= var1191802 (bvsmod temp1069_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1069_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1069_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1069_165 #x0000000000000001))
(assert (= var1191803 temp1069_165))
(assert (= temp1069_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1069_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1069_167 #x0000000000000001))
(assert (= var1191823 temp1069_167))
(assert (= temp1069_168 #x0000000000000001))
(assert (= var1180714 temp1069_168))
(assert (= temp1069_169 #x0000000000000000))
(assert (= temp1069_170 temp1069_169))
(assert (= temp1069_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1069_170)))
(assert (= temp1069_172 #x0000000000000001))
(assert (= temp1069_173 temp1069_172))
(assert (= temp1069_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1069_173)))
(assert (= temp1069_175 #x0000000000000002))
(assert (= temp1069_176 temp1069_175))
(assert (= temp1069_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1069_176)))
(assert (= temp1069_178 #x0000000000000003))
(assert (= temp1069_179 temp1069_178))
(assert (= temp1069_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1069_179)))
(assert (= temp1069_181 #x0000000000000004))
(assert (= temp1069_182 temp1069_181))
(assert (= temp1069_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1069_182)))
(assert (= temp1069_184 #x0000000000000005))
(assert (= temp1069_185 temp1069_184))
(assert (= temp1069_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1069_185)))
(assert (= temp1069_187 #x0000000000000000))
(assert (= temp1069_188
   (ite (bvslt var1180714 temp1069_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1069_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1069_188)))
(assert (= var1191831 temp1069_189))
(assert (bvslt (ite (bvslt var1180714 temp1069_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1069_190 #x0000000000000001))
(assert (= var1180714 temp1069_190))
(assert (= temp1069_192 var1180714))
(assert (= temp1069_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1069_192)))
(assert (= temp1069_191 temp1069_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1069_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1069_194 #x0000000000000001))
(assert (= var1191836 temp1069_194))
(assert (= temp1069_195 #x0000000000000000))
(assert (= var1179826 temp1069_195))
(assert (= temp1069_197 var1179826))
(assert (= temp1069_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1069_197)))
(assert (= temp1069_196 temp1069_198))
(assert (= temp1069_199 #x0000000000000002))
(assert (= var1586025 temp1069_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1069_200 #x0000000000000001))
(assert (= var1191993 temp1069_200))
(assert (= temp1069_201 #x0000000000000001))
(assert (= var2700303 temp1069_201))
(assert (= temp1069_202 #x0000000000000001))
(assert (= var2962447 temp1069_202))
(assert (= temp1069_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1069_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1069_204 #x0000000000000001))
(assert (= var211058 temp1069_204))
(assert (= temp1069_205 #x0000000000000001))
(assert (= var211188 temp1069_205))
(assert (= var3879401 var211188))
(assert (= temp1069_206 #x0000000000000000))
(assert (= var3866802 temp1069_206))
(assert (= temp1069_207 #x0000000000000000))
(assert (= temp1069_208
   (ite (bvslt var3866802 temp1069_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1069_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1069_208)))
(assert (= var3879420 temp1069_209))
(assert (bvslt (ite (bvslt var3866802 temp1069_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1069_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1069_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1069_211 #x0000000000000001))
(assert (= var3879421 temp1069_211))
(assert (= temp1069_212 #x0000000000000000))
(assert (= var4079423 temp1069_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1069_213 #x0000000000000002))
(assert (= var4208259 temp1069_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1069_214 #x0000000000000000))
(assert (= var4273820 temp1069_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp1069_215 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp1069_215)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1069_216 #x0000000000000001))
(assert (= var212414 temp1069_216))
(assert (= temp1069_217 #x0000000000000002))
(assert (= var5060227 temp1069_217))
(assert (= var5060229 (bvsub ARGNAME_weight_NAMEEND_DIM var5060227)))
(assert (= var5125772 var5060227))
(assert (= var5125773 var5060229))
(assert (= temp1069_218 #x0000000000000001))
(assert (= var211058 temp1069_218))
(model-add temp1069_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1069_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1069_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1069_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





