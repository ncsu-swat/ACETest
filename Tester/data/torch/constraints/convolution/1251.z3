(declare-fun temp10398_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10398_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10398_3 () (_ BitVec 64))
(declare-fun temp10398_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10398_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10398_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10398_7 () (_ BitVec 64))
(declare-fun temp10398_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10398_9 () (_ BitVec 64))
(declare-fun temp10398_10 () (_ BitVec 64))
(declare-fun temp10398_11 () (_ BitVec 64))
(declare-fun temp10398_12 () (_ BitVec 64))
(declare-fun temp10398_13 () (_ BitVec 64))
(declare-fun temp10398_14 () (_ BitVec 64))
(declare-fun temp10398_15 () (_ BitVec 64))
(declare-fun temp10398_16 () (_ BitVec 64))
(declare-fun temp10398_17 () (_ BitVec 64))
(declare-fun temp10398_18 () (_ BitVec 64))
(declare-fun temp10398_19 () (_ BitVec 64))
(declare-fun temp10398_20 () (_ BitVec 64))
(declare-fun temp10398_21 () (_ BitVec 64))
(declare-fun temp10398_22 () (_ BitVec 64))
(declare-fun temp10398_23 () (_ BitVec 64))
(declare-fun temp10398_24 () (_ BitVec 64))
(declare-fun temp10398_25 () (_ BitVec 64))
(declare-fun temp10398_26 () (_ BitVec 64))
(declare-fun temp10398_27 () (_ BitVec 64))
(declare-fun temp10398_28 () (_ BitVec 64))
(declare-fun temp10398_29 () (_ BitVec 64))
(declare-fun temp10398_30 () (_ BitVec 64))
(declare-fun temp10398_31 () (_ BitVec 64))
(declare-fun temp10398_32 () (_ BitVec 64))
(declare-fun temp10398_33 () (_ BitVec 64))
(declare-fun temp10398_34 () (_ BitVec 64))
(declare-fun temp10398_35 () (_ BitVec 64))
(declare-fun temp10398_36 () (_ BitVec 64))
(declare-fun temp10398_37 () (_ BitVec 64))
(declare-fun temp10398_38 () (_ BitVec 64))
(declare-fun temp10398_39 () (_ BitVec 64))
(declare-fun temp10398_40 () (_ BitVec 64))
(declare-fun temp10398_41 () (_ BitVec 64))
(declare-fun temp10398_42 () (_ BitVec 64))
(declare-fun temp10398_43 () (_ BitVec 64))
(declare-fun temp10398_44 () (_ BitVec 64))
(declare-fun temp10398_45 () (_ BitVec 64))
(declare-fun temp10398_46 () (_ BitVec 64))
(declare-fun temp10398_47 () (_ BitVec 64))
(declare-fun temp10398_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10398_49 () (_ BitVec 64))
(declare-fun temp10398_50 () (_ BitVec 64))
(declare-fun temp10398_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10398_52 () (_ BitVec 64))
(declare-fun temp10398_53 () (_ BitVec 64))
(declare-fun temp10398_54 () (_ BitVec 64))
(declare-fun temp10398_55 () (_ BitVec 64))
(declare-fun temp10398_56 () (_ BitVec 64))
(declare-fun temp10398_57 () (_ BitVec 64))
(declare-fun temp10398_58 () (_ BitVec 64))
(declare-fun temp10398_59 () (_ BitVec 64))
(declare-fun temp10398_60 () (_ BitVec 64))
(declare-fun temp10398_61 () (_ BitVec 64))
(declare-fun temp10398_62 () (_ BitVec 64))
(declare-fun temp10398_63 () (_ BitVec 64))
(declare-fun temp10398_64 () (_ BitVec 64))
(declare-fun temp10398_65 () (_ BitVec 64))
(declare-fun temp10398_66 () (_ BitVec 64))
(declare-fun temp10398_67 () (_ BitVec 64))
(declare-fun temp10398_68 () (_ BitVec 64))
(declare-fun temp10398_69 () (_ BitVec 64))
(declare-fun temp10398_70 () (_ BitVec 64))
(declare-fun temp10398_71 () (_ BitVec 64))
(declare-fun temp10398_72 () (_ BitVec 64))
(declare-fun temp10398_73 () (_ BitVec 64))
(declare-fun temp10398_74 () (_ BitVec 64))
(declare-fun temp10398_75 () (_ BitVec 64))
(declare-fun temp10398_76 () (_ BitVec 64))
(declare-fun temp10398_77 () (_ BitVec 64))
(declare-fun temp10398_78 () (_ BitVec 64))
(declare-fun temp10398_79 () (_ BitVec 64))
(declare-fun temp10398_80 () (_ BitVec 64))
(declare-fun temp10398_81 () (_ BitVec 64))
(declare-fun temp10398_82 () (_ BitVec 64))
(declare-fun temp10398_83 () (_ BitVec 64))
(declare-fun temp10398_84 () (_ BitVec 64))
(declare-fun temp10398_85 () (_ BitVec 64))
(declare-fun temp10398_86 () (_ BitVec 64))
(declare-fun temp10398_87 () (_ BitVec 64))
(declare-fun temp10398_88 () (_ BitVec 64))
(declare-fun temp10398_89 () (_ BitVec 64))
(declare-fun temp10398_90 () (_ BitVec 64))
(declare-fun temp10398_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10398_92 () (_ BitVec 64))
(declare-fun temp10398_93 () (_ BitVec 64))
(declare-fun temp10398_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10398_95 () (_ BitVec 64))
(declare-fun temp10398_96 () (_ BitVec 64))
(declare-fun temp10398_97 () (_ BitVec 64))
(declare-fun temp10398_98 () (_ BitVec 64))
(declare-fun temp10398_99 () (_ BitVec 64))
(declare-fun temp10398_100 () (_ BitVec 64))
(declare-fun temp10398_101 () (_ BitVec 64))
(declare-fun temp10398_102 () (_ BitVec 64))
(declare-fun temp10398_103 () (_ BitVec 64))
(declare-fun temp10398_104 () (_ BitVec 64))
(declare-fun temp10398_105 () (_ BitVec 64))
(declare-fun temp10398_106 () (_ BitVec 64))
(declare-fun temp10398_107 () (_ BitVec 64))
(declare-fun temp10398_108 () (_ BitVec 64))
(declare-fun temp10398_109 () (_ BitVec 64))
(declare-fun temp10398_110 () (_ BitVec 64))
(declare-fun temp10398_111 () (_ BitVec 64))
(declare-fun temp10398_112 () (_ BitVec 64))
(declare-fun temp10398_113 () (_ BitVec 64))
(declare-fun temp10398_114 () (_ BitVec 64))
(declare-fun temp10398_115 () (_ BitVec 64))
(declare-fun temp10398_116 () (_ BitVec 64))
(declare-fun temp10398_117 () (_ BitVec 64))
(declare-fun temp10398_118 () (_ BitVec 64))
(declare-fun temp10398_119 () (_ BitVec 64))
(declare-fun temp10398_120 () (_ BitVec 64))
(declare-fun temp10398_121 () (_ BitVec 64))
(declare-fun temp10398_122 () (_ BitVec 64))
(declare-fun temp10398_123 () (_ BitVec 64))
(declare-fun temp10398_124 () (_ BitVec 64))
(declare-fun temp10398_125 () (_ BitVec 64))
(declare-fun temp10398_126 () (_ BitVec 64))
(declare-fun temp10398_127 () (_ BitVec 64))
(declare-fun temp10398_128 () (_ BitVec 64))
(declare-fun temp10398_129 () (_ BitVec 64))
(declare-fun temp10398_130 () (_ BitVec 64))
(declare-fun temp10398_131 () (_ BitVec 64))
(declare-fun temp10398_132 () (_ BitVec 64))
(declare-fun temp10398_133 () (_ BitVec 64))
(declare-fun temp10398_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10398_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10398_136 () (_ BitVec 64))
(declare-fun temp10398_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10398_138 () (_ BitVec 64))
(declare-fun temp10398_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10398_140 () (_ BitVec 64))
(declare-fun temp10398_141 () (_ BitVec 64))
(declare-fun temp10398_142 () (_ BitVec 64))
(declare-fun temp10398_143 () (_ BitVec 64))
(declare-fun temp10398_144 () (_ BitVec 64))
(declare-fun temp10398_145 () (_ BitVec 64))
(declare-fun temp10398_146 () (_ BitVec 64))
(declare-fun temp10398_147 () (_ BitVec 64))
(declare-fun temp10398_148 () (_ BitVec 64))
(declare-fun temp10398_149 () (_ BitVec 64))
(declare-fun temp10398_150 () (_ BitVec 64))
(declare-fun temp10398_151 () (_ BitVec 64))
(declare-fun temp10398_152 () (_ BitVec 64))
(declare-fun temp10398_153 () (_ BitVec 64))
(declare-fun temp10398_154 () (_ BitVec 64))
(declare-fun temp10398_155 () (_ BitVec 64))
(declare-fun temp10398_157 () (_ BitVec 64))
(declare-fun temp10398_158 () (_ BitVec 64))
(declare-fun temp10398_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10398_159 () (_ BitVec 64))
(declare-fun temp10398_160 () (_ BitVec 64))
(declare-fun temp10398_162 () (_ BitVec 64))
(declare-fun temp10398_163 () (_ BitVec 64))
(declare-fun temp10398_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10398_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10398_165 () (_ BitVec 64))
(declare-fun temp10398_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10398_167 () (_ BitVec 64))
(declare-fun temp10398_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10398_169 () (_ BitVec 64))
(declare-fun temp10398_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10398_171 () (_ BitVec 64))
(declare-fun temp10398_172 () (_ BitVec 64))
(declare-fun temp10398_173 () (_ BitVec 64))
(declare-fun temp10398_174 () (_ BitVec 64))
(declare-fun temp10398_175 () (_ BitVec 64))
(declare-fun temp10398_176 () (_ BitVec 64))
(declare-fun temp10398_177 () (_ BitVec 64))
(declare-fun temp10398_178 () (_ BitVec 64))
(declare-fun temp10398_179 () (_ BitVec 64))
(declare-fun temp10398_180 () (_ BitVec 64))
(declare-fun temp10398_181 () (_ BitVec 64))
(declare-fun temp10398_182 () (_ BitVec 64))
(declare-fun temp10398_183 () (_ BitVec 64))
(declare-fun temp10398_184 () (_ BitVec 64))
(declare-fun temp10398_185 () (_ BitVec 64))
(declare-fun temp10398_186 () (_ BitVec 64))
(declare-fun temp10398_187 () (_ BitVec 64))
(declare-fun temp10398_188 () (_ BitVec 64))
(declare-fun temp10398_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10398_190 () (_ BitVec 64))
(declare-fun temp10398_192 () (_ BitVec 64))
(declare-fun temp10398_193 () (_ BitVec 64))
(declare-fun temp10398_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10398_194 () (_ BitVec 64))
(declare-fun temp10398_195 () (_ BitVec 64))
(declare-fun temp10398_197 () (_ BitVec 64))
(declare-fun temp10398_198 () (_ BitVec 64))
(declare-fun temp10398_196 () (_ BitVec 64))
(declare-fun temp10398_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10398_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10398_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10398_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10398_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10398_204 () (_ BitVec 64))
(declare-fun temp10398_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10398_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10398_207 () (_ BitVec 64))
(declare-fun temp10398_208 () (_ BitVec 64))
(declare-fun temp10398_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10398_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10398_211 () (_ BitVec 64))
(declare-fun temp10398_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10398_213 () (_ BitVec 64))
(declare-fun temp10398_214 () (_ BitVec 64))
(declare-fun temp10398_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10398_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10398_217 () (_ BitVec 64))
(declare-fun temp10398_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10398_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10398_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10398_221 () (_ BitVec 64))
(assert (= temp10398_1 #x0000000000000001))
(assert (= var77203 temp10398_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10398_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10398_2)))
(assert (= temp10398_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10398_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10398_4 #x0000000000000000))
(assert (= var210941 temp10398_4))
(assert (= temp10398_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10398_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10398_6 #x0000000000000000))
(assert (= var210986 temp10398_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10398_7 #x0000000000000000))
(assert (= temp10398_8 temp10398_7))
(assert (= temp10398_9 (select ARGNAME_padding_NAMEEND_VAL temp10398_8)))
(assert (= temp10398_10 #x0000000000000001))
(assert (= temp10398_11 temp10398_10))
(assert (= temp10398_12 (select ARGNAME_padding_NAMEEND_VAL temp10398_11)))
(assert (= temp10398_13 #x0000000000000002))
(assert (= temp10398_14 temp10398_13))
(assert (= temp10398_15 (select ARGNAME_padding_NAMEEND_VAL temp10398_14)))
(assert (= temp10398_16 #x0000000000000003))
(assert (= temp10398_17 temp10398_16))
(assert (= temp10398_18 (select ARGNAME_padding_NAMEEND_VAL temp10398_17)))
(assert (= temp10398_19 #x0000000000000004))
(assert (= temp10398_20 temp10398_19))
(assert (= temp10398_21 (select ARGNAME_padding_NAMEEND_VAL temp10398_20)))
(assert (= temp10398_22 #x0000000000000005))
(assert (= temp10398_23 temp10398_22))
(assert (= temp10398_24 (select ARGNAME_padding_NAMEEND_VAL temp10398_23)))
(assert (= temp10398_25 #x0000000000000000))
(assert (= temp10398_26 #x0000000000000000))
(assert (= temp10398_27 temp10398_26))
(assert (= temp10398_28 (select ARGNAME_padding_NAMEEND_VAL temp10398_27)))
(assert (= temp10398_29 #x0000000000000000))
(assert (= temp10398_30 #x0000000000000001))
(assert (= temp10398_31 temp10398_30))
(assert (= temp10398_32 (select ARGNAME_padding_NAMEEND_VAL temp10398_31)))
(assert (= temp10398_33 #x0000000000000000))
(assert (= temp10398_34 #x0000000000000002))
(assert (= temp10398_35 temp10398_34))
(assert (= temp10398_36 (select ARGNAME_padding_NAMEEND_VAL temp10398_35)))
(assert (= temp10398_37 #x0000000000000000))
(assert (= temp10398_38 #x0000000000000003))
(assert (= temp10398_39 temp10398_38))
(assert (= temp10398_40 (select ARGNAME_padding_NAMEEND_VAL temp10398_39)))
(assert (= temp10398_41 #x0000000000000000))
(assert (= temp10398_42 #x0000000000000004))
(assert (= temp10398_43 temp10398_42))
(assert (= temp10398_44 (select ARGNAME_padding_NAMEEND_VAL temp10398_43)))
(assert (= temp10398_45 #x0000000000000000))
(assert (= temp10398_46 #x0000000000000005))
(assert (= temp10398_47 temp10398_46))
(assert (= temp10398_48 (select ARGNAME_padding_NAMEEND_VAL temp10398_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10398_28 temp10398_25)
             (bvslt temp10398_32 temp10398_29)
             (bvslt temp10398_36 temp10398_33)
             (bvslt temp10398_40 temp10398_37)
             (bvslt temp10398_44 temp10398_41)
             (bvslt temp10398_48 temp10398_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10398_49 #x0000000000000000))
(assert (= var1191714 temp10398_49))
(assert (= temp10398_50 #x0000000000000000))
(assert (= temp10398_51 temp10398_50))
(assert (= temp10398_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10398_51)))
(assert (= temp10398_53 #x0000000000000001))
(assert (= temp10398_54 temp10398_53))
(assert (= temp10398_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10398_54)))
(assert (= temp10398_56 #x0000000000000002))
(assert (= temp10398_57 temp10398_56))
(assert (= temp10398_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10398_57)))
(assert (= temp10398_59 #x0000000000000003))
(assert (= temp10398_60 temp10398_59))
(assert (= temp10398_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10398_60)))
(assert (= temp10398_62 #x0000000000000004))
(assert (= temp10398_63 temp10398_62))
(assert (= temp10398_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10398_63)))
(assert (= temp10398_65 #x0000000000000005))
(assert (= temp10398_66 temp10398_65))
(assert (= temp10398_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10398_66)))
(assert (= temp10398_68 #x0000000000000000))
(assert (= temp10398_69 #x0000000000000000))
(assert (= temp10398_70 temp10398_69))
(assert (= temp10398_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10398_70)))
(assert (= temp10398_72 #x0000000000000000))
(assert (= temp10398_73 #x0000000000000001))
(assert (= temp10398_74 temp10398_73))
(assert (= temp10398_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10398_74)))
(assert (= temp10398_76 #x0000000000000000))
(assert (= temp10398_77 #x0000000000000002))
(assert (= temp10398_78 temp10398_77))
(assert (= temp10398_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10398_78)))
(assert (= temp10398_80 #x0000000000000000))
(assert (= temp10398_81 #x0000000000000003))
(assert (= temp10398_82 temp10398_81))
(assert (= temp10398_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10398_82)))
(assert (= temp10398_84 #x0000000000000000))
(assert (= temp10398_85 #x0000000000000004))
(assert (= temp10398_86 temp10398_85))
(assert (= temp10398_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10398_86)))
(assert (= temp10398_88 #x0000000000000000))
(assert (= temp10398_89 #x0000000000000005))
(assert (= temp10398_90 temp10398_89))
(assert (= temp10398_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10398_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10398_71 temp10398_68)
             (bvslt temp10398_75 temp10398_72)
             (bvslt temp10398_79 temp10398_76)
             (bvslt temp10398_83 temp10398_80)
             (bvslt temp10398_87 temp10398_84)
             (bvslt temp10398_91 temp10398_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10398_92 #x0000000000000000))
(assert (= var1191725 temp10398_92))
(assert (= temp10398_93 #x0000000000000000))
(assert (= temp10398_94 temp10398_93))
(assert (= temp10398_95 (select ARGNAME_stride_NAMEEND_VAL temp10398_94)))
(assert (= temp10398_96 #x0000000000000001))
(assert (= temp10398_97 temp10398_96))
(assert (= temp10398_98 (select ARGNAME_stride_NAMEEND_VAL temp10398_97)))
(assert (= temp10398_99 #x0000000000000002))
(assert (= temp10398_100 temp10398_99))
(assert (= temp10398_101 (select ARGNAME_stride_NAMEEND_VAL temp10398_100)))
(assert (= temp10398_102 #x0000000000000003))
(assert (= temp10398_103 temp10398_102))
(assert (= temp10398_104 (select ARGNAME_stride_NAMEEND_VAL temp10398_103)))
(assert (= temp10398_105 #x0000000000000004))
(assert (= temp10398_106 temp10398_105))
(assert (= temp10398_107 (select ARGNAME_stride_NAMEEND_VAL temp10398_106)))
(assert (= temp10398_108 #x0000000000000005))
(assert (= temp10398_109 temp10398_108))
(assert (= temp10398_110 (select ARGNAME_stride_NAMEEND_VAL temp10398_109)))
(assert (= temp10398_111 #x0000000000000000))
(assert (= temp10398_112 #x0000000000000000))
(assert (= temp10398_113 temp10398_112))
(assert (= temp10398_114 (select ARGNAME_stride_NAMEEND_VAL temp10398_113)))
(assert (= temp10398_115 #x0000000000000000))
(assert (= temp10398_116 #x0000000000000001))
(assert (= temp10398_117 temp10398_116))
(assert (= temp10398_118 (select ARGNAME_stride_NAMEEND_VAL temp10398_117)))
(assert (= temp10398_119 #x0000000000000000))
(assert (= temp10398_120 #x0000000000000002))
(assert (= temp10398_121 temp10398_120))
(assert (= temp10398_122 (select ARGNAME_stride_NAMEEND_VAL temp10398_121)))
(assert (= temp10398_123 #x0000000000000000))
(assert (= temp10398_124 #x0000000000000003))
(assert (= temp10398_125 temp10398_124))
(assert (= temp10398_126 (select ARGNAME_stride_NAMEEND_VAL temp10398_125)))
(assert (= temp10398_127 #x0000000000000000))
(assert (= temp10398_128 #x0000000000000004))
(assert (= temp10398_129 temp10398_128))
(assert (= temp10398_130 (select ARGNAME_stride_NAMEEND_VAL temp10398_129)))
(assert (= temp10398_131 #x0000000000000000))
(assert (= temp10398_132 #x0000000000000005))
(assert (= temp10398_133 temp10398_132))
(assert (= temp10398_134 (select ARGNAME_stride_NAMEEND_VAL temp10398_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10398_114 temp10398_111)
             (bvsle temp10398_118 temp10398_115)
             (bvsle temp10398_122 temp10398_119)
             (bvsle temp10398_126 temp10398_123)
             (bvsle temp10398_130 temp10398_127)
             (bvsle temp10398_134 temp10398_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10398_135 #x0000000000000000))
(assert (= var1191735 temp10398_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10398_136 #x0000000000000001))
(assert (= var1191747 temp10398_136))
(assert (= temp10398_137 #x0000000000000000))
(assert (= var1179826 temp10398_137))
(assert (= temp10398_138 #x0000000000000000))
(assert (= temp10398_139 temp10398_138))
(assert (= temp10398_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10398_139)))
(assert (= temp10398_141 #x0000000000000001))
(assert (= temp10398_142 temp10398_141))
(assert (= temp10398_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10398_142)))
(assert (= temp10398_144 #x0000000000000002))
(assert (= temp10398_145 temp10398_144))
(assert (= temp10398_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10398_145)))
(assert (= temp10398_147 #x0000000000000003))
(assert (= temp10398_148 temp10398_147))
(assert (= temp10398_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10398_148)))
(assert (= temp10398_150 #x0000000000000004))
(assert (= temp10398_151 temp10398_150))
(assert (= temp10398_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10398_151)))
(assert (= temp10398_153 #x0000000000000005))
(assert (= temp10398_154 temp10398_153))
(assert (= temp10398_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10398_154)))
(assert (= temp10398_157 var1179826))
(assert (= temp10398_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10398_157)))
(assert (= temp10398_156 temp10398_158))
(assert (= var1191780
   (ite (bvslt temp10398_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10398_159 #x0000000000000000))
(assert (= var1191780 temp10398_159))
(assert (= temp10398_160 #x0000000000000000))
(assert (= var1179826 temp10398_160))
(assert (= temp10398_162 var1179826))
(assert (= temp10398_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10398_162)))
(assert (= temp10398_161 temp10398_163))
(assert (= var1191802 (bvsmod temp10398_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10398_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10398_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10398_165 #x0000000000000001))
(assert (= var1191803 temp10398_165))
(assert (= temp10398_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10398_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10398_167 #x0000000000000001))
(assert (= var1191823 temp10398_167))
(assert (= temp10398_168 #x0000000000000001))
(assert (= var1180714 temp10398_168))
(assert (= temp10398_169 #x0000000000000000))
(assert (= temp10398_170 temp10398_169))
(assert (= temp10398_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10398_170)))
(assert (= temp10398_172 #x0000000000000001))
(assert (= temp10398_173 temp10398_172))
(assert (= temp10398_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10398_173)))
(assert (= temp10398_175 #x0000000000000002))
(assert (= temp10398_176 temp10398_175))
(assert (= temp10398_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10398_176)))
(assert (= temp10398_178 #x0000000000000003))
(assert (= temp10398_179 temp10398_178))
(assert (= temp10398_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10398_179)))
(assert (= temp10398_181 #x0000000000000004))
(assert (= temp10398_182 temp10398_181))
(assert (= temp10398_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10398_182)))
(assert (= temp10398_184 #x0000000000000005))
(assert (= temp10398_185 temp10398_184))
(assert (= temp10398_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10398_185)))
(assert (= temp10398_187 #x0000000000000000))
(assert (= temp10398_188
   (ite (bvslt var1180714 temp10398_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10398_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10398_188)))
(assert (= var1191831 temp10398_189))
(assert (bvslt (ite (bvslt var1180714 temp10398_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10398_190 #x0000000000000001))
(assert (= var1180714 temp10398_190))
(assert (= temp10398_192 var1180714))
(assert (= temp10398_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10398_192)))
(assert (= temp10398_191 temp10398_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10398_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10398_194 #x0000000000000001))
(assert (= var1191836 temp10398_194))
(assert (= temp10398_195 #x0000000000000000))
(assert (= var1179826 temp10398_195))
(assert (= temp10398_197 var1179826))
(assert (= temp10398_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10398_197)))
(assert (= temp10398_196 temp10398_198))
(assert (= temp10398_199 #x0000000000000002))
(assert (= var1586025 temp10398_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10398_200 #x0000000000000001))
(assert (= var1191993 temp10398_200))
(assert (= temp10398_201 #x0000000000000001))
(assert (= var2700303 temp10398_201))
(assert (= temp10398_202 #x0000000000000001))
(assert (= var2962447 temp10398_202))
(assert (= temp10398_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10398_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10398_204 #x0000000000000001))
(assert (= var211058 temp10398_204))
(assert (= temp10398_205 #x0000000000000001))
(assert (= var211188 temp10398_205))
(assert (= var3879401 var211188))
(assert (= temp10398_206 #x0000000000000000))
(assert (= var3866802 temp10398_206))
(assert (= temp10398_207 #x0000000000000000))
(assert (= temp10398_208
   (ite (bvslt var3866802 temp10398_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10398_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10398_208)))
(assert (= var3879420 temp10398_209))
(assert (bvslt (ite (bvslt var3866802 temp10398_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10398_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10398_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10398_211 #x0000000000000000))
(assert (= var3879421 temp10398_211))
(assert (= temp10398_212 #x0000000000000001))
(assert (= var3867690 temp10398_212))
(assert (= temp10398_213 #x0000000000000000))
(assert (= temp10398_214
   (ite (bvslt var3867690 temp10398_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10398_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10398_214)))
(assert (= var3879423 temp10398_215))
(assert (bvslt (ite (bvslt var3867690 temp10398_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10398_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10398_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10398_217 #x0000000000000001))
(assert (= var3879424 temp10398_217))
(assert (= temp10398_218 #x0000000000000000))
(assert (= var4079423 temp10398_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10398_219 #x0000000000000002))
(assert (= var4208259 temp10398_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10398_220 #x0000000000000000))
(assert (= var4273820 temp10398_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10398_221 #x0000000000000001))
(assert (= var211058 temp10398_221))
(model-add temp10398_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10398_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10398_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10398_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




