(declare-fun temp468_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp468_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp468_3 () (_ BitVec 64))
(declare-fun temp468_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp468_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp468_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp468_7 () (_ BitVec 64))
(declare-fun temp468_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp468_9 () (_ BitVec 64))
(declare-fun temp468_10 () (_ BitVec 64))
(declare-fun temp468_11 () (_ BitVec 64))
(declare-fun temp468_12 () (_ BitVec 64))
(declare-fun temp468_13 () (_ BitVec 64))
(declare-fun temp468_14 () (_ BitVec 64))
(declare-fun temp468_15 () (_ BitVec 64))
(declare-fun temp468_16 () (_ BitVec 64))
(declare-fun temp468_17 () (_ BitVec 64))
(declare-fun temp468_18 () (_ BitVec 64))
(declare-fun temp468_19 () (_ BitVec 64))
(declare-fun temp468_20 () (_ BitVec 64))
(declare-fun temp468_21 () (_ BitVec 64))
(declare-fun temp468_22 () (_ BitVec 64))
(declare-fun temp468_23 () (_ BitVec 64))
(declare-fun temp468_24 () (_ BitVec 64))
(declare-fun temp468_25 () (_ BitVec 64))
(declare-fun temp468_26 () (_ BitVec 64))
(declare-fun temp468_27 () (_ BitVec 64))
(declare-fun temp468_28 () (_ BitVec 64))
(declare-fun temp468_29 () (_ BitVec 64))
(declare-fun temp468_30 () (_ BitVec 64))
(declare-fun temp468_31 () (_ BitVec 64))
(declare-fun temp468_32 () (_ BitVec 64))
(declare-fun temp468_33 () (_ BitVec 64))
(declare-fun temp468_34 () (_ BitVec 64))
(declare-fun temp468_35 () (_ BitVec 64))
(declare-fun temp468_36 () (_ BitVec 64))
(declare-fun temp468_37 () (_ BitVec 64))
(declare-fun temp468_38 () (_ BitVec 64))
(declare-fun temp468_39 () (_ BitVec 64))
(declare-fun temp468_40 () (_ BitVec 64))
(declare-fun temp468_41 () (_ BitVec 64))
(declare-fun temp468_42 () (_ BitVec 64))
(declare-fun temp468_43 () (_ BitVec 64))
(declare-fun temp468_44 () (_ BitVec 64))
(declare-fun temp468_45 () (_ BitVec 64))
(declare-fun temp468_46 () (_ BitVec 64))
(declare-fun temp468_47 () (_ BitVec 64))
(declare-fun temp468_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp468_49 () (_ BitVec 64))
(declare-fun temp468_50 () (_ BitVec 64))
(declare-fun temp468_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp468_52 () (_ BitVec 64))
(declare-fun temp468_53 () (_ BitVec 64))
(declare-fun temp468_54 () (_ BitVec 64))
(declare-fun temp468_55 () (_ BitVec 64))
(declare-fun temp468_56 () (_ BitVec 64))
(declare-fun temp468_57 () (_ BitVec 64))
(declare-fun temp468_58 () (_ BitVec 64))
(declare-fun temp468_59 () (_ BitVec 64))
(declare-fun temp468_60 () (_ BitVec 64))
(declare-fun temp468_61 () (_ BitVec 64))
(declare-fun temp468_62 () (_ BitVec 64))
(declare-fun temp468_63 () (_ BitVec 64))
(declare-fun temp468_64 () (_ BitVec 64))
(declare-fun temp468_65 () (_ BitVec 64))
(declare-fun temp468_66 () (_ BitVec 64))
(declare-fun temp468_67 () (_ BitVec 64))
(declare-fun temp468_68 () (_ BitVec 64))
(declare-fun temp468_69 () (_ BitVec 64))
(declare-fun temp468_70 () (_ BitVec 64))
(declare-fun temp468_71 () (_ BitVec 64))
(declare-fun temp468_72 () (_ BitVec 64))
(declare-fun temp468_73 () (_ BitVec 64))
(declare-fun temp468_74 () (_ BitVec 64))
(declare-fun temp468_75 () (_ BitVec 64))
(declare-fun temp468_76 () (_ BitVec 64))
(declare-fun temp468_77 () (_ BitVec 64))
(declare-fun temp468_78 () (_ BitVec 64))
(declare-fun temp468_79 () (_ BitVec 64))
(declare-fun temp468_80 () (_ BitVec 64))
(declare-fun temp468_81 () (_ BitVec 64))
(declare-fun temp468_82 () (_ BitVec 64))
(declare-fun temp468_83 () (_ BitVec 64))
(declare-fun temp468_84 () (_ BitVec 64))
(declare-fun temp468_85 () (_ BitVec 64))
(declare-fun temp468_86 () (_ BitVec 64))
(declare-fun temp468_87 () (_ BitVec 64))
(declare-fun temp468_88 () (_ BitVec 64))
(declare-fun temp468_89 () (_ BitVec 64))
(declare-fun temp468_90 () (_ BitVec 64))
(declare-fun temp468_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp468_92 () (_ BitVec 64))
(declare-fun temp468_93 () (_ BitVec 64))
(declare-fun temp468_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp468_95 () (_ BitVec 64))
(declare-fun temp468_96 () (_ BitVec 64))
(declare-fun temp468_97 () (_ BitVec 64))
(declare-fun temp468_98 () (_ BitVec 64))
(declare-fun temp468_99 () (_ BitVec 64))
(declare-fun temp468_100 () (_ BitVec 64))
(declare-fun temp468_101 () (_ BitVec 64))
(declare-fun temp468_102 () (_ BitVec 64))
(declare-fun temp468_103 () (_ BitVec 64))
(declare-fun temp468_104 () (_ BitVec 64))
(declare-fun temp468_105 () (_ BitVec 64))
(declare-fun temp468_106 () (_ BitVec 64))
(declare-fun temp468_107 () (_ BitVec 64))
(declare-fun temp468_108 () (_ BitVec 64))
(declare-fun temp468_109 () (_ BitVec 64))
(declare-fun temp468_110 () (_ BitVec 64))
(declare-fun temp468_111 () (_ BitVec 64))
(declare-fun temp468_112 () (_ BitVec 64))
(declare-fun temp468_113 () (_ BitVec 64))
(declare-fun temp468_114 () (_ BitVec 64))
(declare-fun temp468_115 () (_ BitVec 64))
(declare-fun temp468_116 () (_ BitVec 64))
(declare-fun temp468_117 () (_ BitVec 64))
(declare-fun temp468_118 () (_ BitVec 64))
(declare-fun temp468_119 () (_ BitVec 64))
(declare-fun temp468_120 () (_ BitVec 64))
(declare-fun temp468_121 () (_ BitVec 64))
(declare-fun temp468_122 () (_ BitVec 64))
(declare-fun temp468_123 () (_ BitVec 64))
(declare-fun temp468_124 () (_ BitVec 64))
(declare-fun temp468_125 () (_ BitVec 64))
(declare-fun temp468_126 () (_ BitVec 64))
(declare-fun temp468_127 () (_ BitVec 64))
(declare-fun temp468_128 () (_ BitVec 64))
(declare-fun temp468_129 () (_ BitVec 64))
(declare-fun temp468_130 () (_ BitVec 64))
(declare-fun temp468_131 () (_ BitVec 64))
(declare-fun temp468_132 () (_ BitVec 64))
(declare-fun temp468_133 () (_ BitVec 64))
(declare-fun temp468_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp468_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp468_136 () (_ BitVec 64))
(declare-fun temp468_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp468_138 () (_ BitVec 64))
(declare-fun temp468_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp468_140 () (_ BitVec 64))
(declare-fun temp468_141 () (_ BitVec 64))
(declare-fun temp468_142 () (_ BitVec 64))
(declare-fun temp468_143 () (_ BitVec 64))
(declare-fun temp468_144 () (_ BitVec 64))
(declare-fun temp468_145 () (_ BitVec 64))
(declare-fun temp468_146 () (_ BitVec 64))
(declare-fun temp468_147 () (_ BitVec 64))
(declare-fun temp468_148 () (_ BitVec 64))
(declare-fun temp468_149 () (_ BitVec 64))
(declare-fun temp468_150 () (_ BitVec 64))
(declare-fun temp468_151 () (_ BitVec 64))
(declare-fun temp468_152 () (_ BitVec 64))
(declare-fun temp468_153 () (_ BitVec 64))
(declare-fun temp468_154 () (_ BitVec 64))
(declare-fun temp468_155 () (_ BitVec 64))
(declare-fun temp468_157 () (_ BitVec 64))
(declare-fun temp468_158 () (_ BitVec 64))
(declare-fun temp468_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp468_159 () (_ BitVec 64))
(declare-fun temp468_160 () (_ BitVec 64))
(declare-fun temp468_162 () (_ BitVec 64))
(declare-fun temp468_163 () (_ BitVec 64))
(declare-fun temp468_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp468_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp468_165 () (_ BitVec 64))
(declare-fun temp468_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp468_167 () (_ BitVec 64))
(declare-fun temp468_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp468_169 () (_ BitVec 64))
(declare-fun temp468_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp468_171 () (_ BitVec 64))
(declare-fun temp468_172 () (_ BitVec 64))
(declare-fun temp468_173 () (_ BitVec 64))
(declare-fun temp468_174 () (_ BitVec 64))
(declare-fun temp468_175 () (_ BitVec 64))
(declare-fun temp468_176 () (_ BitVec 64))
(declare-fun temp468_177 () (_ BitVec 64))
(declare-fun temp468_178 () (_ BitVec 64))
(declare-fun temp468_179 () (_ BitVec 64))
(declare-fun temp468_180 () (_ BitVec 64))
(declare-fun temp468_181 () (_ BitVec 64))
(declare-fun temp468_182 () (_ BitVec 64))
(declare-fun temp468_183 () (_ BitVec 64))
(declare-fun temp468_184 () (_ BitVec 64))
(declare-fun temp468_185 () (_ BitVec 64))
(declare-fun temp468_186 () (_ BitVec 64))
(declare-fun temp468_187 () (_ BitVec 64))
(declare-fun temp468_188 () (_ BitVec 64))
(declare-fun temp468_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp468_190 () (_ BitVec 64))
(declare-fun temp468_192 () (_ BitVec 64))
(declare-fun temp468_193 () (_ BitVec 64))
(declare-fun temp468_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp468_194 () (_ BitVec 64))
(declare-fun temp468_195 () (_ BitVec 64))
(declare-fun temp468_197 () (_ BitVec 64))
(declare-fun temp468_198 () (_ BitVec 64))
(declare-fun temp468_196 () (_ BitVec 64))
(declare-fun temp468_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp468_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp468_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp468_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp468_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp468_204 () (_ BitVec 64))
(declare-fun temp468_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp468_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp468_207 () (_ BitVec 64))
(declare-fun temp468_208 () (_ BitVec 64))
(declare-fun temp468_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp468_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp468_211 () (_ BitVec 64))
(declare-fun temp468_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp468_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp468_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp468_215 () (_ BitVec 64))
(declare-fun temp468_216 () (_ BitVec 64))
(declare-fun var4928276 () (_ BitVec 64))
(declare-fun var4928243 () (_ BitVec 64))
(declare-fun var4796807 () (_ BitVec 64))
(declare-fun var4796803 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp468_217 () (_ BitVec 64))
(assert (= temp468_1 #x0000000000000001))
(assert (= var77203 temp468_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp468_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp468_2)))
(assert (= temp468_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp468_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_4 #x0000000000000000))
(assert (= var210941 temp468_4))
(assert (= temp468_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp468_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_6 #x0000000000000000))
(assert (= var210986 temp468_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp468_7 #x0000000000000000))
(assert (= temp468_8 temp468_7))
(assert (= temp468_9 (select ARGNAME_padding_NAMEEND_VAL temp468_8)))
(assert (= temp468_10 #x0000000000000001))
(assert (= temp468_11 temp468_10))
(assert (= temp468_12 (select ARGNAME_padding_NAMEEND_VAL temp468_11)))
(assert (= temp468_13 #x0000000000000002))
(assert (= temp468_14 temp468_13))
(assert (= temp468_15 (select ARGNAME_padding_NAMEEND_VAL temp468_14)))
(assert (= temp468_16 #x0000000000000003))
(assert (= temp468_17 temp468_16))
(assert (= temp468_18 (select ARGNAME_padding_NAMEEND_VAL temp468_17)))
(assert (= temp468_19 #x0000000000000004))
(assert (= temp468_20 temp468_19))
(assert (= temp468_21 (select ARGNAME_padding_NAMEEND_VAL temp468_20)))
(assert (= temp468_22 #x0000000000000005))
(assert (= temp468_23 temp468_22))
(assert (= temp468_24 (select ARGNAME_padding_NAMEEND_VAL temp468_23)))
(assert (= temp468_25 #x0000000000000000))
(assert (= temp468_26 #x0000000000000000))
(assert (= temp468_27 temp468_26))
(assert (= temp468_28 (select ARGNAME_padding_NAMEEND_VAL temp468_27)))
(assert (= temp468_29 #x0000000000000000))
(assert (= temp468_30 #x0000000000000001))
(assert (= temp468_31 temp468_30))
(assert (= temp468_32 (select ARGNAME_padding_NAMEEND_VAL temp468_31)))
(assert (= temp468_33 #x0000000000000000))
(assert (= temp468_34 #x0000000000000002))
(assert (= temp468_35 temp468_34))
(assert (= temp468_36 (select ARGNAME_padding_NAMEEND_VAL temp468_35)))
(assert (= temp468_37 #x0000000000000000))
(assert (= temp468_38 #x0000000000000003))
(assert (= temp468_39 temp468_38))
(assert (= temp468_40 (select ARGNAME_padding_NAMEEND_VAL temp468_39)))
(assert (= temp468_41 #x0000000000000000))
(assert (= temp468_42 #x0000000000000004))
(assert (= temp468_43 temp468_42))
(assert (= temp468_44 (select ARGNAME_padding_NAMEEND_VAL temp468_43)))
(assert (= temp468_45 #x0000000000000000))
(assert (= temp468_46 #x0000000000000005))
(assert (= temp468_47 temp468_46))
(assert (= temp468_48 (select ARGNAME_padding_NAMEEND_VAL temp468_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp468_28 temp468_25)
             (bvslt temp468_32 temp468_29)
             (bvslt temp468_36 temp468_33)
             (bvslt temp468_40 temp468_37)
             (bvslt temp468_44 temp468_41)
             (bvslt temp468_48 temp468_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_49 #x0000000000000000))
(assert (= var1191714 temp468_49))
(assert (= temp468_50 #x0000000000000000))
(assert (= temp468_51 temp468_50))
(assert (= temp468_52 (select ARGNAME_output_padding_NAMEEND_VAL temp468_51)))
(assert (= temp468_53 #x0000000000000001))
(assert (= temp468_54 temp468_53))
(assert (= temp468_55 (select ARGNAME_output_padding_NAMEEND_VAL temp468_54)))
(assert (= temp468_56 #x0000000000000002))
(assert (= temp468_57 temp468_56))
(assert (= temp468_58 (select ARGNAME_output_padding_NAMEEND_VAL temp468_57)))
(assert (= temp468_59 #x0000000000000003))
(assert (= temp468_60 temp468_59))
(assert (= temp468_61 (select ARGNAME_output_padding_NAMEEND_VAL temp468_60)))
(assert (= temp468_62 #x0000000000000004))
(assert (= temp468_63 temp468_62))
(assert (= temp468_64 (select ARGNAME_output_padding_NAMEEND_VAL temp468_63)))
(assert (= temp468_65 #x0000000000000005))
(assert (= temp468_66 temp468_65))
(assert (= temp468_67 (select ARGNAME_output_padding_NAMEEND_VAL temp468_66)))
(assert (= temp468_68 #x0000000000000000))
(assert (= temp468_69 #x0000000000000000))
(assert (= temp468_70 temp468_69))
(assert (= temp468_71 (select ARGNAME_output_padding_NAMEEND_VAL temp468_70)))
(assert (= temp468_72 #x0000000000000000))
(assert (= temp468_73 #x0000000000000001))
(assert (= temp468_74 temp468_73))
(assert (= temp468_75 (select ARGNAME_output_padding_NAMEEND_VAL temp468_74)))
(assert (= temp468_76 #x0000000000000000))
(assert (= temp468_77 #x0000000000000002))
(assert (= temp468_78 temp468_77))
(assert (= temp468_79 (select ARGNAME_output_padding_NAMEEND_VAL temp468_78)))
(assert (= temp468_80 #x0000000000000000))
(assert (= temp468_81 #x0000000000000003))
(assert (= temp468_82 temp468_81))
(assert (= temp468_83 (select ARGNAME_output_padding_NAMEEND_VAL temp468_82)))
(assert (= temp468_84 #x0000000000000000))
(assert (= temp468_85 #x0000000000000004))
(assert (= temp468_86 temp468_85))
(assert (= temp468_87 (select ARGNAME_output_padding_NAMEEND_VAL temp468_86)))
(assert (= temp468_88 #x0000000000000000))
(assert (= temp468_89 #x0000000000000005))
(assert (= temp468_90 temp468_89))
(assert (= temp468_91 (select ARGNAME_output_padding_NAMEEND_VAL temp468_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp468_71 temp468_68)
             (bvslt temp468_75 temp468_72)
             (bvslt temp468_79 temp468_76)
             (bvslt temp468_83 temp468_80)
             (bvslt temp468_87 temp468_84)
             (bvslt temp468_91 temp468_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_92 #x0000000000000000))
(assert (= var1191725 temp468_92))
(assert (= temp468_93 #x0000000000000000))
(assert (= temp468_94 temp468_93))
(assert (= temp468_95 (select ARGNAME_stride_NAMEEND_VAL temp468_94)))
(assert (= temp468_96 #x0000000000000001))
(assert (= temp468_97 temp468_96))
(assert (= temp468_98 (select ARGNAME_stride_NAMEEND_VAL temp468_97)))
(assert (= temp468_99 #x0000000000000002))
(assert (= temp468_100 temp468_99))
(assert (= temp468_101 (select ARGNAME_stride_NAMEEND_VAL temp468_100)))
(assert (= temp468_102 #x0000000000000003))
(assert (= temp468_103 temp468_102))
(assert (= temp468_104 (select ARGNAME_stride_NAMEEND_VAL temp468_103)))
(assert (= temp468_105 #x0000000000000004))
(assert (= temp468_106 temp468_105))
(assert (= temp468_107 (select ARGNAME_stride_NAMEEND_VAL temp468_106)))
(assert (= temp468_108 #x0000000000000005))
(assert (= temp468_109 temp468_108))
(assert (= temp468_110 (select ARGNAME_stride_NAMEEND_VAL temp468_109)))
(assert (= temp468_111 #x0000000000000000))
(assert (= temp468_112 #x0000000000000000))
(assert (= temp468_113 temp468_112))
(assert (= temp468_114 (select ARGNAME_stride_NAMEEND_VAL temp468_113)))
(assert (= temp468_115 #x0000000000000000))
(assert (= temp468_116 #x0000000000000001))
(assert (= temp468_117 temp468_116))
(assert (= temp468_118 (select ARGNAME_stride_NAMEEND_VAL temp468_117)))
(assert (= temp468_119 #x0000000000000000))
(assert (= temp468_120 #x0000000000000002))
(assert (= temp468_121 temp468_120))
(assert (= temp468_122 (select ARGNAME_stride_NAMEEND_VAL temp468_121)))
(assert (= temp468_123 #x0000000000000000))
(assert (= temp468_124 #x0000000000000003))
(assert (= temp468_125 temp468_124))
(assert (= temp468_126 (select ARGNAME_stride_NAMEEND_VAL temp468_125)))
(assert (= temp468_127 #x0000000000000000))
(assert (= temp468_128 #x0000000000000004))
(assert (= temp468_129 temp468_128))
(assert (= temp468_130 (select ARGNAME_stride_NAMEEND_VAL temp468_129)))
(assert (= temp468_131 #x0000000000000000))
(assert (= temp468_132 #x0000000000000005))
(assert (= temp468_133 temp468_132))
(assert (= temp468_134 (select ARGNAME_stride_NAMEEND_VAL temp468_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp468_114 temp468_111)
             (bvsle temp468_118 temp468_115)
             (bvsle temp468_122 temp468_119)
             (bvsle temp468_126 temp468_123)
             (bvsle temp468_130 temp468_127)
             (bvsle temp468_134 temp468_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_135 #x0000000000000000))
(assert (= var1191735 temp468_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_136 #x0000000000000001))
(assert (= var1191747 temp468_136))
(assert (= temp468_137 #x0000000000000000))
(assert (= var1179826 temp468_137))
(assert (= temp468_138 #x0000000000000000))
(assert (= temp468_139 temp468_138))
(assert (= temp468_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_139)))
(assert (= temp468_141 #x0000000000000001))
(assert (= temp468_142 temp468_141))
(assert (= temp468_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_142)))
(assert (= temp468_144 #x0000000000000002))
(assert (= temp468_145 temp468_144))
(assert (= temp468_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_145)))
(assert (= temp468_147 #x0000000000000003))
(assert (= temp468_148 temp468_147))
(assert (= temp468_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_148)))
(assert (= temp468_150 #x0000000000000004))
(assert (= temp468_151 temp468_150))
(assert (= temp468_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_151)))
(assert (= temp468_153 #x0000000000000005))
(assert (= temp468_154 temp468_153))
(assert (= temp468_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_154)))
(assert (= temp468_157 var1179826))
(assert (= temp468_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_157)))
(assert (= temp468_156 temp468_158))
(assert (= var1191780
   (ite (bvslt temp468_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_159 #x0000000000000000))
(assert (= var1191780 temp468_159))
(assert (= temp468_160 #x0000000000000000))
(assert (= var1179826 temp468_160))
(assert (= temp468_162 var1179826))
(assert (= temp468_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_162)))
(assert (= temp468_161 temp468_163))
(assert (= var1191802 (bvsmod temp468_161 ARGNAME_groups_NAMEEND)))
(assert (= temp468_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp468_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp468_165 #x0000000000000001))
(assert (= var1191803 temp468_165))
(assert (= temp468_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp468_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_167 #x0000000000000001))
(assert (= var1191823 temp468_167))
(assert (= temp468_168 #x0000000000000001))
(assert (= var1180714 temp468_168))
(assert (= temp468_169 #x0000000000000000))
(assert (= temp468_170 temp468_169))
(assert (= temp468_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp468_170)))
(assert (= temp468_172 #x0000000000000001))
(assert (= temp468_173 temp468_172))
(assert (= temp468_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp468_173)))
(assert (= temp468_175 #x0000000000000002))
(assert (= temp468_176 temp468_175))
(assert (= temp468_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp468_176)))
(assert (= temp468_178 #x0000000000000003))
(assert (= temp468_179 temp468_178))
(assert (= temp468_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp468_179)))
(assert (= temp468_181 #x0000000000000004))
(assert (= temp468_182 temp468_181))
(assert (= temp468_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp468_182)))
(assert (= temp468_184 #x0000000000000005))
(assert (= temp468_185 temp468_184))
(assert (= temp468_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp468_185)))
(assert (= temp468_187 #x0000000000000000))
(assert (= temp468_188
   (ite (bvslt var1180714 temp468_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp468_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp468_188)))
(assert (= var1191831 temp468_189))
(assert (bvslt (ite (bvslt var1180714 temp468_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp468_190 #x0000000000000001))
(assert (= var1180714 temp468_190))
(assert (= temp468_192 var1180714))
(assert (= temp468_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_192)))
(assert (= temp468_191 temp468_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp468_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp468_194 #x0000000000000001))
(assert (= var1191836 temp468_194))
(assert (= temp468_195 #x0000000000000000))
(assert (= var1179826 temp468_195))
(assert (= temp468_197 var1179826))
(assert (= temp468_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_197)))
(assert (= temp468_196 temp468_198))
(assert (= temp468_199 #x0000000000000002))
(assert (= var1586025 temp468_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp468_200 #x0000000000000001))
(assert (= var1191993 temp468_200))
(assert (= temp468_201 #x0000000000000001))
(assert (= var2700303 temp468_201))
(assert (= temp468_202 #x0000000000000001))
(assert (= var2962447 temp468_202))
(assert (= temp468_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp468_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_204 #x0000000000000001))
(assert (= var211058 temp468_204))
(assert (= temp468_205 #x0000000000000001))
(assert (= var211188 temp468_205))
(assert (= var3879401 var211188))
(assert (= temp468_206 #x0000000000000000))
(assert (= var3866802 temp468_206))
(assert (= temp468_207 #x0000000000000000))
(assert (= temp468_208
   (ite (bvslt var3866802 temp468_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp468_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp468_208)))
(assert (= var3879420 temp468_209))
(assert (bvslt (ite (bvslt var3866802 temp468_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp468_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp468_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp468_211 #x0000000000000001))
(assert (= var3879421 temp468_211))
(assert (= temp468_212 #x0000000000000000))
(assert (= var4079423 temp468_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp468_213 #x0000000000000002))
(assert (= var4208259 temp468_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_214 #x0000000000000000))
(assert (= var4273820 temp468_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp468_215 #x0000000000000001))
(assert (= var211058 temp468_215))
(assert (= temp468_216 #x0000000000000000))
(assert (= var4928276 temp468_216))
(assert (= var4928243 var4928276))
(assert (= var4796807 var4928243))
(assert (= var4796803 var4796807))
(assert (= var212669 var4796803))
(assert (= temp468_217 #x0000000000000000))
(assert (= var212669 temp468_217))
(model-add temp468_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp468_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp468_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp468_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






