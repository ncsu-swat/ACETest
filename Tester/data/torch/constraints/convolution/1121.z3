(declare-fun temp10225_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10225_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10225_3 () (_ BitVec 64))
(declare-fun temp10225_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10225_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10225_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10225_7 () (_ BitVec 64))
(declare-fun temp10225_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10225_9 () (_ BitVec 64))
(declare-fun temp10225_10 () (_ BitVec 64))
(declare-fun temp10225_11 () (_ BitVec 64))
(declare-fun temp10225_12 () (_ BitVec 64))
(declare-fun temp10225_13 () (_ BitVec 64))
(declare-fun temp10225_14 () (_ BitVec 64))
(declare-fun temp10225_15 () (_ BitVec 64))
(declare-fun temp10225_16 () (_ BitVec 64))
(declare-fun temp10225_17 () (_ BitVec 64))
(declare-fun temp10225_18 () (_ BitVec 64))
(declare-fun temp10225_19 () (_ BitVec 64))
(declare-fun temp10225_20 () (_ BitVec 64))
(declare-fun temp10225_21 () (_ BitVec 64))
(declare-fun temp10225_22 () (_ BitVec 64))
(declare-fun temp10225_23 () (_ BitVec 64))
(declare-fun temp10225_24 () (_ BitVec 64))
(declare-fun temp10225_25 () (_ BitVec 64))
(declare-fun temp10225_26 () (_ BitVec 64))
(declare-fun temp10225_27 () (_ BitVec 64))
(declare-fun temp10225_28 () (_ BitVec 64))
(declare-fun temp10225_29 () (_ BitVec 64))
(declare-fun temp10225_30 () (_ BitVec 64))
(declare-fun temp10225_31 () (_ BitVec 64))
(declare-fun temp10225_32 () (_ BitVec 64))
(declare-fun temp10225_33 () (_ BitVec 64))
(declare-fun temp10225_34 () (_ BitVec 64))
(declare-fun temp10225_35 () (_ BitVec 64))
(declare-fun temp10225_36 () (_ BitVec 64))
(declare-fun temp10225_37 () (_ BitVec 64))
(declare-fun temp10225_38 () (_ BitVec 64))
(declare-fun temp10225_39 () (_ BitVec 64))
(declare-fun temp10225_40 () (_ BitVec 64))
(declare-fun temp10225_41 () (_ BitVec 64))
(declare-fun temp10225_42 () (_ BitVec 64))
(declare-fun temp10225_43 () (_ BitVec 64))
(declare-fun temp10225_44 () (_ BitVec 64))
(declare-fun temp10225_45 () (_ BitVec 64))
(declare-fun temp10225_46 () (_ BitVec 64))
(declare-fun temp10225_47 () (_ BitVec 64))
(declare-fun temp10225_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10225_49 () (_ BitVec 64))
(declare-fun temp10225_50 () (_ BitVec 64))
(declare-fun temp10225_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10225_52 () (_ BitVec 64))
(declare-fun temp10225_53 () (_ BitVec 64))
(declare-fun temp10225_54 () (_ BitVec 64))
(declare-fun temp10225_55 () (_ BitVec 64))
(declare-fun temp10225_56 () (_ BitVec 64))
(declare-fun temp10225_57 () (_ BitVec 64))
(declare-fun temp10225_58 () (_ BitVec 64))
(declare-fun temp10225_59 () (_ BitVec 64))
(declare-fun temp10225_60 () (_ BitVec 64))
(declare-fun temp10225_61 () (_ BitVec 64))
(declare-fun temp10225_62 () (_ BitVec 64))
(declare-fun temp10225_63 () (_ BitVec 64))
(declare-fun temp10225_64 () (_ BitVec 64))
(declare-fun temp10225_65 () (_ BitVec 64))
(declare-fun temp10225_66 () (_ BitVec 64))
(declare-fun temp10225_67 () (_ BitVec 64))
(declare-fun temp10225_68 () (_ BitVec 64))
(declare-fun temp10225_69 () (_ BitVec 64))
(declare-fun temp10225_70 () (_ BitVec 64))
(declare-fun temp10225_71 () (_ BitVec 64))
(declare-fun temp10225_72 () (_ BitVec 64))
(declare-fun temp10225_73 () (_ BitVec 64))
(declare-fun temp10225_74 () (_ BitVec 64))
(declare-fun temp10225_75 () (_ BitVec 64))
(declare-fun temp10225_76 () (_ BitVec 64))
(declare-fun temp10225_77 () (_ BitVec 64))
(declare-fun temp10225_78 () (_ BitVec 64))
(declare-fun temp10225_79 () (_ BitVec 64))
(declare-fun temp10225_80 () (_ BitVec 64))
(declare-fun temp10225_81 () (_ BitVec 64))
(declare-fun temp10225_82 () (_ BitVec 64))
(declare-fun temp10225_83 () (_ BitVec 64))
(declare-fun temp10225_84 () (_ BitVec 64))
(declare-fun temp10225_85 () (_ BitVec 64))
(declare-fun temp10225_86 () (_ BitVec 64))
(declare-fun temp10225_87 () (_ BitVec 64))
(declare-fun temp10225_88 () (_ BitVec 64))
(declare-fun temp10225_89 () (_ BitVec 64))
(declare-fun temp10225_90 () (_ BitVec 64))
(declare-fun temp10225_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10225_92 () (_ BitVec 64))
(declare-fun temp10225_93 () (_ BitVec 64))
(declare-fun temp10225_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10225_95 () (_ BitVec 64))
(declare-fun temp10225_96 () (_ BitVec 64))
(declare-fun temp10225_97 () (_ BitVec 64))
(declare-fun temp10225_98 () (_ BitVec 64))
(declare-fun temp10225_99 () (_ BitVec 64))
(declare-fun temp10225_100 () (_ BitVec 64))
(declare-fun temp10225_101 () (_ BitVec 64))
(declare-fun temp10225_102 () (_ BitVec 64))
(declare-fun temp10225_103 () (_ BitVec 64))
(declare-fun temp10225_104 () (_ BitVec 64))
(declare-fun temp10225_105 () (_ BitVec 64))
(declare-fun temp10225_106 () (_ BitVec 64))
(declare-fun temp10225_107 () (_ BitVec 64))
(declare-fun temp10225_108 () (_ BitVec 64))
(declare-fun temp10225_109 () (_ BitVec 64))
(declare-fun temp10225_110 () (_ BitVec 64))
(declare-fun temp10225_111 () (_ BitVec 64))
(declare-fun temp10225_112 () (_ BitVec 64))
(declare-fun temp10225_113 () (_ BitVec 64))
(declare-fun temp10225_114 () (_ BitVec 64))
(declare-fun temp10225_115 () (_ BitVec 64))
(declare-fun temp10225_116 () (_ BitVec 64))
(declare-fun temp10225_117 () (_ BitVec 64))
(declare-fun temp10225_118 () (_ BitVec 64))
(declare-fun temp10225_119 () (_ BitVec 64))
(declare-fun temp10225_120 () (_ BitVec 64))
(declare-fun temp10225_121 () (_ BitVec 64))
(declare-fun temp10225_122 () (_ BitVec 64))
(declare-fun temp10225_123 () (_ BitVec 64))
(declare-fun temp10225_124 () (_ BitVec 64))
(declare-fun temp10225_125 () (_ BitVec 64))
(declare-fun temp10225_126 () (_ BitVec 64))
(declare-fun temp10225_127 () (_ BitVec 64))
(declare-fun temp10225_128 () (_ BitVec 64))
(declare-fun temp10225_129 () (_ BitVec 64))
(declare-fun temp10225_130 () (_ BitVec 64))
(declare-fun temp10225_131 () (_ BitVec 64))
(declare-fun temp10225_132 () (_ BitVec 64))
(declare-fun temp10225_133 () (_ BitVec 64))
(declare-fun temp10225_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10225_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10225_136 () (_ BitVec 64))
(declare-fun temp10225_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10225_138 () (_ BitVec 64))
(declare-fun temp10225_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10225_140 () (_ BitVec 64))
(declare-fun temp10225_141 () (_ BitVec 64))
(declare-fun temp10225_142 () (_ BitVec 64))
(declare-fun temp10225_143 () (_ BitVec 64))
(declare-fun temp10225_144 () (_ BitVec 64))
(declare-fun temp10225_145 () (_ BitVec 64))
(declare-fun temp10225_146 () (_ BitVec 64))
(declare-fun temp10225_147 () (_ BitVec 64))
(declare-fun temp10225_148 () (_ BitVec 64))
(declare-fun temp10225_149 () (_ BitVec 64))
(declare-fun temp10225_150 () (_ BitVec 64))
(declare-fun temp10225_151 () (_ BitVec 64))
(declare-fun temp10225_152 () (_ BitVec 64))
(declare-fun temp10225_153 () (_ BitVec 64))
(declare-fun temp10225_154 () (_ BitVec 64))
(declare-fun temp10225_155 () (_ BitVec 64))
(declare-fun temp10225_157 () (_ BitVec 64))
(declare-fun temp10225_158 () (_ BitVec 64))
(declare-fun temp10225_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10225_159 () (_ BitVec 64))
(declare-fun temp10225_160 () (_ BitVec 64))
(declare-fun temp10225_162 () (_ BitVec 64))
(declare-fun temp10225_163 () (_ BitVec 64))
(declare-fun temp10225_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10225_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10225_165 () (_ BitVec 64))
(declare-fun temp10225_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10225_167 () (_ BitVec 64))
(declare-fun temp10225_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10225_169 () (_ BitVec 64))
(declare-fun temp10225_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10225_171 () (_ BitVec 64))
(declare-fun temp10225_172 () (_ BitVec 64))
(declare-fun temp10225_173 () (_ BitVec 64))
(declare-fun temp10225_174 () (_ BitVec 64))
(declare-fun temp10225_175 () (_ BitVec 64))
(declare-fun temp10225_176 () (_ BitVec 64))
(declare-fun temp10225_177 () (_ BitVec 64))
(declare-fun temp10225_178 () (_ BitVec 64))
(declare-fun temp10225_179 () (_ BitVec 64))
(declare-fun temp10225_180 () (_ BitVec 64))
(declare-fun temp10225_181 () (_ BitVec 64))
(declare-fun temp10225_182 () (_ BitVec 64))
(declare-fun temp10225_183 () (_ BitVec 64))
(declare-fun temp10225_184 () (_ BitVec 64))
(declare-fun temp10225_185 () (_ BitVec 64))
(declare-fun temp10225_186 () (_ BitVec 64))
(declare-fun temp10225_187 () (_ BitVec 64))
(declare-fun temp10225_188 () (_ BitVec 64))
(declare-fun temp10225_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10225_190 () (_ BitVec 64))
(declare-fun temp10225_192 () (_ BitVec 64))
(declare-fun temp10225_193 () (_ BitVec 64))
(declare-fun temp10225_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10225_194 () (_ BitVec 64))
(declare-fun temp10225_195 () (_ BitVec 64))
(declare-fun temp10225_197 () (_ BitVec 64))
(declare-fun temp10225_198 () (_ BitVec 64))
(declare-fun temp10225_196 () (_ BitVec 64))
(declare-fun temp10225_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10225_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10225_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10225_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10225_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10225_204 () (_ BitVec 64))
(declare-fun temp10225_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10225_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10225_207 () (_ BitVec 64))
(declare-fun temp10225_208 () (_ BitVec 64))
(declare-fun temp10225_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10225_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10225_211 () (_ BitVec 64))
(declare-fun temp10225_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10225_213 () (_ BitVec 64))
(declare-fun temp10225_214 () (_ BitVec 64))
(declare-fun temp10225_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10225_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10225_217 () (_ BitVec 64))
(declare-fun temp10225_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10225_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10225_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp10225_221 () (_ BitVec 64))
(assert (= temp10225_1 #x0000000000000001))
(assert (= var77203 temp10225_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10225_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10225_2)))
(assert (= temp10225_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10225_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10225_4 #x0000000000000000))
(assert (= var210941 temp10225_4))
(assert (= temp10225_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10225_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10225_6 #x0000000000000000))
(assert (= var210986 temp10225_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10225_7 #x0000000000000000))
(assert (= temp10225_8 temp10225_7))
(assert (= temp10225_9 (select ARGNAME_padding_NAMEEND_VAL temp10225_8)))
(assert (= temp10225_10 #x0000000000000001))
(assert (= temp10225_11 temp10225_10))
(assert (= temp10225_12 (select ARGNAME_padding_NAMEEND_VAL temp10225_11)))
(assert (= temp10225_13 #x0000000000000002))
(assert (= temp10225_14 temp10225_13))
(assert (= temp10225_15 (select ARGNAME_padding_NAMEEND_VAL temp10225_14)))
(assert (= temp10225_16 #x0000000000000003))
(assert (= temp10225_17 temp10225_16))
(assert (= temp10225_18 (select ARGNAME_padding_NAMEEND_VAL temp10225_17)))
(assert (= temp10225_19 #x0000000000000004))
(assert (= temp10225_20 temp10225_19))
(assert (= temp10225_21 (select ARGNAME_padding_NAMEEND_VAL temp10225_20)))
(assert (= temp10225_22 #x0000000000000005))
(assert (= temp10225_23 temp10225_22))
(assert (= temp10225_24 (select ARGNAME_padding_NAMEEND_VAL temp10225_23)))
(assert (= temp10225_25 #x0000000000000000))
(assert (= temp10225_26 #x0000000000000000))
(assert (= temp10225_27 temp10225_26))
(assert (= temp10225_28 (select ARGNAME_padding_NAMEEND_VAL temp10225_27)))
(assert (= temp10225_29 #x0000000000000000))
(assert (= temp10225_30 #x0000000000000001))
(assert (= temp10225_31 temp10225_30))
(assert (= temp10225_32 (select ARGNAME_padding_NAMEEND_VAL temp10225_31)))
(assert (= temp10225_33 #x0000000000000000))
(assert (= temp10225_34 #x0000000000000002))
(assert (= temp10225_35 temp10225_34))
(assert (= temp10225_36 (select ARGNAME_padding_NAMEEND_VAL temp10225_35)))
(assert (= temp10225_37 #x0000000000000000))
(assert (= temp10225_38 #x0000000000000003))
(assert (= temp10225_39 temp10225_38))
(assert (= temp10225_40 (select ARGNAME_padding_NAMEEND_VAL temp10225_39)))
(assert (= temp10225_41 #x0000000000000000))
(assert (= temp10225_42 #x0000000000000004))
(assert (= temp10225_43 temp10225_42))
(assert (= temp10225_44 (select ARGNAME_padding_NAMEEND_VAL temp10225_43)))
(assert (= temp10225_45 #x0000000000000000))
(assert (= temp10225_46 #x0000000000000005))
(assert (= temp10225_47 temp10225_46))
(assert (= temp10225_48 (select ARGNAME_padding_NAMEEND_VAL temp10225_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10225_28 temp10225_25)
             (bvslt temp10225_32 temp10225_29)
             (bvslt temp10225_36 temp10225_33)
             (bvslt temp10225_40 temp10225_37)
             (bvslt temp10225_44 temp10225_41)
             (bvslt temp10225_48 temp10225_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10225_49 #x0000000000000000))
(assert (= var1191714 temp10225_49))
(assert (= temp10225_50 #x0000000000000000))
(assert (= temp10225_51 temp10225_50))
(assert (= temp10225_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10225_51)))
(assert (= temp10225_53 #x0000000000000001))
(assert (= temp10225_54 temp10225_53))
(assert (= temp10225_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10225_54)))
(assert (= temp10225_56 #x0000000000000002))
(assert (= temp10225_57 temp10225_56))
(assert (= temp10225_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10225_57)))
(assert (= temp10225_59 #x0000000000000003))
(assert (= temp10225_60 temp10225_59))
(assert (= temp10225_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10225_60)))
(assert (= temp10225_62 #x0000000000000004))
(assert (= temp10225_63 temp10225_62))
(assert (= temp10225_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10225_63)))
(assert (= temp10225_65 #x0000000000000005))
(assert (= temp10225_66 temp10225_65))
(assert (= temp10225_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10225_66)))
(assert (= temp10225_68 #x0000000000000000))
(assert (= temp10225_69 #x0000000000000000))
(assert (= temp10225_70 temp10225_69))
(assert (= temp10225_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10225_70)))
(assert (= temp10225_72 #x0000000000000000))
(assert (= temp10225_73 #x0000000000000001))
(assert (= temp10225_74 temp10225_73))
(assert (= temp10225_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10225_74)))
(assert (= temp10225_76 #x0000000000000000))
(assert (= temp10225_77 #x0000000000000002))
(assert (= temp10225_78 temp10225_77))
(assert (= temp10225_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10225_78)))
(assert (= temp10225_80 #x0000000000000000))
(assert (= temp10225_81 #x0000000000000003))
(assert (= temp10225_82 temp10225_81))
(assert (= temp10225_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10225_82)))
(assert (= temp10225_84 #x0000000000000000))
(assert (= temp10225_85 #x0000000000000004))
(assert (= temp10225_86 temp10225_85))
(assert (= temp10225_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10225_86)))
(assert (= temp10225_88 #x0000000000000000))
(assert (= temp10225_89 #x0000000000000005))
(assert (= temp10225_90 temp10225_89))
(assert (= temp10225_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10225_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10225_71 temp10225_68)
             (bvslt temp10225_75 temp10225_72)
             (bvslt temp10225_79 temp10225_76)
             (bvslt temp10225_83 temp10225_80)
             (bvslt temp10225_87 temp10225_84)
             (bvslt temp10225_91 temp10225_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10225_92 #x0000000000000000))
(assert (= var1191725 temp10225_92))
(assert (= temp10225_93 #x0000000000000000))
(assert (= temp10225_94 temp10225_93))
(assert (= temp10225_95 (select ARGNAME_stride_NAMEEND_VAL temp10225_94)))
(assert (= temp10225_96 #x0000000000000001))
(assert (= temp10225_97 temp10225_96))
(assert (= temp10225_98 (select ARGNAME_stride_NAMEEND_VAL temp10225_97)))
(assert (= temp10225_99 #x0000000000000002))
(assert (= temp10225_100 temp10225_99))
(assert (= temp10225_101 (select ARGNAME_stride_NAMEEND_VAL temp10225_100)))
(assert (= temp10225_102 #x0000000000000003))
(assert (= temp10225_103 temp10225_102))
(assert (= temp10225_104 (select ARGNAME_stride_NAMEEND_VAL temp10225_103)))
(assert (= temp10225_105 #x0000000000000004))
(assert (= temp10225_106 temp10225_105))
(assert (= temp10225_107 (select ARGNAME_stride_NAMEEND_VAL temp10225_106)))
(assert (= temp10225_108 #x0000000000000005))
(assert (= temp10225_109 temp10225_108))
(assert (= temp10225_110 (select ARGNAME_stride_NAMEEND_VAL temp10225_109)))
(assert (= temp10225_111 #x0000000000000000))
(assert (= temp10225_112 #x0000000000000000))
(assert (= temp10225_113 temp10225_112))
(assert (= temp10225_114 (select ARGNAME_stride_NAMEEND_VAL temp10225_113)))
(assert (= temp10225_115 #x0000000000000000))
(assert (= temp10225_116 #x0000000000000001))
(assert (= temp10225_117 temp10225_116))
(assert (= temp10225_118 (select ARGNAME_stride_NAMEEND_VAL temp10225_117)))
(assert (= temp10225_119 #x0000000000000000))
(assert (= temp10225_120 #x0000000000000002))
(assert (= temp10225_121 temp10225_120))
(assert (= temp10225_122 (select ARGNAME_stride_NAMEEND_VAL temp10225_121)))
(assert (= temp10225_123 #x0000000000000000))
(assert (= temp10225_124 #x0000000000000003))
(assert (= temp10225_125 temp10225_124))
(assert (= temp10225_126 (select ARGNAME_stride_NAMEEND_VAL temp10225_125)))
(assert (= temp10225_127 #x0000000000000000))
(assert (= temp10225_128 #x0000000000000004))
(assert (= temp10225_129 temp10225_128))
(assert (= temp10225_130 (select ARGNAME_stride_NAMEEND_VAL temp10225_129)))
(assert (= temp10225_131 #x0000000000000000))
(assert (= temp10225_132 #x0000000000000005))
(assert (= temp10225_133 temp10225_132))
(assert (= temp10225_134 (select ARGNAME_stride_NAMEEND_VAL temp10225_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10225_114 temp10225_111)
             (bvsle temp10225_118 temp10225_115)
             (bvsle temp10225_122 temp10225_119)
             (bvsle temp10225_126 temp10225_123)
             (bvsle temp10225_130 temp10225_127)
             (bvsle temp10225_134 temp10225_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10225_135 #x0000000000000000))
(assert (= var1191735 temp10225_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10225_136 #x0000000000000001))
(assert (= var1191747 temp10225_136))
(assert (= temp10225_137 #x0000000000000000))
(assert (= var1179826 temp10225_137))
(assert (= temp10225_138 #x0000000000000000))
(assert (= temp10225_139 temp10225_138))
(assert (= temp10225_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10225_139)))
(assert (= temp10225_141 #x0000000000000001))
(assert (= temp10225_142 temp10225_141))
(assert (= temp10225_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10225_142)))
(assert (= temp10225_144 #x0000000000000002))
(assert (= temp10225_145 temp10225_144))
(assert (= temp10225_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10225_145)))
(assert (= temp10225_147 #x0000000000000003))
(assert (= temp10225_148 temp10225_147))
(assert (= temp10225_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10225_148)))
(assert (= temp10225_150 #x0000000000000004))
(assert (= temp10225_151 temp10225_150))
(assert (= temp10225_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10225_151)))
(assert (= temp10225_153 #x0000000000000005))
(assert (= temp10225_154 temp10225_153))
(assert (= temp10225_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10225_154)))
(assert (= temp10225_157 var1179826))
(assert (= temp10225_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10225_157)))
(assert (= temp10225_156 temp10225_158))
(assert (= var1191780
   (ite (bvslt temp10225_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10225_159 #x0000000000000000))
(assert (= var1191780 temp10225_159))
(assert (= temp10225_160 #x0000000000000000))
(assert (= var1179826 temp10225_160))
(assert (= temp10225_162 var1179826))
(assert (= temp10225_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10225_162)))
(assert (= temp10225_161 temp10225_163))
(assert (= var1191802 (bvsmod temp10225_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10225_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10225_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10225_165 #x0000000000000001))
(assert (= var1191803 temp10225_165))
(assert (= temp10225_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10225_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10225_167 #x0000000000000001))
(assert (= var1191823 temp10225_167))
(assert (= temp10225_168 #x0000000000000001))
(assert (= var1180714 temp10225_168))
(assert (= temp10225_169 #x0000000000000000))
(assert (= temp10225_170 temp10225_169))
(assert (= temp10225_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10225_170)))
(assert (= temp10225_172 #x0000000000000001))
(assert (= temp10225_173 temp10225_172))
(assert (= temp10225_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10225_173)))
(assert (= temp10225_175 #x0000000000000002))
(assert (= temp10225_176 temp10225_175))
(assert (= temp10225_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10225_176)))
(assert (= temp10225_178 #x0000000000000003))
(assert (= temp10225_179 temp10225_178))
(assert (= temp10225_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10225_179)))
(assert (= temp10225_181 #x0000000000000004))
(assert (= temp10225_182 temp10225_181))
(assert (= temp10225_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10225_182)))
(assert (= temp10225_184 #x0000000000000005))
(assert (= temp10225_185 temp10225_184))
(assert (= temp10225_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10225_185)))
(assert (= temp10225_187 #x0000000000000000))
(assert (= temp10225_188
   (ite (bvslt var1180714 temp10225_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10225_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10225_188)))
(assert (= var1191831 temp10225_189))
(assert (bvslt (ite (bvslt var1180714 temp10225_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10225_190 #x0000000000000001))
(assert (= var1180714 temp10225_190))
(assert (= temp10225_192 var1180714))
(assert (= temp10225_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10225_192)))
(assert (= temp10225_191 temp10225_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10225_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10225_194 #x0000000000000001))
(assert (= var1191836 temp10225_194))
(assert (= temp10225_195 #x0000000000000000))
(assert (= var1179826 temp10225_195))
(assert (= temp10225_197 var1179826))
(assert (= temp10225_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10225_197)))
(assert (= temp10225_196 temp10225_198))
(assert (= temp10225_199 #x0000000000000002))
(assert (= var1586025 temp10225_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10225_200 #x0000000000000001))
(assert (= var1191993 temp10225_200))
(assert (= temp10225_201 #x0000000000000001))
(assert (= var2700303 temp10225_201))
(assert (= temp10225_202 #x0000000000000001))
(assert (= var2962447 temp10225_202))
(assert (= temp10225_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10225_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10225_204 #x0000000000000001))
(assert (= var211058 temp10225_204))
(assert (= temp10225_205 #x0000000000000001))
(assert (= var211188 temp10225_205))
(assert (= var3879401 var211188))
(assert (= temp10225_206 #x0000000000000000))
(assert (= var3866802 temp10225_206))
(assert (= temp10225_207 #x0000000000000000))
(assert (= temp10225_208
   (ite (bvslt var3866802 temp10225_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10225_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10225_208)))
(assert (= var3879420 temp10225_209))
(assert (bvslt (ite (bvslt var3866802 temp10225_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10225_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10225_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10225_211 #x0000000000000000))
(assert (= var3879421 temp10225_211))
(assert (= temp10225_212 #x0000000000000001))
(assert (= var3867690 temp10225_212))
(assert (= temp10225_213 #x0000000000000000))
(assert (= temp10225_214
   (ite (bvslt var3867690 temp10225_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10225_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10225_214)))
(assert (= var3879423 temp10225_215))
(assert (bvslt (ite (bvslt var3867690 temp10225_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10225_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10225_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10225_217 #x0000000000000001))
(assert (= var3879424 temp10225_217))
(assert (= temp10225_218 #x0000000000000000))
(assert (= var4079423 temp10225_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10225_219 #x0000000000000002))
(assert (= var4208259 temp10225_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10225_220 #x0000000000000000))
(assert (= var4273820 temp10225_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5321104 var211201))
(assert (= var5583248 var211201))
(assert (= temp10225_221 #x0000000000000001))
(assert (= var211058 temp10225_221))
(model-add temp10225_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10225_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10225_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10225_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





