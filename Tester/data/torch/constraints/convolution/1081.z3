(declare-fun temp10172_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10172_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10172_3 () (_ BitVec 64))
(declare-fun temp10172_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10172_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10172_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10172_7 () (_ BitVec 64))
(declare-fun temp10172_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10172_9 () (_ BitVec 64))
(declare-fun temp10172_10 () (_ BitVec 64))
(declare-fun temp10172_11 () (_ BitVec 64))
(declare-fun temp10172_12 () (_ BitVec 64))
(declare-fun temp10172_13 () (_ BitVec 64))
(declare-fun temp10172_14 () (_ BitVec 64))
(declare-fun temp10172_15 () (_ BitVec 64))
(declare-fun temp10172_16 () (_ BitVec 64))
(declare-fun temp10172_17 () (_ BitVec 64))
(declare-fun temp10172_18 () (_ BitVec 64))
(declare-fun temp10172_19 () (_ BitVec 64))
(declare-fun temp10172_20 () (_ BitVec 64))
(declare-fun temp10172_21 () (_ BitVec 64))
(declare-fun temp10172_22 () (_ BitVec 64))
(declare-fun temp10172_23 () (_ BitVec 64))
(declare-fun temp10172_24 () (_ BitVec 64))
(declare-fun temp10172_25 () (_ BitVec 64))
(declare-fun temp10172_26 () (_ BitVec 64))
(declare-fun temp10172_27 () (_ BitVec 64))
(declare-fun temp10172_28 () (_ BitVec 64))
(declare-fun temp10172_29 () (_ BitVec 64))
(declare-fun temp10172_30 () (_ BitVec 64))
(declare-fun temp10172_31 () (_ BitVec 64))
(declare-fun temp10172_32 () (_ BitVec 64))
(declare-fun temp10172_33 () (_ BitVec 64))
(declare-fun temp10172_34 () (_ BitVec 64))
(declare-fun temp10172_35 () (_ BitVec 64))
(declare-fun temp10172_36 () (_ BitVec 64))
(declare-fun temp10172_37 () (_ BitVec 64))
(declare-fun temp10172_38 () (_ BitVec 64))
(declare-fun temp10172_39 () (_ BitVec 64))
(declare-fun temp10172_40 () (_ BitVec 64))
(declare-fun temp10172_41 () (_ BitVec 64))
(declare-fun temp10172_42 () (_ BitVec 64))
(declare-fun temp10172_43 () (_ BitVec 64))
(declare-fun temp10172_44 () (_ BitVec 64))
(declare-fun temp10172_45 () (_ BitVec 64))
(declare-fun temp10172_46 () (_ BitVec 64))
(declare-fun temp10172_47 () (_ BitVec 64))
(declare-fun temp10172_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10172_49 () (_ BitVec 64))
(declare-fun temp10172_50 () (_ BitVec 64))
(declare-fun temp10172_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10172_52 () (_ BitVec 64))
(declare-fun temp10172_53 () (_ BitVec 64))
(declare-fun temp10172_54 () (_ BitVec 64))
(declare-fun temp10172_55 () (_ BitVec 64))
(declare-fun temp10172_56 () (_ BitVec 64))
(declare-fun temp10172_57 () (_ BitVec 64))
(declare-fun temp10172_58 () (_ BitVec 64))
(declare-fun temp10172_59 () (_ BitVec 64))
(declare-fun temp10172_60 () (_ BitVec 64))
(declare-fun temp10172_61 () (_ BitVec 64))
(declare-fun temp10172_62 () (_ BitVec 64))
(declare-fun temp10172_63 () (_ BitVec 64))
(declare-fun temp10172_64 () (_ BitVec 64))
(declare-fun temp10172_65 () (_ BitVec 64))
(declare-fun temp10172_66 () (_ BitVec 64))
(declare-fun temp10172_67 () (_ BitVec 64))
(declare-fun temp10172_68 () (_ BitVec 64))
(declare-fun temp10172_69 () (_ BitVec 64))
(declare-fun temp10172_70 () (_ BitVec 64))
(declare-fun temp10172_71 () (_ BitVec 64))
(declare-fun temp10172_72 () (_ BitVec 64))
(declare-fun temp10172_73 () (_ BitVec 64))
(declare-fun temp10172_74 () (_ BitVec 64))
(declare-fun temp10172_75 () (_ BitVec 64))
(declare-fun temp10172_76 () (_ BitVec 64))
(declare-fun temp10172_77 () (_ BitVec 64))
(declare-fun temp10172_78 () (_ BitVec 64))
(declare-fun temp10172_79 () (_ BitVec 64))
(declare-fun temp10172_80 () (_ BitVec 64))
(declare-fun temp10172_81 () (_ BitVec 64))
(declare-fun temp10172_82 () (_ BitVec 64))
(declare-fun temp10172_83 () (_ BitVec 64))
(declare-fun temp10172_84 () (_ BitVec 64))
(declare-fun temp10172_85 () (_ BitVec 64))
(declare-fun temp10172_86 () (_ BitVec 64))
(declare-fun temp10172_87 () (_ BitVec 64))
(declare-fun temp10172_88 () (_ BitVec 64))
(declare-fun temp10172_89 () (_ BitVec 64))
(declare-fun temp10172_90 () (_ BitVec 64))
(declare-fun temp10172_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10172_92 () (_ BitVec 64))
(declare-fun temp10172_93 () (_ BitVec 64))
(declare-fun temp10172_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10172_95 () (_ BitVec 64))
(declare-fun temp10172_96 () (_ BitVec 64))
(declare-fun temp10172_97 () (_ BitVec 64))
(declare-fun temp10172_98 () (_ BitVec 64))
(declare-fun temp10172_99 () (_ BitVec 64))
(declare-fun temp10172_100 () (_ BitVec 64))
(declare-fun temp10172_101 () (_ BitVec 64))
(declare-fun temp10172_102 () (_ BitVec 64))
(declare-fun temp10172_103 () (_ BitVec 64))
(declare-fun temp10172_104 () (_ BitVec 64))
(declare-fun temp10172_105 () (_ BitVec 64))
(declare-fun temp10172_106 () (_ BitVec 64))
(declare-fun temp10172_107 () (_ BitVec 64))
(declare-fun temp10172_108 () (_ BitVec 64))
(declare-fun temp10172_109 () (_ BitVec 64))
(declare-fun temp10172_110 () (_ BitVec 64))
(declare-fun temp10172_111 () (_ BitVec 64))
(declare-fun temp10172_112 () (_ BitVec 64))
(declare-fun temp10172_113 () (_ BitVec 64))
(declare-fun temp10172_114 () (_ BitVec 64))
(declare-fun temp10172_115 () (_ BitVec 64))
(declare-fun temp10172_116 () (_ BitVec 64))
(declare-fun temp10172_117 () (_ BitVec 64))
(declare-fun temp10172_118 () (_ BitVec 64))
(declare-fun temp10172_119 () (_ BitVec 64))
(declare-fun temp10172_120 () (_ BitVec 64))
(declare-fun temp10172_121 () (_ BitVec 64))
(declare-fun temp10172_122 () (_ BitVec 64))
(declare-fun temp10172_123 () (_ BitVec 64))
(declare-fun temp10172_124 () (_ BitVec 64))
(declare-fun temp10172_125 () (_ BitVec 64))
(declare-fun temp10172_126 () (_ BitVec 64))
(declare-fun temp10172_127 () (_ BitVec 64))
(declare-fun temp10172_128 () (_ BitVec 64))
(declare-fun temp10172_129 () (_ BitVec 64))
(declare-fun temp10172_130 () (_ BitVec 64))
(declare-fun temp10172_131 () (_ BitVec 64))
(declare-fun temp10172_132 () (_ BitVec 64))
(declare-fun temp10172_133 () (_ BitVec 64))
(declare-fun temp10172_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10172_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10172_136 () (_ BitVec 64))
(declare-fun temp10172_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10172_138 () (_ BitVec 64))
(declare-fun temp10172_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10172_140 () (_ BitVec 64))
(declare-fun temp10172_141 () (_ BitVec 64))
(declare-fun temp10172_142 () (_ BitVec 64))
(declare-fun temp10172_143 () (_ BitVec 64))
(declare-fun temp10172_144 () (_ BitVec 64))
(declare-fun temp10172_145 () (_ BitVec 64))
(declare-fun temp10172_146 () (_ BitVec 64))
(declare-fun temp10172_147 () (_ BitVec 64))
(declare-fun temp10172_148 () (_ BitVec 64))
(declare-fun temp10172_149 () (_ BitVec 64))
(declare-fun temp10172_150 () (_ BitVec 64))
(declare-fun temp10172_151 () (_ BitVec 64))
(declare-fun temp10172_152 () (_ BitVec 64))
(declare-fun temp10172_153 () (_ BitVec 64))
(declare-fun temp10172_154 () (_ BitVec 64))
(declare-fun temp10172_155 () (_ BitVec 64))
(declare-fun temp10172_157 () (_ BitVec 64))
(declare-fun temp10172_158 () (_ BitVec 64))
(declare-fun temp10172_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10172_159 () (_ BitVec 64))
(declare-fun temp10172_160 () (_ BitVec 64))
(declare-fun temp10172_162 () (_ BitVec 64))
(declare-fun temp10172_163 () (_ BitVec 64))
(declare-fun temp10172_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10172_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10172_165 () (_ BitVec 64))
(declare-fun temp10172_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10172_167 () (_ BitVec 64))
(declare-fun temp10172_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10172_169 () (_ BitVec 64))
(declare-fun temp10172_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10172_171 () (_ BitVec 64))
(declare-fun temp10172_172 () (_ BitVec 64))
(declare-fun temp10172_173 () (_ BitVec 64))
(declare-fun temp10172_174 () (_ BitVec 64))
(declare-fun temp10172_175 () (_ BitVec 64))
(declare-fun temp10172_176 () (_ BitVec 64))
(declare-fun temp10172_177 () (_ BitVec 64))
(declare-fun temp10172_178 () (_ BitVec 64))
(declare-fun temp10172_179 () (_ BitVec 64))
(declare-fun temp10172_180 () (_ BitVec 64))
(declare-fun temp10172_181 () (_ BitVec 64))
(declare-fun temp10172_182 () (_ BitVec 64))
(declare-fun temp10172_183 () (_ BitVec 64))
(declare-fun temp10172_184 () (_ BitVec 64))
(declare-fun temp10172_185 () (_ BitVec 64))
(declare-fun temp10172_186 () (_ BitVec 64))
(declare-fun temp10172_187 () (_ BitVec 64))
(declare-fun temp10172_188 () (_ BitVec 64))
(declare-fun temp10172_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10172_190 () (_ BitVec 64))
(declare-fun temp10172_192 () (_ BitVec 64))
(declare-fun temp10172_193 () (_ BitVec 64))
(declare-fun temp10172_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10172_194 () (_ BitVec 64))
(declare-fun temp10172_195 () (_ BitVec 64))
(declare-fun temp10172_197 () (_ BitVec 64))
(declare-fun temp10172_198 () (_ BitVec 64))
(declare-fun temp10172_196 () (_ BitVec 64))
(declare-fun temp10172_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10172_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10172_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10172_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10172_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10172_204 () (_ BitVec 64))
(declare-fun temp10172_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10172_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10172_207 () (_ BitVec 64))
(declare-fun temp10172_208 () (_ BitVec 64))
(declare-fun temp10172_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10172_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10172_211 () (_ BitVec 64))
(declare-fun temp10172_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10172_213 () (_ BitVec 64))
(declare-fun temp10172_214 () (_ BitVec 64))
(declare-fun temp10172_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10172_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10172_217 () (_ BitVec 64))
(declare-fun temp10172_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10172_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10172_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211962 () (_ BitVec 64))
(declare-fun temp10172_221 () (_ BitVec 64))
(declare-fun var211963 () (_ BitVec 64))
(declare-fun temp10172_222 () (_ BitVec 64))
(declare-fun temp10172_223 () (_ BitVec 64))
(declare-fun var6632212 () (_ BitVec 64))
(declare-fun var6632179 () (_ BitVec 64))
(declare-fun var6500743 () (_ BitVec 64))
(declare-fun var6500739 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10172_224 () (_ BitVec 64))
(assert (= temp10172_1 #x0000000000000001))
(assert (= var77203 temp10172_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10172_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10172_2)))
(assert (= temp10172_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10172_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10172_4 #x0000000000000000))
(assert (= var210941 temp10172_4))
(assert (= temp10172_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10172_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10172_6 #x0000000000000000))
(assert (= var210986 temp10172_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10172_7 #x0000000000000000))
(assert (= temp10172_8 temp10172_7))
(assert (= temp10172_9 (select ARGNAME_padding_NAMEEND_VAL temp10172_8)))
(assert (= temp10172_10 #x0000000000000001))
(assert (= temp10172_11 temp10172_10))
(assert (= temp10172_12 (select ARGNAME_padding_NAMEEND_VAL temp10172_11)))
(assert (= temp10172_13 #x0000000000000002))
(assert (= temp10172_14 temp10172_13))
(assert (= temp10172_15 (select ARGNAME_padding_NAMEEND_VAL temp10172_14)))
(assert (= temp10172_16 #x0000000000000003))
(assert (= temp10172_17 temp10172_16))
(assert (= temp10172_18 (select ARGNAME_padding_NAMEEND_VAL temp10172_17)))
(assert (= temp10172_19 #x0000000000000004))
(assert (= temp10172_20 temp10172_19))
(assert (= temp10172_21 (select ARGNAME_padding_NAMEEND_VAL temp10172_20)))
(assert (= temp10172_22 #x0000000000000005))
(assert (= temp10172_23 temp10172_22))
(assert (= temp10172_24 (select ARGNAME_padding_NAMEEND_VAL temp10172_23)))
(assert (= temp10172_25 #x0000000000000000))
(assert (= temp10172_26 #x0000000000000000))
(assert (= temp10172_27 temp10172_26))
(assert (= temp10172_28 (select ARGNAME_padding_NAMEEND_VAL temp10172_27)))
(assert (= temp10172_29 #x0000000000000000))
(assert (= temp10172_30 #x0000000000000001))
(assert (= temp10172_31 temp10172_30))
(assert (= temp10172_32 (select ARGNAME_padding_NAMEEND_VAL temp10172_31)))
(assert (= temp10172_33 #x0000000000000000))
(assert (= temp10172_34 #x0000000000000002))
(assert (= temp10172_35 temp10172_34))
(assert (= temp10172_36 (select ARGNAME_padding_NAMEEND_VAL temp10172_35)))
(assert (= temp10172_37 #x0000000000000000))
(assert (= temp10172_38 #x0000000000000003))
(assert (= temp10172_39 temp10172_38))
(assert (= temp10172_40 (select ARGNAME_padding_NAMEEND_VAL temp10172_39)))
(assert (= temp10172_41 #x0000000000000000))
(assert (= temp10172_42 #x0000000000000004))
(assert (= temp10172_43 temp10172_42))
(assert (= temp10172_44 (select ARGNAME_padding_NAMEEND_VAL temp10172_43)))
(assert (= temp10172_45 #x0000000000000000))
(assert (= temp10172_46 #x0000000000000005))
(assert (= temp10172_47 temp10172_46))
(assert (= temp10172_48 (select ARGNAME_padding_NAMEEND_VAL temp10172_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10172_28 temp10172_25)
             (bvslt temp10172_32 temp10172_29)
             (bvslt temp10172_36 temp10172_33)
             (bvslt temp10172_40 temp10172_37)
             (bvslt temp10172_44 temp10172_41)
             (bvslt temp10172_48 temp10172_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10172_49 #x0000000000000000))
(assert (= var1191714 temp10172_49))
(assert (= temp10172_50 #x0000000000000000))
(assert (= temp10172_51 temp10172_50))
(assert (= temp10172_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10172_51)))
(assert (= temp10172_53 #x0000000000000001))
(assert (= temp10172_54 temp10172_53))
(assert (= temp10172_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10172_54)))
(assert (= temp10172_56 #x0000000000000002))
(assert (= temp10172_57 temp10172_56))
(assert (= temp10172_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10172_57)))
(assert (= temp10172_59 #x0000000000000003))
(assert (= temp10172_60 temp10172_59))
(assert (= temp10172_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10172_60)))
(assert (= temp10172_62 #x0000000000000004))
(assert (= temp10172_63 temp10172_62))
(assert (= temp10172_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10172_63)))
(assert (= temp10172_65 #x0000000000000005))
(assert (= temp10172_66 temp10172_65))
(assert (= temp10172_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10172_66)))
(assert (= temp10172_68 #x0000000000000000))
(assert (= temp10172_69 #x0000000000000000))
(assert (= temp10172_70 temp10172_69))
(assert (= temp10172_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10172_70)))
(assert (= temp10172_72 #x0000000000000000))
(assert (= temp10172_73 #x0000000000000001))
(assert (= temp10172_74 temp10172_73))
(assert (= temp10172_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10172_74)))
(assert (= temp10172_76 #x0000000000000000))
(assert (= temp10172_77 #x0000000000000002))
(assert (= temp10172_78 temp10172_77))
(assert (= temp10172_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10172_78)))
(assert (= temp10172_80 #x0000000000000000))
(assert (= temp10172_81 #x0000000000000003))
(assert (= temp10172_82 temp10172_81))
(assert (= temp10172_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10172_82)))
(assert (= temp10172_84 #x0000000000000000))
(assert (= temp10172_85 #x0000000000000004))
(assert (= temp10172_86 temp10172_85))
(assert (= temp10172_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10172_86)))
(assert (= temp10172_88 #x0000000000000000))
(assert (= temp10172_89 #x0000000000000005))
(assert (= temp10172_90 temp10172_89))
(assert (= temp10172_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10172_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10172_71 temp10172_68)
             (bvslt temp10172_75 temp10172_72)
             (bvslt temp10172_79 temp10172_76)
             (bvslt temp10172_83 temp10172_80)
             (bvslt temp10172_87 temp10172_84)
             (bvslt temp10172_91 temp10172_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10172_92 #x0000000000000000))
(assert (= var1191725 temp10172_92))
(assert (= temp10172_93 #x0000000000000000))
(assert (= temp10172_94 temp10172_93))
(assert (= temp10172_95 (select ARGNAME_stride_NAMEEND_VAL temp10172_94)))
(assert (= temp10172_96 #x0000000000000001))
(assert (= temp10172_97 temp10172_96))
(assert (= temp10172_98 (select ARGNAME_stride_NAMEEND_VAL temp10172_97)))
(assert (= temp10172_99 #x0000000000000002))
(assert (= temp10172_100 temp10172_99))
(assert (= temp10172_101 (select ARGNAME_stride_NAMEEND_VAL temp10172_100)))
(assert (= temp10172_102 #x0000000000000003))
(assert (= temp10172_103 temp10172_102))
(assert (= temp10172_104 (select ARGNAME_stride_NAMEEND_VAL temp10172_103)))
(assert (= temp10172_105 #x0000000000000004))
(assert (= temp10172_106 temp10172_105))
(assert (= temp10172_107 (select ARGNAME_stride_NAMEEND_VAL temp10172_106)))
(assert (= temp10172_108 #x0000000000000005))
(assert (= temp10172_109 temp10172_108))
(assert (= temp10172_110 (select ARGNAME_stride_NAMEEND_VAL temp10172_109)))
(assert (= temp10172_111 #x0000000000000000))
(assert (= temp10172_112 #x0000000000000000))
(assert (= temp10172_113 temp10172_112))
(assert (= temp10172_114 (select ARGNAME_stride_NAMEEND_VAL temp10172_113)))
(assert (= temp10172_115 #x0000000000000000))
(assert (= temp10172_116 #x0000000000000001))
(assert (= temp10172_117 temp10172_116))
(assert (= temp10172_118 (select ARGNAME_stride_NAMEEND_VAL temp10172_117)))
(assert (= temp10172_119 #x0000000000000000))
(assert (= temp10172_120 #x0000000000000002))
(assert (= temp10172_121 temp10172_120))
(assert (= temp10172_122 (select ARGNAME_stride_NAMEEND_VAL temp10172_121)))
(assert (= temp10172_123 #x0000000000000000))
(assert (= temp10172_124 #x0000000000000003))
(assert (= temp10172_125 temp10172_124))
(assert (= temp10172_126 (select ARGNAME_stride_NAMEEND_VAL temp10172_125)))
(assert (= temp10172_127 #x0000000000000000))
(assert (= temp10172_128 #x0000000000000004))
(assert (= temp10172_129 temp10172_128))
(assert (= temp10172_130 (select ARGNAME_stride_NAMEEND_VAL temp10172_129)))
(assert (= temp10172_131 #x0000000000000000))
(assert (= temp10172_132 #x0000000000000005))
(assert (= temp10172_133 temp10172_132))
(assert (= temp10172_134 (select ARGNAME_stride_NAMEEND_VAL temp10172_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10172_114 temp10172_111)
             (bvsle temp10172_118 temp10172_115)
             (bvsle temp10172_122 temp10172_119)
             (bvsle temp10172_126 temp10172_123)
             (bvsle temp10172_130 temp10172_127)
             (bvsle temp10172_134 temp10172_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10172_135 #x0000000000000000))
(assert (= var1191735 temp10172_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10172_136 #x0000000000000001))
(assert (= var1191747 temp10172_136))
(assert (= temp10172_137 #x0000000000000000))
(assert (= var1179826 temp10172_137))
(assert (= temp10172_138 #x0000000000000000))
(assert (= temp10172_139 temp10172_138))
(assert (= temp10172_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10172_139)))
(assert (= temp10172_141 #x0000000000000001))
(assert (= temp10172_142 temp10172_141))
(assert (= temp10172_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10172_142)))
(assert (= temp10172_144 #x0000000000000002))
(assert (= temp10172_145 temp10172_144))
(assert (= temp10172_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10172_145)))
(assert (= temp10172_147 #x0000000000000003))
(assert (= temp10172_148 temp10172_147))
(assert (= temp10172_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10172_148)))
(assert (= temp10172_150 #x0000000000000004))
(assert (= temp10172_151 temp10172_150))
(assert (= temp10172_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10172_151)))
(assert (= temp10172_153 #x0000000000000005))
(assert (= temp10172_154 temp10172_153))
(assert (= temp10172_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10172_154)))
(assert (= temp10172_157 var1179826))
(assert (= temp10172_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10172_157)))
(assert (= temp10172_156 temp10172_158))
(assert (= var1191780
   (ite (bvslt temp10172_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10172_159 #x0000000000000000))
(assert (= var1191780 temp10172_159))
(assert (= temp10172_160 #x0000000000000000))
(assert (= var1179826 temp10172_160))
(assert (= temp10172_162 var1179826))
(assert (= temp10172_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10172_162)))
(assert (= temp10172_161 temp10172_163))
(assert (= var1191802 (bvsmod temp10172_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10172_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10172_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10172_165 #x0000000000000001))
(assert (= var1191803 temp10172_165))
(assert (= temp10172_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10172_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10172_167 #x0000000000000001))
(assert (= var1191823 temp10172_167))
(assert (= temp10172_168 #x0000000000000001))
(assert (= var1180714 temp10172_168))
(assert (= temp10172_169 #x0000000000000000))
(assert (= temp10172_170 temp10172_169))
(assert (= temp10172_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10172_170)))
(assert (= temp10172_172 #x0000000000000001))
(assert (= temp10172_173 temp10172_172))
(assert (= temp10172_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10172_173)))
(assert (= temp10172_175 #x0000000000000002))
(assert (= temp10172_176 temp10172_175))
(assert (= temp10172_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10172_176)))
(assert (= temp10172_178 #x0000000000000003))
(assert (= temp10172_179 temp10172_178))
(assert (= temp10172_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10172_179)))
(assert (= temp10172_181 #x0000000000000004))
(assert (= temp10172_182 temp10172_181))
(assert (= temp10172_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10172_182)))
(assert (= temp10172_184 #x0000000000000005))
(assert (= temp10172_185 temp10172_184))
(assert (= temp10172_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10172_185)))
(assert (= temp10172_187 #x0000000000000000))
(assert (= temp10172_188
   (ite (bvslt var1180714 temp10172_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10172_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10172_188)))
(assert (= var1191831 temp10172_189))
(assert (bvslt (ite (bvslt var1180714 temp10172_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10172_190 #x0000000000000001))
(assert (= var1180714 temp10172_190))
(assert (= temp10172_192 var1180714))
(assert (= temp10172_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10172_192)))
(assert (= temp10172_191 temp10172_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10172_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10172_194 #x0000000000000001))
(assert (= var1191836 temp10172_194))
(assert (= temp10172_195 #x0000000000000000))
(assert (= var1179826 temp10172_195))
(assert (= temp10172_197 var1179826))
(assert (= temp10172_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10172_197)))
(assert (= temp10172_196 temp10172_198))
(assert (= temp10172_199 #x0000000000000002))
(assert (= var1586025 temp10172_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10172_200 #x0000000000000001))
(assert (= var1191993 temp10172_200))
(assert (= temp10172_201 #x0000000000000001))
(assert (= var2700303 temp10172_201))
(assert (= temp10172_202 #x0000000000000001))
(assert (= var2962447 temp10172_202))
(assert (= temp10172_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10172_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10172_204 #x0000000000000001))
(assert (= var211058 temp10172_204))
(assert (= temp10172_205 #x0000000000000001))
(assert (= var211188 temp10172_205))
(assert (= var3879401 var211188))
(assert (= temp10172_206 #x0000000000000000))
(assert (= var3866802 temp10172_206))
(assert (= temp10172_207 #x0000000000000000))
(assert (= temp10172_208
   (ite (bvslt var3866802 temp10172_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10172_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10172_208)))
(assert (= var3879420 temp10172_209))
(assert (bvslt (ite (bvslt var3866802 temp10172_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10172_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10172_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10172_211 #x0000000000000000))
(assert (= var3879421 temp10172_211))
(assert (= temp10172_212 #x0000000000000001))
(assert (= var3867690 temp10172_212))
(assert (= temp10172_213 #x0000000000000000))
(assert (= temp10172_214
   (ite (bvslt var3867690 temp10172_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10172_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10172_214)))
(assert (= var3879423 temp10172_215))
(assert (bvslt (ite (bvslt var3867690 temp10172_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10172_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10172_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10172_217 #x0000000000000001))
(assert (= var3879424 temp10172_217))
(assert (= temp10172_218 #x0000000000000000))
(assert (= var4079423 temp10172_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10172_219 #x0000000000000002))
(assert (= var4208259 temp10172_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10172_220 #x0000000000000000))
(assert (= var4273820 temp10172_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211962 var210913))
(assert (= temp10172_221 #x0000000000000000))
(assert (= var211963
   (ite (distinct var211962 temp10172_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10172_222 #x0000000000000001))
(assert (= var211058 temp10172_222))
(assert (= temp10172_223 #x0000000000000000))
(assert (= var6632212 temp10172_223))
(assert (= var6632179 var6632212))
(assert (= var6500743 var6632179))
(assert (= var6500739 var6500743))
(assert (= var212669 var6500739))
(assert (= temp10172_224 #x0000000000000000))
(assert (= var212669 temp10172_224))
(model-add temp10172_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10172_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10172_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10172_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




