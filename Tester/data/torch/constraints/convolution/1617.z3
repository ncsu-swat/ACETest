(declare-fun temp10950_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10950_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10950_3 () (_ BitVec 64))
(declare-fun temp10950_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10950_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10950_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10950_7 () (_ BitVec 64))
(declare-fun temp10950_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10950_9 () (_ BitVec 64))
(declare-fun temp10950_10 () (_ BitVec 64))
(declare-fun temp10950_11 () (_ BitVec 64))
(declare-fun temp10950_12 () (_ BitVec 64))
(declare-fun temp10950_13 () (_ BitVec 64))
(declare-fun temp10950_14 () (_ BitVec 64))
(declare-fun temp10950_15 () (_ BitVec 64))
(declare-fun temp10950_16 () (_ BitVec 64))
(declare-fun temp10950_17 () (_ BitVec 64))
(declare-fun temp10950_18 () (_ BitVec 64))
(declare-fun temp10950_19 () (_ BitVec 64))
(declare-fun temp10950_20 () (_ BitVec 64))
(declare-fun temp10950_21 () (_ BitVec 64))
(declare-fun temp10950_22 () (_ BitVec 64))
(declare-fun temp10950_23 () (_ BitVec 64))
(declare-fun temp10950_24 () (_ BitVec 64))
(declare-fun temp10950_25 () (_ BitVec 64))
(declare-fun temp10950_26 () (_ BitVec 64))
(declare-fun temp10950_27 () (_ BitVec 64))
(declare-fun temp10950_28 () (_ BitVec 64))
(declare-fun temp10950_29 () (_ BitVec 64))
(declare-fun temp10950_30 () (_ BitVec 64))
(declare-fun temp10950_31 () (_ BitVec 64))
(declare-fun temp10950_32 () (_ BitVec 64))
(declare-fun temp10950_33 () (_ BitVec 64))
(declare-fun temp10950_34 () (_ BitVec 64))
(declare-fun temp10950_35 () (_ BitVec 64))
(declare-fun temp10950_36 () (_ BitVec 64))
(declare-fun temp10950_37 () (_ BitVec 64))
(declare-fun temp10950_38 () (_ BitVec 64))
(declare-fun temp10950_39 () (_ BitVec 64))
(declare-fun temp10950_40 () (_ BitVec 64))
(declare-fun temp10950_41 () (_ BitVec 64))
(declare-fun temp10950_42 () (_ BitVec 64))
(declare-fun temp10950_43 () (_ BitVec 64))
(declare-fun temp10950_44 () (_ BitVec 64))
(declare-fun temp10950_45 () (_ BitVec 64))
(declare-fun temp10950_46 () (_ BitVec 64))
(declare-fun temp10950_47 () (_ BitVec 64))
(declare-fun temp10950_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10950_49 () (_ BitVec 64))
(declare-fun temp10950_50 () (_ BitVec 64))
(declare-fun temp10950_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10950_52 () (_ BitVec 64))
(declare-fun temp10950_53 () (_ BitVec 64))
(declare-fun temp10950_54 () (_ BitVec 64))
(declare-fun temp10950_55 () (_ BitVec 64))
(declare-fun temp10950_56 () (_ BitVec 64))
(declare-fun temp10950_57 () (_ BitVec 64))
(declare-fun temp10950_58 () (_ BitVec 64))
(declare-fun temp10950_59 () (_ BitVec 64))
(declare-fun temp10950_60 () (_ BitVec 64))
(declare-fun temp10950_61 () (_ BitVec 64))
(declare-fun temp10950_62 () (_ BitVec 64))
(declare-fun temp10950_63 () (_ BitVec 64))
(declare-fun temp10950_64 () (_ BitVec 64))
(declare-fun temp10950_65 () (_ BitVec 64))
(declare-fun temp10950_66 () (_ BitVec 64))
(declare-fun temp10950_67 () (_ BitVec 64))
(declare-fun temp10950_68 () (_ BitVec 64))
(declare-fun temp10950_69 () (_ BitVec 64))
(declare-fun temp10950_70 () (_ BitVec 64))
(declare-fun temp10950_71 () (_ BitVec 64))
(declare-fun temp10950_72 () (_ BitVec 64))
(declare-fun temp10950_73 () (_ BitVec 64))
(declare-fun temp10950_74 () (_ BitVec 64))
(declare-fun temp10950_75 () (_ BitVec 64))
(declare-fun temp10950_76 () (_ BitVec 64))
(declare-fun temp10950_77 () (_ BitVec 64))
(declare-fun temp10950_78 () (_ BitVec 64))
(declare-fun temp10950_79 () (_ BitVec 64))
(declare-fun temp10950_80 () (_ BitVec 64))
(declare-fun temp10950_81 () (_ BitVec 64))
(declare-fun temp10950_82 () (_ BitVec 64))
(declare-fun temp10950_83 () (_ BitVec 64))
(declare-fun temp10950_84 () (_ BitVec 64))
(declare-fun temp10950_85 () (_ BitVec 64))
(declare-fun temp10950_86 () (_ BitVec 64))
(declare-fun temp10950_87 () (_ BitVec 64))
(declare-fun temp10950_88 () (_ BitVec 64))
(declare-fun temp10950_89 () (_ BitVec 64))
(declare-fun temp10950_90 () (_ BitVec 64))
(declare-fun temp10950_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10950_92 () (_ BitVec 64))
(declare-fun temp10950_93 () (_ BitVec 64))
(declare-fun temp10950_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10950_95 () (_ BitVec 64))
(declare-fun temp10950_96 () (_ BitVec 64))
(declare-fun temp10950_97 () (_ BitVec 64))
(declare-fun temp10950_98 () (_ BitVec 64))
(declare-fun temp10950_99 () (_ BitVec 64))
(declare-fun temp10950_100 () (_ BitVec 64))
(declare-fun temp10950_101 () (_ BitVec 64))
(declare-fun temp10950_102 () (_ BitVec 64))
(declare-fun temp10950_103 () (_ BitVec 64))
(declare-fun temp10950_104 () (_ BitVec 64))
(declare-fun temp10950_105 () (_ BitVec 64))
(declare-fun temp10950_106 () (_ BitVec 64))
(declare-fun temp10950_107 () (_ BitVec 64))
(declare-fun temp10950_108 () (_ BitVec 64))
(declare-fun temp10950_109 () (_ BitVec 64))
(declare-fun temp10950_110 () (_ BitVec 64))
(declare-fun temp10950_111 () (_ BitVec 64))
(declare-fun temp10950_112 () (_ BitVec 64))
(declare-fun temp10950_113 () (_ BitVec 64))
(declare-fun temp10950_114 () (_ BitVec 64))
(declare-fun temp10950_115 () (_ BitVec 64))
(declare-fun temp10950_116 () (_ BitVec 64))
(declare-fun temp10950_117 () (_ BitVec 64))
(declare-fun temp10950_118 () (_ BitVec 64))
(declare-fun temp10950_119 () (_ BitVec 64))
(declare-fun temp10950_120 () (_ BitVec 64))
(declare-fun temp10950_121 () (_ BitVec 64))
(declare-fun temp10950_122 () (_ BitVec 64))
(declare-fun temp10950_123 () (_ BitVec 64))
(declare-fun temp10950_124 () (_ BitVec 64))
(declare-fun temp10950_125 () (_ BitVec 64))
(declare-fun temp10950_126 () (_ BitVec 64))
(declare-fun temp10950_127 () (_ BitVec 64))
(declare-fun temp10950_128 () (_ BitVec 64))
(declare-fun temp10950_129 () (_ BitVec 64))
(declare-fun temp10950_130 () (_ BitVec 64))
(declare-fun temp10950_131 () (_ BitVec 64))
(declare-fun temp10950_132 () (_ BitVec 64))
(declare-fun temp10950_133 () (_ BitVec 64))
(declare-fun temp10950_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10950_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10950_136 () (_ BitVec 64))
(declare-fun temp10950_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10950_138 () (_ BitVec 64))
(declare-fun temp10950_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10950_140 () (_ BitVec 64))
(declare-fun temp10950_141 () (_ BitVec 64))
(declare-fun temp10950_142 () (_ BitVec 64))
(declare-fun temp10950_143 () (_ BitVec 64))
(declare-fun temp10950_144 () (_ BitVec 64))
(declare-fun temp10950_145 () (_ BitVec 64))
(declare-fun temp10950_146 () (_ BitVec 64))
(declare-fun temp10950_147 () (_ BitVec 64))
(declare-fun temp10950_148 () (_ BitVec 64))
(declare-fun temp10950_149 () (_ BitVec 64))
(declare-fun temp10950_150 () (_ BitVec 64))
(declare-fun temp10950_151 () (_ BitVec 64))
(declare-fun temp10950_152 () (_ BitVec 64))
(declare-fun temp10950_153 () (_ BitVec 64))
(declare-fun temp10950_154 () (_ BitVec 64))
(declare-fun temp10950_155 () (_ BitVec 64))
(declare-fun temp10950_157 () (_ BitVec 64))
(declare-fun temp10950_158 () (_ BitVec 64))
(declare-fun temp10950_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10950_159 () (_ BitVec 64))
(declare-fun temp10950_160 () (_ BitVec 64))
(declare-fun temp10950_162 () (_ BitVec 64))
(declare-fun temp10950_163 () (_ BitVec 64))
(declare-fun temp10950_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10950_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10950_165 () (_ BitVec 64))
(declare-fun temp10950_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10950_167 () (_ BitVec 64))
(declare-fun temp10950_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10950_169 () (_ BitVec 64))
(declare-fun temp10950_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10950_171 () (_ BitVec 64))
(declare-fun temp10950_172 () (_ BitVec 64))
(declare-fun temp10950_173 () (_ BitVec 64))
(declare-fun temp10950_174 () (_ BitVec 64))
(declare-fun temp10950_175 () (_ BitVec 64))
(declare-fun temp10950_176 () (_ BitVec 64))
(declare-fun temp10950_177 () (_ BitVec 64))
(declare-fun temp10950_178 () (_ BitVec 64))
(declare-fun temp10950_179 () (_ BitVec 64))
(declare-fun temp10950_180 () (_ BitVec 64))
(declare-fun temp10950_181 () (_ BitVec 64))
(declare-fun temp10950_182 () (_ BitVec 64))
(declare-fun temp10950_183 () (_ BitVec 64))
(declare-fun temp10950_184 () (_ BitVec 64))
(declare-fun temp10950_185 () (_ BitVec 64))
(declare-fun temp10950_186 () (_ BitVec 64))
(declare-fun temp10950_187 () (_ BitVec 64))
(declare-fun temp10950_188 () (_ BitVec 64))
(declare-fun temp10950_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10950_190 () (_ BitVec 64))
(declare-fun temp10950_192 () (_ BitVec 64))
(declare-fun temp10950_193 () (_ BitVec 64))
(declare-fun temp10950_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10950_194 () (_ BitVec 64))
(declare-fun temp10950_195 () (_ BitVec 64))
(declare-fun temp10950_197 () (_ BitVec 64))
(declare-fun temp10950_198 () (_ BitVec 64))
(declare-fun temp10950_196 () (_ BitVec 64))
(declare-fun temp10950_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10950_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10950_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10950_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10950_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10950_204 () (_ BitVec 64))
(declare-fun temp10950_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10950_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10950_207 () (_ BitVec 64))
(declare-fun temp10950_208 () (_ BitVec 64))
(declare-fun temp10950_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10950_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10950_211 () (_ BitVec 64))
(declare-fun temp10950_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10950_213 () (_ BitVec 64))
(declare-fun temp10950_214 () (_ BitVec 64))
(declare-fun temp10950_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10950_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10950_217 () (_ BitVec 64))
(declare-fun temp10950_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10950_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10950_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5058960 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun temp10950_221 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp10950_222 () (_ BitVec 64))
(assert (= temp10950_1 #x0000000000000001))
(assert (= var77203 temp10950_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10950_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10950_2)))
(assert (= temp10950_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10950_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10950_4 #x0000000000000000))
(assert (= var210941 temp10950_4))
(assert (= temp10950_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10950_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10950_6 #x0000000000000000))
(assert (= var210986 temp10950_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10950_7 #x0000000000000000))
(assert (= temp10950_8 temp10950_7))
(assert (= temp10950_9 (select ARGNAME_padding_NAMEEND_VAL temp10950_8)))
(assert (= temp10950_10 #x0000000000000001))
(assert (= temp10950_11 temp10950_10))
(assert (= temp10950_12 (select ARGNAME_padding_NAMEEND_VAL temp10950_11)))
(assert (= temp10950_13 #x0000000000000002))
(assert (= temp10950_14 temp10950_13))
(assert (= temp10950_15 (select ARGNAME_padding_NAMEEND_VAL temp10950_14)))
(assert (= temp10950_16 #x0000000000000003))
(assert (= temp10950_17 temp10950_16))
(assert (= temp10950_18 (select ARGNAME_padding_NAMEEND_VAL temp10950_17)))
(assert (= temp10950_19 #x0000000000000004))
(assert (= temp10950_20 temp10950_19))
(assert (= temp10950_21 (select ARGNAME_padding_NAMEEND_VAL temp10950_20)))
(assert (= temp10950_22 #x0000000000000005))
(assert (= temp10950_23 temp10950_22))
(assert (= temp10950_24 (select ARGNAME_padding_NAMEEND_VAL temp10950_23)))
(assert (= temp10950_25 #x0000000000000000))
(assert (= temp10950_26 #x0000000000000000))
(assert (= temp10950_27 temp10950_26))
(assert (= temp10950_28 (select ARGNAME_padding_NAMEEND_VAL temp10950_27)))
(assert (= temp10950_29 #x0000000000000000))
(assert (= temp10950_30 #x0000000000000001))
(assert (= temp10950_31 temp10950_30))
(assert (= temp10950_32 (select ARGNAME_padding_NAMEEND_VAL temp10950_31)))
(assert (= temp10950_33 #x0000000000000000))
(assert (= temp10950_34 #x0000000000000002))
(assert (= temp10950_35 temp10950_34))
(assert (= temp10950_36 (select ARGNAME_padding_NAMEEND_VAL temp10950_35)))
(assert (= temp10950_37 #x0000000000000000))
(assert (= temp10950_38 #x0000000000000003))
(assert (= temp10950_39 temp10950_38))
(assert (= temp10950_40 (select ARGNAME_padding_NAMEEND_VAL temp10950_39)))
(assert (= temp10950_41 #x0000000000000000))
(assert (= temp10950_42 #x0000000000000004))
(assert (= temp10950_43 temp10950_42))
(assert (= temp10950_44 (select ARGNAME_padding_NAMEEND_VAL temp10950_43)))
(assert (= temp10950_45 #x0000000000000000))
(assert (= temp10950_46 #x0000000000000005))
(assert (= temp10950_47 temp10950_46))
(assert (= temp10950_48 (select ARGNAME_padding_NAMEEND_VAL temp10950_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10950_28 temp10950_25)
             (bvslt temp10950_32 temp10950_29)
             (bvslt temp10950_36 temp10950_33)
             (bvslt temp10950_40 temp10950_37)
             (bvslt temp10950_44 temp10950_41)
             (bvslt temp10950_48 temp10950_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10950_49 #x0000000000000000))
(assert (= var1191714 temp10950_49))
(assert (= temp10950_50 #x0000000000000000))
(assert (= temp10950_51 temp10950_50))
(assert (= temp10950_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10950_51)))
(assert (= temp10950_53 #x0000000000000001))
(assert (= temp10950_54 temp10950_53))
(assert (= temp10950_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10950_54)))
(assert (= temp10950_56 #x0000000000000002))
(assert (= temp10950_57 temp10950_56))
(assert (= temp10950_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10950_57)))
(assert (= temp10950_59 #x0000000000000003))
(assert (= temp10950_60 temp10950_59))
(assert (= temp10950_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10950_60)))
(assert (= temp10950_62 #x0000000000000004))
(assert (= temp10950_63 temp10950_62))
(assert (= temp10950_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10950_63)))
(assert (= temp10950_65 #x0000000000000005))
(assert (= temp10950_66 temp10950_65))
(assert (= temp10950_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10950_66)))
(assert (= temp10950_68 #x0000000000000000))
(assert (= temp10950_69 #x0000000000000000))
(assert (= temp10950_70 temp10950_69))
(assert (= temp10950_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10950_70)))
(assert (= temp10950_72 #x0000000000000000))
(assert (= temp10950_73 #x0000000000000001))
(assert (= temp10950_74 temp10950_73))
(assert (= temp10950_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10950_74)))
(assert (= temp10950_76 #x0000000000000000))
(assert (= temp10950_77 #x0000000000000002))
(assert (= temp10950_78 temp10950_77))
(assert (= temp10950_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10950_78)))
(assert (= temp10950_80 #x0000000000000000))
(assert (= temp10950_81 #x0000000000000003))
(assert (= temp10950_82 temp10950_81))
(assert (= temp10950_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10950_82)))
(assert (= temp10950_84 #x0000000000000000))
(assert (= temp10950_85 #x0000000000000004))
(assert (= temp10950_86 temp10950_85))
(assert (= temp10950_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10950_86)))
(assert (= temp10950_88 #x0000000000000000))
(assert (= temp10950_89 #x0000000000000005))
(assert (= temp10950_90 temp10950_89))
(assert (= temp10950_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10950_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10950_71 temp10950_68)
             (bvslt temp10950_75 temp10950_72)
             (bvslt temp10950_79 temp10950_76)
             (bvslt temp10950_83 temp10950_80)
             (bvslt temp10950_87 temp10950_84)
             (bvslt temp10950_91 temp10950_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10950_92 #x0000000000000000))
(assert (= var1191725 temp10950_92))
(assert (= temp10950_93 #x0000000000000000))
(assert (= temp10950_94 temp10950_93))
(assert (= temp10950_95 (select ARGNAME_stride_NAMEEND_VAL temp10950_94)))
(assert (= temp10950_96 #x0000000000000001))
(assert (= temp10950_97 temp10950_96))
(assert (= temp10950_98 (select ARGNAME_stride_NAMEEND_VAL temp10950_97)))
(assert (= temp10950_99 #x0000000000000002))
(assert (= temp10950_100 temp10950_99))
(assert (= temp10950_101 (select ARGNAME_stride_NAMEEND_VAL temp10950_100)))
(assert (= temp10950_102 #x0000000000000003))
(assert (= temp10950_103 temp10950_102))
(assert (= temp10950_104 (select ARGNAME_stride_NAMEEND_VAL temp10950_103)))
(assert (= temp10950_105 #x0000000000000004))
(assert (= temp10950_106 temp10950_105))
(assert (= temp10950_107 (select ARGNAME_stride_NAMEEND_VAL temp10950_106)))
(assert (= temp10950_108 #x0000000000000005))
(assert (= temp10950_109 temp10950_108))
(assert (= temp10950_110 (select ARGNAME_stride_NAMEEND_VAL temp10950_109)))
(assert (= temp10950_111 #x0000000000000000))
(assert (= temp10950_112 #x0000000000000000))
(assert (= temp10950_113 temp10950_112))
(assert (= temp10950_114 (select ARGNAME_stride_NAMEEND_VAL temp10950_113)))
(assert (= temp10950_115 #x0000000000000000))
(assert (= temp10950_116 #x0000000000000001))
(assert (= temp10950_117 temp10950_116))
(assert (= temp10950_118 (select ARGNAME_stride_NAMEEND_VAL temp10950_117)))
(assert (= temp10950_119 #x0000000000000000))
(assert (= temp10950_120 #x0000000000000002))
(assert (= temp10950_121 temp10950_120))
(assert (= temp10950_122 (select ARGNAME_stride_NAMEEND_VAL temp10950_121)))
(assert (= temp10950_123 #x0000000000000000))
(assert (= temp10950_124 #x0000000000000003))
(assert (= temp10950_125 temp10950_124))
(assert (= temp10950_126 (select ARGNAME_stride_NAMEEND_VAL temp10950_125)))
(assert (= temp10950_127 #x0000000000000000))
(assert (= temp10950_128 #x0000000000000004))
(assert (= temp10950_129 temp10950_128))
(assert (= temp10950_130 (select ARGNAME_stride_NAMEEND_VAL temp10950_129)))
(assert (= temp10950_131 #x0000000000000000))
(assert (= temp10950_132 #x0000000000000005))
(assert (= temp10950_133 temp10950_132))
(assert (= temp10950_134 (select ARGNAME_stride_NAMEEND_VAL temp10950_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10950_114 temp10950_111)
             (bvsle temp10950_118 temp10950_115)
             (bvsle temp10950_122 temp10950_119)
             (bvsle temp10950_126 temp10950_123)
             (bvsle temp10950_130 temp10950_127)
             (bvsle temp10950_134 temp10950_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10950_135 #x0000000000000000))
(assert (= var1191735 temp10950_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10950_136 #x0000000000000001))
(assert (= var1191747 temp10950_136))
(assert (= temp10950_137 #x0000000000000000))
(assert (= var1179826 temp10950_137))
(assert (= temp10950_138 #x0000000000000000))
(assert (= temp10950_139 temp10950_138))
(assert (= temp10950_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10950_139)))
(assert (= temp10950_141 #x0000000000000001))
(assert (= temp10950_142 temp10950_141))
(assert (= temp10950_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10950_142)))
(assert (= temp10950_144 #x0000000000000002))
(assert (= temp10950_145 temp10950_144))
(assert (= temp10950_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10950_145)))
(assert (= temp10950_147 #x0000000000000003))
(assert (= temp10950_148 temp10950_147))
(assert (= temp10950_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10950_148)))
(assert (= temp10950_150 #x0000000000000004))
(assert (= temp10950_151 temp10950_150))
(assert (= temp10950_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10950_151)))
(assert (= temp10950_153 #x0000000000000005))
(assert (= temp10950_154 temp10950_153))
(assert (= temp10950_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10950_154)))
(assert (= temp10950_157 var1179826))
(assert (= temp10950_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10950_157)))
(assert (= temp10950_156 temp10950_158))
(assert (= var1191780
   (ite (bvslt temp10950_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10950_159 #x0000000000000000))
(assert (= var1191780 temp10950_159))
(assert (= temp10950_160 #x0000000000000000))
(assert (= var1179826 temp10950_160))
(assert (= temp10950_162 var1179826))
(assert (= temp10950_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10950_162)))
(assert (= temp10950_161 temp10950_163))
(assert (= var1191802 (bvsmod temp10950_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10950_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10950_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10950_165 #x0000000000000001))
(assert (= var1191803 temp10950_165))
(assert (= temp10950_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10950_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10950_167 #x0000000000000001))
(assert (= var1191823 temp10950_167))
(assert (= temp10950_168 #x0000000000000001))
(assert (= var1180714 temp10950_168))
(assert (= temp10950_169 #x0000000000000000))
(assert (= temp10950_170 temp10950_169))
(assert (= temp10950_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10950_170)))
(assert (= temp10950_172 #x0000000000000001))
(assert (= temp10950_173 temp10950_172))
(assert (= temp10950_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10950_173)))
(assert (= temp10950_175 #x0000000000000002))
(assert (= temp10950_176 temp10950_175))
(assert (= temp10950_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10950_176)))
(assert (= temp10950_178 #x0000000000000003))
(assert (= temp10950_179 temp10950_178))
(assert (= temp10950_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10950_179)))
(assert (= temp10950_181 #x0000000000000004))
(assert (= temp10950_182 temp10950_181))
(assert (= temp10950_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10950_182)))
(assert (= temp10950_184 #x0000000000000005))
(assert (= temp10950_185 temp10950_184))
(assert (= temp10950_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10950_185)))
(assert (= temp10950_187 #x0000000000000000))
(assert (= temp10950_188
   (ite (bvslt var1180714 temp10950_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10950_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10950_188)))
(assert (= var1191831 temp10950_189))
(assert (bvslt (ite (bvslt var1180714 temp10950_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10950_190 #x0000000000000001))
(assert (= var1180714 temp10950_190))
(assert (= temp10950_192 var1180714))
(assert (= temp10950_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10950_192)))
(assert (= temp10950_191 temp10950_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10950_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10950_194 #x0000000000000001))
(assert (= var1191836 temp10950_194))
(assert (= temp10950_195 #x0000000000000000))
(assert (= var1179826 temp10950_195))
(assert (= temp10950_197 var1179826))
(assert (= temp10950_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10950_197)))
(assert (= temp10950_196 temp10950_198))
(assert (= temp10950_199 #x0000000000000002))
(assert (= var1586025 temp10950_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10950_200 #x0000000000000001))
(assert (= var1191993 temp10950_200))
(assert (= temp10950_201 #x0000000000000001))
(assert (= var2700303 temp10950_201))
(assert (= temp10950_202 #x0000000000000001))
(assert (= var2962447 temp10950_202))
(assert (= temp10950_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10950_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10950_204 #x0000000000000001))
(assert (= var211058 temp10950_204))
(assert (= temp10950_205 #x0000000000000001))
(assert (= var211188 temp10950_205))
(assert (= var3879401 var211188))
(assert (= temp10950_206 #x0000000000000000))
(assert (= var3866802 temp10950_206))
(assert (= temp10950_207 #x0000000000000000))
(assert (= temp10950_208
   (ite (bvslt var3866802 temp10950_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10950_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10950_208)))
(assert (= var3879420 temp10950_209))
(assert (bvslt (ite (bvslt var3866802 temp10950_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10950_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10950_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10950_211 #x0000000000000000))
(assert (= var3879421 temp10950_211))
(assert (= temp10950_212 #x0000000000000001))
(assert (= var3867690 temp10950_212))
(assert (= temp10950_213 #x0000000000000000))
(assert (= temp10950_214
   (ite (bvslt var3867690 temp10950_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10950_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10950_214)))
(assert (= var3879423 temp10950_215))
(assert (bvslt (ite (bvslt var3867690 temp10950_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10950_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10950_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10950_217 #x0000000000000001))
(assert (= var3879424 temp10950_217))
(assert (= temp10950_218 #x0000000000000000))
(assert (= var4133117 temp10950_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10950_219 #x0000000000000002))
(assert (= var4339331 temp10950_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10950_220 #x0000000000000000))
(assert (= var4404892 temp10950_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5058960 var211201))
(assert (= var5321104 var211201))
(assert (= temp10950_221 #x0000000000000000))
(assert (= var5648784 temp10950_221))
(assert (= temp10950_222 #x0000000000000001))
(assert (= var211058 temp10950_222))
(model-add temp10950_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10950_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10950_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10950_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






