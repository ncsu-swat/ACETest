(declare-fun temp1076_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1076_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1076_3 () (_ BitVec 64))
(declare-fun temp1076_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1076_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1076_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1076_7 () (_ BitVec 64))
(declare-fun temp1076_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1076_9 () (_ BitVec 64))
(declare-fun temp1076_10 () (_ BitVec 64))
(declare-fun temp1076_11 () (_ BitVec 64))
(declare-fun temp1076_12 () (_ BitVec 64))
(declare-fun temp1076_13 () (_ BitVec 64))
(declare-fun temp1076_14 () (_ BitVec 64))
(declare-fun temp1076_15 () (_ BitVec 64))
(declare-fun temp1076_16 () (_ BitVec 64))
(declare-fun temp1076_17 () (_ BitVec 64))
(declare-fun temp1076_18 () (_ BitVec 64))
(declare-fun temp1076_19 () (_ BitVec 64))
(declare-fun temp1076_20 () (_ BitVec 64))
(declare-fun temp1076_21 () (_ BitVec 64))
(declare-fun temp1076_22 () (_ BitVec 64))
(declare-fun temp1076_23 () (_ BitVec 64))
(declare-fun temp1076_24 () (_ BitVec 64))
(declare-fun temp1076_25 () (_ BitVec 64))
(declare-fun temp1076_26 () (_ BitVec 64))
(declare-fun temp1076_27 () (_ BitVec 64))
(declare-fun temp1076_28 () (_ BitVec 64))
(declare-fun temp1076_29 () (_ BitVec 64))
(declare-fun temp1076_30 () (_ BitVec 64))
(declare-fun temp1076_31 () (_ BitVec 64))
(declare-fun temp1076_32 () (_ BitVec 64))
(declare-fun temp1076_33 () (_ BitVec 64))
(declare-fun temp1076_34 () (_ BitVec 64))
(declare-fun temp1076_35 () (_ BitVec 64))
(declare-fun temp1076_36 () (_ BitVec 64))
(declare-fun temp1076_37 () (_ BitVec 64))
(declare-fun temp1076_38 () (_ BitVec 64))
(declare-fun temp1076_39 () (_ BitVec 64))
(declare-fun temp1076_40 () (_ BitVec 64))
(declare-fun temp1076_41 () (_ BitVec 64))
(declare-fun temp1076_42 () (_ BitVec 64))
(declare-fun temp1076_43 () (_ BitVec 64))
(declare-fun temp1076_44 () (_ BitVec 64))
(declare-fun temp1076_45 () (_ BitVec 64))
(declare-fun temp1076_46 () (_ BitVec 64))
(declare-fun temp1076_47 () (_ BitVec 64))
(declare-fun temp1076_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1076_49 () (_ BitVec 64))
(declare-fun temp1076_50 () (_ BitVec 64))
(declare-fun temp1076_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1076_52 () (_ BitVec 64))
(declare-fun temp1076_53 () (_ BitVec 64))
(declare-fun temp1076_54 () (_ BitVec 64))
(declare-fun temp1076_55 () (_ BitVec 64))
(declare-fun temp1076_56 () (_ BitVec 64))
(declare-fun temp1076_57 () (_ BitVec 64))
(declare-fun temp1076_58 () (_ BitVec 64))
(declare-fun temp1076_59 () (_ BitVec 64))
(declare-fun temp1076_60 () (_ BitVec 64))
(declare-fun temp1076_61 () (_ BitVec 64))
(declare-fun temp1076_62 () (_ BitVec 64))
(declare-fun temp1076_63 () (_ BitVec 64))
(declare-fun temp1076_64 () (_ BitVec 64))
(declare-fun temp1076_65 () (_ BitVec 64))
(declare-fun temp1076_66 () (_ BitVec 64))
(declare-fun temp1076_67 () (_ BitVec 64))
(declare-fun temp1076_68 () (_ BitVec 64))
(declare-fun temp1076_69 () (_ BitVec 64))
(declare-fun temp1076_70 () (_ BitVec 64))
(declare-fun temp1076_71 () (_ BitVec 64))
(declare-fun temp1076_72 () (_ BitVec 64))
(declare-fun temp1076_73 () (_ BitVec 64))
(declare-fun temp1076_74 () (_ BitVec 64))
(declare-fun temp1076_75 () (_ BitVec 64))
(declare-fun temp1076_76 () (_ BitVec 64))
(declare-fun temp1076_77 () (_ BitVec 64))
(declare-fun temp1076_78 () (_ BitVec 64))
(declare-fun temp1076_79 () (_ BitVec 64))
(declare-fun temp1076_80 () (_ BitVec 64))
(declare-fun temp1076_81 () (_ BitVec 64))
(declare-fun temp1076_82 () (_ BitVec 64))
(declare-fun temp1076_83 () (_ BitVec 64))
(declare-fun temp1076_84 () (_ BitVec 64))
(declare-fun temp1076_85 () (_ BitVec 64))
(declare-fun temp1076_86 () (_ BitVec 64))
(declare-fun temp1076_87 () (_ BitVec 64))
(declare-fun temp1076_88 () (_ BitVec 64))
(declare-fun temp1076_89 () (_ BitVec 64))
(declare-fun temp1076_90 () (_ BitVec 64))
(declare-fun temp1076_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1076_92 () (_ BitVec 64))
(declare-fun temp1076_93 () (_ BitVec 64))
(declare-fun temp1076_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1076_95 () (_ BitVec 64))
(declare-fun temp1076_96 () (_ BitVec 64))
(declare-fun temp1076_97 () (_ BitVec 64))
(declare-fun temp1076_98 () (_ BitVec 64))
(declare-fun temp1076_99 () (_ BitVec 64))
(declare-fun temp1076_100 () (_ BitVec 64))
(declare-fun temp1076_101 () (_ BitVec 64))
(declare-fun temp1076_102 () (_ BitVec 64))
(declare-fun temp1076_103 () (_ BitVec 64))
(declare-fun temp1076_104 () (_ BitVec 64))
(declare-fun temp1076_105 () (_ BitVec 64))
(declare-fun temp1076_106 () (_ BitVec 64))
(declare-fun temp1076_107 () (_ BitVec 64))
(declare-fun temp1076_108 () (_ BitVec 64))
(declare-fun temp1076_109 () (_ BitVec 64))
(declare-fun temp1076_110 () (_ BitVec 64))
(declare-fun temp1076_111 () (_ BitVec 64))
(declare-fun temp1076_112 () (_ BitVec 64))
(declare-fun temp1076_113 () (_ BitVec 64))
(declare-fun temp1076_114 () (_ BitVec 64))
(declare-fun temp1076_115 () (_ BitVec 64))
(declare-fun temp1076_116 () (_ BitVec 64))
(declare-fun temp1076_117 () (_ BitVec 64))
(declare-fun temp1076_118 () (_ BitVec 64))
(declare-fun temp1076_119 () (_ BitVec 64))
(declare-fun temp1076_120 () (_ BitVec 64))
(declare-fun temp1076_121 () (_ BitVec 64))
(declare-fun temp1076_122 () (_ BitVec 64))
(declare-fun temp1076_123 () (_ BitVec 64))
(declare-fun temp1076_124 () (_ BitVec 64))
(declare-fun temp1076_125 () (_ BitVec 64))
(declare-fun temp1076_126 () (_ BitVec 64))
(declare-fun temp1076_127 () (_ BitVec 64))
(declare-fun temp1076_128 () (_ BitVec 64))
(declare-fun temp1076_129 () (_ BitVec 64))
(declare-fun temp1076_130 () (_ BitVec 64))
(declare-fun temp1076_131 () (_ BitVec 64))
(declare-fun temp1076_132 () (_ BitVec 64))
(declare-fun temp1076_133 () (_ BitVec 64))
(declare-fun temp1076_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1076_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1076_136 () (_ BitVec 64))
(declare-fun temp1076_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1076_138 () (_ BitVec 64))
(declare-fun temp1076_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1076_140 () (_ BitVec 64))
(declare-fun temp1076_141 () (_ BitVec 64))
(declare-fun temp1076_142 () (_ BitVec 64))
(declare-fun temp1076_143 () (_ BitVec 64))
(declare-fun temp1076_144 () (_ BitVec 64))
(declare-fun temp1076_145 () (_ BitVec 64))
(declare-fun temp1076_146 () (_ BitVec 64))
(declare-fun temp1076_147 () (_ BitVec 64))
(declare-fun temp1076_148 () (_ BitVec 64))
(declare-fun temp1076_149 () (_ BitVec 64))
(declare-fun temp1076_150 () (_ BitVec 64))
(declare-fun temp1076_151 () (_ BitVec 64))
(declare-fun temp1076_152 () (_ BitVec 64))
(declare-fun temp1076_153 () (_ BitVec 64))
(declare-fun temp1076_154 () (_ BitVec 64))
(declare-fun temp1076_155 () (_ BitVec 64))
(declare-fun temp1076_157 () (_ BitVec 64))
(declare-fun temp1076_158 () (_ BitVec 64))
(declare-fun temp1076_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1076_159 () (_ BitVec 64))
(declare-fun temp1076_160 () (_ BitVec 64))
(declare-fun temp1076_162 () (_ BitVec 64))
(declare-fun temp1076_163 () (_ BitVec 64))
(declare-fun temp1076_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1076_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1076_165 () (_ BitVec 64))
(declare-fun temp1076_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1076_167 () (_ BitVec 64))
(declare-fun temp1076_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1076_169 () (_ BitVec 64))
(declare-fun temp1076_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1076_171 () (_ BitVec 64))
(declare-fun temp1076_172 () (_ BitVec 64))
(declare-fun temp1076_173 () (_ BitVec 64))
(declare-fun temp1076_174 () (_ BitVec 64))
(declare-fun temp1076_175 () (_ BitVec 64))
(declare-fun temp1076_176 () (_ BitVec 64))
(declare-fun temp1076_177 () (_ BitVec 64))
(declare-fun temp1076_178 () (_ BitVec 64))
(declare-fun temp1076_179 () (_ BitVec 64))
(declare-fun temp1076_180 () (_ BitVec 64))
(declare-fun temp1076_181 () (_ BitVec 64))
(declare-fun temp1076_182 () (_ BitVec 64))
(declare-fun temp1076_183 () (_ BitVec 64))
(declare-fun temp1076_184 () (_ BitVec 64))
(declare-fun temp1076_185 () (_ BitVec 64))
(declare-fun temp1076_186 () (_ BitVec 64))
(declare-fun temp1076_187 () (_ BitVec 64))
(declare-fun temp1076_188 () (_ BitVec 64))
(declare-fun temp1076_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1076_190 () (_ BitVec 64))
(declare-fun temp1076_192 () (_ BitVec 64))
(declare-fun temp1076_193 () (_ BitVec 64))
(declare-fun temp1076_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1076_194 () (_ BitVec 64))
(declare-fun temp1076_195 () (_ BitVec 64))
(declare-fun temp1076_197 () (_ BitVec 64))
(declare-fun temp1076_198 () (_ BitVec 64))
(declare-fun temp1076_196 () (_ BitVec 64))
(declare-fun temp1076_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1076_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1076_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1076_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1076_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1076_204 () (_ BitVec 64))
(declare-fun temp1076_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1076_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1076_207 () (_ BitVec 64))
(declare-fun temp1076_208 () (_ BitVec 64))
(declare-fun temp1076_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1076_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1076_211 () (_ BitVec 64))
(declare-fun temp1076_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1076_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1076_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp1076_215 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp1076_216 () (_ BitVec 64))
(declare-fun temp1076_217 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5060229 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun var5125773 () (_ BitVec 64))
(declare-fun temp1076_218 () (_ BitVec 64))
(declare-fun temp1076_219 () (_ BitVec 64))
(declare-fun var5976852 () (_ BitVec 64))
(declare-fun var5976819 () (_ BitVec 64))
(declare-fun var5845383 () (_ BitVec 64))
(declare-fun var5845379 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp1076_220 () (_ BitVec 64))
(assert (= temp1076_1 #x0000000000000001))
(assert (= var77203 temp1076_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1076_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1076_2)))
(assert (= temp1076_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1076_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1076_4 #x0000000000000000))
(assert (= var210941 temp1076_4))
(assert (= temp1076_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1076_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1076_6 #x0000000000000000))
(assert (= var210986 temp1076_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1076_7 #x0000000000000000))
(assert (= temp1076_8 temp1076_7))
(assert (= temp1076_9 (select ARGNAME_padding_NAMEEND_VAL temp1076_8)))
(assert (= temp1076_10 #x0000000000000001))
(assert (= temp1076_11 temp1076_10))
(assert (= temp1076_12 (select ARGNAME_padding_NAMEEND_VAL temp1076_11)))
(assert (= temp1076_13 #x0000000000000002))
(assert (= temp1076_14 temp1076_13))
(assert (= temp1076_15 (select ARGNAME_padding_NAMEEND_VAL temp1076_14)))
(assert (= temp1076_16 #x0000000000000003))
(assert (= temp1076_17 temp1076_16))
(assert (= temp1076_18 (select ARGNAME_padding_NAMEEND_VAL temp1076_17)))
(assert (= temp1076_19 #x0000000000000004))
(assert (= temp1076_20 temp1076_19))
(assert (= temp1076_21 (select ARGNAME_padding_NAMEEND_VAL temp1076_20)))
(assert (= temp1076_22 #x0000000000000005))
(assert (= temp1076_23 temp1076_22))
(assert (= temp1076_24 (select ARGNAME_padding_NAMEEND_VAL temp1076_23)))
(assert (= temp1076_25 #x0000000000000000))
(assert (= temp1076_26 #x0000000000000000))
(assert (= temp1076_27 temp1076_26))
(assert (= temp1076_28 (select ARGNAME_padding_NAMEEND_VAL temp1076_27)))
(assert (= temp1076_29 #x0000000000000000))
(assert (= temp1076_30 #x0000000000000001))
(assert (= temp1076_31 temp1076_30))
(assert (= temp1076_32 (select ARGNAME_padding_NAMEEND_VAL temp1076_31)))
(assert (= temp1076_33 #x0000000000000000))
(assert (= temp1076_34 #x0000000000000002))
(assert (= temp1076_35 temp1076_34))
(assert (= temp1076_36 (select ARGNAME_padding_NAMEEND_VAL temp1076_35)))
(assert (= temp1076_37 #x0000000000000000))
(assert (= temp1076_38 #x0000000000000003))
(assert (= temp1076_39 temp1076_38))
(assert (= temp1076_40 (select ARGNAME_padding_NAMEEND_VAL temp1076_39)))
(assert (= temp1076_41 #x0000000000000000))
(assert (= temp1076_42 #x0000000000000004))
(assert (= temp1076_43 temp1076_42))
(assert (= temp1076_44 (select ARGNAME_padding_NAMEEND_VAL temp1076_43)))
(assert (= temp1076_45 #x0000000000000000))
(assert (= temp1076_46 #x0000000000000005))
(assert (= temp1076_47 temp1076_46))
(assert (= temp1076_48 (select ARGNAME_padding_NAMEEND_VAL temp1076_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1076_28 temp1076_25)
             (bvslt temp1076_32 temp1076_29)
             (bvslt temp1076_36 temp1076_33)
             (bvslt temp1076_40 temp1076_37)
             (bvslt temp1076_44 temp1076_41)
             (bvslt temp1076_48 temp1076_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1076_49 #x0000000000000000))
(assert (= var1191714 temp1076_49))
(assert (= temp1076_50 #x0000000000000000))
(assert (= temp1076_51 temp1076_50))
(assert (= temp1076_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1076_51)))
(assert (= temp1076_53 #x0000000000000001))
(assert (= temp1076_54 temp1076_53))
(assert (= temp1076_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1076_54)))
(assert (= temp1076_56 #x0000000000000002))
(assert (= temp1076_57 temp1076_56))
(assert (= temp1076_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1076_57)))
(assert (= temp1076_59 #x0000000000000003))
(assert (= temp1076_60 temp1076_59))
(assert (= temp1076_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1076_60)))
(assert (= temp1076_62 #x0000000000000004))
(assert (= temp1076_63 temp1076_62))
(assert (= temp1076_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1076_63)))
(assert (= temp1076_65 #x0000000000000005))
(assert (= temp1076_66 temp1076_65))
(assert (= temp1076_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1076_66)))
(assert (= temp1076_68 #x0000000000000000))
(assert (= temp1076_69 #x0000000000000000))
(assert (= temp1076_70 temp1076_69))
(assert (= temp1076_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1076_70)))
(assert (= temp1076_72 #x0000000000000000))
(assert (= temp1076_73 #x0000000000000001))
(assert (= temp1076_74 temp1076_73))
(assert (= temp1076_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1076_74)))
(assert (= temp1076_76 #x0000000000000000))
(assert (= temp1076_77 #x0000000000000002))
(assert (= temp1076_78 temp1076_77))
(assert (= temp1076_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1076_78)))
(assert (= temp1076_80 #x0000000000000000))
(assert (= temp1076_81 #x0000000000000003))
(assert (= temp1076_82 temp1076_81))
(assert (= temp1076_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1076_82)))
(assert (= temp1076_84 #x0000000000000000))
(assert (= temp1076_85 #x0000000000000004))
(assert (= temp1076_86 temp1076_85))
(assert (= temp1076_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1076_86)))
(assert (= temp1076_88 #x0000000000000000))
(assert (= temp1076_89 #x0000000000000005))
(assert (= temp1076_90 temp1076_89))
(assert (= temp1076_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1076_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1076_71 temp1076_68)
             (bvslt temp1076_75 temp1076_72)
             (bvslt temp1076_79 temp1076_76)
             (bvslt temp1076_83 temp1076_80)
             (bvslt temp1076_87 temp1076_84)
             (bvslt temp1076_91 temp1076_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1076_92 #x0000000000000000))
(assert (= var1191725 temp1076_92))
(assert (= temp1076_93 #x0000000000000000))
(assert (= temp1076_94 temp1076_93))
(assert (= temp1076_95 (select ARGNAME_stride_NAMEEND_VAL temp1076_94)))
(assert (= temp1076_96 #x0000000000000001))
(assert (= temp1076_97 temp1076_96))
(assert (= temp1076_98 (select ARGNAME_stride_NAMEEND_VAL temp1076_97)))
(assert (= temp1076_99 #x0000000000000002))
(assert (= temp1076_100 temp1076_99))
(assert (= temp1076_101 (select ARGNAME_stride_NAMEEND_VAL temp1076_100)))
(assert (= temp1076_102 #x0000000000000003))
(assert (= temp1076_103 temp1076_102))
(assert (= temp1076_104 (select ARGNAME_stride_NAMEEND_VAL temp1076_103)))
(assert (= temp1076_105 #x0000000000000004))
(assert (= temp1076_106 temp1076_105))
(assert (= temp1076_107 (select ARGNAME_stride_NAMEEND_VAL temp1076_106)))
(assert (= temp1076_108 #x0000000000000005))
(assert (= temp1076_109 temp1076_108))
(assert (= temp1076_110 (select ARGNAME_stride_NAMEEND_VAL temp1076_109)))
(assert (= temp1076_111 #x0000000000000000))
(assert (= temp1076_112 #x0000000000000000))
(assert (= temp1076_113 temp1076_112))
(assert (= temp1076_114 (select ARGNAME_stride_NAMEEND_VAL temp1076_113)))
(assert (= temp1076_115 #x0000000000000000))
(assert (= temp1076_116 #x0000000000000001))
(assert (= temp1076_117 temp1076_116))
(assert (= temp1076_118 (select ARGNAME_stride_NAMEEND_VAL temp1076_117)))
(assert (= temp1076_119 #x0000000000000000))
(assert (= temp1076_120 #x0000000000000002))
(assert (= temp1076_121 temp1076_120))
(assert (= temp1076_122 (select ARGNAME_stride_NAMEEND_VAL temp1076_121)))
(assert (= temp1076_123 #x0000000000000000))
(assert (= temp1076_124 #x0000000000000003))
(assert (= temp1076_125 temp1076_124))
(assert (= temp1076_126 (select ARGNAME_stride_NAMEEND_VAL temp1076_125)))
(assert (= temp1076_127 #x0000000000000000))
(assert (= temp1076_128 #x0000000000000004))
(assert (= temp1076_129 temp1076_128))
(assert (= temp1076_130 (select ARGNAME_stride_NAMEEND_VAL temp1076_129)))
(assert (= temp1076_131 #x0000000000000000))
(assert (= temp1076_132 #x0000000000000005))
(assert (= temp1076_133 temp1076_132))
(assert (= temp1076_134 (select ARGNAME_stride_NAMEEND_VAL temp1076_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1076_114 temp1076_111)
             (bvsle temp1076_118 temp1076_115)
             (bvsle temp1076_122 temp1076_119)
             (bvsle temp1076_126 temp1076_123)
             (bvsle temp1076_130 temp1076_127)
             (bvsle temp1076_134 temp1076_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1076_135 #x0000000000000000))
(assert (= var1191735 temp1076_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1076_136 #x0000000000000001))
(assert (= var1191747 temp1076_136))
(assert (= temp1076_137 #x0000000000000000))
(assert (= var1179826 temp1076_137))
(assert (= temp1076_138 #x0000000000000000))
(assert (= temp1076_139 temp1076_138))
(assert (= temp1076_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1076_139)))
(assert (= temp1076_141 #x0000000000000001))
(assert (= temp1076_142 temp1076_141))
(assert (= temp1076_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1076_142)))
(assert (= temp1076_144 #x0000000000000002))
(assert (= temp1076_145 temp1076_144))
(assert (= temp1076_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1076_145)))
(assert (= temp1076_147 #x0000000000000003))
(assert (= temp1076_148 temp1076_147))
(assert (= temp1076_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1076_148)))
(assert (= temp1076_150 #x0000000000000004))
(assert (= temp1076_151 temp1076_150))
(assert (= temp1076_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1076_151)))
(assert (= temp1076_153 #x0000000000000005))
(assert (= temp1076_154 temp1076_153))
(assert (= temp1076_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1076_154)))
(assert (= temp1076_157 var1179826))
(assert (= temp1076_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1076_157)))
(assert (= temp1076_156 temp1076_158))
(assert (= var1191780
   (ite (bvslt temp1076_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1076_159 #x0000000000000000))
(assert (= var1191780 temp1076_159))
(assert (= temp1076_160 #x0000000000000000))
(assert (= var1179826 temp1076_160))
(assert (= temp1076_162 var1179826))
(assert (= temp1076_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1076_162)))
(assert (= temp1076_161 temp1076_163))
(assert (= var1191802 (bvsmod temp1076_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1076_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1076_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1076_165 #x0000000000000001))
(assert (= var1191803 temp1076_165))
(assert (= temp1076_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1076_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1076_167 #x0000000000000001))
(assert (= var1191823 temp1076_167))
(assert (= temp1076_168 #x0000000000000001))
(assert (= var1180714 temp1076_168))
(assert (= temp1076_169 #x0000000000000000))
(assert (= temp1076_170 temp1076_169))
(assert (= temp1076_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1076_170)))
(assert (= temp1076_172 #x0000000000000001))
(assert (= temp1076_173 temp1076_172))
(assert (= temp1076_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1076_173)))
(assert (= temp1076_175 #x0000000000000002))
(assert (= temp1076_176 temp1076_175))
(assert (= temp1076_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1076_176)))
(assert (= temp1076_178 #x0000000000000003))
(assert (= temp1076_179 temp1076_178))
(assert (= temp1076_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1076_179)))
(assert (= temp1076_181 #x0000000000000004))
(assert (= temp1076_182 temp1076_181))
(assert (= temp1076_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1076_182)))
(assert (= temp1076_184 #x0000000000000005))
(assert (= temp1076_185 temp1076_184))
(assert (= temp1076_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1076_185)))
(assert (= temp1076_187 #x0000000000000000))
(assert (= temp1076_188
   (ite (bvslt var1180714 temp1076_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1076_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1076_188)))
(assert (= var1191831 temp1076_189))
(assert (bvslt (ite (bvslt var1180714 temp1076_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1076_190 #x0000000000000001))
(assert (= var1180714 temp1076_190))
(assert (= temp1076_192 var1180714))
(assert (= temp1076_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1076_192)))
(assert (= temp1076_191 temp1076_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1076_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1076_194 #x0000000000000001))
(assert (= var1191836 temp1076_194))
(assert (= temp1076_195 #x0000000000000000))
(assert (= var1179826 temp1076_195))
(assert (= temp1076_197 var1179826))
(assert (= temp1076_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1076_197)))
(assert (= temp1076_196 temp1076_198))
(assert (= temp1076_199 #x0000000000000002))
(assert (= var1586025 temp1076_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1076_200 #x0000000000000001))
(assert (= var1191993 temp1076_200))
(assert (= temp1076_201 #x0000000000000001))
(assert (= var2700303 temp1076_201))
(assert (= temp1076_202 #x0000000000000001))
(assert (= var2962447 temp1076_202))
(assert (= temp1076_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1076_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1076_204 #x0000000000000001))
(assert (= var211058 temp1076_204))
(assert (= temp1076_205 #x0000000000000001))
(assert (= var211188 temp1076_205))
(assert (= var3879401 var211188))
(assert (= temp1076_206 #x0000000000000000))
(assert (= var3866802 temp1076_206))
(assert (= temp1076_207 #x0000000000000000))
(assert (= temp1076_208
   (ite (bvslt var3866802 temp1076_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1076_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1076_208)))
(assert (= var3879420 temp1076_209))
(assert (bvslt (ite (bvslt var3866802 temp1076_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1076_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1076_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1076_211 #x0000000000000001))
(assert (= var3879421 temp1076_211))
(assert (= temp1076_212 #x0000000000000000))
(assert (= var4079423 temp1076_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1076_213 #x0000000000000002))
(assert (= var4208259 temp1076_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1076_214 #x0000000000000000))
(assert (= var4273820 temp1076_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp1076_215 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp1076_215)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1076_216 #x0000000000000001))
(assert (= var212414 temp1076_216))
(assert (= temp1076_217 #x0000000000000002))
(assert (= var5060227 temp1076_217))
(assert (= var5060229 (bvsub ARGNAME_weight_NAMEEND_DIM var5060227)))
(assert (= var5125772 var5060227))
(assert (= var5125773 var5060229))
(assert (= temp1076_218 #x0000000000000001))
(assert (= var211058 temp1076_218))
(assert (= temp1076_219 #x0000000000000000))
(assert (= var5976852 temp1076_219))
(assert (= var5976819 var5976852))
(assert (= var5845383 var5976819))
(assert (= var5845379 var5845383))
(assert (= var212669 var5845379))
(assert (= temp1076_220 #x0000000000000000))
(assert (= var212669 temp1076_220))
(model-add temp1076_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1076_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1076_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1076_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






