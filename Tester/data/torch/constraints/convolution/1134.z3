(declare-fun temp10242_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10242_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10242_3 () (_ BitVec 64))
(declare-fun temp10242_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10242_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10242_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10242_7 () (_ BitVec 64))
(declare-fun temp10242_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10242_9 () (_ BitVec 64))
(declare-fun temp10242_10 () (_ BitVec 64))
(declare-fun temp10242_11 () (_ BitVec 64))
(declare-fun temp10242_12 () (_ BitVec 64))
(declare-fun temp10242_13 () (_ BitVec 64))
(declare-fun temp10242_14 () (_ BitVec 64))
(declare-fun temp10242_15 () (_ BitVec 64))
(declare-fun temp10242_16 () (_ BitVec 64))
(declare-fun temp10242_17 () (_ BitVec 64))
(declare-fun temp10242_18 () (_ BitVec 64))
(declare-fun temp10242_19 () (_ BitVec 64))
(declare-fun temp10242_20 () (_ BitVec 64))
(declare-fun temp10242_21 () (_ BitVec 64))
(declare-fun temp10242_22 () (_ BitVec 64))
(declare-fun temp10242_23 () (_ BitVec 64))
(declare-fun temp10242_24 () (_ BitVec 64))
(declare-fun temp10242_25 () (_ BitVec 64))
(declare-fun temp10242_26 () (_ BitVec 64))
(declare-fun temp10242_27 () (_ BitVec 64))
(declare-fun temp10242_28 () (_ BitVec 64))
(declare-fun temp10242_29 () (_ BitVec 64))
(declare-fun temp10242_30 () (_ BitVec 64))
(declare-fun temp10242_31 () (_ BitVec 64))
(declare-fun temp10242_32 () (_ BitVec 64))
(declare-fun temp10242_33 () (_ BitVec 64))
(declare-fun temp10242_34 () (_ BitVec 64))
(declare-fun temp10242_35 () (_ BitVec 64))
(declare-fun temp10242_36 () (_ BitVec 64))
(declare-fun temp10242_37 () (_ BitVec 64))
(declare-fun temp10242_38 () (_ BitVec 64))
(declare-fun temp10242_39 () (_ BitVec 64))
(declare-fun temp10242_40 () (_ BitVec 64))
(declare-fun temp10242_41 () (_ BitVec 64))
(declare-fun temp10242_42 () (_ BitVec 64))
(declare-fun temp10242_43 () (_ BitVec 64))
(declare-fun temp10242_44 () (_ BitVec 64))
(declare-fun temp10242_45 () (_ BitVec 64))
(declare-fun temp10242_46 () (_ BitVec 64))
(declare-fun temp10242_47 () (_ BitVec 64))
(declare-fun temp10242_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10242_49 () (_ BitVec 64))
(declare-fun temp10242_50 () (_ BitVec 64))
(declare-fun temp10242_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10242_52 () (_ BitVec 64))
(declare-fun temp10242_53 () (_ BitVec 64))
(declare-fun temp10242_54 () (_ BitVec 64))
(declare-fun temp10242_55 () (_ BitVec 64))
(declare-fun temp10242_56 () (_ BitVec 64))
(declare-fun temp10242_57 () (_ BitVec 64))
(declare-fun temp10242_58 () (_ BitVec 64))
(declare-fun temp10242_59 () (_ BitVec 64))
(declare-fun temp10242_60 () (_ BitVec 64))
(declare-fun temp10242_61 () (_ BitVec 64))
(declare-fun temp10242_62 () (_ BitVec 64))
(declare-fun temp10242_63 () (_ BitVec 64))
(declare-fun temp10242_64 () (_ BitVec 64))
(declare-fun temp10242_65 () (_ BitVec 64))
(declare-fun temp10242_66 () (_ BitVec 64))
(declare-fun temp10242_67 () (_ BitVec 64))
(declare-fun temp10242_68 () (_ BitVec 64))
(declare-fun temp10242_69 () (_ BitVec 64))
(declare-fun temp10242_70 () (_ BitVec 64))
(declare-fun temp10242_71 () (_ BitVec 64))
(declare-fun temp10242_72 () (_ BitVec 64))
(declare-fun temp10242_73 () (_ BitVec 64))
(declare-fun temp10242_74 () (_ BitVec 64))
(declare-fun temp10242_75 () (_ BitVec 64))
(declare-fun temp10242_76 () (_ BitVec 64))
(declare-fun temp10242_77 () (_ BitVec 64))
(declare-fun temp10242_78 () (_ BitVec 64))
(declare-fun temp10242_79 () (_ BitVec 64))
(declare-fun temp10242_80 () (_ BitVec 64))
(declare-fun temp10242_81 () (_ BitVec 64))
(declare-fun temp10242_82 () (_ BitVec 64))
(declare-fun temp10242_83 () (_ BitVec 64))
(declare-fun temp10242_84 () (_ BitVec 64))
(declare-fun temp10242_85 () (_ BitVec 64))
(declare-fun temp10242_86 () (_ BitVec 64))
(declare-fun temp10242_87 () (_ BitVec 64))
(declare-fun temp10242_88 () (_ BitVec 64))
(declare-fun temp10242_89 () (_ BitVec 64))
(declare-fun temp10242_90 () (_ BitVec 64))
(declare-fun temp10242_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10242_92 () (_ BitVec 64))
(declare-fun temp10242_93 () (_ BitVec 64))
(declare-fun temp10242_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10242_95 () (_ BitVec 64))
(declare-fun temp10242_96 () (_ BitVec 64))
(declare-fun temp10242_97 () (_ BitVec 64))
(declare-fun temp10242_98 () (_ BitVec 64))
(declare-fun temp10242_99 () (_ BitVec 64))
(declare-fun temp10242_100 () (_ BitVec 64))
(declare-fun temp10242_101 () (_ BitVec 64))
(declare-fun temp10242_102 () (_ BitVec 64))
(declare-fun temp10242_103 () (_ BitVec 64))
(declare-fun temp10242_104 () (_ BitVec 64))
(declare-fun temp10242_105 () (_ BitVec 64))
(declare-fun temp10242_106 () (_ BitVec 64))
(declare-fun temp10242_107 () (_ BitVec 64))
(declare-fun temp10242_108 () (_ BitVec 64))
(declare-fun temp10242_109 () (_ BitVec 64))
(declare-fun temp10242_110 () (_ BitVec 64))
(declare-fun temp10242_111 () (_ BitVec 64))
(declare-fun temp10242_112 () (_ BitVec 64))
(declare-fun temp10242_113 () (_ BitVec 64))
(declare-fun temp10242_114 () (_ BitVec 64))
(declare-fun temp10242_115 () (_ BitVec 64))
(declare-fun temp10242_116 () (_ BitVec 64))
(declare-fun temp10242_117 () (_ BitVec 64))
(declare-fun temp10242_118 () (_ BitVec 64))
(declare-fun temp10242_119 () (_ BitVec 64))
(declare-fun temp10242_120 () (_ BitVec 64))
(declare-fun temp10242_121 () (_ BitVec 64))
(declare-fun temp10242_122 () (_ BitVec 64))
(declare-fun temp10242_123 () (_ BitVec 64))
(declare-fun temp10242_124 () (_ BitVec 64))
(declare-fun temp10242_125 () (_ BitVec 64))
(declare-fun temp10242_126 () (_ BitVec 64))
(declare-fun temp10242_127 () (_ BitVec 64))
(declare-fun temp10242_128 () (_ BitVec 64))
(declare-fun temp10242_129 () (_ BitVec 64))
(declare-fun temp10242_130 () (_ BitVec 64))
(declare-fun temp10242_131 () (_ BitVec 64))
(declare-fun temp10242_132 () (_ BitVec 64))
(declare-fun temp10242_133 () (_ BitVec 64))
(declare-fun temp10242_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10242_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10242_136 () (_ BitVec 64))
(declare-fun temp10242_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10242_138 () (_ BitVec 64))
(declare-fun temp10242_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10242_140 () (_ BitVec 64))
(declare-fun temp10242_141 () (_ BitVec 64))
(declare-fun temp10242_142 () (_ BitVec 64))
(declare-fun temp10242_143 () (_ BitVec 64))
(declare-fun temp10242_144 () (_ BitVec 64))
(declare-fun temp10242_145 () (_ BitVec 64))
(declare-fun temp10242_146 () (_ BitVec 64))
(declare-fun temp10242_147 () (_ BitVec 64))
(declare-fun temp10242_148 () (_ BitVec 64))
(declare-fun temp10242_149 () (_ BitVec 64))
(declare-fun temp10242_150 () (_ BitVec 64))
(declare-fun temp10242_151 () (_ BitVec 64))
(declare-fun temp10242_152 () (_ BitVec 64))
(declare-fun temp10242_153 () (_ BitVec 64))
(declare-fun temp10242_154 () (_ BitVec 64))
(declare-fun temp10242_155 () (_ BitVec 64))
(declare-fun temp10242_157 () (_ BitVec 64))
(declare-fun temp10242_158 () (_ BitVec 64))
(declare-fun temp10242_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10242_159 () (_ BitVec 64))
(declare-fun temp10242_160 () (_ BitVec 64))
(declare-fun temp10242_162 () (_ BitVec 64))
(declare-fun temp10242_163 () (_ BitVec 64))
(declare-fun temp10242_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10242_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10242_165 () (_ BitVec 64))
(declare-fun temp10242_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10242_167 () (_ BitVec 64))
(declare-fun temp10242_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10242_169 () (_ BitVec 64))
(declare-fun temp10242_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10242_171 () (_ BitVec 64))
(declare-fun temp10242_172 () (_ BitVec 64))
(declare-fun temp10242_173 () (_ BitVec 64))
(declare-fun temp10242_174 () (_ BitVec 64))
(declare-fun temp10242_175 () (_ BitVec 64))
(declare-fun temp10242_176 () (_ BitVec 64))
(declare-fun temp10242_177 () (_ BitVec 64))
(declare-fun temp10242_178 () (_ BitVec 64))
(declare-fun temp10242_179 () (_ BitVec 64))
(declare-fun temp10242_180 () (_ BitVec 64))
(declare-fun temp10242_181 () (_ BitVec 64))
(declare-fun temp10242_182 () (_ BitVec 64))
(declare-fun temp10242_183 () (_ BitVec 64))
(declare-fun temp10242_184 () (_ BitVec 64))
(declare-fun temp10242_185 () (_ BitVec 64))
(declare-fun temp10242_186 () (_ BitVec 64))
(declare-fun temp10242_187 () (_ BitVec 64))
(declare-fun temp10242_188 () (_ BitVec 64))
(declare-fun temp10242_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10242_190 () (_ BitVec 64))
(declare-fun temp10242_192 () (_ BitVec 64))
(declare-fun temp10242_193 () (_ BitVec 64))
(declare-fun temp10242_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10242_194 () (_ BitVec 64))
(declare-fun temp10242_195 () (_ BitVec 64))
(declare-fun temp10242_197 () (_ BitVec 64))
(declare-fun temp10242_198 () (_ BitVec 64))
(declare-fun temp10242_196 () (_ BitVec 64))
(declare-fun temp10242_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10242_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10242_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10242_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10242_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10242_204 () (_ BitVec 64))
(declare-fun temp10242_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10242_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10242_207 () (_ BitVec 64))
(declare-fun temp10242_208 () (_ BitVec 64))
(declare-fun temp10242_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10242_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10242_211 () (_ BitVec 64))
(declare-fun temp10242_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10242_213 () (_ BitVec 64))
(declare-fun temp10242_214 () (_ BitVec 64))
(declare-fun temp10242_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10242_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10242_217 () (_ BitVec 64))
(declare-fun temp10242_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10242_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10242_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun temp10242_221 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun temp10242_222 () (_ BitVec 64))
(assert (= temp10242_1 #x0000000000000001))
(assert (= var77203 temp10242_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10242_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10242_2)))
(assert (= temp10242_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10242_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10242_4 #x0000000000000000))
(assert (= var210941 temp10242_4))
(assert (= temp10242_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10242_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10242_6 #x0000000000000000))
(assert (= var210986 temp10242_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10242_7 #x0000000000000000))
(assert (= temp10242_8 temp10242_7))
(assert (= temp10242_9 (select ARGNAME_padding_NAMEEND_VAL temp10242_8)))
(assert (= temp10242_10 #x0000000000000001))
(assert (= temp10242_11 temp10242_10))
(assert (= temp10242_12 (select ARGNAME_padding_NAMEEND_VAL temp10242_11)))
(assert (= temp10242_13 #x0000000000000002))
(assert (= temp10242_14 temp10242_13))
(assert (= temp10242_15 (select ARGNAME_padding_NAMEEND_VAL temp10242_14)))
(assert (= temp10242_16 #x0000000000000003))
(assert (= temp10242_17 temp10242_16))
(assert (= temp10242_18 (select ARGNAME_padding_NAMEEND_VAL temp10242_17)))
(assert (= temp10242_19 #x0000000000000004))
(assert (= temp10242_20 temp10242_19))
(assert (= temp10242_21 (select ARGNAME_padding_NAMEEND_VAL temp10242_20)))
(assert (= temp10242_22 #x0000000000000005))
(assert (= temp10242_23 temp10242_22))
(assert (= temp10242_24 (select ARGNAME_padding_NAMEEND_VAL temp10242_23)))
(assert (= temp10242_25 #x0000000000000000))
(assert (= temp10242_26 #x0000000000000000))
(assert (= temp10242_27 temp10242_26))
(assert (= temp10242_28 (select ARGNAME_padding_NAMEEND_VAL temp10242_27)))
(assert (= temp10242_29 #x0000000000000000))
(assert (= temp10242_30 #x0000000000000001))
(assert (= temp10242_31 temp10242_30))
(assert (= temp10242_32 (select ARGNAME_padding_NAMEEND_VAL temp10242_31)))
(assert (= temp10242_33 #x0000000000000000))
(assert (= temp10242_34 #x0000000000000002))
(assert (= temp10242_35 temp10242_34))
(assert (= temp10242_36 (select ARGNAME_padding_NAMEEND_VAL temp10242_35)))
(assert (= temp10242_37 #x0000000000000000))
(assert (= temp10242_38 #x0000000000000003))
(assert (= temp10242_39 temp10242_38))
(assert (= temp10242_40 (select ARGNAME_padding_NAMEEND_VAL temp10242_39)))
(assert (= temp10242_41 #x0000000000000000))
(assert (= temp10242_42 #x0000000000000004))
(assert (= temp10242_43 temp10242_42))
(assert (= temp10242_44 (select ARGNAME_padding_NAMEEND_VAL temp10242_43)))
(assert (= temp10242_45 #x0000000000000000))
(assert (= temp10242_46 #x0000000000000005))
(assert (= temp10242_47 temp10242_46))
(assert (= temp10242_48 (select ARGNAME_padding_NAMEEND_VAL temp10242_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10242_28 temp10242_25)
             (bvslt temp10242_32 temp10242_29)
             (bvslt temp10242_36 temp10242_33)
             (bvslt temp10242_40 temp10242_37)
             (bvslt temp10242_44 temp10242_41)
             (bvslt temp10242_48 temp10242_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10242_49 #x0000000000000000))
(assert (= var1191714 temp10242_49))
(assert (= temp10242_50 #x0000000000000000))
(assert (= temp10242_51 temp10242_50))
(assert (= temp10242_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10242_51)))
(assert (= temp10242_53 #x0000000000000001))
(assert (= temp10242_54 temp10242_53))
(assert (= temp10242_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10242_54)))
(assert (= temp10242_56 #x0000000000000002))
(assert (= temp10242_57 temp10242_56))
(assert (= temp10242_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10242_57)))
(assert (= temp10242_59 #x0000000000000003))
(assert (= temp10242_60 temp10242_59))
(assert (= temp10242_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10242_60)))
(assert (= temp10242_62 #x0000000000000004))
(assert (= temp10242_63 temp10242_62))
(assert (= temp10242_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10242_63)))
(assert (= temp10242_65 #x0000000000000005))
(assert (= temp10242_66 temp10242_65))
(assert (= temp10242_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10242_66)))
(assert (= temp10242_68 #x0000000000000000))
(assert (= temp10242_69 #x0000000000000000))
(assert (= temp10242_70 temp10242_69))
(assert (= temp10242_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10242_70)))
(assert (= temp10242_72 #x0000000000000000))
(assert (= temp10242_73 #x0000000000000001))
(assert (= temp10242_74 temp10242_73))
(assert (= temp10242_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10242_74)))
(assert (= temp10242_76 #x0000000000000000))
(assert (= temp10242_77 #x0000000000000002))
(assert (= temp10242_78 temp10242_77))
(assert (= temp10242_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10242_78)))
(assert (= temp10242_80 #x0000000000000000))
(assert (= temp10242_81 #x0000000000000003))
(assert (= temp10242_82 temp10242_81))
(assert (= temp10242_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10242_82)))
(assert (= temp10242_84 #x0000000000000000))
(assert (= temp10242_85 #x0000000000000004))
(assert (= temp10242_86 temp10242_85))
(assert (= temp10242_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10242_86)))
(assert (= temp10242_88 #x0000000000000000))
(assert (= temp10242_89 #x0000000000000005))
(assert (= temp10242_90 temp10242_89))
(assert (= temp10242_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10242_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10242_71 temp10242_68)
             (bvslt temp10242_75 temp10242_72)
             (bvslt temp10242_79 temp10242_76)
             (bvslt temp10242_83 temp10242_80)
             (bvslt temp10242_87 temp10242_84)
             (bvslt temp10242_91 temp10242_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10242_92 #x0000000000000000))
(assert (= var1191725 temp10242_92))
(assert (= temp10242_93 #x0000000000000000))
(assert (= temp10242_94 temp10242_93))
(assert (= temp10242_95 (select ARGNAME_stride_NAMEEND_VAL temp10242_94)))
(assert (= temp10242_96 #x0000000000000001))
(assert (= temp10242_97 temp10242_96))
(assert (= temp10242_98 (select ARGNAME_stride_NAMEEND_VAL temp10242_97)))
(assert (= temp10242_99 #x0000000000000002))
(assert (= temp10242_100 temp10242_99))
(assert (= temp10242_101 (select ARGNAME_stride_NAMEEND_VAL temp10242_100)))
(assert (= temp10242_102 #x0000000000000003))
(assert (= temp10242_103 temp10242_102))
(assert (= temp10242_104 (select ARGNAME_stride_NAMEEND_VAL temp10242_103)))
(assert (= temp10242_105 #x0000000000000004))
(assert (= temp10242_106 temp10242_105))
(assert (= temp10242_107 (select ARGNAME_stride_NAMEEND_VAL temp10242_106)))
(assert (= temp10242_108 #x0000000000000005))
(assert (= temp10242_109 temp10242_108))
(assert (= temp10242_110 (select ARGNAME_stride_NAMEEND_VAL temp10242_109)))
(assert (= temp10242_111 #x0000000000000000))
(assert (= temp10242_112 #x0000000000000000))
(assert (= temp10242_113 temp10242_112))
(assert (= temp10242_114 (select ARGNAME_stride_NAMEEND_VAL temp10242_113)))
(assert (= temp10242_115 #x0000000000000000))
(assert (= temp10242_116 #x0000000000000001))
(assert (= temp10242_117 temp10242_116))
(assert (= temp10242_118 (select ARGNAME_stride_NAMEEND_VAL temp10242_117)))
(assert (= temp10242_119 #x0000000000000000))
(assert (= temp10242_120 #x0000000000000002))
(assert (= temp10242_121 temp10242_120))
(assert (= temp10242_122 (select ARGNAME_stride_NAMEEND_VAL temp10242_121)))
(assert (= temp10242_123 #x0000000000000000))
(assert (= temp10242_124 #x0000000000000003))
(assert (= temp10242_125 temp10242_124))
(assert (= temp10242_126 (select ARGNAME_stride_NAMEEND_VAL temp10242_125)))
(assert (= temp10242_127 #x0000000000000000))
(assert (= temp10242_128 #x0000000000000004))
(assert (= temp10242_129 temp10242_128))
(assert (= temp10242_130 (select ARGNAME_stride_NAMEEND_VAL temp10242_129)))
(assert (= temp10242_131 #x0000000000000000))
(assert (= temp10242_132 #x0000000000000005))
(assert (= temp10242_133 temp10242_132))
(assert (= temp10242_134 (select ARGNAME_stride_NAMEEND_VAL temp10242_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10242_114 temp10242_111)
             (bvsle temp10242_118 temp10242_115)
             (bvsle temp10242_122 temp10242_119)
             (bvsle temp10242_126 temp10242_123)
             (bvsle temp10242_130 temp10242_127)
             (bvsle temp10242_134 temp10242_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10242_135 #x0000000000000000))
(assert (= var1191735 temp10242_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10242_136 #x0000000000000001))
(assert (= var1191747 temp10242_136))
(assert (= temp10242_137 #x0000000000000000))
(assert (= var1179826 temp10242_137))
(assert (= temp10242_138 #x0000000000000000))
(assert (= temp10242_139 temp10242_138))
(assert (= temp10242_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10242_139)))
(assert (= temp10242_141 #x0000000000000001))
(assert (= temp10242_142 temp10242_141))
(assert (= temp10242_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10242_142)))
(assert (= temp10242_144 #x0000000000000002))
(assert (= temp10242_145 temp10242_144))
(assert (= temp10242_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10242_145)))
(assert (= temp10242_147 #x0000000000000003))
(assert (= temp10242_148 temp10242_147))
(assert (= temp10242_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10242_148)))
(assert (= temp10242_150 #x0000000000000004))
(assert (= temp10242_151 temp10242_150))
(assert (= temp10242_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10242_151)))
(assert (= temp10242_153 #x0000000000000005))
(assert (= temp10242_154 temp10242_153))
(assert (= temp10242_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10242_154)))
(assert (= temp10242_157 var1179826))
(assert (= temp10242_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10242_157)))
(assert (= temp10242_156 temp10242_158))
(assert (= var1191780
   (ite (bvslt temp10242_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10242_159 #x0000000000000000))
(assert (= var1191780 temp10242_159))
(assert (= temp10242_160 #x0000000000000000))
(assert (= var1179826 temp10242_160))
(assert (= temp10242_162 var1179826))
(assert (= temp10242_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10242_162)))
(assert (= temp10242_161 temp10242_163))
(assert (= var1191802 (bvsmod temp10242_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10242_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10242_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10242_165 #x0000000000000001))
(assert (= var1191803 temp10242_165))
(assert (= temp10242_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10242_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10242_167 #x0000000000000001))
(assert (= var1191823 temp10242_167))
(assert (= temp10242_168 #x0000000000000001))
(assert (= var1180714 temp10242_168))
(assert (= temp10242_169 #x0000000000000000))
(assert (= temp10242_170 temp10242_169))
(assert (= temp10242_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10242_170)))
(assert (= temp10242_172 #x0000000000000001))
(assert (= temp10242_173 temp10242_172))
(assert (= temp10242_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10242_173)))
(assert (= temp10242_175 #x0000000000000002))
(assert (= temp10242_176 temp10242_175))
(assert (= temp10242_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10242_176)))
(assert (= temp10242_178 #x0000000000000003))
(assert (= temp10242_179 temp10242_178))
(assert (= temp10242_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10242_179)))
(assert (= temp10242_181 #x0000000000000004))
(assert (= temp10242_182 temp10242_181))
(assert (= temp10242_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10242_182)))
(assert (= temp10242_184 #x0000000000000005))
(assert (= temp10242_185 temp10242_184))
(assert (= temp10242_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10242_185)))
(assert (= temp10242_187 #x0000000000000000))
(assert (= temp10242_188
   (ite (bvslt var1180714 temp10242_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10242_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10242_188)))
(assert (= var1191831 temp10242_189))
(assert (bvslt (ite (bvslt var1180714 temp10242_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10242_190 #x0000000000000001))
(assert (= var1180714 temp10242_190))
(assert (= temp10242_192 var1180714))
(assert (= temp10242_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10242_192)))
(assert (= temp10242_191 temp10242_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10242_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10242_194 #x0000000000000001))
(assert (= var1191836 temp10242_194))
(assert (= temp10242_195 #x0000000000000000))
(assert (= var1179826 temp10242_195))
(assert (= temp10242_197 var1179826))
(assert (= temp10242_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10242_197)))
(assert (= temp10242_196 temp10242_198))
(assert (= temp10242_199 #x0000000000000002))
(assert (= var1586025 temp10242_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10242_200 #x0000000000000001))
(assert (= var1191993 temp10242_200))
(assert (= temp10242_201 #x0000000000000001))
(assert (= var2700303 temp10242_201))
(assert (= temp10242_202 #x0000000000000001))
(assert (= var2962447 temp10242_202))
(assert (= temp10242_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10242_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10242_204 #x0000000000000001))
(assert (= var211058 temp10242_204))
(assert (= temp10242_205 #x0000000000000001))
(assert (= var211188 temp10242_205))
(assert (= var3879401 var211188))
(assert (= temp10242_206 #x0000000000000000))
(assert (= var3866802 temp10242_206))
(assert (= temp10242_207 #x0000000000000000))
(assert (= temp10242_208
   (ite (bvslt var3866802 temp10242_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10242_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10242_208)))
(assert (= var3879420 temp10242_209))
(assert (bvslt (ite (bvslt var3866802 temp10242_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10242_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10242_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10242_211 #x0000000000000000))
(assert (= var3879421 temp10242_211))
(assert (= temp10242_212 #x0000000000000001))
(assert (= var3867690 temp10242_212))
(assert (= temp10242_213 #x0000000000000000))
(assert (= temp10242_214
   (ite (bvslt var3867690 temp10242_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10242_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10242_214)))
(assert (= var3879423 temp10242_215))
(assert (bvslt (ite (bvslt var3867690 temp10242_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10242_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10242_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10242_217 #x0000000000000001))
(assert (= var3879424 temp10242_217))
(assert (= temp10242_218 #x0000000000000000))
(assert (= var4079423 temp10242_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10242_219 #x0000000000000002))
(assert (= var4208259 temp10242_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10242_220 #x0000000000000000))
(assert (= var4273820 temp10242_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4862352 var211201))
(assert (= var5124496 var211201))
(assert (= temp10242_221 #x0000000000000000))
(assert (= var5452176 temp10242_221))
(assert (= temp10242_222 #x0000000000000001))
(assert (= var211058 temp10242_222))
(model-add temp10242_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10242_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10242_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10242_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



