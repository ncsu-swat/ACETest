(declare-fun temp386_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp386_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp386_3 () (_ BitVec 64))
(declare-fun temp386_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp386_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp386_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp386_7 () (_ BitVec 64))
(declare-fun temp386_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp386_9 () (_ BitVec 64))
(declare-fun temp386_10 () (_ BitVec 64))
(declare-fun temp386_11 () (_ BitVec 64))
(declare-fun temp386_12 () (_ BitVec 64))
(declare-fun temp386_13 () (_ BitVec 64))
(declare-fun temp386_14 () (_ BitVec 64))
(declare-fun temp386_15 () (_ BitVec 64))
(declare-fun temp386_16 () (_ BitVec 64))
(declare-fun temp386_17 () (_ BitVec 64))
(declare-fun temp386_18 () (_ BitVec 64))
(declare-fun temp386_19 () (_ BitVec 64))
(declare-fun temp386_20 () (_ BitVec 64))
(declare-fun temp386_21 () (_ BitVec 64))
(declare-fun temp386_22 () (_ BitVec 64))
(declare-fun temp386_23 () (_ BitVec 64))
(declare-fun temp386_24 () (_ BitVec 64))
(declare-fun temp386_25 () (_ BitVec 64))
(declare-fun temp386_26 () (_ BitVec 64))
(declare-fun temp386_27 () (_ BitVec 64))
(declare-fun temp386_28 () (_ BitVec 64))
(declare-fun temp386_29 () (_ BitVec 64))
(declare-fun temp386_30 () (_ BitVec 64))
(declare-fun temp386_31 () (_ BitVec 64))
(declare-fun temp386_32 () (_ BitVec 64))
(declare-fun temp386_33 () (_ BitVec 64))
(declare-fun temp386_34 () (_ BitVec 64))
(declare-fun temp386_35 () (_ BitVec 64))
(declare-fun temp386_36 () (_ BitVec 64))
(declare-fun temp386_37 () (_ BitVec 64))
(declare-fun temp386_38 () (_ BitVec 64))
(declare-fun temp386_39 () (_ BitVec 64))
(declare-fun temp386_40 () (_ BitVec 64))
(declare-fun temp386_41 () (_ BitVec 64))
(declare-fun temp386_42 () (_ BitVec 64))
(declare-fun temp386_43 () (_ BitVec 64))
(declare-fun temp386_44 () (_ BitVec 64))
(declare-fun temp386_45 () (_ BitVec 64))
(declare-fun temp386_46 () (_ BitVec 64))
(declare-fun temp386_47 () (_ BitVec 64))
(declare-fun temp386_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp386_49 () (_ BitVec 64))
(declare-fun temp386_50 () (_ BitVec 64))
(declare-fun temp386_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp386_52 () (_ BitVec 64))
(declare-fun temp386_53 () (_ BitVec 64))
(declare-fun temp386_54 () (_ BitVec 64))
(declare-fun temp386_55 () (_ BitVec 64))
(declare-fun temp386_56 () (_ BitVec 64))
(declare-fun temp386_57 () (_ BitVec 64))
(declare-fun temp386_58 () (_ BitVec 64))
(declare-fun temp386_59 () (_ BitVec 64))
(declare-fun temp386_60 () (_ BitVec 64))
(declare-fun temp386_61 () (_ BitVec 64))
(declare-fun temp386_62 () (_ BitVec 64))
(declare-fun temp386_63 () (_ BitVec 64))
(declare-fun temp386_64 () (_ BitVec 64))
(declare-fun temp386_65 () (_ BitVec 64))
(declare-fun temp386_66 () (_ BitVec 64))
(declare-fun temp386_67 () (_ BitVec 64))
(declare-fun temp386_68 () (_ BitVec 64))
(declare-fun temp386_69 () (_ BitVec 64))
(declare-fun temp386_70 () (_ BitVec 64))
(declare-fun temp386_71 () (_ BitVec 64))
(declare-fun temp386_72 () (_ BitVec 64))
(declare-fun temp386_73 () (_ BitVec 64))
(declare-fun temp386_74 () (_ BitVec 64))
(declare-fun temp386_75 () (_ BitVec 64))
(declare-fun temp386_76 () (_ BitVec 64))
(declare-fun temp386_77 () (_ BitVec 64))
(declare-fun temp386_78 () (_ BitVec 64))
(declare-fun temp386_79 () (_ BitVec 64))
(declare-fun temp386_80 () (_ BitVec 64))
(declare-fun temp386_81 () (_ BitVec 64))
(declare-fun temp386_82 () (_ BitVec 64))
(declare-fun temp386_83 () (_ BitVec 64))
(declare-fun temp386_84 () (_ BitVec 64))
(declare-fun temp386_85 () (_ BitVec 64))
(declare-fun temp386_86 () (_ BitVec 64))
(declare-fun temp386_87 () (_ BitVec 64))
(declare-fun temp386_88 () (_ BitVec 64))
(declare-fun temp386_89 () (_ BitVec 64))
(declare-fun temp386_90 () (_ BitVec 64))
(declare-fun temp386_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp386_92 () (_ BitVec 64))
(declare-fun temp386_93 () (_ BitVec 64))
(declare-fun temp386_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp386_95 () (_ BitVec 64))
(declare-fun temp386_96 () (_ BitVec 64))
(declare-fun temp386_97 () (_ BitVec 64))
(declare-fun temp386_98 () (_ BitVec 64))
(declare-fun temp386_99 () (_ BitVec 64))
(declare-fun temp386_100 () (_ BitVec 64))
(declare-fun temp386_101 () (_ BitVec 64))
(declare-fun temp386_102 () (_ BitVec 64))
(declare-fun temp386_103 () (_ BitVec 64))
(declare-fun temp386_104 () (_ BitVec 64))
(declare-fun temp386_105 () (_ BitVec 64))
(declare-fun temp386_106 () (_ BitVec 64))
(declare-fun temp386_107 () (_ BitVec 64))
(declare-fun temp386_108 () (_ BitVec 64))
(declare-fun temp386_109 () (_ BitVec 64))
(declare-fun temp386_110 () (_ BitVec 64))
(declare-fun temp386_111 () (_ BitVec 64))
(declare-fun temp386_112 () (_ BitVec 64))
(declare-fun temp386_113 () (_ BitVec 64))
(declare-fun temp386_114 () (_ BitVec 64))
(declare-fun temp386_115 () (_ BitVec 64))
(declare-fun temp386_116 () (_ BitVec 64))
(declare-fun temp386_117 () (_ BitVec 64))
(declare-fun temp386_118 () (_ BitVec 64))
(declare-fun temp386_119 () (_ BitVec 64))
(declare-fun temp386_120 () (_ BitVec 64))
(declare-fun temp386_121 () (_ BitVec 64))
(declare-fun temp386_122 () (_ BitVec 64))
(declare-fun temp386_123 () (_ BitVec 64))
(declare-fun temp386_124 () (_ BitVec 64))
(declare-fun temp386_125 () (_ BitVec 64))
(declare-fun temp386_126 () (_ BitVec 64))
(declare-fun temp386_127 () (_ BitVec 64))
(declare-fun temp386_128 () (_ BitVec 64))
(declare-fun temp386_129 () (_ BitVec 64))
(declare-fun temp386_130 () (_ BitVec 64))
(declare-fun temp386_131 () (_ BitVec 64))
(declare-fun temp386_132 () (_ BitVec 64))
(declare-fun temp386_133 () (_ BitVec 64))
(declare-fun temp386_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp386_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp386_136 () (_ BitVec 64))
(declare-fun temp386_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp386_138 () (_ BitVec 64))
(declare-fun temp386_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp386_140 () (_ BitVec 64))
(declare-fun temp386_141 () (_ BitVec 64))
(declare-fun temp386_142 () (_ BitVec 64))
(declare-fun temp386_143 () (_ BitVec 64))
(declare-fun temp386_144 () (_ BitVec 64))
(declare-fun temp386_145 () (_ BitVec 64))
(declare-fun temp386_146 () (_ BitVec 64))
(declare-fun temp386_147 () (_ BitVec 64))
(declare-fun temp386_148 () (_ BitVec 64))
(declare-fun temp386_149 () (_ BitVec 64))
(declare-fun temp386_150 () (_ BitVec 64))
(declare-fun temp386_151 () (_ BitVec 64))
(declare-fun temp386_152 () (_ BitVec 64))
(declare-fun temp386_153 () (_ BitVec 64))
(declare-fun temp386_154 () (_ BitVec 64))
(declare-fun temp386_155 () (_ BitVec 64))
(declare-fun temp386_157 () (_ BitVec 64))
(declare-fun temp386_158 () (_ BitVec 64))
(declare-fun temp386_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp386_159 () (_ BitVec 64))
(declare-fun temp386_160 () (_ BitVec 64))
(declare-fun temp386_162 () (_ BitVec 64))
(declare-fun temp386_163 () (_ BitVec 64))
(declare-fun temp386_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp386_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp386_165 () (_ BitVec 64))
(declare-fun temp386_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp386_167 () (_ BitVec 64))
(declare-fun temp386_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp386_169 () (_ BitVec 64))
(declare-fun temp386_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp386_171 () (_ BitVec 64))
(declare-fun temp386_172 () (_ BitVec 64))
(declare-fun temp386_173 () (_ BitVec 64))
(declare-fun temp386_174 () (_ BitVec 64))
(declare-fun temp386_175 () (_ BitVec 64))
(declare-fun temp386_176 () (_ BitVec 64))
(declare-fun temp386_177 () (_ BitVec 64))
(declare-fun temp386_178 () (_ BitVec 64))
(declare-fun temp386_179 () (_ BitVec 64))
(declare-fun temp386_180 () (_ BitVec 64))
(declare-fun temp386_181 () (_ BitVec 64))
(declare-fun temp386_182 () (_ BitVec 64))
(declare-fun temp386_183 () (_ BitVec 64))
(declare-fun temp386_184 () (_ BitVec 64))
(declare-fun temp386_185 () (_ BitVec 64))
(declare-fun temp386_186 () (_ BitVec 64))
(declare-fun temp386_187 () (_ BitVec 64))
(declare-fun temp386_188 () (_ BitVec 64))
(declare-fun temp386_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp386_190 () (_ BitVec 64))
(declare-fun temp386_192 () (_ BitVec 64))
(declare-fun temp386_193 () (_ BitVec 64))
(declare-fun temp386_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp386_194 () (_ BitVec 64))
(declare-fun temp386_195 () (_ BitVec 64))
(declare-fun temp386_197 () (_ BitVec 64))
(declare-fun temp386_198 () (_ BitVec 64))
(declare-fun temp386_196 () (_ BitVec 64))
(declare-fun temp386_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp386_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp386_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp386_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp386_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp386_204 () (_ BitVec 64))
(declare-fun temp386_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp386_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp386_207 () (_ BitVec 64))
(declare-fun temp386_208 () (_ BitVec 64))
(declare-fun temp386_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp386_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp386_211 () (_ BitVec 64))
(declare-fun temp386_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp386_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp386_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun temp386_215 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp386_216 () (_ BitVec 64))
(assert (= temp386_1 #x0000000000000001))
(assert (= var77203 temp386_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp386_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp386_2)))
(assert (= temp386_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp386_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_4 #x0000000000000000))
(assert (= var210941 temp386_4))
(assert (= temp386_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp386_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_6 #x0000000000000000))
(assert (= var210986 temp386_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp386_7 #x0000000000000000))
(assert (= temp386_8 temp386_7))
(assert (= temp386_9 (select ARGNAME_padding_NAMEEND_VAL temp386_8)))
(assert (= temp386_10 #x0000000000000001))
(assert (= temp386_11 temp386_10))
(assert (= temp386_12 (select ARGNAME_padding_NAMEEND_VAL temp386_11)))
(assert (= temp386_13 #x0000000000000002))
(assert (= temp386_14 temp386_13))
(assert (= temp386_15 (select ARGNAME_padding_NAMEEND_VAL temp386_14)))
(assert (= temp386_16 #x0000000000000003))
(assert (= temp386_17 temp386_16))
(assert (= temp386_18 (select ARGNAME_padding_NAMEEND_VAL temp386_17)))
(assert (= temp386_19 #x0000000000000004))
(assert (= temp386_20 temp386_19))
(assert (= temp386_21 (select ARGNAME_padding_NAMEEND_VAL temp386_20)))
(assert (= temp386_22 #x0000000000000005))
(assert (= temp386_23 temp386_22))
(assert (= temp386_24 (select ARGNAME_padding_NAMEEND_VAL temp386_23)))
(assert (= temp386_25 #x0000000000000000))
(assert (= temp386_26 #x0000000000000000))
(assert (= temp386_27 temp386_26))
(assert (= temp386_28 (select ARGNAME_padding_NAMEEND_VAL temp386_27)))
(assert (= temp386_29 #x0000000000000000))
(assert (= temp386_30 #x0000000000000001))
(assert (= temp386_31 temp386_30))
(assert (= temp386_32 (select ARGNAME_padding_NAMEEND_VAL temp386_31)))
(assert (= temp386_33 #x0000000000000000))
(assert (= temp386_34 #x0000000000000002))
(assert (= temp386_35 temp386_34))
(assert (= temp386_36 (select ARGNAME_padding_NAMEEND_VAL temp386_35)))
(assert (= temp386_37 #x0000000000000000))
(assert (= temp386_38 #x0000000000000003))
(assert (= temp386_39 temp386_38))
(assert (= temp386_40 (select ARGNAME_padding_NAMEEND_VAL temp386_39)))
(assert (= temp386_41 #x0000000000000000))
(assert (= temp386_42 #x0000000000000004))
(assert (= temp386_43 temp386_42))
(assert (= temp386_44 (select ARGNAME_padding_NAMEEND_VAL temp386_43)))
(assert (= temp386_45 #x0000000000000000))
(assert (= temp386_46 #x0000000000000005))
(assert (= temp386_47 temp386_46))
(assert (= temp386_48 (select ARGNAME_padding_NAMEEND_VAL temp386_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp386_28 temp386_25)
             (bvslt temp386_32 temp386_29)
             (bvslt temp386_36 temp386_33)
             (bvslt temp386_40 temp386_37)
             (bvslt temp386_44 temp386_41)
             (bvslt temp386_48 temp386_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_49 #x0000000000000000))
(assert (= var1191714 temp386_49))
(assert (= temp386_50 #x0000000000000000))
(assert (= temp386_51 temp386_50))
(assert (= temp386_52 (select ARGNAME_output_padding_NAMEEND_VAL temp386_51)))
(assert (= temp386_53 #x0000000000000001))
(assert (= temp386_54 temp386_53))
(assert (= temp386_55 (select ARGNAME_output_padding_NAMEEND_VAL temp386_54)))
(assert (= temp386_56 #x0000000000000002))
(assert (= temp386_57 temp386_56))
(assert (= temp386_58 (select ARGNAME_output_padding_NAMEEND_VAL temp386_57)))
(assert (= temp386_59 #x0000000000000003))
(assert (= temp386_60 temp386_59))
(assert (= temp386_61 (select ARGNAME_output_padding_NAMEEND_VAL temp386_60)))
(assert (= temp386_62 #x0000000000000004))
(assert (= temp386_63 temp386_62))
(assert (= temp386_64 (select ARGNAME_output_padding_NAMEEND_VAL temp386_63)))
(assert (= temp386_65 #x0000000000000005))
(assert (= temp386_66 temp386_65))
(assert (= temp386_67 (select ARGNAME_output_padding_NAMEEND_VAL temp386_66)))
(assert (= temp386_68 #x0000000000000000))
(assert (= temp386_69 #x0000000000000000))
(assert (= temp386_70 temp386_69))
(assert (= temp386_71 (select ARGNAME_output_padding_NAMEEND_VAL temp386_70)))
(assert (= temp386_72 #x0000000000000000))
(assert (= temp386_73 #x0000000000000001))
(assert (= temp386_74 temp386_73))
(assert (= temp386_75 (select ARGNAME_output_padding_NAMEEND_VAL temp386_74)))
(assert (= temp386_76 #x0000000000000000))
(assert (= temp386_77 #x0000000000000002))
(assert (= temp386_78 temp386_77))
(assert (= temp386_79 (select ARGNAME_output_padding_NAMEEND_VAL temp386_78)))
(assert (= temp386_80 #x0000000000000000))
(assert (= temp386_81 #x0000000000000003))
(assert (= temp386_82 temp386_81))
(assert (= temp386_83 (select ARGNAME_output_padding_NAMEEND_VAL temp386_82)))
(assert (= temp386_84 #x0000000000000000))
(assert (= temp386_85 #x0000000000000004))
(assert (= temp386_86 temp386_85))
(assert (= temp386_87 (select ARGNAME_output_padding_NAMEEND_VAL temp386_86)))
(assert (= temp386_88 #x0000000000000000))
(assert (= temp386_89 #x0000000000000005))
(assert (= temp386_90 temp386_89))
(assert (= temp386_91 (select ARGNAME_output_padding_NAMEEND_VAL temp386_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp386_71 temp386_68)
             (bvslt temp386_75 temp386_72)
             (bvslt temp386_79 temp386_76)
             (bvslt temp386_83 temp386_80)
             (bvslt temp386_87 temp386_84)
             (bvslt temp386_91 temp386_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_92 #x0000000000000000))
(assert (= var1191725 temp386_92))
(assert (= temp386_93 #x0000000000000000))
(assert (= temp386_94 temp386_93))
(assert (= temp386_95 (select ARGNAME_stride_NAMEEND_VAL temp386_94)))
(assert (= temp386_96 #x0000000000000001))
(assert (= temp386_97 temp386_96))
(assert (= temp386_98 (select ARGNAME_stride_NAMEEND_VAL temp386_97)))
(assert (= temp386_99 #x0000000000000002))
(assert (= temp386_100 temp386_99))
(assert (= temp386_101 (select ARGNAME_stride_NAMEEND_VAL temp386_100)))
(assert (= temp386_102 #x0000000000000003))
(assert (= temp386_103 temp386_102))
(assert (= temp386_104 (select ARGNAME_stride_NAMEEND_VAL temp386_103)))
(assert (= temp386_105 #x0000000000000004))
(assert (= temp386_106 temp386_105))
(assert (= temp386_107 (select ARGNAME_stride_NAMEEND_VAL temp386_106)))
(assert (= temp386_108 #x0000000000000005))
(assert (= temp386_109 temp386_108))
(assert (= temp386_110 (select ARGNAME_stride_NAMEEND_VAL temp386_109)))
(assert (= temp386_111 #x0000000000000000))
(assert (= temp386_112 #x0000000000000000))
(assert (= temp386_113 temp386_112))
(assert (= temp386_114 (select ARGNAME_stride_NAMEEND_VAL temp386_113)))
(assert (= temp386_115 #x0000000000000000))
(assert (= temp386_116 #x0000000000000001))
(assert (= temp386_117 temp386_116))
(assert (= temp386_118 (select ARGNAME_stride_NAMEEND_VAL temp386_117)))
(assert (= temp386_119 #x0000000000000000))
(assert (= temp386_120 #x0000000000000002))
(assert (= temp386_121 temp386_120))
(assert (= temp386_122 (select ARGNAME_stride_NAMEEND_VAL temp386_121)))
(assert (= temp386_123 #x0000000000000000))
(assert (= temp386_124 #x0000000000000003))
(assert (= temp386_125 temp386_124))
(assert (= temp386_126 (select ARGNAME_stride_NAMEEND_VAL temp386_125)))
(assert (= temp386_127 #x0000000000000000))
(assert (= temp386_128 #x0000000000000004))
(assert (= temp386_129 temp386_128))
(assert (= temp386_130 (select ARGNAME_stride_NAMEEND_VAL temp386_129)))
(assert (= temp386_131 #x0000000000000000))
(assert (= temp386_132 #x0000000000000005))
(assert (= temp386_133 temp386_132))
(assert (= temp386_134 (select ARGNAME_stride_NAMEEND_VAL temp386_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp386_114 temp386_111)
             (bvsle temp386_118 temp386_115)
             (bvsle temp386_122 temp386_119)
             (bvsle temp386_126 temp386_123)
             (bvsle temp386_130 temp386_127)
             (bvsle temp386_134 temp386_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_135 #x0000000000000000))
(assert (= var1191735 temp386_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_136 #x0000000000000001))
(assert (= var1191747 temp386_136))
(assert (= temp386_137 #x0000000000000000))
(assert (= var1179826 temp386_137))
(assert (= temp386_138 #x0000000000000000))
(assert (= temp386_139 temp386_138))
(assert (= temp386_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_139)))
(assert (= temp386_141 #x0000000000000001))
(assert (= temp386_142 temp386_141))
(assert (= temp386_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_142)))
(assert (= temp386_144 #x0000000000000002))
(assert (= temp386_145 temp386_144))
(assert (= temp386_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_145)))
(assert (= temp386_147 #x0000000000000003))
(assert (= temp386_148 temp386_147))
(assert (= temp386_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_148)))
(assert (= temp386_150 #x0000000000000004))
(assert (= temp386_151 temp386_150))
(assert (= temp386_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_151)))
(assert (= temp386_153 #x0000000000000005))
(assert (= temp386_154 temp386_153))
(assert (= temp386_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_154)))
(assert (= temp386_157 var1179826))
(assert (= temp386_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_157)))
(assert (= temp386_156 temp386_158))
(assert (= var1191780
   (ite (bvslt temp386_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_159 #x0000000000000000))
(assert (= var1191780 temp386_159))
(assert (= temp386_160 #x0000000000000000))
(assert (= var1179826 temp386_160))
(assert (= temp386_162 var1179826))
(assert (= temp386_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_162)))
(assert (= temp386_161 temp386_163))
(assert (= var1191802 (bvsmod temp386_161 ARGNAME_groups_NAMEEND)))
(assert (= temp386_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp386_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp386_165 #x0000000000000001))
(assert (= var1191803 temp386_165))
(assert (= temp386_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp386_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_167 #x0000000000000001))
(assert (= var1191823 temp386_167))
(assert (= temp386_168 #x0000000000000001))
(assert (= var1180714 temp386_168))
(assert (= temp386_169 #x0000000000000000))
(assert (= temp386_170 temp386_169))
(assert (= temp386_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp386_170)))
(assert (= temp386_172 #x0000000000000001))
(assert (= temp386_173 temp386_172))
(assert (= temp386_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp386_173)))
(assert (= temp386_175 #x0000000000000002))
(assert (= temp386_176 temp386_175))
(assert (= temp386_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp386_176)))
(assert (= temp386_178 #x0000000000000003))
(assert (= temp386_179 temp386_178))
(assert (= temp386_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp386_179)))
(assert (= temp386_181 #x0000000000000004))
(assert (= temp386_182 temp386_181))
(assert (= temp386_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp386_182)))
(assert (= temp386_184 #x0000000000000005))
(assert (= temp386_185 temp386_184))
(assert (= temp386_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp386_185)))
(assert (= temp386_187 #x0000000000000000))
(assert (= temp386_188
   (ite (bvslt var1180714 temp386_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp386_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp386_188)))
(assert (= var1191831 temp386_189))
(assert (bvslt (ite (bvslt var1180714 temp386_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp386_190 #x0000000000000001))
(assert (= var1180714 temp386_190))
(assert (= temp386_192 var1180714))
(assert (= temp386_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_192)))
(assert (= temp386_191 temp386_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp386_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp386_194 #x0000000000000001))
(assert (= var1191836 temp386_194))
(assert (= temp386_195 #x0000000000000000))
(assert (= var1179826 temp386_195))
(assert (= temp386_197 var1179826))
(assert (= temp386_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp386_197)))
(assert (= temp386_196 temp386_198))
(assert (= temp386_199 #x0000000000000002))
(assert (= var1586025 temp386_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp386_200 #x0000000000000001))
(assert (= var1191993 temp386_200))
(assert (= temp386_201 #x0000000000000001))
(assert (= var2700303 temp386_201))
(assert (= temp386_202 #x0000000000000001))
(assert (= var2962447 temp386_202))
(assert (= temp386_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp386_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_204 #x0000000000000001))
(assert (= var211058 temp386_204))
(assert (= temp386_205 #x0000000000000001))
(assert (= var211188 temp386_205))
(assert (= var3879401 var211188))
(assert (= temp386_206 #x0000000000000000))
(assert (= var3866802 temp386_206))
(assert (= temp386_207 #x0000000000000000))
(assert (= temp386_208
   (ite (bvslt var3866802 temp386_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp386_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp386_208)))
(assert (= var3879420 temp386_209))
(assert (bvslt (ite (bvslt var3866802 temp386_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp386_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp386_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp386_211 #x0000000000000001))
(assert (= var3879421 temp386_211))
(assert (= temp386_212 #x0000000000000000))
(assert (= var4079423 temp386_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp386_213 #x0000000000000002))
(assert (= var4208259 temp386_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_214 #x0000000000000000))
(assert (= var4273820 temp386_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5124496 var211201))
(assert (= var5386640 var211201))
(assert (= temp386_215 #x0000000000000000))
(assert (= var5714320 temp386_215))
(assert (= temp386_216 #x0000000000000001))
(assert (= var211058 temp386_216))
(model-add temp386_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp386_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp386_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp386_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




