(declare-fun temp10929_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10929_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10929_3 () (_ BitVec 64))
(declare-fun temp10929_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10929_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10929_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10929_7 () (_ BitVec 64))
(declare-fun temp10929_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10929_9 () (_ BitVec 64))
(declare-fun temp10929_10 () (_ BitVec 64))
(declare-fun temp10929_11 () (_ BitVec 64))
(declare-fun temp10929_12 () (_ BitVec 64))
(declare-fun temp10929_13 () (_ BitVec 64))
(declare-fun temp10929_14 () (_ BitVec 64))
(declare-fun temp10929_15 () (_ BitVec 64))
(declare-fun temp10929_16 () (_ BitVec 64))
(declare-fun temp10929_17 () (_ BitVec 64))
(declare-fun temp10929_18 () (_ BitVec 64))
(declare-fun temp10929_19 () (_ BitVec 64))
(declare-fun temp10929_20 () (_ BitVec 64))
(declare-fun temp10929_21 () (_ BitVec 64))
(declare-fun temp10929_22 () (_ BitVec 64))
(declare-fun temp10929_23 () (_ BitVec 64))
(declare-fun temp10929_24 () (_ BitVec 64))
(declare-fun temp10929_25 () (_ BitVec 64))
(declare-fun temp10929_26 () (_ BitVec 64))
(declare-fun temp10929_27 () (_ BitVec 64))
(declare-fun temp10929_28 () (_ BitVec 64))
(declare-fun temp10929_29 () (_ BitVec 64))
(declare-fun temp10929_30 () (_ BitVec 64))
(declare-fun temp10929_31 () (_ BitVec 64))
(declare-fun temp10929_32 () (_ BitVec 64))
(declare-fun temp10929_33 () (_ BitVec 64))
(declare-fun temp10929_34 () (_ BitVec 64))
(declare-fun temp10929_35 () (_ BitVec 64))
(declare-fun temp10929_36 () (_ BitVec 64))
(declare-fun temp10929_37 () (_ BitVec 64))
(declare-fun temp10929_38 () (_ BitVec 64))
(declare-fun temp10929_39 () (_ BitVec 64))
(declare-fun temp10929_40 () (_ BitVec 64))
(declare-fun temp10929_41 () (_ BitVec 64))
(declare-fun temp10929_42 () (_ BitVec 64))
(declare-fun temp10929_43 () (_ BitVec 64))
(declare-fun temp10929_44 () (_ BitVec 64))
(declare-fun temp10929_45 () (_ BitVec 64))
(declare-fun temp10929_46 () (_ BitVec 64))
(declare-fun temp10929_47 () (_ BitVec 64))
(declare-fun temp10929_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10929_49 () (_ BitVec 64))
(declare-fun temp10929_50 () (_ BitVec 64))
(declare-fun temp10929_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10929_52 () (_ BitVec 64))
(declare-fun temp10929_53 () (_ BitVec 64))
(declare-fun temp10929_54 () (_ BitVec 64))
(declare-fun temp10929_55 () (_ BitVec 64))
(declare-fun temp10929_56 () (_ BitVec 64))
(declare-fun temp10929_57 () (_ BitVec 64))
(declare-fun temp10929_58 () (_ BitVec 64))
(declare-fun temp10929_59 () (_ BitVec 64))
(declare-fun temp10929_60 () (_ BitVec 64))
(declare-fun temp10929_61 () (_ BitVec 64))
(declare-fun temp10929_62 () (_ BitVec 64))
(declare-fun temp10929_63 () (_ BitVec 64))
(declare-fun temp10929_64 () (_ BitVec 64))
(declare-fun temp10929_65 () (_ BitVec 64))
(declare-fun temp10929_66 () (_ BitVec 64))
(declare-fun temp10929_67 () (_ BitVec 64))
(declare-fun temp10929_68 () (_ BitVec 64))
(declare-fun temp10929_69 () (_ BitVec 64))
(declare-fun temp10929_70 () (_ BitVec 64))
(declare-fun temp10929_71 () (_ BitVec 64))
(declare-fun temp10929_72 () (_ BitVec 64))
(declare-fun temp10929_73 () (_ BitVec 64))
(declare-fun temp10929_74 () (_ BitVec 64))
(declare-fun temp10929_75 () (_ BitVec 64))
(declare-fun temp10929_76 () (_ BitVec 64))
(declare-fun temp10929_77 () (_ BitVec 64))
(declare-fun temp10929_78 () (_ BitVec 64))
(declare-fun temp10929_79 () (_ BitVec 64))
(declare-fun temp10929_80 () (_ BitVec 64))
(declare-fun temp10929_81 () (_ BitVec 64))
(declare-fun temp10929_82 () (_ BitVec 64))
(declare-fun temp10929_83 () (_ BitVec 64))
(declare-fun temp10929_84 () (_ BitVec 64))
(declare-fun temp10929_85 () (_ BitVec 64))
(declare-fun temp10929_86 () (_ BitVec 64))
(declare-fun temp10929_87 () (_ BitVec 64))
(declare-fun temp10929_88 () (_ BitVec 64))
(declare-fun temp10929_89 () (_ BitVec 64))
(declare-fun temp10929_90 () (_ BitVec 64))
(declare-fun temp10929_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10929_92 () (_ BitVec 64))
(declare-fun temp10929_93 () (_ BitVec 64))
(declare-fun temp10929_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10929_95 () (_ BitVec 64))
(declare-fun temp10929_96 () (_ BitVec 64))
(declare-fun temp10929_97 () (_ BitVec 64))
(declare-fun temp10929_98 () (_ BitVec 64))
(declare-fun temp10929_99 () (_ BitVec 64))
(declare-fun temp10929_100 () (_ BitVec 64))
(declare-fun temp10929_101 () (_ BitVec 64))
(declare-fun temp10929_102 () (_ BitVec 64))
(declare-fun temp10929_103 () (_ BitVec 64))
(declare-fun temp10929_104 () (_ BitVec 64))
(declare-fun temp10929_105 () (_ BitVec 64))
(declare-fun temp10929_106 () (_ BitVec 64))
(declare-fun temp10929_107 () (_ BitVec 64))
(declare-fun temp10929_108 () (_ BitVec 64))
(declare-fun temp10929_109 () (_ BitVec 64))
(declare-fun temp10929_110 () (_ BitVec 64))
(declare-fun temp10929_111 () (_ BitVec 64))
(declare-fun temp10929_112 () (_ BitVec 64))
(declare-fun temp10929_113 () (_ BitVec 64))
(declare-fun temp10929_114 () (_ BitVec 64))
(declare-fun temp10929_115 () (_ BitVec 64))
(declare-fun temp10929_116 () (_ BitVec 64))
(declare-fun temp10929_117 () (_ BitVec 64))
(declare-fun temp10929_118 () (_ BitVec 64))
(declare-fun temp10929_119 () (_ BitVec 64))
(declare-fun temp10929_120 () (_ BitVec 64))
(declare-fun temp10929_121 () (_ BitVec 64))
(declare-fun temp10929_122 () (_ BitVec 64))
(declare-fun temp10929_123 () (_ BitVec 64))
(declare-fun temp10929_124 () (_ BitVec 64))
(declare-fun temp10929_125 () (_ BitVec 64))
(declare-fun temp10929_126 () (_ BitVec 64))
(declare-fun temp10929_127 () (_ BitVec 64))
(declare-fun temp10929_128 () (_ BitVec 64))
(declare-fun temp10929_129 () (_ BitVec 64))
(declare-fun temp10929_130 () (_ BitVec 64))
(declare-fun temp10929_131 () (_ BitVec 64))
(declare-fun temp10929_132 () (_ BitVec 64))
(declare-fun temp10929_133 () (_ BitVec 64))
(declare-fun temp10929_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10929_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10929_136 () (_ BitVec 64))
(declare-fun temp10929_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10929_138 () (_ BitVec 64))
(declare-fun temp10929_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10929_140 () (_ BitVec 64))
(declare-fun temp10929_141 () (_ BitVec 64))
(declare-fun temp10929_142 () (_ BitVec 64))
(declare-fun temp10929_143 () (_ BitVec 64))
(declare-fun temp10929_144 () (_ BitVec 64))
(declare-fun temp10929_145 () (_ BitVec 64))
(declare-fun temp10929_146 () (_ BitVec 64))
(declare-fun temp10929_147 () (_ BitVec 64))
(declare-fun temp10929_148 () (_ BitVec 64))
(declare-fun temp10929_149 () (_ BitVec 64))
(declare-fun temp10929_150 () (_ BitVec 64))
(declare-fun temp10929_151 () (_ BitVec 64))
(declare-fun temp10929_152 () (_ BitVec 64))
(declare-fun temp10929_153 () (_ BitVec 64))
(declare-fun temp10929_154 () (_ BitVec 64))
(declare-fun temp10929_155 () (_ BitVec 64))
(declare-fun temp10929_157 () (_ BitVec 64))
(declare-fun temp10929_158 () (_ BitVec 64))
(declare-fun temp10929_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10929_159 () (_ BitVec 64))
(declare-fun temp10929_160 () (_ BitVec 64))
(declare-fun temp10929_162 () (_ BitVec 64))
(declare-fun temp10929_163 () (_ BitVec 64))
(declare-fun temp10929_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10929_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10929_165 () (_ BitVec 64))
(declare-fun temp10929_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10929_167 () (_ BitVec 64))
(declare-fun temp10929_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10929_169 () (_ BitVec 64))
(declare-fun temp10929_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10929_171 () (_ BitVec 64))
(declare-fun temp10929_172 () (_ BitVec 64))
(declare-fun temp10929_173 () (_ BitVec 64))
(declare-fun temp10929_174 () (_ BitVec 64))
(declare-fun temp10929_175 () (_ BitVec 64))
(declare-fun temp10929_176 () (_ BitVec 64))
(declare-fun temp10929_177 () (_ BitVec 64))
(declare-fun temp10929_178 () (_ BitVec 64))
(declare-fun temp10929_179 () (_ BitVec 64))
(declare-fun temp10929_180 () (_ BitVec 64))
(declare-fun temp10929_181 () (_ BitVec 64))
(declare-fun temp10929_182 () (_ BitVec 64))
(declare-fun temp10929_183 () (_ BitVec 64))
(declare-fun temp10929_184 () (_ BitVec 64))
(declare-fun temp10929_185 () (_ BitVec 64))
(declare-fun temp10929_186 () (_ BitVec 64))
(declare-fun temp10929_187 () (_ BitVec 64))
(declare-fun temp10929_188 () (_ BitVec 64))
(declare-fun temp10929_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10929_190 () (_ BitVec 64))
(declare-fun temp10929_192 () (_ BitVec 64))
(declare-fun temp10929_193 () (_ BitVec 64))
(declare-fun temp10929_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10929_194 () (_ BitVec 64))
(declare-fun temp10929_195 () (_ BitVec 64))
(declare-fun temp10929_197 () (_ BitVec 64))
(declare-fun temp10929_198 () (_ BitVec 64))
(declare-fun temp10929_196 () (_ BitVec 64))
(declare-fun temp10929_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10929_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10929_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10929_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10929_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10929_204 () (_ BitVec 64))
(declare-fun temp10929_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10929_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10929_207 () (_ BitVec 64))
(declare-fun temp10929_208 () (_ BitVec 64))
(declare-fun temp10929_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10929_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10929_211 () (_ BitVec 64))
(declare-fun temp10929_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10929_213 () (_ BitVec 64))
(declare-fun temp10929_214 () (_ BitVec 64))
(declare-fun temp10929_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10929_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10929_217 () (_ BitVec 64))
(declare-fun temp10929_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10929_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10929_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5255568 () (_ BitVec 64))
(declare-fun var5517712 () (_ BitVec 64))
(declare-fun temp10929_221 () (_ BitVec 64))
(assert (= temp10929_1 #x0000000000000001))
(assert (= var77203 temp10929_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10929_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10929_2)))
(assert (= temp10929_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10929_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10929_4 #x0000000000000000))
(assert (= var210941 temp10929_4))
(assert (= temp10929_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10929_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10929_6 #x0000000000000000))
(assert (= var210986 temp10929_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10929_7 #x0000000000000000))
(assert (= temp10929_8 temp10929_7))
(assert (= temp10929_9 (select ARGNAME_padding_NAMEEND_VAL temp10929_8)))
(assert (= temp10929_10 #x0000000000000001))
(assert (= temp10929_11 temp10929_10))
(assert (= temp10929_12 (select ARGNAME_padding_NAMEEND_VAL temp10929_11)))
(assert (= temp10929_13 #x0000000000000002))
(assert (= temp10929_14 temp10929_13))
(assert (= temp10929_15 (select ARGNAME_padding_NAMEEND_VAL temp10929_14)))
(assert (= temp10929_16 #x0000000000000003))
(assert (= temp10929_17 temp10929_16))
(assert (= temp10929_18 (select ARGNAME_padding_NAMEEND_VAL temp10929_17)))
(assert (= temp10929_19 #x0000000000000004))
(assert (= temp10929_20 temp10929_19))
(assert (= temp10929_21 (select ARGNAME_padding_NAMEEND_VAL temp10929_20)))
(assert (= temp10929_22 #x0000000000000005))
(assert (= temp10929_23 temp10929_22))
(assert (= temp10929_24 (select ARGNAME_padding_NAMEEND_VAL temp10929_23)))
(assert (= temp10929_25 #x0000000000000000))
(assert (= temp10929_26 #x0000000000000000))
(assert (= temp10929_27 temp10929_26))
(assert (= temp10929_28 (select ARGNAME_padding_NAMEEND_VAL temp10929_27)))
(assert (= temp10929_29 #x0000000000000000))
(assert (= temp10929_30 #x0000000000000001))
(assert (= temp10929_31 temp10929_30))
(assert (= temp10929_32 (select ARGNAME_padding_NAMEEND_VAL temp10929_31)))
(assert (= temp10929_33 #x0000000000000000))
(assert (= temp10929_34 #x0000000000000002))
(assert (= temp10929_35 temp10929_34))
(assert (= temp10929_36 (select ARGNAME_padding_NAMEEND_VAL temp10929_35)))
(assert (= temp10929_37 #x0000000000000000))
(assert (= temp10929_38 #x0000000000000003))
(assert (= temp10929_39 temp10929_38))
(assert (= temp10929_40 (select ARGNAME_padding_NAMEEND_VAL temp10929_39)))
(assert (= temp10929_41 #x0000000000000000))
(assert (= temp10929_42 #x0000000000000004))
(assert (= temp10929_43 temp10929_42))
(assert (= temp10929_44 (select ARGNAME_padding_NAMEEND_VAL temp10929_43)))
(assert (= temp10929_45 #x0000000000000000))
(assert (= temp10929_46 #x0000000000000005))
(assert (= temp10929_47 temp10929_46))
(assert (= temp10929_48 (select ARGNAME_padding_NAMEEND_VAL temp10929_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10929_28 temp10929_25)
             (bvslt temp10929_32 temp10929_29)
             (bvslt temp10929_36 temp10929_33)
             (bvslt temp10929_40 temp10929_37)
             (bvslt temp10929_44 temp10929_41)
             (bvslt temp10929_48 temp10929_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10929_49 #x0000000000000000))
(assert (= var1191714 temp10929_49))
(assert (= temp10929_50 #x0000000000000000))
(assert (= temp10929_51 temp10929_50))
(assert (= temp10929_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10929_51)))
(assert (= temp10929_53 #x0000000000000001))
(assert (= temp10929_54 temp10929_53))
(assert (= temp10929_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10929_54)))
(assert (= temp10929_56 #x0000000000000002))
(assert (= temp10929_57 temp10929_56))
(assert (= temp10929_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10929_57)))
(assert (= temp10929_59 #x0000000000000003))
(assert (= temp10929_60 temp10929_59))
(assert (= temp10929_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10929_60)))
(assert (= temp10929_62 #x0000000000000004))
(assert (= temp10929_63 temp10929_62))
(assert (= temp10929_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10929_63)))
(assert (= temp10929_65 #x0000000000000005))
(assert (= temp10929_66 temp10929_65))
(assert (= temp10929_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10929_66)))
(assert (= temp10929_68 #x0000000000000000))
(assert (= temp10929_69 #x0000000000000000))
(assert (= temp10929_70 temp10929_69))
(assert (= temp10929_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10929_70)))
(assert (= temp10929_72 #x0000000000000000))
(assert (= temp10929_73 #x0000000000000001))
(assert (= temp10929_74 temp10929_73))
(assert (= temp10929_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10929_74)))
(assert (= temp10929_76 #x0000000000000000))
(assert (= temp10929_77 #x0000000000000002))
(assert (= temp10929_78 temp10929_77))
(assert (= temp10929_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10929_78)))
(assert (= temp10929_80 #x0000000000000000))
(assert (= temp10929_81 #x0000000000000003))
(assert (= temp10929_82 temp10929_81))
(assert (= temp10929_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10929_82)))
(assert (= temp10929_84 #x0000000000000000))
(assert (= temp10929_85 #x0000000000000004))
(assert (= temp10929_86 temp10929_85))
(assert (= temp10929_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10929_86)))
(assert (= temp10929_88 #x0000000000000000))
(assert (= temp10929_89 #x0000000000000005))
(assert (= temp10929_90 temp10929_89))
(assert (= temp10929_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10929_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10929_71 temp10929_68)
             (bvslt temp10929_75 temp10929_72)
             (bvslt temp10929_79 temp10929_76)
             (bvslt temp10929_83 temp10929_80)
             (bvslt temp10929_87 temp10929_84)
             (bvslt temp10929_91 temp10929_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10929_92 #x0000000000000000))
(assert (= var1191725 temp10929_92))
(assert (= temp10929_93 #x0000000000000000))
(assert (= temp10929_94 temp10929_93))
(assert (= temp10929_95 (select ARGNAME_stride_NAMEEND_VAL temp10929_94)))
(assert (= temp10929_96 #x0000000000000001))
(assert (= temp10929_97 temp10929_96))
(assert (= temp10929_98 (select ARGNAME_stride_NAMEEND_VAL temp10929_97)))
(assert (= temp10929_99 #x0000000000000002))
(assert (= temp10929_100 temp10929_99))
(assert (= temp10929_101 (select ARGNAME_stride_NAMEEND_VAL temp10929_100)))
(assert (= temp10929_102 #x0000000000000003))
(assert (= temp10929_103 temp10929_102))
(assert (= temp10929_104 (select ARGNAME_stride_NAMEEND_VAL temp10929_103)))
(assert (= temp10929_105 #x0000000000000004))
(assert (= temp10929_106 temp10929_105))
(assert (= temp10929_107 (select ARGNAME_stride_NAMEEND_VAL temp10929_106)))
(assert (= temp10929_108 #x0000000000000005))
(assert (= temp10929_109 temp10929_108))
(assert (= temp10929_110 (select ARGNAME_stride_NAMEEND_VAL temp10929_109)))
(assert (= temp10929_111 #x0000000000000000))
(assert (= temp10929_112 #x0000000000000000))
(assert (= temp10929_113 temp10929_112))
(assert (= temp10929_114 (select ARGNAME_stride_NAMEEND_VAL temp10929_113)))
(assert (= temp10929_115 #x0000000000000000))
(assert (= temp10929_116 #x0000000000000001))
(assert (= temp10929_117 temp10929_116))
(assert (= temp10929_118 (select ARGNAME_stride_NAMEEND_VAL temp10929_117)))
(assert (= temp10929_119 #x0000000000000000))
(assert (= temp10929_120 #x0000000000000002))
(assert (= temp10929_121 temp10929_120))
(assert (= temp10929_122 (select ARGNAME_stride_NAMEEND_VAL temp10929_121)))
(assert (= temp10929_123 #x0000000000000000))
(assert (= temp10929_124 #x0000000000000003))
(assert (= temp10929_125 temp10929_124))
(assert (= temp10929_126 (select ARGNAME_stride_NAMEEND_VAL temp10929_125)))
(assert (= temp10929_127 #x0000000000000000))
(assert (= temp10929_128 #x0000000000000004))
(assert (= temp10929_129 temp10929_128))
(assert (= temp10929_130 (select ARGNAME_stride_NAMEEND_VAL temp10929_129)))
(assert (= temp10929_131 #x0000000000000000))
(assert (= temp10929_132 #x0000000000000005))
(assert (= temp10929_133 temp10929_132))
(assert (= temp10929_134 (select ARGNAME_stride_NAMEEND_VAL temp10929_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10929_114 temp10929_111)
             (bvsle temp10929_118 temp10929_115)
             (bvsle temp10929_122 temp10929_119)
             (bvsle temp10929_126 temp10929_123)
             (bvsle temp10929_130 temp10929_127)
             (bvsle temp10929_134 temp10929_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10929_135 #x0000000000000000))
(assert (= var1191735 temp10929_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10929_136 #x0000000000000001))
(assert (= var1191747 temp10929_136))
(assert (= temp10929_137 #x0000000000000000))
(assert (= var1179826 temp10929_137))
(assert (= temp10929_138 #x0000000000000000))
(assert (= temp10929_139 temp10929_138))
(assert (= temp10929_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10929_139)))
(assert (= temp10929_141 #x0000000000000001))
(assert (= temp10929_142 temp10929_141))
(assert (= temp10929_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10929_142)))
(assert (= temp10929_144 #x0000000000000002))
(assert (= temp10929_145 temp10929_144))
(assert (= temp10929_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10929_145)))
(assert (= temp10929_147 #x0000000000000003))
(assert (= temp10929_148 temp10929_147))
(assert (= temp10929_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10929_148)))
(assert (= temp10929_150 #x0000000000000004))
(assert (= temp10929_151 temp10929_150))
(assert (= temp10929_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10929_151)))
(assert (= temp10929_153 #x0000000000000005))
(assert (= temp10929_154 temp10929_153))
(assert (= temp10929_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10929_154)))
(assert (= temp10929_157 var1179826))
(assert (= temp10929_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10929_157)))
(assert (= temp10929_156 temp10929_158))
(assert (= var1191780
   (ite (bvslt temp10929_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10929_159 #x0000000000000000))
(assert (= var1191780 temp10929_159))
(assert (= temp10929_160 #x0000000000000000))
(assert (= var1179826 temp10929_160))
(assert (= temp10929_162 var1179826))
(assert (= temp10929_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10929_162)))
(assert (= temp10929_161 temp10929_163))
(assert (= var1191802 (bvsmod temp10929_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10929_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10929_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10929_165 #x0000000000000001))
(assert (= var1191803 temp10929_165))
(assert (= temp10929_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10929_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10929_167 #x0000000000000001))
(assert (= var1191823 temp10929_167))
(assert (= temp10929_168 #x0000000000000001))
(assert (= var1180714 temp10929_168))
(assert (= temp10929_169 #x0000000000000000))
(assert (= temp10929_170 temp10929_169))
(assert (= temp10929_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10929_170)))
(assert (= temp10929_172 #x0000000000000001))
(assert (= temp10929_173 temp10929_172))
(assert (= temp10929_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10929_173)))
(assert (= temp10929_175 #x0000000000000002))
(assert (= temp10929_176 temp10929_175))
(assert (= temp10929_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10929_176)))
(assert (= temp10929_178 #x0000000000000003))
(assert (= temp10929_179 temp10929_178))
(assert (= temp10929_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10929_179)))
(assert (= temp10929_181 #x0000000000000004))
(assert (= temp10929_182 temp10929_181))
(assert (= temp10929_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10929_182)))
(assert (= temp10929_184 #x0000000000000005))
(assert (= temp10929_185 temp10929_184))
(assert (= temp10929_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10929_185)))
(assert (= temp10929_187 #x0000000000000000))
(assert (= temp10929_188
   (ite (bvslt var1180714 temp10929_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10929_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10929_188)))
(assert (= var1191831 temp10929_189))
(assert (bvslt (ite (bvslt var1180714 temp10929_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10929_190 #x0000000000000001))
(assert (= var1180714 temp10929_190))
(assert (= temp10929_192 var1180714))
(assert (= temp10929_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10929_192)))
(assert (= temp10929_191 temp10929_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10929_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10929_194 #x0000000000000001))
(assert (= var1191836 temp10929_194))
(assert (= temp10929_195 #x0000000000000000))
(assert (= var1179826 temp10929_195))
(assert (= temp10929_197 var1179826))
(assert (= temp10929_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10929_197)))
(assert (= temp10929_196 temp10929_198))
(assert (= temp10929_199 #x0000000000000002))
(assert (= var1586025 temp10929_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10929_200 #x0000000000000001))
(assert (= var1191993 temp10929_200))
(assert (= temp10929_201 #x0000000000000001))
(assert (= var2700303 temp10929_201))
(assert (= temp10929_202 #x0000000000000001))
(assert (= var2962447 temp10929_202))
(assert (= temp10929_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10929_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10929_204 #x0000000000000001))
(assert (= var211058 temp10929_204))
(assert (= temp10929_205 #x0000000000000001))
(assert (= var211188 temp10929_205))
(assert (= var3879401 var211188))
(assert (= temp10929_206 #x0000000000000000))
(assert (= var3866802 temp10929_206))
(assert (= temp10929_207 #x0000000000000000))
(assert (= temp10929_208
   (ite (bvslt var3866802 temp10929_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10929_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10929_208)))
(assert (= var3879420 temp10929_209))
(assert (bvslt (ite (bvslt var3866802 temp10929_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10929_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10929_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10929_211 #x0000000000000000))
(assert (= var3879421 temp10929_211))
(assert (= temp10929_212 #x0000000000000001))
(assert (= var3867690 temp10929_212))
(assert (= temp10929_213 #x0000000000000000))
(assert (= temp10929_214
   (ite (bvslt var3867690 temp10929_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10929_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10929_214)))
(assert (= var3879423 temp10929_215))
(assert (bvslt (ite (bvslt var3867690 temp10929_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10929_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10929_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10929_217 #x0000000000000001))
(assert (= var3879424 temp10929_217))
(assert (= temp10929_218 #x0000000000000000))
(assert (= var4133117 temp10929_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10929_219 #x0000000000000002))
(assert (= var4339331 temp10929_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10929_220 #x0000000000000000))
(assert (= var4404892 temp10929_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5255568 var211201))
(assert (= var5517712 var211201))
(assert (= temp10929_221 #x0000000000000001))
(assert (= var211058 temp10929_221))
(model-add temp10929_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10929_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10929_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10929_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




