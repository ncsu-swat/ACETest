(declare-fun temp1286_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1286_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1286_3 () (_ BitVec 64))
(declare-fun temp1286_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1286_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1286_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1286_7 () (_ BitVec 64))
(declare-fun temp1286_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1286_9 () (_ BitVec 64))
(declare-fun temp1286_10 () (_ BitVec 64))
(declare-fun temp1286_11 () (_ BitVec 64))
(declare-fun temp1286_12 () (_ BitVec 64))
(declare-fun temp1286_13 () (_ BitVec 64))
(declare-fun temp1286_14 () (_ BitVec 64))
(declare-fun temp1286_15 () (_ BitVec 64))
(declare-fun temp1286_16 () (_ BitVec 64))
(declare-fun temp1286_17 () (_ BitVec 64))
(declare-fun temp1286_18 () (_ BitVec 64))
(declare-fun temp1286_19 () (_ BitVec 64))
(declare-fun temp1286_20 () (_ BitVec 64))
(declare-fun temp1286_21 () (_ BitVec 64))
(declare-fun temp1286_22 () (_ BitVec 64))
(declare-fun temp1286_23 () (_ BitVec 64))
(declare-fun temp1286_24 () (_ BitVec 64))
(declare-fun temp1286_25 () (_ BitVec 64))
(declare-fun temp1286_26 () (_ BitVec 64))
(declare-fun temp1286_27 () (_ BitVec 64))
(declare-fun temp1286_28 () (_ BitVec 64))
(declare-fun temp1286_29 () (_ BitVec 64))
(declare-fun temp1286_30 () (_ BitVec 64))
(declare-fun temp1286_31 () (_ BitVec 64))
(declare-fun temp1286_32 () (_ BitVec 64))
(declare-fun temp1286_33 () (_ BitVec 64))
(declare-fun temp1286_34 () (_ BitVec 64))
(declare-fun temp1286_35 () (_ BitVec 64))
(declare-fun temp1286_36 () (_ BitVec 64))
(declare-fun temp1286_37 () (_ BitVec 64))
(declare-fun temp1286_38 () (_ BitVec 64))
(declare-fun temp1286_39 () (_ BitVec 64))
(declare-fun temp1286_40 () (_ BitVec 64))
(declare-fun temp1286_41 () (_ BitVec 64))
(declare-fun temp1286_42 () (_ BitVec 64))
(declare-fun temp1286_43 () (_ BitVec 64))
(declare-fun temp1286_44 () (_ BitVec 64))
(declare-fun temp1286_45 () (_ BitVec 64))
(declare-fun temp1286_46 () (_ BitVec 64))
(declare-fun temp1286_47 () (_ BitVec 64))
(declare-fun temp1286_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1286_49 () (_ BitVec 64))
(declare-fun temp1286_50 () (_ BitVec 64))
(declare-fun temp1286_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1286_52 () (_ BitVec 64))
(declare-fun temp1286_53 () (_ BitVec 64))
(declare-fun temp1286_54 () (_ BitVec 64))
(declare-fun temp1286_55 () (_ BitVec 64))
(declare-fun temp1286_56 () (_ BitVec 64))
(declare-fun temp1286_57 () (_ BitVec 64))
(declare-fun temp1286_58 () (_ BitVec 64))
(declare-fun temp1286_59 () (_ BitVec 64))
(declare-fun temp1286_60 () (_ BitVec 64))
(declare-fun temp1286_61 () (_ BitVec 64))
(declare-fun temp1286_62 () (_ BitVec 64))
(declare-fun temp1286_63 () (_ BitVec 64))
(declare-fun temp1286_64 () (_ BitVec 64))
(declare-fun temp1286_65 () (_ BitVec 64))
(declare-fun temp1286_66 () (_ BitVec 64))
(declare-fun temp1286_67 () (_ BitVec 64))
(declare-fun temp1286_68 () (_ BitVec 64))
(declare-fun temp1286_69 () (_ BitVec 64))
(declare-fun temp1286_70 () (_ BitVec 64))
(declare-fun temp1286_71 () (_ BitVec 64))
(declare-fun temp1286_72 () (_ BitVec 64))
(declare-fun temp1286_73 () (_ BitVec 64))
(declare-fun temp1286_74 () (_ BitVec 64))
(declare-fun temp1286_75 () (_ BitVec 64))
(declare-fun temp1286_76 () (_ BitVec 64))
(declare-fun temp1286_77 () (_ BitVec 64))
(declare-fun temp1286_78 () (_ BitVec 64))
(declare-fun temp1286_79 () (_ BitVec 64))
(declare-fun temp1286_80 () (_ BitVec 64))
(declare-fun temp1286_81 () (_ BitVec 64))
(declare-fun temp1286_82 () (_ BitVec 64))
(declare-fun temp1286_83 () (_ BitVec 64))
(declare-fun temp1286_84 () (_ BitVec 64))
(declare-fun temp1286_85 () (_ BitVec 64))
(declare-fun temp1286_86 () (_ BitVec 64))
(declare-fun temp1286_87 () (_ BitVec 64))
(declare-fun temp1286_88 () (_ BitVec 64))
(declare-fun temp1286_89 () (_ BitVec 64))
(declare-fun temp1286_90 () (_ BitVec 64))
(declare-fun temp1286_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1286_92 () (_ BitVec 64))
(declare-fun temp1286_93 () (_ BitVec 64))
(declare-fun temp1286_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1286_95 () (_ BitVec 64))
(declare-fun temp1286_96 () (_ BitVec 64))
(declare-fun temp1286_97 () (_ BitVec 64))
(declare-fun temp1286_98 () (_ BitVec 64))
(declare-fun temp1286_99 () (_ BitVec 64))
(declare-fun temp1286_100 () (_ BitVec 64))
(declare-fun temp1286_101 () (_ BitVec 64))
(declare-fun temp1286_102 () (_ BitVec 64))
(declare-fun temp1286_103 () (_ BitVec 64))
(declare-fun temp1286_104 () (_ BitVec 64))
(declare-fun temp1286_105 () (_ BitVec 64))
(declare-fun temp1286_106 () (_ BitVec 64))
(declare-fun temp1286_107 () (_ BitVec 64))
(declare-fun temp1286_108 () (_ BitVec 64))
(declare-fun temp1286_109 () (_ BitVec 64))
(declare-fun temp1286_110 () (_ BitVec 64))
(declare-fun temp1286_111 () (_ BitVec 64))
(declare-fun temp1286_112 () (_ BitVec 64))
(declare-fun temp1286_113 () (_ BitVec 64))
(declare-fun temp1286_114 () (_ BitVec 64))
(declare-fun temp1286_115 () (_ BitVec 64))
(declare-fun temp1286_116 () (_ BitVec 64))
(declare-fun temp1286_117 () (_ BitVec 64))
(declare-fun temp1286_118 () (_ BitVec 64))
(declare-fun temp1286_119 () (_ BitVec 64))
(declare-fun temp1286_120 () (_ BitVec 64))
(declare-fun temp1286_121 () (_ BitVec 64))
(declare-fun temp1286_122 () (_ BitVec 64))
(declare-fun temp1286_123 () (_ BitVec 64))
(declare-fun temp1286_124 () (_ BitVec 64))
(declare-fun temp1286_125 () (_ BitVec 64))
(declare-fun temp1286_126 () (_ BitVec 64))
(declare-fun temp1286_127 () (_ BitVec 64))
(declare-fun temp1286_128 () (_ BitVec 64))
(declare-fun temp1286_129 () (_ BitVec 64))
(declare-fun temp1286_130 () (_ BitVec 64))
(declare-fun temp1286_131 () (_ BitVec 64))
(declare-fun temp1286_132 () (_ BitVec 64))
(declare-fun temp1286_133 () (_ BitVec 64))
(declare-fun temp1286_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1286_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1286_136 () (_ BitVec 64))
(declare-fun temp1286_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1286_138 () (_ BitVec 64))
(declare-fun temp1286_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1286_140 () (_ BitVec 64))
(declare-fun temp1286_141 () (_ BitVec 64))
(declare-fun temp1286_142 () (_ BitVec 64))
(declare-fun temp1286_143 () (_ BitVec 64))
(declare-fun temp1286_144 () (_ BitVec 64))
(declare-fun temp1286_145 () (_ BitVec 64))
(declare-fun temp1286_146 () (_ BitVec 64))
(declare-fun temp1286_147 () (_ BitVec 64))
(declare-fun temp1286_148 () (_ BitVec 64))
(declare-fun temp1286_149 () (_ BitVec 64))
(declare-fun temp1286_150 () (_ BitVec 64))
(declare-fun temp1286_151 () (_ BitVec 64))
(declare-fun temp1286_152 () (_ BitVec 64))
(declare-fun temp1286_153 () (_ BitVec 64))
(declare-fun temp1286_154 () (_ BitVec 64))
(declare-fun temp1286_155 () (_ BitVec 64))
(declare-fun temp1286_157 () (_ BitVec 64))
(declare-fun temp1286_158 () (_ BitVec 64))
(declare-fun temp1286_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1286_159 () (_ BitVec 64))
(declare-fun temp1286_160 () (_ BitVec 64))
(declare-fun temp1286_162 () (_ BitVec 64))
(declare-fun temp1286_163 () (_ BitVec 64))
(declare-fun temp1286_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1286_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1286_165 () (_ BitVec 64))
(declare-fun temp1286_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1286_167 () (_ BitVec 64))
(declare-fun temp1286_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1286_169 () (_ BitVec 64))
(declare-fun temp1286_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1286_171 () (_ BitVec 64))
(declare-fun temp1286_172 () (_ BitVec 64))
(declare-fun temp1286_173 () (_ BitVec 64))
(declare-fun temp1286_174 () (_ BitVec 64))
(declare-fun temp1286_175 () (_ BitVec 64))
(declare-fun temp1286_176 () (_ BitVec 64))
(declare-fun temp1286_177 () (_ BitVec 64))
(declare-fun temp1286_178 () (_ BitVec 64))
(declare-fun temp1286_179 () (_ BitVec 64))
(declare-fun temp1286_180 () (_ BitVec 64))
(declare-fun temp1286_181 () (_ BitVec 64))
(declare-fun temp1286_182 () (_ BitVec 64))
(declare-fun temp1286_183 () (_ BitVec 64))
(declare-fun temp1286_184 () (_ BitVec 64))
(declare-fun temp1286_185 () (_ BitVec 64))
(declare-fun temp1286_186 () (_ BitVec 64))
(declare-fun temp1286_187 () (_ BitVec 64))
(declare-fun temp1286_188 () (_ BitVec 64))
(declare-fun temp1286_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1286_190 () (_ BitVec 64))
(declare-fun temp1286_192 () (_ BitVec 64))
(declare-fun temp1286_193 () (_ BitVec 64))
(declare-fun temp1286_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1286_194 () (_ BitVec 64))
(declare-fun temp1286_195 () (_ BitVec 64))
(declare-fun temp1286_197 () (_ BitVec 64))
(declare-fun temp1286_198 () (_ BitVec 64))
(declare-fun temp1286_196 () (_ BitVec 64))
(declare-fun temp1286_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1286_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1286_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1286_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1286_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1286_204 () (_ BitVec 64))
(declare-fun temp1286_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1286_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1286_207 () (_ BitVec 64))
(declare-fun temp1286_208 () (_ BitVec 64))
(declare-fun temp1286_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1286_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1286_211 () (_ BitVec 64))
(declare-fun temp1286_212 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1286_213 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp1286_214 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp1286_216 () (_ BitVec 64))
(declare-fun temp1286_215 () (_ BitVec 64))
(declare-fun temp1286_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp1286_218 () (_ BitVec 64))
(declare-fun temp1286_219 () (_ BitVec 64))
(declare-fun temp1286_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp1286_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp1286_222 () (_ BitVec 64))
(declare-fun temp1286_224 () (_ BitVec 64))
(declare-fun temp1286_223 () (_ BitVec 64))
(declare-fun temp1286_225 () (_ BitVec 64))
(assert (= temp1286_1 #x0000000000000001))
(assert (= var77203 temp1286_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1286_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1286_2)))
(assert (= temp1286_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1286_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1286_4 #x0000000000000000))
(assert (= var210941 temp1286_4))
(assert (= temp1286_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1286_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1286_6 #x0000000000000000))
(assert (= var210986 temp1286_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1286_7 #x0000000000000000))
(assert (= temp1286_8 temp1286_7))
(assert (= temp1286_9 (select ARGNAME_padding_NAMEEND_VAL temp1286_8)))
(assert (= temp1286_10 #x0000000000000001))
(assert (= temp1286_11 temp1286_10))
(assert (= temp1286_12 (select ARGNAME_padding_NAMEEND_VAL temp1286_11)))
(assert (= temp1286_13 #x0000000000000002))
(assert (= temp1286_14 temp1286_13))
(assert (= temp1286_15 (select ARGNAME_padding_NAMEEND_VAL temp1286_14)))
(assert (= temp1286_16 #x0000000000000003))
(assert (= temp1286_17 temp1286_16))
(assert (= temp1286_18 (select ARGNAME_padding_NAMEEND_VAL temp1286_17)))
(assert (= temp1286_19 #x0000000000000004))
(assert (= temp1286_20 temp1286_19))
(assert (= temp1286_21 (select ARGNAME_padding_NAMEEND_VAL temp1286_20)))
(assert (= temp1286_22 #x0000000000000005))
(assert (= temp1286_23 temp1286_22))
(assert (= temp1286_24 (select ARGNAME_padding_NAMEEND_VAL temp1286_23)))
(assert (= temp1286_25 #x0000000000000000))
(assert (= temp1286_26 #x0000000000000000))
(assert (= temp1286_27 temp1286_26))
(assert (= temp1286_28 (select ARGNAME_padding_NAMEEND_VAL temp1286_27)))
(assert (= temp1286_29 #x0000000000000000))
(assert (= temp1286_30 #x0000000000000001))
(assert (= temp1286_31 temp1286_30))
(assert (= temp1286_32 (select ARGNAME_padding_NAMEEND_VAL temp1286_31)))
(assert (= temp1286_33 #x0000000000000000))
(assert (= temp1286_34 #x0000000000000002))
(assert (= temp1286_35 temp1286_34))
(assert (= temp1286_36 (select ARGNAME_padding_NAMEEND_VAL temp1286_35)))
(assert (= temp1286_37 #x0000000000000000))
(assert (= temp1286_38 #x0000000000000003))
(assert (= temp1286_39 temp1286_38))
(assert (= temp1286_40 (select ARGNAME_padding_NAMEEND_VAL temp1286_39)))
(assert (= temp1286_41 #x0000000000000000))
(assert (= temp1286_42 #x0000000000000004))
(assert (= temp1286_43 temp1286_42))
(assert (= temp1286_44 (select ARGNAME_padding_NAMEEND_VAL temp1286_43)))
(assert (= temp1286_45 #x0000000000000000))
(assert (= temp1286_46 #x0000000000000005))
(assert (= temp1286_47 temp1286_46))
(assert (= temp1286_48 (select ARGNAME_padding_NAMEEND_VAL temp1286_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1286_28 temp1286_25)
             (bvslt temp1286_32 temp1286_29)
             (bvslt temp1286_36 temp1286_33)
             (bvslt temp1286_40 temp1286_37)
             (bvslt temp1286_44 temp1286_41)
             (bvslt temp1286_48 temp1286_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1286_49 #x0000000000000000))
(assert (= var1191714 temp1286_49))
(assert (= temp1286_50 #x0000000000000000))
(assert (= temp1286_51 temp1286_50))
(assert (= temp1286_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1286_51)))
(assert (= temp1286_53 #x0000000000000001))
(assert (= temp1286_54 temp1286_53))
(assert (= temp1286_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1286_54)))
(assert (= temp1286_56 #x0000000000000002))
(assert (= temp1286_57 temp1286_56))
(assert (= temp1286_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1286_57)))
(assert (= temp1286_59 #x0000000000000003))
(assert (= temp1286_60 temp1286_59))
(assert (= temp1286_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1286_60)))
(assert (= temp1286_62 #x0000000000000004))
(assert (= temp1286_63 temp1286_62))
(assert (= temp1286_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1286_63)))
(assert (= temp1286_65 #x0000000000000005))
(assert (= temp1286_66 temp1286_65))
(assert (= temp1286_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1286_66)))
(assert (= temp1286_68 #x0000000000000000))
(assert (= temp1286_69 #x0000000000000000))
(assert (= temp1286_70 temp1286_69))
(assert (= temp1286_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1286_70)))
(assert (= temp1286_72 #x0000000000000000))
(assert (= temp1286_73 #x0000000000000001))
(assert (= temp1286_74 temp1286_73))
(assert (= temp1286_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1286_74)))
(assert (= temp1286_76 #x0000000000000000))
(assert (= temp1286_77 #x0000000000000002))
(assert (= temp1286_78 temp1286_77))
(assert (= temp1286_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1286_78)))
(assert (= temp1286_80 #x0000000000000000))
(assert (= temp1286_81 #x0000000000000003))
(assert (= temp1286_82 temp1286_81))
(assert (= temp1286_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1286_82)))
(assert (= temp1286_84 #x0000000000000000))
(assert (= temp1286_85 #x0000000000000004))
(assert (= temp1286_86 temp1286_85))
(assert (= temp1286_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1286_86)))
(assert (= temp1286_88 #x0000000000000000))
(assert (= temp1286_89 #x0000000000000005))
(assert (= temp1286_90 temp1286_89))
(assert (= temp1286_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1286_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1286_71 temp1286_68)
             (bvslt temp1286_75 temp1286_72)
             (bvslt temp1286_79 temp1286_76)
             (bvslt temp1286_83 temp1286_80)
             (bvslt temp1286_87 temp1286_84)
             (bvslt temp1286_91 temp1286_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1286_92 #x0000000000000000))
(assert (= var1191725 temp1286_92))
(assert (= temp1286_93 #x0000000000000000))
(assert (= temp1286_94 temp1286_93))
(assert (= temp1286_95 (select ARGNAME_stride_NAMEEND_VAL temp1286_94)))
(assert (= temp1286_96 #x0000000000000001))
(assert (= temp1286_97 temp1286_96))
(assert (= temp1286_98 (select ARGNAME_stride_NAMEEND_VAL temp1286_97)))
(assert (= temp1286_99 #x0000000000000002))
(assert (= temp1286_100 temp1286_99))
(assert (= temp1286_101 (select ARGNAME_stride_NAMEEND_VAL temp1286_100)))
(assert (= temp1286_102 #x0000000000000003))
(assert (= temp1286_103 temp1286_102))
(assert (= temp1286_104 (select ARGNAME_stride_NAMEEND_VAL temp1286_103)))
(assert (= temp1286_105 #x0000000000000004))
(assert (= temp1286_106 temp1286_105))
(assert (= temp1286_107 (select ARGNAME_stride_NAMEEND_VAL temp1286_106)))
(assert (= temp1286_108 #x0000000000000005))
(assert (= temp1286_109 temp1286_108))
(assert (= temp1286_110 (select ARGNAME_stride_NAMEEND_VAL temp1286_109)))
(assert (= temp1286_111 #x0000000000000000))
(assert (= temp1286_112 #x0000000000000000))
(assert (= temp1286_113 temp1286_112))
(assert (= temp1286_114 (select ARGNAME_stride_NAMEEND_VAL temp1286_113)))
(assert (= temp1286_115 #x0000000000000000))
(assert (= temp1286_116 #x0000000000000001))
(assert (= temp1286_117 temp1286_116))
(assert (= temp1286_118 (select ARGNAME_stride_NAMEEND_VAL temp1286_117)))
(assert (= temp1286_119 #x0000000000000000))
(assert (= temp1286_120 #x0000000000000002))
(assert (= temp1286_121 temp1286_120))
(assert (= temp1286_122 (select ARGNAME_stride_NAMEEND_VAL temp1286_121)))
(assert (= temp1286_123 #x0000000000000000))
(assert (= temp1286_124 #x0000000000000003))
(assert (= temp1286_125 temp1286_124))
(assert (= temp1286_126 (select ARGNAME_stride_NAMEEND_VAL temp1286_125)))
(assert (= temp1286_127 #x0000000000000000))
(assert (= temp1286_128 #x0000000000000004))
(assert (= temp1286_129 temp1286_128))
(assert (= temp1286_130 (select ARGNAME_stride_NAMEEND_VAL temp1286_129)))
(assert (= temp1286_131 #x0000000000000000))
(assert (= temp1286_132 #x0000000000000005))
(assert (= temp1286_133 temp1286_132))
(assert (= temp1286_134 (select ARGNAME_stride_NAMEEND_VAL temp1286_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1286_114 temp1286_111)
             (bvsle temp1286_118 temp1286_115)
             (bvsle temp1286_122 temp1286_119)
             (bvsle temp1286_126 temp1286_123)
             (bvsle temp1286_130 temp1286_127)
             (bvsle temp1286_134 temp1286_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1286_135 #x0000000000000000))
(assert (= var1191735 temp1286_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1286_136 #x0000000000000001))
(assert (= var1191747 temp1286_136))
(assert (= temp1286_137 #x0000000000000000))
(assert (= var1179826 temp1286_137))
(assert (= temp1286_138 #x0000000000000000))
(assert (= temp1286_139 temp1286_138))
(assert (= temp1286_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1286_139)))
(assert (= temp1286_141 #x0000000000000001))
(assert (= temp1286_142 temp1286_141))
(assert (= temp1286_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1286_142)))
(assert (= temp1286_144 #x0000000000000002))
(assert (= temp1286_145 temp1286_144))
(assert (= temp1286_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1286_145)))
(assert (= temp1286_147 #x0000000000000003))
(assert (= temp1286_148 temp1286_147))
(assert (= temp1286_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1286_148)))
(assert (= temp1286_150 #x0000000000000004))
(assert (= temp1286_151 temp1286_150))
(assert (= temp1286_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1286_151)))
(assert (= temp1286_153 #x0000000000000005))
(assert (= temp1286_154 temp1286_153))
(assert (= temp1286_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1286_154)))
(assert (= temp1286_157 var1179826))
(assert (= temp1286_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1286_157)))
(assert (= temp1286_156 temp1286_158))
(assert (= var1191780
   (ite (bvslt temp1286_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1286_159 #x0000000000000000))
(assert (= var1191780 temp1286_159))
(assert (= temp1286_160 #x0000000000000000))
(assert (= var1179826 temp1286_160))
(assert (= temp1286_162 var1179826))
(assert (= temp1286_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1286_162)))
(assert (= temp1286_161 temp1286_163))
(assert (= var1191802 (bvsmod temp1286_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1286_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1286_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1286_165 #x0000000000000001))
(assert (= var1191803 temp1286_165))
(assert (= temp1286_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1286_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1286_167 #x0000000000000001))
(assert (= var1191823 temp1286_167))
(assert (= temp1286_168 #x0000000000000001))
(assert (= var1180714 temp1286_168))
(assert (= temp1286_169 #x0000000000000000))
(assert (= temp1286_170 temp1286_169))
(assert (= temp1286_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1286_170)))
(assert (= temp1286_172 #x0000000000000001))
(assert (= temp1286_173 temp1286_172))
(assert (= temp1286_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1286_173)))
(assert (= temp1286_175 #x0000000000000002))
(assert (= temp1286_176 temp1286_175))
(assert (= temp1286_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1286_176)))
(assert (= temp1286_178 #x0000000000000003))
(assert (= temp1286_179 temp1286_178))
(assert (= temp1286_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1286_179)))
(assert (= temp1286_181 #x0000000000000004))
(assert (= temp1286_182 temp1286_181))
(assert (= temp1286_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1286_182)))
(assert (= temp1286_184 #x0000000000000005))
(assert (= temp1286_185 temp1286_184))
(assert (= temp1286_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1286_185)))
(assert (= temp1286_187 #x0000000000000000))
(assert (= temp1286_188
   (ite (bvslt var1180714 temp1286_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1286_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1286_188)))
(assert (= var1191831 temp1286_189))
(assert (bvslt (ite (bvslt var1180714 temp1286_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1286_190 #x0000000000000001))
(assert (= var1180714 temp1286_190))
(assert (= temp1286_192 var1180714))
(assert (= temp1286_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1286_192)))
(assert (= temp1286_191 temp1286_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1286_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1286_194 #x0000000000000001))
(assert (= var1191836 temp1286_194))
(assert (= temp1286_195 #x0000000000000000))
(assert (= var1179826 temp1286_195))
(assert (= temp1286_197 var1179826))
(assert (= temp1286_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1286_197)))
(assert (= temp1286_196 temp1286_198))
(assert (= temp1286_199 #x0000000000000002))
(assert (= var1586025 temp1286_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1286_200 #x0000000000000001))
(assert (= var1191993 temp1286_200))
(assert (= temp1286_201 #x0000000000000001))
(assert (= var2700303 temp1286_201))
(assert (= temp1286_202 #x0000000000000001))
(assert (= var2962447 temp1286_202))
(assert (= temp1286_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1286_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1286_204 #x0000000000000001))
(assert (= var211058 temp1286_204))
(assert (= temp1286_205 #x0000000000000001))
(assert (= var211188 temp1286_205))
(assert (= var3879401 var211188))
(assert (= temp1286_206 #x0000000000000000))
(assert (= var3866802 temp1286_206))
(assert (= temp1286_207 #x0000000000000000))
(assert (= temp1286_208
   (ite (bvslt var3866802 temp1286_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1286_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1286_208)))
(assert (= var3879420 temp1286_209))
(assert (bvslt (ite (bvslt var3866802 temp1286_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1286_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1286_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1286_211 #x0000000000000001))
(assert (= var3879421 temp1286_211))
(assert (= temp1286_212 #x0000000000000000))
(assert (= var4133117 temp1286_212))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1286_213 #x0000000000000002))
(assert (= var4339331 temp1286_213))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1286_214 #x0000000000000000))
(assert (= var4404892 temp1286_214))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp1286_216 #xffffffffffffffff))
(assert (= temp1286_215 temp1286_216))
(assert (= temp1286_217 #x0000000000000001))
(assert (= var197674 temp1286_217))
(assert (= temp1286_218 #x0000000000000000))
(assert (= temp1286_219
   (ite (bvslt var197674 temp1286_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp1286_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp1286_219)))
(assert (= var211595 temp1286_220))
(assert (bvslt (ite (bvslt var197674 temp1286_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1286_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp1286_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp1286_222 #x0000000000000001))
(assert (= var211596 temp1286_222))
(assert (= temp1286_224 #xffffffffffffffff))
(assert (= temp1286_223 temp1286_224))
(assert (= temp1286_225 #x0000000000000001))
(assert (= var211058 temp1286_225))
(model-add temp1286_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1286_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1286_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1286_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





