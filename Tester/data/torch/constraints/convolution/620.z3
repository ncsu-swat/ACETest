(declare-fun temp826_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp826_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp826_3 () (_ BitVec 64))
(declare-fun temp826_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp826_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp826_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp826_7 () (_ BitVec 64))
(declare-fun temp826_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp826_9 () (_ BitVec 64))
(declare-fun temp826_10 () (_ BitVec 64))
(declare-fun temp826_11 () (_ BitVec 64))
(declare-fun temp826_12 () (_ BitVec 64))
(declare-fun temp826_13 () (_ BitVec 64))
(declare-fun temp826_14 () (_ BitVec 64))
(declare-fun temp826_15 () (_ BitVec 64))
(declare-fun temp826_16 () (_ BitVec 64))
(declare-fun temp826_17 () (_ BitVec 64))
(declare-fun temp826_18 () (_ BitVec 64))
(declare-fun temp826_19 () (_ BitVec 64))
(declare-fun temp826_20 () (_ BitVec 64))
(declare-fun temp826_21 () (_ BitVec 64))
(declare-fun temp826_22 () (_ BitVec 64))
(declare-fun temp826_23 () (_ BitVec 64))
(declare-fun temp826_24 () (_ BitVec 64))
(declare-fun temp826_25 () (_ BitVec 64))
(declare-fun temp826_26 () (_ BitVec 64))
(declare-fun temp826_27 () (_ BitVec 64))
(declare-fun temp826_28 () (_ BitVec 64))
(declare-fun temp826_29 () (_ BitVec 64))
(declare-fun temp826_30 () (_ BitVec 64))
(declare-fun temp826_31 () (_ BitVec 64))
(declare-fun temp826_32 () (_ BitVec 64))
(declare-fun temp826_33 () (_ BitVec 64))
(declare-fun temp826_34 () (_ BitVec 64))
(declare-fun temp826_35 () (_ BitVec 64))
(declare-fun temp826_36 () (_ BitVec 64))
(declare-fun temp826_37 () (_ BitVec 64))
(declare-fun temp826_38 () (_ BitVec 64))
(declare-fun temp826_39 () (_ BitVec 64))
(declare-fun temp826_40 () (_ BitVec 64))
(declare-fun temp826_41 () (_ BitVec 64))
(declare-fun temp826_42 () (_ BitVec 64))
(declare-fun temp826_43 () (_ BitVec 64))
(declare-fun temp826_44 () (_ BitVec 64))
(declare-fun temp826_45 () (_ BitVec 64))
(declare-fun temp826_46 () (_ BitVec 64))
(declare-fun temp826_47 () (_ BitVec 64))
(declare-fun temp826_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp826_49 () (_ BitVec 64))
(declare-fun temp826_50 () (_ BitVec 64))
(declare-fun temp826_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp826_52 () (_ BitVec 64))
(declare-fun temp826_53 () (_ BitVec 64))
(declare-fun temp826_54 () (_ BitVec 64))
(declare-fun temp826_55 () (_ BitVec 64))
(declare-fun temp826_56 () (_ BitVec 64))
(declare-fun temp826_57 () (_ BitVec 64))
(declare-fun temp826_58 () (_ BitVec 64))
(declare-fun temp826_59 () (_ BitVec 64))
(declare-fun temp826_60 () (_ BitVec 64))
(declare-fun temp826_61 () (_ BitVec 64))
(declare-fun temp826_62 () (_ BitVec 64))
(declare-fun temp826_63 () (_ BitVec 64))
(declare-fun temp826_64 () (_ BitVec 64))
(declare-fun temp826_65 () (_ BitVec 64))
(declare-fun temp826_66 () (_ BitVec 64))
(declare-fun temp826_67 () (_ BitVec 64))
(declare-fun temp826_68 () (_ BitVec 64))
(declare-fun temp826_69 () (_ BitVec 64))
(declare-fun temp826_70 () (_ BitVec 64))
(declare-fun temp826_71 () (_ BitVec 64))
(declare-fun temp826_72 () (_ BitVec 64))
(declare-fun temp826_73 () (_ BitVec 64))
(declare-fun temp826_74 () (_ BitVec 64))
(declare-fun temp826_75 () (_ BitVec 64))
(declare-fun temp826_76 () (_ BitVec 64))
(declare-fun temp826_77 () (_ BitVec 64))
(declare-fun temp826_78 () (_ BitVec 64))
(declare-fun temp826_79 () (_ BitVec 64))
(declare-fun temp826_80 () (_ BitVec 64))
(declare-fun temp826_81 () (_ BitVec 64))
(declare-fun temp826_82 () (_ BitVec 64))
(declare-fun temp826_83 () (_ BitVec 64))
(declare-fun temp826_84 () (_ BitVec 64))
(declare-fun temp826_85 () (_ BitVec 64))
(declare-fun temp826_86 () (_ BitVec 64))
(declare-fun temp826_87 () (_ BitVec 64))
(declare-fun temp826_88 () (_ BitVec 64))
(declare-fun temp826_89 () (_ BitVec 64))
(declare-fun temp826_90 () (_ BitVec 64))
(declare-fun temp826_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp826_92 () (_ BitVec 64))
(declare-fun temp826_93 () (_ BitVec 64))
(declare-fun temp826_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp826_95 () (_ BitVec 64))
(declare-fun temp826_96 () (_ BitVec 64))
(declare-fun temp826_97 () (_ BitVec 64))
(declare-fun temp826_98 () (_ BitVec 64))
(declare-fun temp826_99 () (_ BitVec 64))
(declare-fun temp826_100 () (_ BitVec 64))
(declare-fun temp826_101 () (_ BitVec 64))
(declare-fun temp826_102 () (_ BitVec 64))
(declare-fun temp826_103 () (_ BitVec 64))
(declare-fun temp826_104 () (_ BitVec 64))
(declare-fun temp826_105 () (_ BitVec 64))
(declare-fun temp826_106 () (_ BitVec 64))
(declare-fun temp826_107 () (_ BitVec 64))
(declare-fun temp826_108 () (_ BitVec 64))
(declare-fun temp826_109 () (_ BitVec 64))
(declare-fun temp826_110 () (_ BitVec 64))
(declare-fun temp826_111 () (_ BitVec 64))
(declare-fun temp826_112 () (_ BitVec 64))
(declare-fun temp826_113 () (_ BitVec 64))
(declare-fun temp826_114 () (_ BitVec 64))
(declare-fun temp826_115 () (_ BitVec 64))
(declare-fun temp826_116 () (_ BitVec 64))
(declare-fun temp826_117 () (_ BitVec 64))
(declare-fun temp826_118 () (_ BitVec 64))
(declare-fun temp826_119 () (_ BitVec 64))
(declare-fun temp826_120 () (_ BitVec 64))
(declare-fun temp826_121 () (_ BitVec 64))
(declare-fun temp826_122 () (_ BitVec 64))
(declare-fun temp826_123 () (_ BitVec 64))
(declare-fun temp826_124 () (_ BitVec 64))
(declare-fun temp826_125 () (_ BitVec 64))
(declare-fun temp826_126 () (_ BitVec 64))
(declare-fun temp826_127 () (_ BitVec 64))
(declare-fun temp826_128 () (_ BitVec 64))
(declare-fun temp826_129 () (_ BitVec 64))
(declare-fun temp826_130 () (_ BitVec 64))
(declare-fun temp826_131 () (_ BitVec 64))
(declare-fun temp826_132 () (_ BitVec 64))
(declare-fun temp826_133 () (_ BitVec 64))
(declare-fun temp826_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp826_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp826_136 () (_ BitVec 64))
(declare-fun temp826_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp826_138 () (_ BitVec 64))
(declare-fun temp826_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp826_140 () (_ BitVec 64))
(declare-fun temp826_141 () (_ BitVec 64))
(declare-fun temp826_142 () (_ BitVec 64))
(declare-fun temp826_143 () (_ BitVec 64))
(declare-fun temp826_144 () (_ BitVec 64))
(declare-fun temp826_145 () (_ BitVec 64))
(declare-fun temp826_146 () (_ BitVec 64))
(declare-fun temp826_147 () (_ BitVec 64))
(declare-fun temp826_148 () (_ BitVec 64))
(declare-fun temp826_149 () (_ BitVec 64))
(declare-fun temp826_150 () (_ BitVec 64))
(declare-fun temp826_151 () (_ BitVec 64))
(declare-fun temp826_152 () (_ BitVec 64))
(declare-fun temp826_153 () (_ BitVec 64))
(declare-fun temp826_154 () (_ BitVec 64))
(declare-fun temp826_155 () (_ BitVec 64))
(declare-fun temp826_157 () (_ BitVec 64))
(declare-fun temp826_158 () (_ BitVec 64))
(declare-fun temp826_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp826_159 () (_ BitVec 64))
(declare-fun temp826_160 () (_ BitVec 64))
(declare-fun temp826_162 () (_ BitVec 64))
(declare-fun temp826_163 () (_ BitVec 64))
(declare-fun temp826_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp826_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp826_165 () (_ BitVec 64))
(declare-fun temp826_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp826_167 () (_ BitVec 64))
(declare-fun temp826_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp826_169 () (_ BitVec 64))
(declare-fun temp826_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp826_171 () (_ BitVec 64))
(declare-fun temp826_172 () (_ BitVec 64))
(declare-fun temp826_173 () (_ BitVec 64))
(declare-fun temp826_174 () (_ BitVec 64))
(declare-fun temp826_175 () (_ BitVec 64))
(declare-fun temp826_176 () (_ BitVec 64))
(declare-fun temp826_177 () (_ BitVec 64))
(declare-fun temp826_178 () (_ BitVec 64))
(declare-fun temp826_179 () (_ BitVec 64))
(declare-fun temp826_180 () (_ BitVec 64))
(declare-fun temp826_181 () (_ BitVec 64))
(declare-fun temp826_182 () (_ BitVec 64))
(declare-fun temp826_183 () (_ BitVec 64))
(declare-fun temp826_184 () (_ BitVec 64))
(declare-fun temp826_185 () (_ BitVec 64))
(declare-fun temp826_186 () (_ BitVec 64))
(declare-fun temp826_187 () (_ BitVec 64))
(declare-fun temp826_188 () (_ BitVec 64))
(declare-fun temp826_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp826_190 () (_ BitVec 64))
(declare-fun temp826_192 () (_ BitVec 64))
(declare-fun temp826_193 () (_ BitVec 64))
(declare-fun temp826_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp826_194 () (_ BitVec 64))
(declare-fun temp826_195 () (_ BitVec 64))
(declare-fun temp826_197 () (_ BitVec 64))
(declare-fun temp826_198 () (_ BitVec 64))
(declare-fun temp826_196 () (_ BitVec 64))
(declare-fun temp826_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp826_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp826_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp826_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp826_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp826_204 () (_ BitVec 64))
(declare-fun temp826_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp826_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp826_207 () (_ BitVec 64))
(declare-fun temp826_208 () (_ BitVec 64))
(declare-fun temp826_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp826_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp826_211 () (_ BitVec 64))
(declare-fun temp826_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp826_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp826_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211962 () (_ BitVec 64))
(declare-fun temp826_215 () (_ BitVec 64))
(declare-fun var211963 () (_ BitVec 64))
(declare-fun temp826_216 () (_ BitVec 64))
(assert (= temp826_1 #x0000000000000001))
(assert (= var77203 temp826_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp826_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp826_2)))
(assert (= temp826_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp826_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp826_4 #x0000000000000000))
(assert (= var210941 temp826_4))
(assert (= temp826_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp826_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp826_6 #x0000000000000000))
(assert (= var210986 temp826_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp826_7 #x0000000000000000))
(assert (= temp826_8 temp826_7))
(assert (= temp826_9 (select ARGNAME_padding_NAMEEND_VAL temp826_8)))
(assert (= temp826_10 #x0000000000000001))
(assert (= temp826_11 temp826_10))
(assert (= temp826_12 (select ARGNAME_padding_NAMEEND_VAL temp826_11)))
(assert (= temp826_13 #x0000000000000002))
(assert (= temp826_14 temp826_13))
(assert (= temp826_15 (select ARGNAME_padding_NAMEEND_VAL temp826_14)))
(assert (= temp826_16 #x0000000000000003))
(assert (= temp826_17 temp826_16))
(assert (= temp826_18 (select ARGNAME_padding_NAMEEND_VAL temp826_17)))
(assert (= temp826_19 #x0000000000000004))
(assert (= temp826_20 temp826_19))
(assert (= temp826_21 (select ARGNAME_padding_NAMEEND_VAL temp826_20)))
(assert (= temp826_22 #x0000000000000005))
(assert (= temp826_23 temp826_22))
(assert (= temp826_24 (select ARGNAME_padding_NAMEEND_VAL temp826_23)))
(assert (= temp826_25 #x0000000000000000))
(assert (= temp826_26 #x0000000000000000))
(assert (= temp826_27 temp826_26))
(assert (= temp826_28 (select ARGNAME_padding_NAMEEND_VAL temp826_27)))
(assert (= temp826_29 #x0000000000000000))
(assert (= temp826_30 #x0000000000000001))
(assert (= temp826_31 temp826_30))
(assert (= temp826_32 (select ARGNAME_padding_NAMEEND_VAL temp826_31)))
(assert (= temp826_33 #x0000000000000000))
(assert (= temp826_34 #x0000000000000002))
(assert (= temp826_35 temp826_34))
(assert (= temp826_36 (select ARGNAME_padding_NAMEEND_VAL temp826_35)))
(assert (= temp826_37 #x0000000000000000))
(assert (= temp826_38 #x0000000000000003))
(assert (= temp826_39 temp826_38))
(assert (= temp826_40 (select ARGNAME_padding_NAMEEND_VAL temp826_39)))
(assert (= temp826_41 #x0000000000000000))
(assert (= temp826_42 #x0000000000000004))
(assert (= temp826_43 temp826_42))
(assert (= temp826_44 (select ARGNAME_padding_NAMEEND_VAL temp826_43)))
(assert (= temp826_45 #x0000000000000000))
(assert (= temp826_46 #x0000000000000005))
(assert (= temp826_47 temp826_46))
(assert (= temp826_48 (select ARGNAME_padding_NAMEEND_VAL temp826_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp826_28 temp826_25)
             (bvslt temp826_32 temp826_29)
             (bvslt temp826_36 temp826_33)
             (bvslt temp826_40 temp826_37)
             (bvslt temp826_44 temp826_41)
             (bvslt temp826_48 temp826_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp826_49 #x0000000000000000))
(assert (= var1191714 temp826_49))
(assert (= temp826_50 #x0000000000000000))
(assert (= temp826_51 temp826_50))
(assert (= temp826_52 (select ARGNAME_output_padding_NAMEEND_VAL temp826_51)))
(assert (= temp826_53 #x0000000000000001))
(assert (= temp826_54 temp826_53))
(assert (= temp826_55 (select ARGNAME_output_padding_NAMEEND_VAL temp826_54)))
(assert (= temp826_56 #x0000000000000002))
(assert (= temp826_57 temp826_56))
(assert (= temp826_58 (select ARGNAME_output_padding_NAMEEND_VAL temp826_57)))
(assert (= temp826_59 #x0000000000000003))
(assert (= temp826_60 temp826_59))
(assert (= temp826_61 (select ARGNAME_output_padding_NAMEEND_VAL temp826_60)))
(assert (= temp826_62 #x0000000000000004))
(assert (= temp826_63 temp826_62))
(assert (= temp826_64 (select ARGNAME_output_padding_NAMEEND_VAL temp826_63)))
(assert (= temp826_65 #x0000000000000005))
(assert (= temp826_66 temp826_65))
(assert (= temp826_67 (select ARGNAME_output_padding_NAMEEND_VAL temp826_66)))
(assert (= temp826_68 #x0000000000000000))
(assert (= temp826_69 #x0000000000000000))
(assert (= temp826_70 temp826_69))
(assert (= temp826_71 (select ARGNAME_output_padding_NAMEEND_VAL temp826_70)))
(assert (= temp826_72 #x0000000000000000))
(assert (= temp826_73 #x0000000000000001))
(assert (= temp826_74 temp826_73))
(assert (= temp826_75 (select ARGNAME_output_padding_NAMEEND_VAL temp826_74)))
(assert (= temp826_76 #x0000000000000000))
(assert (= temp826_77 #x0000000000000002))
(assert (= temp826_78 temp826_77))
(assert (= temp826_79 (select ARGNAME_output_padding_NAMEEND_VAL temp826_78)))
(assert (= temp826_80 #x0000000000000000))
(assert (= temp826_81 #x0000000000000003))
(assert (= temp826_82 temp826_81))
(assert (= temp826_83 (select ARGNAME_output_padding_NAMEEND_VAL temp826_82)))
(assert (= temp826_84 #x0000000000000000))
(assert (= temp826_85 #x0000000000000004))
(assert (= temp826_86 temp826_85))
(assert (= temp826_87 (select ARGNAME_output_padding_NAMEEND_VAL temp826_86)))
(assert (= temp826_88 #x0000000000000000))
(assert (= temp826_89 #x0000000000000005))
(assert (= temp826_90 temp826_89))
(assert (= temp826_91 (select ARGNAME_output_padding_NAMEEND_VAL temp826_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp826_71 temp826_68)
             (bvslt temp826_75 temp826_72)
             (bvslt temp826_79 temp826_76)
             (bvslt temp826_83 temp826_80)
             (bvslt temp826_87 temp826_84)
             (bvslt temp826_91 temp826_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp826_92 #x0000000000000000))
(assert (= var1191725 temp826_92))
(assert (= temp826_93 #x0000000000000000))
(assert (= temp826_94 temp826_93))
(assert (= temp826_95 (select ARGNAME_stride_NAMEEND_VAL temp826_94)))
(assert (= temp826_96 #x0000000000000001))
(assert (= temp826_97 temp826_96))
(assert (= temp826_98 (select ARGNAME_stride_NAMEEND_VAL temp826_97)))
(assert (= temp826_99 #x0000000000000002))
(assert (= temp826_100 temp826_99))
(assert (= temp826_101 (select ARGNAME_stride_NAMEEND_VAL temp826_100)))
(assert (= temp826_102 #x0000000000000003))
(assert (= temp826_103 temp826_102))
(assert (= temp826_104 (select ARGNAME_stride_NAMEEND_VAL temp826_103)))
(assert (= temp826_105 #x0000000000000004))
(assert (= temp826_106 temp826_105))
(assert (= temp826_107 (select ARGNAME_stride_NAMEEND_VAL temp826_106)))
(assert (= temp826_108 #x0000000000000005))
(assert (= temp826_109 temp826_108))
(assert (= temp826_110 (select ARGNAME_stride_NAMEEND_VAL temp826_109)))
(assert (= temp826_111 #x0000000000000000))
(assert (= temp826_112 #x0000000000000000))
(assert (= temp826_113 temp826_112))
(assert (= temp826_114 (select ARGNAME_stride_NAMEEND_VAL temp826_113)))
(assert (= temp826_115 #x0000000000000000))
(assert (= temp826_116 #x0000000000000001))
(assert (= temp826_117 temp826_116))
(assert (= temp826_118 (select ARGNAME_stride_NAMEEND_VAL temp826_117)))
(assert (= temp826_119 #x0000000000000000))
(assert (= temp826_120 #x0000000000000002))
(assert (= temp826_121 temp826_120))
(assert (= temp826_122 (select ARGNAME_stride_NAMEEND_VAL temp826_121)))
(assert (= temp826_123 #x0000000000000000))
(assert (= temp826_124 #x0000000000000003))
(assert (= temp826_125 temp826_124))
(assert (= temp826_126 (select ARGNAME_stride_NAMEEND_VAL temp826_125)))
(assert (= temp826_127 #x0000000000000000))
(assert (= temp826_128 #x0000000000000004))
(assert (= temp826_129 temp826_128))
(assert (= temp826_130 (select ARGNAME_stride_NAMEEND_VAL temp826_129)))
(assert (= temp826_131 #x0000000000000000))
(assert (= temp826_132 #x0000000000000005))
(assert (= temp826_133 temp826_132))
(assert (= temp826_134 (select ARGNAME_stride_NAMEEND_VAL temp826_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp826_114 temp826_111)
             (bvsle temp826_118 temp826_115)
             (bvsle temp826_122 temp826_119)
             (bvsle temp826_126 temp826_123)
             (bvsle temp826_130 temp826_127)
             (bvsle temp826_134 temp826_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp826_135 #x0000000000000000))
(assert (= var1191735 temp826_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp826_136 #x0000000000000001))
(assert (= var1191747 temp826_136))
(assert (= temp826_137 #x0000000000000000))
(assert (= var1179826 temp826_137))
(assert (= temp826_138 #x0000000000000000))
(assert (= temp826_139 temp826_138))
(assert (= temp826_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp826_139)))
(assert (= temp826_141 #x0000000000000001))
(assert (= temp826_142 temp826_141))
(assert (= temp826_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp826_142)))
(assert (= temp826_144 #x0000000000000002))
(assert (= temp826_145 temp826_144))
(assert (= temp826_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp826_145)))
(assert (= temp826_147 #x0000000000000003))
(assert (= temp826_148 temp826_147))
(assert (= temp826_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp826_148)))
(assert (= temp826_150 #x0000000000000004))
(assert (= temp826_151 temp826_150))
(assert (= temp826_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp826_151)))
(assert (= temp826_153 #x0000000000000005))
(assert (= temp826_154 temp826_153))
(assert (= temp826_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp826_154)))
(assert (= temp826_157 var1179826))
(assert (= temp826_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp826_157)))
(assert (= temp826_156 temp826_158))
(assert (= var1191780
   (ite (bvslt temp826_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp826_159 #x0000000000000000))
(assert (= var1191780 temp826_159))
(assert (= temp826_160 #x0000000000000000))
(assert (= var1179826 temp826_160))
(assert (= temp826_162 var1179826))
(assert (= temp826_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp826_162)))
(assert (= temp826_161 temp826_163))
(assert (= var1191802 (bvsmod temp826_161 ARGNAME_groups_NAMEEND)))
(assert (= temp826_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp826_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp826_165 #x0000000000000001))
(assert (= var1191803 temp826_165))
(assert (= temp826_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp826_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp826_167 #x0000000000000001))
(assert (= var1191823 temp826_167))
(assert (= temp826_168 #x0000000000000001))
(assert (= var1180714 temp826_168))
(assert (= temp826_169 #x0000000000000000))
(assert (= temp826_170 temp826_169))
(assert (= temp826_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp826_170)))
(assert (= temp826_172 #x0000000000000001))
(assert (= temp826_173 temp826_172))
(assert (= temp826_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp826_173)))
(assert (= temp826_175 #x0000000000000002))
(assert (= temp826_176 temp826_175))
(assert (= temp826_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp826_176)))
(assert (= temp826_178 #x0000000000000003))
(assert (= temp826_179 temp826_178))
(assert (= temp826_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp826_179)))
(assert (= temp826_181 #x0000000000000004))
(assert (= temp826_182 temp826_181))
(assert (= temp826_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp826_182)))
(assert (= temp826_184 #x0000000000000005))
(assert (= temp826_185 temp826_184))
(assert (= temp826_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp826_185)))
(assert (= temp826_187 #x0000000000000000))
(assert (= temp826_188
   (ite (bvslt var1180714 temp826_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp826_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp826_188)))
(assert (= var1191831 temp826_189))
(assert (bvslt (ite (bvslt var1180714 temp826_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp826_190 #x0000000000000001))
(assert (= var1180714 temp826_190))
(assert (= temp826_192 var1180714))
(assert (= temp826_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp826_192)))
(assert (= temp826_191 temp826_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp826_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp826_194 #x0000000000000001))
(assert (= var1191836 temp826_194))
(assert (= temp826_195 #x0000000000000000))
(assert (= var1179826 temp826_195))
(assert (= temp826_197 var1179826))
(assert (= temp826_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp826_197)))
(assert (= temp826_196 temp826_198))
(assert (= temp826_199 #x0000000000000002))
(assert (= var1586025 temp826_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp826_200 #x0000000000000001))
(assert (= var1191993 temp826_200))
(assert (= temp826_201 #x0000000000000001))
(assert (= var2700303 temp826_201))
(assert (= temp826_202 #x0000000000000001))
(assert (= var2962447 temp826_202))
(assert (= temp826_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp826_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp826_204 #x0000000000000001))
(assert (= var211058 temp826_204))
(assert (= temp826_205 #x0000000000000001))
(assert (= var211188 temp826_205))
(assert (= var3879401 var211188))
(assert (= temp826_206 #x0000000000000000))
(assert (= var3866802 temp826_206))
(assert (= temp826_207 #x0000000000000000))
(assert (= temp826_208
   (ite (bvslt var3866802 temp826_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp826_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp826_208)))
(assert (= var3879420 temp826_209))
(assert (bvslt (ite (bvslt var3866802 temp826_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp826_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp826_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp826_211 #x0000000000000001))
(assert (= var3879421 temp826_211))
(assert (= temp826_212 #x0000000000000000))
(assert (= var4079423 temp826_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp826_213 #x0000000000000002))
(assert (= var4208259 temp826_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp826_214 #x0000000000000000))
(assert (= var4273820 temp826_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211962 var210913))
(assert (= temp826_215 #x0000000000000000))
(assert (= var211963
   (ite (distinct var211962 temp826_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp826_216 #x0000000000000001))
(assert (= var211058 temp826_216))
(model-add temp826_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp826_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp826_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp826_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




