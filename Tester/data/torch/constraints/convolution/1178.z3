(declare-fun temp10301_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10301_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10301_3 () (_ BitVec 64))
(declare-fun temp10301_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10301_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10301_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10301_7 () (_ BitVec 64))
(declare-fun temp10301_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10301_9 () (_ BitVec 64))
(declare-fun temp10301_10 () (_ BitVec 64))
(declare-fun temp10301_11 () (_ BitVec 64))
(declare-fun temp10301_12 () (_ BitVec 64))
(declare-fun temp10301_13 () (_ BitVec 64))
(declare-fun temp10301_14 () (_ BitVec 64))
(declare-fun temp10301_15 () (_ BitVec 64))
(declare-fun temp10301_16 () (_ BitVec 64))
(declare-fun temp10301_17 () (_ BitVec 64))
(declare-fun temp10301_18 () (_ BitVec 64))
(declare-fun temp10301_19 () (_ BitVec 64))
(declare-fun temp10301_20 () (_ BitVec 64))
(declare-fun temp10301_21 () (_ BitVec 64))
(declare-fun temp10301_22 () (_ BitVec 64))
(declare-fun temp10301_23 () (_ BitVec 64))
(declare-fun temp10301_24 () (_ BitVec 64))
(declare-fun temp10301_25 () (_ BitVec 64))
(declare-fun temp10301_26 () (_ BitVec 64))
(declare-fun temp10301_27 () (_ BitVec 64))
(declare-fun temp10301_28 () (_ BitVec 64))
(declare-fun temp10301_29 () (_ BitVec 64))
(declare-fun temp10301_30 () (_ BitVec 64))
(declare-fun temp10301_31 () (_ BitVec 64))
(declare-fun temp10301_32 () (_ BitVec 64))
(declare-fun temp10301_33 () (_ BitVec 64))
(declare-fun temp10301_34 () (_ BitVec 64))
(declare-fun temp10301_35 () (_ BitVec 64))
(declare-fun temp10301_36 () (_ BitVec 64))
(declare-fun temp10301_37 () (_ BitVec 64))
(declare-fun temp10301_38 () (_ BitVec 64))
(declare-fun temp10301_39 () (_ BitVec 64))
(declare-fun temp10301_40 () (_ BitVec 64))
(declare-fun temp10301_41 () (_ BitVec 64))
(declare-fun temp10301_42 () (_ BitVec 64))
(declare-fun temp10301_43 () (_ BitVec 64))
(declare-fun temp10301_44 () (_ BitVec 64))
(declare-fun temp10301_45 () (_ BitVec 64))
(declare-fun temp10301_46 () (_ BitVec 64))
(declare-fun temp10301_47 () (_ BitVec 64))
(declare-fun temp10301_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10301_49 () (_ BitVec 64))
(declare-fun temp10301_50 () (_ BitVec 64))
(declare-fun temp10301_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10301_52 () (_ BitVec 64))
(declare-fun temp10301_53 () (_ BitVec 64))
(declare-fun temp10301_54 () (_ BitVec 64))
(declare-fun temp10301_55 () (_ BitVec 64))
(declare-fun temp10301_56 () (_ BitVec 64))
(declare-fun temp10301_57 () (_ BitVec 64))
(declare-fun temp10301_58 () (_ BitVec 64))
(declare-fun temp10301_59 () (_ BitVec 64))
(declare-fun temp10301_60 () (_ BitVec 64))
(declare-fun temp10301_61 () (_ BitVec 64))
(declare-fun temp10301_62 () (_ BitVec 64))
(declare-fun temp10301_63 () (_ BitVec 64))
(declare-fun temp10301_64 () (_ BitVec 64))
(declare-fun temp10301_65 () (_ BitVec 64))
(declare-fun temp10301_66 () (_ BitVec 64))
(declare-fun temp10301_67 () (_ BitVec 64))
(declare-fun temp10301_68 () (_ BitVec 64))
(declare-fun temp10301_69 () (_ BitVec 64))
(declare-fun temp10301_70 () (_ BitVec 64))
(declare-fun temp10301_71 () (_ BitVec 64))
(declare-fun temp10301_72 () (_ BitVec 64))
(declare-fun temp10301_73 () (_ BitVec 64))
(declare-fun temp10301_74 () (_ BitVec 64))
(declare-fun temp10301_75 () (_ BitVec 64))
(declare-fun temp10301_76 () (_ BitVec 64))
(declare-fun temp10301_77 () (_ BitVec 64))
(declare-fun temp10301_78 () (_ BitVec 64))
(declare-fun temp10301_79 () (_ BitVec 64))
(declare-fun temp10301_80 () (_ BitVec 64))
(declare-fun temp10301_81 () (_ BitVec 64))
(declare-fun temp10301_82 () (_ BitVec 64))
(declare-fun temp10301_83 () (_ BitVec 64))
(declare-fun temp10301_84 () (_ BitVec 64))
(declare-fun temp10301_85 () (_ BitVec 64))
(declare-fun temp10301_86 () (_ BitVec 64))
(declare-fun temp10301_87 () (_ BitVec 64))
(declare-fun temp10301_88 () (_ BitVec 64))
(declare-fun temp10301_89 () (_ BitVec 64))
(declare-fun temp10301_90 () (_ BitVec 64))
(declare-fun temp10301_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10301_92 () (_ BitVec 64))
(declare-fun temp10301_93 () (_ BitVec 64))
(declare-fun temp10301_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10301_95 () (_ BitVec 64))
(declare-fun temp10301_96 () (_ BitVec 64))
(declare-fun temp10301_97 () (_ BitVec 64))
(declare-fun temp10301_98 () (_ BitVec 64))
(declare-fun temp10301_99 () (_ BitVec 64))
(declare-fun temp10301_100 () (_ BitVec 64))
(declare-fun temp10301_101 () (_ BitVec 64))
(declare-fun temp10301_102 () (_ BitVec 64))
(declare-fun temp10301_103 () (_ BitVec 64))
(declare-fun temp10301_104 () (_ BitVec 64))
(declare-fun temp10301_105 () (_ BitVec 64))
(declare-fun temp10301_106 () (_ BitVec 64))
(declare-fun temp10301_107 () (_ BitVec 64))
(declare-fun temp10301_108 () (_ BitVec 64))
(declare-fun temp10301_109 () (_ BitVec 64))
(declare-fun temp10301_110 () (_ BitVec 64))
(declare-fun temp10301_111 () (_ BitVec 64))
(declare-fun temp10301_112 () (_ BitVec 64))
(declare-fun temp10301_113 () (_ BitVec 64))
(declare-fun temp10301_114 () (_ BitVec 64))
(declare-fun temp10301_115 () (_ BitVec 64))
(declare-fun temp10301_116 () (_ BitVec 64))
(declare-fun temp10301_117 () (_ BitVec 64))
(declare-fun temp10301_118 () (_ BitVec 64))
(declare-fun temp10301_119 () (_ BitVec 64))
(declare-fun temp10301_120 () (_ BitVec 64))
(declare-fun temp10301_121 () (_ BitVec 64))
(declare-fun temp10301_122 () (_ BitVec 64))
(declare-fun temp10301_123 () (_ BitVec 64))
(declare-fun temp10301_124 () (_ BitVec 64))
(declare-fun temp10301_125 () (_ BitVec 64))
(declare-fun temp10301_126 () (_ BitVec 64))
(declare-fun temp10301_127 () (_ BitVec 64))
(declare-fun temp10301_128 () (_ BitVec 64))
(declare-fun temp10301_129 () (_ BitVec 64))
(declare-fun temp10301_130 () (_ BitVec 64))
(declare-fun temp10301_131 () (_ BitVec 64))
(declare-fun temp10301_132 () (_ BitVec 64))
(declare-fun temp10301_133 () (_ BitVec 64))
(declare-fun temp10301_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10301_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10301_136 () (_ BitVec 64))
(declare-fun temp10301_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10301_138 () (_ BitVec 64))
(declare-fun temp10301_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10301_140 () (_ BitVec 64))
(declare-fun temp10301_141 () (_ BitVec 64))
(declare-fun temp10301_142 () (_ BitVec 64))
(declare-fun temp10301_143 () (_ BitVec 64))
(declare-fun temp10301_144 () (_ BitVec 64))
(declare-fun temp10301_145 () (_ BitVec 64))
(declare-fun temp10301_146 () (_ BitVec 64))
(declare-fun temp10301_147 () (_ BitVec 64))
(declare-fun temp10301_148 () (_ BitVec 64))
(declare-fun temp10301_149 () (_ BitVec 64))
(declare-fun temp10301_150 () (_ BitVec 64))
(declare-fun temp10301_151 () (_ BitVec 64))
(declare-fun temp10301_152 () (_ BitVec 64))
(declare-fun temp10301_153 () (_ BitVec 64))
(declare-fun temp10301_154 () (_ BitVec 64))
(declare-fun temp10301_155 () (_ BitVec 64))
(declare-fun temp10301_157 () (_ BitVec 64))
(declare-fun temp10301_158 () (_ BitVec 64))
(declare-fun temp10301_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10301_159 () (_ BitVec 64))
(declare-fun temp10301_160 () (_ BitVec 64))
(declare-fun temp10301_162 () (_ BitVec 64))
(declare-fun temp10301_163 () (_ BitVec 64))
(declare-fun temp10301_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10301_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10301_165 () (_ BitVec 64))
(declare-fun temp10301_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10301_167 () (_ BitVec 64))
(declare-fun temp10301_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10301_169 () (_ BitVec 64))
(declare-fun temp10301_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10301_171 () (_ BitVec 64))
(declare-fun temp10301_172 () (_ BitVec 64))
(declare-fun temp10301_173 () (_ BitVec 64))
(declare-fun temp10301_174 () (_ BitVec 64))
(declare-fun temp10301_175 () (_ BitVec 64))
(declare-fun temp10301_176 () (_ BitVec 64))
(declare-fun temp10301_177 () (_ BitVec 64))
(declare-fun temp10301_178 () (_ BitVec 64))
(declare-fun temp10301_179 () (_ BitVec 64))
(declare-fun temp10301_180 () (_ BitVec 64))
(declare-fun temp10301_181 () (_ BitVec 64))
(declare-fun temp10301_182 () (_ BitVec 64))
(declare-fun temp10301_183 () (_ BitVec 64))
(declare-fun temp10301_184 () (_ BitVec 64))
(declare-fun temp10301_185 () (_ BitVec 64))
(declare-fun temp10301_186 () (_ BitVec 64))
(declare-fun temp10301_187 () (_ BitVec 64))
(declare-fun temp10301_188 () (_ BitVec 64))
(declare-fun temp10301_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10301_190 () (_ BitVec 64))
(declare-fun temp10301_192 () (_ BitVec 64))
(declare-fun temp10301_193 () (_ BitVec 64))
(declare-fun temp10301_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10301_194 () (_ BitVec 64))
(declare-fun temp10301_195 () (_ BitVec 64))
(declare-fun temp10301_197 () (_ BitVec 64))
(declare-fun temp10301_198 () (_ BitVec 64))
(declare-fun temp10301_196 () (_ BitVec 64))
(declare-fun temp10301_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10301_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10301_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10301_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10301_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10301_204 () (_ BitVec 64))
(declare-fun temp10301_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10301_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10301_207 () (_ BitVec 64))
(declare-fun temp10301_208 () (_ BitVec 64))
(declare-fun temp10301_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10301_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10301_211 () (_ BitVec 64))
(declare-fun temp10301_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10301_213 () (_ BitVec 64))
(declare-fun temp10301_214 () (_ BitVec 64))
(declare-fun temp10301_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10301_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10301_217 () (_ BitVec 64))
(declare-fun temp10301_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10301_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10301_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun var5845392 () (_ BitVec 64))
(declare-fun temp10301_221 () (_ BitVec 64))
(assert (= temp10301_1 #x0000000000000001))
(assert (= var77203 temp10301_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10301_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10301_2)))
(assert (= temp10301_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10301_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10301_4 #x0000000000000000))
(assert (= var210941 temp10301_4))
(assert (= temp10301_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10301_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10301_6 #x0000000000000000))
(assert (= var210986 temp10301_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10301_7 #x0000000000000000))
(assert (= temp10301_8 temp10301_7))
(assert (= temp10301_9 (select ARGNAME_padding_NAMEEND_VAL temp10301_8)))
(assert (= temp10301_10 #x0000000000000001))
(assert (= temp10301_11 temp10301_10))
(assert (= temp10301_12 (select ARGNAME_padding_NAMEEND_VAL temp10301_11)))
(assert (= temp10301_13 #x0000000000000002))
(assert (= temp10301_14 temp10301_13))
(assert (= temp10301_15 (select ARGNAME_padding_NAMEEND_VAL temp10301_14)))
(assert (= temp10301_16 #x0000000000000003))
(assert (= temp10301_17 temp10301_16))
(assert (= temp10301_18 (select ARGNAME_padding_NAMEEND_VAL temp10301_17)))
(assert (= temp10301_19 #x0000000000000004))
(assert (= temp10301_20 temp10301_19))
(assert (= temp10301_21 (select ARGNAME_padding_NAMEEND_VAL temp10301_20)))
(assert (= temp10301_22 #x0000000000000005))
(assert (= temp10301_23 temp10301_22))
(assert (= temp10301_24 (select ARGNAME_padding_NAMEEND_VAL temp10301_23)))
(assert (= temp10301_25 #x0000000000000000))
(assert (= temp10301_26 #x0000000000000000))
(assert (= temp10301_27 temp10301_26))
(assert (= temp10301_28 (select ARGNAME_padding_NAMEEND_VAL temp10301_27)))
(assert (= temp10301_29 #x0000000000000000))
(assert (= temp10301_30 #x0000000000000001))
(assert (= temp10301_31 temp10301_30))
(assert (= temp10301_32 (select ARGNAME_padding_NAMEEND_VAL temp10301_31)))
(assert (= temp10301_33 #x0000000000000000))
(assert (= temp10301_34 #x0000000000000002))
(assert (= temp10301_35 temp10301_34))
(assert (= temp10301_36 (select ARGNAME_padding_NAMEEND_VAL temp10301_35)))
(assert (= temp10301_37 #x0000000000000000))
(assert (= temp10301_38 #x0000000000000003))
(assert (= temp10301_39 temp10301_38))
(assert (= temp10301_40 (select ARGNAME_padding_NAMEEND_VAL temp10301_39)))
(assert (= temp10301_41 #x0000000000000000))
(assert (= temp10301_42 #x0000000000000004))
(assert (= temp10301_43 temp10301_42))
(assert (= temp10301_44 (select ARGNAME_padding_NAMEEND_VAL temp10301_43)))
(assert (= temp10301_45 #x0000000000000000))
(assert (= temp10301_46 #x0000000000000005))
(assert (= temp10301_47 temp10301_46))
(assert (= temp10301_48 (select ARGNAME_padding_NAMEEND_VAL temp10301_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10301_28 temp10301_25)
             (bvslt temp10301_32 temp10301_29)
             (bvslt temp10301_36 temp10301_33)
             (bvslt temp10301_40 temp10301_37)
             (bvslt temp10301_44 temp10301_41)
             (bvslt temp10301_48 temp10301_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10301_49 #x0000000000000000))
(assert (= var1191714 temp10301_49))
(assert (= temp10301_50 #x0000000000000000))
(assert (= temp10301_51 temp10301_50))
(assert (= temp10301_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10301_51)))
(assert (= temp10301_53 #x0000000000000001))
(assert (= temp10301_54 temp10301_53))
(assert (= temp10301_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10301_54)))
(assert (= temp10301_56 #x0000000000000002))
(assert (= temp10301_57 temp10301_56))
(assert (= temp10301_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10301_57)))
(assert (= temp10301_59 #x0000000000000003))
(assert (= temp10301_60 temp10301_59))
(assert (= temp10301_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10301_60)))
(assert (= temp10301_62 #x0000000000000004))
(assert (= temp10301_63 temp10301_62))
(assert (= temp10301_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10301_63)))
(assert (= temp10301_65 #x0000000000000005))
(assert (= temp10301_66 temp10301_65))
(assert (= temp10301_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10301_66)))
(assert (= temp10301_68 #x0000000000000000))
(assert (= temp10301_69 #x0000000000000000))
(assert (= temp10301_70 temp10301_69))
(assert (= temp10301_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10301_70)))
(assert (= temp10301_72 #x0000000000000000))
(assert (= temp10301_73 #x0000000000000001))
(assert (= temp10301_74 temp10301_73))
(assert (= temp10301_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10301_74)))
(assert (= temp10301_76 #x0000000000000000))
(assert (= temp10301_77 #x0000000000000002))
(assert (= temp10301_78 temp10301_77))
(assert (= temp10301_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10301_78)))
(assert (= temp10301_80 #x0000000000000000))
(assert (= temp10301_81 #x0000000000000003))
(assert (= temp10301_82 temp10301_81))
(assert (= temp10301_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10301_82)))
(assert (= temp10301_84 #x0000000000000000))
(assert (= temp10301_85 #x0000000000000004))
(assert (= temp10301_86 temp10301_85))
(assert (= temp10301_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10301_86)))
(assert (= temp10301_88 #x0000000000000000))
(assert (= temp10301_89 #x0000000000000005))
(assert (= temp10301_90 temp10301_89))
(assert (= temp10301_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10301_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10301_71 temp10301_68)
             (bvslt temp10301_75 temp10301_72)
             (bvslt temp10301_79 temp10301_76)
             (bvslt temp10301_83 temp10301_80)
             (bvslt temp10301_87 temp10301_84)
             (bvslt temp10301_91 temp10301_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10301_92 #x0000000000000000))
(assert (= var1191725 temp10301_92))
(assert (= temp10301_93 #x0000000000000000))
(assert (= temp10301_94 temp10301_93))
(assert (= temp10301_95 (select ARGNAME_stride_NAMEEND_VAL temp10301_94)))
(assert (= temp10301_96 #x0000000000000001))
(assert (= temp10301_97 temp10301_96))
(assert (= temp10301_98 (select ARGNAME_stride_NAMEEND_VAL temp10301_97)))
(assert (= temp10301_99 #x0000000000000002))
(assert (= temp10301_100 temp10301_99))
(assert (= temp10301_101 (select ARGNAME_stride_NAMEEND_VAL temp10301_100)))
(assert (= temp10301_102 #x0000000000000003))
(assert (= temp10301_103 temp10301_102))
(assert (= temp10301_104 (select ARGNAME_stride_NAMEEND_VAL temp10301_103)))
(assert (= temp10301_105 #x0000000000000004))
(assert (= temp10301_106 temp10301_105))
(assert (= temp10301_107 (select ARGNAME_stride_NAMEEND_VAL temp10301_106)))
(assert (= temp10301_108 #x0000000000000005))
(assert (= temp10301_109 temp10301_108))
(assert (= temp10301_110 (select ARGNAME_stride_NAMEEND_VAL temp10301_109)))
(assert (= temp10301_111 #x0000000000000000))
(assert (= temp10301_112 #x0000000000000000))
(assert (= temp10301_113 temp10301_112))
(assert (= temp10301_114 (select ARGNAME_stride_NAMEEND_VAL temp10301_113)))
(assert (= temp10301_115 #x0000000000000000))
(assert (= temp10301_116 #x0000000000000001))
(assert (= temp10301_117 temp10301_116))
(assert (= temp10301_118 (select ARGNAME_stride_NAMEEND_VAL temp10301_117)))
(assert (= temp10301_119 #x0000000000000000))
(assert (= temp10301_120 #x0000000000000002))
(assert (= temp10301_121 temp10301_120))
(assert (= temp10301_122 (select ARGNAME_stride_NAMEEND_VAL temp10301_121)))
(assert (= temp10301_123 #x0000000000000000))
(assert (= temp10301_124 #x0000000000000003))
(assert (= temp10301_125 temp10301_124))
(assert (= temp10301_126 (select ARGNAME_stride_NAMEEND_VAL temp10301_125)))
(assert (= temp10301_127 #x0000000000000000))
(assert (= temp10301_128 #x0000000000000004))
(assert (= temp10301_129 temp10301_128))
(assert (= temp10301_130 (select ARGNAME_stride_NAMEEND_VAL temp10301_129)))
(assert (= temp10301_131 #x0000000000000000))
(assert (= temp10301_132 #x0000000000000005))
(assert (= temp10301_133 temp10301_132))
(assert (= temp10301_134 (select ARGNAME_stride_NAMEEND_VAL temp10301_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10301_114 temp10301_111)
             (bvsle temp10301_118 temp10301_115)
             (bvsle temp10301_122 temp10301_119)
             (bvsle temp10301_126 temp10301_123)
             (bvsle temp10301_130 temp10301_127)
             (bvsle temp10301_134 temp10301_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10301_135 #x0000000000000000))
(assert (= var1191735 temp10301_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10301_136 #x0000000000000001))
(assert (= var1191747 temp10301_136))
(assert (= temp10301_137 #x0000000000000000))
(assert (= var1179826 temp10301_137))
(assert (= temp10301_138 #x0000000000000000))
(assert (= temp10301_139 temp10301_138))
(assert (= temp10301_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10301_139)))
(assert (= temp10301_141 #x0000000000000001))
(assert (= temp10301_142 temp10301_141))
(assert (= temp10301_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10301_142)))
(assert (= temp10301_144 #x0000000000000002))
(assert (= temp10301_145 temp10301_144))
(assert (= temp10301_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10301_145)))
(assert (= temp10301_147 #x0000000000000003))
(assert (= temp10301_148 temp10301_147))
(assert (= temp10301_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10301_148)))
(assert (= temp10301_150 #x0000000000000004))
(assert (= temp10301_151 temp10301_150))
(assert (= temp10301_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10301_151)))
(assert (= temp10301_153 #x0000000000000005))
(assert (= temp10301_154 temp10301_153))
(assert (= temp10301_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10301_154)))
(assert (= temp10301_157 var1179826))
(assert (= temp10301_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10301_157)))
(assert (= temp10301_156 temp10301_158))
(assert (= var1191780
   (ite (bvslt temp10301_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10301_159 #x0000000000000000))
(assert (= var1191780 temp10301_159))
(assert (= temp10301_160 #x0000000000000000))
(assert (= var1179826 temp10301_160))
(assert (= temp10301_162 var1179826))
(assert (= temp10301_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10301_162)))
(assert (= temp10301_161 temp10301_163))
(assert (= var1191802 (bvsmod temp10301_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10301_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10301_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10301_165 #x0000000000000001))
(assert (= var1191803 temp10301_165))
(assert (= temp10301_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10301_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10301_167 #x0000000000000001))
(assert (= var1191823 temp10301_167))
(assert (= temp10301_168 #x0000000000000001))
(assert (= var1180714 temp10301_168))
(assert (= temp10301_169 #x0000000000000000))
(assert (= temp10301_170 temp10301_169))
(assert (= temp10301_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10301_170)))
(assert (= temp10301_172 #x0000000000000001))
(assert (= temp10301_173 temp10301_172))
(assert (= temp10301_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10301_173)))
(assert (= temp10301_175 #x0000000000000002))
(assert (= temp10301_176 temp10301_175))
(assert (= temp10301_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10301_176)))
(assert (= temp10301_178 #x0000000000000003))
(assert (= temp10301_179 temp10301_178))
(assert (= temp10301_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10301_179)))
(assert (= temp10301_181 #x0000000000000004))
(assert (= temp10301_182 temp10301_181))
(assert (= temp10301_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10301_182)))
(assert (= temp10301_184 #x0000000000000005))
(assert (= temp10301_185 temp10301_184))
(assert (= temp10301_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10301_185)))
(assert (= temp10301_187 #x0000000000000000))
(assert (= temp10301_188
   (ite (bvslt var1180714 temp10301_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10301_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10301_188)))
(assert (= var1191831 temp10301_189))
(assert (bvslt (ite (bvslt var1180714 temp10301_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10301_190 #x0000000000000001))
(assert (= var1180714 temp10301_190))
(assert (= temp10301_192 var1180714))
(assert (= temp10301_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10301_192)))
(assert (= temp10301_191 temp10301_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10301_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10301_194 #x0000000000000001))
(assert (= var1191836 temp10301_194))
(assert (= temp10301_195 #x0000000000000000))
(assert (= var1179826 temp10301_195))
(assert (= temp10301_197 var1179826))
(assert (= temp10301_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10301_197)))
(assert (= temp10301_196 temp10301_198))
(assert (= temp10301_199 #x0000000000000002))
(assert (= var1586025 temp10301_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10301_200 #x0000000000000001))
(assert (= var1191993 temp10301_200))
(assert (= temp10301_201 #x0000000000000001))
(assert (= var2700303 temp10301_201))
(assert (= temp10301_202 #x0000000000000001))
(assert (= var2962447 temp10301_202))
(assert (= temp10301_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10301_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10301_204 #x0000000000000001))
(assert (= var211058 temp10301_204))
(assert (= temp10301_205 #x0000000000000001))
(assert (= var211188 temp10301_205))
(assert (= var3879401 var211188))
(assert (= temp10301_206 #x0000000000000000))
(assert (= var3866802 temp10301_206))
(assert (= temp10301_207 #x0000000000000000))
(assert (= temp10301_208
   (ite (bvslt var3866802 temp10301_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10301_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10301_208)))
(assert (= var3879420 temp10301_209))
(assert (bvslt (ite (bvslt var3866802 temp10301_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10301_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10301_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10301_211 #x0000000000000000))
(assert (= var3879421 temp10301_211))
(assert (= temp10301_212 #x0000000000000001))
(assert (= var3867690 temp10301_212))
(assert (= temp10301_213 #x0000000000000000))
(assert (= temp10301_214
   (ite (bvslt var3867690 temp10301_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10301_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10301_214)))
(assert (= var3879423 temp10301_215))
(assert (bvslt (ite (bvslt var3867690 temp10301_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10301_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10301_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10301_217 #x0000000000000001))
(assert (= var3879424 temp10301_217))
(assert (= temp10301_218 #x0000000000000000))
(assert (= var4079423 temp10301_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10301_219 #x0000000000000002))
(assert (= var4208259 temp10301_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10301_220 #x0000000000000000))
(assert (= var4273820 temp10301_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5583248 var211201))
(assert (= var5845392 var211201))
(assert (= temp10301_221 #x0000000000000001))
(assert (= var211058 temp10301_221))
(model-add temp10301_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10301_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10301_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10301_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






