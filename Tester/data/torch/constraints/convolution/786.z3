(declare-fun temp1048_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1048_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1048_3 () (_ BitVec 64))
(declare-fun temp1048_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1048_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1048_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1048_7 () (_ BitVec 64))
(declare-fun temp1048_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1048_9 () (_ BitVec 64))
(declare-fun temp1048_10 () (_ BitVec 64))
(declare-fun temp1048_11 () (_ BitVec 64))
(declare-fun temp1048_12 () (_ BitVec 64))
(declare-fun temp1048_13 () (_ BitVec 64))
(declare-fun temp1048_14 () (_ BitVec 64))
(declare-fun temp1048_15 () (_ BitVec 64))
(declare-fun temp1048_16 () (_ BitVec 64))
(declare-fun temp1048_17 () (_ BitVec 64))
(declare-fun temp1048_18 () (_ BitVec 64))
(declare-fun temp1048_19 () (_ BitVec 64))
(declare-fun temp1048_20 () (_ BitVec 64))
(declare-fun temp1048_21 () (_ BitVec 64))
(declare-fun temp1048_22 () (_ BitVec 64))
(declare-fun temp1048_23 () (_ BitVec 64))
(declare-fun temp1048_24 () (_ BitVec 64))
(declare-fun temp1048_25 () (_ BitVec 64))
(declare-fun temp1048_26 () (_ BitVec 64))
(declare-fun temp1048_27 () (_ BitVec 64))
(declare-fun temp1048_28 () (_ BitVec 64))
(declare-fun temp1048_29 () (_ BitVec 64))
(declare-fun temp1048_30 () (_ BitVec 64))
(declare-fun temp1048_31 () (_ BitVec 64))
(declare-fun temp1048_32 () (_ BitVec 64))
(declare-fun temp1048_33 () (_ BitVec 64))
(declare-fun temp1048_34 () (_ BitVec 64))
(declare-fun temp1048_35 () (_ BitVec 64))
(declare-fun temp1048_36 () (_ BitVec 64))
(declare-fun temp1048_37 () (_ BitVec 64))
(declare-fun temp1048_38 () (_ BitVec 64))
(declare-fun temp1048_39 () (_ BitVec 64))
(declare-fun temp1048_40 () (_ BitVec 64))
(declare-fun temp1048_41 () (_ BitVec 64))
(declare-fun temp1048_42 () (_ BitVec 64))
(declare-fun temp1048_43 () (_ BitVec 64))
(declare-fun temp1048_44 () (_ BitVec 64))
(declare-fun temp1048_45 () (_ BitVec 64))
(declare-fun temp1048_46 () (_ BitVec 64))
(declare-fun temp1048_47 () (_ BitVec 64))
(declare-fun temp1048_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1048_49 () (_ BitVec 64))
(declare-fun temp1048_50 () (_ BitVec 64))
(declare-fun temp1048_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1048_52 () (_ BitVec 64))
(declare-fun temp1048_53 () (_ BitVec 64))
(declare-fun temp1048_54 () (_ BitVec 64))
(declare-fun temp1048_55 () (_ BitVec 64))
(declare-fun temp1048_56 () (_ BitVec 64))
(declare-fun temp1048_57 () (_ BitVec 64))
(declare-fun temp1048_58 () (_ BitVec 64))
(declare-fun temp1048_59 () (_ BitVec 64))
(declare-fun temp1048_60 () (_ BitVec 64))
(declare-fun temp1048_61 () (_ BitVec 64))
(declare-fun temp1048_62 () (_ BitVec 64))
(declare-fun temp1048_63 () (_ BitVec 64))
(declare-fun temp1048_64 () (_ BitVec 64))
(declare-fun temp1048_65 () (_ BitVec 64))
(declare-fun temp1048_66 () (_ BitVec 64))
(declare-fun temp1048_67 () (_ BitVec 64))
(declare-fun temp1048_68 () (_ BitVec 64))
(declare-fun temp1048_69 () (_ BitVec 64))
(declare-fun temp1048_70 () (_ BitVec 64))
(declare-fun temp1048_71 () (_ BitVec 64))
(declare-fun temp1048_72 () (_ BitVec 64))
(declare-fun temp1048_73 () (_ BitVec 64))
(declare-fun temp1048_74 () (_ BitVec 64))
(declare-fun temp1048_75 () (_ BitVec 64))
(declare-fun temp1048_76 () (_ BitVec 64))
(declare-fun temp1048_77 () (_ BitVec 64))
(declare-fun temp1048_78 () (_ BitVec 64))
(declare-fun temp1048_79 () (_ BitVec 64))
(declare-fun temp1048_80 () (_ BitVec 64))
(declare-fun temp1048_81 () (_ BitVec 64))
(declare-fun temp1048_82 () (_ BitVec 64))
(declare-fun temp1048_83 () (_ BitVec 64))
(declare-fun temp1048_84 () (_ BitVec 64))
(declare-fun temp1048_85 () (_ BitVec 64))
(declare-fun temp1048_86 () (_ BitVec 64))
(declare-fun temp1048_87 () (_ BitVec 64))
(declare-fun temp1048_88 () (_ BitVec 64))
(declare-fun temp1048_89 () (_ BitVec 64))
(declare-fun temp1048_90 () (_ BitVec 64))
(declare-fun temp1048_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1048_92 () (_ BitVec 64))
(declare-fun temp1048_93 () (_ BitVec 64))
(declare-fun temp1048_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1048_95 () (_ BitVec 64))
(declare-fun temp1048_96 () (_ BitVec 64))
(declare-fun temp1048_97 () (_ BitVec 64))
(declare-fun temp1048_98 () (_ BitVec 64))
(declare-fun temp1048_99 () (_ BitVec 64))
(declare-fun temp1048_100 () (_ BitVec 64))
(declare-fun temp1048_101 () (_ BitVec 64))
(declare-fun temp1048_102 () (_ BitVec 64))
(declare-fun temp1048_103 () (_ BitVec 64))
(declare-fun temp1048_104 () (_ BitVec 64))
(declare-fun temp1048_105 () (_ BitVec 64))
(declare-fun temp1048_106 () (_ BitVec 64))
(declare-fun temp1048_107 () (_ BitVec 64))
(declare-fun temp1048_108 () (_ BitVec 64))
(declare-fun temp1048_109 () (_ BitVec 64))
(declare-fun temp1048_110 () (_ BitVec 64))
(declare-fun temp1048_111 () (_ BitVec 64))
(declare-fun temp1048_112 () (_ BitVec 64))
(declare-fun temp1048_113 () (_ BitVec 64))
(declare-fun temp1048_114 () (_ BitVec 64))
(declare-fun temp1048_115 () (_ BitVec 64))
(declare-fun temp1048_116 () (_ BitVec 64))
(declare-fun temp1048_117 () (_ BitVec 64))
(declare-fun temp1048_118 () (_ BitVec 64))
(declare-fun temp1048_119 () (_ BitVec 64))
(declare-fun temp1048_120 () (_ BitVec 64))
(declare-fun temp1048_121 () (_ BitVec 64))
(declare-fun temp1048_122 () (_ BitVec 64))
(declare-fun temp1048_123 () (_ BitVec 64))
(declare-fun temp1048_124 () (_ BitVec 64))
(declare-fun temp1048_125 () (_ BitVec 64))
(declare-fun temp1048_126 () (_ BitVec 64))
(declare-fun temp1048_127 () (_ BitVec 64))
(declare-fun temp1048_128 () (_ BitVec 64))
(declare-fun temp1048_129 () (_ BitVec 64))
(declare-fun temp1048_130 () (_ BitVec 64))
(declare-fun temp1048_131 () (_ BitVec 64))
(declare-fun temp1048_132 () (_ BitVec 64))
(declare-fun temp1048_133 () (_ BitVec 64))
(declare-fun temp1048_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1048_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1048_136 () (_ BitVec 64))
(declare-fun temp1048_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1048_138 () (_ BitVec 64))
(declare-fun temp1048_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1048_140 () (_ BitVec 64))
(declare-fun temp1048_141 () (_ BitVec 64))
(declare-fun temp1048_142 () (_ BitVec 64))
(declare-fun temp1048_143 () (_ BitVec 64))
(declare-fun temp1048_144 () (_ BitVec 64))
(declare-fun temp1048_145 () (_ BitVec 64))
(declare-fun temp1048_146 () (_ BitVec 64))
(declare-fun temp1048_147 () (_ BitVec 64))
(declare-fun temp1048_148 () (_ BitVec 64))
(declare-fun temp1048_149 () (_ BitVec 64))
(declare-fun temp1048_150 () (_ BitVec 64))
(declare-fun temp1048_151 () (_ BitVec 64))
(declare-fun temp1048_152 () (_ BitVec 64))
(declare-fun temp1048_153 () (_ BitVec 64))
(declare-fun temp1048_154 () (_ BitVec 64))
(declare-fun temp1048_155 () (_ BitVec 64))
(declare-fun temp1048_157 () (_ BitVec 64))
(declare-fun temp1048_158 () (_ BitVec 64))
(declare-fun temp1048_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1048_159 () (_ BitVec 64))
(declare-fun temp1048_160 () (_ BitVec 64))
(declare-fun temp1048_162 () (_ BitVec 64))
(declare-fun temp1048_163 () (_ BitVec 64))
(declare-fun temp1048_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1048_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1048_165 () (_ BitVec 64))
(declare-fun temp1048_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1048_167 () (_ BitVec 64))
(declare-fun temp1048_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1048_169 () (_ BitVec 64))
(declare-fun temp1048_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1048_171 () (_ BitVec 64))
(declare-fun temp1048_172 () (_ BitVec 64))
(declare-fun temp1048_173 () (_ BitVec 64))
(declare-fun temp1048_174 () (_ BitVec 64))
(declare-fun temp1048_175 () (_ BitVec 64))
(declare-fun temp1048_176 () (_ BitVec 64))
(declare-fun temp1048_177 () (_ BitVec 64))
(declare-fun temp1048_178 () (_ BitVec 64))
(declare-fun temp1048_179 () (_ BitVec 64))
(declare-fun temp1048_180 () (_ BitVec 64))
(declare-fun temp1048_181 () (_ BitVec 64))
(declare-fun temp1048_182 () (_ BitVec 64))
(declare-fun temp1048_183 () (_ BitVec 64))
(declare-fun temp1048_184 () (_ BitVec 64))
(declare-fun temp1048_185 () (_ BitVec 64))
(declare-fun temp1048_186 () (_ BitVec 64))
(declare-fun temp1048_187 () (_ BitVec 64))
(declare-fun temp1048_188 () (_ BitVec 64))
(declare-fun temp1048_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1048_190 () (_ BitVec 64))
(declare-fun temp1048_192 () (_ BitVec 64))
(declare-fun temp1048_193 () (_ BitVec 64))
(declare-fun temp1048_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1048_194 () (_ BitVec 64))
(declare-fun temp1048_195 () (_ BitVec 64))
(declare-fun temp1048_197 () (_ BitVec 64))
(declare-fun temp1048_198 () (_ BitVec 64))
(declare-fun temp1048_196 () (_ BitVec 64))
(declare-fun temp1048_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1048_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1048_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1048_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1048_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1048_204 () (_ BitVec 64))
(declare-fun temp1048_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1048_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1048_207 () (_ BitVec 64))
(declare-fun temp1048_208 () (_ BitVec 64))
(declare-fun temp1048_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1048_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1048_211 () (_ BitVec 64))
(declare-fun temp1048_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1048_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1048_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp1048_215 () (_ BitVec 64))
(assert (= temp1048_1 #x0000000000000001))
(assert (= var77203 temp1048_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1048_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1048_2)))
(assert (= temp1048_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1048_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1048_4 #x0000000000000000))
(assert (= var210941 temp1048_4))
(assert (= temp1048_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1048_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1048_6 #x0000000000000000))
(assert (= var210986 temp1048_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1048_7 #x0000000000000000))
(assert (= temp1048_8 temp1048_7))
(assert (= temp1048_9 (select ARGNAME_padding_NAMEEND_VAL temp1048_8)))
(assert (= temp1048_10 #x0000000000000001))
(assert (= temp1048_11 temp1048_10))
(assert (= temp1048_12 (select ARGNAME_padding_NAMEEND_VAL temp1048_11)))
(assert (= temp1048_13 #x0000000000000002))
(assert (= temp1048_14 temp1048_13))
(assert (= temp1048_15 (select ARGNAME_padding_NAMEEND_VAL temp1048_14)))
(assert (= temp1048_16 #x0000000000000003))
(assert (= temp1048_17 temp1048_16))
(assert (= temp1048_18 (select ARGNAME_padding_NAMEEND_VAL temp1048_17)))
(assert (= temp1048_19 #x0000000000000004))
(assert (= temp1048_20 temp1048_19))
(assert (= temp1048_21 (select ARGNAME_padding_NAMEEND_VAL temp1048_20)))
(assert (= temp1048_22 #x0000000000000005))
(assert (= temp1048_23 temp1048_22))
(assert (= temp1048_24 (select ARGNAME_padding_NAMEEND_VAL temp1048_23)))
(assert (= temp1048_25 #x0000000000000000))
(assert (= temp1048_26 #x0000000000000000))
(assert (= temp1048_27 temp1048_26))
(assert (= temp1048_28 (select ARGNAME_padding_NAMEEND_VAL temp1048_27)))
(assert (= temp1048_29 #x0000000000000000))
(assert (= temp1048_30 #x0000000000000001))
(assert (= temp1048_31 temp1048_30))
(assert (= temp1048_32 (select ARGNAME_padding_NAMEEND_VAL temp1048_31)))
(assert (= temp1048_33 #x0000000000000000))
(assert (= temp1048_34 #x0000000000000002))
(assert (= temp1048_35 temp1048_34))
(assert (= temp1048_36 (select ARGNAME_padding_NAMEEND_VAL temp1048_35)))
(assert (= temp1048_37 #x0000000000000000))
(assert (= temp1048_38 #x0000000000000003))
(assert (= temp1048_39 temp1048_38))
(assert (= temp1048_40 (select ARGNAME_padding_NAMEEND_VAL temp1048_39)))
(assert (= temp1048_41 #x0000000000000000))
(assert (= temp1048_42 #x0000000000000004))
(assert (= temp1048_43 temp1048_42))
(assert (= temp1048_44 (select ARGNAME_padding_NAMEEND_VAL temp1048_43)))
(assert (= temp1048_45 #x0000000000000000))
(assert (= temp1048_46 #x0000000000000005))
(assert (= temp1048_47 temp1048_46))
(assert (= temp1048_48 (select ARGNAME_padding_NAMEEND_VAL temp1048_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1048_28 temp1048_25)
             (bvslt temp1048_32 temp1048_29)
             (bvslt temp1048_36 temp1048_33)
             (bvslt temp1048_40 temp1048_37)
             (bvslt temp1048_44 temp1048_41)
             (bvslt temp1048_48 temp1048_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1048_49 #x0000000000000000))
(assert (= var1191714 temp1048_49))
(assert (= temp1048_50 #x0000000000000000))
(assert (= temp1048_51 temp1048_50))
(assert (= temp1048_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1048_51)))
(assert (= temp1048_53 #x0000000000000001))
(assert (= temp1048_54 temp1048_53))
(assert (= temp1048_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1048_54)))
(assert (= temp1048_56 #x0000000000000002))
(assert (= temp1048_57 temp1048_56))
(assert (= temp1048_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1048_57)))
(assert (= temp1048_59 #x0000000000000003))
(assert (= temp1048_60 temp1048_59))
(assert (= temp1048_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1048_60)))
(assert (= temp1048_62 #x0000000000000004))
(assert (= temp1048_63 temp1048_62))
(assert (= temp1048_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1048_63)))
(assert (= temp1048_65 #x0000000000000005))
(assert (= temp1048_66 temp1048_65))
(assert (= temp1048_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1048_66)))
(assert (= temp1048_68 #x0000000000000000))
(assert (= temp1048_69 #x0000000000000000))
(assert (= temp1048_70 temp1048_69))
(assert (= temp1048_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1048_70)))
(assert (= temp1048_72 #x0000000000000000))
(assert (= temp1048_73 #x0000000000000001))
(assert (= temp1048_74 temp1048_73))
(assert (= temp1048_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1048_74)))
(assert (= temp1048_76 #x0000000000000000))
(assert (= temp1048_77 #x0000000000000002))
(assert (= temp1048_78 temp1048_77))
(assert (= temp1048_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1048_78)))
(assert (= temp1048_80 #x0000000000000000))
(assert (= temp1048_81 #x0000000000000003))
(assert (= temp1048_82 temp1048_81))
(assert (= temp1048_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1048_82)))
(assert (= temp1048_84 #x0000000000000000))
(assert (= temp1048_85 #x0000000000000004))
(assert (= temp1048_86 temp1048_85))
(assert (= temp1048_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1048_86)))
(assert (= temp1048_88 #x0000000000000000))
(assert (= temp1048_89 #x0000000000000005))
(assert (= temp1048_90 temp1048_89))
(assert (= temp1048_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1048_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1048_71 temp1048_68)
             (bvslt temp1048_75 temp1048_72)
             (bvslt temp1048_79 temp1048_76)
             (bvslt temp1048_83 temp1048_80)
             (bvslt temp1048_87 temp1048_84)
             (bvslt temp1048_91 temp1048_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1048_92 #x0000000000000000))
(assert (= var1191725 temp1048_92))
(assert (= temp1048_93 #x0000000000000000))
(assert (= temp1048_94 temp1048_93))
(assert (= temp1048_95 (select ARGNAME_stride_NAMEEND_VAL temp1048_94)))
(assert (= temp1048_96 #x0000000000000001))
(assert (= temp1048_97 temp1048_96))
(assert (= temp1048_98 (select ARGNAME_stride_NAMEEND_VAL temp1048_97)))
(assert (= temp1048_99 #x0000000000000002))
(assert (= temp1048_100 temp1048_99))
(assert (= temp1048_101 (select ARGNAME_stride_NAMEEND_VAL temp1048_100)))
(assert (= temp1048_102 #x0000000000000003))
(assert (= temp1048_103 temp1048_102))
(assert (= temp1048_104 (select ARGNAME_stride_NAMEEND_VAL temp1048_103)))
(assert (= temp1048_105 #x0000000000000004))
(assert (= temp1048_106 temp1048_105))
(assert (= temp1048_107 (select ARGNAME_stride_NAMEEND_VAL temp1048_106)))
(assert (= temp1048_108 #x0000000000000005))
(assert (= temp1048_109 temp1048_108))
(assert (= temp1048_110 (select ARGNAME_stride_NAMEEND_VAL temp1048_109)))
(assert (= temp1048_111 #x0000000000000000))
(assert (= temp1048_112 #x0000000000000000))
(assert (= temp1048_113 temp1048_112))
(assert (= temp1048_114 (select ARGNAME_stride_NAMEEND_VAL temp1048_113)))
(assert (= temp1048_115 #x0000000000000000))
(assert (= temp1048_116 #x0000000000000001))
(assert (= temp1048_117 temp1048_116))
(assert (= temp1048_118 (select ARGNAME_stride_NAMEEND_VAL temp1048_117)))
(assert (= temp1048_119 #x0000000000000000))
(assert (= temp1048_120 #x0000000000000002))
(assert (= temp1048_121 temp1048_120))
(assert (= temp1048_122 (select ARGNAME_stride_NAMEEND_VAL temp1048_121)))
(assert (= temp1048_123 #x0000000000000000))
(assert (= temp1048_124 #x0000000000000003))
(assert (= temp1048_125 temp1048_124))
(assert (= temp1048_126 (select ARGNAME_stride_NAMEEND_VAL temp1048_125)))
(assert (= temp1048_127 #x0000000000000000))
(assert (= temp1048_128 #x0000000000000004))
(assert (= temp1048_129 temp1048_128))
(assert (= temp1048_130 (select ARGNAME_stride_NAMEEND_VAL temp1048_129)))
(assert (= temp1048_131 #x0000000000000000))
(assert (= temp1048_132 #x0000000000000005))
(assert (= temp1048_133 temp1048_132))
(assert (= temp1048_134 (select ARGNAME_stride_NAMEEND_VAL temp1048_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1048_114 temp1048_111)
             (bvsle temp1048_118 temp1048_115)
             (bvsle temp1048_122 temp1048_119)
             (bvsle temp1048_126 temp1048_123)
             (bvsle temp1048_130 temp1048_127)
             (bvsle temp1048_134 temp1048_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1048_135 #x0000000000000000))
(assert (= var1191735 temp1048_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1048_136 #x0000000000000001))
(assert (= var1191747 temp1048_136))
(assert (= temp1048_137 #x0000000000000000))
(assert (= var1179826 temp1048_137))
(assert (= temp1048_138 #x0000000000000000))
(assert (= temp1048_139 temp1048_138))
(assert (= temp1048_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1048_139)))
(assert (= temp1048_141 #x0000000000000001))
(assert (= temp1048_142 temp1048_141))
(assert (= temp1048_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1048_142)))
(assert (= temp1048_144 #x0000000000000002))
(assert (= temp1048_145 temp1048_144))
(assert (= temp1048_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1048_145)))
(assert (= temp1048_147 #x0000000000000003))
(assert (= temp1048_148 temp1048_147))
(assert (= temp1048_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1048_148)))
(assert (= temp1048_150 #x0000000000000004))
(assert (= temp1048_151 temp1048_150))
(assert (= temp1048_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1048_151)))
(assert (= temp1048_153 #x0000000000000005))
(assert (= temp1048_154 temp1048_153))
(assert (= temp1048_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1048_154)))
(assert (= temp1048_157 var1179826))
(assert (= temp1048_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1048_157)))
(assert (= temp1048_156 temp1048_158))
(assert (= var1191780
   (ite (bvslt temp1048_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1048_159 #x0000000000000000))
(assert (= var1191780 temp1048_159))
(assert (= temp1048_160 #x0000000000000000))
(assert (= var1179826 temp1048_160))
(assert (= temp1048_162 var1179826))
(assert (= temp1048_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1048_162)))
(assert (= temp1048_161 temp1048_163))
(assert (= var1191802 (bvsmod temp1048_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1048_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1048_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1048_165 #x0000000000000001))
(assert (= var1191803 temp1048_165))
(assert (= temp1048_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1048_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1048_167 #x0000000000000001))
(assert (= var1191823 temp1048_167))
(assert (= temp1048_168 #x0000000000000001))
(assert (= var1180714 temp1048_168))
(assert (= temp1048_169 #x0000000000000000))
(assert (= temp1048_170 temp1048_169))
(assert (= temp1048_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1048_170)))
(assert (= temp1048_172 #x0000000000000001))
(assert (= temp1048_173 temp1048_172))
(assert (= temp1048_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1048_173)))
(assert (= temp1048_175 #x0000000000000002))
(assert (= temp1048_176 temp1048_175))
(assert (= temp1048_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1048_176)))
(assert (= temp1048_178 #x0000000000000003))
(assert (= temp1048_179 temp1048_178))
(assert (= temp1048_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1048_179)))
(assert (= temp1048_181 #x0000000000000004))
(assert (= temp1048_182 temp1048_181))
(assert (= temp1048_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1048_182)))
(assert (= temp1048_184 #x0000000000000005))
(assert (= temp1048_185 temp1048_184))
(assert (= temp1048_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1048_185)))
(assert (= temp1048_187 #x0000000000000000))
(assert (= temp1048_188
   (ite (bvslt var1180714 temp1048_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1048_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1048_188)))
(assert (= var1191831 temp1048_189))
(assert (bvslt (ite (bvslt var1180714 temp1048_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1048_190 #x0000000000000001))
(assert (= var1180714 temp1048_190))
(assert (= temp1048_192 var1180714))
(assert (= temp1048_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1048_192)))
(assert (= temp1048_191 temp1048_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1048_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1048_194 #x0000000000000001))
(assert (= var1191836 temp1048_194))
(assert (= temp1048_195 #x0000000000000000))
(assert (= var1179826 temp1048_195))
(assert (= temp1048_197 var1179826))
(assert (= temp1048_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1048_197)))
(assert (= temp1048_196 temp1048_198))
(assert (= temp1048_199 #x0000000000000002))
(assert (= var1586025 temp1048_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1048_200 #x0000000000000001))
(assert (= var1191993 temp1048_200))
(assert (= temp1048_201 #x0000000000000001))
(assert (= var2700303 temp1048_201))
(assert (= temp1048_202 #x0000000000000001))
(assert (= var2962447 temp1048_202))
(assert (= temp1048_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1048_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1048_204 #x0000000000000001))
(assert (= var211058 temp1048_204))
(assert (= temp1048_205 #x0000000000000001))
(assert (= var211188 temp1048_205))
(assert (= var3879401 var211188))
(assert (= temp1048_206 #x0000000000000000))
(assert (= var3866802 temp1048_206))
(assert (= temp1048_207 #x0000000000000000))
(assert (= temp1048_208
   (ite (bvslt var3866802 temp1048_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1048_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1048_208)))
(assert (= var3879420 temp1048_209))
(assert (bvslt (ite (bvslt var3866802 temp1048_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1048_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1048_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1048_211 #x0000000000000001))
(assert (= var3879421 temp1048_211))
(assert (= temp1048_212 #x0000000000000000))
(assert (= var4079423 temp1048_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1048_213 #x0000000000000002))
(assert (= var4208259 temp1048_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1048_214 #x0000000000000000))
(assert (= var4273820 temp1048_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp1048_215 #x0000000000000001))
(assert (= var211058 temp1048_215))
(model-add temp1048_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1048_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1048_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1048_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




