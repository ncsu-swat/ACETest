(declare-fun temp10228_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10228_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10228_3 () (_ BitVec 64))
(declare-fun temp10228_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10228_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10228_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10228_7 () (_ BitVec 64))
(declare-fun temp10228_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10228_9 () (_ BitVec 64))
(declare-fun temp10228_10 () (_ BitVec 64))
(declare-fun temp10228_11 () (_ BitVec 64))
(declare-fun temp10228_12 () (_ BitVec 64))
(declare-fun temp10228_13 () (_ BitVec 64))
(declare-fun temp10228_14 () (_ BitVec 64))
(declare-fun temp10228_15 () (_ BitVec 64))
(declare-fun temp10228_16 () (_ BitVec 64))
(declare-fun temp10228_17 () (_ BitVec 64))
(declare-fun temp10228_18 () (_ BitVec 64))
(declare-fun temp10228_19 () (_ BitVec 64))
(declare-fun temp10228_20 () (_ BitVec 64))
(declare-fun temp10228_21 () (_ BitVec 64))
(declare-fun temp10228_22 () (_ BitVec 64))
(declare-fun temp10228_23 () (_ BitVec 64))
(declare-fun temp10228_24 () (_ BitVec 64))
(declare-fun temp10228_25 () (_ BitVec 64))
(declare-fun temp10228_26 () (_ BitVec 64))
(declare-fun temp10228_27 () (_ BitVec 64))
(declare-fun temp10228_28 () (_ BitVec 64))
(declare-fun temp10228_29 () (_ BitVec 64))
(declare-fun temp10228_30 () (_ BitVec 64))
(declare-fun temp10228_31 () (_ BitVec 64))
(declare-fun temp10228_32 () (_ BitVec 64))
(declare-fun temp10228_33 () (_ BitVec 64))
(declare-fun temp10228_34 () (_ BitVec 64))
(declare-fun temp10228_35 () (_ BitVec 64))
(declare-fun temp10228_36 () (_ BitVec 64))
(declare-fun temp10228_37 () (_ BitVec 64))
(declare-fun temp10228_38 () (_ BitVec 64))
(declare-fun temp10228_39 () (_ BitVec 64))
(declare-fun temp10228_40 () (_ BitVec 64))
(declare-fun temp10228_41 () (_ BitVec 64))
(declare-fun temp10228_42 () (_ BitVec 64))
(declare-fun temp10228_43 () (_ BitVec 64))
(declare-fun temp10228_44 () (_ BitVec 64))
(declare-fun temp10228_45 () (_ BitVec 64))
(declare-fun temp10228_46 () (_ BitVec 64))
(declare-fun temp10228_47 () (_ BitVec 64))
(declare-fun temp10228_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10228_49 () (_ BitVec 64))
(declare-fun temp10228_50 () (_ BitVec 64))
(declare-fun temp10228_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10228_52 () (_ BitVec 64))
(declare-fun temp10228_53 () (_ BitVec 64))
(declare-fun temp10228_54 () (_ BitVec 64))
(declare-fun temp10228_55 () (_ BitVec 64))
(declare-fun temp10228_56 () (_ BitVec 64))
(declare-fun temp10228_57 () (_ BitVec 64))
(declare-fun temp10228_58 () (_ BitVec 64))
(declare-fun temp10228_59 () (_ BitVec 64))
(declare-fun temp10228_60 () (_ BitVec 64))
(declare-fun temp10228_61 () (_ BitVec 64))
(declare-fun temp10228_62 () (_ BitVec 64))
(declare-fun temp10228_63 () (_ BitVec 64))
(declare-fun temp10228_64 () (_ BitVec 64))
(declare-fun temp10228_65 () (_ BitVec 64))
(declare-fun temp10228_66 () (_ BitVec 64))
(declare-fun temp10228_67 () (_ BitVec 64))
(declare-fun temp10228_68 () (_ BitVec 64))
(declare-fun temp10228_69 () (_ BitVec 64))
(declare-fun temp10228_70 () (_ BitVec 64))
(declare-fun temp10228_71 () (_ BitVec 64))
(declare-fun temp10228_72 () (_ BitVec 64))
(declare-fun temp10228_73 () (_ BitVec 64))
(declare-fun temp10228_74 () (_ BitVec 64))
(declare-fun temp10228_75 () (_ BitVec 64))
(declare-fun temp10228_76 () (_ BitVec 64))
(declare-fun temp10228_77 () (_ BitVec 64))
(declare-fun temp10228_78 () (_ BitVec 64))
(declare-fun temp10228_79 () (_ BitVec 64))
(declare-fun temp10228_80 () (_ BitVec 64))
(declare-fun temp10228_81 () (_ BitVec 64))
(declare-fun temp10228_82 () (_ BitVec 64))
(declare-fun temp10228_83 () (_ BitVec 64))
(declare-fun temp10228_84 () (_ BitVec 64))
(declare-fun temp10228_85 () (_ BitVec 64))
(declare-fun temp10228_86 () (_ BitVec 64))
(declare-fun temp10228_87 () (_ BitVec 64))
(declare-fun temp10228_88 () (_ BitVec 64))
(declare-fun temp10228_89 () (_ BitVec 64))
(declare-fun temp10228_90 () (_ BitVec 64))
(declare-fun temp10228_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10228_92 () (_ BitVec 64))
(declare-fun temp10228_93 () (_ BitVec 64))
(declare-fun temp10228_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10228_95 () (_ BitVec 64))
(declare-fun temp10228_96 () (_ BitVec 64))
(declare-fun temp10228_97 () (_ BitVec 64))
(declare-fun temp10228_98 () (_ BitVec 64))
(declare-fun temp10228_99 () (_ BitVec 64))
(declare-fun temp10228_100 () (_ BitVec 64))
(declare-fun temp10228_101 () (_ BitVec 64))
(declare-fun temp10228_102 () (_ BitVec 64))
(declare-fun temp10228_103 () (_ BitVec 64))
(declare-fun temp10228_104 () (_ BitVec 64))
(declare-fun temp10228_105 () (_ BitVec 64))
(declare-fun temp10228_106 () (_ BitVec 64))
(declare-fun temp10228_107 () (_ BitVec 64))
(declare-fun temp10228_108 () (_ BitVec 64))
(declare-fun temp10228_109 () (_ BitVec 64))
(declare-fun temp10228_110 () (_ BitVec 64))
(declare-fun temp10228_111 () (_ BitVec 64))
(declare-fun temp10228_112 () (_ BitVec 64))
(declare-fun temp10228_113 () (_ BitVec 64))
(declare-fun temp10228_114 () (_ BitVec 64))
(declare-fun temp10228_115 () (_ BitVec 64))
(declare-fun temp10228_116 () (_ BitVec 64))
(declare-fun temp10228_117 () (_ BitVec 64))
(declare-fun temp10228_118 () (_ BitVec 64))
(declare-fun temp10228_119 () (_ BitVec 64))
(declare-fun temp10228_120 () (_ BitVec 64))
(declare-fun temp10228_121 () (_ BitVec 64))
(declare-fun temp10228_122 () (_ BitVec 64))
(declare-fun temp10228_123 () (_ BitVec 64))
(declare-fun temp10228_124 () (_ BitVec 64))
(declare-fun temp10228_125 () (_ BitVec 64))
(declare-fun temp10228_126 () (_ BitVec 64))
(declare-fun temp10228_127 () (_ BitVec 64))
(declare-fun temp10228_128 () (_ BitVec 64))
(declare-fun temp10228_129 () (_ BitVec 64))
(declare-fun temp10228_130 () (_ BitVec 64))
(declare-fun temp10228_131 () (_ BitVec 64))
(declare-fun temp10228_132 () (_ BitVec 64))
(declare-fun temp10228_133 () (_ BitVec 64))
(declare-fun temp10228_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10228_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10228_136 () (_ BitVec 64))
(declare-fun temp10228_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10228_138 () (_ BitVec 64))
(declare-fun temp10228_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10228_140 () (_ BitVec 64))
(declare-fun temp10228_141 () (_ BitVec 64))
(declare-fun temp10228_142 () (_ BitVec 64))
(declare-fun temp10228_143 () (_ BitVec 64))
(declare-fun temp10228_144 () (_ BitVec 64))
(declare-fun temp10228_145 () (_ BitVec 64))
(declare-fun temp10228_146 () (_ BitVec 64))
(declare-fun temp10228_147 () (_ BitVec 64))
(declare-fun temp10228_148 () (_ BitVec 64))
(declare-fun temp10228_149 () (_ BitVec 64))
(declare-fun temp10228_150 () (_ BitVec 64))
(declare-fun temp10228_151 () (_ BitVec 64))
(declare-fun temp10228_152 () (_ BitVec 64))
(declare-fun temp10228_153 () (_ BitVec 64))
(declare-fun temp10228_154 () (_ BitVec 64))
(declare-fun temp10228_155 () (_ BitVec 64))
(declare-fun temp10228_157 () (_ BitVec 64))
(declare-fun temp10228_158 () (_ BitVec 64))
(declare-fun temp10228_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10228_159 () (_ BitVec 64))
(declare-fun temp10228_160 () (_ BitVec 64))
(declare-fun temp10228_162 () (_ BitVec 64))
(declare-fun temp10228_163 () (_ BitVec 64))
(declare-fun temp10228_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10228_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10228_165 () (_ BitVec 64))
(declare-fun temp10228_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10228_167 () (_ BitVec 64))
(declare-fun temp10228_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10228_169 () (_ BitVec 64))
(declare-fun temp10228_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10228_171 () (_ BitVec 64))
(declare-fun temp10228_172 () (_ BitVec 64))
(declare-fun temp10228_173 () (_ BitVec 64))
(declare-fun temp10228_174 () (_ BitVec 64))
(declare-fun temp10228_175 () (_ BitVec 64))
(declare-fun temp10228_176 () (_ BitVec 64))
(declare-fun temp10228_177 () (_ BitVec 64))
(declare-fun temp10228_178 () (_ BitVec 64))
(declare-fun temp10228_179 () (_ BitVec 64))
(declare-fun temp10228_180 () (_ BitVec 64))
(declare-fun temp10228_181 () (_ BitVec 64))
(declare-fun temp10228_182 () (_ BitVec 64))
(declare-fun temp10228_183 () (_ BitVec 64))
(declare-fun temp10228_184 () (_ BitVec 64))
(declare-fun temp10228_185 () (_ BitVec 64))
(declare-fun temp10228_186 () (_ BitVec 64))
(declare-fun temp10228_187 () (_ BitVec 64))
(declare-fun temp10228_188 () (_ BitVec 64))
(declare-fun temp10228_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10228_190 () (_ BitVec 64))
(declare-fun temp10228_192 () (_ BitVec 64))
(declare-fun temp10228_193 () (_ BitVec 64))
(declare-fun temp10228_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10228_194 () (_ BitVec 64))
(declare-fun temp10228_195 () (_ BitVec 64))
(declare-fun temp10228_197 () (_ BitVec 64))
(declare-fun temp10228_198 () (_ BitVec 64))
(declare-fun temp10228_196 () (_ BitVec 64))
(declare-fun temp10228_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10228_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10228_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10228_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10228_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10228_204 () (_ BitVec 64))
(declare-fun temp10228_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10228_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10228_207 () (_ BitVec 64))
(declare-fun temp10228_208 () (_ BitVec 64))
(declare-fun temp10228_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10228_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10228_211 () (_ BitVec 64))
(declare-fun temp10228_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10228_213 () (_ BitVec 64))
(declare-fun temp10228_214 () (_ BitVec 64))
(declare-fun temp10228_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10228_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10228_217 () (_ BitVec 64))
(declare-fun temp10228_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10228_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10228_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp10228_221 () (_ BitVec 64))
(declare-fun temp10228_222 () (_ BitVec 64))
(declare-fun var7222036 () (_ BitVec 64))
(declare-fun var7222003 () (_ BitVec 64))
(declare-fun var7090567 () (_ BitVec 64))
(declare-fun var7090563 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10228_223 () (_ BitVec 64))
(assert (= temp10228_1 #x0000000000000001))
(assert (= var77203 temp10228_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10228_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10228_2)))
(assert (= temp10228_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10228_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10228_4 #x0000000000000000))
(assert (= var210941 temp10228_4))
(assert (= temp10228_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10228_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10228_6 #x0000000000000000))
(assert (= var210986 temp10228_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10228_7 #x0000000000000000))
(assert (= temp10228_8 temp10228_7))
(assert (= temp10228_9 (select ARGNAME_padding_NAMEEND_VAL temp10228_8)))
(assert (= temp10228_10 #x0000000000000001))
(assert (= temp10228_11 temp10228_10))
(assert (= temp10228_12 (select ARGNAME_padding_NAMEEND_VAL temp10228_11)))
(assert (= temp10228_13 #x0000000000000002))
(assert (= temp10228_14 temp10228_13))
(assert (= temp10228_15 (select ARGNAME_padding_NAMEEND_VAL temp10228_14)))
(assert (= temp10228_16 #x0000000000000003))
(assert (= temp10228_17 temp10228_16))
(assert (= temp10228_18 (select ARGNAME_padding_NAMEEND_VAL temp10228_17)))
(assert (= temp10228_19 #x0000000000000004))
(assert (= temp10228_20 temp10228_19))
(assert (= temp10228_21 (select ARGNAME_padding_NAMEEND_VAL temp10228_20)))
(assert (= temp10228_22 #x0000000000000005))
(assert (= temp10228_23 temp10228_22))
(assert (= temp10228_24 (select ARGNAME_padding_NAMEEND_VAL temp10228_23)))
(assert (= temp10228_25 #x0000000000000000))
(assert (= temp10228_26 #x0000000000000000))
(assert (= temp10228_27 temp10228_26))
(assert (= temp10228_28 (select ARGNAME_padding_NAMEEND_VAL temp10228_27)))
(assert (= temp10228_29 #x0000000000000000))
(assert (= temp10228_30 #x0000000000000001))
(assert (= temp10228_31 temp10228_30))
(assert (= temp10228_32 (select ARGNAME_padding_NAMEEND_VAL temp10228_31)))
(assert (= temp10228_33 #x0000000000000000))
(assert (= temp10228_34 #x0000000000000002))
(assert (= temp10228_35 temp10228_34))
(assert (= temp10228_36 (select ARGNAME_padding_NAMEEND_VAL temp10228_35)))
(assert (= temp10228_37 #x0000000000000000))
(assert (= temp10228_38 #x0000000000000003))
(assert (= temp10228_39 temp10228_38))
(assert (= temp10228_40 (select ARGNAME_padding_NAMEEND_VAL temp10228_39)))
(assert (= temp10228_41 #x0000000000000000))
(assert (= temp10228_42 #x0000000000000004))
(assert (= temp10228_43 temp10228_42))
(assert (= temp10228_44 (select ARGNAME_padding_NAMEEND_VAL temp10228_43)))
(assert (= temp10228_45 #x0000000000000000))
(assert (= temp10228_46 #x0000000000000005))
(assert (= temp10228_47 temp10228_46))
(assert (= temp10228_48 (select ARGNAME_padding_NAMEEND_VAL temp10228_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10228_28 temp10228_25)
             (bvslt temp10228_32 temp10228_29)
             (bvslt temp10228_36 temp10228_33)
             (bvslt temp10228_40 temp10228_37)
             (bvslt temp10228_44 temp10228_41)
             (bvslt temp10228_48 temp10228_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10228_49 #x0000000000000000))
(assert (= var1191714 temp10228_49))
(assert (= temp10228_50 #x0000000000000000))
(assert (= temp10228_51 temp10228_50))
(assert (= temp10228_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10228_51)))
(assert (= temp10228_53 #x0000000000000001))
(assert (= temp10228_54 temp10228_53))
(assert (= temp10228_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10228_54)))
(assert (= temp10228_56 #x0000000000000002))
(assert (= temp10228_57 temp10228_56))
(assert (= temp10228_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10228_57)))
(assert (= temp10228_59 #x0000000000000003))
(assert (= temp10228_60 temp10228_59))
(assert (= temp10228_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10228_60)))
(assert (= temp10228_62 #x0000000000000004))
(assert (= temp10228_63 temp10228_62))
(assert (= temp10228_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10228_63)))
(assert (= temp10228_65 #x0000000000000005))
(assert (= temp10228_66 temp10228_65))
(assert (= temp10228_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10228_66)))
(assert (= temp10228_68 #x0000000000000000))
(assert (= temp10228_69 #x0000000000000000))
(assert (= temp10228_70 temp10228_69))
(assert (= temp10228_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10228_70)))
(assert (= temp10228_72 #x0000000000000000))
(assert (= temp10228_73 #x0000000000000001))
(assert (= temp10228_74 temp10228_73))
(assert (= temp10228_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10228_74)))
(assert (= temp10228_76 #x0000000000000000))
(assert (= temp10228_77 #x0000000000000002))
(assert (= temp10228_78 temp10228_77))
(assert (= temp10228_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10228_78)))
(assert (= temp10228_80 #x0000000000000000))
(assert (= temp10228_81 #x0000000000000003))
(assert (= temp10228_82 temp10228_81))
(assert (= temp10228_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10228_82)))
(assert (= temp10228_84 #x0000000000000000))
(assert (= temp10228_85 #x0000000000000004))
(assert (= temp10228_86 temp10228_85))
(assert (= temp10228_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10228_86)))
(assert (= temp10228_88 #x0000000000000000))
(assert (= temp10228_89 #x0000000000000005))
(assert (= temp10228_90 temp10228_89))
(assert (= temp10228_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10228_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10228_71 temp10228_68)
             (bvslt temp10228_75 temp10228_72)
             (bvslt temp10228_79 temp10228_76)
             (bvslt temp10228_83 temp10228_80)
             (bvslt temp10228_87 temp10228_84)
             (bvslt temp10228_91 temp10228_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10228_92 #x0000000000000000))
(assert (= var1191725 temp10228_92))
(assert (= temp10228_93 #x0000000000000000))
(assert (= temp10228_94 temp10228_93))
(assert (= temp10228_95 (select ARGNAME_stride_NAMEEND_VAL temp10228_94)))
(assert (= temp10228_96 #x0000000000000001))
(assert (= temp10228_97 temp10228_96))
(assert (= temp10228_98 (select ARGNAME_stride_NAMEEND_VAL temp10228_97)))
(assert (= temp10228_99 #x0000000000000002))
(assert (= temp10228_100 temp10228_99))
(assert (= temp10228_101 (select ARGNAME_stride_NAMEEND_VAL temp10228_100)))
(assert (= temp10228_102 #x0000000000000003))
(assert (= temp10228_103 temp10228_102))
(assert (= temp10228_104 (select ARGNAME_stride_NAMEEND_VAL temp10228_103)))
(assert (= temp10228_105 #x0000000000000004))
(assert (= temp10228_106 temp10228_105))
(assert (= temp10228_107 (select ARGNAME_stride_NAMEEND_VAL temp10228_106)))
(assert (= temp10228_108 #x0000000000000005))
(assert (= temp10228_109 temp10228_108))
(assert (= temp10228_110 (select ARGNAME_stride_NAMEEND_VAL temp10228_109)))
(assert (= temp10228_111 #x0000000000000000))
(assert (= temp10228_112 #x0000000000000000))
(assert (= temp10228_113 temp10228_112))
(assert (= temp10228_114 (select ARGNAME_stride_NAMEEND_VAL temp10228_113)))
(assert (= temp10228_115 #x0000000000000000))
(assert (= temp10228_116 #x0000000000000001))
(assert (= temp10228_117 temp10228_116))
(assert (= temp10228_118 (select ARGNAME_stride_NAMEEND_VAL temp10228_117)))
(assert (= temp10228_119 #x0000000000000000))
(assert (= temp10228_120 #x0000000000000002))
(assert (= temp10228_121 temp10228_120))
(assert (= temp10228_122 (select ARGNAME_stride_NAMEEND_VAL temp10228_121)))
(assert (= temp10228_123 #x0000000000000000))
(assert (= temp10228_124 #x0000000000000003))
(assert (= temp10228_125 temp10228_124))
(assert (= temp10228_126 (select ARGNAME_stride_NAMEEND_VAL temp10228_125)))
(assert (= temp10228_127 #x0000000000000000))
(assert (= temp10228_128 #x0000000000000004))
(assert (= temp10228_129 temp10228_128))
(assert (= temp10228_130 (select ARGNAME_stride_NAMEEND_VAL temp10228_129)))
(assert (= temp10228_131 #x0000000000000000))
(assert (= temp10228_132 #x0000000000000005))
(assert (= temp10228_133 temp10228_132))
(assert (= temp10228_134 (select ARGNAME_stride_NAMEEND_VAL temp10228_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10228_114 temp10228_111)
             (bvsle temp10228_118 temp10228_115)
             (bvsle temp10228_122 temp10228_119)
             (bvsle temp10228_126 temp10228_123)
             (bvsle temp10228_130 temp10228_127)
             (bvsle temp10228_134 temp10228_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10228_135 #x0000000000000000))
(assert (= var1191735 temp10228_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10228_136 #x0000000000000001))
(assert (= var1191747 temp10228_136))
(assert (= temp10228_137 #x0000000000000000))
(assert (= var1179826 temp10228_137))
(assert (= temp10228_138 #x0000000000000000))
(assert (= temp10228_139 temp10228_138))
(assert (= temp10228_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10228_139)))
(assert (= temp10228_141 #x0000000000000001))
(assert (= temp10228_142 temp10228_141))
(assert (= temp10228_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10228_142)))
(assert (= temp10228_144 #x0000000000000002))
(assert (= temp10228_145 temp10228_144))
(assert (= temp10228_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10228_145)))
(assert (= temp10228_147 #x0000000000000003))
(assert (= temp10228_148 temp10228_147))
(assert (= temp10228_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10228_148)))
(assert (= temp10228_150 #x0000000000000004))
(assert (= temp10228_151 temp10228_150))
(assert (= temp10228_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10228_151)))
(assert (= temp10228_153 #x0000000000000005))
(assert (= temp10228_154 temp10228_153))
(assert (= temp10228_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10228_154)))
(assert (= temp10228_157 var1179826))
(assert (= temp10228_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10228_157)))
(assert (= temp10228_156 temp10228_158))
(assert (= var1191780
   (ite (bvslt temp10228_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10228_159 #x0000000000000000))
(assert (= var1191780 temp10228_159))
(assert (= temp10228_160 #x0000000000000000))
(assert (= var1179826 temp10228_160))
(assert (= temp10228_162 var1179826))
(assert (= temp10228_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10228_162)))
(assert (= temp10228_161 temp10228_163))
(assert (= var1191802 (bvsmod temp10228_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10228_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10228_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10228_165 #x0000000000000001))
(assert (= var1191803 temp10228_165))
(assert (= temp10228_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10228_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10228_167 #x0000000000000001))
(assert (= var1191823 temp10228_167))
(assert (= temp10228_168 #x0000000000000001))
(assert (= var1180714 temp10228_168))
(assert (= temp10228_169 #x0000000000000000))
(assert (= temp10228_170 temp10228_169))
(assert (= temp10228_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10228_170)))
(assert (= temp10228_172 #x0000000000000001))
(assert (= temp10228_173 temp10228_172))
(assert (= temp10228_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10228_173)))
(assert (= temp10228_175 #x0000000000000002))
(assert (= temp10228_176 temp10228_175))
(assert (= temp10228_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10228_176)))
(assert (= temp10228_178 #x0000000000000003))
(assert (= temp10228_179 temp10228_178))
(assert (= temp10228_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10228_179)))
(assert (= temp10228_181 #x0000000000000004))
(assert (= temp10228_182 temp10228_181))
(assert (= temp10228_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10228_182)))
(assert (= temp10228_184 #x0000000000000005))
(assert (= temp10228_185 temp10228_184))
(assert (= temp10228_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10228_185)))
(assert (= temp10228_187 #x0000000000000000))
(assert (= temp10228_188
   (ite (bvslt var1180714 temp10228_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10228_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10228_188)))
(assert (= var1191831 temp10228_189))
(assert (bvslt (ite (bvslt var1180714 temp10228_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10228_190 #x0000000000000001))
(assert (= var1180714 temp10228_190))
(assert (= temp10228_192 var1180714))
(assert (= temp10228_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10228_192)))
(assert (= temp10228_191 temp10228_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10228_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10228_194 #x0000000000000001))
(assert (= var1191836 temp10228_194))
(assert (= temp10228_195 #x0000000000000000))
(assert (= var1179826 temp10228_195))
(assert (= temp10228_197 var1179826))
(assert (= temp10228_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10228_197)))
(assert (= temp10228_196 temp10228_198))
(assert (= temp10228_199 #x0000000000000002))
(assert (= var1586025 temp10228_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10228_200 #x0000000000000001))
(assert (= var1191993 temp10228_200))
(assert (= temp10228_201 #x0000000000000001))
(assert (= var2700303 temp10228_201))
(assert (= temp10228_202 #x0000000000000001))
(assert (= var2962447 temp10228_202))
(assert (= temp10228_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10228_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10228_204 #x0000000000000001))
(assert (= var211058 temp10228_204))
(assert (= temp10228_205 #x0000000000000001))
(assert (= var211188 temp10228_205))
(assert (= var3879401 var211188))
(assert (= temp10228_206 #x0000000000000000))
(assert (= var3866802 temp10228_206))
(assert (= temp10228_207 #x0000000000000000))
(assert (= temp10228_208
   (ite (bvslt var3866802 temp10228_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10228_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10228_208)))
(assert (= var3879420 temp10228_209))
(assert (bvslt (ite (bvslt var3866802 temp10228_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10228_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10228_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10228_211 #x0000000000000000))
(assert (= var3879421 temp10228_211))
(assert (= temp10228_212 #x0000000000000001))
(assert (= var3867690 temp10228_212))
(assert (= temp10228_213 #x0000000000000000))
(assert (= temp10228_214
   (ite (bvslt var3867690 temp10228_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10228_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10228_214)))
(assert (= var3879423 temp10228_215))
(assert (bvslt (ite (bvslt var3867690 temp10228_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10228_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10228_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10228_217 #x0000000000000001))
(assert (= var3879424 temp10228_217))
(assert (= temp10228_218 #x0000000000000000))
(assert (= var4079423 temp10228_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10228_219 #x0000000000000002))
(assert (= var4208259 temp10228_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10228_220 #x0000000000000000))
(assert (= var4273820 temp10228_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5321104 var211201))
(assert (= var5583248 var211201))
(assert (= temp10228_221 #x0000000000000001))
(assert (= var211058 temp10228_221))
(assert (= temp10228_222 #x0000000000000000))
(assert (= var7222036 temp10228_222))
(assert (= var7222003 var7222036))
(assert (= var7090567 var7222003))
(assert (= var7090563 var7090567))
(assert (= var212669 var7090563))
(assert (= temp10228_223 #x0000000000000000))
(assert (= var212669 temp10228_223))
(model-add temp10228_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10228_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10228_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10228_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




