(declare-fun temp661_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp661_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp661_3 () (_ BitVec 64))
(declare-fun temp661_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp661_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp661_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp661_7 () (_ BitVec 64))
(declare-fun temp661_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp661_9 () (_ BitVec 64))
(declare-fun temp661_10 () (_ BitVec 64))
(declare-fun temp661_11 () (_ BitVec 64))
(declare-fun temp661_12 () (_ BitVec 64))
(declare-fun temp661_13 () (_ BitVec 64))
(declare-fun temp661_14 () (_ BitVec 64))
(declare-fun temp661_15 () (_ BitVec 64))
(declare-fun temp661_16 () (_ BitVec 64))
(declare-fun temp661_17 () (_ BitVec 64))
(declare-fun temp661_18 () (_ BitVec 64))
(declare-fun temp661_19 () (_ BitVec 64))
(declare-fun temp661_20 () (_ BitVec 64))
(declare-fun temp661_21 () (_ BitVec 64))
(declare-fun temp661_22 () (_ BitVec 64))
(declare-fun temp661_23 () (_ BitVec 64))
(declare-fun temp661_24 () (_ BitVec 64))
(declare-fun temp661_25 () (_ BitVec 64))
(declare-fun temp661_26 () (_ BitVec 64))
(declare-fun temp661_27 () (_ BitVec 64))
(declare-fun temp661_28 () (_ BitVec 64))
(declare-fun temp661_29 () (_ BitVec 64))
(declare-fun temp661_30 () (_ BitVec 64))
(declare-fun temp661_31 () (_ BitVec 64))
(declare-fun temp661_32 () (_ BitVec 64))
(declare-fun temp661_33 () (_ BitVec 64))
(declare-fun temp661_34 () (_ BitVec 64))
(declare-fun temp661_35 () (_ BitVec 64))
(declare-fun temp661_36 () (_ BitVec 64))
(declare-fun temp661_37 () (_ BitVec 64))
(declare-fun temp661_38 () (_ BitVec 64))
(declare-fun temp661_39 () (_ BitVec 64))
(declare-fun temp661_40 () (_ BitVec 64))
(declare-fun temp661_41 () (_ BitVec 64))
(declare-fun temp661_42 () (_ BitVec 64))
(declare-fun temp661_43 () (_ BitVec 64))
(declare-fun temp661_44 () (_ BitVec 64))
(declare-fun temp661_45 () (_ BitVec 64))
(declare-fun temp661_46 () (_ BitVec 64))
(declare-fun temp661_47 () (_ BitVec 64))
(declare-fun temp661_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp661_49 () (_ BitVec 64))
(declare-fun temp661_50 () (_ BitVec 64))
(declare-fun temp661_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp661_52 () (_ BitVec 64))
(declare-fun temp661_53 () (_ BitVec 64))
(declare-fun temp661_54 () (_ BitVec 64))
(declare-fun temp661_55 () (_ BitVec 64))
(declare-fun temp661_56 () (_ BitVec 64))
(declare-fun temp661_57 () (_ BitVec 64))
(declare-fun temp661_58 () (_ BitVec 64))
(declare-fun temp661_59 () (_ BitVec 64))
(declare-fun temp661_60 () (_ BitVec 64))
(declare-fun temp661_61 () (_ BitVec 64))
(declare-fun temp661_62 () (_ BitVec 64))
(declare-fun temp661_63 () (_ BitVec 64))
(declare-fun temp661_64 () (_ BitVec 64))
(declare-fun temp661_65 () (_ BitVec 64))
(declare-fun temp661_66 () (_ BitVec 64))
(declare-fun temp661_67 () (_ BitVec 64))
(declare-fun temp661_68 () (_ BitVec 64))
(declare-fun temp661_69 () (_ BitVec 64))
(declare-fun temp661_70 () (_ BitVec 64))
(declare-fun temp661_71 () (_ BitVec 64))
(declare-fun temp661_72 () (_ BitVec 64))
(declare-fun temp661_73 () (_ BitVec 64))
(declare-fun temp661_74 () (_ BitVec 64))
(declare-fun temp661_75 () (_ BitVec 64))
(declare-fun temp661_76 () (_ BitVec 64))
(declare-fun temp661_77 () (_ BitVec 64))
(declare-fun temp661_78 () (_ BitVec 64))
(declare-fun temp661_79 () (_ BitVec 64))
(declare-fun temp661_80 () (_ BitVec 64))
(declare-fun temp661_81 () (_ BitVec 64))
(declare-fun temp661_82 () (_ BitVec 64))
(declare-fun temp661_83 () (_ BitVec 64))
(declare-fun temp661_84 () (_ BitVec 64))
(declare-fun temp661_85 () (_ BitVec 64))
(declare-fun temp661_86 () (_ BitVec 64))
(declare-fun temp661_87 () (_ BitVec 64))
(declare-fun temp661_88 () (_ BitVec 64))
(declare-fun temp661_89 () (_ BitVec 64))
(declare-fun temp661_90 () (_ BitVec 64))
(declare-fun temp661_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp661_92 () (_ BitVec 64))
(declare-fun temp661_93 () (_ BitVec 64))
(declare-fun temp661_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp661_95 () (_ BitVec 64))
(declare-fun temp661_96 () (_ BitVec 64))
(declare-fun temp661_97 () (_ BitVec 64))
(declare-fun temp661_98 () (_ BitVec 64))
(declare-fun temp661_99 () (_ BitVec 64))
(declare-fun temp661_100 () (_ BitVec 64))
(declare-fun temp661_101 () (_ BitVec 64))
(declare-fun temp661_102 () (_ BitVec 64))
(declare-fun temp661_103 () (_ BitVec 64))
(declare-fun temp661_104 () (_ BitVec 64))
(declare-fun temp661_105 () (_ BitVec 64))
(declare-fun temp661_106 () (_ BitVec 64))
(declare-fun temp661_107 () (_ BitVec 64))
(declare-fun temp661_108 () (_ BitVec 64))
(declare-fun temp661_109 () (_ BitVec 64))
(declare-fun temp661_110 () (_ BitVec 64))
(declare-fun temp661_111 () (_ BitVec 64))
(declare-fun temp661_112 () (_ BitVec 64))
(declare-fun temp661_113 () (_ BitVec 64))
(declare-fun temp661_114 () (_ BitVec 64))
(declare-fun temp661_115 () (_ BitVec 64))
(declare-fun temp661_116 () (_ BitVec 64))
(declare-fun temp661_117 () (_ BitVec 64))
(declare-fun temp661_118 () (_ BitVec 64))
(declare-fun temp661_119 () (_ BitVec 64))
(declare-fun temp661_120 () (_ BitVec 64))
(declare-fun temp661_121 () (_ BitVec 64))
(declare-fun temp661_122 () (_ BitVec 64))
(declare-fun temp661_123 () (_ BitVec 64))
(declare-fun temp661_124 () (_ BitVec 64))
(declare-fun temp661_125 () (_ BitVec 64))
(declare-fun temp661_126 () (_ BitVec 64))
(declare-fun temp661_127 () (_ BitVec 64))
(declare-fun temp661_128 () (_ BitVec 64))
(declare-fun temp661_129 () (_ BitVec 64))
(declare-fun temp661_130 () (_ BitVec 64))
(declare-fun temp661_131 () (_ BitVec 64))
(declare-fun temp661_132 () (_ BitVec 64))
(declare-fun temp661_133 () (_ BitVec 64))
(declare-fun temp661_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp661_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp661_136 () (_ BitVec 64))
(declare-fun temp661_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp661_138 () (_ BitVec 64))
(declare-fun temp661_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp661_140 () (_ BitVec 64))
(declare-fun temp661_141 () (_ BitVec 64))
(declare-fun temp661_142 () (_ BitVec 64))
(declare-fun temp661_143 () (_ BitVec 64))
(declare-fun temp661_144 () (_ BitVec 64))
(declare-fun temp661_145 () (_ BitVec 64))
(declare-fun temp661_146 () (_ BitVec 64))
(declare-fun temp661_147 () (_ BitVec 64))
(declare-fun temp661_148 () (_ BitVec 64))
(declare-fun temp661_149 () (_ BitVec 64))
(declare-fun temp661_150 () (_ BitVec 64))
(declare-fun temp661_151 () (_ BitVec 64))
(declare-fun temp661_152 () (_ BitVec 64))
(declare-fun temp661_153 () (_ BitVec 64))
(declare-fun temp661_154 () (_ BitVec 64))
(declare-fun temp661_155 () (_ BitVec 64))
(declare-fun temp661_157 () (_ BitVec 64))
(declare-fun temp661_158 () (_ BitVec 64))
(declare-fun temp661_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp661_159 () (_ BitVec 64))
(declare-fun temp661_160 () (_ BitVec 64))
(declare-fun temp661_162 () (_ BitVec 64))
(declare-fun temp661_163 () (_ BitVec 64))
(declare-fun temp661_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp661_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp661_165 () (_ BitVec 64))
(declare-fun temp661_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp661_167 () (_ BitVec 64))
(declare-fun temp661_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp661_169 () (_ BitVec 64))
(declare-fun temp661_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp661_171 () (_ BitVec 64))
(declare-fun temp661_172 () (_ BitVec 64))
(declare-fun temp661_173 () (_ BitVec 64))
(declare-fun temp661_174 () (_ BitVec 64))
(declare-fun temp661_175 () (_ BitVec 64))
(declare-fun temp661_176 () (_ BitVec 64))
(declare-fun temp661_177 () (_ BitVec 64))
(declare-fun temp661_178 () (_ BitVec 64))
(declare-fun temp661_179 () (_ BitVec 64))
(declare-fun temp661_180 () (_ BitVec 64))
(declare-fun temp661_181 () (_ BitVec 64))
(declare-fun temp661_182 () (_ BitVec 64))
(declare-fun temp661_183 () (_ BitVec 64))
(declare-fun temp661_184 () (_ BitVec 64))
(declare-fun temp661_185 () (_ BitVec 64))
(declare-fun temp661_186 () (_ BitVec 64))
(declare-fun temp661_187 () (_ BitVec 64))
(declare-fun temp661_188 () (_ BitVec 64))
(declare-fun temp661_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp661_190 () (_ BitVec 64))
(declare-fun temp661_192 () (_ BitVec 64))
(declare-fun temp661_193 () (_ BitVec 64))
(declare-fun temp661_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp661_194 () (_ BitVec 64))
(declare-fun temp661_195 () (_ BitVec 64))
(declare-fun temp661_197 () (_ BitVec 64))
(declare-fun temp661_198 () (_ BitVec 64))
(declare-fun temp661_196 () (_ BitVec 64))
(declare-fun temp661_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp661_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp661_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp661_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp661_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp661_204 () (_ BitVec 64))
(declare-fun temp661_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp661_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp661_207 () (_ BitVec 64))
(declare-fun temp661_208 () (_ BitVec 64))
(declare-fun temp661_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp661_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp661_211 () (_ BitVec 64))
(declare-fun temp661_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp661_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp661_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp661_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp661_216 () (_ BitVec 64))
(assert (= temp661_1 #x0000000000000001))
(assert (= var77203 temp661_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp661_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp661_2)))
(assert (= temp661_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp661_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_4 #x0000000000000000))
(assert (= var210941 temp661_4))
(assert (= temp661_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp661_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_6 #x0000000000000000))
(assert (= var210986 temp661_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp661_7 #x0000000000000000))
(assert (= temp661_8 temp661_7))
(assert (= temp661_9 (select ARGNAME_padding_NAMEEND_VAL temp661_8)))
(assert (= temp661_10 #x0000000000000001))
(assert (= temp661_11 temp661_10))
(assert (= temp661_12 (select ARGNAME_padding_NAMEEND_VAL temp661_11)))
(assert (= temp661_13 #x0000000000000002))
(assert (= temp661_14 temp661_13))
(assert (= temp661_15 (select ARGNAME_padding_NAMEEND_VAL temp661_14)))
(assert (= temp661_16 #x0000000000000003))
(assert (= temp661_17 temp661_16))
(assert (= temp661_18 (select ARGNAME_padding_NAMEEND_VAL temp661_17)))
(assert (= temp661_19 #x0000000000000004))
(assert (= temp661_20 temp661_19))
(assert (= temp661_21 (select ARGNAME_padding_NAMEEND_VAL temp661_20)))
(assert (= temp661_22 #x0000000000000005))
(assert (= temp661_23 temp661_22))
(assert (= temp661_24 (select ARGNAME_padding_NAMEEND_VAL temp661_23)))
(assert (= temp661_25 #x0000000000000000))
(assert (= temp661_26 #x0000000000000000))
(assert (= temp661_27 temp661_26))
(assert (= temp661_28 (select ARGNAME_padding_NAMEEND_VAL temp661_27)))
(assert (= temp661_29 #x0000000000000000))
(assert (= temp661_30 #x0000000000000001))
(assert (= temp661_31 temp661_30))
(assert (= temp661_32 (select ARGNAME_padding_NAMEEND_VAL temp661_31)))
(assert (= temp661_33 #x0000000000000000))
(assert (= temp661_34 #x0000000000000002))
(assert (= temp661_35 temp661_34))
(assert (= temp661_36 (select ARGNAME_padding_NAMEEND_VAL temp661_35)))
(assert (= temp661_37 #x0000000000000000))
(assert (= temp661_38 #x0000000000000003))
(assert (= temp661_39 temp661_38))
(assert (= temp661_40 (select ARGNAME_padding_NAMEEND_VAL temp661_39)))
(assert (= temp661_41 #x0000000000000000))
(assert (= temp661_42 #x0000000000000004))
(assert (= temp661_43 temp661_42))
(assert (= temp661_44 (select ARGNAME_padding_NAMEEND_VAL temp661_43)))
(assert (= temp661_45 #x0000000000000000))
(assert (= temp661_46 #x0000000000000005))
(assert (= temp661_47 temp661_46))
(assert (= temp661_48 (select ARGNAME_padding_NAMEEND_VAL temp661_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp661_28 temp661_25)
             (bvslt temp661_32 temp661_29)
             (bvslt temp661_36 temp661_33)
             (bvslt temp661_40 temp661_37)
             (bvslt temp661_44 temp661_41)
             (bvslt temp661_48 temp661_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_49 #x0000000000000000))
(assert (= var1191714 temp661_49))
(assert (= temp661_50 #x0000000000000000))
(assert (= temp661_51 temp661_50))
(assert (= temp661_52 (select ARGNAME_output_padding_NAMEEND_VAL temp661_51)))
(assert (= temp661_53 #x0000000000000001))
(assert (= temp661_54 temp661_53))
(assert (= temp661_55 (select ARGNAME_output_padding_NAMEEND_VAL temp661_54)))
(assert (= temp661_56 #x0000000000000002))
(assert (= temp661_57 temp661_56))
(assert (= temp661_58 (select ARGNAME_output_padding_NAMEEND_VAL temp661_57)))
(assert (= temp661_59 #x0000000000000003))
(assert (= temp661_60 temp661_59))
(assert (= temp661_61 (select ARGNAME_output_padding_NAMEEND_VAL temp661_60)))
(assert (= temp661_62 #x0000000000000004))
(assert (= temp661_63 temp661_62))
(assert (= temp661_64 (select ARGNAME_output_padding_NAMEEND_VAL temp661_63)))
(assert (= temp661_65 #x0000000000000005))
(assert (= temp661_66 temp661_65))
(assert (= temp661_67 (select ARGNAME_output_padding_NAMEEND_VAL temp661_66)))
(assert (= temp661_68 #x0000000000000000))
(assert (= temp661_69 #x0000000000000000))
(assert (= temp661_70 temp661_69))
(assert (= temp661_71 (select ARGNAME_output_padding_NAMEEND_VAL temp661_70)))
(assert (= temp661_72 #x0000000000000000))
(assert (= temp661_73 #x0000000000000001))
(assert (= temp661_74 temp661_73))
(assert (= temp661_75 (select ARGNAME_output_padding_NAMEEND_VAL temp661_74)))
(assert (= temp661_76 #x0000000000000000))
(assert (= temp661_77 #x0000000000000002))
(assert (= temp661_78 temp661_77))
(assert (= temp661_79 (select ARGNAME_output_padding_NAMEEND_VAL temp661_78)))
(assert (= temp661_80 #x0000000000000000))
(assert (= temp661_81 #x0000000000000003))
(assert (= temp661_82 temp661_81))
(assert (= temp661_83 (select ARGNAME_output_padding_NAMEEND_VAL temp661_82)))
(assert (= temp661_84 #x0000000000000000))
(assert (= temp661_85 #x0000000000000004))
(assert (= temp661_86 temp661_85))
(assert (= temp661_87 (select ARGNAME_output_padding_NAMEEND_VAL temp661_86)))
(assert (= temp661_88 #x0000000000000000))
(assert (= temp661_89 #x0000000000000005))
(assert (= temp661_90 temp661_89))
(assert (= temp661_91 (select ARGNAME_output_padding_NAMEEND_VAL temp661_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp661_71 temp661_68)
             (bvslt temp661_75 temp661_72)
             (bvslt temp661_79 temp661_76)
             (bvslt temp661_83 temp661_80)
             (bvslt temp661_87 temp661_84)
             (bvslt temp661_91 temp661_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_92 #x0000000000000000))
(assert (= var1191725 temp661_92))
(assert (= temp661_93 #x0000000000000000))
(assert (= temp661_94 temp661_93))
(assert (= temp661_95 (select ARGNAME_stride_NAMEEND_VAL temp661_94)))
(assert (= temp661_96 #x0000000000000001))
(assert (= temp661_97 temp661_96))
(assert (= temp661_98 (select ARGNAME_stride_NAMEEND_VAL temp661_97)))
(assert (= temp661_99 #x0000000000000002))
(assert (= temp661_100 temp661_99))
(assert (= temp661_101 (select ARGNAME_stride_NAMEEND_VAL temp661_100)))
(assert (= temp661_102 #x0000000000000003))
(assert (= temp661_103 temp661_102))
(assert (= temp661_104 (select ARGNAME_stride_NAMEEND_VAL temp661_103)))
(assert (= temp661_105 #x0000000000000004))
(assert (= temp661_106 temp661_105))
(assert (= temp661_107 (select ARGNAME_stride_NAMEEND_VAL temp661_106)))
(assert (= temp661_108 #x0000000000000005))
(assert (= temp661_109 temp661_108))
(assert (= temp661_110 (select ARGNAME_stride_NAMEEND_VAL temp661_109)))
(assert (= temp661_111 #x0000000000000000))
(assert (= temp661_112 #x0000000000000000))
(assert (= temp661_113 temp661_112))
(assert (= temp661_114 (select ARGNAME_stride_NAMEEND_VAL temp661_113)))
(assert (= temp661_115 #x0000000000000000))
(assert (= temp661_116 #x0000000000000001))
(assert (= temp661_117 temp661_116))
(assert (= temp661_118 (select ARGNAME_stride_NAMEEND_VAL temp661_117)))
(assert (= temp661_119 #x0000000000000000))
(assert (= temp661_120 #x0000000000000002))
(assert (= temp661_121 temp661_120))
(assert (= temp661_122 (select ARGNAME_stride_NAMEEND_VAL temp661_121)))
(assert (= temp661_123 #x0000000000000000))
(assert (= temp661_124 #x0000000000000003))
(assert (= temp661_125 temp661_124))
(assert (= temp661_126 (select ARGNAME_stride_NAMEEND_VAL temp661_125)))
(assert (= temp661_127 #x0000000000000000))
(assert (= temp661_128 #x0000000000000004))
(assert (= temp661_129 temp661_128))
(assert (= temp661_130 (select ARGNAME_stride_NAMEEND_VAL temp661_129)))
(assert (= temp661_131 #x0000000000000000))
(assert (= temp661_132 #x0000000000000005))
(assert (= temp661_133 temp661_132))
(assert (= temp661_134 (select ARGNAME_stride_NAMEEND_VAL temp661_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp661_114 temp661_111)
             (bvsle temp661_118 temp661_115)
             (bvsle temp661_122 temp661_119)
             (bvsle temp661_126 temp661_123)
             (bvsle temp661_130 temp661_127)
             (bvsle temp661_134 temp661_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_135 #x0000000000000000))
(assert (= var1191735 temp661_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_136 #x0000000000000001))
(assert (= var1191747 temp661_136))
(assert (= temp661_137 #x0000000000000000))
(assert (= var1179826 temp661_137))
(assert (= temp661_138 #x0000000000000000))
(assert (= temp661_139 temp661_138))
(assert (= temp661_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_139)))
(assert (= temp661_141 #x0000000000000001))
(assert (= temp661_142 temp661_141))
(assert (= temp661_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_142)))
(assert (= temp661_144 #x0000000000000002))
(assert (= temp661_145 temp661_144))
(assert (= temp661_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_145)))
(assert (= temp661_147 #x0000000000000003))
(assert (= temp661_148 temp661_147))
(assert (= temp661_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_148)))
(assert (= temp661_150 #x0000000000000004))
(assert (= temp661_151 temp661_150))
(assert (= temp661_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_151)))
(assert (= temp661_153 #x0000000000000005))
(assert (= temp661_154 temp661_153))
(assert (= temp661_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_154)))
(assert (= temp661_157 var1179826))
(assert (= temp661_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_157)))
(assert (= temp661_156 temp661_158))
(assert (= var1191780
   (ite (bvslt temp661_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_159 #x0000000000000000))
(assert (= var1191780 temp661_159))
(assert (= temp661_160 #x0000000000000000))
(assert (= var1179826 temp661_160))
(assert (= temp661_162 var1179826))
(assert (= temp661_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_162)))
(assert (= temp661_161 temp661_163))
(assert (= var1191802 (bvsmod temp661_161 ARGNAME_groups_NAMEEND)))
(assert (= temp661_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp661_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp661_165 #x0000000000000001))
(assert (= var1191803 temp661_165))
(assert (= temp661_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp661_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_167 #x0000000000000001))
(assert (= var1191823 temp661_167))
(assert (= temp661_168 #x0000000000000001))
(assert (= var1180714 temp661_168))
(assert (= temp661_169 #x0000000000000000))
(assert (= temp661_170 temp661_169))
(assert (= temp661_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp661_170)))
(assert (= temp661_172 #x0000000000000001))
(assert (= temp661_173 temp661_172))
(assert (= temp661_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp661_173)))
(assert (= temp661_175 #x0000000000000002))
(assert (= temp661_176 temp661_175))
(assert (= temp661_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp661_176)))
(assert (= temp661_178 #x0000000000000003))
(assert (= temp661_179 temp661_178))
(assert (= temp661_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp661_179)))
(assert (= temp661_181 #x0000000000000004))
(assert (= temp661_182 temp661_181))
(assert (= temp661_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp661_182)))
(assert (= temp661_184 #x0000000000000005))
(assert (= temp661_185 temp661_184))
(assert (= temp661_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp661_185)))
(assert (= temp661_187 #x0000000000000000))
(assert (= temp661_188
   (ite (bvslt var1180714 temp661_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp661_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp661_188)))
(assert (= var1191831 temp661_189))
(assert (bvslt (ite (bvslt var1180714 temp661_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp661_190 #x0000000000000001))
(assert (= var1180714 temp661_190))
(assert (= temp661_192 var1180714))
(assert (= temp661_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_192)))
(assert (= temp661_191 temp661_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp661_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp661_194 #x0000000000000001))
(assert (= var1191836 temp661_194))
(assert (= temp661_195 #x0000000000000000))
(assert (= var1179826 temp661_195))
(assert (= temp661_197 var1179826))
(assert (= temp661_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_197)))
(assert (= temp661_196 temp661_198))
(assert (= temp661_199 #x0000000000000002))
(assert (= var1586025 temp661_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp661_200 #x0000000000000001))
(assert (= var1191993 temp661_200))
(assert (= temp661_201 #x0000000000000001))
(assert (= var2700303 temp661_201))
(assert (= temp661_202 #x0000000000000001))
(assert (= var2962447 temp661_202))
(assert (= temp661_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp661_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_204 #x0000000000000001))
(assert (= var211058 temp661_204))
(assert (= temp661_205 #x0000000000000001))
(assert (= var211188 temp661_205))
(assert (= var3879401 var211188))
(assert (= temp661_206 #x0000000000000000))
(assert (= var3866802 temp661_206))
(assert (= temp661_207 #x0000000000000000))
(assert (= temp661_208
   (ite (bvslt var3866802 temp661_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp661_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp661_208)))
(assert (= var3879420 temp661_209))
(assert (bvslt (ite (bvslt var3866802 temp661_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp661_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp661_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp661_211 #x0000000000000001))
(assert (= var3879421 temp661_211))
(assert (= temp661_212 #x0000000000000000))
(assert (= var4079423 temp661_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp661_213 #x0000000000000002))
(assert (= var4208259 temp661_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_214 #x0000000000000000))
(assert (= var4273820 temp661_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211494 var210913))
(assert (= temp661_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp661_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp661_216 #x0000000000000001))
(assert (= var211058 temp661_216))
(model-add temp661_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp661_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp661_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp661_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



