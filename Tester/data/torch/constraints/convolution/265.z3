(declare-fun temp353_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp353_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp353_3 () (_ BitVec 64))
(declare-fun temp353_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp353_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp353_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp353_7 () (_ BitVec 64))
(declare-fun temp353_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp353_9 () (_ BitVec 64))
(declare-fun temp353_10 () (_ BitVec 64))
(declare-fun temp353_11 () (_ BitVec 64))
(declare-fun temp353_12 () (_ BitVec 64))
(declare-fun temp353_13 () (_ BitVec 64))
(declare-fun temp353_14 () (_ BitVec 64))
(declare-fun temp353_15 () (_ BitVec 64))
(declare-fun temp353_16 () (_ BitVec 64))
(declare-fun temp353_17 () (_ BitVec 64))
(declare-fun temp353_18 () (_ BitVec 64))
(declare-fun temp353_19 () (_ BitVec 64))
(declare-fun temp353_20 () (_ BitVec 64))
(declare-fun temp353_21 () (_ BitVec 64))
(declare-fun temp353_22 () (_ BitVec 64))
(declare-fun temp353_23 () (_ BitVec 64))
(declare-fun temp353_24 () (_ BitVec 64))
(declare-fun temp353_25 () (_ BitVec 64))
(declare-fun temp353_26 () (_ BitVec 64))
(declare-fun temp353_27 () (_ BitVec 64))
(declare-fun temp353_28 () (_ BitVec 64))
(declare-fun temp353_29 () (_ BitVec 64))
(declare-fun temp353_30 () (_ BitVec 64))
(declare-fun temp353_31 () (_ BitVec 64))
(declare-fun temp353_32 () (_ BitVec 64))
(declare-fun temp353_33 () (_ BitVec 64))
(declare-fun temp353_34 () (_ BitVec 64))
(declare-fun temp353_35 () (_ BitVec 64))
(declare-fun temp353_36 () (_ BitVec 64))
(declare-fun temp353_37 () (_ BitVec 64))
(declare-fun temp353_38 () (_ BitVec 64))
(declare-fun temp353_39 () (_ BitVec 64))
(declare-fun temp353_40 () (_ BitVec 64))
(declare-fun temp353_41 () (_ BitVec 64))
(declare-fun temp353_42 () (_ BitVec 64))
(declare-fun temp353_43 () (_ BitVec 64))
(declare-fun temp353_44 () (_ BitVec 64))
(declare-fun temp353_45 () (_ BitVec 64))
(declare-fun temp353_46 () (_ BitVec 64))
(declare-fun temp353_47 () (_ BitVec 64))
(declare-fun temp353_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp353_49 () (_ BitVec 64))
(declare-fun temp353_50 () (_ BitVec 64))
(declare-fun temp353_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp353_52 () (_ BitVec 64))
(declare-fun temp353_53 () (_ BitVec 64))
(declare-fun temp353_54 () (_ BitVec 64))
(declare-fun temp353_55 () (_ BitVec 64))
(declare-fun temp353_56 () (_ BitVec 64))
(declare-fun temp353_57 () (_ BitVec 64))
(declare-fun temp353_58 () (_ BitVec 64))
(declare-fun temp353_59 () (_ BitVec 64))
(declare-fun temp353_60 () (_ BitVec 64))
(declare-fun temp353_61 () (_ BitVec 64))
(declare-fun temp353_62 () (_ BitVec 64))
(declare-fun temp353_63 () (_ BitVec 64))
(declare-fun temp353_64 () (_ BitVec 64))
(declare-fun temp353_65 () (_ BitVec 64))
(declare-fun temp353_66 () (_ BitVec 64))
(declare-fun temp353_67 () (_ BitVec 64))
(declare-fun temp353_68 () (_ BitVec 64))
(declare-fun temp353_69 () (_ BitVec 64))
(declare-fun temp353_70 () (_ BitVec 64))
(declare-fun temp353_71 () (_ BitVec 64))
(declare-fun temp353_72 () (_ BitVec 64))
(declare-fun temp353_73 () (_ BitVec 64))
(declare-fun temp353_74 () (_ BitVec 64))
(declare-fun temp353_75 () (_ BitVec 64))
(declare-fun temp353_76 () (_ BitVec 64))
(declare-fun temp353_77 () (_ BitVec 64))
(declare-fun temp353_78 () (_ BitVec 64))
(declare-fun temp353_79 () (_ BitVec 64))
(declare-fun temp353_80 () (_ BitVec 64))
(declare-fun temp353_81 () (_ BitVec 64))
(declare-fun temp353_82 () (_ BitVec 64))
(declare-fun temp353_83 () (_ BitVec 64))
(declare-fun temp353_84 () (_ BitVec 64))
(declare-fun temp353_85 () (_ BitVec 64))
(declare-fun temp353_86 () (_ BitVec 64))
(declare-fun temp353_87 () (_ BitVec 64))
(declare-fun temp353_88 () (_ BitVec 64))
(declare-fun temp353_89 () (_ BitVec 64))
(declare-fun temp353_90 () (_ BitVec 64))
(declare-fun temp353_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp353_92 () (_ BitVec 64))
(declare-fun temp353_93 () (_ BitVec 64))
(declare-fun temp353_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp353_95 () (_ BitVec 64))
(declare-fun temp353_96 () (_ BitVec 64))
(declare-fun temp353_97 () (_ BitVec 64))
(declare-fun temp353_98 () (_ BitVec 64))
(declare-fun temp353_99 () (_ BitVec 64))
(declare-fun temp353_100 () (_ BitVec 64))
(declare-fun temp353_101 () (_ BitVec 64))
(declare-fun temp353_102 () (_ BitVec 64))
(declare-fun temp353_103 () (_ BitVec 64))
(declare-fun temp353_104 () (_ BitVec 64))
(declare-fun temp353_105 () (_ BitVec 64))
(declare-fun temp353_106 () (_ BitVec 64))
(declare-fun temp353_107 () (_ BitVec 64))
(declare-fun temp353_108 () (_ BitVec 64))
(declare-fun temp353_109 () (_ BitVec 64))
(declare-fun temp353_110 () (_ BitVec 64))
(declare-fun temp353_111 () (_ BitVec 64))
(declare-fun temp353_112 () (_ BitVec 64))
(declare-fun temp353_113 () (_ BitVec 64))
(declare-fun temp353_114 () (_ BitVec 64))
(declare-fun temp353_115 () (_ BitVec 64))
(declare-fun temp353_116 () (_ BitVec 64))
(declare-fun temp353_117 () (_ BitVec 64))
(declare-fun temp353_118 () (_ BitVec 64))
(declare-fun temp353_119 () (_ BitVec 64))
(declare-fun temp353_120 () (_ BitVec 64))
(declare-fun temp353_121 () (_ BitVec 64))
(declare-fun temp353_122 () (_ BitVec 64))
(declare-fun temp353_123 () (_ BitVec 64))
(declare-fun temp353_124 () (_ BitVec 64))
(declare-fun temp353_125 () (_ BitVec 64))
(declare-fun temp353_126 () (_ BitVec 64))
(declare-fun temp353_127 () (_ BitVec 64))
(declare-fun temp353_128 () (_ BitVec 64))
(declare-fun temp353_129 () (_ BitVec 64))
(declare-fun temp353_130 () (_ BitVec 64))
(declare-fun temp353_131 () (_ BitVec 64))
(declare-fun temp353_132 () (_ BitVec 64))
(declare-fun temp353_133 () (_ BitVec 64))
(declare-fun temp353_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp353_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp353_136 () (_ BitVec 64))
(declare-fun temp353_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp353_138 () (_ BitVec 64))
(declare-fun temp353_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp353_140 () (_ BitVec 64))
(declare-fun temp353_141 () (_ BitVec 64))
(declare-fun temp353_142 () (_ BitVec 64))
(declare-fun temp353_143 () (_ BitVec 64))
(declare-fun temp353_144 () (_ BitVec 64))
(declare-fun temp353_145 () (_ BitVec 64))
(declare-fun temp353_146 () (_ BitVec 64))
(declare-fun temp353_147 () (_ BitVec 64))
(declare-fun temp353_148 () (_ BitVec 64))
(declare-fun temp353_149 () (_ BitVec 64))
(declare-fun temp353_150 () (_ BitVec 64))
(declare-fun temp353_151 () (_ BitVec 64))
(declare-fun temp353_152 () (_ BitVec 64))
(declare-fun temp353_153 () (_ BitVec 64))
(declare-fun temp353_154 () (_ BitVec 64))
(declare-fun temp353_155 () (_ BitVec 64))
(declare-fun temp353_157 () (_ BitVec 64))
(declare-fun temp353_158 () (_ BitVec 64))
(declare-fun temp353_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp353_159 () (_ BitVec 64))
(declare-fun temp353_160 () (_ BitVec 64))
(declare-fun temp353_162 () (_ BitVec 64))
(declare-fun temp353_163 () (_ BitVec 64))
(declare-fun temp353_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp353_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp353_165 () (_ BitVec 64))
(declare-fun temp353_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp353_167 () (_ BitVec 64))
(declare-fun temp353_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp353_169 () (_ BitVec 64))
(declare-fun temp353_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp353_171 () (_ BitVec 64))
(declare-fun temp353_172 () (_ BitVec 64))
(declare-fun temp353_173 () (_ BitVec 64))
(declare-fun temp353_174 () (_ BitVec 64))
(declare-fun temp353_175 () (_ BitVec 64))
(declare-fun temp353_176 () (_ BitVec 64))
(declare-fun temp353_177 () (_ BitVec 64))
(declare-fun temp353_178 () (_ BitVec 64))
(declare-fun temp353_179 () (_ BitVec 64))
(declare-fun temp353_180 () (_ BitVec 64))
(declare-fun temp353_181 () (_ BitVec 64))
(declare-fun temp353_182 () (_ BitVec 64))
(declare-fun temp353_183 () (_ BitVec 64))
(declare-fun temp353_184 () (_ BitVec 64))
(declare-fun temp353_185 () (_ BitVec 64))
(declare-fun temp353_186 () (_ BitVec 64))
(declare-fun temp353_187 () (_ BitVec 64))
(declare-fun temp353_188 () (_ BitVec 64))
(declare-fun temp353_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp353_190 () (_ BitVec 64))
(declare-fun temp353_192 () (_ BitVec 64))
(declare-fun temp353_193 () (_ BitVec 64))
(declare-fun temp353_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp353_194 () (_ BitVec 64))
(declare-fun temp353_195 () (_ BitVec 64))
(declare-fun temp353_197 () (_ BitVec 64))
(declare-fun temp353_198 () (_ BitVec 64))
(declare-fun temp353_196 () (_ BitVec 64))
(declare-fun temp353_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp353_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp353_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp353_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp353_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp353_204 () (_ BitVec 64))
(declare-fun temp353_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp353_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp353_207 () (_ BitVec 64))
(declare-fun temp353_208 () (_ BitVec 64))
(declare-fun temp353_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp353_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp353_211 () (_ BitVec 64))
(declare-fun temp353_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp353_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp353_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp353_215 () (_ BitVec 64))
(assert (= temp353_1 #x0000000000000001))
(assert (= var77203 temp353_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp353_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp353_2)))
(assert (= temp353_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp353_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp353_4 #x0000000000000000))
(assert (= var210941 temp353_4))
(assert (= temp353_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp353_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp353_6 #x0000000000000000))
(assert (= var210986 temp353_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp353_7 #x0000000000000000))
(assert (= temp353_8 temp353_7))
(assert (= temp353_9 (select ARGNAME_padding_NAMEEND_VAL temp353_8)))
(assert (= temp353_10 #x0000000000000001))
(assert (= temp353_11 temp353_10))
(assert (= temp353_12 (select ARGNAME_padding_NAMEEND_VAL temp353_11)))
(assert (= temp353_13 #x0000000000000002))
(assert (= temp353_14 temp353_13))
(assert (= temp353_15 (select ARGNAME_padding_NAMEEND_VAL temp353_14)))
(assert (= temp353_16 #x0000000000000003))
(assert (= temp353_17 temp353_16))
(assert (= temp353_18 (select ARGNAME_padding_NAMEEND_VAL temp353_17)))
(assert (= temp353_19 #x0000000000000004))
(assert (= temp353_20 temp353_19))
(assert (= temp353_21 (select ARGNAME_padding_NAMEEND_VAL temp353_20)))
(assert (= temp353_22 #x0000000000000005))
(assert (= temp353_23 temp353_22))
(assert (= temp353_24 (select ARGNAME_padding_NAMEEND_VAL temp353_23)))
(assert (= temp353_25 #x0000000000000000))
(assert (= temp353_26 #x0000000000000000))
(assert (= temp353_27 temp353_26))
(assert (= temp353_28 (select ARGNAME_padding_NAMEEND_VAL temp353_27)))
(assert (= temp353_29 #x0000000000000000))
(assert (= temp353_30 #x0000000000000001))
(assert (= temp353_31 temp353_30))
(assert (= temp353_32 (select ARGNAME_padding_NAMEEND_VAL temp353_31)))
(assert (= temp353_33 #x0000000000000000))
(assert (= temp353_34 #x0000000000000002))
(assert (= temp353_35 temp353_34))
(assert (= temp353_36 (select ARGNAME_padding_NAMEEND_VAL temp353_35)))
(assert (= temp353_37 #x0000000000000000))
(assert (= temp353_38 #x0000000000000003))
(assert (= temp353_39 temp353_38))
(assert (= temp353_40 (select ARGNAME_padding_NAMEEND_VAL temp353_39)))
(assert (= temp353_41 #x0000000000000000))
(assert (= temp353_42 #x0000000000000004))
(assert (= temp353_43 temp353_42))
(assert (= temp353_44 (select ARGNAME_padding_NAMEEND_VAL temp353_43)))
(assert (= temp353_45 #x0000000000000000))
(assert (= temp353_46 #x0000000000000005))
(assert (= temp353_47 temp353_46))
(assert (= temp353_48 (select ARGNAME_padding_NAMEEND_VAL temp353_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp353_28 temp353_25)
             (bvslt temp353_32 temp353_29)
             (bvslt temp353_36 temp353_33)
             (bvslt temp353_40 temp353_37)
             (bvslt temp353_44 temp353_41)
             (bvslt temp353_48 temp353_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp353_49 #x0000000000000000))
(assert (= var1191714 temp353_49))
(assert (= temp353_50 #x0000000000000000))
(assert (= temp353_51 temp353_50))
(assert (= temp353_52 (select ARGNAME_output_padding_NAMEEND_VAL temp353_51)))
(assert (= temp353_53 #x0000000000000001))
(assert (= temp353_54 temp353_53))
(assert (= temp353_55 (select ARGNAME_output_padding_NAMEEND_VAL temp353_54)))
(assert (= temp353_56 #x0000000000000002))
(assert (= temp353_57 temp353_56))
(assert (= temp353_58 (select ARGNAME_output_padding_NAMEEND_VAL temp353_57)))
(assert (= temp353_59 #x0000000000000003))
(assert (= temp353_60 temp353_59))
(assert (= temp353_61 (select ARGNAME_output_padding_NAMEEND_VAL temp353_60)))
(assert (= temp353_62 #x0000000000000004))
(assert (= temp353_63 temp353_62))
(assert (= temp353_64 (select ARGNAME_output_padding_NAMEEND_VAL temp353_63)))
(assert (= temp353_65 #x0000000000000005))
(assert (= temp353_66 temp353_65))
(assert (= temp353_67 (select ARGNAME_output_padding_NAMEEND_VAL temp353_66)))
(assert (= temp353_68 #x0000000000000000))
(assert (= temp353_69 #x0000000000000000))
(assert (= temp353_70 temp353_69))
(assert (= temp353_71 (select ARGNAME_output_padding_NAMEEND_VAL temp353_70)))
(assert (= temp353_72 #x0000000000000000))
(assert (= temp353_73 #x0000000000000001))
(assert (= temp353_74 temp353_73))
(assert (= temp353_75 (select ARGNAME_output_padding_NAMEEND_VAL temp353_74)))
(assert (= temp353_76 #x0000000000000000))
(assert (= temp353_77 #x0000000000000002))
(assert (= temp353_78 temp353_77))
(assert (= temp353_79 (select ARGNAME_output_padding_NAMEEND_VAL temp353_78)))
(assert (= temp353_80 #x0000000000000000))
(assert (= temp353_81 #x0000000000000003))
(assert (= temp353_82 temp353_81))
(assert (= temp353_83 (select ARGNAME_output_padding_NAMEEND_VAL temp353_82)))
(assert (= temp353_84 #x0000000000000000))
(assert (= temp353_85 #x0000000000000004))
(assert (= temp353_86 temp353_85))
(assert (= temp353_87 (select ARGNAME_output_padding_NAMEEND_VAL temp353_86)))
(assert (= temp353_88 #x0000000000000000))
(assert (= temp353_89 #x0000000000000005))
(assert (= temp353_90 temp353_89))
(assert (= temp353_91 (select ARGNAME_output_padding_NAMEEND_VAL temp353_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp353_71 temp353_68)
             (bvslt temp353_75 temp353_72)
             (bvslt temp353_79 temp353_76)
             (bvslt temp353_83 temp353_80)
             (bvslt temp353_87 temp353_84)
             (bvslt temp353_91 temp353_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp353_92 #x0000000000000000))
(assert (= var1191725 temp353_92))
(assert (= temp353_93 #x0000000000000000))
(assert (= temp353_94 temp353_93))
(assert (= temp353_95 (select ARGNAME_stride_NAMEEND_VAL temp353_94)))
(assert (= temp353_96 #x0000000000000001))
(assert (= temp353_97 temp353_96))
(assert (= temp353_98 (select ARGNAME_stride_NAMEEND_VAL temp353_97)))
(assert (= temp353_99 #x0000000000000002))
(assert (= temp353_100 temp353_99))
(assert (= temp353_101 (select ARGNAME_stride_NAMEEND_VAL temp353_100)))
(assert (= temp353_102 #x0000000000000003))
(assert (= temp353_103 temp353_102))
(assert (= temp353_104 (select ARGNAME_stride_NAMEEND_VAL temp353_103)))
(assert (= temp353_105 #x0000000000000004))
(assert (= temp353_106 temp353_105))
(assert (= temp353_107 (select ARGNAME_stride_NAMEEND_VAL temp353_106)))
(assert (= temp353_108 #x0000000000000005))
(assert (= temp353_109 temp353_108))
(assert (= temp353_110 (select ARGNAME_stride_NAMEEND_VAL temp353_109)))
(assert (= temp353_111 #x0000000000000000))
(assert (= temp353_112 #x0000000000000000))
(assert (= temp353_113 temp353_112))
(assert (= temp353_114 (select ARGNAME_stride_NAMEEND_VAL temp353_113)))
(assert (= temp353_115 #x0000000000000000))
(assert (= temp353_116 #x0000000000000001))
(assert (= temp353_117 temp353_116))
(assert (= temp353_118 (select ARGNAME_stride_NAMEEND_VAL temp353_117)))
(assert (= temp353_119 #x0000000000000000))
(assert (= temp353_120 #x0000000000000002))
(assert (= temp353_121 temp353_120))
(assert (= temp353_122 (select ARGNAME_stride_NAMEEND_VAL temp353_121)))
(assert (= temp353_123 #x0000000000000000))
(assert (= temp353_124 #x0000000000000003))
(assert (= temp353_125 temp353_124))
(assert (= temp353_126 (select ARGNAME_stride_NAMEEND_VAL temp353_125)))
(assert (= temp353_127 #x0000000000000000))
(assert (= temp353_128 #x0000000000000004))
(assert (= temp353_129 temp353_128))
(assert (= temp353_130 (select ARGNAME_stride_NAMEEND_VAL temp353_129)))
(assert (= temp353_131 #x0000000000000000))
(assert (= temp353_132 #x0000000000000005))
(assert (= temp353_133 temp353_132))
(assert (= temp353_134 (select ARGNAME_stride_NAMEEND_VAL temp353_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp353_114 temp353_111)
             (bvsle temp353_118 temp353_115)
             (bvsle temp353_122 temp353_119)
             (bvsle temp353_126 temp353_123)
             (bvsle temp353_130 temp353_127)
             (bvsle temp353_134 temp353_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp353_135 #x0000000000000000))
(assert (= var1191735 temp353_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp353_136 #x0000000000000001))
(assert (= var1191747 temp353_136))
(assert (= temp353_137 #x0000000000000000))
(assert (= var1179826 temp353_137))
(assert (= temp353_138 #x0000000000000000))
(assert (= temp353_139 temp353_138))
(assert (= temp353_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp353_139)))
(assert (= temp353_141 #x0000000000000001))
(assert (= temp353_142 temp353_141))
(assert (= temp353_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp353_142)))
(assert (= temp353_144 #x0000000000000002))
(assert (= temp353_145 temp353_144))
(assert (= temp353_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp353_145)))
(assert (= temp353_147 #x0000000000000003))
(assert (= temp353_148 temp353_147))
(assert (= temp353_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp353_148)))
(assert (= temp353_150 #x0000000000000004))
(assert (= temp353_151 temp353_150))
(assert (= temp353_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp353_151)))
(assert (= temp353_153 #x0000000000000005))
(assert (= temp353_154 temp353_153))
(assert (= temp353_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp353_154)))
(assert (= temp353_157 var1179826))
(assert (= temp353_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp353_157)))
(assert (= temp353_156 temp353_158))
(assert (= var1191780
   (ite (bvslt temp353_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp353_159 #x0000000000000000))
(assert (= var1191780 temp353_159))
(assert (= temp353_160 #x0000000000000000))
(assert (= var1179826 temp353_160))
(assert (= temp353_162 var1179826))
(assert (= temp353_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp353_162)))
(assert (= temp353_161 temp353_163))
(assert (= var1191802 (bvsmod temp353_161 ARGNAME_groups_NAMEEND)))
(assert (= temp353_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp353_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp353_165 #x0000000000000001))
(assert (= var1191803 temp353_165))
(assert (= temp353_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp353_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp353_167 #x0000000000000001))
(assert (= var1191823 temp353_167))
(assert (= temp353_168 #x0000000000000001))
(assert (= var1180714 temp353_168))
(assert (= temp353_169 #x0000000000000000))
(assert (= temp353_170 temp353_169))
(assert (= temp353_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp353_170)))
(assert (= temp353_172 #x0000000000000001))
(assert (= temp353_173 temp353_172))
(assert (= temp353_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp353_173)))
(assert (= temp353_175 #x0000000000000002))
(assert (= temp353_176 temp353_175))
(assert (= temp353_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp353_176)))
(assert (= temp353_178 #x0000000000000003))
(assert (= temp353_179 temp353_178))
(assert (= temp353_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp353_179)))
(assert (= temp353_181 #x0000000000000004))
(assert (= temp353_182 temp353_181))
(assert (= temp353_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp353_182)))
(assert (= temp353_184 #x0000000000000005))
(assert (= temp353_185 temp353_184))
(assert (= temp353_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp353_185)))
(assert (= temp353_187 #x0000000000000000))
(assert (= temp353_188
   (ite (bvslt var1180714 temp353_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp353_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp353_188)))
(assert (= var1191831 temp353_189))
(assert (bvslt (ite (bvslt var1180714 temp353_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp353_190 #x0000000000000001))
(assert (= var1180714 temp353_190))
(assert (= temp353_192 var1180714))
(assert (= temp353_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp353_192)))
(assert (= temp353_191 temp353_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp353_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp353_194 #x0000000000000001))
(assert (= var1191836 temp353_194))
(assert (= temp353_195 #x0000000000000000))
(assert (= var1179826 temp353_195))
(assert (= temp353_197 var1179826))
(assert (= temp353_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp353_197)))
(assert (= temp353_196 temp353_198))
(assert (= temp353_199 #x0000000000000002))
(assert (= var1586025 temp353_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp353_200 #x0000000000000001))
(assert (= var1191993 temp353_200))
(assert (= temp353_201 #x0000000000000001))
(assert (= var2700303 temp353_201))
(assert (= temp353_202 #x0000000000000001))
(assert (= var2962447 temp353_202))
(assert (= temp353_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp353_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp353_204 #x0000000000000001))
(assert (= var211058 temp353_204))
(assert (= temp353_205 #x0000000000000001))
(assert (= var211188 temp353_205))
(assert (= var3879401 var211188))
(assert (= temp353_206 #x0000000000000000))
(assert (= var3866802 temp353_206))
(assert (= temp353_207 #x0000000000000000))
(assert (= temp353_208
   (ite (bvslt var3866802 temp353_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp353_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp353_208)))
(assert (= var3879420 temp353_209))
(assert (bvslt (ite (bvslt var3866802 temp353_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp353_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp353_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp353_211 #x0000000000000001))
(assert (= var3879421 temp353_211))
(assert (= temp353_212 #x0000000000000000))
(assert (= var4079423 temp353_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp353_213 #x0000000000000002))
(assert (= var4208259 temp353_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp353_214 #x0000000000000000))
(assert (= var4273820 temp353_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp353_215 #x0000000000000001))
(assert (= var211058 temp353_215))
(model-add temp353_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp353_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp353_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp353_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




