(declare-fun temp11060_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11060_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11060_3 () (_ BitVec 64))
(declare-fun temp11060_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11060_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11060_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11060_7 () (_ BitVec 64))
(declare-fun temp11060_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11060_9 () (_ BitVec 64))
(declare-fun temp11060_10 () (_ BitVec 64))
(declare-fun temp11060_11 () (_ BitVec 64))
(declare-fun temp11060_12 () (_ BitVec 64))
(declare-fun temp11060_13 () (_ BitVec 64))
(declare-fun temp11060_14 () (_ BitVec 64))
(declare-fun temp11060_15 () (_ BitVec 64))
(declare-fun temp11060_16 () (_ BitVec 64))
(declare-fun temp11060_17 () (_ BitVec 64))
(declare-fun temp11060_18 () (_ BitVec 64))
(declare-fun temp11060_19 () (_ BitVec 64))
(declare-fun temp11060_20 () (_ BitVec 64))
(declare-fun temp11060_21 () (_ BitVec 64))
(declare-fun temp11060_22 () (_ BitVec 64))
(declare-fun temp11060_23 () (_ BitVec 64))
(declare-fun temp11060_24 () (_ BitVec 64))
(declare-fun temp11060_25 () (_ BitVec 64))
(declare-fun temp11060_26 () (_ BitVec 64))
(declare-fun temp11060_27 () (_ BitVec 64))
(declare-fun temp11060_28 () (_ BitVec 64))
(declare-fun temp11060_29 () (_ BitVec 64))
(declare-fun temp11060_30 () (_ BitVec 64))
(declare-fun temp11060_31 () (_ BitVec 64))
(declare-fun temp11060_32 () (_ BitVec 64))
(declare-fun temp11060_33 () (_ BitVec 64))
(declare-fun temp11060_34 () (_ BitVec 64))
(declare-fun temp11060_35 () (_ BitVec 64))
(declare-fun temp11060_36 () (_ BitVec 64))
(declare-fun temp11060_37 () (_ BitVec 64))
(declare-fun temp11060_38 () (_ BitVec 64))
(declare-fun temp11060_39 () (_ BitVec 64))
(declare-fun temp11060_40 () (_ BitVec 64))
(declare-fun temp11060_41 () (_ BitVec 64))
(declare-fun temp11060_42 () (_ BitVec 64))
(declare-fun temp11060_43 () (_ BitVec 64))
(declare-fun temp11060_44 () (_ BitVec 64))
(declare-fun temp11060_45 () (_ BitVec 64))
(declare-fun temp11060_46 () (_ BitVec 64))
(declare-fun temp11060_47 () (_ BitVec 64))
(declare-fun temp11060_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11060_49 () (_ BitVec 64))
(declare-fun temp11060_50 () (_ BitVec 64))
(declare-fun temp11060_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11060_52 () (_ BitVec 64))
(declare-fun temp11060_53 () (_ BitVec 64))
(declare-fun temp11060_54 () (_ BitVec 64))
(declare-fun temp11060_55 () (_ BitVec 64))
(declare-fun temp11060_56 () (_ BitVec 64))
(declare-fun temp11060_57 () (_ BitVec 64))
(declare-fun temp11060_58 () (_ BitVec 64))
(declare-fun temp11060_59 () (_ BitVec 64))
(declare-fun temp11060_60 () (_ BitVec 64))
(declare-fun temp11060_61 () (_ BitVec 64))
(declare-fun temp11060_62 () (_ BitVec 64))
(declare-fun temp11060_63 () (_ BitVec 64))
(declare-fun temp11060_64 () (_ BitVec 64))
(declare-fun temp11060_65 () (_ BitVec 64))
(declare-fun temp11060_66 () (_ BitVec 64))
(declare-fun temp11060_67 () (_ BitVec 64))
(declare-fun temp11060_68 () (_ BitVec 64))
(declare-fun temp11060_69 () (_ BitVec 64))
(declare-fun temp11060_70 () (_ BitVec 64))
(declare-fun temp11060_71 () (_ BitVec 64))
(declare-fun temp11060_72 () (_ BitVec 64))
(declare-fun temp11060_73 () (_ BitVec 64))
(declare-fun temp11060_74 () (_ BitVec 64))
(declare-fun temp11060_75 () (_ BitVec 64))
(declare-fun temp11060_76 () (_ BitVec 64))
(declare-fun temp11060_77 () (_ BitVec 64))
(declare-fun temp11060_78 () (_ BitVec 64))
(declare-fun temp11060_79 () (_ BitVec 64))
(declare-fun temp11060_80 () (_ BitVec 64))
(declare-fun temp11060_81 () (_ BitVec 64))
(declare-fun temp11060_82 () (_ BitVec 64))
(declare-fun temp11060_83 () (_ BitVec 64))
(declare-fun temp11060_84 () (_ BitVec 64))
(declare-fun temp11060_85 () (_ BitVec 64))
(declare-fun temp11060_86 () (_ BitVec 64))
(declare-fun temp11060_87 () (_ BitVec 64))
(declare-fun temp11060_88 () (_ BitVec 64))
(declare-fun temp11060_89 () (_ BitVec 64))
(declare-fun temp11060_90 () (_ BitVec 64))
(declare-fun temp11060_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11060_92 () (_ BitVec 64))
(declare-fun temp11060_93 () (_ BitVec 64))
(declare-fun temp11060_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11060_95 () (_ BitVec 64))
(declare-fun temp11060_96 () (_ BitVec 64))
(declare-fun temp11060_97 () (_ BitVec 64))
(declare-fun temp11060_98 () (_ BitVec 64))
(declare-fun temp11060_99 () (_ BitVec 64))
(declare-fun temp11060_100 () (_ BitVec 64))
(declare-fun temp11060_101 () (_ BitVec 64))
(declare-fun temp11060_102 () (_ BitVec 64))
(declare-fun temp11060_103 () (_ BitVec 64))
(declare-fun temp11060_104 () (_ BitVec 64))
(declare-fun temp11060_105 () (_ BitVec 64))
(declare-fun temp11060_106 () (_ BitVec 64))
(declare-fun temp11060_107 () (_ BitVec 64))
(declare-fun temp11060_108 () (_ BitVec 64))
(declare-fun temp11060_109 () (_ BitVec 64))
(declare-fun temp11060_110 () (_ BitVec 64))
(declare-fun temp11060_111 () (_ BitVec 64))
(declare-fun temp11060_112 () (_ BitVec 64))
(declare-fun temp11060_113 () (_ BitVec 64))
(declare-fun temp11060_114 () (_ BitVec 64))
(declare-fun temp11060_115 () (_ BitVec 64))
(declare-fun temp11060_116 () (_ BitVec 64))
(declare-fun temp11060_117 () (_ BitVec 64))
(declare-fun temp11060_118 () (_ BitVec 64))
(declare-fun temp11060_119 () (_ BitVec 64))
(declare-fun temp11060_120 () (_ BitVec 64))
(declare-fun temp11060_121 () (_ BitVec 64))
(declare-fun temp11060_122 () (_ BitVec 64))
(declare-fun temp11060_123 () (_ BitVec 64))
(declare-fun temp11060_124 () (_ BitVec 64))
(declare-fun temp11060_125 () (_ BitVec 64))
(declare-fun temp11060_126 () (_ BitVec 64))
(declare-fun temp11060_127 () (_ BitVec 64))
(declare-fun temp11060_128 () (_ BitVec 64))
(declare-fun temp11060_129 () (_ BitVec 64))
(declare-fun temp11060_130 () (_ BitVec 64))
(declare-fun temp11060_131 () (_ BitVec 64))
(declare-fun temp11060_132 () (_ BitVec 64))
(declare-fun temp11060_133 () (_ BitVec 64))
(declare-fun temp11060_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11060_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11060_136 () (_ BitVec 64))
(declare-fun temp11060_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11060_138 () (_ BitVec 64))
(declare-fun temp11060_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11060_140 () (_ BitVec 64))
(declare-fun temp11060_141 () (_ BitVec 64))
(declare-fun temp11060_142 () (_ BitVec 64))
(declare-fun temp11060_143 () (_ BitVec 64))
(declare-fun temp11060_144 () (_ BitVec 64))
(declare-fun temp11060_145 () (_ BitVec 64))
(declare-fun temp11060_146 () (_ BitVec 64))
(declare-fun temp11060_147 () (_ BitVec 64))
(declare-fun temp11060_148 () (_ BitVec 64))
(declare-fun temp11060_149 () (_ BitVec 64))
(declare-fun temp11060_150 () (_ BitVec 64))
(declare-fun temp11060_151 () (_ BitVec 64))
(declare-fun temp11060_152 () (_ BitVec 64))
(declare-fun temp11060_153 () (_ BitVec 64))
(declare-fun temp11060_154 () (_ BitVec 64))
(declare-fun temp11060_155 () (_ BitVec 64))
(declare-fun temp11060_157 () (_ BitVec 64))
(declare-fun temp11060_158 () (_ BitVec 64))
(declare-fun temp11060_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11060_159 () (_ BitVec 64))
(declare-fun temp11060_160 () (_ BitVec 64))
(declare-fun temp11060_162 () (_ BitVec 64))
(declare-fun temp11060_163 () (_ BitVec 64))
(declare-fun temp11060_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11060_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11060_165 () (_ BitVec 64))
(declare-fun temp11060_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11060_167 () (_ BitVec 64))
(declare-fun temp11060_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11060_169 () (_ BitVec 64))
(declare-fun temp11060_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11060_171 () (_ BitVec 64))
(declare-fun temp11060_172 () (_ BitVec 64))
(declare-fun temp11060_173 () (_ BitVec 64))
(declare-fun temp11060_174 () (_ BitVec 64))
(declare-fun temp11060_175 () (_ BitVec 64))
(declare-fun temp11060_176 () (_ BitVec 64))
(declare-fun temp11060_177 () (_ BitVec 64))
(declare-fun temp11060_178 () (_ BitVec 64))
(declare-fun temp11060_179 () (_ BitVec 64))
(declare-fun temp11060_180 () (_ BitVec 64))
(declare-fun temp11060_181 () (_ BitVec 64))
(declare-fun temp11060_182 () (_ BitVec 64))
(declare-fun temp11060_183 () (_ BitVec 64))
(declare-fun temp11060_184 () (_ BitVec 64))
(declare-fun temp11060_185 () (_ BitVec 64))
(declare-fun temp11060_186 () (_ BitVec 64))
(declare-fun temp11060_187 () (_ BitVec 64))
(declare-fun temp11060_188 () (_ BitVec 64))
(declare-fun temp11060_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11060_190 () (_ BitVec 64))
(declare-fun temp11060_192 () (_ BitVec 64))
(declare-fun temp11060_193 () (_ BitVec 64))
(declare-fun temp11060_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11060_194 () (_ BitVec 64))
(declare-fun temp11060_195 () (_ BitVec 64))
(declare-fun temp11060_197 () (_ BitVec 64))
(declare-fun temp11060_198 () (_ BitVec 64))
(declare-fun temp11060_196 () (_ BitVec 64))
(declare-fun temp11060_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11060_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11060_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11060_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11060_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11060_204 () (_ BitVec 64))
(declare-fun temp11060_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11060_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11060_207 () (_ BitVec 64))
(declare-fun temp11060_208 () (_ BitVec 64))
(declare-fun temp11060_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11060_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11060_211 () (_ BitVec 64))
(declare-fun temp11060_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11060_213 () (_ BitVec 64))
(declare-fun temp11060_214 () (_ BitVec 64))
(declare-fun temp11060_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11060_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11060_217 () (_ BitVec 64))
(declare-fun temp11060_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11060_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp11060_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun temp11060_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp11060_222 () (_ BitVec 64))
(declare-fun temp11060_223 () (_ BitVec 64))
(declare-fun var5191299 () (_ BitVec 64))
(declare-fun var5256844 () (_ BitVec 64))
(declare-fun temp11060_224 () (_ BitVec 64))
(declare-fun temp11060_225 () (_ BitVec 64))
(declare-fun var6632212 () (_ BitVec 64))
(declare-fun var6632179 () (_ BitVec 64))
(declare-fun var6500743 () (_ BitVec 64))
(declare-fun var6500739 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp11060_226 () (_ BitVec 64))
(assert (= temp11060_1 #x0000000000000001))
(assert (= var77203 temp11060_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11060_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11060_2)))
(assert (= temp11060_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11060_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11060_4 #x0000000000000000))
(assert (= var210941 temp11060_4))
(assert (= temp11060_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11060_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11060_6 #x0000000000000000))
(assert (= var210986 temp11060_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11060_7 #x0000000000000000))
(assert (= temp11060_8 temp11060_7))
(assert (= temp11060_9 (select ARGNAME_padding_NAMEEND_VAL temp11060_8)))
(assert (= temp11060_10 #x0000000000000001))
(assert (= temp11060_11 temp11060_10))
(assert (= temp11060_12 (select ARGNAME_padding_NAMEEND_VAL temp11060_11)))
(assert (= temp11060_13 #x0000000000000002))
(assert (= temp11060_14 temp11060_13))
(assert (= temp11060_15 (select ARGNAME_padding_NAMEEND_VAL temp11060_14)))
(assert (= temp11060_16 #x0000000000000003))
(assert (= temp11060_17 temp11060_16))
(assert (= temp11060_18 (select ARGNAME_padding_NAMEEND_VAL temp11060_17)))
(assert (= temp11060_19 #x0000000000000004))
(assert (= temp11060_20 temp11060_19))
(assert (= temp11060_21 (select ARGNAME_padding_NAMEEND_VAL temp11060_20)))
(assert (= temp11060_22 #x0000000000000005))
(assert (= temp11060_23 temp11060_22))
(assert (= temp11060_24 (select ARGNAME_padding_NAMEEND_VAL temp11060_23)))
(assert (= temp11060_25 #x0000000000000000))
(assert (= temp11060_26 #x0000000000000000))
(assert (= temp11060_27 temp11060_26))
(assert (= temp11060_28 (select ARGNAME_padding_NAMEEND_VAL temp11060_27)))
(assert (= temp11060_29 #x0000000000000000))
(assert (= temp11060_30 #x0000000000000001))
(assert (= temp11060_31 temp11060_30))
(assert (= temp11060_32 (select ARGNAME_padding_NAMEEND_VAL temp11060_31)))
(assert (= temp11060_33 #x0000000000000000))
(assert (= temp11060_34 #x0000000000000002))
(assert (= temp11060_35 temp11060_34))
(assert (= temp11060_36 (select ARGNAME_padding_NAMEEND_VAL temp11060_35)))
(assert (= temp11060_37 #x0000000000000000))
(assert (= temp11060_38 #x0000000000000003))
(assert (= temp11060_39 temp11060_38))
(assert (= temp11060_40 (select ARGNAME_padding_NAMEEND_VAL temp11060_39)))
(assert (= temp11060_41 #x0000000000000000))
(assert (= temp11060_42 #x0000000000000004))
(assert (= temp11060_43 temp11060_42))
(assert (= temp11060_44 (select ARGNAME_padding_NAMEEND_VAL temp11060_43)))
(assert (= temp11060_45 #x0000000000000000))
(assert (= temp11060_46 #x0000000000000005))
(assert (= temp11060_47 temp11060_46))
(assert (= temp11060_48 (select ARGNAME_padding_NAMEEND_VAL temp11060_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11060_28 temp11060_25)
             (bvslt temp11060_32 temp11060_29)
             (bvslt temp11060_36 temp11060_33)
             (bvslt temp11060_40 temp11060_37)
             (bvslt temp11060_44 temp11060_41)
             (bvslt temp11060_48 temp11060_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11060_49 #x0000000000000000))
(assert (= var1191714 temp11060_49))
(assert (= temp11060_50 #x0000000000000000))
(assert (= temp11060_51 temp11060_50))
(assert (= temp11060_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11060_51)))
(assert (= temp11060_53 #x0000000000000001))
(assert (= temp11060_54 temp11060_53))
(assert (= temp11060_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11060_54)))
(assert (= temp11060_56 #x0000000000000002))
(assert (= temp11060_57 temp11060_56))
(assert (= temp11060_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11060_57)))
(assert (= temp11060_59 #x0000000000000003))
(assert (= temp11060_60 temp11060_59))
(assert (= temp11060_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11060_60)))
(assert (= temp11060_62 #x0000000000000004))
(assert (= temp11060_63 temp11060_62))
(assert (= temp11060_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11060_63)))
(assert (= temp11060_65 #x0000000000000005))
(assert (= temp11060_66 temp11060_65))
(assert (= temp11060_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11060_66)))
(assert (= temp11060_68 #x0000000000000000))
(assert (= temp11060_69 #x0000000000000000))
(assert (= temp11060_70 temp11060_69))
(assert (= temp11060_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11060_70)))
(assert (= temp11060_72 #x0000000000000000))
(assert (= temp11060_73 #x0000000000000001))
(assert (= temp11060_74 temp11060_73))
(assert (= temp11060_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11060_74)))
(assert (= temp11060_76 #x0000000000000000))
(assert (= temp11060_77 #x0000000000000002))
(assert (= temp11060_78 temp11060_77))
(assert (= temp11060_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11060_78)))
(assert (= temp11060_80 #x0000000000000000))
(assert (= temp11060_81 #x0000000000000003))
(assert (= temp11060_82 temp11060_81))
(assert (= temp11060_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11060_82)))
(assert (= temp11060_84 #x0000000000000000))
(assert (= temp11060_85 #x0000000000000004))
(assert (= temp11060_86 temp11060_85))
(assert (= temp11060_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11060_86)))
(assert (= temp11060_88 #x0000000000000000))
(assert (= temp11060_89 #x0000000000000005))
(assert (= temp11060_90 temp11060_89))
(assert (= temp11060_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11060_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11060_71 temp11060_68)
             (bvslt temp11060_75 temp11060_72)
             (bvslt temp11060_79 temp11060_76)
             (bvslt temp11060_83 temp11060_80)
             (bvslt temp11060_87 temp11060_84)
             (bvslt temp11060_91 temp11060_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11060_92 #x0000000000000000))
(assert (= var1191725 temp11060_92))
(assert (= temp11060_93 #x0000000000000000))
(assert (= temp11060_94 temp11060_93))
(assert (= temp11060_95 (select ARGNAME_stride_NAMEEND_VAL temp11060_94)))
(assert (= temp11060_96 #x0000000000000001))
(assert (= temp11060_97 temp11060_96))
(assert (= temp11060_98 (select ARGNAME_stride_NAMEEND_VAL temp11060_97)))
(assert (= temp11060_99 #x0000000000000002))
(assert (= temp11060_100 temp11060_99))
(assert (= temp11060_101 (select ARGNAME_stride_NAMEEND_VAL temp11060_100)))
(assert (= temp11060_102 #x0000000000000003))
(assert (= temp11060_103 temp11060_102))
(assert (= temp11060_104 (select ARGNAME_stride_NAMEEND_VAL temp11060_103)))
(assert (= temp11060_105 #x0000000000000004))
(assert (= temp11060_106 temp11060_105))
(assert (= temp11060_107 (select ARGNAME_stride_NAMEEND_VAL temp11060_106)))
(assert (= temp11060_108 #x0000000000000005))
(assert (= temp11060_109 temp11060_108))
(assert (= temp11060_110 (select ARGNAME_stride_NAMEEND_VAL temp11060_109)))
(assert (= temp11060_111 #x0000000000000000))
(assert (= temp11060_112 #x0000000000000000))
(assert (= temp11060_113 temp11060_112))
(assert (= temp11060_114 (select ARGNAME_stride_NAMEEND_VAL temp11060_113)))
(assert (= temp11060_115 #x0000000000000000))
(assert (= temp11060_116 #x0000000000000001))
(assert (= temp11060_117 temp11060_116))
(assert (= temp11060_118 (select ARGNAME_stride_NAMEEND_VAL temp11060_117)))
(assert (= temp11060_119 #x0000000000000000))
(assert (= temp11060_120 #x0000000000000002))
(assert (= temp11060_121 temp11060_120))
(assert (= temp11060_122 (select ARGNAME_stride_NAMEEND_VAL temp11060_121)))
(assert (= temp11060_123 #x0000000000000000))
(assert (= temp11060_124 #x0000000000000003))
(assert (= temp11060_125 temp11060_124))
(assert (= temp11060_126 (select ARGNAME_stride_NAMEEND_VAL temp11060_125)))
(assert (= temp11060_127 #x0000000000000000))
(assert (= temp11060_128 #x0000000000000004))
(assert (= temp11060_129 temp11060_128))
(assert (= temp11060_130 (select ARGNAME_stride_NAMEEND_VAL temp11060_129)))
(assert (= temp11060_131 #x0000000000000000))
(assert (= temp11060_132 #x0000000000000005))
(assert (= temp11060_133 temp11060_132))
(assert (= temp11060_134 (select ARGNAME_stride_NAMEEND_VAL temp11060_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11060_114 temp11060_111)
             (bvsle temp11060_118 temp11060_115)
             (bvsle temp11060_122 temp11060_119)
             (bvsle temp11060_126 temp11060_123)
             (bvsle temp11060_130 temp11060_127)
             (bvsle temp11060_134 temp11060_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11060_135 #x0000000000000000))
(assert (= var1191735 temp11060_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11060_136 #x0000000000000001))
(assert (= var1191747 temp11060_136))
(assert (= temp11060_137 #x0000000000000000))
(assert (= var1179826 temp11060_137))
(assert (= temp11060_138 #x0000000000000000))
(assert (= temp11060_139 temp11060_138))
(assert (= temp11060_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11060_139)))
(assert (= temp11060_141 #x0000000000000001))
(assert (= temp11060_142 temp11060_141))
(assert (= temp11060_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11060_142)))
(assert (= temp11060_144 #x0000000000000002))
(assert (= temp11060_145 temp11060_144))
(assert (= temp11060_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11060_145)))
(assert (= temp11060_147 #x0000000000000003))
(assert (= temp11060_148 temp11060_147))
(assert (= temp11060_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11060_148)))
(assert (= temp11060_150 #x0000000000000004))
(assert (= temp11060_151 temp11060_150))
(assert (= temp11060_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11060_151)))
(assert (= temp11060_153 #x0000000000000005))
(assert (= temp11060_154 temp11060_153))
(assert (= temp11060_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11060_154)))
(assert (= temp11060_157 var1179826))
(assert (= temp11060_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11060_157)))
(assert (= temp11060_156 temp11060_158))
(assert (= var1191780
   (ite (bvslt temp11060_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11060_159 #x0000000000000000))
(assert (= var1191780 temp11060_159))
(assert (= temp11060_160 #x0000000000000000))
(assert (= var1179826 temp11060_160))
(assert (= temp11060_162 var1179826))
(assert (= temp11060_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11060_162)))
(assert (= temp11060_161 temp11060_163))
(assert (= var1191802 (bvsmod temp11060_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11060_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11060_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11060_165 #x0000000000000001))
(assert (= var1191803 temp11060_165))
(assert (= temp11060_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11060_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11060_167 #x0000000000000001))
(assert (= var1191823 temp11060_167))
(assert (= temp11060_168 #x0000000000000001))
(assert (= var1180714 temp11060_168))
(assert (= temp11060_169 #x0000000000000000))
(assert (= temp11060_170 temp11060_169))
(assert (= temp11060_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11060_170)))
(assert (= temp11060_172 #x0000000000000001))
(assert (= temp11060_173 temp11060_172))
(assert (= temp11060_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11060_173)))
(assert (= temp11060_175 #x0000000000000002))
(assert (= temp11060_176 temp11060_175))
(assert (= temp11060_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11060_176)))
(assert (= temp11060_178 #x0000000000000003))
(assert (= temp11060_179 temp11060_178))
(assert (= temp11060_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11060_179)))
(assert (= temp11060_181 #x0000000000000004))
(assert (= temp11060_182 temp11060_181))
(assert (= temp11060_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11060_182)))
(assert (= temp11060_184 #x0000000000000005))
(assert (= temp11060_185 temp11060_184))
(assert (= temp11060_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11060_185)))
(assert (= temp11060_187 #x0000000000000000))
(assert (= temp11060_188
   (ite (bvslt var1180714 temp11060_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11060_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11060_188)))
(assert (= var1191831 temp11060_189))
(assert (bvslt (ite (bvslt var1180714 temp11060_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11060_190 #x0000000000000001))
(assert (= var1180714 temp11060_190))
(assert (= temp11060_192 var1180714))
(assert (= temp11060_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11060_192)))
(assert (= temp11060_191 temp11060_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11060_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11060_194 #x0000000000000001))
(assert (= var1191836 temp11060_194))
(assert (= temp11060_195 #x0000000000000000))
(assert (= var1179826 temp11060_195))
(assert (= temp11060_197 var1179826))
(assert (= temp11060_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11060_197)))
(assert (= temp11060_196 temp11060_198))
(assert (= temp11060_199 #x0000000000000002))
(assert (= var1586025 temp11060_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11060_200 #x0000000000000001))
(assert (= var1191993 temp11060_200))
(assert (= temp11060_201 #x0000000000000001))
(assert (= var2700303 temp11060_201))
(assert (= temp11060_202 #x0000000000000001))
(assert (= var2962447 temp11060_202))
(assert (= temp11060_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11060_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11060_204 #x0000000000000001))
(assert (= var211058 temp11060_204))
(assert (= temp11060_205 #x0000000000000001))
(assert (= var211188 temp11060_205))
(assert (= var3879401 var211188))
(assert (= temp11060_206 #x0000000000000000))
(assert (= var3866802 temp11060_206))
(assert (= temp11060_207 #x0000000000000000))
(assert (= temp11060_208
   (ite (bvslt var3866802 temp11060_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11060_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11060_208)))
(assert (= var3879420 temp11060_209))
(assert (bvslt (ite (bvslt var3866802 temp11060_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11060_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11060_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11060_211 #x0000000000000000))
(assert (= var3879421 temp11060_211))
(assert (= temp11060_212 #x0000000000000001))
(assert (= var3867690 temp11060_212))
(assert (= temp11060_213 #x0000000000000000))
(assert (= temp11060_214
   (ite (bvslt var3867690 temp11060_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11060_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11060_214)))
(assert (= var3879423 temp11060_215))
(assert (bvslt (ite (bvslt var3867690 temp11060_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11060_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11060_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11060_217 #x0000000000000001))
(assert (= var3879424 temp11060_217))
(assert (= temp11060_218 #x0000000000000000))
(assert (= var4133117 temp11060_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11060_219 #x0000000000000002))
(assert (= var4339331 temp11060_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11060_220 #x0000000000000000))
(assert (= var4404892 temp11060_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4600208 var211201))
(assert (= var4862352 var211201))
(assert (= temp11060_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp11060_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11060_222 #x0000000000000000))
(assert (= var212414 temp11060_222))
(assert (= temp11060_223 #x0000000000000002))
(assert (= var5191299 temp11060_223))
(assert (= var5256844 var5191299))
(assert (= temp11060_224 #x0000000000000001))
(assert (= var211058 temp11060_224))
(assert (= temp11060_225 #x0000000000000000))
(assert (= var6632212 temp11060_225))
(assert (= var6632179 var6632212))
(assert (= var6500743 var6632179))
(assert (= var6500739 var6500743))
(assert (= var212669 var6500739))
(assert (= temp11060_226 #x0000000000000000))
(assert (= var212669 temp11060_226))
(model-add temp11060_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11060_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11060_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11060_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




