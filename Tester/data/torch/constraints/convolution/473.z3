(declare-fun temp630_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp630_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp630_3 () (_ BitVec 64))
(declare-fun temp630_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp630_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp630_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp630_7 () (_ BitVec 64))
(declare-fun temp630_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp630_9 () (_ BitVec 64))
(declare-fun temp630_10 () (_ BitVec 64))
(declare-fun temp630_11 () (_ BitVec 64))
(declare-fun temp630_12 () (_ BitVec 64))
(declare-fun temp630_13 () (_ BitVec 64))
(declare-fun temp630_14 () (_ BitVec 64))
(declare-fun temp630_15 () (_ BitVec 64))
(declare-fun temp630_16 () (_ BitVec 64))
(declare-fun temp630_17 () (_ BitVec 64))
(declare-fun temp630_18 () (_ BitVec 64))
(declare-fun temp630_19 () (_ BitVec 64))
(declare-fun temp630_20 () (_ BitVec 64))
(declare-fun temp630_21 () (_ BitVec 64))
(declare-fun temp630_22 () (_ BitVec 64))
(declare-fun temp630_23 () (_ BitVec 64))
(declare-fun temp630_24 () (_ BitVec 64))
(declare-fun temp630_25 () (_ BitVec 64))
(declare-fun temp630_26 () (_ BitVec 64))
(declare-fun temp630_27 () (_ BitVec 64))
(declare-fun temp630_28 () (_ BitVec 64))
(declare-fun temp630_29 () (_ BitVec 64))
(declare-fun temp630_30 () (_ BitVec 64))
(declare-fun temp630_31 () (_ BitVec 64))
(declare-fun temp630_32 () (_ BitVec 64))
(declare-fun temp630_33 () (_ BitVec 64))
(declare-fun temp630_34 () (_ BitVec 64))
(declare-fun temp630_35 () (_ BitVec 64))
(declare-fun temp630_36 () (_ BitVec 64))
(declare-fun temp630_37 () (_ BitVec 64))
(declare-fun temp630_38 () (_ BitVec 64))
(declare-fun temp630_39 () (_ BitVec 64))
(declare-fun temp630_40 () (_ BitVec 64))
(declare-fun temp630_41 () (_ BitVec 64))
(declare-fun temp630_42 () (_ BitVec 64))
(declare-fun temp630_43 () (_ BitVec 64))
(declare-fun temp630_44 () (_ BitVec 64))
(declare-fun temp630_45 () (_ BitVec 64))
(declare-fun temp630_46 () (_ BitVec 64))
(declare-fun temp630_47 () (_ BitVec 64))
(declare-fun temp630_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp630_49 () (_ BitVec 64))
(declare-fun temp630_50 () (_ BitVec 64))
(declare-fun temp630_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp630_52 () (_ BitVec 64))
(declare-fun temp630_53 () (_ BitVec 64))
(declare-fun temp630_54 () (_ BitVec 64))
(declare-fun temp630_55 () (_ BitVec 64))
(declare-fun temp630_56 () (_ BitVec 64))
(declare-fun temp630_57 () (_ BitVec 64))
(declare-fun temp630_58 () (_ BitVec 64))
(declare-fun temp630_59 () (_ BitVec 64))
(declare-fun temp630_60 () (_ BitVec 64))
(declare-fun temp630_61 () (_ BitVec 64))
(declare-fun temp630_62 () (_ BitVec 64))
(declare-fun temp630_63 () (_ BitVec 64))
(declare-fun temp630_64 () (_ BitVec 64))
(declare-fun temp630_65 () (_ BitVec 64))
(declare-fun temp630_66 () (_ BitVec 64))
(declare-fun temp630_67 () (_ BitVec 64))
(declare-fun temp630_68 () (_ BitVec 64))
(declare-fun temp630_69 () (_ BitVec 64))
(declare-fun temp630_70 () (_ BitVec 64))
(declare-fun temp630_71 () (_ BitVec 64))
(declare-fun temp630_72 () (_ BitVec 64))
(declare-fun temp630_73 () (_ BitVec 64))
(declare-fun temp630_74 () (_ BitVec 64))
(declare-fun temp630_75 () (_ BitVec 64))
(declare-fun temp630_76 () (_ BitVec 64))
(declare-fun temp630_77 () (_ BitVec 64))
(declare-fun temp630_78 () (_ BitVec 64))
(declare-fun temp630_79 () (_ BitVec 64))
(declare-fun temp630_80 () (_ BitVec 64))
(declare-fun temp630_81 () (_ BitVec 64))
(declare-fun temp630_82 () (_ BitVec 64))
(declare-fun temp630_83 () (_ BitVec 64))
(declare-fun temp630_84 () (_ BitVec 64))
(declare-fun temp630_85 () (_ BitVec 64))
(declare-fun temp630_86 () (_ BitVec 64))
(declare-fun temp630_87 () (_ BitVec 64))
(declare-fun temp630_88 () (_ BitVec 64))
(declare-fun temp630_89 () (_ BitVec 64))
(declare-fun temp630_90 () (_ BitVec 64))
(declare-fun temp630_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp630_92 () (_ BitVec 64))
(declare-fun temp630_93 () (_ BitVec 64))
(declare-fun temp630_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp630_95 () (_ BitVec 64))
(declare-fun temp630_96 () (_ BitVec 64))
(declare-fun temp630_97 () (_ BitVec 64))
(declare-fun temp630_98 () (_ BitVec 64))
(declare-fun temp630_99 () (_ BitVec 64))
(declare-fun temp630_100 () (_ BitVec 64))
(declare-fun temp630_101 () (_ BitVec 64))
(declare-fun temp630_102 () (_ BitVec 64))
(declare-fun temp630_103 () (_ BitVec 64))
(declare-fun temp630_104 () (_ BitVec 64))
(declare-fun temp630_105 () (_ BitVec 64))
(declare-fun temp630_106 () (_ BitVec 64))
(declare-fun temp630_107 () (_ BitVec 64))
(declare-fun temp630_108 () (_ BitVec 64))
(declare-fun temp630_109 () (_ BitVec 64))
(declare-fun temp630_110 () (_ BitVec 64))
(declare-fun temp630_111 () (_ BitVec 64))
(declare-fun temp630_112 () (_ BitVec 64))
(declare-fun temp630_113 () (_ BitVec 64))
(declare-fun temp630_114 () (_ BitVec 64))
(declare-fun temp630_115 () (_ BitVec 64))
(declare-fun temp630_116 () (_ BitVec 64))
(declare-fun temp630_117 () (_ BitVec 64))
(declare-fun temp630_118 () (_ BitVec 64))
(declare-fun temp630_119 () (_ BitVec 64))
(declare-fun temp630_120 () (_ BitVec 64))
(declare-fun temp630_121 () (_ BitVec 64))
(declare-fun temp630_122 () (_ BitVec 64))
(declare-fun temp630_123 () (_ BitVec 64))
(declare-fun temp630_124 () (_ BitVec 64))
(declare-fun temp630_125 () (_ BitVec 64))
(declare-fun temp630_126 () (_ BitVec 64))
(declare-fun temp630_127 () (_ BitVec 64))
(declare-fun temp630_128 () (_ BitVec 64))
(declare-fun temp630_129 () (_ BitVec 64))
(declare-fun temp630_130 () (_ BitVec 64))
(declare-fun temp630_131 () (_ BitVec 64))
(declare-fun temp630_132 () (_ BitVec 64))
(declare-fun temp630_133 () (_ BitVec 64))
(declare-fun temp630_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp630_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp630_136 () (_ BitVec 64))
(declare-fun temp630_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp630_138 () (_ BitVec 64))
(declare-fun temp630_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp630_140 () (_ BitVec 64))
(declare-fun temp630_141 () (_ BitVec 64))
(declare-fun temp630_142 () (_ BitVec 64))
(declare-fun temp630_143 () (_ BitVec 64))
(declare-fun temp630_144 () (_ BitVec 64))
(declare-fun temp630_145 () (_ BitVec 64))
(declare-fun temp630_146 () (_ BitVec 64))
(declare-fun temp630_147 () (_ BitVec 64))
(declare-fun temp630_148 () (_ BitVec 64))
(declare-fun temp630_149 () (_ BitVec 64))
(declare-fun temp630_150 () (_ BitVec 64))
(declare-fun temp630_151 () (_ BitVec 64))
(declare-fun temp630_152 () (_ BitVec 64))
(declare-fun temp630_153 () (_ BitVec 64))
(declare-fun temp630_154 () (_ BitVec 64))
(declare-fun temp630_155 () (_ BitVec 64))
(declare-fun temp630_157 () (_ BitVec 64))
(declare-fun temp630_158 () (_ BitVec 64))
(declare-fun temp630_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp630_159 () (_ BitVec 64))
(declare-fun temp630_160 () (_ BitVec 64))
(declare-fun temp630_162 () (_ BitVec 64))
(declare-fun temp630_163 () (_ BitVec 64))
(declare-fun temp630_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp630_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp630_165 () (_ BitVec 64))
(declare-fun temp630_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp630_167 () (_ BitVec 64))
(declare-fun temp630_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp630_169 () (_ BitVec 64))
(declare-fun temp630_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp630_171 () (_ BitVec 64))
(declare-fun temp630_172 () (_ BitVec 64))
(declare-fun temp630_173 () (_ BitVec 64))
(declare-fun temp630_174 () (_ BitVec 64))
(declare-fun temp630_175 () (_ BitVec 64))
(declare-fun temp630_176 () (_ BitVec 64))
(declare-fun temp630_177 () (_ BitVec 64))
(declare-fun temp630_178 () (_ BitVec 64))
(declare-fun temp630_179 () (_ BitVec 64))
(declare-fun temp630_180 () (_ BitVec 64))
(declare-fun temp630_181 () (_ BitVec 64))
(declare-fun temp630_182 () (_ BitVec 64))
(declare-fun temp630_183 () (_ BitVec 64))
(declare-fun temp630_184 () (_ BitVec 64))
(declare-fun temp630_185 () (_ BitVec 64))
(declare-fun temp630_186 () (_ BitVec 64))
(declare-fun temp630_187 () (_ BitVec 64))
(declare-fun temp630_188 () (_ BitVec 64))
(declare-fun temp630_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp630_190 () (_ BitVec 64))
(declare-fun temp630_192 () (_ BitVec 64))
(declare-fun temp630_193 () (_ BitVec 64))
(declare-fun temp630_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp630_194 () (_ BitVec 64))
(declare-fun temp630_195 () (_ BitVec 64))
(declare-fun temp630_197 () (_ BitVec 64))
(declare-fun temp630_198 () (_ BitVec 64))
(declare-fun temp630_196 () (_ BitVec 64))
(declare-fun temp630_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp630_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp630_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp630_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp630_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp630_204 () (_ BitVec 64))
(declare-fun temp630_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp630_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp630_207 () (_ BitVec 64))
(declare-fun temp630_208 () (_ BitVec 64))
(declare-fun temp630_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp630_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp630_211 () (_ BitVec 64))
(declare-fun temp630_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp630_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp630_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp630_215 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5717837 () (_ BitVec 64))
(declare-fun temp630_216 () (_ BitVec 64))
(assert (= temp630_1 #x0000000000000001))
(assert (= var77203 temp630_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp630_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp630_2)))
(assert (= temp630_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp630_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp630_4 #x0000000000000000))
(assert (= var210941 temp630_4))
(assert (= temp630_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp630_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp630_6 #x0000000000000000))
(assert (= var210986 temp630_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp630_7 #x0000000000000000))
(assert (= temp630_8 temp630_7))
(assert (= temp630_9 (select ARGNAME_padding_NAMEEND_VAL temp630_8)))
(assert (= temp630_10 #x0000000000000001))
(assert (= temp630_11 temp630_10))
(assert (= temp630_12 (select ARGNAME_padding_NAMEEND_VAL temp630_11)))
(assert (= temp630_13 #x0000000000000002))
(assert (= temp630_14 temp630_13))
(assert (= temp630_15 (select ARGNAME_padding_NAMEEND_VAL temp630_14)))
(assert (= temp630_16 #x0000000000000003))
(assert (= temp630_17 temp630_16))
(assert (= temp630_18 (select ARGNAME_padding_NAMEEND_VAL temp630_17)))
(assert (= temp630_19 #x0000000000000004))
(assert (= temp630_20 temp630_19))
(assert (= temp630_21 (select ARGNAME_padding_NAMEEND_VAL temp630_20)))
(assert (= temp630_22 #x0000000000000005))
(assert (= temp630_23 temp630_22))
(assert (= temp630_24 (select ARGNAME_padding_NAMEEND_VAL temp630_23)))
(assert (= temp630_25 #x0000000000000000))
(assert (= temp630_26 #x0000000000000000))
(assert (= temp630_27 temp630_26))
(assert (= temp630_28 (select ARGNAME_padding_NAMEEND_VAL temp630_27)))
(assert (= temp630_29 #x0000000000000000))
(assert (= temp630_30 #x0000000000000001))
(assert (= temp630_31 temp630_30))
(assert (= temp630_32 (select ARGNAME_padding_NAMEEND_VAL temp630_31)))
(assert (= temp630_33 #x0000000000000000))
(assert (= temp630_34 #x0000000000000002))
(assert (= temp630_35 temp630_34))
(assert (= temp630_36 (select ARGNAME_padding_NAMEEND_VAL temp630_35)))
(assert (= temp630_37 #x0000000000000000))
(assert (= temp630_38 #x0000000000000003))
(assert (= temp630_39 temp630_38))
(assert (= temp630_40 (select ARGNAME_padding_NAMEEND_VAL temp630_39)))
(assert (= temp630_41 #x0000000000000000))
(assert (= temp630_42 #x0000000000000004))
(assert (= temp630_43 temp630_42))
(assert (= temp630_44 (select ARGNAME_padding_NAMEEND_VAL temp630_43)))
(assert (= temp630_45 #x0000000000000000))
(assert (= temp630_46 #x0000000000000005))
(assert (= temp630_47 temp630_46))
(assert (= temp630_48 (select ARGNAME_padding_NAMEEND_VAL temp630_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp630_28 temp630_25)
             (bvslt temp630_32 temp630_29)
             (bvslt temp630_36 temp630_33)
             (bvslt temp630_40 temp630_37)
             (bvslt temp630_44 temp630_41)
             (bvslt temp630_48 temp630_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp630_49 #x0000000000000000))
(assert (= var1191714 temp630_49))
(assert (= temp630_50 #x0000000000000000))
(assert (= temp630_51 temp630_50))
(assert (= temp630_52 (select ARGNAME_output_padding_NAMEEND_VAL temp630_51)))
(assert (= temp630_53 #x0000000000000001))
(assert (= temp630_54 temp630_53))
(assert (= temp630_55 (select ARGNAME_output_padding_NAMEEND_VAL temp630_54)))
(assert (= temp630_56 #x0000000000000002))
(assert (= temp630_57 temp630_56))
(assert (= temp630_58 (select ARGNAME_output_padding_NAMEEND_VAL temp630_57)))
(assert (= temp630_59 #x0000000000000003))
(assert (= temp630_60 temp630_59))
(assert (= temp630_61 (select ARGNAME_output_padding_NAMEEND_VAL temp630_60)))
(assert (= temp630_62 #x0000000000000004))
(assert (= temp630_63 temp630_62))
(assert (= temp630_64 (select ARGNAME_output_padding_NAMEEND_VAL temp630_63)))
(assert (= temp630_65 #x0000000000000005))
(assert (= temp630_66 temp630_65))
(assert (= temp630_67 (select ARGNAME_output_padding_NAMEEND_VAL temp630_66)))
(assert (= temp630_68 #x0000000000000000))
(assert (= temp630_69 #x0000000000000000))
(assert (= temp630_70 temp630_69))
(assert (= temp630_71 (select ARGNAME_output_padding_NAMEEND_VAL temp630_70)))
(assert (= temp630_72 #x0000000000000000))
(assert (= temp630_73 #x0000000000000001))
(assert (= temp630_74 temp630_73))
(assert (= temp630_75 (select ARGNAME_output_padding_NAMEEND_VAL temp630_74)))
(assert (= temp630_76 #x0000000000000000))
(assert (= temp630_77 #x0000000000000002))
(assert (= temp630_78 temp630_77))
(assert (= temp630_79 (select ARGNAME_output_padding_NAMEEND_VAL temp630_78)))
(assert (= temp630_80 #x0000000000000000))
(assert (= temp630_81 #x0000000000000003))
(assert (= temp630_82 temp630_81))
(assert (= temp630_83 (select ARGNAME_output_padding_NAMEEND_VAL temp630_82)))
(assert (= temp630_84 #x0000000000000000))
(assert (= temp630_85 #x0000000000000004))
(assert (= temp630_86 temp630_85))
(assert (= temp630_87 (select ARGNAME_output_padding_NAMEEND_VAL temp630_86)))
(assert (= temp630_88 #x0000000000000000))
(assert (= temp630_89 #x0000000000000005))
(assert (= temp630_90 temp630_89))
(assert (= temp630_91 (select ARGNAME_output_padding_NAMEEND_VAL temp630_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp630_71 temp630_68)
             (bvslt temp630_75 temp630_72)
             (bvslt temp630_79 temp630_76)
             (bvslt temp630_83 temp630_80)
             (bvslt temp630_87 temp630_84)
             (bvslt temp630_91 temp630_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp630_92 #x0000000000000000))
(assert (= var1191725 temp630_92))
(assert (= temp630_93 #x0000000000000000))
(assert (= temp630_94 temp630_93))
(assert (= temp630_95 (select ARGNAME_stride_NAMEEND_VAL temp630_94)))
(assert (= temp630_96 #x0000000000000001))
(assert (= temp630_97 temp630_96))
(assert (= temp630_98 (select ARGNAME_stride_NAMEEND_VAL temp630_97)))
(assert (= temp630_99 #x0000000000000002))
(assert (= temp630_100 temp630_99))
(assert (= temp630_101 (select ARGNAME_stride_NAMEEND_VAL temp630_100)))
(assert (= temp630_102 #x0000000000000003))
(assert (= temp630_103 temp630_102))
(assert (= temp630_104 (select ARGNAME_stride_NAMEEND_VAL temp630_103)))
(assert (= temp630_105 #x0000000000000004))
(assert (= temp630_106 temp630_105))
(assert (= temp630_107 (select ARGNAME_stride_NAMEEND_VAL temp630_106)))
(assert (= temp630_108 #x0000000000000005))
(assert (= temp630_109 temp630_108))
(assert (= temp630_110 (select ARGNAME_stride_NAMEEND_VAL temp630_109)))
(assert (= temp630_111 #x0000000000000000))
(assert (= temp630_112 #x0000000000000000))
(assert (= temp630_113 temp630_112))
(assert (= temp630_114 (select ARGNAME_stride_NAMEEND_VAL temp630_113)))
(assert (= temp630_115 #x0000000000000000))
(assert (= temp630_116 #x0000000000000001))
(assert (= temp630_117 temp630_116))
(assert (= temp630_118 (select ARGNAME_stride_NAMEEND_VAL temp630_117)))
(assert (= temp630_119 #x0000000000000000))
(assert (= temp630_120 #x0000000000000002))
(assert (= temp630_121 temp630_120))
(assert (= temp630_122 (select ARGNAME_stride_NAMEEND_VAL temp630_121)))
(assert (= temp630_123 #x0000000000000000))
(assert (= temp630_124 #x0000000000000003))
(assert (= temp630_125 temp630_124))
(assert (= temp630_126 (select ARGNAME_stride_NAMEEND_VAL temp630_125)))
(assert (= temp630_127 #x0000000000000000))
(assert (= temp630_128 #x0000000000000004))
(assert (= temp630_129 temp630_128))
(assert (= temp630_130 (select ARGNAME_stride_NAMEEND_VAL temp630_129)))
(assert (= temp630_131 #x0000000000000000))
(assert (= temp630_132 #x0000000000000005))
(assert (= temp630_133 temp630_132))
(assert (= temp630_134 (select ARGNAME_stride_NAMEEND_VAL temp630_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp630_114 temp630_111)
             (bvsle temp630_118 temp630_115)
             (bvsle temp630_122 temp630_119)
             (bvsle temp630_126 temp630_123)
             (bvsle temp630_130 temp630_127)
             (bvsle temp630_134 temp630_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp630_135 #x0000000000000000))
(assert (= var1191735 temp630_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp630_136 #x0000000000000001))
(assert (= var1191747 temp630_136))
(assert (= temp630_137 #x0000000000000000))
(assert (= var1179826 temp630_137))
(assert (= temp630_138 #x0000000000000000))
(assert (= temp630_139 temp630_138))
(assert (= temp630_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp630_139)))
(assert (= temp630_141 #x0000000000000001))
(assert (= temp630_142 temp630_141))
(assert (= temp630_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp630_142)))
(assert (= temp630_144 #x0000000000000002))
(assert (= temp630_145 temp630_144))
(assert (= temp630_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp630_145)))
(assert (= temp630_147 #x0000000000000003))
(assert (= temp630_148 temp630_147))
(assert (= temp630_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp630_148)))
(assert (= temp630_150 #x0000000000000004))
(assert (= temp630_151 temp630_150))
(assert (= temp630_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp630_151)))
(assert (= temp630_153 #x0000000000000005))
(assert (= temp630_154 temp630_153))
(assert (= temp630_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp630_154)))
(assert (= temp630_157 var1179826))
(assert (= temp630_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp630_157)))
(assert (= temp630_156 temp630_158))
(assert (= var1191780
   (ite (bvslt temp630_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp630_159 #x0000000000000000))
(assert (= var1191780 temp630_159))
(assert (= temp630_160 #x0000000000000000))
(assert (= var1179826 temp630_160))
(assert (= temp630_162 var1179826))
(assert (= temp630_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp630_162)))
(assert (= temp630_161 temp630_163))
(assert (= var1191802 (bvsmod temp630_161 ARGNAME_groups_NAMEEND)))
(assert (= temp630_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp630_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp630_165 #x0000000000000001))
(assert (= var1191803 temp630_165))
(assert (= temp630_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp630_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp630_167 #x0000000000000001))
(assert (= var1191823 temp630_167))
(assert (= temp630_168 #x0000000000000001))
(assert (= var1180714 temp630_168))
(assert (= temp630_169 #x0000000000000000))
(assert (= temp630_170 temp630_169))
(assert (= temp630_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp630_170)))
(assert (= temp630_172 #x0000000000000001))
(assert (= temp630_173 temp630_172))
(assert (= temp630_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp630_173)))
(assert (= temp630_175 #x0000000000000002))
(assert (= temp630_176 temp630_175))
(assert (= temp630_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp630_176)))
(assert (= temp630_178 #x0000000000000003))
(assert (= temp630_179 temp630_178))
(assert (= temp630_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp630_179)))
(assert (= temp630_181 #x0000000000000004))
(assert (= temp630_182 temp630_181))
(assert (= temp630_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp630_182)))
(assert (= temp630_184 #x0000000000000005))
(assert (= temp630_185 temp630_184))
(assert (= temp630_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp630_185)))
(assert (= temp630_187 #x0000000000000000))
(assert (= temp630_188
   (ite (bvslt var1180714 temp630_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp630_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp630_188)))
(assert (= var1191831 temp630_189))
(assert (bvslt (ite (bvslt var1180714 temp630_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp630_190 #x0000000000000001))
(assert (= var1180714 temp630_190))
(assert (= temp630_192 var1180714))
(assert (= temp630_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp630_192)))
(assert (= temp630_191 temp630_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp630_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp630_194 #x0000000000000001))
(assert (= var1191836 temp630_194))
(assert (= temp630_195 #x0000000000000000))
(assert (= var1179826 temp630_195))
(assert (= temp630_197 var1179826))
(assert (= temp630_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp630_197)))
(assert (= temp630_196 temp630_198))
(assert (= temp630_199 #x0000000000000002))
(assert (= var1586025 temp630_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp630_200 #x0000000000000001))
(assert (= var1191993 temp630_200))
(assert (= temp630_201 #x0000000000000001))
(assert (= var2700303 temp630_201))
(assert (= temp630_202 #x0000000000000001))
(assert (= var2962447 temp630_202))
(assert (= temp630_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp630_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp630_204 #x0000000000000001))
(assert (= var211058 temp630_204))
(assert (= temp630_205 #x0000000000000001))
(assert (= var211188 temp630_205))
(assert (= var3879401 var211188))
(assert (= temp630_206 #x0000000000000000))
(assert (= var3866802 temp630_206))
(assert (= temp630_207 #x0000000000000000))
(assert (= temp630_208
   (ite (bvslt var3866802 temp630_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp630_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp630_208)))
(assert (= var3879420 temp630_209))
(assert (bvslt (ite (bvslt var3866802 temp630_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp630_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp630_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp630_211 #x0000000000000001))
(assert (= var3879421 temp630_211))
(assert (= temp630_212 #x0000000000000000))
(assert (= var4079423 temp630_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp630_213 #x0000000000000002))
(assert (= var4208259 temp630_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp630_214 #x0000000000000000))
(assert (= var4273820 temp630_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211388 var210913))
(assert (= temp630_215 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp630_215) #x0000000000000001 #x0000000000000000)))
(assert (= var5717837 var211389))
(assert (= temp630_216 #x0000000000000001))
(assert (= var211058 temp630_216))
(model-add temp630_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp630_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp630_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp630_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





