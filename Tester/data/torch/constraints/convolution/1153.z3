(declare-fun temp10268_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10268_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10268_3 () (_ BitVec 64))
(declare-fun temp10268_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10268_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10268_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10268_7 () (_ BitVec 64))
(declare-fun temp10268_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10268_9 () (_ BitVec 64))
(declare-fun temp10268_10 () (_ BitVec 64))
(declare-fun temp10268_11 () (_ BitVec 64))
(declare-fun temp10268_12 () (_ BitVec 64))
(declare-fun temp10268_13 () (_ BitVec 64))
(declare-fun temp10268_14 () (_ BitVec 64))
(declare-fun temp10268_15 () (_ BitVec 64))
(declare-fun temp10268_16 () (_ BitVec 64))
(declare-fun temp10268_17 () (_ BitVec 64))
(declare-fun temp10268_18 () (_ BitVec 64))
(declare-fun temp10268_19 () (_ BitVec 64))
(declare-fun temp10268_20 () (_ BitVec 64))
(declare-fun temp10268_21 () (_ BitVec 64))
(declare-fun temp10268_22 () (_ BitVec 64))
(declare-fun temp10268_23 () (_ BitVec 64))
(declare-fun temp10268_24 () (_ BitVec 64))
(declare-fun temp10268_25 () (_ BitVec 64))
(declare-fun temp10268_26 () (_ BitVec 64))
(declare-fun temp10268_27 () (_ BitVec 64))
(declare-fun temp10268_28 () (_ BitVec 64))
(declare-fun temp10268_29 () (_ BitVec 64))
(declare-fun temp10268_30 () (_ BitVec 64))
(declare-fun temp10268_31 () (_ BitVec 64))
(declare-fun temp10268_32 () (_ BitVec 64))
(declare-fun temp10268_33 () (_ BitVec 64))
(declare-fun temp10268_34 () (_ BitVec 64))
(declare-fun temp10268_35 () (_ BitVec 64))
(declare-fun temp10268_36 () (_ BitVec 64))
(declare-fun temp10268_37 () (_ BitVec 64))
(declare-fun temp10268_38 () (_ BitVec 64))
(declare-fun temp10268_39 () (_ BitVec 64))
(declare-fun temp10268_40 () (_ BitVec 64))
(declare-fun temp10268_41 () (_ BitVec 64))
(declare-fun temp10268_42 () (_ BitVec 64))
(declare-fun temp10268_43 () (_ BitVec 64))
(declare-fun temp10268_44 () (_ BitVec 64))
(declare-fun temp10268_45 () (_ BitVec 64))
(declare-fun temp10268_46 () (_ BitVec 64))
(declare-fun temp10268_47 () (_ BitVec 64))
(declare-fun temp10268_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10268_49 () (_ BitVec 64))
(declare-fun temp10268_50 () (_ BitVec 64))
(declare-fun temp10268_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10268_52 () (_ BitVec 64))
(declare-fun temp10268_53 () (_ BitVec 64))
(declare-fun temp10268_54 () (_ BitVec 64))
(declare-fun temp10268_55 () (_ BitVec 64))
(declare-fun temp10268_56 () (_ BitVec 64))
(declare-fun temp10268_57 () (_ BitVec 64))
(declare-fun temp10268_58 () (_ BitVec 64))
(declare-fun temp10268_59 () (_ BitVec 64))
(declare-fun temp10268_60 () (_ BitVec 64))
(declare-fun temp10268_61 () (_ BitVec 64))
(declare-fun temp10268_62 () (_ BitVec 64))
(declare-fun temp10268_63 () (_ BitVec 64))
(declare-fun temp10268_64 () (_ BitVec 64))
(declare-fun temp10268_65 () (_ BitVec 64))
(declare-fun temp10268_66 () (_ BitVec 64))
(declare-fun temp10268_67 () (_ BitVec 64))
(declare-fun temp10268_68 () (_ BitVec 64))
(declare-fun temp10268_69 () (_ BitVec 64))
(declare-fun temp10268_70 () (_ BitVec 64))
(declare-fun temp10268_71 () (_ BitVec 64))
(declare-fun temp10268_72 () (_ BitVec 64))
(declare-fun temp10268_73 () (_ BitVec 64))
(declare-fun temp10268_74 () (_ BitVec 64))
(declare-fun temp10268_75 () (_ BitVec 64))
(declare-fun temp10268_76 () (_ BitVec 64))
(declare-fun temp10268_77 () (_ BitVec 64))
(declare-fun temp10268_78 () (_ BitVec 64))
(declare-fun temp10268_79 () (_ BitVec 64))
(declare-fun temp10268_80 () (_ BitVec 64))
(declare-fun temp10268_81 () (_ BitVec 64))
(declare-fun temp10268_82 () (_ BitVec 64))
(declare-fun temp10268_83 () (_ BitVec 64))
(declare-fun temp10268_84 () (_ BitVec 64))
(declare-fun temp10268_85 () (_ BitVec 64))
(declare-fun temp10268_86 () (_ BitVec 64))
(declare-fun temp10268_87 () (_ BitVec 64))
(declare-fun temp10268_88 () (_ BitVec 64))
(declare-fun temp10268_89 () (_ BitVec 64))
(declare-fun temp10268_90 () (_ BitVec 64))
(declare-fun temp10268_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10268_92 () (_ BitVec 64))
(declare-fun temp10268_93 () (_ BitVec 64))
(declare-fun temp10268_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10268_95 () (_ BitVec 64))
(declare-fun temp10268_96 () (_ BitVec 64))
(declare-fun temp10268_97 () (_ BitVec 64))
(declare-fun temp10268_98 () (_ BitVec 64))
(declare-fun temp10268_99 () (_ BitVec 64))
(declare-fun temp10268_100 () (_ BitVec 64))
(declare-fun temp10268_101 () (_ BitVec 64))
(declare-fun temp10268_102 () (_ BitVec 64))
(declare-fun temp10268_103 () (_ BitVec 64))
(declare-fun temp10268_104 () (_ BitVec 64))
(declare-fun temp10268_105 () (_ BitVec 64))
(declare-fun temp10268_106 () (_ BitVec 64))
(declare-fun temp10268_107 () (_ BitVec 64))
(declare-fun temp10268_108 () (_ BitVec 64))
(declare-fun temp10268_109 () (_ BitVec 64))
(declare-fun temp10268_110 () (_ BitVec 64))
(declare-fun temp10268_111 () (_ BitVec 64))
(declare-fun temp10268_112 () (_ BitVec 64))
(declare-fun temp10268_113 () (_ BitVec 64))
(declare-fun temp10268_114 () (_ BitVec 64))
(declare-fun temp10268_115 () (_ BitVec 64))
(declare-fun temp10268_116 () (_ BitVec 64))
(declare-fun temp10268_117 () (_ BitVec 64))
(declare-fun temp10268_118 () (_ BitVec 64))
(declare-fun temp10268_119 () (_ BitVec 64))
(declare-fun temp10268_120 () (_ BitVec 64))
(declare-fun temp10268_121 () (_ BitVec 64))
(declare-fun temp10268_122 () (_ BitVec 64))
(declare-fun temp10268_123 () (_ BitVec 64))
(declare-fun temp10268_124 () (_ BitVec 64))
(declare-fun temp10268_125 () (_ BitVec 64))
(declare-fun temp10268_126 () (_ BitVec 64))
(declare-fun temp10268_127 () (_ BitVec 64))
(declare-fun temp10268_128 () (_ BitVec 64))
(declare-fun temp10268_129 () (_ BitVec 64))
(declare-fun temp10268_130 () (_ BitVec 64))
(declare-fun temp10268_131 () (_ BitVec 64))
(declare-fun temp10268_132 () (_ BitVec 64))
(declare-fun temp10268_133 () (_ BitVec 64))
(declare-fun temp10268_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10268_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10268_136 () (_ BitVec 64))
(declare-fun temp10268_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10268_138 () (_ BitVec 64))
(declare-fun temp10268_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10268_140 () (_ BitVec 64))
(declare-fun temp10268_141 () (_ BitVec 64))
(declare-fun temp10268_142 () (_ BitVec 64))
(declare-fun temp10268_143 () (_ BitVec 64))
(declare-fun temp10268_144 () (_ BitVec 64))
(declare-fun temp10268_145 () (_ BitVec 64))
(declare-fun temp10268_146 () (_ BitVec 64))
(declare-fun temp10268_147 () (_ BitVec 64))
(declare-fun temp10268_148 () (_ BitVec 64))
(declare-fun temp10268_149 () (_ BitVec 64))
(declare-fun temp10268_150 () (_ BitVec 64))
(declare-fun temp10268_151 () (_ BitVec 64))
(declare-fun temp10268_152 () (_ BitVec 64))
(declare-fun temp10268_153 () (_ BitVec 64))
(declare-fun temp10268_154 () (_ BitVec 64))
(declare-fun temp10268_155 () (_ BitVec 64))
(declare-fun temp10268_157 () (_ BitVec 64))
(declare-fun temp10268_158 () (_ BitVec 64))
(declare-fun temp10268_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10268_159 () (_ BitVec 64))
(declare-fun temp10268_160 () (_ BitVec 64))
(declare-fun temp10268_162 () (_ BitVec 64))
(declare-fun temp10268_163 () (_ BitVec 64))
(declare-fun temp10268_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10268_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10268_165 () (_ BitVec 64))
(declare-fun temp10268_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10268_167 () (_ BitVec 64))
(declare-fun temp10268_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10268_169 () (_ BitVec 64))
(declare-fun temp10268_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10268_171 () (_ BitVec 64))
(declare-fun temp10268_172 () (_ BitVec 64))
(declare-fun temp10268_173 () (_ BitVec 64))
(declare-fun temp10268_174 () (_ BitVec 64))
(declare-fun temp10268_175 () (_ BitVec 64))
(declare-fun temp10268_176 () (_ BitVec 64))
(declare-fun temp10268_177 () (_ BitVec 64))
(declare-fun temp10268_178 () (_ BitVec 64))
(declare-fun temp10268_179 () (_ BitVec 64))
(declare-fun temp10268_180 () (_ BitVec 64))
(declare-fun temp10268_181 () (_ BitVec 64))
(declare-fun temp10268_182 () (_ BitVec 64))
(declare-fun temp10268_183 () (_ BitVec 64))
(declare-fun temp10268_184 () (_ BitVec 64))
(declare-fun temp10268_185 () (_ BitVec 64))
(declare-fun temp10268_186 () (_ BitVec 64))
(declare-fun temp10268_187 () (_ BitVec 64))
(declare-fun temp10268_188 () (_ BitVec 64))
(declare-fun temp10268_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10268_190 () (_ BitVec 64))
(declare-fun temp10268_192 () (_ BitVec 64))
(declare-fun temp10268_193 () (_ BitVec 64))
(declare-fun temp10268_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10268_194 () (_ BitVec 64))
(declare-fun temp10268_195 () (_ BitVec 64))
(declare-fun temp10268_197 () (_ BitVec 64))
(declare-fun temp10268_198 () (_ BitVec 64))
(declare-fun temp10268_196 () (_ BitVec 64))
(declare-fun temp10268_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10268_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10268_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10268_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10268_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10268_204 () (_ BitVec 64))
(declare-fun temp10268_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10268_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10268_207 () (_ BitVec 64))
(declare-fun temp10268_208 () (_ BitVec 64))
(declare-fun temp10268_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10268_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10268_211 () (_ BitVec 64))
(declare-fun temp10268_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10268_213 () (_ BitVec 64))
(declare-fun temp10268_214 () (_ BitVec 64))
(declare-fun temp10268_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10268_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10268_217 () (_ BitVec 64))
(declare-fun temp10268_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10268_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10268_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp10268_221 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp10268_222 () (_ BitVec 64))
(declare-fun temp10268_223 () (_ BitVec 64))
(declare-fun var7353108 () (_ BitVec 64))
(declare-fun var7353075 () (_ BitVec 64))
(declare-fun var7221639 () (_ BitVec 64))
(declare-fun var7221635 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10268_224 () (_ BitVec 64))
(assert (= temp10268_1 #x0000000000000001))
(assert (= var77203 temp10268_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10268_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10268_2)))
(assert (= temp10268_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10268_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10268_4 #x0000000000000000))
(assert (= var210941 temp10268_4))
(assert (= temp10268_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10268_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10268_6 #x0000000000000000))
(assert (= var210986 temp10268_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10268_7 #x0000000000000000))
(assert (= temp10268_8 temp10268_7))
(assert (= temp10268_9 (select ARGNAME_padding_NAMEEND_VAL temp10268_8)))
(assert (= temp10268_10 #x0000000000000001))
(assert (= temp10268_11 temp10268_10))
(assert (= temp10268_12 (select ARGNAME_padding_NAMEEND_VAL temp10268_11)))
(assert (= temp10268_13 #x0000000000000002))
(assert (= temp10268_14 temp10268_13))
(assert (= temp10268_15 (select ARGNAME_padding_NAMEEND_VAL temp10268_14)))
(assert (= temp10268_16 #x0000000000000003))
(assert (= temp10268_17 temp10268_16))
(assert (= temp10268_18 (select ARGNAME_padding_NAMEEND_VAL temp10268_17)))
(assert (= temp10268_19 #x0000000000000004))
(assert (= temp10268_20 temp10268_19))
(assert (= temp10268_21 (select ARGNAME_padding_NAMEEND_VAL temp10268_20)))
(assert (= temp10268_22 #x0000000000000005))
(assert (= temp10268_23 temp10268_22))
(assert (= temp10268_24 (select ARGNAME_padding_NAMEEND_VAL temp10268_23)))
(assert (= temp10268_25 #x0000000000000000))
(assert (= temp10268_26 #x0000000000000000))
(assert (= temp10268_27 temp10268_26))
(assert (= temp10268_28 (select ARGNAME_padding_NAMEEND_VAL temp10268_27)))
(assert (= temp10268_29 #x0000000000000000))
(assert (= temp10268_30 #x0000000000000001))
(assert (= temp10268_31 temp10268_30))
(assert (= temp10268_32 (select ARGNAME_padding_NAMEEND_VAL temp10268_31)))
(assert (= temp10268_33 #x0000000000000000))
(assert (= temp10268_34 #x0000000000000002))
(assert (= temp10268_35 temp10268_34))
(assert (= temp10268_36 (select ARGNAME_padding_NAMEEND_VAL temp10268_35)))
(assert (= temp10268_37 #x0000000000000000))
(assert (= temp10268_38 #x0000000000000003))
(assert (= temp10268_39 temp10268_38))
(assert (= temp10268_40 (select ARGNAME_padding_NAMEEND_VAL temp10268_39)))
(assert (= temp10268_41 #x0000000000000000))
(assert (= temp10268_42 #x0000000000000004))
(assert (= temp10268_43 temp10268_42))
(assert (= temp10268_44 (select ARGNAME_padding_NAMEEND_VAL temp10268_43)))
(assert (= temp10268_45 #x0000000000000000))
(assert (= temp10268_46 #x0000000000000005))
(assert (= temp10268_47 temp10268_46))
(assert (= temp10268_48 (select ARGNAME_padding_NAMEEND_VAL temp10268_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10268_28 temp10268_25)
             (bvslt temp10268_32 temp10268_29)
             (bvslt temp10268_36 temp10268_33)
             (bvslt temp10268_40 temp10268_37)
             (bvslt temp10268_44 temp10268_41)
             (bvslt temp10268_48 temp10268_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10268_49 #x0000000000000000))
(assert (= var1191714 temp10268_49))
(assert (= temp10268_50 #x0000000000000000))
(assert (= temp10268_51 temp10268_50))
(assert (= temp10268_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10268_51)))
(assert (= temp10268_53 #x0000000000000001))
(assert (= temp10268_54 temp10268_53))
(assert (= temp10268_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10268_54)))
(assert (= temp10268_56 #x0000000000000002))
(assert (= temp10268_57 temp10268_56))
(assert (= temp10268_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10268_57)))
(assert (= temp10268_59 #x0000000000000003))
(assert (= temp10268_60 temp10268_59))
(assert (= temp10268_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10268_60)))
(assert (= temp10268_62 #x0000000000000004))
(assert (= temp10268_63 temp10268_62))
(assert (= temp10268_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10268_63)))
(assert (= temp10268_65 #x0000000000000005))
(assert (= temp10268_66 temp10268_65))
(assert (= temp10268_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10268_66)))
(assert (= temp10268_68 #x0000000000000000))
(assert (= temp10268_69 #x0000000000000000))
(assert (= temp10268_70 temp10268_69))
(assert (= temp10268_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10268_70)))
(assert (= temp10268_72 #x0000000000000000))
(assert (= temp10268_73 #x0000000000000001))
(assert (= temp10268_74 temp10268_73))
(assert (= temp10268_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10268_74)))
(assert (= temp10268_76 #x0000000000000000))
(assert (= temp10268_77 #x0000000000000002))
(assert (= temp10268_78 temp10268_77))
(assert (= temp10268_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10268_78)))
(assert (= temp10268_80 #x0000000000000000))
(assert (= temp10268_81 #x0000000000000003))
(assert (= temp10268_82 temp10268_81))
(assert (= temp10268_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10268_82)))
(assert (= temp10268_84 #x0000000000000000))
(assert (= temp10268_85 #x0000000000000004))
(assert (= temp10268_86 temp10268_85))
(assert (= temp10268_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10268_86)))
(assert (= temp10268_88 #x0000000000000000))
(assert (= temp10268_89 #x0000000000000005))
(assert (= temp10268_90 temp10268_89))
(assert (= temp10268_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10268_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10268_71 temp10268_68)
             (bvslt temp10268_75 temp10268_72)
             (bvslt temp10268_79 temp10268_76)
             (bvslt temp10268_83 temp10268_80)
             (bvslt temp10268_87 temp10268_84)
             (bvslt temp10268_91 temp10268_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10268_92 #x0000000000000000))
(assert (= var1191725 temp10268_92))
(assert (= temp10268_93 #x0000000000000000))
(assert (= temp10268_94 temp10268_93))
(assert (= temp10268_95 (select ARGNAME_stride_NAMEEND_VAL temp10268_94)))
(assert (= temp10268_96 #x0000000000000001))
(assert (= temp10268_97 temp10268_96))
(assert (= temp10268_98 (select ARGNAME_stride_NAMEEND_VAL temp10268_97)))
(assert (= temp10268_99 #x0000000000000002))
(assert (= temp10268_100 temp10268_99))
(assert (= temp10268_101 (select ARGNAME_stride_NAMEEND_VAL temp10268_100)))
(assert (= temp10268_102 #x0000000000000003))
(assert (= temp10268_103 temp10268_102))
(assert (= temp10268_104 (select ARGNAME_stride_NAMEEND_VAL temp10268_103)))
(assert (= temp10268_105 #x0000000000000004))
(assert (= temp10268_106 temp10268_105))
(assert (= temp10268_107 (select ARGNAME_stride_NAMEEND_VAL temp10268_106)))
(assert (= temp10268_108 #x0000000000000005))
(assert (= temp10268_109 temp10268_108))
(assert (= temp10268_110 (select ARGNAME_stride_NAMEEND_VAL temp10268_109)))
(assert (= temp10268_111 #x0000000000000000))
(assert (= temp10268_112 #x0000000000000000))
(assert (= temp10268_113 temp10268_112))
(assert (= temp10268_114 (select ARGNAME_stride_NAMEEND_VAL temp10268_113)))
(assert (= temp10268_115 #x0000000000000000))
(assert (= temp10268_116 #x0000000000000001))
(assert (= temp10268_117 temp10268_116))
(assert (= temp10268_118 (select ARGNAME_stride_NAMEEND_VAL temp10268_117)))
(assert (= temp10268_119 #x0000000000000000))
(assert (= temp10268_120 #x0000000000000002))
(assert (= temp10268_121 temp10268_120))
(assert (= temp10268_122 (select ARGNAME_stride_NAMEEND_VAL temp10268_121)))
(assert (= temp10268_123 #x0000000000000000))
(assert (= temp10268_124 #x0000000000000003))
(assert (= temp10268_125 temp10268_124))
(assert (= temp10268_126 (select ARGNAME_stride_NAMEEND_VAL temp10268_125)))
(assert (= temp10268_127 #x0000000000000000))
(assert (= temp10268_128 #x0000000000000004))
(assert (= temp10268_129 temp10268_128))
(assert (= temp10268_130 (select ARGNAME_stride_NAMEEND_VAL temp10268_129)))
(assert (= temp10268_131 #x0000000000000000))
(assert (= temp10268_132 #x0000000000000005))
(assert (= temp10268_133 temp10268_132))
(assert (= temp10268_134 (select ARGNAME_stride_NAMEEND_VAL temp10268_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10268_114 temp10268_111)
             (bvsle temp10268_118 temp10268_115)
             (bvsle temp10268_122 temp10268_119)
             (bvsle temp10268_126 temp10268_123)
             (bvsle temp10268_130 temp10268_127)
             (bvsle temp10268_134 temp10268_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10268_135 #x0000000000000000))
(assert (= var1191735 temp10268_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10268_136 #x0000000000000001))
(assert (= var1191747 temp10268_136))
(assert (= temp10268_137 #x0000000000000000))
(assert (= var1179826 temp10268_137))
(assert (= temp10268_138 #x0000000000000000))
(assert (= temp10268_139 temp10268_138))
(assert (= temp10268_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10268_139)))
(assert (= temp10268_141 #x0000000000000001))
(assert (= temp10268_142 temp10268_141))
(assert (= temp10268_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10268_142)))
(assert (= temp10268_144 #x0000000000000002))
(assert (= temp10268_145 temp10268_144))
(assert (= temp10268_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10268_145)))
(assert (= temp10268_147 #x0000000000000003))
(assert (= temp10268_148 temp10268_147))
(assert (= temp10268_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10268_148)))
(assert (= temp10268_150 #x0000000000000004))
(assert (= temp10268_151 temp10268_150))
(assert (= temp10268_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10268_151)))
(assert (= temp10268_153 #x0000000000000005))
(assert (= temp10268_154 temp10268_153))
(assert (= temp10268_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10268_154)))
(assert (= temp10268_157 var1179826))
(assert (= temp10268_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10268_157)))
(assert (= temp10268_156 temp10268_158))
(assert (= var1191780
   (ite (bvslt temp10268_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10268_159 #x0000000000000000))
(assert (= var1191780 temp10268_159))
(assert (= temp10268_160 #x0000000000000000))
(assert (= var1179826 temp10268_160))
(assert (= temp10268_162 var1179826))
(assert (= temp10268_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10268_162)))
(assert (= temp10268_161 temp10268_163))
(assert (= var1191802 (bvsmod temp10268_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10268_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10268_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10268_165 #x0000000000000001))
(assert (= var1191803 temp10268_165))
(assert (= temp10268_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10268_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10268_167 #x0000000000000001))
(assert (= var1191823 temp10268_167))
(assert (= temp10268_168 #x0000000000000001))
(assert (= var1180714 temp10268_168))
(assert (= temp10268_169 #x0000000000000000))
(assert (= temp10268_170 temp10268_169))
(assert (= temp10268_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10268_170)))
(assert (= temp10268_172 #x0000000000000001))
(assert (= temp10268_173 temp10268_172))
(assert (= temp10268_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10268_173)))
(assert (= temp10268_175 #x0000000000000002))
(assert (= temp10268_176 temp10268_175))
(assert (= temp10268_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10268_176)))
(assert (= temp10268_178 #x0000000000000003))
(assert (= temp10268_179 temp10268_178))
(assert (= temp10268_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10268_179)))
(assert (= temp10268_181 #x0000000000000004))
(assert (= temp10268_182 temp10268_181))
(assert (= temp10268_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10268_182)))
(assert (= temp10268_184 #x0000000000000005))
(assert (= temp10268_185 temp10268_184))
(assert (= temp10268_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10268_185)))
(assert (= temp10268_187 #x0000000000000000))
(assert (= temp10268_188
   (ite (bvslt var1180714 temp10268_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10268_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10268_188)))
(assert (= var1191831 temp10268_189))
(assert (bvslt (ite (bvslt var1180714 temp10268_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10268_190 #x0000000000000001))
(assert (= var1180714 temp10268_190))
(assert (= temp10268_192 var1180714))
(assert (= temp10268_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10268_192)))
(assert (= temp10268_191 temp10268_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10268_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10268_194 #x0000000000000001))
(assert (= var1191836 temp10268_194))
(assert (= temp10268_195 #x0000000000000000))
(assert (= var1179826 temp10268_195))
(assert (= temp10268_197 var1179826))
(assert (= temp10268_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10268_197)))
(assert (= temp10268_196 temp10268_198))
(assert (= temp10268_199 #x0000000000000002))
(assert (= var1586025 temp10268_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10268_200 #x0000000000000001))
(assert (= var1191993 temp10268_200))
(assert (= temp10268_201 #x0000000000000001))
(assert (= var2700303 temp10268_201))
(assert (= temp10268_202 #x0000000000000001))
(assert (= var2962447 temp10268_202))
(assert (= temp10268_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10268_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10268_204 #x0000000000000001))
(assert (= var211058 temp10268_204))
(assert (= temp10268_205 #x0000000000000001))
(assert (= var211188 temp10268_205))
(assert (= var3879401 var211188))
(assert (= temp10268_206 #x0000000000000000))
(assert (= var3866802 temp10268_206))
(assert (= temp10268_207 #x0000000000000000))
(assert (= temp10268_208
   (ite (bvslt var3866802 temp10268_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10268_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10268_208)))
(assert (= var3879420 temp10268_209))
(assert (bvslt (ite (bvslt var3866802 temp10268_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10268_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10268_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10268_211 #x0000000000000000))
(assert (= var3879421 temp10268_211))
(assert (= temp10268_212 #x0000000000000001))
(assert (= var3867690 temp10268_212))
(assert (= temp10268_213 #x0000000000000000))
(assert (= temp10268_214
   (ite (bvslt var3867690 temp10268_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10268_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10268_214)))
(assert (= var3879423 temp10268_215))
(assert (bvslt (ite (bvslt var3867690 temp10268_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10268_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10268_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10268_217 #x0000000000000001))
(assert (= var3879424 temp10268_217))
(assert (= temp10268_218 #x0000000000000000))
(assert (= var4079423 temp10268_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10268_219 #x0000000000000002))
(assert (= var4208259 temp10268_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10268_220 #x0000000000000000))
(assert (= var4273820 temp10268_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5321104 var211201))
(assert (= var5583248 var211201))
(assert (= temp10268_221 #x0000000000000000))
(assert (= var5910928 temp10268_221))
(assert (= temp10268_222 #x0000000000000001))
(assert (= var211058 temp10268_222))
(assert (= temp10268_223 #x0000000000000000))
(assert (= var7353108 temp10268_223))
(assert (= var7353075 var7353108))
(assert (= var7221639 var7353075))
(assert (= var7221635 var7221639))
(assert (= var212669 var7221635))
(assert (= temp10268_224 #x0000000000000000))
(assert (= var212669 temp10268_224))
(model-add temp10268_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10268_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10268_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10268_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




