(declare-fun temp1306_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1306_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1306_3 () (_ BitVec 64))
(declare-fun temp1306_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1306_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1306_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1306_7 () (_ BitVec 64))
(declare-fun temp1306_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1306_9 () (_ BitVec 64))
(declare-fun temp1306_10 () (_ BitVec 64))
(declare-fun temp1306_11 () (_ BitVec 64))
(declare-fun temp1306_12 () (_ BitVec 64))
(declare-fun temp1306_13 () (_ BitVec 64))
(declare-fun temp1306_14 () (_ BitVec 64))
(declare-fun temp1306_15 () (_ BitVec 64))
(declare-fun temp1306_16 () (_ BitVec 64))
(declare-fun temp1306_17 () (_ BitVec 64))
(declare-fun temp1306_18 () (_ BitVec 64))
(declare-fun temp1306_19 () (_ BitVec 64))
(declare-fun temp1306_20 () (_ BitVec 64))
(declare-fun temp1306_21 () (_ BitVec 64))
(declare-fun temp1306_22 () (_ BitVec 64))
(declare-fun temp1306_23 () (_ BitVec 64))
(declare-fun temp1306_24 () (_ BitVec 64))
(declare-fun temp1306_25 () (_ BitVec 64))
(declare-fun temp1306_26 () (_ BitVec 64))
(declare-fun temp1306_27 () (_ BitVec 64))
(declare-fun temp1306_28 () (_ BitVec 64))
(declare-fun temp1306_29 () (_ BitVec 64))
(declare-fun temp1306_30 () (_ BitVec 64))
(declare-fun temp1306_31 () (_ BitVec 64))
(declare-fun temp1306_32 () (_ BitVec 64))
(declare-fun temp1306_33 () (_ BitVec 64))
(declare-fun temp1306_34 () (_ BitVec 64))
(declare-fun temp1306_35 () (_ BitVec 64))
(declare-fun temp1306_36 () (_ BitVec 64))
(declare-fun temp1306_37 () (_ BitVec 64))
(declare-fun temp1306_38 () (_ BitVec 64))
(declare-fun temp1306_39 () (_ BitVec 64))
(declare-fun temp1306_40 () (_ BitVec 64))
(declare-fun temp1306_41 () (_ BitVec 64))
(declare-fun temp1306_42 () (_ BitVec 64))
(declare-fun temp1306_43 () (_ BitVec 64))
(declare-fun temp1306_44 () (_ BitVec 64))
(declare-fun temp1306_45 () (_ BitVec 64))
(declare-fun temp1306_46 () (_ BitVec 64))
(declare-fun temp1306_47 () (_ BitVec 64))
(declare-fun temp1306_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1306_49 () (_ BitVec 64))
(declare-fun temp1306_50 () (_ BitVec 64))
(declare-fun temp1306_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1306_52 () (_ BitVec 64))
(declare-fun temp1306_53 () (_ BitVec 64))
(declare-fun temp1306_54 () (_ BitVec 64))
(declare-fun temp1306_55 () (_ BitVec 64))
(declare-fun temp1306_56 () (_ BitVec 64))
(declare-fun temp1306_57 () (_ BitVec 64))
(declare-fun temp1306_58 () (_ BitVec 64))
(declare-fun temp1306_59 () (_ BitVec 64))
(declare-fun temp1306_60 () (_ BitVec 64))
(declare-fun temp1306_61 () (_ BitVec 64))
(declare-fun temp1306_62 () (_ BitVec 64))
(declare-fun temp1306_63 () (_ BitVec 64))
(declare-fun temp1306_64 () (_ BitVec 64))
(declare-fun temp1306_65 () (_ BitVec 64))
(declare-fun temp1306_66 () (_ BitVec 64))
(declare-fun temp1306_67 () (_ BitVec 64))
(declare-fun temp1306_68 () (_ BitVec 64))
(declare-fun temp1306_69 () (_ BitVec 64))
(declare-fun temp1306_70 () (_ BitVec 64))
(declare-fun temp1306_71 () (_ BitVec 64))
(declare-fun temp1306_72 () (_ BitVec 64))
(declare-fun temp1306_73 () (_ BitVec 64))
(declare-fun temp1306_74 () (_ BitVec 64))
(declare-fun temp1306_75 () (_ BitVec 64))
(declare-fun temp1306_76 () (_ BitVec 64))
(declare-fun temp1306_77 () (_ BitVec 64))
(declare-fun temp1306_78 () (_ BitVec 64))
(declare-fun temp1306_79 () (_ BitVec 64))
(declare-fun temp1306_80 () (_ BitVec 64))
(declare-fun temp1306_81 () (_ BitVec 64))
(declare-fun temp1306_82 () (_ BitVec 64))
(declare-fun temp1306_83 () (_ BitVec 64))
(declare-fun temp1306_84 () (_ BitVec 64))
(declare-fun temp1306_85 () (_ BitVec 64))
(declare-fun temp1306_86 () (_ BitVec 64))
(declare-fun temp1306_87 () (_ BitVec 64))
(declare-fun temp1306_88 () (_ BitVec 64))
(declare-fun temp1306_89 () (_ BitVec 64))
(declare-fun temp1306_90 () (_ BitVec 64))
(declare-fun temp1306_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1306_92 () (_ BitVec 64))
(declare-fun temp1306_93 () (_ BitVec 64))
(declare-fun temp1306_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1306_95 () (_ BitVec 64))
(declare-fun temp1306_96 () (_ BitVec 64))
(declare-fun temp1306_97 () (_ BitVec 64))
(declare-fun temp1306_98 () (_ BitVec 64))
(declare-fun temp1306_99 () (_ BitVec 64))
(declare-fun temp1306_100 () (_ BitVec 64))
(declare-fun temp1306_101 () (_ BitVec 64))
(declare-fun temp1306_102 () (_ BitVec 64))
(declare-fun temp1306_103 () (_ BitVec 64))
(declare-fun temp1306_104 () (_ BitVec 64))
(declare-fun temp1306_105 () (_ BitVec 64))
(declare-fun temp1306_106 () (_ BitVec 64))
(declare-fun temp1306_107 () (_ BitVec 64))
(declare-fun temp1306_108 () (_ BitVec 64))
(declare-fun temp1306_109 () (_ BitVec 64))
(declare-fun temp1306_110 () (_ BitVec 64))
(declare-fun temp1306_111 () (_ BitVec 64))
(declare-fun temp1306_112 () (_ BitVec 64))
(declare-fun temp1306_113 () (_ BitVec 64))
(declare-fun temp1306_114 () (_ BitVec 64))
(declare-fun temp1306_115 () (_ BitVec 64))
(declare-fun temp1306_116 () (_ BitVec 64))
(declare-fun temp1306_117 () (_ BitVec 64))
(declare-fun temp1306_118 () (_ BitVec 64))
(declare-fun temp1306_119 () (_ BitVec 64))
(declare-fun temp1306_120 () (_ BitVec 64))
(declare-fun temp1306_121 () (_ BitVec 64))
(declare-fun temp1306_122 () (_ BitVec 64))
(declare-fun temp1306_123 () (_ BitVec 64))
(declare-fun temp1306_124 () (_ BitVec 64))
(declare-fun temp1306_125 () (_ BitVec 64))
(declare-fun temp1306_126 () (_ BitVec 64))
(declare-fun temp1306_127 () (_ BitVec 64))
(declare-fun temp1306_128 () (_ BitVec 64))
(declare-fun temp1306_129 () (_ BitVec 64))
(declare-fun temp1306_130 () (_ BitVec 64))
(declare-fun temp1306_131 () (_ BitVec 64))
(declare-fun temp1306_132 () (_ BitVec 64))
(declare-fun temp1306_133 () (_ BitVec 64))
(declare-fun temp1306_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1306_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1306_136 () (_ BitVec 64))
(declare-fun temp1306_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1306_138 () (_ BitVec 64))
(declare-fun temp1306_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1306_140 () (_ BitVec 64))
(declare-fun temp1306_141 () (_ BitVec 64))
(declare-fun temp1306_142 () (_ BitVec 64))
(declare-fun temp1306_143 () (_ BitVec 64))
(declare-fun temp1306_144 () (_ BitVec 64))
(declare-fun temp1306_145 () (_ BitVec 64))
(declare-fun temp1306_146 () (_ BitVec 64))
(declare-fun temp1306_147 () (_ BitVec 64))
(declare-fun temp1306_148 () (_ BitVec 64))
(declare-fun temp1306_149 () (_ BitVec 64))
(declare-fun temp1306_150 () (_ BitVec 64))
(declare-fun temp1306_151 () (_ BitVec 64))
(declare-fun temp1306_152 () (_ BitVec 64))
(declare-fun temp1306_153 () (_ BitVec 64))
(declare-fun temp1306_154 () (_ BitVec 64))
(declare-fun temp1306_155 () (_ BitVec 64))
(declare-fun temp1306_157 () (_ BitVec 64))
(declare-fun temp1306_158 () (_ BitVec 64))
(declare-fun temp1306_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1306_159 () (_ BitVec 64))
(declare-fun temp1306_160 () (_ BitVec 64))
(declare-fun temp1306_162 () (_ BitVec 64))
(declare-fun temp1306_163 () (_ BitVec 64))
(declare-fun temp1306_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1306_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1306_165 () (_ BitVec 64))
(declare-fun temp1306_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1306_167 () (_ BitVec 64))
(declare-fun temp1306_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1306_169 () (_ BitVec 64))
(declare-fun temp1306_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1306_171 () (_ BitVec 64))
(declare-fun temp1306_172 () (_ BitVec 64))
(declare-fun temp1306_173 () (_ BitVec 64))
(declare-fun temp1306_174 () (_ BitVec 64))
(declare-fun temp1306_175 () (_ BitVec 64))
(declare-fun temp1306_176 () (_ BitVec 64))
(declare-fun temp1306_177 () (_ BitVec 64))
(declare-fun temp1306_178 () (_ BitVec 64))
(declare-fun temp1306_179 () (_ BitVec 64))
(declare-fun temp1306_180 () (_ BitVec 64))
(declare-fun temp1306_181 () (_ BitVec 64))
(declare-fun temp1306_182 () (_ BitVec 64))
(declare-fun temp1306_183 () (_ BitVec 64))
(declare-fun temp1306_184 () (_ BitVec 64))
(declare-fun temp1306_185 () (_ BitVec 64))
(declare-fun temp1306_186 () (_ BitVec 64))
(declare-fun temp1306_187 () (_ BitVec 64))
(declare-fun temp1306_188 () (_ BitVec 64))
(declare-fun temp1306_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1306_190 () (_ BitVec 64))
(declare-fun temp1306_192 () (_ BitVec 64))
(declare-fun temp1306_193 () (_ BitVec 64))
(declare-fun temp1306_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1306_194 () (_ BitVec 64))
(declare-fun temp1306_195 () (_ BitVec 64))
(declare-fun temp1306_197 () (_ BitVec 64))
(declare-fun temp1306_198 () (_ BitVec 64))
(declare-fun temp1306_196 () (_ BitVec 64))
(declare-fun temp1306_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1306_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1306_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1306_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1306_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1306_204 () (_ BitVec 64))
(declare-fun temp1306_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1306_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1306_207 () (_ BitVec 64))
(declare-fun temp1306_208 () (_ BitVec 64))
(declare-fun temp1306_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1306_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1306_211 () (_ BitVec 64))
(declare-fun temp1306_212 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1306_213 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp1306_214 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp1306_216 () (_ BitVec 64))
(declare-fun temp1306_215 () (_ BitVec 64))
(declare-fun temp1306_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp1306_218 () (_ BitVec 64))
(declare-fun temp1306_219 () (_ BitVec 64))
(declare-fun temp1306_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp1306_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp1306_222 () (_ BitVec 64))
(declare-fun temp1306_224 () (_ BitVec 64))
(declare-fun temp1306_223 () (_ BitVec 64))
(declare-fun temp1306_225 () (_ BitVec 64))
(assert (= temp1306_1 #x0000000000000001))
(assert (= var77203 temp1306_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1306_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1306_2)))
(assert (= temp1306_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1306_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1306_4 #x0000000000000000))
(assert (= var210941 temp1306_4))
(assert (= temp1306_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1306_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1306_6 #x0000000000000000))
(assert (= var210986 temp1306_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1306_7 #x0000000000000000))
(assert (= temp1306_8 temp1306_7))
(assert (= temp1306_9 (select ARGNAME_padding_NAMEEND_VAL temp1306_8)))
(assert (= temp1306_10 #x0000000000000001))
(assert (= temp1306_11 temp1306_10))
(assert (= temp1306_12 (select ARGNAME_padding_NAMEEND_VAL temp1306_11)))
(assert (= temp1306_13 #x0000000000000002))
(assert (= temp1306_14 temp1306_13))
(assert (= temp1306_15 (select ARGNAME_padding_NAMEEND_VAL temp1306_14)))
(assert (= temp1306_16 #x0000000000000003))
(assert (= temp1306_17 temp1306_16))
(assert (= temp1306_18 (select ARGNAME_padding_NAMEEND_VAL temp1306_17)))
(assert (= temp1306_19 #x0000000000000004))
(assert (= temp1306_20 temp1306_19))
(assert (= temp1306_21 (select ARGNAME_padding_NAMEEND_VAL temp1306_20)))
(assert (= temp1306_22 #x0000000000000005))
(assert (= temp1306_23 temp1306_22))
(assert (= temp1306_24 (select ARGNAME_padding_NAMEEND_VAL temp1306_23)))
(assert (= temp1306_25 #x0000000000000000))
(assert (= temp1306_26 #x0000000000000000))
(assert (= temp1306_27 temp1306_26))
(assert (= temp1306_28 (select ARGNAME_padding_NAMEEND_VAL temp1306_27)))
(assert (= temp1306_29 #x0000000000000000))
(assert (= temp1306_30 #x0000000000000001))
(assert (= temp1306_31 temp1306_30))
(assert (= temp1306_32 (select ARGNAME_padding_NAMEEND_VAL temp1306_31)))
(assert (= temp1306_33 #x0000000000000000))
(assert (= temp1306_34 #x0000000000000002))
(assert (= temp1306_35 temp1306_34))
(assert (= temp1306_36 (select ARGNAME_padding_NAMEEND_VAL temp1306_35)))
(assert (= temp1306_37 #x0000000000000000))
(assert (= temp1306_38 #x0000000000000003))
(assert (= temp1306_39 temp1306_38))
(assert (= temp1306_40 (select ARGNAME_padding_NAMEEND_VAL temp1306_39)))
(assert (= temp1306_41 #x0000000000000000))
(assert (= temp1306_42 #x0000000000000004))
(assert (= temp1306_43 temp1306_42))
(assert (= temp1306_44 (select ARGNAME_padding_NAMEEND_VAL temp1306_43)))
(assert (= temp1306_45 #x0000000000000000))
(assert (= temp1306_46 #x0000000000000005))
(assert (= temp1306_47 temp1306_46))
(assert (= temp1306_48 (select ARGNAME_padding_NAMEEND_VAL temp1306_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1306_28 temp1306_25)
             (bvslt temp1306_32 temp1306_29)
             (bvslt temp1306_36 temp1306_33)
             (bvslt temp1306_40 temp1306_37)
             (bvslt temp1306_44 temp1306_41)
             (bvslt temp1306_48 temp1306_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1306_49 #x0000000000000000))
(assert (= var1191714 temp1306_49))
(assert (= temp1306_50 #x0000000000000000))
(assert (= temp1306_51 temp1306_50))
(assert (= temp1306_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1306_51)))
(assert (= temp1306_53 #x0000000000000001))
(assert (= temp1306_54 temp1306_53))
(assert (= temp1306_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1306_54)))
(assert (= temp1306_56 #x0000000000000002))
(assert (= temp1306_57 temp1306_56))
(assert (= temp1306_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1306_57)))
(assert (= temp1306_59 #x0000000000000003))
(assert (= temp1306_60 temp1306_59))
(assert (= temp1306_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1306_60)))
(assert (= temp1306_62 #x0000000000000004))
(assert (= temp1306_63 temp1306_62))
(assert (= temp1306_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1306_63)))
(assert (= temp1306_65 #x0000000000000005))
(assert (= temp1306_66 temp1306_65))
(assert (= temp1306_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1306_66)))
(assert (= temp1306_68 #x0000000000000000))
(assert (= temp1306_69 #x0000000000000000))
(assert (= temp1306_70 temp1306_69))
(assert (= temp1306_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1306_70)))
(assert (= temp1306_72 #x0000000000000000))
(assert (= temp1306_73 #x0000000000000001))
(assert (= temp1306_74 temp1306_73))
(assert (= temp1306_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1306_74)))
(assert (= temp1306_76 #x0000000000000000))
(assert (= temp1306_77 #x0000000000000002))
(assert (= temp1306_78 temp1306_77))
(assert (= temp1306_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1306_78)))
(assert (= temp1306_80 #x0000000000000000))
(assert (= temp1306_81 #x0000000000000003))
(assert (= temp1306_82 temp1306_81))
(assert (= temp1306_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1306_82)))
(assert (= temp1306_84 #x0000000000000000))
(assert (= temp1306_85 #x0000000000000004))
(assert (= temp1306_86 temp1306_85))
(assert (= temp1306_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1306_86)))
(assert (= temp1306_88 #x0000000000000000))
(assert (= temp1306_89 #x0000000000000005))
(assert (= temp1306_90 temp1306_89))
(assert (= temp1306_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1306_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1306_71 temp1306_68)
             (bvslt temp1306_75 temp1306_72)
             (bvslt temp1306_79 temp1306_76)
             (bvslt temp1306_83 temp1306_80)
             (bvslt temp1306_87 temp1306_84)
             (bvslt temp1306_91 temp1306_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1306_92 #x0000000000000000))
(assert (= var1191725 temp1306_92))
(assert (= temp1306_93 #x0000000000000000))
(assert (= temp1306_94 temp1306_93))
(assert (= temp1306_95 (select ARGNAME_stride_NAMEEND_VAL temp1306_94)))
(assert (= temp1306_96 #x0000000000000001))
(assert (= temp1306_97 temp1306_96))
(assert (= temp1306_98 (select ARGNAME_stride_NAMEEND_VAL temp1306_97)))
(assert (= temp1306_99 #x0000000000000002))
(assert (= temp1306_100 temp1306_99))
(assert (= temp1306_101 (select ARGNAME_stride_NAMEEND_VAL temp1306_100)))
(assert (= temp1306_102 #x0000000000000003))
(assert (= temp1306_103 temp1306_102))
(assert (= temp1306_104 (select ARGNAME_stride_NAMEEND_VAL temp1306_103)))
(assert (= temp1306_105 #x0000000000000004))
(assert (= temp1306_106 temp1306_105))
(assert (= temp1306_107 (select ARGNAME_stride_NAMEEND_VAL temp1306_106)))
(assert (= temp1306_108 #x0000000000000005))
(assert (= temp1306_109 temp1306_108))
(assert (= temp1306_110 (select ARGNAME_stride_NAMEEND_VAL temp1306_109)))
(assert (= temp1306_111 #x0000000000000000))
(assert (= temp1306_112 #x0000000000000000))
(assert (= temp1306_113 temp1306_112))
(assert (= temp1306_114 (select ARGNAME_stride_NAMEEND_VAL temp1306_113)))
(assert (= temp1306_115 #x0000000000000000))
(assert (= temp1306_116 #x0000000000000001))
(assert (= temp1306_117 temp1306_116))
(assert (= temp1306_118 (select ARGNAME_stride_NAMEEND_VAL temp1306_117)))
(assert (= temp1306_119 #x0000000000000000))
(assert (= temp1306_120 #x0000000000000002))
(assert (= temp1306_121 temp1306_120))
(assert (= temp1306_122 (select ARGNAME_stride_NAMEEND_VAL temp1306_121)))
(assert (= temp1306_123 #x0000000000000000))
(assert (= temp1306_124 #x0000000000000003))
(assert (= temp1306_125 temp1306_124))
(assert (= temp1306_126 (select ARGNAME_stride_NAMEEND_VAL temp1306_125)))
(assert (= temp1306_127 #x0000000000000000))
(assert (= temp1306_128 #x0000000000000004))
(assert (= temp1306_129 temp1306_128))
(assert (= temp1306_130 (select ARGNAME_stride_NAMEEND_VAL temp1306_129)))
(assert (= temp1306_131 #x0000000000000000))
(assert (= temp1306_132 #x0000000000000005))
(assert (= temp1306_133 temp1306_132))
(assert (= temp1306_134 (select ARGNAME_stride_NAMEEND_VAL temp1306_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1306_114 temp1306_111)
             (bvsle temp1306_118 temp1306_115)
             (bvsle temp1306_122 temp1306_119)
             (bvsle temp1306_126 temp1306_123)
             (bvsle temp1306_130 temp1306_127)
             (bvsle temp1306_134 temp1306_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1306_135 #x0000000000000000))
(assert (= var1191735 temp1306_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1306_136 #x0000000000000001))
(assert (= var1191747 temp1306_136))
(assert (= temp1306_137 #x0000000000000000))
(assert (= var1179826 temp1306_137))
(assert (= temp1306_138 #x0000000000000000))
(assert (= temp1306_139 temp1306_138))
(assert (= temp1306_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1306_139)))
(assert (= temp1306_141 #x0000000000000001))
(assert (= temp1306_142 temp1306_141))
(assert (= temp1306_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1306_142)))
(assert (= temp1306_144 #x0000000000000002))
(assert (= temp1306_145 temp1306_144))
(assert (= temp1306_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1306_145)))
(assert (= temp1306_147 #x0000000000000003))
(assert (= temp1306_148 temp1306_147))
(assert (= temp1306_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1306_148)))
(assert (= temp1306_150 #x0000000000000004))
(assert (= temp1306_151 temp1306_150))
(assert (= temp1306_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1306_151)))
(assert (= temp1306_153 #x0000000000000005))
(assert (= temp1306_154 temp1306_153))
(assert (= temp1306_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1306_154)))
(assert (= temp1306_157 var1179826))
(assert (= temp1306_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1306_157)))
(assert (= temp1306_156 temp1306_158))
(assert (= var1191780
   (ite (bvslt temp1306_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1306_159 #x0000000000000000))
(assert (= var1191780 temp1306_159))
(assert (= temp1306_160 #x0000000000000000))
(assert (= var1179826 temp1306_160))
(assert (= temp1306_162 var1179826))
(assert (= temp1306_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1306_162)))
(assert (= temp1306_161 temp1306_163))
(assert (= var1191802 (bvsmod temp1306_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1306_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1306_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1306_165 #x0000000000000001))
(assert (= var1191803 temp1306_165))
(assert (= temp1306_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1306_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1306_167 #x0000000000000001))
(assert (= var1191823 temp1306_167))
(assert (= temp1306_168 #x0000000000000001))
(assert (= var1180714 temp1306_168))
(assert (= temp1306_169 #x0000000000000000))
(assert (= temp1306_170 temp1306_169))
(assert (= temp1306_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1306_170)))
(assert (= temp1306_172 #x0000000000000001))
(assert (= temp1306_173 temp1306_172))
(assert (= temp1306_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1306_173)))
(assert (= temp1306_175 #x0000000000000002))
(assert (= temp1306_176 temp1306_175))
(assert (= temp1306_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1306_176)))
(assert (= temp1306_178 #x0000000000000003))
(assert (= temp1306_179 temp1306_178))
(assert (= temp1306_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1306_179)))
(assert (= temp1306_181 #x0000000000000004))
(assert (= temp1306_182 temp1306_181))
(assert (= temp1306_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1306_182)))
(assert (= temp1306_184 #x0000000000000005))
(assert (= temp1306_185 temp1306_184))
(assert (= temp1306_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1306_185)))
(assert (= temp1306_187 #x0000000000000000))
(assert (= temp1306_188
   (ite (bvslt var1180714 temp1306_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1306_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1306_188)))
(assert (= var1191831 temp1306_189))
(assert (bvslt (ite (bvslt var1180714 temp1306_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1306_190 #x0000000000000001))
(assert (= var1180714 temp1306_190))
(assert (= temp1306_192 var1180714))
(assert (= temp1306_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1306_192)))
(assert (= temp1306_191 temp1306_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1306_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1306_194 #x0000000000000001))
(assert (= var1191836 temp1306_194))
(assert (= temp1306_195 #x0000000000000000))
(assert (= var1179826 temp1306_195))
(assert (= temp1306_197 var1179826))
(assert (= temp1306_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1306_197)))
(assert (= temp1306_196 temp1306_198))
(assert (= temp1306_199 #x0000000000000002))
(assert (= var1586025 temp1306_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1306_200 #x0000000000000001))
(assert (= var1191993 temp1306_200))
(assert (= temp1306_201 #x0000000000000001))
(assert (= var2700303 temp1306_201))
(assert (= temp1306_202 #x0000000000000001))
(assert (= var2962447 temp1306_202))
(assert (= temp1306_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1306_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1306_204 #x0000000000000001))
(assert (= var211058 temp1306_204))
(assert (= temp1306_205 #x0000000000000001))
(assert (= var211188 temp1306_205))
(assert (= var3879401 var211188))
(assert (= temp1306_206 #x0000000000000000))
(assert (= var3866802 temp1306_206))
(assert (= temp1306_207 #x0000000000000000))
(assert (= temp1306_208
   (ite (bvslt var3866802 temp1306_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1306_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1306_208)))
(assert (= var3879420 temp1306_209))
(assert (bvslt (ite (bvslt var3866802 temp1306_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1306_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1306_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1306_211 #x0000000000000001))
(assert (= var3879421 temp1306_211))
(assert (= temp1306_212 #x0000000000000000))
(assert (= var4133117 temp1306_212))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1306_213 #x0000000000000002))
(assert (= var4339331 temp1306_213))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1306_214 #x0000000000000000))
(assert (= var4404892 temp1306_214))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp1306_216 #xffffffffffffffff))
(assert (= temp1306_215 temp1306_216))
(assert (= temp1306_217 #x0000000000000001))
(assert (= var197674 temp1306_217))
(assert (= temp1306_218 #x0000000000000000))
(assert (= temp1306_219
   (ite (bvslt var197674 temp1306_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp1306_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp1306_219)))
(assert (= var211595 temp1306_220))
(assert (bvslt (ite (bvslt var197674 temp1306_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1306_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp1306_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp1306_222 #x0000000000000001))
(assert (= var211596 temp1306_222))
(assert (= temp1306_224 #xffffffffffffffff))
(assert (= temp1306_223 temp1306_224))
(assert (= temp1306_225 #x0000000000000001))
(assert (= var211058 temp1306_225))
(model-add temp1306_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1306_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1306_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1306_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






