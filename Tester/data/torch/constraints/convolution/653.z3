(declare-fun temp870_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp870_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp870_3 () (_ BitVec 64))
(declare-fun temp870_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp870_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp870_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp870_7 () (_ BitVec 64))
(declare-fun temp870_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp870_9 () (_ BitVec 64))
(declare-fun temp870_10 () (_ BitVec 64))
(declare-fun temp870_11 () (_ BitVec 64))
(declare-fun temp870_12 () (_ BitVec 64))
(declare-fun temp870_13 () (_ BitVec 64))
(declare-fun temp870_14 () (_ BitVec 64))
(declare-fun temp870_15 () (_ BitVec 64))
(declare-fun temp870_16 () (_ BitVec 64))
(declare-fun temp870_17 () (_ BitVec 64))
(declare-fun temp870_18 () (_ BitVec 64))
(declare-fun temp870_19 () (_ BitVec 64))
(declare-fun temp870_20 () (_ BitVec 64))
(declare-fun temp870_21 () (_ BitVec 64))
(declare-fun temp870_22 () (_ BitVec 64))
(declare-fun temp870_23 () (_ BitVec 64))
(declare-fun temp870_24 () (_ BitVec 64))
(declare-fun temp870_25 () (_ BitVec 64))
(declare-fun temp870_26 () (_ BitVec 64))
(declare-fun temp870_27 () (_ BitVec 64))
(declare-fun temp870_28 () (_ BitVec 64))
(declare-fun temp870_29 () (_ BitVec 64))
(declare-fun temp870_30 () (_ BitVec 64))
(declare-fun temp870_31 () (_ BitVec 64))
(declare-fun temp870_32 () (_ BitVec 64))
(declare-fun temp870_33 () (_ BitVec 64))
(declare-fun temp870_34 () (_ BitVec 64))
(declare-fun temp870_35 () (_ BitVec 64))
(declare-fun temp870_36 () (_ BitVec 64))
(declare-fun temp870_37 () (_ BitVec 64))
(declare-fun temp870_38 () (_ BitVec 64))
(declare-fun temp870_39 () (_ BitVec 64))
(declare-fun temp870_40 () (_ BitVec 64))
(declare-fun temp870_41 () (_ BitVec 64))
(declare-fun temp870_42 () (_ BitVec 64))
(declare-fun temp870_43 () (_ BitVec 64))
(declare-fun temp870_44 () (_ BitVec 64))
(declare-fun temp870_45 () (_ BitVec 64))
(declare-fun temp870_46 () (_ BitVec 64))
(declare-fun temp870_47 () (_ BitVec 64))
(declare-fun temp870_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp870_49 () (_ BitVec 64))
(declare-fun temp870_50 () (_ BitVec 64))
(declare-fun temp870_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp870_52 () (_ BitVec 64))
(declare-fun temp870_53 () (_ BitVec 64))
(declare-fun temp870_54 () (_ BitVec 64))
(declare-fun temp870_55 () (_ BitVec 64))
(declare-fun temp870_56 () (_ BitVec 64))
(declare-fun temp870_57 () (_ BitVec 64))
(declare-fun temp870_58 () (_ BitVec 64))
(declare-fun temp870_59 () (_ BitVec 64))
(declare-fun temp870_60 () (_ BitVec 64))
(declare-fun temp870_61 () (_ BitVec 64))
(declare-fun temp870_62 () (_ BitVec 64))
(declare-fun temp870_63 () (_ BitVec 64))
(declare-fun temp870_64 () (_ BitVec 64))
(declare-fun temp870_65 () (_ BitVec 64))
(declare-fun temp870_66 () (_ BitVec 64))
(declare-fun temp870_67 () (_ BitVec 64))
(declare-fun temp870_68 () (_ BitVec 64))
(declare-fun temp870_69 () (_ BitVec 64))
(declare-fun temp870_70 () (_ BitVec 64))
(declare-fun temp870_71 () (_ BitVec 64))
(declare-fun temp870_72 () (_ BitVec 64))
(declare-fun temp870_73 () (_ BitVec 64))
(declare-fun temp870_74 () (_ BitVec 64))
(declare-fun temp870_75 () (_ BitVec 64))
(declare-fun temp870_76 () (_ BitVec 64))
(declare-fun temp870_77 () (_ BitVec 64))
(declare-fun temp870_78 () (_ BitVec 64))
(declare-fun temp870_79 () (_ BitVec 64))
(declare-fun temp870_80 () (_ BitVec 64))
(declare-fun temp870_81 () (_ BitVec 64))
(declare-fun temp870_82 () (_ BitVec 64))
(declare-fun temp870_83 () (_ BitVec 64))
(declare-fun temp870_84 () (_ BitVec 64))
(declare-fun temp870_85 () (_ BitVec 64))
(declare-fun temp870_86 () (_ BitVec 64))
(declare-fun temp870_87 () (_ BitVec 64))
(declare-fun temp870_88 () (_ BitVec 64))
(declare-fun temp870_89 () (_ BitVec 64))
(declare-fun temp870_90 () (_ BitVec 64))
(declare-fun temp870_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp870_92 () (_ BitVec 64))
(declare-fun temp870_93 () (_ BitVec 64))
(declare-fun temp870_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp870_95 () (_ BitVec 64))
(declare-fun temp870_96 () (_ BitVec 64))
(declare-fun temp870_97 () (_ BitVec 64))
(declare-fun temp870_98 () (_ BitVec 64))
(declare-fun temp870_99 () (_ BitVec 64))
(declare-fun temp870_100 () (_ BitVec 64))
(declare-fun temp870_101 () (_ BitVec 64))
(declare-fun temp870_102 () (_ BitVec 64))
(declare-fun temp870_103 () (_ BitVec 64))
(declare-fun temp870_104 () (_ BitVec 64))
(declare-fun temp870_105 () (_ BitVec 64))
(declare-fun temp870_106 () (_ BitVec 64))
(declare-fun temp870_107 () (_ BitVec 64))
(declare-fun temp870_108 () (_ BitVec 64))
(declare-fun temp870_109 () (_ BitVec 64))
(declare-fun temp870_110 () (_ BitVec 64))
(declare-fun temp870_111 () (_ BitVec 64))
(declare-fun temp870_112 () (_ BitVec 64))
(declare-fun temp870_113 () (_ BitVec 64))
(declare-fun temp870_114 () (_ BitVec 64))
(declare-fun temp870_115 () (_ BitVec 64))
(declare-fun temp870_116 () (_ BitVec 64))
(declare-fun temp870_117 () (_ BitVec 64))
(declare-fun temp870_118 () (_ BitVec 64))
(declare-fun temp870_119 () (_ BitVec 64))
(declare-fun temp870_120 () (_ BitVec 64))
(declare-fun temp870_121 () (_ BitVec 64))
(declare-fun temp870_122 () (_ BitVec 64))
(declare-fun temp870_123 () (_ BitVec 64))
(declare-fun temp870_124 () (_ BitVec 64))
(declare-fun temp870_125 () (_ BitVec 64))
(declare-fun temp870_126 () (_ BitVec 64))
(declare-fun temp870_127 () (_ BitVec 64))
(declare-fun temp870_128 () (_ BitVec 64))
(declare-fun temp870_129 () (_ BitVec 64))
(declare-fun temp870_130 () (_ BitVec 64))
(declare-fun temp870_131 () (_ BitVec 64))
(declare-fun temp870_132 () (_ BitVec 64))
(declare-fun temp870_133 () (_ BitVec 64))
(declare-fun temp870_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp870_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp870_136 () (_ BitVec 64))
(declare-fun temp870_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp870_138 () (_ BitVec 64))
(declare-fun temp870_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp870_140 () (_ BitVec 64))
(declare-fun temp870_141 () (_ BitVec 64))
(declare-fun temp870_142 () (_ BitVec 64))
(declare-fun temp870_143 () (_ BitVec 64))
(declare-fun temp870_144 () (_ BitVec 64))
(declare-fun temp870_145 () (_ BitVec 64))
(declare-fun temp870_146 () (_ BitVec 64))
(declare-fun temp870_147 () (_ BitVec 64))
(declare-fun temp870_148 () (_ BitVec 64))
(declare-fun temp870_149 () (_ BitVec 64))
(declare-fun temp870_150 () (_ BitVec 64))
(declare-fun temp870_151 () (_ BitVec 64))
(declare-fun temp870_152 () (_ BitVec 64))
(declare-fun temp870_153 () (_ BitVec 64))
(declare-fun temp870_154 () (_ BitVec 64))
(declare-fun temp870_155 () (_ BitVec 64))
(declare-fun temp870_157 () (_ BitVec 64))
(declare-fun temp870_158 () (_ BitVec 64))
(declare-fun temp870_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp870_159 () (_ BitVec 64))
(declare-fun temp870_160 () (_ BitVec 64))
(declare-fun temp870_162 () (_ BitVec 64))
(declare-fun temp870_163 () (_ BitVec 64))
(declare-fun temp870_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp870_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp870_165 () (_ BitVec 64))
(declare-fun temp870_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp870_167 () (_ BitVec 64))
(declare-fun temp870_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp870_169 () (_ BitVec 64))
(declare-fun temp870_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp870_171 () (_ BitVec 64))
(declare-fun temp870_172 () (_ BitVec 64))
(declare-fun temp870_173 () (_ BitVec 64))
(declare-fun temp870_174 () (_ BitVec 64))
(declare-fun temp870_175 () (_ BitVec 64))
(declare-fun temp870_176 () (_ BitVec 64))
(declare-fun temp870_177 () (_ BitVec 64))
(declare-fun temp870_178 () (_ BitVec 64))
(declare-fun temp870_179 () (_ BitVec 64))
(declare-fun temp870_180 () (_ BitVec 64))
(declare-fun temp870_181 () (_ BitVec 64))
(declare-fun temp870_182 () (_ BitVec 64))
(declare-fun temp870_183 () (_ BitVec 64))
(declare-fun temp870_184 () (_ BitVec 64))
(declare-fun temp870_185 () (_ BitVec 64))
(declare-fun temp870_186 () (_ BitVec 64))
(declare-fun temp870_187 () (_ BitVec 64))
(declare-fun temp870_188 () (_ BitVec 64))
(declare-fun temp870_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp870_190 () (_ BitVec 64))
(declare-fun temp870_192 () (_ BitVec 64))
(declare-fun temp870_193 () (_ BitVec 64))
(declare-fun temp870_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp870_194 () (_ BitVec 64))
(declare-fun temp870_195 () (_ BitVec 64))
(declare-fun temp870_197 () (_ BitVec 64))
(declare-fun temp870_198 () (_ BitVec 64))
(declare-fun temp870_196 () (_ BitVec 64))
(declare-fun temp870_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp870_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp870_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp870_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp870_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp870_204 () (_ BitVec 64))
(declare-fun temp870_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp870_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp870_207 () (_ BitVec 64))
(declare-fun temp870_208 () (_ BitVec 64))
(declare-fun temp870_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp870_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp870_211 () (_ BitVec 64))
(declare-fun temp870_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp870_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp870_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp870_215 () (_ BitVec 64))
(assert (= temp870_1 #x0000000000000001))
(assert (= var77203 temp870_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp870_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp870_2)))
(assert (= temp870_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp870_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp870_4 #x0000000000000000))
(assert (= var210941 temp870_4))
(assert (= temp870_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp870_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp870_6 #x0000000000000000))
(assert (= var210986 temp870_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp870_7 #x0000000000000000))
(assert (= temp870_8 temp870_7))
(assert (= temp870_9 (select ARGNAME_padding_NAMEEND_VAL temp870_8)))
(assert (= temp870_10 #x0000000000000001))
(assert (= temp870_11 temp870_10))
(assert (= temp870_12 (select ARGNAME_padding_NAMEEND_VAL temp870_11)))
(assert (= temp870_13 #x0000000000000002))
(assert (= temp870_14 temp870_13))
(assert (= temp870_15 (select ARGNAME_padding_NAMEEND_VAL temp870_14)))
(assert (= temp870_16 #x0000000000000003))
(assert (= temp870_17 temp870_16))
(assert (= temp870_18 (select ARGNAME_padding_NAMEEND_VAL temp870_17)))
(assert (= temp870_19 #x0000000000000004))
(assert (= temp870_20 temp870_19))
(assert (= temp870_21 (select ARGNAME_padding_NAMEEND_VAL temp870_20)))
(assert (= temp870_22 #x0000000000000005))
(assert (= temp870_23 temp870_22))
(assert (= temp870_24 (select ARGNAME_padding_NAMEEND_VAL temp870_23)))
(assert (= temp870_25 #x0000000000000000))
(assert (= temp870_26 #x0000000000000000))
(assert (= temp870_27 temp870_26))
(assert (= temp870_28 (select ARGNAME_padding_NAMEEND_VAL temp870_27)))
(assert (= temp870_29 #x0000000000000000))
(assert (= temp870_30 #x0000000000000001))
(assert (= temp870_31 temp870_30))
(assert (= temp870_32 (select ARGNAME_padding_NAMEEND_VAL temp870_31)))
(assert (= temp870_33 #x0000000000000000))
(assert (= temp870_34 #x0000000000000002))
(assert (= temp870_35 temp870_34))
(assert (= temp870_36 (select ARGNAME_padding_NAMEEND_VAL temp870_35)))
(assert (= temp870_37 #x0000000000000000))
(assert (= temp870_38 #x0000000000000003))
(assert (= temp870_39 temp870_38))
(assert (= temp870_40 (select ARGNAME_padding_NAMEEND_VAL temp870_39)))
(assert (= temp870_41 #x0000000000000000))
(assert (= temp870_42 #x0000000000000004))
(assert (= temp870_43 temp870_42))
(assert (= temp870_44 (select ARGNAME_padding_NAMEEND_VAL temp870_43)))
(assert (= temp870_45 #x0000000000000000))
(assert (= temp870_46 #x0000000000000005))
(assert (= temp870_47 temp870_46))
(assert (= temp870_48 (select ARGNAME_padding_NAMEEND_VAL temp870_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp870_28 temp870_25)
             (bvslt temp870_32 temp870_29)
             (bvslt temp870_36 temp870_33)
             (bvslt temp870_40 temp870_37)
             (bvslt temp870_44 temp870_41)
             (bvslt temp870_48 temp870_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp870_49 #x0000000000000000))
(assert (= var1191714 temp870_49))
(assert (= temp870_50 #x0000000000000000))
(assert (= temp870_51 temp870_50))
(assert (= temp870_52 (select ARGNAME_output_padding_NAMEEND_VAL temp870_51)))
(assert (= temp870_53 #x0000000000000001))
(assert (= temp870_54 temp870_53))
(assert (= temp870_55 (select ARGNAME_output_padding_NAMEEND_VAL temp870_54)))
(assert (= temp870_56 #x0000000000000002))
(assert (= temp870_57 temp870_56))
(assert (= temp870_58 (select ARGNAME_output_padding_NAMEEND_VAL temp870_57)))
(assert (= temp870_59 #x0000000000000003))
(assert (= temp870_60 temp870_59))
(assert (= temp870_61 (select ARGNAME_output_padding_NAMEEND_VAL temp870_60)))
(assert (= temp870_62 #x0000000000000004))
(assert (= temp870_63 temp870_62))
(assert (= temp870_64 (select ARGNAME_output_padding_NAMEEND_VAL temp870_63)))
(assert (= temp870_65 #x0000000000000005))
(assert (= temp870_66 temp870_65))
(assert (= temp870_67 (select ARGNAME_output_padding_NAMEEND_VAL temp870_66)))
(assert (= temp870_68 #x0000000000000000))
(assert (= temp870_69 #x0000000000000000))
(assert (= temp870_70 temp870_69))
(assert (= temp870_71 (select ARGNAME_output_padding_NAMEEND_VAL temp870_70)))
(assert (= temp870_72 #x0000000000000000))
(assert (= temp870_73 #x0000000000000001))
(assert (= temp870_74 temp870_73))
(assert (= temp870_75 (select ARGNAME_output_padding_NAMEEND_VAL temp870_74)))
(assert (= temp870_76 #x0000000000000000))
(assert (= temp870_77 #x0000000000000002))
(assert (= temp870_78 temp870_77))
(assert (= temp870_79 (select ARGNAME_output_padding_NAMEEND_VAL temp870_78)))
(assert (= temp870_80 #x0000000000000000))
(assert (= temp870_81 #x0000000000000003))
(assert (= temp870_82 temp870_81))
(assert (= temp870_83 (select ARGNAME_output_padding_NAMEEND_VAL temp870_82)))
(assert (= temp870_84 #x0000000000000000))
(assert (= temp870_85 #x0000000000000004))
(assert (= temp870_86 temp870_85))
(assert (= temp870_87 (select ARGNAME_output_padding_NAMEEND_VAL temp870_86)))
(assert (= temp870_88 #x0000000000000000))
(assert (= temp870_89 #x0000000000000005))
(assert (= temp870_90 temp870_89))
(assert (= temp870_91 (select ARGNAME_output_padding_NAMEEND_VAL temp870_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp870_71 temp870_68)
             (bvslt temp870_75 temp870_72)
             (bvslt temp870_79 temp870_76)
             (bvslt temp870_83 temp870_80)
             (bvslt temp870_87 temp870_84)
             (bvslt temp870_91 temp870_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp870_92 #x0000000000000000))
(assert (= var1191725 temp870_92))
(assert (= temp870_93 #x0000000000000000))
(assert (= temp870_94 temp870_93))
(assert (= temp870_95 (select ARGNAME_stride_NAMEEND_VAL temp870_94)))
(assert (= temp870_96 #x0000000000000001))
(assert (= temp870_97 temp870_96))
(assert (= temp870_98 (select ARGNAME_stride_NAMEEND_VAL temp870_97)))
(assert (= temp870_99 #x0000000000000002))
(assert (= temp870_100 temp870_99))
(assert (= temp870_101 (select ARGNAME_stride_NAMEEND_VAL temp870_100)))
(assert (= temp870_102 #x0000000000000003))
(assert (= temp870_103 temp870_102))
(assert (= temp870_104 (select ARGNAME_stride_NAMEEND_VAL temp870_103)))
(assert (= temp870_105 #x0000000000000004))
(assert (= temp870_106 temp870_105))
(assert (= temp870_107 (select ARGNAME_stride_NAMEEND_VAL temp870_106)))
(assert (= temp870_108 #x0000000000000005))
(assert (= temp870_109 temp870_108))
(assert (= temp870_110 (select ARGNAME_stride_NAMEEND_VAL temp870_109)))
(assert (= temp870_111 #x0000000000000000))
(assert (= temp870_112 #x0000000000000000))
(assert (= temp870_113 temp870_112))
(assert (= temp870_114 (select ARGNAME_stride_NAMEEND_VAL temp870_113)))
(assert (= temp870_115 #x0000000000000000))
(assert (= temp870_116 #x0000000000000001))
(assert (= temp870_117 temp870_116))
(assert (= temp870_118 (select ARGNAME_stride_NAMEEND_VAL temp870_117)))
(assert (= temp870_119 #x0000000000000000))
(assert (= temp870_120 #x0000000000000002))
(assert (= temp870_121 temp870_120))
(assert (= temp870_122 (select ARGNAME_stride_NAMEEND_VAL temp870_121)))
(assert (= temp870_123 #x0000000000000000))
(assert (= temp870_124 #x0000000000000003))
(assert (= temp870_125 temp870_124))
(assert (= temp870_126 (select ARGNAME_stride_NAMEEND_VAL temp870_125)))
(assert (= temp870_127 #x0000000000000000))
(assert (= temp870_128 #x0000000000000004))
(assert (= temp870_129 temp870_128))
(assert (= temp870_130 (select ARGNAME_stride_NAMEEND_VAL temp870_129)))
(assert (= temp870_131 #x0000000000000000))
(assert (= temp870_132 #x0000000000000005))
(assert (= temp870_133 temp870_132))
(assert (= temp870_134 (select ARGNAME_stride_NAMEEND_VAL temp870_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp870_114 temp870_111)
             (bvsle temp870_118 temp870_115)
             (bvsle temp870_122 temp870_119)
             (bvsle temp870_126 temp870_123)
             (bvsle temp870_130 temp870_127)
             (bvsle temp870_134 temp870_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp870_135 #x0000000000000000))
(assert (= var1191735 temp870_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp870_136 #x0000000000000001))
(assert (= var1191747 temp870_136))
(assert (= temp870_137 #x0000000000000000))
(assert (= var1179826 temp870_137))
(assert (= temp870_138 #x0000000000000000))
(assert (= temp870_139 temp870_138))
(assert (= temp870_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp870_139)))
(assert (= temp870_141 #x0000000000000001))
(assert (= temp870_142 temp870_141))
(assert (= temp870_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp870_142)))
(assert (= temp870_144 #x0000000000000002))
(assert (= temp870_145 temp870_144))
(assert (= temp870_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp870_145)))
(assert (= temp870_147 #x0000000000000003))
(assert (= temp870_148 temp870_147))
(assert (= temp870_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp870_148)))
(assert (= temp870_150 #x0000000000000004))
(assert (= temp870_151 temp870_150))
(assert (= temp870_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp870_151)))
(assert (= temp870_153 #x0000000000000005))
(assert (= temp870_154 temp870_153))
(assert (= temp870_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp870_154)))
(assert (= temp870_157 var1179826))
(assert (= temp870_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp870_157)))
(assert (= temp870_156 temp870_158))
(assert (= var1191780
   (ite (bvslt temp870_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp870_159 #x0000000000000000))
(assert (= var1191780 temp870_159))
(assert (= temp870_160 #x0000000000000000))
(assert (= var1179826 temp870_160))
(assert (= temp870_162 var1179826))
(assert (= temp870_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp870_162)))
(assert (= temp870_161 temp870_163))
(assert (= var1191802 (bvsmod temp870_161 ARGNAME_groups_NAMEEND)))
(assert (= temp870_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp870_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp870_165 #x0000000000000001))
(assert (= var1191803 temp870_165))
(assert (= temp870_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp870_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp870_167 #x0000000000000001))
(assert (= var1191823 temp870_167))
(assert (= temp870_168 #x0000000000000001))
(assert (= var1180714 temp870_168))
(assert (= temp870_169 #x0000000000000000))
(assert (= temp870_170 temp870_169))
(assert (= temp870_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp870_170)))
(assert (= temp870_172 #x0000000000000001))
(assert (= temp870_173 temp870_172))
(assert (= temp870_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp870_173)))
(assert (= temp870_175 #x0000000000000002))
(assert (= temp870_176 temp870_175))
(assert (= temp870_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp870_176)))
(assert (= temp870_178 #x0000000000000003))
(assert (= temp870_179 temp870_178))
(assert (= temp870_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp870_179)))
(assert (= temp870_181 #x0000000000000004))
(assert (= temp870_182 temp870_181))
(assert (= temp870_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp870_182)))
(assert (= temp870_184 #x0000000000000005))
(assert (= temp870_185 temp870_184))
(assert (= temp870_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp870_185)))
(assert (= temp870_187 #x0000000000000000))
(assert (= temp870_188
   (ite (bvslt var1180714 temp870_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp870_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp870_188)))
(assert (= var1191831 temp870_189))
(assert (bvslt (ite (bvslt var1180714 temp870_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp870_190 #x0000000000000001))
(assert (= var1180714 temp870_190))
(assert (= temp870_192 var1180714))
(assert (= temp870_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp870_192)))
(assert (= temp870_191 temp870_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp870_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp870_194 #x0000000000000001))
(assert (= var1191836 temp870_194))
(assert (= temp870_195 #x0000000000000000))
(assert (= var1179826 temp870_195))
(assert (= temp870_197 var1179826))
(assert (= temp870_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp870_197)))
(assert (= temp870_196 temp870_198))
(assert (= temp870_199 #x0000000000000002))
(assert (= var1586025 temp870_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp870_200 #x0000000000000001))
(assert (= var1191993 temp870_200))
(assert (= temp870_201 #x0000000000000001))
(assert (= var2700303 temp870_201))
(assert (= temp870_202 #x0000000000000001))
(assert (= var2962447 temp870_202))
(assert (= temp870_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp870_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp870_204 #x0000000000000001))
(assert (= var211058 temp870_204))
(assert (= temp870_205 #x0000000000000001))
(assert (= var211188 temp870_205))
(assert (= var3879401 var211188))
(assert (= temp870_206 #x0000000000000000))
(assert (= var3866802 temp870_206))
(assert (= temp870_207 #x0000000000000000))
(assert (= temp870_208
   (ite (bvslt var3866802 temp870_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp870_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp870_208)))
(assert (= var3879420 temp870_209))
(assert (bvslt (ite (bvslt var3866802 temp870_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp870_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp870_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp870_211 #x0000000000000001))
(assert (= var3879421 temp870_211))
(assert (= temp870_212 #x0000000000000000))
(assert (= var4079423 temp870_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp870_213 #x0000000000000002))
(assert (= var4208259 temp870_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp870_214 #x0000000000000000))
(assert (= var4273820 temp870_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp870_215 #x0000000000000001))
(assert (= var211058 temp870_215))
(model-add temp870_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp870_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp870_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp870_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




