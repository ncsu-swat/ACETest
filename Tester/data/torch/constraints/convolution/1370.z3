(declare-fun temp10557_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10557_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10557_3 () (_ BitVec 64))
(declare-fun temp10557_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10557_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10557_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10557_7 () (_ BitVec 64))
(declare-fun temp10557_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10557_9 () (_ BitVec 64))
(declare-fun temp10557_10 () (_ BitVec 64))
(declare-fun temp10557_11 () (_ BitVec 64))
(declare-fun temp10557_12 () (_ BitVec 64))
(declare-fun temp10557_13 () (_ BitVec 64))
(declare-fun temp10557_14 () (_ BitVec 64))
(declare-fun temp10557_15 () (_ BitVec 64))
(declare-fun temp10557_16 () (_ BitVec 64))
(declare-fun temp10557_17 () (_ BitVec 64))
(declare-fun temp10557_18 () (_ BitVec 64))
(declare-fun temp10557_19 () (_ BitVec 64))
(declare-fun temp10557_20 () (_ BitVec 64))
(declare-fun temp10557_21 () (_ BitVec 64))
(declare-fun temp10557_22 () (_ BitVec 64))
(declare-fun temp10557_23 () (_ BitVec 64))
(declare-fun temp10557_24 () (_ BitVec 64))
(declare-fun temp10557_25 () (_ BitVec 64))
(declare-fun temp10557_26 () (_ BitVec 64))
(declare-fun temp10557_27 () (_ BitVec 64))
(declare-fun temp10557_28 () (_ BitVec 64))
(declare-fun temp10557_29 () (_ BitVec 64))
(declare-fun temp10557_30 () (_ BitVec 64))
(declare-fun temp10557_31 () (_ BitVec 64))
(declare-fun temp10557_32 () (_ BitVec 64))
(declare-fun temp10557_33 () (_ BitVec 64))
(declare-fun temp10557_34 () (_ BitVec 64))
(declare-fun temp10557_35 () (_ BitVec 64))
(declare-fun temp10557_36 () (_ BitVec 64))
(declare-fun temp10557_37 () (_ BitVec 64))
(declare-fun temp10557_38 () (_ BitVec 64))
(declare-fun temp10557_39 () (_ BitVec 64))
(declare-fun temp10557_40 () (_ BitVec 64))
(declare-fun temp10557_41 () (_ BitVec 64))
(declare-fun temp10557_42 () (_ BitVec 64))
(declare-fun temp10557_43 () (_ BitVec 64))
(declare-fun temp10557_44 () (_ BitVec 64))
(declare-fun temp10557_45 () (_ BitVec 64))
(declare-fun temp10557_46 () (_ BitVec 64))
(declare-fun temp10557_47 () (_ BitVec 64))
(declare-fun temp10557_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10557_49 () (_ BitVec 64))
(declare-fun temp10557_50 () (_ BitVec 64))
(declare-fun temp10557_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10557_52 () (_ BitVec 64))
(declare-fun temp10557_53 () (_ BitVec 64))
(declare-fun temp10557_54 () (_ BitVec 64))
(declare-fun temp10557_55 () (_ BitVec 64))
(declare-fun temp10557_56 () (_ BitVec 64))
(declare-fun temp10557_57 () (_ BitVec 64))
(declare-fun temp10557_58 () (_ BitVec 64))
(declare-fun temp10557_59 () (_ BitVec 64))
(declare-fun temp10557_60 () (_ BitVec 64))
(declare-fun temp10557_61 () (_ BitVec 64))
(declare-fun temp10557_62 () (_ BitVec 64))
(declare-fun temp10557_63 () (_ BitVec 64))
(declare-fun temp10557_64 () (_ BitVec 64))
(declare-fun temp10557_65 () (_ BitVec 64))
(declare-fun temp10557_66 () (_ BitVec 64))
(declare-fun temp10557_67 () (_ BitVec 64))
(declare-fun temp10557_68 () (_ BitVec 64))
(declare-fun temp10557_69 () (_ BitVec 64))
(declare-fun temp10557_70 () (_ BitVec 64))
(declare-fun temp10557_71 () (_ BitVec 64))
(declare-fun temp10557_72 () (_ BitVec 64))
(declare-fun temp10557_73 () (_ BitVec 64))
(declare-fun temp10557_74 () (_ BitVec 64))
(declare-fun temp10557_75 () (_ BitVec 64))
(declare-fun temp10557_76 () (_ BitVec 64))
(declare-fun temp10557_77 () (_ BitVec 64))
(declare-fun temp10557_78 () (_ BitVec 64))
(declare-fun temp10557_79 () (_ BitVec 64))
(declare-fun temp10557_80 () (_ BitVec 64))
(declare-fun temp10557_81 () (_ BitVec 64))
(declare-fun temp10557_82 () (_ BitVec 64))
(declare-fun temp10557_83 () (_ BitVec 64))
(declare-fun temp10557_84 () (_ BitVec 64))
(declare-fun temp10557_85 () (_ BitVec 64))
(declare-fun temp10557_86 () (_ BitVec 64))
(declare-fun temp10557_87 () (_ BitVec 64))
(declare-fun temp10557_88 () (_ BitVec 64))
(declare-fun temp10557_89 () (_ BitVec 64))
(declare-fun temp10557_90 () (_ BitVec 64))
(declare-fun temp10557_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10557_92 () (_ BitVec 64))
(declare-fun temp10557_93 () (_ BitVec 64))
(declare-fun temp10557_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10557_95 () (_ BitVec 64))
(declare-fun temp10557_96 () (_ BitVec 64))
(declare-fun temp10557_97 () (_ BitVec 64))
(declare-fun temp10557_98 () (_ BitVec 64))
(declare-fun temp10557_99 () (_ BitVec 64))
(declare-fun temp10557_100 () (_ BitVec 64))
(declare-fun temp10557_101 () (_ BitVec 64))
(declare-fun temp10557_102 () (_ BitVec 64))
(declare-fun temp10557_103 () (_ BitVec 64))
(declare-fun temp10557_104 () (_ BitVec 64))
(declare-fun temp10557_105 () (_ BitVec 64))
(declare-fun temp10557_106 () (_ BitVec 64))
(declare-fun temp10557_107 () (_ BitVec 64))
(declare-fun temp10557_108 () (_ BitVec 64))
(declare-fun temp10557_109 () (_ BitVec 64))
(declare-fun temp10557_110 () (_ BitVec 64))
(declare-fun temp10557_111 () (_ BitVec 64))
(declare-fun temp10557_112 () (_ BitVec 64))
(declare-fun temp10557_113 () (_ BitVec 64))
(declare-fun temp10557_114 () (_ BitVec 64))
(declare-fun temp10557_115 () (_ BitVec 64))
(declare-fun temp10557_116 () (_ BitVec 64))
(declare-fun temp10557_117 () (_ BitVec 64))
(declare-fun temp10557_118 () (_ BitVec 64))
(declare-fun temp10557_119 () (_ BitVec 64))
(declare-fun temp10557_120 () (_ BitVec 64))
(declare-fun temp10557_121 () (_ BitVec 64))
(declare-fun temp10557_122 () (_ BitVec 64))
(declare-fun temp10557_123 () (_ BitVec 64))
(declare-fun temp10557_124 () (_ BitVec 64))
(declare-fun temp10557_125 () (_ BitVec 64))
(declare-fun temp10557_126 () (_ BitVec 64))
(declare-fun temp10557_127 () (_ BitVec 64))
(declare-fun temp10557_128 () (_ BitVec 64))
(declare-fun temp10557_129 () (_ BitVec 64))
(declare-fun temp10557_130 () (_ BitVec 64))
(declare-fun temp10557_131 () (_ BitVec 64))
(declare-fun temp10557_132 () (_ BitVec 64))
(declare-fun temp10557_133 () (_ BitVec 64))
(declare-fun temp10557_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10557_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10557_136 () (_ BitVec 64))
(declare-fun temp10557_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10557_138 () (_ BitVec 64))
(declare-fun temp10557_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10557_140 () (_ BitVec 64))
(declare-fun temp10557_141 () (_ BitVec 64))
(declare-fun temp10557_142 () (_ BitVec 64))
(declare-fun temp10557_143 () (_ BitVec 64))
(declare-fun temp10557_144 () (_ BitVec 64))
(declare-fun temp10557_145 () (_ BitVec 64))
(declare-fun temp10557_146 () (_ BitVec 64))
(declare-fun temp10557_147 () (_ BitVec 64))
(declare-fun temp10557_148 () (_ BitVec 64))
(declare-fun temp10557_149 () (_ BitVec 64))
(declare-fun temp10557_150 () (_ BitVec 64))
(declare-fun temp10557_151 () (_ BitVec 64))
(declare-fun temp10557_152 () (_ BitVec 64))
(declare-fun temp10557_153 () (_ BitVec 64))
(declare-fun temp10557_154 () (_ BitVec 64))
(declare-fun temp10557_155 () (_ BitVec 64))
(declare-fun temp10557_157 () (_ BitVec 64))
(declare-fun temp10557_158 () (_ BitVec 64))
(declare-fun temp10557_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10557_159 () (_ BitVec 64))
(declare-fun temp10557_160 () (_ BitVec 64))
(declare-fun temp10557_162 () (_ BitVec 64))
(declare-fun temp10557_163 () (_ BitVec 64))
(declare-fun temp10557_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10557_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10557_165 () (_ BitVec 64))
(declare-fun temp10557_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10557_167 () (_ BitVec 64))
(declare-fun temp10557_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10557_169 () (_ BitVec 64))
(declare-fun temp10557_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10557_171 () (_ BitVec 64))
(declare-fun temp10557_172 () (_ BitVec 64))
(declare-fun temp10557_173 () (_ BitVec 64))
(declare-fun temp10557_174 () (_ BitVec 64))
(declare-fun temp10557_175 () (_ BitVec 64))
(declare-fun temp10557_176 () (_ BitVec 64))
(declare-fun temp10557_177 () (_ BitVec 64))
(declare-fun temp10557_178 () (_ BitVec 64))
(declare-fun temp10557_179 () (_ BitVec 64))
(declare-fun temp10557_180 () (_ BitVec 64))
(declare-fun temp10557_181 () (_ BitVec 64))
(declare-fun temp10557_182 () (_ BitVec 64))
(declare-fun temp10557_183 () (_ BitVec 64))
(declare-fun temp10557_184 () (_ BitVec 64))
(declare-fun temp10557_185 () (_ BitVec 64))
(declare-fun temp10557_186 () (_ BitVec 64))
(declare-fun temp10557_187 () (_ BitVec 64))
(declare-fun temp10557_188 () (_ BitVec 64))
(declare-fun temp10557_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10557_190 () (_ BitVec 64))
(declare-fun temp10557_192 () (_ BitVec 64))
(declare-fun temp10557_193 () (_ BitVec 64))
(declare-fun temp10557_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10557_194 () (_ BitVec 64))
(declare-fun temp10557_195 () (_ BitVec 64))
(declare-fun temp10557_197 () (_ BitVec 64))
(declare-fun temp10557_198 () (_ BitVec 64))
(declare-fun temp10557_196 () (_ BitVec 64))
(declare-fun temp10557_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10557_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10557_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10557_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10557_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10557_204 () (_ BitVec 64))
(declare-fun temp10557_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10557_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10557_207 () (_ BitVec 64))
(declare-fun temp10557_208 () (_ BitVec 64))
(declare-fun temp10557_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10557_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10557_211 () (_ BitVec 64))
(declare-fun temp10557_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10557_213 () (_ BitVec 64))
(declare-fun temp10557_214 () (_ BitVec 64))
(declare-fun temp10557_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10557_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10557_217 () (_ BitVec 64))
(declare-fun temp10557_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10557_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10557_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp10557_221 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5848909 () (_ BitVec 64))
(declare-fun temp10557_222 () (_ BitVec 64))
(assert (= temp10557_1 #x0000000000000001))
(assert (= var77203 temp10557_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10557_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10557_2)))
(assert (= temp10557_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10557_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10557_4 #x0000000000000000))
(assert (= var210941 temp10557_4))
(assert (= temp10557_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10557_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10557_6 #x0000000000000000))
(assert (= var210986 temp10557_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10557_7 #x0000000000000000))
(assert (= temp10557_8 temp10557_7))
(assert (= temp10557_9 (select ARGNAME_padding_NAMEEND_VAL temp10557_8)))
(assert (= temp10557_10 #x0000000000000001))
(assert (= temp10557_11 temp10557_10))
(assert (= temp10557_12 (select ARGNAME_padding_NAMEEND_VAL temp10557_11)))
(assert (= temp10557_13 #x0000000000000002))
(assert (= temp10557_14 temp10557_13))
(assert (= temp10557_15 (select ARGNAME_padding_NAMEEND_VAL temp10557_14)))
(assert (= temp10557_16 #x0000000000000003))
(assert (= temp10557_17 temp10557_16))
(assert (= temp10557_18 (select ARGNAME_padding_NAMEEND_VAL temp10557_17)))
(assert (= temp10557_19 #x0000000000000004))
(assert (= temp10557_20 temp10557_19))
(assert (= temp10557_21 (select ARGNAME_padding_NAMEEND_VAL temp10557_20)))
(assert (= temp10557_22 #x0000000000000005))
(assert (= temp10557_23 temp10557_22))
(assert (= temp10557_24 (select ARGNAME_padding_NAMEEND_VAL temp10557_23)))
(assert (= temp10557_25 #x0000000000000000))
(assert (= temp10557_26 #x0000000000000000))
(assert (= temp10557_27 temp10557_26))
(assert (= temp10557_28 (select ARGNAME_padding_NAMEEND_VAL temp10557_27)))
(assert (= temp10557_29 #x0000000000000000))
(assert (= temp10557_30 #x0000000000000001))
(assert (= temp10557_31 temp10557_30))
(assert (= temp10557_32 (select ARGNAME_padding_NAMEEND_VAL temp10557_31)))
(assert (= temp10557_33 #x0000000000000000))
(assert (= temp10557_34 #x0000000000000002))
(assert (= temp10557_35 temp10557_34))
(assert (= temp10557_36 (select ARGNAME_padding_NAMEEND_VAL temp10557_35)))
(assert (= temp10557_37 #x0000000000000000))
(assert (= temp10557_38 #x0000000000000003))
(assert (= temp10557_39 temp10557_38))
(assert (= temp10557_40 (select ARGNAME_padding_NAMEEND_VAL temp10557_39)))
(assert (= temp10557_41 #x0000000000000000))
(assert (= temp10557_42 #x0000000000000004))
(assert (= temp10557_43 temp10557_42))
(assert (= temp10557_44 (select ARGNAME_padding_NAMEEND_VAL temp10557_43)))
(assert (= temp10557_45 #x0000000000000000))
(assert (= temp10557_46 #x0000000000000005))
(assert (= temp10557_47 temp10557_46))
(assert (= temp10557_48 (select ARGNAME_padding_NAMEEND_VAL temp10557_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10557_28 temp10557_25)
             (bvslt temp10557_32 temp10557_29)
             (bvslt temp10557_36 temp10557_33)
             (bvslt temp10557_40 temp10557_37)
             (bvslt temp10557_44 temp10557_41)
             (bvslt temp10557_48 temp10557_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10557_49 #x0000000000000000))
(assert (= var1191714 temp10557_49))
(assert (= temp10557_50 #x0000000000000000))
(assert (= temp10557_51 temp10557_50))
(assert (= temp10557_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10557_51)))
(assert (= temp10557_53 #x0000000000000001))
(assert (= temp10557_54 temp10557_53))
(assert (= temp10557_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10557_54)))
(assert (= temp10557_56 #x0000000000000002))
(assert (= temp10557_57 temp10557_56))
(assert (= temp10557_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10557_57)))
(assert (= temp10557_59 #x0000000000000003))
(assert (= temp10557_60 temp10557_59))
(assert (= temp10557_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10557_60)))
(assert (= temp10557_62 #x0000000000000004))
(assert (= temp10557_63 temp10557_62))
(assert (= temp10557_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10557_63)))
(assert (= temp10557_65 #x0000000000000005))
(assert (= temp10557_66 temp10557_65))
(assert (= temp10557_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10557_66)))
(assert (= temp10557_68 #x0000000000000000))
(assert (= temp10557_69 #x0000000000000000))
(assert (= temp10557_70 temp10557_69))
(assert (= temp10557_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10557_70)))
(assert (= temp10557_72 #x0000000000000000))
(assert (= temp10557_73 #x0000000000000001))
(assert (= temp10557_74 temp10557_73))
(assert (= temp10557_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10557_74)))
(assert (= temp10557_76 #x0000000000000000))
(assert (= temp10557_77 #x0000000000000002))
(assert (= temp10557_78 temp10557_77))
(assert (= temp10557_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10557_78)))
(assert (= temp10557_80 #x0000000000000000))
(assert (= temp10557_81 #x0000000000000003))
(assert (= temp10557_82 temp10557_81))
(assert (= temp10557_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10557_82)))
(assert (= temp10557_84 #x0000000000000000))
(assert (= temp10557_85 #x0000000000000004))
(assert (= temp10557_86 temp10557_85))
(assert (= temp10557_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10557_86)))
(assert (= temp10557_88 #x0000000000000000))
(assert (= temp10557_89 #x0000000000000005))
(assert (= temp10557_90 temp10557_89))
(assert (= temp10557_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10557_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10557_71 temp10557_68)
             (bvslt temp10557_75 temp10557_72)
             (bvslt temp10557_79 temp10557_76)
             (bvslt temp10557_83 temp10557_80)
             (bvslt temp10557_87 temp10557_84)
             (bvslt temp10557_91 temp10557_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10557_92 #x0000000000000000))
(assert (= var1191725 temp10557_92))
(assert (= temp10557_93 #x0000000000000000))
(assert (= temp10557_94 temp10557_93))
(assert (= temp10557_95 (select ARGNAME_stride_NAMEEND_VAL temp10557_94)))
(assert (= temp10557_96 #x0000000000000001))
(assert (= temp10557_97 temp10557_96))
(assert (= temp10557_98 (select ARGNAME_stride_NAMEEND_VAL temp10557_97)))
(assert (= temp10557_99 #x0000000000000002))
(assert (= temp10557_100 temp10557_99))
(assert (= temp10557_101 (select ARGNAME_stride_NAMEEND_VAL temp10557_100)))
(assert (= temp10557_102 #x0000000000000003))
(assert (= temp10557_103 temp10557_102))
(assert (= temp10557_104 (select ARGNAME_stride_NAMEEND_VAL temp10557_103)))
(assert (= temp10557_105 #x0000000000000004))
(assert (= temp10557_106 temp10557_105))
(assert (= temp10557_107 (select ARGNAME_stride_NAMEEND_VAL temp10557_106)))
(assert (= temp10557_108 #x0000000000000005))
(assert (= temp10557_109 temp10557_108))
(assert (= temp10557_110 (select ARGNAME_stride_NAMEEND_VAL temp10557_109)))
(assert (= temp10557_111 #x0000000000000000))
(assert (= temp10557_112 #x0000000000000000))
(assert (= temp10557_113 temp10557_112))
(assert (= temp10557_114 (select ARGNAME_stride_NAMEEND_VAL temp10557_113)))
(assert (= temp10557_115 #x0000000000000000))
(assert (= temp10557_116 #x0000000000000001))
(assert (= temp10557_117 temp10557_116))
(assert (= temp10557_118 (select ARGNAME_stride_NAMEEND_VAL temp10557_117)))
(assert (= temp10557_119 #x0000000000000000))
(assert (= temp10557_120 #x0000000000000002))
(assert (= temp10557_121 temp10557_120))
(assert (= temp10557_122 (select ARGNAME_stride_NAMEEND_VAL temp10557_121)))
(assert (= temp10557_123 #x0000000000000000))
(assert (= temp10557_124 #x0000000000000003))
(assert (= temp10557_125 temp10557_124))
(assert (= temp10557_126 (select ARGNAME_stride_NAMEEND_VAL temp10557_125)))
(assert (= temp10557_127 #x0000000000000000))
(assert (= temp10557_128 #x0000000000000004))
(assert (= temp10557_129 temp10557_128))
(assert (= temp10557_130 (select ARGNAME_stride_NAMEEND_VAL temp10557_129)))
(assert (= temp10557_131 #x0000000000000000))
(assert (= temp10557_132 #x0000000000000005))
(assert (= temp10557_133 temp10557_132))
(assert (= temp10557_134 (select ARGNAME_stride_NAMEEND_VAL temp10557_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10557_114 temp10557_111)
             (bvsle temp10557_118 temp10557_115)
             (bvsle temp10557_122 temp10557_119)
             (bvsle temp10557_126 temp10557_123)
             (bvsle temp10557_130 temp10557_127)
             (bvsle temp10557_134 temp10557_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10557_135 #x0000000000000000))
(assert (= var1191735 temp10557_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10557_136 #x0000000000000001))
(assert (= var1191747 temp10557_136))
(assert (= temp10557_137 #x0000000000000000))
(assert (= var1179826 temp10557_137))
(assert (= temp10557_138 #x0000000000000000))
(assert (= temp10557_139 temp10557_138))
(assert (= temp10557_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10557_139)))
(assert (= temp10557_141 #x0000000000000001))
(assert (= temp10557_142 temp10557_141))
(assert (= temp10557_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10557_142)))
(assert (= temp10557_144 #x0000000000000002))
(assert (= temp10557_145 temp10557_144))
(assert (= temp10557_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10557_145)))
(assert (= temp10557_147 #x0000000000000003))
(assert (= temp10557_148 temp10557_147))
(assert (= temp10557_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10557_148)))
(assert (= temp10557_150 #x0000000000000004))
(assert (= temp10557_151 temp10557_150))
(assert (= temp10557_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10557_151)))
(assert (= temp10557_153 #x0000000000000005))
(assert (= temp10557_154 temp10557_153))
(assert (= temp10557_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10557_154)))
(assert (= temp10557_157 var1179826))
(assert (= temp10557_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10557_157)))
(assert (= temp10557_156 temp10557_158))
(assert (= var1191780
   (ite (bvslt temp10557_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10557_159 #x0000000000000000))
(assert (= var1191780 temp10557_159))
(assert (= temp10557_160 #x0000000000000000))
(assert (= var1179826 temp10557_160))
(assert (= temp10557_162 var1179826))
(assert (= temp10557_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10557_162)))
(assert (= temp10557_161 temp10557_163))
(assert (= var1191802 (bvsmod temp10557_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10557_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10557_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10557_165 #x0000000000000001))
(assert (= var1191803 temp10557_165))
(assert (= temp10557_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10557_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10557_167 #x0000000000000001))
(assert (= var1191823 temp10557_167))
(assert (= temp10557_168 #x0000000000000001))
(assert (= var1180714 temp10557_168))
(assert (= temp10557_169 #x0000000000000000))
(assert (= temp10557_170 temp10557_169))
(assert (= temp10557_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10557_170)))
(assert (= temp10557_172 #x0000000000000001))
(assert (= temp10557_173 temp10557_172))
(assert (= temp10557_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10557_173)))
(assert (= temp10557_175 #x0000000000000002))
(assert (= temp10557_176 temp10557_175))
(assert (= temp10557_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10557_176)))
(assert (= temp10557_178 #x0000000000000003))
(assert (= temp10557_179 temp10557_178))
(assert (= temp10557_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10557_179)))
(assert (= temp10557_181 #x0000000000000004))
(assert (= temp10557_182 temp10557_181))
(assert (= temp10557_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10557_182)))
(assert (= temp10557_184 #x0000000000000005))
(assert (= temp10557_185 temp10557_184))
(assert (= temp10557_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10557_185)))
(assert (= temp10557_187 #x0000000000000000))
(assert (= temp10557_188
   (ite (bvslt var1180714 temp10557_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10557_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10557_188)))
(assert (= var1191831 temp10557_189))
(assert (bvslt (ite (bvslt var1180714 temp10557_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10557_190 #x0000000000000001))
(assert (= var1180714 temp10557_190))
(assert (= temp10557_192 var1180714))
(assert (= temp10557_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10557_192)))
(assert (= temp10557_191 temp10557_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10557_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10557_194 #x0000000000000001))
(assert (= var1191836 temp10557_194))
(assert (= temp10557_195 #x0000000000000000))
(assert (= var1179826 temp10557_195))
(assert (= temp10557_197 var1179826))
(assert (= temp10557_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10557_197)))
(assert (= temp10557_196 temp10557_198))
(assert (= temp10557_199 #x0000000000000002))
(assert (= var1586025 temp10557_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10557_200 #x0000000000000001))
(assert (= var1191993 temp10557_200))
(assert (= temp10557_201 #x0000000000000001))
(assert (= var2700303 temp10557_201))
(assert (= temp10557_202 #x0000000000000001))
(assert (= var2962447 temp10557_202))
(assert (= temp10557_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10557_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10557_204 #x0000000000000001))
(assert (= var211058 temp10557_204))
(assert (= temp10557_205 #x0000000000000001))
(assert (= var211188 temp10557_205))
(assert (= var3879401 var211188))
(assert (= temp10557_206 #x0000000000000000))
(assert (= var3866802 temp10557_206))
(assert (= temp10557_207 #x0000000000000000))
(assert (= temp10557_208
   (ite (bvslt var3866802 temp10557_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10557_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10557_208)))
(assert (= var3879420 temp10557_209))
(assert (bvslt (ite (bvslt var3866802 temp10557_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10557_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10557_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10557_211 #x0000000000000000))
(assert (= var3879421 temp10557_211))
(assert (= temp10557_212 #x0000000000000001))
(assert (= var3867690 temp10557_212))
(assert (= temp10557_213 #x0000000000000000))
(assert (= temp10557_214
   (ite (bvslt var3867690 temp10557_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10557_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10557_214)))
(assert (= var3879423 temp10557_215))
(assert (bvslt (ite (bvslt var3867690 temp10557_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10557_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10557_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10557_217 #x0000000000000001))
(assert (= var3879424 temp10557_217))
(assert (= temp10557_218 #x0000000000000000))
(assert (= var4133117 temp10557_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10557_219 #x0000000000000002))
(assert (= var4339331 temp10557_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10557_220 #x0000000000000000))
(assert (= var4404892 temp10557_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4927888 var211201))
(assert (= var211388 var210913))
(assert (= temp10557_221 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp10557_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var5848909 var211389))
(assert (= temp10557_222 #x0000000000000001))
(assert (= var211058 temp10557_222))
(model-add temp10557_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10557_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10557_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10557_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




