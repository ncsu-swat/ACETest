(declare-fun temp10761_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10761_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10761_3 () (_ BitVec 64))
(declare-fun temp10761_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10761_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10761_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10761_7 () (_ BitVec 64))
(declare-fun temp10761_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10761_9 () (_ BitVec 64))
(declare-fun temp10761_10 () (_ BitVec 64))
(declare-fun temp10761_11 () (_ BitVec 64))
(declare-fun temp10761_12 () (_ BitVec 64))
(declare-fun temp10761_13 () (_ BitVec 64))
(declare-fun temp10761_14 () (_ BitVec 64))
(declare-fun temp10761_15 () (_ BitVec 64))
(declare-fun temp10761_16 () (_ BitVec 64))
(declare-fun temp10761_17 () (_ BitVec 64))
(declare-fun temp10761_18 () (_ BitVec 64))
(declare-fun temp10761_19 () (_ BitVec 64))
(declare-fun temp10761_20 () (_ BitVec 64))
(declare-fun temp10761_21 () (_ BitVec 64))
(declare-fun temp10761_22 () (_ BitVec 64))
(declare-fun temp10761_23 () (_ BitVec 64))
(declare-fun temp10761_24 () (_ BitVec 64))
(declare-fun temp10761_25 () (_ BitVec 64))
(declare-fun temp10761_26 () (_ BitVec 64))
(declare-fun temp10761_27 () (_ BitVec 64))
(declare-fun temp10761_28 () (_ BitVec 64))
(declare-fun temp10761_29 () (_ BitVec 64))
(declare-fun temp10761_30 () (_ BitVec 64))
(declare-fun temp10761_31 () (_ BitVec 64))
(declare-fun temp10761_32 () (_ BitVec 64))
(declare-fun temp10761_33 () (_ BitVec 64))
(declare-fun temp10761_34 () (_ BitVec 64))
(declare-fun temp10761_35 () (_ BitVec 64))
(declare-fun temp10761_36 () (_ BitVec 64))
(declare-fun temp10761_37 () (_ BitVec 64))
(declare-fun temp10761_38 () (_ BitVec 64))
(declare-fun temp10761_39 () (_ BitVec 64))
(declare-fun temp10761_40 () (_ BitVec 64))
(declare-fun temp10761_41 () (_ BitVec 64))
(declare-fun temp10761_42 () (_ BitVec 64))
(declare-fun temp10761_43 () (_ BitVec 64))
(declare-fun temp10761_44 () (_ BitVec 64))
(declare-fun temp10761_45 () (_ BitVec 64))
(declare-fun temp10761_46 () (_ BitVec 64))
(declare-fun temp10761_47 () (_ BitVec 64))
(declare-fun temp10761_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10761_49 () (_ BitVec 64))
(declare-fun temp10761_50 () (_ BitVec 64))
(declare-fun temp10761_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10761_52 () (_ BitVec 64))
(declare-fun temp10761_53 () (_ BitVec 64))
(declare-fun temp10761_54 () (_ BitVec 64))
(declare-fun temp10761_55 () (_ BitVec 64))
(declare-fun temp10761_56 () (_ BitVec 64))
(declare-fun temp10761_57 () (_ BitVec 64))
(declare-fun temp10761_58 () (_ BitVec 64))
(declare-fun temp10761_59 () (_ BitVec 64))
(declare-fun temp10761_60 () (_ BitVec 64))
(declare-fun temp10761_61 () (_ BitVec 64))
(declare-fun temp10761_62 () (_ BitVec 64))
(declare-fun temp10761_63 () (_ BitVec 64))
(declare-fun temp10761_64 () (_ BitVec 64))
(declare-fun temp10761_65 () (_ BitVec 64))
(declare-fun temp10761_66 () (_ BitVec 64))
(declare-fun temp10761_67 () (_ BitVec 64))
(declare-fun temp10761_68 () (_ BitVec 64))
(declare-fun temp10761_69 () (_ BitVec 64))
(declare-fun temp10761_70 () (_ BitVec 64))
(declare-fun temp10761_71 () (_ BitVec 64))
(declare-fun temp10761_72 () (_ BitVec 64))
(declare-fun temp10761_73 () (_ BitVec 64))
(declare-fun temp10761_74 () (_ BitVec 64))
(declare-fun temp10761_75 () (_ BitVec 64))
(declare-fun temp10761_76 () (_ BitVec 64))
(declare-fun temp10761_77 () (_ BitVec 64))
(declare-fun temp10761_78 () (_ BitVec 64))
(declare-fun temp10761_79 () (_ BitVec 64))
(declare-fun temp10761_80 () (_ BitVec 64))
(declare-fun temp10761_81 () (_ BitVec 64))
(declare-fun temp10761_82 () (_ BitVec 64))
(declare-fun temp10761_83 () (_ BitVec 64))
(declare-fun temp10761_84 () (_ BitVec 64))
(declare-fun temp10761_85 () (_ BitVec 64))
(declare-fun temp10761_86 () (_ BitVec 64))
(declare-fun temp10761_87 () (_ BitVec 64))
(declare-fun temp10761_88 () (_ BitVec 64))
(declare-fun temp10761_89 () (_ BitVec 64))
(declare-fun temp10761_90 () (_ BitVec 64))
(declare-fun temp10761_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10761_92 () (_ BitVec 64))
(declare-fun temp10761_93 () (_ BitVec 64))
(declare-fun temp10761_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10761_95 () (_ BitVec 64))
(declare-fun temp10761_96 () (_ BitVec 64))
(declare-fun temp10761_97 () (_ BitVec 64))
(declare-fun temp10761_98 () (_ BitVec 64))
(declare-fun temp10761_99 () (_ BitVec 64))
(declare-fun temp10761_100 () (_ BitVec 64))
(declare-fun temp10761_101 () (_ BitVec 64))
(declare-fun temp10761_102 () (_ BitVec 64))
(declare-fun temp10761_103 () (_ BitVec 64))
(declare-fun temp10761_104 () (_ BitVec 64))
(declare-fun temp10761_105 () (_ BitVec 64))
(declare-fun temp10761_106 () (_ BitVec 64))
(declare-fun temp10761_107 () (_ BitVec 64))
(declare-fun temp10761_108 () (_ BitVec 64))
(declare-fun temp10761_109 () (_ BitVec 64))
(declare-fun temp10761_110 () (_ BitVec 64))
(declare-fun temp10761_111 () (_ BitVec 64))
(declare-fun temp10761_112 () (_ BitVec 64))
(declare-fun temp10761_113 () (_ BitVec 64))
(declare-fun temp10761_114 () (_ BitVec 64))
(declare-fun temp10761_115 () (_ BitVec 64))
(declare-fun temp10761_116 () (_ BitVec 64))
(declare-fun temp10761_117 () (_ BitVec 64))
(declare-fun temp10761_118 () (_ BitVec 64))
(declare-fun temp10761_119 () (_ BitVec 64))
(declare-fun temp10761_120 () (_ BitVec 64))
(declare-fun temp10761_121 () (_ BitVec 64))
(declare-fun temp10761_122 () (_ BitVec 64))
(declare-fun temp10761_123 () (_ BitVec 64))
(declare-fun temp10761_124 () (_ BitVec 64))
(declare-fun temp10761_125 () (_ BitVec 64))
(declare-fun temp10761_126 () (_ BitVec 64))
(declare-fun temp10761_127 () (_ BitVec 64))
(declare-fun temp10761_128 () (_ BitVec 64))
(declare-fun temp10761_129 () (_ BitVec 64))
(declare-fun temp10761_130 () (_ BitVec 64))
(declare-fun temp10761_131 () (_ BitVec 64))
(declare-fun temp10761_132 () (_ BitVec 64))
(declare-fun temp10761_133 () (_ BitVec 64))
(declare-fun temp10761_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10761_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10761_136 () (_ BitVec 64))
(declare-fun temp10761_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10761_138 () (_ BitVec 64))
(declare-fun temp10761_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10761_140 () (_ BitVec 64))
(declare-fun temp10761_141 () (_ BitVec 64))
(declare-fun temp10761_142 () (_ BitVec 64))
(declare-fun temp10761_143 () (_ BitVec 64))
(declare-fun temp10761_144 () (_ BitVec 64))
(declare-fun temp10761_145 () (_ BitVec 64))
(declare-fun temp10761_146 () (_ BitVec 64))
(declare-fun temp10761_147 () (_ BitVec 64))
(declare-fun temp10761_148 () (_ BitVec 64))
(declare-fun temp10761_149 () (_ BitVec 64))
(declare-fun temp10761_150 () (_ BitVec 64))
(declare-fun temp10761_151 () (_ BitVec 64))
(declare-fun temp10761_152 () (_ BitVec 64))
(declare-fun temp10761_153 () (_ BitVec 64))
(declare-fun temp10761_154 () (_ BitVec 64))
(declare-fun temp10761_155 () (_ BitVec 64))
(declare-fun temp10761_157 () (_ BitVec 64))
(declare-fun temp10761_158 () (_ BitVec 64))
(declare-fun temp10761_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10761_159 () (_ BitVec 64))
(declare-fun temp10761_160 () (_ BitVec 64))
(declare-fun temp10761_162 () (_ BitVec 64))
(declare-fun temp10761_163 () (_ BitVec 64))
(declare-fun temp10761_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10761_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10761_165 () (_ BitVec 64))
(declare-fun temp10761_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10761_167 () (_ BitVec 64))
(declare-fun temp10761_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10761_169 () (_ BitVec 64))
(declare-fun temp10761_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10761_171 () (_ BitVec 64))
(declare-fun temp10761_172 () (_ BitVec 64))
(declare-fun temp10761_173 () (_ BitVec 64))
(declare-fun temp10761_174 () (_ BitVec 64))
(declare-fun temp10761_175 () (_ BitVec 64))
(declare-fun temp10761_176 () (_ BitVec 64))
(declare-fun temp10761_177 () (_ BitVec 64))
(declare-fun temp10761_178 () (_ BitVec 64))
(declare-fun temp10761_179 () (_ BitVec 64))
(declare-fun temp10761_180 () (_ BitVec 64))
(declare-fun temp10761_181 () (_ BitVec 64))
(declare-fun temp10761_182 () (_ BitVec 64))
(declare-fun temp10761_183 () (_ BitVec 64))
(declare-fun temp10761_184 () (_ BitVec 64))
(declare-fun temp10761_185 () (_ BitVec 64))
(declare-fun temp10761_186 () (_ BitVec 64))
(declare-fun temp10761_187 () (_ BitVec 64))
(declare-fun temp10761_188 () (_ BitVec 64))
(declare-fun temp10761_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10761_190 () (_ BitVec 64))
(declare-fun temp10761_192 () (_ BitVec 64))
(declare-fun temp10761_193 () (_ BitVec 64))
(declare-fun temp10761_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10761_194 () (_ BitVec 64))
(declare-fun temp10761_195 () (_ BitVec 64))
(declare-fun temp10761_197 () (_ BitVec 64))
(declare-fun temp10761_198 () (_ BitVec 64))
(declare-fun temp10761_196 () (_ BitVec 64))
(declare-fun temp10761_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10761_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10761_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10761_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10761_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10761_204 () (_ BitVec 64))
(declare-fun temp10761_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10761_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10761_207 () (_ BitVec 64))
(declare-fun temp10761_208 () (_ BitVec 64))
(declare-fun temp10761_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10761_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10761_211 () (_ BitVec 64))
(declare-fun temp10761_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10761_213 () (_ BitVec 64))
(declare-fun temp10761_214 () (_ BitVec 64))
(declare-fun temp10761_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10761_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10761_217 () (_ BitVec 64))
(declare-fun temp10761_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10761_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10761_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun var211962 () (_ BitVec 64))
(declare-fun temp10761_221 () (_ BitVec 64))
(declare-fun var211963 () (_ BitVec 64))
(declare-fun temp10761_222 () (_ BitVec 64))
(assert (= temp10761_1 #x0000000000000001))
(assert (= var77203 temp10761_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10761_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10761_2)))
(assert (= temp10761_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10761_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10761_4 #x0000000000000000))
(assert (= var210941 temp10761_4))
(assert (= temp10761_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10761_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10761_6 #x0000000000000000))
(assert (= var210986 temp10761_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10761_7 #x0000000000000000))
(assert (= temp10761_8 temp10761_7))
(assert (= temp10761_9 (select ARGNAME_padding_NAMEEND_VAL temp10761_8)))
(assert (= temp10761_10 #x0000000000000001))
(assert (= temp10761_11 temp10761_10))
(assert (= temp10761_12 (select ARGNAME_padding_NAMEEND_VAL temp10761_11)))
(assert (= temp10761_13 #x0000000000000002))
(assert (= temp10761_14 temp10761_13))
(assert (= temp10761_15 (select ARGNAME_padding_NAMEEND_VAL temp10761_14)))
(assert (= temp10761_16 #x0000000000000003))
(assert (= temp10761_17 temp10761_16))
(assert (= temp10761_18 (select ARGNAME_padding_NAMEEND_VAL temp10761_17)))
(assert (= temp10761_19 #x0000000000000004))
(assert (= temp10761_20 temp10761_19))
(assert (= temp10761_21 (select ARGNAME_padding_NAMEEND_VAL temp10761_20)))
(assert (= temp10761_22 #x0000000000000005))
(assert (= temp10761_23 temp10761_22))
(assert (= temp10761_24 (select ARGNAME_padding_NAMEEND_VAL temp10761_23)))
(assert (= temp10761_25 #x0000000000000000))
(assert (= temp10761_26 #x0000000000000000))
(assert (= temp10761_27 temp10761_26))
(assert (= temp10761_28 (select ARGNAME_padding_NAMEEND_VAL temp10761_27)))
(assert (= temp10761_29 #x0000000000000000))
(assert (= temp10761_30 #x0000000000000001))
(assert (= temp10761_31 temp10761_30))
(assert (= temp10761_32 (select ARGNAME_padding_NAMEEND_VAL temp10761_31)))
(assert (= temp10761_33 #x0000000000000000))
(assert (= temp10761_34 #x0000000000000002))
(assert (= temp10761_35 temp10761_34))
(assert (= temp10761_36 (select ARGNAME_padding_NAMEEND_VAL temp10761_35)))
(assert (= temp10761_37 #x0000000000000000))
(assert (= temp10761_38 #x0000000000000003))
(assert (= temp10761_39 temp10761_38))
(assert (= temp10761_40 (select ARGNAME_padding_NAMEEND_VAL temp10761_39)))
(assert (= temp10761_41 #x0000000000000000))
(assert (= temp10761_42 #x0000000000000004))
(assert (= temp10761_43 temp10761_42))
(assert (= temp10761_44 (select ARGNAME_padding_NAMEEND_VAL temp10761_43)))
(assert (= temp10761_45 #x0000000000000000))
(assert (= temp10761_46 #x0000000000000005))
(assert (= temp10761_47 temp10761_46))
(assert (= temp10761_48 (select ARGNAME_padding_NAMEEND_VAL temp10761_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10761_28 temp10761_25)
             (bvslt temp10761_32 temp10761_29)
             (bvslt temp10761_36 temp10761_33)
             (bvslt temp10761_40 temp10761_37)
             (bvslt temp10761_44 temp10761_41)
             (bvslt temp10761_48 temp10761_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10761_49 #x0000000000000000))
(assert (= var1191714 temp10761_49))
(assert (= temp10761_50 #x0000000000000000))
(assert (= temp10761_51 temp10761_50))
(assert (= temp10761_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10761_51)))
(assert (= temp10761_53 #x0000000000000001))
(assert (= temp10761_54 temp10761_53))
(assert (= temp10761_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10761_54)))
(assert (= temp10761_56 #x0000000000000002))
(assert (= temp10761_57 temp10761_56))
(assert (= temp10761_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10761_57)))
(assert (= temp10761_59 #x0000000000000003))
(assert (= temp10761_60 temp10761_59))
(assert (= temp10761_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10761_60)))
(assert (= temp10761_62 #x0000000000000004))
(assert (= temp10761_63 temp10761_62))
(assert (= temp10761_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10761_63)))
(assert (= temp10761_65 #x0000000000000005))
(assert (= temp10761_66 temp10761_65))
(assert (= temp10761_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10761_66)))
(assert (= temp10761_68 #x0000000000000000))
(assert (= temp10761_69 #x0000000000000000))
(assert (= temp10761_70 temp10761_69))
(assert (= temp10761_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10761_70)))
(assert (= temp10761_72 #x0000000000000000))
(assert (= temp10761_73 #x0000000000000001))
(assert (= temp10761_74 temp10761_73))
(assert (= temp10761_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10761_74)))
(assert (= temp10761_76 #x0000000000000000))
(assert (= temp10761_77 #x0000000000000002))
(assert (= temp10761_78 temp10761_77))
(assert (= temp10761_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10761_78)))
(assert (= temp10761_80 #x0000000000000000))
(assert (= temp10761_81 #x0000000000000003))
(assert (= temp10761_82 temp10761_81))
(assert (= temp10761_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10761_82)))
(assert (= temp10761_84 #x0000000000000000))
(assert (= temp10761_85 #x0000000000000004))
(assert (= temp10761_86 temp10761_85))
(assert (= temp10761_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10761_86)))
(assert (= temp10761_88 #x0000000000000000))
(assert (= temp10761_89 #x0000000000000005))
(assert (= temp10761_90 temp10761_89))
(assert (= temp10761_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10761_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10761_71 temp10761_68)
             (bvslt temp10761_75 temp10761_72)
             (bvslt temp10761_79 temp10761_76)
             (bvslt temp10761_83 temp10761_80)
             (bvslt temp10761_87 temp10761_84)
             (bvslt temp10761_91 temp10761_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10761_92 #x0000000000000000))
(assert (= var1191725 temp10761_92))
(assert (= temp10761_93 #x0000000000000000))
(assert (= temp10761_94 temp10761_93))
(assert (= temp10761_95 (select ARGNAME_stride_NAMEEND_VAL temp10761_94)))
(assert (= temp10761_96 #x0000000000000001))
(assert (= temp10761_97 temp10761_96))
(assert (= temp10761_98 (select ARGNAME_stride_NAMEEND_VAL temp10761_97)))
(assert (= temp10761_99 #x0000000000000002))
(assert (= temp10761_100 temp10761_99))
(assert (= temp10761_101 (select ARGNAME_stride_NAMEEND_VAL temp10761_100)))
(assert (= temp10761_102 #x0000000000000003))
(assert (= temp10761_103 temp10761_102))
(assert (= temp10761_104 (select ARGNAME_stride_NAMEEND_VAL temp10761_103)))
(assert (= temp10761_105 #x0000000000000004))
(assert (= temp10761_106 temp10761_105))
(assert (= temp10761_107 (select ARGNAME_stride_NAMEEND_VAL temp10761_106)))
(assert (= temp10761_108 #x0000000000000005))
(assert (= temp10761_109 temp10761_108))
(assert (= temp10761_110 (select ARGNAME_stride_NAMEEND_VAL temp10761_109)))
(assert (= temp10761_111 #x0000000000000000))
(assert (= temp10761_112 #x0000000000000000))
(assert (= temp10761_113 temp10761_112))
(assert (= temp10761_114 (select ARGNAME_stride_NAMEEND_VAL temp10761_113)))
(assert (= temp10761_115 #x0000000000000000))
(assert (= temp10761_116 #x0000000000000001))
(assert (= temp10761_117 temp10761_116))
(assert (= temp10761_118 (select ARGNAME_stride_NAMEEND_VAL temp10761_117)))
(assert (= temp10761_119 #x0000000000000000))
(assert (= temp10761_120 #x0000000000000002))
(assert (= temp10761_121 temp10761_120))
(assert (= temp10761_122 (select ARGNAME_stride_NAMEEND_VAL temp10761_121)))
(assert (= temp10761_123 #x0000000000000000))
(assert (= temp10761_124 #x0000000000000003))
(assert (= temp10761_125 temp10761_124))
(assert (= temp10761_126 (select ARGNAME_stride_NAMEEND_VAL temp10761_125)))
(assert (= temp10761_127 #x0000000000000000))
(assert (= temp10761_128 #x0000000000000004))
(assert (= temp10761_129 temp10761_128))
(assert (= temp10761_130 (select ARGNAME_stride_NAMEEND_VAL temp10761_129)))
(assert (= temp10761_131 #x0000000000000000))
(assert (= temp10761_132 #x0000000000000005))
(assert (= temp10761_133 temp10761_132))
(assert (= temp10761_134 (select ARGNAME_stride_NAMEEND_VAL temp10761_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10761_114 temp10761_111)
             (bvsle temp10761_118 temp10761_115)
             (bvsle temp10761_122 temp10761_119)
             (bvsle temp10761_126 temp10761_123)
             (bvsle temp10761_130 temp10761_127)
             (bvsle temp10761_134 temp10761_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10761_135 #x0000000000000000))
(assert (= var1191735 temp10761_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10761_136 #x0000000000000001))
(assert (= var1191747 temp10761_136))
(assert (= temp10761_137 #x0000000000000000))
(assert (= var1179826 temp10761_137))
(assert (= temp10761_138 #x0000000000000000))
(assert (= temp10761_139 temp10761_138))
(assert (= temp10761_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10761_139)))
(assert (= temp10761_141 #x0000000000000001))
(assert (= temp10761_142 temp10761_141))
(assert (= temp10761_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10761_142)))
(assert (= temp10761_144 #x0000000000000002))
(assert (= temp10761_145 temp10761_144))
(assert (= temp10761_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10761_145)))
(assert (= temp10761_147 #x0000000000000003))
(assert (= temp10761_148 temp10761_147))
(assert (= temp10761_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10761_148)))
(assert (= temp10761_150 #x0000000000000004))
(assert (= temp10761_151 temp10761_150))
(assert (= temp10761_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10761_151)))
(assert (= temp10761_153 #x0000000000000005))
(assert (= temp10761_154 temp10761_153))
(assert (= temp10761_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10761_154)))
(assert (= temp10761_157 var1179826))
(assert (= temp10761_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10761_157)))
(assert (= temp10761_156 temp10761_158))
(assert (= var1191780
   (ite (bvslt temp10761_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10761_159 #x0000000000000000))
(assert (= var1191780 temp10761_159))
(assert (= temp10761_160 #x0000000000000000))
(assert (= var1179826 temp10761_160))
(assert (= temp10761_162 var1179826))
(assert (= temp10761_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10761_162)))
(assert (= temp10761_161 temp10761_163))
(assert (= var1191802 (bvsmod temp10761_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10761_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10761_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10761_165 #x0000000000000001))
(assert (= var1191803 temp10761_165))
(assert (= temp10761_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10761_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10761_167 #x0000000000000001))
(assert (= var1191823 temp10761_167))
(assert (= temp10761_168 #x0000000000000001))
(assert (= var1180714 temp10761_168))
(assert (= temp10761_169 #x0000000000000000))
(assert (= temp10761_170 temp10761_169))
(assert (= temp10761_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10761_170)))
(assert (= temp10761_172 #x0000000000000001))
(assert (= temp10761_173 temp10761_172))
(assert (= temp10761_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10761_173)))
(assert (= temp10761_175 #x0000000000000002))
(assert (= temp10761_176 temp10761_175))
(assert (= temp10761_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10761_176)))
(assert (= temp10761_178 #x0000000000000003))
(assert (= temp10761_179 temp10761_178))
(assert (= temp10761_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10761_179)))
(assert (= temp10761_181 #x0000000000000004))
(assert (= temp10761_182 temp10761_181))
(assert (= temp10761_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10761_182)))
(assert (= temp10761_184 #x0000000000000005))
(assert (= temp10761_185 temp10761_184))
(assert (= temp10761_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10761_185)))
(assert (= temp10761_187 #x0000000000000000))
(assert (= temp10761_188
   (ite (bvslt var1180714 temp10761_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10761_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10761_188)))
(assert (= var1191831 temp10761_189))
(assert (bvslt (ite (bvslt var1180714 temp10761_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10761_190 #x0000000000000001))
(assert (= var1180714 temp10761_190))
(assert (= temp10761_192 var1180714))
(assert (= temp10761_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10761_192)))
(assert (= temp10761_191 temp10761_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10761_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10761_194 #x0000000000000001))
(assert (= var1191836 temp10761_194))
(assert (= temp10761_195 #x0000000000000000))
(assert (= var1179826 temp10761_195))
(assert (= temp10761_197 var1179826))
(assert (= temp10761_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10761_197)))
(assert (= temp10761_196 temp10761_198))
(assert (= temp10761_199 #x0000000000000002))
(assert (= var1586025 temp10761_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10761_200 #x0000000000000001))
(assert (= var1191993 temp10761_200))
(assert (= temp10761_201 #x0000000000000001))
(assert (= var2700303 temp10761_201))
(assert (= temp10761_202 #x0000000000000001))
(assert (= var2962447 temp10761_202))
(assert (= temp10761_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10761_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10761_204 #x0000000000000001))
(assert (= var211058 temp10761_204))
(assert (= temp10761_205 #x0000000000000001))
(assert (= var211188 temp10761_205))
(assert (= var3879401 var211188))
(assert (= temp10761_206 #x0000000000000000))
(assert (= var3866802 temp10761_206))
(assert (= temp10761_207 #x0000000000000000))
(assert (= temp10761_208
   (ite (bvslt var3866802 temp10761_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10761_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10761_208)))
(assert (= var3879420 temp10761_209))
(assert (bvslt (ite (bvslt var3866802 temp10761_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10761_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10761_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10761_211 #x0000000000000000))
(assert (= var3879421 temp10761_211))
(assert (= temp10761_212 #x0000000000000001))
(assert (= var3867690 temp10761_212))
(assert (= temp10761_213 #x0000000000000000))
(assert (= temp10761_214
   (ite (bvslt var3867690 temp10761_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10761_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10761_214)))
(assert (= var3879423 temp10761_215))
(assert (bvslt (ite (bvslt var3867690 temp10761_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10761_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10761_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10761_217 #x0000000000000001))
(assert (= var3879424 temp10761_217))
(assert (= temp10761_218 #x0000000000000000))
(assert (= var4133117 temp10761_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10761_219 #x0000000000000002))
(assert (= var4339331 temp10761_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10761_220 #x0000000000000000))
(assert (= var4404892 temp10761_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4927888 var211201))
(assert (= var211962 var210913))
(assert (= temp10761_221 #x0000000000000000))
(assert (= var211963
   (ite (distinct var211962 temp10761_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10761_222 #x0000000000000001))
(assert (= var211058 temp10761_222))
(model-add temp10761_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10761_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10761_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10761_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





