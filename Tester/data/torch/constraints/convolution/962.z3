(declare-fun temp1282_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1282_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1282_3 () (_ BitVec 64))
(declare-fun temp1282_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1282_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1282_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1282_7 () (_ BitVec 64))
(declare-fun temp1282_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1282_9 () (_ BitVec 64))
(declare-fun temp1282_10 () (_ BitVec 64))
(declare-fun temp1282_11 () (_ BitVec 64))
(declare-fun temp1282_12 () (_ BitVec 64))
(declare-fun temp1282_13 () (_ BitVec 64))
(declare-fun temp1282_14 () (_ BitVec 64))
(declare-fun temp1282_15 () (_ BitVec 64))
(declare-fun temp1282_16 () (_ BitVec 64))
(declare-fun temp1282_17 () (_ BitVec 64))
(declare-fun temp1282_18 () (_ BitVec 64))
(declare-fun temp1282_19 () (_ BitVec 64))
(declare-fun temp1282_20 () (_ BitVec 64))
(declare-fun temp1282_21 () (_ BitVec 64))
(declare-fun temp1282_22 () (_ BitVec 64))
(declare-fun temp1282_23 () (_ BitVec 64))
(declare-fun temp1282_24 () (_ BitVec 64))
(declare-fun temp1282_25 () (_ BitVec 64))
(declare-fun temp1282_26 () (_ BitVec 64))
(declare-fun temp1282_27 () (_ BitVec 64))
(declare-fun temp1282_28 () (_ BitVec 64))
(declare-fun temp1282_29 () (_ BitVec 64))
(declare-fun temp1282_30 () (_ BitVec 64))
(declare-fun temp1282_31 () (_ BitVec 64))
(declare-fun temp1282_32 () (_ BitVec 64))
(declare-fun temp1282_33 () (_ BitVec 64))
(declare-fun temp1282_34 () (_ BitVec 64))
(declare-fun temp1282_35 () (_ BitVec 64))
(declare-fun temp1282_36 () (_ BitVec 64))
(declare-fun temp1282_37 () (_ BitVec 64))
(declare-fun temp1282_38 () (_ BitVec 64))
(declare-fun temp1282_39 () (_ BitVec 64))
(declare-fun temp1282_40 () (_ BitVec 64))
(declare-fun temp1282_41 () (_ BitVec 64))
(declare-fun temp1282_42 () (_ BitVec 64))
(declare-fun temp1282_43 () (_ BitVec 64))
(declare-fun temp1282_44 () (_ BitVec 64))
(declare-fun temp1282_45 () (_ BitVec 64))
(declare-fun temp1282_46 () (_ BitVec 64))
(declare-fun temp1282_47 () (_ BitVec 64))
(declare-fun temp1282_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1282_49 () (_ BitVec 64))
(declare-fun temp1282_50 () (_ BitVec 64))
(declare-fun temp1282_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1282_52 () (_ BitVec 64))
(declare-fun temp1282_53 () (_ BitVec 64))
(declare-fun temp1282_54 () (_ BitVec 64))
(declare-fun temp1282_55 () (_ BitVec 64))
(declare-fun temp1282_56 () (_ BitVec 64))
(declare-fun temp1282_57 () (_ BitVec 64))
(declare-fun temp1282_58 () (_ BitVec 64))
(declare-fun temp1282_59 () (_ BitVec 64))
(declare-fun temp1282_60 () (_ BitVec 64))
(declare-fun temp1282_61 () (_ BitVec 64))
(declare-fun temp1282_62 () (_ BitVec 64))
(declare-fun temp1282_63 () (_ BitVec 64))
(declare-fun temp1282_64 () (_ BitVec 64))
(declare-fun temp1282_65 () (_ BitVec 64))
(declare-fun temp1282_66 () (_ BitVec 64))
(declare-fun temp1282_67 () (_ BitVec 64))
(declare-fun temp1282_68 () (_ BitVec 64))
(declare-fun temp1282_69 () (_ BitVec 64))
(declare-fun temp1282_70 () (_ BitVec 64))
(declare-fun temp1282_71 () (_ BitVec 64))
(declare-fun temp1282_72 () (_ BitVec 64))
(declare-fun temp1282_73 () (_ BitVec 64))
(declare-fun temp1282_74 () (_ BitVec 64))
(declare-fun temp1282_75 () (_ BitVec 64))
(declare-fun temp1282_76 () (_ BitVec 64))
(declare-fun temp1282_77 () (_ BitVec 64))
(declare-fun temp1282_78 () (_ BitVec 64))
(declare-fun temp1282_79 () (_ BitVec 64))
(declare-fun temp1282_80 () (_ BitVec 64))
(declare-fun temp1282_81 () (_ BitVec 64))
(declare-fun temp1282_82 () (_ BitVec 64))
(declare-fun temp1282_83 () (_ BitVec 64))
(declare-fun temp1282_84 () (_ BitVec 64))
(declare-fun temp1282_85 () (_ BitVec 64))
(declare-fun temp1282_86 () (_ BitVec 64))
(declare-fun temp1282_87 () (_ BitVec 64))
(declare-fun temp1282_88 () (_ BitVec 64))
(declare-fun temp1282_89 () (_ BitVec 64))
(declare-fun temp1282_90 () (_ BitVec 64))
(declare-fun temp1282_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1282_92 () (_ BitVec 64))
(declare-fun temp1282_93 () (_ BitVec 64))
(declare-fun temp1282_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1282_95 () (_ BitVec 64))
(declare-fun temp1282_96 () (_ BitVec 64))
(declare-fun temp1282_97 () (_ BitVec 64))
(declare-fun temp1282_98 () (_ BitVec 64))
(declare-fun temp1282_99 () (_ BitVec 64))
(declare-fun temp1282_100 () (_ BitVec 64))
(declare-fun temp1282_101 () (_ BitVec 64))
(declare-fun temp1282_102 () (_ BitVec 64))
(declare-fun temp1282_103 () (_ BitVec 64))
(declare-fun temp1282_104 () (_ BitVec 64))
(declare-fun temp1282_105 () (_ BitVec 64))
(declare-fun temp1282_106 () (_ BitVec 64))
(declare-fun temp1282_107 () (_ BitVec 64))
(declare-fun temp1282_108 () (_ BitVec 64))
(declare-fun temp1282_109 () (_ BitVec 64))
(declare-fun temp1282_110 () (_ BitVec 64))
(declare-fun temp1282_111 () (_ BitVec 64))
(declare-fun temp1282_112 () (_ BitVec 64))
(declare-fun temp1282_113 () (_ BitVec 64))
(declare-fun temp1282_114 () (_ BitVec 64))
(declare-fun temp1282_115 () (_ BitVec 64))
(declare-fun temp1282_116 () (_ BitVec 64))
(declare-fun temp1282_117 () (_ BitVec 64))
(declare-fun temp1282_118 () (_ BitVec 64))
(declare-fun temp1282_119 () (_ BitVec 64))
(declare-fun temp1282_120 () (_ BitVec 64))
(declare-fun temp1282_121 () (_ BitVec 64))
(declare-fun temp1282_122 () (_ BitVec 64))
(declare-fun temp1282_123 () (_ BitVec 64))
(declare-fun temp1282_124 () (_ BitVec 64))
(declare-fun temp1282_125 () (_ BitVec 64))
(declare-fun temp1282_126 () (_ BitVec 64))
(declare-fun temp1282_127 () (_ BitVec 64))
(declare-fun temp1282_128 () (_ BitVec 64))
(declare-fun temp1282_129 () (_ BitVec 64))
(declare-fun temp1282_130 () (_ BitVec 64))
(declare-fun temp1282_131 () (_ BitVec 64))
(declare-fun temp1282_132 () (_ BitVec 64))
(declare-fun temp1282_133 () (_ BitVec 64))
(declare-fun temp1282_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1282_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1282_136 () (_ BitVec 64))
(declare-fun temp1282_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1282_138 () (_ BitVec 64))
(declare-fun temp1282_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1282_140 () (_ BitVec 64))
(declare-fun temp1282_141 () (_ BitVec 64))
(declare-fun temp1282_142 () (_ BitVec 64))
(declare-fun temp1282_143 () (_ BitVec 64))
(declare-fun temp1282_144 () (_ BitVec 64))
(declare-fun temp1282_145 () (_ BitVec 64))
(declare-fun temp1282_146 () (_ BitVec 64))
(declare-fun temp1282_147 () (_ BitVec 64))
(declare-fun temp1282_148 () (_ BitVec 64))
(declare-fun temp1282_149 () (_ BitVec 64))
(declare-fun temp1282_150 () (_ BitVec 64))
(declare-fun temp1282_151 () (_ BitVec 64))
(declare-fun temp1282_152 () (_ BitVec 64))
(declare-fun temp1282_153 () (_ BitVec 64))
(declare-fun temp1282_154 () (_ BitVec 64))
(declare-fun temp1282_155 () (_ BitVec 64))
(declare-fun temp1282_157 () (_ BitVec 64))
(declare-fun temp1282_158 () (_ BitVec 64))
(declare-fun temp1282_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1282_159 () (_ BitVec 64))
(declare-fun temp1282_160 () (_ BitVec 64))
(declare-fun temp1282_162 () (_ BitVec 64))
(declare-fun temp1282_163 () (_ BitVec 64))
(declare-fun temp1282_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1282_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1282_165 () (_ BitVec 64))
(declare-fun temp1282_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1282_167 () (_ BitVec 64))
(declare-fun temp1282_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1282_169 () (_ BitVec 64))
(declare-fun temp1282_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1282_171 () (_ BitVec 64))
(declare-fun temp1282_172 () (_ BitVec 64))
(declare-fun temp1282_173 () (_ BitVec 64))
(declare-fun temp1282_174 () (_ BitVec 64))
(declare-fun temp1282_175 () (_ BitVec 64))
(declare-fun temp1282_176 () (_ BitVec 64))
(declare-fun temp1282_177 () (_ BitVec 64))
(declare-fun temp1282_178 () (_ BitVec 64))
(declare-fun temp1282_179 () (_ BitVec 64))
(declare-fun temp1282_180 () (_ BitVec 64))
(declare-fun temp1282_181 () (_ BitVec 64))
(declare-fun temp1282_182 () (_ BitVec 64))
(declare-fun temp1282_183 () (_ BitVec 64))
(declare-fun temp1282_184 () (_ BitVec 64))
(declare-fun temp1282_185 () (_ BitVec 64))
(declare-fun temp1282_186 () (_ BitVec 64))
(declare-fun temp1282_187 () (_ BitVec 64))
(declare-fun temp1282_188 () (_ BitVec 64))
(declare-fun temp1282_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1282_190 () (_ BitVec 64))
(declare-fun temp1282_192 () (_ BitVec 64))
(declare-fun temp1282_193 () (_ BitVec 64))
(declare-fun temp1282_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1282_194 () (_ BitVec 64))
(declare-fun temp1282_195 () (_ BitVec 64))
(declare-fun temp1282_197 () (_ BitVec 64))
(declare-fun temp1282_198 () (_ BitVec 64))
(declare-fun temp1282_196 () (_ BitVec 64))
(declare-fun temp1282_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1282_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1282_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1282_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1282_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1282_204 () (_ BitVec 64))
(declare-fun temp1282_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1282_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1282_207 () (_ BitVec 64))
(declare-fun temp1282_208 () (_ BitVec 64))
(declare-fun temp1282_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1282_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1282_211 () (_ BitVec 64))
(declare-fun temp1282_212 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1282_213 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp1282_214 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp1282_216 () (_ BitVec 64))
(declare-fun temp1282_215 () (_ BitVec 64))
(declare-fun temp1282_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp1282_218 () (_ BitVec 64))
(declare-fun temp1282_219 () (_ BitVec 64))
(declare-fun temp1282_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp1282_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp1282_222 () (_ BitVec 64))
(declare-fun temp1282_224 () (_ BitVec 64))
(declare-fun temp1282_223 () (_ BitVec 64))
(declare-fun temp1282_225 () (_ BitVec 64))
(assert (= temp1282_1 #x0000000000000001))
(assert (= var77203 temp1282_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1282_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1282_2)))
(assert (= temp1282_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1282_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1282_4 #x0000000000000000))
(assert (= var210941 temp1282_4))
(assert (= temp1282_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1282_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1282_6 #x0000000000000000))
(assert (= var210986 temp1282_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1282_7 #x0000000000000000))
(assert (= temp1282_8 temp1282_7))
(assert (= temp1282_9 (select ARGNAME_padding_NAMEEND_VAL temp1282_8)))
(assert (= temp1282_10 #x0000000000000001))
(assert (= temp1282_11 temp1282_10))
(assert (= temp1282_12 (select ARGNAME_padding_NAMEEND_VAL temp1282_11)))
(assert (= temp1282_13 #x0000000000000002))
(assert (= temp1282_14 temp1282_13))
(assert (= temp1282_15 (select ARGNAME_padding_NAMEEND_VAL temp1282_14)))
(assert (= temp1282_16 #x0000000000000003))
(assert (= temp1282_17 temp1282_16))
(assert (= temp1282_18 (select ARGNAME_padding_NAMEEND_VAL temp1282_17)))
(assert (= temp1282_19 #x0000000000000004))
(assert (= temp1282_20 temp1282_19))
(assert (= temp1282_21 (select ARGNAME_padding_NAMEEND_VAL temp1282_20)))
(assert (= temp1282_22 #x0000000000000005))
(assert (= temp1282_23 temp1282_22))
(assert (= temp1282_24 (select ARGNAME_padding_NAMEEND_VAL temp1282_23)))
(assert (= temp1282_25 #x0000000000000000))
(assert (= temp1282_26 #x0000000000000000))
(assert (= temp1282_27 temp1282_26))
(assert (= temp1282_28 (select ARGNAME_padding_NAMEEND_VAL temp1282_27)))
(assert (= temp1282_29 #x0000000000000000))
(assert (= temp1282_30 #x0000000000000001))
(assert (= temp1282_31 temp1282_30))
(assert (= temp1282_32 (select ARGNAME_padding_NAMEEND_VAL temp1282_31)))
(assert (= temp1282_33 #x0000000000000000))
(assert (= temp1282_34 #x0000000000000002))
(assert (= temp1282_35 temp1282_34))
(assert (= temp1282_36 (select ARGNAME_padding_NAMEEND_VAL temp1282_35)))
(assert (= temp1282_37 #x0000000000000000))
(assert (= temp1282_38 #x0000000000000003))
(assert (= temp1282_39 temp1282_38))
(assert (= temp1282_40 (select ARGNAME_padding_NAMEEND_VAL temp1282_39)))
(assert (= temp1282_41 #x0000000000000000))
(assert (= temp1282_42 #x0000000000000004))
(assert (= temp1282_43 temp1282_42))
(assert (= temp1282_44 (select ARGNAME_padding_NAMEEND_VAL temp1282_43)))
(assert (= temp1282_45 #x0000000000000000))
(assert (= temp1282_46 #x0000000000000005))
(assert (= temp1282_47 temp1282_46))
(assert (= temp1282_48 (select ARGNAME_padding_NAMEEND_VAL temp1282_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1282_28 temp1282_25)
             (bvslt temp1282_32 temp1282_29)
             (bvslt temp1282_36 temp1282_33)
             (bvslt temp1282_40 temp1282_37)
             (bvslt temp1282_44 temp1282_41)
             (bvslt temp1282_48 temp1282_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1282_49 #x0000000000000000))
(assert (= var1191714 temp1282_49))
(assert (= temp1282_50 #x0000000000000000))
(assert (= temp1282_51 temp1282_50))
(assert (= temp1282_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1282_51)))
(assert (= temp1282_53 #x0000000000000001))
(assert (= temp1282_54 temp1282_53))
(assert (= temp1282_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1282_54)))
(assert (= temp1282_56 #x0000000000000002))
(assert (= temp1282_57 temp1282_56))
(assert (= temp1282_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1282_57)))
(assert (= temp1282_59 #x0000000000000003))
(assert (= temp1282_60 temp1282_59))
(assert (= temp1282_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1282_60)))
(assert (= temp1282_62 #x0000000000000004))
(assert (= temp1282_63 temp1282_62))
(assert (= temp1282_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1282_63)))
(assert (= temp1282_65 #x0000000000000005))
(assert (= temp1282_66 temp1282_65))
(assert (= temp1282_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1282_66)))
(assert (= temp1282_68 #x0000000000000000))
(assert (= temp1282_69 #x0000000000000000))
(assert (= temp1282_70 temp1282_69))
(assert (= temp1282_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1282_70)))
(assert (= temp1282_72 #x0000000000000000))
(assert (= temp1282_73 #x0000000000000001))
(assert (= temp1282_74 temp1282_73))
(assert (= temp1282_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1282_74)))
(assert (= temp1282_76 #x0000000000000000))
(assert (= temp1282_77 #x0000000000000002))
(assert (= temp1282_78 temp1282_77))
(assert (= temp1282_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1282_78)))
(assert (= temp1282_80 #x0000000000000000))
(assert (= temp1282_81 #x0000000000000003))
(assert (= temp1282_82 temp1282_81))
(assert (= temp1282_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1282_82)))
(assert (= temp1282_84 #x0000000000000000))
(assert (= temp1282_85 #x0000000000000004))
(assert (= temp1282_86 temp1282_85))
(assert (= temp1282_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1282_86)))
(assert (= temp1282_88 #x0000000000000000))
(assert (= temp1282_89 #x0000000000000005))
(assert (= temp1282_90 temp1282_89))
(assert (= temp1282_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1282_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1282_71 temp1282_68)
             (bvslt temp1282_75 temp1282_72)
             (bvslt temp1282_79 temp1282_76)
             (bvslt temp1282_83 temp1282_80)
             (bvslt temp1282_87 temp1282_84)
             (bvslt temp1282_91 temp1282_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1282_92 #x0000000000000000))
(assert (= var1191725 temp1282_92))
(assert (= temp1282_93 #x0000000000000000))
(assert (= temp1282_94 temp1282_93))
(assert (= temp1282_95 (select ARGNAME_stride_NAMEEND_VAL temp1282_94)))
(assert (= temp1282_96 #x0000000000000001))
(assert (= temp1282_97 temp1282_96))
(assert (= temp1282_98 (select ARGNAME_stride_NAMEEND_VAL temp1282_97)))
(assert (= temp1282_99 #x0000000000000002))
(assert (= temp1282_100 temp1282_99))
(assert (= temp1282_101 (select ARGNAME_stride_NAMEEND_VAL temp1282_100)))
(assert (= temp1282_102 #x0000000000000003))
(assert (= temp1282_103 temp1282_102))
(assert (= temp1282_104 (select ARGNAME_stride_NAMEEND_VAL temp1282_103)))
(assert (= temp1282_105 #x0000000000000004))
(assert (= temp1282_106 temp1282_105))
(assert (= temp1282_107 (select ARGNAME_stride_NAMEEND_VAL temp1282_106)))
(assert (= temp1282_108 #x0000000000000005))
(assert (= temp1282_109 temp1282_108))
(assert (= temp1282_110 (select ARGNAME_stride_NAMEEND_VAL temp1282_109)))
(assert (= temp1282_111 #x0000000000000000))
(assert (= temp1282_112 #x0000000000000000))
(assert (= temp1282_113 temp1282_112))
(assert (= temp1282_114 (select ARGNAME_stride_NAMEEND_VAL temp1282_113)))
(assert (= temp1282_115 #x0000000000000000))
(assert (= temp1282_116 #x0000000000000001))
(assert (= temp1282_117 temp1282_116))
(assert (= temp1282_118 (select ARGNAME_stride_NAMEEND_VAL temp1282_117)))
(assert (= temp1282_119 #x0000000000000000))
(assert (= temp1282_120 #x0000000000000002))
(assert (= temp1282_121 temp1282_120))
(assert (= temp1282_122 (select ARGNAME_stride_NAMEEND_VAL temp1282_121)))
(assert (= temp1282_123 #x0000000000000000))
(assert (= temp1282_124 #x0000000000000003))
(assert (= temp1282_125 temp1282_124))
(assert (= temp1282_126 (select ARGNAME_stride_NAMEEND_VAL temp1282_125)))
(assert (= temp1282_127 #x0000000000000000))
(assert (= temp1282_128 #x0000000000000004))
(assert (= temp1282_129 temp1282_128))
(assert (= temp1282_130 (select ARGNAME_stride_NAMEEND_VAL temp1282_129)))
(assert (= temp1282_131 #x0000000000000000))
(assert (= temp1282_132 #x0000000000000005))
(assert (= temp1282_133 temp1282_132))
(assert (= temp1282_134 (select ARGNAME_stride_NAMEEND_VAL temp1282_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1282_114 temp1282_111)
             (bvsle temp1282_118 temp1282_115)
             (bvsle temp1282_122 temp1282_119)
             (bvsle temp1282_126 temp1282_123)
             (bvsle temp1282_130 temp1282_127)
             (bvsle temp1282_134 temp1282_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1282_135 #x0000000000000000))
(assert (= var1191735 temp1282_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1282_136 #x0000000000000001))
(assert (= var1191747 temp1282_136))
(assert (= temp1282_137 #x0000000000000000))
(assert (= var1179826 temp1282_137))
(assert (= temp1282_138 #x0000000000000000))
(assert (= temp1282_139 temp1282_138))
(assert (= temp1282_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1282_139)))
(assert (= temp1282_141 #x0000000000000001))
(assert (= temp1282_142 temp1282_141))
(assert (= temp1282_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1282_142)))
(assert (= temp1282_144 #x0000000000000002))
(assert (= temp1282_145 temp1282_144))
(assert (= temp1282_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1282_145)))
(assert (= temp1282_147 #x0000000000000003))
(assert (= temp1282_148 temp1282_147))
(assert (= temp1282_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1282_148)))
(assert (= temp1282_150 #x0000000000000004))
(assert (= temp1282_151 temp1282_150))
(assert (= temp1282_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1282_151)))
(assert (= temp1282_153 #x0000000000000005))
(assert (= temp1282_154 temp1282_153))
(assert (= temp1282_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1282_154)))
(assert (= temp1282_157 var1179826))
(assert (= temp1282_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1282_157)))
(assert (= temp1282_156 temp1282_158))
(assert (= var1191780
   (ite (bvslt temp1282_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1282_159 #x0000000000000000))
(assert (= var1191780 temp1282_159))
(assert (= temp1282_160 #x0000000000000000))
(assert (= var1179826 temp1282_160))
(assert (= temp1282_162 var1179826))
(assert (= temp1282_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1282_162)))
(assert (= temp1282_161 temp1282_163))
(assert (= var1191802 (bvsmod temp1282_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1282_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1282_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1282_165 #x0000000000000001))
(assert (= var1191803 temp1282_165))
(assert (= temp1282_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1282_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1282_167 #x0000000000000001))
(assert (= var1191823 temp1282_167))
(assert (= temp1282_168 #x0000000000000001))
(assert (= var1180714 temp1282_168))
(assert (= temp1282_169 #x0000000000000000))
(assert (= temp1282_170 temp1282_169))
(assert (= temp1282_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1282_170)))
(assert (= temp1282_172 #x0000000000000001))
(assert (= temp1282_173 temp1282_172))
(assert (= temp1282_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1282_173)))
(assert (= temp1282_175 #x0000000000000002))
(assert (= temp1282_176 temp1282_175))
(assert (= temp1282_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1282_176)))
(assert (= temp1282_178 #x0000000000000003))
(assert (= temp1282_179 temp1282_178))
(assert (= temp1282_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1282_179)))
(assert (= temp1282_181 #x0000000000000004))
(assert (= temp1282_182 temp1282_181))
(assert (= temp1282_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1282_182)))
(assert (= temp1282_184 #x0000000000000005))
(assert (= temp1282_185 temp1282_184))
(assert (= temp1282_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1282_185)))
(assert (= temp1282_187 #x0000000000000000))
(assert (= temp1282_188
   (ite (bvslt var1180714 temp1282_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1282_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1282_188)))
(assert (= var1191831 temp1282_189))
(assert (bvslt (ite (bvslt var1180714 temp1282_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1282_190 #x0000000000000001))
(assert (= var1180714 temp1282_190))
(assert (= temp1282_192 var1180714))
(assert (= temp1282_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1282_192)))
(assert (= temp1282_191 temp1282_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1282_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1282_194 #x0000000000000001))
(assert (= var1191836 temp1282_194))
(assert (= temp1282_195 #x0000000000000000))
(assert (= var1179826 temp1282_195))
(assert (= temp1282_197 var1179826))
(assert (= temp1282_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1282_197)))
(assert (= temp1282_196 temp1282_198))
(assert (= temp1282_199 #x0000000000000002))
(assert (= var1586025 temp1282_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1282_200 #x0000000000000001))
(assert (= var1191993 temp1282_200))
(assert (= temp1282_201 #x0000000000000001))
(assert (= var2700303 temp1282_201))
(assert (= temp1282_202 #x0000000000000001))
(assert (= var2962447 temp1282_202))
(assert (= temp1282_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1282_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1282_204 #x0000000000000001))
(assert (= var211058 temp1282_204))
(assert (= temp1282_205 #x0000000000000001))
(assert (= var211188 temp1282_205))
(assert (= var3879401 var211188))
(assert (= temp1282_206 #x0000000000000000))
(assert (= var3866802 temp1282_206))
(assert (= temp1282_207 #x0000000000000000))
(assert (= temp1282_208
   (ite (bvslt var3866802 temp1282_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1282_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1282_208)))
(assert (= var3879420 temp1282_209))
(assert (bvslt (ite (bvslt var3866802 temp1282_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1282_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1282_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1282_211 #x0000000000000001))
(assert (= var3879421 temp1282_211))
(assert (= temp1282_212 #x0000000000000000))
(assert (= var4133117 temp1282_212))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1282_213 #x0000000000000002))
(assert (= var4339331 temp1282_213))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1282_214 #x0000000000000000))
(assert (= var4404892 temp1282_214))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp1282_216 #xffffffffffffffff))
(assert (= temp1282_215 temp1282_216))
(assert (= temp1282_217 #x0000000000000001))
(assert (= var197674 temp1282_217))
(assert (= temp1282_218 #x0000000000000000))
(assert (= temp1282_219
   (ite (bvslt var197674 temp1282_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp1282_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp1282_219)))
(assert (= var211595 temp1282_220))
(assert (bvslt (ite (bvslt var197674 temp1282_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1282_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp1282_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp1282_222 #x0000000000000001))
(assert (= var211596 temp1282_222))
(assert (= temp1282_224 #xffffffffffffffff))
(assert (= temp1282_223 temp1282_224))
(assert (= temp1282_225 #x0000000000000001))
(assert (= var211058 temp1282_225))
(model-add temp1282_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1282_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1282_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1282_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





