(declare-fun temp404_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp404_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp404_3 () (_ BitVec 64))
(declare-fun temp404_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp404_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp404_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp404_7 () (_ BitVec 64))
(declare-fun temp404_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp404_9 () (_ BitVec 64))
(declare-fun temp404_10 () (_ BitVec 64))
(declare-fun temp404_11 () (_ BitVec 64))
(declare-fun temp404_12 () (_ BitVec 64))
(declare-fun temp404_13 () (_ BitVec 64))
(declare-fun temp404_14 () (_ BitVec 64))
(declare-fun temp404_15 () (_ BitVec 64))
(declare-fun temp404_16 () (_ BitVec 64))
(declare-fun temp404_17 () (_ BitVec 64))
(declare-fun temp404_18 () (_ BitVec 64))
(declare-fun temp404_19 () (_ BitVec 64))
(declare-fun temp404_20 () (_ BitVec 64))
(declare-fun temp404_21 () (_ BitVec 64))
(declare-fun temp404_22 () (_ BitVec 64))
(declare-fun temp404_23 () (_ BitVec 64))
(declare-fun temp404_24 () (_ BitVec 64))
(declare-fun temp404_25 () (_ BitVec 64))
(declare-fun temp404_26 () (_ BitVec 64))
(declare-fun temp404_27 () (_ BitVec 64))
(declare-fun temp404_28 () (_ BitVec 64))
(declare-fun temp404_29 () (_ BitVec 64))
(declare-fun temp404_30 () (_ BitVec 64))
(declare-fun temp404_31 () (_ BitVec 64))
(declare-fun temp404_32 () (_ BitVec 64))
(declare-fun temp404_33 () (_ BitVec 64))
(declare-fun temp404_34 () (_ BitVec 64))
(declare-fun temp404_35 () (_ BitVec 64))
(declare-fun temp404_36 () (_ BitVec 64))
(declare-fun temp404_37 () (_ BitVec 64))
(declare-fun temp404_38 () (_ BitVec 64))
(declare-fun temp404_39 () (_ BitVec 64))
(declare-fun temp404_40 () (_ BitVec 64))
(declare-fun temp404_41 () (_ BitVec 64))
(declare-fun temp404_42 () (_ BitVec 64))
(declare-fun temp404_43 () (_ BitVec 64))
(declare-fun temp404_44 () (_ BitVec 64))
(declare-fun temp404_45 () (_ BitVec 64))
(declare-fun temp404_46 () (_ BitVec 64))
(declare-fun temp404_47 () (_ BitVec 64))
(declare-fun temp404_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp404_49 () (_ BitVec 64))
(declare-fun temp404_50 () (_ BitVec 64))
(declare-fun temp404_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp404_52 () (_ BitVec 64))
(declare-fun temp404_53 () (_ BitVec 64))
(declare-fun temp404_54 () (_ BitVec 64))
(declare-fun temp404_55 () (_ BitVec 64))
(declare-fun temp404_56 () (_ BitVec 64))
(declare-fun temp404_57 () (_ BitVec 64))
(declare-fun temp404_58 () (_ BitVec 64))
(declare-fun temp404_59 () (_ BitVec 64))
(declare-fun temp404_60 () (_ BitVec 64))
(declare-fun temp404_61 () (_ BitVec 64))
(declare-fun temp404_62 () (_ BitVec 64))
(declare-fun temp404_63 () (_ BitVec 64))
(declare-fun temp404_64 () (_ BitVec 64))
(declare-fun temp404_65 () (_ BitVec 64))
(declare-fun temp404_66 () (_ BitVec 64))
(declare-fun temp404_67 () (_ BitVec 64))
(declare-fun temp404_68 () (_ BitVec 64))
(declare-fun temp404_69 () (_ BitVec 64))
(declare-fun temp404_70 () (_ BitVec 64))
(declare-fun temp404_71 () (_ BitVec 64))
(declare-fun temp404_72 () (_ BitVec 64))
(declare-fun temp404_73 () (_ BitVec 64))
(declare-fun temp404_74 () (_ BitVec 64))
(declare-fun temp404_75 () (_ BitVec 64))
(declare-fun temp404_76 () (_ BitVec 64))
(declare-fun temp404_77 () (_ BitVec 64))
(declare-fun temp404_78 () (_ BitVec 64))
(declare-fun temp404_79 () (_ BitVec 64))
(declare-fun temp404_80 () (_ BitVec 64))
(declare-fun temp404_81 () (_ BitVec 64))
(declare-fun temp404_82 () (_ BitVec 64))
(declare-fun temp404_83 () (_ BitVec 64))
(declare-fun temp404_84 () (_ BitVec 64))
(declare-fun temp404_85 () (_ BitVec 64))
(declare-fun temp404_86 () (_ BitVec 64))
(declare-fun temp404_87 () (_ BitVec 64))
(declare-fun temp404_88 () (_ BitVec 64))
(declare-fun temp404_89 () (_ BitVec 64))
(declare-fun temp404_90 () (_ BitVec 64))
(declare-fun temp404_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp404_92 () (_ BitVec 64))
(declare-fun temp404_93 () (_ BitVec 64))
(declare-fun temp404_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp404_95 () (_ BitVec 64))
(declare-fun temp404_96 () (_ BitVec 64))
(declare-fun temp404_97 () (_ BitVec 64))
(declare-fun temp404_98 () (_ BitVec 64))
(declare-fun temp404_99 () (_ BitVec 64))
(declare-fun temp404_100 () (_ BitVec 64))
(declare-fun temp404_101 () (_ BitVec 64))
(declare-fun temp404_102 () (_ BitVec 64))
(declare-fun temp404_103 () (_ BitVec 64))
(declare-fun temp404_104 () (_ BitVec 64))
(declare-fun temp404_105 () (_ BitVec 64))
(declare-fun temp404_106 () (_ BitVec 64))
(declare-fun temp404_107 () (_ BitVec 64))
(declare-fun temp404_108 () (_ BitVec 64))
(declare-fun temp404_109 () (_ BitVec 64))
(declare-fun temp404_110 () (_ BitVec 64))
(declare-fun temp404_111 () (_ BitVec 64))
(declare-fun temp404_112 () (_ BitVec 64))
(declare-fun temp404_113 () (_ BitVec 64))
(declare-fun temp404_114 () (_ BitVec 64))
(declare-fun temp404_115 () (_ BitVec 64))
(declare-fun temp404_116 () (_ BitVec 64))
(declare-fun temp404_117 () (_ BitVec 64))
(declare-fun temp404_118 () (_ BitVec 64))
(declare-fun temp404_119 () (_ BitVec 64))
(declare-fun temp404_120 () (_ BitVec 64))
(declare-fun temp404_121 () (_ BitVec 64))
(declare-fun temp404_122 () (_ BitVec 64))
(declare-fun temp404_123 () (_ BitVec 64))
(declare-fun temp404_124 () (_ BitVec 64))
(declare-fun temp404_125 () (_ BitVec 64))
(declare-fun temp404_126 () (_ BitVec 64))
(declare-fun temp404_127 () (_ BitVec 64))
(declare-fun temp404_128 () (_ BitVec 64))
(declare-fun temp404_129 () (_ BitVec 64))
(declare-fun temp404_130 () (_ BitVec 64))
(declare-fun temp404_131 () (_ BitVec 64))
(declare-fun temp404_132 () (_ BitVec 64))
(declare-fun temp404_133 () (_ BitVec 64))
(declare-fun temp404_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp404_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp404_136 () (_ BitVec 64))
(declare-fun temp404_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp404_138 () (_ BitVec 64))
(declare-fun temp404_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp404_140 () (_ BitVec 64))
(declare-fun temp404_141 () (_ BitVec 64))
(declare-fun temp404_142 () (_ BitVec 64))
(declare-fun temp404_143 () (_ BitVec 64))
(declare-fun temp404_144 () (_ BitVec 64))
(declare-fun temp404_145 () (_ BitVec 64))
(declare-fun temp404_146 () (_ BitVec 64))
(declare-fun temp404_147 () (_ BitVec 64))
(declare-fun temp404_148 () (_ BitVec 64))
(declare-fun temp404_149 () (_ BitVec 64))
(declare-fun temp404_150 () (_ BitVec 64))
(declare-fun temp404_151 () (_ BitVec 64))
(declare-fun temp404_152 () (_ BitVec 64))
(declare-fun temp404_153 () (_ BitVec 64))
(declare-fun temp404_154 () (_ BitVec 64))
(declare-fun temp404_155 () (_ BitVec 64))
(declare-fun temp404_157 () (_ BitVec 64))
(declare-fun temp404_158 () (_ BitVec 64))
(declare-fun temp404_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp404_159 () (_ BitVec 64))
(declare-fun temp404_160 () (_ BitVec 64))
(declare-fun temp404_162 () (_ BitVec 64))
(declare-fun temp404_163 () (_ BitVec 64))
(declare-fun temp404_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp404_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp404_165 () (_ BitVec 64))
(declare-fun temp404_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp404_167 () (_ BitVec 64))
(declare-fun temp404_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp404_169 () (_ BitVec 64))
(declare-fun temp404_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp404_171 () (_ BitVec 64))
(declare-fun temp404_172 () (_ BitVec 64))
(declare-fun temp404_173 () (_ BitVec 64))
(declare-fun temp404_174 () (_ BitVec 64))
(declare-fun temp404_175 () (_ BitVec 64))
(declare-fun temp404_176 () (_ BitVec 64))
(declare-fun temp404_177 () (_ BitVec 64))
(declare-fun temp404_178 () (_ BitVec 64))
(declare-fun temp404_179 () (_ BitVec 64))
(declare-fun temp404_180 () (_ BitVec 64))
(declare-fun temp404_181 () (_ BitVec 64))
(declare-fun temp404_182 () (_ BitVec 64))
(declare-fun temp404_183 () (_ BitVec 64))
(declare-fun temp404_184 () (_ BitVec 64))
(declare-fun temp404_185 () (_ BitVec 64))
(declare-fun temp404_186 () (_ BitVec 64))
(declare-fun temp404_187 () (_ BitVec 64))
(declare-fun temp404_188 () (_ BitVec 64))
(declare-fun temp404_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp404_190 () (_ BitVec 64))
(declare-fun temp404_192 () (_ BitVec 64))
(declare-fun temp404_193 () (_ BitVec 64))
(declare-fun temp404_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp404_194 () (_ BitVec 64))
(declare-fun temp404_195 () (_ BitVec 64))
(declare-fun temp404_197 () (_ BitVec 64))
(declare-fun temp404_198 () (_ BitVec 64))
(declare-fun temp404_196 () (_ BitVec 64))
(declare-fun temp404_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp404_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp404_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp404_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp404_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp404_204 () (_ BitVec 64))
(declare-fun temp404_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp404_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp404_207 () (_ BitVec 64))
(declare-fun temp404_208 () (_ BitVec 64))
(declare-fun temp404_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp404_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp404_211 () (_ BitVec 64))
(declare-fun temp404_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp404_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp404_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp404_215 () (_ BitVec 64))
(declare-fun temp404_216 () (_ BitVec 64))
(declare-fun var6304532 () (_ BitVec 64))
(declare-fun var6304499 () (_ BitVec 64))
(declare-fun var6173063 () (_ BitVec 64))
(declare-fun var6173059 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp404_217 () (_ BitVec 64))
(assert (= temp404_1 #x0000000000000001))
(assert (= var77203 temp404_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp404_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp404_2)))
(assert (= temp404_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp404_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp404_4 #x0000000000000000))
(assert (= var210941 temp404_4))
(assert (= temp404_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp404_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp404_6 #x0000000000000000))
(assert (= var210986 temp404_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp404_7 #x0000000000000000))
(assert (= temp404_8 temp404_7))
(assert (= temp404_9 (select ARGNAME_padding_NAMEEND_VAL temp404_8)))
(assert (= temp404_10 #x0000000000000001))
(assert (= temp404_11 temp404_10))
(assert (= temp404_12 (select ARGNAME_padding_NAMEEND_VAL temp404_11)))
(assert (= temp404_13 #x0000000000000002))
(assert (= temp404_14 temp404_13))
(assert (= temp404_15 (select ARGNAME_padding_NAMEEND_VAL temp404_14)))
(assert (= temp404_16 #x0000000000000003))
(assert (= temp404_17 temp404_16))
(assert (= temp404_18 (select ARGNAME_padding_NAMEEND_VAL temp404_17)))
(assert (= temp404_19 #x0000000000000004))
(assert (= temp404_20 temp404_19))
(assert (= temp404_21 (select ARGNAME_padding_NAMEEND_VAL temp404_20)))
(assert (= temp404_22 #x0000000000000005))
(assert (= temp404_23 temp404_22))
(assert (= temp404_24 (select ARGNAME_padding_NAMEEND_VAL temp404_23)))
(assert (= temp404_25 #x0000000000000000))
(assert (= temp404_26 #x0000000000000000))
(assert (= temp404_27 temp404_26))
(assert (= temp404_28 (select ARGNAME_padding_NAMEEND_VAL temp404_27)))
(assert (= temp404_29 #x0000000000000000))
(assert (= temp404_30 #x0000000000000001))
(assert (= temp404_31 temp404_30))
(assert (= temp404_32 (select ARGNAME_padding_NAMEEND_VAL temp404_31)))
(assert (= temp404_33 #x0000000000000000))
(assert (= temp404_34 #x0000000000000002))
(assert (= temp404_35 temp404_34))
(assert (= temp404_36 (select ARGNAME_padding_NAMEEND_VAL temp404_35)))
(assert (= temp404_37 #x0000000000000000))
(assert (= temp404_38 #x0000000000000003))
(assert (= temp404_39 temp404_38))
(assert (= temp404_40 (select ARGNAME_padding_NAMEEND_VAL temp404_39)))
(assert (= temp404_41 #x0000000000000000))
(assert (= temp404_42 #x0000000000000004))
(assert (= temp404_43 temp404_42))
(assert (= temp404_44 (select ARGNAME_padding_NAMEEND_VAL temp404_43)))
(assert (= temp404_45 #x0000000000000000))
(assert (= temp404_46 #x0000000000000005))
(assert (= temp404_47 temp404_46))
(assert (= temp404_48 (select ARGNAME_padding_NAMEEND_VAL temp404_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp404_28 temp404_25)
             (bvslt temp404_32 temp404_29)
             (bvslt temp404_36 temp404_33)
             (bvslt temp404_40 temp404_37)
             (bvslt temp404_44 temp404_41)
             (bvslt temp404_48 temp404_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp404_49 #x0000000000000000))
(assert (= var1191714 temp404_49))
(assert (= temp404_50 #x0000000000000000))
(assert (= temp404_51 temp404_50))
(assert (= temp404_52 (select ARGNAME_output_padding_NAMEEND_VAL temp404_51)))
(assert (= temp404_53 #x0000000000000001))
(assert (= temp404_54 temp404_53))
(assert (= temp404_55 (select ARGNAME_output_padding_NAMEEND_VAL temp404_54)))
(assert (= temp404_56 #x0000000000000002))
(assert (= temp404_57 temp404_56))
(assert (= temp404_58 (select ARGNAME_output_padding_NAMEEND_VAL temp404_57)))
(assert (= temp404_59 #x0000000000000003))
(assert (= temp404_60 temp404_59))
(assert (= temp404_61 (select ARGNAME_output_padding_NAMEEND_VAL temp404_60)))
(assert (= temp404_62 #x0000000000000004))
(assert (= temp404_63 temp404_62))
(assert (= temp404_64 (select ARGNAME_output_padding_NAMEEND_VAL temp404_63)))
(assert (= temp404_65 #x0000000000000005))
(assert (= temp404_66 temp404_65))
(assert (= temp404_67 (select ARGNAME_output_padding_NAMEEND_VAL temp404_66)))
(assert (= temp404_68 #x0000000000000000))
(assert (= temp404_69 #x0000000000000000))
(assert (= temp404_70 temp404_69))
(assert (= temp404_71 (select ARGNAME_output_padding_NAMEEND_VAL temp404_70)))
(assert (= temp404_72 #x0000000000000000))
(assert (= temp404_73 #x0000000000000001))
(assert (= temp404_74 temp404_73))
(assert (= temp404_75 (select ARGNAME_output_padding_NAMEEND_VAL temp404_74)))
(assert (= temp404_76 #x0000000000000000))
(assert (= temp404_77 #x0000000000000002))
(assert (= temp404_78 temp404_77))
(assert (= temp404_79 (select ARGNAME_output_padding_NAMEEND_VAL temp404_78)))
(assert (= temp404_80 #x0000000000000000))
(assert (= temp404_81 #x0000000000000003))
(assert (= temp404_82 temp404_81))
(assert (= temp404_83 (select ARGNAME_output_padding_NAMEEND_VAL temp404_82)))
(assert (= temp404_84 #x0000000000000000))
(assert (= temp404_85 #x0000000000000004))
(assert (= temp404_86 temp404_85))
(assert (= temp404_87 (select ARGNAME_output_padding_NAMEEND_VAL temp404_86)))
(assert (= temp404_88 #x0000000000000000))
(assert (= temp404_89 #x0000000000000005))
(assert (= temp404_90 temp404_89))
(assert (= temp404_91 (select ARGNAME_output_padding_NAMEEND_VAL temp404_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp404_71 temp404_68)
             (bvslt temp404_75 temp404_72)
             (bvslt temp404_79 temp404_76)
             (bvslt temp404_83 temp404_80)
             (bvslt temp404_87 temp404_84)
             (bvslt temp404_91 temp404_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp404_92 #x0000000000000000))
(assert (= var1191725 temp404_92))
(assert (= temp404_93 #x0000000000000000))
(assert (= temp404_94 temp404_93))
(assert (= temp404_95 (select ARGNAME_stride_NAMEEND_VAL temp404_94)))
(assert (= temp404_96 #x0000000000000001))
(assert (= temp404_97 temp404_96))
(assert (= temp404_98 (select ARGNAME_stride_NAMEEND_VAL temp404_97)))
(assert (= temp404_99 #x0000000000000002))
(assert (= temp404_100 temp404_99))
(assert (= temp404_101 (select ARGNAME_stride_NAMEEND_VAL temp404_100)))
(assert (= temp404_102 #x0000000000000003))
(assert (= temp404_103 temp404_102))
(assert (= temp404_104 (select ARGNAME_stride_NAMEEND_VAL temp404_103)))
(assert (= temp404_105 #x0000000000000004))
(assert (= temp404_106 temp404_105))
(assert (= temp404_107 (select ARGNAME_stride_NAMEEND_VAL temp404_106)))
(assert (= temp404_108 #x0000000000000005))
(assert (= temp404_109 temp404_108))
(assert (= temp404_110 (select ARGNAME_stride_NAMEEND_VAL temp404_109)))
(assert (= temp404_111 #x0000000000000000))
(assert (= temp404_112 #x0000000000000000))
(assert (= temp404_113 temp404_112))
(assert (= temp404_114 (select ARGNAME_stride_NAMEEND_VAL temp404_113)))
(assert (= temp404_115 #x0000000000000000))
(assert (= temp404_116 #x0000000000000001))
(assert (= temp404_117 temp404_116))
(assert (= temp404_118 (select ARGNAME_stride_NAMEEND_VAL temp404_117)))
(assert (= temp404_119 #x0000000000000000))
(assert (= temp404_120 #x0000000000000002))
(assert (= temp404_121 temp404_120))
(assert (= temp404_122 (select ARGNAME_stride_NAMEEND_VAL temp404_121)))
(assert (= temp404_123 #x0000000000000000))
(assert (= temp404_124 #x0000000000000003))
(assert (= temp404_125 temp404_124))
(assert (= temp404_126 (select ARGNAME_stride_NAMEEND_VAL temp404_125)))
(assert (= temp404_127 #x0000000000000000))
(assert (= temp404_128 #x0000000000000004))
(assert (= temp404_129 temp404_128))
(assert (= temp404_130 (select ARGNAME_stride_NAMEEND_VAL temp404_129)))
(assert (= temp404_131 #x0000000000000000))
(assert (= temp404_132 #x0000000000000005))
(assert (= temp404_133 temp404_132))
(assert (= temp404_134 (select ARGNAME_stride_NAMEEND_VAL temp404_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp404_114 temp404_111)
             (bvsle temp404_118 temp404_115)
             (bvsle temp404_122 temp404_119)
             (bvsle temp404_126 temp404_123)
             (bvsle temp404_130 temp404_127)
             (bvsle temp404_134 temp404_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp404_135 #x0000000000000000))
(assert (= var1191735 temp404_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp404_136 #x0000000000000001))
(assert (= var1191747 temp404_136))
(assert (= temp404_137 #x0000000000000000))
(assert (= var1179826 temp404_137))
(assert (= temp404_138 #x0000000000000000))
(assert (= temp404_139 temp404_138))
(assert (= temp404_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp404_139)))
(assert (= temp404_141 #x0000000000000001))
(assert (= temp404_142 temp404_141))
(assert (= temp404_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp404_142)))
(assert (= temp404_144 #x0000000000000002))
(assert (= temp404_145 temp404_144))
(assert (= temp404_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp404_145)))
(assert (= temp404_147 #x0000000000000003))
(assert (= temp404_148 temp404_147))
(assert (= temp404_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp404_148)))
(assert (= temp404_150 #x0000000000000004))
(assert (= temp404_151 temp404_150))
(assert (= temp404_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp404_151)))
(assert (= temp404_153 #x0000000000000005))
(assert (= temp404_154 temp404_153))
(assert (= temp404_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp404_154)))
(assert (= temp404_157 var1179826))
(assert (= temp404_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp404_157)))
(assert (= temp404_156 temp404_158))
(assert (= var1191780
   (ite (bvslt temp404_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp404_159 #x0000000000000000))
(assert (= var1191780 temp404_159))
(assert (= temp404_160 #x0000000000000000))
(assert (= var1179826 temp404_160))
(assert (= temp404_162 var1179826))
(assert (= temp404_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp404_162)))
(assert (= temp404_161 temp404_163))
(assert (= var1191802 (bvsmod temp404_161 ARGNAME_groups_NAMEEND)))
(assert (= temp404_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp404_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp404_165 #x0000000000000001))
(assert (= var1191803 temp404_165))
(assert (= temp404_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp404_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp404_167 #x0000000000000001))
(assert (= var1191823 temp404_167))
(assert (= temp404_168 #x0000000000000001))
(assert (= var1180714 temp404_168))
(assert (= temp404_169 #x0000000000000000))
(assert (= temp404_170 temp404_169))
(assert (= temp404_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp404_170)))
(assert (= temp404_172 #x0000000000000001))
(assert (= temp404_173 temp404_172))
(assert (= temp404_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp404_173)))
(assert (= temp404_175 #x0000000000000002))
(assert (= temp404_176 temp404_175))
(assert (= temp404_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp404_176)))
(assert (= temp404_178 #x0000000000000003))
(assert (= temp404_179 temp404_178))
(assert (= temp404_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp404_179)))
(assert (= temp404_181 #x0000000000000004))
(assert (= temp404_182 temp404_181))
(assert (= temp404_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp404_182)))
(assert (= temp404_184 #x0000000000000005))
(assert (= temp404_185 temp404_184))
(assert (= temp404_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp404_185)))
(assert (= temp404_187 #x0000000000000000))
(assert (= temp404_188
   (ite (bvslt var1180714 temp404_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp404_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp404_188)))
(assert (= var1191831 temp404_189))
(assert (bvslt (ite (bvslt var1180714 temp404_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp404_190 #x0000000000000001))
(assert (= var1180714 temp404_190))
(assert (= temp404_192 var1180714))
(assert (= temp404_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp404_192)))
(assert (= temp404_191 temp404_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp404_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp404_194 #x0000000000000001))
(assert (= var1191836 temp404_194))
(assert (= temp404_195 #x0000000000000000))
(assert (= var1179826 temp404_195))
(assert (= temp404_197 var1179826))
(assert (= temp404_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp404_197)))
(assert (= temp404_196 temp404_198))
(assert (= temp404_199 #x0000000000000002))
(assert (= var1586025 temp404_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp404_200 #x0000000000000001))
(assert (= var1191993 temp404_200))
(assert (= temp404_201 #x0000000000000001))
(assert (= var2700303 temp404_201))
(assert (= temp404_202 #x0000000000000001))
(assert (= var2962447 temp404_202))
(assert (= temp404_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp404_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp404_204 #x0000000000000001))
(assert (= var211058 temp404_204))
(assert (= temp404_205 #x0000000000000001))
(assert (= var211188 temp404_205))
(assert (= var3879401 var211188))
(assert (= temp404_206 #x0000000000000000))
(assert (= var3866802 temp404_206))
(assert (= temp404_207 #x0000000000000000))
(assert (= temp404_208
   (ite (bvslt var3866802 temp404_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp404_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp404_208)))
(assert (= var3879420 temp404_209))
(assert (bvslt (ite (bvslt var3866802 temp404_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp404_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp404_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp404_211 #x0000000000000001))
(assert (= var3879421 temp404_211))
(assert (= temp404_212 #x0000000000000000))
(assert (= var4079423 temp404_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp404_213 #x0000000000000002))
(assert (= var4208259 temp404_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp404_214 #x0000000000000000))
(assert (= var4273820 temp404_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp404_215 #x0000000000000001))
(assert (= var211058 temp404_215))
(assert (= temp404_216 #x0000000000000000))
(assert (= var6304532 temp404_216))
(assert (= var6304499 var6304532))
(assert (= var6173063 var6304499))
(assert (= var6173059 var6173063))
(assert (= var212669 var6173059))
(assert (= temp404_217 #x0000000000000000))
(assert (= var212669 temp404_217))
(model-add temp404_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp404_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp404_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp404_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






