(declare-fun temp10033_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10033_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10033_3 () (_ BitVec 64))
(declare-fun temp10033_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10033_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10033_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10033_7 () (_ BitVec 64))
(declare-fun temp10033_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10033_9 () (_ BitVec 64))
(declare-fun temp10033_10 () (_ BitVec 64))
(declare-fun temp10033_11 () (_ BitVec 64))
(declare-fun temp10033_12 () (_ BitVec 64))
(declare-fun temp10033_13 () (_ BitVec 64))
(declare-fun temp10033_14 () (_ BitVec 64))
(declare-fun temp10033_15 () (_ BitVec 64))
(declare-fun temp10033_16 () (_ BitVec 64))
(declare-fun temp10033_17 () (_ BitVec 64))
(declare-fun temp10033_18 () (_ BitVec 64))
(declare-fun temp10033_19 () (_ BitVec 64))
(declare-fun temp10033_20 () (_ BitVec 64))
(declare-fun temp10033_21 () (_ BitVec 64))
(declare-fun temp10033_22 () (_ BitVec 64))
(declare-fun temp10033_23 () (_ BitVec 64))
(declare-fun temp10033_24 () (_ BitVec 64))
(declare-fun temp10033_25 () (_ BitVec 64))
(declare-fun temp10033_26 () (_ BitVec 64))
(declare-fun temp10033_27 () (_ BitVec 64))
(declare-fun temp10033_28 () (_ BitVec 64))
(declare-fun temp10033_29 () (_ BitVec 64))
(declare-fun temp10033_30 () (_ BitVec 64))
(declare-fun temp10033_31 () (_ BitVec 64))
(declare-fun temp10033_32 () (_ BitVec 64))
(declare-fun temp10033_33 () (_ BitVec 64))
(declare-fun temp10033_34 () (_ BitVec 64))
(declare-fun temp10033_35 () (_ BitVec 64))
(declare-fun temp10033_36 () (_ BitVec 64))
(declare-fun temp10033_37 () (_ BitVec 64))
(declare-fun temp10033_38 () (_ BitVec 64))
(declare-fun temp10033_39 () (_ BitVec 64))
(declare-fun temp10033_40 () (_ BitVec 64))
(declare-fun temp10033_41 () (_ BitVec 64))
(declare-fun temp10033_42 () (_ BitVec 64))
(declare-fun temp10033_43 () (_ BitVec 64))
(declare-fun temp10033_44 () (_ BitVec 64))
(declare-fun temp10033_45 () (_ BitVec 64))
(declare-fun temp10033_46 () (_ BitVec 64))
(declare-fun temp10033_47 () (_ BitVec 64))
(declare-fun temp10033_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10033_49 () (_ BitVec 64))
(declare-fun temp10033_50 () (_ BitVec 64))
(declare-fun temp10033_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10033_52 () (_ BitVec 64))
(declare-fun temp10033_53 () (_ BitVec 64))
(declare-fun temp10033_54 () (_ BitVec 64))
(declare-fun temp10033_55 () (_ BitVec 64))
(declare-fun temp10033_56 () (_ BitVec 64))
(declare-fun temp10033_57 () (_ BitVec 64))
(declare-fun temp10033_58 () (_ BitVec 64))
(declare-fun temp10033_59 () (_ BitVec 64))
(declare-fun temp10033_60 () (_ BitVec 64))
(declare-fun temp10033_61 () (_ BitVec 64))
(declare-fun temp10033_62 () (_ BitVec 64))
(declare-fun temp10033_63 () (_ BitVec 64))
(declare-fun temp10033_64 () (_ BitVec 64))
(declare-fun temp10033_65 () (_ BitVec 64))
(declare-fun temp10033_66 () (_ BitVec 64))
(declare-fun temp10033_67 () (_ BitVec 64))
(declare-fun temp10033_68 () (_ BitVec 64))
(declare-fun temp10033_69 () (_ BitVec 64))
(declare-fun temp10033_70 () (_ BitVec 64))
(declare-fun temp10033_71 () (_ BitVec 64))
(declare-fun temp10033_72 () (_ BitVec 64))
(declare-fun temp10033_73 () (_ BitVec 64))
(declare-fun temp10033_74 () (_ BitVec 64))
(declare-fun temp10033_75 () (_ BitVec 64))
(declare-fun temp10033_76 () (_ BitVec 64))
(declare-fun temp10033_77 () (_ BitVec 64))
(declare-fun temp10033_78 () (_ BitVec 64))
(declare-fun temp10033_79 () (_ BitVec 64))
(declare-fun temp10033_80 () (_ BitVec 64))
(declare-fun temp10033_81 () (_ BitVec 64))
(declare-fun temp10033_82 () (_ BitVec 64))
(declare-fun temp10033_83 () (_ BitVec 64))
(declare-fun temp10033_84 () (_ BitVec 64))
(declare-fun temp10033_85 () (_ BitVec 64))
(declare-fun temp10033_86 () (_ BitVec 64))
(declare-fun temp10033_87 () (_ BitVec 64))
(declare-fun temp10033_88 () (_ BitVec 64))
(declare-fun temp10033_89 () (_ BitVec 64))
(declare-fun temp10033_90 () (_ BitVec 64))
(declare-fun temp10033_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10033_92 () (_ BitVec 64))
(declare-fun temp10033_93 () (_ BitVec 64))
(declare-fun temp10033_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10033_95 () (_ BitVec 64))
(declare-fun temp10033_96 () (_ BitVec 64))
(declare-fun temp10033_97 () (_ BitVec 64))
(declare-fun temp10033_98 () (_ BitVec 64))
(declare-fun temp10033_99 () (_ BitVec 64))
(declare-fun temp10033_100 () (_ BitVec 64))
(declare-fun temp10033_101 () (_ BitVec 64))
(declare-fun temp10033_102 () (_ BitVec 64))
(declare-fun temp10033_103 () (_ BitVec 64))
(declare-fun temp10033_104 () (_ BitVec 64))
(declare-fun temp10033_105 () (_ BitVec 64))
(declare-fun temp10033_106 () (_ BitVec 64))
(declare-fun temp10033_107 () (_ BitVec 64))
(declare-fun temp10033_108 () (_ BitVec 64))
(declare-fun temp10033_109 () (_ BitVec 64))
(declare-fun temp10033_110 () (_ BitVec 64))
(declare-fun temp10033_111 () (_ BitVec 64))
(declare-fun temp10033_112 () (_ BitVec 64))
(declare-fun temp10033_113 () (_ BitVec 64))
(declare-fun temp10033_114 () (_ BitVec 64))
(declare-fun temp10033_115 () (_ BitVec 64))
(declare-fun temp10033_116 () (_ BitVec 64))
(declare-fun temp10033_117 () (_ BitVec 64))
(declare-fun temp10033_118 () (_ BitVec 64))
(declare-fun temp10033_119 () (_ BitVec 64))
(declare-fun temp10033_120 () (_ BitVec 64))
(declare-fun temp10033_121 () (_ BitVec 64))
(declare-fun temp10033_122 () (_ BitVec 64))
(declare-fun temp10033_123 () (_ BitVec 64))
(declare-fun temp10033_124 () (_ BitVec 64))
(declare-fun temp10033_125 () (_ BitVec 64))
(declare-fun temp10033_126 () (_ BitVec 64))
(declare-fun temp10033_127 () (_ BitVec 64))
(declare-fun temp10033_128 () (_ BitVec 64))
(declare-fun temp10033_129 () (_ BitVec 64))
(declare-fun temp10033_130 () (_ BitVec 64))
(declare-fun temp10033_131 () (_ BitVec 64))
(declare-fun temp10033_132 () (_ BitVec 64))
(declare-fun temp10033_133 () (_ BitVec 64))
(declare-fun temp10033_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10033_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10033_136 () (_ BitVec 64))
(declare-fun temp10033_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10033_138 () (_ BitVec 64))
(declare-fun temp10033_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10033_140 () (_ BitVec 64))
(declare-fun temp10033_141 () (_ BitVec 64))
(declare-fun temp10033_142 () (_ BitVec 64))
(declare-fun temp10033_143 () (_ BitVec 64))
(declare-fun temp10033_144 () (_ BitVec 64))
(declare-fun temp10033_145 () (_ BitVec 64))
(declare-fun temp10033_146 () (_ BitVec 64))
(declare-fun temp10033_147 () (_ BitVec 64))
(declare-fun temp10033_148 () (_ BitVec 64))
(declare-fun temp10033_149 () (_ BitVec 64))
(declare-fun temp10033_150 () (_ BitVec 64))
(declare-fun temp10033_151 () (_ BitVec 64))
(declare-fun temp10033_152 () (_ BitVec 64))
(declare-fun temp10033_153 () (_ BitVec 64))
(declare-fun temp10033_154 () (_ BitVec 64))
(declare-fun temp10033_155 () (_ BitVec 64))
(declare-fun temp10033_157 () (_ BitVec 64))
(declare-fun temp10033_158 () (_ BitVec 64))
(declare-fun temp10033_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10033_159 () (_ BitVec 64))
(declare-fun temp10033_160 () (_ BitVec 64))
(declare-fun temp10033_162 () (_ BitVec 64))
(declare-fun temp10033_163 () (_ BitVec 64))
(declare-fun temp10033_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10033_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10033_165 () (_ BitVec 64))
(declare-fun temp10033_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10033_167 () (_ BitVec 64))
(declare-fun temp10033_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10033_169 () (_ BitVec 64))
(declare-fun temp10033_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10033_171 () (_ BitVec 64))
(declare-fun temp10033_172 () (_ BitVec 64))
(declare-fun temp10033_173 () (_ BitVec 64))
(declare-fun temp10033_174 () (_ BitVec 64))
(declare-fun temp10033_175 () (_ BitVec 64))
(declare-fun temp10033_176 () (_ BitVec 64))
(declare-fun temp10033_177 () (_ BitVec 64))
(declare-fun temp10033_178 () (_ BitVec 64))
(declare-fun temp10033_179 () (_ BitVec 64))
(declare-fun temp10033_180 () (_ BitVec 64))
(declare-fun temp10033_181 () (_ BitVec 64))
(declare-fun temp10033_182 () (_ BitVec 64))
(declare-fun temp10033_183 () (_ BitVec 64))
(declare-fun temp10033_184 () (_ BitVec 64))
(declare-fun temp10033_185 () (_ BitVec 64))
(declare-fun temp10033_186 () (_ BitVec 64))
(declare-fun temp10033_187 () (_ BitVec 64))
(declare-fun temp10033_188 () (_ BitVec 64))
(declare-fun temp10033_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10033_190 () (_ BitVec 64))
(declare-fun temp10033_192 () (_ BitVec 64))
(declare-fun temp10033_193 () (_ BitVec 64))
(declare-fun temp10033_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10033_194 () (_ BitVec 64))
(declare-fun temp10033_195 () (_ BitVec 64))
(declare-fun temp10033_197 () (_ BitVec 64))
(declare-fun temp10033_198 () (_ BitVec 64))
(declare-fun temp10033_196 () (_ BitVec 64))
(declare-fun temp10033_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10033_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10033_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10033_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10033_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10033_204 () (_ BitVec 64))
(declare-fun temp10033_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10033_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10033_207 () (_ BitVec 64))
(declare-fun temp10033_208 () (_ BitVec 64))
(declare-fun temp10033_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10033_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10033_211 () (_ BitVec 64))
(declare-fun temp10033_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10033_213 () (_ BitVec 64))
(declare-fun temp10033_214 () (_ BitVec 64))
(declare-fun temp10033_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10033_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10033_217 () (_ BitVec 64))
(declare-fun temp10033_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10033_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10033_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10033_222 () (_ BitVec 64))
(declare-fun temp10033_221 () (_ BitVec 64))
(declare-fun temp10033_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10033_224 () (_ BitVec 64))
(declare-fun temp10033_225 () (_ BitVec 64))
(declare-fun temp10033_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10033_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10033_228 () (_ BitVec 64))
(declare-fun temp10033_230 () (_ BitVec 64))
(declare-fun temp10033_229 () (_ BitVec 64))
(declare-fun temp10033_231 () (_ BitVec 64))
(assert (= temp10033_1 #x0000000000000001))
(assert (= var77203 temp10033_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10033_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10033_2)))
(assert (= temp10033_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10033_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10033_4 #x0000000000000000))
(assert (= var210941 temp10033_4))
(assert (= temp10033_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10033_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10033_6 #x0000000000000000))
(assert (= var210986 temp10033_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10033_7 #x0000000000000000))
(assert (= temp10033_8 temp10033_7))
(assert (= temp10033_9 (select ARGNAME_padding_NAMEEND_VAL temp10033_8)))
(assert (= temp10033_10 #x0000000000000001))
(assert (= temp10033_11 temp10033_10))
(assert (= temp10033_12 (select ARGNAME_padding_NAMEEND_VAL temp10033_11)))
(assert (= temp10033_13 #x0000000000000002))
(assert (= temp10033_14 temp10033_13))
(assert (= temp10033_15 (select ARGNAME_padding_NAMEEND_VAL temp10033_14)))
(assert (= temp10033_16 #x0000000000000003))
(assert (= temp10033_17 temp10033_16))
(assert (= temp10033_18 (select ARGNAME_padding_NAMEEND_VAL temp10033_17)))
(assert (= temp10033_19 #x0000000000000004))
(assert (= temp10033_20 temp10033_19))
(assert (= temp10033_21 (select ARGNAME_padding_NAMEEND_VAL temp10033_20)))
(assert (= temp10033_22 #x0000000000000005))
(assert (= temp10033_23 temp10033_22))
(assert (= temp10033_24 (select ARGNAME_padding_NAMEEND_VAL temp10033_23)))
(assert (= temp10033_25 #x0000000000000000))
(assert (= temp10033_26 #x0000000000000000))
(assert (= temp10033_27 temp10033_26))
(assert (= temp10033_28 (select ARGNAME_padding_NAMEEND_VAL temp10033_27)))
(assert (= temp10033_29 #x0000000000000000))
(assert (= temp10033_30 #x0000000000000001))
(assert (= temp10033_31 temp10033_30))
(assert (= temp10033_32 (select ARGNAME_padding_NAMEEND_VAL temp10033_31)))
(assert (= temp10033_33 #x0000000000000000))
(assert (= temp10033_34 #x0000000000000002))
(assert (= temp10033_35 temp10033_34))
(assert (= temp10033_36 (select ARGNAME_padding_NAMEEND_VAL temp10033_35)))
(assert (= temp10033_37 #x0000000000000000))
(assert (= temp10033_38 #x0000000000000003))
(assert (= temp10033_39 temp10033_38))
(assert (= temp10033_40 (select ARGNAME_padding_NAMEEND_VAL temp10033_39)))
(assert (= temp10033_41 #x0000000000000000))
(assert (= temp10033_42 #x0000000000000004))
(assert (= temp10033_43 temp10033_42))
(assert (= temp10033_44 (select ARGNAME_padding_NAMEEND_VAL temp10033_43)))
(assert (= temp10033_45 #x0000000000000000))
(assert (= temp10033_46 #x0000000000000005))
(assert (= temp10033_47 temp10033_46))
(assert (= temp10033_48 (select ARGNAME_padding_NAMEEND_VAL temp10033_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10033_28 temp10033_25)
             (bvslt temp10033_32 temp10033_29)
             (bvslt temp10033_36 temp10033_33)
             (bvslt temp10033_40 temp10033_37)
             (bvslt temp10033_44 temp10033_41)
             (bvslt temp10033_48 temp10033_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10033_49 #x0000000000000000))
(assert (= var1191714 temp10033_49))
(assert (= temp10033_50 #x0000000000000000))
(assert (= temp10033_51 temp10033_50))
(assert (= temp10033_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10033_51)))
(assert (= temp10033_53 #x0000000000000001))
(assert (= temp10033_54 temp10033_53))
(assert (= temp10033_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10033_54)))
(assert (= temp10033_56 #x0000000000000002))
(assert (= temp10033_57 temp10033_56))
(assert (= temp10033_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10033_57)))
(assert (= temp10033_59 #x0000000000000003))
(assert (= temp10033_60 temp10033_59))
(assert (= temp10033_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10033_60)))
(assert (= temp10033_62 #x0000000000000004))
(assert (= temp10033_63 temp10033_62))
(assert (= temp10033_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10033_63)))
(assert (= temp10033_65 #x0000000000000005))
(assert (= temp10033_66 temp10033_65))
(assert (= temp10033_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10033_66)))
(assert (= temp10033_68 #x0000000000000000))
(assert (= temp10033_69 #x0000000000000000))
(assert (= temp10033_70 temp10033_69))
(assert (= temp10033_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10033_70)))
(assert (= temp10033_72 #x0000000000000000))
(assert (= temp10033_73 #x0000000000000001))
(assert (= temp10033_74 temp10033_73))
(assert (= temp10033_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10033_74)))
(assert (= temp10033_76 #x0000000000000000))
(assert (= temp10033_77 #x0000000000000002))
(assert (= temp10033_78 temp10033_77))
(assert (= temp10033_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10033_78)))
(assert (= temp10033_80 #x0000000000000000))
(assert (= temp10033_81 #x0000000000000003))
(assert (= temp10033_82 temp10033_81))
(assert (= temp10033_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10033_82)))
(assert (= temp10033_84 #x0000000000000000))
(assert (= temp10033_85 #x0000000000000004))
(assert (= temp10033_86 temp10033_85))
(assert (= temp10033_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10033_86)))
(assert (= temp10033_88 #x0000000000000000))
(assert (= temp10033_89 #x0000000000000005))
(assert (= temp10033_90 temp10033_89))
(assert (= temp10033_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10033_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10033_71 temp10033_68)
             (bvslt temp10033_75 temp10033_72)
             (bvslt temp10033_79 temp10033_76)
             (bvslt temp10033_83 temp10033_80)
             (bvslt temp10033_87 temp10033_84)
             (bvslt temp10033_91 temp10033_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10033_92 #x0000000000000000))
(assert (= var1191725 temp10033_92))
(assert (= temp10033_93 #x0000000000000000))
(assert (= temp10033_94 temp10033_93))
(assert (= temp10033_95 (select ARGNAME_stride_NAMEEND_VAL temp10033_94)))
(assert (= temp10033_96 #x0000000000000001))
(assert (= temp10033_97 temp10033_96))
(assert (= temp10033_98 (select ARGNAME_stride_NAMEEND_VAL temp10033_97)))
(assert (= temp10033_99 #x0000000000000002))
(assert (= temp10033_100 temp10033_99))
(assert (= temp10033_101 (select ARGNAME_stride_NAMEEND_VAL temp10033_100)))
(assert (= temp10033_102 #x0000000000000003))
(assert (= temp10033_103 temp10033_102))
(assert (= temp10033_104 (select ARGNAME_stride_NAMEEND_VAL temp10033_103)))
(assert (= temp10033_105 #x0000000000000004))
(assert (= temp10033_106 temp10033_105))
(assert (= temp10033_107 (select ARGNAME_stride_NAMEEND_VAL temp10033_106)))
(assert (= temp10033_108 #x0000000000000005))
(assert (= temp10033_109 temp10033_108))
(assert (= temp10033_110 (select ARGNAME_stride_NAMEEND_VAL temp10033_109)))
(assert (= temp10033_111 #x0000000000000000))
(assert (= temp10033_112 #x0000000000000000))
(assert (= temp10033_113 temp10033_112))
(assert (= temp10033_114 (select ARGNAME_stride_NAMEEND_VAL temp10033_113)))
(assert (= temp10033_115 #x0000000000000000))
(assert (= temp10033_116 #x0000000000000001))
(assert (= temp10033_117 temp10033_116))
(assert (= temp10033_118 (select ARGNAME_stride_NAMEEND_VAL temp10033_117)))
(assert (= temp10033_119 #x0000000000000000))
(assert (= temp10033_120 #x0000000000000002))
(assert (= temp10033_121 temp10033_120))
(assert (= temp10033_122 (select ARGNAME_stride_NAMEEND_VAL temp10033_121)))
(assert (= temp10033_123 #x0000000000000000))
(assert (= temp10033_124 #x0000000000000003))
(assert (= temp10033_125 temp10033_124))
(assert (= temp10033_126 (select ARGNAME_stride_NAMEEND_VAL temp10033_125)))
(assert (= temp10033_127 #x0000000000000000))
(assert (= temp10033_128 #x0000000000000004))
(assert (= temp10033_129 temp10033_128))
(assert (= temp10033_130 (select ARGNAME_stride_NAMEEND_VAL temp10033_129)))
(assert (= temp10033_131 #x0000000000000000))
(assert (= temp10033_132 #x0000000000000005))
(assert (= temp10033_133 temp10033_132))
(assert (= temp10033_134 (select ARGNAME_stride_NAMEEND_VAL temp10033_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10033_114 temp10033_111)
             (bvsle temp10033_118 temp10033_115)
             (bvsle temp10033_122 temp10033_119)
             (bvsle temp10033_126 temp10033_123)
             (bvsle temp10033_130 temp10033_127)
             (bvsle temp10033_134 temp10033_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10033_135 #x0000000000000000))
(assert (= var1191735 temp10033_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10033_136 #x0000000000000001))
(assert (= var1191747 temp10033_136))
(assert (= temp10033_137 #x0000000000000000))
(assert (= var1179826 temp10033_137))
(assert (= temp10033_138 #x0000000000000000))
(assert (= temp10033_139 temp10033_138))
(assert (= temp10033_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10033_139)))
(assert (= temp10033_141 #x0000000000000001))
(assert (= temp10033_142 temp10033_141))
(assert (= temp10033_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10033_142)))
(assert (= temp10033_144 #x0000000000000002))
(assert (= temp10033_145 temp10033_144))
(assert (= temp10033_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10033_145)))
(assert (= temp10033_147 #x0000000000000003))
(assert (= temp10033_148 temp10033_147))
(assert (= temp10033_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10033_148)))
(assert (= temp10033_150 #x0000000000000004))
(assert (= temp10033_151 temp10033_150))
(assert (= temp10033_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10033_151)))
(assert (= temp10033_153 #x0000000000000005))
(assert (= temp10033_154 temp10033_153))
(assert (= temp10033_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10033_154)))
(assert (= temp10033_157 var1179826))
(assert (= temp10033_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10033_157)))
(assert (= temp10033_156 temp10033_158))
(assert (= var1191780
   (ite (bvslt temp10033_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10033_159 #x0000000000000000))
(assert (= var1191780 temp10033_159))
(assert (= temp10033_160 #x0000000000000000))
(assert (= var1179826 temp10033_160))
(assert (= temp10033_162 var1179826))
(assert (= temp10033_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10033_162)))
(assert (= temp10033_161 temp10033_163))
(assert (= var1191802 (bvsmod temp10033_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10033_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10033_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10033_165 #x0000000000000001))
(assert (= var1191803 temp10033_165))
(assert (= temp10033_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10033_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10033_167 #x0000000000000001))
(assert (= var1191823 temp10033_167))
(assert (= temp10033_168 #x0000000000000001))
(assert (= var1180714 temp10033_168))
(assert (= temp10033_169 #x0000000000000000))
(assert (= temp10033_170 temp10033_169))
(assert (= temp10033_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10033_170)))
(assert (= temp10033_172 #x0000000000000001))
(assert (= temp10033_173 temp10033_172))
(assert (= temp10033_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10033_173)))
(assert (= temp10033_175 #x0000000000000002))
(assert (= temp10033_176 temp10033_175))
(assert (= temp10033_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10033_176)))
(assert (= temp10033_178 #x0000000000000003))
(assert (= temp10033_179 temp10033_178))
(assert (= temp10033_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10033_179)))
(assert (= temp10033_181 #x0000000000000004))
(assert (= temp10033_182 temp10033_181))
(assert (= temp10033_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10033_182)))
(assert (= temp10033_184 #x0000000000000005))
(assert (= temp10033_185 temp10033_184))
(assert (= temp10033_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10033_185)))
(assert (= temp10033_187 #x0000000000000000))
(assert (= temp10033_188
   (ite (bvslt var1180714 temp10033_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10033_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10033_188)))
(assert (= var1191831 temp10033_189))
(assert (bvslt (ite (bvslt var1180714 temp10033_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10033_190 #x0000000000000001))
(assert (= var1180714 temp10033_190))
(assert (= temp10033_192 var1180714))
(assert (= temp10033_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10033_192)))
(assert (= temp10033_191 temp10033_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10033_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10033_194 #x0000000000000001))
(assert (= var1191836 temp10033_194))
(assert (= temp10033_195 #x0000000000000000))
(assert (= var1179826 temp10033_195))
(assert (= temp10033_197 var1179826))
(assert (= temp10033_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10033_197)))
(assert (= temp10033_196 temp10033_198))
(assert (= temp10033_199 #x0000000000000002))
(assert (= var1586025 temp10033_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10033_200 #x0000000000000001))
(assert (= var1191993 temp10033_200))
(assert (= temp10033_201 #x0000000000000001))
(assert (= var2700303 temp10033_201))
(assert (= temp10033_202 #x0000000000000001))
(assert (= var2962447 temp10033_202))
(assert (= temp10033_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10033_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10033_204 #x0000000000000001))
(assert (= var211058 temp10033_204))
(assert (= temp10033_205 #x0000000000000001))
(assert (= var211188 temp10033_205))
(assert (= var3879401 var211188))
(assert (= temp10033_206 #x0000000000000000))
(assert (= var3866802 temp10033_206))
(assert (= temp10033_207 #x0000000000000000))
(assert (= temp10033_208
   (ite (bvslt var3866802 temp10033_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10033_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10033_208)))
(assert (= var3879420 temp10033_209))
(assert (bvslt (ite (bvslt var3866802 temp10033_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10033_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10033_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10033_211 #x0000000000000000))
(assert (= var3879421 temp10033_211))
(assert (= temp10033_212 #x0000000000000001))
(assert (= var3867690 temp10033_212))
(assert (= temp10033_213 #x0000000000000000))
(assert (= temp10033_214
   (ite (bvslt var3867690 temp10033_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10033_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10033_214)))
(assert (= var3879423 temp10033_215))
(assert (bvslt (ite (bvslt var3867690 temp10033_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10033_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10033_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10033_217 #x0000000000000001))
(assert (= var3879424 temp10033_217))
(assert (= temp10033_218 #x0000000000000000))
(assert (= var4079423 temp10033_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10033_219 #x0000000000000002))
(assert (= var4208259 temp10033_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10033_220 #x0000000000000000))
(assert (= var4273820 temp10033_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10033_222 #xffffffffffffffff))
(assert (= temp10033_221 temp10033_222))
(assert (= temp10033_223 #x0000000000000001))
(assert (= var197674 temp10033_223))
(assert (= temp10033_224 #x0000000000000000))
(assert (= temp10033_225
   (ite (bvslt var197674 temp10033_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10033_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10033_225)))
(assert (= var211595 temp10033_226))
(assert (bvslt (ite (bvslt var197674 temp10033_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10033_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10033_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10033_228 #x0000000000000001))
(assert (= var211596 temp10033_228))
(assert (= temp10033_230 #xffffffffffffffff))
(assert (= temp10033_229 temp10033_230))
(assert (= temp10033_231 #x0000000000000001))
(assert (= var211058 temp10033_231))
(model-add temp10033_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10033_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10033_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10033_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





