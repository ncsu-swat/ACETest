(declare-fun temp765_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp765_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp765_3 () (_ BitVec 64))
(declare-fun temp765_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp765_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp765_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp765_7 () (_ BitVec 64))
(declare-fun temp765_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp765_9 () (_ BitVec 64))
(declare-fun temp765_10 () (_ BitVec 64))
(declare-fun temp765_11 () (_ BitVec 64))
(declare-fun temp765_12 () (_ BitVec 64))
(declare-fun temp765_13 () (_ BitVec 64))
(declare-fun temp765_14 () (_ BitVec 64))
(declare-fun temp765_15 () (_ BitVec 64))
(declare-fun temp765_16 () (_ BitVec 64))
(declare-fun temp765_17 () (_ BitVec 64))
(declare-fun temp765_18 () (_ BitVec 64))
(declare-fun temp765_19 () (_ BitVec 64))
(declare-fun temp765_20 () (_ BitVec 64))
(declare-fun temp765_21 () (_ BitVec 64))
(declare-fun temp765_22 () (_ BitVec 64))
(declare-fun temp765_23 () (_ BitVec 64))
(declare-fun temp765_24 () (_ BitVec 64))
(declare-fun temp765_25 () (_ BitVec 64))
(declare-fun temp765_26 () (_ BitVec 64))
(declare-fun temp765_27 () (_ BitVec 64))
(declare-fun temp765_28 () (_ BitVec 64))
(declare-fun temp765_29 () (_ BitVec 64))
(declare-fun temp765_30 () (_ BitVec 64))
(declare-fun temp765_31 () (_ BitVec 64))
(declare-fun temp765_32 () (_ BitVec 64))
(declare-fun temp765_33 () (_ BitVec 64))
(declare-fun temp765_34 () (_ BitVec 64))
(declare-fun temp765_35 () (_ BitVec 64))
(declare-fun temp765_36 () (_ BitVec 64))
(declare-fun temp765_37 () (_ BitVec 64))
(declare-fun temp765_38 () (_ BitVec 64))
(declare-fun temp765_39 () (_ BitVec 64))
(declare-fun temp765_40 () (_ BitVec 64))
(declare-fun temp765_41 () (_ BitVec 64))
(declare-fun temp765_42 () (_ BitVec 64))
(declare-fun temp765_43 () (_ BitVec 64))
(declare-fun temp765_44 () (_ BitVec 64))
(declare-fun temp765_45 () (_ BitVec 64))
(declare-fun temp765_46 () (_ BitVec 64))
(declare-fun temp765_47 () (_ BitVec 64))
(declare-fun temp765_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp765_49 () (_ BitVec 64))
(declare-fun temp765_50 () (_ BitVec 64))
(declare-fun temp765_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp765_52 () (_ BitVec 64))
(declare-fun temp765_53 () (_ BitVec 64))
(declare-fun temp765_54 () (_ BitVec 64))
(declare-fun temp765_55 () (_ BitVec 64))
(declare-fun temp765_56 () (_ BitVec 64))
(declare-fun temp765_57 () (_ BitVec 64))
(declare-fun temp765_58 () (_ BitVec 64))
(declare-fun temp765_59 () (_ BitVec 64))
(declare-fun temp765_60 () (_ BitVec 64))
(declare-fun temp765_61 () (_ BitVec 64))
(declare-fun temp765_62 () (_ BitVec 64))
(declare-fun temp765_63 () (_ BitVec 64))
(declare-fun temp765_64 () (_ BitVec 64))
(declare-fun temp765_65 () (_ BitVec 64))
(declare-fun temp765_66 () (_ BitVec 64))
(declare-fun temp765_67 () (_ BitVec 64))
(declare-fun temp765_68 () (_ BitVec 64))
(declare-fun temp765_69 () (_ BitVec 64))
(declare-fun temp765_70 () (_ BitVec 64))
(declare-fun temp765_71 () (_ BitVec 64))
(declare-fun temp765_72 () (_ BitVec 64))
(declare-fun temp765_73 () (_ BitVec 64))
(declare-fun temp765_74 () (_ BitVec 64))
(declare-fun temp765_75 () (_ BitVec 64))
(declare-fun temp765_76 () (_ BitVec 64))
(declare-fun temp765_77 () (_ BitVec 64))
(declare-fun temp765_78 () (_ BitVec 64))
(declare-fun temp765_79 () (_ BitVec 64))
(declare-fun temp765_80 () (_ BitVec 64))
(declare-fun temp765_81 () (_ BitVec 64))
(declare-fun temp765_82 () (_ BitVec 64))
(declare-fun temp765_83 () (_ BitVec 64))
(declare-fun temp765_84 () (_ BitVec 64))
(declare-fun temp765_85 () (_ BitVec 64))
(declare-fun temp765_86 () (_ BitVec 64))
(declare-fun temp765_87 () (_ BitVec 64))
(declare-fun temp765_88 () (_ BitVec 64))
(declare-fun temp765_89 () (_ BitVec 64))
(declare-fun temp765_90 () (_ BitVec 64))
(declare-fun temp765_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp765_92 () (_ BitVec 64))
(declare-fun temp765_93 () (_ BitVec 64))
(declare-fun temp765_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp765_95 () (_ BitVec 64))
(declare-fun temp765_96 () (_ BitVec 64))
(declare-fun temp765_97 () (_ BitVec 64))
(declare-fun temp765_98 () (_ BitVec 64))
(declare-fun temp765_99 () (_ BitVec 64))
(declare-fun temp765_100 () (_ BitVec 64))
(declare-fun temp765_101 () (_ BitVec 64))
(declare-fun temp765_102 () (_ BitVec 64))
(declare-fun temp765_103 () (_ BitVec 64))
(declare-fun temp765_104 () (_ BitVec 64))
(declare-fun temp765_105 () (_ BitVec 64))
(declare-fun temp765_106 () (_ BitVec 64))
(declare-fun temp765_107 () (_ BitVec 64))
(declare-fun temp765_108 () (_ BitVec 64))
(declare-fun temp765_109 () (_ BitVec 64))
(declare-fun temp765_110 () (_ BitVec 64))
(declare-fun temp765_111 () (_ BitVec 64))
(declare-fun temp765_112 () (_ BitVec 64))
(declare-fun temp765_113 () (_ BitVec 64))
(declare-fun temp765_114 () (_ BitVec 64))
(declare-fun temp765_115 () (_ BitVec 64))
(declare-fun temp765_116 () (_ BitVec 64))
(declare-fun temp765_117 () (_ BitVec 64))
(declare-fun temp765_118 () (_ BitVec 64))
(declare-fun temp765_119 () (_ BitVec 64))
(declare-fun temp765_120 () (_ BitVec 64))
(declare-fun temp765_121 () (_ BitVec 64))
(declare-fun temp765_122 () (_ BitVec 64))
(declare-fun temp765_123 () (_ BitVec 64))
(declare-fun temp765_124 () (_ BitVec 64))
(declare-fun temp765_125 () (_ BitVec 64))
(declare-fun temp765_126 () (_ BitVec 64))
(declare-fun temp765_127 () (_ BitVec 64))
(declare-fun temp765_128 () (_ BitVec 64))
(declare-fun temp765_129 () (_ BitVec 64))
(declare-fun temp765_130 () (_ BitVec 64))
(declare-fun temp765_131 () (_ BitVec 64))
(declare-fun temp765_132 () (_ BitVec 64))
(declare-fun temp765_133 () (_ BitVec 64))
(declare-fun temp765_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp765_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp765_136 () (_ BitVec 64))
(declare-fun temp765_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp765_138 () (_ BitVec 64))
(declare-fun temp765_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp765_140 () (_ BitVec 64))
(declare-fun temp765_141 () (_ BitVec 64))
(declare-fun temp765_142 () (_ BitVec 64))
(declare-fun temp765_143 () (_ BitVec 64))
(declare-fun temp765_144 () (_ BitVec 64))
(declare-fun temp765_145 () (_ BitVec 64))
(declare-fun temp765_146 () (_ BitVec 64))
(declare-fun temp765_147 () (_ BitVec 64))
(declare-fun temp765_148 () (_ BitVec 64))
(declare-fun temp765_149 () (_ BitVec 64))
(declare-fun temp765_150 () (_ BitVec 64))
(declare-fun temp765_151 () (_ BitVec 64))
(declare-fun temp765_152 () (_ BitVec 64))
(declare-fun temp765_153 () (_ BitVec 64))
(declare-fun temp765_154 () (_ BitVec 64))
(declare-fun temp765_155 () (_ BitVec 64))
(declare-fun temp765_157 () (_ BitVec 64))
(declare-fun temp765_158 () (_ BitVec 64))
(declare-fun temp765_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp765_159 () (_ BitVec 64))
(declare-fun temp765_160 () (_ BitVec 64))
(declare-fun temp765_162 () (_ BitVec 64))
(declare-fun temp765_163 () (_ BitVec 64))
(declare-fun temp765_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp765_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp765_165 () (_ BitVec 64))
(declare-fun temp765_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp765_167 () (_ BitVec 64))
(declare-fun temp765_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp765_169 () (_ BitVec 64))
(declare-fun temp765_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp765_171 () (_ BitVec 64))
(declare-fun temp765_172 () (_ BitVec 64))
(declare-fun temp765_173 () (_ BitVec 64))
(declare-fun temp765_174 () (_ BitVec 64))
(declare-fun temp765_175 () (_ BitVec 64))
(declare-fun temp765_176 () (_ BitVec 64))
(declare-fun temp765_177 () (_ BitVec 64))
(declare-fun temp765_178 () (_ BitVec 64))
(declare-fun temp765_179 () (_ BitVec 64))
(declare-fun temp765_180 () (_ BitVec 64))
(declare-fun temp765_181 () (_ BitVec 64))
(declare-fun temp765_182 () (_ BitVec 64))
(declare-fun temp765_183 () (_ BitVec 64))
(declare-fun temp765_184 () (_ BitVec 64))
(declare-fun temp765_185 () (_ BitVec 64))
(declare-fun temp765_186 () (_ BitVec 64))
(declare-fun temp765_187 () (_ BitVec 64))
(declare-fun temp765_188 () (_ BitVec 64))
(declare-fun temp765_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp765_190 () (_ BitVec 64))
(declare-fun temp765_192 () (_ BitVec 64))
(declare-fun temp765_193 () (_ BitVec 64))
(declare-fun temp765_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp765_194 () (_ BitVec 64))
(declare-fun temp765_195 () (_ BitVec 64))
(declare-fun temp765_197 () (_ BitVec 64))
(declare-fun temp765_198 () (_ BitVec 64))
(declare-fun temp765_196 () (_ BitVec 64))
(declare-fun temp765_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp765_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp765_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp765_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp765_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp765_204 () (_ BitVec 64))
(declare-fun temp765_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp765_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp765_207 () (_ BitVec 64))
(declare-fun temp765_208 () (_ BitVec 64))
(declare-fun temp765_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp765_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp765_211 () (_ BitVec 64))
(declare-fun temp765_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp765_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp765_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp765_216 () (_ BitVec 64))
(declare-fun temp765_215 () (_ BitVec 64))
(declare-fun temp765_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp765_218 () (_ BitVec 64))
(declare-fun temp765_219 () (_ BitVec 64))
(declare-fun temp765_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp765_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp765_222 () (_ BitVec 64))
(declare-fun temp765_223 () (_ BitVec 64))
(assert (= temp765_1 #x0000000000000001))
(assert (= var77203 temp765_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp765_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp765_2)))
(assert (= temp765_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp765_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp765_4 #x0000000000000000))
(assert (= var210941 temp765_4))
(assert (= temp765_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp765_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp765_6 #x0000000000000000))
(assert (= var210986 temp765_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp765_7 #x0000000000000000))
(assert (= temp765_8 temp765_7))
(assert (= temp765_9 (select ARGNAME_padding_NAMEEND_VAL temp765_8)))
(assert (= temp765_10 #x0000000000000001))
(assert (= temp765_11 temp765_10))
(assert (= temp765_12 (select ARGNAME_padding_NAMEEND_VAL temp765_11)))
(assert (= temp765_13 #x0000000000000002))
(assert (= temp765_14 temp765_13))
(assert (= temp765_15 (select ARGNAME_padding_NAMEEND_VAL temp765_14)))
(assert (= temp765_16 #x0000000000000003))
(assert (= temp765_17 temp765_16))
(assert (= temp765_18 (select ARGNAME_padding_NAMEEND_VAL temp765_17)))
(assert (= temp765_19 #x0000000000000004))
(assert (= temp765_20 temp765_19))
(assert (= temp765_21 (select ARGNAME_padding_NAMEEND_VAL temp765_20)))
(assert (= temp765_22 #x0000000000000005))
(assert (= temp765_23 temp765_22))
(assert (= temp765_24 (select ARGNAME_padding_NAMEEND_VAL temp765_23)))
(assert (= temp765_25 #x0000000000000000))
(assert (= temp765_26 #x0000000000000000))
(assert (= temp765_27 temp765_26))
(assert (= temp765_28 (select ARGNAME_padding_NAMEEND_VAL temp765_27)))
(assert (= temp765_29 #x0000000000000000))
(assert (= temp765_30 #x0000000000000001))
(assert (= temp765_31 temp765_30))
(assert (= temp765_32 (select ARGNAME_padding_NAMEEND_VAL temp765_31)))
(assert (= temp765_33 #x0000000000000000))
(assert (= temp765_34 #x0000000000000002))
(assert (= temp765_35 temp765_34))
(assert (= temp765_36 (select ARGNAME_padding_NAMEEND_VAL temp765_35)))
(assert (= temp765_37 #x0000000000000000))
(assert (= temp765_38 #x0000000000000003))
(assert (= temp765_39 temp765_38))
(assert (= temp765_40 (select ARGNAME_padding_NAMEEND_VAL temp765_39)))
(assert (= temp765_41 #x0000000000000000))
(assert (= temp765_42 #x0000000000000004))
(assert (= temp765_43 temp765_42))
(assert (= temp765_44 (select ARGNAME_padding_NAMEEND_VAL temp765_43)))
(assert (= temp765_45 #x0000000000000000))
(assert (= temp765_46 #x0000000000000005))
(assert (= temp765_47 temp765_46))
(assert (= temp765_48 (select ARGNAME_padding_NAMEEND_VAL temp765_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp765_28 temp765_25)
             (bvslt temp765_32 temp765_29)
             (bvslt temp765_36 temp765_33)
             (bvslt temp765_40 temp765_37)
             (bvslt temp765_44 temp765_41)
             (bvslt temp765_48 temp765_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp765_49 #x0000000000000000))
(assert (= var1191714 temp765_49))
(assert (= temp765_50 #x0000000000000000))
(assert (= temp765_51 temp765_50))
(assert (= temp765_52 (select ARGNAME_output_padding_NAMEEND_VAL temp765_51)))
(assert (= temp765_53 #x0000000000000001))
(assert (= temp765_54 temp765_53))
(assert (= temp765_55 (select ARGNAME_output_padding_NAMEEND_VAL temp765_54)))
(assert (= temp765_56 #x0000000000000002))
(assert (= temp765_57 temp765_56))
(assert (= temp765_58 (select ARGNAME_output_padding_NAMEEND_VAL temp765_57)))
(assert (= temp765_59 #x0000000000000003))
(assert (= temp765_60 temp765_59))
(assert (= temp765_61 (select ARGNAME_output_padding_NAMEEND_VAL temp765_60)))
(assert (= temp765_62 #x0000000000000004))
(assert (= temp765_63 temp765_62))
(assert (= temp765_64 (select ARGNAME_output_padding_NAMEEND_VAL temp765_63)))
(assert (= temp765_65 #x0000000000000005))
(assert (= temp765_66 temp765_65))
(assert (= temp765_67 (select ARGNAME_output_padding_NAMEEND_VAL temp765_66)))
(assert (= temp765_68 #x0000000000000000))
(assert (= temp765_69 #x0000000000000000))
(assert (= temp765_70 temp765_69))
(assert (= temp765_71 (select ARGNAME_output_padding_NAMEEND_VAL temp765_70)))
(assert (= temp765_72 #x0000000000000000))
(assert (= temp765_73 #x0000000000000001))
(assert (= temp765_74 temp765_73))
(assert (= temp765_75 (select ARGNAME_output_padding_NAMEEND_VAL temp765_74)))
(assert (= temp765_76 #x0000000000000000))
(assert (= temp765_77 #x0000000000000002))
(assert (= temp765_78 temp765_77))
(assert (= temp765_79 (select ARGNAME_output_padding_NAMEEND_VAL temp765_78)))
(assert (= temp765_80 #x0000000000000000))
(assert (= temp765_81 #x0000000000000003))
(assert (= temp765_82 temp765_81))
(assert (= temp765_83 (select ARGNAME_output_padding_NAMEEND_VAL temp765_82)))
(assert (= temp765_84 #x0000000000000000))
(assert (= temp765_85 #x0000000000000004))
(assert (= temp765_86 temp765_85))
(assert (= temp765_87 (select ARGNAME_output_padding_NAMEEND_VAL temp765_86)))
(assert (= temp765_88 #x0000000000000000))
(assert (= temp765_89 #x0000000000000005))
(assert (= temp765_90 temp765_89))
(assert (= temp765_91 (select ARGNAME_output_padding_NAMEEND_VAL temp765_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp765_71 temp765_68)
             (bvslt temp765_75 temp765_72)
             (bvslt temp765_79 temp765_76)
             (bvslt temp765_83 temp765_80)
             (bvslt temp765_87 temp765_84)
             (bvslt temp765_91 temp765_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp765_92 #x0000000000000000))
(assert (= var1191725 temp765_92))
(assert (= temp765_93 #x0000000000000000))
(assert (= temp765_94 temp765_93))
(assert (= temp765_95 (select ARGNAME_stride_NAMEEND_VAL temp765_94)))
(assert (= temp765_96 #x0000000000000001))
(assert (= temp765_97 temp765_96))
(assert (= temp765_98 (select ARGNAME_stride_NAMEEND_VAL temp765_97)))
(assert (= temp765_99 #x0000000000000002))
(assert (= temp765_100 temp765_99))
(assert (= temp765_101 (select ARGNAME_stride_NAMEEND_VAL temp765_100)))
(assert (= temp765_102 #x0000000000000003))
(assert (= temp765_103 temp765_102))
(assert (= temp765_104 (select ARGNAME_stride_NAMEEND_VAL temp765_103)))
(assert (= temp765_105 #x0000000000000004))
(assert (= temp765_106 temp765_105))
(assert (= temp765_107 (select ARGNAME_stride_NAMEEND_VAL temp765_106)))
(assert (= temp765_108 #x0000000000000005))
(assert (= temp765_109 temp765_108))
(assert (= temp765_110 (select ARGNAME_stride_NAMEEND_VAL temp765_109)))
(assert (= temp765_111 #x0000000000000000))
(assert (= temp765_112 #x0000000000000000))
(assert (= temp765_113 temp765_112))
(assert (= temp765_114 (select ARGNAME_stride_NAMEEND_VAL temp765_113)))
(assert (= temp765_115 #x0000000000000000))
(assert (= temp765_116 #x0000000000000001))
(assert (= temp765_117 temp765_116))
(assert (= temp765_118 (select ARGNAME_stride_NAMEEND_VAL temp765_117)))
(assert (= temp765_119 #x0000000000000000))
(assert (= temp765_120 #x0000000000000002))
(assert (= temp765_121 temp765_120))
(assert (= temp765_122 (select ARGNAME_stride_NAMEEND_VAL temp765_121)))
(assert (= temp765_123 #x0000000000000000))
(assert (= temp765_124 #x0000000000000003))
(assert (= temp765_125 temp765_124))
(assert (= temp765_126 (select ARGNAME_stride_NAMEEND_VAL temp765_125)))
(assert (= temp765_127 #x0000000000000000))
(assert (= temp765_128 #x0000000000000004))
(assert (= temp765_129 temp765_128))
(assert (= temp765_130 (select ARGNAME_stride_NAMEEND_VAL temp765_129)))
(assert (= temp765_131 #x0000000000000000))
(assert (= temp765_132 #x0000000000000005))
(assert (= temp765_133 temp765_132))
(assert (= temp765_134 (select ARGNAME_stride_NAMEEND_VAL temp765_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp765_114 temp765_111)
             (bvsle temp765_118 temp765_115)
             (bvsle temp765_122 temp765_119)
             (bvsle temp765_126 temp765_123)
             (bvsle temp765_130 temp765_127)
             (bvsle temp765_134 temp765_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp765_135 #x0000000000000000))
(assert (= var1191735 temp765_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp765_136 #x0000000000000001))
(assert (= var1191747 temp765_136))
(assert (= temp765_137 #x0000000000000000))
(assert (= var1179826 temp765_137))
(assert (= temp765_138 #x0000000000000000))
(assert (= temp765_139 temp765_138))
(assert (= temp765_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp765_139)))
(assert (= temp765_141 #x0000000000000001))
(assert (= temp765_142 temp765_141))
(assert (= temp765_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp765_142)))
(assert (= temp765_144 #x0000000000000002))
(assert (= temp765_145 temp765_144))
(assert (= temp765_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp765_145)))
(assert (= temp765_147 #x0000000000000003))
(assert (= temp765_148 temp765_147))
(assert (= temp765_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp765_148)))
(assert (= temp765_150 #x0000000000000004))
(assert (= temp765_151 temp765_150))
(assert (= temp765_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp765_151)))
(assert (= temp765_153 #x0000000000000005))
(assert (= temp765_154 temp765_153))
(assert (= temp765_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp765_154)))
(assert (= temp765_157 var1179826))
(assert (= temp765_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp765_157)))
(assert (= temp765_156 temp765_158))
(assert (= var1191780
   (ite (bvslt temp765_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp765_159 #x0000000000000000))
(assert (= var1191780 temp765_159))
(assert (= temp765_160 #x0000000000000000))
(assert (= var1179826 temp765_160))
(assert (= temp765_162 var1179826))
(assert (= temp765_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp765_162)))
(assert (= temp765_161 temp765_163))
(assert (= var1191802 (bvsmod temp765_161 ARGNAME_groups_NAMEEND)))
(assert (= temp765_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp765_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp765_165 #x0000000000000001))
(assert (= var1191803 temp765_165))
(assert (= temp765_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp765_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp765_167 #x0000000000000001))
(assert (= var1191823 temp765_167))
(assert (= temp765_168 #x0000000000000001))
(assert (= var1180714 temp765_168))
(assert (= temp765_169 #x0000000000000000))
(assert (= temp765_170 temp765_169))
(assert (= temp765_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp765_170)))
(assert (= temp765_172 #x0000000000000001))
(assert (= temp765_173 temp765_172))
(assert (= temp765_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp765_173)))
(assert (= temp765_175 #x0000000000000002))
(assert (= temp765_176 temp765_175))
(assert (= temp765_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp765_176)))
(assert (= temp765_178 #x0000000000000003))
(assert (= temp765_179 temp765_178))
(assert (= temp765_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp765_179)))
(assert (= temp765_181 #x0000000000000004))
(assert (= temp765_182 temp765_181))
(assert (= temp765_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp765_182)))
(assert (= temp765_184 #x0000000000000005))
(assert (= temp765_185 temp765_184))
(assert (= temp765_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp765_185)))
(assert (= temp765_187 #x0000000000000000))
(assert (= temp765_188
   (ite (bvslt var1180714 temp765_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp765_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp765_188)))
(assert (= var1191831 temp765_189))
(assert (bvslt (ite (bvslt var1180714 temp765_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp765_190 #x0000000000000001))
(assert (= var1180714 temp765_190))
(assert (= temp765_192 var1180714))
(assert (= temp765_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp765_192)))
(assert (= temp765_191 temp765_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp765_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp765_194 #x0000000000000001))
(assert (= var1191836 temp765_194))
(assert (= temp765_195 #x0000000000000000))
(assert (= var1179826 temp765_195))
(assert (= temp765_197 var1179826))
(assert (= temp765_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp765_197)))
(assert (= temp765_196 temp765_198))
(assert (= temp765_199 #x0000000000000002))
(assert (= var1586025 temp765_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp765_200 #x0000000000000001))
(assert (= var1191993 temp765_200))
(assert (= temp765_201 #x0000000000000001))
(assert (= var2700303 temp765_201))
(assert (= temp765_202 #x0000000000000001))
(assert (= var2962447 temp765_202))
(assert (= temp765_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp765_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp765_204 #x0000000000000001))
(assert (= var211058 temp765_204))
(assert (= temp765_205 #x0000000000000001))
(assert (= var211188 temp765_205))
(assert (= var3879401 var211188))
(assert (= temp765_206 #x0000000000000000))
(assert (= var3866802 temp765_206))
(assert (= temp765_207 #x0000000000000000))
(assert (= temp765_208
   (ite (bvslt var3866802 temp765_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp765_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp765_208)))
(assert (= var3879420 temp765_209))
(assert (bvslt (ite (bvslt var3866802 temp765_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp765_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp765_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp765_211 #x0000000000000001))
(assert (= var3879421 temp765_211))
(assert (= temp765_212 #x0000000000000000))
(assert (= var4079423 temp765_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp765_213 #x0000000000000002))
(assert (= var4208259 temp765_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp765_214 #x0000000000000000))
(assert (= var4273820 temp765_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp765_216 #xffffffffffffffff))
(assert (= temp765_215 temp765_216))
(assert (= temp765_217 #x0000000000000001))
(assert (= var197674 temp765_217))
(assert (= temp765_218 #x0000000000000000))
(assert (= temp765_219
   (ite (bvslt var197674 temp765_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp765_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp765_219)))
(assert (= var211595 temp765_220))
(assert (bvslt (ite (bvslt var197674 temp765_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp765_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp765_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp765_222 #x0000000000000000))
(assert (= var211596 temp765_222))
(assert (= temp765_223 #x0000000000000001))
(assert (= var211058 temp765_223))
(model-add temp765_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp765_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp765_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp765_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





