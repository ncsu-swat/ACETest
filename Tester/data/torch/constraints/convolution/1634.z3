(declare-fun temp10973_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10973_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10973_3 () (_ BitVec 64))
(declare-fun temp10973_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10973_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10973_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10973_7 () (_ BitVec 64))
(declare-fun temp10973_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10973_9 () (_ BitVec 64))
(declare-fun temp10973_10 () (_ BitVec 64))
(declare-fun temp10973_11 () (_ BitVec 64))
(declare-fun temp10973_12 () (_ BitVec 64))
(declare-fun temp10973_13 () (_ BitVec 64))
(declare-fun temp10973_14 () (_ BitVec 64))
(declare-fun temp10973_15 () (_ BitVec 64))
(declare-fun temp10973_16 () (_ BitVec 64))
(declare-fun temp10973_17 () (_ BitVec 64))
(declare-fun temp10973_18 () (_ BitVec 64))
(declare-fun temp10973_19 () (_ BitVec 64))
(declare-fun temp10973_20 () (_ BitVec 64))
(declare-fun temp10973_21 () (_ BitVec 64))
(declare-fun temp10973_22 () (_ BitVec 64))
(declare-fun temp10973_23 () (_ BitVec 64))
(declare-fun temp10973_24 () (_ BitVec 64))
(declare-fun temp10973_25 () (_ BitVec 64))
(declare-fun temp10973_26 () (_ BitVec 64))
(declare-fun temp10973_27 () (_ BitVec 64))
(declare-fun temp10973_28 () (_ BitVec 64))
(declare-fun temp10973_29 () (_ BitVec 64))
(declare-fun temp10973_30 () (_ BitVec 64))
(declare-fun temp10973_31 () (_ BitVec 64))
(declare-fun temp10973_32 () (_ BitVec 64))
(declare-fun temp10973_33 () (_ BitVec 64))
(declare-fun temp10973_34 () (_ BitVec 64))
(declare-fun temp10973_35 () (_ BitVec 64))
(declare-fun temp10973_36 () (_ BitVec 64))
(declare-fun temp10973_37 () (_ BitVec 64))
(declare-fun temp10973_38 () (_ BitVec 64))
(declare-fun temp10973_39 () (_ BitVec 64))
(declare-fun temp10973_40 () (_ BitVec 64))
(declare-fun temp10973_41 () (_ BitVec 64))
(declare-fun temp10973_42 () (_ BitVec 64))
(declare-fun temp10973_43 () (_ BitVec 64))
(declare-fun temp10973_44 () (_ BitVec 64))
(declare-fun temp10973_45 () (_ BitVec 64))
(declare-fun temp10973_46 () (_ BitVec 64))
(declare-fun temp10973_47 () (_ BitVec 64))
(declare-fun temp10973_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10973_49 () (_ BitVec 64))
(declare-fun temp10973_50 () (_ BitVec 64))
(declare-fun temp10973_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10973_52 () (_ BitVec 64))
(declare-fun temp10973_53 () (_ BitVec 64))
(declare-fun temp10973_54 () (_ BitVec 64))
(declare-fun temp10973_55 () (_ BitVec 64))
(declare-fun temp10973_56 () (_ BitVec 64))
(declare-fun temp10973_57 () (_ BitVec 64))
(declare-fun temp10973_58 () (_ BitVec 64))
(declare-fun temp10973_59 () (_ BitVec 64))
(declare-fun temp10973_60 () (_ BitVec 64))
(declare-fun temp10973_61 () (_ BitVec 64))
(declare-fun temp10973_62 () (_ BitVec 64))
(declare-fun temp10973_63 () (_ BitVec 64))
(declare-fun temp10973_64 () (_ BitVec 64))
(declare-fun temp10973_65 () (_ BitVec 64))
(declare-fun temp10973_66 () (_ BitVec 64))
(declare-fun temp10973_67 () (_ BitVec 64))
(declare-fun temp10973_68 () (_ BitVec 64))
(declare-fun temp10973_69 () (_ BitVec 64))
(declare-fun temp10973_70 () (_ BitVec 64))
(declare-fun temp10973_71 () (_ BitVec 64))
(declare-fun temp10973_72 () (_ BitVec 64))
(declare-fun temp10973_73 () (_ BitVec 64))
(declare-fun temp10973_74 () (_ BitVec 64))
(declare-fun temp10973_75 () (_ BitVec 64))
(declare-fun temp10973_76 () (_ BitVec 64))
(declare-fun temp10973_77 () (_ BitVec 64))
(declare-fun temp10973_78 () (_ BitVec 64))
(declare-fun temp10973_79 () (_ BitVec 64))
(declare-fun temp10973_80 () (_ BitVec 64))
(declare-fun temp10973_81 () (_ BitVec 64))
(declare-fun temp10973_82 () (_ BitVec 64))
(declare-fun temp10973_83 () (_ BitVec 64))
(declare-fun temp10973_84 () (_ BitVec 64))
(declare-fun temp10973_85 () (_ BitVec 64))
(declare-fun temp10973_86 () (_ BitVec 64))
(declare-fun temp10973_87 () (_ BitVec 64))
(declare-fun temp10973_88 () (_ BitVec 64))
(declare-fun temp10973_89 () (_ BitVec 64))
(declare-fun temp10973_90 () (_ BitVec 64))
(declare-fun temp10973_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10973_92 () (_ BitVec 64))
(declare-fun temp10973_93 () (_ BitVec 64))
(declare-fun temp10973_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10973_95 () (_ BitVec 64))
(declare-fun temp10973_96 () (_ BitVec 64))
(declare-fun temp10973_97 () (_ BitVec 64))
(declare-fun temp10973_98 () (_ BitVec 64))
(declare-fun temp10973_99 () (_ BitVec 64))
(declare-fun temp10973_100 () (_ BitVec 64))
(declare-fun temp10973_101 () (_ BitVec 64))
(declare-fun temp10973_102 () (_ BitVec 64))
(declare-fun temp10973_103 () (_ BitVec 64))
(declare-fun temp10973_104 () (_ BitVec 64))
(declare-fun temp10973_105 () (_ BitVec 64))
(declare-fun temp10973_106 () (_ BitVec 64))
(declare-fun temp10973_107 () (_ BitVec 64))
(declare-fun temp10973_108 () (_ BitVec 64))
(declare-fun temp10973_109 () (_ BitVec 64))
(declare-fun temp10973_110 () (_ BitVec 64))
(declare-fun temp10973_111 () (_ BitVec 64))
(declare-fun temp10973_112 () (_ BitVec 64))
(declare-fun temp10973_113 () (_ BitVec 64))
(declare-fun temp10973_114 () (_ BitVec 64))
(declare-fun temp10973_115 () (_ BitVec 64))
(declare-fun temp10973_116 () (_ BitVec 64))
(declare-fun temp10973_117 () (_ BitVec 64))
(declare-fun temp10973_118 () (_ BitVec 64))
(declare-fun temp10973_119 () (_ BitVec 64))
(declare-fun temp10973_120 () (_ BitVec 64))
(declare-fun temp10973_121 () (_ BitVec 64))
(declare-fun temp10973_122 () (_ BitVec 64))
(declare-fun temp10973_123 () (_ BitVec 64))
(declare-fun temp10973_124 () (_ BitVec 64))
(declare-fun temp10973_125 () (_ BitVec 64))
(declare-fun temp10973_126 () (_ BitVec 64))
(declare-fun temp10973_127 () (_ BitVec 64))
(declare-fun temp10973_128 () (_ BitVec 64))
(declare-fun temp10973_129 () (_ BitVec 64))
(declare-fun temp10973_130 () (_ BitVec 64))
(declare-fun temp10973_131 () (_ BitVec 64))
(declare-fun temp10973_132 () (_ BitVec 64))
(declare-fun temp10973_133 () (_ BitVec 64))
(declare-fun temp10973_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10973_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10973_136 () (_ BitVec 64))
(declare-fun temp10973_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10973_138 () (_ BitVec 64))
(declare-fun temp10973_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10973_140 () (_ BitVec 64))
(declare-fun temp10973_141 () (_ BitVec 64))
(declare-fun temp10973_142 () (_ BitVec 64))
(declare-fun temp10973_143 () (_ BitVec 64))
(declare-fun temp10973_144 () (_ BitVec 64))
(declare-fun temp10973_145 () (_ BitVec 64))
(declare-fun temp10973_146 () (_ BitVec 64))
(declare-fun temp10973_147 () (_ BitVec 64))
(declare-fun temp10973_148 () (_ BitVec 64))
(declare-fun temp10973_149 () (_ BitVec 64))
(declare-fun temp10973_150 () (_ BitVec 64))
(declare-fun temp10973_151 () (_ BitVec 64))
(declare-fun temp10973_152 () (_ BitVec 64))
(declare-fun temp10973_153 () (_ BitVec 64))
(declare-fun temp10973_154 () (_ BitVec 64))
(declare-fun temp10973_155 () (_ BitVec 64))
(declare-fun temp10973_157 () (_ BitVec 64))
(declare-fun temp10973_158 () (_ BitVec 64))
(declare-fun temp10973_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10973_159 () (_ BitVec 64))
(declare-fun temp10973_160 () (_ BitVec 64))
(declare-fun temp10973_162 () (_ BitVec 64))
(declare-fun temp10973_163 () (_ BitVec 64))
(declare-fun temp10973_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10973_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10973_165 () (_ BitVec 64))
(declare-fun temp10973_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10973_167 () (_ BitVec 64))
(declare-fun temp10973_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10973_169 () (_ BitVec 64))
(declare-fun temp10973_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10973_171 () (_ BitVec 64))
(declare-fun temp10973_172 () (_ BitVec 64))
(declare-fun temp10973_173 () (_ BitVec 64))
(declare-fun temp10973_174 () (_ BitVec 64))
(declare-fun temp10973_175 () (_ BitVec 64))
(declare-fun temp10973_176 () (_ BitVec 64))
(declare-fun temp10973_177 () (_ BitVec 64))
(declare-fun temp10973_178 () (_ BitVec 64))
(declare-fun temp10973_179 () (_ BitVec 64))
(declare-fun temp10973_180 () (_ BitVec 64))
(declare-fun temp10973_181 () (_ BitVec 64))
(declare-fun temp10973_182 () (_ BitVec 64))
(declare-fun temp10973_183 () (_ BitVec 64))
(declare-fun temp10973_184 () (_ BitVec 64))
(declare-fun temp10973_185 () (_ BitVec 64))
(declare-fun temp10973_186 () (_ BitVec 64))
(declare-fun temp10973_187 () (_ BitVec 64))
(declare-fun temp10973_188 () (_ BitVec 64))
(declare-fun temp10973_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10973_190 () (_ BitVec 64))
(declare-fun temp10973_192 () (_ BitVec 64))
(declare-fun temp10973_193 () (_ BitVec 64))
(declare-fun temp10973_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10973_194 () (_ BitVec 64))
(declare-fun temp10973_195 () (_ BitVec 64))
(declare-fun temp10973_197 () (_ BitVec 64))
(declare-fun temp10973_198 () (_ BitVec 64))
(declare-fun temp10973_196 () (_ BitVec 64))
(declare-fun temp10973_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10973_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10973_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10973_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10973_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10973_204 () (_ BitVec 64))
(declare-fun temp10973_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10973_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10973_207 () (_ BitVec 64))
(declare-fun temp10973_208 () (_ BitVec 64))
(declare-fun temp10973_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10973_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10973_211 () (_ BitVec 64))
(declare-fun temp10973_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10973_213 () (_ BitVec 64))
(declare-fun temp10973_214 () (_ BitVec 64))
(declare-fun temp10973_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10973_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10973_217 () (_ BitVec 64))
(declare-fun temp10973_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10973_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10973_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10973_221 () (_ BitVec 64))
(assert (= temp10973_1 #x0000000000000001))
(assert (= var77203 temp10973_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10973_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10973_2)))
(assert (= temp10973_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10973_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10973_4 #x0000000000000000))
(assert (= var210941 temp10973_4))
(assert (= temp10973_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10973_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10973_6 #x0000000000000000))
(assert (= var210986 temp10973_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10973_7 #x0000000000000000))
(assert (= temp10973_8 temp10973_7))
(assert (= temp10973_9 (select ARGNAME_padding_NAMEEND_VAL temp10973_8)))
(assert (= temp10973_10 #x0000000000000001))
(assert (= temp10973_11 temp10973_10))
(assert (= temp10973_12 (select ARGNAME_padding_NAMEEND_VAL temp10973_11)))
(assert (= temp10973_13 #x0000000000000002))
(assert (= temp10973_14 temp10973_13))
(assert (= temp10973_15 (select ARGNAME_padding_NAMEEND_VAL temp10973_14)))
(assert (= temp10973_16 #x0000000000000003))
(assert (= temp10973_17 temp10973_16))
(assert (= temp10973_18 (select ARGNAME_padding_NAMEEND_VAL temp10973_17)))
(assert (= temp10973_19 #x0000000000000004))
(assert (= temp10973_20 temp10973_19))
(assert (= temp10973_21 (select ARGNAME_padding_NAMEEND_VAL temp10973_20)))
(assert (= temp10973_22 #x0000000000000005))
(assert (= temp10973_23 temp10973_22))
(assert (= temp10973_24 (select ARGNAME_padding_NAMEEND_VAL temp10973_23)))
(assert (= temp10973_25 #x0000000000000000))
(assert (= temp10973_26 #x0000000000000000))
(assert (= temp10973_27 temp10973_26))
(assert (= temp10973_28 (select ARGNAME_padding_NAMEEND_VAL temp10973_27)))
(assert (= temp10973_29 #x0000000000000000))
(assert (= temp10973_30 #x0000000000000001))
(assert (= temp10973_31 temp10973_30))
(assert (= temp10973_32 (select ARGNAME_padding_NAMEEND_VAL temp10973_31)))
(assert (= temp10973_33 #x0000000000000000))
(assert (= temp10973_34 #x0000000000000002))
(assert (= temp10973_35 temp10973_34))
(assert (= temp10973_36 (select ARGNAME_padding_NAMEEND_VAL temp10973_35)))
(assert (= temp10973_37 #x0000000000000000))
(assert (= temp10973_38 #x0000000000000003))
(assert (= temp10973_39 temp10973_38))
(assert (= temp10973_40 (select ARGNAME_padding_NAMEEND_VAL temp10973_39)))
(assert (= temp10973_41 #x0000000000000000))
(assert (= temp10973_42 #x0000000000000004))
(assert (= temp10973_43 temp10973_42))
(assert (= temp10973_44 (select ARGNAME_padding_NAMEEND_VAL temp10973_43)))
(assert (= temp10973_45 #x0000000000000000))
(assert (= temp10973_46 #x0000000000000005))
(assert (= temp10973_47 temp10973_46))
(assert (= temp10973_48 (select ARGNAME_padding_NAMEEND_VAL temp10973_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10973_28 temp10973_25)
             (bvslt temp10973_32 temp10973_29)
             (bvslt temp10973_36 temp10973_33)
             (bvslt temp10973_40 temp10973_37)
             (bvslt temp10973_44 temp10973_41)
             (bvslt temp10973_48 temp10973_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10973_49 #x0000000000000000))
(assert (= var1191714 temp10973_49))
(assert (= temp10973_50 #x0000000000000000))
(assert (= temp10973_51 temp10973_50))
(assert (= temp10973_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10973_51)))
(assert (= temp10973_53 #x0000000000000001))
(assert (= temp10973_54 temp10973_53))
(assert (= temp10973_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10973_54)))
(assert (= temp10973_56 #x0000000000000002))
(assert (= temp10973_57 temp10973_56))
(assert (= temp10973_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10973_57)))
(assert (= temp10973_59 #x0000000000000003))
(assert (= temp10973_60 temp10973_59))
(assert (= temp10973_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10973_60)))
(assert (= temp10973_62 #x0000000000000004))
(assert (= temp10973_63 temp10973_62))
(assert (= temp10973_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10973_63)))
(assert (= temp10973_65 #x0000000000000005))
(assert (= temp10973_66 temp10973_65))
(assert (= temp10973_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10973_66)))
(assert (= temp10973_68 #x0000000000000000))
(assert (= temp10973_69 #x0000000000000000))
(assert (= temp10973_70 temp10973_69))
(assert (= temp10973_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10973_70)))
(assert (= temp10973_72 #x0000000000000000))
(assert (= temp10973_73 #x0000000000000001))
(assert (= temp10973_74 temp10973_73))
(assert (= temp10973_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10973_74)))
(assert (= temp10973_76 #x0000000000000000))
(assert (= temp10973_77 #x0000000000000002))
(assert (= temp10973_78 temp10973_77))
(assert (= temp10973_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10973_78)))
(assert (= temp10973_80 #x0000000000000000))
(assert (= temp10973_81 #x0000000000000003))
(assert (= temp10973_82 temp10973_81))
(assert (= temp10973_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10973_82)))
(assert (= temp10973_84 #x0000000000000000))
(assert (= temp10973_85 #x0000000000000004))
(assert (= temp10973_86 temp10973_85))
(assert (= temp10973_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10973_86)))
(assert (= temp10973_88 #x0000000000000000))
(assert (= temp10973_89 #x0000000000000005))
(assert (= temp10973_90 temp10973_89))
(assert (= temp10973_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10973_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10973_71 temp10973_68)
             (bvslt temp10973_75 temp10973_72)
             (bvslt temp10973_79 temp10973_76)
             (bvslt temp10973_83 temp10973_80)
             (bvslt temp10973_87 temp10973_84)
             (bvslt temp10973_91 temp10973_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10973_92 #x0000000000000000))
(assert (= var1191725 temp10973_92))
(assert (= temp10973_93 #x0000000000000000))
(assert (= temp10973_94 temp10973_93))
(assert (= temp10973_95 (select ARGNAME_stride_NAMEEND_VAL temp10973_94)))
(assert (= temp10973_96 #x0000000000000001))
(assert (= temp10973_97 temp10973_96))
(assert (= temp10973_98 (select ARGNAME_stride_NAMEEND_VAL temp10973_97)))
(assert (= temp10973_99 #x0000000000000002))
(assert (= temp10973_100 temp10973_99))
(assert (= temp10973_101 (select ARGNAME_stride_NAMEEND_VAL temp10973_100)))
(assert (= temp10973_102 #x0000000000000003))
(assert (= temp10973_103 temp10973_102))
(assert (= temp10973_104 (select ARGNAME_stride_NAMEEND_VAL temp10973_103)))
(assert (= temp10973_105 #x0000000000000004))
(assert (= temp10973_106 temp10973_105))
(assert (= temp10973_107 (select ARGNAME_stride_NAMEEND_VAL temp10973_106)))
(assert (= temp10973_108 #x0000000000000005))
(assert (= temp10973_109 temp10973_108))
(assert (= temp10973_110 (select ARGNAME_stride_NAMEEND_VAL temp10973_109)))
(assert (= temp10973_111 #x0000000000000000))
(assert (= temp10973_112 #x0000000000000000))
(assert (= temp10973_113 temp10973_112))
(assert (= temp10973_114 (select ARGNAME_stride_NAMEEND_VAL temp10973_113)))
(assert (= temp10973_115 #x0000000000000000))
(assert (= temp10973_116 #x0000000000000001))
(assert (= temp10973_117 temp10973_116))
(assert (= temp10973_118 (select ARGNAME_stride_NAMEEND_VAL temp10973_117)))
(assert (= temp10973_119 #x0000000000000000))
(assert (= temp10973_120 #x0000000000000002))
(assert (= temp10973_121 temp10973_120))
(assert (= temp10973_122 (select ARGNAME_stride_NAMEEND_VAL temp10973_121)))
(assert (= temp10973_123 #x0000000000000000))
(assert (= temp10973_124 #x0000000000000003))
(assert (= temp10973_125 temp10973_124))
(assert (= temp10973_126 (select ARGNAME_stride_NAMEEND_VAL temp10973_125)))
(assert (= temp10973_127 #x0000000000000000))
(assert (= temp10973_128 #x0000000000000004))
(assert (= temp10973_129 temp10973_128))
(assert (= temp10973_130 (select ARGNAME_stride_NAMEEND_VAL temp10973_129)))
(assert (= temp10973_131 #x0000000000000000))
(assert (= temp10973_132 #x0000000000000005))
(assert (= temp10973_133 temp10973_132))
(assert (= temp10973_134 (select ARGNAME_stride_NAMEEND_VAL temp10973_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10973_114 temp10973_111)
             (bvsle temp10973_118 temp10973_115)
             (bvsle temp10973_122 temp10973_119)
             (bvsle temp10973_126 temp10973_123)
             (bvsle temp10973_130 temp10973_127)
             (bvsle temp10973_134 temp10973_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10973_135 #x0000000000000000))
(assert (= var1191735 temp10973_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10973_136 #x0000000000000001))
(assert (= var1191747 temp10973_136))
(assert (= temp10973_137 #x0000000000000000))
(assert (= var1179826 temp10973_137))
(assert (= temp10973_138 #x0000000000000000))
(assert (= temp10973_139 temp10973_138))
(assert (= temp10973_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10973_139)))
(assert (= temp10973_141 #x0000000000000001))
(assert (= temp10973_142 temp10973_141))
(assert (= temp10973_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10973_142)))
(assert (= temp10973_144 #x0000000000000002))
(assert (= temp10973_145 temp10973_144))
(assert (= temp10973_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10973_145)))
(assert (= temp10973_147 #x0000000000000003))
(assert (= temp10973_148 temp10973_147))
(assert (= temp10973_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10973_148)))
(assert (= temp10973_150 #x0000000000000004))
(assert (= temp10973_151 temp10973_150))
(assert (= temp10973_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10973_151)))
(assert (= temp10973_153 #x0000000000000005))
(assert (= temp10973_154 temp10973_153))
(assert (= temp10973_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10973_154)))
(assert (= temp10973_157 var1179826))
(assert (= temp10973_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10973_157)))
(assert (= temp10973_156 temp10973_158))
(assert (= var1191780
   (ite (bvslt temp10973_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10973_159 #x0000000000000000))
(assert (= var1191780 temp10973_159))
(assert (= temp10973_160 #x0000000000000000))
(assert (= var1179826 temp10973_160))
(assert (= temp10973_162 var1179826))
(assert (= temp10973_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10973_162)))
(assert (= temp10973_161 temp10973_163))
(assert (= var1191802 (bvsmod temp10973_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10973_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10973_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10973_165 #x0000000000000001))
(assert (= var1191803 temp10973_165))
(assert (= temp10973_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10973_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10973_167 #x0000000000000001))
(assert (= var1191823 temp10973_167))
(assert (= temp10973_168 #x0000000000000001))
(assert (= var1180714 temp10973_168))
(assert (= temp10973_169 #x0000000000000000))
(assert (= temp10973_170 temp10973_169))
(assert (= temp10973_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10973_170)))
(assert (= temp10973_172 #x0000000000000001))
(assert (= temp10973_173 temp10973_172))
(assert (= temp10973_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10973_173)))
(assert (= temp10973_175 #x0000000000000002))
(assert (= temp10973_176 temp10973_175))
(assert (= temp10973_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10973_176)))
(assert (= temp10973_178 #x0000000000000003))
(assert (= temp10973_179 temp10973_178))
(assert (= temp10973_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10973_179)))
(assert (= temp10973_181 #x0000000000000004))
(assert (= temp10973_182 temp10973_181))
(assert (= temp10973_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10973_182)))
(assert (= temp10973_184 #x0000000000000005))
(assert (= temp10973_185 temp10973_184))
(assert (= temp10973_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10973_185)))
(assert (= temp10973_187 #x0000000000000000))
(assert (= temp10973_188
   (ite (bvslt var1180714 temp10973_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10973_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10973_188)))
(assert (= var1191831 temp10973_189))
(assert (bvslt (ite (bvslt var1180714 temp10973_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10973_190 #x0000000000000001))
(assert (= var1180714 temp10973_190))
(assert (= temp10973_192 var1180714))
(assert (= temp10973_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10973_192)))
(assert (= temp10973_191 temp10973_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10973_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10973_194 #x0000000000000001))
(assert (= var1191836 temp10973_194))
(assert (= temp10973_195 #x0000000000000000))
(assert (= var1179826 temp10973_195))
(assert (= temp10973_197 var1179826))
(assert (= temp10973_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10973_197)))
(assert (= temp10973_196 temp10973_198))
(assert (= temp10973_199 #x0000000000000002))
(assert (= var1586025 temp10973_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10973_200 #x0000000000000001))
(assert (= var1191993 temp10973_200))
(assert (= temp10973_201 #x0000000000000001))
(assert (= var2700303 temp10973_201))
(assert (= temp10973_202 #x0000000000000001))
(assert (= var2962447 temp10973_202))
(assert (= temp10973_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10973_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10973_204 #x0000000000000001))
(assert (= var211058 temp10973_204))
(assert (= temp10973_205 #x0000000000000001))
(assert (= var211188 temp10973_205))
(assert (= var3879401 var211188))
(assert (= temp10973_206 #x0000000000000000))
(assert (= var3866802 temp10973_206))
(assert (= temp10973_207 #x0000000000000000))
(assert (= temp10973_208
   (ite (bvslt var3866802 temp10973_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10973_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10973_208)))
(assert (= var3879420 temp10973_209))
(assert (bvslt (ite (bvslt var3866802 temp10973_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10973_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10973_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10973_211 #x0000000000000000))
(assert (= var3879421 temp10973_211))
(assert (= temp10973_212 #x0000000000000001))
(assert (= var3867690 temp10973_212))
(assert (= temp10973_213 #x0000000000000000))
(assert (= temp10973_214
   (ite (bvslt var3867690 temp10973_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10973_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10973_214)))
(assert (= var3879423 temp10973_215))
(assert (bvslt (ite (bvslt var3867690 temp10973_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10973_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10973_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10973_217 #x0000000000000001))
(assert (= var3879424 temp10973_217))
(assert (= temp10973_218 #x0000000000000000))
(assert (= var4133117 temp10973_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10973_219 #x0000000000000002))
(assert (= var4339331 temp10973_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10973_220 #x0000000000000000))
(assert (= var4404892 temp10973_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10973_221 #x0000000000000001))
(assert (= var211058 temp10973_221))
(model-add temp10973_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10973_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10973_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10973_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





