(declare-fun temp1309_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1309_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1309_3 () (_ BitVec 64))
(declare-fun temp1309_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1309_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1309_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1309_7 () (_ BitVec 64))
(declare-fun temp1309_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1309_9 () (_ BitVec 64))
(declare-fun temp1309_10 () (_ BitVec 64))
(declare-fun temp1309_11 () (_ BitVec 64))
(declare-fun temp1309_12 () (_ BitVec 64))
(declare-fun temp1309_13 () (_ BitVec 64))
(declare-fun temp1309_14 () (_ BitVec 64))
(declare-fun temp1309_15 () (_ BitVec 64))
(declare-fun temp1309_16 () (_ BitVec 64))
(declare-fun temp1309_17 () (_ BitVec 64))
(declare-fun temp1309_18 () (_ BitVec 64))
(declare-fun temp1309_19 () (_ BitVec 64))
(declare-fun temp1309_20 () (_ BitVec 64))
(declare-fun temp1309_21 () (_ BitVec 64))
(declare-fun temp1309_22 () (_ BitVec 64))
(declare-fun temp1309_23 () (_ BitVec 64))
(declare-fun temp1309_24 () (_ BitVec 64))
(declare-fun temp1309_25 () (_ BitVec 64))
(declare-fun temp1309_26 () (_ BitVec 64))
(declare-fun temp1309_27 () (_ BitVec 64))
(declare-fun temp1309_28 () (_ BitVec 64))
(declare-fun temp1309_29 () (_ BitVec 64))
(declare-fun temp1309_30 () (_ BitVec 64))
(declare-fun temp1309_31 () (_ BitVec 64))
(declare-fun temp1309_32 () (_ BitVec 64))
(declare-fun temp1309_33 () (_ BitVec 64))
(declare-fun temp1309_34 () (_ BitVec 64))
(declare-fun temp1309_35 () (_ BitVec 64))
(declare-fun temp1309_36 () (_ BitVec 64))
(declare-fun temp1309_37 () (_ BitVec 64))
(declare-fun temp1309_38 () (_ BitVec 64))
(declare-fun temp1309_39 () (_ BitVec 64))
(declare-fun temp1309_40 () (_ BitVec 64))
(declare-fun temp1309_41 () (_ BitVec 64))
(declare-fun temp1309_42 () (_ BitVec 64))
(declare-fun temp1309_43 () (_ BitVec 64))
(declare-fun temp1309_44 () (_ BitVec 64))
(declare-fun temp1309_45 () (_ BitVec 64))
(declare-fun temp1309_46 () (_ BitVec 64))
(declare-fun temp1309_47 () (_ BitVec 64))
(declare-fun temp1309_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1309_49 () (_ BitVec 64))
(declare-fun temp1309_50 () (_ BitVec 64))
(declare-fun temp1309_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1309_52 () (_ BitVec 64))
(declare-fun temp1309_53 () (_ BitVec 64))
(declare-fun temp1309_54 () (_ BitVec 64))
(declare-fun temp1309_55 () (_ BitVec 64))
(declare-fun temp1309_56 () (_ BitVec 64))
(declare-fun temp1309_57 () (_ BitVec 64))
(declare-fun temp1309_58 () (_ BitVec 64))
(declare-fun temp1309_59 () (_ BitVec 64))
(declare-fun temp1309_60 () (_ BitVec 64))
(declare-fun temp1309_61 () (_ BitVec 64))
(declare-fun temp1309_62 () (_ BitVec 64))
(declare-fun temp1309_63 () (_ BitVec 64))
(declare-fun temp1309_64 () (_ BitVec 64))
(declare-fun temp1309_65 () (_ BitVec 64))
(declare-fun temp1309_66 () (_ BitVec 64))
(declare-fun temp1309_67 () (_ BitVec 64))
(declare-fun temp1309_68 () (_ BitVec 64))
(declare-fun temp1309_69 () (_ BitVec 64))
(declare-fun temp1309_70 () (_ BitVec 64))
(declare-fun temp1309_71 () (_ BitVec 64))
(declare-fun temp1309_72 () (_ BitVec 64))
(declare-fun temp1309_73 () (_ BitVec 64))
(declare-fun temp1309_74 () (_ BitVec 64))
(declare-fun temp1309_75 () (_ BitVec 64))
(declare-fun temp1309_76 () (_ BitVec 64))
(declare-fun temp1309_77 () (_ BitVec 64))
(declare-fun temp1309_78 () (_ BitVec 64))
(declare-fun temp1309_79 () (_ BitVec 64))
(declare-fun temp1309_80 () (_ BitVec 64))
(declare-fun temp1309_81 () (_ BitVec 64))
(declare-fun temp1309_82 () (_ BitVec 64))
(declare-fun temp1309_83 () (_ BitVec 64))
(declare-fun temp1309_84 () (_ BitVec 64))
(declare-fun temp1309_85 () (_ BitVec 64))
(declare-fun temp1309_86 () (_ BitVec 64))
(declare-fun temp1309_87 () (_ BitVec 64))
(declare-fun temp1309_88 () (_ BitVec 64))
(declare-fun temp1309_89 () (_ BitVec 64))
(declare-fun temp1309_90 () (_ BitVec 64))
(declare-fun temp1309_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1309_92 () (_ BitVec 64))
(declare-fun temp1309_93 () (_ BitVec 64))
(declare-fun temp1309_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1309_95 () (_ BitVec 64))
(declare-fun temp1309_96 () (_ BitVec 64))
(declare-fun temp1309_97 () (_ BitVec 64))
(declare-fun temp1309_98 () (_ BitVec 64))
(declare-fun temp1309_99 () (_ BitVec 64))
(declare-fun temp1309_100 () (_ BitVec 64))
(declare-fun temp1309_101 () (_ BitVec 64))
(declare-fun temp1309_102 () (_ BitVec 64))
(declare-fun temp1309_103 () (_ BitVec 64))
(declare-fun temp1309_104 () (_ BitVec 64))
(declare-fun temp1309_105 () (_ BitVec 64))
(declare-fun temp1309_106 () (_ BitVec 64))
(declare-fun temp1309_107 () (_ BitVec 64))
(declare-fun temp1309_108 () (_ BitVec 64))
(declare-fun temp1309_109 () (_ BitVec 64))
(declare-fun temp1309_110 () (_ BitVec 64))
(declare-fun temp1309_111 () (_ BitVec 64))
(declare-fun temp1309_112 () (_ BitVec 64))
(declare-fun temp1309_113 () (_ BitVec 64))
(declare-fun temp1309_114 () (_ BitVec 64))
(declare-fun temp1309_115 () (_ BitVec 64))
(declare-fun temp1309_116 () (_ BitVec 64))
(declare-fun temp1309_117 () (_ BitVec 64))
(declare-fun temp1309_118 () (_ BitVec 64))
(declare-fun temp1309_119 () (_ BitVec 64))
(declare-fun temp1309_120 () (_ BitVec 64))
(declare-fun temp1309_121 () (_ BitVec 64))
(declare-fun temp1309_122 () (_ BitVec 64))
(declare-fun temp1309_123 () (_ BitVec 64))
(declare-fun temp1309_124 () (_ BitVec 64))
(declare-fun temp1309_125 () (_ BitVec 64))
(declare-fun temp1309_126 () (_ BitVec 64))
(declare-fun temp1309_127 () (_ BitVec 64))
(declare-fun temp1309_128 () (_ BitVec 64))
(declare-fun temp1309_129 () (_ BitVec 64))
(declare-fun temp1309_130 () (_ BitVec 64))
(declare-fun temp1309_131 () (_ BitVec 64))
(declare-fun temp1309_132 () (_ BitVec 64))
(declare-fun temp1309_133 () (_ BitVec 64))
(declare-fun temp1309_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1309_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1309_136 () (_ BitVec 64))
(declare-fun temp1309_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1309_138 () (_ BitVec 64))
(declare-fun temp1309_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1309_140 () (_ BitVec 64))
(declare-fun temp1309_141 () (_ BitVec 64))
(declare-fun temp1309_142 () (_ BitVec 64))
(declare-fun temp1309_143 () (_ BitVec 64))
(declare-fun temp1309_144 () (_ BitVec 64))
(declare-fun temp1309_145 () (_ BitVec 64))
(declare-fun temp1309_146 () (_ BitVec 64))
(declare-fun temp1309_147 () (_ BitVec 64))
(declare-fun temp1309_148 () (_ BitVec 64))
(declare-fun temp1309_149 () (_ BitVec 64))
(declare-fun temp1309_150 () (_ BitVec 64))
(declare-fun temp1309_151 () (_ BitVec 64))
(declare-fun temp1309_152 () (_ BitVec 64))
(declare-fun temp1309_153 () (_ BitVec 64))
(declare-fun temp1309_154 () (_ BitVec 64))
(declare-fun temp1309_155 () (_ BitVec 64))
(declare-fun temp1309_157 () (_ BitVec 64))
(declare-fun temp1309_158 () (_ BitVec 64))
(declare-fun temp1309_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1309_159 () (_ BitVec 64))
(declare-fun temp1309_160 () (_ BitVec 64))
(declare-fun temp1309_162 () (_ BitVec 64))
(declare-fun temp1309_163 () (_ BitVec 64))
(declare-fun temp1309_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1309_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1309_165 () (_ BitVec 64))
(declare-fun temp1309_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1309_167 () (_ BitVec 64))
(declare-fun temp1309_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1309_169 () (_ BitVec 64))
(declare-fun temp1309_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1309_171 () (_ BitVec 64))
(declare-fun temp1309_172 () (_ BitVec 64))
(declare-fun temp1309_173 () (_ BitVec 64))
(declare-fun temp1309_174 () (_ BitVec 64))
(declare-fun temp1309_175 () (_ BitVec 64))
(declare-fun temp1309_176 () (_ BitVec 64))
(declare-fun temp1309_177 () (_ BitVec 64))
(declare-fun temp1309_178 () (_ BitVec 64))
(declare-fun temp1309_179 () (_ BitVec 64))
(declare-fun temp1309_180 () (_ BitVec 64))
(declare-fun temp1309_181 () (_ BitVec 64))
(declare-fun temp1309_182 () (_ BitVec 64))
(declare-fun temp1309_183 () (_ BitVec 64))
(declare-fun temp1309_184 () (_ BitVec 64))
(declare-fun temp1309_185 () (_ BitVec 64))
(declare-fun temp1309_186 () (_ BitVec 64))
(declare-fun temp1309_187 () (_ BitVec 64))
(declare-fun temp1309_188 () (_ BitVec 64))
(declare-fun temp1309_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1309_190 () (_ BitVec 64))
(declare-fun temp1309_192 () (_ BitVec 64))
(declare-fun temp1309_193 () (_ BitVec 64))
(declare-fun temp1309_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1309_194 () (_ BitVec 64))
(declare-fun temp1309_195 () (_ BitVec 64))
(declare-fun temp1309_197 () (_ BitVec 64))
(declare-fun temp1309_198 () (_ BitVec 64))
(declare-fun temp1309_196 () (_ BitVec 64))
(declare-fun temp1309_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1309_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1309_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1309_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1309_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1309_204 () (_ BitVec 64))
(declare-fun temp1309_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1309_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1309_207 () (_ BitVec 64))
(declare-fun temp1309_208 () (_ BitVec 64))
(declare-fun temp1309_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1309_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1309_211 () (_ BitVec 64))
(declare-fun temp1309_212 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1309_213 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp1309_214 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp1309_216 () (_ BitVec 64))
(declare-fun temp1309_215 () (_ BitVec 64))
(declare-fun temp1309_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp1309_218 () (_ BitVec 64))
(declare-fun temp1309_219 () (_ BitVec 64))
(declare-fun temp1309_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp1309_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp1309_222 () (_ BitVec 64))
(declare-fun temp1309_224 () (_ BitVec 64))
(declare-fun temp1309_223 () (_ BitVec 64))
(declare-fun temp1309_225 () (_ BitVec 64))
(assert (= temp1309_1 #x0000000000000001))
(assert (= var77203 temp1309_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1309_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1309_2)))
(assert (= temp1309_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1309_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1309_4 #x0000000000000000))
(assert (= var210941 temp1309_4))
(assert (= temp1309_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1309_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1309_6 #x0000000000000000))
(assert (= var210986 temp1309_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1309_7 #x0000000000000000))
(assert (= temp1309_8 temp1309_7))
(assert (= temp1309_9 (select ARGNAME_padding_NAMEEND_VAL temp1309_8)))
(assert (= temp1309_10 #x0000000000000001))
(assert (= temp1309_11 temp1309_10))
(assert (= temp1309_12 (select ARGNAME_padding_NAMEEND_VAL temp1309_11)))
(assert (= temp1309_13 #x0000000000000002))
(assert (= temp1309_14 temp1309_13))
(assert (= temp1309_15 (select ARGNAME_padding_NAMEEND_VAL temp1309_14)))
(assert (= temp1309_16 #x0000000000000003))
(assert (= temp1309_17 temp1309_16))
(assert (= temp1309_18 (select ARGNAME_padding_NAMEEND_VAL temp1309_17)))
(assert (= temp1309_19 #x0000000000000004))
(assert (= temp1309_20 temp1309_19))
(assert (= temp1309_21 (select ARGNAME_padding_NAMEEND_VAL temp1309_20)))
(assert (= temp1309_22 #x0000000000000005))
(assert (= temp1309_23 temp1309_22))
(assert (= temp1309_24 (select ARGNAME_padding_NAMEEND_VAL temp1309_23)))
(assert (= temp1309_25 #x0000000000000000))
(assert (= temp1309_26 #x0000000000000000))
(assert (= temp1309_27 temp1309_26))
(assert (= temp1309_28 (select ARGNAME_padding_NAMEEND_VAL temp1309_27)))
(assert (= temp1309_29 #x0000000000000000))
(assert (= temp1309_30 #x0000000000000001))
(assert (= temp1309_31 temp1309_30))
(assert (= temp1309_32 (select ARGNAME_padding_NAMEEND_VAL temp1309_31)))
(assert (= temp1309_33 #x0000000000000000))
(assert (= temp1309_34 #x0000000000000002))
(assert (= temp1309_35 temp1309_34))
(assert (= temp1309_36 (select ARGNAME_padding_NAMEEND_VAL temp1309_35)))
(assert (= temp1309_37 #x0000000000000000))
(assert (= temp1309_38 #x0000000000000003))
(assert (= temp1309_39 temp1309_38))
(assert (= temp1309_40 (select ARGNAME_padding_NAMEEND_VAL temp1309_39)))
(assert (= temp1309_41 #x0000000000000000))
(assert (= temp1309_42 #x0000000000000004))
(assert (= temp1309_43 temp1309_42))
(assert (= temp1309_44 (select ARGNAME_padding_NAMEEND_VAL temp1309_43)))
(assert (= temp1309_45 #x0000000000000000))
(assert (= temp1309_46 #x0000000000000005))
(assert (= temp1309_47 temp1309_46))
(assert (= temp1309_48 (select ARGNAME_padding_NAMEEND_VAL temp1309_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1309_28 temp1309_25)
             (bvslt temp1309_32 temp1309_29)
             (bvslt temp1309_36 temp1309_33)
             (bvslt temp1309_40 temp1309_37)
             (bvslt temp1309_44 temp1309_41)
             (bvslt temp1309_48 temp1309_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1309_49 #x0000000000000000))
(assert (= var1191714 temp1309_49))
(assert (= temp1309_50 #x0000000000000000))
(assert (= temp1309_51 temp1309_50))
(assert (= temp1309_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1309_51)))
(assert (= temp1309_53 #x0000000000000001))
(assert (= temp1309_54 temp1309_53))
(assert (= temp1309_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1309_54)))
(assert (= temp1309_56 #x0000000000000002))
(assert (= temp1309_57 temp1309_56))
(assert (= temp1309_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1309_57)))
(assert (= temp1309_59 #x0000000000000003))
(assert (= temp1309_60 temp1309_59))
(assert (= temp1309_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1309_60)))
(assert (= temp1309_62 #x0000000000000004))
(assert (= temp1309_63 temp1309_62))
(assert (= temp1309_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1309_63)))
(assert (= temp1309_65 #x0000000000000005))
(assert (= temp1309_66 temp1309_65))
(assert (= temp1309_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1309_66)))
(assert (= temp1309_68 #x0000000000000000))
(assert (= temp1309_69 #x0000000000000000))
(assert (= temp1309_70 temp1309_69))
(assert (= temp1309_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1309_70)))
(assert (= temp1309_72 #x0000000000000000))
(assert (= temp1309_73 #x0000000000000001))
(assert (= temp1309_74 temp1309_73))
(assert (= temp1309_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1309_74)))
(assert (= temp1309_76 #x0000000000000000))
(assert (= temp1309_77 #x0000000000000002))
(assert (= temp1309_78 temp1309_77))
(assert (= temp1309_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1309_78)))
(assert (= temp1309_80 #x0000000000000000))
(assert (= temp1309_81 #x0000000000000003))
(assert (= temp1309_82 temp1309_81))
(assert (= temp1309_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1309_82)))
(assert (= temp1309_84 #x0000000000000000))
(assert (= temp1309_85 #x0000000000000004))
(assert (= temp1309_86 temp1309_85))
(assert (= temp1309_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1309_86)))
(assert (= temp1309_88 #x0000000000000000))
(assert (= temp1309_89 #x0000000000000005))
(assert (= temp1309_90 temp1309_89))
(assert (= temp1309_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1309_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1309_71 temp1309_68)
             (bvslt temp1309_75 temp1309_72)
             (bvslt temp1309_79 temp1309_76)
             (bvslt temp1309_83 temp1309_80)
             (bvslt temp1309_87 temp1309_84)
             (bvslt temp1309_91 temp1309_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1309_92 #x0000000000000000))
(assert (= var1191725 temp1309_92))
(assert (= temp1309_93 #x0000000000000000))
(assert (= temp1309_94 temp1309_93))
(assert (= temp1309_95 (select ARGNAME_stride_NAMEEND_VAL temp1309_94)))
(assert (= temp1309_96 #x0000000000000001))
(assert (= temp1309_97 temp1309_96))
(assert (= temp1309_98 (select ARGNAME_stride_NAMEEND_VAL temp1309_97)))
(assert (= temp1309_99 #x0000000000000002))
(assert (= temp1309_100 temp1309_99))
(assert (= temp1309_101 (select ARGNAME_stride_NAMEEND_VAL temp1309_100)))
(assert (= temp1309_102 #x0000000000000003))
(assert (= temp1309_103 temp1309_102))
(assert (= temp1309_104 (select ARGNAME_stride_NAMEEND_VAL temp1309_103)))
(assert (= temp1309_105 #x0000000000000004))
(assert (= temp1309_106 temp1309_105))
(assert (= temp1309_107 (select ARGNAME_stride_NAMEEND_VAL temp1309_106)))
(assert (= temp1309_108 #x0000000000000005))
(assert (= temp1309_109 temp1309_108))
(assert (= temp1309_110 (select ARGNAME_stride_NAMEEND_VAL temp1309_109)))
(assert (= temp1309_111 #x0000000000000000))
(assert (= temp1309_112 #x0000000000000000))
(assert (= temp1309_113 temp1309_112))
(assert (= temp1309_114 (select ARGNAME_stride_NAMEEND_VAL temp1309_113)))
(assert (= temp1309_115 #x0000000000000000))
(assert (= temp1309_116 #x0000000000000001))
(assert (= temp1309_117 temp1309_116))
(assert (= temp1309_118 (select ARGNAME_stride_NAMEEND_VAL temp1309_117)))
(assert (= temp1309_119 #x0000000000000000))
(assert (= temp1309_120 #x0000000000000002))
(assert (= temp1309_121 temp1309_120))
(assert (= temp1309_122 (select ARGNAME_stride_NAMEEND_VAL temp1309_121)))
(assert (= temp1309_123 #x0000000000000000))
(assert (= temp1309_124 #x0000000000000003))
(assert (= temp1309_125 temp1309_124))
(assert (= temp1309_126 (select ARGNAME_stride_NAMEEND_VAL temp1309_125)))
(assert (= temp1309_127 #x0000000000000000))
(assert (= temp1309_128 #x0000000000000004))
(assert (= temp1309_129 temp1309_128))
(assert (= temp1309_130 (select ARGNAME_stride_NAMEEND_VAL temp1309_129)))
(assert (= temp1309_131 #x0000000000000000))
(assert (= temp1309_132 #x0000000000000005))
(assert (= temp1309_133 temp1309_132))
(assert (= temp1309_134 (select ARGNAME_stride_NAMEEND_VAL temp1309_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1309_114 temp1309_111)
             (bvsle temp1309_118 temp1309_115)
             (bvsle temp1309_122 temp1309_119)
             (bvsle temp1309_126 temp1309_123)
             (bvsle temp1309_130 temp1309_127)
             (bvsle temp1309_134 temp1309_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1309_135 #x0000000000000000))
(assert (= var1191735 temp1309_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1309_136 #x0000000000000001))
(assert (= var1191747 temp1309_136))
(assert (= temp1309_137 #x0000000000000000))
(assert (= var1179826 temp1309_137))
(assert (= temp1309_138 #x0000000000000000))
(assert (= temp1309_139 temp1309_138))
(assert (= temp1309_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1309_139)))
(assert (= temp1309_141 #x0000000000000001))
(assert (= temp1309_142 temp1309_141))
(assert (= temp1309_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1309_142)))
(assert (= temp1309_144 #x0000000000000002))
(assert (= temp1309_145 temp1309_144))
(assert (= temp1309_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1309_145)))
(assert (= temp1309_147 #x0000000000000003))
(assert (= temp1309_148 temp1309_147))
(assert (= temp1309_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1309_148)))
(assert (= temp1309_150 #x0000000000000004))
(assert (= temp1309_151 temp1309_150))
(assert (= temp1309_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1309_151)))
(assert (= temp1309_153 #x0000000000000005))
(assert (= temp1309_154 temp1309_153))
(assert (= temp1309_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1309_154)))
(assert (= temp1309_157 var1179826))
(assert (= temp1309_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1309_157)))
(assert (= temp1309_156 temp1309_158))
(assert (= var1191780
   (ite (bvslt temp1309_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1309_159 #x0000000000000000))
(assert (= var1191780 temp1309_159))
(assert (= temp1309_160 #x0000000000000000))
(assert (= var1179826 temp1309_160))
(assert (= temp1309_162 var1179826))
(assert (= temp1309_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1309_162)))
(assert (= temp1309_161 temp1309_163))
(assert (= var1191802 (bvsmod temp1309_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1309_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1309_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1309_165 #x0000000000000001))
(assert (= var1191803 temp1309_165))
(assert (= temp1309_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1309_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1309_167 #x0000000000000001))
(assert (= var1191823 temp1309_167))
(assert (= temp1309_168 #x0000000000000001))
(assert (= var1180714 temp1309_168))
(assert (= temp1309_169 #x0000000000000000))
(assert (= temp1309_170 temp1309_169))
(assert (= temp1309_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1309_170)))
(assert (= temp1309_172 #x0000000000000001))
(assert (= temp1309_173 temp1309_172))
(assert (= temp1309_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1309_173)))
(assert (= temp1309_175 #x0000000000000002))
(assert (= temp1309_176 temp1309_175))
(assert (= temp1309_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1309_176)))
(assert (= temp1309_178 #x0000000000000003))
(assert (= temp1309_179 temp1309_178))
(assert (= temp1309_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1309_179)))
(assert (= temp1309_181 #x0000000000000004))
(assert (= temp1309_182 temp1309_181))
(assert (= temp1309_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1309_182)))
(assert (= temp1309_184 #x0000000000000005))
(assert (= temp1309_185 temp1309_184))
(assert (= temp1309_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1309_185)))
(assert (= temp1309_187 #x0000000000000000))
(assert (= temp1309_188
   (ite (bvslt var1180714 temp1309_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1309_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1309_188)))
(assert (= var1191831 temp1309_189))
(assert (bvslt (ite (bvslt var1180714 temp1309_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1309_190 #x0000000000000001))
(assert (= var1180714 temp1309_190))
(assert (= temp1309_192 var1180714))
(assert (= temp1309_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1309_192)))
(assert (= temp1309_191 temp1309_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1309_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1309_194 #x0000000000000001))
(assert (= var1191836 temp1309_194))
(assert (= temp1309_195 #x0000000000000000))
(assert (= var1179826 temp1309_195))
(assert (= temp1309_197 var1179826))
(assert (= temp1309_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1309_197)))
(assert (= temp1309_196 temp1309_198))
(assert (= temp1309_199 #x0000000000000002))
(assert (= var1586025 temp1309_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1309_200 #x0000000000000001))
(assert (= var1191993 temp1309_200))
(assert (= temp1309_201 #x0000000000000001))
(assert (= var2700303 temp1309_201))
(assert (= temp1309_202 #x0000000000000001))
(assert (= var2962447 temp1309_202))
(assert (= temp1309_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1309_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1309_204 #x0000000000000001))
(assert (= var211058 temp1309_204))
(assert (= temp1309_205 #x0000000000000001))
(assert (= var211188 temp1309_205))
(assert (= var3879401 var211188))
(assert (= temp1309_206 #x0000000000000000))
(assert (= var3866802 temp1309_206))
(assert (= temp1309_207 #x0000000000000000))
(assert (= temp1309_208
   (ite (bvslt var3866802 temp1309_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1309_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1309_208)))
(assert (= var3879420 temp1309_209))
(assert (bvslt (ite (bvslt var3866802 temp1309_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1309_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1309_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1309_211 #x0000000000000001))
(assert (= var3879421 temp1309_211))
(assert (= temp1309_212 #x0000000000000000))
(assert (= var4133117 temp1309_212))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1309_213 #x0000000000000002))
(assert (= var4339331 temp1309_213))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1309_214 #x0000000000000000))
(assert (= var4404892 temp1309_214))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp1309_216 #xffffffffffffffff))
(assert (= temp1309_215 temp1309_216))
(assert (= temp1309_217 #x0000000000000001))
(assert (= var197674 temp1309_217))
(assert (= temp1309_218 #x0000000000000000))
(assert (= temp1309_219
   (ite (bvslt var197674 temp1309_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp1309_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp1309_219)))
(assert (= var211595 temp1309_220))
(assert (bvslt (ite (bvslt var197674 temp1309_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1309_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp1309_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp1309_222 #x0000000000000001))
(assert (= var211596 temp1309_222))
(assert (= temp1309_224 #xffffffffffffffff))
(assert (= temp1309_223 temp1309_224))
(assert (= temp1309_225 #x0000000000000001))
(assert (= var211058 temp1309_225))
(model-add temp1309_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1309_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1309_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1309_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





