(declare-fun temp838_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp838_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp838_3 () (_ BitVec 64))
(declare-fun temp838_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp838_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp838_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp838_7 () (_ BitVec 64))
(declare-fun temp838_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp838_9 () (_ BitVec 64))
(declare-fun temp838_10 () (_ BitVec 64))
(declare-fun temp838_11 () (_ BitVec 64))
(declare-fun temp838_12 () (_ BitVec 64))
(declare-fun temp838_13 () (_ BitVec 64))
(declare-fun temp838_14 () (_ BitVec 64))
(declare-fun temp838_15 () (_ BitVec 64))
(declare-fun temp838_16 () (_ BitVec 64))
(declare-fun temp838_17 () (_ BitVec 64))
(declare-fun temp838_18 () (_ BitVec 64))
(declare-fun temp838_19 () (_ BitVec 64))
(declare-fun temp838_20 () (_ BitVec 64))
(declare-fun temp838_21 () (_ BitVec 64))
(declare-fun temp838_22 () (_ BitVec 64))
(declare-fun temp838_23 () (_ BitVec 64))
(declare-fun temp838_24 () (_ BitVec 64))
(declare-fun temp838_25 () (_ BitVec 64))
(declare-fun temp838_26 () (_ BitVec 64))
(declare-fun temp838_27 () (_ BitVec 64))
(declare-fun temp838_28 () (_ BitVec 64))
(declare-fun temp838_29 () (_ BitVec 64))
(declare-fun temp838_30 () (_ BitVec 64))
(declare-fun temp838_31 () (_ BitVec 64))
(declare-fun temp838_32 () (_ BitVec 64))
(declare-fun temp838_33 () (_ BitVec 64))
(declare-fun temp838_34 () (_ BitVec 64))
(declare-fun temp838_35 () (_ BitVec 64))
(declare-fun temp838_36 () (_ BitVec 64))
(declare-fun temp838_37 () (_ BitVec 64))
(declare-fun temp838_38 () (_ BitVec 64))
(declare-fun temp838_39 () (_ BitVec 64))
(declare-fun temp838_40 () (_ BitVec 64))
(declare-fun temp838_41 () (_ BitVec 64))
(declare-fun temp838_42 () (_ BitVec 64))
(declare-fun temp838_43 () (_ BitVec 64))
(declare-fun temp838_44 () (_ BitVec 64))
(declare-fun temp838_45 () (_ BitVec 64))
(declare-fun temp838_46 () (_ BitVec 64))
(declare-fun temp838_47 () (_ BitVec 64))
(declare-fun temp838_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp838_49 () (_ BitVec 64))
(declare-fun temp838_50 () (_ BitVec 64))
(declare-fun temp838_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp838_52 () (_ BitVec 64))
(declare-fun temp838_53 () (_ BitVec 64))
(declare-fun temp838_54 () (_ BitVec 64))
(declare-fun temp838_55 () (_ BitVec 64))
(declare-fun temp838_56 () (_ BitVec 64))
(declare-fun temp838_57 () (_ BitVec 64))
(declare-fun temp838_58 () (_ BitVec 64))
(declare-fun temp838_59 () (_ BitVec 64))
(declare-fun temp838_60 () (_ BitVec 64))
(declare-fun temp838_61 () (_ BitVec 64))
(declare-fun temp838_62 () (_ BitVec 64))
(declare-fun temp838_63 () (_ BitVec 64))
(declare-fun temp838_64 () (_ BitVec 64))
(declare-fun temp838_65 () (_ BitVec 64))
(declare-fun temp838_66 () (_ BitVec 64))
(declare-fun temp838_67 () (_ BitVec 64))
(declare-fun temp838_68 () (_ BitVec 64))
(declare-fun temp838_69 () (_ BitVec 64))
(declare-fun temp838_70 () (_ BitVec 64))
(declare-fun temp838_71 () (_ BitVec 64))
(declare-fun temp838_72 () (_ BitVec 64))
(declare-fun temp838_73 () (_ BitVec 64))
(declare-fun temp838_74 () (_ BitVec 64))
(declare-fun temp838_75 () (_ BitVec 64))
(declare-fun temp838_76 () (_ BitVec 64))
(declare-fun temp838_77 () (_ BitVec 64))
(declare-fun temp838_78 () (_ BitVec 64))
(declare-fun temp838_79 () (_ BitVec 64))
(declare-fun temp838_80 () (_ BitVec 64))
(declare-fun temp838_81 () (_ BitVec 64))
(declare-fun temp838_82 () (_ BitVec 64))
(declare-fun temp838_83 () (_ BitVec 64))
(declare-fun temp838_84 () (_ BitVec 64))
(declare-fun temp838_85 () (_ BitVec 64))
(declare-fun temp838_86 () (_ BitVec 64))
(declare-fun temp838_87 () (_ BitVec 64))
(declare-fun temp838_88 () (_ BitVec 64))
(declare-fun temp838_89 () (_ BitVec 64))
(declare-fun temp838_90 () (_ BitVec 64))
(declare-fun temp838_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp838_92 () (_ BitVec 64))
(declare-fun temp838_93 () (_ BitVec 64))
(declare-fun temp838_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp838_95 () (_ BitVec 64))
(declare-fun temp838_96 () (_ BitVec 64))
(declare-fun temp838_97 () (_ BitVec 64))
(declare-fun temp838_98 () (_ BitVec 64))
(declare-fun temp838_99 () (_ BitVec 64))
(declare-fun temp838_100 () (_ BitVec 64))
(declare-fun temp838_101 () (_ BitVec 64))
(declare-fun temp838_102 () (_ BitVec 64))
(declare-fun temp838_103 () (_ BitVec 64))
(declare-fun temp838_104 () (_ BitVec 64))
(declare-fun temp838_105 () (_ BitVec 64))
(declare-fun temp838_106 () (_ BitVec 64))
(declare-fun temp838_107 () (_ BitVec 64))
(declare-fun temp838_108 () (_ BitVec 64))
(declare-fun temp838_109 () (_ BitVec 64))
(declare-fun temp838_110 () (_ BitVec 64))
(declare-fun temp838_111 () (_ BitVec 64))
(declare-fun temp838_112 () (_ BitVec 64))
(declare-fun temp838_113 () (_ BitVec 64))
(declare-fun temp838_114 () (_ BitVec 64))
(declare-fun temp838_115 () (_ BitVec 64))
(declare-fun temp838_116 () (_ BitVec 64))
(declare-fun temp838_117 () (_ BitVec 64))
(declare-fun temp838_118 () (_ BitVec 64))
(declare-fun temp838_119 () (_ BitVec 64))
(declare-fun temp838_120 () (_ BitVec 64))
(declare-fun temp838_121 () (_ BitVec 64))
(declare-fun temp838_122 () (_ BitVec 64))
(declare-fun temp838_123 () (_ BitVec 64))
(declare-fun temp838_124 () (_ BitVec 64))
(declare-fun temp838_125 () (_ BitVec 64))
(declare-fun temp838_126 () (_ BitVec 64))
(declare-fun temp838_127 () (_ BitVec 64))
(declare-fun temp838_128 () (_ BitVec 64))
(declare-fun temp838_129 () (_ BitVec 64))
(declare-fun temp838_130 () (_ BitVec 64))
(declare-fun temp838_131 () (_ BitVec 64))
(declare-fun temp838_132 () (_ BitVec 64))
(declare-fun temp838_133 () (_ BitVec 64))
(declare-fun temp838_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp838_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp838_136 () (_ BitVec 64))
(declare-fun temp838_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp838_138 () (_ BitVec 64))
(declare-fun temp838_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp838_140 () (_ BitVec 64))
(declare-fun temp838_141 () (_ BitVec 64))
(declare-fun temp838_142 () (_ BitVec 64))
(declare-fun temp838_143 () (_ BitVec 64))
(declare-fun temp838_144 () (_ BitVec 64))
(declare-fun temp838_145 () (_ BitVec 64))
(declare-fun temp838_146 () (_ BitVec 64))
(declare-fun temp838_147 () (_ BitVec 64))
(declare-fun temp838_148 () (_ BitVec 64))
(declare-fun temp838_149 () (_ BitVec 64))
(declare-fun temp838_150 () (_ BitVec 64))
(declare-fun temp838_151 () (_ BitVec 64))
(declare-fun temp838_152 () (_ BitVec 64))
(declare-fun temp838_153 () (_ BitVec 64))
(declare-fun temp838_154 () (_ BitVec 64))
(declare-fun temp838_155 () (_ BitVec 64))
(declare-fun temp838_157 () (_ BitVec 64))
(declare-fun temp838_158 () (_ BitVec 64))
(declare-fun temp838_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp838_159 () (_ BitVec 64))
(declare-fun temp838_160 () (_ BitVec 64))
(declare-fun temp838_162 () (_ BitVec 64))
(declare-fun temp838_163 () (_ BitVec 64))
(declare-fun temp838_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp838_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp838_165 () (_ BitVec 64))
(declare-fun temp838_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp838_167 () (_ BitVec 64))
(declare-fun temp838_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp838_169 () (_ BitVec 64))
(declare-fun temp838_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp838_171 () (_ BitVec 64))
(declare-fun temp838_172 () (_ BitVec 64))
(declare-fun temp838_173 () (_ BitVec 64))
(declare-fun temp838_174 () (_ BitVec 64))
(declare-fun temp838_175 () (_ BitVec 64))
(declare-fun temp838_176 () (_ BitVec 64))
(declare-fun temp838_177 () (_ BitVec 64))
(declare-fun temp838_178 () (_ BitVec 64))
(declare-fun temp838_179 () (_ BitVec 64))
(declare-fun temp838_180 () (_ BitVec 64))
(declare-fun temp838_181 () (_ BitVec 64))
(declare-fun temp838_182 () (_ BitVec 64))
(declare-fun temp838_183 () (_ BitVec 64))
(declare-fun temp838_184 () (_ BitVec 64))
(declare-fun temp838_185 () (_ BitVec 64))
(declare-fun temp838_186 () (_ BitVec 64))
(declare-fun temp838_187 () (_ BitVec 64))
(declare-fun temp838_188 () (_ BitVec 64))
(declare-fun temp838_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp838_190 () (_ BitVec 64))
(declare-fun temp838_192 () (_ BitVec 64))
(declare-fun temp838_193 () (_ BitVec 64))
(declare-fun temp838_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp838_194 () (_ BitVec 64))
(declare-fun temp838_195 () (_ BitVec 64))
(declare-fun temp838_197 () (_ BitVec 64))
(declare-fun temp838_198 () (_ BitVec 64))
(declare-fun temp838_196 () (_ BitVec 64))
(declare-fun temp838_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp838_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp838_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp838_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp838_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp838_204 () (_ BitVec 64))
(declare-fun temp838_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp838_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp838_207 () (_ BitVec 64))
(declare-fun temp838_208 () (_ BitVec 64))
(declare-fun temp838_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp838_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp838_211 () (_ BitVec 64))
(declare-fun temp838_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp838_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp838_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211962 () (_ BitVec 64))
(declare-fun temp838_215 () (_ BitVec 64))
(declare-fun var211963 () (_ BitVec 64))
(declare-fun temp838_216 () (_ BitVec 64))
(assert (= temp838_1 #x0000000000000001))
(assert (= var77203 temp838_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp838_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp838_2)))
(assert (= temp838_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp838_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_4 #x0000000000000000))
(assert (= var210941 temp838_4))
(assert (= temp838_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp838_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_6 #x0000000000000000))
(assert (= var210986 temp838_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp838_7 #x0000000000000000))
(assert (= temp838_8 temp838_7))
(assert (= temp838_9 (select ARGNAME_padding_NAMEEND_VAL temp838_8)))
(assert (= temp838_10 #x0000000000000001))
(assert (= temp838_11 temp838_10))
(assert (= temp838_12 (select ARGNAME_padding_NAMEEND_VAL temp838_11)))
(assert (= temp838_13 #x0000000000000002))
(assert (= temp838_14 temp838_13))
(assert (= temp838_15 (select ARGNAME_padding_NAMEEND_VAL temp838_14)))
(assert (= temp838_16 #x0000000000000003))
(assert (= temp838_17 temp838_16))
(assert (= temp838_18 (select ARGNAME_padding_NAMEEND_VAL temp838_17)))
(assert (= temp838_19 #x0000000000000004))
(assert (= temp838_20 temp838_19))
(assert (= temp838_21 (select ARGNAME_padding_NAMEEND_VAL temp838_20)))
(assert (= temp838_22 #x0000000000000005))
(assert (= temp838_23 temp838_22))
(assert (= temp838_24 (select ARGNAME_padding_NAMEEND_VAL temp838_23)))
(assert (= temp838_25 #x0000000000000000))
(assert (= temp838_26 #x0000000000000000))
(assert (= temp838_27 temp838_26))
(assert (= temp838_28 (select ARGNAME_padding_NAMEEND_VAL temp838_27)))
(assert (= temp838_29 #x0000000000000000))
(assert (= temp838_30 #x0000000000000001))
(assert (= temp838_31 temp838_30))
(assert (= temp838_32 (select ARGNAME_padding_NAMEEND_VAL temp838_31)))
(assert (= temp838_33 #x0000000000000000))
(assert (= temp838_34 #x0000000000000002))
(assert (= temp838_35 temp838_34))
(assert (= temp838_36 (select ARGNAME_padding_NAMEEND_VAL temp838_35)))
(assert (= temp838_37 #x0000000000000000))
(assert (= temp838_38 #x0000000000000003))
(assert (= temp838_39 temp838_38))
(assert (= temp838_40 (select ARGNAME_padding_NAMEEND_VAL temp838_39)))
(assert (= temp838_41 #x0000000000000000))
(assert (= temp838_42 #x0000000000000004))
(assert (= temp838_43 temp838_42))
(assert (= temp838_44 (select ARGNAME_padding_NAMEEND_VAL temp838_43)))
(assert (= temp838_45 #x0000000000000000))
(assert (= temp838_46 #x0000000000000005))
(assert (= temp838_47 temp838_46))
(assert (= temp838_48 (select ARGNAME_padding_NAMEEND_VAL temp838_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp838_28 temp838_25)
             (bvslt temp838_32 temp838_29)
             (bvslt temp838_36 temp838_33)
             (bvslt temp838_40 temp838_37)
             (bvslt temp838_44 temp838_41)
             (bvslt temp838_48 temp838_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_49 #x0000000000000000))
(assert (= var1191714 temp838_49))
(assert (= temp838_50 #x0000000000000000))
(assert (= temp838_51 temp838_50))
(assert (= temp838_52 (select ARGNAME_output_padding_NAMEEND_VAL temp838_51)))
(assert (= temp838_53 #x0000000000000001))
(assert (= temp838_54 temp838_53))
(assert (= temp838_55 (select ARGNAME_output_padding_NAMEEND_VAL temp838_54)))
(assert (= temp838_56 #x0000000000000002))
(assert (= temp838_57 temp838_56))
(assert (= temp838_58 (select ARGNAME_output_padding_NAMEEND_VAL temp838_57)))
(assert (= temp838_59 #x0000000000000003))
(assert (= temp838_60 temp838_59))
(assert (= temp838_61 (select ARGNAME_output_padding_NAMEEND_VAL temp838_60)))
(assert (= temp838_62 #x0000000000000004))
(assert (= temp838_63 temp838_62))
(assert (= temp838_64 (select ARGNAME_output_padding_NAMEEND_VAL temp838_63)))
(assert (= temp838_65 #x0000000000000005))
(assert (= temp838_66 temp838_65))
(assert (= temp838_67 (select ARGNAME_output_padding_NAMEEND_VAL temp838_66)))
(assert (= temp838_68 #x0000000000000000))
(assert (= temp838_69 #x0000000000000000))
(assert (= temp838_70 temp838_69))
(assert (= temp838_71 (select ARGNAME_output_padding_NAMEEND_VAL temp838_70)))
(assert (= temp838_72 #x0000000000000000))
(assert (= temp838_73 #x0000000000000001))
(assert (= temp838_74 temp838_73))
(assert (= temp838_75 (select ARGNAME_output_padding_NAMEEND_VAL temp838_74)))
(assert (= temp838_76 #x0000000000000000))
(assert (= temp838_77 #x0000000000000002))
(assert (= temp838_78 temp838_77))
(assert (= temp838_79 (select ARGNAME_output_padding_NAMEEND_VAL temp838_78)))
(assert (= temp838_80 #x0000000000000000))
(assert (= temp838_81 #x0000000000000003))
(assert (= temp838_82 temp838_81))
(assert (= temp838_83 (select ARGNAME_output_padding_NAMEEND_VAL temp838_82)))
(assert (= temp838_84 #x0000000000000000))
(assert (= temp838_85 #x0000000000000004))
(assert (= temp838_86 temp838_85))
(assert (= temp838_87 (select ARGNAME_output_padding_NAMEEND_VAL temp838_86)))
(assert (= temp838_88 #x0000000000000000))
(assert (= temp838_89 #x0000000000000005))
(assert (= temp838_90 temp838_89))
(assert (= temp838_91 (select ARGNAME_output_padding_NAMEEND_VAL temp838_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp838_71 temp838_68)
             (bvslt temp838_75 temp838_72)
             (bvslt temp838_79 temp838_76)
             (bvslt temp838_83 temp838_80)
             (bvslt temp838_87 temp838_84)
             (bvslt temp838_91 temp838_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_92 #x0000000000000000))
(assert (= var1191725 temp838_92))
(assert (= temp838_93 #x0000000000000000))
(assert (= temp838_94 temp838_93))
(assert (= temp838_95 (select ARGNAME_stride_NAMEEND_VAL temp838_94)))
(assert (= temp838_96 #x0000000000000001))
(assert (= temp838_97 temp838_96))
(assert (= temp838_98 (select ARGNAME_stride_NAMEEND_VAL temp838_97)))
(assert (= temp838_99 #x0000000000000002))
(assert (= temp838_100 temp838_99))
(assert (= temp838_101 (select ARGNAME_stride_NAMEEND_VAL temp838_100)))
(assert (= temp838_102 #x0000000000000003))
(assert (= temp838_103 temp838_102))
(assert (= temp838_104 (select ARGNAME_stride_NAMEEND_VAL temp838_103)))
(assert (= temp838_105 #x0000000000000004))
(assert (= temp838_106 temp838_105))
(assert (= temp838_107 (select ARGNAME_stride_NAMEEND_VAL temp838_106)))
(assert (= temp838_108 #x0000000000000005))
(assert (= temp838_109 temp838_108))
(assert (= temp838_110 (select ARGNAME_stride_NAMEEND_VAL temp838_109)))
(assert (= temp838_111 #x0000000000000000))
(assert (= temp838_112 #x0000000000000000))
(assert (= temp838_113 temp838_112))
(assert (= temp838_114 (select ARGNAME_stride_NAMEEND_VAL temp838_113)))
(assert (= temp838_115 #x0000000000000000))
(assert (= temp838_116 #x0000000000000001))
(assert (= temp838_117 temp838_116))
(assert (= temp838_118 (select ARGNAME_stride_NAMEEND_VAL temp838_117)))
(assert (= temp838_119 #x0000000000000000))
(assert (= temp838_120 #x0000000000000002))
(assert (= temp838_121 temp838_120))
(assert (= temp838_122 (select ARGNAME_stride_NAMEEND_VAL temp838_121)))
(assert (= temp838_123 #x0000000000000000))
(assert (= temp838_124 #x0000000000000003))
(assert (= temp838_125 temp838_124))
(assert (= temp838_126 (select ARGNAME_stride_NAMEEND_VAL temp838_125)))
(assert (= temp838_127 #x0000000000000000))
(assert (= temp838_128 #x0000000000000004))
(assert (= temp838_129 temp838_128))
(assert (= temp838_130 (select ARGNAME_stride_NAMEEND_VAL temp838_129)))
(assert (= temp838_131 #x0000000000000000))
(assert (= temp838_132 #x0000000000000005))
(assert (= temp838_133 temp838_132))
(assert (= temp838_134 (select ARGNAME_stride_NAMEEND_VAL temp838_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp838_114 temp838_111)
             (bvsle temp838_118 temp838_115)
             (bvsle temp838_122 temp838_119)
             (bvsle temp838_126 temp838_123)
             (bvsle temp838_130 temp838_127)
             (bvsle temp838_134 temp838_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_135 #x0000000000000000))
(assert (= var1191735 temp838_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_136 #x0000000000000001))
(assert (= var1191747 temp838_136))
(assert (= temp838_137 #x0000000000000000))
(assert (= var1179826 temp838_137))
(assert (= temp838_138 #x0000000000000000))
(assert (= temp838_139 temp838_138))
(assert (= temp838_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_139)))
(assert (= temp838_141 #x0000000000000001))
(assert (= temp838_142 temp838_141))
(assert (= temp838_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_142)))
(assert (= temp838_144 #x0000000000000002))
(assert (= temp838_145 temp838_144))
(assert (= temp838_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_145)))
(assert (= temp838_147 #x0000000000000003))
(assert (= temp838_148 temp838_147))
(assert (= temp838_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_148)))
(assert (= temp838_150 #x0000000000000004))
(assert (= temp838_151 temp838_150))
(assert (= temp838_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_151)))
(assert (= temp838_153 #x0000000000000005))
(assert (= temp838_154 temp838_153))
(assert (= temp838_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_154)))
(assert (= temp838_157 var1179826))
(assert (= temp838_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_157)))
(assert (= temp838_156 temp838_158))
(assert (= var1191780
   (ite (bvslt temp838_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_159 #x0000000000000000))
(assert (= var1191780 temp838_159))
(assert (= temp838_160 #x0000000000000000))
(assert (= var1179826 temp838_160))
(assert (= temp838_162 var1179826))
(assert (= temp838_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_162)))
(assert (= temp838_161 temp838_163))
(assert (= var1191802 (bvsmod temp838_161 ARGNAME_groups_NAMEEND)))
(assert (= temp838_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp838_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp838_165 #x0000000000000001))
(assert (= var1191803 temp838_165))
(assert (= temp838_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp838_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_167 #x0000000000000001))
(assert (= var1191823 temp838_167))
(assert (= temp838_168 #x0000000000000001))
(assert (= var1180714 temp838_168))
(assert (= temp838_169 #x0000000000000000))
(assert (= temp838_170 temp838_169))
(assert (= temp838_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp838_170)))
(assert (= temp838_172 #x0000000000000001))
(assert (= temp838_173 temp838_172))
(assert (= temp838_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp838_173)))
(assert (= temp838_175 #x0000000000000002))
(assert (= temp838_176 temp838_175))
(assert (= temp838_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp838_176)))
(assert (= temp838_178 #x0000000000000003))
(assert (= temp838_179 temp838_178))
(assert (= temp838_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp838_179)))
(assert (= temp838_181 #x0000000000000004))
(assert (= temp838_182 temp838_181))
(assert (= temp838_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp838_182)))
(assert (= temp838_184 #x0000000000000005))
(assert (= temp838_185 temp838_184))
(assert (= temp838_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp838_185)))
(assert (= temp838_187 #x0000000000000000))
(assert (= temp838_188
   (ite (bvslt var1180714 temp838_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp838_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp838_188)))
(assert (= var1191831 temp838_189))
(assert (bvslt (ite (bvslt var1180714 temp838_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp838_190 #x0000000000000001))
(assert (= var1180714 temp838_190))
(assert (= temp838_192 var1180714))
(assert (= temp838_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_192)))
(assert (= temp838_191 temp838_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp838_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp838_194 #x0000000000000001))
(assert (= var1191836 temp838_194))
(assert (= temp838_195 #x0000000000000000))
(assert (= var1179826 temp838_195))
(assert (= temp838_197 var1179826))
(assert (= temp838_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_197)))
(assert (= temp838_196 temp838_198))
(assert (= temp838_199 #x0000000000000002))
(assert (= var1586025 temp838_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp838_200 #x0000000000000001))
(assert (= var1191993 temp838_200))
(assert (= temp838_201 #x0000000000000001))
(assert (= var2700303 temp838_201))
(assert (= temp838_202 #x0000000000000001))
(assert (= var2962447 temp838_202))
(assert (= temp838_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp838_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_204 #x0000000000000001))
(assert (= var211058 temp838_204))
(assert (= temp838_205 #x0000000000000001))
(assert (= var211188 temp838_205))
(assert (= var3879401 var211188))
(assert (= temp838_206 #x0000000000000000))
(assert (= var3866802 temp838_206))
(assert (= temp838_207 #x0000000000000000))
(assert (= temp838_208
   (ite (bvslt var3866802 temp838_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp838_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp838_208)))
(assert (= var3879420 temp838_209))
(assert (bvslt (ite (bvslt var3866802 temp838_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp838_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp838_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp838_211 #x0000000000000001))
(assert (= var3879421 temp838_211))
(assert (= temp838_212 #x0000000000000000))
(assert (= var4079423 temp838_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp838_213 #x0000000000000002))
(assert (= var4208259 temp838_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_214 #x0000000000000000))
(assert (= var4273820 temp838_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211962 var210913))
(assert (= temp838_215 #x0000000000000000))
(assert (= var211963
   (ite (distinct var211962 temp838_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp838_216 #x0000000000000001))
(assert (= var211058 temp838_216))
(model-add temp838_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp838_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp838_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp838_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




