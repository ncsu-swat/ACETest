(declare-fun temp10514_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10514_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10514_3 () (_ BitVec 64))
(declare-fun temp10514_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10514_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10514_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10514_7 () (_ BitVec 64))
(declare-fun temp10514_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10514_9 () (_ BitVec 64))
(declare-fun temp10514_10 () (_ BitVec 64))
(declare-fun temp10514_11 () (_ BitVec 64))
(declare-fun temp10514_12 () (_ BitVec 64))
(declare-fun temp10514_13 () (_ BitVec 64))
(declare-fun temp10514_14 () (_ BitVec 64))
(declare-fun temp10514_15 () (_ BitVec 64))
(declare-fun temp10514_16 () (_ BitVec 64))
(declare-fun temp10514_17 () (_ BitVec 64))
(declare-fun temp10514_18 () (_ BitVec 64))
(declare-fun temp10514_19 () (_ BitVec 64))
(declare-fun temp10514_20 () (_ BitVec 64))
(declare-fun temp10514_21 () (_ BitVec 64))
(declare-fun temp10514_22 () (_ BitVec 64))
(declare-fun temp10514_23 () (_ BitVec 64))
(declare-fun temp10514_24 () (_ BitVec 64))
(declare-fun temp10514_25 () (_ BitVec 64))
(declare-fun temp10514_26 () (_ BitVec 64))
(declare-fun temp10514_27 () (_ BitVec 64))
(declare-fun temp10514_28 () (_ BitVec 64))
(declare-fun temp10514_29 () (_ BitVec 64))
(declare-fun temp10514_30 () (_ BitVec 64))
(declare-fun temp10514_31 () (_ BitVec 64))
(declare-fun temp10514_32 () (_ BitVec 64))
(declare-fun temp10514_33 () (_ BitVec 64))
(declare-fun temp10514_34 () (_ BitVec 64))
(declare-fun temp10514_35 () (_ BitVec 64))
(declare-fun temp10514_36 () (_ BitVec 64))
(declare-fun temp10514_37 () (_ BitVec 64))
(declare-fun temp10514_38 () (_ BitVec 64))
(declare-fun temp10514_39 () (_ BitVec 64))
(declare-fun temp10514_40 () (_ BitVec 64))
(declare-fun temp10514_41 () (_ BitVec 64))
(declare-fun temp10514_42 () (_ BitVec 64))
(declare-fun temp10514_43 () (_ BitVec 64))
(declare-fun temp10514_44 () (_ BitVec 64))
(declare-fun temp10514_45 () (_ BitVec 64))
(declare-fun temp10514_46 () (_ BitVec 64))
(declare-fun temp10514_47 () (_ BitVec 64))
(declare-fun temp10514_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10514_49 () (_ BitVec 64))
(declare-fun temp10514_50 () (_ BitVec 64))
(declare-fun temp10514_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10514_52 () (_ BitVec 64))
(declare-fun temp10514_53 () (_ BitVec 64))
(declare-fun temp10514_54 () (_ BitVec 64))
(declare-fun temp10514_55 () (_ BitVec 64))
(declare-fun temp10514_56 () (_ BitVec 64))
(declare-fun temp10514_57 () (_ BitVec 64))
(declare-fun temp10514_58 () (_ BitVec 64))
(declare-fun temp10514_59 () (_ BitVec 64))
(declare-fun temp10514_60 () (_ BitVec 64))
(declare-fun temp10514_61 () (_ BitVec 64))
(declare-fun temp10514_62 () (_ BitVec 64))
(declare-fun temp10514_63 () (_ BitVec 64))
(declare-fun temp10514_64 () (_ BitVec 64))
(declare-fun temp10514_65 () (_ BitVec 64))
(declare-fun temp10514_66 () (_ BitVec 64))
(declare-fun temp10514_67 () (_ BitVec 64))
(declare-fun temp10514_68 () (_ BitVec 64))
(declare-fun temp10514_69 () (_ BitVec 64))
(declare-fun temp10514_70 () (_ BitVec 64))
(declare-fun temp10514_71 () (_ BitVec 64))
(declare-fun temp10514_72 () (_ BitVec 64))
(declare-fun temp10514_73 () (_ BitVec 64))
(declare-fun temp10514_74 () (_ BitVec 64))
(declare-fun temp10514_75 () (_ BitVec 64))
(declare-fun temp10514_76 () (_ BitVec 64))
(declare-fun temp10514_77 () (_ BitVec 64))
(declare-fun temp10514_78 () (_ BitVec 64))
(declare-fun temp10514_79 () (_ BitVec 64))
(declare-fun temp10514_80 () (_ BitVec 64))
(declare-fun temp10514_81 () (_ BitVec 64))
(declare-fun temp10514_82 () (_ BitVec 64))
(declare-fun temp10514_83 () (_ BitVec 64))
(declare-fun temp10514_84 () (_ BitVec 64))
(declare-fun temp10514_85 () (_ BitVec 64))
(declare-fun temp10514_86 () (_ BitVec 64))
(declare-fun temp10514_87 () (_ BitVec 64))
(declare-fun temp10514_88 () (_ BitVec 64))
(declare-fun temp10514_89 () (_ BitVec 64))
(declare-fun temp10514_90 () (_ BitVec 64))
(declare-fun temp10514_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10514_92 () (_ BitVec 64))
(declare-fun temp10514_93 () (_ BitVec 64))
(declare-fun temp10514_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10514_95 () (_ BitVec 64))
(declare-fun temp10514_96 () (_ BitVec 64))
(declare-fun temp10514_97 () (_ BitVec 64))
(declare-fun temp10514_98 () (_ BitVec 64))
(declare-fun temp10514_99 () (_ BitVec 64))
(declare-fun temp10514_100 () (_ BitVec 64))
(declare-fun temp10514_101 () (_ BitVec 64))
(declare-fun temp10514_102 () (_ BitVec 64))
(declare-fun temp10514_103 () (_ BitVec 64))
(declare-fun temp10514_104 () (_ BitVec 64))
(declare-fun temp10514_105 () (_ BitVec 64))
(declare-fun temp10514_106 () (_ BitVec 64))
(declare-fun temp10514_107 () (_ BitVec 64))
(declare-fun temp10514_108 () (_ BitVec 64))
(declare-fun temp10514_109 () (_ BitVec 64))
(declare-fun temp10514_110 () (_ BitVec 64))
(declare-fun temp10514_111 () (_ BitVec 64))
(declare-fun temp10514_112 () (_ BitVec 64))
(declare-fun temp10514_113 () (_ BitVec 64))
(declare-fun temp10514_114 () (_ BitVec 64))
(declare-fun temp10514_115 () (_ BitVec 64))
(declare-fun temp10514_116 () (_ BitVec 64))
(declare-fun temp10514_117 () (_ BitVec 64))
(declare-fun temp10514_118 () (_ BitVec 64))
(declare-fun temp10514_119 () (_ BitVec 64))
(declare-fun temp10514_120 () (_ BitVec 64))
(declare-fun temp10514_121 () (_ BitVec 64))
(declare-fun temp10514_122 () (_ BitVec 64))
(declare-fun temp10514_123 () (_ BitVec 64))
(declare-fun temp10514_124 () (_ BitVec 64))
(declare-fun temp10514_125 () (_ BitVec 64))
(declare-fun temp10514_126 () (_ BitVec 64))
(declare-fun temp10514_127 () (_ BitVec 64))
(declare-fun temp10514_128 () (_ BitVec 64))
(declare-fun temp10514_129 () (_ BitVec 64))
(declare-fun temp10514_130 () (_ BitVec 64))
(declare-fun temp10514_131 () (_ BitVec 64))
(declare-fun temp10514_132 () (_ BitVec 64))
(declare-fun temp10514_133 () (_ BitVec 64))
(declare-fun temp10514_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10514_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10514_136 () (_ BitVec 64))
(declare-fun temp10514_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10514_138 () (_ BitVec 64))
(declare-fun temp10514_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10514_140 () (_ BitVec 64))
(declare-fun temp10514_141 () (_ BitVec 64))
(declare-fun temp10514_142 () (_ BitVec 64))
(declare-fun temp10514_143 () (_ BitVec 64))
(declare-fun temp10514_144 () (_ BitVec 64))
(declare-fun temp10514_145 () (_ BitVec 64))
(declare-fun temp10514_146 () (_ BitVec 64))
(declare-fun temp10514_147 () (_ BitVec 64))
(declare-fun temp10514_148 () (_ BitVec 64))
(declare-fun temp10514_149 () (_ BitVec 64))
(declare-fun temp10514_150 () (_ BitVec 64))
(declare-fun temp10514_151 () (_ BitVec 64))
(declare-fun temp10514_152 () (_ BitVec 64))
(declare-fun temp10514_153 () (_ BitVec 64))
(declare-fun temp10514_154 () (_ BitVec 64))
(declare-fun temp10514_155 () (_ BitVec 64))
(declare-fun temp10514_157 () (_ BitVec 64))
(declare-fun temp10514_158 () (_ BitVec 64))
(declare-fun temp10514_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10514_159 () (_ BitVec 64))
(declare-fun temp10514_160 () (_ BitVec 64))
(declare-fun temp10514_162 () (_ BitVec 64))
(declare-fun temp10514_163 () (_ BitVec 64))
(declare-fun temp10514_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10514_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10514_165 () (_ BitVec 64))
(declare-fun temp10514_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10514_167 () (_ BitVec 64))
(declare-fun temp10514_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10514_169 () (_ BitVec 64))
(declare-fun temp10514_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10514_171 () (_ BitVec 64))
(declare-fun temp10514_172 () (_ BitVec 64))
(declare-fun temp10514_173 () (_ BitVec 64))
(declare-fun temp10514_174 () (_ BitVec 64))
(declare-fun temp10514_175 () (_ BitVec 64))
(declare-fun temp10514_176 () (_ BitVec 64))
(declare-fun temp10514_177 () (_ BitVec 64))
(declare-fun temp10514_178 () (_ BitVec 64))
(declare-fun temp10514_179 () (_ BitVec 64))
(declare-fun temp10514_180 () (_ BitVec 64))
(declare-fun temp10514_181 () (_ BitVec 64))
(declare-fun temp10514_182 () (_ BitVec 64))
(declare-fun temp10514_183 () (_ BitVec 64))
(declare-fun temp10514_184 () (_ BitVec 64))
(declare-fun temp10514_185 () (_ BitVec 64))
(declare-fun temp10514_186 () (_ BitVec 64))
(declare-fun temp10514_187 () (_ BitVec 64))
(declare-fun temp10514_188 () (_ BitVec 64))
(declare-fun temp10514_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10514_190 () (_ BitVec 64))
(declare-fun temp10514_192 () (_ BitVec 64))
(declare-fun temp10514_193 () (_ BitVec 64))
(declare-fun temp10514_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10514_194 () (_ BitVec 64))
(declare-fun temp10514_195 () (_ BitVec 64))
(declare-fun temp10514_197 () (_ BitVec 64))
(declare-fun temp10514_198 () (_ BitVec 64))
(declare-fun temp10514_196 () (_ BitVec 64))
(declare-fun temp10514_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10514_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10514_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10514_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10514_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10514_204 () (_ BitVec 64))
(declare-fun temp10514_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10514_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10514_207 () (_ BitVec 64))
(declare-fun temp10514_208 () (_ BitVec 64))
(declare-fun temp10514_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10514_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10514_211 () (_ BitVec 64))
(declare-fun temp10514_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10514_213 () (_ BitVec 64))
(declare-fun temp10514_214 () (_ BitVec 64))
(declare-fun temp10514_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10514_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10514_217 () (_ BitVec 64))
(declare-fun temp10514_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10514_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10514_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10514_221 () (_ BitVec 64))
(assert (= temp10514_1 #x0000000000000001))
(assert (= var77203 temp10514_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10514_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10514_2)))
(assert (= temp10514_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10514_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10514_4 #x0000000000000000))
(assert (= var210941 temp10514_4))
(assert (= temp10514_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10514_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10514_6 #x0000000000000000))
(assert (= var210986 temp10514_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10514_7 #x0000000000000000))
(assert (= temp10514_8 temp10514_7))
(assert (= temp10514_9 (select ARGNAME_padding_NAMEEND_VAL temp10514_8)))
(assert (= temp10514_10 #x0000000000000001))
(assert (= temp10514_11 temp10514_10))
(assert (= temp10514_12 (select ARGNAME_padding_NAMEEND_VAL temp10514_11)))
(assert (= temp10514_13 #x0000000000000002))
(assert (= temp10514_14 temp10514_13))
(assert (= temp10514_15 (select ARGNAME_padding_NAMEEND_VAL temp10514_14)))
(assert (= temp10514_16 #x0000000000000003))
(assert (= temp10514_17 temp10514_16))
(assert (= temp10514_18 (select ARGNAME_padding_NAMEEND_VAL temp10514_17)))
(assert (= temp10514_19 #x0000000000000004))
(assert (= temp10514_20 temp10514_19))
(assert (= temp10514_21 (select ARGNAME_padding_NAMEEND_VAL temp10514_20)))
(assert (= temp10514_22 #x0000000000000005))
(assert (= temp10514_23 temp10514_22))
(assert (= temp10514_24 (select ARGNAME_padding_NAMEEND_VAL temp10514_23)))
(assert (= temp10514_25 #x0000000000000000))
(assert (= temp10514_26 #x0000000000000000))
(assert (= temp10514_27 temp10514_26))
(assert (= temp10514_28 (select ARGNAME_padding_NAMEEND_VAL temp10514_27)))
(assert (= temp10514_29 #x0000000000000000))
(assert (= temp10514_30 #x0000000000000001))
(assert (= temp10514_31 temp10514_30))
(assert (= temp10514_32 (select ARGNAME_padding_NAMEEND_VAL temp10514_31)))
(assert (= temp10514_33 #x0000000000000000))
(assert (= temp10514_34 #x0000000000000002))
(assert (= temp10514_35 temp10514_34))
(assert (= temp10514_36 (select ARGNAME_padding_NAMEEND_VAL temp10514_35)))
(assert (= temp10514_37 #x0000000000000000))
(assert (= temp10514_38 #x0000000000000003))
(assert (= temp10514_39 temp10514_38))
(assert (= temp10514_40 (select ARGNAME_padding_NAMEEND_VAL temp10514_39)))
(assert (= temp10514_41 #x0000000000000000))
(assert (= temp10514_42 #x0000000000000004))
(assert (= temp10514_43 temp10514_42))
(assert (= temp10514_44 (select ARGNAME_padding_NAMEEND_VAL temp10514_43)))
(assert (= temp10514_45 #x0000000000000000))
(assert (= temp10514_46 #x0000000000000005))
(assert (= temp10514_47 temp10514_46))
(assert (= temp10514_48 (select ARGNAME_padding_NAMEEND_VAL temp10514_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10514_28 temp10514_25)
             (bvslt temp10514_32 temp10514_29)
             (bvslt temp10514_36 temp10514_33)
             (bvslt temp10514_40 temp10514_37)
             (bvslt temp10514_44 temp10514_41)
             (bvslt temp10514_48 temp10514_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10514_49 #x0000000000000000))
(assert (= var1191714 temp10514_49))
(assert (= temp10514_50 #x0000000000000000))
(assert (= temp10514_51 temp10514_50))
(assert (= temp10514_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10514_51)))
(assert (= temp10514_53 #x0000000000000001))
(assert (= temp10514_54 temp10514_53))
(assert (= temp10514_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10514_54)))
(assert (= temp10514_56 #x0000000000000002))
(assert (= temp10514_57 temp10514_56))
(assert (= temp10514_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10514_57)))
(assert (= temp10514_59 #x0000000000000003))
(assert (= temp10514_60 temp10514_59))
(assert (= temp10514_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10514_60)))
(assert (= temp10514_62 #x0000000000000004))
(assert (= temp10514_63 temp10514_62))
(assert (= temp10514_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10514_63)))
(assert (= temp10514_65 #x0000000000000005))
(assert (= temp10514_66 temp10514_65))
(assert (= temp10514_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10514_66)))
(assert (= temp10514_68 #x0000000000000000))
(assert (= temp10514_69 #x0000000000000000))
(assert (= temp10514_70 temp10514_69))
(assert (= temp10514_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10514_70)))
(assert (= temp10514_72 #x0000000000000000))
(assert (= temp10514_73 #x0000000000000001))
(assert (= temp10514_74 temp10514_73))
(assert (= temp10514_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10514_74)))
(assert (= temp10514_76 #x0000000000000000))
(assert (= temp10514_77 #x0000000000000002))
(assert (= temp10514_78 temp10514_77))
(assert (= temp10514_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10514_78)))
(assert (= temp10514_80 #x0000000000000000))
(assert (= temp10514_81 #x0000000000000003))
(assert (= temp10514_82 temp10514_81))
(assert (= temp10514_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10514_82)))
(assert (= temp10514_84 #x0000000000000000))
(assert (= temp10514_85 #x0000000000000004))
(assert (= temp10514_86 temp10514_85))
(assert (= temp10514_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10514_86)))
(assert (= temp10514_88 #x0000000000000000))
(assert (= temp10514_89 #x0000000000000005))
(assert (= temp10514_90 temp10514_89))
(assert (= temp10514_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10514_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10514_71 temp10514_68)
             (bvslt temp10514_75 temp10514_72)
             (bvslt temp10514_79 temp10514_76)
             (bvslt temp10514_83 temp10514_80)
             (bvslt temp10514_87 temp10514_84)
             (bvslt temp10514_91 temp10514_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10514_92 #x0000000000000000))
(assert (= var1191725 temp10514_92))
(assert (= temp10514_93 #x0000000000000000))
(assert (= temp10514_94 temp10514_93))
(assert (= temp10514_95 (select ARGNAME_stride_NAMEEND_VAL temp10514_94)))
(assert (= temp10514_96 #x0000000000000001))
(assert (= temp10514_97 temp10514_96))
(assert (= temp10514_98 (select ARGNAME_stride_NAMEEND_VAL temp10514_97)))
(assert (= temp10514_99 #x0000000000000002))
(assert (= temp10514_100 temp10514_99))
(assert (= temp10514_101 (select ARGNAME_stride_NAMEEND_VAL temp10514_100)))
(assert (= temp10514_102 #x0000000000000003))
(assert (= temp10514_103 temp10514_102))
(assert (= temp10514_104 (select ARGNAME_stride_NAMEEND_VAL temp10514_103)))
(assert (= temp10514_105 #x0000000000000004))
(assert (= temp10514_106 temp10514_105))
(assert (= temp10514_107 (select ARGNAME_stride_NAMEEND_VAL temp10514_106)))
(assert (= temp10514_108 #x0000000000000005))
(assert (= temp10514_109 temp10514_108))
(assert (= temp10514_110 (select ARGNAME_stride_NAMEEND_VAL temp10514_109)))
(assert (= temp10514_111 #x0000000000000000))
(assert (= temp10514_112 #x0000000000000000))
(assert (= temp10514_113 temp10514_112))
(assert (= temp10514_114 (select ARGNAME_stride_NAMEEND_VAL temp10514_113)))
(assert (= temp10514_115 #x0000000000000000))
(assert (= temp10514_116 #x0000000000000001))
(assert (= temp10514_117 temp10514_116))
(assert (= temp10514_118 (select ARGNAME_stride_NAMEEND_VAL temp10514_117)))
(assert (= temp10514_119 #x0000000000000000))
(assert (= temp10514_120 #x0000000000000002))
(assert (= temp10514_121 temp10514_120))
(assert (= temp10514_122 (select ARGNAME_stride_NAMEEND_VAL temp10514_121)))
(assert (= temp10514_123 #x0000000000000000))
(assert (= temp10514_124 #x0000000000000003))
(assert (= temp10514_125 temp10514_124))
(assert (= temp10514_126 (select ARGNAME_stride_NAMEEND_VAL temp10514_125)))
(assert (= temp10514_127 #x0000000000000000))
(assert (= temp10514_128 #x0000000000000004))
(assert (= temp10514_129 temp10514_128))
(assert (= temp10514_130 (select ARGNAME_stride_NAMEEND_VAL temp10514_129)))
(assert (= temp10514_131 #x0000000000000000))
(assert (= temp10514_132 #x0000000000000005))
(assert (= temp10514_133 temp10514_132))
(assert (= temp10514_134 (select ARGNAME_stride_NAMEEND_VAL temp10514_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10514_114 temp10514_111)
             (bvsle temp10514_118 temp10514_115)
             (bvsle temp10514_122 temp10514_119)
             (bvsle temp10514_126 temp10514_123)
             (bvsle temp10514_130 temp10514_127)
             (bvsle temp10514_134 temp10514_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10514_135 #x0000000000000000))
(assert (= var1191735 temp10514_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10514_136 #x0000000000000001))
(assert (= var1191747 temp10514_136))
(assert (= temp10514_137 #x0000000000000000))
(assert (= var1179826 temp10514_137))
(assert (= temp10514_138 #x0000000000000000))
(assert (= temp10514_139 temp10514_138))
(assert (= temp10514_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10514_139)))
(assert (= temp10514_141 #x0000000000000001))
(assert (= temp10514_142 temp10514_141))
(assert (= temp10514_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10514_142)))
(assert (= temp10514_144 #x0000000000000002))
(assert (= temp10514_145 temp10514_144))
(assert (= temp10514_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10514_145)))
(assert (= temp10514_147 #x0000000000000003))
(assert (= temp10514_148 temp10514_147))
(assert (= temp10514_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10514_148)))
(assert (= temp10514_150 #x0000000000000004))
(assert (= temp10514_151 temp10514_150))
(assert (= temp10514_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10514_151)))
(assert (= temp10514_153 #x0000000000000005))
(assert (= temp10514_154 temp10514_153))
(assert (= temp10514_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10514_154)))
(assert (= temp10514_157 var1179826))
(assert (= temp10514_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10514_157)))
(assert (= temp10514_156 temp10514_158))
(assert (= var1191780
   (ite (bvslt temp10514_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10514_159 #x0000000000000000))
(assert (= var1191780 temp10514_159))
(assert (= temp10514_160 #x0000000000000000))
(assert (= var1179826 temp10514_160))
(assert (= temp10514_162 var1179826))
(assert (= temp10514_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10514_162)))
(assert (= temp10514_161 temp10514_163))
(assert (= var1191802 (bvsmod temp10514_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10514_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10514_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10514_165 #x0000000000000001))
(assert (= var1191803 temp10514_165))
(assert (= temp10514_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10514_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10514_167 #x0000000000000001))
(assert (= var1191823 temp10514_167))
(assert (= temp10514_168 #x0000000000000001))
(assert (= var1180714 temp10514_168))
(assert (= temp10514_169 #x0000000000000000))
(assert (= temp10514_170 temp10514_169))
(assert (= temp10514_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10514_170)))
(assert (= temp10514_172 #x0000000000000001))
(assert (= temp10514_173 temp10514_172))
(assert (= temp10514_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10514_173)))
(assert (= temp10514_175 #x0000000000000002))
(assert (= temp10514_176 temp10514_175))
(assert (= temp10514_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10514_176)))
(assert (= temp10514_178 #x0000000000000003))
(assert (= temp10514_179 temp10514_178))
(assert (= temp10514_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10514_179)))
(assert (= temp10514_181 #x0000000000000004))
(assert (= temp10514_182 temp10514_181))
(assert (= temp10514_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10514_182)))
(assert (= temp10514_184 #x0000000000000005))
(assert (= temp10514_185 temp10514_184))
(assert (= temp10514_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10514_185)))
(assert (= temp10514_187 #x0000000000000000))
(assert (= temp10514_188
   (ite (bvslt var1180714 temp10514_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10514_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10514_188)))
(assert (= var1191831 temp10514_189))
(assert (bvslt (ite (bvslt var1180714 temp10514_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10514_190 #x0000000000000001))
(assert (= var1180714 temp10514_190))
(assert (= temp10514_192 var1180714))
(assert (= temp10514_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10514_192)))
(assert (= temp10514_191 temp10514_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10514_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10514_194 #x0000000000000001))
(assert (= var1191836 temp10514_194))
(assert (= temp10514_195 #x0000000000000000))
(assert (= var1179826 temp10514_195))
(assert (= temp10514_197 var1179826))
(assert (= temp10514_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10514_197)))
(assert (= temp10514_196 temp10514_198))
(assert (= temp10514_199 #x0000000000000002))
(assert (= var1586025 temp10514_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10514_200 #x0000000000000001))
(assert (= var1191993 temp10514_200))
(assert (= temp10514_201 #x0000000000000001))
(assert (= var2700303 temp10514_201))
(assert (= temp10514_202 #x0000000000000001))
(assert (= var2962447 temp10514_202))
(assert (= temp10514_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10514_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10514_204 #x0000000000000001))
(assert (= var211058 temp10514_204))
(assert (= temp10514_205 #x0000000000000001))
(assert (= var211188 temp10514_205))
(assert (= var3879401 var211188))
(assert (= temp10514_206 #x0000000000000000))
(assert (= var3866802 temp10514_206))
(assert (= temp10514_207 #x0000000000000000))
(assert (= temp10514_208
   (ite (bvslt var3866802 temp10514_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10514_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10514_208)))
(assert (= var3879420 temp10514_209))
(assert (bvslt (ite (bvslt var3866802 temp10514_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10514_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10514_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10514_211 #x0000000000000000))
(assert (= var3879421 temp10514_211))
(assert (= temp10514_212 #x0000000000000001))
(assert (= var3867690 temp10514_212))
(assert (= temp10514_213 #x0000000000000000))
(assert (= temp10514_214
   (ite (bvslt var3867690 temp10514_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10514_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10514_214)))
(assert (= var3879423 temp10514_215))
(assert (bvslt (ite (bvslt var3867690 temp10514_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10514_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10514_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10514_217 #x0000000000000001))
(assert (= var3879424 temp10514_217))
(assert (= temp10514_218 #x0000000000000000))
(assert (= var4133117 temp10514_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10514_219 #x0000000000000002))
(assert (= var4339331 temp10514_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10514_220 #x0000000000000000))
(assert (= var4404892 temp10514_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10514_221 #x0000000000000001))
(assert (= var211058 temp10514_221))
(model-add temp10514_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10514_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10514_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10514_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





