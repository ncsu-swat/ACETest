(declare-fun temp10212_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10212_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10212_3 () (_ BitVec 64))
(declare-fun temp10212_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10212_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10212_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10212_7 () (_ BitVec 64))
(declare-fun temp10212_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10212_9 () (_ BitVec 64))
(declare-fun temp10212_10 () (_ BitVec 64))
(declare-fun temp10212_11 () (_ BitVec 64))
(declare-fun temp10212_12 () (_ BitVec 64))
(declare-fun temp10212_13 () (_ BitVec 64))
(declare-fun temp10212_14 () (_ BitVec 64))
(declare-fun temp10212_15 () (_ BitVec 64))
(declare-fun temp10212_16 () (_ BitVec 64))
(declare-fun temp10212_17 () (_ BitVec 64))
(declare-fun temp10212_18 () (_ BitVec 64))
(declare-fun temp10212_19 () (_ BitVec 64))
(declare-fun temp10212_20 () (_ BitVec 64))
(declare-fun temp10212_21 () (_ BitVec 64))
(declare-fun temp10212_22 () (_ BitVec 64))
(declare-fun temp10212_23 () (_ BitVec 64))
(declare-fun temp10212_24 () (_ BitVec 64))
(declare-fun temp10212_25 () (_ BitVec 64))
(declare-fun temp10212_26 () (_ BitVec 64))
(declare-fun temp10212_27 () (_ BitVec 64))
(declare-fun temp10212_28 () (_ BitVec 64))
(declare-fun temp10212_29 () (_ BitVec 64))
(declare-fun temp10212_30 () (_ BitVec 64))
(declare-fun temp10212_31 () (_ BitVec 64))
(declare-fun temp10212_32 () (_ BitVec 64))
(declare-fun temp10212_33 () (_ BitVec 64))
(declare-fun temp10212_34 () (_ BitVec 64))
(declare-fun temp10212_35 () (_ BitVec 64))
(declare-fun temp10212_36 () (_ BitVec 64))
(declare-fun temp10212_37 () (_ BitVec 64))
(declare-fun temp10212_38 () (_ BitVec 64))
(declare-fun temp10212_39 () (_ BitVec 64))
(declare-fun temp10212_40 () (_ BitVec 64))
(declare-fun temp10212_41 () (_ BitVec 64))
(declare-fun temp10212_42 () (_ BitVec 64))
(declare-fun temp10212_43 () (_ BitVec 64))
(declare-fun temp10212_44 () (_ BitVec 64))
(declare-fun temp10212_45 () (_ BitVec 64))
(declare-fun temp10212_46 () (_ BitVec 64))
(declare-fun temp10212_47 () (_ BitVec 64))
(declare-fun temp10212_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10212_49 () (_ BitVec 64))
(declare-fun temp10212_50 () (_ BitVec 64))
(declare-fun temp10212_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10212_52 () (_ BitVec 64))
(declare-fun temp10212_53 () (_ BitVec 64))
(declare-fun temp10212_54 () (_ BitVec 64))
(declare-fun temp10212_55 () (_ BitVec 64))
(declare-fun temp10212_56 () (_ BitVec 64))
(declare-fun temp10212_57 () (_ BitVec 64))
(declare-fun temp10212_58 () (_ BitVec 64))
(declare-fun temp10212_59 () (_ BitVec 64))
(declare-fun temp10212_60 () (_ BitVec 64))
(declare-fun temp10212_61 () (_ BitVec 64))
(declare-fun temp10212_62 () (_ BitVec 64))
(declare-fun temp10212_63 () (_ BitVec 64))
(declare-fun temp10212_64 () (_ BitVec 64))
(declare-fun temp10212_65 () (_ BitVec 64))
(declare-fun temp10212_66 () (_ BitVec 64))
(declare-fun temp10212_67 () (_ BitVec 64))
(declare-fun temp10212_68 () (_ BitVec 64))
(declare-fun temp10212_69 () (_ BitVec 64))
(declare-fun temp10212_70 () (_ BitVec 64))
(declare-fun temp10212_71 () (_ BitVec 64))
(declare-fun temp10212_72 () (_ BitVec 64))
(declare-fun temp10212_73 () (_ BitVec 64))
(declare-fun temp10212_74 () (_ BitVec 64))
(declare-fun temp10212_75 () (_ BitVec 64))
(declare-fun temp10212_76 () (_ BitVec 64))
(declare-fun temp10212_77 () (_ BitVec 64))
(declare-fun temp10212_78 () (_ BitVec 64))
(declare-fun temp10212_79 () (_ BitVec 64))
(declare-fun temp10212_80 () (_ BitVec 64))
(declare-fun temp10212_81 () (_ BitVec 64))
(declare-fun temp10212_82 () (_ BitVec 64))
(declare-fun temp10212_83 () (_ BitVec 64))
(declare-fun temp10212_84 () (_ BitVec 64))
(declare-fun temp10212_85 () (_ BitVec 64))
(declare-fun temp10212_86 () (_ BitVec 64))
(declare-fun temp10212_87 () (_ BitVec 64))
(declare-fun temp10212_88 () (_ BitVec 64))
(declare-fun temp10212_89 () (_ BitVec 64))
(declare-fun temp10212_90 () (_ BitVec 64))
(declare-fun temp10212_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10212_92 () (_ BitVec 64))
(declare-fun temp10212_93 () (_ BitVec 64))
(declare-fun temp10212_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10212_95 () (_ BitVec 64))
(declare-fun temp10212_96 () (_ BitVec 64))
(declare-fun temp10212_97 () (_ BitVec 64))
(declare-fun temp10212_98 () (_ BitVec 64))
(declare-fun temp10212_99 () (_ BitVec 64))
(declare-fun temp10212_100 () (_ BitVec 64))
(declare-fun temp10212_101 () (_ BitVec 64))
(declare-fun temp10212_102 () (_ BitVec 64))
(declare-fun temp10212_103 () (_ BitVec 64))
(declare-fun temp10212_104 () (_ BitVec 64))
(declare-fun temp10212_105 () (_ BitVec 64))
(declare-fun temp10212_106 () (_ BitVec 64))
(declare-fun temp10212_107 () (_ BitVec 64))
(declare-fun temp10212_108 () (_ BitVec 64))
(declare-fun temp10212_109 () (_ BitVec 64))
(declare-fun temp10212_110 () (_ BitVec 64))
(declare-fun temp10212_111 () (_ BitVec 64))
(declare-fun temp10212_112 () (_ BitVec 64))
(declare-fun temp10212_113 () (_ BitVec 64))
(declare-fun temp10212_114 () (_ BitVec 64))
(declare-fun temp10212_115 () (_ BitVec 64))
(declare-fun temp10212_116 () (_ BitVec 64))
(declare-fun temp10212_117 () (_ BitVec 64))
(declare-fun temp10212_118 () (_ BitVec 64))
(declare-fun temp10212_119 () (_ BitVec 64))
(declare-fun temp10212_120 () (_ BitVec 64))
(declare-fun temp10212_121 () (_ BitVec 64))
(declare-fun temp10212_122 () (_ BitVec 64))
(declare-fun temp10212_123 () (_ BitVec 64))
(declare-fun temp10212_124 () (_ BitVec 64))
(declare-fun temp10212_125 () (_ BitVec 64))
(declare-fun temp10212_126 () (_ BitVec 64))
(declare-fun temp10212_127 () (_ BitVec 64))
(declare-fun temp10212_128 () (_ BitVec 64))
(declare-fun temp10212_129 () (_ BitVec 64))
(declare-fun temp10212_130 () (_ BitVec 64))
(declare-fun temp10212_131 () (_ BitVec 64))
(declare-fun temp10212_132 () (_ BitVec 64))
(declare-fun temp10212_133 () (_ BitVec 64))
(declare-fun temp10212_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10212_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10212_136 () (_ BitVec 64))
(declare-fun temp10212_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10212_138 () (_ BitVec 64))
(declare-fun temp10212_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10212_140 () (_ BitVec 64))
(declare-fun temp10212_141 () (_ BitVec 64))
(declare-fun temp10212_142 () (_ BitVec 64))
(declare-fun temp10212_143 () (_ BitVec 64))
(declare-fun temp10212_144 () (_ BitVec 64))
(declare-fun temp10212_145 () (_ BitVec 64))
(declare-fun temp10212_146 () (_ BitVec 64))
(declare-fun temp10212_147 () (_ BitVec 64))
(declare-fun temp10212_148 () (_ BitVec 64))
(declare-fun temp10212_149 () (_ BitVec 64))
(declare-fun temp10212_150 () (_ BitVec 64))
(declare-fun temp10212_151 () (_ BitVec 64))
(declare-fun temp10212_152 () (_ BitVec 64))
(declare-fun temp10212_153 () (_ BitVec 64))
(declare-fun temp10212_154 () (_ BitVec 64))
(declare-fun temp10212_155 () (_ BitVec 64))
(declare-fun temp10212_157 () (_ BitVec 64))
(declare-fun temp10212_158 () (_ BitVec 64))
(declare-fun temp10212_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10212_159 () (_ BitVec 64))
(declare-fun temp10212_160 () (_ BitVec 64))
(declare-fun temp10212_162 () (_ BitVec 64))
(declare-fun temp10212_163 () (_ BitVec 64))
(declare-fun temp10212_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10212_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10212_165 () (_ BitVec 64))
(declare-fun temp10212_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10212_167 () (_ BitVec 64))
(declare-fun temp10212_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10212_169 () (_ BitVec 64))
(declare-fun temp10212_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10212_171 () (_ BitVec 64))
(declare-fun temp10212_172 () (_ BitVec 64))
(declare-fun temp10212_173 () (_ BitVec 64))
(declare-fun temp10212_174 () (_ BitVec 64))
(declare-fun temp10212_175 () (_ BitVec 64))
(declare-fun temp10212_176 () (_ BitVec 64))
(declare-fun temp10212_177 () (_ BitVec 64))
(declare-fun temp10212_178 () (_ BitVec 64))
(declare-fun temp10212_179 () (_ BitVec 64))
(declare-fun temp10212_180 () (_ BitVec 64))
(declare-fun temp10212_181 () (_ BitVec 64))
(declare-fun temp10212_182 () (_ BitVec 64))
(declare-fun temp10212_183 () (_ BitVec 64))
(declare-fun temp10212_184 () (_ BitVec 64))
(declare-fun temp10212_185 () (_ BitVec 64))
(declare-fun temp10212_186 () (_ BitVec 64))
(declare-fun temp10212_187 () (_ BitVec 64))
(declare-fun temp10212_188 () (_ BitVec 64))
(declare-fun temp10212_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10212_190 () (_ BitVec 64))
(declare-fun temp10212_192 () (_ BitVec 64))
(declare-fun temp10212_193 () (_ BitVec 64))
(declare-fun temp10212_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10212_194 () (_ BitVec 64))
(declare-fun temp10212_195 () (_ BitVec 64))
(declare-fun temp10212_197 () (_ BitVec 64))
(declare-fun temp10212_198 () (_ BitVec 64))
(declare-fun temp10212_196 () (_ BitVec 64))
(declare-fun temp10212_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10212_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10212_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10212_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10212_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10212_204 () (_ BitVec 64))
(declare-fun temp10212_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10212_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10212_207 () (_ BitVec 64))
(declare-fun temp10212_208 () (_ BitVec 64))
(declare-fun temp10212_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10212_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10212_211 () (_ BitVec 64))
(declare-fun temp10212_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10212_213 () (_ BitVec 64))
(declare-fun temp10212_214 () (_ BitVec 64))
(declare-fun temp10212_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10212_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10212_217 () (_ BitVec 64))
(declare-fun temp10212_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10212_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10212_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10212_221 () (_ BitVec 64))
(declare-fun temp10212_222 () (_ BitVec 64))
(declare-fun var6501140 () (_ BitVec 64))
(declare-fun var6501107 () (_ BitVec 64))
(declare-fun var6369671 () (_ BitVec 64))
(declare-fun var6369667 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10212_223 () (_ BitVec 64))
(assert (= temp10212_1 #x0000000000000001))
(assert (= var77203 temp10212_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10212_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10212_2)))
(assert (= temp10212_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10212_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10212_4 #x0000000000000000))
(assert (= var210941 temp10212_4))
(assert (= temp10212_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10212_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10212_6 #x0000000000000000))
(assert (= var210986 temp10212_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10212_7 #x0000000000000000))
(assert (= temp10212_8 temp10212_7))
(assert (= temp10212_9 (select ARGNAME_padding_NAMEEND_VAL temp10212_8)))
(assert (= temp10212_10 #x0000000000000001))
(assert (= temp10212_11 temp10212_10))
(assert (= temp10212_12 (select ARGNAME_padding_NAMEEND_VAL temp10212_11)))
(assert (= temp10212_13 #x0000000000000002))
(assert (= temp10212_14 temp10212_13))
(assert (= temp10212_15 (select ARGNAME_padding_NAMEEND_VAL temp10212_14)))
(assert (= temp10212_16 #x0000000000000003))
(assert (= temp10212_17 temp10212_16))
(assert (= temp10212_18 (select ARGNAME_padding_NAMEEND_VAL temp10212_17)))
(assert (= temp10212_19 #x0000000000000004))
(assert (= temp10212_20 temp10212_19))
(assert (= temp10212_21 (select ARGNAME_padding_NAMEEND_VAL temp10212_20)))
(assert (= temp10212_22 #x0000000000000005))
(assert (= temp10212_23 temp10212_22))
(assert (= temp10212_24 (select ARGNAME_padding_NAMEEND_VAL temp10212_23)))
(assert (= temp10212_25 #x0000000000000000))
(assert (= temp10212_26 #x0000000000000000))
(assert (= temp10212_27 temp10212_26))
(assert (= temp10212_28 (select ARGNAME_padding_NAMEEND_VAL temp10212_27)))
(assert (= temp10212_29 #x0000000000000000))
(assert (= temp10212_30 #x0000000000000001))
(assert (= temp10212_31 temp10212_30))
(assert (= temp10212_32 (select ARGNAME_padding_NAMEEND_VAL temp10212_31)))
(assert (= temp10212_33 #x0000000000000000))
(assert (= temp10212_34 #x0000000000000002))
(assert (= temp10212_35 temp10212_34))
(assert (= temp10212_36 (select ARGNAME_padding_NAMEEND_VAL temp10212_35)))
(assert (= temp10212_37 #x0000000000000000))
(assert (= temp10212_38 #x0000000000000003))
(assert (= temp10212_39 temp10212_38))
(assert (= temp10212_40 (select ARGNAME_padding_NAMEEND_VAL temp10212_39)))
(assert (= temp10212_41 #x0000000000000000))
(assert (= temp10212_42 #x0000000000000004))
(assert (= temp10212_43 temp10212_42))
(assert (= temp10212_44 (select ARGNAME_padding_NAMEEND_VAL temp10212_43)))
(assert (= temp10212_45 #x0000000000000000))
(assert (= temp10212_46 #x0000000000000005))
(assert (= temp10212_47 temp10212_46))
(assert (= temp10212_48 (select ARGNAME_padding_NAMEEND_VAL temp10212_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10212_28 temp10212_25)
             (bvslt temp10212_32 temp10212_29)
             (bvslt temp10212_36 temp10212_33)
             (bvslt temp10212_40 temp10212_37)
             (bvslt temp10212_44 temp10212_41)
             (bvslt temp10212_48 temp10212_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10212_49 #x0000000000000000))
(assert (= var1191714 temp10212_49))
(assert (= temp10212_50 #x0000000000000000))
(assert (= temp10212_51 temp10212_50))
(assert (= temp10212_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10212_51)))
(assert (= temp10212_53 #x0000000000000001))
(assert (= temp10212_54 temp10212_53))
(assert (= temp10212_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10212_54)))
(assert (= temp10212_56 #x0000000000000002))
(assert (= temp10212_57 temp10212_56))
(assert (= temp10212_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10212_57)))
(assert (= temp10212_59 #x0000000000000003))
(assert (= temp10212_60 temp10212_59))
(assert (= temp10212_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10212_60)))
(assert (= temp10212_62 #x0000000000000004))
(assert (= temp10212_63 temp10212_62))
(assert (= temp10212_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10212_63)))
(assert (= temp10212_65 #x0000000000000005))
(assert (= temp10212_66 temp10212_65))
(assert (= temp10212_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10212_66)))
(assert (= temp10212_68 #x0000000000000000))
(assert (= temp10212_69 #x0000000000000000))
(assert (= temp10212_70 temp10212_69))
(assert (= temp10212_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10212_70)))
(assert (= temp10212_72 #x0000000000000000))
(assert (= temp10212_73 #x0000000000000001))
(assert (= temp10212_74 temp10212_73))
(assert (= temp10212_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10212_74)))
(assert (= temp10212_76 #x0000000000000000))
(assert (= temp10212_77 #x0000000000000002))
(assert (= temp10212_78 temp10212_77))
(assert (= temp10212_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10212_78)))
(assert (= temp10212_80 #x0000000000000000))
(assert (= temp10212_81 #x0000000000000003))
(assert (= temp10212_82 temp10212_81))
(assert (= temp10212_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10212_82)))
(assert (= temp10212_84 #x0000000000000000))
(assert (= temp10212_85 #x0000000000000004))
(assert (= temp10212_86 temp10212_85))
(assert (= temp10212_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10212_86)))
(assert (= temp10212_88 #x0000000000000000))
(assert (= temp10212_89 #x0000000000000005))
(assert (= temp10212_90 temp10212_89))
(assert (= temp10212_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10212_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10212_71 temp10212_68)
             (bvslt temp10212_75 temp10212_72)
             (bvslt temp10212_79 temp10212_76)
             (bvslt temp10212_83 temp10212_80)
             (bvslt temp10212_87 temp10212_84)
             (bvslt temp10212_91 temp10212_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10212_92 #x0000000000000000))
(assert (= var1191725 temp10212_92))
(assert (= temp10212_93 #x0000000000000000))
(assert (= temp10212_94 temp10212_93))
(assert (= temp10212_95 (select ARGNAME_stride_NAMEEND_VAL temp10212_94)))
(assert (= temp10212_96 #x0000000000000001))
(assert (= temp10212_97 temp10212_96))
(assert (= temp10212_98 (select ARGNAME_stride_NAMEEND_VAL temp10212_97)))
(assert (= temp10212_99 #x0000000000000002))
(assert (= temp10212_100 temp10212_99))
(assert (= temp10212_101 (select ARGNAME_stride_NAMEEND_VAL temp10212_100)))
(assert (= temp10212_102 #x0000000000000003))
(assert (= temp10212_103 temp10212_102))
(assert (= temp10212_104 (select ARGNAME_stride_NAMEEND_VAL temp10212_103)))
(assert (= temp10212_105 #x0000000000000004))
(assert (= temp10212_106 temp10212_105))
(assert (= temp10212_107 (select ARGNAME_stride_NAMEEND_VAL temp10212_106)))
(assert (= temp10212_108 #x0000000000000005))
(assert (= temp10212_109 temp10212_108))
(assert (= temp10212_110 (select ARGNAME_stride_NAMEEND_VAL temp10212_109)))
(assert (= temp10212_111 #x0000000000000000))
(assert (= temp10212_112 #x0000000000000000))
(assert (= temp10212_113 temp10212_112))
(assert (= temp10212_114 (select ARGNAME_stride_NAMEEND_VAL temp10212_113)))
(assert (= temp10212_115 #x0000000000000000))
(assert (= temp10212_116 #x0000000000000001))
(assert (= temp10212_117 temp10212_116))
(assert (= temp10212_118 (select ARGNAME_stride_NAMEEND_VAL temp10212_117)))
(assert (= temp10212_119 #x0000000000000000))
(assert (= temp10212_120 #x0000000000000002))
(assert (= temp10212_121 temp10212_120))
(assert (= temp10212_122 (select ARGNAME_stride_NAMEEND_VAL temp10212_121)))
(assert (= temp10212_123 #x0000000000000000))
(assert (= temp10212_124 #x0000000000000003))
(assert (= temp10212_125 temp10212_124))
(assert (= temp10212_126 (select ARGNAME_stride_NAMEEND_VAL temp10212_125)))
(assert (= temp10212_127 #x0000000000000000))
(assert (= temp10212_128 #x0000000000000004))
(assert (= temp10212_129 temp10212_128))
(assert (= temp10212_130 (select ARGNAME_stride_NAMEEND_VAL temp10212_129)))
(assert (= temp10212_131 #x0000000000000000))
(assert (= temp10212_132 #x0000000000000005))
(assert (= temp10212_133 temp10212_132))
(assert (= temp10212_134 (select ARGNAME_stride_NAMEEND_VAL temp10212_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10212_114 temp10212_111)
             (bvsle temp10212_118 temp10212_115)
             (bvsle temp10212_122 temp10212_119)
             (bvsle temp10212_126 temp10212_123)
             (bvsle temp10212_130 temp10212_127)
             (bvsle temp10212_134 temp10212_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10212_135 #x0000000000000000))
(assert (= var1191735 temp10212_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10212_136 #x0000000000000001))
(assert (= var1191747 temp10212_136))
(assert (= temp10212_137 #x0000000000000000))
(assert (= var1179826 temp10212_137))
(assert (= temp10212_138 #x0000000000000000))
(assert (= temp10212_139 temp10212_138))
(assert (= temp10212_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10212_139)))
(assert (= temp10212_141 #x0000000000000001))
(assert (= temp10212_142 temp10212_141))
(assert (= temp10212_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10212_142)))
(assert (= temp10212_144 #x0000000000000002))
(assert (= temp10212_145 temp10212_144))
(assert (= temp10212_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10212_145)))
(assert (= temp10212_147 #x0000000000000003))
(assert (= temp10212_148 temp10212_147))
(assert (= temp10212_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10212_148)))
(assert (= temp10212_150 #x0000000000000004))
(assert (= temp10212_151 temp10212_150))
(assert (= temp10212_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10212_151)))
(assert (= temp10212_153 #x0000000000000005))
(assert (= temp10212_154 temp10212_153))
(assert (= temp10212_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10212_154)))
(assert (= temp10212_157 var1179826))
(assert (= temp10212_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10212_157)))
(assert (= temp10212_156 temp10212_158))
(assert (= var1191780
   (ite (bvslt temp10212_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10212_159 #x0000000000000000))
(assert (= var1191780 temp10212_159))
(assert (= temp10212_160 #x0000000000000000))
(assert (= var1179826 temp10212_160))
(assert (= temp10212_162 var1179826))
(assert (= temp10212_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10212_162)))
(assert (= temp10212_161 temp10212_163))
(assert (= var1191802 (bvsmod temp10212_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10212_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10212_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10212_165 #x0000000000000001))
(assert (= var1191803 temp10212_165))
(assert (= temp10212_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10212_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10212_167 #x0000000000000001))
(assert (= var1191823 temp10212_167))
(assert (= temp10212_168 #x0000000000000001))
(assert (= var1180714 temp10212_168))
(assert (= temp10212_169 #x0000000000000000))
(assert (= temp10212_170 temp10212_169))
(assert (= temp10212_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10212_170)))
(assert (= temp10212_172 #x0000000000000001))
(assert (= temp10212_173 temp10212_172))
(assert (= temp10212_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10212_173)))
(assert (= temp10212_175 #x0000000000000002))
(assert (= temp10212_176 temp10212_175))
(assert (= temp10212_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10212_176)))
(assert (= temp10212_178 #x0000000000000003))
(assert (= temp10212_179 temp10212_178))
(assert (= temp10212_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10212_179)))
(assert (= temp10212_181 #x0000000000000004))
(assert (= temp10212_182 temp10212_181))
(assert (= temp10212_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10212_182)))
(assert (= temp10212_184 #x0000000000000005))
(assert (= temp10212_185 temp10212_184))
(assert (= temp10212_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10212_185)))
(assert (= temp10212_187 #x0000000000000000))
(assert (= temp10212_188
   (ite (bvslt var1180714 temp10212_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10212_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10212_188)))
(assert (= var1191831 temp10212_189))
(assert (bvslt (ite (bvslt var1180714 temp10212_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10212_190 #x0000000000000001))
(assert (= var1180714 temp10212_190))
(assert (= temp10212_192 var1180714))
(assert (= temp10212_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10212_192)))
(assert (= temp10212_191 temp10212_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10212_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10212_194 #x0000000000000001))
(assert (= var1191836 temp10212_194))
(assert (= temp10212_195 #x0000000000000000))
(assert (= var1179826 temp10212_195))
(assert (= temp10212_197 var1179826))
(assert (= temp10212_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10212_197)))
(assert (= temp10212_196 temp10212_198))
(assert (= temp10212_199 #x0000000000000002))
(assert (= var1586025 temp10212_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10212_200 #x0000000000000001))
(assert (= var1191993 temp10212_200))
(assert (= temp10212_201 #x0000000000000001))
(assert (= var2700303 temp10212_201))
(assert (= temp10212_202 #x0000000000000001))
(assert (= var2962447 temp10212_202))
(assert (= temp10212_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10212_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10212_204 #x0000000000000001))
(assert (= var211058 temp10212_204))
(assert (= temp10212_205 #x0000000000000001))
(assert (= var211188 temp10212_205))
(assert (= var3879401 var211188))
(assert (= temp10212_206 #x0000000000000000))
(assert (= var3866802 temp10212_206))
(assert (= temp10212_207 #x0000000000000000))
(assert (= temp10212_208
   (ite (bvslt var3866802 temp10212_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10212_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10212_208)))
(assert (= var3879420 temp10212_209))
(assert (bvslt (ite (bvslt var3866802 temp10212_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10212_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10212_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10212_211 #x0000000000000000))
(assert (= var3879421 temp10212_211))
(assert (= temp10212_212 #x0000000000000001))
(assert (= var3867690 temp10212_212))
(assert (= temp10212_213 #x0000000000000000))
(assert (= temp10212_214
   (ite (bvslt var3867690 temp10212_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10212_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10212_214)))
(assert (= var3879423 temp10212_215))
(assert (bvslt (ite (bvslt var3867690 temp10212_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10212_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10212_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10212_217 #x0000000000000001))
(assert (= var3879424 temp10212_217))
(assert (= temp10212_218 #x0000000000000000))
(assert (= var4079423 temp10212_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10212_219 #x0000000000000002))
(assert (= var4208259 temp10212_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10212_220 #x0000000000000000))
(assert (= var4273820 temp10212_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10212_221 #x0000000000000001))
(assert (= var211058 temp10212_221))
(assert (= temp10212_222 #x0000000000000000))
(assert (= var6501140 temp10212_222))
(assert (= var6501107 var6501140))
(assert (= var6369671 var6501107))
(assert (= var6369667 var6369671))
(assert (= var212669 var6369667))
(assert (= temp10212_223 #x0000000000000000))
(assert (= var212669 temp10212_223))
(model-add temp10212_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10212_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10212_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10212_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





