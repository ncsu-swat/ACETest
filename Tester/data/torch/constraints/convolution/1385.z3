(declare-fun temp10577_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10577_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10577_3 () (_ BitVec 64))
(declare-fun temp10577_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10577_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10577_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10577_7 () (_ BitVec 64))
(declare-fun temp10577_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10577_9 () (_ BitVec 64))
(declare-fun temp10577_10 () (_ BitVec 64))
(declare-fun temp10577_11 () (_ BitVec 64))
(declare-fun temp10577_12 () (_ BitVec 64))
(declare-fun temp10577_13 () (_ BitVec 64))
(declare-fun temp10577_14 () (_ BitVec 64))
(declare-fun temp10577_15 () (_ BitVec 64))
(declare-fun temp10577_16 () (_ BitVec 64))
(declare-fun temp10577_17 () (_ BitVec 64))
(declare-fun temp10577_18 () (_ BitVec 64))
(declare-fun temp10577_19 () (_ BitVec 64))
(declare-fun temp10577_20 () (_ BitVec 64))
(declare-fun temp10577_21 () (_ BitVec 64))
(declare-fun temp10577_22 () (_ BitVec 64))
(declare-fun temp10577_23 () (_ BitVec 64))
(declare-fun temp10577_24 () (_ BitVec 64))
(declare-fun temp10577_25 () (_ BitVec 64))
(declare-fun temp10577_26 () (_ BitVec 64))
(declare-fun temp10577_27 () (_ BitVec 64))
(declare-fun temp10577_28 () (_ BitVec 64))
(declare-fun temp10577_29 () (_ BitVec 64))
(declare-fun temp10577_30 () (_ BitVec 64))
(declare-fun temp10577_31 () (_ BitVec 64))
(declare-fun temp10577_32 () (_ BitVec 64))
(declare-fun temp10577_33 () (_ BitVec 64))
(declare-fun temp10577_34 () (_ BitVec 64))
(declare-fun temp10577_35 () (_ BitVec 64))
(declare-fun temp10577_36 () (_ BitVec 64))
(declare-fun temp10577_37 () (_ BitVec 64))
(declare-fun temp10577_38 () (_ BitVec 64))
(declare-fun temp10577_39 () (_ BitVec 64))
(declare-fun temp10577_40 () (_ BitVec 64))
(declare-fun temp10577_41 () (_ BitVec 64))
(declare-fun temp10577_42 () (_ BitVec 64))
(declare-fun temp10577_43 () (_ BitVec 64))
(declare-fun temp10577_44 () (_ BitVec 64))
(declare-fun temp10577_45 () (_ BitVec 64))
(declare-fun temp10577_46 () (_ BitVec 64))
(declare-fun temp10577_47 () (_ BitVec 64))
(declare-fun temp10577_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10577_49 () (_ BitVec 64))
(declare-fun temp10577_50 () (_ BitVec 64))
(declare-fun temp10577_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10577_52 () (_ BitVec 64))
(declare-fun temp10577_53 () (_ BitVec 64))
(declare-fun temp10577_54 () (_ BitVec 64))
(declare-fun temp10577_55 () (_ BitVec 64))
(declare-fun temp10577_56 () (_ BitVec 64))
(declare-fun temp10577_57 () (_ BitVec 64))
(declare-fun temp10577_58 () (_ BitVec 64))
(declare-fun temp10577_59 () (_ BitVec 64))
(declare-fun temp10577_60 () (_ BitVec 64))
(declare-fun temp10577_61 () (_ BitVec 64))
(declare-fun temp10577_62 () (_ BitVec 64))
(declare-fun temp10577_63 () (_ BitVec 64))
(declare-fun temp10577_64 () (_ BitVec 64))
(declare-fun temp10577_65 () (_ BitVec 64))
(declare-fun temp10577_66 () (_ BitVec 64))
(declare-fun temp10577_67 () (_ BitVec 64))
(declare-fun temp10577_68 () (_ BitVec 64))
(declare-fun temp10577_69 () (_ BitVec 64))
(declare-fun temp10577_70 () (_ BitVec 64))
(declare-fun temp10577_71 () (_ BitVec 64))
(declare-fun temp10577_72 () (_ BitVec 64))
(declare-fun temp10577_73 () (_ BitVec 64))
(declare-fun temp10577_74 () (_ BitVec 64))
(declare-fun temp10577_75 () (_ BitVec 64))
(declare-fun temp10577_76 () (_ BitVec 64))
(declare-fun temp10577_77 () (_ BitVec 64))
(declare-fun temp10577_78 () (_ BitVec 64))
(declare-fun temp10577_79 () (_ BitVec 64))
(declare-fun temp10577_80 () (_ BitVec 64))
(declare-fun temp10577_81 () (_ BitVec 64))
(declare-fun temp10577_82 () (_ BitVec 64))
(declare-fun temp10577_83 () (_ BitVec 64))
(declare-fun temp10577_84 () (_ BitVec 64))
(declare-fun temp10577_85 () (_ BitVec 64))
(declare-fun temp10577_86 () (_ BitVec 64))
(declare-fun temp10577_87 () (_ BitVec 64))
(declare-fun temp10577_88 () (_ BitVec 64))
(declare-fun temp10577_89 () (_ BitVec 64))
(declare-fun temp10577_90 () (_ BitVec 64))
(declare-fun temp10577_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10577_92 () (_ BitVec 64))
(declare-fun temp10577_93 () (_ BitVec 64))
(declare-fun temp10577_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10577_95 () (_ BitVec 64))
(declare-fun temp10577_96 () (_ BitVec 64))
(declare-fun temp10577_97 () (_ BitVec 64))
(declare-fun temp10577_98 () (_ BitVec 64))
(declare-fun temp10577_99 () (_ BitVec 64))
(declare-fun temp10577_100 () (_ BitVec 64))
(declare-fun temp10577_101 () (_ BitVec 64))
(declare-fun temp10577_102 () (_ BitVec 64))
(declare-fun temp10577_103 () (_ BitVec 64))
(declare-fun temp10577_104 () (_ BitVec 64))
(declare-fun temp10577_105 () (_ BitVec 64))
(declare-fun temp10577_106 () (_ BitVec 64))
(declare-fun temp10577_107 () (_ BitVec 64))
(declare-fun temp10577_108 () (_ BitVec 64))
(declare-fun temp10577_109 () (_ BitVec 64))
(declare-fun temp10577_110 () (_ BitVec 64))
(declare-fun temp10577_111 () (_ BitVec 64))
(declare-fun temp10577_112 () (_ BitVec 64))
(declare-fun temp10577_113 () (_ BitVec 64))
(declare-fun temp10577_114 () (_ BitVec 64))
(declare-fun temp10577_115 () (_ BitVec 64))
(declare-fun temp10577_116 () (_ BitVec 64))
(declare-fun temp10577_117 () (_ BitVec 64))
(declare-fun temp10577_118 () (_ BitVec 64))
(declare-fun temp10577_119 () (_ BitVec 64))
(declare-fun temp10577_120 () (_ BitVec 64))
(declare-fun temp10577_121 () (_ BitVec 64))
(declare-fun temp10577_122 () (_ BitVec 64))
(declare-fun temp10577_123 () (_ BitVec 64))
(declare-fun temp10577_124 () (_ BitVec 64))
(declare-fun temp10577_125 () (_ BitVec 64))
(declare-fun temp10577_126 () (_ BitVec 64))
(declare-fun temp10577_127 () (_ BitVec 64))
(declare-fun temp10577_128 () (_ BitVec 64))
(declare-fun temp10577_129 () (_ BitVec 64))
(declare-fun temp10577_130 () (_ BitVec 64))
(declare-fun temp10577_131 () (_ BitVec 64))
(declare-fun temp10577_132 () (_ BitVec 64))
(declare-fun temp10577_133 () (_ BitVec 64))
(declare-fun temp10577_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10577_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10577_136 () (_ BitVec 64))
(declare-fun temp10577_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10577_138 () (_ BitVec 64))
(declare-fun temp10577_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10577_140 () (_ BitVec 64))
(declare-fun temp10577_141 () (_ BitVec 64))
(declare-fun temp10577_142 () (_ BitVec 64))
(declare-fun temp10577_143 () (_ BitVec 64))
(declare-fun temp10577_144 () (_ BitVec 64))
(declare-fun temp10577_145 () (_ BitVec 64))
(declare-fun temp10577_146 () (_ BitVec 64))
(declare-fun temp10577_147 () (_ BitVec 64))
(declare-fun temp10577_148 () (_ BitVec 64))
(declare-fun temp10577_149 () (_ BitVec 64))
(declare-fun temp10577_150 () (_ BitVec 64))
(declare-fun temp10577_151 () (_ BitVec 64))
(declare-fun temp10577_152 () (_ BitVec 64))
(declare-fun temp10577_153 () (_ BitVec 64))
(declare-fun temp10577_154 () (_ BitVec 64))
(declare-fun temp10577_155 () (_ BitVec 64))
(declare-fun temp10577_157 () (_ BitVec 64))
(declare-fun temp10577_158 () (_ BitVec 64))
(declare-fun temp10577_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10577_159 () (_ BitVec 64))
(declare-fun temp10577_160 () (_ BitVec 64))
(declare-fun temp10577_162 () (_ BitVec 64))
(declare-fun temp10577_163 () (_ BitVec 64))
(declare-fun temp10577_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10577_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10577_165 () (_ BitVec 64))
(declare-fun temp10577_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10577_167 () (_ BitVec 64))
(declare-fun temp10577_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10577_169 () (_ BitVec 64))
(declare-fun temp10577_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10577_171 () (_ BitVec 64))
(declare-fun temp10577_172 () (_ BitVec 64))
(declare-fun temp10577_173 () (_ BitVec 64))
(declare-fun temp10577_174 () (_ BitVec 64))
(declare-fun temp10577_175 () (_ BitVec 64))
(declare-fun temp10577_176 () (_ BitVec 64))
(declare-fun temp10577_177 () (_ BitVec 64))
(declare-fun temp10577_178 () (_ BitVec 64))
(declare-fun temp10577_179 () (_ BitVec 64))
(declare-fun temp10577_180 () (_ BitVec 64))
(declare-fun temp10577_181 () (_ BitVec 64))
(declare-fun temp10577_182 () (_ BitVec 64))
(declare-fun temp10577_183 () (_ BitVec 64))
(declare-fun temp10577_184 () (_ BitVec 64))
(declare-fun temp10577_185 () (_ BitVec 64))
(declare-fun temp10577_186 () (_ BitVec 64))
(declare-fun temp10577_187 () (_ BitVec 64))
(declare-fun temp10577_188 () (_ BitVec 64))
(declare-fun temp10577_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10577_190 () (_ BitVec 64))
(declare-fun temp10577_192 () (_ BitVec 64))
(declare-fun temp10577_193 () (_ BitVec 64))
(declare-fun temp10577_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10577_194 () (_ BitVec 64))
(declare-fun temp10577_195 () (_ BitVec 64))
(declare-fun temp10577_197 () (_ BitVec 64))
(declare-fun temp10577_198 () (_ BitVec 64))
(declare-fun temp10577_196 () (_ BitVec 64))
(declare-fun temp10577_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10577_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10577_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10577_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10577_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10577_204 () (_ BitVec 64))
(declare-fun temp10577_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10577_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10577_207 () (_ BitVec 64))
(declare-fun temp10577_208 () (_ BitVec 64))
(declare-fun temp10577_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10577_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10577_211 () (_ BitVec 64))
(declare-fun temp10577_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10577_213 () (_ BitVec 64))
(declare-fun temp10577_214 () (_ BitVec 64))
(declare-fun temp10577_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10577_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10577_217 () (_ BitVec 64))
(declare-fun temp10577_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10577_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10577_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp10577_221 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp10577_223 () (_ BitVec 64))
(declare-fun temp10577_222 () (_ BitVec 64))
(declare-fun temp10577_224 () (_ BitVec 64))
(declare-fun var7081450 () (_ BitVec 64))
(declare-fun temp10577_226 () (_ BitVec 64))
(declare-fun temp10577_225 () (_ BitVec 64))
(declare-fun temp10577_227 () (_ BitVec 64))
(assert (= temp10577_1 #x0000000000000001))
(assert (= var77203 temp10577_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10577_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10577_2)))
(assert (= temp10577_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10577_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10577_4 #x0000000000000000))
(assert (= var210941 temp10577_4))
(assert (= temp10577_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10577_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10577_6 #x0000000000000000))
(assert (= var210986 temp10577_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10577_7 #x0000000000000000))
(assert (= temp10577_8 temp10577_7))
(assert (= temp10577_9 (select ARGNAME_padding_NAMEEND_VAL temp10577_8)))
(assert (= temp10577_10 #x0000000000000001))
(assert (= temp10577_11 temp10577_10))
(assert (= temp10577_12 (select ARGNAME_padding_NAMEEND_VAL temp10577_11)))
(assert (= temp10577_13 #x0000000000000002))
(assert (= temp10577_14 temp10577_13))
(assert (= temp10577_15 (select ARGNAME_padding_NAMEEND_VAL temp10577_14)))
(assert (= temp10577_16 #x0000000000000003))
(assert (= temp10577_17 temp10577_16))
(assert (= temp10577_18 (select ARGNAME_padding_NAMEEND_VAL temp10577_17)))
(assert (= temp10577_19 #x0000000000000004))
(assert (= temp10577_20 temp10577_19))
(assert (= temp10577_21 (select ARGNAME_padding_NAMEEND_VAL temp10577_20)))
(assert (= temp10577_22 #x0000000000000005))
(assert (= temp10577_23 temp10577_22))
(assert (= temp10577_24 (select ARGNAME_padding_NAMEEND_VAL temp10577_23)))
(assert (= temp10577_25 #x0000000000000000))
(assert (= temp10577_26 #x0000000000000000))
(assert (= temp10577_27 temp10577_26))
(assert (= temp10577_28 (select ARGNAME_padding_NAMEEND_VAL temp10577_27)))
(assert (= temp10577_29 #x0000000000000000))
(assert (= temp10577_30 #x0000000000000001))
(assert (= temp10577_31 temp10577_30))
(assert (= temp10577_32 (select ARGNAME_padding_NAMEEND_VAL temp10577_31)))
(assert (= temp10577_33 #x0000000000000000))
(assert (= temp10577_34 #x0000000000000002))
(assert (= temp10577_35 temp10577_34))
(assert (= temp10577_36 (select ARGNAME_padding_NAMEEND_VAL temp10577_35)))
(assert (= temp10577_37 #x0000000000000000))
(assert (= temp10577_38 #x0000000000000003))
(assert (= temp10577_39 temp10577_38))
(assert (= temp10577_40 (select ARGNAME_padding_NAMEEND_VAL temp10577_39)))
(assert (= temp10577_41 #x0000000000000000))
(assert (= temp10577_42 #x0000000000000004))
(assert (= temp10577_43 temp10577_42))
(assert (= temp10577_44 (select ARGNAME_padding_NAMEEND_VAL temp10577_43)))
(assert (= temp10577_45 #x0000000000000000))
(assert (= temp10577_46 #x0000000000000005))
(assert (= temp10577_47 temp10577_46))
(assert (= temp10577_48 (select ARGNAME_padding_NAMEEND_VAL temp10577_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10577_28 temp10577_25)
             (bvslt temp10577_32 temp10577_29)
             (bvslt temp10577_36 temp10577_33)
             (bvslt temp10577_40 temp10577_37)
             (bvslt temp10577_44 temp10577_41)
             (bvslt temp10577_48 temp10577_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10577_49 #x0000000000000000))
(assert (= var1191714 temp10577_49))
(assert (= temp10577_50 #x0000000000000000))
(assert (= temp10577_51 temp10577_50))
(assert (= temp10577_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10577_51)))
(assert (= temp10577_53 #x0000000000000001))
(assert (= temp10577_54 temp10577_53))
(assert (= temp10577_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10577_54)))
(assert (= temp10577_56 #x0000000000000002))
(assert (= temp10577_57 temp10577_56))
(assert (= temp10577_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10577_57)))
(assert (= temp10577_59 #x0000000000000003))
(assert (= temp10577_60 temp10577_59))
(assert (= temp10577_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10577_60)))
(assert (= temp10577_62 #x0000000000000004))
(assert (= temp10577_63 temp10577_62))
(assert (= temp10577_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10577_63)))
(assert (= temp10577_65 #x0000000000000005))
(assert (= temp10577_66 temp10577_65))
(assert (= temp10577_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10577_66)))
(assert (= temp10577_68 #x0000000000000000))
(assert (= temp10577_69 #x0000000000000000))
(assert (= temp10577_70 temp10577_69))
(assert (= temp10577_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10577_70)))
(assert (= temp10577_72 #x0000000000000000))
(assert (= temp10577_73 #x0000000000000001))
(assert (= temp10577_74 temp10577_73))
(assert (= temp10577_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10577_74)))
(assert (= temp10577_76 #x0000000000000000))
(assert (= temp10577_77 #x0000000000000002))
(assert (= temp10577_78 temp10577_77))
(assert (= temp10577_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10577_78)))
(assert (= temp10577_80 #x0000000000000000))
(assert (= temp10577_81 #x0000000000000003))
(assert (= temp10577_82 temp10577_81))
(assert (= temp10577_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10577_82)))
(assert (= temp10577_84 #x0000000000000000))
(assert (= temp10577_85 #x0000000000000004))
(assert (= temp10577_86 temp10577_85))
(assert (= temp10577_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10577_86)))
(assert (= temp10577_88 #x0000000000000000))
(assert (= temp10577_89 #x0000000000000005))
(assert (= temp10577_90 temp10577_89))
(assert (= temp10577_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10577_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10577_71 temp10577_68)
             (bvslt temp10577_75 temp10577_72)
             (bvslt temp10577_79 temp10577_76)
             (bvslt temp10577_83 temp10577_80)
             (bvslt temp10577_87 temp10577_84)
             (bvslt temp10577_91 temp10577_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10577_92 #x0000000000000000))
(assert (= var1191725 temp10577_92))
(assert (= temp10577_93 #x0000000000000000))
(assert (= temp10577_94 temp10577_93))
(assert (= temp10577_95 (select ARGNAME_stride_NAMEEND_VAL temp10577_94)))
(assert (= temp10577_96 #x0000000000000001))
(assert (= temp10577_97 temp10577_96))
(assert (= temp10577_98 (select ARGNAME_stride_NAMEEND_VAL temp10577_97)))
(assert (= temp10577_99 #x0000000000000002))
(assert (= temp10577_100 temp10577_99))
(assert (= temp10577_101 (select ARGNAME_stride_NAMEEND_VAL temp10577_100)))
(assert (= temp10577_102 #x0000000000000003))
(assert (= temp10577_103 temp10577_102))
(assert (= temp10577_104 (select ARGNAME_stride_NAMEEND_VAL temp10577_103)))
(assert (= temp10577_105 #x0000000000000004))
(assert (= temp10577_106 temp10577_105))
(assert (= temp10577_107 (select ARGNAME_stride_NAMEEND_VAL temp10577_106)))
(assert (= temp10577_108 #x0000000000000005))
(assert (= temp10577_109 temp10577_108))
(assert (= temp10577_110 (select ARGNAME_stride_NAMEEND_VAL temp10577_109)))
(assert (= temp10577_111 #x0000000000000000))
(assert (= temp10577_112 #x0000000000000000))
(assert (= temp10577_113 temp10577_112))
(assert (= temp10577_114 (select ARGNAME_stride_NAMEEND_VAL temp10577_113)))
(assert (= temp10577_115 #x0000000000000000))
(assert (= temp10577_116 #x0000000000000001))
(assert (= temp10577_117 temp10577_116))
(assert (= temp10577_118 (select ARGNAME_stride_NAMEEND_VAL temp10577_117)))
(assert (= temp10577_119 #x0000000000000000))
(assert (= temp10577_120 #x0000000000000002))
(assert (= temp10577_121 temp10577_120))
(assert (= temp10577_122 (select ARGNAME_stride_NAMEEND_VAL temp10577_121)))
(assert (= temp10577_123 #x0000000000000000))
(assert (= temp10577_124 #x0000000000000003))
(assert (= temp10577_125 temp10577_124))
(assert (= temp10577_126 (select ARGNAME_stride_NAMEEND_VAL temp10577_125)))
(assert (= temp10577_127 #x0000000000000000))
(assert (= temp10577_128 #x0000000000000004))
(assert (= temp10577_129 temp10577_128))
(assert (= temp10577_130 (select ARGNAME_stride_NAMEEND_VAL temp10577_129)))
(assert (= temp10577_131 #x0000000000000000))
(assert (= temp10577_132 #x0000000000000005))
(assert (= temp10577_133 temp10577_132))
(assert (= temp10577_134 (select ARGNAME_stride_NAMEEND_VAL temp10577_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10577_114 temp10577_111)
             (bvsle temp10577_118 temp10577_115)
             (bvsle temp10577_122 temp10577_119)
             (bvsle temp10577_126 temp10577_123)
             (bvsle temp10577_130 temp10577_127)
             (bvsle temp10577_134 temp10577_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10577_135 #x0000000000000000))
(assert (= var1191735 temp10577_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10577_136 #x0000000000000001))
(assert (= var1191747 temp10577_136))
(assert (= temp10577_137 #x0000000000000000))
(assert (= var1179826 temp10577_137))
(assert (= temp10577_138 #x0000000000000000))
(assert (= temp10577_139 temp10577_138))
(assert (= temp10577_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10577_139)))
(assert (= temp10577_141 #x0000000000000001))
(assert (= temp10577_142 temp10577_141))
(assert (= temp10577_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10577_142)))
(assert (= temp10577_144 #x0000000000000002))
(assert (= temp10577_145 temp10577_144))
(assert (= temp10577_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10577_145)))
(assert (= temp10577_147 #x0000000000000003))
(assert (= temp10577_148 temp10577_147))
(assert (= temp10577_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10577_148)))
(assert (= temp10577_150 #x0000000000000004))
(assert (= temp10577_151 temp10577_150))
(assert (= temp10577_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10577_151)))
(assert (= temp10577_153 #x0000000000000005))
(assert (= temp10577_154 temp10577_153))
(assert (= temp10577_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10577_154)))
(assert (= temp10577_157 var1179826))
(assert (= temp10577_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10577_157)))
(assert (= temp10577_156 temp10577_158))
(assert (= var1191780
   (ite (bvslt temp10577_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10577_159 #x0000000000000000))
(assert (= var1191780 temp10577_159))
(assert (= temp10577_160 #x0000000000000000))
(assert (= var1179826 temp10577_160))
(assert (= temp10577_162 var1179826))
(assert (= temp10577_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10577_162)))
(assert (= temp10577_161 temp10577_163))
(assert (= var1191802 (bvsmod temp10577_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10577_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10577_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10577_165 #x0000000000000001))
(assert (= var1191803 temp10577_165))
(assert (= temp10577_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10577_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10577_167 #x0000000000000001))
(assert (= var1191823 temp10577_167))
(assert (= temp10577_168 #x0000000000000001))
(assert (= var1180714 temp10577_168))
(assert (= temp10577_169 #x0000000000000000))
(assert (= temp10577_170 temp10577_169))
(assert (= temp10577_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10577_170)))
(assert (= temp10577_172 #x0000000000000001))
(assert (= temp10577_173 temp10577_172))
(assert (= temp10577_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10577_173)))
(assert (= temp10577_175 #x0000000000000002))
(assert (= temp10577_176 temp10577_175))
(assert (= temp10577_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10577_176)))
(assert (= temp10577_178 #x0000000000000003))
(assert (= temp10577_179 temp10577_178))
(assert (= temp10577_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10577_179)))
(assert (= temp10577_181 #x0000000000000004))
(assert (= temp10577_182 temp10577_181))
(assert (= temp10577_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10577_182)))
(assert (= temp10577_184 #x0000000000000005))
(assert (= temp10577_185 temp10577_184))
(assert (= temp10577_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10577_185)))
(assert (= temp10577_187 #x0000000000000000))
(assert (= temp10577_188
   (ite (bvslt var1180714 temp10577_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10577_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10577_188)))
(assert (= var1191831 temp10577_189))
(assert (bvslt (ite (bvslt var1180714 temp10577_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10577_190 #x0000000000000001))
(assert (= var1180714 temp10577_190))
(assert (= temp10577_192 var1180714))
(assert (= temp10577_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10577_192)))
(assert (= temp10577_191 temp10577_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10577_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10577_194 #x0000000000000001))
(assert (= var1191836 temp10577_194))
(assert (= temp10577_195 #x0000000000000000))
(assert (= var1179826 temp10577_195))
(assert (= temp10577_197 var1179826))
(assert (= temp10577_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10577_197)))
(assert (= temp10577_196 temp10577_198))
(assert (= temp10577_199 #x0000000000000002))
(assert (= var1586025 temp10577_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10577_200 #x0000000000000001))
(assert (= var1191993 temp10577_200))
(assert (= temp10577_201 #x0000000000000001))
(assert (= var2700303 temp10577_201))
(assert (= temp10577_202 #x0000000000000001))
(assert (= var2962447 temp10577_202))
(assert (= temp10577_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10577_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10577_204 #x0000000000000001))
(assert (= var211058 temp10577_204))
(assert (= temp10577_205 #x0000000000000001))
(assert (= var211188 temp10577_205))
(assert (= var3879401 var211188))
(assert (= temp10577_206 #x0000000000000000))
(assert (= var3866802 temp10577_206))
(assert (= temp10577_207 #x0000000000000000))
(assert (= temp10577_208
   (ite (bvslt var3866802 temp10577_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10577_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10577_208)))
(assert (= var3879420 temp10577_209))
(assert (bvslt (ite (bvslt var3866802 temp10577_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10577_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10577_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10577_211 #x0000000000000000))
(assert (= var3879421 temp10577_211))
(assert (= temp10577_212 #x0000000000000001))
(assert (= var3867690 temp10577_212))
(assert (= temp10577_213 #x0000000000000000))
(assert (= temp10577_214
   (ite (bvslt var3867690 temp10577_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10577_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10577_214)))
(assert (= var3879423 temp10577_215))
(assert (bvslt (ite (bvslt var3867690 temp10577_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10577_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10577_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10577_217 #x0000000000000001))
(assert (= var3879424 temp10577_217))
(assert (= temp10577_218 #x0000000000000000))
(assert (= var4133117 temp10577_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10577_219 #x0000000000000002))
(assert (= var4339331 temp10577_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10577_220 #x0000000000000000))
(assert (= var4404892 temp10577_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5124496 var211201))
(assert (= var211494 var210913))
(assert (= temp10577_221 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp10577_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10577_223 #x0000000000000001))
(assert (= temp10577_222 temp10577_223))
(assert (= temp10577_224 #x0000000000000001))
(assert (= var7081450 temp10577_224))
(assert (= temp10577_226 #xffffffffffffffff))
(assert (= temp10577_225 temp10577_226))
(assert (= temp10577_227 #x0000000000000001))
(assert (= var211058 temp10577_227))
(model-add temp10577_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10577_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10577_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10577_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



