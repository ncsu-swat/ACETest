(declare-fun temp10745_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10745_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10745_3 () (_ BitVec 64))
(declare-fun temp10745_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10745_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10745_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10745_7 () (_ BitVec 64))
(declare-fun temp10745_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10745_9 () (_ BitVec 64))
(declare-fun temp10745_10 () (_ BitVec 64))
(declare-fun temp10745_11 () (_ BitVec 64))
(declare-fun temp10745_12 () (_ BitVec 64))
(declare-fun temp10745_13 () (_ BitVec 64))
(declare-fun temp10745_14 () (_ BitVec 64))
(declare-fun temp10745_15 () (_ BitVec 64))
(declare-fun temp10745_16 () (_ BitVec 64))
(declare-fun temp10745_17 () (_ BitVec 64))
(declare-fun temp10745_18 () (_ BitVec 64))
(declare-fun temp10745_19 () (_ BitVec 64))
(declare-fun temp10745_20 () (_ BitVec 64))
(declare-fun temp10745_21 () (_ BitVec 64))
(declare-fun temp10745_22 () (_ BitVec 64))
(declare-fun temp10745_23 () (_ BitVec 64))
(declare-fun temp10745_24 () (_ BitVec 64))
(declare-fun temp10745_25 () (_ BitVec 64))
(declare-fun temp10745_26 () (_ BitVec 64))
(declare-fun temp10745_27 () (_ BitVec 64))
(declare-fun temp10745_28 () (_ BitVec 64))
(declare-fun temp10745_29 () (_ BitVec 64))
(declare-fun temp10745_30 () (_ BitVec 64))
(declare-fun temp10745_31 () (_ BitVec 64))
(declare-fun temp10745_32 () (_ BitVec 64))
(declare-fun temp10745_33 () (_ BitVec 64))
(declare-fun temp10745_34 () (_ BitVec 64))
(declare-fun temp10745_35 () (_ BitVec 64))
(declare-fun temp10745_36 () (_ BitVec 64))
(declare-fun temp10745_37 () (_ BitVec 64))
(declare-fun temp10745_38 () (_ BitVec 64))
(declare-fun temp10745_39 () (_ BitVec 64))
(declare-fun temp10745_40 () (_ BitVec 64))
(declare-fun temp10745_41 () (_ BitVec 64))
(declare-fun temp10745_42 () (_ BitVec 64))
(declare-fun temp10745_43 () (_ BitVec 64))
(declare-fun temp10745_44 () (_ BitVec 64))
(declare-fun temp10745_45 () (_ BitVec 64))
(declare-fun temp10745_46 () (_ BitVec 64))
(declare-fun temp10745_47 () (_ BitVec 64))
(declare-fun temp10745_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10745_49 () (_ BitVec 64))
(declare-fun temp10745_50 () (_ BitVec 64))
(declare-fun temp10745_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10745_52 () (_ BitVec 64))
(declare-fun temp10745_53 () (_ BitVec 64))
(declare-fun temp10745_54 () (_ BitVec 64))
(declare-fun temp10745_55 () (_ BitVec 64))
(declare-fun temp10745_56 () (_ BitVec 64))
(declare-fun temp10745_57 () (_ BitVec 64))
(declare-fun temp10745_58 () (_ BitVec 64))
(declare-fun temp10745_59 () (_ BitVec 64))
(declare-fun temp10745_60 () (_ BitVec 64))
(declare-fun temp10745_61 () (_ BitVec 64))
(declare-fun temp10745_62 () (_ BitVec 64))
(declare-fun temp10745_63 () (_ BitVec 64))
(declare-fun temp10745_64 () (_ BitVec 64))
(declare-fun temp10745_65 () (_ BitVec 64))
(declare-fun temp10745_66 () (_ BitVec 64))
(declare-fun temp10745_67 () (_ BitVec 64))
(declare-fun temp10745_68 () (_ BitVec 64))
(declare-fun temp10745_69 () (_ BitVec 64))
(declare-fun temp10745_70 () (_ BitVec 64))
(declare-fun temp10745_71 () (_ BitVec 64))
(declare-fun temp10745_72 () (_ BitVec 64))
(declare-fun temp10745_73 () (_ BitVec 64))
(declare-fun temp10745_74 () (_ BitVec 64))
(declare-fun temp10745_75 () (_ BitVec 64))
(declare-fun temp10745_76 () (_ BitVec 64))
(declare-fun temp10745_77 () (_ BitVec 64))
(declare-fun temp10745_78 () (_ BitVec 64))
(declare-fun temp10745_79 () (_ BitVec 64))
(declare-fun temp10745_80 () (_ BitVec 64))
(declare-fun temp10745_81 () (_ BitVec 64))
(declare-fun temp10745_82 () (_ BitVec 64))
(declare-fun temp10745_83 () (_ BitVec 64))
(declare-fun temp10745_84 () (_ BitVec 64))
(declare-fun temp10745_85 () (_ BitVec 64))
(declare-fun temp10745_86 () (_ BitVec 64))
(declare-fun temp10745_87 () (_ BitVec 64))
(declare-fun temp10745_88 () (_ BitVec 64))
(declare-fun temp10745_89 () (_ BitVec 64))
(declare-fun temp10745_90 () (_ BitVec 64))
(declare-fun temp10745_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10745_92 () (_ BitVec 64))
(declare-fun temp10745_93 () (_ BitVec 64))
(declare-fun temp10745_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10745_95 () (_ BitVec 64))
(declare-fun temp10745_96 () (_ BitVec 64))
(declare-fun temp10745_97 () (_ BitVec 64))
(declare-fun temp10745_98 () (_ BitVec 64))
(declare-fun temp10745_99 () (_ BitVec 64))
(declare-fun temp10745_100 () (_ BitVec 64))
(declare-fun temp10745_101 () (_ BitVec 64))
(declare-fun temp10745_102 () (_ BitVec 64))
(declare-fun temp10745_103 () (_ BitVec 64))
(declare-fun temp10745_104 () (_ BitVec 64))
(declare-fun temp10745_105 () (_ BitVec 64))
(declare-fun temp10745_106 () (_ BitVec 64))
(declare-fun temp10745_107 () (_ BitVec 64))
(declare-fun temp10745_108 () (_ BitVec 64))
(declare-fun temp10745_109 () (_ BitVec 64))
(declare-fun temp10745_110 () (_ BitVec 64))
(declare-fun temp10745_111 () (_ BitVec 64))
(declare-fun temp10745_112 () (_ BitVec 64))
(declare-fun temp10745_113 () (_ BitVec 64))
(declare-fun temp10745_114 () (_ BitVec 64))
(declare-fun temp10745_115 () (_ BitVec 64))
(declare-fun temp10745_116 () (_ BitVec 64))
(declare-fun temp10745_117 () (_ BitVec 64))
(declare-fun temp10745_118 () (_ BitVec 64))
(declare-fun temp10745_119 () (_ BitVec 64))
(declare-fun temp10745_120 () (_ BitVec 64))
(declare-fun temp10745_121 () (_ BitVec 64))
(declare-fun temp10745_122 () (_ BitVec 64))
(declare-fun temp10745_123 () (_ BitVec 64))
(declare-fun temp10745_124 () (_ BitVec 64))
(declare-fun temp10745_125 () (_ BitVec 64))
(declare-fun temp10745_126 () (_ BitVec 64))
(declare-fun temp10745_127 () (_ BitVec 64))
(declare-fun temp10745_128 () (_ BitVec 64))
(declare-fun temp10745_129 () (_ BitVec 64))
(declare-fun temp10745_130 () (_ BitVec 64))
(declare-fun temp10745_131 () (_ BitVec 64))
(declare-fun temp10745_132 () (_ BitVec 64))
(declare-fun temp10745_133 () (_ BitVec 64))
(declare-fun temp10745_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10745_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10745_136 () (_ BitVec 64))
(declare-fun temp10745_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10745_138 () (_ BitVec 64))
(declare-fun temp10745_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10745_140 () (_ BitVec 64))
(declare-fun temp10745_141 () (_ BitVec 64))
(declare-fun temp10745_142 () (_ BitVec 64))
(declare-fun temp10745_143 () (_ BitVec 64))
(declare-fun temp10745_144 () (_ BitVec 64))
(declare-fun temp10745_145 () (_ BitVec 64))
(declare-fun temp10745_146 () (_ BitVec 64))
(declare-fun temp10745_147 () (_ BitVec 64))
(declare-fun temp10745_148 () (_ BitVec 64))
(declare-fun temp10745_149 () (_ BitVec 64))
(declare-fun temp10745_150 () (_ BitVec 64))
(declare-fun temp10745_151 () (_ BitVec 64))
(declare-fun temp10745_152 () (_ BitVec 64))
(declare-fun temp10745_153 () (_ BitVec 64))
(declare-fun temp10745_154 () (_ BitVec 64))
(declare-fun temp10745_155 () (_ BitVec 64))
(declare-fun temp10745_157 () (_ BitVec 64))
(declare-fun temp10745_158 () (_ BitVec 64))
(declare-fun temp10745_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10745_159 () (_ BitVec 64))
(declare-fun temp10745_160 () (_ BitVec 64))
(declare-fun temp10745_162 () (_ BitVec 64))
(declare-fun temp10745_163 () (_ BitVec 64))
(declare-fun temp10745_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10745_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10745_165 () (_ BitVec 64))
(declare-fun temp10745_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10745_167 () (_ BitVec 64))
(declare-fun temp10745_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10745_169 () (_ BitVec 64))
(declare-fun temp10745_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10745_171 () (_ BitVec 64))
(declare-fun temp10745_172 () (_ BitVec 64))
(declare-fun temp10745_173 () (_ BitVec 64))
(declare-fun temp10745_174 () (_ BitVec 64))
(declare-fun temp10745_175 () (_ BitVec 64))
(declare-fun temp10745_176 () (_ BitVec 64))
(declare-fun temp10745_177 () (_ BitVec 64))
(declare-fun temp10745_178 () (_ BitVec 64))
(declare-fun temp10745_179 () (_ BitVec 64))
(declare-fun temp10745_180 () (_ BitVec 64))
(declare-fun temp10745_181 () (_ BitVec 64))
(declare-fun temp10745_182 () (_ BitVec 64))
(declare-fun temp10745_183 () (_ BitVec 64))
(declare-fun temp10745_184 () (_ BitVec 64))
(declare-fun temp10745_185 () (_ BitVec 64))
(declare-fun temp10745_186 () (_ BitVec 64))
(declare-fun temp10745_187 () (_ BitVec 64))
(declare-fun temp10745_188 () (_ BitVec 64))
(declare-fun temp10745_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10745_190 () (_ BitVec 64))
(declare-fun temp10745_192 () (_ BitVec 64))
(declare-fun temp10745_193 () (_ BitVec 64))
(declare-fun temp10745_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10745_194 () (_ BitVec 64))
(declare-fun temp10745_195 () (_ BitVec 64))
(declare-fun temp10745_197 () (_ BitVec 64))
(declare-fun temp10745_198 () (_ BitVec 64))
(declare-fun temp10745_196 () (_ BitVec 64))
(declare-fun temp10745_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10745_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10745_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10745_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10745_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10745_204 () (_ BitVec 64))
(declare-fun temp10745_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10745_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10745_207 () (_ BitVec 64))
(declare-fun temp10745_208 () (_ BitVec 64))
(declare-fun temp10745_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10745_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10745_211 () (_ BitVec 64))
(declare-fun temp10745_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10745_213 () (_ BitVec 64))
(declare-fun temp10745_214 () (_ BitVec 64))
(declare-fun temp10745_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10745_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10745_217 () (_ BitVec 64))
(declare-fun temp10745_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10745_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10745_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var211890 () (_ BitVec 64))
(declare-fun temp10745_221 () (_ BitVec 64))
(declare-fun var211891 () (_ BitVec 64))
(declare-fun temp10745_222 () (_ BitVec 64))
(assert (= temp10745_1 #x0000000000000001))
(assert (= var77203 temp10745_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10745_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10745_2)))
(assert (= temp10745_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10745_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10745_4 #x0000000000000000))
(assert (= var210941 temp10745_4))
(assert (= temp10745_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10745_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10745_6 #x0000000000000000))
(assert (= var210986 temp10745_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10745_7 #x0000000000000000))
(assert (= temp10745_8 temp10745_7))
(assert (= temp10745_9 (select ARGNAME_padding_NAMEEND_VAL temp10745_8)))
(assert (= temp10745_10 #x0000000000000001))
(assert (= temp10745_11 temp10745_10))
(assert (= temp10745_12 (select ARGNAME_padding_NAMEEND_VAL temp10745_11)))
(assert (= temp10745_13 #x0000000000000002))
(assert (= temp10745_14 temp10745_13))
(assert (= temp10745_15 (select ARGNAME_padding_NAMEEND_VAL temp10745_14)))
(assert (= temp10745_16 #x0000000000000003))
(assert (= temp10745_17 temp10745_16))
(assert (= temp10745_18 (select ARGNAME_padding_NAMEEND_VAL temp10745_17)))
(assert (= temp10745_19 #x0000000000000004))
(assert (= temp10745_20 temp10745_19))
(assert (= temp10745_21 (select ARGNAME_padding_NAMEEND_VAL temp10745_20)))
(assert (= temp10745_22 #x0000000000000005))
(assert (= temp10745_23 temp10745_22))
(assert (= temp10745_24 (select ARGNAME_padding_NAMEEND_VAL temp10745_23)))
(assert (= temp10745_25 #x0000000000000000))
(assert (= temp10745_26 #x0000000000000000))
(assert (= temp10745_27 temp10745_26))
(assert (= temp10745_28 (select ARGNAME_padding_NAMEEND_VAL temp10745_27)))
(assert (= temp10745_29 #x0000000000000000))
(assert (= temp10745_30 #x0000000000000001))
(assert (= temp10745_31 temp10745_30))
(assert (= temp10745_32 (select ARGNAME_padding_NAMEEND_VAL temp10745_31)))
(assert (= temp10745_33 #x0000000000000000))
(assert (= temp10745_34 #x0000000000000002))
(assert (= temp10745_35 temp10745_34))
(assert (= temp10745_36 (select ARGNAME_padding_NAMEEND_VAL temp10745_35)))
(assert (= temp10745_37 #x0000000000000000))
(assert (= temp10745_38 #x0000000000000003))
(assert (= temp10745_39 temp10745_38))
(assert (= temp10745_40 (select ARGNAME_padding_NAMEEND_VAL temp10745_39)))
(assert (= temp10745_41 #x0000000000000000))
(assert (= temp10745_42 #x0000000000000004))
(assert (= temp10745_43 temp10745_42))
(assert (= temp10745_44 (select ARGNAME_padding_NAMEEND_VAL temp10745_43)))
(assert (= temp10745_45 #x0000000000000000))
(assert (= temp10745_46 #x0000000000000005))
(assert (= temp10745_47 temp10745_46))
(assert (= temp10745_48 (select ARGNAME_padding_NAMEEND_VAL temp10745_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10745_28 temp10745_25)
             (bvslt temp10745_32 temp10745_29)
             (bvslt temp10745_36 temp10745_33)
             (bvslt temp10745_40 temp10745_37)
             (bvslt temp10745_44 temp10745_41)
             (bvslt temp10745_48 temp10745_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10745_49 #x0000000000000000))
(assert (= var1191714 temp10745_49))
(assert (= temp10745_50 #x0000000000000000))
(assert (= temp10745_51 temp10745_50))
(assert (= temp10745_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10745_51)))
(assert (= temp10745_53 #x0000000000000001))
(assert (= temp10745_54 temp10745_53))
(assert (= temp10745_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10745_54)))
(assert (= temp10745_56 #x0000000000000002))
(assert (= temp10745_57 temp10745_56))
(assert (= temp10745_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10745_57)))
(assert (= temp10745_59 #x0000000000000003))
(assert (= temp10745_60 temp10745_59))
(assert (= temp10745_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10745_60)))
(assert (= temp10745_62 #x0000000000000004))
(assert (= temp10745_63 temp10745_62))
(assert (= temp10745_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10745_63)))
(assert (= temp10745_65 #x0000000000000005))
(assert (= temp10745_66 temp10745_65))
(assert (= temp10745_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10745_66)))
(assert (= temp10745_68 #x0000000000000000))
(assert (= temp10745_69 #x0000000000000000))
(assert (= temp10745_70 temp10745_69))
(assert (= temp10745_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10745_70)))
(assert (= temp10745_72 #x0000000000000000))
(assert (= temp10745_73 #x0000000000000001))
(assert (= temp10745_74 temp10745_73))
(assert (= temp10745_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10745_74)))
(assert (= temp10745_76 #x0000000000000000))
(assert (= temp10745_77 #x0000000000000002))
(assert (= temp10745_78 temp10745_77))
(assert (= temp10745_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10745_78)))
(assert (= temp10745_80 #x0000000000000000))
(assert (= temp10745_81 #x0000000000000003))
(assert (= temp10745_82 temp10745_81))
(assert (= temp10745_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10745_82)))
(assert (= temp10745_84 #x0000000000000000))
(assert (= temp10745_85 #x0000000000000004))
(assert (= temp10745_86 temp10745_85))
(assert (= temp10745_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10745_86)))
(assert (= temp10745_88 #x0000000000000000))
(assert (= temp10745_89 #x0000000000000005))
(assert (= temp10745_90 temp10745_89))
(assert (= temp10745_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10745_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10745_71 temp10745_68)
             (bvslt temp10745_75 temp10745_72)
             (bvslt temp10745_79 temp10745_76)
             (bvslt temp10745_83 temp10745_80)
             (bvslt temp10745_87 temp10745_84)
             (bvslt temp10745_91 temp10745_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10745_92 #x0000000000000000))
(assert (= var1191725 temp10745_92))
(assert (= temp10745_93 #x0000000000000000))
(assert (= temp10745_94 temp10745_93))
(assert (= temp10745_95 (select ARGNAME_stride_NAMEEND_VAL temp10745_94)))
(assert (= temp10745_96 #x0000000000000001))
(assert (= temp10745_97 temp10745_96))
(assert (= temp10745_98 (select ARGNAME_stride_NAMEEND_VAL temp10745_97)))
(assert (= temp10745_99 #x0000000000000002))
(assert (= temp10745_100 temp10745_99))
(assert (= temp10745_101 (select ARGNAME_stride_NAMEEND_VAL temp10745_100)))
(assert (= temp10745_102 #x0000000000000003))
(assert (= temp10745_103 temp10745_102))
(assert (= temp10745_104 (select ARGNAME_stride_NAMEEND_VAL temp10745_103)))
(assert (= temp10745_105 #x0000000000000004))
(assert (= temp10745_106 temp10745_105))
(assert (= temp10745_107 (select ARGNAME_stride_NAMEEND_VAL temp10745_106)))
(assert (= temp10745_108 #x0000000000000005))
(assert (= temp10745_109 temp10745_108))
(assert (= temp10745_110 (select ARGNAME_stride_NAMEEND_VAL temp10745_109)))
(assert (= temp10745_111 #x0000000000000000))
(assert (= temp10745_112 #x0000000000000000))
(assert (= temp10745_113 temp10745_112))
(assert (= temp10745_114 (select ARGNAME_stride_NAMEEND_VAL temp10745_113)))
(assert (= temp10745_115 #x0000000000000000))
(assert (= temp10745_116 #x0000000000000001))
(assert (= temp10745_117 temp10745_116))
(assert (= temp10745_118 (select ARGNAME_stride_NAMEEND_VAL temp10745_117)))
(assert (= temp10745_119 #x0000000000000000))
(assert (= temp10745_120 #x0000000000000002))
(assert (= temp10745_121 temp10745_120))
(assert (= temp10745_122 (select ARGNAME_stride_NAMEEND_VAL temp10745_121)))
(assert (= temp10745_123 #x0000000000000000))
(assert (= temp10745_124 #x0000000000000003))
(assert (= temp10745_125 temp10745_124))
(assert (= temp10745_126 (select ARGNAME_stride_NAMEEND_VAL temp10745_125)))
(assert (= temp10745_127 #x0000000000000000))
(assert (= temp10745_128 #x0000000000000004))
(assert (= temp10745_129 temp10745_128))
(assert (= temp10745_130 (select ARGNAME_stride_NAMEEND_VAL temp10745_129)))
(assert (= temp10745_131 #x0000000000000000))
(assert (= temp10745_132 #x0000000000000005))
(assert (= temp10745_133 temp10745_132))
(assert (= temp10745_134 (select ARGNAME_stride_NAMEEND_VAL temp10745_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10745_114 temp10745_111)
             (bvsle temp10745_118 temp10745_115)
             (bvsle temp10745_122 temp10745_119)
             (bvsle temp10745_126 temp10745_123)
             (bvsle temp10745_130 temp10745_127)
             (bvsle temp10745_134 temp10745_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10745_135 #x0000000000000000))
(assert (= var1191735 temp10745_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10745_136 #x0000000000000001))
(assert (= var1191747 temp10745_136))
(assert (= temp10745_137 #x0000000000000000))
(assert (= var1179826 temp10745_137))
(assert (= temp10745_138 #x0000000000000000))
(assert (= temp10745_139 temp10745_138))
(assert (= temp10745_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10745_139)))
(assert (= temp10745_141 #x0000000000000001))
(assert (= temp10745_142 temp10745_141))
(assert (= temp10745_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10745_142)))
(assert (= temp10745_144 #x0000000000000002))
(assert (= temp10745_145 temp10745_144))
(assert (= temp10745_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10745_145)))
(assert (= temp10745_147 #x0000000000000003))
(assert (= temp10745_148 temp10745_147))
(assert (= temp10745_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10745_148)))
(assert (= temp10745_150 #x0000000000000004))
(assert (= temp10745_151 temp10745_150))
(assert (= temp10745_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10745_151)))
(assert (= temp10745_153 #x0000000000000005))
(assert (= temp10745_154 temp10745_153))
(assert (= temp10745_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10745_154)))
(assert (= temp10745_157 var1179826))
(assert (= temp10745_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10745_157)))
(assert (= temp10745_156 temp10745_158))
(assert (= var1191780
   (ite (bvslt temp10745_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10745_159 #x0000000000000000))
(assert (= var1191780 temp10745_159))
(assert (= temp10745_160 #x0000000000000000))
(assert (= var1179826 temp10745_160))
(assert (= temp10745_162 var1179826))
(assert (= temp10745_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10745_162)))
(assert (= temp10745_161 temp10745_163))
(assert (= var1191802 (bvsmod temp10745_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10745_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10745_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10745_165 #x0000000000000001))
(assert (= var1191803 temp10745_165))
(assert (= temp10745_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10745_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10745_167 #x0000000000000001))
(assert (= var1191823 temp10745_167))
(assert (= temp10745_168 #x0000000000000001))
(assert (= var1180714 temp10745_168))
(assert (= temp10745_169 #x0000000000000000))
(assert (= temp10745_170 temp10745_169))
(assert (= temp10745_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10745_170)))
(assert (= temp10745_172 #x0000000000000001))
(assert (= temp10745_173 temp10745_172))
(assert (= temp10745_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10745_173)))
(assert (= temp10745_175 #x0000000000000002))
(assert (= temp10745_176 temp10745_175))
(assert (= temp10745_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10745_176)))
(assert (= temp10745_178 #x0000000000000003))
(assert (= temp10745_179 temp10745_178))
(assert (= temp10745_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10745_179)))
(assert (= temp10745_181 #x0000000000000004))
(assert (= temp10745_182 temp10745_181))
(assert (= temp10745_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10745_182)))
(assert (= temp10745_184 #x0000000000000005))
(assert (= temp10745_185 temp10745_184))
(assert (= temp10745_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10745_185)))
(assert (= temp10745_187 #x0000000000000000))
(assert (= temp10745_188
   (ite (bvslt var1180714 temp10745_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10745_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10745_188)))
(assert (= var1191831 temp10745_189))
(assert (bvslt (ite (bvslt var1180714 temp10745_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10745_190 #x0000000000000001))
(assert (= var1180714 temp10745_190))
(assert (= temp10745_192 var1180714))
(assert (= temp10745_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10745_192)))
(assert (= temp10745_191 temp10745_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10745_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10745_194 #x0000000000000001))
(assert (= var1191836 temp10745_194))
(assert (= temp10745_195 #x0000000000000000))
(assert (= var1179826 temp10745_195))
(assert (= temp10745_197 var1179826))
(assert (= temp10745_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10745_197)))
(assert (= temp10745_196 temp10745_198))
(assert (= temp10745_199 #x0000000000000002))
(assert (= var1586025 temp10745_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10745_200 #x0000000000000001))
(assert (= var1191993 temp10745_200))
(assert (= temp10745_201 #x0000000000000001))
(assert (= var2700303 temp10745_201))
(assert (= temp10745_202 #x0000000000000001))
(assert (= var2962447 temp10745_202))
(assert (= temp10745_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10745_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10745_204 #x0000000000000001))
(assert (= var211058 temp10745_204))
(assert (= temp10745_205 #x0000000000000001))
(assert (= var211188 temp10745_205))
(assert (= var3879401 var211188))
(assert (= temp10745_206 #x0000000000000000))
(assert (= var3866802 temp10745_206))
(assert (= temp10745_207 #x0000000000000000))
(assert (= temp10745_208
   (ite (bvslt var3866802 temp10745_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10745_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10745_208)))
(assert (= var3879420 temp10745_209))
(assert (bvslt (ite (bvslt var3866802 temp10745_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10745_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10745_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10745_211 #x0000000000000000))
(assert (= var3879421 temp10745_211))
(assert (= temp10745_212 #x0000000000000001))
(assert (= var3867690 temp10745_212))
(assert (= temp10745_213 #x0000000000000000))
(assert (= temp10745_214
   (ite (bvslt var3867690 temp10745_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10745_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10745_214)))
(assert (= var3879423 temp10745_215))
(assert (bvslt (ite (bvslt var3867690 temp10745_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10745_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10745_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10745_217 #x0000000000000001))
(assert (= var3879424 temp10745_217))
(assert (= temp10745_218 #x0000000000000000))
(assert (= var4133117 temp10745_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10745_219 #x0000000000000002))
(assert (= var4339331 temp10745_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10745_220 #x0000000000000000))
(assert (= var4404892 temp10745_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4600208 var211201))
(assert (= var211890 var210913))
(assert (= temp10745_221 #x0000000000000000))
(assert (= var211891
   (ite (distinct var211890 temp10745_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10745_222 #x0000000000000001))
(assert (= var211058 temp10745_222))
(model-add temp10745_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10745_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10745_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10745_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






