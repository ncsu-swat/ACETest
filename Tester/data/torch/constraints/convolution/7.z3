(declare-fun temp9_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp9_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp9_3 () (_ BitVec 64))
(declare-fun temp9_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp9_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp9_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp9_7 () (_ BitVec 64))
(declare-fun temp9_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp9_9 () (_ BitVec 64))
(declare-fun temp9_10 () (_ BitVec 64))
(declare-fun temp9_11 () (_ BitVec 64))
(declare-fun temp9_12 () (_ BitVec 64))
(declare-fun temp9_13 () (_ BitVec 64))
(declare-fun temp9_14 () (_ BitVec 64))
(declare-fun temp9_15 () (_ BitVec 64))
(declare-fun temp9_16 () (_ BitVec 64))
(declare-fun temp9_17 () (_ BitVec 64))
(declare-fun temp9_18 () (_ BitVec 64))
(declare-fun temp9_19 () (_ BitVec 64))
(declare-fun temp9_20 () (_ BitVec 64))
(declare-fun temp9_21 () (_ BitVec 64))
(declare-fun temp9_22 () (_ BitVec 64))
(declare-fun temp9_23 () (_ BitVec 64))
(declare-fun temp9_24 () (_ BitVec 64))
(declare-fun temp9_25 () (_ BitVec 64))
(declare-fun temp9_26 () (_ BitVec 64))
(declare-fun temp9_27 () (_ BitVec 64))
(declare-fun temp9_28 () (_ BitVec 64))
(declare-fun temp9_29 () (_ BitVec 64))
(declare-fun temp9_30 () (_ BitVec 64))
(declare-fun temp9_31 () (_ BitVec 64))
(declare-fun temp9_32 () (_ BitVec 64))
(declare-fun temp9_33 () (_ BitVec 64))
(declare-fun temp9_34 () (_ BitVec 64))
(declare-fun temp9_35 () (_ BitVec 64))
(declare-fun temp9_36 () (_ BitVec 64))
(declare-fun temp9_37 () (_ BitVec 64))
(declare-fun temp9_38 () (_ BitVec 64))
(declare-fun temp9_39 () (_ BitVec 64))
(declare-fun temp9_40 () (_ BitVec 64))
(declare-fun temp9_41 () (_ BitVec 64))
(declare-fun temp9_42 () (_ BitVec 64))
(declare-fun temp9_43 () (_ BitVec 64))
(declare-fun temp9_44 () (_ BitVec 64))
(declare-fun temp9_45 () (_ BitVec 64))
(declare-fun temp9_46 () (_ BitVec 64))
(declare-fun temp9_47 () (_ BitVec 64))
(declare-fun temp9_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp9_49 () (_ BitVec 64))
(declare-fun temp9_50 () (_ BitVec 64))
(declare-fun temp9_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp9_52 () (_ BitVec 64))
(declare-fun temp9_53 () (_ BitVec 64))
(declare-fun temp9_54 () (_ BitVec 64))
(declare-fun temp9_55 () (_ BitVec 64))
(declare-fun temp9_56 () (_ BitVec 64))
(declare-fun temp9_57 () (_ BitVec 64))
(declare-fun temp9_58 () (_ BitVec 64))
(declare-fun temp9_59 () (_ BitVec 64))
(declare-fun temp9_60 () (_ BitVec 64))
(declare-fun temp9_61 () (_ BitVec 64))
(declare-fun temp9_62 () (_ BitVec 64))
(declare-fun temp9_63 () (_ BitVec 64))
(declare-fun temp9_64 () (_ BitVec 64))
(declare-fun temp9_65 () (_ BitVec 64))
(declare-fun temp9_66 () (_ BitVec 64))
(declare-fun temp9_67 () (_ BitVec 64))
(declare-fun temp9_68 () (_ BitVec 64))
(declare-fun temp9_69 () (_ BitVec 64))
(declare-fun temp9_70 () (_ BitVec 64))
(declare-fun temp9_71 () (_ BitVec 64))
(declare-fun temp9_72 () (_ BitVec 64))
(declare-fun temp9_73 () (_ BitVec 64))
(declare-fun temp9_74 () (_ BitVec 64))
(declare-fun temp9_75 () (_ BitVec 64))
(declare-fun temp9_76 () (_ BitVec 64))
(declare-fun temp9_77 () (_ BitVec 64))
(declare-fun temp9_78 () (_ BitVec 64))
(declare-fun temp9_79 () (_ BitVec 64))
(declare-fun temp9_80 () (_ BitVec 64))
(declare-fun temp9_81 () (_ BitVec 64))
(declare-fun temp9_82 () (_ BitVec 64))
(declare-fun temp9_83 () (_ BitVec 64))
(declare-fun temp9_84 () (_ BitVec 64))
(declare-fun temp9_85 () (_ BitVec 64))
(declare-fun temp9_86 () (_ BitVec 64))
(declare-fun temp9_87 () (_ BitVec 64))
(declare-fun temp9_88 () (_ BitVec 64))
(declare-fun temp9_89 () (_ BitVec 64))
(declare-fun temp9_90 () (_ BitVec 64))
(declare-fun temp9_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp9_92 () (_ BitVec 64))
(declare-fun temp9_93 () (_ BitVec 64))
(declare-fun temp9_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp9_95 () (_ BitVec 64))
(declare-fun temp9_96 () (_ BitVec 64))
(declare-fun temp9_97 () (_ BitVec 64))
(declare-fun temp9_98 () (_ BitVec 64))
(declare-fun temp9_99 () (_ BitVec 64))
(declare-fun temp9_100 () (_ BitVec 64))
(declare-fun temp9_101 () (_ BitVec 64))
(declare-fun temp9_102 () (_ BitVec 64))
(declare-fun temp9_103 () (_ BitVec 64))
(declare-fun temp9_104 () (_ BitVec 64))
(declare-fun temp9_105 () (_ BitVec 64))
(declare-fun temp9_106 () (_ BitVec 64))
(declare-fun temp9_107 () (_ BitVec 64))
(declare-fun temp9_108 () (_ BitVec 64))
(declare-fun temp9_109 () (_ BitVec 64))
(declare-fun temp9_110 () (_ BitVec 64))
(declare-fun temp9_111 () (_ BitVec 64))
(declare-fun temp9_112 () (_ BitVec 64))
(declare-fun temp9_113 () (_ BitVec 64))
(declare-fun temp9_114 () (_ BitVec 64))
(declare-fun temp9_115 () (_ BitVec 64))
(declare-fun temp9_116 () (_ BitVec 64))
(declare-fun temp9_117 () (_ BitVec 64))
(declare-fun temp9_118 () (_ BitVec 64))
(declare-fun temp9_119 () (_ BitVec 64))
(declare-fun temp9_120 () (_ BitVec 64))
(declare-fun temp9_121 () (_ BitVec 64))
(declare-fun temp9_122 () (_ BitVec 64))
(declare-fun temp9_123 () (_ BitVec 64))
(declare-fun temp9_124 () (_ BitVec 64))
(declare-fun temp9_125 () (_ BitVec 64))
(declare-fun temp9_126 () (_ BitVec 64))
(declare-fun temp9_127 () (_ BitVec 64))
(declare-fun temp9_128 () (_ BitVec 64))
(declare-fun temp9_129 () (_ BitVec 64))
(declare-fun temp9_130 () (_ BitVec 64))
(declare-fun temp9_131 () (_ BitVec 64))
(declare-fun temp9_132 () (_ BitVec 64))
(declare-fun temp9_133 () (_ BitVec 64))
(declare-fun temp9_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp9_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp9_136 () (_ BitVec 64))
(declare-fun temp9_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp9_138 () (_ BitVec 64))
(declare-fun temp9_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp9_140 () (_ BitVec 64))
(declare-fun temp9_141 () (_ BitVec 64))
(declare-fun temp9_142 () (_ BitVec 64))
(declare-fun temp9_143 () (_ BitVec 64))
(declare-fun temp9_144 () (_ BitVec 64))
(declare-fun temp9_145 () (_ BitVec 64))
(declare-fun temp9_146 () (_ BitVec 64))
(declare-fun temp9_147 () (_ BitVec 64))
(declare-fun temp9_148 () (_ BitVec 64))
(declare-fun temp9_149 () (_ BitVec 64))
(declare-fun temp9_150 () (_ BitVec 64))
(declare-fun temp9_151 () (_ BitVec 64))
(declare-fun temp9_152 () (_ BitVec 64))
(declare-fun temp9_153 () (_ BitVec 64))
(declare-fun temp9_154 () (_ BitVec 64))
(declare-fun temp9_155 () (_ BitVec 64))
(declare-fun temp9_157 () (_ BitVec 64))
(declare-fun temp9_158 () (_ BitVec 64))
(declare-fun temp9_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp9_159 () (_ BitVec 64))
(declare-fun temp9_160 () (_ BitVec 64))
(declare-fun temp9_162 () (_ BitVec 64))
(declare-fun temp9_163 () (_ BitVec 64))
(declare-fun temp9_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp9_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp9_165 () (_ BitVec 64))
(declare-fun temp9_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp9_167 () (_ BitVec 64))
(declare-fun temp9_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp9_169 () (_ BitVec 64))
(declare-fun temp9_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp9_171 () (_ BitVec 64))
(declare-fun temp9_172 () (_ BitVec 64))
(declare-fun temp9_173 () (_ BitVec 64))
(declare-fun temp9_174 () (_ BitVec 64))
(declare-fun temp9_175 () (_ BitVec 64))
(declare-fun temp9_176 () (_ BitVec 64))
(declare-fun temp9_177 () (_ BitVec 64))
(declare-fun temp9_178 () (_ BitVec 64))
(declare-fun temp9_179 () (_ BitVec 64))
(declare-fun temp9_180 () (_ BitVec 64))
(declare-fun temp9_181 () (_ BitVec 64))
(declare-fun temp9_182 () (_ BitVec 64))
(declare-fun temp9_183 () (_ BitVec 64))
(declare-fun temp9_184 () (_ BitVec 64))
(declare-fun temp9_185 () (_ BitVec 64))
(declare-fun temp9_186 () (_ BitVec 64))
(declare-fun temp9_187 () (_ BitVec 64))
(declare-fun temp9_188 () (_ BitVec 64))
(declare-fun temp9_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp9_190 () (_ BitVec 64))
(declare-fun temp9_192 () (_ BitVec 64))
(declare-fun temp9_193 () (_ BitVec 64))
(declare-fun temp9_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp9_194 () (_ BitVec 64))
(declare-fun temp9_195 () (_ BitVec 64))
(declare-fun temp9_197 () (_ BitVec 64))
(declare-fun temp9_198 () (_ BitVec 64))
(declare-fun temp9_196 () (_ BitVec 64))
(declare-fun temp9_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp9_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp9_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp9_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp9_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp9_204 () (_ BitVec 64))
(declare-fun temp9_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp9_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp9_207 () (_ BitVec 64))
(declare-fun temp9_208 () (_ BitVec 64))
(declare-fun temp9_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp9_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp9_211 () (_ BitVec 64))
(declare-fun temp9_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp9_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp9_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp9_215 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun temp9_216 () (_ BitVec 64))
(assert (= temp9_1 #x0000000000000001))
(assert (= var77203 temp9_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp9_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp9_2)))
(assert (= temp9_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp9_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp9_4 #x0000000000000000))
(assert (= var210941 temp9_4))
(assert (= temp9_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp9_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp9_6 #x0000000000000000))
(assert (= var210986 temp9_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp9_7 #x0000000000000000))
(assert (= temp9_8 temp9_7))
(assert (= temp9_9 (select ARGNAME_padding_NAMEEND_VAL temp9_8)))
(assert (= temp9_10 #x0000000000000001))
(assert (= temp9_11 temp9_10))
(assert (= temp9_12 (select ARGNAME_padding_NAMEEND_VAL temp9_11)))
(assert (= temp9_13 #x0000000000000002))
(assert (= temp9_14 temp9_13))
(assert (= temp9_15 (select ARGNAME_padding_NAMEEND_VAL temp9_14)))
(assert (= temp9_16 #x0000000000000003))
(assert (= temp9_17 temp9_16))
(assert (= temp9_18 (select ARGNAME_padding_NAMEEND_VAL temp9_17)))
(assert (= temp9_19 #x0000000000000004))
(assert (= temp9_20 temp9_19))
(assert (= temp9_21 (select ARGNAME_padding_NAMEEND_VAL temp9_20)))
(assert (= temp9_22 #x0000000000000005))
(assert (= temp9_23 temp9_22))
(assert (= temp9_24 (select ARGNAME_padding_NAMEEND_VAL temp9_23)))
(assert (= temp9_25 #x0000000000000000))
(assert (= temp9_26 #x0000000000000000))
(assert (= temp9_27 temp9_26))
(assert (= temp9_28 (select ARGNAME_padding_NAMEEND_VAL temp9_27)))
(assert (= temp9_29 #x0000000000000000))
(assert (= temp9_30 #x0000000000000001))
(assert (= temp9_31 temp9_30))
(assert (= temp9_32 (select ARGNAME_padding_NAMEEND_VAL temp9_31)))
(assert (= temp9_33 #x0000000000000000))
(assert (= temp9_34 #x0000000000000002))
(assert (= temp9_35 temp9_34))
(assert (= temp9_36 (select ARGNAME_padding_NAMEEND_VAL temp9_35)))
(assert (= temp9_37 #x0000000000000000))
(assert (= temp9_38 #x0000000000000003))
(assert (= temp9_39 temp9_38))
(assert (= temp9_40 (select ARGNAME_padding_NAMEEND_VAL temp9_39)))
(assert (= temp9_41 #x0000000000000000))
(assert (= temp9_42 #x0000000000000004))
(assert (= temp9_43 temp9_42))
(assert (= temp9_44 (select ARGNAME_padding_NAMEEND_VAL temp9_43)))
(assert (= temp9_45 #x0000000000000000))
(assert (= temp9_46 #x0000000000000005))
(assert (= temp9_47 temp9_46))
(assert (= temp9_48 (select ARGNAME_padding_NAMEEND_VAL temp9_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp9_28 temp9_25)
             (bvslt temp9_32 temp9_29)
             (bvslt temp9_36 temp9_33)
             (bvslt temp9_40 temp9_37)
             (bvslt temp9_44 temp9_41)
             (bvslt temp9_48 temp9_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp9_49 #x0000000000000000))
(assert (= var1191714 temp9_49))
(assert (= temp9_50 #x0000000000000000))
(assert (= temp9_51 temp9_50))
(assert (= temp9_52 (select ARGNAME_output_padding_NAMEEND_VAL temp9_51)))
(assert (= temp9_53 #x0000000000000001))
(assert (= temp9_54 temp9_53))
(assert (= temp9_55 (select ARGNAME_output_padding_NAMEEND_VAL temp9_54)))
(assert (= temp9_56 #x0000000000000002))
(assert (= temp9_57 temp9_56))
(assert (= temp9_58 (select ARGNAME_output_padding_NAMEEND_VAL temp9_57)))
(assert (= temp9_59 #x0000000000000003))
(assert (= temp9_60 temp9_59))
(assert (= temp9_61 (select ARGNAME_output_padding_NAMEEND_VAL temp9_60)))
(assert (= temp9_62 #x0000000000000004))
(assert (= temp9_63 temp9_62))
(assert (= temp9_64 (select ARGNAME_output_padding_NAMEEND_VAL temp9_63)))
(assert (= temp9_65 #x0000000000000005))
(assert (= temp9_66 temp9_65))
(assert (= temp9_67 (select ARGNAME_output_padding_NAMEEND_VAL temp9_66)))
(assert (= temp9_68 #x0000000000000000))
(assert (= temp9_69 #x0000000000000000))
(assert (= temp9_70 temp9_69))
(assert (= temp9_71 (select ARGNAME_output_padding_NAMEEND_VAL temp9_70)))
(assert (= temp9_72 #x0000000000000000))
(assert (= temp9_73 #x0000000000000001))
(assert (= temp9_74 temp9_73))
(assert (= temp9_75 (select ARGNAME_output_padding_NAMEEND_VAL temp9_74)))
(assert (= temp9_76 #x0000000000000000))
(assert (= temp9_77 #x0000000000000002))
(assert (= temp9_78 temp9_77))
(assert (= temp9_79 (select ARGNAME_output_padding_NAMEEND_VAL temp9_78)))
(assert (= temp9_80 #x0000000000000000))
(assert (= temp9_81 #x0000000000000003))
(assert (= temp9_82 temp9_81))
(assert (= temp9_83 (select ARGNAME_output_padding_NAMEEND_VAL temp9_82)))
(assert (= temp9_84 #x0000000000000000))
(assert (= temp9_85 #x0000000000000004))
(assert (= temp9_86 temp9_85))
(assert (= temp9_87 (select ARGNAME_output_padding_NAMEEND_VAL temp9_86)))
(assert (= temp9_88 #x0000000000000000))
(assert (= temp9_89 #x0000000000000005))
(assert (= temp9_90 temp9_89))
(assert (= temp9_91 (select ARGNAME_output_padding_NAMEEND_VAL temp9_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp9_71 temp9_68)
             (bvslt temp9_75 temp9_72)
             (bvslt temp9_79 temp9_76)
             (bvslt temp9_83 temp9_80)
             (bvslt temp9_87 temp9_84)
             (bvslt temp9_91 temp9_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp9_92 #x0000000000000000))
(assert (= var1191725 temp9_92))
(assert (= temp9_93 #x0000000000000000))
(assert (= temp9_94 temp9_93))
(assert (= temp9_95 (select ARGNAME_stride_NAMEEND_VAL temp9_94)))
(assert (= temp9_96 #x0000000000000001))
(assert (= temp9_97 temp9_96))
(assert (= temp9_98 (select ARGNAME_stride_NAMEEND_VAL temp9_97)))
(assert (= temp9_99 #x0000000000000002))
(assert (= temp9_100 temp9_99))
(assert (= temp9_101 (select ARGNAME_stride_NAMEEND_VAL temp9_100)))
(assert (= temp9_102 #x0000000000000003))
(assert (= temp9_103 temp9_102))
(assert (= temp9_104 (select ARGNAME_stride_NAMEEND_VAL temp9_103)))
(assert (= temp9_105 #x0000000000000004))
(assert (= temp9_106 temp9_105))
(assert (= temp9_107 (select ARGNAME_stride_NAMEEND_VAL temp9_106)))
(assert (= temp9_108 #x0000000000000005))
(assert (= temp9_109 temp9_108))
(assert (= temp9_110 (select ARGNAME_stride_NAMEEND_VAL temp9_109)))
(assert (= temp9_111 #x0000000000000000))
(assert (= temp9_112 #x0000000000000000))
(assert (= temp9_113 temp9_112))
(assert (= temp9_114 (select ARGNAME_stride_NAMEEND_VAL temp9_113)))
(assert (= temp9_115 #x0000000000000000))
(assert (= temp9_116 #x0000000000000001))
(assert (= temp9_117 temp9_116))
(assert (= temp9_118 (select ARGNAME_stride_NAMEEND_VAL temp9_117)))
(assert (= temp9_119 #x0000000000000000))
(assert (= temp9_120 #x0000000000000002))
(assert (= temp9_121 temp9_120))
(assert (= temp9_122 (select ARGNAME_stride_NAMEEND_VAL temp9_121)))
(assert (= temp9_123 #x0000000000000000))
(assert (= temp9_124 #x0000000000000003))
(assert (= temp9_125 temp9_124))
(assert (= temp9_126 (select ARGNAME_stride_NAMEEND_VAL temp9_125)))
(assert (= temp9_127 #x0000000000000000))
(assert (= temp9_128 #x0000000000000004))
(assert (= temp9_129 temp9_128))
(assert (= temp9_130 (select ARGNAME_stride_NAMEEND_VAL temp9_129)))
(assert (= temp9_131 #x0000000000000000))
(assert (= temp9_132 #x0000000000000005))
(assert (= temp9_133 temp9_132))
(assert (= temp9_134 (select ARGNAME_stride_NAMEEND_VAL temp9_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp9_114 temp9_111)
             (bvsle temp9_118 temp9_115)
             (bvsle temp9_122 temp9_119)
             (bvsle temp9_126 temp9_123)
             (bvsle temp9_130 temp9_127)
             (bvsle temp9_134 temp9_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp9_135 #x0000000000000000))
(assert (= var1191735 temp9_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp9_136 #x0000000000000001))
(assert (= var1191747 temp9_136))
(assert (= temp9_137 #x0000000000000000))
(assert (= var1179826 temp9_137))
(assert (= temp9_138 #x0000000000000000))
(assert (= temp9_139 temp9_138))
(assert (= temp9_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp9_139)))
(assert (= temp9_141 #x0000000000000001))
(assert (= temp9_142 temp9_141))
(assert (= temp9_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp9_142)))
(assert (= temp9_144 #x0000000000000002))
(assert (= temp9_145 temp9_144))
(assert (= temp9_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp9_145)))
(assert (= temp9_147 #x0000000000000003))
(assert (= temp9_148 temp9_147))
(assert (= temp9_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp9_148)))
(assert (= temp9_150 #x0000000000000004))
(assert (= temp9_151 temp9_150))
(assert (= temp9_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp9_151)))
(assert (= temp9_153 #x0000000000000005))
(assert (= temp9_154 temp9_153))
(assert (= temp9_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp9_154)))
(assert (= temp9_157 var1179826))
(assert (= temp9_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp9_157)))
(assert (= temp9_156 temp9_158))
(assert (= var1191780
   (ite (bvslt temp9_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp9_159 #x0000000000000000))
(assert (= var1191780 temp9_159))
(assert (= temp9_160 #x0000000000000000))
(assert (= var1179826 temp9_160))
(assert (= temp9_162 var1179826))
(assert (= temp9_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp9_162)))
(assert (= temp9_161 temp9_163))
(assert (= var1191802 (bvsmod temp9_161 ARGNAME_groups_NAMEEND)))
(assert (= temp9_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp9_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp9_165 #x0000000000000001))
(assert (= var1191803 temp9_165))
(assert (= temp9_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp9_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp9_167 #x0000000000000001))
(assert (= var1191823 temp9_167))
(assert (= temp9_168 #x0000000000000001))
(assert (= var1180714 temp9_168))
(assert (= temp9_169 #x0000000000000000))
(assert (= temp9_170 temp9_169))
(assert (= temp9_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp9_170)))
(assert (= temp9_172 #x0000000000000001))
(assert (= temp9_173 temp9_172))
(assert (= temp9_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp9_173)))
(assert (= temp9_175 #x0000000000000002))
(assert (= temp9_176 temp9_175))
(assert (= temp9_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp9_176)))
(assert (= temp9_178 #x0000000000000003))
(assert (= temp9_179 temp9_178))
(assert (= temp9_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp9_179)))
(assert (= temp9_181 #x0000000000000004))
(assert (= temp9_182 temp9_181))
(assert (= temp9_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp9_182)))
(assert (= temp9_184 #x0000000000000005))
(assert (= temp9_185 temp9_184))
(assert (= temp9_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp9_185)))
(assert (= temp9_187 #x0000000000000000))
(assert (= temp9_188
   (ite (bvslt var1180714 temp9_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp9_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp9_188)))
(assert (= var1191831 temp9_189))
(assert (bvslt (ite (bvslt var1180714 temp9_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp9_190 #x0000000000000001))
(assert (= var1180714 temp9_190))
(assert (= temp9_192 var1180714))
(assert (= temp9_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp9_192)))
(assert (= temp9_191 temp9_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp9_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp9_194 #x0000000000000001))
(assert (= var1191836 temp9_194))
(assert (= temp9_195 #x0000000000000000))
(assert (= var1179826 temp9_195))
(assert (= temp9_197 var1179826))
(assert (= temp9_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp9_197)))
(assert (= temp9_196 temp9_198))
(assert (= temp9_199 #x0000000000000002))
(assert (= var1586025 temp9_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp9_200 #x0000000000000001))
(assert (= var1191993 temp9_200))
(assert (= temp9_201 #x0000000000000001))
(assert (= var2700303 temp9_201))
(assert (= temp9_202 #x0000000000000001))
(assert (= var2962447 temp9_202))
(assert (= temp9_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp9_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp9_204 #x0000000000000001))
(assert (= var211058 temp9_204))
(assert (= temp9_205 #x0000000000000001))
(assert (= var211188 temp9_205))
(assert (= var3879401 var211188))
(assert (= temp9_206 #x0000000000000000))
(assert (= var3866802 temp9_206))
(assert (= temp9_207 #x0000000000000000))
(assert (= temp9_208
   (ite (bvslt var3866802 temp9_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp9_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp9_208)))
(assert (= var3879420 temp9_209))
(assert (bvslt (ite (bvslt var3866802 temp9_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp9_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp9_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp9_211 #x0000000000000001))
(assert (= var3879421 temp9_211))
(assert (= temp9_212 #x0000000000000000))
(assert (= var4079423 temp9_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp9_213 #x0000000000000002))
(assert (= var4208259 temp9_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp9_214 #x0000000000000000))
(assert (= var4273820 temp9_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp9_215 #x0000000000000000))
(assert (= var4469136 temp9_215))
(assert (= temp9_216 #x0000000000000001))
(assert (= var211058 temp9_216))
(model-add temp9_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp9_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp9_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp9_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




