(declare-fun temp1141_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1141_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1141_3 () (_ BitVec 64))
(declare-fun temp1141_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1141_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1141_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1141_7 () (_ BitVec 64))
(declare-fun temp1141_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1141_9 () (_ BitVec 64))
(declare-fun temp1141_10 () (_ BitVec 64))
(declare-fun temp1141_11 () (_ BitVec 64))
(declare-fun temp1141_12 () (_ BitVec 64))
(declare-fun temp1141_13 () (_ BitVec 64))
(declare-fun temp1141_14 () (_ BitVec 64))
(declare-fun temp1141_15 () (_ BitVec 64))
(declare-fun temp1141_16 () (_ BitVec 64))
(declare-fun temp1141_17 () (_ BitVec 64))
(declare-fun temp1141_18 () (_ BitVec 64))
(declare-fun temp1141_19 () (_ BitVec 64))
(declare-fun temp1141_20 () (_ BitVec 64))
(declare-fun temp1141_21 () (_ BitVec 64))
(declare-fun temp1141_22 () (_ BitVec 64))
(declare-fun temp1141_23 () (_ BitVec 64))
(declare-fun temp1141_24 () (_ BitVec 64))
(declare-fun temp1141_25 () (_ BitVec 64))
(declare-fun temp1141_26 () (_ BitVec 64))
(declare-fun temp1141_27 () (_ BitVec 64))
(declare-fun temp1141_28 () (_ BitVec 64))
(declare-fun temp1141_29 () (_ BitVec 64))
(declare-fun temp1141_30 () (_ BitVec 64))
(declare-fun temp1141_31 () (_ BitVec 64))
(declare-fun temp1141_32 () (_ BitVec 64))
(declare-fun temp1141_33 () (_ BitVec 64))
(declare-fun temp1141_34 () (_ BitVec 64))
(declare-fun temp1141_35 () (_ BitVec 64))
(declare-fun temp1141_36 () (_ BitVec 64))
(declare-fun temp1141_37 () (_ BitVec 64))
(declare-fun temp1141_38 () (_ BitVec 64))
(declare-fun temp1141_39 () (_ BitVec 64))
(declare-fun temp1141_40 () (_ BitVec 64))
(declare-fun temp1141_41 () (_ BitVec 64))
(declare-fun temp1141_42 () (_ BitVec 64))
(declare-fun temp1141_43 () (_ BitVec 64))
(declare-fun temp1141_44 () (_ BitVec 64))
(declare-fun temp1141_45 () (_ BitVec 64))
(declare-fun temp1141_46 () (_ BitVec 64))
(declare-fun temp1141_47 () (_ BitVec 64))
(declare-fun temp1141_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1141_49 () (_ BitVec 64))
(declare-fun temp1141_50 () (_ BitVec 64))
(declare-fun temp1141_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1141_52 () (_ BitVec 64))
(declare-fun temp1141_53 () (_ BitVec 64))
(declare-fun temp1141_54 () (_ BitVec 64))
(declare-fun temp1141_55 () (_ BitVec 64))
(declare-fun temp1141_56 () (_ BitVec 64))
(declare-fun temp1141_57 () (_ BitVec 64))
(declare-fun temp1141_58 () (_ BitVec 64))
(declare-fun temp1141_59 () (_ BitVec 64))
(declare-fun temp1141_60 () (_ BitVec 64))
(declare-fun temp1141_61 () (_ BitVec 64))
(declare-fun temp1141_62 () (_ BitVec 64))
(declare-fun temp1141_63 () (_ BitVec 64))
(declare-fun temp1141_64 () (_ BitVec 64))
(declare-fun temp1141_65 () (_ BitVec 64))
(declare-fun temp1141_66 () (_ BitVec 64))
(declare-fun temp1141_67 () (_ BitVec 64))
(declare-fun temp1141_68 () (_ BitVec 64))
(declare-fun temp1141_69 () (_ BitVec 64))
(declare-fun temp1141_70 () (_ BitVec 64))
(declare-fun temp1141_71 () (_ BitVec 64))
(declare-fun temp1141_72 () (_ BitVec 64))
(declare-fun temp1141_73 () (_ BitVec 64))
(declare-fun temp1141_74 () (_ BitVec 64))
(declare-fun temp1141_75 () (_ BitVec 64))
(declare-fun temp1141_76 () (_ BitVec 64))
(declare-fun temp1141_77 () (_ BitVec 64))
(declare-fun temp1141_78 () (_ BitVec 64))
(declare-fun temp1141_79 () (_ BitVec 64))
(declare-fun temp1141_80 () (_ BitVec 64))
(declare-fun temp1141_81 () (_ BitVec 64))
(declare-fun temp1141_82 () (_ BitVec 64))
(declare-fun temp1141_83 () (_ BitVec 64))
(declare-fun temp1141_84 () (_ BitVec 64))
(declare-fun temp1141_85 () (_ BitVec 64))
(declare-fun temp1141_86 () (_ BitVec 64))
(declare-fun temp1141_87 () (_ BitVec 64))
(declare-fun temp1141_88 () (_ BitVec 64))
(declare-fun temp1141_89 () (_ BitVec 64))
(declare-fun temp1141_90 () (_ BitVec 64))
(declare-fun temp1141_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1141_92 () (_ BitVec 64))
(declare-fun temp1141_93 () (_ BitVec 64))
(declare-fun temp1141_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1141_95 () (_ BitVec 64))
(declare-fun temp1141_96 () (_ BitVec 64))
(declare-fun temp1141_97 () (_ BitVec 64))
(declare-fun temp1141_98 () (_ BitVec 64))
(declare-fun temp1141_99 () (_ BitVec 64))
(declare-fun temp1141_100 () (_ BitVec 64))
(declare-fun temp1141_101 () (_ BitVec 64))
(declare-fun temp1141_102 () (_ BitVec 64))
(declare-fun temp1141_103 () (_ BitVec 64))
(declare-fun temp1141_104 () (_ BitVec 64))
(declare-fun temp1141_105 () (_ BitVec 64))
(declare-fun temp1141_106 () (_ BitVec 64))
(declare-fun temp1141_107 () (_ BitVec 64))
(declare-fun temp1141_108 () (_ BitVec 64))
(declare-fun temp1141_109 () (_ BitVec 64))
(declare-fun temp1141_110 () (_ BitVec 64))
(declare-fun temp1141_111 () (_ BitVec 64))
(declare-fun temp1141_112 () (_ BitVec 64))
(declare-fun temp1141_113 () (_ BitVec 64))
(declare-fun temp1141_114 () (_ BitVec 64))
(declare-fun temp1141_115 () (_ BitVec 64))
(declare-fun temp1141_116 () (_ BitVec 64))
(declare-fun temp1141_117 () (_ BitVec 64))
(declare-fun temp1141_118 () (_ BitVec 64))
(declare-fun temp1141_119 () (_ BitVec 64))
(declare-fun temp1141_120 () (_ BitVec 64))
(declare-fun temp1141_121 () (_ BitVec 64))
(declare-fun temp1141_122 () (_ BitVec 64))
(declare-fun temp1141_123 () (_ BitVec 64))
(declare-fun temp1141_124 () (_ BitVec 64))
(declare-fun temp1141_125 () (_ BitVec 64))
(declare-fun temp1141_126 () (_ BitVec 64))
(declare-fun temp1141_127 () (_ BitVec 64))
(declare-fun temp1141_128 () (_ BitVec 64))
(declare-fun temp1141_129 () (_ BitVec 64))
(declare-fun temp1141_130 () (_ BitVec 64))
(declare-fun temp1141_131 () (_ BitVec 64))
(declare-fun temp1141_132 () (_ BitVec 64))
(declare-fun temp1141_133 () (_ BitVec 64))
(declare-fun temp1141_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1141_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1141_136 () (_ BitVec 64))
(declare-fun temp1141_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1141_138 () (_ BitVec 64))
(declare-fun temp1141_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1141_140 () (_ BitVec 64))
(declare-fun temp1141_141 () (_ BitVec 64))
(declare-fun temp1141_142 () (_ BitVec 64))
(declare-fun temp1141_143 () (_ BitVec 64))
(declare-fun temp1141_144 () (_ BitVec 64))
(declare-fun temp1141_145 () (_ BitVec 64))
(declare-fun temp1141_146 () (_ BitVec 64))
(declare-fun temp1141_147 () (_ BitVec 64))
(declare-fun temp1141_148 () (_ BitVec 64))
(declare-fun temp1141_149 () (_ BitVec 64))
(declare-fun temp1141_150 () (_ BitVec 64))
(declare-fun temp1141_151 () (_ BitVec 64))
(declare-fun temp1141_152 () (_ BitVec 64))
(declare-fun temp1141_153 () (_ BitVec 64))
(declare-fun temp1141_154 () (_ BitVec 64))
(declare-fun temp1141_155 () (_ BitVec 64))
(declare-fun temp1141_157 () (_ BitVec 64))
(declare-fun temp1141_158 () (_ BitVec 64))
(declare-fun temp1141_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1141_159 () (_ BitVec 64))
(declare-fun temp1141_160 () (_ BitVec 64))
(declare-fun temp1141_162 () (_ BitVec 64))
(declare-fun temp1141_163 () (_ BitVec 64))
(declare-fun temp1141_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1141_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1141_165 () (_ BitVec 64))
(declare-fun temp1141_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1141_167 () (_ BitVec 64))
(declare-fun temp1141_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1141_169 () (_ BitVec 64))
(declare-fun temp1141_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1141_171 () (_ BitVec 64))
(declare-fun temp1141_172 () (_ BitVec 64))
(declare-fun temp1141_173 () (_ BitVec 64))
(declare-fun temp1141_174 () (_ BitVec 64))
(declare-fun temp1141_175 () (_ BitVec 64))
(declare-fun temp1141_176 () (_ BitVec 64))
(declare-fun temp1141_177 () (_ BitVec 64))
(declare-fun temp1141_178 () (_ BitVec 64))
(declare-fun temp1141_179 () (_ BitVec 64))
(declare-fun temp1141_180 () (_ BitVec 64))
(declare-fun temp1141_181 () (_ BitVec 64))
(declare-fun temp1141_182 () (_ BitVec 64))
(declare-fun temp1141_183 () (_ BitVec 64))
(declare-fun temp1141_184 () (_ BitVec 64))
(declare-fun temp1141_185 () (_ BitVec 64))
(declare-fun temp1141_186 () (_ BitVec 64))
(declare-fun temp1141_187 () (_ BitVec 64))
(declare-fun temp1141_188 () (_ BitVec 64))
(declare-fun temp1141_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1141_190 () (_ BitVec 64))
(declare-fun temp1141_192 () (_ BitVec 64))
(declare-fun temp1141_193 () (_ BitVec 64))
(declare-fun temp1141_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1141_194 () (_ BitVec 64))
(declare-fun temp1141_195 () (_ BitVec 64))
(declare-fun temp1141_197 () (_ BitVec 64))
(declare-fun temp1141_198 () (_ BitVec 64))
(declare-fun temp1141_196 () (_ BitVec 64))
(declare-fun temp1141_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1141_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1141_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1141_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1141_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1141_204 () (_ BitVec 64))
(declare-fun temp1141_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1141_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1141_207 () (_ BitVec 64))
(declare-fun temp1141_208 () (_ BitVec 64))
(declare-fun temp1141_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1141_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1141_211 () (_ BitVec 64))
(declare-fun temp1141_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1141_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1141_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp1141_215 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp1141_216 () (_ BitVec 64))
(declare-fun temp1141_217 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun temp1141_218 () (_ BitVec 64))
(assert (= temp1141_1 #x0000000000000001))
(assert (= var77203 temp1141_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1141_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1141_2)))
(assert (= temp1141_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1141_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1141_4 #x0000000000000000))
(assert (= var210941 temp1141_4))
(assert (= temp1141_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1141_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1141_6 #x0000000000000000))
(assert (= var210986 temp1141_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1141_7 #x0000000000000000))
(assert (= temp1141_8 temp1141_7))
(assert (= temp1141_9 (select ARGNAME_padding_NAMEEND_VAL temp1141_8)))
(assert (= temp1141_10 #x0000000000000001))
(assert (= temp1141_11 temp1141_10))
(assert (= temp1141_12 (select ARGNAME_padding_NAMEEND_VAL temp1141_11)))
(assert (= temp1141_13 #x0000000000000002))
(assert (= temp1141_14 temp1141_13))
(assert (= temp1141_15 (select ARGNAME_padding_NAMEEND_VAL temp1141_14)))
(assert (= temp1141_16 #x0000000000000003))
(assert (= temp1141_17 temp1141_16))
(assert (= temp1141_18 (select ARGNAME_padding_NAMEEND_VAL temp1141_17)))
(assert (= temp1141_19 #x0000000000000004))
(assert (= temp1141_20 temp1141_19))
(assert (= temp1141_21 (select ARGNAME_padding_NAMEEND_VAL temp1141_20)))
(assert (= temp1141_22 #x0000000000000005))
(assert (= temp1141_23 temp1141_22))
(assert (= temp1141_24 (select ARGNAME_padding_NAMEEND_VAL temp1141_23)))
(assert (= temp1141_25 #x0000000000000000))
(assert (= temp1141_26 #x0000000000000000))
(assert (= temp1141_27 temp1141_26))
(assert (= temp1141_28 (select ARGNAME_padding_NAMEEND_VAL temp1141_27)))
(assert (= temp1141_29 #x0000000000000000))
(assert (= temp1141_30 #x0000000000000001))
(assert (= temp1141_31 temp1141_30))
(assert (= temp1141_32 (select ARGNAME_padding_NAMEEND_VAL temp1141_31)))
(assert (= temp1141_33 #x0000000000000000))
(assert (= temp1141_34 #x0000000000000002))
(assert (= temp1141_35 temp1141_34))
(assert (= temp1141_36 (select ARGNAME_padding_NAMEEND_VAL temp1141_35)))
(assert (= temp1141_37 #x0000000000000000))
(assert (= temp1141_38 #x0000000000000003))
(assert (= temp1141_39 temp1141_38))
(assert (= temp1141_40 (select ARGNAME_padding_NAMEEND_VAL temp1141_39)))
(assert (= temp1141_41 #x0000000000000000))
(assert (= temp1141_42 #x0000000000000004))
(assert (= temp1141_43 temp1141_42))
(assert (= temp1141_44 (select ARGNAME_padding_NAMEEND_VAL temp1141_43)))
(assert (= temp1141_45 #x0000000000000000))
(assert (= temp1141_46 #x0000000000000005))
(assert (= temp1141_47 temp1141_46))
(assert (= temp1141_48 (select ARGNAME_padding_NAMEEND_VAL temp1141_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1141_28 temp1141_25)
             (bvslt temp1141_32 temp1141_29)
             (bvslt temp1141_36 temp1141_33)
             (bvslt temp1141_40 temp1141_37)
             (bvslt temp1141_44 temp1141_41)
             (bvslt temp1141_48 temp1141_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1141_49 #x0000000000000000))
(assert (= var1191714 temp1141_49))
(assert (= temp1141_50 #x0000000000000000))
(assert (= temp1141_51 temp1141_50))
(assert (= temp1141_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1141_51)))
(assert (= temp1141_53 #x0000000000000001))
(assert (= temp1141_54 temp1141_53))
(assert (= temp1141_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1141_54)))
(assert (= temp1141_56 #x0000000000000002))
(assert (= temp1141_57 temp1141_56))
(assert (= temp1141_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1141_57)))
(assert (= temp1141_59 #x0000000000000003))
(assert (= temp1141_60 temp1141_59))
(assert (= temp1141_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1141_60)))
(assert (= temp1141_62 #x0000000000000004))
(assert (= temp1141_63 temp1141_62))
(assert (= temp1141_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1141_63)))
(assert (= temp1141_65 #x0000000000000005))
(assert (= temp1141_66 temp1141_65))
(assert (= temp1141_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1141_66)))
(assert (= temp1141_68 #x0000000000000000))
(assert (= temp1141_69 #x0000000000000000))
(assert (= temp1141_70 temp1141_69))
(assert (= temp1141_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1141_70)))
(assert (= temp1141_72 #x0000000000000000))
(assert (= temp1141_73 #x0000000000000001))
(assert (= temp1141_74 temp1141_73))
(assert (= temp1141_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1141_74)))
(assert (= temp1141_76 #x0000000000000000))
(assert (= temp1141_77 #x0000000000000002))
(assert (= temp1141_78 temp1141_77))
(assert (= temp1141_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1141_78)))
(assert (= temp1141_80 #x0000000000000000))
(assert (= temp1141_81 #x0000000000000003))
(assert (= temp1141_82 temp1141_81))
(assert (= temp1141_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1141_82)))
(assert (= temp1141_84 #x0000000000000000))
(assert (= temp1141_85 #x0000000000000004))
(assert (= temp1141_86 temp1141_85))
(assert (= temp1141_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1141_86)))
(assert (= temp1141_88 #x0000000000000000))
(assert (= temp1141_89 #x0000000000000005))
(assert (= temp1141_90 temp1141_89))
(assert (= temp1141_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1141_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1141_71 temp1141_68)
             (bvslt temp1141_75 temp1141_72)
             (bvslt temp1141_79 temp1141_76)
             (bvslt temp1141_83 temp1141_80)
             (bvslt temp1141_87 temp1141_84)
             (bvslt temp1141_91 temp1141_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1141_92 #x0000000000000000))
(assert (= var1191725 temp1141_92))
(assert (= temp1141_93 #x0000000000000000))
(assert (= temp1141_94 temp1141_93))
(assert (= temp1141_95 (select ARGNAME_stride_NAMEEND_VAL temp1141_94)))
(assert (= temp1141_96 #x0000000000000001))
(assert (= temp1141_97 temp1141_96))
(assert (= temp1141_98 (select ARGNAME_stride_NAMEEND_VAL temp1141_97)))
(assert (= temp1141_99 #x0000000000000002))
(assert (= temp1141_100 temp1141_99))
(assert (= temp1141_101 (select ARGNAME_stride_NAMEEND_VAL temp1141_100)))
(assert (= temp1141_102 #x0000000000000003))
(assert (= temp1141_103 temp1141_102))
(assert (= temp1141_104 (select ARGNAME_stride_NAMEEND_VAL temp1141_103)))
(assert (= temp1141_105 #x0000000000000004))
(assert (= temp1141_106 temp1141_105))
(assert (= temp1141_107 (select ARGNAME_stride_NAMEEND_VAL temp1141_106)))
(assert (= temp1141_108 #x0000000000000005))
(assert (= temp1141_109 temp1141_108))
(assert (= temp1141_110 (select ARGNAME_stride_NAMEEND_VAL temp1141_109)))
(assert (= temp1141_111 #x0000000000000000))
(assert (= temp1141_112 #x0000000000000000))
(assert (= temp1141_113 temp1141_112))
(assert (= temp1141_114 (select ARGNAME_stride_NAMEEND_VAL temp1141_113)))
(assert (= temp1141_115 #x0000000000000000))
(assert (= temp1141_116 #x0000000000000001))
(assert (= temp1141_117 temp1141_116))
(assert (= temp1141_118 (select ARGNAME_stride_NAMEEND_VAL temp1141_117)))
(assert (= temp1141_119 #x0000000000000000))
(assert (= temp1141_120 #x0000000000000002))
(assert (= temp1141_121 temp1141_120))
(assert (= temp1141_122 (select ARGNAME_stride_NAMEEND_VAL temp1141_121)))
(assert (= temp1141_123 #x0000000000000000))
(assert (= temp1141_124 #x0000000000000003))
(assert (= temp1141_125 temp1141_124))
(assert (= temp1141_126 (select ARGNAME_stride_NAMEEND_VAL temp1141_125)))
(assert (= temp1141_127 #x0000000000000000))
(assert (= temp1141_128 #x0000000000000004))
(assert (= temp1141_129 temp1141_128))
(assert (= temp1141_130 (select ARGNAME_stride_NAMEEND_VAL temp1141_129)))
(assert (= temp1141_131 #x0000000000000000))
(assert (= temp1141_132 #x0000000000000005))
(assert (= temp1141_133 temp1141_132))
(assert (= temp1141_134 (select ARGNAME_stride_NAMEEND_VAL temp1141_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1141_114 temp1141_111)
             (bvsle temp1141_118 temp1141_115)
             (bvsle temp1141_122 temp1141_119)
             (bvsle temp1141_126 temp1141_123)
             (bvsle temp1141_130 temp1141_127)
             (bvsle temp1141_134 temp1141_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1141_135 #x0000000000000000))
(assert (= var1191735 temp1141_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1141_136 #x0000000000000001))
(assert (= var1191747 temp1141_136))
(assert (= temp1141_137 #x0000000000000000))
(assert (= var1179826 temp1141_137))
(assert (= temp1141_138 #x0000000000000000))
(assert (= temp1141_139 temp1141_138))
(assert (= temp1141_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1141_139)))
(assert (= temp1141_141 #x0000000000000001))
(assert (= temp1141_142 temp1141_141))
(assert (= temp1141_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1141_142)))
(assert (= temp1141_144 #x0000000000000002))
(assert (= temp1141_145 temp1141_144))
(assert (= temp1141_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1141_145)))
(assert (= temp1141_147 #x0000000000000003))
(assert (= temp1141_148 temp1141_147))
(assert (= temp1141_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1141_148)))
(assert (= temp1141_150 #x0000000000000004))
(assert (= temp1141_151 temp1141_150))
(assert (= temp1141_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1141_151)))
(assert (= temp1141_153 #x0000000000000005))
(assert (= temp1141_154 temp1141_153))
(assert (= temp1141_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1141_154)))
(assert (= temp1141_157 var1179826))
(assert (= temp1141_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1141_157)))
(assert (= temp1141_156 temp1141_158))
(assert (= var1191780
   (ite (bvslt temp1141_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1141_159 #x0000000000000000))
(assert (= var1191780 temp1141_159))
(assert (= temp1141_160 #x0000000000000000))
(assert (= var1179826 temp1141_160))
(assert (= temp1141_162 var1179826))
(assert (= temp1141_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1141_162)))
(assert (= temp1141_161 temp1141_163))
(assert (= var1191802 (bvsmod temp1141_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1141_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1141_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1141_165 #x0000000000000001))
(assert (= var1191803 temp1141_165))
(assert (= temp1141_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1141_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1141_167 #x0000000000000001))
(assert (= var1191823 temp1141_167))
(assert (= temp1141_168 #x0000000000000001))
(assert (= var1180714 temp1141_168))
(assert (= temp1141_169 #x0000000000000000))
(assert (= temp1141_170 temp1141_169))
(assert (= temp1141_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1141_170)))
(assert (= temp1141_172 #x0000000000000001))
(assert (= temp1141_173 temp1141_172))
(assert (= temp1141_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1141_173)))
(assert (= temp1141_175 #x0000000000000002))
(assert (= temp1141_176 temp1141_175))
(assert (= temp1141_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1141_176)))
(assert (= temp1141_178 #x0000000000000003))
(assert (= temp1141_179 temp1141_178))
(assert (= temp1141_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1141_179)))
(assert (= temp1141_181 #x0000000000000004))
(assert (= temp1141_182 temp1141_181))
(assert (= temp1141_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1141_182)))
(assert (= temp1141_184 #x0000000000000005))
(assert (= temp1141_185 temp1141_184))
(assert (= temp1141_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1141_185)))
(assert (= temp1141_187 #x0000000000000000))
(assert (= temp1141_188
   (ite (bvslt var1180714 temp1141_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1141_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1141_188)))
(assert (= var1191831 temp1141_189))
(assert (bvslt (ite (bvslt var1180714 temp1141_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1141_190 #x0000000000000001))
(assert (= var1180714 temp1141_190))
(assert (= temp1141_192 var1180714))
(assert (= temp1141_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1141_192)))
(assert (= temp1141_191 temp1141_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1141_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1141_194 #x0000000000000001))
(assert (= var1191836 temp1141_194))
(assert (= temp1141_195 #x0000000000000000))
(assert (= var1179826 temp1141_195))
(assert (= temp1141_197 var1179826))
(assert (= temp1141_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1141_197)))
(assert (= temp1141_196 temp1141_198))
(assert (= temp1141_199 #x0000000000000002))
(assert (= var1586025 temp1141_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1141_200 #x0000000000000001))
(assert (= var1191993 temp1141_200))
(assert (= temp1141_201 #x0000000000000001))
(assert (= var2700303 temp1141_201))
(assert (= temp1141_202 #x0000000000000001))
(assert (= var2962447 temp1141_202))
(assert (= temp1141_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1141_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1141_204 #x0000000000000001))
(assert (= var211058 temp1141_204))
(assert (= temp1141_205 #x0000000000000001))
(assert (= var211188 temp1141_205))
(assert (= var3879401 var211188))
(assert (= temp1141_206 #x0000000000000000))
(assert (= var3866802 temp1141_206))
(assert (= temp1141_207 #x0000000000000000))
(assert (= temp1141_208
   (ite (bvslt var3866802 temp1141_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1141_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1141_208)))
(assert (= var3879420 temp1141_209))
(assert (bvslt (ite (bvslt var3866802 temp1141_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1141_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1141_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1141_211 #x0000000000000001))
(assert (= var3879421 temp1141_211))
(assert (= temp1141_212 #x0000000000000000))
(assert (= var4079423 temp1141_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1141_213 #x0000000000000002))
(assert (= var4208259 temp1141_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1141_214 #x0000000000000000))
(assert (= var4273820 temp1141_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp1141_215 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp1141_215)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1141_216 #x0000000000000000))
(assert (= var212414 temp1141_216))
(assert (= temp1141_217 #x0000000000000002))
(assert (= var5060227 temp1141_217))
(assert (= var5125772 var5060227))
(assert (= temp1141_218 #x0000000000000001))
(assert (= var211058 temp1141_218))
(model-add temp1141_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1141_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1141_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1141_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





