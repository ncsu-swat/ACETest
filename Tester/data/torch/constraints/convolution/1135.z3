(declare-fun temp10244_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10244_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10244_3 () (_ BitVec 64))
(declare-fun temp10244_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10244_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10244_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10244_7 () (_ BitVec 64))
(declare-fun temp10244_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10244_9 () (_ BitVec 64))
(declare-fun temp10244_10 () (_ BitVec 64))
(declare-fun temp10244_11 () (_ BitVec 64))
(declare-fun temp10244_12 () (_ BitVec 64))
(declare-fun temp10244_13 () (_ BitVec 64))
(declare-fun temp10244_14 () (_ BitVec 64))
(declare-fun temp10244_15 () (_ BitVec 64))
(declare-fun temp10244_16 () (_ BitVec 64))
(declare-fun temp10244_17 () (_ BitVec 64))
(declare-fun temp10244_18 () (_ BitVec 64))
(declare-fun temp10244_19 () (_ BitVec 64))
(declare-fun temp10244_20 () (_ BitVec 64))
(declare-fun temp10244_21 () (_ BitVec 64))
(declare-fun temp10244_22 () (_ BitVec 64))
(declare-fun temp10244_23 () (_ BitVec 64))
(declare-fun temp10244_24 () (_ BitVec 64))
(declare-fun temp10244_25 () (_ BitVec 64))
(declare-fun temp10244_26 () (_ BitVec 64))
(declare-fun temp10244_27 () (_ BitVec 64))
(declare-fun temp10244_28 () (_ BitVec 64))
(declare-fun temp10244_29 () (_ BitVec 64))
(declare-fun temp10244_30 () (_ BitVec 64))
(declare-fun temp10244_31 () (_ BitVec 64))
(declare-fun temp10244_32 () (_ BitVec 64))
(declare-fun temp10244_33 () (_ BitVec 64))
(declare-fun temp10244_34 () (_ BitVec 64))
(declare-fun temp10244_35 () (_ BitVec 64))
(declare-fun temp10244_36 () (_ BitVec 64))
(declare-fun temp10244_37 () (_ BitVec 64))
(declare-fun temp10244_38 () (_ BitVec 64))
(declare-fun temp10244_39 () (_ BitVec 64))
(declare-fun temp10244_40 () (_ BitVec 64))
(declare-fun temp10244_41 () (_ BitVec 64))
(declare-fun temp10244_42 () (_ BitVec 64))
(declare-fun temp10244_43 () (_ BitVec 64))
(declare-fun temp10244_44 () (_ BitVec 64))
(declare-fun temp10244_45 () (_ BitVec 64))
(declare-fun temp10244_46 () (_ BitVec 64))
(declare-fun temp10244_47 () (_ BitVec 64))
(declare-fun temp10244_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10244_49 () (_ BitVec 64))
(declare-fun temp10244_50 () (_ BitVec 64))
(declare-fun temp10244_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10244_52 () (_ BitVec 64))
(declare-fun temp10244_53 () (_ BitVec 64))
(declare-fun temp10244_54 () (_ BitVec 64))
(declare-fun temp10244_55 () (_ BitVec 64))
(declare-fun temp10244_56 () (_ BitVec 64))
(declare-fun temp10244_57 () (_ BitVec 64))
(declare-fun temp10244_58 () (_ BitVec 64))
(declare-fun temp10244_59 () (_ BitVec 64))
(declare-fun temp10244_60 () (_ BitVec 64))
(declare-fun temp10244_61 () (_ BitVec 64))
(declare-fun temp10244_62 () (_ BitVec 64))
(declare-fun temp10244_63 () (_ BitVec 64))
(declare-fun temp10244_64 () (_ BitVec 64))
(declare-fun temp10244_65 () (_ BitVec 64))
(declare-fun temp10244_66 () (_ BitVec 64))
(declare-fun temp10244_67 () (_ BitVec 64))
(declare-fun temp10244_68 () (_ BitVec 64))
(declare-fun temp10244_69 () (_ BitVec 64))
(declare-fun temp10244_70 () (_ BitVec 64))
(declare-fun temp10244_71 () (_ BitVec 64))
(declare-fun temp10244_72 () (_ BitVec 64))
(declare-fun temp10244_73 () (_ BitVec 64))
(declare-fun temp10244_74 () (_ BitVec 64))
(declare-fun temp10244_75 () (_ BitVec 64))
(declare-fun temp10244_76 () (_ BitVec 64))
(declare-fun temp10244_77 () (_ BitVec 64))
(declare-fun temp10244_78 () (_ BitVec 64))
(declare-fun temp10244_79 () (_ BitVec 64))
(declare-fun temp10244_80 () (_ BitVec 64))
(declare-fun temp10244_81 () (_ BitVec 64))
(declare-fun temp10244_82 () (_ BitVec 64))
(declare-fun temp10244_83 () (_ BitVec 64))
(declare-fun temp10244_84 () (_ BitVec 64))
(declare-fun temp10244_85 () (_ BitVec 64))
(declare-fun temp10244_86 () (_ BitVec 64))
(declare-fun temp10244_87 () (_ BitVec 64))
(declare-fun temp10244_88 () (_ BitVec 64))
(declare-fun temp10244_89 () (_ BitVec 64))
(declare-fun temp10244_90 () (_ BitVec 64))
(declare-fun temp10244_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10244_92 () (_ BitVec 64))
(declare-fun temp10244_93 () (_ BitVec 64))
(declare-fun temp10244_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10244_95 () (_ BitVec 64))
(declare-fun temp10244_96 () (_ BitVec 64))
(declare-fun temp10244_97 () (_ BitVec 64))
(declare-fun temp10244_98 () (_ BitVec 64))
(declare-fun temp10244_99 () (_ BitVec 64))
(declare-fun temp10244_100 () (_ BitVec 64))
(declare-fun temp10244_101 () (_ BitVec 64))
(declare-fun temp10244_102 () (_ BitVec 64))
(declare-fun temp10244_103 () (_ BitVec 64))
(declare-fun temp10244_104 () (_ BitVec 64))
(declare-fun temp10244_105 () (_ BitVec 64))
(declare-fun temp10244_106 () (_ BitVec 64))
(declare-fun temp10244_107 () (_ BitVec 64))
(declare-fun temp10244_108 () (_ BitVec 64))
(declare-fun temp10244_109 () (_ BitVec 64))
(declare-fun temp10244_110 () (_ BitVec 64))
(declare-fun temp10244_111 () (_ BitVec 64))
(declare-fun temp10244_112 () (_ BitVec 64))
(declare-fun temp10244_113 () (_ BitVec 64))
(declare-fun temp10244_114 () (_ BitVec 64))
(declare-fun temp10244_115 () (_ BitVec 64))
(declare-fun temp10244_116 () (_ BitVec 64))
(declare-fun temp10244_117 () (_ BitVec 64))
(declare-fun temp10244_118 () (_ BitVec 64))
(declare-fun temp10244_119 () (_ BitVec 64))
(declare-fun temp10244_120 () (_ BitVec 64))
(declare-fun temp10244_121 () (_ BitVec 64))
(declare-fun temp10244_122 () (_ BitVec 64))
(declare-fun temp10244_123 () (_ BitVec 64))
(declare-fun temp10244_124 () (_ BitVec 64))
(declare-fun temp10244_125 () (_ BitVec 64))
(declare-fun temp10244_126 () (_ BitVec 64))
(declare-fun temp10244_127 () (_ BitVec 64))
(declare-fun temp10244_128 () (_ BitVec 64))
(declare-fun temp10244_129 () (_ BitVec 64))
(declare-fun temp10244_130 () (_ BitVec 64))
(declare-fun temp10244_131 () (_ BitVec 64))
(declare-fun temp10244_132 () (_ BitVec 64))
(declare-fun temp10244_133 () (_ BitVec 64))
(declare-fun temp10244_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10244_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10244_136 () (_ BitVec 64))
(declare-fun temp10244_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10244_138 () (_ BitVec 64))
(declare-fun temp10244_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10244_140 () (_ BitVec 64))
(declare-fun temp10244_141 () (_ BitVec 64))
(declare-fun temp10244_142 () (_ BitVec 64))
(declare-fun temp10244_143 () (_ BitVec 64))
(declare-fun temp10244_144 () (_ BitVec 64))
(declare-fun temp10244_145 () (_ BitVec 64))
(declare-fun temp10244_146 () (_ BitVec 64))
(declare-fun temp10244_147 () (_ BitVec 64))
(declare-fun temp10244_148 () (_ BitVec 64))
(declare-fun temp10244_149 () (_ BitVec 64))
(declare-fun temp10244_150 () (_ BitVec 64))
(declare-fun temp10244_151 () (_ BitVec 64))
(declare-fun temp10244_152 () (_ BitVec 64))
(declare-fun temp10244_153 () (_ BitVec 64))
(declare-fun temp10244_154 () (_ BitVec 64))
(declare-fun temp10244_155 () (_ BitVec 64))
(declare-fun temp10244_157 () (_ BitVec 64))
(declare-fun temp10244_158 () (_ BitVec 64))
(declare-fun temp10244_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10244_159 () (_ BitVec 64))
(declare-fun temp10244_160 () (_ BitVec 64))
(declare-fun temp10244_162 () (_ BitVec 64))
(declare-fun temp10244_163 () (_ BitVec 64))
(declare-fun temp10244_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10244_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10244_165 () (_ BitVec 64))
(declare-fun temp10244_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10244_167 () (_ BitVec 64))
(declare-fun temp10244_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10244_169 () (_ BitVec 64))
(declare-fun temp10244_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10244_171 () (_ BitVec 64))
(declare-fun temp10244_172 () (_ BitVec 64))
(declare-fun temp10244_173 () (_ BitVec 64))
(declare-fun temp10244_174 () (_ BitVec 64))
(declare-fun temp10244_175 () (_ BitVec 64))
(declare-fun temp10244_176 () (_ BitVec 64))
(declare-fun temp10244_177 () (_ BitVec 64))
(declare-fun temp10244_178 () (_ BitVec 64))
(declare-fun temp10244_179 () (_ BitVec 64))
(declare-fun temp10244_180 () (_ BitVec 64))
(declare-fun temp10244_181 () (_ BitVec 64))
(declare-fun temp10244_182 () (_ BitVec 64))
(declare-fun temp10244_183 () (_ BitVec 64))
(declare-fun temp10244_184 () (_ BitVec 64))
(declare-fun temp10244_185 () (_ BitVec 64))
(declare-fun temp10244_186 () (_ BitVec 64))
(declare-fun temp10244_187 () (_ BitVec 64))
(declare-fun temp10244_188 () (_ BitVec 64))
(declare-fun temp10244_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10244_190 () (_ BitVec 64))
(declare-fun temp10244_192 () (_ BitVec 64))
(declare-fun temp10244_193 () (_ BitVec 64))
(declare-fun temp10244_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10244_194 () (_ BitVec 64))
(declare-fun temp10244_195 () (_ BitVec 64))
(declare-fun temp10244_197 () (_ BitVec 64))
(declare-fun temp10244_198 () (_ BitVec 64))
(declare-fun temp10244_196 () (_ BitVec 64))
(declare-fun temp10244_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10244_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10244_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10244_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10244_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10244_204 () (_ BitVec 64))
(declare-fun temp10244_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10244_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10244_207 () (_ BitVec 64))
(declare-fun temp10244_208 () (_ BitVec 64))
(declare-fun temp10244_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10244_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10244_211 () (_ BitVec 64))
(declare-fun temp10244_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10244_213 () (_ BitVec 64))
(declare-fun temp10244_214 () (_ BitVec 64))
(declare-fun temp10244_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10244_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10244_217 () (_ BitVec 64))
(declare-fun temp10244_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10244_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10244_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun temp10244_221 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun temp10244_222 () (_ BitVec 64))
(declare-fun temp10244_223 () (_ BitVec 64))
(declare-fun var6894356 () (_ BitVec 64))
(declare-fun var6894323 () (_ BitVec 64))
(declare-fun var6762887 () (_ BitVec 64))
(declare-fun var6762883 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10244_224 () (_ BitVec 64))
(assert (= temp10244_1 #x0000000000000001))
(assert (= var77203 temp10244_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10244_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10244_2)))
(assert (= temp10244_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10244_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10244_4 #x0000000000000000))
(assert (= var210941 temp10244_4))
(assert (= temp10244_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10244_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10244_6 #x0000000000000000))
(assert (= var210986 temp10244_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10244_7 #x0000000000000000))
(assert (= temp10244_8 temp10244_7))
(assert (= temp10244_9 (select ARGNAME_padding_NAMEEND_VAL temp10244_8)))
(assert (= temp10244_10 #x0000000000000001))
(assert (= temp10244_11 temp10244_10))
(assert (= temp10244_12 (select ARGNAME_padding_NAMEEND_VAL temp10244_11)))
(assert (= temp10244_13 #x0000000000000002))
(assert (= temp10244_14 temp10244_13))
(assert (= temp10244_15 (select ARGNAME_padding_NAMEEND_VAL temp10244_14)))
(assert (= temp10244_16 #x0000000000000003))
(assert (= temp10244_17 temp10244_16))
(assert (= temp10244_18 (select ARGNAME_padding_NAMEEND_VAL temp10244_17)))
(assert (= temp10244_19 #x0000000000000004))
(assert (= temp10244_20 temp10244_19))
(assert (= temp10244_21 (select ARGNAME_padding_NAMEEND_VAL temp10244_20)))
(assert (= temp10244_22 #x0000000000000005))
(assert (= temp10244_23 temp10244_22))
(assert (= temp10244_24 (select ARGNAME_padding_NAMEEND_VAL temp10244_23)))
(assert (= temp10244_25 #x0000000000000000))
(assert (= temp10244_26 #x0000000000000000))
(assert (= temp10244_27 temp10244_26))
(assert (= temp10244_28 (select ARGNAME_padding_NAMEEND_VAL temp10244_27)))
(assert (= temp10244_29 #x0000000000000000))
(assert (= temp10244_30 #x0000000000000001))
(assert (= temp10244_31 temp10244_30))
(assert (= temp10244_32 (select ARGNAME_padding_NAMEEND_VAL temp10244_31)))
(assert (= temp10244_33 #x0000000000000000))
(assert (= temp10244_34 #x0000000000000002))
(assert (= temp10244_35 temp10244_34))
(assert (= temp10244_36 (select ARGNAME_padding_NAMEEND_VAL temp10244_35)))
(assert (= temp10244_37 #x0000000000000000))
(assert (= temp10244_38 #x0000000000000003))
(assert (= temp10244_39 temp10244_38))
(assert (= temp10244_40 (select ARGNAME_padding_NAMEEND_VAL temp10244_39)))
(assert (= temp10244_41 #x0000000000000000))
(assert (= temp10244_42 #x0000000000000004))
(assert (= temp10244_43 temp10244_42))
(assert (= temp10244_44 (select ARGNAME_padding_NAMEEND_VAL temp10244_43)))
(assert (= temp10244_45 #x0000000000000000))
(assert (= temp10244_46 #x0000000000000005))
(assert (= temp10244_47 temp10244_46))
(assert (= temp10244_48 (select ARGNAME_padding_NAMEEND_VAL temp10244_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10244_28 temp10244_25)
             (bvslt temp10244_32 temp10244_29)
             (bvslt temp10244_36 temp10244_33)
             (bvslt temp10244_40 temp10244_37)
             (bvslt temp10244_44 temp10244_41)
             (bvslt temp10244_48 temp10244_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10244_49 #x0000000000000000))
(assert (= var1191714 temp10244_49))
(assert (= temp10244_50 #x0000000000000000))
(assert (= temp10244_51 temp10244_50))
(assert (= temp10244_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10244_51)))
(assert (= temp10244_53 #x0000000000000001))
(assert (= temp10244_54 temp10244_53))
(assert (= temp10244_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10244_54)))
(assert (= temp10244_56 #x0000000000000002))
(assert (= temp10244_57 temp10244_56))
(assert (= temp10244_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10244_57)))
(assert (= temp10244_59 #x0000000000000003))
(assert (= temp10244_60 temp10244_59))
(assert (= temp10244_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10244_60)))
(assert (= temp10244_62 #x0000000000000004))
(assert (= temp10244_63 temp10244_62))
(assert (= temp10244_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10244_63)))
(assert (= temp10244_65 #x0000000000000005))
(assert (= temp10244_66 temp10244_65))
(assert (= temp10244_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10244_66)))
(assert (= temp10244_68 #x0000000000000000))
(assert (= temp10244_69 #x0000000000000000))
(assert (= temp10244_70 temp10244_69))
(assert (= temp10244_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10244_70)))
(assert (= temp10244_72 #x0000000000000000))
(assert (= temp10244_73 #x0000000000000001))
(assert (= temp10244_74 temp10244_73))
(assert (= temp10244_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10244_74)))
(assert (= temp10244_76 #x0000000000000000))
(assert (= temp10244_77 #x0000000000000002))
(assert (= temp10244_78 temp10244_77))
(assert (= temp10244_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10244_78)))
(assert (= temp10244_80 #x0000000000000000))
(assert (= temp10244_81 #x0000000000000003))
(assert (= temp10244_82 temp10244_81))
(assert (= temp10244_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10244_82)))
(assert (= temp10244_84 #x0000000000000000))
(assert (= temp10244_85 #x0000000000000004))
(assert (= temp10244_86 temp10244_85))
(assert (= temp10244_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10244_86)))
(assert (= temp10244_88 #x0000000000000000))
(assert (= temp10244_89 #x0000000000000005))
(assert (= temp10244_90 temp10244_89))
(assert (= temp10244_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10244_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10244_71 temp10244_68)
             (bvslt temp10244_75 temp10244_72)
             (bvslt temp10244_79 temp10244_76)
             (bvslt temp10244_83 temp10244_80)
             (bvslt temp10244_87 temp10244_84)
             (bvslt temp10244_91 temp10244_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10244_92 #x0000000000000000))
(assert (= var1191725 temp10244_92))
(assert (= temp10244_93 #x0000000000000000))
(assert (= temp10244_94 temp10244_93))
(assert (= temp10244_95 (select ARGNAME_stride_NAMEEND_VAL temp10244_94)))
(assert (= temp10244_96 #x0000000000000001))
(assert (= temp10244_97 temp10244_96))
(assert (= temp10244_98 (select ARGNAME_stride_NAMEEND_VAL temp10244_97)))
(assert (= temp10244_99 #x0000000000000002))
(assert (= temp10244_100 temp10244_99))
(assert (= temp10244_101 (select ARGNAME_stride_NAMEEND_VAL temp10244_100)))
(assert (= temp10244_102 #x0000000000000003))
(assert (= temp10244_103 temp10244_102))
(assert (= temp10244_104 (select ARGNAME_stride_NAMEEND_VAL temp10244_103)))
(assert (= temp10244_105 #x0000000000000004))
(assert (= temp10244_106 temp10244_105))
(assert (= temp10244_107 (select ARGNAME_stride_NAMEEND_VAL temp10244_106)))
(assert (= temp10244_108 #x0000000000000005))
(assert (= temp10244_109 temp10244_108))
(assert (= temp10244_110 (select ARGNAME_stride_NAMEEND_VAL temp10244_109)))
(assert (= temp10244_111 #x0000000000000000))
(assert (= temp10244_112 #x0000000000000000))
(assert (= temp10244_113 temp10244_112))
(assert (= temp10244_114 (select ARGNAME_stride_NAMEEND_VAL temp10244_113)))
(assert (= temp10244_115 #x0000000000000000))
(assert (= temp10244_116 #x0000000000000001))
(assert (= temp10244_117 temp10244_116))
(assert (= temp10244_118 (select ARGNAME_stride_NAMEEND_VAL temp10244_117)))
(assert (= temp10244_119 #x0000000000000000))
(assert (= temp10244_120 #x0000000000000002))
(assert (= temp10244_121 temp10244_120))
(assert (= temp10244_122 (select ARGNAME_stride_NAMEEND_VAL temp10244_121)))
(assert (= temp10244_123 #x0000000000000000))
(assert (= temp10244_124 #x0000000000000003))
(assert (= temp10244_125 temp10244_124))
(assert (= temp10244_126 (select ARGNAME_stride_NAMEEND_VAL temp10244_125)))
(assert (= temp10244_127 #x0000000000000000))
(assert (= temp10244_128 #x0000000000000004))
(assert (= temp10244_129 temp10244_128))
(assert (= temp10244_130 (select ARGNAME_stride_NAMEEND_VAL temp10244_129)))
(assert (= temp10244_131 #x0000000000000000))
(assert (= temp10244_132 #x0000000000000005))
(assert (= temp10244_133 temp10244_132))
(assert (= temp10244_134 (select ARGNAME_stride_NAMEEND_VAL temp10244_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10244_114 temp10244_111)
             (bvsle temp10244_118 temp10244_115)
             (bvsle temp10244_122 temp10244_119)
             (bvsle temp10244_126 temp10244_123)
             (bvsle temp10244_130 temp10244_127)
             (bvsle temp10244_134 temp10244_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10244_135 #x0000000000000000))
(assert (= var1191735 temp10244_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10244_136 #x0000000000000001))
(assert (= var1191747 temp10244_136))
(assert (= temp10244_137 #x0000000000000000))
(assert (= var1179826 temp10244_137))
(assert (= temp10244_138 #x0000000000000000))
(assert (= temp10244_139 temp10244_138))
(assert (= temp10244_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10244_139)))
(assert (= temp10244_141 #x0000000000000001))
(assert (= temp10244_142 temp10244_141))
(assert (= temp10244_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10244_142)))
(assert (= temp10244_144 #x0000000000000002))
(assert (= temp10244_145 temp10244_144))
(assert (= temp10244_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10244_145)))
(assert (= temp10244_147 #x0000000000000003))
(assert (= temp10244_148 temp10244_147))
(assert (= temp10244_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10244_148)))
(assert (= temp10244_150 #x0000000000000004))
(assert (= temp10244_151 temp10244_150))
(assert (= temp10244_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10244_151)))
(assert (= temp10244_153 #x0000000000000005))
(assert (= temp10244_154 temp10244_153))
(assert (= temp10244_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10244_154)))
(assert (= temp10244_157 var1179826))
(assert (= temp10244_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10244_157)))
(assert (= temp10244_156 temp10244_158))
(assert (= var1191780
   (ite (bvslt temp10244_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10244_159 #x0000000000000000))
(assert (= var1191780 temp10244_159))
(assert (= temp10244_160 #x0000000000000000))
(assert (= var1179826 temp10244_160))
(assert (= temp10244_162 var1179826))
(assert (= temp10244_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10244_162)))
(assert (= temp10244_161 temp10244_163))
(assert (= var1191802 (bvsmod temp10244_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10244_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10244_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10244_165 #x0000000000000001))
(assert (= var1191803 temp10244_165))
(assert (= temp10244_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10244_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10244_167 #x0000000000000001))
(assert (= var1191823 temp10244_167))
(assert (= temp10244_168 #x0000000000000001))
(assert (= var1180714 temp10244_168))
(assert (= temp10244_169 #x0000000000000000))
(assert (= temp10244_170 temp10244_169))
(assert (= temp10244_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10244_170)))
(assert (= temp10244_172 #x0000000000000001))
(assert (= temp10244_173 temp10244_172))
(assert (= temp10244_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10244_173)))
(assert (= temp10244_175 #x0000000000000002))
(assert (= temp10244_176 temp10244_175))
(assert (= temp10244_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10244_176)))
(assert (= temp10244_178 #x0000000000000003))
(assert (= temp10244_179 temp10244_178))
(assert (= temp10244_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10244_179)))
(assert (= temp10244_181 #x0000000000000004))
(assert (= temp10244_182 temp10244_181))
(assert (= temp10244_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10244_182)))
(assert (= temp10244_184 #x0000000000000005))
(assert (= temp10244_185 temp10244_184))
(assert (= temp10244_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10244_185)))
(assert (= temp10244_187 #x0000000000000000))
(assert (= temp10244_188
   (ite (bvslt var1180714 temp10244_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10244_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10244_188)))
(assert (= var1191831 temp10244_189))
(assert (bvslt (ite (bvslt var1180714 temp10244_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10244_190 #x0000000000000001))
(assert (= var1180714 temp10244_190))
(assert (= temp10244_192 var1180714))
(assert (= temp10244_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10244_192)))
(assert (= temp10244_191 temp10244_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10244_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10244_194 #x0000000000000001))
(assert (= var1191836 temp10244_194))
(assert (= temp10244_195 #x0000000000000000))
(assert (= var1179826 temp10244_195))
(assert (= temp10244_197 var1179826))
(assert (= temp10244_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10244_197)))
(assert (= temp10244_196 temp10244_198))
(assert (= temp10244_199 #x0000000000000002))
(assert (= var1586025 temp10244_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10244_200 #x0000000000000001))
(assert (= var1191993 temp10244_200))
(assert (= temp10244_201 #x0000000000000001))
(assert (= var2700303 temp10244_201))
(assert (= temp10244_202 #x0000000000000001))
(assert (= var2962447 temp10244_202))
(assert (= temp10244_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10244_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10244_204 #x0000000000000001))
(assert (= var211058 temp10244_204))
(assert (= temp10244_205 #x0000000000000001))
(assert (= var211188 temp10244_205))
(assert (= var3879401 var211188))
(assert (= temp10244_206 #x0000000000000000))
(assert (= var3866802 temp10244_206))
(assert (= temp10244_207 #x0000000000000000))
(assert (= temp10244_208
   (ite (bvslt var3866802 temp10244_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10244_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10244_208)))
(assert (= var3879420 temp10244_209))
(assert (bvslt (ite (bvslt var3866802 temp10244_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10244_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10244_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10244_211 #x0000000000000000))
(assert (= var3879421 temp10244_211))
(assert (= temp10244_212 #x0000000000000001))
(assert (= var3867690 temp10244_212))
(assert (= temp10244_213 #x0000000000000000))
(assert (= temp10244_214
   (ite (bvslt var3867690 temp10244_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10244_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10244_214)))
(assert (= var3879423 temp10244_215))
(assert (bvslt (ite (bvslt var3867690 temp10244_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10244_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10244_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10244_217 #x0000000000000001))
(assert (= var3879424 temp10244_217))
(assert (= temp10244_218 #x0000000000000000))
(assert (= var4079423 temp10244_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10244_219 #x0000000000000002))
(assert (= var4208259 temp10244_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10244_220 #x0000000000000000))
(assert (= var4273820 temp10244_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4862352 var211201))
(assert (= var5124496 var211201))
(assert (= temp10244_221 #x0000000000000000))
(assert (= var5452176 temp10244_221))
(assert (= temp10244_222 #x0000000000000001))
(assert (= var211058 temp10244_222))
(assert (= temp10244_223 #x0000000000000000))
(assert (= var6894356 temp10244_223))
(assert (= var6894323 var6894356))
(assert (= var6762887 var6894323))
(assert (= var6762883 var6762887))
(assert (= var212669 var6762883))
(assert (= temp10244_224 #x0000000000000000))
(assert (= var212669 temp10244_224))
(model-add temp10244_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10244_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10244_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10244_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



