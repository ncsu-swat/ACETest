(declare-fun temp11034_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11034_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11034_3 () (_ BitVec 64))
(declare-fun temp11034_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11034_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11034_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11034_7 () (_ BitVec 64))
(declare-fun temp11034_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11034_9 () (_ BitVec 64))
(declare-fun temp11034_10 () (_ BitVec 64))
(declare-fun temp11034_11 () (_ BitVec 64))
(declare-fun temp11034_12 () (_ BitVec 64))
(declare-fun temp11034_13 () (_ BitVec 64))
(declare-fun temp11034_14 () (_ BitVec 64))
(declare-fun temp11034_15 () (_ BitVec 64))
(declare-fun temp11034_16 () (_ BitVec 64))
(declare-fun temp11034_17 () (_ BitVec 64))
(declare-fun temp11034_18 () (_ BitVec 64))
(declare-fun temp11034_19 () (_ BitVec 64))
(declare-fun temp11034_20 () (_ BitVec 64))
(declare-fun temp11034_21 () (_ BitVec 64))
(declare-fun temp11034_22 () (_ BitVec 64))
(declare-fun temp11034_23 () (_ BitVec 64))
(declare-fun temp11034_24 () (_ BitVec 64))
(declare-fun temp11034_25 () (_ BitVec 64))
(declare-fun temp11034_26 () (_ BitVec 64))
(declare-fun temp11034_27 () (_ BitVec 64))
(declare-fun temp11034_28 () (_ BitVec 64))
(declare-fun temp11034_29 () (_ BitVec 64))
(declare-fun temp11034_30 () (_ BitVec 64))
(declare-fun temp11034_31 () (_ BitVec 64))
(declare-fun temp11034_32 () (_ BitVec 64))
(declare-fun temp11034_33 () (_ BitVec 64))
(declare-fun temp11034_34 () (_ BitVec 64))
(declare-fun temp11034_35 () (_ BitVec 64))
(declare-fun temp11034_36 () (_ BitVec 64))
(declare-fun temp11034_37 () (_ BitVec 64))
(declare-fun temp11034_38 () (_ BitVec 64))
(declare-fun temp11034_39 () (_ BitVec 64))
(declare-fun temp11034_40 () (_ BitVec 64))
(declare-fun temp11034_41 () (_ BitVec 64))
(declare-fun temp11034_42 () (_ BitVec 64))
(declare-fun temp11034_43 () (_ BitVec 64))
(declare-fun temp11034_44 () (_ BitVec 64))
(declare-fun temp11034_45 () (_ BitVec 64))
(declare-fun temp11034_46 () (_ BitVec 64))
(declare-fun temp11034_47 () (_ BitVec 64))
(declare-fun temp11034_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11034_49 () (_ BitVec 64))
(declare-fun temp11034_50 () (_ BitVec 64))
(declare-fun temp11034_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11034_52 () (_ BitVec 64))
(declare-fun temp11034_53 () (_ BitVec 64))
(declare-fun temp11034_54 () (_ BitVec 64))
(declare-fun temp11034_55 () (_ BitVec 64))
(declare-fun temp11034_56 () (_ BitVec 64))
(declare-fun temp11034_57 () (_ BitVec 64))
(declare-fun temp11034_58 () (_ BitVec 64))
(declare-fun temp11034_59 () (_ BitVec 64))
(declare-fun temp11034_60 () (_ BitVec 64))
(declare-fun temp11034_61 () (_ BitVec 64))
(declare-fun temp11034_62 () (_ BitVec 64))
(declare-fun temp11034_63 () (_ BitVec 64))
(declare-fun temp11034_64 () (_ BitVec 64))
(declare-fun temp11034_65 () (_ BitVec 64))
(declare-fun temp11034_66 () (_ BitVec 64))
(declare-fun temp11034_67 () (_ BitVec 64))
(declare-fun temp11034_68 () (_ BitVec 64))
(declare-fun temp11034_69 () (_ BitVec 64))
(declare-fun temp11034_70 () (_ BitVec 64))
(declare-fun temp11034_71 () (_ BitVec 64))
(declare-fun temp11034_72 () (_ BitVec 64))
(declare-fun temp11034_73 () (_ BitVec 64))
(declare-fun temp11034_74 () (_ BitVec 64))
(declare-fun temp11034_75 () (_ BitVec 64))
(declare-fun temp11034_76 () (_ BitVec 64))
(declare-fun temp11034_77 () (_ BitVec 64))
(declare-fun temp11034_78 () (_ BitVec 64))
(declare-fun temp11034_79 () (_ BitVec 64))
(declare-fun temp11034_80 () (_ BitVec 64))
(declare-fun temp11034_81 () (_ BitVec 64))
(declare-fun temp11034_82 () (_ BitVec 64))
(declare-fun temp11034_83 () (_ BitVec 64))
(declare-fun temp11034_84 () (_ BitVec 64))
(declare-fun temp11034_85 () (_ BitVec 64))
(declare-fun temp11034_86 () (_ BitVec 64))
(declare-fun temp11034_87 () (_ BitVec 64))
(declare-fun temp11034_88 () (_ BitVec 64))
(declare-fun temp11034_89 () (_ BitVec 64))
(declare-fun temp11034_90 () (_ BitVec 64))
(declare-fun temp11034_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11034_92 () (_ BitVec 64))
(declare-fun temp11034_93 () (_ BitVec 64))
(declare-fun temp11034_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11034_95 () (_ BitVec 64))
(declare-fun temp11034_96 () (_ BitVec 64))
(declare-fun temp11034_97 () (_ BitVec 64))
(declare-fun temp11034_98 () (_ BitVec 64))
(declare-fun temp11034_99 () (_ BitVec 64))
(declare-fun temp11034_100 () (_ BitVec 64))
(declare-fun temp11034_101 () (_ BitVec 64))
(declare-fun temp11034_102 () (_ BitVec 64))
(declare-fun temp11034_103 () (_ BitVec 64))
(declare-fun temp11034_104 () (_ BitVec 64))
(declare-fun temp11034_105 () (_ BitVec 64))
(declare-fun temp11034_106 () (_ BitVec 64))
(declare-fun temp11034_107 () (_ BitVec 64))
(declare-fun temp11034_108 () (_ BitVec 64))
(declare-fun temp11034_109 () (_ BitVec 64))
(declare-fun temp11034_110 () (_ BitVec 64))
(declare-fun temp11034_111 () (_ BitVec 64))
(declare-fun temp11034_112 () (_ BitVec 64))
(declare-fun temp11034_113 () (_ BitVec 64))
(declare-fun temp11034_114 () (_ BitVec 64))
(declare-fun temp11034_115 () (_ BitVec 64))
(declare-fun temp11034_116 () (_ BitVec 64))
(declare-fun temp11034_117 () (_ BitVec 64))
(declare-fun temp11034_118 () (_ BitVec 64))
(declare-fun temp11034_119 () (_ BitVec 64))
(declare-fun temp11034_120 () (_ BitVec 64))
(declare-fun temp11034_121 () (_ BitVec 64))
(declare-fun temp11034_122 () (_ BitVec 64))
(declare-fun temp11034_123 () (_ BitVec 64))
(declare-fun temp11034_124 () (_ BitVec 64))
(declare-fun temp11034_125 () (_ BitVec 64))
(declare-fun temp11034_126 () (_ BitVec 64))
(declare-fun temp11034_127 () (_ BitVec 64))
(declare-fun temp11034_128 () (_ BitVec 64))
(declare-fun temp11034_129 () (_ BitVec 64))
(declare-fun temp11034_130 () (_ BitVec 64))
(declare-fun temp11034_131 () (_ BitVec 64))
(declare-fun temp11034_132 () (_ BitVec 64))
(declare-fun temp11034_133 () (_ BitVec 64))
(declare-fun temp11034_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11034_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11034_136 () (_ BitVec 64))
(declare-fun temp11034_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11034_138 () (_ BitVec 64))
(declare-fun temp11034_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11034_140 () (_ BitVec 64))
(declare-fun temp11034_141 () (_ BitVec 64))
(declare-fun temp11034_142 () (_ BitVec 64))
(declare-fun temp11034_143 () (_ BitVec 64))
(declare-fun temp11034_144 () (_ BitVec 64))
(declare-fun temp11034_145 () (_ BitVec 64))
(declare-fun temp11034_146 () (_ BitVec 64))
(declare-fun temp11034_147 () (_ BitVec 64))
(declare-fun temp11034_148 () (_ BitVec 64))
(declare-fun temp11034_149 () (_ BitVec 64))
(declare-fun temp11034_150 () (_ BitVec 64))
(declare-fun temp11034_151 () (_ BitVec 64))
(declare-fun temp11034_152 () (_ BitVec 64))
(declare-fun temp11034_153 () (_ BitVec 64))
(declare-fun temp11034_154 () (_ BitVec 64))
(declare-fun temp11034_155 () (_ BitVec 64))
(declare-fun temp11034_157 () (_ BitVec 64))
(declare-fun temp11034_158 () (_ BitVec 64))
(declare-fun temp11034_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11034_159 () (_ BitVec 64))
(declare-fun temp11034_160 () (_ BitVec 64))
(declare-fun temp11034_162 () (_ BitVec 64))
(declare-fun temp11034_163 () (_ BitVec 64))
(declare-fun temp11034_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11034_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11034_165 () (_ BitVec 64))
(declare-fun temp11034_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11034_167 () (_ BitVec 64))
(declare-fun temp11034_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11034_169 () (_ BitVec 64))
(declare-fun temp11034_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11034_171 () (_ BitVec 64))
(declare-fun temp11034_172 () (_ BitVec 64))
(declare-fun temp11034_173 () (_ BitVec 64))
(declare-fun temp11034_174 () (_ BitVec 64))
(declare-fun temp11034_175 () (_ BitVec 64))
(declare-fun temp11034_176 () (_ BitVec 64))
(declare-fun temp11034_177 () (_ BitVec 64))
(declare-fun temp11034_178 () (_ BitVec 64))
(declare-fun temp11034_179 () (_ BitVec 64))
(declare-fun temp11034_180 () (_ BitVec 64))
(declare-fun temp11034_181 () (_ BitVec 64))
(declare-fun temp11034_182 () (_ BitVec 64))
(declare-fun temp11034_183 () (_ BitVec 64))
(declare-fun temp11034_184 () (_ BitVec 64))
(declare-fun temp11034_185 () (_ BitVec 64))
(declare-fun temp11034_186 () (_ BitVec 64))
(declare-fun temp11034_187 () (_ BitVec 64))
(declare-fun temp11034_188 () (_ BitVec 64))
(declare-fun temp11034_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11034_190 () (_ BitVec 64))
(declare-fun temp11034_192 () (_ BitVec 64))
(declare-fun temp11034_193 () (_ BitVec 64))
(declare-fun temp11034_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11034_194 () (_ BitVec 64))
(declare-fun temp11034_195 () (_ BitVec 64))
(declare-fun temp11034_197 () (_ BitVec 64))
(declare-fun temp11034_198 () (_ BitVec 64))
(declare-fun temp11034_196 () (_ BitVec 64))
(declare-fun temp11034_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11034_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11034_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11034_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11034_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11034_204 () (_ BitVec 64))
(declare-fun temp11034_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11034_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11034_207 () (_ BitVec 64))
(declare-fun temp11034_208 () (_ BitVec 64))
(declare-fun temp11034_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11034_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11034_211 () (_ BitVec 64))
(declare-fun temp11034_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11034_213 () (_ BitVec 64))
(declare-fun temp11034_214 () (_ BitVec 64))
(declare-fun temp11034_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11034_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11034_217 () (_ BitVec 64))
(declare-fun temp11034_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11034_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp11034_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun temp11034_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp11034_222 () (_ BitVec 64))
(declare-fun temp11034_223 () (_ BitVec 64))
(declare-fun var5191299 () (_ BitVec 64))
(declare-fun var5191301 () (_ BitVec 64))
(declare-fun var5256844 () (_ BitVec 64))
(declare-fun var5256845 () (_ BitVec 64))
(declare-fun temp11034_224 () (_ BitVec 64))
(assert (= temp11034_1 #x0000000000000001))
(assert (= var77203 temp11034_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11034_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11034_2)))
(assert (= temp11034_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11034_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11034_4 #x0000000000000000))
(assert (= var210941 temp11034_4))
(assert (= temp11034_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11034_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11034_6 #x0000000000000000))
(assert (= var210986 temp11034_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11034_7 #x0000000000000000))
(assert (= temp11034_8 temp11034_7))
(assert (= temp11034_9 (select ARGNAME_padding_NAMEEND_VAL temp11034_8)))
(assert (= temp11034_10 #x0000000000000001))
(assert (= temp11034_11 temp11034_10))
(assert (= temp11034_12 (select ARGNAME_padding_NAMEEND_VAL temp11034_11)))
(assert (= temp11034_13 #x0000000000000002))
(assert (= temp11034_14 temp11034_13))
(assert (= temp11034_15 (select ARGNAME_padding_NAMEEND_VAL temp11034_14)))
(assert (= temp11034_16 #x0000000000000003))
(assert (= temp11034_17 temp11034_16))
(assert (= temp11034_18 (select ARGNAME_padding_NAMEEND_VAL temp11034_17)))
(assert (= temp11034_19 #x0000000000000004))
(assert (= temp11034_20 temp11034_19))
(assert (= temp11034_21 (select ARGNAME_padding_NAMEEND_VAL temp11034_20)))
(assert (= temp11034_22 #x0000000000000005))
(assert (= temp11034_23 temp11034_22))
(assert (= temp11034_24 (select ARGNAME_padding_NAMEEND_VAL temp11034_23)))
(assert (= temp11034_25 #x0000000000000000))
(assert (= temp11034_26 #x0000000000000000))
(assert (= temp11034_27 temp11034_26))
(assert (= temp11034_28 (select ARGNAME_padding_NAMEEND_VAL temp11034_27)))
(assert (= temp11034_29 #x0000000000000000))
(assert (= temp11034_30 #x0000000000000001))
(assert (= temp11034_31 temp11034_30))
(assert (= temp11034_32 (select ARGNAME_padding_NAMEEND_VAL temp11034_31)))
(assert (= temp11034_33 #x0000000000000000))
(assert (= temp11034_34 #x0000000000000002))
(assert (= temp11034_35 temp11034_34))
(assert (= temp11034_36 (select ARGNAME_padding_NAMEEND_VAL temp11034_35)))
(assert (= temp11034_37 #x0000000000000000))
(assert (= temp11034_38 #x0000000000000003))
(assert (= temp11034_39 temp11034_38))
(assert (= temp11034_40 (select ARGNAME_padding_NAMEEND_VAL temp11034_39)))
(assert (= temp11034_41 #x0000000000000000))
(assert (= temp11034_42 #x0000000000000004))
(assert (= temp11034_43 temp11034_42))
(assert (= temp11034_44 (select ARGNAME_padding_NAMEEND_VAL temp11034_43)))
(assert (= temp11034_45 #x0000000000000000))
(assert (= temp11034_46 #x0000000000000005))
(assert (= temp11034_47 temp11034_46))
(assert (= temp11034_48 (select ARGNAME_padding_NAMEEND_VAL temp11034_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11034_28 temp11034_25)
             (bvslt temp11034_32 temp11034_29)
             (bvslt temp11034_36 temp11034_33)
             (bvslt temp11034_40 temp11034_37)
             (bvslt temp11034_44 temp11034_41)
             (bvslt temp11034_48 temp11034_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11034_49 #x0000000000000000))
(assert (= var1191714 temp11034_49))
(assert (= temp11034_50 #x0000000000000000))
(assert (= temp11034_51 temp11034_50))
(assert (= temp11034_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11034_51)))
(assert (= temp11034_53 #x0000000000000001))
(assert (= temp11034_54 temp11034_53))
(assert (= temp11034_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11034_54)))
(assert (= temp11034_56 #x0000000000000002))
(assert (= temp11034_57 temp11034_56))
(assert (= temp11034_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11034_57)))
(assert (= temp11034_59 #x0000000000000003))
(assert (= temp11034_60 temp11034_59))
(assert (= temp11034_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11034_60)))
(assert (= temp11034_62 #x0000000000000004))
(assert (= temp11034_63 temp11034_62))
(assert (= temp11034_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11034_63)))
(assert (= temp11034_65 #x0000000000000005))
(assert (= temp11034_66 temp11034_65))
(assert (= temp11034_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11034_66)))
(assert (= temp11034_68 #x0000000000000000))
(assert (= temp11034_69 #x0000000000000000))
(assert (= temp11034_70 temp11034_69))
(assert (= temp11034_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11034_70)))
(assert (= temp11034_72 #x0000000000000000))
(assert (= temp11034_73 #x0000000000000001))
(assert (= temp11034_74 temp11034_73))
(assert (= temp11034_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11034_74)))
(assert (= temp11034_76 #x0000000000000000))
(assert (= temp11034_77 #x0000000000000002))
(assert (= temp11034_78 temp11034_77))
(assert (= temp11034_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11034_78)))
(assert (= temp11034_80 #x0000000000000000))
(assert (= temp11034_81 #x0000000000000003))
(assert (= temp11034_82 temp11034_81))
(assert (= temp11034_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11034_82)))
(assert (= temp11034_84 #x0000000000000000))
(assert (= temp11034_85 #x0000000000000004))
(assert (= temp11034_86 temp11034_85))
(assert (= temp11034_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11034_86)))
(assert (= temp11034_88 #x0000000000000000))
(assert (= temp11034_89 #x0000000000000005))
(assert (= temp11034_90 temp11034_89))
(assert (= temp11034_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11034_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11034_71 temp11034_68)
             (bvslt temp11034_75 temp11034_72)
             (bvslt temp11034_79 temp11034_76)
             (bvslt temp11034_83 temp11034_80)
             (bvslt temp11034_87 temp11034_84)
             (bvslt temp11034_91 temp11034_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11034_92 #x0000000000000000))
(assert (= var1191725 temp11034_92))
(assert (= temp11034_93 #x0000000000000000))
(assert (= temp11034_94 temp11034_93))
(assert (= temp11034_95 (select ARGNAME_stride_NAMEEND_VAL temp11034_94)))
(assert (= temp11034_96 #x0000000000000001))
(assert (= temp11034_97 temp11034_96))
(assert (= temp11034_98 (select ARGNAME_stride_NAMEEND_VAL temp11034_97)))
(assert (= temp11034_99 #x0000000000000002))
(assert (= temp11034_100 temp11034_99))
(assert (= temp11034_101 (select ARGNAME_stride_NAMEEND_VAL temp11034_100)))
(assert (= temp11034_102 #x0000000000000003))
(assert (= temp11034_103 temp11034_102))
(assert (= temp11034_104 (select ARGNAME_stride_NAMEEND_VAL temp11034_103)))
(assert (= temp11034_105 #x0000000000000004))
(assert (= temp11034_106 temp11034_105))
(assert (= temp11034_107 (select ARGNAME_stride_NAMEEND_VAL temp11034_106)))
(assert (= temp11034_108 #x0000000000000005))
(assert (= temp11034_109 temp11034_108))
(assert (= temp11034_110 (select ARGNAME_stride_NAMEEND_VAL temp11034_109)))
(assert (= temp11034_111 #x0000000000000000))
(assert (= temp11034_112 #x0000000000000000))
(assert (= temp11034_113 temp11034_112))
(assert (= temp11034_114 (select ARGNAME_stride_NAMEEND_VAL temp11034_113)))
(assert (= temp11034_115 #x0000000000000000))
(assert (= temp11034_116 #x0000000000000001))
(assert (= temp11034_117 temp11034_116))
(assert (= temp11034_118 (select ARGNAME_stride_NAMEEND_VAL temp11034_117)))
(assert (= temp11034_119 #x0000000000000000))
(assert (= temp11034_120 #x0000000000000002))
(assert (= temp11034_121 temp11034_120))
(assert (= temp11034_122 (select ARGNAME_stride_NAMEEND_VAL temp11034_121)))
(assert (= temp11034_123 #x0000000000000000))
(assert (= temp11034_124 #x0000000000000003))
(assert (= temp11034_125 temp11034_124))
(assert (= temp11034_126 (select ARGNAME_stride_NAMEEND_VAL temp11034_125)))
(assert (= temp11034_127 #x0000000000000000))
(assert (= temp11034_128 #x0000000000000004))
(assert (= temp11034_129 temp11034_128))
(assert (= temp11034_130 (select ARGNAME_stride_NAMEEND_VAL temp11034_129)))
(assert (= temp11034_131 #x0000000000000000))
(assert (= temp11034_132 #x0000000000000005))
(assert (= temp11034_133 temp11034_132))
(assert (= temp11034_134 (select ARGNAME_stride_NAMEEND_VAL temp11034_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11034_114 temp11034_111)
             (bvsle temp11034_118 temp11034_115)
             (bvsle temp11034_122 temp11034_119)
             (bvsle temp11034_126 temp11034_123)
             (bvsle temp11034_130 temp11034_127)
             (bvsle temp11034_134 temp11034_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11034_135 #x0000000000000000))
(assert (= var1191735 temp11034_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11034_136 #x0000000000000001))
(assert (= var1191747 temp11034_136))
(assert (= temp11034_137 #x0000000000000000))
(assert (= var1179826 temp11034_137))
(assert (= temp11034_138 #x0000000000000000))
(assert (= temp11034_139 temp11034_138))
(assert (= temp11034_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11034_139)))
(assert (= temp11034_141 #x0000000000000001))
(assert (= temp11034_142 temp11034_141))
(assert (= temp11034_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11034_142)))
(assert (= temp11034_144 #x0000000000000002))
(assert (= temp11034_145 temp11034_144))
(assert (= temp11034_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11034_145)))
(assert (= temp11034_147 #x0000000000000003))
(assert (= temp11034_148 temp11034_147))
(assert (= temp11034_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11034_148)))
(assert (= temp11034_150 #x0000000000000004))
(assert (= temp11034_151 temp11034_150))
(assert (= temp11034_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11034_151)))
(assert (= temp11034_153 #x0000000000000005))
(assert (= temp11034_154 temp11034_153))
(assert (= temp11034_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11034_154)))
(assert (= temp11034_157 var1179826))
(assert (= temp11034_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11034_157)))
(assert (= temp11034_156 temp11034_158))
(assert (= var1191780
   (ite (bvslt temp11034_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11034_159 #x0000000000000000))
(assert (= var1191780 temp11034_159))
(assert (= temp11034_160 #x0000000000000000))
(assert (= var1179826 temp11034_160))
(assert (= temp11034_162 var1179826))
(assert (= temp11034_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11034_162)))
(assert (= temp11034_161 temp11034_163))
(assert (= var1191802 (bvsmod temp11034_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11034_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11034_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11034_165 #x0000000000000001))
(assert (= var1191803 temp11034_165))
(assert (= temp11034_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11034_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11034_167 #x0000000000000001))
(assert (= var1191823 temp11034_167))
(assert (= temp11034_168 #x0000000000000001))
(assert (= var1180714 temp11034_168))
(assert (= temp11034_169 #x0000000000000000))
(assert (= temp11034_170 temp11034_169))
(assert (= temp11034_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11034_170)))
(assert (= temp11034_172 #x0000000000000001))
(assert (= temp11034_173 temp11034_172))
(assert (= temp11034_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11034_173)))
(assert (= temp11034_175 #x0000000000000002))
(assert (= temp11034_176 temp11034_175))
(assert (= temp11034_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11034_176)))
(assert (= temp11034_178 #x0000000000000003))
(assert (= temp11034_179 temp11034_178))
(assert (= temp11034_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11034_179)))
(assert (= temp11034_181 #x0000000000000004))
(assert (= temp11034_182 temp11034_181))
(assert (= temp11034_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11034_182)))
(assert (= temp11034_184 #x0000000000000005))
(assert (= temp11034_185 temp11034_184))
(assert (= temp11034_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11034_185)))
(assert (= temp11034_187 #x0000000000000000))
(assert (= temp11034_188
   (ite (bvslt var1180714 temp11034_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11034_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11034_188)))
(assert (= var1191831 temp11034_189))
(assert (bvslt (ite (bvslt var1180714 temp11034_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11034_190 #x0000000000000001))
(assert (= var1180714 temp11034_190))
(assert (= temp11034_192 var1180714))
(assert (= temp11034_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11034_192)))
(assert (= temp11034_191 temp11034_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11034_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11034_194 #x0000000000000001))
(assert (= var1191836 temp11034_194))
(assert (= temp11034_195 #x0000000000000000))
(assert (= var1179826 temp11034_195))
(assert (= temp11034_197 var1179826))
(assert (= temp11034_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11034_197)))
(assert (= temp11034_196 temp11034_198))
(assert (= temp11034_199 #x0000000000000002))
(assert (= var1586025 temp11034_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11034_200 #x0000000000000001))
(assert (= var1191993 temp11034_200))
(assert (= temp11034_201 #x0000000000000001))
(assert (= var2700303 temp11034_201))
(assert (= temp11034_202 #x0000000000000001))
(assert (= var2962447 temp11034_202))
(assert (= temp11034_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11034_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11034_204 #x0000000000000001))
(assert (= var211058 temp11034_204))
(assert (= temp11034_205 #x0000000000000001))
(assert (= var211188 temp11034_205))
(assert (= var3879401 var211188))
(assert (= temp11034_206 #x0000000000000000))
(assert (= var3866802 temp11034_206))
(assert (= temp11034_207 #x0000000000000000))
(assert (= temp11034_208
   (ite (bvslt var3866802 temp11034_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11034_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11034_208)))
(assert (= var3879420 temp11034_209))
(assert (bvslt (ite (bvslt var3866802 temp11034_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11034_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11034_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11034_211 #x0000000000000000))
(assert (= var3879421 temp11034_211))
(assert (= temp11034_212 #x0000000000000001))
(assert (= var3867690 temp11034_212))
(assert (= temp11034_213 #x0000000000000000))
(assert (= temp11034_214
   (ite (bvslt var3867690 temp11034_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11034_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11034_214)))
(assert (= var3879423 temp11034_215))
(assert (bvslt (ite (bvslt var3867690 temp11034_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11034_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11034_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11034_217 #x0000000000000001))
(assert (= var3879424 temp11034_217))
(assert (= temp11034_218 #x0000000000000000))
(assert (= var4133117 temp11034_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11034_219 #x0000000000000002))
(assert (= var4339331 temp11034_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11034_220 #x0000000000000000))
(assert (= var4404892 temp11034_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4600208 var211201))
(assert (= var4862352 var211201))
(assert (= temp11034_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp11034_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11034_222 #x0000000000000001))
(assert (= var212414 temp11034_222))
(assert (= temp11034_223 #x0000000000000002))
(assert (= var5191299 temp11034_223))
(assert (= var5191301 (bvsub ARGNAME_weight_NAMEEND_DIM var5191299)))
(assert (= var5256844 var5191299))
(assert (= var5256845 var5191301))
(assert (= temp11034_224 #x0000000000000001))
(assert (= var211058 temp11034_224))
(model-add temp11034_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11034_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11034_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11034_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




