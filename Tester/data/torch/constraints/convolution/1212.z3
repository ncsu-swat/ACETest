(declare-fun temp10346_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10346_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10346_3 () (_ BitVec 64))
(declare-fun temp10346_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10346_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10346_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10346_7 () (_ BitVec 64))
(declare-fun temp10346_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10346_9 () (_ BitVec 64))
(declare-fun temp10346_10 () (_ BitVec 64))
(declare-fun temp10346_11 () (_ BitVec 64))
(declare-fun temp10346_12 () (_ BitVec 64))
(declare-fun temp10346_13 () (_ BitVec 64))
(declare-fun temp10346_14 () (_ BitVec 64))
(declare-fun temp10346_15 () (_ BitVec 64))
(declare-fun temp10346_16 () (_ BitVec 64))
(declare-fun temp10346_17 () (_ BitVec 64))
(declare-fun temp10346_18 () (_ BitVec 64))
(declare-fun temp10346_19 () (_ BitVec 64))
(declare-fun temp10346_20 () (_ BitVec 64))
(declare-fun temp10346_21 () (_ BitVec 64))
(declare-fun temp10346_22 () (_ BitVec 64))
(declare-fun temp10346_23 () (_ BitVec 64))
(declare-fun temp10346_24 () (_ BitVec 64))
(declare-fun temp10346_25 () (_ BitVec 64))
(declare-fun temp10346_26 () (_ BitVec 64))
(declare-fun temp10346_27 () (_ BitVec 64))
(declare-fun temp10346_28 () (_ BitVec 64))
(declare-fun temp10346_29 () (_ BitVec 64))
(declare-fun temp10346_30 () (_ BitVec 64))
(declare-fun temp10346_31 () (_ BitVec 64))
(declare-fun temp10346_32 () (_ BitVec 64))
(declare-fun temp10346_33 () (_ BitVec 64))
(declare-fun temp10346_34 () (_ BitVec 64))
(declare-fun temp10346_35 () (_ BitVec 64))
(declare-fun temp10346_36 () (_ BitVec 64))
(declare-fun temp10346_37 () (_ BitVec 64))
(declare-fun temp10346_38 () (_ BitVec 64))
(declare-fun temp10346_39 () (_ BitVec 64))
(declare-fun temp10346_40 () (_ BitVec 64))
(declare-fun temp10346_41 () (_ BitVec 64))
(declare-fun temp10346_42 () (_ BitVec 64))
(declare-fun temp10346_43 () (_ BitVec 64))
(declare-fun temp10346_44 () (_ BitVec 64))
(declare-fun temp10346_45 () (_ BitVec 64))
(declare-fun temp10346_46 () (_ BitVec 64))
(declare-fun temp10346_47 () (_ BitVec 64))
(declare-fun temp10346_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10346_49 () (_ BitVec 64))
(declare-fun temp10346_50 () (_ BitVec 64))
(declare-fun temp10346_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10346_52 () (_ BitVec 64))
(declare-fun temp10346_53 () (_ BitVec 64))
(declare-fun temp10346_54 () (_ BitVec 64))
(declare-fun temp10346_55 () (_ BitVec 64))
(declare-fun temp10346_56 () (_ BitVec 64))
(declare-fun temp10346_57 () (_ BitVec 64))
(declare-fun temp10346_58 () (_ BitVec 64))
(declare-fun temp10346_59 () (_ BitVec 64))
(declare-fun temp10346_60 () (_ BitVec 64))
(declare-fun temp10346_61 () (_ BitVec 64))
(declare-fun temp10346_62 () (_ BitVec 64))
(declare-fun temp10346_63 () (_ BitVec 64))
(declare-fun temp10346_64 () (_ BitVec 64))
(declare-fun temp10346_65 () (_ BitVec 64))
(declare-fun temp10346_66 () (_ BitVec 64))
(declare-fun temp10346_67 () (_ BitVec 64))
(declare-fun temp10346_68 () (_ BitVec 64))
(declare-fun temp10346_69 () (_ BitVec 64))
(declare-fun temp10346_70 () (_ BitVec 64))
(declare-fun temp10346_71 () (_ BitVec 64))
(declare-fun temp10346_72 () (_ BitVec 64))
(declare-fun temp10346_73 () (_ BitVec 64))
(declare-fun temp10346_74 () (_ BitVec 64))
(declare-fun temp10346_75 () (_ BitVec 64))
(declare-fun temp10346_76 () (_ BitVec 64))
(declare-fun temp10346_77 () (_ BitVec 64))
(declare-fun temp10346_78 () (_ BitVec 64))
(declare-fun temp10346_79 () (_ BitVec 64))
(declare-fun temp10346_80 () (_ BitVec 64))
(declare-fun temp10346_81 () (_ BitVec 64))
(declare-fun temp10346_82 () (_ BitVec 64))
(declare-fun temp10346_83 () (_ BitVec 64))
(declare-fun temp10346_84 () (_ BitVec 64))
(declare-fun temp10346_85 () (_ BitVec 64))
(declare-fun temp10346_86 () (_ BitVec 64))
(declare-fun temp10346_87 () (_ BitVec 64))
(declare-fun temp10346_88 () (_ BitVec 64))
(declare-fun temp10346_89 () (_ BitVec 64))
(declare-fun temp10346_90 () (_ BitVec 64))
(declare-fun temp10346_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10346_92 () (_ BitVec 64))
(declare-fun temp10346_93 () (_ BitVec 64))
(declare-fun temp10346_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10346_95 () (_ BitVec 64))
(declare-fun temp10346_96 () (_ BitVec 64))
(declare-fun temp10346_97 () (_ BitVec 64))
(declare-fun temp10346_98 () (_ BitVec 64))
(declare-fun temp10346_99 () (_ BitVec 64))
(declare-fun temp10346_100 () (_ BitVec 64))
(declare-fun temp10346_101 () (_ BitVec 64))
(declare-fun temp10346_102 () (_ BitVec 64))
(declare-fun temp10346_103 () (_ BitVec 64))
(declare-fun temp10346_104 () (_ BitVec 64))
(declare-fun temp10346_105 () (_ BitVec 64))
(declare-fun temp10346_106 () (_ BitVec 64))
(declare-fun temp10346_107 () (_ BitVec 64))
(declare-fun temp10346_108 () (_ BitVec 64))
(declare-fun temp10346_109 () (_ BitVec 64))
(declare-fun temp10346_110 () (_ BitVec 64))
(declare-fun temp10346_111 () (_ BitVec 64))
(declare-fun temp10346_112 () (_ BitVec 64))
(declare-fun temp10346_113 () (_ BitVec 64))
(declare-fun temp10346_114 () (_ BitVec 64))
(declare-fun temp10346_115 () (_ BitVec 64))
(declare-fun temp10346_116 () (_ BitVec 64))
(declare-fun temp10346_117 () (_ BitVec 64))
(declare-fun temp10346_118 () (_ BitVec 64))
(declare-fun temp10346_119 () (_ BitVec 64))
(declare-fun temp10346_120 () (_ BitVec 64))
(declare-fun temp10346_121 () (_ BitVec 64))
(declare-fun temp10346_122 () (_ BitVec 64))
(declare-fun temp10346_123 () (_ BitVec 64))
(declare-fun temp10346_124 () (_ BitVec 64))
(declare-fun temp10346_125 () (_ BitVec 64))
(declare-fun temp10346_126 () (_ BitVec 64))
(declare-fun temp10346_127 () (_ BitVec 64))
(declare-fun temp10346_128 () (_ BitVec 64))
(declare-fun temp10346_129 () (_ BitVec 64))
(declare-fun temp10346_130 () (_ BitVec 64))
(declare-fun temp10346_131 () (_ BitVec 64))
(declare-fun temp10346_132 () (_ BitVec 64))
(declare-fun temp10346_133 () (_ BitVec 64))
(declare-fun temp10346_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10346_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10346_136 () (_ BitVec 64))
(declare-fun temp10346_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10346_138 () (_ BitVec 64))
(declare-fun temp10346_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10346_140 () (_ BitVec 64))
(declare-fun temp10346_141 () (_ BitVec 64))
(declare-fun temp10346_142 () (_ BitVec 64))
(declare-fun temp10346_143 () (_ BitVec 64))
(declare-fun temp10346_144 () (_ BitVec 64))
(declare-fun temp10346_145 () (_ BitVec 64))
(declare-fun temp10346_146 () (_ BitVec 64))
(declare-fun temp10346_147 () (_ BitVec 64))
(declare-fun temp10346_148 () (_ BitVec 64))
(declare-fun temp10346_149 () (_ BitVec 64))
(declare-fun temp10346_150 () (_ BitVec 64))
(declare-fun temp10346_151 () (_ BitVec 64))
(declare-fun temp10346_152 () (_ BitVec 64))
(declare-fun temp10346_153 () (_ BitVec 64))
(declare-fun temp10346_154 () (_ BitVec 64))
(declare-fun temp10346_155 () (_ BitVec 64))
(declare-fun temp10346_157 () (_ BitVec 64))
(declare-fun temp10346_158 () (_ BitVec 64))
(declare-fun temp10346_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10346_159 () (_ BitVec 64))
(declare-fun temp10346_160 () (_ BitVec 64))
(declare-fun temp10346_162 () (_ BitVec 64))
(declare-fun temp10346_163 () (_ BitVec 64))
(declare-fun temp10346_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10346_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10346_165 () (_ BitVec 64))
(declare-fun temp10346_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10346_167 () (_ BitVec 64))
(declare-fun temp10346_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10346_169 () (_ BitVec 64))
(declare-fun temp10346_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10346_171 () (_ BitVec 64))
(declare-fun temp10346_172 () (_ BitVec 64))
(declare-fun temp10346_173 () (_ BitVec 64))
(declare-fun temp10346_174 () (_ BitVec 64))
(declare-fun temp10346_175 () (_ BitVec 64))
(declare-fun temp10346_176 () (_ BitVec 64))
(declare-fun temp10346_177 () (_ BitVec 64))
(declare-fun temp10346_178 () (_ BitVec 64))
(declare-fun temp10346_179 () (_ BitVec 64))
(declare-fun temp10346_180 () (_ BitVec 64))
(declare-fun temp10346_181 () (_ BitVec 64))
(declare-fun temp10346_182 () (_ BitVec 64))
(declare-fun temp10346_183 () (_ BitVec 64))
(declare-fun temp10346_184 () (_ BitVec 64))
(declare-fun temp10346_185 () (_ BitVec 64))
(declare-fun temp10346_186 () (_ BitVec 64))
(declare-fun temp10346_187 () (_ BitVec 64))
(declare-fun temp10346_188 () (_ BitVec 64))
(declare-fun temp10346_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10346_190 () (_ BitVec 64))
(declare-fun temp10346_192 () (_ BitVec 64))
(declare-fun temp10346_193 () (_ BitVec 64))
(declare-fun temp10346_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10346_194 () (_ BitVec 64))
(declare-fun temp10346_195 () (_ BitVec 64))
(declare-fun temp10346_197 () (_ BitVec 64))
(declare-fun temp10346_198 () (_ BitVec 64))
(declare-fun temp10346_196 () (_ BitVec 64))
(declare-fun temp10346_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10346_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10346_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10346_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10346_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10346_204 () (_ BitVec 64))
(declare-fun temp10346_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10346_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10346_207 () (_ BitVec 64))
(declare-fun temp10346_208 () (_ BitVec 64))
(declare-fun temp10346_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10346_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10346_211 () (_ BitVec 64))
(declare-fun temp10346_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10346_213 () (_ BitVec 64))
(declare-fun temp10346_214 () (_ BitVec 64))
(declare-fun temp10346_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10346_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10346_217 () (_ BitVec 64))
(declare-fun temp10346_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10346_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10346_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun temp10346_221 () (_ BitVec 64))
(assert (= temp10346_1 #x0000000000000001))
(assert (= var77203 temp10346_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10346_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10346_2)))
(assert (= temp10346_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10346_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10346_4 #x0000000000000000))
(assert (= var210941 temp10346_4))
(assert (= temp10346_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10346_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10346_6 #x0000000000000000))
(assert (= var210986 temp10346_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10346_7 #x0000000000000000))
(assert (= temp10346_8 temp10346_7))
(assert (= temp10346_9 (select ARGNAME_padding_NAMEEND_VAL temp10346_8)))
(assert (= temp10346_10 #x0000000000000001))
(assert (= temp10346_11 temp10346_10))
(assert (= temp10346_12 (select ARGNAME_padding_NAMEEND_VAL temp10346_11)))
(assert (= temp10346_13 #x0000000000000002))
(assert (= temp10346_14 temp10346_13))
(assert (= temp10346_15 (select ARGNAME_padding_NAMEEND_VAL temp10346_14)))
(assert (= temp10346_16 #x0000000000000003))
(assert (= temp10346_17 temp10346_16))
(assert (= temp10346_18 (select ARGNAME_padding_NAMEEND_VAL temp10346_17)))
(assert (= temp10346_19 #x0000000000000004))
(assert (= temp10346_20 temp10346_19))
(assert (= temp10346_21 (select ARGNAME_padding_NAMEEND_VAL temp10346_20)))
(assert (= temp10346_22 #x0000000000000005))
(assert (= temp10346_23 temp10346_22))
(assert (= temp10346_24 (select ARGNAME_padding_NAMEEND_VAL temp10346_23)))
(assert (= temp10346_25 #x0000000000000000))
(assert (= temp10346_26 #x0000000000000000))
(assert (= temp10346_27 temp10346_26))
(assert (= temp10346_28 (select ARGNAME_padding_NAMEEND_VAL temp10346_27)))
(assert (= temp10346_29 #x0000000000000000))
(assert (= temp10346_30 #x0000000000000001))
(assert (= temp10346_31 temp10346_30))
(assert (= temp10346_32 (select ARGNAME_padding_NAMEEND_VAL temp10346_31)))
(assert (= temp10346_33 #x0000000000000000))
(assert (= temp10346_34 #x0000000000000002))
(assert (= temp10346_35 temp10346_34))
(assert (= temp10346_36 (select ARGNAME_padding_NAMEEND_VAL temp10346_35)))
(assert (= temp10346_37 #x0000000000000000))
(assert (= temp10346_38 #x0000000000000003))
(assert (= temp10346_39 temp10346_38))
(assert (= temp10346_40 (select ARGNAME_padding_NAMEEND_VAL temp10346_39)))
(assert (= temp10346_41 #x0000000000000000))
(assert (= temp10346_42 #x0000000000000004))
(assert (= temp10346_43 temp10346_42))
(assert (= temp10346_44 (select ARGNAME_padding_NAMEEND_VAL temp10346_43)))
(assert (= temp10346_45 #x0000000000000000))
(assert (= temp10346_46 #x0000000000000005))
(assert (= temp10346_47 temp10346_46))
(assert (= temp10346_48 (select ARGNAME_padding_NAMEEND_VAL temp10346_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10346_28 temp10346_25)
             (bvslt temp10346_32 temp10346_29)
             (bvslt temp10346_36 temp10346_33)
             (bvslt temp10346_40 temp10346_37)
             (bvslt temp10346_44 temp10346_41)
             (bvslt temp10346_48 temp10346_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10346_49 #x0000000000000000))
(assert (= var1191714 temp10346_49))
(assert (= temp10346_50 #x0000000000000000))
(assert (= temp10346_51 temp10346_50))
(assert (= temp10346_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10346_51)))
(assert (= temp10346_53 #x0000000000000001))
(assert (= temp10346_54 temp10346_53))
(assert (= temp10346_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10346_54)))
(assert (= temp10346_56 #x0000000000000002))
(assert (= temp10346_57 temp10346_56))
(assert (= temp10346_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10346_57)))
(assert (= temp10346_59 #x0000000000000003))
(assert (= temp10346_60 temp10346_59))
(assert (= temp10346_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10346_60)))
(assert (= temp10346_62 #x0000000000000004))
(assert (= temp10346_63 temp10346_62))
(assert (= temp10346_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10346_63)))
(assert (= temp10346_65 #x0000000000000005))
(assert (= temp10346_66 temp10346_65))
(assert (= temp10346_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10346_66)))
(assert (= temp10346_68 #x0000000000000000))
(assert (= temp10346_69 #x0000000000000000))
(assert (= temp10346_70 temp10346_69))
(assert (= temp10346_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10346_70)))
(assert (= temp10346_72 #x0000000000000000))
(assert (= temp10346_73 #x0000000000000001))
(assert (= temp10346_74 temp10346_73))
(assert (= temp10346_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10346_74)))
(assert (= temp10346_76 #x0000000000000000))
(assert (= temp10346_77 #x0000000000000002))
(assert (= temp10346_78 temp10346_77))
(assert (= temp10346_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10346_78)))
(assert (= temp10346_80 #x0000000000000000))
(assert (= temp10346_81 #x0000000000000003))
(assert (= temp10346_82 temp10346_81))
(assert (= temp10346_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10346_82)))
(assert (= temp10346_84 #x0000000000000000))
(assert (= temp10346_85 #x0000000000000004))
(assert (= temp10346_86 temp10346_85))
(assert (= temp10346_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10346_86)))
(assert (= temp10346_88 #x0000000000000000))
(assert (= temp10346_89 #x0000000000000005))
(assert (= temp10346_90 temp10346_89))
(assert (= temp10346_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10346_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10346_71 temp10346_68)
             (bvslt temp10346_75 temp10346_72)
             (bvslt temp10346_79 temp10346_76)
             (bvslt temp10346_83 temp10346_80)
             (bvslt temp10346_87 temp10346_84)
             (bvslt temp10346_91 temp10346_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10346_92 #x0000000000000000))
(assert (= var1191725 temp10346_92))
(assert (= temp10346_93 #x0000000000000000))
(assert (= temp10346_94 temp10346_93))
(assert (= temp10346_95 (select ARGNAME_stride_NAMEEND_VAL temp10346_94)))
(assert (= temp10346_96 #x0000000000000001))
(assert (= temp10346_97 temp10346_96))
(assert (= temp10346_98 (select ARGNAME_stride_NAMEEND_VAL temp10346_97)))
(assert (= temp10346_99 #x0000000000000002))
(assert (= temp10346_100 temp10346_99))
(assert (= temp10346_101 (select ARGNAME_stride_NAMEEND_VAL temp10346_100)))
(assert (= temp10346_102 #x0000000000000003))
(assert (= temp10346_103 temp10346_102))
(assert (= temp10346_104 (select ARGNAME_stride_NAMEEND_VAL temp10346_103)))
(assert (= temp10346_105 #x0000000000000004))
(assert (= temp10346_106 temp10346_105))
(assert (= temp10346_107 (select ARGNAME_stride_NAMEEND_VAL temp10346_106)))
(assert (= temp10346_108 #x0000000000000005))
(assert (= temp10346_109 temp10346_108))
(assert (= temp10346_110 (select ARGNAME_stride_NAMEEND_VAL temp10346_109)))
(assert (= temp10346_111 #x0000000000000000))
(assert (= temp10346_112 #x0000000000000000))
(assert (= temp10346_113 temp10346_112))
(assert (= temp10346_114 (select ARGNAME_stride_NAMEEND_VAL temp10346_113)))
(assert (= temp10346_115 #x0000000000000000))
(assert (= temp10346_116 #x0000000000000001))
(assert (= temp10346_117 temp10346_116))
(assert (= temp10346_118 (select ARGNAME_stride_NAMEEND_VAL temp10346_117)))
(assert (= temp10346_119 #x0000000000000000))
(assert (= temp10346_120 #x0000000000000002))
(assert (= temp10346_121 temp10346_120))
(assert (= temp10346_122 (select ARGNAME_stride_NAMEEND_VAL temp10346_121)))
(assert (= temp10346_123 #x0000000000000000))
(assert (= temp10346_124 #x0000000000000003))
(assert (= temp10346_125 temp10346_124))
(assert (= temp10346_126 (select ARGNAME_stride_NAMEEND_VAL temp10346_125)))
(assert (= temp10346_127 #x0000000000000000))
(assert (= temp10346_128 #x0000000000000004))
(assert (= temp10346_129 temp10346_128))
(assert (= temp10346_130 (select ARGNAME_stride_NAMEEND_VAL temp10346_129)))
(assert (= temp10346_131 #x0000000000000000))
(assert (= temp10346_132 #x0000000000000005))
(assert (= temp10346_133 temp10346_132))
(assert (= temp10346_134 (select ARGNAME_stride_NAMEEND_VAL temp10346_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10346_114 temp10346_111)
             (bvsle temp10346_118 temp10346_115)
             (bvsle temp10346_122 temp10346_119)
             (bvsle temp10346_126 temp10346_123)
             (bvsle temp10346_130 temp10346_127)
             (bvsle temp10346_134 temp10346_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10346_135 #x0000000000000000))
(assert (= var1191735 temp10346_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10346_136 #x0000000000000001))
(assert (= var1191747 temp10346_136))
(assert (= temp10346_137 #x0000000000000000))
(assert (= var1179826 temp10346_137))
(assert (= temp10346_138 #x0000000000000000))
(assert (= temp10346_139 temp10346_138))
(assert (= temp10346_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10346_139)))
(assert (= temp10346_141 #x0000000000000001))
(assert (= temp10346_142 temp10346_141))
(assert (= temp10346_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10346_142)))
(assert (= temp10346_144 #x0000000000000002))
(assert (= temp10346_145 temp10346_144))
(assert (= temp10346_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10346_145)))
(assert (= temp10346_147 #x0000000000000003))
(assert (= temp10346_148 temp10346_147))
(assert (= temp10346_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10346_148)))
(assert (= temp10346_150 #x0000000000000004))
(assert (= temp10346_151 temp10346_150))
(assert (= temp10346_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10346_151)))
(assert (= temp10346_153 #x0000000000000005))
(assert (= temp10346_154 temp10346_153))
(assert (= temp10346_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10346_154)))
(assert (= temp10346_157 var1179826))
(assert (= temp10346_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10346_157)))
(assert (= temp10346_156 temp10346_158))
(assert (= var1191780
   (ite (bvslt temp10346_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10346_159 #x0000000000000000))
(assert (= var1191780 temp10346_159))
(assert (= temp10346_160 #x0000000000000000))
(assert (= var1179826 temp10346_160))
(assert (= temp10346_162 var1179826))
(assert (= temp10346_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10346_162)))
(assert (= temp10346_161 temp10346_163))
(assert (= var1191802 (bvsmod temp10346_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10346_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10346_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10346_165 #x0000000000000001))
(assert (= var1191803 temp10346_165))
(assert (= temp10346_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10346_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10346_167 #x0000000000000001))
(assert (= var1191823 temp10346_167))
(assert (= temp10346_168 #x0000000000000001))
(assert (= var1180714 temp10346_168))
(assert (= temp10346_169 #x0000000000000000))
(assert (= temp10346_170 temp10346_169))
(assert (= temp10346_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10346_170)))
(assert (= temp10346_172 #x0000000000000001))
(assert (= temp10346_173 temp10346_172))
(assert (= temp10346_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10346_173)))
(assert (= temp10346_175 #x0000000000000002))
(assert (= temp10346_176 temp10346_175))
(assert (= temp10346_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10346_176)))
(assert (= temp10346_178 #x0000000000000003))
(assert (= temp10346_179 temp10346_178))
(assert (= temp10346_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10346_179)))
(assert (= temp10346_181 #x0000000000000004))
(assert (= temp10346_182 temp10346_181))
(assert (= temp10346_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10346_182)))
(assert (= temp10346_184 #x0000000000000005))
(assert (= temp10346_185 temp10346_184))
(assert (= temp10346_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10346_185)))
(assert (= temp10346_187 #x0000000000000000))
(assert (= temp10346_188
   (ite (bvslt var1180714 temp10346_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10346_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10346_188)))
(assert (= var1191831 temp10346_189))
(assert (bvslt (ite (bvslt var1180714 temp10346_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10346_190 #x0000000000000001))
(assert (= var1180714 temp10346_190))
(assert (= temp10346_192 var1180714))
(assert (= temp10346_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10346_192)))
(assert (= temp10346_191 temp10346_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10346_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10346_194 #x0000000000000001))
(assert (= var1191836 temp10346_194))
(assert (= temp10346_195 #x0000000000000000))
(assert (= var1179826 temp10346_195))
(assert (= temp10346_197 var1179826))
(assert (= temp10346_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10346_197)))
(assert (= temp10346_196 temp10346_198))
(assert (= temp10346_199 #x0000000000000002))
(assert (= var1586025 temp10346_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10346_200 #x0000000000000001))
(assert (= var1191993 temp10346_200))
(assert (= temp10346_201 #x0000000000000001))
(assert (= var2700303 temp10346_201))
(assert (= temp10346_202 #x0000000000000001))
(assert (= var2962447 temp10346_202))
(assert (= temp10346_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10346_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10346_204 #x0000000000000001))
(assert (= var211058 temp10346_204))
(assert (= temp10346_205 #x0000000000000001))
(assert (= var211188 temp10346_205))
(assert (= var3879401 var211188))
(assert (= temp10346_206 #x0000000000000000))
(assert (= var3866802 temp10346_206))
(assert (= temp10346_207 #x0000000000000000))
(assert (= temp10346_208
   (ite (bvslt var3866802 temp10346_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10346_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10346_208)))
(assert (= var3879420 temp10346_209))
(assert (bvslt (ite (bvslt var3866802 temp10346_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10346_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10346_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10346_211 #x0000000000000000))
(assert (= var3879421 temp10346_211))
(assert (= temp10346_212 #x0000000000000001))
(assert (= var3867690 temp10346_212))
(assert (= temp10346_213 #x0000000000000000))
(assert (= temp10346_214
   (ite (bvslt var3867690 temp10346_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10346_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10346_214)))
(assert (= var3879423 temp10346_215))
(assert (bvslt (ite (bvslt var3867690 temp10346_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10346_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10346_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10346_217 #x0000000000000001))
(assert (= var3879424 temp10346_217))
(assert (= temp10346_218 #x0000000000000000))
(assert (= var4079423 temp10346_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10346_219 #x0000000000000002))
(assert (= var4208259 temp10346_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10346_220 #x0000000000000000))
(assert (= var4273820 temp10346_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5124496 var211201))
(assert (= var5386640 var211201))
(assert (= temp10346_221 #x0000000000000001))
(assert (= var211058 temp10346_221))
(model-add temp10346_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10346_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10346_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10346_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




