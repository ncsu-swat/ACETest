(declare-fun temp10016_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10016_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10016_3 () (_ BitVec 64))
(declare-fun temp10016_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10016_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10016_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10016_7 () (_ BitVec 64))
(declare-fun temp10016_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10016_9 () (_ BitVec 64))
(declare-fun temp10016_10 () (_ BitVec 64))
(declare-fun temp10016_11 () (_ BitVec 64))
(declare-fun temp10016_12 () (_ BitVec 64))
(declare-fun temp10016_13 () (_ BitVec 64))
(declare-fun temp10016_14 () (_ BitVec 64))
(declare-fun temp10016_15 () (_ BitVec 64))
(declare-fun temp10016_16 () (_ BitVec 64))
(declare-fun temp10016_17 () (_ BitVec 64))
(declare-fun temp10016_18 () (_ BitVec 64))
(declare-fun temp10016_19 () (_ BitVec 64))
(declare-fun temp10016_20 () (_ BitVec 64))
(declare-fun temp10016_21 () (_ BitVec 64))
(declare-fun temp10016_22 () (_ BitVec 64))
(declare-fun temp10016_23 () (_ BitVec 64))
(declare-fun temp10016_24 () (_ BitVec 64))
(declare-fun temp10016_25 () (_ BitVec 64))
(declare-fun temp10016_26 () (_ BitVec 64))
(declare-fun temp10016_27 () (_ BitVec 64))
(declare-fun temp10016_28 () (_ BitVec 64))
(declare-fun temp10016_29 () (_ BitVec 64))
(declare-fun temp10016_30 () (_ BitVec 64))
(declare-fun temp10016_31 () (_ BitVec 64))
(declare-fun temp10016_32 () (_ BitVec 64))
(declare-fun temp10016_33 () (_ BitVec 64))
(declare-fun temp10016_34 () (_ BitVec 64))
(declare-fun temp10016_35 () (_ BitVec 64))
(declare-fun temp10016_36 () (_ BitVec 64))
(declare-fun temp10016_37 () (_ BitVec 64))
(declare-fun temp10016_38 () (_ BitVec 64))
(declare-fun temp10016_39 () (_ BitVec 64))
(declare-fun temp10016_40 () (_ BitVec 64))
(declare-fun temp10016_41 () (_ BitVec 64))
(declare-fun temp10016_42 () (_ BitVec 64))
(declare-fun temp10016_43 () (_ BitVec 64))
(declare-fun temp10016_44 () (_ BitVec 64))
(declare-fun temp10016_45 () (_ BitVec 64))
(declare-fun temp10016_46 () (_ BitVec 64))
(declare-fun temp10016_47 () (_ BitVec 64))
(declare-fun temp10016_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10016_49 () (_ BitVec 64))
(declare-fun temp10016_50 () (_ BitVec 64))
(declare-fun temp10016_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10016_52 () (_ BitVec 64))
(declare-fun temp10016_53 () (_ BitVec 64))
(declare-fun temp10016_54 () (_ BitVec 64))
(declare-fun temp10016_55 () (_ BitVec 64))
(declare-fun temp10016_56 () (_ BitVec 64))
(declare-fun temp10016_57 () (_ BitVec 64))
(declare-fun temp10016_58 () (_ BitVec 64))
(declare-fun temp10016_59 () (_ BitVec 64))
(declare-fun temp10016_60 () (_ BitVec 64))
(declare-fun temp10016_61 () (_ BitVec 64))
(declare-fun temp10016_62 () (_ BitVec 64))
(declare-fun temp10016_63 () (_ BitVec 64))
(declare-fun temp10016_64 () (_ BitVec 64))
(declare-fun temp10016_65 () (_ BitVec 64))
(declare-fun temp10016_66 () (_ BitVec 64))
(declare-fun temp10016_67 () (_ BitVec 64))
(declare-fun temp10016_68 () (_ BitVec 64))
(declare-fun temp10016_69 () (_ BitVec 64))
(declare-fun temp10016_70 () (_ BitVec 64))
(declare-fun temp10016_71 () (_ BitVec 64))
(declare-fun temp10016_72 () (_ BitVec 64))
(declare-fun temp10016_73 () (_ BitVec 64))
(declare-fun temp10016_74 () (_ BitVec 64))
(declare-fun temp10016_75 () (_ BitVec 64))
(declare-fun temp10016_76 () (_ BitVec 64))
(declare-fun temp10016_77 () (_ BitVec 64))
(declare-fun temp10016_78 () (_ BitVec 64))
(declare-fun temp10016_79 () (_ BitVec 64))
(declare-fun temp10016_80 () (_ BitVec 64))
(declare-fun temp10016_81 () (_ BitVec 64))
(declare-fun temp10016_82 () (_ BitVec 64))
(declare-fun temp10016_83 () (_ BitVec 64))
(declare-fun temp10016_84 () (_ BitVec 64))
(declare-fun temp10016_85 () (_ BitVec 64))
(declare-fun temp10016_86 () (_ BitVec 64))
(declare-fun temp10016_87 () (_ BitVec 64))
(declare-fun temp10016_88 () (_ BitVec 64))
(declare-fun temp10016_89 () (_ BitVec 64))
(declare-fun temp10016_90 () (_ BitVec 64))
(declare-fun temp10016_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10016_92 () (_ BitVec 64))
(declare-fun temp10016_93 () (_ BitVec 64))
(declare-fun temp10016_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10016_95 () (_ BitVec 64))
(declare-fun temp10016_96 () (_ BitVec 64))
(declare-fun temp10016_97 () (_ BitVec 64))
(declare-fun temp10016_98 () (_ BitVec 64))
(declare-fun temp10016_99 () (_ BitVec 64))
(declare-fun temp10016_100 () (_ BitVec 64))
(declare-fun temp10016_101 () (_ BitVec 64))
(declare-fun temp10016_102 () (_ BitVec 64))
(declare-fun temp10016_103 () (_ BitVec 64))
(declare-fun temp10016_104 () (_ BitVec 64))
(declare-fun temp10016_105 () (_ BitVec 64))
(declare-fun temp10016_106 () (_ BitVec 64))
(declare-fun temp10016_107 () (_ BitVec 64))
(declare-fun temp10016_108 () (_ BitVec 64))
(declare-fun temp10016_109 () (_ BitVec 64))
(declare-fun temp10016_110 () (_ BitVec 64))
(declare-fun temp10016_111 () (_ BitVec 64))
(declare-fun temp10016_112 () (_ BitVec 64))
(declare-fun temp10016_113 () (_ BitVec 64))
(declare-fun temp10016_114 () (_ BitVec 64))
(declare-fun temp10016_115 () (_ BitVec 64))
(declare-fun temp10016_116 () (_ BitVec 64))
(declare-fun temp10016_117 () (_ BitVec 64))
(declare-fun temp10016_118 () (_ BitVec 64))
(declare-fun temp10016_119 () (_ BitVec 64))
(declare-fun temp10016_120 () (_ BitVec 64))
(declare-fun temp10016_121 () (_ BitVec 64))
(declare-fun temp10016_122 () (_ BitVec 64))
(declare-fun temp10016_123 () (_ BitVec 64))
(declare-fun temp10016_124 () (_ BitVec 64))
(declare-fun temp10016_125 () (_ BitVec 64))
(declare-fun temp10016_126 () (_ BitVec 64))
(declare-fun temp10016_127 () (_ BitVec 64))
(declare-fun temp10016_128 () (_ BitVec 64))
(declare-fun temp10016_129 () (_ BitVec 64))
(declare-fun temp10016_130 () (_ BitVec 64))
(declare-fun temp10016_131 () (_ BitVec 64))
(declare-fun temp10016_132 () (_ BitVec 64))
(declare-fun temp10016_133 () (_ BitVec 64))
(declare-fun temp10016_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10016_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10016_136 () (_ BitVec 64))
(declare-fun temp10016_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10016_138 () (_ BitVec 64))
(declare-fun temp10016_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10016_140 () (_ BitVec 64))
(declare-fun temp10016_141 () (_ BitVec 64))
(declare-fun temp10016_142 () (_ BitVec 64))
(declare-fun temp10016_143 () (_ BitVec 64))
(declare-fun temp10016_144 () (_ BitVec 64))
(declare-fun temp10016_145 () (_ BitVec 64))
(declare-fun temp10016_146 () (_ BitVec 64))
(declare-fun temp10016_147 () (_ BitVec 64))
(declare-fun temp10016_148 () (_ BitVec 64))
(declare-fun temp10016_149 () (_ BitVec 64))
(declare-fun temp10016_150 () (_ BitVec 64))
(declare-fun temp10016_151 () (_ BitVec 64))
(declare-fun temp10016_152 () (_ BitVec 64))
(declare-fun temp10016_153 () (_ BitVec 64))
(declare-fun temp10016_154 () (_ BitVec 64))
(declare-fun temp10016_155 () (_ BitVec 64))
(declare-fun temp10016_157 () (_ BitVec 64))
(declare-fun temp10016_158 () (_ BitVec 64))
(declare-fun temp10016_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10016_159 () (_ BitVec 64))
(declare-fun temp10016_160 () (_ BitVec 64))
(declare-fun temp10016_162 () (_ BitVec 64))
(declare-fun temp10016_163 () (_ BitVec 64))
(declare-fun temp10016_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10016_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10016_165 () (_ BitVec 64))
(declare-fun temp10016_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10016_167 () (_ BitVec 64))
(declare-fun temp10016_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10016_169 () (_ BitVec 64))
(declare-fun temp10016_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10016_171 () (_ BitVec 64))
(declare-fun temp10016_172 () (_ BitVec 64))
(declare-fun temp10016_173 () (_ BitVec 64))
(declare-fun temp10016_174 () (_ BitVec 64))
(declare-fun temp10016_175 () (_ BitVec 64))
(declare-fun temp10016_176 () (_ BitVec 64))
(declare-fun temp10016_177 () (_ BitVec 64))
(declare-fun temp10016_178 () (_ BitVec 64))
(declare-fun temp10016_179 () (_ BitVec 64))
(declare-fun temp10016_180 () (_ BitVec 64))
(declare-fun temp10016_181 () (_ BitVec 64))
(declare-fun temp10016_182 () (_ BitVec 64))
(declare-fun temp10016_183 () (_ BitVec 64))
(declare-fun temp10016_184 () (_ BitVec 64))
(declare-fun temp10016_185 () (_ BitVec 64))
(declare-fun temp10016_186 () (_ BitVec 64))
(declare-fun temp10016_187 () (_ BitVec 64))
(declare-fun temp10016_188 () (_ BitVec 64))
(declare-fun temp10016_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10016_190 () (_ BitVec 64))
(declare-fun temp10016_192 () (_ BitVec 64))
(declare-fun temp10016_193 () (_ BitVec 64))
(declare-fun temp10016_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10016_194 () (_ BitVec 64))
(declare-fun temp10016_195 () (_ BitVec 64))
(declare-fun temp10016_197 () (_ BitVec 64))
(declare-fun temp10016_198 () (_ BitVec 64))
(declare-fun temp10016_196 () (_ BitVec 64))
(declare-fun temp10016_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10016_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10016_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10016_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10016_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10016_204 () (_ BitVec 64))
(declare-fun temp10016_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10016_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10016_207 () (_ BitVec 64))
(declare-fun temp10016_208 () (_ BitVec 64))
(declare-fun temp10016_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10016_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10016_211 () (_ BitVec 64))
(declare-fun temp10016_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10016_213 () (_ BitVec 64))
(declare-fun temp10016_214 () (_ BitVec 64))
(declare-fun temp10016_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10016_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10016_217 () (_ BitVec 64))
(declare-fun temp10016_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10016_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10016_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10016_222 () (_ BitVec 64))
(declare-fun temp10016_221 () (_ BitVec 64))
(declare-fun temp10016_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10016_224 () (_ BitVec 64))
(declare-fun temp10016_225 () (_ BitVec 64))
(declare-fun temp10016_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10016_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10016_228 () (_ BitVec 64))
(declare-fun temp10016_230 () (_ BitVec 64))
(declare-fun temp10016_229 () (_ BitVec 64))
(declare-fun temp10016_231 () (_ BitVec 64))
(assert (= temp10016_1 #x0000000000000001))
(assert (= var77203 temp10016_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10016_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10016_2)))
(assert (= temp10016_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10016_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10016_4 #x0000000000000000))
(assert (= var210941 temp10016_4))
(assert (= temp10016_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10016_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10016_6 #x0000000000000000))
(assert (= var210986 temp10016_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10016_7 #x0000000000000000))
(assert (= temp10016_8 temp10016_7))
(assert (= temp10016_9 (select ARGNAME_padding_NAMEEND_VAL temp10016_8)))
(assert (= temp10016_10 #x0000000000000001))
(assert (= temp10016_11 temp10016_10))
(assert (= temp10016_12 (select ARGNAME_padding_NAMEEND_VAL temp10016_11)))
(assert (= temp10016_13 #x0000000000000002))
(assert (= temp10016_14 temp10016_13))
(assert (= temp10016_15 (select ARGNAME_padding_NAMEEND_VAL temp10016_14)))
(assert (= temp10016_16 #x0000000000000003))
(assert (= temp10016_17 temp10016_16))
(assert (= temp10016_18 (select ARGNAME_padding_NAMEEND_VAL temp10016_17)))
(assert (= temp10016_19 #x0000000000000004))
(assert (= temp10016_20 temp10016_19))
(assert (= temp10016_21 (select ARGNAME_padding_NAMEEND_VAL temp10016_20)))
(assert (= temp10016_22 #x0000000000000005))
(assert (= temp10016_23 temp10016_22))
(assert (= temp10016_24 (select ARGNAME_padding_NAMEEND_VAL temp10016_23)))
(assert (= temp10016_25 #x0000000000000000))
(assert (= temp10016_26 #x0000000000000000))
(assert (= temp10016_27 temp10016_26))
(assert (= temp10016_28 (select ARGNAME_padding_NAMEEND_VAL temp10016_27)))
(assert (= temp10016_29 #x0000000000000000))
(assert (= temp10016_30 #x0000000000000001))
(assert (= temp10016_31 temp10016_30))
(assert (= temp10016_32 (select ARGNAME_padding_NAMEEND_VAL temp10016_31)))
(assert (= temp10016_33 #x0000000000000000))
(assert (= temp10016_34 #x0000000000000002))
(assert (= temp10016_35 temp10016_34))
(assert (= temp10016_36 (select ARGNAME_padding_NAMEEND_VAL temp10016_35)))
(assert (= temp10016_37 #x0000000000000000))
(assert (= temp10016_38 #x0000000000000003))
(assert (= temp10016_39 temp10016_38))
(assert (= temp10016_40 (select ARGNAME_padding_NAMEEND_VAL temp10016_39)))
(assert (= temp10016_41 #x0000000000000000))
(assert (= temp10016_42 #x0000000000000004))
(assert (= temp10016_43 temp10016_42))
(assert (= temp10016_44 (select ARGNAME_padding_NAMEEND_VAL temp10016_43)))
(assert (= temp10016_45 #x0000000000000000))
(assert (= temp10016_46 #x0000000000000005))
(assert (= temp10016_47 temp10016_46))
(assert (= temp10016_48 (select ARGNAME_padding_NAMEEND_VAL temp10016_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10016_28 temp10016_25)
             (bvslt temp10016_32 temp10016_29)
             (bvslt temp10016_36 temp10016_33)
             (bvslt temp10016_40 temp10016_37)
             (bvslt temp10016_44 temp10016_41)
             (bvslt temp10016_48 temp10016_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10016_49 #x0000000000000000))
(assert (= var1191714 temp10016_49))
(assert (= temp10016_50 #x0000000000000000))
(assert (= temp10016_51 temp10016_50))
(assert (= temp10016_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10016_51)))
(assert (= temp10016_53 #x0000000000000001))
(assert (= temp10016_54 temp10016_53))
(assert (= temp10016_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10016_54)))
(assert (= temp10016_56 #x0000000000000002))
(assert (= temp10016_57 temp10016_56))
(assert (= temp10016_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10016_57)))
(assert (= temp10016_59 #x0000000000000003))
(assert (= temp10016_60 temp10016_59))
(assert (= temp10016_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10016_60)))
(assert (= temp10016_62 #x0000000000000004))
(assert (= temp10016_63 temp10016_62))
(assert (= temp10016_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10016_63)))
(assert (= temp10016_65 #x0000000000000005))
(assert (= temp10016_66 temp10016_65))
(assert (= temp10016_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10016_66)))
(assert (= temp10016_68 #x0000000000000000))
(assert (= temp10016_69 #x0000000000000000))
(assert (= temp10016_70 temp10016_69))
(assert (= temp10016_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10016_70)))
(assert (= temp10016_72 #x0000000000000000))
(assert (= temp10016_73 #x0000000000000001))
(assert (= temp10016_74 temp10016_73))
(assert (= temp10016_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10016_74)))
(assert (= temp10016_76 #x0000000000000000))
(assert (= temp10016_77 #x0000000000000002))
(assert (= temp10016_78 temp10016_77))
(assert (= temp10016_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10016_78)))
(assert (= temp10016_80 #x0000000000000000))
(assert (= temp10016_81 #x0000000000000003))
(assert (= temp10016_82 temp10016_81))
(assert (= temp10016_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10016_82)))
(assert (= temp10016_84 #x0000000000000000))
(assert (= temp10016_85 #x0000000000000004))
(assert (= temp10016_86 temp10016_85))
(assert (= temp10016_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10016_86)))
(assert (= temp10016_88 #x0000000000000000))
(assert (= temp10016_89 #x0000000000000005))
(assert (= temp10016_90 temp10016_89))
(assert (= temp10016_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10016_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10016_71 temp10016_68)
             (bvslt temp10016_75 temp10016_72)
             (bvslt temp10016_79 temp10016_76)
             (bvslt temp10016_83 temp10016_80)
             (bvslt temp10016_87 temp10016_84)
             (bvslt temp10016_91 temp10016_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10016_92 #x0000000000000000))
(assert (= var1191725 temp10016_92))
(assert (= temp10016_93 #x0000000000000000))
(assert (= temp10016_94 temp10016_93))
(assert (= temp10016_95 (select ARGNAME_stride_NAMEEND_VAL temp10016_94)))
(assert (= temp10016_96 #x0000000000000001))
(assert (= temp10016_97 temp10016_96))
(assert (= temp10016_98 (select ARGNAME_stride_NAMEEND_VAL temp10016_97)))
(assert (= temp10016_99 #x0000000000000002))
(assert (= temp10016_100 temp10016_99))
(assert (= temp10016_101 (select ARGNAME_stride_NAMEEND_VAL temp10016_100)))
(assert (= temp10016_102 #x0000000000000003))
(assert (= temp10016_103 temp10016_102))
(assert (= temp10016_104 (select ARGNAME_stride_NAMEEND_VAL temp10016_103)))
(assert (= temp10016_105 #x0000000000000004))
(assert (= temp10016_106 temp10016_105))
(assert (= temp10016_107 (select ARGNAME_stride_NAMEEND_VAL temp10016_106)))
(assert (= temp10016_108 #x0000000000000005))
(assert (= temp10016_109 temp10016_108))
(assert (= temp10016_110 (select ARGNAME_stride_NAMEEND_VAL temp10016_109)))
(assert (= temp10016_111 #x0000000000000000))
(assert (= temp10016_112 #x0000000000000000))
(assert (= temp10016_113 temp10016_112))
(assert (= temp10016_114 (select ARGNAME_stride_NAMEEND_VAL temp10016_113)))
(assert (= temp10016_115 #x0000000000000000))
(assert (= temp10016_116 #x0000000000000001))
(assert (= temp10016_117 temp10016_116))
(assert (= temp10016_118 (select ARGNAME_stride_NAMEEND_VAL temp10016_117)))
(assert (= temp10016_119 #x0000000000000000))
(assert (= temp10016_120 #x0000000000000002))
(assert (= temp10016_121 temp10016_120))
(assert (= temp10016_122 (select ARGNAME_stride_NAMEEND_VAL temp10016_121)))
(assert (= temp10016_123 #x0000000000000000))
(assert (= temp10016_124 #x0000000000000003))
(assert (= temp10016_125 temp10016_124))
(assert (= temp10016_126 (select ARGNAME_stride_NAMEEND_VAL temp10016_125)))
(assert (= temp10016_127 #x0000000000000000))
(assert (= temp10016_128 #x0000000000000004))
(assert (= temp10016_129 temp10016_128))
(assert (= temp10016_130 (select ARGNAME_stride_NAMEEND_VAL temp10016_129)))
(assert (= temp10016_131 #x0000000000000000))
(assert (= temp10016_132 #x0000000000000005))
(assert (= temp10016_133 temp10016_132))
(assert (= temp10016_134 (select ARGNAME_stride_NAMEEND_VAL temp10016_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10016_114 temp10016_111)
             (bvsle temp10016_118 temp10016_115)
             (bvsle temp10016_122 temp10016_119)
             (bvsle temp10016_126 temp10016_123)
             (bvsle temp10016_130 temp10016_127)
             (bvsle temp10016_134 temp10016_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10016_135 #x0000000000000000))
(assert (= var1191735 temp10016_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10016_136 #x0000000000000001))
(assert (= var1191747 temp10016_136))
(assert (= temp10016_137 #x0000000000000000))
(assert (= var1179826 temp10016_137))
(assert (= temp10016_138 #x0000000000000000))
(assert (= temp10016_139 temp10016_138))
(assert (= temp10016_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10016_139)))
(assert (= temp10016_141 #x0000000000000001))
(assert (= temp10016_142 temp10016_141))
(assert (= temp10016_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10016_142)))
(assert (= temp10016_144 #x0000000000000002))
(assert (= temp10016_145 temp10016_144))
(assert (= temp10016_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10016_145)))
(assert (= temp10016_147 #x0000000000000003))
(assert (= temp10016_148 temp10016_147))
(assert (= temp10016_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10016_148)))
(assert (= temp10016_150 #x0000000000000004))
(assert (= temp10016_151 temp10016_150))
(assert (= temp10016_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10016_151)))
(assert (= temp10016_153 #x0000000000000005))
(assert (= temp10016_154 temp10016_153))
(assert (= temp10016_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10016_154)))
(assert (= temp10016_157 var1179826))
(assert (= temp10016_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10016_157)))
(assert (= temp10016_156 temp10016_158))
(assert (= var1191780
   (ite (bvslt temp10016_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10016_159 #x0000000000000000))
(assert (= var1191780 temp10016_159))
(assert (= temp10016_160 #x0000000000000000))
(assert (= var1179826 temp10016_160))
(assert (= temp10016_162 var1179826))
(assert (= temp10016_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10016_162)))
(assert (= temp10016_161 temp10016_163))
(assert (= var1191802 (bvsmod temp10016_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10016_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10016_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10016_165 #x0000000000000001))
(assert (= var1191803 temp10016_165))
(assert (= temp10016_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10016_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10016_167 #x0000000000000001))
(assert (= var1191823 temp10016_167))
(assert (= temp10016_168 #x0000000000000001))
(assert (= var1180714 temp10016_168))
(assert (= temp10016_169 #x0000000000000000))
(assert (= temp10016_170 temp10016_169))
(assert (= temp10016_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10016_170)))
(assert (= temp10016_172 #x0000000000000001))
(assert (= temp10016_173 temp10016_172))
(assert (= temp10016_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10016_173)))
(assert (= temp10016_175 #x0000000000000002))
(assert (= temp10016_176 temp10016_175))
(assert (= temp10016_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10016_176)))
(assert (= temp10016_178 #x0000000000000003))
(assert (= temp10016_179 temp10016_178))
(assert (= temp10016_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10016_179)))
(assert (= temp10016_181 #x0000000000000004))
(assert (= temp10016_182 temp10016_181))
(assert (= temp10016_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10016_182)))
(assert (= temp10016_184 #x0000000000000005))
(assert (= temp10016_185 temp10016_184))
(assert (= temp10016_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10016_185)))
(assert (= temp10016_187 #x0000000000000000))
(assert (= temp10016_188
   (ite (bvslt var1180714 temp10016_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10016_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10016_188)))
(assert (= var1191831 temp10016_189))
(assert (bvslt (ite (bvslt var1180714 temp10016_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10016_190 #x0000000000000001))
(assert (= var1180714 temp10016_190))
(assert (= temp10016_192 var1180714))
(assert (= temp10016_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10016_192)))
(assert (= temp10016_191 temp10016_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10016_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10016_194 #x0000000000000001))
(assert (= var1191836 temp10016_194))
(assert (= temp10016_195 #x0000000000000000))
(assert (= var1179826 temp10016_195))
(assert (= temp10016_197 var1179826))
(assert (= temp10016_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10016_197)))
(assert (= temp10016_196 temp10016_198))
(assert (= temp10016_199 #x0000000000000002))
(assert (= var1586025 temp10016_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10016_200 #x0000000000000001))
(assert (= var1191993 temp10016_200))
(assert (= temp10016_201 #x0000000000000001))
(assert (= var2700303 temp10016_201))
(assert (= temp10016_202 #x0000000000000001))
(assert (= var2962447 temp10016_202))
(assert (= temp10016_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10016_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10016_204 #x0000000000000001))
(assert (= var211058 temp10016_204))
(assert (= temp10016_205 #x0000000000000001))
(assert (= var211188 temp10016_205))
(assert (= var3879401 var211188))
(assert (= temp10016_206 #x0000000000000000))
(assert (= var3866802 temp10016_206))
(assert (= temp10016_207 #x0000000000000000))
(assert (= temp10016_208
   (ite (bvslt var3866802 temp10016_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10016_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10016_208)))
(assert (= var3879420 temp10016_209))
(assert (bvslt (ite (bvslt var3866802 temp10016_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10016_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10016_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10016_211 #x0000000000000000))
(assert (= var3879421 temp10016_211))
(assert (= temp10016_212 #x0000000000000001))
(assert (= var3867690 temp10016_212))
(assert (= temp10016_213 #x0000000000000000))
(assert (= temp10016_214
   (ite (bvslt var3867690 temp10016_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10016_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10016_214)))
(assert (= var3879423 temp10016_215))
(assert (bvslt (ite (bvslt var3867690 temp10016_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10016_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10016_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10016_217 #x0000000000000001))
(assert (= var3879424 temp10016_217))
(assert (= temp10016_218 #x0000000000000000))
(assert (= var4079423 temp10016_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10016_219 #x0000000000000002))
(assert (= var4208259 temp10016_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10016_220 #x0000000000000000))
(assert (= var4273820 temp10016_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10016_222 #xffffffffffffffff))
(assert (= temp10016_221 temp10016_222))
(assert (= temp10016_223 #x0000000000000001))
(assert (= var197674 temp10016_223))
(assert (= temp10016_224 #x0000000000000000))
(assert (= temp10016_225
   (ite (bvslt var197674 temp10016_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10016_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10016_225)))
(assert (= var211595 temp10016_226))
(assert (bvslt (ite (bvslt var197674 temp10016_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10016_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10016_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10016_228 #x0000000000000001))
(assert (= var211596 temp10016_228))
(assert (= temp10016_230 #xffffffffffffffff))
(assert (= temp10016_229 temp10016_230))
(assert (= temp10016_231 #x0000000000000001))
(assert (= var211058 temp10016_231))
(model-add temp10016_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10016_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10016_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10016_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





