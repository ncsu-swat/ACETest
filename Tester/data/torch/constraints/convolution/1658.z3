(declare-fun temp11005_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11005_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11005_3 () (_ BitVec 64))
(declare-fun temp11005_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11005_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11005_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11005_7 () (_ BitVec 64))
(declare-fun temp11005_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11005_9 () (_ BitVec 64))
(declare-fun temp11005_10 () (_ BitVec 64))
(declare-fun temp11005_11 () (_ BitVec 64))
(declare-fun temp11005_12 () (_ BitVec 64))
(declare-fun temp11005_13 () (_ BitVec 64))
(declare-fun temp11005_14 () (_ BitVec 64))
(declare-fun temp11005_15 () (_ BitVec 64))
(declare-fun temp11005_16 () (_ BitVec 64))
(declare-fun temp11005_17 () (_ BitVec 64))
(declare-fun temp11005_18 () (_ BitVec 64))
(declare-fun temp11005_19 () (_ BitVec 64))
(declare-fun temp11005_20 () (_ BitVec 64))
(declare-fun temp11005_21 () (_ BitVec 64))
(declare-fun temp11005_22 () (_ BitVec 64))
(declare-fun temp11005_23 () (_ BitVec 64))
(declare-fun temp11005_24 () (_ BitVec 64))
(declare-fun temp11005_25 () (_ BitVec 64))
(declare-fun temp11005_26 () (_ BitVec 64))
(declare-fun temp11005_27 () (_ BitVec 64))
(declare-fun temp11005_28 () (_ BitVec 64))
(declare-fun temp11005_29 () (_ BitVec 64))
(declare-fun temp11005_30 () (_ BitVec 64))
(declare-fun temp11005_31 () (_ BitVec 64))
(declare-fun temp11005_32 () (_ BitVec 64))
(declare-fun temp11005_33 () (_ BitVec 64))
(declare-fun temp11005_34 () (_ BitVec 64))
(declare-fun temp11005_35 () (_ BitVec 64))
(declare-fun temp11005_36 () (_ BitVec 64))
(declare-fun temp11005_37 () (_ BitVec 64))
(declare-fun temp11005_38 () (_ BitVec 64))
(declare-fun temp11005_39 () (_ BitVec 64))
(declare-fun temp11005_40 () (_ BitVec 64))
(declare-fun temp11005_41 () (_ BitVec 64))
(declare-fun temp11005_42 () (_ BitVec 64))
(declare-fun temp11005_43 () (_ BitVec 64))
(declare-fun temp11005_44 () (_ BitVec 64))
(declare-fun temp11005_45 () (_ BitVec 64))
(declare-fun temp11005_46 () (_ BitVec 64))
(declare-fun temp11005_47 () (_ BitVec 64))
(declare-fun temp11005_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11005_49 () (_ BitVec 64))
(declare-fun temp11005_50 () (_ BitVec 64))
(declare-fun temp11005_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11005_52 () (_ BitVec 64))
(declare-fun temp11005_53 () (_ BitVec 64))
(declare-fun temp11005_54 () (_ BitVec 64))
(declare-fun temp11005_55 () (_ BitVec 64))
(declare-fun temp11005_56 () (_ BitVec 64))
(declare-fun temp11005_57 () (_ BitVec 64))
(declare-fun temp11005_58 () (_ BitVec 64))
(declare-fun temp11005_59 () (_ BitVec 64))
(declare-fun temp11005_60 () (_ BitVec 64))
(declare-fun temp11005_61 () (_ BitVec 64))
(declare-fun temp11005_62 () (_ BitVec 64))
(declare-fun temp11005_63 () (_ BitVec 64))
(declare-fun temp11005_64 () (_ BitVec 64))
(declare-fun temp11005_65 () (_ BitVec 64))
(declare-fun temp11005_66 () (_ BitVec 64))
(declare-fun temp11005_67 () (_ BitVec 64))
(declare-fun temp11005_68 () (_ BitVec 64))
(declare-fun temp11005_69 () (_ BitVec 64))
(declare-fun temp11005_70 () (_ BitVec 64))
(declare-fun temp11005_71 () (_ BitVec 64))
(declare-fun temp11005_72 () (_ BitVec 64))
(declare-fun temp11005_73 () (_ BitVec 64))
(declare-fun temp11005_74 () (_ BitVec 64))
(declare-fun temp11005_75 () (_ BitVec 64))
(declare-fun temp11005_76 () (_ BitVec 64))
(declare-fun temp11005_77 () (_ BitVec 64))
(declare-fun temp11005_78 () (_ BitVec 64))
(declare-fun temp11005_79 () (_ BitVec 64))
(declare-fun temp11005_80 () (_ BitVec 64))
(declare-fun temp11005_81 () (_ BitVec 64))
(declare-fun temp11005_82 () (_ BitVec 64))
(declare-fun temp11005_83 () (_ BitVec 64))
(declare-fun temp11005_84 () (_ BitVec 64))
(declare-fun temp11005_85 () (_ BitVec 64))
(declare-fun temp11005_86 () (_ BitVec 64))
(declare-fun temp11005_87 () (_ BitVec 64))
(declare-fun temp11005_88 () (_ BitVec 64))
(declare-fun temp11005_89 () (_ BitVec 64))
(declare-fun temp11005_90 () (_ BitVec 64))
(declare-fun temp11005_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11005_92 () (_ BitVec 64))
(declare-fun temp11005_93 () (_ BitVec 64))
(declare-fun temp11005_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11005_95 () (_ BitVec 64))
(declare-fun temp11005_96 () (_ BitVec 64))
(declare-fun temp11005_97 () (_ BitVec 64))
(declare-fun temp11005_98 () (_ BitVec 64))
(declare-fun temp11005_99 () (_ BitVec 64))
(declare-fun temp11005_100 () (_ BitVec 64))
(declare-fun temp11005_101 () (_ BitVec 64))
(declare-fun temp11005_102 () (_ BitVec 64))
(declare-fun temp11005_103 () (_ BitVec 64))
(declare-fun temp11005_104 () (_ BitVec 64))
(declare-fun temp11005_105 () (_ BitVec 64))
(declare-fun temp11005_106 () (_ BitVec 64))
(declare-fun temp11005_107 () (_ BitVec 64))
(declare-fun temp11005_108 () (_ BitVec 64))
(declare-fun temp11005_109 () (_ BitVec 64))
(declare-fun temp11005_110 () (_ BitVec 64))
(declare-fun temp11005_111 () (_ BitVec 64))
(declare-fun temp11005_112 () (_ BitVec 64))
(declare-fun temp11005_113 () (_ BitVec 64))
(declare-fun temp11005_114 () (_ BitVec 64))
(declare-fun temp11005_115 () (_ BitVec 64))
(declare-fun temp11005_116 () (_ BitVec 64))
(declare-fun temp11005_117 () (_ BitVec 64))
(declare-fun temp11005_118 () (_ BitVec 64))
(declare-fun temp11005_119 () (_ BitVec 64))
(declare-fun temp11005_120 () (_ BitVec 64))
(declare-fun temp11005_121 () (_ BitVec 64))
(declare-fun temp11005_122 () (_ BitVec 64))
(declare-fun temp11005_123 () (_ BitVec 64))
(declare-fun temp11005_124 () (_ BitVec 64))
(declare-fun temp11005_125 () (_ BitVec 64))
(declare-fun temp11005_126 () (_ BitVec 64))
(declare-fun temp11005_127 () (_ BitVec 64))
(declare-fun temp11005_128 () (_ BitVec 64))
(declare-fun temp11005_129 () (_ BitVec 64))
(declare-fun temp11005_130 () (_ BitVec 64))
(declare-fun temp11005_131 () (_ BitVec 64))
(declare-fun temp11005_132 () (_ BitVec 64))
(declare-fun temp11005_133 () (_ BitVec 64))
(declare-fun temp11005_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11005_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11005_136 () (_ BitVec 64))
(declare-fun temp11005_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11005_138 () (_ BitVec 64))
(declare-fun temp11005_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11005_140 () (_ BitVec 64))
(declare-fun temp11005_141 () (_ BitVec 64))
(declare-fun temp11005_142 () (_ BitVec 64))
(declare-fun temp11005_143 () (_ BitVec 64))
(declare-fun temp11005_144 () (_ BitVec 64))
(declare-fun temp11005_145 () (_ BitVec 64))
(declare-fun temp11005_146 () (_ BitVec 64))
(declare-fun temp11005_147 () (_ BitVec 64))
(declare-fun temp11005_148 () (_ BitVec 64))
(declare-fun temp11005_149 () (_ BitVec 64))
(declare-fun temp11005_150 () (_ BitVec 64))
(declare-fun temp11005_151 () (_ BitVec 64))
(declare-fun temp11005_152 () (_ BitVec 64))
(declare-fun temp11005_153 () (_ BitVec 64))
(declare-fun temp11005_154 () (_ BitVec 64))
(declare-fun temp11005_155 () (_ BitVec 64))
(declare-fun temp11005_157 () (_ BitVec 64))
(declare-fun temp11005_158 () (_ BitVec 64))
(declare-fun temp11005_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11005_159 () (_ BitVec 64))
(declare-fun temp11005_160 () (_ BitVec 64))
(declare-fun temp11005_162 () (_ BitVec 64))
(declare-fun temp11005_163 () (_ BitVec 64))
(declare-fun temp11005_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11005_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11005_165 () (_ BitVec 64))
(declare-fun temp11005_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11005_167 () (_ BitVec 64))
(declare-fun temp11005_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11005_169 () (_ BitVec 64))
(declare-fun temp11005_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11005_171 () (_ BitVec 64))
(declare-fun temp11005_172 () (_ BitVec 64))
(declare-fun temp11005_173 () (_ BitVec 64))
(declare-fun temp11005_174 () (_ BitVec 64))
(declare-fun temp11005_175 () (_ BitVec 64))
(declare-fun temp11005_176 () (_ BitVec 64))
(declare-fun temp11005_177 () (_ BitVec 64))
(declare-fun temp11005_178 () (_ BitVec 64))
(declare-fun temp11005_179 () (_ BitVec 64))
(declare-fun temp11005_180 () (_ BitVec 64))
(declare-fun temp11005_181 () (_ BitVec 64))
(declare-fun temp11005_182 () (_ BitVec 64))
(declare-fun temp11005_183 () (_ BitVec 64))
(declare-fun temp11005_184 () (_ BitVec 64))
(declare-fun temp11005_185 () (_ BitVec 64))
(declare-fun temp11005_186 () (_ BitVec 64))
(declare-fun temp11005_187 () (_ BitVec 64))
(declare-fun temp11005_188 () (_ BitVec 64))
(declare-fun temp11005_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11005_190 () (_ BitVec 64))
(declare-fun temp11005_192 () (_ BitVec 64))
(declare-fun temp11005_193 () (_ BitVec 64))
(declare-fun temp11005_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11005_194 () (_ BitVec 64))
(declare-fun temp11005_195 () (_ BitVec 64))
(declare-fun temp11005_197 () (_ BitVec 64))
(declare-fun temp11005_198 () (_ BitVec 64))
(declare-fun temp11005_196 () (_ BitVec 64))
(declare-fun temp11005_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11005_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11005_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11005_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11005_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11005_204 () (_ BitVec 64))
(declare-fun temp11005_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11005_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11005_207 () (_ BitVec 64))
(declare-fun temp11005_208 () (_ BitVec 64))
(declare-fun temp11005_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11005_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11005_211 () (_ BitVec 64))
(declare-fun temp11005_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11005_213 () (_ BitVec 64))
(declare-fun temp11005_214 () (_ BitVec 64))
(declare-fun temp11005_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11005_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11005_217 () (_ BitVec 64))
(declare-fun temp11005_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11005_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp11005_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun temp11005_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp11005_222 () (_ BitVec 64))
(declare-fun temp11005_223 () (_ BitVec 64))
(declare-fun var5191299 () (_ BitVec 64))
(declare-fun var5191301 () (_ BitVec 64))
(declare-fun var5256844 () (_ BitVec 64))
(declare-fun var5256845 () (_ BitVec 64))
(declare-fun temp11005_224 () (_ BitVec 64))
(assert (= temp11005_1 #x0000000000000001))
(assert (= var77203 temp11005_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11005_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11005_2)))
(assert (= temp11005_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11005_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11005_4 #x0000000000000000))
(assert (= var210941 temp11005_4))
(assert (= temp11005_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11005_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11005_6 #x0000000000000000))
(assert (= var210986 temp11005_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11005_7 #x0000000000000000))
(assert (= temp11005_8 temp11005_7))
(assert (= temp11005_9 (select ARGNAME_padding_NAMEEND_VAL temp11005_8)))
(assert (= temp11005_10 #x0000000000000001))
(assert (= temp11005_11 temp11005_10))
(assert (= temp11005_12 (select ARGNAME_padding_NAMEEND_VAL temp11005_11)))
(assert (= temp11005_13 #x0000000000000002))
(assert (= temp11005_14 temp11005_13))
(assert (= temp11005_15 (select ARGNAME_padding_NAMEEND_VAL temp11005_14)))
(assert (= temp11005_16 #x0000000000000003))
(assert (= temp11005_17 temp11005_16))
(assert (= temp11005_18 (select ARGNAME_padding_NAMEEND_VAL temp11005_17)))
(assert (= temp11005_19 #x0000000000000004))
(assert (= temp11005_20 temp11005_19))
(assert (= temp11005_21 (select ARGNAME_padding_NAMEEND_VAL temp11005_20)))
(assert (= temp11005_22 #x0000000000000005))
(assert (= temp11005_23 temp11005_22))
(assert (= temp11005_24 (select ARGNAME_padding_NAMEEND_VAL temp11005_23)))
(assert (= temp11005_25 #x0000000000000000))
(assert (= temp11005_26 #x0000000000000000))
(assert (= temp11005_27 temp11005_26))
(assert (= temp11005_28 (select ARGNAME_padding_NAMEEND_VAL temp11005_27)))
(assert (= temp11005_29 #x0000000000000000))
(assert (= temp11005_30 #x0000000000000001))
(assert (= temp11005_31 temp11005_30))
(assert (= temp11005_32 (select ARGNAME_padding_NAMEEND_VAL temp11005_31)))
(assert (= temp11005_33 #x0000000000000000))
(assert (= temp11005_34 #x0000000000000002))
(assert (= temp11005_35 temp11005_34))
(assert (= temp11005_36 (select ARGNAME_padding_NAMEEND_VAL temp11005_35)))
(assert (= temp11005_37 #x0000000000000000))
(assert (= temp11005_38 #x0000000000000003))
(assert (= temp11005_39 temp11005_38))
(assert (= temp11005_40 (select ARGNAME_padding_NAMEEND_VAL temp11005_39)))
(assert (= temp11005_41 #x0000000000000000))
(assert (= temp11005_42 #x0000000000000004))
(assert (= temp11005_43 temp11005_42))
(assert (= temp11005_44 (select ARGNAME_padding_NAMEEND_VAL temp11005_43)))
(assert (= temp11005_45 #x0000000000000000))
(assert (= temp11005_46 #x0000000000000005))
(assert (= temp11005_47 temp11005_46))
(assert (= temp11005_48 (select ARGNAME_padding_NAMEEND_VAL temp11005_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11005_28 temp11005_25)
             (bvslt temp11005_32 temp11005_29)
             (bvslt temp11005_36 temp11005_33)
             (bvslt temp11005_40 temp11005_37)
             (bvslt temp11005_44 temp11005_41)
             (bvslt temp11005_48 temp11005_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11005_49 #x0000000000000000))
(assert (= var1191714 temp11005_49))
(assert (= temp11005_50 #x0000000000000000))
(assert (= temp11005_51 temp11005_50))
(assert (= temp11005_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11005_51)))
(assert (= temp11005_53 #x0000000000000001))
(assert (= temp11005_54 temp11005_53))
(assert (= temp11005_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11005_54)))
(assert (= temp11005_56 #x0000000000000002))
(assert (= temp11005_57 temp11005_56))
(assert (= temp11005_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11005_57)))
(assert (= temp11005_59 #x0000000000000003))
(assert (= temp11005_60 temp11005_59))
(assert (= temp11005_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11005_60)))
(assert (= temp11005_62 #x0000000000000004))
(assert (= temp11005_63 temp11005_62))
(assert (= temp11005_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11005_63)))
(assert (= temp11005_65 #x0000000000000005))
(assert (= temp11005_66 temp11005_65))
(assert (= temp11005_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11005_66)))
(assert (= temp11005_68 #x0000000000000000))
(assert (= temp11005_69 #x0000000000000000))
(assert (= temp11005_70 temp11005_69))
(assert (= temp11005_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11005_70)))
(assert (= temp11005_72 #x0000000000000000))
(assert (= temp11005_73 #x0000000000000001))
(assert (= temp11005_74 temp11005_73))
(assert (= temp11005_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11005_74)))
(assert (= temp11005_76 #x0000000000000000))
(assert (= temp11005_77 #x0000000000000002))
(assert (= temp11005_78 temp11005_77))
(assert (= temp11005_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11005_78)))
(assert (= temp11005_80 #x0000000000000000))
(assert (= temp11005_81 #x0000000000000003))
(assert (= temp11005_82 temp11005_81))
(assert (= temp11005_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11005_82)))
(assert (= temp11005_84 #x0000000000000000))
(assert (= temp11005_85 #x0000000000000004))
(assert (= temp11005_86 temp11005_85))
(assert (= temp11005_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11005_86)))
(assert (= temp11005_88 #x0000000000000000))
(assert (= temp11005_89 #x0000000000000005))
(assert (= temp11005_90 temp11005_89))
(assert (= temp11005_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11005_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11005_71 temp11005_68)
             (bvslt temp11005_75 temp11005_72)
             (bvslt temp11005_79 temp11005_76)
             (bvslt temp11005_83 temp11005_80)
             (bvslt temp11005_87 temp11005_84)
             (bvslt temp11005_91 temp11005_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11005_92 #x0000000000000000))
(assert (= var1191725 temp11005_92))
(assert (= temp11005_93 #x0000000000000000))
(assert (= temp11005_94 temp11005_93))
(assert (= temp11005_95 (select ARGNAME_stride_NAMEEND_VAL temp11005_94)))
(assert (= temp11005_96 #x0000000000000001))
(assert (= temp11005_97 temp11005_96))
(assert (= temp11005_98 (select ARGNAME_stride_NAMEEND_VAL temp11005_97)))
(assert (= temp11005_99 #x0000000000000002))
(assert (= temp11005_100 temp11005_99))
(assert (= temp11005_101 (select ARGNAME_stride_NAMEEND_VAL temp11005_100)))
(assert (= temp11005_102 #x0000000000000003))
(assert (= temp11005_103 temp11005_102))
(assert (= temp11005_104 (select ARGNAME_stride_NAMEEND_VAL temp11005_103)))
(assert (= temp11005_105 #x0000000000000004))
(assert (= temp11005_106 temp11005_105))
(assert (= temp11005_107 (select ARGNAME_stride_NAMEEND_VAL temp11005_106)))
(assert (= temp11005_108 #x0000000000000005))
(assert (= temp11005_109 temp11005_108))
(assert (= temp11005_110 (select ARGNAME_stride_NAMEEND_VAL temp11005_109)))
(assert (= temp11005_111 #x0000000000000000))
(assert (= temp11005_112 #x0000000000000000))
(assert (= temp11005_113 temp11005_112))
(assert (= temp11005_114 (select ARGNAME_stride_NAMEEND_VAL temp11005_113)))
(assert (= temp11005_115 #x0000000000000000))
(assert (= temp11005_116 #x0000000000000001))
(assert (= temp11005_117 temp11005_116))
(assert (= temp11005_118 (select ARGNAME_stride_NAMEEND_VAL temp11005_117)))
(assert (= temp11005_119 #x0000000000000000))
(assert (= temp11005_120 #x0000000000000002))
(assert (= temp11005_121 temp11005_120))
(assert (= temp11005_122 (select ARGNAME_stride_NAMEEND_VAL temp11005_121)))
(assert (= temp11005_123 #x0000000000000000))
(assert (= temp11005_124 #x0000000000000003))
(assert (= temp11005_125 temp11005_124))
(assert (= temp11005_126 (select ARGNAME_stride_NAMEEND_VAL temp11005_125)))
(assert (= temp11005_127 #x0000000000000000))
(assert (= temp11005_128 #x0000000000000004))
(assert (= temp11005_129 temp11005_128))
(assert (= temp11005_130 (select ARGNAME_stride_NAMEEND_VAL temp11005_129)))
(assert (= temp11005_131 #x0000000000000000))
(assert (= temp11005_132 #x0000000000000005))
(assert (= temp11005_133 temp11005_132))
(assert (= temp11005_134 (select ARGNAME_stride_NAMEEND_VAL temp11005_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11005_114 temp11005_111)
             (bvsle temp11005_118 temp11005_115)
             (bvsle temp11005_122 temp11005_119)
             (bvsle temp11005_126 temp11005_123)
             (bvsle temp11005_130 temp11005_127)
             (bvsle temp11005_134 temp11005_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11005_135 #x0000000000000000))
(assert (= var1191735 temp11005_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11005_136 #x0000000000000001))
(assert (= var1191747 temp11005_136))
(assert (= temp11005_137 #x0000000000000000))
(assert (= var1179826 temp11005_137))
(assert (= temp11005_138 #x0000000000000000))
(assert (= temp11005_139 temp11005_138))
(assert (= temp11005_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11005_139)))
(assert (= temp11005_141 #x0000000000000001))
(assert (= temp11005_142 temp11005_141))
(assert (= temp11005_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11005_142)))
(assert (= temp11005_144 #x0000000000000002))
(assert (= temp11005_145 temp11005_144))
(assert (= temp11005_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11005_145)))
(assert (= temp11005_147 #x0000000000000003))
(assert (= temp11005_148 temp11005_147))
(assert (= temp11005_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11005_148)))
(assert (= temp11005_150 #x0000000000000004))
(assert (= temp11005_151 temp11005_150))
(assert (= temp11005_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11005_151)))
(assert (= temp11005_153 #x0000000000000005))
(assert (= temp11005_154 temp11005_153))
(assert (= temp11005_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11005_154)))
(assert (= temp11005_157 var1179826))
(assert (= temp11005_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11005_157)))
(assert (= temp11005_156 temp11005_158))
(assert (= var1191780
   (ite (bvslt temp11005_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11005_159 #x0000000000000000))
(assert (= var1191780 temp11005_159))
(assert (= temp11005_160 #x0000000000000000))
(assert (= var1179826 temp11005_160))
(assert (= temp11005_162 var1179826))
(assert (= temp11005_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11005_162)))
(assert (= temp11005_161 temp11005_163))
(assert (= var1191802 (bvsmod temp11005_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11005_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11005_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11005_165 #x0000000000000001))
(assert (= var1191803 temp11005_165))
(assert (= temp11005_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11005_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11005_167 #x0000000000000001))
(assert (= var1191823 temp11005_167))
(assert (= temp11005_168 #x0000000000000001))
(assert (= var1180714 temp11005_168))
(assert (= temp11005_169 #x0000000000000000))
(assert (= temp11005_170 temp11005_169))
(assert (= temp11005_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11005_170)))
(assert (= temp11005_172 #x0000000000000001))
(assert (= temp11005_173 temp11005_172))
(assert (= temp11005_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11005_173)))
(assert (= temp11005_175 #x0000000000000002))
(assert (= temp11005_176 temp11005_175))
(assert (= temp11005_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11005_176)))
(assert (= temp11005_178 #x0000000000000003))
(assert (= temp11005_179 temp11005_178))
(assert (= temp11005_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11005_179)))
(assert (= temp11005_181 #x0000000000000004))
(assert (= temp11005_182 temp11005_181))
(assert (= temp11005_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11005_182)))
(assert (= temp11005_184 #x0000000000000005))
(assert (= temp11005_185 temp11005_184))
(assert (= temp11005_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11005_185)))
(assert (= temp11005_187 #x0000000000000000))
(assert (= temp11005_188
   (ite (bvslt var1180714 temp11005_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11005_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11005_188)))
(assert (= var1191831 temp11005_189))
(assert (bvslt (ite (bvslt var1180714 temp11005_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11005_190 #x0000000000000001))
(assert (= var1180714 temp11005_190))
(assert (= temp11005_192 var1180714))
(assert (= temp11005_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11005_192)))
(assert (= temp11005_191 temp11005_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11005_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11005_194 #x0000000000000001))
(assert (= var1191836 temp11005_194))
(assert (= temp11005_195 #x0000000000000000))
(assert (= var1179826 temp11005_195))
(assert (= temp11005_197 var1179826))
(assert (= temp11005_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11005_197)))
(assert (= temp11005_196 temp11005_198))
(assert (= temp11005_199 #x0000000000000002))
(assert (= var1586025 temp11005_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11005_200 #x0000000000000001))
(assert (= var1191993 temp11005_200))
(assert (= temp11005_201 #x0000000000000001))
(assert (= var2700303 temp11005_201))
(assert (= temp11005_202 #x0000000000000001))
(assert (= var2962447 temp11005_202))
(assert (= temp11005_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11005_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11005_204 #x0000000000000001))
(assert (= var211058 temp11005_204))
(assert (= temp11005_205 #x0000000000000001))
(assert (= var211188 temp11005_205))
(assert (= var3879401 var211188))
(assert (= temp11005_206 #x0000000000000000))
(assert (= var3866802 temp11005_206))
(assert (= temp11005_207 #x0000000000000000))
(assert (= temp11005_208
   (ite (bvslt var3866802 temp11005_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11005_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11005_208)))
(assert (= var3879420 temp11005_209))
(assert (bvslt (ite (bvslt var3866802 temp11005_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11005_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11005_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11005_211 #x0000000000000000))
(assert (= var3879421 temp11005_211))
(assert (= temp11005_212 #x0000000000000001))
(assert (= var3867690 temp11005_212))
(assert (= temp11005_213 #x0000000000000000))
(assert (= temp11005_214
   (ite (bvslt var3867690 temp11005_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11005_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11005_214)))
(assert (= var3879423 temp11005_215))
(assert (bvslt (ite (bvslt var3867690 temp11005_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11005_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11005_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11005_217 #x0000000000000001))
(assert (= var3879424 temp11005_217))
(assert (= temp11005_218 #x0000000000000000))
(assert (= var4133117 temp11005_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11005_219 #x0000000000000002))
(assert (= var4339331 temp11005_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11005_220 #x0000000000000000))
(assert (= var4404892 temp11005_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4600208 var211201))
(assert (= var4862352 var211201))
(assert (= temp11005_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp11005_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11005_222 #x0000000000000001))
(assert (= var212414 temp11005_222))
(assert (= temp11005_223 #x0000000000000002))
(assert (= var5191299 temp11005_223))
(assert (= var5191301 (bvsub ARGNAME_weight_NAMEEND_DIM var5191299)))
(assert (= var5256844 var5191299))
(assert (= var5256845 var5191301))
(assert (= temp11005_224 #x0000000000000001))
(assert (= var211058 temp11005_224))
(model-add temp11005_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11005_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11005_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11005_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



