(declare-fun temp10285_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10285_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10285_3 () (_ BitVec 64))
(declare-fun temp10285_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10285_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10285_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10285_7 () (_ BitVec 64))
(declare-fun temp10285_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10285_9 () (_ BitVec 64))
(declare-fun temp10285_10 () (_ BitVec 64))
(declare-fun temp10285_11 () (_ BitVec 64))
(declare-fun temp10285_12 () (_ BitVec 64))
(declare-fun temp10285_13 () (_ BitVec 64))
(declare-fun temp10285_14 () (_ BitVec 64))
(declare-fun temp10285_15 () (_ BitVec 64))
(declare-fun temp10285_16 () (_ BitVec 64))
(declare-fun temp10285_17 () (_ BitVec 64))
(declare-fun temp10285_18 () (_ BitVec 64))
(declare-fun temp10285_19 () (_ BitVec 64))
(declare-fun temp10285_20 () (_ BitVec 64))
(declare-fun temp10285_21 () (_ BitVec 64))
(declare-fun temp10285_22 () (_ BitVec 64))
(declare-fun temp10285_23 () (_ BitVec 64))
(declare-fun temp10285_24 () (_ BitVec 64))
(declare-fun temp10285_25 () (_ BitVec 64))
(declare-fun temp10285_26 () (_ BitVec 64))
(declare-fun temp10285_27 () (_ BitVec 64))
(declare-fun temp10285_28 () (_ BitVec 64))
(declare-fun temp10285_29 () (_ BitVec 64))
(declare-fun temp10285_30 () (_ BitVec 64))
(declare-fun temp10285_31 () (_ BitVec 64))
(declare-fun temp10285_32 () (_ BitVec 64))
(declare-fun temp10285_33 () (_ BitVec 64))
(declare-fun temp10285_34 () (_ BitVec 64))
(declare-fun temp10285_35 () (_ BitVec 64))
(declare-fun temp10285_36 () (_ BitVec 64))
(declare-fun temp10285_37 () (_ BitVec 64))
(declare-fun temp10285_38 () (_ BitVec 64))
(declare-fun temp10285_39 () (_ BitVec 64))
(declare-fun temp10285_40 () (_ BitVec 64))
(declare-fun temp10285_41 () (_ BitVec 64))
(declare-fun temp10285_42 () (_ BitVec 64))
(declare-fun temp10285_43 () (_ BitVec 64))
(declare-fun temp10285_44 () (_ BitVec 64))
(declare-fun temp10285_45 () (_ BitVec 64))
(declare-fun temp10285_46 () (_ BitVec 64))
(declare-fun temp10285_47 () (_ BitVec 64))
(declare-fun temp10285_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10285_49 () (_ BitVec 64))
(declare-fun temp10285_50 () (_ BitVec 64))
(declare-fun temp10285_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10285_52 () (_ BitVec 64))
(declare-fun temp10285_53 () (_ BitVec 64))
(declare-fun temp10285_54 () (_ BitVec 64))
(declare-fun temp10285_55 () (_ BitVec 64))
(declare-fun temp10285_56 () (_ BitVec 64))
(declare-fun temp10285_57 () (_ BitVec 64))
(declare-fun temp10285_58 () (_ BitVec 64))
(declare-fun temp10285_59 () (_ BitVec 64))
(declare-fun temp10285_60 () (_ BitVec 64))
(declare-fun temp10285_61 () (_ BitVec 64))
(declare-fun temp10285_62 () (_ BitVec 64))
(declare-fun temp10285_63 () (_ BitVec 64))
(declare-fun temp10285_64 () (_ BitVec 64))
(declare-fun temp10285_65 () (_ BitVec 64))
(declare-fun temp10285_66 () (_ BitVec 64))
(declare-fun temp10285_67 () (_ BitVec 64))
(declare-fun temp10285_68 () (_ BitVec 64))
(declare-fun temp10285_69 () (_ BitVec 64))
(declare-fun temp10285_70 () (_ BitVec 64))
(declare-fun temp10285_71 () (_ BitVec 64))
(declare-fun temp10285_72 () (_ BitVec 64))
(declare-fun temp10285_73 () (_ BitVec 64))
(declare-fun temp10285_74 () (_ BitVec 64))
(declare-fun temp10285_75 () (_ BitVec 64))
(declare-fun temp10285_76 () (_ BitVec 64))
(declare-fun temp10285_77 () (_ BitVec 64))
(declare-fun temp10285_78 () (_ BitVec 64))
(declare-fun temp10285_79 () (_ BitVec 64))
(declare-fun temp10285_80 () (_ BitVec 64))
(declare-fun temp10285_81 () (_ BitVec 64))
(declare-fun temp10285_82 () (_ BitVec 64))
(declare-fun temp10285_83 () (_ BitVec 64))
(declare-fun temp10285_84 () (_ BitVec 64))
(declare-fun temp10285_85 () (_ BitVec 64))
(declare-fun temp10285_86 () (_ BitVec 64))
(declare-fun temp10285_87 () (_ BitVec 64))
(declare-fun temp10285_88 () (_ BitVec 64))
(declare-fun temp10285_89 () (_ BitVec 64))
(declare-fun temp10285_90 () (_ BitVec 64))
(declare-fun temp10285_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10285_92 () (_ BitVec 64))
(declare-fun temp10285_93 () (_ BitVec 64))
(declare-fun temp10285_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10285_95 () (_ BitVec 64))
(declare-fun temp10285_96 () (_ BitVec 64))
(declare-fun temp10285_97 () (_ BitVec 64))
(declare-fun temp10285_98 () (_ BitVec 64))
(declare-fun temp10285_99 () (_ BitVec 64))
(declare-fun temp10285_100 () (_ BitVec 64))
(declare-fun temp10285_101 () (_ BitVec 64))
(declare-fun temp10285_102 () (_ BitVec 64))
(declare-fun temp10285_103 () (_ BitVec 64))
(declare-fun temp10285_104 () (_ BitVec 64))
(declare-fun temp10285_105 () (_ BitVec 64))
(declare-fun temp10285_106 () (_ BitVec 64))
(declare-fun temp10285_107 () (_ BitVec 64))
(declare-fun temp10285_108 () (_ BitVec 64))
(declare-fun temp10285_109 () (_ BitVec 64))
(declare-fun temp10285_110 () (_ BitVec 64))
(declare-fun temp10285_111 () (_ BitVec 64))
(declare-fun temp10285_112 () (_ BitVec 64))
(declare-fun temp10285_113 () (_ BitVec 64))
(declare-fun temp10285_114 () (_ BitVec 64))
(declare-fun temp10285_115 () (_ BitVec 64))
(declare-fun temp10285_116 () (_ BitVec 64))
(declare-fun temp10285_117 () (_ BitVec 64))
(declare-fun temp10285_118 () (_ BitVec 64))
(declare-fun temp10285_119 () (_ BitVec 64))
(declare-fun temp10285_120 () (_ BitVec 64))
(declare-fun temp10285_121 () (_ BitVec 64))
(declare-fun temp10285_122 () (_ BitVec 64))
(declare-fun temp10285_123 () (_ BitVec 64))
(declare-fun temp10285_124 () (_ BitVec 64))
(declare-fun temp10285_125 () (_ BitVec 64))
(declare-fun temp10285_126 () (_ BitVec 64))
(declare-fun temp10285_127 () (_ BitVec 64))
(declare-fun temp10285_128 () (_ BitVec 64))
(declare-fun temp10285_129 () (_ BitVec 64))
(declare-fun temp10285_130 () (_ BitVec 64))
(declare-fun temp10285_131 () (_ BitVec 64))
(declare-fun temp10285_132 () (_ BitVec 64))
(declare-fun temp10285_133 () (_ BitVec 64))
(declare-fun temp10285_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10285_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10285_136 () (_ BitVec 64))
(declare-fun temp10285_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10285_138 () (_ BitVec 64))
(declare-fun temp10285_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10285_140 () (_ BitVec 64))
(declare-fun temp10285_141 () (_ BitVec 64))
(declare-fun temp10285_142 () (_ BitVec 64))
(declare-fun temp10285_143 () (_ BitVec 64))
(declare-fun temp10285_144 () (_ BitVec 64))
(declare-fun temp10285_145 () (_ BitVec 64))
(declare-fun temp10285_146 () (_ BitVec 64))
(declare-fun temp10285_147 () (_ BitVec 64))
(declare-fun temp10285_148 () (_ BitVec 64))
(declare-fun temp10285_149 () (_ BitVec 64))
(declare-fun temp10285_150 () (_ BitVec 64))
(declare-fun temp10285_151 () (_ BitVec 64))
(declare-fun temp10285_152 () (_ BitVec 64))
(declare-fun temp10285_153 () (_ BitVec 64))
(declare-fun temp10285_154 () (_ BitVec 64))
(declare-fun temp10285_155 () (_ BitVec 64))
(declare-fun temp10285_157 () (_ BitVec 64))
(declare-fun temp10285_158 () (_ BitVec 64))
(declare-fun temp10285_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10285_159 () (_ BitVec 64))
(declare-fun temp10285_160 () (_ BitVec 64))
(declare-fun temp10285_162 () (_ BitVec 64))
(declare-fun temp10285_163 () (_ BitVec 64))
(declare-fun temp10285_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10285_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10285_165 () (_ BitVec 64))
(declare-fun temp10285_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10285_167 () (_ BitVec 64))
(declare-fun temp10285_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10285_169 () (_ BitVec 64))
(declare-fun temp10285_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10285_171 () (_ BitVec 64))
(declare-fun temp10285_172 () (_ BitVec 64))
(declare-fun temp10285_173 () (_ BitVec 64))
(declare-fun temp10285_174 () (_ BitVec 64))
(declare-fun temp10285_175 () (_ BitVec 64))
(declare-fun temp10285_176 () (_ BitVec 64))
(declare-fun temp10285_177 () (_ BitVec 64))
(declare-fun temp10285_178 () (_ BitVec 64))
(declare-fun temp10285_179 () (_ BitVec 64))
(declare-fun temp10285_180 () (_ BitVec 64))
(declare-fun temp10285_181 () (_ BitVec 64))
(declare-fun temp10285_182 () (_ BitVec 64))
(declare-fun temp10285_183 () (_ BitVec 64))
(declare-fun temp10285_184 () (_ BitVec 64))
(declare-fun temp10285_185 () (_ BitVec 64))
(declare-fun temp10285_186 () (_ BitVec 64))
(declare-fun temp10285_187 () (_ BitVec 64))
(declare-fun temp10285_188 () (_ BitVec 64))
(declare-fun temp10285_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10285_190 () (_ BitVec 64))
(declare-fun temp10285_192 () (_ BitVec 64))
(declare-fun temp10285_193 () (_ BitVec 64))
(declare-fun temp10285_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10285_194 () (_ BitVec 64))
(declare-fun temp10285_195 () (_ BitVec 64))
(declare-fun temp10285_197 () (_ BitVec 64))
(declare-fun temp10285_198 () (_ BitVec 64))
(declare-fun temp10285_196 () (_ BitVec 64))
(declare-fun temp10285_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10285_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10285_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10285_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10285_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10285_204 () (_ BitVec 64))
(declare-fun temp10285_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10285_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10285_207 () (_ BitVec 64))
(declare-fun temp10285_208 () (_ BitVec 64))
(declare-fun temp10285_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10285_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10285_211 () (_ BitVec 64))
(declare-fun temp10285_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10285_213 () (_ BitVec 64))
(declare-fun temp10285_214 () (_ BitVec 64))
(declare-fun temp10285_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10285_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10285_217 () (_ BitVec 64))
(declare-fun temp10285_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10285_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10285_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10285_221 () (_ BitVec 64))
(assert (= temp10285_1 #x0000000000000001))
(assert (= var77203 temp10285_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10285_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10285_2)))
(assert (= temp10285_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10285_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10285_4 #x0000000000000000))
(assert (= var210941 temp10285_4))
(assert (= temp10285_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10285_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10285_6 #x0000000000000000))
(assert (= var210986 temp10285_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10285_7 #x0000000000000000))
(assert (= temp10285_8 temp10285_7))
(assert (= temp10285_9 (select ARGNAME_padding_NAMEEND_VAL temp10285_8)))
(assert (= temp10285_10 #x0000000000000001))
(assert (= temp10285_11 temp10285_10))
(assert (= temp10285_12 (select ARGNAME_padding_NAMEEND_VAL temp10285_11)))
(assert (= temp10285_13 #x0000000000000002))
(assert (= temp10285_14 temp10285_13))
(assert (= temp10285_15 (select ARGNAME_padding_NAMEEND_VAL temp10285_14)))
(assert (= temp10285_16 #x0000000000000003))
(assert (= temp10285_17 temp10285_16))
(assert (= temp10285_18 (select ARGNAME_padding_NAMEEND_VAL temp10285_17)))
(assert (= temp10285_19 #x0000000000000004))
(assert (= temp10285_20 temp10285_19))
(assert (= temp10285_21 (select ARGNAME_padding_NAMEEND_VAL temp10285_20)))
(assert (= temp10285_22 #x0000000000000005))
(assert (= temp10285_23 temp10285_22))
(assert (= temp10285_24 (select ARGNAME_padding_NAMEEND_VAL temp10285_23)))
(assert (= temp10285_25 #x0000000000000000))
(assert (= temp10285_26 #x0000000000000000))
(assert (= temp10285_27 temp10285_26))
(assert (= temp10285_28 (select ARGNAME_padding_NAMEEND_VAL temp10285_27)))
(assert (= temp10285_29 #x0000000000000000))
(assert (= temp10285_30 #x0000000000000001))
(assert (= temp10285_31 temp10285_30))
(assert (= temp10285_32 (select ARGNAME_padding_NAMEEND_VAL temp10285_31)))
(assert (= temp10285_33 #x0000000000000000))
(assert (= temp10285_34 #x0000000000000002))
(assert (= temp10285_35 temp10285_34))
(assert (= temp10285_36 (select ARGNAME_padding_NAMEEND_VAL temp10285_35)))
(assert (= temp10285_37 #x0000000000000000))
(assert (= temp10285_38 #x0000000000000003))
(assert (= temp10285_39 temp10285_38))
(assert (= temp10285_40 (select ARGNAME_padding_NAMEEND_VAL temp10285_39)))
(assert (= temp10285_41 #x0000000000000000))
(assert (= temp10285_42 #x0000000000000004))
(assert (= temp10285_43 temp10285_42))
(assert (= temp10285_44 (select ARGNAME_padding_NAMEEND_VAL temp10285_43)))
(assert (= temp10285_45 #x0000000000000000))
(assert (= temp10285_46 #x0000000000000005))
(assert (= temp10285_47 temp10285_46))
(assert (= temp10285_48 (select ARGNAME_padding_NAMEEND_VAL temp10285_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10285_28 temp10285_25)
             (bvslt temp10285_32 temp10285_29)
             (bvslt temp10285_36 temp10285_33)
             (bvslt temp10285_40 temp10285_37)
             (bvslt temp10285_44 temp10285_41)
             (bvslt temp10285_48 temp10285_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10285_49 #x0000000000000000))
(assert (= var1191714 temp10285_49))
(assert (= temp10285_50 #x0000000000000000))
(assert (= temp10285_51 temp10285_50))
(assert (= temp10285_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10285_51)))
(assert (= temp10285_53 #x0000000000000001))
(assert (= temp10285_54 temp10285_53))
(assert (= temp10285_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10285_54)))
(assert (= temp10285_56 #x0000000000000002))
(assert (= temp10285_57 temp10285_56))
(assert (= temp10285_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10285_57)))
(assert (= temp10285_59 #x0000000000000003))
(assert (= temp10285_60 temp10285_59))
(assert (= temp10285_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10285_60)))
(assert (= temp10285_62 #x0000000000000004))
(assert (= temp10285_63 temp10285_62))
(assert (= temp10285_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10285_63)))
(assert (= temp10285_65 #x0000000000000005))
(assert (= temp10285_66 temp10285_65))
(assert (= temp10285_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10285_66)))
(assert (= temp10285_68 #x0000000000000000))
(assert (= temp10285_69 #x0000000000000000))
(assert (= temp10285_70 temp10285_69))
(assert (= temp10285_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10285_70)))
(assert (= temp10285_72 #x0000000000000000))
(assert (= temp10285_73 #x0000000000000001))
(assert (= temp10285_74 temp10285_73))
(assert (= temp10285_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10285_74)))
(assert (= temp10285_76 #x0000000000000000))
(assert (= temp10285_77 #x0000000000000002))
(assert (= temp10285_78 temp10285_77))
(assert (= temp10285_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10285_78)))
(assert (= temp10285_80 #x0000000000000000))
(assert (= temp10285_81 #x0000000000000003))
(assert (= temp10285_82 temp10285_81))
(assert (= temp10285_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10285_82)))
(assert (= temp10285_84 #x0000000000000000))
(assert (= temp10285_85 #x0000000000000004))
(assert (= temp10285_86 temp10285_85))
(assert (= temp10285_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10285_86)))
(assert (= temp10285_88 #x0000000000000000))
(assert (= temp10285_89 #x0000000000000005))
(assert (= temp10285_90 temp10285_89))
(assert (= temp10285_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10285_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10285_71 temp10285_68)
             (bvslt temp10285_75 temp10285_72)
             (bvslt temp10285_79 temp10285_76)
             (bvslt temp10285_83 temp10285_80)
             (bvslt temp10285_87 temp10285_84)
             (bvslt temp10285_91 temp10285_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10285_92 #x0000000000000000))
(assert (= var1191725 temp10285_92))
(assert (= temp10285_93 #x0000000000000000))
(assert (= temp10285_94 temp10285_93))
(assert (= temp10285_95 (select ARGNAME_stride_NAMEEND_VAL temp10285_94)))
(assert (= temp10285_96 #x0000000000000001))
(assert (= temp10285_97 temp10285_96))
(assert (= temp10285_98 (select ARGNAME_stride_NAMEEND_VAL temp10285_97)))
(assert (= temp10285_99 #x0000000000000002))
(assert (= temp10285_100 temp10285_99))
(assert (= temp10285_101 (select ARGNAME_stride_NAMEEND_VAL temp10285_100)))
(assert (= temp10285_102 #x0000000000000003))
(assert (= temp10285_103 temp10285_102))
(assert (= temp10285_104 (select ARGNAME_stride_NAMEEND_VAL temp10285_103)))
(assert (= temp10285_105 #x0000000000000004))
(assert (= temp10285_106 temp10285_105))
(assert (= temp10285_107 (select ARGNAME_stride_NAMEEND_VAL temp10285_106)))
(assert (= temp10285_108 #x0000000000000005))
(assert (= temp10285_109 temp10285_108))
(assert (= temp10285_110 (select ARGNAME_stride_NAMEEND_VAL temp10285_109)))
(assert (= temp10285_111 #x0000000000000000))
(assert (= temp10285_112 #x0000000000000000))
(assert (= temp10285_113 temp10285_112))
(assert (= temp10285_114 (select ARGNAME_stride_NAMEEND_VAL temp10285_113)))
(assert (= temp10285_115 #x0000000000000000))
(assert (= temp10285_116 #x0000000000000001))
(assert (= temp10285_117 temp10285_116))
(assert (= temp10285_118 (select ARGNAME_stride_NAMEEND_VAL temp10285_117)))
(assert (= temp10285_119 #x0000000000000000))
(assert (= temp10285_120 #x0000000000000002))
(assert (= temp10285_121 temp10285_120))
(assert (= temp10285_122 (select ARGNAME_stride_NAMEEND_VAL temp10285_121)))
(assert (= temp10285_123 #x0000000000000000))
(assert (= temp10285_124 #x0000000000000003))
(assert (= temp10285_125 temp10285_124))
(assert (= temp10285_126 (select ARGNAME_stride_NAMEEND_VAL temp10285_125)))
(assert (= temp10285_127 #x0000000000000000))
(assert (= temp10285_128 #x0000000000000004))
(assert (= temp10285_129 temp10285_128))
(assert (= temp10285_130 (select ARGNAME_stride_NAMEEND_VAL temp10285_129)))
(assert (= temp10285_131 #x0000000000000000))
(assert (= temp10285_132 #x0000000000000005))
(assert (= temp10285_133 temp10285_132))
(assert (= temp10285_134 (select ARGNAME_stride_NAMEEND_VAL temp10285_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10285_114 temp10285_111)
             (bvsle temp10285_118 temp10285_115)
             (bvsle temp10285_122 temp10285_119)
             (bvsle temp10285_126 temp10285_123)
             (bvsle temp10285_130 temp10285_127)
             (bvsle temp10285_134 temp10285_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10285_135 #x0000000000000000))
(assert (= var1191735 temp10285_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10285_136 #x0000000000000001))
(assert (= var1191747 temp10285_136))
(assert (= temp10285_137 #x0000000000000000))
(assert (= var1179826 temp10285_137))
(assert (= temp10285_138 #x0000000000000000))
(assert (= temp10285_139 temp10285_138))
(assert (= temp10285_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10285_139)))
(assert (= temp10285_141 #x0000000000000001))
(assert (= temp10285_142 temp10285_141))
(assert (= temp10285_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10285_142)))
(assert (= temp10285_144 #x0000000000000002))
(assert (= temp10285_145 temp10285_144))
(assert (= temp10285_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10285_145)))
(assert (= temp10285_147 #x0000000000000003))
(assert (= temp10285_148 temp10285_147))
(assert (= temp10285_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10285_148)))
(assert (= temp10285_150 #x0000000000000004))
(assert (= temp10285_151 temp10285_150))
(assert (= temp10285_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10285_151)))
(assert (= temp10285_153 #x0000000000000005))
(assert (= temp10285_154 temp10285_153))
(assert (= temp10285_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10285_154)))
(assert (= temp10285_157 var1179826))
(assert (= temp10285_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10285_157)))
(assert (= temp10285_156 temp10285_158))
(assert (= var1191780
   (ite (bvslt temp10285_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10285_159 #x0000000000000000))
(assert (= var1191780 temp10285_159))
(assert (= temp10285_160 #x0000000000000000))
(assert (= var1179826 temp10285_160))
(assert (= temp10285_162 var1179826))
(assert (= temp10285_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10285_162)))
(assert (= temp10285_161 temp10285_163))
(assert (= var1191802 (bvsmod temp10285_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10285_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10285_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10285_165 #x0000000000000001))
(assert (= var1191803 temp10285_165))
(assert (= temp10285_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10285_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10285_167 #x0000000000000001))
(assert (= var1191823 temp10285_167))
(assert (= temp10285_168 #x0000000000000001))
(assert (= var1180714 temp10285_168))
(assert (= temp10285_169 #x0000000000000000))
(assert (= temp10285_170 temp10285_169))
(assert (= temp10285_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10285_170)))
(assert (= temp10285_172 #x0000000000000001))
(assert (= temp10285_173 temp10285_172))
(assert (= temp10285_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10285_173)))
(assert (= temp10285_175 #x0000000000000002))
(assert (= temp10285_176 temp10285_175))
(assert (= temp10285_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10285_176)))
(assert (= temp10285_178 #x0000000000000003))
(assert (= temp10285_179 temp10285_178))
(assert (= temp10285_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10285_179)))
(assert (= temp10285_181 #x0000000000000004))
(assert (= temp10285_182 temp10285_181))
(assert (= temp10285_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10285_182)))
(assert (= temp10285_184 #x0000000000000005))
(assert (= temp10285_185 temp10285_184))
(assert (= temp10285_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10285_185)))
(assert (= temp10285_187 #x0000000000000000))
(assert (= temp10285_188
   (ite (bvslt var1180714 temp10285_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10285_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10285_188)))
(assert (= var1191831 temp10285_189))
(assert (bvslt (ite (bvslt var1180714 temp10285_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10285_190 #x0000000000000001))
(assert (= var1180714 temp10285_190))
(assert (= temp10285_192 var1180714))
(assert (= temp10285_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10285_192)))
(assert (= temp10285_191 temp10285_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10285_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10285_194 #x0000000000000001))
(assert (= var1191836 temp10285_194))
(assert (= temp10285_195 #x0000000000000000))
(assert (= var1179826 temp10285_195))
(assert (= temp10285_197 var1179826))
(assert (= temp10285_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10285_197)))
(assert (= temp10285_196 temp10285_198))
(assert (= temp10285_199 #x0000000000000002))
(assert (= var1586025 temp10285_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10285_200 #x0000000000000001))
(assert (= var1191993 temp10285_200))
(assert (= temp10285_201 #x0000000000000001))
(assert (= var2700303 temp10285_201))
(assert (= temp10285_202 #x0000000000000001))
(assert (= var2962447 temp10285_202))
(assert (= temp10285_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10285_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10285_204 #x0000000000000001))
(assert (= var211058 temp10285_204))
(assert (= temp10285_205 #x0000000000000001))
(assert (= var211188 temp10285_205))
(assert (= var3879401 var211188))
(assert (= temp10285_206 #x0000000000000000))
(assert (= var3866802 temp10285_206))
(assert (= temp10285_207 #x0000000000000000))
(assert (= temp10285_208
   (ite (bvslt var3866802 temp10285_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10285_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10285_208)))
(assert (= var3879420 temp10285_209))
(assert (bvslt (ite (bvslt var3866802 temp10285_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10285_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10285_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10285_211 #x0000000000000000))
(assert (= var3879421 temp10285_211))
(assert (= temp10285_212 #x0000000000000001))
(assert (= var3867690 temp10285_212))
(assert (= temp10285_213 #x0000000000000000))
(assert (= temp10285_214
   (ite (bvslt var3867690 temp10285_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10285_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10285_214)))
(assert (= var3879423 temp10285_215))
(assert (bvslt (ite (bvslt var3867690 temp10285_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10285_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10285_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10285_217 #x0000000000000001))
(assert (= var3879424 temp10285_217))
(assert (= temp10285_218 #x0000000000000000))
(assert (= var4079423 temp10285_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10285_219 #x0000000000000002))
(assert (= var4208259 temp10285_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10285_220 #x0000000000000000))
(assert (= var4273820 temp10285_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10285_221 #x0000000000000001))
(assert (= var211058 temp10285_221))
(model-add temp10285_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10285_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10285_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10285_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





