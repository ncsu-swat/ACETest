(declare-fun temp1265_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1265_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1265_3 () (_ BitVec 64))
(declare-fun temp1265_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1265_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1265_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1265_7 () (_ BitVec 64))
(declare-fun temp1265_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1265_9 () (_ BitVec 64))
(declare-fun temp1265_10 () (_ BitVec 64))
(declare-fun temp1265_11 () (_ BitVec 64))
(declare-fun temp1265_12 () (_ BitVec 64))
(declare-fun temp1265_13 () (_ BitVec 64))
(declare-fun temp1265_14 () (_ BitVec 64))
(declare-fun temp1265_15 () (_ BitVec 64))
(declare-fun temp1265_16 () (_ BitVec 64))
(declare-fun temp1265_17 () (_ BitVec 64))
(declare-fun temp1265_18 () (_ BitVec 64))
(declare-fun temp1265_19 () (_ BitVec 64))
(declare-fun temp1265_20 () (_ BitVec 64))
(declare-fun temp1265_21 () (_ BitVec 64))
(declare-fun temp1265_22 () (_ BitVec 64))
(declare-fun temp1265_23 () (_ BitVec 64))
(declare-fun temp1265_24 () (_ BitVec 64))
(declare-fun temp1265_25 () (_ BitVec 64))
(declare-fun temp1265_26 () (_ BitVec 64))
(declare-fun temp1265_27 () (_ BitVec 64))
(declare-fun temp1265_28 () (_ BitVec 64))
(declare-fun temp1265_29 () (_ BitVec 64))
(declare-fun temp1265_30 () (_ BitVec 64))
(declare-fun temp1265_31 () (_ BitVec 64))
(declare-fun temp1265_32 () (_ BitVec 64))
(declare-fun temp1265_33 () (_ BitVec 64))
(declare-fun temp1265_34 () (_ BitVec 64))
(declare-fun temp1265_35 () (_ BitVec 64))
(declare-fun temp1265_36 () (_ BitVec 64))
(declare-fun temp1265_37 () (_ BitVec 64))
(declare-fun temp1265_38 () (_ BitVec 64))
(declare-fun temp1265_39 () (_ BitVec 64))
(declare-fun temp1265_40 () (_ BitVec 64))
(declare-fun temp1265_41 () (_ BitVec 64))
(declare-fun temp1265_42 () (_ BitVec 64))
(declare-fun temp1265_43 () (_ BitVec 64))
(declare-fun temp1265_44 () (_ BitVec 64))
(declare-fun temp1265_45 () (_ BitVec 64))
(declare-fun temp1265_46 () (_ BitVec 64))
(declare-fun temp1265_47 () (_ BitVec 64))
(declare-fun temp1265_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1265_49 () (_ BitVec 64))
(declare-fun temp1265_50 () (_ BitVec 64))
(declare-fun temp1265_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1265_52 () (_ BitVec 64))
(declare-fun temp1265_53 () (_ BitVec 64))
(declare-fun temp1265_54 () (_ BitVec 64))
(declare-fun temp1265_55 () (_ BitVec 64))
(declare-fun temp1265_56 () (_ BitVec 64))
(declare-fun temp1265_57 () (_ BitVec 64))
(declare-fun temp1265_58 () (_ BitVec 64))
(declare-fun temp1265_59 () (_ BitVec 64))
(declare-fun temp1265_60 () (_ BitVec 64))
(declare-fun temp1265_61 () (_ BitVec 64))
(declare-fun temp1265_62 () (_ BitVec 64))
(declare-fun temp1265_63 () (_ BitVec 64))
(declare-fun temp1265_64 () (_ BitVec 64))
(declare-fun temp1265_65 () (_ BitVec 64))
(declare-fun temp1265_66 () (_ BitVec 64))
(declare-fun temp1265_67 () (_ BitVec 64))
(declare-fun temp1265_68 () (_ BitVec 64))
(declare-fun temp1265_69 () (_ BitVec 64))
(declare-fun temp1265_70 () (_ BitVec 64))
(declare-fun temp1265_71 () (_ BitVec 64))
(declare-fun temp1265_72 () (_ BitVec 64))
(declare-fun temp1265_73 () (_ BitVec 64))
(declare-fun temp1265_74 () (_ BitVec 64))
(declare-fun temp1265_75 () (_ BitVec 64))
(declare-fun temp1265_76 () (_ BitVec 64))
(declare-fun temp1265_77 () (_ BitVec 64))
(declare-fun temp1265_78 () (_ BitVec 64))
(declare-fun temp1265_79 () (_ BitVec 64))
(declare-fun temp1265_80 () (_ BitVec 64))
(declare-fun temp1265_81 () (_ BitVec 64))
(declare-fun temp1265_82 () (_ BitVec 64))
(declare-fun temp1265_83 () (_ BitVec 64))
(declare-fun temp1265_84 () (_ BitVec 64))
(declare-fun temp1265_85 () (_ BitVec 64))
(declare-fun temp1265_86 () (_ BitVec 64))
(declare-fun temp1265_87 () (_ BitVec 64))
(declare-fun temp1265_88 () (_ BitVec 64))
(declare-fun temp1265_89 () (_ BitVec 64))
(declare-fun temp1265_90 () (_ BitVec 64))
(declare-fun temp1265_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1265_92 () (_ BitVec 64))
(declare-fun temp1265_93 () (_ BitVec 64))
(declare-fun temp1265_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1265_95 () (_ BitVec 64))
(declare-fun temp1265_96 () (_ BitVec 64))
(declare-fun temp1265_97 () (_ BitVec 64))
(declare-fun temp1265_98 () (_ BitVec 64))
(declare-fun temp1265_99 () (_ BitVec 64))
(declare-fun temp1265_100 () (_ BitVec 64))
(declare-fun temp1265_101 () (_ BitVec 64))
(declare-fun temp1265_102 () (_ BitVec 64))
(declare-fun temp1265_103 () (_ BitVec 64))
(declare-fun temp1265_104 () (_ BitVec 64))
(declare-fun temp1265_105 () (_ BitVec 64))
(declare-fun temp1265_106 () (_ BitVec 64))
(declare-fun temp1265_107 () (_ BitVec 64))
(declare-fun temp1265_108 () (_ BitVec 64))
(declare-fun temp1265_109 () (_ BitVec 64))
(declare-fun temp1265_110 () (_ BitVec 64))
(declare-fun temp1265_111 () (_ BitVec 64))
(declare-fun temp1265_112 () (_ BitVec 64))
(declare-fun temp1265_113 () (_ BitVec 64))
(declare-fun temp1265_114 () (_ BitVec 64))
(declare-fun temp1265_115 () (_ BitVec 64))
(declare-fun temp1265_116 () (_ BitVec 64))
(declare-fun temp1265_117 () (_ BitVec 64))
(declare-fun temp1265_118 () (_ BitVec 64))
(declare-fun temp1265_119 () (_ BitVec 64))
(declare-fun temp1265_120 () (_ BitVec 64))
(declare-fun temp1265_121 () (_ BitVec 64))
(declare-fun temp1265_122 () (_ BitVec 64))
(declare-fun temp1265_123 () (_ BitVec 64))
(declare-fun temp1265_124 () (_ BitVec 64))
(declare-fun temp1265_125 () (_ BitVec 64))
(declare-fun temp1265_126 () (_ BitVec 64))
(declare-fun temp1265_127 () (_ BitVec 64))
(declare-fun temp1265_128 () (_ BitVec 64))
(declare-fun temp1265_129 () (_ BitVec 64))
(declare-fun temp1265_130 () (_ BitVec 64))
(declare-fun temp1265_131 () (_ BitVec 64))
(declare-fun temp1265_132 () (_ BitVec 64))
(declare-fun temp1265_133 () (_ BitVec 64))
(declare-fun temp1265_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1265_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1265_136 () (_ BitVec 64))
(declare-fun temp1265_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1265_138 () (_ BitVec 64))
(declare-fun temp1265_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1265_140 () (_ BitVec 64))
(declare-fun temp1265_141 () (_ BitVec 64))
(declare-fun temp1265_142 () (_ BitVec 64))
(declare-fun temp1265_143 () (_ BitVec 64))
(declare-fun temp1265_144 () (_ BitVec 64))
(declare-fun temp1265_145 () (_ BitVec 64))
(declare-fun temp1265_146 () (_ BitVec 64))
(declare-fun temp1265_147 () (_ BitVec 64))
(declare-fun temp1265_148 () (_ BitVec 64))
(declare-fun temp1265_149 () (_ BitVec 64))
(declare-fun temp1265_150 () (_ BitVec 64))
(declare-fun temp1265_151 () (_ BitVec 64))
(declare-fun temp1265_152 () (_ BitVec 64))
(declare-fun temp1265_153 () (_ BitVec 64))
(declare-fun temp1265_154 () (_ BitVec 64))
(declare-fun temp1265_155 () (_ BitVec 64))
(declare-fun temp1265_157 () (_ BitVec 64))
(declare-fun temp1265_158 () (_ BitVec 64))
(declare-fun temp1265_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1265_159 () (_ BitVec 64))
(declare-fun temp1265_160 () (_ BitVec 64))
(declare-fun temp1265_162 () (_ BitVec 64))
(declare-fun temp1265_163 () (_ BitVec 64))
(declare-fun temp1265_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1265_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1265_165 () (_ BitVec 64))
(declare-fun temp1265_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1265_167 () (_ BitVec 64))
(declare-fun temp1265_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1265_169 () (_ BitVec 64))
(declare-fun temp1265_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1265_171 () (_ BitVec 64))
(declare-fun temp1265_172 () (_ BitVec 64))
(declare-fun temp1265_173 () (_ BitVec 64))
(declare-fun temp1265_174 () (_ BitVec 64))
(declare-fun temp1265_175 () (_ BitVec 64))
(declare-fun temp1265_176 () (_ BitVec 64))
(declare-fun temp1265_177 () (_ BitVec 64))
(declare-fun temp1265_178 () (_ BitVec 64))
(declare-fun temp1265_179 () (_ BitVec 64))
(declare-fun temp1265_180 () (_ BitVec 64))
(declare-fun temp1265_181 () (_ BitVec 64))
(declare-fun temp1265_182 () (_ BitVec 64))
(declare-fun temp1265_183 () (_ BitVec 64))
(declare-fun temp1265_184 () (_ BitVec 64))
(declare-fun temp1265_185 () (_ BitVec 64))
(declare-fun temp1265_186 () (_ BitVec 64))
(declare-fun temp1265_187 () (_ BitVec 64))
(declare-fun temp1265_188 () (_ BitVec 64))
(declare-fun temp1265_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1265_190 () (_ BitVec 64))
(declare-fun temp1265_192 () (_ BitVec 64))
(declare-fun temp1265_193 () (_ BitVec 64))
(declare-fun temp1265_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1265_194 () (_ BitVec 64))
(declare-fun temp1265_195 () (_ BitVec 64))
(declare-fun temp1265_197 () (_ BitVec 64))
(declare-fun temp1265_198 () (_ BitVec 64))
(declare-fun temp1265_196 () (_ BitVec 64))
(declare-fun temp1265_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1265_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1265_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1265_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1265_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1265_204 () (_ BitVec 64))
(declare-fun temp1265_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1265_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1265_207 () (_ BitVec 64))
(declare-fun temp1265_208 () (_ BitVec 64))
(declare-fun temp1265_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1265_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1265_211 () (_ BitVec 64))
(declare-fun temp1265_212 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1265_213 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp1265_214 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp1265_216 () (_ BitVec 64))
(declare-fun temp1265_215 () (_ BitVec 64))
(declare-fun temp1265_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp1265_218 () (_ BitVec 64))
(declare-fun temp1265_219 () (_ BitVec 64))
(declare-fun temp1265_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp1265_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp1265_222 () (_ BitVec 64))
(declare-fun temp1265_224 () (_ BitVec 64))
(declare-fun temp1265_223 () (_ BitVec 64))
(declare-fun temp1265_225 () (_ BitVec 64))
(assert (= temp1265_1 #x0000000000000001))
(assert (= var77203 temp1265_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1265_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1265_2)))
(assert (= temp1265_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1265_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1265_4 #x0000000000000000))
(assert (= var210941 temp1265_4))
(assert (= temp1265_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1265_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1265_6 #x0000000000000000))
(assert (= var210986 temp1265_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1265_7 #x0000000000000000))
(assert (= temp1265_8 temp1265_7))
(assert (= temp1265_9 (select ARGNAME_padding_NAMEEND_VAL temp1265_8)))
(assert (= temp1265_10 #x0000000000000001))
(assert (= temp1265_11 temp1265_10))
(assert (= temp1265_12 (select ARGNAME_padding_NAMEEND_VAL temp1265_11)))
(assert (= temp1265_13 #x0000000000000002))
(assert (= temp1265_14 temp1265_13))
(assert (= temp1265_15 (select ARGNAME_padding_NAMEEND_VAL temp1265_14)))
(assert (= temp1265_16 #x0000000000000003))
(assert (= temp1265_17 temp1265_16))
(assert (= temp1265_18 (select ARGNAME_padding_NAMEEND_VAL temp1265_17)))
(assert (= temp1265_19 #x0000000000000004))
(assert (= temp1265_20 temp1265_19))
(assert (= temp1265_21 (select ARGNAME_padding_NAMEEND_VAL temp1265_20)))
(assert (= temp1265_22 #x0000000000000005))
(assert (= temp1265_23 temp1265_22))
(assert (= temp1265_24 (select ARGNAME_padding_NAMEEND_VAL temp1265_23)))
(assert (= temp1265_25 #x0000000000000000))
(assert (= temp1265_26 #x0000000000000000))
(assert (= temp1265_27 temp1265_26))
(assert (= temp1265_28 (select ARGNAME_padding_NAMEEND_VAL temp1265_27)))
(assert (= temp1265_29 #x0000000000000000))
(assert (= temp1265_30 #x0000000000000001))
(assert (= temp1265_31 temp1265_30))
(assert (= temp1265_32 (select ARGNAME_padding_NAMEEND_VAL temp1265_31)))
(assert (= temp1265_33 #x0000000000000000))
(assert (= temp1265_34 #x0000000000000002))
(assert (= temp1265_35 temp1265_34))
(assert (= temp1265_36 (select ARGNAME_padding_NAMEEND_VAL temp1265_35)))
(assert (= temp1265_37 #x0000000000000000))
(assert (= temp1265_38 #x0000000000000003))
(assert (= temp1265_39 temp1265_38))
(assert (= temp1265_40 (select ARGNAME_padding_NAMEEND_VAL temp1265_39)))
(assert (= temp1265_41 #x0000000000000000))
(assert (= temp1265_42 #x0000000000000004))
(assert (= temp1265_43 temp1265_42))
(assert (= temp1265_44 (select ARGNAME_padding_NAMEEND_VAL temp1265_43)))
(assert (= temp1265_45 #x0000000000000000))
(assert (= temp1265_46 #x0000000000000005))
(assert (= temp1265_47 temp1265_46))
(assert (= temp1265_48 (select ARGNAME_padding_NAMEEND_VAL temp1265_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1265_28 temp1265_25)
             (bvslt temp1265_32 temp1265_29)
             (bvslt temp1265_36 temp1265_33)
             (bvslt temp1265_40 temp1265_37)
             (bvslt temp1265_44 temp1265_41)
             (bvslt temp1265_48 temp1265_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1265_49 #x0000000000000000))
(assert (= var1191714 temp1265_49))
(assert (= temp1265_50 #x0000000000000000))
(assert (= temp1265_51 temp1265_50))
(assert (= temp1265_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1265_51)))
(assert (= temp1265_53 #x0000000000000001))
(assert (= temp1265_54 temp1265_53))
(assert (= temp1265_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1265_54)))
(assert (= temp1265_56 #x0000000000000002))
(assert (= temp1265_57 temp1265_56))
(assert (= temp1265_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1265_57)))
(assert (= temp1265_59 #x0000000000000003))
(assert (= temp1265_60 temp1265_59))
(assert (= temp1265_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1265_60)))
(assert (= temp1265_62 #x0000000000000004))
(assert (= temp1265_63 temp1265_62))
(assert (= temp1265_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1265_63)))
(assert (= temp1265_65 #x0000000000000005))
(assert (= temp1265_66 temp1265_65))
(assert (= temp1265_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1265_66)))
(assert (= temp1265_68 #x0000000000000000))
(assert (= temp1265_69 #x0000000000000000))
(assert (= temp1265_70 temp1265_69))
(assert (= temp1265_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1265_70)))
(assert (= temp1265_72 #x0000000000000000))
(assert (= temp1265_73 #x0000000000000001))
(assert (= temp1265_74 temp1265_73))
(assert (= temp1265_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1265_74)))
(assert (= temp1265_76 #x0000000000000000))
(assert (= temp1265_77 #x0000000000000002))
(assert (= temp1265_78 temp1265_77))
(assert (= temp1265_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1265_78)))
(assert (= temp1265_80 #x0000000000000000))
(assert (= temp1265_81 #x0000000000000003))
(assert (= temp1265_82 temp1265_81))
(assert (= temp1265_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1265_82)))
(assert (= temp1265_84 #x0000000000000000))
(assert (= temp1265_85 #x0000000000000004))
(assert (= temp1265_86 temp1265_85))
(assert (= temp1265_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1265_86)))
(assert (= temp1265_88 #x0000000000000000))
(assert (= temp1265_89 #x0000000000000005))
(assert (= temp1265_90 temp1265_89))
(assert (= temp1265_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1265_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1265_71 temp1265_68)
             (bvslt temp1265_75 temp1265_72)
             (bvslt temp1265_79 temp1265_76)
             (bvslt temp1265_83 temp1265_80)
             (bvslt temp1265_87 temp1265_84)
             (bvslt temp1265_91 temp1265_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1265_92 #x0000000000000000))
(assert (= var1191725 temp1265_92))
(assert (= temp1265_93 #x0000000000000000))
(assert (= temp1265_94 temp1265_93))
(assert (= temp1265_95 (select ARGNAME_stride_NAMEEND_VAL temp1265_94)))
(assert (= temp1265_96 #x0000000000000001))
(assert (= temp1265_97 temp1265_96))
(assert (= temp1265_98 (select ARGNAME_stride_NAMEEND_VAL temp1265_97)))
(assert (= temp1265_99 #x0000000000000002))
(assert (= temp1265_100 temp1265_99))
(assert (= temp1265_101 (select ARGNAME_stride_NAMEEND_VAL temp1265_100)))
(assert (= temp1265_102 #x0000000000000003))
(assert (= temp1265_103 temp1265_102))
(assert (= temp1265_104 (select ARGNAME_stride_NAMEEND_VAL temp1265_103)))
(assert (= temp1265_105 #x0000000000000004))
(assert (= temp1265_106 temp1265_105))
(assert (= temp1265_107 (select ARGNAME_stride_NAMEEND_VAL temp1265_106)))
(assert (= temp1265_108 #x0000000000000005))
(assert (= temp1265_109 temp1265_108))
(assert (= temp1265_110 (select ARGNAME_stride_NAMEEND_VAL temp1265_109)))
(assert (= temp1265_111 #x0000000000000000))
(assert (= temp1265_112 #x0000000000000000))
(assert (= temp1265_113 temp1265_112))
(assert (= temp1265_114 (select ARGNAME_stride_NAMEEND_VAL temp1265_113)))
(assert (= temp1265_115 #x0000000000000000))
(assert (= temp1265_116 #x0000000000000001))
(assert (= temp1265_117 temp1265_116))
(assert (= temp1265_118 (select ARGNAME_stride_NAMEEND_VAL temp1265_117)))
(assert (= temp1265_119 #x0000000000000000))
(assert (= temp1265_120 #x0000000000000002))
(assert (= temp1265_121 temp1265_120))
(assert (= temp1265_122 (select ARGNAME_stride_NAMEEND_VAL temp1265_121)))
(assert (= temp1265_123 #x0000000000000000))
(assert (= temp1265_124 #x0000000000000003))
(assert (= temp1265_125 temp1265_124))
(assert (= temp1265_126 (select ARGNAME_stride_NAMEEND_VAL temp1265_125)))
(assert (= temp1265_127 #x0000000000000000))
(assert (= temp1265_128 #x0000000000000004))
(assert (= temp1265_129 temp1265_128))
(assert (= temp1265_130 (select ARGNAME_stride_NAMEEND_VAL temp1265_129)))
(assert (= temp1265_131 #x0000000000000000))
(assert (= temp1265_132 #x0000000000000005))
(assert (= temp1265_133 temp1265_132))
(assert (= temp1265_134 (select ARGNAME_stride_NAMEEND_VAL temp1265_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1265_114 temp1265_111)
             (bvsle temp1265_118 temp1265_115)
             (bvsle temp1265_122 temp1265_119)
             (bvsle temp1265_126 temp1265_123)
             (bvsle temp1265_130 temp1265_127)
             (bvsle temp1265_134 temp1265_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1265_135 #x0000000000000000))
(assert (= var1191735 temp1265_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1265_136 #x0000000000000001))
(assert (= var1191747 temp1265_136))
(assert (= temp1265_137 #x0000000000000000))
(assert (= var1179826 temp1265_137))
(assert (= temp1265_138 #x0000000000000000))
(assert (= temp1265_139 temp1265_138))
(assert (= temp1265_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1265_139)))
(assert (= temp1265_141 #x0000000000000001))
(assert (= temp1265_142 temp1265_141))
(assert (= temp1265_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1265_142)))
(assert (= temp1265_144 #x0000000000000002))
(assert (= temp1265_145 temp1265_144))
(assert (= temp1265_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1265_145)))
(assert (= temp1265_147 #x0000000000000003))
(assert (= temp1265_148 temp1265_147))
(assert (= temp1265_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1265_148)))
(assert (= temp1265_150 #x0000000000000004))
(assert (= temp1265_151 temp1265_150))
(assert (= temp1265_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1265_151)))
(assert (= temp1265_153 #x0000000000000005))
(assert (= temp1265_154 temp1265_153))
(assert (= temp1265_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1265_154)))
(assert (= temp1265_157 var1179826))
(assert (= temp1265_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1265_157)))
(assert (= temp1265_156 temp1265_158))
(assert (= var1191780
   (ite (bvslt temp1265_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1265_159 #x0000000000000000))
(assert (= var1191780 temp1265_159))
(assert (= temp1265_160 #x0000000000000000))
(assert (= var1179826 temp1265_160))
(assert (= temp1265_162 var1179826))
(assert (= temp1265_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1265_162)))
(assert (= temp1265_161 temp1265_163))
(assert (= var1191802 (bvsmod temp1265_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1265_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1265_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1265_165 #x0000000000000001))
(assert (= var1191803 temp1265_165))
(assert (= temp1265_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1265_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1265_167 #x0000000000000001))
(assert (= var1191823 temp1265_167))
(assert (= temp1265_168 #x0000000000000001))
(assert (= var1180714 temp1265_168))
(assert (= temp1265_169 #x0000000000000000))
(assert (= temp1265_170 temp1265_169))
(assert (= temp1265_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1265_170)))
(assert (= temp1265_172 #x0000000000000001))
(assert (= temp1265_173 temp1265_172))
(assert (= temp1265_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1265_173)))
(assert (= temp1265_175 #x0000000000000002))
(assert (= temp1265_176 temp1265_175))
(assert (= temp1265_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1265_176)))
(assert (= temp1265_178 #x0000000000000003))
(assert (= temp1265_179 temp1265_178))
(assert (= temp1265_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1265_179)))
(assert (= temp1265_181 #x0000000000000004))
(assert (= temp1265_182 temp1265_181))
(assert (= temp1265_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1265_182)))
(assert (= temp1265_184 #x0000000000000005))
(assert (= temp1265_185 temp1265_184))
(assert (= temp1265_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1265_185)))
(assert (= temp1265_187 #x0000000000000000))
(assert (= temp1265_188
   (ite (bvslt var1180714 temp1265_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1265_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1265_188)))
(assert (= var1191831 temp1265_189))
(assert (bvslt (ite (bvslt var1180714 temp1265_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1265_190 #x0000000000000001))
(assert (= var1180714 temp1265_190))
(assert (= temp1265_192 var1180714))
(assert (= temp1265_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1265_192)))
(assert (= temp1265_191 temp1265_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1265_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1265_194 #x0000000000000001))
(assert (= var1191836 temp1265_194))
(assert (= temp1265_195 #x0000000000000000))
(assert (= var1179826 temp1265_195))
(assert (= temp1265_197 var1179826))
(assert (= temp1265_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1265_197)))
(assert (= temp1265_196 temp1265_198))
(assert (= temp1265_199 #x0000000000000002))
(assert (= var1586025 temp1265_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1265_200 #x0000000000000001))
(assert (= var1191993 temp1265_200))
(assert (= temp1265_201 #x0000000000000001))
(assert (= var2700303 temp1265_201))
(assert (= temp1265_202 #x0000000000000001))
(assert (= var2962447 temp1265_202))
(assert (= temp1265_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1265_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1265_204 #x0000000000000001))
(assert (= var211058 temp1265_204))
(assert (= temp1265_205 #x0000000000000001))
(assert (= var211188 temp1265_205))
(assert (= var3879401 var211188))
(assert (= temp1265_206 #x0000000000000000))
(assert (= var3866802 temp1265_206))
(assert (= temp1265_207 #x0000000000000000))
(assert (= temp1265_208
   (ite (bvslt var3866802 temp1265_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1265_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1265_208)))
(assert (= var3879420 temp1265_209))
(assert (bvslt (ite (bvslt var3866802 temp1265_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1265_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1265_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1265_211 #x0000000000000001))
(assert (= var3879421 temp1265_211))
(assert (= temp1265_212 #x0000000000000000))
(assert (= var4133117 temp1265_212))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1265_213 #x0000000000000002))
(assert (= var4339331 temp1265_213))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1265_214 #x0000000000000000))
(assert (= var4404892 temp1265_214))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp1265_216 #xffffffffffffffff))
(assert (= temp1265_215 temp1265_216))
(assert (= temp1265_217 #x0000000000000001))
(assert (= var197674 temp1265_217))
(assert (= temp1265_218 #x0000000000000000))
(assert (= temp1265_219
   (ite (bvslt var197674 temp1265_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp1265_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp1265_219)))
(assert (= var211595 temp1265_220))
(assert (bvslt (ite (bvslt var197674 temp1265_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1265_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp1265_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp1265_222 #x0000000000000001))
(assert (= var211596 temp1265_222))
(assert (= temp1265_224 #xffffffffffffffff))
(assert (= temp1265_223 temp1265_224))
(assert (= temp1265_225 #x0000000000000001))
(assert (= var211058 temp1265_225))
(model-add temp1265_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1265_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1265_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1265_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




