(declare-fun temp64_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp64_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp64_3 () (_ BitVec 64))
(declare-fun temp64_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp64_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp64_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp64_7 () (_ BitVec 64))
(declare-fun temp64_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp64_9 () (_ BitVec 64))
(declare-fun temp64_10 () (_ BitVec 64))
(declare-fun temp64_11 () (_ BitVec 64))
(declare-fun temp64_12 () (_ BitVec 64))
(declare-fun temp64_13 () (_ BitVec 64))
(declare-fun temp64_14 () (_ BitVec 64))
(declare-fun temp64_15 () (_ BitVec 64))
(declare-fun temp64_16 () (_ BitVec 64))
(declare-fun temp64_17 () (_ BitVec 64))
(declare-fun temp64_18 () (_ BitVec 64))
(declare-fun temp64_19 () (_ BitVec 64))
(declare-fun temp64_20 () (_ BitVec 64))
(declare-fun temp64_21 () (_ BitVec 64))
(declare-fun temp64_22 () (_ BitVec 64))
(declare-fun temp64_23 () (_ BitVec 64))
(declare-fun temp64_24 () (_ BitVec 64))
(declare-fun temp64_25 () (_ BitVec 64))
(declare-fun temp64_26 () (_ BitVec 64))
(declare-fun temp64_27 () (_ BitVec 64))
(declare-fun temp64_28 () (_ BitVec 64))
(declare-fun temp64_29 () (_ BitVec 64))
(declare-fun temp64_30 () (_ BitVec 64))
(declare-fun temp64_31 () (_ BitVec 64))
(declare-fun temp64_32 () (_ BitVec 64))
(declare-fun temp64_33 () (_ BitVec 64))
(declare-fun temp64_34 () (_ BitVec 64))
(declare-fun temp64_35 () (_ BitVec 64))
(declare-fun temp64_36 () (_ BitVec 64))
(declare-fun temp64_37 () (_ BitVec 64))
(declare-fun temp64_38 () (_ BitVec 64))
(declare-fun temp64_39 () (_ BitVec 64))
(declare-fun temp64_40 () (_ BitVec 64))
(declare-fun temp64_41 () (_ BitVec 64))
(declare-fun temp64_42 () (_ BitVec 64))
(declare-fun temp64_43 () (_ BitVec 64))
(declare-fun temp64_44 () (_ BitVec 64))
(declare-fun temp64_45 () (_ BitVec 64))
(declare-fun temp64_46 () (_ BitVec 64))
(declare-fun temp64_47 () (_ BitVec 64))
(declare-fun temp64_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp64_49 () (_ BitVec 64))
(declare-fun temp64_50 () (_ BitVec 64))
(declare-fun temp64_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp64_52 () (_ BitVec 64))
(declare-fun temp64_53 () (_ BitVec 64))
(declare-fun temp64_54 () (_ BitVec 64))
(declare-fun temp64_55 () (_ BitVec 64))
(declare-fun temp64_56 () (_ BitVec 64))
(declare-fun temp64_57 () (_ BitVec 64))
(declare-fun temp64_58 () (_ BitVec 64))
(declare-fun temp64_59 () (_ BitVec 64))
(declare-fun temp64_60 () (_ BitVec 64))
(declare-fun temp64_61 () (_ BitVec 64))
(declare-fun temp64_62 () (_ BitVec 64))
(declare-fun temp64_63 () (_ BitVec 64))
(declare-fun temp64_64 () (_ BitVec 64))
(declare-fun temp64_65 () (_ BitVec 64))
(declare-fun temp64_66 () (_ BitVec 64))
(declare-fun temp64_67 () (_ BitVec 64))
(declare-fun temp64_68 () (_ BitVec 64))
(declare-fun temp64_69 () (_ BitVec 64))
(declare-fun temp64_70 () (_ BitVec 64))
(declare-fun temp64_71 () (_ BitVec 64))
(declare-fun temp64_72 () (_ BitVec 64))
(declare-fun temp64_73 () (_ BitVec 64))
(declare-fun temp64_74 () (_ BitVec 64))
(declare-fun temp64_75 () (_ BitVec 64))
(declare-fun temp64_76 () (_ BitVec 64))
(declare-fun temp64_77 () (_ BitVec 64))
(declare-fun temp64_78 () (_ BitVec 64))
(declare-fun temp64_79 () (_ BitVec 64))
(declare-fun temp64_80 () (_ BitVec 64))
(declare-fun temp64_81 () (_ BitVec 64))
(declare-fun temp64_82 () (_ BitVec 64))
(declare-fun temp64_83 () (_ BitVec 64))
(declare-fun temp64_84 () (_ BitVec 64))
(declare-fun temp64_85 () (_ BitVec 64))
(declare-fun temp64_86 () (_ BitVec 64))
(declare-fun temp64_87 () (_ BitVec 64))
(declare-fun temp64_88 () (_ BitVec 64))
(declare-fun temp64_89 () (_ BitVec 64))
(declare-fun temp64_90 () (_ BitVec 64))
(declare-fun temp64_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp64_92 () (_ BitVec 64))
(declare-fun temp64_93 () (_ BitVec 64))
(declare-fun temp64_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp64_95 () (_ BitVec 64))
(declare-fun temp64_96 () (_ BitVec 64))
(declare-fun temp64_97 () (_ BitVec 64))
(declare-fun temp64_98 () (_ BitVec 64))
(declare-fun temp64_99 () (_ BitVec 64))
(declare-fun temp64_100 () (_ BitVec 64))
(declare-fun temp64_101 () (_ BitVec 64))
(declare-fun temp64_102 () (_ BitVec 64))
(declare-fun temp64_103 () (_ BitVec 64))
(declare-fun temp64_104 () (_ BitVec 64))
(declare-fun temp64_105 () (_ BitVec 64))
(declare-fun temp64_106 () (_ BitVec 64))
(declare-fun temp64_107 () (_ BitVec 64))
(declare-fun temp64_108 () (_ BitVec 64))
(declare-fun temp64_109 () (_ BitVec 64))
(declare-fun temp64_110 () (_ BitVec 64))
(declare-fun temp64_111 () (_ BitVec 64))
(declare-fun temp64_112 () (_ BitVec 64))
(declare-fun temp64_113 () (_ BitVec 64))
(declare-fun temp64_114 () (_ BitVec 64))
(declare-fun temp64_115 () (_ BitVec 64))
(declare-fun temp64_116 () (_ BitVec 64))
(declare-fun temp64_117 () (_ BitVec 64))
(declare-fun temp64_118 () (_ BitVec 64))
(declare-fun temp64_119 () (_ BitVec 64))
(declare-fun temp64_120 () (_ BitVec 64))
(declare-fun temp64_121 () (_ BitVec 64))
(declare-fun temp64_122 () (_ BitVec 64))
(declare-fun temp64_123 () (_ BitVec 64))
(declare-fun temp64_124 () (_ BitVec 64))
(declare-fun temp64_125 () (_ BitVec 64))
(declare-fun temp64_126 () (_ BitVec 64))
(declare-fun temp64_127 () (_ BitVec 64))
(declare-fun temp64_128 () (_ BitVec 64))
(declare-fun temp64_129 () (_ BitVec 64))
(declare-fun temp64_130 () (_ BitVec 64))
(declare-fun temp64_131 () (_ BitVec 64))
(declare-fun temp64_132 () (_ BitVec 64))
(declare-fun temp64_133 () (_ BitVec 64))
(declare-fun temp64_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp64_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp64_136 () (_ BitVec 64))
(declare-fun temp64_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp64_138 () (_ BitVec 64))
(declare-fun temp64_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp64_140 () (_ BitVec 64))
(declare-fun temp64_141 () (_ BitVec 64))
(declare-fun temp64_142 () (_ BitVec 64))
(declare-fun temp64_143 () (_ BitVec 64))
(declare-fun temp64_144 () (_ BitVec 64))
(declare-fun temp64_145 () (_ BitVec 64))
(declare-fun temp64_146 () (_ BitVec 64))
(declare-fun temp64_147 () (_ BitVec 64))
(declare-fun temp64_148 () (_ BitVec 64))
(declare-fun temp64_149 () (_ BitVec 64))
(declare-fun temp64_150 () (_ BitVec 64))
(declare-fun temp64_151 () (_ BitVec 64))
(declare-fun temp64_152 () (_ BitVec 64))
(declare-fun temp64_153 () (_ BitVec 64))
(declare-fun temp64_154 () (_ BitVec 64))
(declare-fun temp64_155 () (_ BitVec 64))
(declare-fun temp64_157 () (_ BitVec 64))
(declare-fun temp64_158 () (_ BitVec 64))
(declare-fun temp64_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp64_159 () (_ BitVec 64))
(declare-fun temp64_160 () (_ BitVec 64))
(declare-fun temp64_162 () (_ BitVec 64))
(declare-fun temp64_163 () (_ BitVec 64))
(declare-fun temp64_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp64_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp64_165 () (_ BitVec 64))
(declare-fun temp64_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp64_167 () (_ BitVec 64))
(declare-fun temp64_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp64_169 () (_ BitVec 64))
(declare-fun temp64_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp64_171 () (_ BitVec 64))
(declare-fun temp64_172 () (_ BitVec 64))
(declare-fun temp64_173 () (_ BitVec 64))
(declare-fun temp64_174 () (_ BitVec 64))
(declare-fun temp64_175 () (_ BitVec 64))
(declare-fun temp64_176 () (_ BitVec 64))
(declare-fun temp64_177 () (_ BitVec 64))
(declare-fun temp64_178 () (_ BitVec 64))
(declare-fun temp64_179 () (_ BitVec 64))
(declare-fun temp64_180 () (_ BitVec 64))
(declare-fun temp64_181 () (_ BitVec 64))
(declare-fun temp64_182 () (_ BitVec 64))
(declare-fun temp64_183 () (_ BitVec 64))
(declare-fun temp64_184 () (_ BitVec 64))
(declare-fun temp64_185 () (_ BitVec 64))
(declare-fun temp64_186 () (_ BitVec 64))
(declare-fun temp64_187 () (_ BitVec 64))
(declare-fun temp64_188 () (_ BitVec 64))
(declare-fun temp64_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp64_190 () (_ BitVec 64))
(declare-fun temp64_192 () (_ BitVec 64))
(declare-fun temp64_193 () (_ BitVec 64))
(declare-fun temp64_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp64_194 () (_ BitVec 64))
(declare-fun temp64_195 () (_ BitVec 64))
(declare-fun temp64_197 () (_ BitVec 64))
(declare-fun temp64_198 () (_ BitVec 64))
(declare-fun temp64_196 () (_ BitVec 64))
(declare-fun temp64_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp64_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp64_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp64_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp64_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp64_204 () (_ BitVec 64))
(declare-fun temp64_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp64_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp64_207 () (_ BitVec 64))
(declare-fun temp64_208 () (_ BitVec 64))
(declare-fun temp64_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp64_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp64_211 () (_ BitVec 64))
(declare-fun temp64_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp64_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp64_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp64_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp64_217 () (_ BitVec 64))
(declare-fun temp64_216 () (_ BitVec 64))
(declare-fun temp64_218 () (_ BitVec 64))
(declare-fun var6950378 () (_ BitVec 64))
(declare-fun temp64_220 () (_ BitVec 64))
(declare-fun temp64_219 () (_ BitVec 64))
(declare-fun temp64_221 () (_ BitVec 64))
(assert (= temp64_1 #x0000000000000001))
(assert (= var77203 temp64_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp64_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp64_2)))
(assert (= temp64_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp64_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp64_4 #x0000000000000000))
(assert (= var210941 temp64_4))
(assert (= temp64_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp64_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp64_6 #x0000000000000000))
(assert (= var210986 temp64_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp64_7 #x0000000000000000))
(assert (= temp64_8 temp64_7))
(assert (= temp64_9 (select ARGNAME_padding_NAMEEND_VAL temp64_8)))
(assert (= temp64_10 #x0000000000000001))
(assert (= temp64_11 temp64_10))
(assert (= temp64_12 (select ARGNAME_padding_NAMEEND_VAL temp64_11)))
(assert (= temp64_13 #x0000000000000002))
(assert (= temp64_14 temp64_13))
(assert (= temp64_15 (select ARGNAME_padding_NAMEEND_VAL temp64_14)))
(assert (= temp64_16 #x0000000000000003))
(assert (= temp64_17 temp64_16))
(assert (= temp64_18 (select ARGNAME_padding_NAMEEND_VAL temp64_17)))
(assert (= temp64_19 #x0000000000000004))
(assert (= temp64_20 temp64_19))
(assert (= temp64_21 (select ARGNAME_padding_NAMEEND_VAL temp64_20)))
(assert (= temp64_22 #x0000000000000005))
(assert (= temp64_23 temp64_22))
(assert (= temp64_24 (select ARGNAME_padding_NAMEEND_VAL temp64_23)))
(assert (= temp64_25 #x0000000000000000))
(assert (= temp64_26 #x0000000000000000))
(assert (= temp64_27 temp64_26))
(assert (= temp64_28 (select ARGNAME_padding_NAMEEND_VAL temp64_27)))
(assert (= temp64_29 #x0000000000000000))
(assert (= temp64_30 #x0000000000000001))
(assert (= temp64_31 temp64_30))
(assert (= temp64_32 (select ARGNAME_padding_NAMEEND_VAL temp64_31)))
(assert (= temp64_33 #x0000000000000000))
(assert (= temp64_34 #x0000000000000002))
(assert (= temp64_35 temp64_34))
(assert (= temp64_36 (select ARGNAME_padding_NAMEEND_VAL temp64_35)))
(assert (= temp64_37 #x0000000000000000))
(assert (= temp64_38 #x0000000000000003))
(assert (= temp64_39 temp64_38))
(assert (= temp64_40 (select ARGNAME_padding_NAMEEND_VAL temp64_39)))
(assert (= temp64_41 #x0000000000000000))
(assert (= temp64_42 #x0000000000000004))
(assert (= temp64_43 temp64_42))
(assert (= temp64_44 (select ARGNAME_padding_NAMEEND_VAL temp64_43)))
(assert (= temp64_45 #x0000000000000000))
(assert (= temp64_46 #x0000000000000005))
(assert (= temp64_47 temp64_46))
(assert (= temp64_48 (select ARGNAME_padding_NAMEEND_VAL temp64_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp64_28 temp64_25)
             (bvslt temp64_32 temp64_29)
             (bvslt temp64_36 temp64_33)
             (bvslt temp64_40 temp64_37)
             (bvslt temp64_44 temp64_41)
             (bvslt temp64_48 temp64_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp64_49 #x0000000000000000))
(assert (= var1191714 temp64_49))
(assert (= temp64_50 #x0000000000000000))
(assert (= temp64_51 temp64_50))
(assert (= temp64_52 (select ARGNAME_output_padding_NAMEEND_VAL temp64_51)))
(assert (= temp64_53 #x0000000000000001))
(assert (= temp64_54 temp64_53))
(assert (= temp64_55 (select ARGNAME_output_padding_NAMEEND_VAL temp64_54)))
(assert (= temp64_56 #x0000000000000002))
(assert (= temp64_57 temp64_56))
(assert (= temp64_58 (select ARGNAME_output_padding_NAMEEND_VAL temp64_57)))
(assert (= temp64_59 #x0000000000000003))
(assert (= temp64_60 temp64_59))
(assert (= temp64_61 (select ARGNAME_output_padding_NAMEEND_VAL temp64_60)))
(assert (= temp64_62 #x0000000000000004))
(assert (= temp64_63 temp64_62))
(assert (= temp64_64 (select ARGNAME_output_padding_NAMEEND_VAL temp64_63)))
(assert (= temp64_65 #x0000000000000005))
(assert (= temp64_66 temp64_65))
(assert (= temp64_67 (select ARGNAME_output_padding_NAMEEND_VAL temp64_66)))
(assert (= temp64_68 #x0000000000000000))
(assert (= temp64_69 #x0000000000000000))
(assert (= temp64_70 temp64_69))
(assert (= temp64_71 (select ARGNAME_output_padding_NAMEEND_VAL temp64_70)))
(assert (= temp64_72 #x0000000000000000))
(assert (= temp64_73 #x0000000000000001))
(assert (= temp64_74 temp64_73))
(assert (= temp64_75 (select ARGNAME_output_padding_NAMEEND_VAL temp64_74)))
(assert (= temp64_76 #x0000000000000000))
(assert (= temp64_77 #x0000000000000002))
(assert (= temp64_78 temp64_77))
(assert (= temp64_79 (select ARGNAME_output_padding_NAMEEND_VAL temp64_78)))
(assert (= temp64_80 #x0000000000000000))
(assert (= temp64_81 #x0000000000000003))
(assert (= temp64_82 temp64_81))
(assert (= temp64_83 (select ARGNAME_output_padding_NAMEEND_VAL temp64_82)))
(assert (= temp64_84 #x0000000000000000))
(assert (= temp64_85 #x0000000000000004))
(assert (= temp64_86 temp64_85))
(assert (= temp64_87 (select ARGNAME_output_padding_NAMEEND_VAL temp64_86)))
(assert (= temp64_88 #x0000000000000000))
(assert (= temp64_89 #x0000000000000005))
(assert (= temp64_90 temp64_89))
(assert (= temp64_91 (select ARGNAME_output_padding_NAMEEND_VAL temp64_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp64_71 temp64_68)
             (bvslt temp64_75 temp64_72)
             (bvslt temp64_79 temp64_76)
             (bvslt temp64_83 temp64_80)
             (bvslt temp64_87 temp64_84)
             (bvslt temp64_91 temp64_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp64_92 #x0000000000000000))
(assert (= var1191725 temp64_92))
(assert (= temp64_93 #x0000000000000000))
(assert (= temp64_94 temp64_93))
(assert (= temp64_95 (select ARGNAME_stride_NAMEEND_VAL temp64_94)))
(assert (= temp64_96 #x0000000000000001))
(assert (= temp64_97 temp64_96))
(assert (= temp64_98 (select ARGNAME_stride_NAMEEND_VAL temp64_97)))
(assert (= temp64_99 #x0000000000000002))
(assert (= temp64_100 temp64_99))
(assert (= temp64_101 (select ARGNAME_stride_NAMEEND_VAL temp64_100)))
(assert (= temp64_102 #x0000000000000003))
(assert (= temp64_103 temp64_102))
(assert (= temp64_104 (select ARGNAME_stride_NAMEEND_VAL temp64_103)))
(assert (= temp64_105 #x0000000000000004))
(assert (= temp64_106 temp64_105))
(assert (= temp64_107 (select ARGNAME_stride_NAMEEND_VAL temp64_106)))
(assert (= temp64_108 #x0000000000000005))
(assert (= temp64_109 temp64_108))
(assert (= temp64_110 (select ARGNAME_stride_NAMEEND_VAL temp64_109)))
(assert (= temp64_111 #x0000000000000000))
(assert (= temp64_112 #x0000000000000000))
(assert (= temp64_113 temp64_112))
(assert (= temp64_114 (select ARGNAME_stride_NAMEEND_VAL temp64_113)))
(assert (= temp64_115 #x0000000000000000))
(assert (= temp64_116 #x0000000000000001))
(assert (= temp64_117 temp64_116))
(assert (= temp64_118 (select ARGNAME_stride_NAMEEND_VAL temp64_117)))
(assert (= temp64_119 #x0000000000000000))
(assert (= temp64_120 #x0000000000000002))
(assert (= temp64_121 temp64_120))
(assert (= temp64_122 (select ARGNAME_stride_NAMEEND_VAL temp64_121)))
(assert (= temp64_123 #x0000000000000000))
(assert (= temp64_124 #x0000000000000003))
(assert (= temp64_125 temp64_124))
(assert (= temp64_126 (select ARGNAME_stride_NAMEEND_VAL temp64_125)))
(assert (= temp64_127 #x0000000000000000))
(assert (= temp64_128 #x0000000000000004))
(assert (= temp64_129 temp64_128))
(assert (= temp64_130 (select ARGNAME_stride_NAMEEND_VAL temp64_129)))
(assert (= temp64_131 #x0000000000000000))
(assert (= temp64_132 #x0000000000000005))
(assert (= temp64_133 temp64_132))
(assert (= temp64_134 (select ARGNAME_stride_NAMEEND_VAL temp64_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp64_114 temp64_111)
             (bvsle temp64_118 temp64_115)
             (bvsle temp64_122 temp64_119)
             (bvsle temp64_126 temp64_123)
             (bvsle temp64_130 temp64_127)
             (bvsle temp64_134 temp64_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp64_135 #x0000000000000000))
(assert (= var1191735 temp64_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp64_136 #x0000000000000001))
(assert (= var1191747 temp64_136))
(assert (= temp64_137 #x0000000000000000))
(assert (= var1179826 temp64_137))
(assert (= temp64_138 #x0000000000000000))
(assert (= temp64_139 temp64_138))
(assert (= temp64_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp64_139)))
(assert (= temp64_141 #x0000000000000001))
(assert (= temp64_142 temp64_141))
(assert (= temp64_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp64_142)))
(assert (= temp64_144 #x0000000000000002))
(assert (= temp64_145 temp64_144))
(assert (= temp64_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp64_145)))
(assert (= temp64_147 #x0000000000000003))
(assert (= temp64_148 temp64_147))
(assert (= temp64_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp64_148)))
(assert (= temp64_150 #x0000000000000004))
(assert (= temp64_151 temp64_150))
(assert (= temp64_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp64_151)))
(assert (= temp64_153 #x0000000000000005))
(assert (= temp64_154 temp64_153))
(assert (= temp64_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp64_154)))
(assert (= temp64_157 var1179826))
(assert (= temp64_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp64_157)))
(assert (= temp64_156 temp64_158))
(assert (= var1191780
   (ite (bvslt temp64_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp64_159 #x0000000000000000))
(assert (= var1191780 temp64_159))
(assert (= temp64_160 #x0000000000000000))
(assert (= var1179826 temp64_160))
(assert (= temp64_162 var1179826))
(assert (= temp64_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp64_162)))
(assert (= temp64_161 temp64_163))
(assert (= var1191802 (bvsmod temp64_161 ARGNAME_groups_NAMEEND)))
(assert (= temp64_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp64_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp64_165 #x0000000000000001))
(assert (= var1191803 temp64_165))
(assert (= temp64_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp64_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp64_167 #x0000000000000001))
(assert (= var1191823 temp64_167))
(assert (= temp64_168 #x0000000000000001))
(assert (= var1180714 temp64_168))
(assert (= temp64_169 #x0000000000000000))
(assert (= temp64_170 temp64_169))
(assert (= temp64_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_170)))
(assert (= temp64_172 #x0000000000000001))
(assert (= temp64_173 temp64_172))
(assert (= temp64_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_173)))
(assert (= temp64_175 #x0000000000000002))
(assert (= temp64_176 temp64_175))
(assert (= temp64_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_176)))
(assert (= temp64_178 #x0000000000000003))
(assert (= temp64_179 temp64_178))
(assert (= temp64_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_179)))
(assert (= temp64_181 #x0000000000000004))
(assert (= temp64_182 temp64_181))
(assert (= temp64_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_182)))
(assert (= temp64_184 #x0000000000000005))
(assert (= temp64_185 temp64_184))
(assert (= temp64_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_185)))
(assert (= temp64_187 #x0000000000000000))
(assert (= temp64_188
   (ite (bvslt var1180714 temp64_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp64_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_188)))
(assert (= var1191831 temp64_189))
(assert (bvslt (ite (bvslt var1180714 temp64_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp64_190 #x0000000000000001))
(assert (= var1180714 temp64_190))
(assert (= temp64_192 var1180714))
(assert (= temp64_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp64_192)))
(assert (= temp64_191 temp64_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp64_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp64_194 #x0000000000000001))
(assert (= var1191836 temp64_194))
(assert (= temp64_195 #x0000000000000000))
(assert (= var1179826 temp64_195))
(assert (= temp64_197 var1179826))
(assert (= temp64_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp64_197)))
(assert (= temp64_196 temp64_198))
(assert (= temp64_199 #x0000000000000002))
(assert (= var1586025 temp64_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp64_200 #x0000000000000001))
(assert (= var1191993 temp64_200))
(assert (= temp64_201 #x0000000000000001))
(assert (= var2700303 temp64_201))
(assert (= temp64_202 #x0000000000000001))
(assert (= var2962447 temp64_202))
(assert (= temp64_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp64_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp64_204 #x0000000000000001))
(assert (= var211058 temp64_204))
(assert (= temp64_205 #x0000000000000001))
(assert (= var211188 temp64_205))
(assert (= var3879401 var211188))
(assert (= temp64_206 #x0000000000000000))
(assert (= var3866802 temp64_206))
(assert (= temp64_207 #x0000000000000000))
(assert (= temp64_208
   (ite (bvslt var3866802 temp64_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp64_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_208)))
(assert (= var3879420 temp64_209))
(assert (bvslt (ite (bvslt var3866802 temp64_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp64_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp64_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp64_211 #x0000000000000001))
(assert (= var3879421 temp64_211))
(assert (= temp64_212 #x0000000000000000))
(assert (= var4079423 temp64_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp64_213 #x0000000000000002))
(assert (= var4208259 temp64_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp64_214 #x0000000000000000))
(assert (= var4273820 temp64_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211494 var210913))
(assert (= temp64_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp64_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp64_217 #x0000000000000001))
(assert (= temp64_216 temp64_217))
(assert (= temp64_218 #x0000000000000001))
(assert (= var6950378 temp64_218))
(assert (= temp64_220 #xffffffffffffffff))
(assert (= temp64_219 temp64_220))
(assert (= temp64_221 #x0000000000000001))
(assert (= var211058 temp64_221))
(model-add temp64_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp64_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp64_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp64_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





