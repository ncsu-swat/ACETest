(declare-fun temp10785_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10785_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10785_3 () (_ BitVec 64))
(declare-fun temp10785_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10785_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10785_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10785_7 () (_ BitVec 64))
(declare-fun temp10785_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10785_9 () (_ BitVec 64))
(declare-fun temp10785_10 () (_ BitVec 64))
(declare-fun temp10785_11 () (_ BitVec 64))
(declare-fun temp10785_12 () (_ BitVec 64))
(declare-fun temp10785_13 () (_ BitVec 64))
(declare-fun temp10785_14 () (_ BitVec 64))
(declare-fun temp10785_15 () (_ BitVec 64))
(declare-fun temp10785_16 () (_ BitVec 64))
(declare-fun temp10785_17 () (_ BitVec 64))
(declare-fun temp10785_18 () (_ BitVec 64))
(declare-fun temp10785_19 () (_ BitVec 64))
(declare-fun temp10785_20 () (_ BitVec 64))
(declare-fun temp10785_21 () (_ BitVec 64))
(declare-fun temp10785_22 () (_ BitVec 64))
(declare-fun temp10785_23 () (_ BitVec 64))
(declare-fun temp10785_24 () (_ BitVec 64))
(declare-fun temp10785_25 () (_ BitVec 64))
(declare-fun temp10785_26 () (_ BitVec 64))
(declare-fun temp10785_27 () (_ BitVec 64))
(declare-fun temp10785_28 () (_ BitVec 64))
(declare-fun temp10785_29 () (_ BitVec 64))
(declare-fun temp10785_30 () (_ BitVec 64))
(declare-fun temp10785_31 () (_ BitVec 64))
(declare-fun temp10785_32 () (_ BitVec 64))
(declare-fun temp10785_33 () (_ BitVec 64))
(declare-fun temp10785_34 () (_ BitVec 64))
(declare-fun temp10785_35 () (_ BitVec 64))
(declare-fun temp10785_36 () (_ BitVec 64))
(declare-fun temp10785_37 () (_ BitVec 64))
(declare-fun temp10785_38 () (_ BitVec 64))
(declare-fun temp10785_39 () (_ BitVec 64))
(declare-fun temp10785_40 () (_ BitVec 64))
(declare-fun temp10785_41 () (_ BitVec 64))
(declare-fun temp10785_42 () (_ BitVec 64))
(declare-fun temp10785_43 () (_ BitVec 64))
(declare-fun temp10785_44 () (_ BitVec 64))
(declare-fun temp10785_45 () (_ BitVec 64))
(declare-fun temp10785_46 () (_ BitVec 64))
(declare-fun temp10785_47 () (_ BitVec 64))
(declare-fun temp10785_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10785_49 () (_ BitVec 64))
(declare-fun temp10785_50 () (_ BitVec 64))
(declare-fun temp10785_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10785_52 () (_ BitVec 64))
(declare-fun temp10785_53 () (_ BitVec 64))
(declare-fun temp10785_54 () (_ BitVec 64))
(declare-fun temp10785_55 () (_ BitVec 64))
(declare-fun temp10785_56 () (_ BitVec 64))
(declare-fun temp10785_57 () (_ BitVec 64))
(declare-fun temp10785_58 () (_ BitVec 64))
(declare-fun temp10785_59 () (_ BitVec 64))
(declare-fun temp10785_60 () (_ BitVec 64))
(declare-fun temp10785_61 () (_ BitVec 64))
(declare-fun temp10785_62 () (_ BitVec 64))
(declare-fun temp10785_63 () (_ BitVec 64))
(declare-fun temp10785_64 () (_ BitVec 64))
(declare-fun temp10785_65 () (_ BitVec 64))
(declare-fun temp10785_66 () (_ BitVec 64))
(declare-fun temp10785_67 () (_ BitVec 64))
(declare-fun temp10785_68 () (_ BitVec 64))
(declare-fun temp10785_69 () (_ BitVec 64))
(declare-fun temp10785_70 () (_ BitVec 64))
(declare-fun temp10785_71 () (_ BitVec 64))
(declare-fun temp10785_72 () (_ BitVec 64))
(declare-fun temp10785_73 () (_ BitVec 64))
(declare-fun temp10785_74 () (_ BitVec 64))
(declare-fun temp10785_75 () (_ BitVec 64))
(declare-fun temp10785_76 () (_ BitVec 64))
(declare-fun temp10785_77 () (_ BitVec 64))
(declare-fun temp10785_78 () (_ BitVec 64))
(declare-fun temp10785_79 () (_ BitVec 64))
(declare-fun temp10785_80 () (_ BitVec 64))
(declare-fun temp10785_81 () (_ BitVec 64))
(declare-fun temp10785_82 () (_ BitVec 64))
(declare-fun temp10785_83 () (_ BitVec 64))
(declare-fun temp10785_84 () (_ BitVec 64))
(declare-fun temp10785_85 () (_ BitVec 64))
(declare-fun temp10785_86 () (_ BitVec 64))
(declare-fun temp10785_87 () (_ BitVec 64))
(declare-fun temp10785_88 () (_ BitVec 64))
(declare-fun temp10785_89 () (_ BitVec 64))
(declare-fun temp10785_90 () (_ BitVec 64))
(declare-fun temp10785_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10785_92 () (_ BitVec 64))
(declare-fun temp10785_93 () (_ BitVec 64))
(declare-fun temp10785_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10785_95 () (_ BitVec 64))
(declare-fun temp10785_96 () (_ BitVec 64))
(declare-fun temp10785_97 () (_ BitVec 64))
(declare-fun temp10785_98 () (_ BitVec 64))
(declare-fun temp10785_99 () (_ BitVec 64))
(declare-fun temp10785_100 () (_ BitVec 64))
(declare-fun temp10785_101 () (_ BitVec 64))
(declare-fun temp10785_102 () (_ BitVec 64))
(declare-fun temp10785_103 () (_ BitVec 64))
(declare-fun temp10785_104 () (_ BitVec 64))
(declare-fun temp10785_105 () (_ BitVec 64))
(declare-fun temp10785_106 () (_ BitVec 64))
(declare-fun temp10785_107 () (_ BitVec 64))
(declare-fun temp10785_108 () (_ BitVec 64))
(declare-fun temp10785_109 () (_ BitVec 64))
(declare-fun temp10785_110 () (_ BitVec 64))
(declare-fun temp10785_111 () (_ BitVec 64))
(declare-fun temp10785_112 () (_ BitVec 64))
(declare-fun temp10785_113 () (_ BitVec 64))
(declare-fun temp10785_114 () (_ BitVec 64))
(declare-fun temp10785_115 () (_ BitVec 64))
(declare-fun temp10785_116 () (_ BitVec 64))
(declare-fun temp10785_117 () (_ BitVec 64))
(declare-fun temp10785_118 () (_ BitVec 64))
(declare-fun temp10785_119 () (_ BitVec 64))
(declare-fun temp10785_120 () (_ BitVec 64))
(declare-fun temp10785_121 () (_ BitVec 64))
(declare-fun temp10785_122 () (_ BitVec 64))
(declare-fun temp10785_123 () (_ BitVec 64))
(declare-fun temp10785_124 () (_ BitVec 64))
(declare-fun temp10785_125 () (_ BitVec 64))
(declare-fun temp10785_126 () (_ BitVec 64))
(declare-fun temp10785_127 () (_ BitVec 64))
(declare-fun temp10785_128 () (_ BitVec 64))
(declare-fun temp10785_129 () (_ BitVec 64))
(declare-fun temp10785_130 () (_ BitVec 64))
(declare-fun temp10785_131 () (_ BitVec 64))
(declare-fun temp10785_132 () (_ BitVec 64))
(declare-fun temp10785_133 () (_ BitVec 64))
(declare-fun temp10785_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10785_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10785_136 () (_ BitVec 64))
(declare-fun temp10785_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10785_138 () (_ BitVec 64))
(declare-fun temp10785_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10785_140 () (_ BitVec 64))
(declare-fun temp10785_141 () (_ BitVec 64))
(declare-fun temp10785_142 () (_ BitVec 64))
(declare-fun temp10785_143 () (_ BitVec 64))
(declare-fun temp10785_144 () (_ BitVec 64))
(declare-fun temp10785_145 () (_ BitVec 64))
(declare-fun temp10785_146 () (_ BitVec 64))
(declare-fun temp10785_147 () (_ BitVec 64))
(declare-fun temp10785_148 () (_ BitVec 64))
(declare-fun temp10785_149 () (_ BitVec 64))
(declare-fun temp10785_150 () (_ BitVec 64))
(declare-fun temp10785_151 () (_ BitVec 64))
(declare-fun temp10785_152 () (_ BitVec 64))
(declare-fun temp10785_153 () (_ BitVec 64))
(declare-fun temp10785_154 () (_ BitVec 64))
(declare-fun temp10785_155 () (_ BitVec 64))
(declare-fun temp10785_157 () (_ BitVec 64))
(declare-fun temp10785_158 () (_ BitVec 64))
(declare-fun temp10785_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10785_159 () (_ BitVec 64))
(declare-fun temp10785_160 () (_ BitVec 64))
(declare-fun temp10785_162 () (_ BitVec 64))
(declare-fun temp10785_163 () (_ BitVec 64))
(declare-fun temp10785_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10785_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10785_165 () (_ BitVec 64))
(declare-fun temp10785_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10785_167 () (_ BitVec 64))
(declare-fun temp10785_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10785_169 () (_ BitVec 64))
(declare-fun temp10785_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10785_171 () (_ BitVec 64))
(declare-fun temp10785_172 () (_ BitVec 64))
(declare-fun temp10785_173 () (_ BitVec 64))
(declare-fun temp10785_174 () (_ BitVec 64))
(declare-fun temp10785_175 () (_ BitVec 64))
(declare-fun temp10785_176 () (_ BitVec 64))
(declare-fun temp10785_177 () (_ BitVec 64))
(declare-fun temp10785_178 () (_ BitVec 64))
(declare-fun temp10785_179 () (_ BitVec 64))
(declare-fun temp10785_180 () (_ BitVec 64))
(declare-fun temp10785_181 () (_ BitVec 64))
(declare-fun temp10785_182 () (_ BitVec 64))
(declare-fun temp10785_183 () (_ BitVec 64))
(declare-fun temp10785_184 () (_ BitVec 64))
(declare-fun temp10785_185 () (_ BitVec 64))
(declare-fun temp10785_186 () (_ BitVec 64))
(declare-fun temp10785_187 () (_ BitVec 64))
(declare-fun temp10785_188 () (_ BitVec 64))
(declare-fun temp10785_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10785_190 () (_ BitVec 64))
(declare-fun temp10785_192 () (_ BitVec 64))
(declare-fun temp10785_193 () (_ BitVec 64))
(declare-fun temp10785_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10785_194 () (_ BitVec 64))
(declare-fun temp10785_195 () (_ BitVec 64))
(declare-fun temp10785_197 () (_ BitVec 64))
(declare-fun temp10785_198 () (_ BitVec 64))
(declare-fun temp10785_196 () (_ BitVec 64))
(declare-fun temp10785_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10785_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10785_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10785_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10785_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10785_204 () (_ BitVec 64))
(declare-fun temp10785_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10785_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10785_207 () (_ BitVec 64))
(declare-fun temp10785_208 () (_ BitVec 64))
(declare-fun temp10785_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10785_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10785_211 () (_ BitVec 64))
(declare-fun temp10785_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10785_213 () (_ BitVec 64))
(declare-fun temp10785_214 () (_ BitVec 64))
(declare-fun temp10785_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10785_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10785_217 () (_ BitVec 64))
(declare-fun temp10785_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10785_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10785_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5190032 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun temp10785_221 () (_ BitVec 64))
(assert (= temp10785_1 #x0000000000000001))
(assert (= var77203 temp10785_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10785_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10785_2)))
(assert (= temp10785_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10785_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10785_4 #x0000000000000000))
(assert (= var210941 temp10785_4))
(assert (= temp10785_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10785_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10785_6 #x0000000000000000))
(assert (= var210986 temp10785_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10785_7 #x0000000000000000))
(assert (= temp10785_8 temp10785_7))
(assert (= temp10785_9 (select ARGNAME_padding_NAMEEND_VAL temp10785_8)))
(assert (= temp10785_10 #x0000000000000001))
(assert (= temp10785_11 temp10785_10))
(assert (= temp10785_12 (select ARGNAME_padding_NAMEEND_VAL temp10785_11)))
(assert (= temp10785_13 #x0000000000000002))
(assert (= temp10785_14 temp10785_13))
(assert (= temp10785_15 (select ARGNAME_padding_NAMEEND_VAL temp10785_14)))
(assert (= temp10785_16 #x0000000000000003))
(assert (= temp10785_17 temp10785_16))
(assert (= temp10785_18 (select ARGNAME_padding_NAMEEND_VAL temp10785_17)))
(assert (= temp10785_19 #x0000000000000004))
(assert (= temp10785_20 temp10785_19))
(assert (= temp10785_21 (select ARGNAME_padding_NAMEEND_VAL temp10785_20)))
(assert (= temp10785_22 #x0000000000000005))
(assert (= temp10785_23 temp10785_22))
(assert (= temp10785_24 (select ARGNAME_padding_NAMEEND_VAL temp10785_23)))
(assert (= temp10785_25 #x0000000000000000))
(assert (= temp10785_26 #x0000000000000000))
(assert (= temp10785_27 temp10785_26))
(assert (= temp10785_28 (select ARGNAME_padding_NAMEEND_VAL temp10785_27)))
(assert (= temp10785_29 #x0000000000000000))
(assert (= temp10785_30 #x0000000000000001))
(assert (= temp10785_31 temp10785_30))
(assert (= temp10785_32 (select ARGNAME_padding_NAMEEND_VAL temp10785_31)))
(assert (= temp10785_33 #x0000000000000000))
(assert (= temp10785_34 #x0000000000000002))
(assert (= temp10785_35 temp10785_34))
(assert (= temp10785_36 (select ARGNAME_padding_NAMEEND_VAL temp10785_35)))
(assert (= temp10785_37 #x0000000000000000))
(assert (= temp10785_38 #x0000000000000003))
(assert (= temp10785_39 temp10785_38))
(assert (= temp10785_40 (select ARGNAME_padding_NAMEEND_VAL temp10785_39)))
(assert (= temp10785_41 #x0000000000000000))
(assert (= temp10785_42 #x0000000000000004))
(assert (= temp10785_43 temp10785_42))
(assert (= temp10785_44 (select ARGNAME_padding_NAMEEND_VAL temp10785_43)))
(assert (= temp10785_45 #x0000000000000000))
(assert (= temp10785_46 #x0000000000000005))
(assert (= temp10785_47 temp10785_46))
(assert (= temp10785_48 (select ARGNAME_padding_NAMEEND_VAL temp10785_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10785_28 temp10785_25)
             (bvslt temp10785_32 temp10785_29)
             (bvslt temp10785_36 temp10785_33)
             (bvslt temp10785_40 temp10785_37)
             (bvslt temp10785_44 temp10785_41)
             (bvslt temp10785_48 temp10785_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10785_49 #x0000000000000000))
(assert (= var1191714 temp10785_49))
(assert (= temp10785_50 #x0000000000000000))
(assert (= temp10785_51 temp10785_50))
(assert (= temp10785_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10785_51)))
(assert (= temp10785_53 #x0000000000000001))
(assert (= temp10785_54 temp10785_53))
(assert (= temp10785_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10785_54)))
(assert (= temp10785_56 #x0000000000000002))
(assert (= temp10785_57 temp10785_56))
(assert (= temp10785_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10785_57)))
(assert (= temp10785_59 #x0000000000000003))
(assert (= temp10785_60 temp10785_59))
(assert (= temp10785_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10785_60)))
(assert (= temp10785_62 #x0000000000000004))
(assert (= temp10785_63 temp10785_62))
(assert (= temp10785_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10785_63)))
(assert (= temp10785_65 #x0000000000000005))
(assert (= temp10785_66 temp10785_65))
(assert (= temp10785_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10785_66)))
(assert (= temp10785_68 #x0000000000000000))
(assert (= temp10785_69 #x0000000000000000))
(assert (= temp10785_70 temp10785_69))
(assert (= temp10785_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10785_70)))
(assert (= temp10785_72 #x0000000000000000))
(assert (= temp10785_73 #x0000000000000001))
(assert (= temp10785_74 temp10785_73))
(assert (= temp10785_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10785_74)))
(assert (= temp10785_76 #x0000000000000000))
(assert (= temp10785_77 #x0000000000000002))
(assert (= temp10785_78 temp10785_77))
(assert (= temp10785_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10785_78)))
(assert (= temp10785_80 #x0000000000000000))
(assert (= temp10785_81 #x0000000000000003))
(assert (= temp10785_82 temp10785_81))
(assert (= temp10785_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10785_82)))
(assert (= temp10785_84 #x0000000000000000))
(assert (= temp10785_85 #x0000000000000004))
(assert (= temp10785_86 temp10785_85))
(assert (= temp10785_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10785_86)))
(assert (= temp10785_88 #x0000000000000000))
(assert (= temp10785_89 #x0000000000000005))
(assert (= temp10785_90 temp10785_89))
(assert (= temp10785_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10785_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10785_71 temp10785_68)
             (bvslt temp10785_75 temp10785_72)
             (bvslt temp10785_79 temp10785_76)
             (bvslt temp10785_83 temp10785_80)
             (bvslt temp10785_87 temp10785_84)
             (bvslt temp10785_91 temp10785_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10785_92 #x0000000000000000))
(assert (= var1191725 temp10785_92))
(assert (= temp10785_93 #x0000000000000000))
(assert (= temp10785_94 temp10785_93))
(assert (= temp10785_95 (select ARGNAME_stride_NAMEEND_VAL temp10785_94)))
(assert (= temp10785_96 #x0000000000000001))
(assert (= temp10785_97 temp10785_96))
(assert (= temp10785_98 (select ARGNAME_stride_NAMEEND_VAL temp10785_97)))
(assert (= temp10785_99 #x0000000000000002))
(assert (= temp10785_100 temp10785_99))
(assert (= temp10785_101 (select ARGNAME_stride_NAMEEND_VAL temp10785_100)))
(assert (= temp10785_102 #x0000000000000003))
(assert (= temp10785_103 temp10785_102))
(assert (= temp10785_104 (select ARGNAME_stride_NAMEEND_VAL temp10785_103)))
(assert (= temp10785_105 #x0000000000000004))
(assert (= temp10785_106 temp10785_105))
(assert (= temp10785_107 (select ARGNAME_stride_NAMEEND_VAL temp10785_106)))
(assert (= temp10785_108 #x0000000000000005))
(assert (= temp10785_109 temp10785_108))
(assert (= temp10785_110 (select ARGNAME_stride_NAMEEND_VAL temp10785_109)))
(assert (= temp10785_111 #x0000000000000000))
(assert (= temp10785_112 #x0000000000000000))
(assert (= temp10785_113 temp10785_112))
(assert (= temp10785_114 (select ARGNAME_stride_NAMEEND_VAL temp10785_113)))
(assert (= temp10785_115 #x0000000000000000))
(assert (= temp10785_116 #x0000000000000001))
(assert (= temp10785_117 temp10785_116))
(assert (= temp10785_118 (select ARGNAME_stride_NAMEEND_VAL temp10785_117)))
(assert (= temp10785_119 #x0000000000000000))
(assert (= temp10785_120 #x0000000000000002))
(assert (= temp10785_121 temp10785_120))
(assert (= temp10785_122 (select ARGNAME_stride_NAMEEND_VAL temp10785_121)))
(assert (= temp10785_123 #x0000000000000000))
(assert (= temp10785_124 #x0000000000000003))
(assert (= temp10785_125 temp10785_124))
(assert (= temp10785_126 (select ARGNAME_stride_NAMEEND_VAL temp10785_125)))
(assert (= temp10785_127 #x0000000000000000))
(assert (= temp10785_128 #x0000000000000004))
(assert (= temp10785_129 temp10785_128))
(assert (= temp10785_130 (select ARGNAME_stride_NAMEEND_VAL temp10785_129)))
(assert (= temp10785_131 #x0000000000000000))
(assert (= temp10785_132 #x0000000000000005))
(assert (= temp10785_133 temp10785_132))
(assert (= temp10785_134 (select ARGNAME_stride_NAMEEND_VAL temp10785_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10785_114 temp10785_111)
             (bvsle temp10785_118 temp10785_115)
             (bvsle temp10785_122 temp10785_119)
             (bvsle temp10785_126 temp10785_123)
             (bvsle temp10785_130 temp10785_127)
             (bvsle temp10785_134 temp10785_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10785_135 #x0000000000000000))
(assert (= var1191735 temp10785_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10785_136 #x0000000000000001))
(assert (= var1191747 temp10785_136))
(assert (= temp10785_137 #x0000000000000000))
(assert (= var1179826 temp10785_137))
(assert (= temp10785_138 #x0000000000000000))
(assert (= temp10785_139 temp10785_138))
(assert (= temp10785_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10785_139)))
(assert (= temp10785_141 #x0000000000000001))
(assert (= temp10785_142 temp10785_141))
(assert (= temp10785_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10785_142)))
(assert (= temp10785_144 #x0000000000000002))
(assert (= temp10785_145 temp10785_144))
(assert (= temp10785_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10785_145)))
(assert (= temp10785_147 #x0000000000000003))
(assert (= temp10785_148 temp10785_147))
(assert (= temp10785_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10785_148)))
(assert (= temp10785_150 #x0000000000000004))
(assert (= temp10785_151 temp10785_150))
(assert (= temp10785_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10785_151)))
(assert (= temp10785_153 #x0000000000000005))
(assert (= temp10785_154 temp10785_153))
(assert (= temp10785_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10785_154)))
(assert (= temp10785_157 var1179826))
(assert (= temp10785_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10785_157)))
(assert (= temp10785_156 temp10785_158))
(assert (= var1191780
   (ite (bvslt temp10785_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10785_159 #x0000000000000000))
(assert (= var1191780 temp10785_159))
(assert (= temp10785_160 #x0000000000000000))
(assert (= var1179826 temp10785_160))
(assert (= temp10785_162 var1179826))
(assert (= temp10785_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10785_162)))
(assert (= temp10785_161 temp10785_163))
(assert (= var1191802 (bvsmod temp10785_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10785_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10785_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10785_165 #x0000000000000001))
(assert (= var1191803 temp10785_165))
(assert (= temp10785_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10785_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10785_167 #x0000000000000001))
(assert (= var1191823 temp10785_167))
(assert (= temp10785_168 #x0000000000000001))
(assert (= var1180714 temp10785_168))
(assert (= temp10785_169 #x0000000000000000))
(assert (= temp10785_170 temp10785_169))
(assert (= temp10785_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10785_170)))
(assert (= temp10785_172 #x0000000000000001))
(assert (= temp10785_173 temp10785_172))
(assert (= temp10785_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10785_173)))
(assert (= temp10785_175 #x0000000000000002))
(assert (= temp10785_176 temp10785_175))
(assert (= temp10785_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10785_176)))
(assert (= temp10785_178 #x0000000000000003))
(assert (= temp10785_179 temp10785_178))
(assert (= temp10785_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10785_179)))
(assert (= temp10785_181 #x0000000000000004))
(assert (= temp10785_182 temp10785_181))
(assert (= temp10785_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10785_182)))
(assert (= temp10785_184 #x0000000000000005))
(assert (= temp10785_185 temp10785_184))
(assert (= temp10785_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10785_185)))
(assert (= temp10785_187 #x0000000000000000))
(assert (= temp10785_188
   (ite (bvslt var1180714 temp10785_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10785_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10785_188)))
(assert (= var1191831 temp10785_189))
(assert (bvslt (ite (bvslt var1180714 temp10785_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10785_190 #x0000000000000001))
(assert (= var1180714 temp10785_190))
(assert (= temp10785_192 var1180714))
(assert (= temp10785_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10785_192)))
(assert (= temp10785_191 temp10785_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10785_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10785_194 #x0000000000000001))
(assert (= var1191836 temp10785_194))
(assert (= temp10785_195 #x0000000000000000))
(assert (= var1179826 temp10785_195))
(assert (= temp10785_197 var1179826))
(assert (= temp10785_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10785_197)))
(assert (= temp10785_196 temp10785_198))
(assert (= temp10785_199 #x0000000000000002))
(assert (= var1586025 temp10785_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10785_200 #x0000000000000001))
(assert (= var1191993 temp10785_200))
(assert (= temp10785_201 #x0000000000000001))
(assert (= var2700303 temp10785_201))
(assert (= temp10785_202 #x0000000000000001))
(assert (= var2962447 temp10785_202))
(assert (= temp10785_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10785_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10785_204 #x0000000000000001))
(assert (= var211058 temp10785_204))
(assert (= temp10785_205 #x0000000000000001))
(assert (= var211188 temp10785_205))
(assert (= var3879401 var211188))
(assert (= temp10785_206 #x0000000000000000))
(assert (= var3866802 temp10785_206))
(assert (= temp10785_207 #x0000000000000000))
(assert (= temp10785_208
   (ite (bvslt var3866802 temp10785_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10785_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10785_208)))
(assert (= var3879420 temp10785_209))
(assert (bvslt (ite (bvslt var3866802 temp10785_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10785_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10785_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10785_211 #x0000000000000000))
(assert (= var3879421 temp10785_211))
(assert (= temp10785_212 #x0000000000000001))
(assert (= var3867690 temp10785_212))
(assert (= temp10785_213 #x0000000000000000))
(assert (= temp10785_214
   (ite (bvslt var3867690 temp10785_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10785_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10785_214)))
(assert (= var3879423 temp10785_215))
(assert (bvslt (ite (bvslt var3867690 temp10785_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10785_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10785_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10785_217 #x0000000000000001))
(assert (= var3879424 temp10785_217))
(assert (= temp10785_218 #x0000000000000000))
(assert (= var4133117 temp10785_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10785_219 #x0000000000000002))
(assert (= var4339331 temp10785_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10785_220 #x0000000000000000))
(assert (= var4404892 temp10785_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5190032 var211201))
(assert (= var5452176 var211201))
(assert (= temp10785_221 #x0000000000000001))
(assert (= var211058 temp10785_221))
(model-add temp10785_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10785_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10785_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10785_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




