(declare-fun temp50_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp50_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp50_3 () (_ BitVec 64))
(declare-fun temp50_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp50_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp50_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp50_7 () (_ BitVec 64))
(declare-fun temp50_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp50_9 () (_ BitVec 64))
(declare-fun temp50_10 () (_ BitVec 64))
(declare-fun temp50_11 () (_ BitVec 64))
(declare-fun temp50_12 () (_ BitVec 64))
(declare-fun temp50_13 () (_ BitVec 64))
(declare-fun temp50_14 () (_ BitVec 64))
(declare-fun temp50_15 () (_ BitVec 64))
(declare-fun temp50_16 () (_ BitVec 64))
(declare-fun temp50_17 () (_ BitVec 64))
(declare-fun temp50_18 () (_ BitVec 64))
(declare-fun temp50_19 () (_ BitVec 64))
(declare-fun temp50_20 () (_ BitVec 64))
(declare-fun temp50_21 () (_ BitVec 64))
(declare-fun temp50_22 () (_ BitVec 64))
(declare-fun temp50_23 () (_ BitVec 64))
(declare-fun temp50_24 () (_ BitVec 64))
(declare-fun temp50_25 () (_ BitVec 64))
(declare-fun temp50_26 () (_ BitVec 64))
(declare-fun temp50_27 () (_ BitVec 64))
(declare-fun temp50_28 () (_ BitVec 64))
(declare-fun temp50_29 () (_ BitVec 64))
(declare-fun temp50_30 () (_ BitVec 64))
(declare-fun temp50_31 () (_ BitVec 64))
(declare-fun temp50_32 () (_ BitVec 64))
(declare-fun temp50_33 () (_ BitVec 64))
(declare-fun temp50_34 () (_ BitVec 64))
(declare-fun temp50_35 () (_ BitVec 64))
(declare-fun temp50_36 () (_ BitVec 64))
(declare-fun temp50_37 () (_ BitVec 64))
(declare-fun temp50_38 () (_ BitVec 64))
(declare-fun temp50_39 () (_ BitVec 64))
(declare-fun temp50_40 () (_ BitVec 64))
(declare-fun temp50_41 () (_ BitVec 64))
(declare-fun temp50_42 () (_ BitVec 64))
(declare-fun temp50_43 () (_ BitVec 64))
(declare-fun temp50_44 () (_ BitVec 64))
(declare-fun temp50_45 () (_ BitVec 64))
(declare-fun temp50_46 () (_ BitVec 64))
(declare-fun temp50_47 () (_ BitVec 64))
(declare-fun temp50_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp50_49 () (_ BitVec 64))
(declare-fun temp50_50 () (_ BitVec 64))
(declare-fun temp50_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp50_52 () (_ BitVec 64))
(declare-fun temp50_53 () (_ BitVec 64))
(declare-fun temp50_54 () (_ BitVec 64))
(declare-fun temp50_55 () (_ BitVec 64))
(declare-fun temp50_56 () (_ BitVec 64))
(declare-fun temp50_57 () (_ BitVec 64))
(declare-fun temp50_58 () (_ BitVec 64))
(declare-fun temp50_59 () (_ BitVec 64))
(declare-fun temp50_60 () (_ BitVec 64))
(declare-fun temp50_61 () (_ BitVec 64))
(declare-fun temp50_62 () (_ BitVec 64))
(declare-fun temp50_63 () (_ BitVec 64))
(declare-fun temp50_64 () (_ BitVec 64))
(declare-fun temp50_65 () (_ BitVec 64))
(declare-fun temp50_66 () (_ BitVec 64))
(declare-fun temp50_67 () (_ BitVec 64))
(declare-fun temp50_68 () (_ BitVec 64))
(declare-fun temp50_69 () (_ BitVec 64))
(declare-fun temp50_70 () (_ BitVec 64))
(declare-fun temp50_71 () (_ BitVec 64))
(declare-fun temp50_72 () (_ BitVec 64))
(declare-fun temp50_73 () (_ BitVec 64))
(declare-fun temp50_74 () (_ BitVec 64))
(declare-fun temp50_75 () (_ BitVec 64))
(declare-fun temp50_76 () (_ BitVec 64))
(declare-fun temp50_77 () (_ BitVec 64))
(declare-fun temp50_78 () (_ BitVec 64))
(declare-fun temp50_79 () (_ BitVec 64))
(declare-fun temp50_80 () (_ BitVec 64))
(declare-fun temp50_81 () (_ BitVec 64))
(declare-fun temp50_82 () (_ BitVec 64))
(declare-fun temp50_83 () (_ BitVec 64))
(declare-fun temp50_84 () (_ BitVec 64))
(declare-fun temp50_85 () (_ BitVec 64))
(declare-fun temp50_86 () (_ BitVec 64))
(declare-fun temp50_87 () (_ BitVec 64))
(declare-fun temp50_88 () (_ BitVec 64))
(declare-fun temp50_89 () (_ BitVec 64))
(declare-fun temp50_90 () (_ BitVec 64))
(declare-fun temp50_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp50_92 () (_ BitVec 64))
(declare-fun temp50_93 () (_ BitVec 64))
(declare-fun temp50_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp50_95 () (_ BitVec 64))
(declare-fun temp50_96 () (_ BitVec 64))
(declare-fun temp50_97 () (_ BitVec 64))
(declare-fun temp50_98 () (_ BitVec 64))
(declare-fun temp50_99 () (_ BitVec 64))
(declare-fun temp50_100 () (_ BitVec 64))
(declare-fun temp50_101 () (_ BitVec 64))
(declare-fun temp50_102 () (_ BitVec 64))
(declare-fun temp50_103 () (_ BitVec 64))
(declare-fun temp50_104 () (_ BitVec 64))
(declare-fun temp50_105 () (_ BitVec 64))
(declare-fun temp50_106 () (_ BitVec 64))
(declare-fun temp50_107 () (_ BitVec 64))
(declare-fun temp50_108 () (_ BitVec 64))
(declare-fun temp50_109 () (_ BitVec 64))
(declare-fun temp50_110 () (_ BitVec 64))
(declare-fun temp50_111 () (_ BitVec 64))
(declare-fun temp50_112 () (_ BitVec 64))
(declare-fun temp50_113 () (_ BitVec 64))
(declare-fun temp50_114 () (_ BitVec 64))
(declare-fun temp50_115 () (_ BitVec 64))
(declare-fun temp50_116 () (_ BitVec 64))
(declare-fun temp50_117 () (_ BitVec 64))
(declare-fun temp50_118 () (_ BitVec 64))
(declare-fun temp50_119 () (_ BitVec 64))
(declare-fun temp50_120 () (_ BitVec 64))
(declare-fun temp50_121 () (_ BitVec 64))
(declare-fun temp50_122 () (_ BitVec 64))
(declare-fun temp50_123 () (_ BitVec 64))
(declare-fun temp50_124 () (_ BitVec 64))
(declare-fun temp50_125 () (_ BitVec 64))
(declare-fun temp50_126 () (_ BitVec 64))
(declare-fun temp50_127 () (_ BitVec 64))
(declare-fun temp50_128 () (_ BitVec 64))
(declare-fun temp50_129 () (_ BitVec 64))
(declare-fun temp50_130 () (_ BitVec 64))
(declare-fun temp50_131 () (_ BitVec 64))
(declare-fun temp50_132 () (_ BitVec 64))
(declare-fun temp50_133 () (_ BitVec 64))
(declare-fun temp50_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp50_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp50_136 () (_ BitVec 64))
(declare-fun temp50_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp50_138 () (_ BitVec 64))
(declare-fun temp50_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp50_140 () (_ BitVec 64))
(declare-fun temp50_141 () (_ BitVec 64))
(declare-fun temp50_142 () (_ BitVec 64))
(declare-fun temp50_143 () (_ BitVec 64))
(declare-fun temp50_144 () (_ BitVec 64))
(declare-fun temp50_145 () (_ BitVec 64))
(declare-fun temp50_146 () (_ BitVec 64))
(declare-fun temp50_147 () (_ BitVec 64))
(declare-fun temp50_148 () (_ BitVec 64))
(declare-fun temp50_149 () (_ BitVec 64))
(declare-fun temp50_150 () (_ BitVec 64))
(declare-fun temp50_151 () (_ BitVec 64))
(declare-fun temp50_152 () (_ BitVec 64))
(declare-fun temp50_153 () (_ BitVec 64))
(declare-fun temp50_154 () (_ BitVec 64))
(declare-fun temp50_155 () (_ BitVec 64))
(declare-fun temp50_157 () (_ BitVec 64))
(declare-fun temp50_158 () (_ BitVec 64))
(declare-fun temp50_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp50_159 () (_ BitVec 64))
(declare-fun temp50_160 () (_ BitVec 64))
(declare-fun temp50_162 () (_ BitVec 64))
(declare-fun temp50_163 () (_ BitVec 64))
(declare-fun temp50_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp50_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp50_165 () (_ BitVec 64))
(declare-fun temp50_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp50_167 () (_ BitVec 64))
(declare-fun temp50_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp50_169 () (_ BitVec 64))
(declare-fun temp50_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp50_171 () (_ BitVec 64))
(declare-fun temp50_172 () (_ BitVec 64))
(declare-fun temp50_173 () (_ BitVec 64))
(declare-fun temp50_174 () (_ BitVec 64))
(declare-fun temp50_175 () (_ BitVec 64))
(declare-fun temp50_176 () (_ BitVec 64))
(declare-fun temp50_177 () (_ BitVec 64))
(declare-fun temp50_178 () (_ BitVec 64))
(declare-fun temp50_179 () (_ BitVec 64))
(declare-fun temp50_180 () (_ BitVec 64))
(declare-fun temp50_181 () (_ BitVec 64))
(declare-fun temp50_182 () (_ BitVec 64))
(declare-fun temp50_183 () (_ BitVec 64))
(declare-fun temp50_184 () (_ BitVec 64))
(declare-fun temp50_185 () (_ BitVec 64))
(declare-fun temp50_186 () (_ BitVec 64))
(declare-fun temp50_187 () (_ BitVec 64))
(declare-fun temp50_188 () (_ BitVec 64))
(declare-fun temp50_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp50_190 () (_ BitVec 64))
(declare-fun temp50_192 () (_ BitVec 64))
(declare-fun temp50_193 () (_ BitVec 64))
(declare-fun temp50_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp50_194 () (_ BitVec 64))
(declare-fun temp50_195 () (_ BitVec 64))
(declare-fun temp50_197 () (_ BitVec 64))
(declare-fun temp50_198 () (_ BitVec 64))
(declare-fun temp50_196 () (_ BitVec 64))
(declare-fun temp50_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp50_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp50_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp50_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp50_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp50_204 () (_ BitVec 64))
(declare-fun temp50_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp50_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp50_207 () (_ BitVec 64))
(declare-fun temp50_208 () (_ BitVec 64))
(declare-fun temp50_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp50_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp50_211 () (_ BitVec 64))
(declare-fun temp50_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp50_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp50_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp50_215 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5717837 () (_ BitVec 64))
(declare-fun temp50_217 () (_ BitVec 64))
(declare-fun temp50_216 () (_ BitVec 64))
(declare-fun temp50_218 () (_ BitVec 64))
(declare-fun var6557162 () (_ BitVec 64))
(declare-fun temp50_220 () (_ BitVec 64))
(declare-fun temp50_219 () (_ BitVec 64))
(declare-fun temp50_221 () (_ BitVec 64))
(assert (= temp50_1 #x0000000000000001))
(assert (= var77203 temp50_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp50_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp50_2)))
(assert (= temp50_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp50_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_4 #x0000000000000000))
(assert (= var210941 temp50_4))
(assert (= temp50_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp50_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_6 #x0000000000000000))
(assert (= var210986 temp50_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp50_7 #x0000000000000000))
(assert (= temp50_8 temp50_7))
(assert (= temp50_9 (select ARGNAME_padding_NAMEEND_VAL temp50_8)))
(assert (= temp50_10 #x0000000000000001))
(assert (= temp50_11 temp50_10))
(assert (= temp50_12 (select ARGNAME_padding_NAMEEND_VAL temp50_11)))
(assert (= temp50_13 #x0000000000000002))
(assert (= temp50_14 temp50_13))
(assert (= temp50_15 (select ARGNAME_padding_NAMEEND_VAL temp50_14)))
(assert (= temp50_16 #x0000000000000003))
(assert (= temp50_17 temp50_16))
(assert (= temp50_18 (select ARGNAME_padding_NAMEEND_VAL temp50_17)))
(assert (= temp50_19 #x0000000000000004))
(assert (= temp50_20 temp50_19))
(assert (= temp50_21 (select ARGNAME_padding_NAMEEND_VAL temp50_20)))
(assert (= temp50_22 #x0000000000000005))
(assert (= temp50_23 temp50_22))
(assert (= temp50_24 (select ARGNAME_padding_NAMEEND_VAL temp50_23)))
(assert (= temp50_25 #x0000000000000000))
(assert (= temp50_26 #x0000000000000000))
(assert (= temp50_27 temp50_26))
(assert (= temp50_28 (select ARGNAME_padding_NAMEEND_VAL temp50_27)))
(assert (= temp50_29 #x0000000000000000))
(assert (= temp50_30 #x0000000000000001))
(assert (= temp50_31 temp50_30))
(assert (= temp50_32 (select ARGNAME_padding_NAMEEND_VAL temp50_31)))
(assert (= temp50_33 #x0000000000000000))
(assert (= temp50_34 #x0000000000000002))
(assert (= temp50_35 temp50_34))
(assert (= temp50_36 (select ARGNAME_padding_NAMEEND_VAL temp50_35)))
(assert (= temp50_37 #x0000000000000000))
(assert (= temp50_38 #x0000000000000003))
(assert (= temp50_39 temp50_38))
(assert (= temp50_40 (select ARGNAME_padding_NAMEEND_VAL temp50_39)))
(assert (= temp50_41 #x0000000000000000))
(assert (= temp50_42 #x0000000000000004))
(assert (= temp50_43 temp50_42))
(assert (= temp50_44 (select ARGNAME_padding_NAMEEND_VAL temp50_43)))
(assert (= temp50_45 #x0000000000000000))
(assert (= temp50_46 #x0000000000000005))
(assert (= temp50_47 temp50_46))
(assert (= temp50_48 (select ARGNAME_padding_NAMEEND_VAL temp50_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp50_28 temp50_25)
             (bvslt temp50_32 temp50_29)
             (bvslt temp50_36 temp50_33)
             (bvslt temp50_40 temp50_37)
             (bvslt temp50_44 temp50_41)
             (bvslt temp50_48 temp50_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_49 #x0000000000000000))
(assert (= var1191714 temp50_49))
(assert (= temp50_50 #x0000000000000000))
(assert (= temp50_51 temp50_50))
(assert (= temp50_52 (select ARGNAME_output_padding_NAMEEND_VAL temp50_51)))
(assert (= temp50_53 #x0000000000000001))
(assert (= temp50_54 temp50_53))
(assert (= temp50_55 (select ARGNAME_output_padding_NAMEEND_VAL temp50_54)))
(assert (= temp50_56 #x0000000000000002))
(assert (= temp50_57 temp50_56))
(assert (= temp50_58 (select ARGNAME_output_padding_NAMEEND_VAL temp50_57)))
(assert (= temp50_59 #x0000000000000003))
(assert (= temp50_60 temp50_59))
(assert (= temp50_61 (select ARGNAME_output_padding_NAMEEND_VAL temp50_60)))
(assert (= temp50_62 #x0000000000000004))
(assert (= temp50_63 temp50_62))
(assert (= temp50_64 (select ARGNAME_output_padding_NAMEEND_VAL temp50_63)))
(assert (= temp50_65 #x0000000000000005))
(assert (= temp50_66 temp50_65))
(assert (= temp50_67 (select ARGNAME_output_padding_NAMEEND_VAL temp50_66)))
(assert (= temp50_68 #x0000000000000000))
(assert (= temp50_69 #x0000000000000000))
(assert (= temp50_70 temp50_69))
(assert (= temp50_71 (select ARGNAME_output_padding_NAMEEND_VAL temp50_70)))
(assert (= temp50_72 #x0000000000000000))
(assert (= temp50_73 #x0000000000000001))
(assert (= temp50_74 temp50_73))
(assert (= temp50_75 (select ARGNAME_output_padding_NAMEEND_VAL temp50_74)))
(assert (= temp50_76 #x0000000000000000))
(assert (= temp50_77 #x0000000000000002))
(assert (= temp50_78 temp50_77))
(assert (= temp50_79 (select ARGNAME_output_padding_NAMEEND_VAL temp50_78)))
(assert (= temp50_80 #x0000000000000000))
(assert (= temp50_81 #x0000000000000003))
(assert (= temp50_82 temp50_81))
(assert (= temp50_83 (select ARGNAME_output_padding_NAMEEND_VAL temp50_82)))
(assert (= temp50_84 #x0000000000000000))
(assert (= temp50_85 #x0000000000000004))
(assert (= temp50_86 temp50_85))
(assert (= temp50_87 (select ARGNAME_output_padding_NAMEEND_VAL temp50_86)))
(assert (= temp50_88 #x0000000000000000))
(assert (= temp50_89 #x0000000000000005))
(assert (= temp50_90 temp50_89))
(assert (= temp50_91 (select ARGNAME_output_padding_NAMEEND_VAL temp50_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp50_71 temp50_68)
             (bvslt temp50_75 temp50_72)
             (bvslt temp50_79 temp50_76)
             (bvslt temp50_83 temp50_80)
             (bvslt temp50_87 temp50_84)
             (bvslt temp50_91 temp50_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_92 #x0000000000000000))
(assert (= var1191725 temp50_92))
(assert (= temp50_93 #x0000000000000000))
(assert (= temp50_94 temp50_93))
(assert (= temp50_95 (select ARGNAME_stride_NAMEEND_VAL temp50_94)))
(assert (= temp50_96 #x0000000000000001))
(assert (= temp50_97 temp50_96))
(assert (= temp50_98 (select ARGNAME_stride_NAMEEND_VAL temp50_97)))
(assert (= temp50_99 #x0000000000000002))
(assert (= temp50_100 temp50_99))
(assert (= temp50_101 (select ARGNAME_stride_NAMEEND_VAL temp50_100)))
(assert (= temp50_102 #x0000000000000003))
(assert (= temp50_103 temp50_102))
(assert (= temp50_104 (select ARGNAME_stride_NAMEEND_VAL temp50_103)))
(assert (= temp50_105 #x0000000000000004))
(assert (= temp50_106 temp50_105))
(assert (= temp50_107 (select ARGNAME_stride_NAMEEND_VAL temp50_106)))
(assert (= temp50_108 #x0000000000000005))
(assert (= temp50_109 temp50_108))
(assert (= temp50_110 (select ARGNAME_stride_NAMEEND_VAL temp50_109)))
(assert (= temp50_111 #x0000000000000000))
(assert (= temp50_112 #x0000000000000000))
(assert (= temp50_113 temp50_112))
(assert (= temp50_114 (select ARGNAME_stride_NAMEEND_VAL temp50_113)))
(assert (= temp50_115 #x0000000000000000))
(assert (= temp50_116 #x0000000000000001))
(assert (= temp50_117 temp50_116))
(assert (= temp50_118 (select ARGNAME_stride_NAMEEND_VAL temp50_117)))
(assert (= temp50_119 #x0000000000000000))
(assert (= temp50_120 #x0000000000000002))
(assert (= temp50_121 temp50_120))
(assert (= temp50_122 (select ARGNAME_stride_NAMEEND_VAL temp50_121)))
(assert (= temp50_123 #x0000000000000000))
(assert (= temp50_124 #x0000000000000003))
(assert (= temp50_125 temp50_124))
(assert (= temp50_126 (select ARGNAME_stride_NAMEEND_VAL temp50_125)))
(assert (= temp50_127 #x0000000000000000))
(assert (= temp50_128 #x0000000000000004))
(assert (= temp50_129 temp50_128))
(assert (= temp50_130 (select ARGNAME_stride_NAMEEND_VAL temp50_129)))
(assert (= temp50_131 #x0000000000000000))
(assert (= temp50_132 #x0000000000000005))
(assert (= temp50_133 temp50_132))
(assert (= temp50_134 (select ARGNAME_stride_NAMEEND_VAL temp50_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp50_114 temp50_111)
             (bvsle temp50_118 temp50_115)
             (bvsle temp50_122 temp50_119)
             (bvsle temp50_126 temp50_123)
             (bvsle temp50_130 temp50_127)
             (bvsle temp50_134 temp50_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_135 #x0000000000000000))
(assert (= var1191735 temp50_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_136 #x0000000000000001))
(assert (= var1191747 temp50_136))
(assert (= temp50_137 #x0000000000000000))
(assert (= var1179826 temp50_137))
(assert (= temp50_138 #x0000000000000000))
(assert (= temp50_139 temp50_138))
(assert (= temp50_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_139)))
(assert (= temp50_141 #x0000000000000001))
(assert (= temp50_142 temp50_141))
(assert (= temp50_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_142)))
(assert (= temp50_144 #x0000000000000002))
(assert (= temp50_145 temp50_144))
(assert (= temp50_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_145)))
(assert (= temp50_147 #x0000000000000003))
(assert (= temp50_148 temp50_147))
(assert (= temp50_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_148)))
(assert (= temp50_150 #x0000000000000004))
(assert (= temp50_151 temp50_150))
(assert (= temp50_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_151)))
(assert (= temp50_153 #x0000000000000005))
(assert (= temp50_154 temp50_153))
(assert (= temp50_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_154)))
(assert (= temp50_157 var1179826))
(assert (= temp50_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_157)))
(assert (= temp50_156 temp50_158))
(assert (= var1191780
   (ite (bvslt temp50_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_159 #x0000000000000000))
(assert (= var1191780 temp50_159))
(assert (= temp50_160 #x0000000000000000))
(assert (= var1179826 temp50_160))
(assert (= temp50_162 var1179826))
(assert (= temp50_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_162)))
(assert (= temp50_161 temp50_163))
(assert (= var1191802 (bvsmod temp50_161 ARGNAME_groups_NAMEEND)))
(assert (= temp50_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp50_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp50_165 #x0000000000000001))
(assert (= var1191803 temp50_165))
(assert (= temp50_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp50_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_167 #x0000000000000001))
(assert (= var1191823 temp50_167))
(assert (= temp50_168 #x0000000000000001))
(assert (= var1180714 temp50_168))
(assert (= temp50_169 #x0000000000000000))
(assert (= temp50_170 temp50_169))
(assert (= temp50_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp50_170)))
(assert (= temp50_172 #x0000000000000001))
(assert (= temp50_173 temp50_172))
(assert (= temp50_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp50_173)))
(assert (= temp50_175 #x0000000000000002))
(assert (= temp50_176 temp50_175))
(assert (= temp50_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp50_176)))
(assert (= temp50_178 #x0000000000000003))
(assert (= temp50_179 temp50_178))
(assert (= temp50_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp50_179)))
(assert (= temp50_181 #x0000000000000004))
(assert (= temp50_182 temp50_181))
(assert (= temp50_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp50_182)))
(assert (= temp50_184 #x0000000000000005))
(assert (= temp50_185 temp50_184))
(assert (= temp50_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp50_185)))
(assert (= temp50_187 #x0000000000000000))
(assert (= temp50_188
   (ite (bvslt var1180714 temp50_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp50_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp50_188)))
(assert (= var1191831 temp50_189))
(assert (bvslt (ite (bvslt var1180714 temp50_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp50_190 #x0000000000000001))
(assert (= var1180714 temp50_190))
(assert (= temp50_192 var1180714))
(assert (= temp50_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_192)))
(assert (= temp50_191 temp50_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp50_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp50_194 #x0000000000000001))
(assert (= var1191836 temp50_194))
(assert (= temp50_195 #x0000000000000000))
(assert (= var1179826 temp50_195))
(assert (= temp50_197 var1179826))
(assert (= temp50_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_197)))
(assert (= temp50_196 temp50_198))
(assert (= temp50_199 #x0000000000000002))
(assert (= var1586025 temp50_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp50_200 #x0000000000000001))
(assert (= var1191993 temp50_200))
(assert (= temp50_201 #x0000000000000001))
(assert (= var2700303 temp50_201))
(assert (= temp50_202 #x0000000000000001))
(assert (= var2962447 temp50_202))
(assert (= temp50_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp50_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_204 #x0000000000000001))
(assert (= var211058 temp50_204))
(assert (= temp50_205 #x0000000000000001))
(assert (= var211188 temp50_205))
(assert (= var3879401 var211188))
(assert (= temp50_206 #x0000000000000000))
(assert (= var3866802 temp50_206))
(assert (= temp50_207 #x0000000000000000))
(assert (= temp50_208
   (ite (bvslt var3866802 temp50_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp50_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp50_208)))
(assert (= var3879420 temp50_209))
(assert (bvslt (ite (bvslt var3866802 temp50_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp50_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp50_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp50_211 #x0000000000000001))
(assert (= var3879421 temp50_211))
(assert (= temp50_212 #x0000000000000000))
(assert (= var4079423 temp50_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp50_213 #x0000000000000002))
(assert (= var4208259 temp50_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_214 #x0000000000000000))
(assert (= var4273820 temp50_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211388 var210913))
(assert (= temp50_215 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp50_215) #x0000000000000001 #x0000000000000000)))
(assert (= var5717837 var211389))
(assert (= temp50_217 #x0000000000000001))
(assert (= temp50_216 temp50_217))
(assert (= temp50_218 #x0000000000000001))
(assert (= var6557162 temp50_218))
(assert (= temp50_220 #xffffffffffffffff))
(assert (= temp50_219 temp50_220))
(assert (= temp50_221 #x0000000000000001))
(assert (= var211058 temp50_221))
(model-add temp50_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp50_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp50_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp50_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





