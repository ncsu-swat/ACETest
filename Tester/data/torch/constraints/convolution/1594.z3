(declare-fun temp10920_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10920_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10920_3 () (_ BitVec 64))
(declare-fun temp10920_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10920_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10920_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10920_7 () (_ BitVec 64))
(declare-fun temp10920_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10920_9 () (_ BitVec 64))
(declare-fun temp10920_10 () (_ BitVec 64))
(declare-fun temp10920_11 () (_ BitVec 64))
(declare-fun temp10920_12 () (_ BitVec 64))
(declare-fun temp10920_13 () (_ BitVec 64))
(declare-fun temp10920_14 () (_ BitVec 64))
(declare-fun temp10920_15 () (_ BitVec 64))
(declare-fun temp10920_16 () (_ BitVec 64))
(declare-fun temp10920_17 () (_ BitVec 64))
(declare-fun temp10920_18 () (_ BitVec 64))
(declare-fun temp10920_19 () (_ BitVec 64))
(declare-fun temp10920_20 () (_ BitVec 64))
(declare-fun temp10920_21 () (_ BitVec 64))
(declare-fun temp10920_22 () (_ BitVec 64))
(declare-fun temp10920_23 () (_ BitVec 64))
(declare-fun temp10920_24 () (_ BitVec 64))
(declare-fun temp10920_25 () (_ BitVec 64))
(declare-fun temp10920_26 () (_ BitVec 64))
(declare-fun temp10920_27 () (_ BitVec 64))
(declare-fun temp10920_28 () (_ BitVec 64))
(declare-fun temp10920_29 () (_ BitVec 64))
(declare-fun temp10920_30 () (_ BitVec 64))
(declare-fun temp10920_31 () (_ BitVec 64))
(declare-fun temp10920_32 () (_ BitVec 64))
(declare-fun temp10920_33 () (_ BitVec 64))
(declare-fun temp10920_34 () (_ BitVec 64))
(declare-fun temp10920_35 () (_ BitVec 64))
(declare-fun temp10920_36 () (_ BitVec 64))
(declare-fun temp10920_37 () (_ BitVec 64))
(declare-fun temp10920_38 () (_ BitVec 64))
(declare-fun temp10920_39 () (_ BitVec 64))
(declare-fun temp10920_40 () (_ BitVec 64))
(declare-fun temp10920_41 () (_ BitVec 64))
(declare-fun temp10920_42 () (_ BitVec 64))
(declare-fun temp10920_43 () (_ BitVec 64))
(declare-fun temp10920_44 () (_ BitVec 64))
(declare-fun temp10920_45 () (_ BitVec 64))
(declare-fun temp10920_46 () (_ BitVec 64))
(declare-fun temp10920_47 () (_ BitVec 64))
(declare-fun temp10920_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10920_49 () (_ BitVec 64))
(declare-fun temp10920_50 () (_ BitVec 64))
(declare-fun temp10920_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10920_52 () (_ BitVec 64))
(declare-fun temp10920_53 () (_ BitVec 64))
(declare-fun temp10920_54 () (_ BitVec 64))
(declare-fun temp10920_55 () (_ BitVec 64))
(declare-fun temp10920_56 () (_ BitVec 64))
(declare-fun temp10920_57 () (_ BitVec 64))
(declare-fun temp10920_58 () (_ BitVec 64))
(declare-fun temp10920_59 () (_ BitVec 64))
(declare-fun temp10920_60 () (_ BitVec 64))
(declare-fun temp10920_61 () (_ BitVec 64))
(declare-fun temp10920_62 () (_ BitVec 64))
(declare-fun temp10920_63 () (_ BitVec 64))
(declare-fun temp10920_64 () (_ BitVec 64))
(declare-fun temp10920_65 () (_ BitVec 64))
(declare-fun temp10920_66 () (_ BitVec 64))
(declare-fun temp10920_67 () (_ BitVec 64))
(declare-fun temp10920_68 () (_ BitVec 64))
(declare-fun temp10920_69 () (_ BitVec 64))
(declare-fun temp10920_70 () (_ BitVec 64))
(declare-fun temp10920_71 () (_ BitVec 64))
(declare-fun temp10920_72 () (_ BitVec 64))
(declare-fun temp10920_73 () (_ BitVec 64))
(declare-fun temp10920_74 () (_ BitVec 64))
(declare-fun temp10920_75 () (_ BitVec 64))
(declare-fun temp10920_76 () (_ BitVec 64))
(declare-fun temp10920_77 () (_ BitVec 64))
(declare-fun temp10920_78 () (_ BitVec 64))
(declare-fun temp10920_79 () (_ BitVec 64))
(declare-fun temp10920_80 () (_ BitVec 64))
(declare-fun temp10920_81 () (_ BitVec 64))
(declare-fun temp10920_82 () (_ BitVec 64))
(declare-fun temp10920_83 () (_ BitVec 64))
(declare-fun temp10920_84 () (_ BitVec 64))
(declare-fun temp10920_85 () (_ BitVec 64))
(declare-fun temp10920_86 () (_ BitVec 64))
(declare-fun temp10920_87 () (_ BitVec 64))
(declare-fun temp10920_88 () (_ BitVec 64))
(declare-fun temp10920_89 () (_ BitVec 64))
(declare-fun temp10920_90 () (_ BitVec 64))
(declare-fun temp10920_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10920_92 () (_ BitVec 64))
(declare-fun temp10920_93 () (_ BitVec 64))
(declare-fun temp10920_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10920_95 () (_ BitVec 64))
(declare-fun temp10920_96 () (_ BitVec 64))
(declare-fun temp10920_97 () (_ BitVec 64))
(declare-fun temp10920_98 () (_ BitVec 64))
(declare-fun temp10920_99 () (_ BitVec 64))
(declare-fun temp10920_100 () (_ BitVec 64))
(declare-fun temp10920_101 () (_ BitVec 64))
(declare-fun temp10920_102 () (_ BitVec 64))
(declare-fun temp10920_103 () (_ BitVec 64))
(declare-fun temp10920_104 () (_ BitVec 64))
(declare-fun temp10920_105 () (_ BitVec 64))
(declare-fun temp10920_106 () (_ BitVec 64))
(declare-fun temp10920_107 () (_ BitVec 64))
(declare-fun temp10920_108 () (_ BitVec 64))
(declare-fun temp10920_109 () (_ BitVec 64))
(declare-fun temp10920_110 () (_ BitVec 64))
(declare-fun temp10920_111 () (_ BitVec 64))
(declare-fun temp10920_112 () (_ BitVec 64))
(declare-fun temp10920_113 () (_ BitVec 64))
(declare-fun temp10920_114 () (_ BitVec 64))
(declare-fun temp10920_115 () (_ BitVec 64))
(declare-fun temp10920_116 () (_ BitVec 64))
(declare-fun temp10920_117 () (_ BitVec 64))
(declare-fun temp10920_118 () (_ BitVec 64))
(declare-fun temp10920_119 () (_ BitVec 64))
(declare-fun temp10920_120 () (_ BitVec 64))
(declare-fun temp10920_121 () (_ BitVec 64))
(declare-fun temp10920_122 () (_ BitVec 64))
(declare-fun temp10920_123 () (_ BitVec 64))
(declare-fun temp10920_124 () (_ BitVec 64))
(declare-fun temp10920_125 () (_ BitVec 64))
(declare-fun temp10920_126 () (_ BitVec 64))
(declare-fun temp10920_127 () (_ BitVec 64))
(declare-fun temp10920_128 () (_ BitVec 64))
(declare-fun temp10920_129 () (_ BitVec 64))
(declare-fun temp10920_130 () (_ BitVec 64))
(declare-fun temp10920_131 () (_ BitVec 64))
(declare-fun temp10920_132 () (_ BitVec 64))
(declare-fun temp10920_133 () (_ BitVec 64))
(declare-fun temp10920_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10920_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10920_136 () (_ BitVec 64))
(declare-fun temp10920_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10920_138 () (_ BitVec 64))
(declare-fun temp10920_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10920_140 () (_ BitVec 64))
(declare-fun temp10920_141 () (_ BitVec 64))
(declare-fun temp10920_142 () (_ BitVec 64))
(declare-fun temp10920_143 () (_ BitVec 64))
(declare-fun temp10920_144 () (_ BitVec 64))
(declare-fun temp10920_145 () (_ BitVec 64))
(declare-fun temp10920_146 () (_ BitVec 64))
(declare-fun temp10920_147 () (_ BitVec 64))
(declare-fun temp10920_148 () (_ BitVec 64))
(declare-fun temp10920_149 () (_ BitVec 64))
(declare-fun temp10920_150 () (_ BitVec 64))
(declare-fun temp10920_151 () (_ BitVec 64))
(declare-fun temp10920_152 () (_ BitVec 64))
(declare-fun temp10920_153 () (_ BitVec 64))
(declare-fun temp10920_154 () (_ BitVec 64))
(declare-fun temp10920_155 () (_ BitVec 64))
(declare-fun temp10920_157 () (_ BitVec 64))
(declare-fun temp10920_158 () (_ BitVec 64))
(declare-fun temp10920_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10920_159 () (_ BitVec 64))
(declare-fun temp10920_160 () (_ BitVec 64))
(declare-fun temp10920_162 () (_ BitVec 64))
(declare-fun temp10920_163 () (_ BitVec 64))
(declare-fun temp10920_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10920_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10920_165 () (_ BitVec 64))
(declare-fun temp10920_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10920_167 () (_ BitVec 64))
(declare-fun temp10920_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10920_169 () (_ BitVec 64))
(declare-fun temp10920_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10920_171 () (_ BitVec 64))
(declare-fun temp10920_172 () (_ BitVec 64))
(declare-fun temp10920_173 () (_ BitVec 64))
(declare-fun temp10920_174 () (_ BitVec 64))
(declare-fun temp10920_175 () (_ BitVec 64))
(declare-fun temp10920_176 () (_ BitVec 64))
(declare-fun temp10920_177 () (_ BitVec 64))
(declare-fun temp10920_178 () (_ BitVec 64))
(declare-fun temp10920_179 () (_ BitVec 64))
(declare-fun temp10920_180 () (_ BitVec 64))
(declare-fun temp10920_181 () (_ BitVec 64))
(declare-fun temp10920_182 () (_ BitVec 64))
(declare-fun temp10920_183 () (_ BitVec 64))
(declare-fun temp10920_184 () (_ BitVec 64))
(declare-fun temp10920_185 () (_ BitVec 64))
(declare-fun temp10920_186 () (_ BitVec 64))
(declare-fun temp10920_187 () (_ BitVec 64))
(declare-fun temp10920_188 () (_ BitVec 64))
(declare-fun temp10920_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10920_190 () (_ BitVec 64))
(declare-fun temp10920_192 () (_ BitVec 64))
(declare-fun temp10920_193 () (_ BitVec 64))
(declare-fun temp10920_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10920_194 () (_ BitVec 64))
(declare-fun temp10920_195 () (_ BitVec 64))
(declare-fun temp10920_197 () (_ BitVec 64))
(declare-fun temp10920_198 () (_ BitVec 64))
(declare-fun temp10920_196 () (_ BitVec 64))
(declare-fun temp10920_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10920_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10920_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10920_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10920_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10920_204 () (_ BitVec 64))
(declare-fun temp10920_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10920_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10920_207 () (_ BitVec 64))
(declare-fun temp10920_208 () (_ BitVec 64))
(declare-fun temp10920_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10920_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10920_211 () (_ BitVec 64))
(declare-fun temp10920_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10920_213 () (_ BitVec 64))
(declare-fun temp10920_214 () (_ BitVec 64))
(declare-fun temp10920_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10920_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10920_217 () (_ BitVec 64))
(declare-fun temp10920_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10920_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10920_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5255568 () (_ BitVec 64))
(declare-fun var5517712 () (_ BitVec 64))
(declare-fun temp10920_221 () (_ BitVec 64))
(declare-fun var5845392 () (_ BitVec 64))
(declare-fun temp10920_222 () (_ BitVec 64))
(assert (= temp10920_1 #x0000000000000001))
(assert (= var77203 temp10920_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10920_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10920_2)))
(assert (= temp10920_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10920_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10920_4 #x0000000000000000))
(assert (= var210941 temp10920_4))
(assert (= temp10920_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10920_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10920_6 #x0000000000000000))
(assert (= var210986 temp10920_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10920_7 #x0000000000000000))
(assert (= temp10920_8 temp10920_7))
(assert (= temp10920_9 (select ARGNAME_padding_NAMEEND_VAL temp10920_8)))
(assert (= temp10920_10 #x0000000000000001))
(assert (= temp10920_11 temp10920_10))
(assert (= temp10920_12 (select ARGNAME_padding_NAMEEND_VAL temp10920_11)))
(assert (= temp10920_13 #x0000000000000002))
(assert (= temp10920_14 temp10920_13))
(assert (= temp10920_15 (select ARGNAME_padding_NAMEEND_VAL temp10920_14)))
(assert (= temp10920_16 #x0000000000000003))
(assert (= temp10920_17 temp10920_16))
(assert (= temp10920_18 (select ARGNAME_padding_NAMEEND_VAL temp10920_17)))
(assert (= temp10920_19 #x0000000000000004))
(assert (= temp10920_20 temp10920_19))
(assert (= temp10920_21 (select ARGNAME_padding_NAMEEND_VAL temp10920_20)))
(assert (= temp10920_22 #x0000000000000005))
(assert (= temp10920_23 temp10920_22))
(assert (= temp10920_24 (select ARGNAME_padding_NAMEEND_VAL temp10920_23)))
(assert (= temp10920_25 #x0000000000000000))
(assert (= temp10920_26 #x0000000000000000))
(assert (= temp10920_27 temp10920_26))
(assert (= temp10920_28 (select ARGNAME_padding_NAMEEND_VAL temp10920_27)))
(assert (= temp10920_29 #x0000000000000000))
(assert (= temp10920_30 #x0000000000000001))
(assert (= temp10920_31 temp10920_30))
(assert (= temp10920_32 (select ARGNAME_padding_NAMEEND_VAL temp10920_31)))
(assert (= temp10920_33 #x0000000000000000))
(assert (= temp10920_34 #x0000000000000002))
(assert (= temp10920_35 temp10920_34))
(assert (= temp10920_36 (select ARGNAME_padding_NAMEEND_VAL temp10920_35)))
(assert (= temp10920_37 #x0000000000000000))
(assert (= temp10920_38 #x0000000000000003))
(assert (= temp10920_39 temp10920_38))
(assert (= temp10920_40 (select ARGNAME_padding_NAMEEND_VAL temp10920_39)))
(assert (= temp10920_41 #x0000000000000000))
(assert (= temp10920_42 #x0000000000000004))
(assert (= temp10920_43 temp10920_42))
(assert (= temp10920_44 (select ARGNAME_padding_NAMEEND_VAL temp10920_43)))
(assert (= temp10920_45 #x0000000000000000))
(assert (= temp10920_46 #x0000000000000005))
(assert (= temp10920_47 temp10920_46))
(assert (= temp10920_48 (select ARGNAME_padding_NAMEEND_VAL temp10920_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10920_28 temp10920_25)
             (bvslt temp10920_32 temp10920_29)
             (bvslt temp10920_36 temp10920_33)
             (bvslt temp10920_40 temp10920_37)
             (bvslt temp10920_44 temp10920_41)
             (bvslt temp10920_48 temp10920_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10920_49 #x0000000000000000))
(assert (= var1191714 temp10920_49))
(assert (= temp10920_50 #x0000000000000000))
(assert (= temp10920_51 temp10920_50))
(assert (= temp10920_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10920_51)))
(assert (= temp10920_53 #x0000000000000001))
(assert (= temp10920_54 temp10920_53))
(assert (= temp10920_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10920_54)))
(assert (= temp10920_56 #x0000000000000002))
(assert (= temp10920_57 temp10920_56))
(assert (= temp10920_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10920_57)))
(assert (= temp10920_59 #x0000000000000003))
(assert (= temp10920_60 temp10920_59))
(assert (= temp10920_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10920_60)))
(assert (= temp10920_62 #x0000000000000004))
(assert (= temp10920_63 temp10920_62))
(assert (= temp10920_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10920_63)))
(assert (= temp10920_65 #x0000000000000005))
(assert (= temp10920_66 temp10920_65))
(assert (= temp10920_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10920_66)))
(assert (= temp10920_68 #x0000000000000000))
(assert (= temp10920_69 #x0000000000000000))
(assert (= temp10920_70 temp10920_69))
(assert (= temp10920_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10920_70)))
(assert (= temp10920_72 #x0000000000000000))
(assert (= temp10920_73 #x0000000000000001))
(assert (= temp10920_74 temp10920_73))
(assert (= temp10920_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10920_74)))
(assert (= temp10920_76 #x0000000000000000))
(assert (= temp10920_77 #x0000000000000002))
(assert (= temp10920_78 temp10920_77))
(assert (= temp10920_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10920_78)))
(assert (= temp10920_80 #x0000000000000000))
(assert (= temp10920_81 #x0000000000000003))
(assert (= temp10920_82 temp10920_81))
(assert (= temp10920_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10920_82)))
(assert (= temp10920_84 #x0000000000000000))
(assert (= temp10920_85 #x0000000000000004))
(assert (= temp10920_86 temp10920_85))
(assert (= temp10920_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10920_86)))
(assert (= temp10920_88 #x0000000000000000))
(assert (= temp10920_89 #x0000000000000005))
(assert (= temp10920_90 temp10920_89))
(assert (= temp10920_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10920_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10920_71 temp10920_68)
             (bvslt temp10920_75 temp10920_72)
             (bvslt temp10920_79 temp10920_76)
             (bvslt temp10920_83 temp10920_80)
             (bvslt temp10920_87 temp10920_84)
             (bvslt temp10920_91 temp10920_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10920_92 #x0000000000000000))
(assert (= var1191725 temp10920_92))
(assert (= temp10920_93 #x0000000000000000))
(assert (= temp10920_94 temp10920_93))
(assert (= temp10920_95 (select ARGNAME_stride_NAMEEND_VAL temp10920_94)))
(assert (= temp10920_96 #x0000000000000001))
(assert (= temp10920_97 temp10920_96))
(assert (= temp10920_98 (select ARGNAME_stride_NAMEEND_VAL temp10920_97)))
(assert (= temp10920_99 #x0000000000000002))
(assert (= temp10920_100 temp10920_99))
(assert (= temp10920_101 (select ARGNAME_stride_NAMEEND_VAL temp10920_100)))
(assert (= temp10920_102 #x0000000000000003))
(assert (= temp10920_103 temp10920_102))
(assert (= temp10920_104 (select ARGNAME_stride_NAMEEND_VAL temp10920_103)))
(assert (= temp10920_105 #x0000000000000004))
(assert (= temp10920_106 temp10920_105))
(assert (= temp10920_107 (select ARGNAME_stride_NAMEEND_VAL temp10920_106)))
(assert (= temp10920_108 #x0000000000000005))
(assert (= temp10920_109 temp10920_108))
(assert (= temp10920_110 (select ARGNAME_stride_NAMEEND_VAL temp10920_109)))
(assert (= temp10920_111 #x0000000000000000))
(assert (= temp10920_112 #x0000000000000000))
(assert (= temp10920_113 temp10920_112))
(assert (= temp10920_114 (select ARGNAME_stride_NAMEEND_VAL temp10920_113)))
(assert (= temp10920_115 #x0000000000000000))
(assert (= temp10920_116 #x0000000000000001))
(assert (= temp10920_117 temp10920_116))
(assert (= temp10920_118 (select ARGNAME_stride_NAMEEND_VAL temp10920_117)))
(assert (= temp10920_119 #x0000000000000000))
(assert (= temp10920_120 #x0000000000000002))
(assert (= temp10920_121 temp10920_120))
(assert (= temp10920_122 (select ARGNAME_stride_NAMEEND_VAL temp10920_121)))
(assert (= temp10920_123 #x0000000000000000))
(assert (= temp10920_124 #x0000000000000003))
(assert (= temp10920_125 temp10920_124))
(assert (= temp10920_126 (select ARGNAME_stride_NAMEEND_VAL temp10920_125)))
(assert (= temp10920_127 #x0000000000000000))
(assert (= temp10920_128 #x0000000000000004))
(assert (= temp10920_129 temp10920_128))
(assert (= temp10920_130 (select ARGNAME_stride_NAMEEND_VAL temp10920_129)))
(assert (= temp10920_131 #x0000000000000000))
(assert (= temp10920_132 #x0000000000000005))
(assert (= temp10920_133 temp10920_132))
(assert (= temp10920_134 (select ARGNAME_stride_NAMEEND_VAL temp10920_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10920_114 temp10920_111)
             (bvsle temp10920_118 temp10920_115)
             (bvsle temp10920_122 temp10920_119)
             (bvsle temp10920_126 temp10920_123)
             (bvsle temp10920_130 temp10920_127)
             (bvsle temp10920_134 temp10920_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10920_135 #x0000000000000000))
(assert (= var1191735 temp10920_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10920_136 #x0000000000000001))
(assert (= var1191747 temp10920_136))
(assert (= temp10920_137 #x0000000000000000))
(assert (= var1179826 temp10920_137))
(assert (= temp10920_138 #x0000000000000000))
(assert (= temp10920_139 temp10920_138))
(assert (= temp10920_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10920_139)))
(assert (= temp10920_141 #x0000000000000001))
(assert (= temp10920_142 temp10920_141))
(assert (= temp10920_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10920_142)))
(assert (= temp10920_144 #x0000000000000002))
(assert (= temp10920_145 temp10920_144))
(assert (= temp10920_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10920_145)))
(assert (= temp10920_147 #x0000000000000003))
(assert (= temp10920_148 temp10920_147))
(assert (= temp10920_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10920_148)))
(assert (= temp10920_150 #x0000000000000004))
(assert (= temp10920_151 temp10920_150))
(assert (= temp10920_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10920_151)))
(assert (= temp10920_153 #x0000000000000005))
(assert (= temp10920_154 temp10920_153))
(assert (= temp10920_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10920_154)))
(assert (= temp10920_157 var1179826))
(assert (= temp10920_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10920_157)))
(assert (= temp10920_156 temp10920_158))
(assert (= var1191780
   (ite (bvslt temp10920_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10920_159 #x0000000000000000))
(assert (= var1191780 temp10920_159))
(assert (= temp10920_160 #x0000000000000000))
(assert (= var1179826 temp10920_160))
(assert (= temp10920_162 var1179826))
(assert (= temp10920_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10920_162)))
(assert (= temp10920_161 temp10920_163))
(assert (= var1191802 (bvsmod temp10920_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10920_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10920_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10920_165 #x0000000000000001))
(assert (= var1191803 temp10920_165))
(assert (= temp10920_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10920_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10920_167 #x0000000000000001))
(assert (= var1191823 temp10920_167))
(assert (= temp10920_168 #x0000000000000001))
(assert (= var1180714 temp10920_168))
(assert (= temp10920_169 #x0000000000000000))
(assert (= temp10920_170 temp10920_169))
(assert (= temp10920_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10920_170)))
(assert (= temp10920_172 #x0000000000000001))
(assert (= temp10920_173 temp10920_172))
(assert (= temp10920_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10920_173)))
(assert (= temp10920_175 #x0000000000000002))
(assert (= temp10920_176 temp10920_175))
(assert (= temp10920_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10920_176)))
(assert (= temp10920_178 #x0000000000000003))
(assert (= temp10920_179 temp10920_178))
(assert (= temp10920_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10920_179)))
(assert (= temp10920_181 #x0000000000000004))
(assert (= temp10920_182 temp10920_181))
(assert (= temp10920_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10920_182)))
(assert (= temp10920_184 #x0000000000000005))
(assert (= temp10920_185 temp10920_184))
(assert (= temp10920_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10920_185)))
(assert (= temp10920_187 #x0000000000000000))
(assert (= temp10920_188
   (ite (bvslt var1180714 temp10920_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10920_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10920_188)))
(assert (= var1191831 temp10920_189))
(assert (bvslt (ite (bvslt var1180714 temp10920_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10920_190 #x0000000000000001))
(assert (= var1180714 temp10920_190))
(assert (= temp10920_192 var1180714))
(assert (= temp10920_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10920_192)))
(assert (= temp10920_191 temp10920_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10920_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10920_194 #x0000000000000001))
(assert (= var1191836 temp10920_194))
(assert (= temp10920_195 #x0000000000000000))
(assert (= var1179826 temp10920_195))
(assert (= temp10920_197 var1179826))
(assert (= temp10920_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10920_197)))
(assert (= temp10920_196 temp10920_198))
(assert (= temp10920_199 #x0000000000000002))
(assert (= var1586025 temp10920_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10920_200 #x0000000000000001))
(assert (= var1191993 temp10920_200))
(assert (= temp10920_201 #x0000000000000001))
(assert (= var2700303 temp10920_201))
(assert (= temp10920_202 #x0000000000000001))
(assert (= var2962447 temp10920_202))
(assert (= temp10920_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10920_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10920_204 #x0000000000000001))
(assert (= var211058 temp10920_204))
(assert (= temp10920_205 #x0000000000000001))
(assert (= var211188 temp10920_205))
(assert (= var3879401 var211188))
(assert (= temp10920_206 #x0000000000000000))
(assert (= var3866802 temp10920_206))
(assert (= temp10920_207 #x0000000000000000))
(assert (= temp10920_208
   (ite (bvslt var3866802 temp10920_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10920_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10920_208)))
(assert (= var3879420 temp10920_209))
(assert (bvslt (ite (bvslt var3866802 temp10920_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10920_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10920_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10920_211 #x0000000000000000))
(assert (= var3879421 temp10920_211))
(assert (= temp10920_212 #x0000000000000001))
(assert (= var3867690 temp10920_212))
(assert (= temp10920_213 #x0000000000000000))
(assert (= temp10920_214
   (ite (bvslt var3867690 temp10920_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10920_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10920_214)))
(assert (= var3879423 temp10920_215))
(assert (bvslt (ite (bvslt var3867690 temp10920_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10920_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10920_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10920_217 #x0000000000000001))
(assert (= var3879424 temp10920_217))
(assert (= temp10920_218 #x0000000000000000))
(assert (= var4133117 temp10920_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10920_219 #x0000000000000002))
(assert (= var4339331 temp10920_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10920_220 #x0000000000000000))
(assert (= var4404892 temp10920_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5255568 var211201))
(assert (= var5517712 var211201))
(assert (= temp10920_221 #x0000000000000000))
(assert (= var5845392 temp10920_221))
(assert (= temp10920_222 #x0000000000000001))
(assert (= var211058 temp10920_222))
(model-add temp10920_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10920_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10920_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10920_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





