(declare-fun temp338_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp338_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp338_3 () (_ BitVec 64))
(declare-fun temp338_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp338_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp338_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp338_7 () (_ BitVec 64))
(declare-fun temp338_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp338_9 () (_ BitVec 64))
(declare-fun temp338_10 () (_ BitVec 64))
(declare-fun temp338_11 () (_ BitVec 64))
(declare-fun temp338_12 () (_ BitVec 64))
(declare-fun temp338_13 () (_ BitVec 64))
(declare-fun temp338_14 () (_ BitVec 64))
(declare-fun temp338_15 () (_ BitVec 64))
(declare-fun temp338_16 () (_ BitVec 64))
(declare-fun temp338_17 () (_ BitVec 64))
(declare-fun temp338_18 () (_ BitVec 64))
(declare-fun temp338_19 () (_ BitVec 64))
(declare-fun temp338_20 () (_ BitVec 64))
(declare-fun temp338_21 () (_ BitVec 64))
(declare-fun temp338_22 () (_ BitVec 64))
(declare-fun temp338_23 () (_ BitVec 64))
(declare-fun temp338_24 () (_ BitVec 64))
(declare-fun temp338_25 () (_ BitVec 64))
(declare-fun temp338_26 () (_ BitVec 64))
(declare-fun temp338_27 () (_ BitVec 64))
(declare-fun temp338_28 () (_ BitVec 64))
(declare-fun temp338_29 () (_ BitVec 64))
(declare-fun temp338_30 () (_ BitVec 64))
(declare-fun temp338_31 () (_ BitVec 64))
(declare-fun temp338_32 () (_ BitVec 64))
(declare-fun temp338_33 () (_ BitVec 64))
(declare-fun temp338_34 () (_ BitVec 64))
(declare-fun temp338_35 () (_ BitVec 64))
(declare-fun temp338_36 () (_ BitVec 64))
(declare-fun temp338_37 () (_ BitVec 64))
(declare-fun temp338_38 () (_ BitVec 64))
(declare-fun temp338_39 () (_ BitVec 64))
(declare-fun temp338_40 () (_ BitVec 64))
(declare-fun temp338_41 () (_ BitVec 64))
(declare-fun temp338_42 () (_ BitVec 64))
(declare-fun temp338_43 () (_ BitVec 64))
(declare-fun temp338_44 () (_ BitVec 64))
(declare-fun temp338_45 () (_ BitVec 64))
(declare-fun temp338_46 () (_ BitVec 64))
(declare-fun temp338_47 () (_ BitVec 64))
(declare-fun temp338_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp338_49 () (_ BitVec 64))
(declare-fun temp338_50 () (_ BitVec 64))
(declare-fun temp338_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp338_52 () (_ BitVec 64))
(declare-fun temp338_53 () (_ BitVec 64))
(declare-fun temp338_54 () (_ BitVec 64))
(declare-fun temp338_55 () (_ BitVec 64))
(declare-fun temp338_56 () (_ BitVec 64))
(declare-fun temp338_57 () (_ BitVec 64))
(declare-fun temp338_58 () (_ BitVec 64))
(declare-fun temp338_59 () (_ BitVec 64))
(declare-fun temp338_60 () (_ BitVec 64))
(declare-fun temp338_61 () (_ BitVec 64))
(declare-fun temp338_62 () (_ BitVec 64))
(declare-fun temp338_63 () (_ BitVec 64))
(declare-fun temp338_64 () (_ BitVec 64))
(declare-fun temp338_65 () (_ BitVec 64))
(declare-fun temp338_66 () (_ BitVec 64))
(declare-fun temp338_67 () (_ BitVec 64))
(declare-fun temp338_68 () (_ BitVec 64))
(declare-fun temp338_69 () (_ BitVec 64))
(declare-fun temp338_70 () (_ BitVec 64))
(declare-fun temp338_71 () (_ BitVec 64))
(declare-fun temp338_72 () (_ BitVec 64))
(declare-fun temp338_73 () (_ BitVec 64))
(declare-fun temp338_74 () (_ BitVec 64))
(declare-fun temp338_75 () (_ BitVec 64))
(declare-fun temp338_76 () (_ BitVec 64))
(declare-fun temp338_77 () (_ BitVec 64))
(declare-fun temp338_78 () (_ BitVec 64))
(declare-fun temp338_79 () (_ BitVec 64))
(declare-fun temp338_80 () (_ BitVec 64))
(declare-fun temp338_81 () (_ BitVec 64))
(declare-fun temp338_82 () (_ BitVec 64))
(declare-fun temp338_83 () (_ BitVec 64))
(declare-fun temp338_84 () (_ BitVec 64))
(declare-fun temp338_85 () (_ BitVec 64))
(declare-fun temp338_86 () (_ BitVec 64))
(declare-fun temp338_87 () (_ BitVec 64))
(declare-fun temp338_88 () (_ BitVec 64))
(declare-fun temp338_89 () (_ BitVec 64))
(declare-fun temp338_90 () (_ BitVec 64))
(declare-fun temp338_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp338_92 () (_ BitVec 64))
(declare-fun temp338_93 () (_ BitVec 64))
(declare-fun temp338_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp338_95 () (_ BitVec 64))
(declare-fun temp338_96 () (_ BitVec 64))
(declare-fun temp338_97 () (_ BitVec 64))
(declare-fun temp338_98 () (_ BitVec 64))
(declare-fun temp338_99 () (_ BitVec 64))
(declare-fun temp338_100 () (_ BitVec 64))
(declare-fun temp338_101 () (_ BitVec 64))
(declare-fun temp338_102 () (_ BitVec 64))
(declare-fun temp338_103 () (_ BitVec 64))
(declare-fun temp338_104 () (_ BitVec 64))
(declare-fun temp338_105 () (_ BitVec 64))
(declare-fun temp338_106 () (_ BitVec 64))
(declare-fun temp338_107 () (_ BitVec 64))
(declare-fun temp338_108 () (_ BitVec 64))
(declare-fun temp338_109 () (_ BitVec 64))
(declare-fun temp338_110 () (_ BitVec 64))
(declare-fun temp338_111 () (_ BitVec 64))
(declare-fun temp338_112 () (_ BitVec 64))
(declare-fun temp338_113 () (_ BitVec 64))
(declare-fun temp338_114 () (_ BitVec 64))
(declare-fun temp338_115 () (_ BitVec 64))
(declare-fun temp338_116 () (_ BitVec 64))
(declare-fun temp338_117 () (_ BitVec 64))
(declare-fun temp338_118 () (_ BitVec 64))
(declare-fun temp338_119 () (_ BitVec 64))
(declare-fun temp338_120 () (_ BitVec 64))
(declare-fun temp338_121 () (_ BitVec 64))
(declare-fun temp338_122 () (_ BitVec 64))
(declare-fun temp338_123 () (_ BitVec 64))
(declare-fun temp338_124 () (_ BitVec 64))
(declare-fun temp338_125 () (_ BitVec 64))
(declare-fun temp338_126 () (_ BitVec 64))
(declare-fun temp338_127 () (_ BitVec 64))
(declare-fun temp338_128 () (_ BitVec 64))
(declare-fun temp338_129 () (_ BitVec 64))
(declare-fun temp338_130 () (_ BitVec 64))
(declare-fun temp338_131 () (_ BitVec 64))
(declare-fun temp338_132 () (_ BitVec 64))
(declare-fun temp338_133 () (_ BitVec 64))
(declare-fun temp338_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp338_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp338_136 () (_ BitVec 64))
(declare-fun temp338_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp338_138 () (_ BitVec 64))
(declare-fun temp338_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp338_140 () (_ BitVec 64))
(declare-fun temp338_141 () (_ BitVec 64))
(declare-fun temp338_142 () (_ BitVec 64))
(declare-fun temp338_143 () (_ BitVec 64))
(declare-fun temp338_144 () (_ BitVec 64))
(declare-fun temp338_145 () (_ BitVec 64))
(declare-fun temp338_146 () (_ BitVec 64))
(declare-fun temp338_147 () (_ BitVec 64))
(declare-fun temp338_148 () (_ BitVec 64))
(declare-fun temp338_149 () (_ BitVec 64))
(declare-fun temp338_150 () (_ BitVec 64))
(declare-fun temp338_151 () (_ BitVec 64))
(declare-fun temp338_152 () (_ BitVec 64))
(declare-fun temp338_153 () (_ BitVec 64))
(declare-fun temp338_154 () (_ BitVec 64))
(declare-fun temp338_155 () (_ BitVec 64))
(declare-fun temp338_157 () (_ BitVec 64))
(declare-fun temp338_158 () (_ BitVec 64))
(declare-fun temp338_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp338_159 () (_ BitVec 64))
(declare-fun temp338_160 () (_ BitVec 64))
(declare-fun temp338_162 () (_ BitVec 64))
(declare-fun temp338_163 () (_ BitVec 64))
(declare-fun temp338_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp338_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp338_165 () (_ BitVec 64))
(declare-fun temp338_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp338_167 () (_ BitVec 64))
(declare-fun temp338_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp338_169 () (_ BitVec 64))
(declare-fun temp338_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp338_171 () (_ BitVec 64))
(declare-fun temp338_172 () (_ BitVec 64))
(declare-fun temp338_173 () (_ BitVec 64))
(declare-fun temp338_174 () (_ BitVec 64))
(declare-fun temp338_175 () (_ BitVec 64))
(declare-fun temp338_176 () (_ BitVec 64))
(declare-fun temp338_177 () (_ BitVec 64))
(declare-fun temp338_178 () (_ BitVec 64))
(declare-fun temp338_179 () (_ BitVec 64))
(declare-fun temp338_180 () (_ BitVec 64))
(declare-fun temp338_181 () (_ BitVec 64))
(declare-fun temp338_182 () (_ BitVec 64))
(declare-fun temp338_183 () (_ BitVec 64))
(declare-fun temp338_184 () (_ BitVec 64))
(declare-fun temp338_185 () (_ BitVec 64))
(declare-fun temp338_186 () (_ BitVec 64))
(declare-fun temp338_187 () (_ BitVec 64))
(declare-fun temp338_188 () (_ BitVec 64))
(declare-fun temp338_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp338_190 () (_ BitVec 64))
(declare-fun temp338_192 () (_ BitVec 64))
(declare-fun temp338_193 () (_ BitVec 64))
(declare-fun temp338_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp338_194 () (_ BitVec 64))
(declare-fun temp338_195 () (_ BitVec 64))
(declare-fun temp338_197 () (_ BitVec 64))
(declare-fun temp338_198 () (_ BitVec 64))
(declare-fun temp338_196 () (_ BitVec 64))
(declare-fun temp338_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp338_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp338_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp338_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp338_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp338_204 () (_ BitVec 64))
(declare-fun temp338_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp338_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp338_207 () (_ BitVec 64))
(declare-fun temp338_208 () (_ BitVec 64))
(declare-fun temp338_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp338_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp338_211 () (_ BitVec 64))
(declare-fun temp338_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp338_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp338_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp338_215 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp338_216 () (_ BitVec 64))
(assert (= temp338_1 #x0000000000000001))
(assert (= var77203 temp338_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp338_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp338_2)))
(assert (= temp338_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp338_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_4 #x0000000000000000))
(assert (= var210941 temp338_4))
(assert (= temp338_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp338_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_6 #x0000000000000000))
(assert (= var210986 temp338_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp338_7 #x0000000000000000))
(assert (= temp338_8 temp338_7))
(assert (= temp338_9 (select ARGNAME_padding_NAMEEND_VAL temp338_8)))
(assert (= temp338_10 #x0000000000000001))
(assert (= temp338_11 temp338_10))
(assert (= temp338_12 (select ARGNAME_padding_NAMEEND_VAL temp338_11)))
(assert (= temp338_13 #x0000000000000002))
(assert (= temp338_14 temp338_13))
(assert (= temp338_15 (select ARGNAME_padding_NAMEEND_VAL temp338_14)))
(assert (= temp338_16 #x0000000000000003))
(assert (= temp338_17 temp338_16))
(assert (= temp338_18 (select ARGNAME_padding_NAMEEND_VAL temp338_17)))
(assert (= temp338_19 #x0000000000000004))
(assert (= temp338_20 temp338_19))
(assert (= temp338_21 (select ARGNAME_padding_NAMEEND_VAL temp338_20)))
(assert (= temp338_22 #x0000000000000005))
(assert (= temp338_23 temp338_22))
(assert (= temp338_24 (select ARGNAME_padding_NAMEEND_VAL temp338_23)))
(assert (= temp338_25 #x0000000000000000))
(assert (= temp338_26 #x0000000000000000))
(assert (= temp338_27 temp338_26))
(assert (= temp338_28 (select ARGNAME_padding_NAMEEND_VAL temp338_27)))
(assert (= temp338_29 #x0000000000000000))
(assert (= temp338_30 #x0000000000000001))
(assert (= temp338_31 temp338_30))
(assert (= temp338_32 (select ARGNAME_padding_NAMEEND_VAL temp338_31)))
(assert (= temp338_33 #x0000000000000000))
(assert (= temp338_34 #x0000000000000002))
(assert (= temp338_35 temp338_34))
(assert (= temp338_36 (select ARGNAME_padding_NAMEEND_VAL temp338_35)))
(assert (= temp338_37 #x0000000000000000))
(assert (= temp338_38 #x0000000000000003))
(assert (= temp338_39 temp338_38))
(assert (= temp338_40 (select ARGNAME_padding_NAMEEND_VAL temp338_39)))
(assert (= temp338_41 #x0000000000000000))
(assert (= temp338_42 #x0000000000000004))
(assert (= temp338_43 temp338_42))
(assert (= temp338_44 (select ARGNAME_padding_NAMEEND_VAL temp338_43)))
(assert (= temp338_45 #x0000000000000000))
(assert (= temp338_46 #x0000000000000005))
(assert (= temp338_47 temp338_46))
(assert (= temp338_48 (select ARGNAME_padding_NAMEEND_VAL temp338_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp338_28 temp338_25)
             (bvslt temp338_32 temp338_29)
             (bvslt temp338_36 temp338_33)
             (bvslt temp338_40 temp338_37)
             (bvslt temp338_44 temp338_41)
             (bvslt temp338_48 temp338_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_49 #x0000000000000000))
(assert (= var1191714 temp338_49))
(assert (= temp338_50 #x0000000000000000))
(assert (= temp338_51 temp338_50))
(assert (= temp338_52 (select ARGNAME_output_padding_NAMEEND_VAL temp338_51)))
(assert (= temp338_53 #x0000000000000001))
(assert (= temp338_54 temp338_53))
(assert (= temp338_55 (select ARGNAME_output_padding_NAMEEND_VAL temp338_54)))
(assert (= temp338_56 #x0000000000000002))
(assert (= temp338_57 temp338_56))
(assert (= temp338_58 (select ARGNAME_output_padding_NAMEEND_VAL temp338_57)))
(assert (= temp338_59 #x0000000000000003))
(assert (= temp338_60 temp338_59))
(assert (= temp338_61 (select ARGNAME_output_padding_NAMEEND_VAL temp338_60)))
(assert (= temp338_62 #x0000000000000004))
(assert (= temp338_63 temp338_62))
(assert (= temp338_64 (select ARGNAME_output_padding_NAMEEND_VAL temp338_63)))
(assert (= temp338_65 #x0000000000000005))
(assert (= temp338_66 temp338_65))
(assert (= temp338_67 (select ARGNAME_output_padding_NAMEEND_VAL temp338_66)))
(assert (= temp338_68 #x0000000000000000))
(assert (= temp338_69 #x0000000000000000))
(assert (= temp338_70 temp338_69))
(assert (= temp338_71 (select ARGNAME_output_padding_NAMEEND_VAL temp338_70)))
(assert (= temp338_72 #x0000000000000000))
(assert (= temp338_73 #x0000000000000001))
(assert (= temp338_74 temp338_73))
(assert (= temp338_75 (select ARGNAME_output_padding_NAMEEND_VAL temp338_74)))
(assert (= temp338_76 #x0000000000000000))
(assert (= temp338_77 #x0000000000000002))
(assert (= temp338_78 temp338_77))
(assert (= temp338_79 (select ARGNAME_output_padding_NAMEEND_VAL temp338_78)))
(assert (= temp338_80 #x0000000000000000))
(assert (= temp338_81 #x0000000000000003))
(assert (= temp338_82 temp338_81))
(assert (= temp338_83 (select ARGNAME_output_padding_NAMEEND_VAL temp338_82)))
(assert (= temp338_84 #x0000000000000000))
(assert (= temp338_85 #x0000000000000004))
(assert (= temp338_86 temp338_85))
(assert (= temp338_87 (select ARGNAME_output_padding_NAMEEND_VAL temp338_86)))
(assert (= temp338_88 #x0000000000000000))
(assert (= temp338_89 #x0000000000000005))
(assert (= temp338_90 temp338_89))
(assert (= temp338_91 (select ARGNAME_output_padding_NAMEEND_VAL temp338_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp338_71 temp338_68)
             (bvslt temp338_75 temp338_72)
             (bvslt temp338_79 temp338_76)
             (bvslt temp338_83 temp338_80)
             (bvslt temp338_87 temp338_84)
             (bvslt temp338_91 temp338_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_92 #x0000000000000000))
(assert (= var1191725 temp338_92))
(assert (= temp338_93 #x0000000000000000))
(assert (= temp338_94 temp338_93))
(assert (= temp338_95 (select ARGNAME_stride_NAMEEND_VAL temp338_94)))
(assert (= temp338_96 #x0000000000000001))
(assert (= temp338_97 temp338_96))
(assert (= temp338_98 (select ARGNAME_stride_NAMEEND_VAL temp338_97)))
(assert (= temp338_99 #x0000000000000002))
(assert (= temp338_100 temp338_99))
(assert (= temp338_101 (select ARGNAME_stride_NAMEEND_VAL temp338_100)))
(assert (= temp338_102 #x0000000000000003))
(assert (= temp338_103 temp338_102))
(assert (= temp338_104 (select ARGNAME_stride_NAMEEND_VAL temp338_103)))
(assert (= temp338_105 #x0000000000000004))
(assert (= temp338_106 temp338_105))
(assert (= temp338_107 (select ARGNAME_stride_NAMEEND_VAL temp338_106)))
(assert (= temp338_108 #x0000000000000005))
(assert (= temp338_109 temp338_108))
(assert (= temp338_110 (select ARGNAME_stride_NAMEEND_VAL temp338_109)))
(assert (= temp338_111 #x0000000000000000))
(assert (= temp338_112 #x0000000000000000))
(assert (= temp338_113 temp338_112))
(assert (= temp338_114 (select ARGNAME_stride_NAMEEND_VAL temp338_113)))
(assert (= temp338_115 #x0000000000000000))
(assert (= temp338_116 #x0000000000000001))
(assert (= temp338_117 temp338_116))
(assert (= temp338_118 (select ARGNAME_stride_NAMEEND_VAL temp338_117)))
(assert (= temp338_119 #x0000000000000000))
(assert (= temp338_120 #x0000000000000002))
(assert (= temp338_121 temp338_120))
(assert (= temp338_122 (select ARGNAME_stride_NAMEEND_VAL temp338_121)))
(assert (= temp338_123 #x0000000000000000))
(assert (= temp338_124 #x0000000000000003))
(assert (= temp338_125 temp338_124))
(assert (= temp338_126 (select ARGNAME_stride_NAMEEND_VAL temp338_125)))
(assert (= temp338_127 #x0000000000000000))
(assert (= temp338_128 #x0000000000000004))
(assert (= temp338_129 temp338_128))
(assert (= temp338_130 (select ARGNAME_stride_NAMEEND_VAL temp338_129)))
(assert (= temp338_131 #x0000000000000000))
(assert (= temp338_132 #x0000000000000005))
(assert (= temp338_133 temp338_132))
(assert (= temp338_134 (select ARGNAME_stride_NAMEEND_VAL temp338_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp338_114 temp338_111)
             (bvsle temp338_118 temp338_115)
             (bvsle temp338_122 temp338_119)
             (bvsle temp338_126 temp338_123)
             (bvsle temp338_130 temp338_127)
             (bvsle temp338_134 temp338_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_135 #x0000000000000000))
(assert (= var1191735 temp338_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_136 #x0000000000000001))
(assert (= var1191747 temp338_136))
(assert (= temp338_137 #x0000000000000000))
(assert (= var1179826 temp338_137))
(assert (= temp338_138 #x0000000000000000))
(assert (= temp338_139 temp338_138))
(assert (= temp338_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_139)))
(assert (= temp338_141 #x0000000000000001))
(assert (= temp338_142 temp338_141))
(assert (= temp338_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_142)))
(assert (= temp338_144 #x0000000000000002))
(assert (= temp338_145 temp338_144))
(assert (= temp338_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_145)))
(assert (= temp338_147 #x0000000000000003))
(assert (= temp338_148 temp338_147))
(assert (= temp338_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_148)))
(assert (= temp338_150 #x0000000000000004))
(assert (= temp338_151 temp338_150))
(assert (= temp338_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_151)))
(assert (= temp338_153 #x0000000000000005))
(assert (= temp338_154 temp338_153))
(assert (= temp338_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_154)))
(assert (= temp338_157 var1179826))
(assert (= temp338_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_157)))
(assert (= temp338_156 temp338_158))
(assert (= var1191780
   (ite (bvslt temp338_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_159 #x0000000000000000))
(assert (= var1191780 temp338_159))
(assert (= temp338_160 #x0000000000000000))
(assert (= var1179826 temp338_160))
(assert (= temp338_162 var1179826))
(assert (= temp338_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_162)))
(assert (= temp338_161 temp338_163))
(assert (= var1191802 (bvsmod temp338_161 ARGNAME_groups_NAMEEND)))
(assert (= temp338_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp338_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp338_165 #x0000000000000001))
(assert (= var1191803 temp338_165))
(assert (= temp338_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp338_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_167 #x0000000000000001))
(assert (= var1191823 temp338_167))
(assert (= temp338_168 #x0000000000000001))
(assert (= var1180714 temp338_168))
(assert (= temp338_169 #x0000000000000000))
(assert (= temp338_170 temp338_169))
(assert (= temp338_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp338_170)))
(assert (= temp338_172 #x0000000000000001))
(assert (= temp338_173 temp338_172))
(assert (= temp338_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp338_173)))
(assert (= temp338_175 #x0000000000000002))
(assert (= temp338_176 temp338_175))
(assert (= temp338_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp338_176)))
(assert (= temp338_178 #x0000000000000003))
(assert (= temp338_179 temp338_178))
(assert (= temp338_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp338_179)))
(assert (= temp338_181 #x0000000000000004))
(assert (= temp338_182 temp338_181))
(assert (= temp338_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp338_182)))
(assert (= temp338_184 #x0000000000000005))
(assert (= temp338_185 temp338_184))
(assert (= temp338_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp338_185)))
(assert (= temp338_187 #x0000000000000000))
(assert (= temp338_188
   (ite (bvslt var1180714 temp338_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp338_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp338_188)))
(assert (= var1191831 temp338_189))
(assert (bvslt (ite (bvslt var1180714 temp338_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp338_190 #x0000000000000001))
(assert (= var1180714 temp338_190))
(assert (= temp338_192 var1180714))
(assert (= temp338_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_192)))
(assert (= temp338_191 temp338_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp338_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp338_194 #x0000000000000001))
(assert (= var1191836 temp338_194))
(assert (= temp338_195 #x0000000000000000))
(assert (= var1179826 temp338_195))
(assert (= temp338_197 var1179826))
(assert (= temp338_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_197)))
(assert (= temp338_196 temp338_198))
(assert (= temp338_199 #x0000000000000002))
(assert (= var1586025 temp338_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp338_200 #x0000000000000001))
(assert (= var1191993 temp338_200))
(assert (= temp338_201 #x0000000000000001))
(assert (= var2700303 temp338_201))
(assert (= temp338_202 #x0000000000000001))
(assert (= var2962447 temp338_202))
(assert (= temp338_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp338_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_204 #x0000000000000001))
(assert (= var211058 temp338_204))
(assert (= temp338_205 #x0000000000000001))
(assert (= var211188 temp338_205))
(assert (= var3879401 var211188))
(assert (= temp338_206 #x0000000000000000))
(assert (= var3866802 temp338_206))
(assert (= temp338_207 #x0000000000000000))
(assert (= temp338_208
   (ite (bvslt var3866802 temp338_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp338_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp338_208)))
(assert (= var3879420 temp338_209))
(assert (bvslt (ite (bvslt var3866802 temp338_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp338_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp338_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp338_211 #x0000000000000001))
(assert (= var3879421 temp338_211))
(assert (= temp338_212 #x0000000000000000))
(assert (= var4079423 temp338_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp338_213 #x0000000000000002))
(assert (= var4208259 temp338_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_214 #x0000000000000000))
(assert (= var4273820 temp338_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5321104 var211201))
(assert (= var5583248 var211201))
(assert (= temp338_215 #x0000000000000000))
(assert (= var5910928 temp338_215))
(assert (= temp338_216 #x0000000000000001))
(assert (= var211058 temp338_216))
(model-add temp338_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp338_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp338_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp338_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





