(declare-fun temp10192_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10192_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10192_3 () (_ BitVec 64))
(declare-fun temp10192_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10192_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10192_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10192_7 () (_ BitVec 64))
(declare-fun temp10192_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10192_9 () (_ BitVec 64))
(declare-fun temp10192_10 () (_ BitVec 64))
(declare-fun temp10192_11 () (_ BitVec 64))
(declare-fun temp10192_12 () (_ BitVec 64))
(declare-fun temp10192_13 () (_ BitVec 64))
(declare-fun temp10192_14 () (_ BitVec 64))
(declare-fun temp10192_15 () (_ BitVec 64))
(declare-fun temp10192_16 () (_ BitVec 64))
(declare-fun temp10192_17 () (_ BitVec 64))
(declare-fun temp10192_18 () (_ BitVec 64))
(declare-fun temp10192_19 () (_ BitVec 64))
(declare-fun temp10192_20 () (_ BitVec 64))
(declare-fun temp10192_21 () (_ BitVec 64))
(declare-fun temp10192_22 () (_ BitVec 64))
(declare-fun temp10192_23 () (_ BitVec 64))
(declare-fun temp10192_24 () (_ BitVec 64))
(declare-fun temp10192_25 () (_ BitVec 64))
(declare-fun temp10192_26 () (_ BitVec 64))
(declare-fun temp10192_27 () (_ BitVec 64))
(declare-fun temp10192_28 () (_ BitVec 64))
(declare-fun temp10192_29 () (_ BitVec 64))
(declare-fun temp10192_30 () (_ BitVec 64))
(declare-fun temp10192_31 () (_ BitVec 64))
(declare-fun temp10192_32 () (_ BitVec 64))
(declare-fun temp10192_33 () (_ BitVec 64))
(declare-fun temp10192_34 () (_ BitVec 64))
(declare-fun temp10192_35 () (_ BitVec 64))
(declare-fun temp10192_36 () (_ BitVec 64))
(declare-fun temp10192_37 () (_ BitVec 64))
(declare-fun temp10192_38 () (_ BitVec 64))
(declare-fun temp10192_39 () (_ BitVec 64))
(declare-fun temp10192_40 () (_ BitVec 64))
(declare-fun temp10192_41 () (_ BitVec 64))
(declare-fun temp10192_42 () (_ BitVec 64))
(declare-fun temp10192_43 () (_ BitVec 64))
(declare-fun temp10192_44 () (_ BitVec 64))
(declare-fun temp10192_45 () (_ BitVec 64))
(declare-fun temp10192_46 () (_ BitVec 64))
(declare-fun temp10192_47 () (_ BitVec 64))
(declare-fun temp10192_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10192_49 () (_ BitVec 64))
(declare-fun temp10192_50 () (_ BitVec 64))
(declare-fun temp10192_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10192_52 () (_ BitVec 64))
(declare-fun temp10192_53 () (_ BitVec 64))
(declare-fun temp10192_54 () (_ BitVec 64))
(declare-fun temp10192_55 () (_ BitVec 64))
(declare-fun temp10192_56 () (_ BitVec 64))
(declare-fun temp10192_57 () (_ BitVec 64))
(declare-fun temp10192_58 () (_ BitVec 64))
(declare-fun temp10192_59 () (_ BitVec 64))
(declare-fun temp10192_60 () (_ BitVec 64))
(declare-fun temp10192_61 () (_ BitVec 64))
(declare-fun temp10192_62 () (_ BitVec 64))
(declare-fun temp10192_63 () (_ BitVec 64))
(declare-fun temp10192_64 () (_ BitVec 64))
(declare-fun temp10192_65 () (_ BitVec 64))
(declare-fun temp10192_66 () (_ BitVec 64))
(declare-fun temp10192_67 () (_ BitVec 64))
(declare-fun temp10192_68 () (_ BitVec 64))
(declare-fun temp10192_69 () (_ BitVec 64))
(declare-fun temp10192_70 () (_ BitVec 64))
(declare-fun temp10192_71 () (_ BitVec 64))
(declare-fun temp10192_72 () (_ BitVec 64))
(declare-fun temp10192_73 () (_ BitVec 64))
(declare-fun temp10192_74 () (_ BitVec 64))
(declare-fun temp10192_75 () (_ BitVec 64))
(declare-fun temp10192_76 () (_ BitVec 64))
(declare-fun temp10192_77 () (_ BitVec 64))
(declare-fun temp10192_78 () (_ BitVec 64))
(declare-fun temp10192_79 () (_ BitVec 64))
(declare-fun temp10192_80 () (_ BitVec 64))
(declare-fun temp10192_81 () (_ BitVec 64))
(declare-fun temp10192_82 () (_ BitVec 64))
(declare-fun temp10192_83 () (_ BitVec 64))
(declare-fun temp10192_84 () (_ BitVec 64))
(declare-fun temp10192_85 () (_ BitVec 64))
(declare-fun temp10192_86 () (_ BitVec 64))
(declare-fun temp10192_87 () (_ BitVec 64))
(declare-fun temp10192_88 () (_ BitVec 64))
(declare-fun temp10192_89 () (_ BitVec 64))
(declare-fun temp10192_90 () (_ BitVec 64))
(declare-fun temp10192_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10192_92 () (_ BitVec 64))
(declare-fun temp10192_93 () (_ BitVec 64))
(declare-fun temp10192_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10192_95 () (_ BitVec 64))
(declare-fun temp10192_96 () (_ BitVec 64))
(declare-fun temp10192_97 () (_ BitVec 64))
(declare-fun temp10192_98 () (_ BitVec 64))
(declare-fun temp10192_99 () (_ BitVec 64))
(declare-fun temp10192_100 () (_ BitVec 64))
(declare-fun temp10192_101 () (_ BitVec 64))
(declare-fun temp10192_102 () (_ BitVec 64))
(declare-fun temp10192_103 () (_ BitVec 64))
(declare-fun temp10192_104 () (_ BitVec 64))
(declare-fun temp10192_105 () (_ BitVec 64))
(declare-fun temp10192_106 () (_ BitVec 64))
(declare-fun temp10192_107 () (_ BitVec 64))
(declare-fun temp10192_108 () (_ BitVec 64))
(declare-fun temp10192_109 () (_ BitVec 64))
(declare-fun temp10192_110 () (_ BitVec 64))
(declare-fun temp10192_111 () (_ BitVec 64))
(declare-fun temp10192_112 () (_ BitVec 64))
(declare-fun temp10192_113 () (_ BitVec 64))
(declare-fun temp10192_114 () (_ BitVec 64))
(declare-fun temp10192_115 () (_ BitVec 64))
(declare-fun temp10192_116 () (_ BitVec 64))
(declare-fun temp10192_117 () (_ BitVec 64))
(declare-fun temp10192_118 () (_ BitVec 64))
(declare-fun temp10192_119 () (_ BitVec 64))
(declare-fun temp10192_120 () (_ BitVec 64))
(declare-fun temp10192_121 () (_ BitVec 64))
(declare-fun temp10192_122 () (_ BitVec 64))
(declare-fun temp10192_123 () (_ BitVec 64))
(declare-fun temp10192_124 () (_ BitVec 64))
(declare-fun temp10192_125 () (_ BitVec 64))
(declare-fun temp10192_126 () (_ BitVec 64))
(declare-fun temp10192_127 () (_ BitVec 64))
(declare-fun temp10192_128 () (_ BitVec 64))
(declare-fun temp10192_129 () (_ BitVec 64))
(declare-fun temp10192_130 () (_ BitVec 64))
(declare-fun temp10192_131 () (_ BitVec 64))
(declare-fun temp10192_132 () (_ BitVec 64))
(declare-fun temp10192_133 () (_ BitVec 64))
(declare-fun temp10192_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10192_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10192_136 () (_ BitVec 64))
(declare-fun temp10192_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10192_138 () (_ BitVec 64))
(declare-fun temp10192_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10192_140 () (_ BitVec 64))
(declare-fun temp10192_141 () (_ BitVec 64))
(declare-fun temp10192_142 () (_ BitVec 64))
(declare-fun temp10192_143 () (_ BitVec 64))
(declare-fun temp10192_144 () (_ BitVec 64))
(declare-fun temp10192_145 () (_ BitVec 64))
(declare-fun temp10192_146 () (_ BitVec 64))
(declare-fun temp10192_147 () (_ BitVec 64))
(declare-fun temp10192_148 () (_ BitVec 64))
(declare-fun temp10192_149 () (_ BitVec 64))
(declare-fun temp10192_150 () (_ BitVec 64))
(declare-fun temp10192_151 () (_ BitVec 64))
(declare-fun temp10192_152 () (_ BitVec 64))
(declare-fun temp10192_153 () (_ BitVec 64))
(declare-fun temp10192_154 () (_ BitVec 64))
(declare-fun temp10192_155 () (_ BitVec 64))
(declare-fun temp10192_157 () (_ BitVec 64))
(declare-fun temp10192_158 () (_ BitVec 64))
(declare-fun temp10192_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10192_159 () (_ BitVec 64))
(declare-fun temp10192_160 () (_ BitVec 64))
(declare-fun temp10192_162 () (_ BitVec 64))
(declare-fun temp10192_163 () (_ BitVec 64))
(declare-fun temp10192_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10192_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10192_165 () (_ BitVec 64))
(declare-fun temp10192_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10192_167 () (_ BitVec 64))
(declare-fun temp10192_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10192_169 () (_ BitVec 64))
(declare-fun temp10192_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10192_171 () (_ BitVec 64))
(declare-fun temp10192_172 () (_ BitVec 64))
(declare-fun temp10192_173 () (_ BitVec 64))
(declare-fun temp10192_174 () (_ BitVec 64))
(declare-fun temp10192_175 () (_ BitVec 64))
(declare-fun temp10192_176 () (_ BitVec 64))
(declare-fun temp10192_177 () (_ BitVec 64))
(declare-fun temp10192_178 () (_ BitVec 64))
(declare-fun temp10192_179 () (_ BitVec 64))
(declare-fun temp10192_180 () (_ BitVec 64))
(declare-fun temp10192_181 () (_ BitVec 64))
(declare-fun temp10192_182 () (_ BitVec 64))
(declare-fun temp10192_183 () (_ BitVec 64))
(declare-fun temp10192_184 () (_ BitVec 64))
(declare-fun temp10192_185 () (_ BitVec 64))
(declare-fun temp10192_186 () (_ BitVec 64))
(declare-fun temp10192_187 () (_ BitVec 64))
(declare-fun temp10192_188 () (_ BitVec 64))
(declare-fun temp10192_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10192_190 () (_ BitVec 64))
(declare-fun temp10192_192 () (_ BitVec 64))
(declare-fun temp10192_193 () (_ BitVec 64))
(declare-fun temp10192_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10192_194 () (_ BitVec 64))
(declare-fun temp10192_195 () (_ BitVec 64))
(declare-fun temp10192_197 () (_ BitVec 64))
(declare-fun temp10192_198 () (_ BitVec 64))
(declare-fun temp10192_196 () (_ BitVec 64))
(declare-fun temp10192_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10192_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10192_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10192_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10192_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10192_204 () (_ BitVec 64))
(declare-fun temp10192_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10192_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10192_207 () (_ BitVec 64))
(declare-fun temp10192_208 () (_ BitVec 64))
(declare-fun temp10192_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10192_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10192_211 () (_ BitVec 64))
(declare-fun temp10192_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10192_213 () (_ BitVec 64))
(declare-fun temp10192_214 () (_ BitVec 64))
(declare-fun temp10192_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10192_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10192_217 () (_ BitVec 64))
(declare-fun temp10192_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10192_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10192_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5058960 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun temp10192_221 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp10192_222 () (_ BitVec 64))
(assert (= temp10192_1 #x0000000000000001))
(assert (= var77203 temp10192_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10192_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10192_2)))
(assert (= temp10192_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10192_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10192_4 #x0000000000000000))
(assert (= var210941 temp10192_4))
(assert (= temp10192_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10192_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10192_6 #x0000000000000000))
(assert (= var210986 temp10192_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10192_7 #x0000000000000000))
(assert (= temp10192_8 temp10192_7))
(assert (= temp10192_9 (select ARGNAME_padding_NAMEEND_VAL temp10192_8)))
(assert (= temp10192_10 #x0000000000000001))
(assert (= temp10192_11 temp10192_10))
(assert (= temp10192_12 (select ARGNAME_padding_NAMEEND_VAL temp10192_11)))
(assert (= temp10192_13 #x0000000000000002))
(assert (= temp10192_14 temp10192_13))
(assert (= temp10192_15 (select ARGNAME_padding_NAMEEND_VAL temp10192_14)))
(assert (= temp10192_16 #x0000000000000003))
(assert (= temp10192_17 temp10192_16))
(assert (= temp10192_18 (select ARGNAME_padding_NAMEEND_VAL temp10192_17)))
(assert (= temp10192_19 #x0000000000000004))
(assert (= temp10192_20 temp10192_19))
(assert (= temp10192_21 (select ARGNAME_padding_NAMEEND_VAL temp10192_20)))
(assert (= temp10192_22 #x0000000000000005))
(assert (= temp10192_23 temp10192_22))
(assert (= temp10192_24 (select ARGNAME_padding_NAMEEND_VAL temp10192_23)))
(assert (= temp10192_25 #x0000000000000000))
(assert (= temp10192_26 #x0000000000000000))
(assert (= temp10192_27 temp10192_26))
(assert (= temp10192_28 (select ARGNAME_padding_NAMEEND_VAL temp10192_27)))
(assert (= temp10192_29 #x0000000000000000))
(assert (= temp10192_30 #x0000000000000001))
(assert (= temp10192_31 temp10192_30))
(assert (= temp10192_32 (select ARGNAME_padding_NAMEEND_VAL temp10192_31)))
(assert (= temp10192_33 #x0000000000000000))
(assert (= temp10192_34 #x0000000000000002))
(assert (= temp10192_35 temp10192_34))
(assert (= temp10192_36 (select ARGNAME_padding_NAMEEND_VAL temp10192_35)))
(assert (= temp10192_37 #x0000000000000000))
(assert (= temp10192_38 #x0000000000000003))
(assert (= temp10192_39 temp10192_38))
(assert (= temp10192_40 (select ARGNAME_padding_NAMEEND_VAL temp10192_39)))
(assert (= temp10192_41 #x0000000000000000))
(assert (= temp10192_42 #x0000000000000004))
(assert (= temp10192_43 temp10192_42))
(assert (= temp10192_44 (select ARGNAME_padding_NAMEEND_VAL temp10192_43)))
(assert (= temp10192_45 #x0000000000000000))
(assert (= temp10192_46 #x0000000000000005))
(assert (= temp10192_47 temp10192_46))
(assert (= temp10192_48 (select ARGNAME_padding_NAMEEND_VAL temp10192_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10192_28 temp10192_25)
             (bvslt temp10192_32 temp10192_29)
             (bvslt temp10192_36 temp10192_33)
             (bvslt temp10192_40 temp10192_37)
             (bvslt temp10192_44 temp10192_41)
             (bvslt temp10192_48 temp10192_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10192_49 #x0000000000000000))
(assert (= var1191714 temp10192_49))
(assert (= temp10192_50 #x0000000000000000))
(assert (= temp10192_51 temp10192_50))
(assert (= temp10192_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10192_51)))
(assert (= temp10192_53 #x0000000000000001))
(assert (= temp10192_54 temp10192_53))
(assert (= temp10192_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10192_54)))
(assert (= temp10192_56 #x0000000000000002))
(assert (= temp10192_57 temp10192_56))
(assert (= temp10192_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10192_57)))
(assert (= temp10192_59 #x0000000000000003))
(assert (= temp10192_60 temp10192_59))
(assert (= temp10192_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10192_60)))
(assert (= temp10192_62 #x0000000000000004))
(assert (= temp10192_63 temp10192_62))
(assert (= temp10192_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10192_63)))
(assert (= temp10192_65 #x0000000000000005))
(assert (= temp10192_66 temp10192_65))
(assert (= temp10192_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10192_66)))
(assert (= temp10192_68 #x0000000000000000))
(assert (= temp10192_69 #x0000000000000000))
(assert (= temp10192_70 temp10192_69))
(assert (= temp10192_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10192_70)))
(assert (= temp10192_72 #x0000000000000000))
(assert (= temp10192_73 #x0000000000000001))
(assert (= temp10192_74 temp10192_73))
(assert (= temp10192_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10192_74)))
(assert (= temp10192_76 #x0000000000000000))
(assert (= temp10192_77 #x0000000000000002))
(assert (= temp10192_78 temp10192_77))
(assert (= temp10192_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10192_78)))
(assert (= temp10192_80 #x0000000000000000))
(assert (= temp10192_81 #x0000000000000003))
(assert (= temp10192_82 temp10192_81))
(assert (= temp10192_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10192_82)))
(assert (= temp10192_84 #x0000000000000000))
(assert (= temp10192_85 #x0000000000000004))
(assert (= temp10192_86 temp10192_85))
(assert (= temp10192_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10192_86)))
(assert (= temp10192_88 #x0000000000000000))
(assert (= temp10192_89 #x0000000000000005))
(assert (= temp10192_90 temp10192_89))
(assert (= temp10192_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10192_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10192_71 temp10192_68)
             (bvslt temp10192_75 temp10192_72)
             (bvslt temp10192_79 temp10192_76)
             (bvslt temp10192_83 temp10192_80)
             (bvslt temp10192_87 temp10192_84)
             (bvslt temp10192_91 temp10192_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10192_92 #x0000000000000000))
(assert (= var1191725 temp10192_92))
(assert (= temp10192_93 #x0000000000000000))
(assert (= temp10192_94 temp10192_93))
(assert (= temp10192_95 (select ARGNAME_stride_NAMEEND_VAL temp10192_94)))
(assert (= temp10192_96 #x0000000000000001))
(assert (= temp10192_97 temp10192_96))
(assert (= temp10192_98 (select ARGNAME_stride_NAMEEND_VAL temp10192_97)))
(assert (= temp10192_99 #x0000000000000002))
(assert (= temp10192_100 temp10192_99))
(assert (= temp10192_101 (select ARGNAME_stride_NAMEEND_VAL temp10192_100)))
(assert (= temp10192_102 #x0000000000000003))
(assert (= temp10192_103 temp10192_102))
(assert (= temp10192_104 (select ARGNAME_stride_NAMEEND_VAL temp10192_103)))
(assert (= temp10192_105 #x0000000000000004))
(assert (= temp10192_106 temp10192_105))
(assert (= temp10192_107 (select ARGNAME_stride_NAMEEND_VAL temp10192_106)))
(assert (= temp10192_108 #x0000000000000005))
(assert (= temp10192_109 temp10192_108))
(assert (= temp10192_110 (select ARGNAME_stride_NAMEEND_VAL temp10192_109)))
(assert (= temp10192_111 #x0000000000000000))
(assert (= temp10192_112 #x0000000000000000))
(assert (= temp10192_113 temp10192_112))
(assert (= temp10192_114 (select ARGNAME_stride_NAMEEND_VAL temp10192_113)))
(assert (= temp10192_115 #x0000000000000000))
(assert (= temp10192_116 #x0000000000000001))
(assert (= temp10192_117 temp10192_116))
(assert (= temp10192_118 (select ARGNAME_stride_NAMEEND_VAL temp10192_117)))
(assert (= temp10192_119 #x0000000000000000))
(assert (= temp10192_120 #x0000000000000002))
(assert (= temp10192_121 temp10192_120))
(assert (= temp10192_122 (select ARGNAME_stride_NAMEEND_VAL temp10192_121)))
(assert (= temp10192_123 #x0000000000000000))
(assert (= temp10192_124 #x0000000000000003))
(assert (= temp10192_125 temp10192_124))
(assert (= temp10192_126 (select ARGNAME_stride_NAMEEND_VAL temp10192_125)))
(assert (= temp10192_127 #x0000000000000000))
(assert (= temp10192_128 #x0000000000000004))
(assert (= temp10192_129 temp10192_128))
(assert (= temp10192_130 (select ARGNAME_stride_NAMEEND_VAL temp10192_129)))
(assert (= temp10192_131 #x0000000000000000))
(assert (= temp10192_132 #x0000000000000005))
(assert (= temp10192_133 temp10192_132))
(assert (= temp10192_134 (select ARGNAME_stride_NAMEEND_VAL temp10192_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10192_114 temp10192_111)
             (bvsle temp10192_118 temp10192_115)
             (bvsle temp10192_122 temp10192_119)
             (bvsle temp10192_126 temp10192_123)
             (bvsle temp10192_130 temp10192_127)
             (bvsle temp10192_134 temp10192_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10192_135 #x0000000000000000))
(assert (= var1191735 temp10192_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10192_136 #x0000000000000001))
(assert (= var1191747 temp10192_136))
(assert (= temp10192_137 #x0000000000000000))
(assert (= var1179826 temp10192_137))
(assert (= temp10192_138 #x0000000000000000))
(assert (= temp10192_139 temp10192_138))
(assert (= temp10192_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10192_139)))
(assert (= temp10192_141 #x0000000000000001))
(assert (= temp10192_142 temp10192_141))
(assert (= temp10192_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10192_142)))
(assert (= temp10192_144 #x0000000000000002))
(assert (= temp10192_145 temp10192_144))
(assert (= temp10192_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10192_145)))
(assert (= temp10192_147 #x0000000000000003))
(assert (= temp10192_148 temp10192_147))
(assert (= temp10192_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10192_148)))
(assert (= temp10192_150 #x0000000000000004))
(assert (= temp10192_151 temp10192_150))
(assert (= temp10192_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10192_151)))
(assert (= temp10192_153 #x0000000000000005))
(assert (= temp10192_154 temp10192_153))
(assert (= temp10192_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10192_154)))
(assert (= temp10192_157 var1179826))
(assert (= temp10192_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10192_157)))
(assert (= temp10192_156 temp10192_158))
(assert (= var1191780
   (ite (bvslt temp10192_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10192_159 #x0000000000000000))
(assert (= var1191780 temp10192_159))
(assert (= temp10192_160 #x0000000000000000))
(assert (= var1179826 temp10192_160))
(assert (= temp10192_162 var1179826))
(assert (= temp10192_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10192_162)))
(assert (= temp10192_161 temp10192_163))
(assert (= var1191802 (bvsmod temp10192_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10192_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10192_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10192_165 #x0000000000000001))
(assert (= var1191803 temp10192_165))
(assert (= temp10192_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10192_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10192_167 #x0000000000000001))
(assert (= var1191823 temp10192_167))
(assert (= temp10192_168 #x0000000000000001))
(assert (= var1180714 temp10192_168))
(assert (= temp10192_169 #x0000000000000000))
(assert (= temp10192_170 temp10192_169))
(assert (= temp10192_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10192_170)))
(assert (= temp10192_172 #x0000000000000001))
(assert (= temp10192_173 temp10192_172))
(assert (= temp10192_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10192_173)))
(assert (= temp10192_175 #x0000000000000002))
(assert (= temp10192_176 temp10192_175))
(assert (= temp10192_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10192_176)))
(assert (= temp10192_178 #x0000000000000003))
(assert (= temp10192_179 temp10192_178))
(assert (= temp10192_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10192_179)))
(assert (= temp10192_181 #x0000000000000004))
(assert (= temp10192_182 temp10192_181))
(assert (= temp10192_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10192_182)))
(assert (= temp10192_184 #x0000000000000005))
(assert (= temp10192_185 temp10192_184))
(assert (= temp10192_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10192_185)))
(assert (= temp10192_187 #x0000000000000000))
(assert (= temp10192_188
   (ite (bvslt var1180714 temp10192_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10192_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10192_188)))
(assert (= var1191831 temp10192_189))
(assert (bvslt (ite (bvslt var1180714 temp10192_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10192_190 #x0000000000000001))
(assert (= var1180714 temp10192_190))
(assert (= temp10192_192 var1180714))
(assert (= temp10192_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10192_192)))
(assert (= temp10192_191 temp10192_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10192_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10192_194 #x0000000000000001))
(assert (= var1191836 temp10192_194))
(assert (= temp10192_195 #x0000000000000000))
(assert (= var1179826 temp10192_195))
(assert (= temp10192_197 var1179826))
(assert (= temp10192_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10192_197)))
(assert (= temp10192_196 temp10192_198))
(assert (= temp10192_199 #x0000000000000002))
(assert (= var1586025 temp10192_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10192_200 #x0000000000000001))
(assert (= var1191993 temp10192_200))
(assert (= temp10192_201 #x0000000000000001))
(assert (= var2700303 temp10192_201))
(assert (= temp10192_202 #x0000000000000001))
(assert (= var2962447 temp10192_202))
(assert (= temp10192_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10192_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10192_204 #x0000000000000001))
(assert (= var211058 temp10192_204))
(assert (= temp10192_205 #x0000000000000001))
(assert (= var211188 temp10192_205))
(assert (= var3879401 var211188))
(assert (= temp10192_206 #x0000000000000000))
(assert (= var3866802 temp10192_206))
(assert (= temp10192_207 #x0000000000000000))
(assert (= temp10192_208
   (ite (bvslt var3866802 temp10192_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10192_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10192_208)))
(assert (= var3879420 temp10192_209))
(assert (bvslt (ite (bvslt var3866802 temp10192_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10192_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10192_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10192_211 #x0000000000000000))
(assert (= var3879421 temp10192_211))
(assert (= temp10192_212 #x0000000000000001))
(assert (= var3867690 temp10192_212))
(assert (= temp10192_213 #x0000000000000000))
(assert (= temp10192_214
   (ite (bvslt var3867690 temp10192_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10192_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10192_214)))
(assert (= var3879423 temp10192_215))
(assert (bvslt (ite (bvslt var3867690 temp10192_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10192_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10192_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10192_217 #x0000000000000001))
(assert (= var3879424 temp10192_217))
(assert (= temp10192_218 #x0000000000000000))
(assert (= var4079423 temp10192_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10192_219 #x0000000000000002))
(assert (= var4208259 temp10192_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10192_220 #x0000000000000000))
(assert (= var4273820 temp10192_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5058960 var211201))
(assert (= var5321104 var211201))
(assert (= temp10192_221 #x0000000000000000))
(assert (= var5648784 temp10192_221))
(assert (= temp10192_222 #x0000000000000001))
(assert (= var211058 temp10192_222))
(model-add temp10192_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10192_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10192_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10192_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




