(declare-fun temp10560_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10560_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10560_3 () (_ BitVec 64))
(declare-fun temp10560_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10560_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10560_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10560_7 () (_ BitVec 64))
(declare-fun temp10560_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10560_9 () (_ BitVec 64))
(declare-fun temp10560_10 () (_ BitVec 64))
(declare-fun temp10560_11 () (_ BitVec 64))
(declare-fun temp10560_12 () (_ BitVec 64))
(declare-fun temp10560_13 () (_ BitVec 64))
(declare-fun temp10560_14 () (_ BitVec 64))
(declare-fun temp10560_15 () (_ BitVec 64))
(declare-fun temp10560_16 () (_ BitVec 64))
(declare-fun temp10560_17 () (_ BitVec 64))
(declare-fun temp10560_18 () (_ BitVec 64))
(declare-fun temp10560_19 () (_ BitVec 64))
(declare-fun temp10560_20 () (_ BitVec 64))
(declare-fun temp10560_21 () (_ BitVec 64))
(declare-fun temp10560_22 () (_ BitVec 64))
(declare-fun temp10560_23 () (_ BitVec 64))
(declare-fun temp10560_24 () (_ BitVec 64))
(declare-fun temp10560_25 () (_ BitVec 64))
(declare-fun temp10560_26 () (_ BitVec 64))
(declare-fun temp10560_27 () (_ BitVec 64))
(declare-fun temp10560_28 () (_ BitVec 64))
(declare-fun temp10560_29 () (_ BitVec 64))
(declare-fun temp10560_30 () (_ BitVec 64))
(declare-fun temp10560_31 () (_ BitVec 64))
(declare-fun temp10560_32 () (_ BitVec 64))
(declare-fun temp10560_33 () (_ BitVec 64))
(declare-fun temp10560_34 () (_ BitVec 64))
(declare-fun temp10560_35 () (_ BitVec 64))
(declare-fun temp10560_36 () (_ BitVec 64))
(declare-fun temp10560_37 () (_ BitVec 64))
(declare-fun temp10560_38 () (_ BitVec 64))
(declare-fun temp10560_39 () (_ BitVec 64))
(declare-fun temp10560_40 () (_ BitVec 64))
(declare-fun temp10560_41 () (_ BitVec 64))
(declare-fun temp10560_42 () (_ BitVec 64))
(declare-fun temp10560_43 () (_ BitVec 64))
(declare-fun temp10560_44 () (_ BitVec 64))
(declare-fun temp10560_45 () (_ BitVec 64))
(declare-fun temp10560_46 () (_ BitVec 64))
(declare-fun temp10560_47 () (_ BitVec 64))
(declare-fun temp10560_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10560_49 () (_ BitVec 64))
(declare-fun temp10560_50 () (_ BitVec 64))
(declare-fun temp10560_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10560_52 () (_ BitVec 64))
(declare-fun temp10560_53 () (_ BitVec 64))
(declare-fun temp10560_54 () (_ BitVec 64))
(declare-fun temp10560_55 () (_ BitVec 64))
(declare-fun temp10560_56 () (_ BitVec 64))
(declare-fun temp10560_57 () (_ BitVec 64))
(declare-fun temp10560_58 () (_ BitVec 64))
(declare-fun temp10560_59 () (_ BitVec 64))
(declare-fun temp10560_60 () (_ BitVec 64))
(declare-fun temp10560_61 () (_ BitVec 64))
(declare-fun temp10560_62 () (_ BitVec 64))
(declare-fun temp10560_63 () (_ BitVec 64))
(declare-fun temp10560_64 () (_ BitVec 64))
(declare-fun temp10560_65 () (_ BitVec 64))
(declare-fun temp10560_66 () (_ BitVec 64))
(declare-fun temp10560_67 () (_ BitVec 64))
(declare-fun temp10560_68 () (_ BitVec 64))
(declare-fun temp10560_69 () (_ BitVec 64))
(declare-fun temp10560_70 () (_ BitVec 64))
(declare-fun temp10560_71 () (_ BitVec 64))
(declare-fun temp10560_72 () (_ BitVec 64))
(declare-fun temp10560_73 () (_ BitVec 64))
(declare-fun temp10560_74 () (_ BitVec 64))
(declare-fun temp10560_75 () (_ BitVec 64))
(declare-fun temp10560_76 () (_ BitVec 64))
(declare-fun temp10560_77 () (_ BitVec 64))
(declare-fun temp10560_78 () (_ BitVec 64))
(declare-fun temp10560_79 () (_ BitVec 64))
(declare-fun temp10560_80 () (_ BitVec 64))
(declare-fun temp10560_81 () (_ BitVec 64))
(declare-fun temp10560_82 () (_ BitVec 64))
(declare-fun temp10560_83 () (_ BitVec 64))
(declare-fun temp10560_84 () (_ BitVec 64))
(declare-fun temp10560_85 () (_ BitVec 64))
(declare-fun temp10560_86 () (_ BitVec 64))
(declare-fun temp10560_87 () (_ BitVec 64))
(declare-fun temp10560_88 () (_ BitVec 64))
(declare-fun temp10560_89 () (_ BitVec 64))
(declare-fun temp10560_90 () (_ BitVec 64))
(declare-fun temp10560_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10560_92 () (_ BitVec 64))
(declare-fun temp10560_93 () (_ BitVec 64))
(declare-fun temp10560_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10560_95 () (_ BitVec 64))
(declare-fun temp10560_96 () (_ BitVec 64))
(declare-fun temp10560_97 () (_ BitVec 64))
(declare-fun temp10560_98 () (_ BitVec 64))
(declare-fun temp10560_99 () (_ BitVec 64))
(declare-fun temp10560_100 () (_ BitVec 64))
(declare-fun temp10560_101 () (_ BitVec 64))
(declare-fun temp10560_102 () (_ BitVec 64))
(declare-fun temp10560_103 () (_ BitVec 64))
(declare-fun temp10560_104 () (_ BitVec 64))
(declare-fun temp10560_105 () (_ BitVec 64))
(declare-fun temp10560_106 () (_ BitVec 64))
(declare-fun temp10560_107 () (_ BitVec 64))
(declare-fun temp10560_108 () (_ BitVec 64))
(declare-fun temp10560_109 () (_ BitVec 64))
(declare-fun temp10560_110 () (_ BitVec 64))
(declare-fun temp10560_111 () (_ BitVec 64))
(declare-fun temp10560_112 () (_ BitVec 64))
(declare-fun temp10560_113 () (_ BitVec 64))
(declare-fun temp10560_114 () (_ BitVec 64))
(declare-fun temp10560_115 () (_ BitVec 64))
(declare-fun temp10560_116 () (_ BitVec 64))
(declare-fun temp10560_117 () (_ BitVec 64))
(declare-fun temp10560_118 () (_ BitVec 64))
(declare-fun temp10560_119 () (_ BitVec 64))
(declare-fun temp10560_120 () (_ BitVec 64))
(declare-fun temp10560_121 () (_ BitVec 64))
(declare-fun temp10560_122 () (_ BitVec 64))
(declare-fun temp10560_123 () (_ BitVec 64))
(declare-fun temp10560_124 () (_ BitVec 64))
(declare-fun temp10560_125 () (_ BitVec 64))
(declare-fun temp10560_126 () (_ BitVec 64))
(declare-fun temp10560_127 () (_ BitVec 64))
(declare-fun temp10560_128 () (_ BitVec 64))
(declare-fun temp10560_129 () (_ BitVec 64))
(declare-fun temp10560_130 () (_ BitVec 64))
(declare-fun temp10560_131 () (_ BitVec 64))
(declare-fun temp10560_132 () (_ BitVec 64))
(declare-fun temp10560_133 () (_ BitVec 64))
(declare-fun temp10560_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10560_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10560_136 () (_ BitVec 64))
(declare-fun temp10560_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10560_138 () (_ BitVec 64))
(declare-fun temp10560_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10560_140 () (_ BitVec 64))
(declare-fun temp10560_141 () (_ BitVec 64))
(declare-fun temp10560_142 () (_ BitVec 64))
(declare-fun temp10560_143 () (_ BitVec 64))
(declare-fun temp10560_144 () (_ BitVec 64))
(declare-fun temp10560_145 () (_ BitVec 64))
(declare-fun temp10560_146 () (_ BitVec 64))
(declare-fun temp10560_147 () (_ BitVec 64))
(declare-fun temp10560_148 () (_ BitVec 64))
(declare-fun temp10560_149 () (_ BitVec 64))
(declare-fun temp10560_150 () (_ BitVec 64))
(declare-fun temp10560_151 () (_ BitVec 64))
(declare-fun temp10560_152 () (_ BitVec 64))
(declare-fun temp10560_153 () (_ BitVec 64))
(declare-fun temp10560_154 () (_ BitVec 64))
(declare-fun temp10560_155 () (_ BitVec 64))
(declare-fun temp10560_157 () (_ BitVec 64))
(declare-fun temp10560_158 () (_ BitVec 64))
(declare-fun temp10560_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10560_159 () (_ BitVec 64))
(declare-fun temp10560_160 () (_ BitVec 64))
(declare-fun temp10560_162 () (_ BitVec 64))
(declare-fun temp10560_163 () (_ BitVec 64))
(declare-fun temp10560_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10560_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10560_165 () (_ BitVec 64))
(declare-fun temp10560_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10560_167 () (_ BitVec 64))
(declare-fun temp10560_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10560_169 () (_ BitVec 64))
(declare-fun temp10560_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10560_171 () (_ BitVec 64))
(declare-fun temp10560_172 () (_ BitVec 64))
(declare-fun temp10560_173 () (_ BitVec 64))
(declare-fun temp10560_174 () (_ BitVec 64))
(declare-fun temp10560_175 () (_ BitVec 64))
(declare-fun temp10560_176 () (_ BitVec 64))
(declare-fun temp10560_177 () (_ BitVec 64))
(declare-fun temp10560_178 () (_ BitVec 64))
(declare-fun temp10560_179 () (_ BitVec 64))
(declare-fun temp10560_180 () (_ BitVec 64))
(declare-fun temp10560_181 () (_ BitVec 64))
(declare-fun temp10560_182 () (_ BitVec 64))
(declare-fun temp10560_183 () (_ BitVec 64))
(declare-fun temp10560_184 () (_ BitVec 64))
(declare-fun temp10560_185 () (_ BitVec 64))
(declare-fun temp10560_186 () (_ BitVec 64))
(declare-fun temp10560_187 () (_ BitVec 64))
(declare-fun temp10560_188 () (_ BitVec 64))
(declare-fun temp10560_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10560_190 () (_ BitVec 64))
(declare-fun temp10560_192 () (_ BitVec 64))
(declare-fun temp10560_193 () (_ BitVec 64))
(declare-fun temp10560_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10560_194 () (_ BitVec 64))
(declare-fun temp10560_195 () (_ BitVec 64))
(declare-fun temp10560_197 () (_ BitVec 64))
(declare-fun temp10560_198 () (_ BitVec 64))
(declare-fun temp10560_196 () (_ BitVec 64))
(declare-fun temp10560_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10560_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10560_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10560_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10560_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10560_204 () (_ BitVec 64))
(declare-fun temp10560_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10560_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10560_207 () (_ BitVec 64))
(declare-fun temp10560_208 () (_ BitVec 64))
(declare-fun temp10560_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10560_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10560_211 () (_ BitVec 64))
(declare-fun temp10560_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10560_213 () (_ BitVec 64))
(declare-fun temp10560_214 () (_ BitVec 64))
(declare-fun temp10560_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10560_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10560_217 () (_ BitVec 64))
(declare-fun temp10560_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10560_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10560_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp10560_221 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5848909 () (_ BitVec 64))
(declare-fun temp10560_223 () (_ BitVec 64))
(declare-fun temp10560_222 () (_ BitVec 64))
(declare-fun temp10560_224 () (_ BitVec 64))
(declare-fun var6688234 () (_ BitVec 64))
(declare-fun temp10560_226 () (_ BitVec 64))
(declare-fun temp10560_225 () (_ BitVec 64))
(declare-fun temp10560_227 () (_ BitVec 64))
(assert (= temp10560_1 #x0000000000000001))
(assert (= var77203 temp10560_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10560_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10560_2)))
(assert (= temp10560_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10560_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10560_4 #x0000000000000000))
(assert (= var210941 temp10560_4))
(assert (= temp10560_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10560_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10560_6 #x0000000000000000))
(assert (= var210986 temp10560_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10560_7 #x0000000000000000))
(assert (= temp10560_8 temp10560_7))
(assert (= temp10560_9 (select ARGNAME_padding_NAMEEND_VAL temp10560_8)))
(assert (= temp10560_10 #x0000000000000001))
(assert (= temp10560_11 temp10560_10))
(assert (= temp10560_12 (select ARGNAME_padding_NAMEEND_VAL temp10560_11)))
(assert (= temp10560_13 #x0000000000000002))
(assert (= temp10560_14 temp10560_13))
(assert (= temp10560_15 (select ARGNAME_padding_NAMEEND_VAL temp10560_14)))
(assert (= temp10560_16 #x0000000000000003))
(assert (= temp10560_17 temp10560_16))
(assert (= temp10560_18 (select ARGNAME_padding_NAMEEND_VAL temp10560_17)))
(assert (= temp10560_19 #x0000000000000004))
(assert (= temp10560_20 temp10560_19))
(assert (= temp10560_21 (select ARGNAME_padding_NAMEEND_VAL temp10560_20)))
(assert (= temp10560_22 #x0000000000000005))
(assert (= temp10560_23 temp10560_22))
(assert (= temp10560_24 (select ARGNAME_padding_NAMEEND_VAL temp10560_23)))
(assert (= temp10560_25 #x0000000000000000))
(assert (= temp10560_26 #x0000000000000000))
(assert (= temp10560_27 temp10560_26))
(assert (= temp10560_28 (select ARGNAME_padding_NAMEEND_VAL temp10560_27)))
(assert (= temp10560_29 #x0000000000000000))
(assert (= temp10560_30 #x0000000000000001))
(assert (= temp10560_31 temp10560_30))
(assert (= temp10560_32 (select ARGNAME_padding_NAMEEND_VAL temp10560_31)))
(assert (= temp10560_33 #x0000000000000000))
(assert (= temp10560_34 #x0000000000000002))
(assert (= temp10560_35 temp10560_34))
(assert (= temp10560_36 (select ARGNAME_padding_NAMEEND_VAL temp10560_35)))
(assert (= temp10560_37 #x0000000000000000))
(assert (= temp10560_38 #x0000000000000003))
(assert (= temp10560_39 temp10560_38))
(assert (= temp10560_40 (select ARGNAME_padding_NAMEEND_VAL temp10560_39)))
(assert (= temp10560_41 #x0000000000000000))
(assert (= temp10560_42 #x0000000000000004))
(assert (= temp10560_43 temp10560_42))
(assert (= temp10560_44 (select ARGNAME_padding_NAMEEND_VAL temp10560_43)))
(assert (= temp10560_45 #x0000000000000000))
(assert (= temp10560_46 #x0000000000000005))
(assert (= temp10560_47 temp10560_46))
(assert (= temp10560_48 (select ARGNAME_padding_NAMEEND_VAL temp10560_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10560_28 temp10560_25)
             (bvslt temp10560_32 temp10560_29)
             (bvslt temp10560_36 temp10560_33)
             (bvslt temp10560_40 temp10560_37)
             (bvslt temp10560_44 temp10560_41)
             (bvslt temp10560_48 temp10560_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10560_49 #x0000000000000000))
(assert (= var1191714 temp10560_49))
(assert (= temp10560_50 #x0000000000000000))
(assert (= temp10560_51 temp10560_50))
(assert (= temp10560_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10560_51)))
(assert (= temp10560_53 #x0000000000000001))
(assert (= temp10560_54 temp10560_53))
(assert (= temp10560_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10560_54)))
(assert (= temp10560_56 #x0000000000000002))
(assert (= temp10560_57 temp10560_56))
(assert (= temp10560_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10560_57)))
(assert (= temp10560_59 #x0000000000000003))
(assert (= temp10560_60 temp10560_59))
(assert (= temp10560_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10560_60)))
(assert (= temp10560_62 #x0000000000000004))
(assert (= temp10560_63 temp10560_62))
(assert (= temp10560_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10560_63)))
(assert (= temp10560_65 #x0000000000000005))
(assert (= temp10560_66 temp10560_65))
(assert (= temp10560_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10560_66)))
(assert (= temp10560_68 #x0000000000000000))
(assert (= temp10560_69 #x0000000000000000))
(assert (= temp10560_70 temp10560_69))
(assert (= temp10560_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10560_70)))
(assert (= temp10560_72 #x0000000000000000))
(assert (= temp10560_73 #x0000000000000001))
(assert (= temp10560_74 temp10560_73))
(assert (= temp10560_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10560_74)))
(assert (= temp10560_76 #x0000000000000000))
(assert (= temp10560_77 #x0000000000000002))
(assert (= temp10560_78 temp10560_77))
(assert (= temp10560_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10560_78)))
(assert (= temp10560_80 #x0000000000000000))
(assert (= temp10560_81 #x0000000000000003))
(assert (= temp10560_82 temp10560_81))
(assert (= temp10560_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10560_82)))
(assert (= temp10560_84 #x0000000000000000))
(assert (= temp10560_85 #x0000000000000004))
(assert (= temp10560_86 temp10560_85))
(assert (= temp10560_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10560_86)))
(assert (= temp10560_88 #x0000000000000000))
(assert (= temp10560_89 #x0000000000000005))
(assert (= temp10560_90 temp10560_89))
(assert (= temp10560_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10560_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10560_71 temp10560_68)
             (bvslt temp10560_75 temp10560_72)
             (bvslt temp10560_79 temp10560_76)
             (bvslt temp10560_83 temp10560_80)
             (bvslt temp10560_87 temp10560_84)
             (bvslt temp10560_91 temp10560_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10560_92 #x0000000000000000))
(assert (= var1191725 temp10560_92))
(assert (= temp10560_93 #x0000000000000000))
(assert (= temp10560_94 temp10560_93))
(assert (= temp10560_95 (select ARGNAME_stride_NAMEEND_VAL temp10560_94)))
(assert (= temp10560_96 #x0000000000000001))
(assert (= temp10560_97 temp10560_96))
(assert (= temp10560_98 (select ARGNAME_stride_NAMEEND_VAL temp10560_97)))
(assert (= temp10560_99 #x0000000000000002))
(assert (= temp10560_100 temp10560_99))
(assert (= temp10560_101 (select ARGNAME_stride_NAMEEND_VAL temp10560_100)))
(assert (= temp10560_102 #x0000000000000003))
(assert (= temp10560_103 temp10560_102))
(assert (= temp10560_104 (select ARGNAME_stride_NAMEEND_VAL temp10560_103)))
(assert (= temp10560_105 #x0000000000000004))
(assert (= temp10560_106 temp10560_105))
(assert (= temp10560_107 (select ARGNAME_stride_NAMEEND_VAL temp10560_106)))
(assert (= temp10560_108 #x0000000000000005))
(assert (= temp10560_109 temp10560_108))
(assert (= temp10560_110 (select ARGNAME_stride_NAMEEND_VAL temp10560_109)))
(assert (= temp10560_111 #x0000000000000000))
(assert (= temp10560_112 #x0000000000000000))
(assert (= temp10560_113 temp10560_112))
(assert (= temp10560_114 (select ARGNAME_stride_NAMEEND_VAL temp10560_113)))
(assert (= temp10560_115 #x0000000000000000))
(assert (= temp10560_116 #x0000000000000001))
(assert (= temp10560_117 temp10560_116))
(assert (= temp10560_118 (select ARGNAME_stride_NAMEEND_VAL temp10560_117)))
(assert (= temp10560_119 #x0000000000000000))
(assert (= temp10560_120 #x0000000000000002))
(assert (= temp10560_121 temp10560_120))
(assert (= temp10560_122 (select ARGNAME_stride_NAMEEND_VAL temp10560_121)))
(assert (= temp10560_123 #x0000000000000000))
(assert (= temp10560_124 #x0000000000000003))
(assert (= temp10560_125 temp10560_124))
(assert (= temp10560_126 (select ARGNAME_stride_NAMEEND_VAL temp10560_125)))
(assert (= temp10560_127 #x0000000000000000))
(assert (= temp10560_128 #x0000000000000004))
(assert (= temp10560_129 temp10560_128))
(assert (= temp10560_130 (select ARGNAME_stride_NAMEEND_VAL temp10560_129)))
(assert (= temp10560_131 #x0000000000000000))
(assert (= temp10560_132 #x0000000000000005))
(assert (= temp10560_133 temp10560_132))
(assert (= temp10560_134 (select ARGNAME_stride_NAMEEND_VAL temp10560_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10560_114 temp10560_111)
             (bvsle temp10560_118 temp10560_115)
             (bvsle temp10560_122 temp10560_119)
             (bvsle temp10560_126 temp10560_123)
             (bvsle temp10560_130 temp10560_127)
             (bvsle temp10560_134 temp10560_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10560_135 #x0000000000000000))
(assert (= var1191735 temp10560_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10560_136 #x0000000000000001))
(assert (= var1191747 temp10560_136))
(assert (= temp10560_137 #x0000000000000000))
(assert (= var1179826 temp10560_137))
(assert (= temp10560_138 #x0000000000000000))
(assert (= temp10560_139 temp10560_138))
(assert (= temp10560_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10560_139)))
(assert (= temp10560_141 #x0000000000000001))
(assert (= temp10560_142 temp10560_141))
(assert (= temp10560_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10560_142)))
(assert (= temp10560_144 #x0000000000000002))
(assert (= temp10560_145 temp10560_144))
(assert (= temp10560_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10560_145)))
(assert (= temp10560_147 #x0000000000000003))
(assert (= temp10560_148 temp10560_147))
(assert (= temp10560_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10560_148)))
(assert (= temp10560_150 #x0000000000000004))
(assert (= temp10560_151 temp10560_150))
(assert (= temp10560_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10560_151)))
(assert (= temp10560_153 #x0000000000000005))
(assert (= temp10560_154 temp10560_153))
(assert (= temp10560_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10560_154)))
(assert (= temp10560_157 var1179826))
(assert (= temp10560_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10560_157)))
(assert (= temp10560_156 temp10560_158))
(assert (= var1191780
   (ite (bvslt temp10560_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10560_159 #x0000000000000000))
(assert (= var1191780 temp10560_159))
(assert (= temp10560_160 #x0000000000000000))
(assert (= var1179826 temp10560_160))
(assert (= temp10560_162 var1179826))
(assert (= temp10560_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10560_162)))
(assert (= temp10560_161 temp10560_163))
(assert (= var1191802 (bvsmod temp10560_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10560_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10560_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10560_165 #x0000000000000001))
(assert (= var1191803 temp10560_165))
(assert (= temp10560_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10560_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10560_167 #x0000000000000001))
(assert (= var1191823 temp10560_167))
(assert (= temp10560_168 #x0000000000000001))
(assert (= var1180714 temp10560_168))
(assert (= temp10560_169 #x0000000000000000))
(assert (= temp10560_170 temp10560_169))
(assert (= temp10560_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10560_170)))
(assert (= temp10560_172 #x0000000000000001))
(assert (= temp10560_173 temp10560_172))
(assert (= temp10560_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10560_173)))
(assert (= temp10560_175 #x0000000000000002))
(assert (= temp10560_176 temp10560_175))
(assert (= temp10560_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10560_176)))
(assert (= temp10560_178 #x0000000000000003))
(assert (= temp10560_179 temp10560_178))
(assert (= temp10560_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10560_179)))
(assert (= temp10560_181 #x0000000000000004))
(assert (= temp10560_182 temp10560_181))
(assert (= temp10560_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10560_182)))
(assert (= temp10560_184 #x0000000000000005))
(assert (= temp10560_185 temp10560_184))
(assert (= temp10560_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10560_185)))
(assert (= temp10560_187 #x0000000000000000))
(assert (= temp10560_188
   (ite (bvslt var1180714 temp10560_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10560_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10560_188)))
(assert (= var1191831 temp10560_189))
(assert (bvslt (ite (bvslt var1180714 temp10560_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10560_190 #x0000000000000001))
(assert (= var1180714 temp10560_190))
(assert (= temp10560_192 var1180714))
(assert (= temp10560_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10560_192)))
(assert (= temp10560_191 temp10560_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10560_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10560_194 #x0000000000000001))
(assert (= var1191836 temp10560_194))
(assert (= temp10560_195 #x0000000000000000))
(assert (= var1179826 temp10560_195))
(assert (= temp10560_197 var1179826))
(assert (= temp10560_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10560_197)))
(assert (= temp10560_196 temp10560_198))
(assert (= temp10560_199 #x0000000000000002))
(assert (= var1586025 temp10560_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10560_200 #x0000000000000001))
(assert (= var1191993 temp10560_200))
(assert (= temp10560_201 #x0000000000000001))
(assert (= var2700303 temp10560_201))
(assert (= temp10560_202 #x0000000000000001))
(assert (= var2962447 temp10560_202))
(assert (= temp10560_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10560_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10560_204 #x0000000000000001))
(assert (= var211058 temp10560_204))
(assert (= temp10560_205 #x0000000000000001))
(assert (= var211188 temp10560_205))
(assert (= var3879401 var211188))
(assert (= temp10560_206 #x0000000000000000))
(assert (= var3866802 temp10560_206))
(assert (= temp10560_207 #x0000000000000000))
(assert (= temp10560_208
   (ite (bvslt var3866802 temp10560_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10560_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10560_208)))
(assert (= var3879420 temp10560_209))
(assert (bvslt (ite (bvslt var3866802 temp10560_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10560_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10560_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10560_211 #x0000000000000000))
(assert (= var3879421 temp10560_211))
(assert (= temp10560_212 #x0000000000000001))
(assert (= var3867690 temp10560_212))
(assert (= temp10560_213 #x0000000000000000))
(assert (= temp10560_214
   (ite (bvslt var3867690 temp10560_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10560_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10560_214)))
(assert (= var3879423 temp10560_215))
(assert (bvslt (ite (bvslt var3867690 temp10560_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10560_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10560_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10560_217 #x0000000000000001))
(assert (= var3879424 temp10560_217))
(assert (= temp10560_218 #x0000000000000000))
(assert (= var4133117 temp10560_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10560_219 #x0000000000000002))
(assert (= var4339331 temp10560_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10560_220 #x0000000000000000))
(assert (= var4404892 temp10560_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4927888 var211201))
(assert (= var211388 var210913))
(assert (= temp10560_221 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp10560_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var5848909 var211389))
(assert (= temp10560_223 #x0000000000000001))
(assert (= temp10560_222 temp10560_223))
(assert (= temp10560_224 #x0000000000000001))
(assert (= var6688234 temp10560_224))
(assert (= temp10560_226 #xffffffffffffffff))
(assert (= temp10560_225 temp10560_226))
(assert (= temp10560_227 #x0000000000000001))
(assert (= var211058 temp10560_227))
(model-add temp10560_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10560_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10560_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10560_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




