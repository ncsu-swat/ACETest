(declare-fun temp10169_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10169_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10169_3 () (_ BitVec 64))
(declare-fun temp10169_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10169_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10169_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10169_7 () (_ BitVec 64))
(declare-fun temp10169_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10169_9 () (_ BitVec 64))
(declare-fun temp10169_10 () (_ BitVec 64))
(declare-fun temp10169_11 () (_ BitVec 64))
(declare-fun temp10169_12 () (_ BitVec 64))
(declare-fun temp10169_13 () (_ BitVec 64))
(declare-fun temp10169_14 () (_ BitVec 64))
(declare-fun temp10169_15 () (_ BitVec 64))
(declare-fun temp10169_16 () (_ BitVec 64))
(declare-fun temp10169_17 () (_ BitVec 64))
(declare-fun temp10169_18 () (_ BitVec 64))
(declare-fun temp10169_19 () (_ BitVec 64))
(declare-fun temp10169_20 () (_ BitVec 64))
(declare-fun temp10169_21 () (_ BitVec 64))
(declare-fun temp10169_22 () (_ BitVec 64))
(declare-fun temp10169_23 () (_ BitVec 64))
(declare-fun temp10169_24 () (_ BitVec 64))
(declare-fun temp10169_25 () (_ BitVec 64))
(declare-fun temp10169_26 () (_ BitVec 64))
(declare-fun temp10169_27 () (_ BitVec 64))
(declare-fun temp10169_28 () (_ BitVec 64))
(declare-fun temp10169_29 () (_ BitVec 64))
(declare-fun temp10169_30 () (_ BitVec 64))
(declare-fun temp10169_31 () (_ BitVec 64))
(declare-fun temp10169_32 () (_ BitVec 64))
(declare-fun temp10169_33 () (_ BitVec 64))
(declare-fun temp10169_34 () (_ BitVec 64))
(declare-fun temp10169_35 () (_ BitVec 64))
(declare-fun temp10169_36 () (_ BitVec 64))
(declare-fun temp10169_37 () (_ BitVec 64))
(declare-fun temp10169_38 () (_ BitVec 64))
(declare-fun temp10169_39 () (_ BitVec 64))
(declare-fun temp10169_40 () (_ BitVec 64))
(declare-fun temp10169_41 () (_ BitVec 64))
(declare-fun temp10169_42 () (_ BitVec 64))
(declare-fun temp10169_43 () (_ BitVec 64))
(declare-fun temp10169_44 () (_ BitVec 64))
(declare-fun temp10169_45 () (_ BitVec 64))
(declare-fun temp10169_46 () (_ BitVec 64))
(declare-fun temp10169_47 () (_ BitVec 64))
(declare-fun temp10169_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10169_49 () (_ BitVec 64))
(declare-fun temp10169_50 () (_ BitVec 64))
(declare-fun temp10169_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10169_52 () (_ BitVec 64))
(declare-fun temp10169_53 () (_ BitVec 64))
(declare-fun temp10169_54 () (_ BitVec 64))
(declare-fun temp10169_55 () (_ BitVec 64))
(declare-fun temp10169_56 () (_ BitVec 64))
(declare-fun temp10169_57 () (_ BitVec 64))
(declare-fun temp10169_58 () (_ BitVec 64))
(declare-fun temp10169_59 () (_ BitVec 64))
(declare-fun temp10169_60 () (_ BitVec 64))
(declare-fun temp10169_61 () (_ BitVec 64))
(declare-fun temp10169_62 () (_ BitVec 64))
(declare-fun temp10169_63 () (_ BitVec 64))
(declare-fun temp10169_64 () (_ BitVec 64))
(declare-fun temp10169_65 () (_ BitVec 64))
(declare-fun temp10169_66 () (_ BitVec 64))
(declare-fun temp10169_67 () (_ BitVec 64))
(declare-fun temp10169_68 () (_ BitVec 64))
(declare-fun temp10169_69 () (_ BitVec 64))
(declare-fun temp10169_70 () (_ BitVec 64))
(declare-fun temp10169_71 () (_ BitVec 64))
(declare-fun temp10169_72 () (_ BitVec 64))
(declare-fun temp10169_73 () (_ BitVec 64))
(declare-fun temp10169_74 () (_ BitVec 64))
(declare-fun temp10169_75 () (_ BitVec 64))
(declare-fun temp10169_76 () (_ BitVec 64))
(declare-fun temp10169_77 () (_ BitVec 64))
(declare-fun temp10169_78 () (_ BitVec 64))
(declare-fun temp10169_79 () (_ BitVec 64))
(declare-fun temp10169_80 () (_ BitVec 64))
(declare-fun temp10169_81 () (_ BitVec 64))
(declare-fun temp10169_82 () (_ BitVec 64))
(declare-fun temp10169_83 () (_ BitVec 64))
(declare-fun temp10169_84 () (_ BitVec 64))
(declare-fun temp10169_85 () (_ BitVec 64))
(declare-fun temp10169_86 () (_ BitVec 64))
(declare-fun temp10169_87 () (_ BitVec 64))
(declare-fun temp10169_88 () (_ BitVec 64))
(declare-fun temp10169_89 () (_ BitVec 64))
(declare-fun temp10169_90 () (_ BitVec 64))
(declare-fun temp10169_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10169_92 () (_ BitVec 64))
(declare-fun temp10169_93 () (_ BitVec 64))
(declare-fun temp10169_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10169_95 () (_ BitVec 64))
(declare-fun temp10169_96 () (_ BitVec 64))
(declare-fun temp10169_97 () (_ BitVec 64))
(declare-fun temp10169_98 () (_ BitVec 64))
(declare-fun temp10169_99 () (_ BitVec 64))
(declare-fun temp10169_100 () (_ BitVec 64))
(declare-fun temp10169_101 () (_ BitVec 64))
(declare-fun temp10169_102 () (_ BitVec 64))
(declare-fun temp10169_103 () (_ BitVec 64))
(declare-fun temp10169_104 () (_ BitVec 64))
(declare-fun temp10169_105 () (_ BitVec 64))
(declare-fun temp10169_106 () (_ BitVec 64))
(declare-fun temp10169_107 () (_ BitVec 64))
(declare-fun temp10169_108 () (_ BitVec 64))
(declare-fun temp10169_109 () (_ BitVec 64))
(declare-fun temp10169_110 () (_ BitVec 64))
(declare-fun temp10169_111 () (_ BitVec 64))
(declare-fun temp10169_112 () (_ BitVec 64))
(declare-fun temp10169_113 () (_ BitVec 64))
(declare-fun temp10169_114 () (_ BitVec 64))
(declare-fun temp10169_115 () (_ BitVec 64))
(declare-fun temp10169_116 () (_ BitVec 64))
(declare-fun temp10169_117 () (_ BitVec 64))
(declare-fun temp10169_118 () (_ BitVec 64))
(declare-fun temp10169_119 () (_ BitVec 64))
(declare-fun temp10169_120 () (_ BitVec 64))
(declare-fun temp10169_121 () (_ BitVec 64))
(declare-fun temp10169_122 () (_ BitVec 64))
(declare-fun temp10169_123 () (_ BitVec 64))
(declare-fun temp10169_124 () (_ BitVec 64))
(declare-fun temp10169_125 () (_ BitVec 64))
(declare-fun temp10169_126 () (_ BitVec 64))
(declare-fun temp10169_127 () (_ BitVec 64))
(declare-fun temp10169_128 () (_ BitVec 64))
(declare-fun temp10169_129 () (_ BitVec 64))
(declare-fun temp10169_130 () (_ BitVec 64))
(declare-fun temp10169_131 () (_ BitVec 64))
(declare-fun temp10169_132 () (_ BitVec 64))
(declare-fun temp10169_133 () (_ BitVec 64))
(declare-fun temp10169_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10169_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10169_136 () (_ BitVec 64))
(declare-fun temp10169_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10169_138 () (_ BitVec 64))
(declare-fun temp10169_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10169_140 () (_ BitVec 64))
(declare-fun temp10169_141 () (_ BitVec 64))
(declare-fun temp10169_142 () (_ BitVec 64))
(declare-fun temp10169_143 () (_ BitVec 64))
(declare-fun temp10169_144 () (_ BitVec 64))
(declare-fun temp10169_145 () (_ BitVec 64))
(declare-fun temp10169_146 () (_ BitVec 64))
(declare-fun temp10169_147 () (_ BitVec 64))
(declare-fun temp10169_148 () (_ BitVec 64))
(declare-fun temp10169_149 () (_ BitVec 64))
(declare-fun temp10169_150 () (_ BitVec 64))
(declare-fun temp10169_151 () (_ BitVec 64))
(declare-fun temp10169_152 () (_ BitVec 64))
(declare-fun temp10169_153 () (_ BitVec 64))
(declare-fun temp10169_154 () (_ BitVec 64))
(declare-fun temp10169_155 () (_ BitVec 64))
(declare-fun temp10169_157 () (_ BitVec 64))
(declare-fun temp10169_158 () (_ BitVec 64))
(declare-fun temp10169_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10169_159 () (_ BitVec 64))
(declare-fun temp10169_160 () (_ BitVec 64))
(declare-fun temp10169_162 () (_ BitVec 64))
(declare-fun temp10169_163 () (_ BitVec 64))
(declare-fun temp10169_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10169_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10169_165 () (_ BitVec 64))
(declare-fun temp10169_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10169_167 () (_ BitVec 64))
(declare-fun temp10169_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10169_169 () (_ BitVec 64))
(declare-fun temp10169_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10169_171 () (_ BitVec 64))
(declare-fun temp10169_172 () (_ BitVec 64))
(declare-fun temp10169_173 () (_ BitVec 64))
(declare-fun temp10169_174 () (_ BitVec 64))
(declare-fun temp10169_175 () (_ BitVec 64))
(declare-fun temp10169_176 () (_ BitVec 64))
(declare-fun temp10169_177 () (_ BitVec 64))
(declare-fun temp10169_178 () (_ BitVec 64))
(declare-fun temp10169_179 () (_ BitVec 64))
(declare-fun temp10169_180 () (_ BitVec 64))
(declare-fun temp10169_181 () (_ BitVec 64))
(declare-fun temp10169_182 () (_ BitVec 64))
(declare-fun temp10169_183 () (_ BitVec 64))
(declare-fun temp10169_184 () (_ BitVec 64))
(declare-fun temp10169_185 () (_ BitVec 64))
(declare-fun temp10169_186 () (_ BitVec 64))
(declare-fun temp10169_187 () (_ BitVec 64))
(declare-fun temp10169_188 () (_ BitVec 64))
(declare-fun temp10169_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10169_190 () (_ BitVec 64))
(declare-fun temp10169_192 () (_ BitVec 64))
(declare-fun temp10169_193 () (_ BitVec 64))
(declare-fun temp10169_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10169_194 () (_ BitVec 64))
(declare-fun temp10169_195 () (_ BitVec 64))
(declare-fun temp10169_197 () (_ BitVec 64))
(declare-fun temp10169_198 () (_ BitVec 64))
(declare-fun temp10169_196 () (_ BitVec 64))
(declare-fun temp10169_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10169_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10169_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10169_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10169_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10169_204 () (_ BitVec 64))
(declare-fun temp10169_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10169_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10169_207 () (_ BitVec 64))
(declare-fun temp10169_208 () (_ BitVec 64))
(declare-fun temp10169_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10169_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10169_211 () (_ BitVec 64))
(declare-fun temp10169_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10169_213 () (_ BitVec 64))
(declare-fun temp10169_214 () (_ BitVec 64))
(declare-fun temp10169_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10169_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10169_217 () (_ BitVec 64))
(declare-fun temp10169_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10169_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10169_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211962 () (_ BitVec 64))
(declare-fun temp10169_221 () (_ BitVec 64))
(declare-fun var211963 () (_ BitVec 64))
(declare-fun temp10169_222 () (_ BitVec 64))
(assert (= temp10169_1 #x0000000000000001))
(assert (= var77203 temp10169_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10169_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10169_2)))
(assert (= temp10169_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10169_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10169_4 #x0000000000000000))
(assert (= var210941 temp10169_4))
(assert (= temp10169_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10169_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10169_6 #x0000000000000000))
(assert (= var210986 temp10169_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10169_7 #x0000000000000000))
(assert (= temp10169_8 temp10169_7))
(assert (= temp10169_9 (select ARGNAME_padding_NAMEEND_VAL temp10169_8)))
(assert (= temp10169_10 #x0000000000000001))
(assert (= temp10169_11 temp10169_10))
(assert (= temp10169_12 (select ARGNAME_padding_NAMEEND_VAL temp10169_11)))
(assert (= temp10169_13 #x0000000000000002))
(assert (= temp10169_14 temp10169_13))
(assert (= temp10169_15 (select ARGNAME_padding_NAMEEND_VAL temp10169_14)))
(assert (= temp10169_16 #x0000000000000003))
(assert (= temp10169_17 temp10169_16))
(assert (= temp10169_18 (select ARGNAME_padding_NAMEEND_VAL temp10169_17)))
(assert (= temp10169_19 #x0000000000000004))
(assert (= temp10169_20 temp10169_19))
(assert (= temp10169_21 (select ARGNAME_padding_NAMEEND_VAL temp10169_20)))
(assert (= temp10169_22 #x0000000000000005))
(assert (= temp10169_23 temp10169_22))
(assert (= temp10169_24 (select ARGNAME_padding_NAMEEND_VAL temp10169_23)))
(assert (= temp10169_25 #x0000000000000000))
(assert (= temp10169_26 #x0000000000000000))
(assert (= temp10169_27 temp10169_26))
(assert (= temp10169_28 (select ARGNAME_padding_NAMEEND_VAL temp10169_27)))
(assert (= temp10169_29 #x0000000000000000))
(assert (= temp10169_30 #x0000000000000001))
(assert (= temp10169_31 temp10169_30))
(assert (= temp10169_32 (select ARGNAME_padding_NAMEEND_VAL temp10169_31)))
(assert (= temp10169_33 #x0000000000000000))
(assert (= temp10169_34 #x0000000000000002))
(assert (= temp10169_35 temp10169_34))
(assert (= temp10169_36 (select ARGNAME_padding_NAMEEND_VAL temp10169_35)))
(assert (= temp10169_37 #x0000000000000000))
(assert (= temp10169_38 #x0000000000000003))
(assert (= temp10169_39 temp10169_38))
(assert (= temp10169_40 (select ARGNAME_padding_NAMEEND_VAL temp10169_39)))
(assert (= temp10169_41 #x0000000000000000))
(assert (= temp10169_42 #x0000000000000004))
(assert (= temp10169_43 temp10169_42))
(assert (= temp10169_44 (select ARGNAME_padding_NAMEEND_VAL temp10169_43)))
(assert (= temp10169_45 #x0000000000000000))
(assert (= temp10169_46 #x0000000000000005))
(assert (= temp10169_47 temp10169_46))
(assert (= temp10169_48 (select ARGNAME_padding_NAMEEND_VAL temp10169_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10169_28 temp10169_25)
             (bvslt temp10169_32 temp10169_29)
             (bvslt temp10169_36 temp10169_33)
             (bvslt temp10169_40 temp10169_37)
             (bvslt temp10169_44 temp10169_41)
             (bvslt temp10169_48 temp10169_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10169_49 #x0000000000000000))
(assert (= var1191714 temp10169_49))
(assert (= temp10169_50 #x0000000000000000))
(assert (= temp10169_51 temp10169_50))
(assert (= temp10169_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10169_51)))
(assert (= temp10169_53 #x0000000000000001))
(assert (= temp10169_54 temp10169_53))
(assert (= temp10169_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10169_54)))
(assert (= temp10169_56 #x0000000000000002))
(assert (= temp10169_57 temp10169_56))
(assert (= temp10169_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10169_57)))
(assert (= temp10169_59 #x0000000000000003))
(assert (= temp10169_60 temp10169_59))
(assert (= temp10169_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10169_60)))
(assert (= temp10169_62 #x0000000000000004))
(assert (= temp10169_63 temp10169_62))
(assert (= temp10169_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10169_63)))
(assert (= temp10169_65 #x0000000000000005))
(assert (= temp10169_66 temp10169_65))
(assert (= temp10169_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10169_66)))
(assert (= temp10169_68 #x0000000000000000))
(assert (= temp10169_69 #x0000000000000000))
(assert (= temp10169_70 temp10169_69))
(assert (= temp10169_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10169_70)))
(assert (= temp10169_72 #x0000000000000000))
(assert (= temp10169_73 #x0000000000000001))
(assert (= temp10169_74 temp10169_73))
(assert (= temp10169_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10169_74)))
(assert (= temp10169_76 #x0000000000000000))
(assert (= temp10169_77 #x0000000000000002))
(assert (= temp10169_78 temp10169_77))
(assert (= temp10169_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10169_78)))
(assert (= temp10169_80 #x0000000000000000))
(assert (= temp10169_81 #x0000000000000003))
(assert (= temp10169_82 temp10169_81))
(assert (= temp10169_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10169_82)))
(assert (= temp10169_84 #x0000000000000000))
(assert (= temp10169_85 #x0000000000000004))
(assert (= temp10169_86 temp10169_85))
(assert (= temp10169_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10169_86)))
(assert (= temp10169_88 #x0000000000000000))
(assert (= temp10169_89 #x0000000000000005))
(assert (= temp10169_90 temp10169_89))
(assert (= temp10169_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10169_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10169_71 temp10169_68)
             (bvslt temp10169_75 temp10169_72)
             (bvslt temp10169_79 temp10169_76)
             (bvslt temp10169_83 temp10169_80)
             (bvslt temp10169_87 temp10169_84)
             (bvslt temp10169_91 temp10169_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10169_92 #x0000000000000000))
(assert (= var1191725 temp10169_92))
(assert (= temp10169_93 #x0000000000000000))
(assert (= temp10169_94 temp10169_93))
(assert (= temp10169_95 (select ARGNAME_stride_NAMEEND_VAL temp10169_94)))
(assert (= temp10169_96 #x0000000000000001))
(assert (= temp10169_97 temp10169_96))
(assert (= temp10169_98 (select ARGNAME_stride_NAMEEND_VAL temp10169_97)))
(assert (= temp10169_99 #x0000000000000002))
(assert (= temp10169_100 temp10169_99))
(assert (= temp10169_101 (select ARGNAME_stride_NAMEEND_VAL temp10169_100)))
(assert (= temp10169_102 #x0000000000000003))
(assert (= temp10169_103 temp10169_102))
(assert (= temp10169_104 (select ARGNAME_stride_NAMEEND_VAL temp10169_103)))
(assert (= temp10169_105 #x0000000000000004))
(assert (= temp10169_106 temp10169_105))
(assert (= temp10169_107 (select ARGNAME_stride_NAMEEND_VAL temp10169_106)))
(assert (= temp10169_108 #x0000000000000005))
(assert (= temp10169_109 temp10169_108))
(assert (= temp10169_110 (select ARGNAME_stride_NAMEEND_VAL temp10169_109)))
(assert (= temp10169_111 #x0000000000000000))
(assert (= temp10169_112 #x0000000000000000))
(assert (= temp10169_113 temp10169_112))
(assert (= temp10169_114 (select ARGNAME_stride_NAMEEND_VAL temp10169_113)))
(assert (= temp10169_115 #x0000000000000000))
(assert (= temp10169_116 #x0000000000000001))
(assert (= temp10169_117 temp10169_116))
(assert (= temp10169_118 (select ARGNAME_stride_NAMEEND_VAL temp10169_117)))
(assert (= temp10169_119 #x0000000000000000))
(assert (= temp10169_120 #x0000000000000002))
(assert (= temp10169_121 temp10169_120))
(assert (= temp10169_122 (select ARGNAME_stride_NAMEEND_VAL temp10169_121)))
(assert (= temp10169_123 #x0000000000000000))
(assert (= temp10169_124 #x0000000000000003))
(assert (= temp10169_125 temp10169_124))
(assert (= temp10169_126 (select ARGNAME_stride_NAMEEND_VAL temp10169_125)))
(assert (= temp10169_127 #x0000000000000000))
(assert (= temp10169_128 #x0000000000000004))
(assert (= temp10169_129 temp10169_128))
(assert (= temp10169_130 (select ARGNAME_stride_NAMEEND_VAL temp10169_129)))
(assert (= temp10169_131 #x0000000000000000))
(assert (= temp10169_132 #x0000000000000005))
(assert (= temp10169_133 temp10169_132))
(assert (= temp10169_134 (select ARGNAME_stride_NAMEEND_VAL temp10169_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10169_114 temp10169_111)
             (bvsle temp10169_118 temp10169_115)
             (bvsle temp10169_122 temp10169_119)
             (bvsle temp10169_126 temp10169_123)
             (bvsle temp10169_130 temp10169_127)
             (bvsle temp10169_134 temp10169_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10169_135 #x0000000000000000))
(assert (= var1191735 temp10169_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10169_136 #x0000000000000001))
(assert (= var1191747 temp10169_136))
(assert (= temp10169_137 #x0000000000000000))
(assert (= var1179826 temp10169_137))
(assert (= temp10169_138 #x0000000000000000))
(assert (= temp10169_139 temp10169_138))
(assert (= temp10169_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10169_139)))
(assert (= temp10169_141 #x0000000000000001))
(assert (= temp10169_142 temp10169_141))
(assert (= temp10169_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10169_142)))
(assert (= temp10169_144 #x0000000000000002))
(assert (= temp10169_145 temp10169_144))
(assert (= temp10169_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10169_145)))
(assert (= temp10169_147 #x0000000000000003))
(assert (= temp10169_148 temp10169_147))
(assert (= temp10169_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10169_148)))
(assert (= temp10169_150 #x0000000000000004))
(assert (= temp10169_151 temp10169_150))
(assert (= temp10169_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10169_151)))
(assert (= temp10169_153 #x0000000000000005))
(assert (= temp10169_154 temp10169_153))
(assert (= temp10169_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10169_154)))
(assert (= temp10169_157 var1179826))
(assert (= temp10169_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10169_157)))
(assert (= temp10169_156 temp10169_158))
(assert (= var1191780
   (ite (bvslt temp10169_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10169_159 #x0000000000000000))
(assert (= var1191780 temp10169_159))
(assert (= temp10169_160 #x0000000000000000))
(assert (= var1179826 temp10169_160))
(assert (= temp10169_162 var1179826))
(assert (= temp10169_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10169_162)))
(assert (= temp10169_161 temp10169_163))
(assert (= var1191802 (bvsmod temp10169_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10169_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10169_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10169_165 #x0000000000000001))
(assert (= var1191803 temp10169_165))
(assert (= temp10169_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10169_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10169_167 #x0000000000000001))
(assert (= var1191823 temp10169_167))
(assert (= temp10169_168 #x0000000000000001))
(assert (= var1180714 temp10169_168))
(assert (= temp10169_169 #x0000000000000000))
(assert (= temp10169_170 temp10169_169))
(assert (= temp10169_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10169_170)))
(assert (= temp10169_172 #x0000000000000001))
(assert (= temp10169_173 temp10169_172))
(assert (= temp10169_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10169_173)))
(assert (= temp10169_175 #x0000000000000002))
(assert (= temp10169_176 temp10169_175))
(assert (= temp10169_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10169_176)))
(assert (= temp10169_178 #x0000000000000003))
(assert (= temp10169_179 temp10169_178))
(assert (= temp10169_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10169_179)))
(assert (= temp10169_181 #x0000000000000004))
(assert (= temp10169_182 temp10169_181))
(assert (= temp10169_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10169_182)))
(assert (= temp10169_184 #x0000000000000005))
(assert (= temp10169_185 temp10169_184))
(assert (= temp10169_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10169_185)))
(assert (= temp10169_187 #x0000000000000000))
(assert (= temp10169_188
   (ite (bvslt var1180714 temp10169_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10169_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10169_188)))
(assert (= var1191831 temp10169_189))
(assert (bvslt (ite (bvslt var1180714 temp10169_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10169_190 #x0000000000000001))
(assert (= var1180714 temp10169_190))
(assert (= temp10169_192 var1180714))
(assert (= temp10169_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10169_192)))
(assert (= temp10169_191 temp10169_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10169_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10169_194 #x0000000000000001))
(assert (= var1191836 temp10169_194))
(assert (= temp10169_195 #x0000000000000000))
(assert (= var1179826 temp10169_195))
(assert (= temp10169_197 var1179826))
(assert (= temp10169_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10169_197)))
(assert (= temp10169_196 temp10169_198))
(assert (= temp10169_199 #x0000000000000002))
(assert (= var1586025 temp10169_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10169_200 #x0000000000000001))
(assert (= var1191993 temp10169_200))
(assert (= temp10169_201 #x0000000000000001))
(assert (= var2700303 temp10169_201))
(assert (= temp10169_202 #x0000000000000001))
(assert (= var2962447 temp10169_202))
(assert (= temp10169_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10169_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10169_204 #x0000000000000001))
(assert (= var211058 temp10169_204))
(assert (= temp10169_205 #x0000000000000001))
(assert (= var211188 temp10169_205))
(assert (= var3879401 var211188))
(assert (= temp10169_206 #x0000000000000000))
(assert (= var3866802 temp10169_206))
(assert (= temp10169_207 #x0000000000000000))
(assert (= temp10169_208
   (ite (bvslt var3866802 temp10169_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10169_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10169_208)))
(assert (= var3879420 temp10169_209))
(assert (bvslt (ite (bvslt var3866802 temp10169_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10169_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10169_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10169_211 #x0000000000000000))
(assert (= var3879421 temp10169_211))
(assert (= temp10169_212 #x0000000000000001))
(assert (= var3867690 temp10169_212))
(assert (= temp10169_213 #x0000000000000000))
(assert (= temp10169_214
   (ite (bvslt var3867690 temp10169_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10169_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10169_214)))
(assert (= var3879423 temp10169_215))
(assert (bvslt (ite (bvslt var3867690 temp10169_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10169_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10169_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10169_217 #x0000000000000001))
(assert (= var3879424 temp10169_217))
(assert (= temp10169_218 #x0000000000000000))
(assert (= var4079423 temp10169_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10169_219 #x0000000000000002))
(assert (= var4208259 temp10169_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10169_220 #x0000000000000000))
(assert (= var4273820 temp10169_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211962 var210913))
(assert (= temp10169_221 #x0000000000000000))
(assert (= var211963
   (ite (distinct var211962 temp10169_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10169_222 #x0000000000000001))
(assert (= var211058 temp10169_222))
(model-add temp10169_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10169_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10169_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10169_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






