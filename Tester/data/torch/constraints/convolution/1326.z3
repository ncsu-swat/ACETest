(declare-fun temp10498_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10498_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10498_3 () (_ BitVec 64))
(declare-fun temp10498_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10498_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10498_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10498_7 () (_ BitVec 64))
(declare-fun temp10498_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10498_9 () (_ BitVec 64))
(declare-fun temp10498_10 () (_ BitVec 64))
(declare-fun temp10498_11 () (_ BitVec 64))
(declare-fun temp10498_12 () (_ BitVec 64))
(declare-fun temp10498_13 () (_ BitVec 64))
(declare-fun temp10498_14 () (_ BitVec 64))
(declare-fun temp10498_15 () (_ BitVec 64))
(declare-fun temp10498_16 () (_ BitVec 64))
(declare-fun temp10498_17 () (_ BitVec 64))
(declare-fun temp10498_18 () (_ BitVec 64))
(declare-fun temp10498_19 () (_ BitVec 64))
(declare-fun temp10498_20 () (_ BitVec 64))
(declare-fun temp10498_21 () (_ BitVec 64))
(declare-fun temp10498_22 () (_ BitVec 64))
(declare-fun temp10498_23 () (_ BitVec 64))
(declare-fun temp10498_24 () (_ BitVec 64))
(declare-fun temp10498_25 () (_ BitVec 64))
(declare-fun temp10498_26 () (_ BitVec 64))
(declare-fun temp10498_27 () (_ BitVec 64))
(declare-fun temp10498_28 () (_ BitVec 64))
(declare-fun temp10498_29 () (_ BitVec 64))
(declare-fun temp10498_30 () (_ BitVec 64))
(declare-fun temp10498_31 () (_ BitVec 64))
(declare-fun temp10498_32 () (_ BitVec 64))
(declare-fun temp10498_33 () (_ BitVec 64))
(declare-fun temp10498_34 () (_ BitVec 64))
(declare-fun temp10498_35 () (_ BitVec 64))
(declare-fun temp10498_36 () (_ BitVec 64))
(declare-fun temp10498_37 () (_ BitVec 64))
(declare-fun temp10498_38 () (_ BitVec 64))
(declare-fun temp10498_39 () (_ BitVec 64))
(declare-fun temp10498_40 () (_ BitVec 64))
(declare-fun temp10498_41 () (_ BitVec 64))
(declare-fun temp10498_42 () (_ BitVec 64))
(declare-fun temp10498_43 () (_ BitVec 64))
(declare-fun temp10498_44 () (_ BitVec 64))
(declare-fun temp10498_45 () (_ BitVec 64))
(declare-fun temp10498_46 () (_ BitVec 64))
(declare-fun temp10498_47 () (_ BitVec 64))
(declare-fun temp10498_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10498_49 () (_ BitVec 64))
(declare-fun temp10498_50 () (_ BitVec 64))
(declare-fun temp10498_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10498_52 () (_ BitVec 64))
(declare-fun temp10498_53 () (_ BitVec 64))
(declare-fun temp10498_54 () (_ BitVec 64))
(declare-fun temp10498_55 () (_ BitVec 64))
(declare-fun temp10498_56 () (_ BitVec 64))
(declare-fun temp10498_57 () (_ BitVec 64))
(declare-fun temp10498_58 () (_ BitVec 64))
(declare-fun temp10498_59 () (_ BitVec 64))
(declare-fun temp10498_60 () (_ BitVec 64))
(declare-fun temp10498_61 () (_ BitVec 64))
(declare-fun temp10498_62 () (_ BitVec 64))
(declare-fun temp10498_63 () (_ BitVec 64))
(declare-fun temp10498_64 () (_ BitVec 64))
(declare-fun temp10498_65 () (_ BitVec 64))
(declare-fun temp10498_66 () (_ BitVec 64))
(declare-fun temp10498_67 () (_ BitVec 64))
(declare-fun temp10498_68 () (_ BitVec 64))
(declare-fun temp10498_69 () (_ BitVec 64))
(declare-fun temp10498_70 () (_ BitVec 64))
(declare-fun temp10498_71 () (_ BitVec 64))
(declare-fun temp10498_72 () (_ BitVec 64))
(declare-fun temp10498_73 () (_ BitVec 64))
(declare-fun temp10498_74 () (_ BitVec 64))
(declare-fun temp10498_75 () (_ BitVec 64))
(declare-fun temp10498_76 () (_ BitVec 64))
(declare-fun temp10498_77 () (_ BitVec 64))
(declare-fun temp10498_78 () (_ BitVec 64))
(declare-fun temp10498_79 () (_ BitVec 64))
(declare-fun temp10498_80 () (_ BitVec 64))
(declare-fun temp10498_81 () (_ BitVec 64))
(declare-fun temp10498_82 () (_ BitVec 64))
(declare-fun temp10498_83 () (_ BitVec 64))
(declare-fun temp10498_84 () (_ BitVec 64))
(declare-fun temp10498_85 () (_ BitVec 64))
(declare-fun temp10498_86 () (_ BitVec 64))
(declare-fun temp10498_87 () (_ BitVec 64))
(declare-fun temp10498_88 () (_ BitVec 64))
(declare-fun temp10498_89 () (_ BitVec 64))
(declare-fun temp10498_90 () (_ BitVec 64))
(declare-fun temp10498_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10498_92 () (_ BitVec 64))
(declare-fun temp10498_93 () (_ BitVec 64))
(declare-fun temp10498_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10498_95 () (_ BitVec 64))
(declare-fun temp10498_96 () (_ BitVec 64))
(declare-fun temp10498_97 () (_ BitVec 64))
(declare-fun temp10498_98 () (_ BitVec 64))
(declare-fun temp10498_99 () (_ BitVec 64))
(declare-fun temp10498_100 () (_ BitVec 64))
(declare-fun temp10498_101 () (_ BitVec 64))
(declare-fun temp10498_102 () (_ BitVec 64))
(declare-fun temp10498_103 () (_ BitVec 64))
(declare-fun temp10498_104 () (_ BitVec 64))
(declare-fun temp10498_105 () (_ BitVec 64))
(declare-fun temp10498_106 () (_ BitVec 64))
(declare-fun temp10498_107 () (_ BitVec 64))
(declare-fun temp10498_108 () (_ BitVec 64))
(declare-fun temp10498_109 () (_ BitVec 64))
(declare-fun temp10498_110 () (_ BitVec 64))
(declare-fun temp10498_111 () (_ BitVec 64))
(declare-fun temp10498_112 () (_ BitVec 64))
(declare-fun temp10498_113 () (_ BitVec 64))
(declare-fun temp10498_114 () (_ BitVec 64))
(declare-fun temp10498_115 () (_ BitVec 64))
(declare-fun temp10498_116 () (_ BitVec 64))
(declare-fun temp10498_117 () (_ BitVec 64))
(declare-fun temp10498_118 () (_ BitVec 64))
(declare-fun temp10498_119 () (_ BitVec 64))
(declare-fun temp10498_120 () (_ BitVec 64))
(declare-fun temp10498_121 () (_ BitVec 64))
(declare-fun temp10498_122 () (_ BitVec 64))
(declare-fun temp10498_123 () (_ BitVec 64))
(declare-fun temp10498_124 () (_ BitVec 64))
(declare-fun temp10498_125 () (_ BitVec 64))
(declare-fun temp10498_126 () (_ BitVec 64))
(declare-fun temp10498_127 () (_ BitVec 64))
(declare-fun temp10498_128 () (_ BitVec 64))
(declare-fun temp10498_129 () (_ BitVec 64))
(declare-fun temp10498_130 () (_ BitVec 64))
(declare-fun temp10498_131 () (_ BitVec 64))
(declare-fun temp10498_132 () (_ BitVec 64))
(declare-fun temp10498_133 () (_ BitVec 64))
(declare-fun temp10498_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10498_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10498_136 () (_ BitVec 64))
(declare-fun temp10498_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10498_138 () (_ BitVec 64))
(declare-fun temp10498_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10498_140 () (_ BitVec 64))
(declare-fun temp10498_141 () (_ BitVec 64))
(declare-fun temp10498_142 () (_ BitVec 64))
(declare-fun temp10498_143 () (_ BitVec 64))
(declare-fun temp10498_144 () (_ BitVec 64))
(declare-fun temp10498_145 () (_ BitVec 64))
(declare-fun temp10498_146 () (_ BitVec 64))
(declare-fun temp10498_147 () (_ BitVec 64))
(declare-fun temp10498_148 () (_ BitVec 64))
(declare-fun temp10498_149 () (_ BitVec 64))
(declare-fun temp10498_150 () (_ BitVec 64))
(declare-fun temp10498_151 () (_ BitVec 64))
(declare-fun temp10498_152 () (_ BitVec 64))
(declare-fun temp10498_153 () (_ BitVec 64))
(declare-fun temp10498_154 () (_ BitVec 64))
(declare-fun temp10498_155 () (_ BitVec 64))
(declare-fun temp10498_157 () (_ BitVec 64))
(declare-fun temp10498_158 () (_ BitVec 64))
(declare-fun temp10498_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10498_159 () (_ BitVec 64))
(declare-fun temp10498_160 () (_ BitVec 64))
(declare-fun temp10498_162 () (_ BitVec 64))
(declare-fun temp10498_163 () (_ BitVec 64))
(declare-fun temp10498_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10498_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10498_165 () (_ BitVec 64))
(declare-fun temp10498_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10498_167 () (_ BitVec 64))
(declare-fun temp10498_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10498_169 () (_ BitVec 64))
(declare-fun temp10498_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10498_171 () (_ BitVec 64))
(declare-fun temp10498_172 () (_ BitVec 64))
(declare-fun temp10498_173 () (_ BitVec 64))
(declare-fun temp10498_174 () (_ BitVec 64))
(declare-fun temp10498_175 () (_ BitVec 64))
(declare-fun temp10498_176 () (_ BitVec 64))
(declare-fun temp10498_177 () (_ BitVec 64))
(declare-fun temp10498_178 () (_ BitVec 64))
(declare-fun temp10498_179 () (_ BitVec 64))
(declare-fun temp10498_180 () (_ BitVec 64))
(declare-fun temp10498_181 () (_ BitVec 64))
(declare-fun temp10498_182 () (_ BitVec 64))
(declare-fun temp10498_183 () (_ BitVec 64))
(declare-fun temp10498_184 () (_ BitVec 64))
(declare-fun temp10498_185 () (_ BitVec 64))
(declare-fun temp10498_186 () (_ BitVec 64))
(declare-fun temp10498_187 () (_ BitVec 64))
(declare-fun temp10498_188 () (_ BitVec 64))
(declare-fun temp10498_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10498_190 () (_ BitVec 64))
(declare-fun temp10498_192 () (_ BitVec 64))
(declare-fun temp10498_193 () (_ BitVec 64))
(declare-fun temp10498_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10498_194 () (_ BitVec 64))
(declare-fun temp10498_195 () (_ BitVec 64))
(declare-fun temp10498_197 () (_ BitVec 64))
(declare-fun temp10498_198 () (_ BitVec 64))
(declare-fun temp10498_196 () (_ BitVec 64))
(declare-fun temp10498_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10498_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10498_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10498_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10498_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10498_204 () (_ BitVec 64))
(declare-fun temp10498_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10498_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10498_207 () (_ BitVec 64))
(declare-fun temp10498_208 () (_ BitVec 64))
(declare-fun temp10498_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10498_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10498_211 () (_ BitVec 64))
(declare-fun temp10498_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10498_213 () (_ BitVec 64))
(declare-fun temp10498_214 () (_ BitVec 64))
(declare-fun temp10498_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10498_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10498_217 () (_ BitVec 64))
(declare-fun temp10498_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10498_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10498_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp10498_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp10498_222 () (_ BitVec 64))
(declare-fun temp10498_223 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun temp10498_224 () (_ BitVec 64))
(assert (= temp10498_1 #x0000000000000001))
(assert (= var77203 temp10498_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10498_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10498_2)))
(assert (= temp10498_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10498_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10498_4 #x0000000000000000))
(assert (= var210941 temp10498_4))
(assert (= temp10498_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10498_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10498_6 #x0000000000000000))
(assert (= var210986 temp10498_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10498_7 #x0000000000000000))
(assert (= temp10498_8 temp10498_7))
(assert (= temp10498_9 (select ARGNAME_padding_NAMEEND_VAL temp10498_8)))
(assert (= temp10498_10 #x0000000000000001))
(assert (= temp10498_11 temp10498_10))
(assert (= temp10498_12 (select ARGNAME_padding_NAMEEND_VAL temp10498_11)))
(assert (= temp10498_13 #x0000000000000002))
(assert (= temp10498_14 temp10498_13))
(assert (= temp10498_15 (select ARGNAME_padding_NAMEEND_VAL temp10498_14)))
(assert (= temp10498_16 #x0000000000000003))
(assert (= temp10498_17 temp10498_16))
(assert (= temp10498_18 (select ARGNAME_padding_NAMEEND_VAL temp10498_17)))
(assert (= temp10498_19 #x0000000000000004))
(assert (= temp10498_20 temp10498_19))
(assert (= temp10498_21 (select ARGNAME_padding_NAMEEND_VAL temp10498_20)))
(assert (= temp10498_22 #x0000000000000005))
(assert (= temp10498_23 temp10498_22))
(assert (= temp10498_24 (select ARGNAME_padding_NAMEEND_VAL temp10498_23)))
(assert (= temp10498_25 #x0000000000000000))
(assert (= temp10498_26 #x0000000000000000))
(assert (= temp10498_27 temp10498_26))
(assert (= temp10498_28 (select ARGNAME_padding_NAMEEND_VAL temp10498_27)))
(assert (= temp10498_29 #x0000000000000000))
(assert (= temp10498_30 #x0000000000000001))
(assert (= temp10498_31 temp10498_30))
(assert (= temp10498_32 (select ARGNAME_padding_NAMEEND_VAL temp10498_31)))
(assert (= temp10498_33 #x0000000000000000))
(assert (= temp10498_34 #x0000000000000002))
(assert (= temp10498_35 temp10498_34))
(assert (= temp10498_36 (select ARGNAME_padding_NAMEEND_VAL temp10498_35)))
(assert (= temp10498_37 #x0000000000000000))
(assert (= temp10498_38 #x0000000000000003))
(assert (= temp10498_39 temp10498_38))
(assert (= temp10498_40 (select ARGNAME_padding_NAMEEND_VAL temp10498_39)))
(assert (= temp10498_41 #x0000000000000000))
(assert (= temp10498_42 #x0000000000000004))
(assert (= temp10498_43 temp10498_42))
(assert (= temp10498_44 (select ARGNAME_padding_NAMEEND_VAL temp10498_43)))
(assert (= temp10498_45 #x0000000000000000))
(assert (= temp10498_46 #x0000000000000005))
(assert (= temp10498_47 temp10498_46))
(assert (= temp10498_48 (select ARGNAME_padding_NAMEEND_VAL temp10498_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10498_28 temp10498_25)
             (bvslt temp10498_32 temp10498_29)
             (bvslt temp10498_36 temp10498_33)
             (bvslt temp10498_40 temp10498_37)
             (bvslt temp10498_44 temp10498_41)
             (bvslt temp10498_48 temp10498_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10498_49 #x0000000000000000))
(assert (= var1191714 temp10498_49))
(assert (= temp10498_50 #x0000000000000000))
(assert (= temp10498_51 temp10498_50))
(assert (= temp10498_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10498_51)))
(assert (= temp10498_53 #x0000000000000001))
(assert (= temp10498_54 temp10498_53))
(assert (= temp10498_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10498_54)))
(assert (= temp10498_56 #x0000000000000002))
(assert (= temp10498_57 temp10498_56))
(assert (= temp10498_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10498_57)))
(assert (= temp10498_59 #x0000000000000003))
(assert (= temp10498_60 temp10498_59))
(assert (= temp10498_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10498_60)))
(assert (= temp10498_62 #x0000000000000004))
(assert (= temp10498_63 temp10498_62))
(assert (= temp10498_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10498_63)))
(assert (= temp10498_65 #x0000000000000005))
(assert (= temp10498_66 temp10498_65))
(assert (= temp10498_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10498_66)))
(assert (= temp10498_68 #x0000000000000000))
(assert (= temp10498_69 #x0000000000000000))
(assert (= temp10498_70 temp10498_69))
(assert (= temp10498_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10498_70)))
(assert (= temp10498_72 #x0000000000000000))
(assert (= temp10498_73 #x0000000000000001))
(assert (= temp10498_74 temp10498_73))
(assert (= temp10498_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10498_74)))
(assert (= temp10498_76 #x0000000000000000))
(assert (= temp10498_77 #x0000000000000002))
(assert (= temp10498_78 temp10498_77))
(assert (= temp10498_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10498_78)))
(assert (= temp10498_80 #x0000000000000000))
(assert (= temp10498_81 #x0000000000000003))
(assert (= temp10498_82 temp10498_81))
(assert (= temp10498_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10498_82)))
(assert (= temp10498_84 #x0000000000000000))
(assert (= temp10498_85 #x0000000000000004))
(assert (= temp10498_86 temp10498_85))
(assert (= temp10498_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10498_86)))
(assert (= temp10498_88 #x0000000000000000))
(assert (= temp10498_89 #x0000000000000005))
(assert (= temp10498_90 temp10498_89))
(assert (= temp10498_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10498_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10498_71 temp10498_68)
             (bvslt temp10498_75 temp10498_72)
             (bvslt temp10498_79 temp10498_76)
             (bvslt temp10498_83 temp10498_80)
             (bvslt temp10498_87 temp10498_84)
             (bvslt temp10498_91 temp10498_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10498_92 #x0000000000000000))
(assert (= var1191725 temp10498_92))
(assert (= temp10498_93 #x0000000000000000))
(assert (= temp10498_94 temp10498_93))
(assert (= temp10498_95 (select ARGNAME_stride_NAMEEND_VAL temp10498_94)))
(assert (= temp10498_96 #x0000000000000001))
(assert (= temp10498_97 temp10498_96))
(assert (= temp10498_98 (select ARGNAME_stride_NAMEEND_VAL temp10498_97)))
(assert (= temp10498_99 #x0000000000000002))
(assert (= temp10498_100 temp10498_99))
(assert (= temp10498_101 (select ARGNAME_stride_NAMEEND_VAL temp10498_100)))
(assert (= temp10498_102 #x0000000000000003))
(assert (= temp10498_103 temp10498_102))
(assert (= temp10498_104 (select ARGNAME_stride_NAMEEND_VAL temp10498_103)))
(assert (= temp10498_105 #x0000000000000004))
(assert (= temp10498_106 temp10498_105))
(assert (= temp10498_107 (select ARGNAME_stride_NAMEEND_VAL temp10498_106)))
(assert (= temp10498_108 #x0000000000000005))
(assert (= temp10498_109 temp10498_108))
(assert (= temp10498_110 (select ARGNAME_stride_NAMEEND_VAL temp10498_109)))
(assert (= temp10498_111 #x0000000000000000))
(assert (= temp10498_112 #x0000000000000000))
(assert (= temp10498_113 temp10498_112))
(assert (= temp10498_114 (select ARGNAME_stride_NAMEEND_VAL temp10498_113)))
(assert (= temp10498_115 #x0000000000000000))
(assert (= temp10498_116 #x0000000000000001))
(assert (= temp10498_117 temp10498_116))
(assert (= temp10498_118 (select ARGNAME_stride_NAMEEND_VAL temp10498_117)))
(assert (= temp10498_119 #x0000000000000000))
(assert (= temp10498_120 #x0000000000000002))
(assert (= temp10498_121 temp10498_120))
(assert (= temp10498_122 (select ARGNAME_stride_NAMEEND_VAL temp10498_121)))
(assert (= temp10498_123 #x0000000000000000))
(assert (= temp10498_124 #x0000000000000003))
(assert (= temp10498_125 temp10498_124))
(assert (= temp10498_126 (select ARGNAME_stride_NAMEEND_VAL temp10498_125)))
(assert (= temp10498_127 #x0000000000000000))
(assert (= temp10498_128 #x0000000000000004))
(assert (= temp10498_129 temp10498_128))
(assert (= temp10498_130 (select ARGNAME_stride_NAMEEND_VAL temp10498_129)))
(assert (= temp10498_131 #x0000000000000000))
(assert (= temp10498_132 #x0000000000000005))
(assert (= temp10498_133 temp10498_132))
(assert (= temp10498_134 (select ARGNAME_stride_NAMEEND_VAL temp10498_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10498_114 temp10498_111)
             (bvsle temp10498_118 temp10498_115)
             (bvsle temp10498_122 temp10498_119)
             (bvsle temp10498_126 temp10498_123)
             (bvsle temp10498_130 temp10498_127)
             (bvsle temp10498_134 temp10498_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10498_135 #x0000000000000000))
(assert (= var1191735 temp10498_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10498_136 #x0000000000000001))
(assert (= var1191747 temp10498_136))
(assert (= temp10498_137 #x0000000000000000))
(assert (= var1179826 temp10498_137))
(assert (= temp10498_138 #x0000000000000000))
(assert (= temp10498_139 temp10498_138))
(assert (= temp10498_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10498_139)))
(assert (= temp10498_141 #x0000000000000001))
(assert (= temp10498_142 temp10498_141))
(assert (= temp10498_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10498_142)))
(assert (= temp10498_144 #x0000000000000002))
(assert (= temp10498_145 temp10498_144))
(assert (= temp10498_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10498_145)))
(assert (= temp10498_147 #x0000000000000003))
(assert (= temp10498_148 temp10498_147))
(assert (= temp10498_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10498_148)))
(assert (= temp10498_150 #x0000000000000004))
(assert (= temp10498_151 temp10498_150))
(assert (= temp10498_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10498_151)))
(assert (= temp10498_153 #x0000000000000005))
(assert (= temp10498_154 temp10498_153))
(assert (= temp10498_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10498_154)))
(assert (= temp10498_157 var1179826))
(assert (= temp10498_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10498_157)))
(assert (= temp10498_156 temp10498_158))
(assert (= var1191780
   (ite (bvslt temp10498_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10498_159 #x0000000000000000))
(assert (= var1191780 temp10498_159))
(assert (= temp10498_160 #x0000000000000000))
(assert (= var1179826 temp10498_160))
(assert (= temp10498_162 var1179826))
(assert (= temp10498_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10498_162)))
(assert (= temp10498_161 temp10498_163))
(assert (= var1191802 (bvsmod temp10498_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10498_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10498_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10498_165 #x0000000000000001))
(assert (= var1191803 temp10498_165))
(assert (= temp10498_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10498_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10498_167 #x0000000000000001))
(assert (= var1191823 temp10498_167))
(assert (= temp10498_168 #x0000000000000001))
(assert (= var1180714 temp10498_168))
(assert (= temp10498_169 #x0000000000000000))
(assert (= temp10498_170 temp10498_169))
(assert (= temp10498_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10498_170)))
(assert (= temp10498_172 #x0000000000000001))
(assert (= temp10498_173 temp10498_172))
(assert (= temp10498_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10498_173)))
(assert (= temp10498_175 #x0000000000000002))
(assert (= temp10498_176 temp10498_175))
(assert (= temp10498_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10498_176)))
(assert (= temp10498_178 #x0000000000000003))
(assert (= temp10498_179 temp10498_178))
(assert (= temp10498_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10498_179)))
(assert (= temp10498_181 #x0000000000000004))
(assert (= temp10498_182 temp10498_181))
(assert (= temp10498_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10498_182)))
(assert (= temp10498_184 #x0000000000000005))
(assert (= temp10498_185 temp10498_184))
(assert (= temp10498_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10498_185)))
(assert (= temp10498_187 #x0000000000000000))
(assert (= temp10498_188
   (ite (bvslt var1180714 temp10498_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10498_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10498_188)))
(assert (= var1191831 temp10498_189))
(assert (bvslt (ite (bvslt var1180714 temp10498_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10498_190 #x0000000000000001))
(assert (= var1180714 temp10498_190))
(assert (= temp10498_192 var1180714))
(assert (= temp10498_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10498_192)))
(assert (= temp10498_191 temp10498_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10498_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10498_194 #x0000000000000001))
(assert (= var1191836 temp10498_194))
(assert (= temp10498_195 #x0000000000000000))
(assert (= var1179826 temp10498_195))
(assert (= temp10498_197 var1179826))
(assert (= temp10498_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10498_197)))
(assert (= temp10498_196 temp10498_198))
(assert (= temp10498_199 #x0000000000000002))
(assert (= var1586025 temp10498_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10498_200 #x0000000000000001))
(assert (= var1191993 temp10498_200))
(assert (= temp10498_201 #x0000000000000001))
(assert (= var2700303 temp10498_201))
(assert (= temp10498_202 #x0000000000000001))
(assert (= var2962447 temp10498_202))
(assert (= temp10498_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10498_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10498_204 #x0000000000000001))
(assert (= var211058 temp10498_204))
(assert (= temp10498_205 #x0000000000000001))
(assert (= var211188 temp10498_205))
(assert (= var3879401 var211188))
(assert (= temp10498_206 #x0000000000000000))
(assert (= var3866802 temp10498_206))
(assert (= temp10498_207 #x0000000000000000))
(assert (= temp10498_208
   (ite (bvslt var3866802 temp10498_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10498_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10498_208)))
(assert (= var3879420 temp10498_209))
(assert (bvslt (ite (bvslt var3866802 temp10498_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10498_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10498_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10498_211 #x0000000000000000))
(assert (= var3879421 temp10498_211))
(assert (= temp10498_212 #x0000000000000001))
(assert (= var3867690 temp10498_212))
(assert (= temp10498_213 #x0000000000000000))
(assert (= temp10498_214
   (ite (bvslt var3867690 temp10498_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10498_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10498_214)))
(assert (= var3879423 temp10498_215))
(assert (bvslt (ite (bvslt var3867690 temp10498_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10498_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10498_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10498_217 #x0000000000000001))
(assert (= var3879424 temp10498_217))
(assert (= temp10498_218 #x0000000000000000))
(assert (= var4079423 temp10498_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10498_219 #x0000000000000002))
(assert (= var4208259 temp10498_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10498_220 #x0000000000000000))
(assert (= var4273820 temp10498_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp10498_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp10498_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10498_222 #x0000000000000000))
(assert (= var212414 temp10498_222))
(assert (= temp10498_223 #x0000000000000002))
(assert (= var5060227 temp10498_223))
(assert (= var5125772 var5060227))
(assert (= temp10498_224 #x0000000000000001))
(assert (= var211058 temp10498_224))
(model-add temp10498_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10498_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10498_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10498_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





