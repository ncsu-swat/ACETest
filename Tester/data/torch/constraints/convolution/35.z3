(declare-fun temp46_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp46_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp46_3 () (_ BitVec 64))
(declare-fun temp46_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp46_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp46_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp46_7 () (_ BitVec 64))
(declare-fun temp46_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp46_9 () (_ BitVec 64))
(declare-fun temp46_10 () (_ BitVec 64))
(declare-fun temp46_11 () (_ BitVec 64))
(declare-fun temp46_12 () (_ BitVec 64))
(declare-fun temp46_13 () (_ BitVec 64))
(declare-fun temp46_14 () (_ BitVec 64))
(declare-fun temp46_15 () (_ BitVec 64))
(declare-fun temp46_16 () (_ BitVec 64))
(declare-fun temp46_17 () (_ BitVec 64))
(declare-fun temp46_18 () (_ BitVec 64))
(declare-fun temp46_19 () (_ BitVec 64))
(declare-fun temp46_20 () (_ BitVec 64))
(declare-fun temp46_21 () (_ BitVec 64))
(declare-fun temp46_22 () (_ BitVec 64))
(declare-fun temp46_23 () (_ BitVec 64))
(declare-fun temp46_24 () (_ BitVec 64))
(declare-fun temp46_25 () (_ BitVec 64))
(declare-fun temp46_26 () (_ BitVec 64))
(declare-fun temp46_27 () (_ BitVec 64))
(declare-fun temp46_28 () (_ BitVec 64))
(declare-fun temp46_29 () (_ BitVec 64))
(declare-fun temp46_30 () (_ BitVec 64))
(declare-fun temp46_31 () (_ BitVec 64))
(declare-fun temp46_32 () (_ BitVec 64))
(declare-fun temp46_33 () (_ BitVec 64))
(declare-fun temp46_34 () (_ BitVec 64))
(declare-fun temp46_35 () (_ BitVec 64))
(declare-fun temp46_36 () (_ BitVec 64))
(declare-fun temp46_37 () (_ BitVec 64))
(declare-fun temp46_38 () (_ BitVec 64))
(declare-fun temp46_39 () (_ BitVec 64))
(declare-fun temp46_40 () (_ BitVec 64))
(declare-fun temp46_41 () (_ BitVec 64))
(declare-fun temp46_42 () (_ BitVec 64))
(declare-fun temp46_43 () (_ BitVec 64))
(declare-fun temp46_44 () (_ BitVec 64))
(declare-fun temp46_45 () (_ BitVec 64))
(declare-fun temp46_46 () (_ BitVec 64))
(declare-fun temp46_47 () (_ BitVec 64))
(declare-fun temp46_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp46_49 () (_ BitVec 64))
(declare-fun temp46_50 () (_ BitVec 64))
(declare-fun temp46_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp46_52 () (_ BitVec 64))
(declare-fun temp46_53 () (_ BitVec 64))
(declare-fun temp46_54 () (_ BitVec 64))
(declare-fun temp46_55 () (_ BitVec 64))
(declare-fun temp46_56 () (_ BitVec 64))
(declare-fun temp46_57 () (_ BitVec 64))
(declare-fun temp46_58 () (_ BitVec 64))
(declare-fun temp46_59 () (_ BitVec 64))
(declare-fun temp46_60 () (_ BitVec 64))
(declare-fun temp46_61 () (_ BitVec 64))
(declare-fun temp46_62 () (_ BitVec 64))
(declare-fun temp46_63 () (_ BitVec 64))
(declare-fun temp46_64 () (_ BitVec 64))
(declare-fun temp46_65 () (_ BitVec 64))
(declare-fun temp46_66 () (_ BitVec 64))
(declare-fun temp46_67 () (_ BitVec 64))
(declare-fun temp46_68 () (_ BitVec 64))
(declare-fun temp46_69 () (_ BitVec 64))
(declare-fun temp46_70 () (_ BitVec 64))
(declare-fun temp46_71 () (_ BitVec 64))
(declare-fun temp46_72 () (_ BitVec 64))
(declare-fun temp46_73 () (_ BitVec 64))
(declare-fun temp46_74 () (_ BitVec 64))
(declare-fun temp46_75 () (_ BitVec 64))
(declare-fun temp46_76 () (_ BitVec 64))
(declare-fun temp46_77 () (_ BitVec 64))
(declare-fun temp46_78 () (_ BitVec 64))
(declare-fun temp46_79 () (_ BitVec 64))
(declare-fun temp46_80 () (_ BitVec 64))
(declare-fun temp46_81 () (_ BitVec 64))
(declare-fun temp46_82 () (_ BitVec 64))
(declare-fun temp46_83 () (_ BitVec 64))
(declare-fun temp46_84 () (_ BitVec 64))
(declare-fun temp46_85 () (_ BitVec 64))
(declare-fun temp46_86 () (_ BitVec 64))
(declare-fun temp46_87 () (_ BitVec 64))
(declare-fun temp46_88 () (_ BitVec 64))
(declare-fun temp46_89 () (_ BitVec 64))
(declare-fun temp46_90 () (_ BitVec 64))
(declare-fun temp46_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp46_92 () (_ BitVec 64))
(declare-fun temp46_93 () (_ BitVec 64))
(declare-fun temp46_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp46_95 () (_ BitVec 64))
(declare-fun temp46_96 () (_ BitVec 64))
(declare-fun temp46_97 () (_ BitVec 64))
(declare-fun temp46_98 () (_ BitVec 64))
(declare-fun temp46_99 () (_ BitVec 64))
(declare-fun temp46_100 () (_ BitVec 64))
(declare-fun temp46_101 () (_ BitVec 64))
(declare-fun temp46_102 () (_ BitVec 64))
(declare-fun temp46_103 () (_ BitVec 64))
(declare-fun temp46_104 () (_ BitVec 64))
(declare-fun temp46_105 () (_ BitVec 64))
(declare-fun temp46_106 () (_ BitVec 64))
(declare-fun temp46_107 () (_ BitVec 64))
(declare-fun temp46_108 () (_ BitVec 64))
(declare-fun temp46_109 () (_ BitVec 64))
(declare-fun temp46_110 () (_ BitVec 64))
(declare-fun temp46_111 () (_ BitVec 64))
(declare-fun temp46_112 () (_ BitVec 64))
(declare-fun temp46_113 () (_ BitVec 64))
(declare-fun temp46_114 () (_ BitVec 64))
(declare-fun temp46_115 () (_ BitVec 64))
(declare-fun temp46_116 () (_ BitVec 64))
(declare-fun temp46_117 () (_ BitVec 64))
(declare-fun temp46_118 () (_ BitVec 64))
(declare-fun temp46_119 () (_ BitVec 64))
(declare-fun temp46_120 () (_ BitVec 64))
(declare-fun temp46_121 () (_ BitVec 64))
(declare-fun temp46_122 () (_ BitVec 64))
(declare-fun temp46_123 () (_ BitVec 64))
(declare-fun temp46_124 () (_ BitVec 64))
(declare-fun temp46_125 () (_ BitVec 64))
(declare-fun temp46_126 () (_ BitVec 64))
(declare-fun temp46_127 () (_ BitVec 64))
(declare-fun temp46_128 () (_ BitVec 64))
(declare-fun temp46_129 () (_ BitVec 64))
(declare-fun temp46_130 () (_ BitVec 64))
(declare-fun temp46_131 () (_ BitVec 64))
(declare-fun temp46_132 () (_ BitVec 64))
(declare-fun temp46_133 () (_ BitVec 64))
(declare-fun temp46_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp46_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp46_136 () (_ BitVec 64))
(declare-fun temp46_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp46_138 () (_ BitVec 64))
(declare-fun temp46_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp46_140 () (_ BitVec 64))
(declare-fun temp46_141 () (_ BitVec 64))
(declare-fun temp46_142 () (_ BitVec 64))
(declare-fun temp46_143 () (_ BitVec 64))
(declare-fun temp46_144 () (_ BitVec 64))
(declare-fun temp46_145 () (_ BitVec 64))
(declare-fun temp46_146 () (_ BitVec 64))
(declare-fun temp46_147 () (_ BitVec 64))
(declare-fun temp46_148 () (_ BitVec 64))
(declare-fun temp46_149 () (_ BitVec 64))
(declare-fun temp46_150 () (_ BitVec 64))
(declare-fun temp46_151 () (_ BitVec 64))
(declare-fun temp46_152 () (_ BitVec 64))
(declare-fun temp46_153 () (_ BitVec 64))
(declare-fun temp46_154 () (_ BitVec 64))
(declare-fun temp46_155 () (_ BitVec 64))
(declare-fun temp46_157 () (_ BitVec 64))
(declare-fun temp46_158 () (_ BitVec 64))
(declare-fun temp46_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp46_159 () (_ BitVec 64))
(declare-fun temp46_160 () (_ BitVec 64))
(declare-fun temp46_162 () (_ BitVec 64))
(declare-fun temp46_163 () (_ BitVec 64))
(declare-fun temp46_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp46_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp46_165 () (_ BitVec 64))
(declare-fun temp46_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp46_167 () (_ BitVec 64))
(declare-fun temp46_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp46_169 () (_ BitVec 64))
(declare-fun temp46_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp46_171 () (_ BitVec 64))
(declare-fun temp46_172 () (_ BitVec 64))
(declare-fun temp46_173 () (_ BitVec 64))
(declare-fun temp46_174 () (_ BitVec 64))
(declare-fun temp46_175 () (_ BitVec 64))
(declare-fun temp46_176 () (_ BitVec 64))
(declare-fun temp46_177 () (_ BitVec 64))
(declare-fun temp46_178 () (_ BitVec 64))
(declare-fun temp46_179 () (_ BitVec 64))
(declare-fun temp46_180 () (_ BitVec 64))
(declare-fun temp46_181 () (_ BitVec 64))
(declare-fun temp46_182 () (_ BitVec 64))
(declare-fun temp46_183 () (_ BitVec 64))
(declare-fun temp46_184 () (_ BitVec 64))
(declare-fun temp46_185 () (_ BitVec 64))
(declare-fun temp46_186 () (_ BitVec 64))
(declare-fun temp46_187 () (_ BitVec 64))
(declare-fun temp46_188 () (_ BitVec 64))
(declare-fun temp46_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp46_190 () (_ BitVec 64))
(declare-fun temp46_192 () (_ BitVec 64))
(declare-fun temp46_193 () (_ BitVec 64))
(declare-fun temp46_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp46_194 () (_ BitVec 64))
(declare-fun temp46_195 () (_ BitVec 64))
(declare-fun temp46_197 () (_ BitVec 64))
(declare-fun temp46_198 () (_ BitVec 64))
(declare-fun temp46_196 () (_ BitVec 64))
(declare-fun temp46_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp46_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp46_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp46_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp46_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp46_204 () (_ BitVec 64))
(declare-fun temp46_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp46_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp46_207 () (_ BitVec 64))
(declare-fun temp46_208 () (_ BitVec 64))
(declare-fun temp46_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp46_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp46_211 () (_ BitVec 64))
(declare-fun temp46_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp46_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp46_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp46_215 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5717837 () (_ BitVec 64))
(declare-fun temp46_216 () (_ BitVec 64))
(assert (= temp46_1 #x0000000000000001))
(assert (= var77203 temp46_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp46_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp46_2)))
(assert (= temp46_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp46_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp46_4 #x0000000000000000))
(assert (= var210941 temp46_4))
(assert (= temp46_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp46_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp46_6 #x0000000000000000))
(assert (= var210986 temp46_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp46_7 #x0000000000000000))
(assert (= temp46_8 temp46_7))
(assert (= temp46_9 (select ARGNAME_padding_NAMEEND_VAL temp46_8)))
(assert (= temp46_10 #x0000000000000001))
(assert (= temp46_11 temp46_10))
(assert (= temp46_12 (select ARGNAME_padding_NAMEEND_VAL temp46_11)))
(assert (= temp46_13 #x0000000000000002))
(assert (= temp46_14 temp46_13))
(assert (= temp46_15 (select ARGNAME_padding_NAMEEND_VAL temp46_14)))
(assert (= temp46_16 #x0000000000000003))
(assert (= temp46_17 temp46_16))
(assert (= temp46_18 (select ARGNAME_padding_NAMEEND_VAL temp46_17)))
(assert (= temp46_19 #x0000000000000004))
(assert (= temp46_20 temp46_19))
(assert (= temp46_21 (select ARGNAME_padding_NAMEEND_VAL temp46_20)))
(assert (= temp46_22 #x0000000000000005))
(assert (= temp46_23 temp46_22))
(assert (= temp46_24 (select ARGNAME_padding_NAMEEND_VAL temp46_23)))
(assert (= temp46_25 #x0000000000000000))
(assert (= temp46_26 #x0000000000000000))
(assert (= temp46_27 temp46_26))
(assert (= temp46_28 (select ARGNAME_padding_NAMEEND_VAL temp46_27)))
(assert (= temp46_29 #x0000000000000000))
(assert (= temp46_30 #x0000000000000001))
(assert (= temp46_31 temp46_30))
(assert (= temp46_32 (select ARGNAME_padding_NAMEEND_VAL temp46_31)))
(assert (= temp46_33 #x0000000000000000))
(assert (= temp46_34 #x0000000000000002))
(assert (= temp46_35 temp46_34))
(assert (= temp46_36 (select ARGNAME_padding_NAMEEND_VAL temp46_35)))
(assert (= temp46_37 #x0000000000000000))
(assert (= temp46_38 #x0000000000000003))
(assert (= temp46_39 temp46_38))
(assert (= temp46_40 (select ARGNAME_padding_NAMEEND_VAL temp46_39)))
(assert (= temp46_41 #x0000000000000000))
(assert (= temp46_42 #x0000000000000004))
(assert (= temp46_43 temp46_42))
(assert (= temp46_44 (select ARGNAME_padding_NAMEEND_VAL temp46_43)))
(assert (= temp46_45 #x0000000000000000))
(assert (= temp46_46 #x0000000000000005))
(assert (= temp46_47 temp46_46))
(assert (= temp46_48 (select ARGNAME_padding_NAMEEND_VAL temp46_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp46_28 temp46_25)
             (bvslt temp46_32 temp46_29)
             (bvslt temp46_36 temp46_33)
             (bvslt temp46_40 temp46_37)
             (bvslt temp46_44 temp46_41)
             (bvslt temp46_48 temp46_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp46_49 #x0000000000000000))
(assert (= var1191714 temp46_49))
(assert (= temp46_50 #x0000000000000000))
(assert (= temp46_51 temp46_50))
(assert (= temp46_52 (select ARGNAME_output_padding_NAMEEND_VAL temp46_51)))
(assert (= temp46_53 #x0000000000000001))
(assert (= temp46_54 temp46_53))
(assert (= temp46_55 (select ARGNAME_output_padding_NAMEEND_VAL temp46_54)))
(assert (= temp46_56 #x0000000000000002))
(assert (= temp46_57 temp46_56))
(assert (= temp46_58 (select ARGNAME_output_padding_NAMEEND_VAL temp46_57)))
(assert (= temp46_59 #x0000000000000003))
(assert (= temp46_60 temp46_59))
(assert (= temp46_61 (select ARGNAME_output_padding_NAMEEND_VAL temp46_60)))
(assert (= temp46_62 #x0000000000000004))
(assert (= temp46_63 temp46_62))
(assert (= temp46_64 (select ARGNAME_output_padding_NAMEEND_VAL temp46_63)))
(assert (= temp46_65 #x0000000000000005))
(assert (= temp46_66 temp46_65))
(assert (= temp46_67 (select ARGNAME_output_padding_NAMEEND_VAL temp46_66)))
(assert (= temp46_68 #x0000000000000000))
(assert (= temp46_69 #x0000000000000000))
(assert (= temp46_70 temp46_69))
(assert (= temp46_71 (select ARGNAME_output_padding_NAMEEND_VAL temp46_70)))
(assert (= temp46_72 #x0000000000000000))
(assert (= temp46_73 #x0000000000000001))
(assert (= temp46_74 temp46_73))
(assert (= temp46_75 (select ARGNAME_output_padding_NAMEEND_VAL temp46_74)))
(assert (= temp46_76 #x0000000000000000))
(assert (= temp46_77 #x0000000000000002))
(assert (= temp46_78 temp46_77))
(assert (= temp46_79 (select ARGNAME_output_padding_NAMEEND_VAL temp46_78)))
(assert (= temp46_80 #x0000000000000000))
(assert (= temp46_81 #x0000000000000003))
(assert (= temp46_82 temp46_81))
(assert (= temp46_83 (select ARGNAME_output_padding_NAMEEND_VAL temp46_82)))
(assert (= temp46_84 #x0000000000000000))
(assert (= temp46_85 #x0000000000000004))
(assert (= temp46_86 temp46_85))
(assert (= temp46_87 (select ARGNAME_output_padding_NAMEEND_VAL temp46_86)))
(assert (= temp46_88 #x0000000000000000))
(assert (= temp46_89 #x0000000000000005))
(assert (= temp46_90 temp46_89))
(assert (= temp46_91 (select ARGNAME_output_padding_NAMEEND_VAL temp46_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp46_71 temp46_68)
             (bvslt temp46_75 temp46_72)
             (bvslt temp46_79 temp46_76)
             (bvslt temp46_83 temp46_80)
             (bvslt temp46_87 temp46_84)
             (bvslt temp46_91 temp46_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp46_92 #x0000000000000000))
(assert (= var1191725 temp46_92))
(assert (= temp46_93 #x0000000000000000))
(assert (= temp46_94 temp46_93))
(assert (= temp46_95 (select ARGNAME_stride_NAMEEND_VAL temp46_94)))
(assert (= temp46_96 #x0000000000000001))
(assert (= temp46_97 temp46_96))
(assert (= temp46_98 (select ARGNAME_stride_NAMEEND_VAL temp46_97)))
(assert (= temp46_99 #x0000000000000002))
(assert (= temp46_100 temp46_99))
(assert (= temp46_101 (select ARGNAME_stride_NAMEEND_VAL temp46_100)))
(assert (= temp46_102 #x0000000000000003))
(assert (= temp46_103 temp46_102))
(assert (= temp46_104 (select ARGNAME_stride_NAMEEND_VAL temp46_103)))
(assert (= temp46_105 #x0000000000000004))
(assert (= temp46_106 temp46_105))
(assert (= temp46_107 (select ARGNAME_stride_NAMEEND_VAL temp46_106)))
(assert (= temp46_108 #x0000000000000005))
(assert (= temp46_109 temp46_108))
(assert (= temp46_110 (select ARGNAME_stride_NAMEEND_VAL temp46_109)))
(assert (= temp46_111 #x0000000000000000))
(assert (= temp46_112 #x0000000000000000))
(assert (= temp46_113 temp46_112))
(assert (= temp46_114 (select ARGNAME_stride_NAMEEND_VAL temp46_113)))
(assert (= temp46_115 #x0000000000000000))
(assert (= temp46_116 #x0000000000000001))
(assert (= temp46_117 temp46_116))
(assert (= temp46_118 (select ARGNAME_stride_NAMEEND_VAL temp46_117)))
(assert (= temp46_119 #x0000000000000000))
(assert (= temp46_120 #x0000000000000002))
(assert (= temp46_121 temp46_120))
(assert (= temp46_122 (select ARGNAME_stride_NAMEEND_VAL temp46_121)))
(assert (= temp46_123 #x0000000000000000))
(assert (= temp46_124 #x0000000000000003))
(assert (= temp46_125 temp46_124))
(assert (= temp46_126 (select ARGNAME_stride_NAMEEND_VAL temp46_125)))
(assert (= temp46_127 #x0000000000000000))
(assert (= temp46_128 #x0000000000000004))
(assert (= temp46_129 temp46_128))
(assert (= temp46_130 (select ARGNAME_stride_NAMEEND_VAL temp46_129)))
(assert (= temp46_131 #x0000000000000000))
(assert (= temp46_132 #x0000000000000005))
(assert (= temp46_133 temp46_132))
(assert (= temp46_134 (select ARGNAME_stride_NAMEEND_VAL temp46_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp46_114 temp46_111)
             (bvsle temp46_118 temp46_115)
             (bvsle temp46_122 temp46_119)
             (bvsle temp46_126 temp46_123)
             (bvsle temp46_130 temp46_127)
             (bvsle temp46_134 temp46_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp46_135 #x0000000000000000))
(assert (= var1191735 temp46_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp46_136 #x0000000000000001))
(assert (= var1191747 temp46_136))
(assert (= temp46_137 #x0000000000000000))
(assert (= var1179826 temp46_137))
(assert (= temp46_138 #x0000000000000000))
(assert (= temp46_139 temp46_138))
(assert (= temp46_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp46_139)))
(assert (= temp46_141 #x0000000000000001))
(assert (= temp46_142 temp46_141))
(assert (= temp46_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp46_142)))
(assert (= temp46_144 #x0000000000000002))
(assert (= temp46_145 temp46_144))
(assert (= temp46_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp46_145)))
(assert (= temp46_147 #x0000000000000003))
(assert (= temp46_148 temp46_147))
(assert (= temp46_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp46_148)))
(assert (= temp46_150 #x0000000000000004))
(assert (= temp46_151 temp46_150))
(assert (= temp46_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp46_151)))
(assert (= temp46_153 #x0000000000000005))
(assert (= temp46_154 temp46_153))
(assert (= temp46_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp46_154)))
(assert (= temp46_157 var1179826))
(assert (= temp46_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp46_157)))
(assert (= temp46_156 temp46_158))
(assert (= var1191780
   (ite (bvslt temp46_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp46_159 #x0000000000000000))
(assert (= var1191780 temp46_159))
(assert (= temp46_160 #x0000000000000000))
(assert (= var1179826 temp46_160))
(assert (= temp46_162 var1179826))
(assert (= temp46_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp46_162)))
(assert (= temp46_161 temp46_163))
(assert (= var1191802 (bvsmod temp46_161 ARGNAME_groups_NAMEEND)))
(assert (= temp46_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp46_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp46_165 #x0000000000000001))
(assert (= var1191803 temp46_165))
(assert (= temp46_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp46_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp46_167 #x0000000000000001))
(assert (= var1191823 temp46_167))
(assert (= temp46_168 #x0000000000000001))
(assert (= var1180714 temp46_168))
(assert (= temp46_169 #x0000000000000000))
(assert (= temp46_170 temp46_169))
(assert (= temp46_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp46_170)))
(assert (= temp46_172 #x0000000000000001))
(assert (= temp46_173 temp46_172))
(assert (= temp46_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp46_173)))
(assert (= temp46_175 #x0000000000000002))
(assert (= temp46_176 temp46_175))
(assert (= temp46_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp46_176)))
(assert (= temp46_178 #x0000000000000003))
(assert (= temp46_179 temp46_178))
(assert (= temp46_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp46_179)))
(assert (= temp46_181 #x0000000000000004))
(assert (= temp46_182 temp46_181))
(assert (= temp46_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp46_182)))
(assert (= temp46_184 #x0000000000000005))
(assert (= temp46_185 temp46_184))
(assert (= temp46_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp46_185)))
(assert (= temp46_187 #x0000000000000000))
(assert (= temp46_188
   (ite (bvslt var1180714 temp46_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp46_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp46_188)))
(assert (= var1191831 temp46_189))
(assert (bvslt (ite (bvslt var1180714 temp46_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp46_190 #x0000000000000001))
(assert (= var1180714 temp46_190))
(assert (= temp46_192 var1180714))
(assert (= temp46_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp46_192)))
(assert (= temp46_191 temp46_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp46_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp46_194 #x0000000000000001))
(assert (= var1191836 temp46_194))
(assert (= temp46_195 #x0000000000000000))
(assert (= var1179826 temp46_195))
(assert (= temp46_197 var1179826))
(assert (= temp46_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp46_197)))
(assert (= temp46_196 temp46_198))
(assert (= temp46_199 #x0000000000000002))
(assert (= var1586025 temp46_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp46_200 #x0000000000000001))
(assert (= var1191993 temp46_200))
(assert (= temp46_201 #x0000000000000001))
(assert (= var2700303 temp46_201))
(assert (= temp46_202 #x0000000000000001))
(assert (= var2962447 temp46_202))
(assert (= temp46_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp46_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp46_204 #x0000000000000001))
(assert (= var211058 temp46_204))
(assert (= temp46_205 #x0000000000000001))
(assert (= var211188 temp46_205))
(assert (= var3879401 var211188))
(assert (= temp46_206 #x0000000000000000))
(assert (= var3866802 temp46_206))
(assert (= temp46_207 #x0000000000000000))
(assert (= temp46_208
   (ite (bvslt var3866802 temp46_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp46_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp46_208)))
(assert (= var3879420 temp46_209))
(assert (bvslt (ite (bvslt var3866802 temp46_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp46_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp46_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp46_211 #x0000000000000001))
(assert (= var3879421 temp46_211))
(assert (= temp46_212 #x0000000000000000))
(assert (= var4079423 temp46_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp46_213 #x0000000000000002))
(assert (= var4208259 temp46_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp46_214 #x0000000000000000))
(assert (= var4273820 temp46_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211388 var210913))
(assert (= temp46_215 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp46_215) #x0000000000000001 #x0000000000000000)))
(assert (= var5717837 var211389))
(assert (= temp46_216 #x0000000000000001))
(assert (= var211058 temp46_216))
(model-add temp46_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp46_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp46_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp46_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




