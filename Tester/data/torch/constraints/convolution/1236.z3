(declare-fun temp10378_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10378_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10378_3 () (_ BitVec 64))
(declare-fun temp10378_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10378_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10378_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10378_7 () (_ BitVec 64))
(declare-fun temp10378_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10378_9 () (_ BitVec 64))
(declare-fun temp10378_10 () (_ BitVec 64))
(declare-fun temp10378_11 () (_ BitVec 64))
(declare-fun temp10378_12 () (_ BitVec 64))
(declare-fun temp10378_13 () (_ BitVec 64))
(declare-fun temp10378_14 () (_ BitVec 64))
(declare-fun temp10378_15 () (_ BitVec 64))
(declare-fun temp10378_16 () (_ BitVec 64))
(declare-fun temp10378_17 () (_ BitVec 64))
(declare-fun temp10378_18 () (_ BitVec 64))
(declare-fun temp10378_19 () (_ BitVec 64))
(declare-fun temp10378_20 () (_ BitVec 64))
(declare-fun temp10378_21 () (_ BitVec 64))
(declare-fun temp10378_22 () (_ BitVec 64))
(declare-fun temp10378_23 () (_ BitVec 64))
(declare-fun temp10378_24 () (_ BitVec 64))
(declare-fun temp10378_25 () (_ BitVec 64))
(declare-fun temp10378_26 () (_ BitVec 64))
(declare-fun temp10378_27 () (_ BitVec 64))
(declare-fun temp10378_28 () (_ BitVec 64))
(declare-fun temp10378_29 () (_ BitVec 64))
(declare-fun temp10378_30 () (_ BitVec 64))
(declare-fun temp10378_31 () (_ BitVec 64))
(declare-fun temp10378_32 () (_ BitVec 64))
(declare-fun temp10378_33 () (_ BitVec 64))
(declare-fun temp10378_34 () (_ BitVec 64))
(declare-fun temp10378_35 () (_ BitVec 64))
(declare-fun temp10378_36 () (_ BitVec 64))
(declare-fun temp10378_37 () (_ BitVec 64))
(declare-fun temp10378_38 () (_ BitVec 64))
(declare-fun temp10378_39 () (_ BitVec 64))
(declare-fun temp10378_40 () (_ BitVec 64))
(declare-fun temp10378_41 () (_ BitVec 64))
(declare-fun temp10378_42 () (_ BitVec 64))
(declare-fun temp10378_43 () (_ BitVec 64))
(declare-fun temp10378_44 () (_ BitVec 64))
(declare-fun temp10378_45 () (_ BitVec 64))
(declare-fun temp10378_46 () (_ BitVec 64))
(declare-fun temp10378_47 () (_ BitVec 64))
(declare-fun temp10378_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10378_49 () (_ BitVec 64))
(declare-fun temp10378_50 () (_ BitVec 64))
(declare-fun temp10378_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10378_52 () (_ BitVec 64))
(declare-fun temp10378_53 () (_ BitVec 64))
(declare-fun temp10378_54 () (_ BitVec 64))
(declare-fun temp10378_55 () (_ BitVec 64))
(declare-fun temp10378_56 () (_ BitVec 64))
(declare-fun temp10378_57 () (_ BitVec 64))
(declare-fun temp10378_58 () (_ BitVec 64))
(declare-fun temp10378_59 () (_ BitVec 64))
(declare-fun temp10378_60 () (_ BitVec 64))
(declare-fun temp10378_61 () (_ BitVec 64))
(declare-fun temp10378_62 () (_ BitVec 64))
(declare-fun temp10378_63 () (_ BitVec 64))
(declare-fun temp10378_64 () (_ BitVec 64))
(declare-fun temp10378_65 () (_ BitVec 64))
(declare-fun temp10378_66 () (_ BitVec 64))
(declare-fun temp10378_67 () (_ BitVec 64))
(declare-fun temp10378_68 () (_ BitVec 64))
(declare-fun temp10378_69 () (_ BitVec 64))
(declare-fun temp10378_70 () (_ BitVec 64))
(declare-fun temp10378_71 () (_ BitVec 64))
(declare-fun temp10378_72 () (_ BitVec 64))
(declare-fun temp10378_73 () (_ BitVec 64))
(declare-fun temp10378_74 () (_ BitVec 64))
(declare-fun temp10378_75 () (_ BitVec 64))
(declare-fun temp10378_76 () (_ BitVec 64))
(declare-fun temp10378_77 () (_ BitVec 64))
(declare-fun temp10378_78 () (_ BitVec 64))
(declare-fun temp10378_79 () (_ BitVec 64))
(declare-fun temp10378_80 () (_ BitVec 64))
(declare-fun temp10378_81 () (_ BitVec 64))
(declare-fun temp10378_82 () (_ BitVec 64))
(declare-fun temp10378_83 () (_ BitVec 64))
(declare-fun temp10378_84 () (_ BitVec 64))
(declare-fun temp10378_85 () (_ BitVec 64))
(declare-fun temp10378_86 () (_ BitVec 64))
(declare-fun temp10378_87 () (_ BitVec 64))
(declare-fun temp10378_88 () (_ BitVec 64))
(declare-fun temp10378_89 () (_ BitVec 64))
(declare-fun temp10378_90 () (_ BitVec 64))
(declare-fun temp10378_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10378_92 () (_ BitVec 64))
(declare-fun temp10378_93 () (_ BitVec 64))
(declare-fun temp10378_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10378_95 () (_ BitVec 64))
(declare-fun temp10378_96 () (_ BitVec 64))
(declare-fun temp10378_97 () (_ BitVec 64))
(declare-fun temp10378_98 () (_ BitVec 64))
(declare-fun temp10378_99 () (_ BitVec 64))
(declare-fun temp10378_100 () (_ BitVec 64))
(declare-fun temp10378_101 () (_ BitVec 64))
(declare-fun temp10378_102 () (_ BitVec 64))
(declare-fun temp10378_103 () (_ BitVec 64))
(declare-fun temp10378_104 () (_ BitVec 64))
(declare-fun temp10378_105 () (_ BitVec 64))
(declare-fun temp10378_106 () (_ BitVec 64))
(declare-fun temp10378_107 () (_ BitVec 64))
(declare-fun temp10378_108 () (_ BitVec 64))
(declare-fun temp10378_109 () (_ BitVec 64))
(declare-fun temp10378_110 () (_ BitVec 64))
(declare-fun temp10378_111 () (_ BitVec 64))
(declare-fun temp10378_112 () (_ BitVec 64))
(declare-fun temp10378_113 () (_ BitVec 64))
(declare-fun temp10378_114 () (_ BitVec 64))
(declare-fun temp10378_115 () (_ BitVec 64))
(declare-fun temp10378_116 () (_ BitVec 64))
(declare-fun temp10378_117 () (_ BitVec 64))
(declare-fun temp10378_118 () (_ BitVec 64))
(declare-fun temp10378_119 () (_ BitVec 64))
(declare-fun temp10378_120 () (_ BitVec 64))
(declare-fun temp10378_121 () (_ BitVec 64))
(declare-fun temp10378_122 () (_ BitVec 64))
(declare-fun temp10378_123 () (_ BitVec 64))
(declare-fun temp10378_124 () (_ BitVec 64))
(declare-fun temp10378_125 () (_ BitVec 64))
(declare-fun temp10378_126 () (_ BitVec 64))
(declare-fun temp10378_127 () (_ BitVec 64))
(declare-fun temp10378_128 () (_ BitVec 64))
(declare-fun temp10378_129 () (_ BitVec 64))
(declare-fun temp10378_130 () (_ BitVec 64))
(declare-fun temp10378_131 () (_ BitVec 64))
(declare-fun temp10378_132 () (_ BitVec 64))
(declare-fun temp10378_133 () (_ BitVec 64))
(declare-fun temp10378_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10378_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10378_136 () (_ BitVec 64))
(declare-fun temp10378_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10378_138 () (_ BitVec 64))
(declare-fun temp10378_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10378_140 () (_ BitVec 64))
(declare-fun temp10378_141 () (_ BitVec 64))
(declare-fun temp10378_142 () (_ BitVec 64))
(declare-fun temp10378_143 () (_ BitVec 64))
(declare-fun temp10378_144 () (_ BitVec 64))
(declare-fun temp10378_145 () (_ BitVec 64))
(declare-fun temp10378_146 () (_ BitVec 64))
(declare-fun temp10378_147 () (_ BitVec 64))
(declare-fun temp10378_148 () (_ BitVec 64))
(declare-fun temp10378_149 () (_ BitVec 64))
(declare-fun temp10378_150 () (_ BitVec 64))
(declare-fun temp10378_151 () (_ BitVec 64))
(declare-fun temp10378_152 () (_ BitVec 64))
(declare-fun temp10378_153 () (_ BitVec 64))
(declare-fun temp10378_154 () (_ BitVec 64))
(declare-fun temp10378_155 () (_ BitVec 64))
(declare-fun temp10378_157 () (_ BitVec 64))
(declare-fun temp10378_158 () (_ BitVec 64))
(declare-fun temp10378_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10378_159 () (_ BitVec 64))
(declare-fun temp10378_160 () (_ BitVec 64))
(declare-fun temp10378_162 () (_ BitVec 64))
(declare-fun temp10378_163 () (_ BitVec 64))
(declare-fun temp10378_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10378_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10378_165 () (_ BitVec 64))
(declare-fun temp10378_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10378_167 () (_ BitVec 64))
(declare-fun temp10378_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10378_169 () (_ BitVec 64))
(declare-fun temp10378_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10378_171 () (_ BitVec 64))
(declare-fun temp10378_172 () (_ BitVec 64))
(declare-fun temp10378_173 () (_ BitVec 64))
(declare-fun temp10378_174 () (_ BitVec 64))
(declare-fun temp10378_175 () (_ BitVec 64))
(declare-fun temp10378_176 () (_ BitVec 64))
(declare-fun temp10378_177 () (_ BitVec 64))
(declare-fun temp10378_178 () (_ BitVec 64))
(declare-fun temp10378_179 () (_ BitVec 64))
(declare-fun temp10378_180 () (_ BitVec 64))
(declare-fun temp10378_181 () (_ BitVec 64))
(declare-fun temp10378_182 () (_ BitVec 64))
(declare-fun temp10378_183 () (_ BitVec 64))
(declare-fun temp10378_184 () (_ BitVec 64))
(declare-fun temp10378_185 () (_ BitVec 64))
(declare-fun temp10378_186 () (_ BitVec 64))
(declare-fun temp10378_187 () (_ BitVec 64))
(declare-fun temp10378_188 () (_ BitVec 64))
(declare-fun temp10378_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10378_190 () (_ BitVec 64))
(declare-fun temp10378_192 () (_ BitVec 64))
(declare-fun temp10378_193 () (_ BitVec 64))
(declare-fun temp10378_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10378_194 () (_ BitVec 64))
(declare-fun temp10378_195 () (_ BitVec 64))
(declare-fun temp10378_197 () (_ BitVec 64))
(declare-fun temp10378_198 () (_ BitVec 64))
(declare-fun temp10378_196 () (_ BitVec 64))
(declare-fun temp10378_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10378_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10378_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10378_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10378_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10378_204 () (_ BitVec 64))
(declare-fun temp10378_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10378_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10378_207 () (_ BitVec 64))
(declare-fun temp10378_208 () (_ BitVec 64))
(declare-fun temp10378_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10378_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10378_211 () (_ BitVec 64))
(declare-fun temp10378_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10378_213 () (_ BitVec 64))
(declare-fun temp10378_214 () (_ BitVec 64))
(declare-fun temp10378_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10378_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10378_217 () (_ BitVec 64))
(declare-fun temp10378_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10378_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10378_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10378_221 () (_ BitVec 64))
(assert (= temp10378_1 #x0000000000000001))
(assert (= var77203 temp10378_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10378_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10378_2)))
(assert (= temp10378_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10378_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10378_4 #x0000000000000000))
(assert (= var210941 temp10378_4))
(assert (= temp10378_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10378_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10378_6 #x0000000000000000))
(assert (= var210986 temp10378_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10378_7 #x0000000000000000))
(assert (= temp10378_8 temp10378_7))
(assert (= temp10378_9 (select ARGNAME_padding_NAMEEND_VAL temp10378_8)))
(assert (= temp10378_10 #x0000000000000001))
(assert (= temp10378_11 temp10378_10))
(assert (= temp10378_12 (select ARGNAME_padding_NAMEEND_VAL temp10378_11)))
(assert (= temp10378_13 #x0000000000000002))
(assert (= temp10378_14 temp10378_13))
(assert (= temp10378_15 (select ARGNAME_padding_NAMEEND_VAL temp10378_14)))
(assert (= temp10378_16 #x0000000000000003))
(assert (= temp10378_17 temp10378_16))
(assert (= temp10378_18 (select ARGNAME_padding_NAMEEND_VAL temp10378_17)))
(assert (= temp10378_19 #x0000000000000004))
(assert (= temp10378_20 temp10378_19))
(assert (= temp10378_21 (select ARGNAME_padding_NAMEEND_VAL temp10378_20)))
(assert (= temp10378_22 #x0000000000000005))
(assert (= temp10378_23 temp10378_22))
(assert (= temp10378_24 (select ARGNAME_padding_NAMEEND_VAL temp10378_23)))
(assert (= temp10378_25 #x0000000000000000))
(assert (= temp10378_26 #x0000000000000000))
(assert (= temp10378_27 temp10378_26))
(assert (= temp10378_28 (select ARGNAME_padding_NAMEEND_VAL temp10378_27)))
(assert (= temp10378_29 #x0000000000000000))
(assert (= temp10378_30 #x0000000000000001))
(assert (= temp10378_31 temp10378_30))
(assert (= temp10378_32 (select ARGNAME_padding_NAMEEND_VAL temp10378_31)))
(assert (= temp10378_33 #x0000000000000000))
(assert (= temp10378_34 #x0000000000000002))
(assert (= temp10378_35 temp10378_34))
(assert (= temp10378_36 (select ARGNAME_padding_NAMEEND_VAL temp10378_35)))
(assert (= temp10378_37 #x0000000000000000))
(assert (= temp10378_38 #x0000000000000003))
(assert (= temp10378_39 temp10378_38))
(assert (= temp10378_40 (select ARGNAME_padding_NAMEEND_VAL temp10378_39)))
(assert (= temp10378_41 #x0000000000000000))
(assert (= temp10378_42 #x0000000000000004))
(assert (= temp10378_43 temp10378_42))
(assert (= temp10378_44 (select ARGNAME_padding_NAMEEND_VAL temp10378_43)))
(assert (= temp10378_45 #x0000000000000000))
(assert (= temp10378_46 #x0000000000000005))
(assert (= temp10378_47 temp10378_46))
(assert (= temp10378_48 (select ARGNAME_padding_NAMEEND_VAL temp10378_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10378_28 temp10378_25)
             (bvslt temp10378_32 temp10378_29)
             (bvslt temp10378_36 temp10378_33)
             (bvslt temp10378_40 temp10378_37)
             (bvslt temp10378_44 temp10378_41)
             (bvslt temp10378_48 temp10378_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10378_49 #x0000000000000000))
(assert (= var1191714 temp10378_49))
(assert (= temp10378_50 #x0000000000000000))
(assert (= temp10378_51 temp10378_50))
(assert (= temp10378_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10378_51)))
(assert (= temp10378_53 #x0000000000000001))
(assert (= temp10378_54 temp10378_53))
(assert (= temp10378_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10378_54)))
(assert (= temp10378_56 #x0000000000000002))
(assert (= temp10378_57 temp10378_56))
(assert (= temp10378_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10378_57)))
(assert (= temp10378_59 #x0000000000000003))
(assert (= temp10378_60 temp10378_59))
(assert (= temp10378_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10378_60)))
(assert (= temp10378_62 #x0000000000000004))
(assert (= temp10378_63 temp10378_62))
(assert (= temp10378_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10378_63)))
(assert (= temp10378_65 #x0000000000000005))
(assert (= temp10378_66 temp10378_65))
(assert (= temp10378_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10378_66)))
(assert (= temp10378_68 #x0000000000000000))
(assert (= temp10378_69 #x0000000000000000))
(assert (= temp10378_70 temp10378_69))
(assert (= temp10378_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10378_70)))
(assert (= temp10378_72 #x0000000000000000))
(assert (= temp10378_73 #x0000000000000001))
(assert (= temp10378_74 temp10378_73))
(assert (= temp10378_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10378_74)))
(assert (= temp10378_76 #x0000000000000000))
(assert (= temp10378_77 #x0000000000000002))
(assert (= temp10378_78 temp10378_77))
(assert (= temp10378_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10378_78)))
(assert (= temp10378_80 #x0000000000000000))
(assert (= temp10378_81 #x0000000000000003))
(assert (= temp10378_82 temp10378_81))
(assert (= temp10378_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10378_82)))
(assert (= temp10378_84 #x0000000000000000))
(assert (= temp10378_85 #x0000000000000004))
(assert (= temp10378_86 temp10378_85))
(assert (= temp10378_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10378_86)))
(assert (= temp10378_88 #x0000000000000000))
(assert (= temp10378_89 #x0000000000000005))
(assert (= temp10378_90 temp10378_89))
(assert (= temp10378_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10378_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10378_71 temp10378_68)
             (bvslt temp10378_75 temp10378_72)
             (bvslt temp10378_79 temp10378_76)
             (bvslt temp10378_83 temp10378_80)
             (bvslt temp10378_87 temp10378_84)
             (bvslt temp10378_91 temp10378_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10378_92 #x0000000000000000))
(assert (= var1191725 temp10378_92))
(assert (= temp10378_93 #x0000000000000000))
(assert (= temp10378_94 temp10378_93))
(assert (= temp10378_95 (select ARGNAME_stride_NAMEEND_VAL temp10378_94)))
(assert (= temp10378_96 #x0000000000000001))
(assert (= temp10378_97 temp10378_96))
(assert (= temp10378_98 (select ARGNAME_stride_NAMEEND_VAL temp10378_97)))
(assert (= temp10378_99 #x0000000000000002))
(assert (= temp10378_100 temp10378_99))
(assert (= temp10378_101 (select ARGNAME_stride_NAMEEND_VAL temp10378_100)))
(assert (= temp10378_102 #x0000000000000003))
(assert (= temp10378_103 temp10378_102))
(assert (= temp10378_104 (select ARGNAME_stride_NAMEEND_VAL temp10378_103)))
(assert (= temp10378_105 #x0000000000000004))
(assert (= temp10378_106 temp10378_105))
(assert (= temp10378_107 (select ARGNAME_stride_NAMEEND_VAL temp10378_106)))
(assert (= temp10378_108 #x0000000000000005))
(assert (= temp10378_109 temp10378_108))
(assert (= temp10378_110 (select ARGNAME_stride_NAMEEND_VAL temp10378_109)))
(assert (= temp10378_111 #x0000000000000000))
(assert (= temp10378_112 #x0000000000000000))
(assert (= temp10378_113 temp10378_112))
(assert (= temp10378_114 (select ARGNAME_stride_NAMEEND_VAL temp10378_113)))
(assert (= temp10378_115 #x0000000000000000))
(assert (= temp10378_116 #x0000000000000001))
(assert (= temp10378_117 temp10378_116))
(assert (= temp10378_118 (select ARGNAME_stride_NAMEEND_VAL temp10378_117)))
(assert (= temp10378_119 #x0000000000000000))
(assert (= temp10378_120 #x0000000000000002))
(assert (= temp10378_121 temp10378_120))
(assert (= temp10378_122 (select ARGNAME_stride_NAMEEND_VAL temp10378_121)))
(assert (= temp10378_123 #x0000000000000000))
(assert (= temp10378_124 #x0000000000000003))
(assert (= temp10378_125 temp10378_124))
(assert (= temp10378_126 (select ARGNAME_stride_NAMEEND_VAL temp10378_125)))
(assert (= temp10378_127 #x0000000000000000))
(assert (= temp10378_128 #x0000000000000004))
(assert (= temp10378_129 temp10378_128))
(assert (= temp10378_130 (select ARGNAME_stride_NAMEEND_VAL temp10378_129)))
(assert (= temp10378_131 #x0000000000000000))
(assert (= temp10378_132 #x0000000000000005))
(assert (= temp10378_133 temp10378_132))
(assert (= temp10378_134 (select ARGNAME_stride_NAMEEND_VAL temp10378_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10378_114 temp10378_111)
             (bvsle temp10378_118 temp10378_115)
             (bvsle temp10378_122 temp10378_119)
             (bvsle temp10378_126 temp10378_123)
             (bvsle temp10378_130 temp10378_127)
             (bvsle temp10378_134 temp10378_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10378_135 #x0000000000000000))
(assert (= var1191735 temp10378_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10378_136 #x0000000000000001))
(assert (= var1191747 temp10378_136))
(assert (= temp10378_137 #x0000000000000000))
(assert (= var1179826 temp10378_137))
(assert (= temp10378_138 #x0000000000000000))
(assert (= temp10378_139 temp10378_138))
(assert (= temp10378_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10378_139)))
(assert (= temp10378_141 #x0000000000000001))
(assert (= temp10378_142 temp10378_141))
(assert (= temp10378_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10378_142)))
(assert (= temp10378_144 #x0000000000000002))
(assert (= temp10378_145 temp10378_144))
(assert (= temp10378_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10378_145)))
(assert (= temp10378_147 #x0000000000000003))
(assert (= temp10378_148 temp10378_147))
(assert (= temp10378_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10378_148)))
(assert (= temp10378_150 #x0000000000000004))
(assert (= temp10378_151 temp10378_150))
(assert (= temp10378_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10378_151)))
(assert (= temp10378_153 #x0000000000000005))
(assert (= temp10378_154 temp10378_153))
(assert (= temp10378_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10378_154)))
(assert (= temp10378_157 var1179826))
(assert (= temp10378_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10378_157)))
(assert (= temp10378_156 temp10378_158))
(assert (= var1191780
   (ite (bvslt temp10378_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10378_159 #x0000000000000000))
(assert (= var1191780 temp10378_159))
(assert (= temp10378_160 #x0000000000000000))
(assert (= var1179826 temp10378_160))
(assert (= temp10378_162 var1179826))
(assert (= temp10378_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10378_162)))
(assert (= temp10378_161 temp10378_163))
(assert (= var1191802 (bvsmod temp10378_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10378_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10378_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10378_165 #x0000000000000001))
(assert (= var1191803 temp10378_165))
(assert (= temp10378_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10378_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10378_167 #x0000000000000001))
(assert (= var1191823 temp10378_167))
(assert (= temp10378_168 #x0000000000000001))
(assert (= var1180714 temp10378_168))
(assert (= temp10378_169 #x0000000000000000))
(assert (= temp10378_170 temp10378_169))
(assert (= temp10378_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10378_170)))
(assert (= temp10378_172 #x0000000000000001))
(assert (= temp10378_173 temp10378_172))
(assert (= temp10378_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10378_173)))
(assert (= temp10378_175 #x0000000000000002))
(assert (= temp10378_176 temp10378_175))
(assert (= temp10378_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10378_176)))
(assert (= temp10378_178 #x0000000000000003))
(assert (= temp10378_179 temp10378_178))
(assert (= temp10378_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10378_179)))
(assert (= temp10378_181 #x0000000000000004))
(assert (= temp10378_182 temp10378_181))
(assert (= temp10378_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10378_182)))
(assert (= temp10378_184 #x0000000000000005))
(assert (= temp10378_185 temp10378_184))
(assert (= temp10378_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10378_185)))
(assert (= temp10378_187 #x0000000000000000))
(assert (= temp10378_188
   (ite (bvslt var1180714 temp10378_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10378_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10378_188)))
(assert (= var1191831 temp10378_189))
(assert (bvslt (ite (bvslt var1180714 temp10378_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10378_190 #x0000000000000001))
(assert (= var1180714 temp10378_190))
(assert (= temp10378_192 var1180714))
(assert (= temp10378_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10378_192)))
(assert (= temp10378_191 temp10378_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10378_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10378_194 #x0000000000000001))
(assert (= var1191836 temp10378_194))
(assert (= temp10378_195 #x0000000000000000))
(assert (= var1179826 temp10378_195))
(assert (= temp10378_197 var1179826))
(assert (= temp10378_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10378_197)))
(assert (= temp10378_196 temp10378_198))
(assert (= temp10378_199 #x0000000000000002))
(assert (= var1586025 temp10378_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10378_200 #x0000000000000001))
(assert (= var1191993 temp10378_200))
(assert (= temp10378_201 #x0000000000000001))
(assert (= var2700303 temp10378_201))
(assert (= temp10378_202 #x0000000000000001))
(assert (= var2962447 temp10378_202))
(assert (= temp10378_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10378_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10378_204 #x0000000000000001))
(assert (= var211058 temp10378_204))
(assert (= temp10378_205 #x0000000000000001))
(assert (= var211188 temp10378_205))
(assert (= var3879401 var211188))
(assert (= temp10378_206 #x0000000000000000))
(assert (= var3866802 temp10378_206))
(assert (= temp10378_207 #x0000000000000000))
(assert (= temp10378_208
   (ite (bvslt var3866802 temp10378_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10378_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10378_208)))
(assert (= var3879420 temp10378_209))
(assert (bvslt (ite (bvslt var3866802 temp10378_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10378_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10378_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10378_211 #x0000000000000000))
(assert (= var3879421 temp10378_211))
(assert (= temp10378_212 #x0000000000000001))
(assert (= var3867690 temp10378_212))
(assert (= temp10378_213 #x0000000000000000))
(assert (= temp10378_214
   (ite (bvslt var3867690 temp10378_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10378_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10378_214)))
(assert (= var3879423 temp10378_215))
(assert (bvslt (ite (bvslt var3867690 temp10378_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10378_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10378_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10378_217 #x0000000000000001))
(assert (= var3879424 temp10378_217))
(assert (= temp10378_218 #x0000000000000000))
(assert (= var4079423 temp10378_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10378_219 #x0000000000000002))
(assert (= var4208259 temp10378_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10378_220 #x0000000000000000))
(assert (= var4273820 temp10378_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10378_221 #x0000000000000001))
(assert (= var211058 temp10378_221))
(model-add temp10378_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10378_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10378_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10378_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



