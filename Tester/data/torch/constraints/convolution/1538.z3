(declare-fun temp10845_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10845_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10845_3 () (_ BitVec 64))
(declare-fun temp10845_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10845_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10845_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10845_7 () (_ BitVec 64))
(declare-fun temp10845_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10845_9 () (_ BitVec 64))
(declare-fun temp10845_10 () (_ BitVec 64))
(declare-fun temp10845_11 () (_ BitVec 64))
(declare-fun temp10845_12 () (_ BitVec 64))
(declare-fun temp10845_13 () (_ BitVec 64))
(declare-fun temp10845_14 () (_ BitVec 64))
(declare-fun temp10845_15 () (_ BitVec 64))
(declare-fun temp10845_16 () (_ BitVec 64))
(declare-fun temp10845_17 () (_ BitVec 64))
(declare-fun temp10845_18 () (_ BitVec 64))
(declare-fun temp10845_19 () (_ BitVec 64))
(declare-fun temp10845_20 () (_ BitVec 64))
(declare-fun temp10845_21 () (_ BitVec 64))
(declare-fun temp10845_22 () (_ BitVec 64))
(declare-fun temp10845_23 () (_ BitVec 64))
(declare-fun temp10845_24 () (_ BitVec 64))
(declare-fun temp10845_25 () (_ BitVec 64))
(declare-fun temp10845_26 () (_ BitVec 64))
(declare-fun temp10845_27 () (_ BitVec 64))
(declare-fun temp10845_28 () (_ BitVec 64))
(declare-fun temp10845_29 () (_ BitVec 64))
(declare-fun temp10845_30 () (_ BitVec 64))
(declare-fun temp10845_31 () (_ BitVec 64))
(declare-fun temp10845_32 () (_ BitVec 64))
(declare-fun temp10845_33 () (_ BitVec 64))
(declare-fun temp10845_34 () (_ BitVec 64))
(declare-fun temp10845_35 () (_ BitVec 64))
(declare-fun temp10845_36 () (_ BitVec 64))
(declare-fun temp10845_37 () (_ BitVec 64))
(declare-fun temp10845_38 () (_ BitVec 64))
(declare-fun temp10845_39 () (_ BitVec 64))
(declare-fun temp10845_40 () (_ BitVec 64))
(declare-fun temp10845_41 () (_ BitVec 64))
(declare-fun temp10845_42 () (_ BitVec 64))
(declare-fun temp10845_43 () (_ BitVec 64))
(declare-fun temp10845_44 () (_ BitVec 64))
(declare-fun temp10845_45 () (_ BitVec 64))
(declare-fun temp10845_46 () (_ BitVec 64))
(declare-fun temp10845_47 () (_ BitVec 64))
(declare-fun temp10845_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10845_49 () (_ BitVec 64))
(declare-fun temp10845_50 () (_ BitVec 64))
(declare-fun temp10845_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10845_52 () (_ BitVec 64))
(declare-fun temp10845_53 () (_ BitVec 64))
(declare-fun temp10845_54 () (_ BitVec 64))
(declare-fun temp10845_55 () (_ BitVec 64))
(declare-fun temp10845_56 () (_ BitVec 64))
(declare-fun temp10845_57 () (_ BitVec 64))
(declare-fun temp10845_58 () (_ BitVec 64))
(declare-fun temp10845_59 () (_ BitVec 64))
(declare-fun temp10845_60 () (_ BitVec 64))
(declare-fun temp10845_61 () (_ BitVec 64))
(declare-fun temp10845_62 () (_ BitVec 64))
(declare-fun temp10845_63 () (_ BitVec 64))
(declare-fun temp10845_64 () (_ BitVec 64))
(declare-fun temp10845_65 () (_ BitVec 64))
(declare-fun temp10845_66 () (_ BitVec 64))
(declare-fun temp10845_67 () (_ BitVec 64))
(declare-fun temp10845_68 () (_ BitVec 64))
(declare-fun temp10845_69 () (_ BitVec 64))
(declare-fun temp10845_70 () (_ BitVec 64))
(declare-fun temp10845_71 () (_ BitVec 64))
(declare-fun temp10845_72 () (_ BitVec 64))
(declare-fun temp10845_73 () (_ BitVec 64))
(declare-fun temp10845_74 () (_ BitVec 64))
(declare-fun temp10845_75 () (_ BitVec 64))
(declare-fun temp10845_76 () (_ BitVec 64))
(declare-fun temp10845_77 () (_ BitVec 64))
(declare-fun temp10845_78 () (_ BitVec 64))
(declare-fun temp10845_79 () (_ BitVec 64))
(declare-fun temp10845_80 () (_ BitVec 64))
(declare-fun temp10845_81 () (_ BitVec 64))
(declare-fun temp10845_82 () (_ BitVec 64))
(declare-fun temp10845_83 () (_ BitVec 64))
(declare-fun temp10845_84 () (_ BitVec 64))
(declare-fun temp10845_85 () (_ BitVec 64))
(declare-fun temp10845_86 () (_ BitVec 64))
(declare-fun temp10845_87 () (_ BitVec 64))
(declare-fun temp10845_88 () (_ BitVec 64))
(declare-fun temp10845_89 () (_ BitVec 64))
(declare-fun temp10845_90 () (_ BitVec 64))
(declare-fun temp10845_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10845_92 () (_ BitVec 64))
(declare-fun temp10845_93 () (_ BitVec 64))
(declare-fun temp10845_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10845_95 () (_ BitVec 64))
(declare-fun temp10845_96 () (_ BitVec 64))
(declare-fun temp10845_97 () (_ BitVec 64))
(declare-fun temp10845_98 () (_ BitVec 64))
(declare-fun temp10845_99 () (_ BitVec 64))
(declare-fun temp10845_100 () (_ BitVec 64))
(declare-fun temp10845_101 () (_ BitVec 64))
(declare-fun temp10845_102 () (_ BitVec 64))
(declare-fun temp10845_103 () (_ BitVec 64))
(declare-fun temp10845_104 () (_ BitVec 64))
(declare-fun temp10845_105 () (_ BitVec 64))
(declare-fun temp10845_106 () (_ BitVec 64))
(declare-fun temp10845_107 () (_ BitVec 64))
(declare-fun temp10845_108 () (_ BitVec 64))
(declare-fun temp10845_109 () (_ BitVec 64))
(declare-fun temp10845_110 () (_ BitVec 64))
(declare-fun temp10845_111 () (_ BitVec 64))
(declare-fun temp10845_112 () (_ BitVec 64))
(declare-fun temp10845_113 () (_ BitVec 64))
(declare-fun temp10845_114 () (_ BitVec 64))
(declare-fun temp10845_115 () (_ BitVec 64))
(declare-fun temp10845_116 () (_ BitVec 64))
(declare-fun temp10845_117 () (_ BitVec 64))
(declare-fun temp10845_118 () (_ BitVec 64))
(declare-fun temp10845_119 () (_ BitVec 64))
(declare-fun temp10845_120 () (_ BitVec 64))
(declare-fun temp10845_121 () (_ BitVec 64))
(declare-fun temp10845_122 () (_ BitVec 64))
(declare-fun temp10845_123 () (_ BitVec 64))
(declare-fun temp10845_124 () (_ BitVec 64))
(declare-fun temp10845_125 () (_ BitVec 64))
(declare-fun temp10845_126 () (_ BitVec 64))
(declare-fun temp10845_127 () (_ BitVec 64))
(declare-fun temp10845_128 () (_ BitVec 64))
(declare-fun temp10845_129 () (_ BitVec 64))
(declare-fun temp10845_130 () (_ BitVec 64))
(declare-fun temp10845_131 () (_ BitVec 64))
(declare-fun temp10845_132 () (_ BitVec 64))
(declare-fun temp10845_133 () (_ BitVec 64))
(declare-fun temp10845_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10845_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10845_136 () (_ BitVec 64))
(declare-fun temp10845_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10845_138 () (_ BitVec 64))
(declare-fun temp10845_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10845_140 () (_ BitVec 64))
(declare-fun temp10845_141 () (_ BitVec 64))
(declare-fun temp10845_142 () (_ BitVec 64))
(declare-fun temp10845_143 () (_ BitVec 64))
(declare-fun temp10845_144 () (_ BitVec 64))
(declare-fun temp10845_145 () (_ BitVec 64))
(declare-fun temp10845_146 () (_ BitVec 64))
(declare-fun temp10845_147 () (_ BitVec 64))
(declare-fun temp10845_148 () (_ BitVec 64))
(declare-fun temp10845_149 () (_ BitVec 64))
(declare-fun temp10845_150 () (_ BitVec 64))
(declare-fun temp10845_151 () (_ BitVec 64))
(declare-fun temp10845_152 () (_ BitVec 64))
(declare-fun temp10845_153 () (_ BitVec 64))
(declare-fun temp10845_154 () (_ BitVec 64))
(declare-fun temp10845_155 () (_ BitVec 64))
(declare-fun temp10845_157 () (_ BitVec 64))
(declare-fun temp10845_158 () (_ BitVec 64))
(declare-fun temp10845_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10845_159 () (_ BitVec 64))
(declare-fun temp10845_160 () (_ BitVec 64))
(declare-fun temp10845_162 () (_ BitVec 64))
(declare-fun temp10845_163 () (_ BitVec 64))
(declare-fun temp10845_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10845_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10845_165 () (_ BitVec 64))
(declare-fun temp10845_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10845_167 () (_ BitVec 64))
(declare-fun temp10845_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10845_169 () (_ BitVec 64))
(declare-fun temp10845_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10845_171 () (_ BitVec 64))
(declare-fun temp10845_172 () (_ BitVec 64))
(declare-fun temp10845_173 () (_ BitVec 64))
(declare-fun temp10845_174 () (_ BitVec 64))
(declare-fun temp10845_175 () (_ BitVec 64))
(declare-fun temp10845_176 () (_ BitVec 64))
(declare-fun temp10845_177 () (_ BitVec 64))
(declare-fun temp10845_178 () (_ BitVec 64))
(declare-fun temp10845_179 () (_ BitVec 64))
(declare-fun temp10845_180 () (_ BitVec 64))
(declare-fun temp10845_181 () (_ BitVec 64))
(declare-fun temp10845_182 () (_ BitVec 64))
(declare-fun temp10845_183 () (_ BitVec 64))
(declare-fun temp10845_184 () (_ BitVec 64))
(declare-fun temp10845_185 () (_ BitVec 64))
(declare-fun temp10845_186 () (_ BitVec 64))
(declare-fun temp10845_187 () (_ BitVec 64))
(declare-fun temp10845_188 () (_ BitVec 64))
(declare-fun temp10845_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10845_190 () (_ BitVec 64))
(declare-fun temp10845_192 () (_ BitVec 64))
(declare-fun temp10845_193 () (_ BitVec 64))
(declare-fun temp10845_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10845_194 () (_ BitVec 64))
(declare-fun temp10845_195 () (_ BitVec 64))
(declare-fun temp10845_197 () (_ BitVec 64))
(declare-fun temp10845_198 () (_ BitVec 64))
(declare-fun temp10845_196 () (_ BitVec 64))
(declare-fun temp10845_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10845_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10845_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10845_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10845_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10845_204 () (_ BitVec 64))
(declare-fun temp10845_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10845_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10845_207 () (_ BitVec 64))
(declare-fun temp10845_208 () (_ BitVec 64))
(declare-fun temp10845_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10845_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10845_211 () (_ BitVec 64))
(declare-fun temp10845_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10845_213 () (_ BitVec 64))
(declare-fun temp10845_214 () (_ BitVec 64))
(declare-fun temp10845_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10845_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10845_217 () (_ BitVec 64))
(declare-fun temp10845_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10845_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10845_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10845_221 () (_ BitVec 64))
(assert (= temp10845_1 #x0000000000000001))
(assert (= var77203 temp10845_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10845_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10845_2)))
(assert (= temp10845_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10845_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10845_4 #x0000000000000000))
(assert (= var210941 temp10845_4))
(assert (= temp10845_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10845_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10845_6 #x0000000000000000))
(assert (= var210986 temp10845_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10845_7 #x0000000000000000))
(assert (= temp10845_8 temp10845_7))
(assert (= temp10845_9 (select ARGNAME_padding_NAMEEND_VAL temp10845_8)))
(assert (= temp10845_10 #x0000000000000001))
(assert (= temp10845_11 temp10845_10))
(assert (= temp10845_12 (select ARGNAME_padding_NAMEEND_VAL temp10845_11)))
(assert (= temp10845_13 #x0000000000000002))
(assert (= temp10845_14 temp10845_13))
(assert (= temp10845_15 (select ARGNAME_padding_NAMEEND_VAL temp10845_14)))
(assert (= temp10845_16 #x0000000000000003))
(assert (= temp10845_17 temp10845_16))
(assert (= temp10845_18 (select ARGNAME_padding_NAMEEND_VAL temp10845_17)))
(assert (= temp10845_19 #x0000000000000004))
(assert (= temp10845_20 temp10845_19))
(assert (= temp10845_21 (select ARGNAME_padding_NAMEEND_VAL temp10845_20)))
(assert (= temp10845_22 #x0000000000000005))
(assert (= temp10845_23 temp10845_22))
(assert (= temp10845_24 (select ARGNAME_padding_NAMEEND_VAL temp10845_23)))
(assert (= temp10845_25 #x0000000000000000))
(assert (= temp10845_26 #x0000000000000000))
(assert (= temp10845_27 temp10845_26))
(assert (= temp10845_28 (select ARGNAME_padding_NAMEEND_VAL temp10845_27)))
(assert (= temp10845_29 #x0000000000000000))
(assert (= temp10845_30 #x0000000000000001))
(assert (= temp10845_31 temp10845_30))
(assert (= temp10845_32 (select ARGNAME_padding_NAMEEND_VAL temp10845_31)))
(assert (= temp10845_33 #x0000000000000000))
(assert (= temp10845_34 #x0000000000000002))
(assert (= temp10845_35 temp10845_34))
(assert (= temp10845_36 (select ARGNAME_padding_NAMEEND_VAL temp10845_35)))
(assert (= temp10845_37 #x0000000000000000))
(assert (= temp10845_38 #x0000000000000003))
(assert (= temp10845_39 temp10845_38))
(assert (= temp10845_40 (select ARGNAME_padding_NAMEEND_VAL temp10845_39)))
(assert (= temp10845_41 #x0000000000000000))
(assert (= temp10845_42 #x0000000000000004))
(assert (= temp10845_43 temp10845_42))
(assert (= temp10845_44 (select ARGNAME_padding_NAMEEND_VAL temp10845_43)))
(assert (= temp10845_45 #x0000000000000000))
(assert (= temp10845_46 #x0000000000000005))
(assert (= temp10845_47 temp10845_46))
(assert (= temp10845_48 (select ARGNAME_padding_NAMEEND_VAL temp10845_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10845_28 temp10845_25)
             (bvslt temp10845_32 temp10845_29)
             (bvslt temp10845_36 temp10845_33)
             (bvslt temp10845_40 temp10845_37)
             (bvslt temp10845_44 temp10845_41)
             (bvslt temp10845_48 temp10845_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10845_49 #x0000000000000000))
(assert (= var1191714 temp10845_49))
(assert (= temp10845_50 #x0000000000000000))
(assert (= temp10845_51 temp10845_50))
(assert (= temp10845_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10845_51)))
(assert (= temp10845_53 #x0000000000000001))
(assert (= temp10845_54 temp10845_53))
(assert (= temp10845_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10845_54)))
(assert (= temp10845_56 #x0000000000000002))
(assert (= temp10845_57 temp10845_56))
(assert (= temp10845_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10845_57)))
(assert (= temp10845_59 #x0000000000000003))
(assert (= temp10845_60 temp10845_59))
(assert (= temp10845_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10845_60)))
(assert (= temp10845_62 #x0000000000000004))
(assert (= temp10845_63 temp10845_62))
(assert (= temp10845_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10845_63)))
(assert (= temp10845_65 #x0000000000000005))
(assert (= temp10845_66 temp10845_65))
(assert (= temp10845_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10845_66)))
(assert (= temp10845_68 #x0000000000000000))
(assert (= temp10845_69 #x0000000000000000))
(assert (= temp10845_70 temp10845_69))
(assert (= temp10845_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10845_70)))
(assert (= temp10845_72 #x0000000000000000))
(assert (= temp10845_73 #x0000000000000001))
(assert (= temp10845_74 temp10845_73))
(assert (= temp10845_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10845_74)))
(assert (= temp10845_76 #x0000000000000000))
(assert (= temp10845_77 #x0000000000000002))
(assert (= temp10845_78 temp10845_77))
(assert (= temp10845_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10845_78)))
(assert (= temp10845_80 #x0000000000000000))
(assert (= temp10845_81 #x0000000000000003))
(assert (= temp10845_82 temp10845_81))
(assert (= temp10845_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10845_82)))
(assert (= temp10845_84 #x0000000000000000))
(assert (= temp10845_85 #x0000000000000004))
(assert (= temp10845_86 temp10845_85))
(assert (= temp10845_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10845_86)))
(assert (= temp10845_88 #x0000000000000000))
(assert (= temp10845_89 #x0000000000000005))
(assert (= temp10845_90 temp10845_89))
(assert (= temp10845_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10845_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10845_71 temp10845_68)
             (bvslt temp10845_75 temp10845_72)
             (bvslt temp10845_79 temp10845_76)
             (bvslt temp10845_83 temp10845_80)
             (bvslt temp10845_87 temp10845_84)
             (bvslt temp10845_91 temp10845_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10845_92 #x0000000000000000))
(assert (= var1191725 temp10845_92))
(assert (= temp10845_93 #x0000000000000000))
(assert (= temp10845_94 temp10845_93))
(assert (= temp10845_95 (select ARGNAME_stride_NAMEEND_VAL temp10845_94)))
(assert (= temp10845_96 #x0000000000000001))
(assert (= temp10845_97 temp10845_96))
(assert (= temp10845_98 (select ARGNAME_stride_NAMEEND_VAL temp10845_97)))
(assert (= temp10845_99 #x0000000000000002))
(assert (= temp10845_100 temp10845_99))
(assert (= temp10845_101 (select ARGNAME_stride_NAMEEND_VAL temp10845_100)))
(assert (= temp10845_102 #x0000000000000003))
(assert (= temp10845_103 temp10845_102))
(assert (= temp10845_104 (select ARGNAME_stride_NAMEEND_VAL temp10845_103)))
(assert (= temp10845_105 #x0000000000000004))
(assert (= temp10845_106 temp10845_105))
(assert (= temp10845_107 (select ARGNAME_stride_NAMEEND_VAL temp10845_106)))
(assert (= temp10845_108 #x0000000000000005))
(assert (= temp10845_109 temp10845_108))
(assert (= temp10845_110 (select ARGNAME_stride_NAMEEND_VAL temp10845_109)))
(assert (= temp10845_111 #x0000000000000000))
(assert (= temp10845_112 #x0000000000000000))
(assert (= temp10845_113 temp10845_112))
(assert (= temp10845_114 (select ARGNAME_stride_NAMEEND_VAL temp10845_113)))
(assert (= temp10845_115 #x0000000000000000))
(assert (= temp10845_116 #x0000000000000001))
(assert (= temp10845_117 temp10845_116))
(assert (= temp10845_118 (select ARGNAME_stride_NAMEEND_VAL temp10845_117)))
(assert (= temp10845_119 #x0000000000000000))
(assert (= temp10845_120 #x0000000000000002))
(assert (= temp10845_121 temp10845_120))
(assert (= temp10845_122 (select ARGNAME_stride_NAMEEND_VAL temp10845_121)))
(assert (= temp10845_123 #x0000000000000000))
(assert (= temp10845_124 #x0000000000000003))
(assert (= temp10845_125 temp10845_124))
(assert (= temp10845_126 (select ARGNAME_stride_NAMEEND_VAL temp10845_125)))
(assert (= temp10845_127 #x0000000000000000))
(assert (= temp10845_128 #x0000000000000004))
(assert (= temp10845_129 temp10845_128))
(assert (= temp10845_130 (select ARGNAME_stride_NAMEEND_VAL temp10845_129)))
(assert (= temp10845_131 #x0000000000000000))
(assert (= temp10845_132 #x0000000000000005))
(assert (= temp10845_133 temp10845_132))
(assert (= temp10845_134 (select ARGNAME_stride_NAMEEND_VAL temp10845_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10845_114 temp10845_111)
             (bvsle temp10845_118 temp10845_115)
             (bvsle temp10845_122 temp10845_119)
             (bvsle temp10845_126 temp10845_123)
             (bvsle temp10845_130 temp10845_127)
             (bvsle temp10845_134 temp10845_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10845_135 #x0000000000000000))
(assert (= var1191735 temp10845_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10845_136 #x0000000000000001))
(assert (= var1191747 temp10845_136))
(assert (= temp10845_137 #x0000000000000000))
(assert (= var1179826 temp10845_137))
(assert (= temp10845_138 #x0000000000000000))
(assert (= temp10845_139 temp10845_138))
(assert (= temp10845_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10845_139)))
(assert (= temp10845_141 #x0000000000000001))
(assert (= temp10845_142 temp10845_141))
(assert (= temp10845_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10845_142)))
(assert (= temp10845_144 #x0000000000000002))
(assert (= temp10845_145 temp10845_144))
(assert (= temp10845_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10845_145)))
(assert (= temp10845_147 #x0000000000000003))
(assert (= temp10845_148 temp10845_147))
(assert (= temp10845_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10845_148)))
(assert (= temp10845_150 #x0000000000000004))
(assert (= temp10845_151 temp10845_150))
(assert (= temp10845_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10845_151)))
(assert (= temp10845_153 #x0000000000000005))
(assert (= temp10845_154 temp10845_153))
(assert (= temp10845_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10845_154)))
(assert (= temp10845_157 var1179826))
(assert (= temp10845_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10845_157)))
(assert (= temp10845_156 temp10845_158))
(assert (= var1191780
   (ite (bvslt temp10845_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10845_159 #x0000000000000000))
(assert (= var1191780 temp10845_159))
(assert (= temp10845_160 #x0000000000000000))
(assert (= var1179826 temp10845_160))
(assert (= temp10845_162 var1179826))
(assert (= temp10845_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10845_162)))
(assert (= temp10845_161 temp10845_163))
(assert (= var1191802 (bvsmod temp10845_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10845_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10845_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10845_165 #x0000000000000001))
(assert (= var1191803 temp10845_165))
(assert (= temp10845_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10845_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10845_167 #x0000000000000001))
(assert (= var1191823 temp10845_167))
(assert (= temp10845_168 #x0000000000000001))
(assert (= var1180714 temp10845_168))
(assert (= temp10845_169 #x0000000000000000))
(assert (= temp10845_170 temp10845_169))
(assert (= temp10845_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10845_170)))
(assert (= temp10845_172 #x0000000000000001))
(assert (= temp10845_173 temp10845_172))
(assert (= temp10845_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10845_173)))
(assert (= temp10845_175 #x0000000000000002))
(assert (= temp10845_176 temp10845_175))
(assert (= temp10845_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10845_176)))
(assert (= temp10845_178 #x0000000000000003))
(assert (= temp10845_179 temp10845_178))
(assert (= temp10845_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10845_179)))
(assert (= temp10845_181 #x0000000000000004))
(assert (= temp10845_182 temp10845_181))
(assert (= temp10845_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10845_182)))
(assert (= temp10845_184 #x0000000000000005))
(assert (= temp10845_185 temp10845_184))
(assert (= temp10845_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10845_185)))
(assert (= temp10845_187 #x0000000000000000))
(assert (= temp10845_188
   (ite (bvslt var1180714 temp10845_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10845_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10845_188)))
(assert (= var1191831 temp10845_189))
(assert (bvslt (ite (bvslt var1180714 temp10845_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10845_190 #x0000000000000001))
(assert (= var1180714 temp10845_190))
(assert (= temp10845_192 var1180714))
(assert (= temp10845_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10845_192)))
(assert (= temp10845_191 temp10845_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10845_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10845_194 #x0000000000000001))
(assert (= var1191836 temp10845_194))
(assert (= temp10845_195 #x0000000000000000))
(assert (= var1179826 temp10845_195))
(assert (= temp10845_197 var1179826))
(assert (= temp10845_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10845_197)))
(assert (= temp10845_196 temp10845_198))
(assert (= temp10845_199 #x0000000000000002))
(assert (= var1586025 temp10845_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10845_200 #x0000000000000001))
(assert (= var1191993 temp10845_200))
(assert (= temp10845_201 #x0000000000000001))
(assert (= var2700303 temp10845_201))
(assert (= temp10845_202 #x0000000000000001))
(assert (= var2962447 temp10845_202))
(assert (= temp10845_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10845_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10845_204 #x0000000000000001))
(assert (= var211058 temp10845_204))
(assert (= temp10845_205 #x0000000000000001))
(assert (= var211188 temp10845_205))
(assert (= var3879401 var211188))
(assert (= temp10845_206 #x0000000000000000))
(assert (= var3866802 temp10845_206))
(assert (= temp10845_207 #x0000000000000000))
(assert (= temp10845_208
   (ite (bvslt var3866802 temp10845_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10845_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10845_208)))
(assert (= var3879420 temp10845_209))
(assert (bvslt (ite (bvslt var3866802 temp10845_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10845_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10845_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10845_211 #x0000000000000000))
(assert (= var3879421 temp10845_211))
(assert (= temp10845_212 #x0000000000000001))
(assert (= var3867690 temp10845_212))
(assert (= temp10845_213 #x0000000000000000))
(assert (= temp10845_214
   (ite (bvslt var3867690 temp10845_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10845_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10845_214)))
(assert (= var3879423 temp10845_215))
(assert (bvslt (ite (bvslt var3867690 temp10845_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10845_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10845_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10845_217 #x0000000000000001))
(assert (= var3879424 temp10845_217))
(assert (= temp10845_218 #x0000000000000000))
(assert (= var4133117 temp10845_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10845_219 #x0000000000000002))
(assert (= var4339331 temp10845_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10845_220 #x0000000000000000))
(assert (= var4404892 temp10845_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10845_221 #x0000000000000001))
(assert (= var211058 temp10845_221))
(model-add temp10845_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10845_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10845_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10845_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



