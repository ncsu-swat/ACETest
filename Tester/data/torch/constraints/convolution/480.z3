(declare-fun temp640_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp640_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp640_3 () (_ BitVec 64))
(declare-fun temp640_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp640_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp640_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp640_7 () (_ BitVec 64))
(declare-fun temp640_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp640_9 () (_ BitVec 64))
(declare-fun temp640_10 () (_ BitVec 64))
(declare-fun temp640_11 () (_ BitVec 64))
(declare-fun temp640_12 () (_ BitVec 64))
(declare-fun temp640_13 () (_ BitVec 64))
(declare-fun temp640_14 () (_ BitVec 64))
(declare-fun temp640_15 () (_ BitVec 64))
(declare-fun temp640_16 () (_ BitVec 64))
(declare-fun temp640_17 () (_ BitVec 64))
(declare-fun temp640_18 () (_ BitVec 64))
(declare-fun temp640_19 () (_ BitVec 64))
(declare-fun temp640_20 () (_ BitVec 64))
(declare-fun temp640_21 () (_ BitVec 64))
(declare-fun temp640_22 () (_ BitVec 64))
(declare-fun temp640_23 () (_ BitVec 64))
(declare-fun temp640_24 () (_ BitVec 64))
(declare-fun temp640_25 () (_ BitVec 64))
(declare-fun temp640_26 () (_ BitVec 64))
(declare-fun temp640_27 () (_ BitVec 64))
(declare-fun temp640_28 () (_ BitVec 64))
(declare-fun temp640_29 () (_ BitVec 64))
(declare-fun temp640_30 () (_ BitVec 64))
(declare-fun temp640_31 () (_ BitVec 64))
(declare-fun temp640_32 () (_ BitVec 64))
(declare-fun temp640_33 () (_ BitVec 64))
(declare-fun temp640_34 () (_ BitVec 64))
(declare-fun temp640_35 () (_ BitVec 64))
(declare-fun temp640_36 () (_ BitVec 64))
(declare-fun temp640_37 () (_ BitVec 64))
(declare-fun temp640_38 () (_ BitVec 64))
(declare-fun temp640_39 () (_ BitVec 64))
(declare-fun temp640_40 () (_ BitVec 64))
(declare-fun temp640_41 () (_ BitVec 64))
(declare-fun temp640_42 () (_ BitVec 64))
(declare-fun temp640_43 () (_ BitVec 64))
(declare-fun temp640_44 () (_ BitVec 64))
(declare-fun temp640_45 () (_ BitVec 64))
(declare-fun temp640_46 () (_ BitVec 64))
(declare-fun temp640_47 () (_ BitVec 64))
(declare-fun temp640_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp640_49 () (_ BitVec 64))
(declare-fun temp640_50 () (_ BitVec 64))
(declare-fun temp640_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp640_52 () (_ BitVec 64))
(declare-fun temp640_53 () (_ BitVec 64))
(declare-fun temp640_54 () (_ BitVec 64))
(declare-fun temp640_55 () (_ BitVec 64))
(declare-fun temp640_56 () (_ BitVec 64))
(declare-fun temp640_57 () (_ BitVec 64))
(declare-fun temp640_58 () (_ BitVec 64))
(declare-fun temp640_59 () (_ BitVec 64))
(declare-fun temp640_60 () (_ BitVec 64))
(declare-fun temp640_61 () (_ BitVec 64))
(declare-fun temp640_62 () (_ BitVec 64))
(declare-fun temp640_63 () (_ BitVec 64))
(declare-fun temp640_64 () (_ BitVec 64))
(declare-fun temp640_65 () (_ BitVec 64))
(declare-fun temp640_66 () (_ BitVec 64))
(declare-fun temp640_67 () (_ BitVec 64))
(declare-fun temp640_68 () (_ BitVec 64))
(declare-fun temp640_69 () (_ BitVec 64))
(declare-fun temp640_70 () (_ BitVec 64))
(declare-fun temp640_71 () (_ BitVec 64))
(declare-fun temp640_72 () (_ BitVec 64))
(declare-fun temp640_73 () (_ BitVec 64))
(declare-fun temp640_74 () (_ BitVec 64))
(declare-fun temp640_75 () (_ BitVec 64))
(declare-fun temp640_76 () (_ BitVec 64))
(declare-fun temp640_77 () (_ BitVec 64))
(declare-fun temp640_78 () (_ BitVec 64))
(declare-fun temp640_79 () (_ BitVec 64))
(declare-fun temp640_80 () (_ BitVec 64))
(declare-fun temp640_81 () (_ BitVec 64))
(declare-fun temp640_82 () (_ BitVec 64))
(declare-fun temp640_83 () (_ BitVec 64))
(declare-fun temp640_84 () (_ BitVec 64))
(declare-fun temp640_85 () (_ BitVec 64))
(declare-fun temp640_86 () (_ BitVec 64))
(declare-fun temp640_87 () (_ BitVec 64))
(declare-fun temp640_88 () (_ BitVec 64))
(declare-fun temp640_89 () (_ BitVec 64))
(declare-fun temp640_90 () (_ BitVec 64))
(declare-fun temp640_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp640_92 () (_ BitVec 64))
(declare-fun temp640_93 () (_ BitVec 64))
(declare-fun temp640_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp640_95 () (_ BitVec 64))
(declare-fun temp640_96 () (_ BitVec 64))
(declare-fun temp640_97 () (_ BitVec 64))
(declare-fun temp640_98 () (_ BitVec 64))
(declare-fun temp640_99 () (_ BitVec 64))
(declare-fun temp640_100 () (_ BitVec 64))
(declare-fun temp640_101 () (_ BitVec 64))
(declare-fun temp640_102 () (_ BitVec 64))
(declare-fun temp640_103 () (_ BitVec 64))
(declare-fun temp640_104 () (_ BitVec 64))
(declare-fun temp640_105 () (_ BitVec 64))
(declare-fun temp640_106 () (_ BitVec 64))
(declare-fun temp640_107 () (_ BitVec 64))
(declare-fun temp640_108 () (_ BitVec 64))
(declare-fun temp640_109 () (_ BitVec 64))
(declare-fun temp640_110 () (_ BitVec 64))
(declare-fun temp640_111 () (_ BitVec 64))
(declare-fun temp640_112 () (_ BitVec 64))
(declare-fun temp640_113 () (_ BitVec 64))
(declare-fun temp640_114 () (_ BitVec 64))
(declare-fun temp640_115 () (_ BitVec 64))
(declare-fun temp640_116 () (_ BitVec 64))
(declare-fun temp640_117 () (_ BitVec 64))
(declare-fun temp640_118 () (_ BitVec 64))
(declare-fun temp640_119 () (_ BitVec 64))
(declare-fun temp640_120 () (_ BitVec 64))
(declare-fun temp640_121 () (_ BitVec 64))
(declare-fun temp640_122 () (_ BitVec 64))
(declare-fun temp640_123 () (_ BitVec 64))
(declare-fun temp640_124 () (_ BitVec 64))
(declare-fun temp640_125 () (_ BitVec 64))
(declare-fun temp640_126 () (_ BitVec 64))
(declare-fun temp640_127 () (_ BitVec 64))
(declare-fun temp640_128 () (_ BitVec 64))
(declare-fun temp640_129 () (_ BitVec 64))
(declare-fun temp640_130 () (_ BitVec 64))
(declare-fun temp640_131 () (_ BitVec 64))
(declare-fun temp640_132 () (_ BitVec 64))
(declare-fun temp640_133 () (_ BitVec 64))
(declare-fun temp640_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp640_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp640_136 () (_ BitVec 64))
(declare-fun temp640_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp640_138 () (_ BitVec 64))
(declare-fun temp640_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp640_140 () (_ BitVec 64))
(declare-fun temp640_141 () (_ BitVec 64))
(declare-fun temp640_142 () (_ BitVec 64))
(declare-fun temp640_143 () (_ BitVec 64))
(declare-fun temp640_144 () (_ BitVec 64))
(declare-fun temp640_145 () (_ BitVec 64))
(declare-fun temp640_146 () (_ BitVec 64))
(declare-fun temp640_147 () (_ BitVec 64))
(declare-fun temp640_148 () (_ BitVec 64))
(declare-fun temp640_149 () (_ BitVec 64))
(declare-fun temp640_150 () (_ BitVec 64))
(declare-fun temp640_151 () (_ BitVec 64))
(declare-fun temp640_152 () (_ BitVec 64))
(declare-fun temp640_153 () (_ BitVec 64))
(declare-fun temp640_154 () (_ BitVec 64))
(declare-fun temp640_155 () (_ BitVec 64))
(declare-fun temp640_157 () (_ BitVec 64))
(declare-fun temp640_158 () (_ BitVec 64))
(declare-fun temp640_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp640_159 () (_ BitVec 64))
(declare-fun temp640_160 () (_ BitVec 64))
(declare-fun temp640_162 () (_ BitVec 64))
(declare-fun temp640_163 () (_ BitVec 64))
(declare-fun temp640_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp640_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp640_165 () (_ BitVec 64))
(declare-fun temp640_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp640_167 () (_ BitVec 64))
(declare-fun temp640_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp640_169 () (_ BitVec 64))
(declare-fun temp640_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp640_171 () (_ BitVec 64))
(declare-fun temp640_172 () (_ BitVec 64))
(declare-fun temp640_173 () (_ BitVec 64))
(declare-fun temp640_174 () (_ BitVec 64))
(declare-fun temp640_175 () (_ BitVec 64))
(declare-fun temp640_176 () (_ BitVec 64))
(declare-fun temp640_177 () (_ BitVec 64))
(declare-fun temp640_178 () (_ BitVec 64))
(declare-fun temp640_179 () (_ BitVec 64))
(declare-fun temp640_180 () (_ BitVec 64))
(declare-fun temp640_181 () (_ BitVec 64))
(declare-fun temp640_182 () (_ BitVec 64))
(declare-fun temp640_183 () (_ BitVec 64))
(declare-fun temp640_184 () (_ BitVec 64))
(declare-fun temp640_185 () (_ BitVec 64))
(declare-fun temp640_186 () (_ BitVec 64))
(declare-fun temp640_187 () (_ BitVec 64))
(declare-fun temp640_188 () (_ BitVec 64))
(declare-fun temp640_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp640_190 () (_ BitVec 64))
(declare-fun temp640_192 () (_ BitVec 64))
(declare-fun temp640_193 () (_ BitVec 64))
(declare-fun temp640_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp640_194 () (_ BitVec 64))
(declare-fun temp640_195 () (_ BitVec 64))
(declare-fun temp640_197 () (_ BitVec 64))
(declare-fun temp640_198 () (_ BitVec 64))
(declare-fun temp640_196 () (_ BitVec 64))
(declare-fun temp640_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp640_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp640_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp640_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp640_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp640_204 () (_ BitVec 64))
(declare-fun temp640_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp640_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp640_207 () (_ BitVec 64))
(declare-fun temp640_208 () (_ BitVec 64))
(declare-fun temp640_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp640_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp640_211 () (_ BitVec 64))
(declare-fun temp640_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp640_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp640_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp640_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp640_216 () (_ BitVec 64))
(assert (= temp640_1 #x0000000000000001))
(assert (= var77203 temp640_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp640_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp640_2)))
(assert (= temp640_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp640_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_4 #x0000000000000000))
(assert (= var210941 temp640_4))
(assert (= temp640_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp640_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_6 #x0000000000000000))
(assert (= var210986 temp640_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp640_7 #x0000000000000000))
(assert (= temp640_8 temp640_7))
(assert (= temp640_9 (select ARGNAME_padding_NAMEEND_VAL temp640_8)))
(assert (= temp640_10 #x0000000000000001))
(assert (= temp640_11 temp640_10))
(assert (= temp640_12 (select ARGNAME_padding_NAMEEND_VAL temp640_11)))
(assert (= temp640_13 #x0000000000000002))
(assert (= temp640_14 temp640_13))
(assert (= temp640_15 (select ARGNAME_padding_NAMEEND_VAL temp640_14)))
(assert (= temp640_16 #x0000000000000003))
(assert (= temp640_17 temp640_16))
(assert (= temp640_18 (select ARGNAME_padding_NAMEEND_VAL temp640_17)))
(assert (= temp640_19 #x0000000000000004))
(assert (= temp640_20 temp640_19))
(assert (= temp640_21 (select ARGNAME_padding_NAMEEND_VAL temp640_20)))
(assert (= temp640_22 #x0000000000000005))
(assert (= temp640_23 temp640_22))
(assert (= temp640_24 (select ARGNAME_padding_NAMEEND_VAL temp640_23)))
(assert (= temp640_25 #x0000000000000000))
(assert (= temp640_26 #x0000000000000000))
(assert (= temp640_27 temp640_26))
(assert (= temp640_28 (select ARGNAME_padding_NAMEEND_VAL temp640_27)))
(assert (= temp640_29 #x0000000000000000))
(assert (= temp640_30 #x0000000000000001))
(assert (= temp640_31 temp640_30))
(assert (= temp640_32 (select ARGNAME_padding_NAMEEND_VAL temp640_31)))
(assert (= temp640_33 #x0000000000000000))
(assert (= temp640_34 #x0000000000000002))
(assert (= temp640_35 temp640_34))
(assert (= temp640_36 (select ARGNAME_padding_NAMEEND_VAL temp640_35)))
(assert (= temp640_37 #x0000000000000000))
(assert (= temp640_38 #x0000000000000003))
(assert (= temp640_39 temp640_38))
(assert (= temp640_40 (select ARGNAME_padding_NAMEEND_VAL temp640_39)))
(assert (= temp640_41 #x0000000000000000))
(assert (= temp640_42 #x0000000000000004))
(assert (= temp640_43 temp640_42))
(assert (= temp640_44 (select ARGNAME_padding_NAMEEND_VAL temp640_43)))
(assert (= temp640_45 #x0000000000000000))
(assert (= temp640_46 #x0000000000000005))
(assert (= temp640_47 temp640_46))
(assert (= temp640_48 (select ARGNAME_padding_NAMEEND_VAL temp640_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp640_28 temp640_25)
             (bvslt temp640_32 temp640_29)
             (bvslt temp640_36 temp640_33)
             (bvslt temp640_40 temp640_37)
             (bvslt temp640_44 temp640_41)
             (bvslt temp640_48 temp640_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_49 #x0000000000000000))
(assert (= var1191714 temp640_49))
(assert (= temp640_50 #x0000000000000000))
(assert (= temp640_51 temp640_50))
(assert (= temp640_52 (select ARGNAME_output_padding_NAMEEND_VAL temp640_51)))
(assert (= temp640_53 #x0000000000000001))
(assert (= temp640_54 temp640_53))
(assert (= temp640_55 (select ARGNAME_output_padding_NAMEEND_VAL temp640_54)))
(assert (= temp640_56 #x0000000000000002))
(assert (= temp640_57 temp640_56))
(assert (= temp640_58 (select ARGNAME_output_padding_NAMEEND_VAL temp640_57)))
(assert (= temp640_59 #x0000000000000003))
(assert (= temp640_60 temp640_59))
(assert (= temp640_61 (select ARGNAME_output_padding_NAMEEND_VAL temp640_60)))
(assert (= temp640_62 #x0000000000000004))
(assert (= temp640_63 temp640_62))
(assert (= temp640_64 (select ARGNAME_output_padding_NAMEEND_VAL temp640_63)))
(assert (= temp640_65 #x0000000000000005))
(assert (= temp640_66 temp640_65))
(assert (= temp640_67 (select ARGNAME_output_padding_NAMEEND_VAL temp640_66)))
(assert (= temp640_68 #x0000000000000000))
(assert (= temp640_69 #x0000000000000000))
(assert (= temp640_70 temp640_69))
(assert (= temp640_71 (select ARGNAME_output_padding_NAMEEND_VAL temp640_70)))
(assert (= temp640_72 #x0000000000000000))
(assert (= temp640_73 #x0000000000000001))
(assert (= temp640_74 temp640_73))
(assert (= temp640_75 (select ARGNAME_output_padding_NAMEEND_VAL temp640_74)))
(assert (= temp640_76 #x0000000000000000))
(assert (= temp640_77 #x0000000000000002))
(assert (= temp640_78 temp640_77))
(assert (= temp640_79 (select ARGNAME_output_padding_NAMEEND_VAL temp640_78)))
(assert (= temp640_80 #x0000000000000000))
(assert (= temp640_81 #x0000000000000003))
(assert (= temp640_82 temp640_81))
(assert (= temp640_83 (select ARGNAME_output_padding_NAMEEND_VAL temp640_82)))
(assert (= temp640_84 #x0000000000000000))
(assert (= temp640_85 #x0000000000000004))
(assert (= temp640_86 temp640_85))
(assert (= temp640_87 (select ARGNAME_output_padding_NAMEEND_VAL temp640_86)))
(assert (= temp640_88 #x0000000000000000))
(assert (= temp640_89 #x0000000000000005))
(assert (= temp640_90 temp640_89))
(assert (= temp640_91 (select ARGNAME_output_padding_NAMEEND_VAL temp640_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp640_71 temp640_68)
             (bvslt temp640_75 temp640_72)
             (bvslt temp640_79 temp640_76)
             (bvslt temp640_83 temp640_80)
             (bvslt temp640_87 temp640_84)
             (bvslt temp640_91 temp640_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_92 #x0000000000000000))
(assert (= var1191725 temp640_92))
(assert (= temp640_93 #x0000000000000000))
(assert (= temp640_94 temp640_93))
(assert (= temp640_95 (select ARGNAME_stride_NAMEEND_VAL temp640_94)))
(assert (= temp640_96 #x0000000000000001))
(assert (= temp640_97 temp640_96))
(assert (= temp640_98 (select ARGNAME_stride_NAMEEND_VAL temp640_97)))
(assert (= temp640_99 #x0000000000000002))
(assert (= temp640_100 temp640_99))
(assert (= temp640_101 (select ARGNAME_stride_NAMEEND_VAL temp640_100)))
(assert (= temp640_102 #x0000000000000003))
(assert (= temp640_103 temp640_102))
(assert (= temp640_104 (select ARGNAME_stride_NAMEEND_VAL temp640_103)))
(assert (= temp640_105 #x0000000000000004))
(assert (= temp640_106 temp640_105))
(assert (= temp640_107 (select ARGNAME_stride_NAMEEND_VAL temp640_106)))
(assert (= temp640_108 #x0000000000000005))
(assert (= temp640_109 temp640_108))
(assert (= temp640_110 (select ARGNAME_stride_NAMEEND_VAL temp640_109)))
(assert (= temp640_111 #x0000000000000000))
(assert (= temp640_112 #x0000000000000000))
(assert (= temp640_113 temp640_112))
(assert (= temp640_114 (select ARGNAME_stride_NAMEEND_VAL temp640_113)))
(assert (= temp640_115 #x0000000000000000))
(assert (= temp640_116 #x0000000000000001))
(assert (= temp640_117 temp640_116))
(assert (= temp640_118 (select ARGNAME_stride_NAMEEND_VAL temp640_117)))
(assert (= temp640_119 #x0000000000000000))
(assert (= temp640_120 #x0000000000000002))
(assert (= temp640_121 temp640_120))
(assert (= temp640_122 (select ARGNAME_stride_NAMEEND_VAL temp640_121)))
(assert (= temp640_123 #x0000000000000000))
(assert (= temp640_124 #x0000000000000003))
(assert (= temp640_125 temp640_124))
(assert (= temp640_126 (select ARGNAME_stride_NAMEEND_VAL temp640_125)))
(assert (= temp640_127 #x0000000000000000))
(assert (= temp640_128 #x0000000000000004))
(assert (= temp640_129 temp640_128))
(assert (= temp640_130 (select ARGNAME_stride_NAMEEND_VAL temp640_129)))
(assert (= temp640_131 #x0000000000000000))
(assert (= temp640_132 #x0000000000000005))
(assert (= temp640_133 temp640_132))
(assert (= temp640_134 (select ARGNAME_stride_NAMEEND_VAL temp640_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp640_114 temp640_111)
             (bvsle temp640_118 temp640_115)
             (bvsle temp640_122 temp640_119)
             (bvsle temp640_126 temp640_123)
             (bvsle temp640_130 temp640_127)
             (bvsle temp640_134 temp640_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_135 #x0000000000000000))
(assert (= var1191735 temp640_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_136 #x0000000000000001))
(assert (= var1191747 temp640_136))
(assert (= temp640_137 #x0000000000000000))
(assert (= var1179826 temp640_137))
(assert (= temp640_138 #x0000000000000000))
(assert (= temp640_139 temp640_138))
(assert (= temp640_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp640_139)))
(assert (= temp640_141 #x0000000000000001))
(assert (= temp640_142 temp640_141))
(assert (= temp640_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp640_142)))
(assert (= temp640_144 #x0000000000000002))
(assert (= temp640_145 temp640_144))
(assert (= temp640_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp640_145)))
(assert (= temp640_147 #x0000000000000003))
(assert (= temp640_148 temp640_147))
(assert (= temp640_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp640_148)))
(assert (= temp640_150 #x0000000000000004))
(assert (= temp640_151 temp640_150))
(assert (= temp640_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp640_151)))
(assert (= temp640_153 #x0000000000000005))
(assert (= temp640_154 temp640_153))
(assert (= temp640_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp640_154)))
(assert (= temp640_157 var1179826))
(assert (= temp640_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp640_157)))
(assert (= temp640_156 temp640_158))
(assert (= var1191780
   (ite (bvslt temp640_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_159 #x0000000000000000))
(assert (= var1191780 temp640_159))
(assert (= temp640_160 #x0000000000000000))
(assert (= var1179826 temp640_160))
(assert (= temp640_162 var1179826))
(assert (= temp640_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp640_162)))
(assert (= temp640_161 temp640_163))
(assert (= var1191802 (bvsmod temp640_161 ARGNAME_groups_NAMEEND)))
(assert (= temp640_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp640_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp640_165 #x0000000000000001))
(assert (= var1191803 temp640_165))
(assert (= temp640_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp640_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_167 #x0000000000000001))
(assert (= var1191823 temp640_167))
(assert (= temp640_168 #x0000000000000001))
(assert (= var1180714 temp640_168))
(assert (= temp640_169 #x0000000000000000))
(assert (= temp640_170 temp640_169))
(assert (= temp640_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp640_170)))
(assert (= temp640_172 #x0000000000000001))
(assert (= temp640_173 temp640_172))
(assert (= temp640_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp640_173)))
(assert (= temp640_175 #x0000000000000002))
(assert (= temp640_176 temp640_175))
(assert (= temp640_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp640_176)))
(assert (= temp640_178 #x0000000000000003))
(assert (= temp640_179 temp640_178))
(assert (= temp640_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp640_179)))
(assert (= temp640_181 #x0000000000000004))
(assert (= temp640_182 temp640_181))
(assert (= temp640_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp640_182)))
(assert (= temp640_184 #x0000000000000005))
(assert (= temp640_185 temp640_184))
(assert (= temp640_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp640_185)))
(assert (= temp640_187 #x0000000000000000))
(assert (= temp640_188
   (ite (bvslt var1180714 temp640_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp640_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp640_188)))
(assert (= var1191831 temp640_189))
(assert (bvslt (ite (bvslt var1180714 temp640_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp640_190 #x0000000000000001))
(assert (= var1180714 temp640_190))
(assert (= temp640_192 var1180714))
(assert (= temp640_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp640_192)))
(assert (= temp640_191 temp640_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp640_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp640_194 #x0000000000000001))
(assert (= var1191836 temp640_194))
(assert (= temp640_195 #x0000000000000000))
(assert (= var1179826 temp640_195))
(assert (= temp640_197 var1179826))
(assert (= temp640_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp640_197)))
(assert (= temp640_196 temp640_198))
(assert (= temp640_199 #x0000000000000002))
(assert (= var1586025 temp640_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp640_200 #x0000000000000001))
(assert (= var1191993 temp640_200))
(assert (= temp640_201 #x0000000000000001))
(assert (= var2700303 temp640_201))
(assert (= temp640_202 #x0000000000000001))
(assert (= var2962447 temp640_202))
(assert (= temp640_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp640_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_204 #x0000000000000001))
(assert (= var211058 temp640_204))
(assert (= temp640_205 #x0000000000000001))
(assert (= var211188 temp640_205))
(assert (= var3879401 var211188))
(assert (= temp640_206 #x0000000000000000))
(assert (= var3866802 temp640_206))
(assert (= temp640_207 #x0000000000000000))
(assert (= temp640_208
   (ite (bvslt var3866802 temp640_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp640_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp640_208)))
(assert (= var3879420 temp640_209))
(assert (bvslt (ite (bvslt var3866802 temp640_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp640_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp640_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp640_211 #x0000000000000001))
(assert (= var3879421 temp640_211))
(assert (= temp640_212 #x0000000000000000))
(assert (= var4079423 temp640_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp640_213 #x0000000000000002))
(assert (= var4208259 temp640_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_214 #x0000000000000000))
(assert (= var4273820 temp640_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211494 var210913))
(assert (= temp640_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp640_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp640_216 #x0000000000000001))
(assert (= var211058 temp640_216))
(model-add temp640_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp640_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp640_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp640_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






