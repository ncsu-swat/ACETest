(declare-fun temp10964_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10964_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10964_3 () (_ BitVec 64))
(declare-fun temp10964_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10964_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10964_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10964_7 () (_ BitVec 64))
(declare-fun temp10964_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10964_9 () (_ BitVec 64))
(declare-fun temp10964_10 () (_ BitVec 64))
(declare-fun temp10964_11 () (_ BitVec 64))
(declare-fun temp10964_12 () (_ BitVec 64))
(declare-fun temp10964_13 () (_ BitVec 64))
(declare-fun temp10964_14 () (_ BitVec 64))
(declare-fun temp10964_15 () (_ BitVec 64))
(declare-fun temp10964_16 () (_ BitVec 64))
(declare-fun temp10964_17 () (_ BitVec 64))
(declare-fun temp10964_18 () (_ BitVec 64))
(declare-fun temp10964_19 () (_ BitVec 64))
(declare-fun temp10964_20 () (_ BitVec 64))
(declare-fun temp10964_21 () (_ BitVec 64))
(declare-fun temp10964_22 () (_ BitVec 64))
(declare-fun temp10964_23 () (_ BitVec 64))
(declare-fun temp10964_24 () (_ BitVec 64))
(declare-fun temp10964_25 () (_ BitVec 64))
(declare-fun temp10964_26 () (_ BitVec 64))
(declare-fun temp10964_27 () (_ BitVec 64))
(declare-fun temp10964_28 () (_ BitVec 64))
(declare-fun temp10964_29 () (_ BitVec 64))
(declare-fun temp10964_30 () (_ BitVec 64))
(declare-fun temp10964_31 () (_ BitVec 64))
(declare-fun temp10964_32 () (_ BitVec 64))
(declare-fun temp10964_33 () (_ BitVec 64))
(declare-fun temp10964_34 () (_ BitVec 64))
(declare-fun temp10964_35 () (_ BitVec 64))
(declare-fun temp10964_36 () (_ BitVec 64))
(declare-fun temp10964_37 () (_ BitVec 64))
(declare-fun temp10964_38 () (_ BitVec 64))
(declare-fun temp10964_39 () (_ BitVec 64))
(declare-fun temp10964_40 () (_ BitVec 64))
(declare-fun temp10964_41 () (_ BitVec 64))
(declare-fun temp10964_42 () (_ BitVec 64))
(declare-fun temp10964_43 () (_ BitVec 64))
(declare-fun temp10964_44 () (_ BitVec 64))
(declare-fun temp10964_45 () (_ BitVec 64))
(declare-fun temp10964_46 () (_ BitVec 64))
(declare-fun temp10964_47 () (_ BitVec 64))
(declare-fun temp10964_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10964_49 () (_ BitVec 64))
(declare-fun temp10964_50 () (_ BitVec 64))
(declare-fun temp10964_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10964_52 () (_ BitVec 64))
(declare-fun temp10964_53 () (_ BitVec 64))
(declare-fun temp10964_54 () (_ BitVec 64))
(declare-fun temp10964_55 () (_ BitVec 64))
(declare-fun temp10964_56 () (_ BitVec 64))
(declare-fun temp10964_57 () (_ BitVec 64))
(declare-fun temp10964_58 () (_ BitVec 64))
(declare-fun temp10964_59 () (_ BitVec 64))
(declare-fun temp10964_60 () (_ BitVec 64))
(declare-fun temp10964_61 () (_ BitVec 64))
(declare-fun temp10964_62 () (_ BitVec 64))
(declare-fun temp10964_63 () (_ BitVec 64))
(declare-fun temp10964_64 () (_ BitVec 64))
(declare-fun temp10964_65 () (_ BitVec 64))
(declare-fun temp10964_66 () (_ BitVec 64))
(declare-fun temp10964_67 () (_ BitVec 64))
(declare-fun temp10964_68 () (_ BitVec 64))
(declare-fun temp10964_69 () (_ BitVec 64))
(declare-fun temp10964_70 () (_ BitVec 64))
(declare-fun temp10964_71 () (_ BitVec 64))
(declare-fun temp10964_72 () (_ BitVec 64))
(declare-fun temp10964_73 () (_ BitVec 64))
(declare-fun temp10964_74 () (_ BitVec 64))
(declare-fun temp10964_75 () (_ BitVec 64))
(declare-fun temp10964_76 () (_ BitVec 64))
(declare-fun temp10964_77 () (_ BitVec 64))
(declare-fun temp10964_78 () (_ BitVec 64))
(declare-fun temp10964_79 () (_ BitVec 64))
(declare-fun temp10964_80 () (_ BitVec 64))
(declare-fun temp10964_81 () (_ BitVec 64))
(declare-fun temp10964_82 () (_ BitVec 64))
(declare-fun temp10964_83 () (_ BitVec 64))
(declare-fun temp10964_84 () (_ BitVec 64))
(declare-fun temp10964_85 () (_ BitVec 64))
(declare-fun temp10964_86 () (_ BitVec 64))
(declare-fun temp10964_87 () (_ BitVec 64))
(declare-fun temp10964_88 () (_ BitVec 64))
(declare-fun temp10964_89 () (_ BitVec 64))
(declare-fun temp10964_90 () (_ BitVec 64))
(declare-fun temp10964_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10964_92 () (_ BitVec 64))
(declare-fun temp10964_93 () (_ BitVec 64))
(declare-fun temp10964_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10964_95 () (_ BitVec 64))
(declare-fun temp10964_96 () (_ BitVec 64))
(declare-fun temp10964_97 () (_ BitVec 64))
(declare-fun temp10964_98 () (_ BitVec 64))
(declare-fun temp10964_99 () (_ BitVec 64))
(declare-fun temp10964_100 () (_ BitVec 64))
(declare-fun temp10964_101 () (_ BitVec 64))
(declare-fun temp10964_102 () (_ BitVec 64))
(declare-fun temp10964_103 () (_ BitVec 64))
(declare-fun temp10964_104 () (_ BitVec 64))
(declare-fun temp10964_105 () (_ BitVec 64))
(declare-fun temp10964_106 () (_ BitVec 64))
(declare-fun temp10964_107 () (_ BitVec 64))
(declare-fun temp10964_108 () (_ BitVec 64))
(declare-fun temp10964_109 () (_ BitVec 64))
(declare-fun temp10964_110 () (_ BitVec 64))
(declare-fun temp10964_111 () (_ BitVec 64))
(declare-fun temp10964_112 () (_ BitVec 64))
(declare-fun temp10964_113 () (_ BitVec 64))
(declare-fun temp10964_114 () (_ BitVec 64))
(declare-fun temp10964_115 () (_ BitVec 64))
(declare-fun temp10964_116 () (_ BitVec 64))
(declare-fun temp10964_117 () (_ BitVec 64))
(declare-fun temp10964_118 () (_ BitVec 64))
(declare-fun temp10964_119 () (_ BitVec 64))
(declare-fun temp10964_120 () (_ BitVec 64))
(declare-fun temp10964_121 () (_ BitVec 64))
(declare-fun temp10964_122 () (_ BitVec 64))
(declare-fun temp10964_123 () (_ BitVec 64))
(declare-fun temp10964_124 () (_ BitVec 64))
(declare-fun temp10964_125 () (_ BitVec 64))
(declare-fun temp10964_126 () (_ BitVec 64))
(declare-fun temp10964_127 () (_ BitVec 64))
(declare-fun temp10964_128 () (_ BitVec 64))
(declare-fun temp10964_129 () (_ BitVec 64))
(declare-fun temp10964_130 () (_ BitVec 64))
(declare-fun temp10964_131 () (_ BitVec 64))
(declare-fun temp10964_132 () (_ BitVec 64))
(declare-fun temp10964_133 () (_ BitVec 64))
(declare-fun temp10964_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10964_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10964_136 () (_ BitVec 64))
(declare-fun temp10964_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10964_138 () (_ BitVec 64))
(declare-fun temp10964_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10964_140 () (_ BitVec 64))
(declare-fun temp10964_141 () (_ BitVec 64))
(declare-fun temp10964_142 () (_ BitVec 64))
(declare-fun temp10964_143 () (_ BitVec 64))
(declare-fun temp10964_144 () (_ BitVec 64))
(declare-fun temp10964_145 () (_ BitVec 64))
(declare-fun temp10964_146 () (_ BitVec 64))
(declare-fun temp10964_147 () (_ BitVec 64))
(declare-fun temp10964_148 () (_ BitVec 64))
(declare-fun temp10964_149 () (_ BitVec 64))
(declare-fun temp10964_150 () (_ BitVec 64))
(declare-fun temp10964_151 () (_ BitVec 64))
(declare-fun temp10964_152 () (_ BitVec 64))
(declare-fun temp10964_153 () (_ BitVec 64))
(declare-fun temp10964_154 () (_ BitVec 64))
(declare-fun temp10964_155 () (_ BitVec 64))
(declare-fun temp10964_157 () (_ BitVec 64))
(declare-fun temp10964_158 () (_ BitVec 64))
(declare-fun temp10964_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10964_159 () (_ BitVec 64))
(declare-fun temp10964_160 () (_ BitVec 64))
(declare-fun temp10964_162 () (_ BitVec 64))
(declare-fun temp10964_163 () (_ BitVec 64))
(declare-fun temp10964_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10964_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10964_165 () (_ BitVec 64))
(declare-fun temp10964_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10964_167 () (_ BitVec 64))
(declare-fun temp10964_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10964_169 () (_ BitVec 64))
(declare-fun temp10964_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10964_171 () (_ BitVec 64))
(declare-fun temp10964_172 () (_ BitVec 64))
(declare-fun temp10964_173 () (_ BitVec 64))
(declare-fun temp10964_174 () (_ BitVec 64))
(declare-fun temp10964_175 () (_ BitVec 64))
(declare-fun temp10964_176 () (_ BitVec 64))
(declare-fun temp10964_177 () (_ BitVec 64))
(declare-fun temp10964_178 () (_ BitVec 64))
(declare-fun temp10964_179 () (_ BitVec 64))
(declare-fun temp10964_180 () (_ BitVec 64))
(declare-fun temp10964_181 () (_ BitVec 64))
(declare-fun temp10964_182 () (_ BitVec 64))
(declare-fun temp10964_183 () (_ BitVec 64))
(declare-fun temp10964_184 () (_ BitVec 64))
(declare-fun temp10964_185 () (_ BitVec 64))
(declare-fun temp10964_186 () (_ BitVec 64))
(declare-fun temp10964_187 () (_ BitVec 64))
(declare-fun temp10964_188 () (_ BitVec 64))
(declare-fun temp10964_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10964_190 () (_ BitVec 64))
(declare-fun temp10964_192 () (_ BitVec 64))
(declare-fun temp10964_193 () (_ BitVec 64))
(declare-fun temp10964_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10964_194 () (_ BitVec 64))
(declare-fun temp10964_195 () (_ BitVec 64))
(declare-fun temp10964_197 () (_ BitVec 64))
(declare-fun temp10964_198 () (_ BitVec 64))
(declare-fun temp10964_196 () (_ BitVec 64))
(declare-fun temp10964_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10964_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10964_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10964_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10964_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10964_204 () (_ BitVec 64))
(declare-fun temp10964_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10964_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10964_207 () (_ BitVec 64))
(declare-fun temp10964_208 () (_ BitVec 64))
(declare-fun temp10964_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10964_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10964_211 () (_ BitVec 64))
(declare-fun temp10964_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10964_213 () (_ BitVec 64))
(declare-fun temp10964_214 () (_ BitVec 64))
(declare-fun temp10964_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10964_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10964_217 () (_ BitVec 64))
(declare-fun temp10964_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10964_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10964_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10964_221 () (_ BitVec 64))
(declare-fun temp10964_222 () (_ BitVec 64))
(declare-fun var5780244 () (_ BitVec 64))
(declare-fun var5780211 () (_ BitVec 64))
(declare-fun var5648775 () (_ BitVec 64))
(declare-fun var5648771 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10964_223 () (_ BitVec 64))
(assert (= temp10964_1 #x0000000000000001))
(assert (= var77203 temp10964_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10964_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10964_2)))
(assert (= temp10964_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10964_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10964_4 #x0000000000000000))
(assert (= var210941 temp10964_4))
(assert (= temp10964_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10964_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10964_6 #x0000000000000000))
(assert (= var210986 temp10964_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10964_7 #x0000000000000000))
(assert (= temp10964_8 temp10964_7))
(assert (= temp10964_9 (select ARGNAME_padding_NAMEEND_VAL temp10964_8)))
(assert (= temp10964_10 #x0000000000000001))
(assert (= temp10964_11 temp10964_10))
(assert (= temp10964_12 (select ARGNAME_padding_NAMEEND_VAL temp10964_11)))
(assert (= temp10964_13 #x0000000000000002))
(assert (= temp10964_14 temp10964_13))
(assert (= temp10964_15 (select ARGNAME_padding_NAMEEND_VAL temp10964_14)))
(assert (= temp10964_16 #x0000000000000003))
(assert (= temp10964_17 temp10964_16))
(assert (= temp10964_18 (select ARGNAME_padding_NAMEEND_VAL temp10964_17)))
(assert (= temp10964_19 #x0000000000000004))
(assert (= temp10964_20 temp10964_19))
(assert (= temp10964_21 (select ARGNAME_padding_NAMEEND_VAL temp10964_20)))
(assert (= temp10964_22 #x0000000000000005))
(assert (= temp10964_23 temp10964_22))
(assert (= temp10964_24 (select ARGNAME_padding_NAMEEND_VAL temp10964_23)))
(assert (= temp10964_25 #x0000000000000000))
(assert (= temp10964_26 #x0000000000000000))
(assert (= temp10964_27 temp10964_26))
(assert (= temp10964_28 (select ARGNAME_padding_NAMEEND_VAL temp10964_27)))
(assert (= temp10964_29 #x0000000000000000))
(assert (= temp10964_30 #x0000000000000001))
(assert (= temp10964_31 temp10964_30))
(assert (= temp10964_32 (select ARGNAME_padding_NAMEEND_VAL temp10964_31)))
(assert (= temp10964_33 #x0000000000000000))
(assert (= temp10964_34 #x0000000000000002))
(assert (= temp10964_35 temp10964_34))
(assert (= temp10964_36 (select ARGNAME_padding_NAMEEND_VAL temp10964_35)))
(assert (= temp10964_37 #x0000000000000000))
(assert (= temp10964_38 #x0000000000000003))
(assert (= temp10964_39 temp10964_38))
(assert (= temp10964_40 (select ARGNAME_padding_NAMEEND_VAL temp10964_39)))
(assert (= temp10964_41 #x0000000000000000))
(assert (= temp10964_42 #x0000000000000004))
(assert (= temp10964_43 temp10964_42))
(assert (= temp10964_44 (select ARGNAME_padding_NAMEEND_VAL temp10964_43)))
(assert (= temp10964_45 #x0000000000000000))
(assert (= temp10964_46 #x0000000000000005))
(assert (= temp10964_47 temp10964_46))
(assert (= temp10964_48 (select ARGNAME_padding_NAMEEND_VAL temp10964_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10964_28 temp10964_25)
             (bvslt temp10964_32 temp10964_29)
             (bvslt temp10964_36 temp10964_33)
             (bvslt temp10964_40 temp10964_37)
             (bvslt temp10964_44 temp10964_41)
             (bvslt temp10964_48 temp10964_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10964_49 #x0000000000000000))
(assert (= var1191714 temp10964_49))
(assert (= temp10964_50 #x0000000000000000))
(assert (= temp10964_51 temp10964_50))
(assert (= temp10964_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10964_51)))
(assert (= temp10964_53 #x0000000000000001))
(assert (= temp10964_54 temp10964_53))
(assert (= temp10964_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10964_54)))
(assert (= temp10964_56 #x0000000000000002))
(assert (= temp10964_57 temp10964_56))
(assert (= temp10964_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10964_57)))
(assert (= temp10964_59 #x0000000000000003))
(assert (= temp10964_60 temp10964_59))
(assert (= temp10964_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10964_60)))
(assert (= temp10964_62 #x0000000000000004))
(assert (= temp10964_63 temp10964_62))
(assert (= temp10964_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10964_63)))
(assert (= temp10964_65 #x0000000000000005))
(assert (= temp10964_66 temp10964_65))
(assert (= temp10964_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10964_66)))
(assert (= temp10964_68 #x0000000000000000))
(assert (= temp10964_69 #x0000000000000000))
(assert (= temp10964_70 temp10964_69))
(assert (= temp10964_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10964_70)))
(assert (= temp10964_72 #x0000000000000000))
(assert (= temp10964_73 #x0000000000000001))
(assert (= temp10964_74 temp10964_73))
(assert (= temp10964_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10964_74)))
(assert (= temp10964_76 #x0000000000000000))
(assert (= temp10964_77 #x0000000000000002))
(assert (= temp10964_78 temp10964_77))
(assert (= temp10964_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10964_78)))
(assert (= temp10964_80 #x0000000000000000))
(assert (= temp10964_81 #x0000000000000003))
(assert (= temp10964_82 temp10964_81))
(assert (= temp10964_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10964_82)))
(assert (= temp10964_84 #x0000000000000000))
(assert (= temp10964_85 #x0000000000000004))
(assert (= temp10964_86 temp10964_85))
(assert (= temp10964_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10964_86)))
(assert (= temp10964_88 #x0000000000000000))
(assert (= temp10964_89 #x0000000000000005))
(assert (= temp10964_90 temp10964_89))
(assert (= temp10964_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10964_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10964_71 temp10964_68)
             (bvslt temp10964_75 temp10964_72)
             (bvslt temp10964_79 temp10964_76)
             (bvslt temp10964_83 temp10964_80)
             (bvslt temp10964_87 temp10964_84)
             (bvslt temp10964_91 temp10964_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10964_92 #x0000000000000000))
(assert (= var1191725 temp10964_92))
(assert (= temp10964_93 #x0000000000000000))
(assert (= temp10964_94 temp10964_93))
(assert (= temp10964_95 (select ARGNAME_stride_NAMEEND_VAL temp10964_94)))
(assert (= temp10964_96 #x0000000000000001))
(assert (= temp10964_97 temp10964_96))
(assert (= temp10964_98 (select ARGNAME_stride_NAMEEND_VAL temp10964_97)))
(assert (= temp10964_99 #x0000000000000002))
(assert (= temp10964_100 temp10964_99))
(assert (= temp10964_101 (select ARGNAME_stride_NAMEEND_VAL temp10964_100)))
(assert (= temp10964_102 #x0000000000000003))
(assert (= temp10964_103 temp10964_102))
(assert (= temp10964_104 (select ARGNAME_stride_NAMEEND_VAL temp10964_103)))
(assert (= temp10964_105 #x0000000000000004))
(assert (= temp10964_106 temp10964_105))
(assert (= temp10964_107 (select ARGNAME_stride_NAMEEND_VAL temp10964_106)))
(assert (= temp10964_108 #x0000000000000005))
(assert (= temp10964_109 temp10964_108))
(assert (= temp10964_110 (select ARGNAME_stride_NAMEEND_VAL temp10964_109)))
(assert (= temp10964_111 #x0000000000000000))
(assert (= temp10964_112 #x0000000000000000))
(assert (= temp10964_113 temp10964_112))
(assert (= temp10964_114 (select ARGNAME_stride_NAMEEND_VAL temp10964_113)))
(assert (= temp10964_115 #x0000000000000000))
(assert (= temp10964_116 #x0000000000000001))
(assert (= temp10964_117 temp10964_116))
(assert (= temp10964_118 (select ARGNAME_stride_NAMEEND_VAL temp10964_117)))
(assert (= temp10964_119 #x0000000000000000))
(assert (= temp10964_120 #x0000000000000002))
(assert (= temp10964_121 temp10964_120))
(assert (= temp10964_122 (select ARGNAME_stride_NAMEEND_VAL temp10964_121)))
(assert (= temp10964_123 #x0000000000000000))
(assert (= temp10964_124 #x0000000000000003))
(assert (= temp10964_125 temp10964_124))
(assert (= temp10964_126 (select ARGNAME_stride_NAMEEND_VAL temp10964_125)))
(assert (= temp10964_127 #x0000000000000000))
(assert (= temp10964_128 #x0000000000000004))
(assert (= temp10964_129 temp10964_128))
(assert (= temp10964_130 (select ARGNAME_stride_NAMEEND_VAL temp10964_129)))
(assert (= temp10964_131 #x0000000000000000))
(assert (= temp10964_132 #x0000000000000005))
(assert (= temp10964_133 temp10964_132))
(assert (= temp10964_134 (select ARGNAME_stride_NAMEEND_VAL temp10964_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10964_114 temp10964_111)
             (bvsle temp10964_118 temp10964_115)
             (bvsle temp10964_122 temp10964_119)
             (bvsle temp10964_126 temp10964_123)
             (bvsle temp10964_130 temp10964_127)
             (bvsle temp10964_134 temp10964_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10964_135 #x0000000000000000))
(assert (= var1191735 temp10964_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10964_136 #x0000000000000001))
(assert (= var1191747 temp10964_136))
(assert (= temp10964_137 #x0000000000000000))
(assert (= var1179826 temp10964_137))
(assert (= temp10964_138 #x0000000000000000))
(assert (= temp10964_139 temp10964_138))
(assert (= temp10964_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10964_139)))
(assert (= temp10964_141 #x0000000000000001))
(assert (= temp10964_142 temp10964_141))
(assert (= temp10964_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10964_142)))
(assert (= temp10964_144 #x0000000000000002))
(assert (= temp10964_145 temp10964_144))
(assert (= temp10964_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10964_145)))
(assert (= temp10964_147 #x0000000000000003))
(assert (= temp10964_148 temp10964_147))
(assert (= temp10964_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10964_148)))
(assert (= temp10964_150 #x0000000000000004))
(assert (= temp10964_151 temp10964_150))
(assert (= temp10964_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10964_151)))
(assert (= temp10964_153 #x0000000000000005))
(assert (= temp10964_154 temp10964_153))
(assert (= temp10964_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10964_154)))
(assert (= temp10964_157 var1179826))
(assert (= temp10964_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10964_157)))
(assert (= temp10964_156 temp10964_158))
(assert (= var1191780
   (ite (bvslt temp10964_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10964_159 #x0000000000000000))
(assert (= var1191780 temp10964_159))
(assert (= temp10964_160 #x0000000000000000))
(assert (= var1179826 temp10964_160))
(assert (= temp10964_162 var1179826))
(assert (= temp10964_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10964_162)))
(assert (= temp10964_161 temp10964_163))
(assert (= var1191802 (bvsmod temp10964_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10964_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10964_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10964_165 #x0000000000000001))
(assert (= var1191803 temp10964_165))
(assert (= temp10964_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10964_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10964_167 #x0000000000000001))
(assert (= var1191823 temp10964_167))
(assert (= temp10964_168 #x0000000000000001))
(assert (= var1180714 temp10964_168))
(assert (= temp10964_169 #x0000000000000000))
(assert (= temp10964_170 temp10964_169))
(assert (= temp10964_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10964_170)))
(assert (= temp10964_172 #x0000000000000001))
(assert (= temp10964_173 temp10964_172))
(assert (= temp10964_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10964_173)))
(assert (= temp10964_175 #x0000000000000002))
(assert (= temp10964_176 temp10964_175))
(assert (= temp10964_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10964_176)))
(assert (= temp10964_178 #x0000000000000003))
(assert (= temp10964_179 temp10964_178))
(assert (= temp10964_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10964_179)))
(assert (= temp10964_181 #x0000000000000004))
(assert (= temp10964_182 temp10964_181))
(assert (= temp10964_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10964_182)))
(assert (= temp10964_184 #x0000000000000005))
(assert (= temp10964_185 temp10964_184))
(assert (= temp10964_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10964_185)))
(assert (= temp10964_187 #x0000000000000000))
(assert (= temp10964_188
   (ite (bvslt var1180714 temp10964_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10964_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10964_188)))
(assert (= var1191831 temp10964_189))
(assert (bvslt (ite (bvslt var1180714 temp10964_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10964_190 #x0000000000000001))
(assert (= var1180714 temp10964_190))
(assert (= temp10964_192 var1180714))
(assert (= temp10964_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10964_192)))
(assert (= temp10964_191 temp10964_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10964_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10964_194 #x0000000000000001))
(assert (= var1191836 temp10964_194))
(assert (= temp10964_195 #x0000000000000000))
(assert (= var1179826 temp10964_195))
(assert (= temp10964_197 var1179826))
(assert (= temp10964_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10964_197)))
(assert (= temp10964_196 temp10964_198))
(assert (= temp10964_199 #x0000000000000002))
(assert (= var1586025 temp10964_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10964_200 #x0000000000000001))
(assert (= var1191993 temp10964_200))
(assert (= temp10964_201 #x0000000000000001))
(assert (= var2700303 temp10964_201))
(assert (= temp10964_202 #x0000000000000001))
(assert (= var2962447 temp10964_202))
(assert (= temp10964_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10964_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10964_204 #x0000000000000001))
(assert (= var211058 temp10964_204))
(assert (= temp10964_205 #x0000000000000001))
(assert (= var211188 temp10964_205))
(assert (= var3879401 var211188))
(assert (= temp10964_206 #x0000000000000000))
(assert (= var3866802 temp10964_206))
(assert (= temp10964_207 #x0000000000000000))
(assert (= temp10964_208
   (ite (bvslt var3866802 temp10964_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10964_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10964_208)))
(assert (= var3879420 temp10964_209))
(assert (bvslt (ite (bvslt var3866802 temp10964_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10964_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10964_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10964_211 #x0000000000000000))
(assert (= var3879421 temp10964_211))
(assert (= temp10964_212 #x0000000000000001))
(assert (= var3867690 temp10964_212))
(assert (= temp10964_213 #x0000000000000000))
(assert (= temp10964_214
   (ite (bvslt var3867690 temp10964_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10964_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10964_214)))
(assert (= var3879423 temp10964_215))
(assert (bvslt (ite (bvslt var3867690 temp10964_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10964_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10964_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10964_217 #x0000000000000001))
(assert (= var3879424 temp10964_217))
(assert (= temp10964_218 #x0000000000000000))
(assert (= var4133117 temp10964_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10964_219 #x0000000000000002))
(assert (= var4339331 temp10964_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10964_220 #x0000000000000000))
(assert (= var4404892 temp10964_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10964_221 #x0000000000000001))
(assert (= var211058 temp10964_221))
(assert (= temp10964_222 #x0000000000000000))
(assert (= var5780244 temp10964_222))
(assert (= var5780211 var5780244))
(assert (= var5648775 var5780211))
(assert (= var5648771 var5648775))
(assert (= var212669 var5648771))
(assert (= temp10964_223 #x0000000000000000))
(assert (= var212669 temp10964_223))
(model-add temp10964_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10964_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10964_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10964_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




