(declare-fun temp10856_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10856_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10856_3 () (_ BitVec 64))
(declare-fun temp10856_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10856_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10856_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10856_7 () (_ BitVec 64))
(declare-fun temp10856_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10856_9 () (_ BitVec 64))
(declare-fun temp10856_10 () (_ BitVec 64))
(declare-fun temp10856_11 () (_ BitVec 64))
(declare-fun temp10856_12 () (_ BitVec 64))
(declare-fun temp10856_13 () (_ BitVec 64))
(declare-fun temp10856_14 () (_ BitVec 64))
(declare-fun temp10856_15 () (_ BitVec 64))
(declare-fun temp10856_16 () (_ BitVec 64))
(declare-fun temp10856_17 () (_ BitVec 64))
(declare-fun temp10856_18 () (_ BitVec 64))
(declare-fun temp10856_19 () (_ BitVec 64))
(declare-fun temp10856_20 () (_ BitVec 64))
(declare-fun temp10856_21 () (_ BitVec 64))
(declare-fun temp10856_22 () (_ BitVec 64))
(declare-fun temp10856_23 () (_ BitVec 64))
(declare-fun temp10856_24 () (_ BitVec 64))
(declare-fun temp10856_25 () (_ BitVec 64))
(declare-fun temp10856_26 () (_ BitVec 64))
(declare-fun temp10856_27 () (_ BitVec 64))
(declare-fun temp10856_28 () (_ BitVec 64))
(declare-fun temp10856_29 () (_ BitVec 64))
(declare-fun temp10856_30 () (_ BitVec 64))
(declare-fun temp10856_31 () (_ BitVec 64))
(declare-fun temp10856_32 () (_ BitVec 64))
(declare-fun temp10856_33 () (_ BitVec 64))
(declare-fun temp10856_34 () (_ BitVec 64))
(declare-fun temp10856_35 () (_ BitVec 64))
(declare-fun temp10856_36 () (_ BitVec 64))
(declare-fun temp10856_37 () (_ BitVec 64))
(declare-fun temp10856_38 () (_ BitVec 64))
(declare-fun temp10856_39 () (_ BitVec 64))
(declare-fun temp10856_40 () (_ BitVec 64))
(declare-fun temp10856_41 () (_ BitVec 64))
(declare-fun temp10856_42 () (_ BitVec 64))
(declare-fun temp10856_43 () (_ BitVec 64))
(declare-fun temp10856_44 () (_ BitVec 64))
(declare-fun temp10856_45 () (_ BitVec 64))
(declare-fun temp10856_46 () (_ BitVec 64))
(declare-fun temp10856_47 () (_ BitVec 64))
(declare-fun temp10856_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10856_49 () (_ BitVec 64))
(declare-fun temp10856_50 () (_ BitVec 64))
(declare-fun temp10856_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10856_52 () (_ BitVec 64))
(declare-fun temp10856_53 () (_ BitVec 64))
(declare-fun temp10856_54 () (_ BitVec 64))
(declare-fun temp10856_55 () (_ BitVec 64))
(declare-fun temp10856_56 () (_ BitVec 64))
(declare-fun temp10856_57 () (_ BitVec 64))
(declare-fun temp10856_58 () (_ BitVec 64))
(declare-fun temp10856_59 () (_ BitVec 64))
(declare-fun temp10856_60 () (_ BitVec 64))
(declare-fun temp10856_61 () (_ BitVec 64))
(declare-fun temp10856_62 () (_ BitVec 64))
(declare-fun temp10856_63 () (_ BitVec 64))
(declare-fun temp10856_64 () (_ BitVec 64))
(declare-fun temp10856_65 () (_ BitVec 64))
(declare-fun temp10856_66 () (_ BitVec 64))
(declare-fun temp10856_67 () (_ BitVec 64))
(declare-fun temp10856_68 () (_ BitVec 64))
(declare-fun temp10856_69 () (_ BitVec 64))
(declare-fun temp10856_70 () (_ BitVec 64))
(declare-fun temp10856_71 () (_ BitVec 64))
(declare-fun temp10856_72 () (_ BitVec 64))
(declare-fun temp10856_73 () (_ BitVec 64))
(declare-fun temp10856_74 () (_ BitVec 64))
(declare-fun temp10856_75 () (_ BitVec 64))
(declare-fun temp10856_76 () (_ BitVec 64))
(declare-fun temp10856_77 () (_ BitVec 64))
(declare-fun temp10856_78 () (_ BitVec 64))
(declare-fun temp10856_79 () (_ BitVec 64))
(declare-fun temp10856_80 () (_ BitVec 64))
(declare-fun temp10856_81 () (_ BitVec 64))
(declare-fun temp10856_82 () (_ BitVec 64))
(declare-fun temp10856_83 () (_ BitVec 64))
(declare-fun temp10856_84 () (_ BitVec 64))
(declare-fun temp10856_85 () (_ BitVec 64))
(declare-fun temp10856_86 () (_ BitVec 64))
(declare-fun temp10856_87 () (_ BitVec 64))
(declare-fun temp10856_88 () (_ BitVec 64))
(declare-fun temp10856_89 () (_ BitVec 64))
(declare-fun temp10856_90 () (_ BitVec 64))
(declare-fun temp10856_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10856_92 () (_ BitVec 64))
(declare-fun temp10856_93 () (_ BitVec 64))
(declare-fun temp10856_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10856_95 () (_ BitVec 64))
(declare-fun temp10856_96 () (_ BitVec 64))
(declare-fun temp10856_97 () (_ BitVec 64))
(declare-fun temp10856_98 () (_ BitVec 64))
(declare-fun temp10856_99 () (_ BitVec 64))
(declare-fun temp10856_100 () (_ BitVec 64))
(declare-fun temp10856_101 () (_ BitVec 64))
(declare-fun temp10856_102 () (_ BitVec 64))
(declare-fun temp10856_103 () (_ BitVec 64))
(declare-fun temp10856_104 () (_ BitVec 64))
(declare-fun temp10856_105 () (_ BitVec 64))
(declare-fun temp10856_106 () (_ BitVec 64))
(declare-fun temp10856_107 () (_ BitVec 64))
(declare-fun temp10856_108 () (_ BitVec 64))
(declare-fun temp10856_109 () (_ BitVec 64))
(declare-fun temp10856_110 () (_ BitVec 64))
(declare-fun temp10856_111 () (_ BitVec 64))
(declare-fun temp10856_112 () (_ BitVec 64))
(declare-fun temp10856_113 () (_ BitVec 64))
(declare-fun temp10856_114 () (_ BitVec 64))
(declare-fun temp10856_115 () (_ BitVec 64))
(declare-fun temp10856_116 () (_ BitVec 64))
(declare-fun temp10856_117 () (_ BitVec 64))
(declare-fun temp10856_118 () (_ BitVec 64))
(declare-fun temp10856_119 () (_ BitVec 64))
(declare-fun temp10856_120 () (_ BitVec 64))
(declare-fun temp10856_121 () (_ BitVec 64))
(declare-fun temp10856_122 () (_ BitVec 64))
(declare-fun temp10856_123 () (_ BitVec 64))
(declare-fun temp10856_124 () (_ BitVec 64))
(declare-fun temp10856_125 () (_ BitVec 64))
(declare-fun temp10856_126 () (_ BitVec 64))
(declare-fun temp10856_127 () (_ BitVec 64))
(declare-fun temp10856_128 () (_ BitVec 64))
(declare-fun temp10856_129 () (_ BitVec 64))
(declare-fun temp10856_130 () (_ BitVec 64))
(declare-fun temp10856_131 () (_ BitVec 64))
(declare-fun temp10856_132 () (_ BitVec 64))
(declare-fun temp10856_133 () (_ BitVec 64))
(declare-fun temp10856_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10856_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10856_136 () (_ BitVec 64))
(declare-fun temp10856_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10856_138 () (_ BitVec 64))
(declare-fun temp10856_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10856_140 () (_ BitVec 64))
(declare-fun temp10856_141 () (_ BitVec 64))
(declare-fun temp10856_142 () (_ BitVec 64))
(declare-fun temp10856_143 () (_ BitVec 64))
(declare-fun temp10856_144 () (_ BitVec 64))
(declare-fun temp10856_145 () (_ BitVec 64))
(declare-fun temp10856_146 () (_ BitVec 64))
(declare-fun temp10856_147 () (_ BitVec 64))
(declare-fun temp10856_148 () (_ BitVec 64))
(declare-fun temp10856_149 () (_ BitVec 64))
(declare-fun temp10856_150 () (_ BitVec 64))
(declare-fun temp10856_151 () (_ BitVec 64))
(declare-fun temp10856_152 () (_ BitVec 64))
(declare-fun temp10856_153 () (_ BitVec 64))
(declare-fun temp10856_154 () (_ BitVec 64))
(declare-fun temp10856_155 () (_ BitVec 64))
(declare-fun temp10856_157 () (_ BitVec 64))
(declare-fun temp10856_158 () (_ BitVec 64))
(declare-fun temp10856_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10856_159 () (_ BitVec 64))
(declare-fun temp10856_160 () (_ BitVec 64))
(declare-fun temp10856_162 () (_ BitVec 64))
(declare-fun temp10856_163 () (_ BitVec 64))
(declare-fun temp10856_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10856_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10856_165 () (_ BitVec 64))
(declare-fun temp10856_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10856_167 () (_ BitVec 64))
(declare-fun temp10856_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10856_169 () (_ BitVec 64))
(declare-fun temp10856_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10856_171 () (_ BitVec 64))
(declare-fun temp10856_172 () (_ BitVec 64))
(declare-fun temp10856_173 () (_ BitVec 64))
(declare-fun temp10856_174 () (_ BitVec 64))
(declare-fun temp10856_175 () (_ BitVec 64))
(declare-fun temp10856_176 () (_ BitVec 64))
(declare-fun temp10856_177 () (_ BitVec 64))
(declare-fun temp10856_178 () (_ BitVec 64))
(declare-fun temp10856_179 () (_ BitVec 64))
(declare-fun temp10856_180 () (_ BitVec 64))
(declare-fun temp10856_181 () (_ BitVec 64))
(declare-fun temp10856_182 () (_ BitVec 64))
(declare-fun temp10856_183 () (_ BitVec 64))
(declare-fun temp10856_184 () (_ BitVec 64))
(declare-fun temp10856_185 () (_ BitVec 64))
(declare-fun temp10856_186 () (_ BitVec 64))
(declare-fun temp10856_187 () (_ BitVec 64))
(declare-fun temp10856_188 () (_ BitVec 64))
(declare-fun temp10856_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10856_190 () (_ BitVec 64))
(declare-fun temp10856_192 () (_ BitVec 64))
(declare-fun temp10856_193 () (_ BitVec 64))
(declare-fun temp10856_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10856_194 () (_ BitVec 64))
(declare-fun temp10856_195 () (_ BitVec 64))
(declare-fun temp10856_197 () (_ BitVec 64))
(declare-fun temp10856_198 () (_ BitVec 64))
(declare-fun temp10856_196 () (_ BitVec 64))
(declare-fun temp10856_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10856_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10856_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10856_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10856_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10856_204 () (_ BitVec 64))
(declare-fun temp10856_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10856_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10856_207 () (_ BitVec 64))
(declare-fun temp10856_208 () (_ BitVec 64))
(declare-fun temp10856_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10856_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10856_211 () (_ BitVec 64))
(declare-fun temp10856_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10856_213 () (_ BitVec 64))
(declare-fun temp10856_214 () (_ BitVec 64))
(declare-fun temp10856_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10856_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10856_217 () (_ BitVec 64))
(declare-fun temp10856_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10856_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10856_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp10856_221 () (_ BitVec 64))
(assert (= temp10856_1 #x0000000000000001))
(assert (= var77203 temp10856_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10856_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10856_2)))
(assert (= temp10856_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10856_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10856_4 #x0000000000000000))
(assert (= var210941 temp10856_4))
(assert (= temp10856_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10856_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10856_6 #x0000000000000000))
(assert (= var210986 temp10856_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10856_7 #x0000000000000000))
(assert (= temp10856_8 temp10856_7))
(assert (= temp10856_9 (select ARGNAME_padding_NAMEEND_VAL temp10856_8)))
(assert (= temp10856_10 #x0000000000000001))
(assert (= temp10856_11 temp10856_10))
(assert (= temp10856_12 (select ARGNAME_padding_NAMEEND_VAL temp10856_11)))
(assert (= temp10856_13 #x0000000000000002))
(assert (= temp10856_14 temp10856_13))
(assert (= temp10856_15 (select ARGNAME_padding_NAMEEND_VAL temp10856_14)))
(assert (= temp10856_16 #x0000000000000003))
(assert (= temp10856_17 temp10856_16))
(assert (= temp10856_18 (select ARGNAME_padding_NAMEEND_VAL temp10856_17)))
(assert (= temp10856_19 #x0000000000000004))
(assert (= temp10856_20 temp10856_19))
(assert (= temp10856_21 (select ARGNAME_padding_NAMEEND_VAL temp10856_20)))
(assert (= temp10856_22 #x0000000000000005))
(assert (= temp10856_23 temp10856_22))
(assert (= temp10856_24 (select ARGNAME_padding_NAMEEND_VAL temp10856_23)))
(assert (= temp10856_25 #x0000000000000000))
(assert (= temp10856_26 #x0000000000000000))
(assert (= temp10856_27 temp10856_26))
(assert (= temp10856_28 (select ARGNAME_padding_NAMEEND_VAL temp10856_27)))
(assert (= temp10856_29 #x0000000000000000))
(assert (= temp10856_30 #x0000000000000001))
(assert (= temp10856_31 temp10856_30))
(assert (= temp10856_32 (select ARGNAME_padding_NAMEEND_VAL temp10856_31)))
(assert (= temp10856_33 #x0000000000000000))
(assert (= temp10856_34 #x0000000000000002))
(assert (= temp10856_35 temp10856_34))
(assert (= temp10856_36 (select ARGNAME_padding_NAMEEND_VAL temp10856_35)))
(assert (= temp10856_37 #x0000000000000000))
(assert (= temp10856_38 #x0000000000000003))
(assert (= temp10856_39 temp10856_38))
(assert (= temp10856_40 (select ARGNAME_padding_NAMEEND_VAL temp10856_39)))
(assert (= temp10856_41 #x0000000000000000))
(assert (= temp10856_42 #x0000000000000004))
(assert (= temp10856_43 temp10856_42))
(assert (= temp10856_44 (select ARGNAME_padding_NAMEEND_VAL temp10856_43)))
(assert (= temp10856_45 #x0000000000000000))
(assert (= temp10856_46 #x0000000000000005))
(assert (= temp10856_47 temp10856_46))
(assert (= temp10856_48 (select ARGNAME_padding_NAMEEND_VAL temp10856_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10856_28 temp10856_25)
             (bvslt temp10856_32 temp10856_29)
             (bvslt temp10856_36 temp10856_33)
             (bvslt temp10856_40 temp10856_37)
             (bvslt temp10856_44 temp10856_41)
             (bvslt temp10856_48 temp10856_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10856_49 #x0000000000000000))
(assert (= var1191714 temp10856_49))
(assert (= temp10856_50 #x0000000000000000))
(assert (= temp10856_51 temp10856_50))
(assert (= temp10856_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10856_51)))
(assert (= temp10856_53 #x0000000000000001))
(assert (= temp10856_54 temp10856_53))
(assert (= temp10856_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10856_54)))
(assert (= temp10856_56 #x0000000000000002))
(assert (= temp10856_57 temp10856_56))
(assert (= temp10856_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10856_57)))
(assert (= temp10856_59 #x0000000000000003))
(assert (= temp10856_60 temp10856_59))
(assert (= temp10856_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10856_60)))
(assert (= temp10856_62 #x0000000000000004))
(assert (= temp10856_63 temp10856_62))
(assert (= temp10856_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10856_63)))
(assert (= temp10856_65 #x0000000000000005))
(assert (= temp10856_66 temp10856_65))
(assert (= temp10856_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10856_66)))
(assert (= temp10856_68 #x0000000000000000))
(assert (= temp10856_69 #x0000000000000000))
(assert (= temp10856_70 temp10856_69))
(assert (= temp10856_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10856_70)))
(assert (= temp10856_72 #x0000000000000000))
(assert (= temp10856_73 #x0000000000000001))
(assert (= temp10856_74 temp10856_73))
(assert (= temp10856_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10856_74)))
(assert (= temp10856_76 #x0000000000000000))
(assert (= temp10856_77 #x0000000000000002))
(assert (= temp10856_78 temp10856_77))
(assert (= temp10856_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10856_78)))
(assert (= temp10856_80 #x0000000000000000))
(assert (= temp10856_81 #x0000000000000003))
(assert (= temp10856_82 temp10856_81))
(assert (= temp10856_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10856_82)))
(assert (= temp10856_84 #x0000000000000000))
(assert (= temp10856_85 #x0000000000000004))
(assert (= temp10856_86 temp10856_85))
(assert (= temp10856_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10856_86)))
(assert (= temp10856_88 #x0000000000000000))
(assert (= temp10856_89 #x0000000000000005))
(assert (= temp10856_90 temp10856_89))
(assert (= temp10856_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10856_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10856_71 temp10856_68)
             (bvslt temp10856_75 temp10856_72)
             (bvslt temp10856_79 temp10856_76)
             (bvslt temp10856_83 temp10856_80)
             (bvslt temp10856_87 temp10856_84)
             (bvslt temp10856_91 temp10856_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10856_92 #x0000000000000000))
(assert (= var1191725 temp10856_92))
(assert (= temp10856_93 #x0000000000000000))
(assert (= temp10856_94 temp10856_93))
(assert (= temp10856_95 (select ARGNAME_stride_NAMEEND_VAL temp10856_94)))
(assert (= temp10856_96 #x0000000000000001))
(assert (= temp10856_97 temp10856_96))
(assert (= temp10856_98 (select ARGNAME_stride_NAMEEND_VAL temp10856_97)))
(assert (= temp10856_99 #x0000000000000002))
(assert (= temp10856_100 temp10856_99))
(assert (= temp10856_101 (select ARGNAME_stride_NAMEEND_VAL temp10856_100)))
(assert (= temp10856_102 #x0000000000000003))
(assert (= temp10856_103 temp10856_102))
(assert (= temp10856_104 (select ARGNAME_stride_NAMEEND_VAL temp10856_103)))
(assert (= temp10856_105 #x0000000000000004))
(assert (= temp10856_106 temp10856_105))
(assert (= temp10856_107 (select ARGNAME_stride_NAMEEND_VAL temp10856_106)))
(assert (= temp10856_108 #x0000000000000005))
(assert (= temp10856_109 temp10856_108))
(assert (= temp10856_110 (select ARGNAME_stride_NAMEEND_VAL temp10856_109)))
(assert (= temp10856_111 #x0000000000000000))
(assert (= temp10856_112 #x0000000000000000))
(assert (= temp10856_113 temp10856_112))
(assert (= temp10856_114 (select ARGNAME_stride_NAMEEND_VAL temp10856_113)))
(assert (= temp10856_115 #x0000000000000000))
(assert (= temp10856_116 #x0000000000000001))
(assert (= temp10856_117 temp10856_116))
(assert (= temp10856_118 (select ARGNAME_stride_NAMEEND_VAL temp10856_117)))
(assert (= temp10856_119 #x0000000000000000))
(assert (= temp10856_120 #x0000000000000002))
(assert (= temp10856_121 temp10856_120))
(assert (= temp10856_122 (select ARGNAME_stride_NAMEEND_VAL temp10856_121)))
(assert (= temp10856_123 #x0000000000000000))
(assert (= temp10856_124 #x0000000000000003))
(assert (= temp10856_125 temp10856_124))
(assert (= temp10856_126 (select ARGNAME_stride_NAMEEND_VAL temp10856_125)))
(assert (= temp10856_127 #x0000000000000000))
(assert (= temp10856_128 #x0000000000000004))
(assert (= temp10856_129 temp10856_128))
(assert (= temp10856_130 (select ARGNAME_stride_NAMEEND_VAL temp10856_129)))
(assert (= temp10856_131 #x0000000000000000))
(assert (= temp10856_132 #x0000000000000005))
(assert (= temp10856_133 temp10856_132))
(assert (= temp10856_134 (select ARGNAME_stride_NAMEEND_VAL temp10856_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10856_114 temp10856_111)
             (bvsle temp10856_118 temp10856_115)
             (bvsle temp10856_122 temp10856_119)
             (bvsle temp10856_126 temp10856_123)
             (bvsle temp10856_130 temp10856_127)
             (bvsle temp10856_134 temp10856_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10856_135 #x0000000000000000))
(assert (= var1191735 temp10856_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10856_136 #x0000000000000001))
(assert (= var1191747 temp10856_136))
(assert (= temp10856_137 #x0000000000000000))
(assert (= var1179826 temp10856_137))
(assert (= temp10856_138 #x0000000000000000))
(assert (= temp10856_139 temp10856_138))
(assert (= temp10856_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10856_139)))
(assert (= temp10856_141 #x0000000000000001))
(assert (= temp10856_142 temp10856_141))
(assert (= temp10856_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10856_142)))
(assert (= temp10856_144 #x0000000000000002))
(assert (= temp10856_145 temp10856_144))
(assert (= temp10856_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10856_145)))
(assert (= temp10856_147 #x0000000000000003))
(assert (= temp10856_148 temp10856_147))
(assert (= temp10856_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10856_148)))
(assert (= temp10856_150 #x0000000000000004))
(assert (= temp10856_151 temp10856_150))
(assert (= temp10856_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10856_151)))
(assert (= temp10856_153 #x0000000000000005))
(assert (= temp10856_154 temp10856_153))
(assert (= temp10856_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10856_154)))
(assert (= temp10856_157 var1179826))
(assert (= temp10856_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10856_157)))
(assert (= temp10856_156 temp10856_158))
(assert (= var1191780
   (ite (bvslt temp10856_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10856_159 #x0000000000000000))
(assert (= var1191780 temp10856_159))
(assert (= temp10856_160 #x0000000000000000))
(assert (= var1179826 temp10856_160))
(assert (= temp10856_162 var1179826))
(assert (= temp10856_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10856_162)))
(assert (= temp10856_161 temp10856_163))
(assert (= var1191802 (bvsmod temp10856_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10856_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10856_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10856_165 #x0000000000000001))
(assert (= var1191803 temp10856_165))
(assert (= temp10856_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10856_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10856_167 #x0000000000000001))
(assert (= var1191823 temp10856_167))
(assert (= temp10856_168 #x0000000000000001))
(assert (= var1180714 temp10856_168))
(assert (= temp10856_169 #x0000000000000000))
(assert (= temp10856_170 temp10856_169))
(assert (= temp10856_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10856_170)))
(assert (= temp10856_172 #x0000000000000001))
(assert (= temp10856_173 temp10856_172))
(assert (= temp10856_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10856_173)))
(assert (= temp10856_175 #x0000000000000002))
(assert (= temp10856_176 temp10856_175))
(assert (= temp10856_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10856_176)))
(assert (= temp10856_178 #x0000000000000003))
(assert (= temp10856_179 temp10856_178))
(assert (= temp10856_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10856_179)))
(assert (= temp10856_181 #x0000000000000004))
(assert (= temp10856_182 temp10856_181))
(assert (= temp10856_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10856_182)))
(assert (= temp10856_184 #x0000000000000005))
(assert (= temp10856_185 temp10856_184))
(assert (= temp10856_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10856_185)))
(assert (= temp10856_187 #x0000000000000000))
(assert (= temp10856_188
   (ite (bvslt var1180714 temp10856_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10856_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10856_188)))
(assert (= var1191831 temp10856_189))
(assert (bvslt (ite (bvslt var1180714 temp10856_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10856_190 #x0000000000000001))
(assert (= var1180714 temp10856_190))
(assert (= temp10856_192 var1180714))
(assert (= temp10856_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10856_192)))
(assert (= temp10856_191 temp10856_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10856_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10856_194 #x0000000000000001))
(assert (= var1191836 temp10856_194))
(assert (= temp10856_195 #x0000000000000000))
(assert (= var1179826 temp10856_195))
(assert (= temp10856_197 var1179826))
(assert (= temp10856_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10856_197)))
(assert (= temp10856_196 temp10856_198))
(assert (= temp10856_199 #x0000000000000002))
(assert (= var1586025 temp10856_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10856_200 #x0000000000000001))
(assert (= var1191993 temp10856_200))
(assert (= temp10856_201 #x0000000000000001))
(assert (= var2700303 temp10856_201))
(assert (= temp10856_202 #x0000000000000001))
(assert (= var2962447 temp10856_202))
(assert (= temp10856_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10856_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10856_204 #x0000000000000001))
(assert (= var211058 temp10856_204))
(assert (= temp10856_205 #x0000000000000001))
(assert (= var211188 temp10856_205))
(assert (= var3879401 var211188))
(assert (= temp10856_206 #x0000000000000000))
(assert (= var3866802 temp10856_206))
(assert (= temp10856_207 #x0000000000000000))
(assert (= temp10856_208
   (ite (bvslt var3866802 temp10856_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10856_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10856_208)))
(assert (= var3879420 temp10856_209))
(assert (bvslt (ite (bvslt var3866802 temp10856_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10856_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10856_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10856_211 #x0000000000000000))
(assert (= var3879421 temp10856_211))
(assert (= temp10856_212 #x0000000000000001))
(assert (= var3867690 temp10856_212))
(assert (= temp10856_213 #x0000000000000000))
(assert (= temp10856_214
   (ite (bvslt var3867690 temp10856_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10856_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10856_214)))
(assert (= var3879423 temp10856_215))
(assert (bvslt (ite (bvslt var3867690 temp10856_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10856_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10856_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10856_217 #x0000000000000001))
(assert (= var3879424 temp10856_217))
(assert (= temp10856_218 #x0000000000000000))
(assert (= var4133117 temp10856_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10856_219 #x0000000000000002))
(assert (= var4339331 temp10856_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10856_220 #x0000000000000000))
(assert (= var4404892 temp10856_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5452176 var211201))
(assert (= var5714320 var211201))
(assert (= temp10856_221 #x0000000000000001))
(assert (= var211058 temp10856_221))
(model-add temp10856_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10856_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10856_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10856_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




