(declare-fun temp10024_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10024_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10024_3 () (_ BitVec 64))
(declare-fun temp10024_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10024_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10024_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10024_7 () (_ BitVec 64))
(declare-fun temp10024_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10024_9 () (_ BitVec 64))
(declare-fun temp10024_10 () (_ BitVec 64))
(declare-fun temp10024_11 () (_ BitVec 64))
(declare-fun temp10024_12 () (_ BitVec 64))
(declare-fun temp10024_13 () (_ BitVec 64))
(declare-fun temp10024_14 () (_ BitVec 64))
(declare-fun temp10024_15 () (_ BitVec 64))
(declare-fun temp10024_16 () (_ BitVec 64))
(declare-fun temp10024_17 () (_ BitVec 64))
(declare-fun temp10024_18 () (_ BitVec 64))
(declare-fun temp10024_19 () (_ BitVec 64))
(declare-fun temp10024_20 () (_ BitVec 64))
(declare-fun temp10024_21 () (_ BitVec 64))
(declare-fun temp10024_22 () (_ BitVec 64))
(declare-fun temp10024_23 () (_ BitVec 64))
(declare-fun temp10024_24 () (_ BitVec 64))
(declare-fun temp10024_25 () (_ BitVec 64))
(declare-fun temp10024_26 () (_ BitVec 64))
(declare-fun temp10024_27 () (_ BitVec 64))
(declare-fun temp10024_28 () (_ BitVec 64))
(declare-fun temp10024_29 () (_ BitVec 64))
(declare-fun temp10024_30 () (_ BitVec 64))
(declare-fun temp10024_31 () (_ BitVec 64))
(declare-fun temp10024_32 () (_ BitVec 64))
(declare-fun temp10024_33 () (_ BitVec 64))
(declare-fun temp10024_34 () (_ BitVec 64))
(declare-fun temp10024_35 () (_ BitVec 64))
(declare-fun temp10024_36 () (_ BitVec 64))
(declare-fun temp10024_37 () (_ BitVec 64))
(declare-fun temp10024_38 () (_ BitVec 64))
(declare-fun temp10024_39 () (_ BitVec 64))
(declare-fun temp10024_40 () (_ BitVec 64))
(declare-fun temp10024_41 () (_ BitVec 64))
(declare-fun temp10024_42 () (_ BitVec 64))
(declare-fun temp10024_43 () (_ BitVec 64))
(declare-fun temp10024_44 () (_ BitVec 64))
(declare-fun temp10024_45 () (_ BitVec 64))
(declare-fun temp10024_46 () (_ BitVec 64))
(declare-fun temp10024_47 () (_ BitVec 64))
(declare-fun temp10024_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10024_49 () (_ BitVec 64))
(declare-fun temp10024_50 () (_ BitVec 64))
(declare-fun temp10024_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10024_52 () (_ BitVec 64))
(declare-fun temp10024_53 () (_ BitVec 64))
(declare-fun temp10024_54 () (_ BitVec 64))
(declare-fun temp10024_55 () (_ BitVec 64))
(declare-fun temp10024_56 () (_ BitVec 64))
(declare-fun temp10024_57 () (_ BitVec 64))
(declare-fun temp10024_58 () (_ BitVec 64))
(declare-fun temp10024_59 () (_ BitVec 64))
(declare-fun temp10024_60 () (_ BitVec 64))
(declare-fun temp10024_61 () (_ BitVec 64))
(declare-fun temp10024_62 () (_ BitVec 64))
(declare-fun temp10024_63 () (_ BitVec 64))
(declare-fun temp10024_64 () (_ BitVec 64))
(declare-fun temp10024_65 () (_ BitVec 64))
(declare-fun temp10024_66 () (_ BitVec 64))
(declare-fun temp10024_67 () (_ BitVec 64))
(declare-fun temp10024_68 () (_ BitVec 64))
(declare-fun temp10024_69 () (_ BitVec 64))
(declare-fun temp10024_70 () (_ BitVec 64))
(declare-fun temp10024_71 () (_ BitVec 64))
(declare-fun temp10024_72 () (_ BitVec 64))
(declare-fun temp10024_73 () (_ BitVec 64))
(declare-fun temp10024_74 () (_ BitVec 64))
(declare-fun temp10024_75 () (_ BitVec 64))
(declare-fun temp10024_76 () (_ BitVec 64))
(declare-fun temp10024_77 () (_ BitVec 64))
(declare-fun temp10024_78 () (_ BitVec 64))
(declare-fun temp10024_79 () (_ BitVec 64))
(declare-fun temp10024_80 () (_ BitVec 64))
(declare-fun temp10024_81 () (_ BitVec 64))
(declare-fun temp10024_82 () (_ BitVec 64))
(declare-fun temp10024_83 () (_ BitVec 64))
(declare-fun temp10024_84 () (_ BitVec 64))
(declare-fun temp10024_85 () (_ BitVec 64))
(declare-fun temp10024_86 () (_ BitVec 64))
(declare-fun temp10024_87 () (_ BitVec 64))
(declare-fun temp10024_88 () (_ BitVec 64))
(declare-fun temp10024_89 () (_ BitVec 64))
(declare-fun temp10024_90 () (_ BitVec 64))
(declare-fun temp10024_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10024_92 () (_ BitVec 64))
(declare-fun temp10024_93 () (_ BitVec 64))
(declare-fun temp10024_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10024_95 () (_ BitVec 64))
(declare-fun temp10024_96 () (_ BitVec 64))
(declare-fun temp10024_97 () (_ BitVec 64))
(declare-fun temp10024_98 () (_ BitVec 64))
(declare-fun temp10024_99 () (_ BitVec 64))
(declare-fun temp10024_100 () (_ BitVec 64))
(declare-fun temp10024_101 () (_ BitVec 64))
(declare-fun temp10024_102 () (_ BitVec 64))
(declare-fun temp10024_103 () (_ BitVec 64))
(declare-fun temp10024_104 () (_ BitVec 64))
(declare-fun temp10024_105 () (_ BitVec 64))
(declare-fun temp10024_106 () (_ BitVec 64))
(declare-fun temp10024_107 () (_ BitVec 64))
(declare-fun temp10024_108 () (_ BitVec 64))
(declare-fun temp10024_109 () (_ BitVec 64))
(declare-fun temp10024_110 () (_ BitVec 64))
(declare-fun temp10024_111 () (_ BitVec 64))
(declare-fun temp10024_112 () (_ BitVec 64))
(declare-fun temp10024_113 () (_ BitVec 64))
(declare-fun temp10024_114 () (_ BitVec 64))
(declare-fun temp10024_115 () (_ BitVec 64))
(declare-fun temp10024_116 () (_ BitVec 64))
(declare-fun temp10024_117 () (_ BitVec 64))
(declare-fun temp10024_118 () (_ BitVec 64))
(declare-fun temp10024_119 () (_ BitVec 64))
(declare-fun temp10024_120 () (_ BitVec 64))
(declare-fun temp10024_121 () (_ BitVec 64))
(declare-fun temp10024_122 () (_ BitVec 64))
(declare-fun temp10024_123 () (_ BitVec 64))
(declare-fun temp10024_124 () (_ BitVec 64))
(declare-fun temp10024_125 () (_ BitVec 64))
(declare-fun temp10024_126 () (_ BitVec 64))
(declare-fun temp10024_127 () (_ BitVec 64))
(declare-fun temp10024_128 () (_ BitVec 64))
(declare-fun temp10024_129 () (_ BitVec 64))
(declare-fun temp10024_130 () (_ BitVec 64))
(declare-fun temp10024_131 () (_ BitVec 64))
(declare-fun temp10024_132 () (_ BitVec 64))
(declare-fun temp10024_133 () (_ BitVec 64))
(declare-fun temp10024_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10024_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10024_136 () (_ BitVec 64))
(declare-fun temp10024_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10024_138 () (_ BitVec 64))
(declare-fun temp10024_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10024_140 () (_ BitVec 64))
(declare-fun temp10024_141 () (_ BitVec 64))
(declare-fun temp10024_142 () (_ BitVec 64))
(declare-fun temp10024_143 () (_ BitVec 64))
(declare-fun temp10024_144 () (_ BitVec 64))
(declare-fun temp10024_145 () (_ BitVec 64))
(declare-fun temp10024_146 () (_ BitVec 64))
(declare-fun temp10024_147 () (_ BitVec 64))
(declare-fun temp10024_148 () (_ BitVec 64))
(declare-fun temp10024_149 () (_ BitVec 64))
(declare-fun temp10024_150 () (_ BitVec 64))
(declare-fun temp10024_151 () (_ BitVec 64))
(declare-fun temp10024_152 () (_ BitVec 64))
(declare-fun temp10024_153 () (_ BitVec 64))
(declare-fun temp10024_154 () (_ BitVec 64))
(declare-fun temp10024_155 () (_ BitVec 64))
(declare-fun temp10024_157 () (_ BitVec 64))
(declare-fun temp10024_158 () (_ BitVec 64))
(declare-fun temp10024_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10024_159 () (_ BitVec 64))
(declare-fun temp10024_160 () (_ BitVec 64))
(declare-fun temp10024_162 () (_ BitVec 64))
(declare-fun temp10024_163 () (_ BitVec 64))
(declare-fun temp10024_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10024_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10024_165 () (_ BitVec 64))
(declare-fun temp10024_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10024_167 () (_ BitVec 64))
(declare-fun temp10024_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10024_169 () (_ BitVec 64))
(declare-fun temp10024_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10024_171 () (_ BitVec 64))
(declare-fun temp10024_172 () (_ BitVec 64))
(declare-fun temp10024_173 () (_ BitVec 64))
(declare-fun temp10024_174 () (_ BitVec 64))
(declare-fun temp10024_175 () (_ BitVec 64))
(declare-fun temp10024_176 () (_ BitVec 64))
(declare-fun temp10024_177 () (_ BitVec 64))
(declare-fun temp10024_178 () (_ BitVec 64))
(declare-fun temp10024_179 () (_ BitVec 64))
(declare-fun temp10024_180 () (_ BitVec 64))
(declare-fun temp10024_181 () (_ BitVec 64))
(declare-fun temp10024_182 () (_ BitVec 64))
(declare-fun temp10024_183 () (_ BitVec 64))
(declare-fun temp10024_184 () (_ BitVec 64))
(declare-fun temp10024_185 () (_ BitVec 64))
(declare-fun temp10024_186 () (_ BitVec 64))
(declare-fun temp10024_187 () (_ BitVec 64))
(declare-fun temp10024_188 () (_ BitVec 64))
(declare-fun temp10024_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10024_190 () (_ BitVec 64))
(declare-fun temp10024_192 () (_ BitVec 64))
(declare-fun temp10024_193 () (_ BitVec 64))
(declare-fun temp10024_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10024_194 () (_ BitVec 64))
(declare-fun temp10024_195 () (_ BitVec 64))
(declare-fun temp10024_197 () (_ BitVec 64))
(declare-fun temp10024_198 () (_ BitVec 64))
(declare-fun temp10024_196 () (_ BitVec 64))
(declare-fun temp10024_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10024_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10024_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10024_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10024_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10024_204 () (_ BitVec 64))
(declare-fun temp10024_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10024_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10024_207 () (_ BitVec 64))
(declare-fun temp10024_208 () (_ BitVec 64))
(declare-fun temp10024_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10024_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10024_211 () (_ BitVec 64))
(declare-fun temp10024_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10024_213 () (_ BitVec 64))
(declare-fun temp10024_214 () (_ BitVec 64))
(declare-fun temp10024_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10024_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10024_217 () (_ BitVec 64))
(declare-fun temp10024_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10024_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10024_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10024_222 () (_ BitVec 64))
(declare-fun temp10024_221 () (_ BitVec 64))
(declare-fun temp10024_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10024_224 () (_ BitVec 64))
(declare-fun temp10024_225 () (_ BitVec 64))
(declare-fun temp10024_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10024_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10024_228 () (_ BitVec 64))
(declare-fun temp10024_230 () (_ BitVec 64))
(declare-fun temp10024_229 () (_ BitVec 64))
(declare-fun temp10024_231 () (_ BitVec 64))
(assert (= temp10024_1 #x0000000000000001))
(assert (= var77203 temp10024_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10024_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10024_2)))
(assert (= temp10024_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10024_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10024_4 #x0000000000000000))
(assert (= var210941 temp10024_4))
(assert (= temp10024_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10024_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10024_6 #x0000000000000000))
(assert (= var210986 temp10024_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10024_7 #x0000000000000000))
(assert (= temp10024_8 temp10024_7))
(assert (= temp10024_9 (select ARGNAME_padding_NAMEEND_VAL temp10024_8)))
(assert (= temp10024_10 #x0000000000000001))
(assert (= temp10024_11 temp10024_10))
(assert (= temp10024_12 (select ARGNAME_padding_NAMEEND_VAL temp10024_11)))
(assert (= temp10024_13 #x0000000000000002))
(assert (= temp10024_14 temp10024_13))
(assert (= temp10024_15 (select ARGNAME_padding_NAMEEND_VAL temp10024_14)))
(assert (= temp10024_16 #x0000000000000003))
(assert (= temp10024_17 temp10024_16))
(assert (= temp10024_18 (select ARGNAME_padding_NAMEEND_VAL temp10024_17)))
(assert (= temp10024_19 #x0000000000000004))
(assert (= temp10024_20 temp10024_19))
(assert (= temp10024_21 (select ARGNAME_padding_NAMEEND_VAL temp10024_20)))
(assert (= temp10024_22 #x0000000000000005))
(assert (= temp10024_23 temp10024_22))
(assert (= temp10024_24 (select ARGNAME_padding_NAMEEND_VAL temp10024_23)))
(assert (= temp10024_25 #x0000000000000000))
(assert (= temp10024_26 #x0000000000000000))
(assert (= temp10024_27 temp10024_26))
(assert (= temp10024_28 (select ARGNAME_padding_NAMEEND_VAL temp10024_27)))
(assert (= temp10024_29 #x0000000000000000))
(assert (= temp10024_30 #x0000000000000001))
(assert (= temp10024_31 temp10024_30))
(assert (= temp10024_32 (select ARGNAME_padding_NAMEEND_VAL temp10024_31)))
(assert (= temp10024_33 #x0000000000000000))
(assert (= temp10024_34 #x0000000000000002))
(assert (= temp10024_35 temp10024_34))
(assert (= temp10024_36 (select ARGNAME_padding_NAMEEND_VAL temp10024_35)))
(assert (= temp10024_37 #x0000000000000000))
(assert (= temp10024_38 #x0000000000000003))
(assert (= temp10024_39 temp10024_38))
(assert (= temp10024_40 (select ARGNAME_padding_NAMEEND_VAL temp10024_39)))
(assert (= temp10024_41 #x0000000000000000))
(assert (= temp10024_42 #x0000000000000004))
(assert (= temp10024_43 temp10024_42))
(assert (= temp10024_44 (select ARGNAME_padding_NAMEEND_VAL temp10024_43)))
(assert (= temp10024_45 #x0000000000000000))
(assert (= temp10024_46 #x0000000000000005))
(assert (= temp10024_47 temp10024_46))
(assert (= temp10024_48 (select ARGNAME_padding_NAMEEND_VAL temp10024_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10024_28 temp10024_25)
             (bvslt temp10024_32 temp10024_29)
             (bvslt temp10024_36 temp10024_33)
             (bvslt temp10024_40 temp10024_37)
             (bvslt temp10024_44 temp10024_41)
             (bvslt temp10024_48 temp10024_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10024_49 #x0000000000000000))
(assert (= var1191714 temp10024_49))
(assert (= temp10024_50 #x0000000000000000))
(assert (= temp10024_51 temp10024_50))
(assert (= temp10024_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10024_51)))
(assert (= temp10024_53 #x0000000000000001))
(assert (= temp10024_54 temp10024_53))
(assert (= temp10024_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10024_54)))
(assert (= temp10024_56 #x0000000000000002))
(assert (= temp10024_57 temp10024_56))
(assert (= temp10024_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10024_57)))
(assert (= temp10024_59 #x0000000000000003))
(assert (= temp10024_60 temp10024_59))
(assert (= temp10024_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10024_60)))
(assert (= temp10024_62 #x0000000000000004))
(assert (= temp10024_63 temp10024_62))
(assert (= temp10024_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10024_63)))
(assert (= temp10024_65 #x0000000000000005))
(assert (= temp10024_66 temp10024_65))
(assert (= temp10024_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10024_66)))
(assert (= temp10024_68 #x0000000000000000))
(assert (= temp10024_69 #x0000000000000000))
(assert (= temp10024_70 temp10024_69))
(assert (= temp10024_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10024_70)))
(assert (= temp10024_72 #x0000000000000000))
(assert (= temp10024_73 #x0000000000000001))
(assert (= temp10024_74 temp10024_73))
(assert (= temp10024_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10024_74)))
(assert (= temp10024_76 #x0000000000000000))
(assert (= temp10024_77 #x0000000000000002))
(assert (= temp10024_78 temp10024_77))
(assert (= temp10024_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10024_78)))
(assert (= temp10024_80 #x0000000000000000))
(assert (= temp10024_81 #x0000000000000003))
(assert (= temp10024_82 temp10024_81))
(assert (= temp10024_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10024_82)))
(assert (= temp10024_84 #x0000000000000000))
(assert (= temp10024_85 #x0000000000000004))
(assert (= temp10024_86 temp10024_85))
(assert (= temp10024_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10024_86)))
(assert (= temp10024_88 #x0000000000000000))
(assert (= temp10024_89 #x0000000000000005))
(assert (= temp10024_90 temp10024_89))
(assert (= temp10024_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10024_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10024_71 temp10024_68)
             (bvslt temp10024_75 temp10024_72)
             (bvslt temp10024_79 temp10024_76)
             (bvslt temp10024_83 temp10024_80)
             (bvslt temp10024_87 temp10024_84)
             (bvslt temp10024_91 temp10024_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10024_92 #x0000000000000000))
(assert (= var1191725 temp10024_92))
(assert (= temp10024_93 #x0000000000000000))
(assert (= temp10024_94 temp10024_93))
(assert (= temp10024_95 (select ARGNAME_stride_NAMEEND_VAL temp10024_94)))
(assert (= temp10024_96 #x0000000000000001))
(assert (= temp10024_97 temp10024_96))
(assert (= temp10024_98 (select ARGNAME_stride_NAMEEND_VAL temp10024_97)))
(assert (= temp10024_99 #x0000000000000002))
(assert (= temp10024_100 temp10024_99))
(assert (= temp10024_101 (select ARGNAME_stride_NAMEEND_VAL temp10024_100)))
(assert (= temp10024_102 #x0000000000000003))
(assert (= temp10024_103 temp10024_102))
(assert (= temp10024_104 (select ARGNAME_stride_NAMEEND_VAL temp10024_103)))
(assert (= temp10024_105 #x0000000000000004))
(assert (= temp10024_106 temp10024_105))
(assert (= temp10024_107 (select ARGNAME_stride_NAMEEND_VAL temp10024_106)))
(assert (= temp10024_108 #x0000000000000005))
(assert (= temp10024_109 temp10024_108))
(assert (= temp10024_110 (select ARGNAME_stride_NAMEEND_VAL temp10024_109)))
(assert (= temp10024_111 #x0000000000000000))
(assert (= temp10024_112 #x0000000000000000))
(assert (= temp10024_113 temp10024_112))
(assert (= temp10024_114 (select ARGNAME_stride_NAMEEND_VAL temp10024_113)))
(assert (= temp10024_115 #x0000000000000000))
(assert (= temp10024_116 #x0000000000000001))
(assert (= temp10024_117 temp10024_116))
(assert (= temp10024_118 (select ARGNAME_stride_NAMEEND_VAL temp10024_117)))
(assert (= temp10024_119 #x0000000000000000))
(assert (= temp10024_120 #x0000000000000002))
(assert (= temp10024_121 temp10024_120))
(assert (= temp10024_122 (select ARGNAME_stride_NAMEEND_VAL temp10024_121)))
(assert (= temp10024_123 #x0000000000000000))
(assert (= temp10024_124 #x0000000000000003))
(assert (= temp10024_125 temp10024_124))
(assert (= temp10024_126 (select ARGNAME_stride_NAMEEND_VAL temp10024_125)))
(assert (= temp10024_127 #x0000000000000000))
(assert (= temp10024_128 #x0000000000000004))
(assert (= temp10024_129 temp10024_128))
(assert (= temp10024_130 (select ARGNAME_stride_NAMEEND_VAL temp10024_129)))
(assert (= temp10024_131 #x0000000000000000))
(assert (= temp10024_132 #x0000000000000005))
(assert (= temp10024_133 temp10024_132))
(assert (= temp10024_134 (select ARGNAME_stride_NAMEEND_VAL temp10024_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10024_114 temp10024_111)
             (bvsle temp10024_118 temp10024_115)
             (bvsle temp10024_122 temp10024_119)
             (bvsle temp10024_126 temp10024_123)
             (bvsle temp10024_130 temp10024_127)
             (bvsle temp10024_134 temp10024_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10024_135 #x0000000000000000))
(assert (= var1191735 temp10024_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10024_136 #x0000000000000001))
(assert (= var1191747 temp10024_136))
(assert (= temp10024_137 #x0000000000000000))
(assert (= var1179826 temp10024_137))
(assert (= temp10024_138 #x0000000000000000))
(assert (= temp10024_139 temp10024_138))
(assert (= temp10024_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10024_139)))
(assert (= temp10024_141 #x0000000000000001))
(assert (= temp10024_142 temp10024_141))
(assert (= temp10024_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10024_142)))
(assert (= temp10024_144 #x0000000000000002))
(assert (= temp10024_145 temp10024_144))
(assert (= temp10024_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10024_145)))
(assert (= temp10024_147 #x0000000000000003))
(assert (= temp10024_148 temp10024_147))
(assert (= temp10024_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10024_148)))
(assert (= temp10024_150 #x0000000000000004))
(assert (= temp10024_151 temp10024_150))
(assert (= temp10024_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10024_151)))
(assert (= temp10024_153 #x0000000000000005))
(assert (= temp10024_154 temp10024_153))
(assert (= temp10024_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10024_154)))
(assert (= temp10024_157 var1179826))
(assert (= temp10024_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10024_157)))
(assert (= temp10024_156 temp10024_158))
(assert (= var1191780
   (ite (bvslt temp10024_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10024_159 #x0000000000000000))
(assert (= var1191780 temp10024_159))
(assert (= temp10024_160 #x0000000000000000))
(assert (= var1179826 temp10024_160))
(assert (= temp10024_162 var1179826))
(assert (= temp10024_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10024_162)))
(assert (= temp10024_161 temp10024_163))
(assert (= var1191802 (bvsmod temp10024_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10024_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10024_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10024_165 #x0000000000000001))
(assert (= var1191803 temp10024_165))
(assert (= temp10024_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10024_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10024_167 #x0000000000000001))
(assert (= var1191823 temp10024_167))
(assert (= temp10024_168 #x0000000000000001))
(assert (= var1180714 temp10024_168))
(assert (= temp10024_169 #x0000000000000000))
(assert (= temp10024_170 temp10024_169))
(assert (= temp10024_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10024_170)))
(assert (= temp10024_172 #x0000000000000001))
(assert (= temp10024_173 temp10024_172))
(assert (= temp10024_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10024_173)))
(assert (= temp10024_175 #x0000000000000002))
(assert (= temp10024_176 temp10024_175))
(assert (= temp10024_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10024_176)))
(assert (= temp10024_178 #x0000000000000003))
(assert (= temp10024_179 temp10024_178))
(assert (= temp10024_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10024_179)))
(assert (= temp10024_181 #x0000000000000004))
(assert (= temp10024_182 temp10024_181))
(assert (= temp10024_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10024_182)))
(assert (= temp10024_184 #x0000000000000005))
(assert (= temp10024_185 temp10024_184))
(assert (= temp10024_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10024_185)))
(assert (= temp10024_187 #x0000000000000000))
(assert (= temp10024_188
   (ite (bvslt var1180714 temp10024_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10024_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10024_188)))
(assert (= var1191831 temp10024_189))
(assert (bvslt (ite (bvslt var1180714 temp10024_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10024_190 #x0000000000000001))
(assert (= var1180714 temp10024_190))
(assert (= temp10024_192 var1180714))
(assert (= temp10024_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10024_192)))
(assert (= temp10024_191 temp10024_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10024_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10024_194 #x0000000000000001))
(assert (= var1191836 temp10024_194))
(assert (= temp10024_195 #x0000000000000000))
(assert (= var1179826 temp10024_195))
(assert (= temp10024_197 var1179826))
(assert (= temp10024_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10024_197)))
(assert (= temp10024_196 temp10024_198))
(assert (= temp10024_199 #x0000000000000002))
(assert (= var1586025 temp10024_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10024_200 #x0000000000000001))
(assert (= var1191993 temp10024_200))
(assert (= temp10024_201 #x0000000000000001))
(assert (= var2700303 temp10024_201))
(assert (= temp10024_202 #x0000000000000001))
(assert (= var2962447 temp10024_202))
(assert (= temp10024_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10024_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10024_204 #x0000000000000001))
(assert (= var211058 temp10024_204))
(assert (= temp10024_205 #x0000000000000001))
(assert (= var211188 temp10024_205))
(assert (= var3879401 var211188))
(assert (= temp10024_206 #x0000000000000000))
(assert (= var3866802 temp10024_206))
(assert (= temp10024_207 #x0000000000000000))
(assert (= temp10024_208
   (ite (bvslt var3866802 temp10024_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10024_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10024_208)))
(assert (= var3879420 temp10024_209))
(assert (bvslt (ite (bvslt var3866802 temp10024_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10024_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10024_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10024_211 #x0000000000000000))
(assert (= var3879421 temp10024_211))
(assert (= temp10024_212 #x0000000000000001))
(assert (= var3867690 temp10024_212))
(assert (= temp10024_213 #x0000000000000000))
(assert (= temp10024_214
   (ite (bvslt var3867690 temp10024_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10024_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10024_214)))
(assert (= var3879423 temp10024_215))
(assert (bvslt (ite (bvslt var3867690 temp10024_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10024_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10024_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10024_217 #x0000000000000001))
(assert (= var3879424 temp10024_217))
(assert (= temp10024_218 #x0000000000000000))
(assert (= var4079423 temp10024_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10024_219 #x0000000000000002))
(assert (= var4208259 temp10024_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10024_220 #x0000000000000000))
(assert (= var4273820 temp10024_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10024_222 #xffffffffffffffff))
(assert (= temp10024_221 temp10024_222))
(assert (= temp10024_223 #x0000000000000001))
(assert (= var197674 temp10024_223))
(assert (= temp10024_224 #x0000000000000000))
(assert (= temp10024_225
   (ite (bvslt var197674 temp10024_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10024_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10024_225)))
(assert (= var211595 temp10024_226))
(assert (bvslt (ite (bvslt var197674 temp10024_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10024_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10024_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10024_228 #x0000000000000001))
(assert (= var211596 temp10024_228))
(assert (= temp10024_230 #xffffffffffffffff))
(assert (= temp10024_229 temp10024_230))
(assert (= temp10024_231 #x0000000000000001))
(assert (= var211058 temp10024_231))
(model-add temp10024_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10024_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10024_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10024_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




