(declare-fun temp890_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp890_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp890_3 () (_ BitVec 64))
(declare-fun temp890_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp890_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp890_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp890_7 () (_ BitVec 64))
(declare-fun temp890_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp890_9 () (_ BitVec 64))
(declare-fun temp890_10 () (_ BitVec 64))
(declare-fun temp890_11 () (_ BitVec 64))
(declare-fun temp890_12 () (_ BitVec 64))
(declare-fun temp890_13 () (_ BitVec 64))
(declare-fun temp890_14 () (_ BitVec 64))
(declare-fun temp890_15 () (_ BitVec 64))
(declare-fun temp890_16 () (_ BitVec 64))
(declare-fun temp890_17 () (_ BitVec 64))
(declare-fun temp890_18 () (_ BitVec 64))
(declare-fun temp890_19 () (_ BitVec 64))
(declare-fun temp890_20 () (_ BitVec 64))
(declare-fun temp890_21 () (_ BitVec 64))
(declare-fun temp890_22 () (_ BitVec 64))
(declare-fun temp890_23 () (_ BitVec 64))
(declare-fun temp890_24 () (_ BitVec 64))
(declare-fun temp890_25 () (_ BitVec 64))
(declare-fun temp890_26 () (_ BitVec 64))
(declare-fun temp890_27 () (_ BitVec 64))
(declare-fun temp890_28 () (_ BitVec 64))
(declare-fun temp890_29 () (_ BitVec 64))
(declare-fun temp890_30 () (_ BitVec 64))
(declare-fun temp890_31 () (_ BitVec 64))
(declare-fun temp890_32 () (_ BitVec 64))
(declare-fun temp890_33 () (_ BitVec 64))
(declare-fun temp890_34 () (_ BitVec 64))
(declare-fun temp890_35 () (_ BitVec 64))
(declare-fun temp890_36 () (_ BitVec 64))
(declare-fun temp890_37 () (_ BitVec 64))
(declare-fun temp890_38 () (_ BitVec 64))
(declare-fun temp890_39 () (_ BitVec 64))
(declare-fun temp890_40 () (_ BitVec 64))
(declare-fun temp890_41 () (_ BitVec 64))
(declare-fun temp890_42 () (_ BitVec 64))
(declare-fun temp890_43 () (_ BitVec 64))
(declare-fun temp890_44 () (_ BitVec 64))
(declare-fun temp890_45 () (_ BitVec 64))
(declare-fun temp890_46 () (_ BitVec 64))
(declare-fun temp890_47 () (_ BitVec 64))
(declare-fun temp890_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp890_49 () (_ BitVec 64))
(declare-fun temp890_50 () (_ BitVec 64))
(declare-fun temp890_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp890_52 () (_ BitVec 64))
(declare-fun temp890_53 () (_ BitVec 64))
(declare-fun temp890_54 () (_ BitVec 64))
(declare-fun temp890_55 () (_ BitVec 64))
(declare-fun temp890_56 () (_ BitVec 64))
(declare-fun temp890_57 () (_ BitVec 64))
(declare-fun temp890_58 () (_ BitVec 64))
(declare-fun temp890_59 () (_ BitVec 64))
(declare-fun temp890_60 () (_ BitVec 64))
(declare-fun temp890_61 () (_ BitVec 64))
(declare-fun temp890_62 () (_ BitVec 64))
(declare-fun temp890_63 () (_ BitVec 64))
(declare-fun temp890_64 () (_ BitVec 64))
(declare-fun temp890_65 () (_ BitVec 64))
(declare-fun temp890_66 () (_ BitVec 64))
(declare-fun temp890_67 () (_ BitVec 64))
(declare-fun temp890_68 () (_ BitVec 64))
(declare-fun temp890_69 () (_ BitVec 64))
(declare-fun temp890_70 () (_ BitVec 64))
(declare-fun temp890_71 () (_ BitVec 64))
(declare-fun temp890_72 () (_ BitVec 64))
(declare-fun temp890_73 () (_ BitVec 64))
(declare-fun temp890_74 () (_ BitVec 64))
(declare-fun temp890_75 () (_ BitVec 64))
(declare-fun temp890_76 () (_ BitVec 64))
(declare-fun temp890_77 () (_ BitVec 64))
(declare-fun temp890_78 () (_ BitVec 64))
(declare-fun temp890_79 () (_ BitVec 64))
(declare-fun temp890_80 () (_ BitVec 64))
(declare-fun temp890_81 () (_ BitVec 64))
(declare-fun temp890_82 () (_ BitVec 64))
(declare-fun temp890_83 () (_ BitVec 64))
(declare-fun temp890_84 () (_ BitVec 64))
(declare-fun temp890_85 () (_ BitVec 64))
(declare-fun temp890_86 () (_ BitVec 64))
(declare-fun temp890_87 () (_ BitVec 64))
(declare-fun temp890_88 () (_ BitVec 64))
(declare-fun temp890_89 () (_ BitVec 64))
(declare-fun temp890_90 () (_ BitVec 64))
(declare-fun temp890_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp890_92 () (_ BitVec 64))
(declare-fun temp890_93 () (_ BitVec 64))
(declare-fun temp890_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp890_95 () (_ BitVec 64))
(declare-fun temp890_96 () (_ BitVec 64))
(declare-fun temp890_97 () (_ BitVec 64))
(declare-fun temp890_98 () (_ BitVec 64))
(declare-fun temp890_99 () (_ BitVec 64))
(declare-fun temp890_100 () (_ BitVec 64))
(declare-fun temp890_101 () (_ BitVec 64))
(declare-fun temp890_102 () (_ BitVec 64))
(declare-fun temp890_103 () (_ BitVec 64))
(declare-fun temp890_104 () (_ BitVec 64))
(declare-fun temp890_105 () (_ BitVec 64))
(declare-fun temp890_106 () (_ BitVec 64))
(declare-fun temp890_107 () (_ BitVec 64))
(declare-fun temp890_108 () (_ BitVec 64))
(declare-fun temp890_109 () (_ BitVec 64))
(declare-fun temp890_110 () (_ BitVec 64))
(declare-fun temp890_111 () (_ BitVec 64))
(declare-fun temp890_112 () (_ BitVec 64))
(declare-fun temp890_113 () (_ BitVec 64))
(declare-fun temp890_114 () (_ BitVec 64))
(declare-fun temp890_115 () (_ BitVec 64))
(declare-fun temp890_116 () (_ BitVec 64))
(declare-fun temp890_117 () (_ BitVec 64))
(declare-fun temp890_118 () (_ BitVec 64))
(declare-fun temp890_119 () (_ BitVec 64))
(declare-fun temp890_120 () (_ BitVec 64))
(declare-fun temp890_121 () (_ BitVec 64))
(declare-fun temp890_122 () (_ BitVec 64))
(declare-fun temp890_123 () (_ BitVec 64))
(declare-fun temp890_124 () (_ BitVec 64))
(declare-fun temp890_125 () (_ BitVec 64))
(declare-fun temp890_126 () (_ BitVec 64))
(declare-fun temp890_127 () (_ BitVec 64))
(declare-fun temp890_128 () (_ BitVec 64))
(declare-fun temp890_129 () (_ BitVec 64))
(declare-fun temp890_130 () (_ BitVec 64))
(declare-fun temp890_131 () (_ BitVec 64))
(declare-fun temp890_132 () (_ BitVec 64))
(declare-fun temp890_133 () (_ BitVec 64))
(declare-fun temp890_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp890_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp890_136 () (_ BitVec 64))
(declare-fun temp890_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp890_138 () (_ BitVec 64))
(declare-fun temp890_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp890_140 () (_ BitVec 64))
(declare-fun temp890_141 () (_ BitVec 64))
(declare-fun temp890_142 () (_ BitVec 64))
(declare-fun temp890_143 () (_ BitVec 64))
(declare-fun temp890_144 () (_ BitVec 64))
(declare-fun temp890_145 () (_ BitVec 64))
(declare-fun temp890_146 () (_ BitVec 64))
(declare-fun temp890_147 () (_ BitVec 64))
(declare-fun temp890_148 () (_ BitVec 64))
(declare-fun temp890_149 () (_ BitVec 64))
(declare-fun temp890_150 () (_ BitVec 64))
(declare-fun temp890_151 () (_ BitVec 64))
(declare-fun temp890_152 () (_ BitVec 64))
(declare-fun temp890_153 () (_ BitVec 64))
(declare-fun temp890_154 () (_ BitVec 64))
(declare-fun temp890_155 () (_ BitVec 64))
(declare-fun temp890_157 () (_ BitVec 64))
(declare-fun temp890_158 () (_ BitVec 64))
(declare-fun temp890_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp890_159 () (_ BitVec 64))
(declare-fun temp890_160 () (_ BitVec 64))
(declare-fun temp890_162 () (_ BitVec 64))
(declare-fun temp890_163 () (_ BitVec 64))
(declare-fun temp890_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp890_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp890_165 () (_ BitVec 64))
(declare-fun temp890_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp890_167 () (_ BitVec 64))
(declare-fun temp890_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp890_169 () (_ BitVec 64))
(declare-fun temp890_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp890_171 () (_ BitVec 64))
(declare-fun temp890_172 () (_ BitVec 64))
(declare-fun temp890_173 () (_ BitVec 64))
(declare-fun temp890_174 () (_ BitVec 64))
(declare-fun temp890_175 () (_ BitVec 64))
(declare-fun temp890_176 () (_ BitVec 64))
(declare-fun temp890_177 () (_ BitVec 64))
(declare-fun temp890_178 () (_ BitVec 64))
(declare-fun temp890_179 () (_ BitVec 64))
(declare-fun temp890_180 () (_ BitVec 64))
(declare-fun temp890_181 () (_ BitVec 64))
(declare-fun temp890_182 () (_ BitVec 64))
(declare-fun temp890_183 () (_ BitVec 64))
(declare-fun temp890_184 () (_ BitVec 64))
(declare-fun temp890_185 () (_ BitVec 64))
(declare-fun temp890_186 () (_ BitVec 64))
(declare-fun temp890_187 () (_ BitVec 64))
(declare-fun temp890_188 () (_ BitVec 64))
(declare-fun temp890_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp890_190 () (_ BitVec 64))
(declare-fun temp890_192 () (_ BitVec 64))
(declare-fun temp890_193 () (_ BitVec 64))
(declare-fun temp890_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp890_194 () (_ BitVec 64))
(declare-fun temp890_195 () (_ BitVec 64))
(declare-fun temp890_197 () (_ BitVec 64))
(declare-fun temp890_198 () (_ BitVec 64))
(declare-fun temp890_196 () (_ BitVec 64))
(declare-fun temp890_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp890_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp890_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp890_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp890_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp890_204 () (_ BitVec 64))
(declare-fun temp890_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp890_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp890_207 () (_ BitVec 64))
(declare-fun temp890_208 () (_ BitVec 64))
(declare-fun temp890_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp890_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp890_211 () (_ BitVec 64))
(declare-fun temp890_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp890_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp890_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp890_215 () (_ BitVec 64))
(assert (= temp890_1 #x0000000000000001))
(assert (= var77203 temp890_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp890_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp890_2)))
(assert (= temp890_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp890_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_4 #x0000000000000000))
(assert (= var210941 temp890_4))
(assert (= temp890_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp890_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_6 #x0000000000000000))
(assert (= var210986 temp890_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp890_7 #x0000000000000000))
(assert (= temp890_8 temp890_7))
(assert (= temp890_9 (select ARGNAME_padding_NAMEEND_VAL temp890_8)))
(assert (= temp890_10 #x0000000000000001))
(assert (= temp890_11 temp890_10))
(assert (= temp890_12 (select ARGNAME_padding_NAMEEND_VAL temp890_11)))
(assert (= temp890_13 #x0000000000000002))
(assert (= temp890_14 temp890_13))
(assert (= temp890_15 (select ARGNAME_padding_NAMEEND_VAL temp890_14)))
(assert (= temp890_16 #x0000000000000003))
(assert (= temp890_17 temp890_16))
(assert (= temp890_18 (select ARGNAME_padding_NAMEEND_VAL temp890_17)))
(assert (= temp890_19 #x0000000000000004))
(assert (= temp890_20 temp890_19))
(assert (= temp890_21 (select ARGNAME_padding_NAMEEND_VAL temp890_20)))
(assert (= temp890_22 #x0000000000000005))
(assert (= temp890_23 temp890_22))
(assert (= temp890_24 (select ARGNAME_padding_NAMEEND_VAL temp890_23)))
(assert (= temp890_25 #x0000000000000000))
(assert (= temp890_26 #x0000000000000000))
(assert (= temp890_27 temp890_26))
(assert (= temp890_28 (select ARGNAME_padding_NAMEEND_VAL temp890_27)))
(assert (= temp890_29 #x0000000000000000))
(assert (= temp890_30 #x0000000000000001))
(assert (= temp890_31 temp890_30))
(assert (= temp890_32 (select ARGNAME_padding_NAMEEND_VAL temp890_31)))
(assert (= temp890_33 #x0000000000000000))
(assert (= temp890_34 #x0000000000000002))
(assert (= temp890_35 temp890_34))
(assert (= temp890_36 (select ARGNAME_padding_NAMEEND_VAL temp890_35)))
(assert (= temp890_37 #x0000000000000000))
(assert (= temp890_38 #x0000000000000003))
(assert (= temp890_39 temp890_38))
(assert (= temp890_40 (select ARGNAME_padding_NAMEEND_VAL temp890_39)))
(assert (= temp890_41 #x0000000000000000))
(assert (= temp890_42 #x0000000000000004))
(assert (= temp890_43 temp890_42))
(assert (= temp890_44 (select ARGNAME_padding_NAMEEND_VAL temp890_43)))
(assert (= temp890_45 #x0000000000000000))
(assert (= temp890_46 #x0000000000000005))
(assert (= temp890_47 temp890_46))
(assert (= temp890_48 (select ARGNAME_padding_NAMEEND_VAL temp890_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp890_28 temp890_25)
             (bvslt temp890_32 temp890_29)
             (bvslt temp890_36 temp890_33)
             (bvslt temp890_40 temp890_37)
             (bvslt temp890_44 temp890_41)
             (bvslt temp890_48 temp890_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_49 #x0000000000000000))
(assert (= var1191714 temp890_49))
(assert (= temp890_50 #x0000000000000000))
(assert (= temp890_51 temp890_50))
(assert (= temp890_52 (select ARGNAME_output_padding_NAMEEND_VAL temp890_51)))
(assert (= temp890_53 #x0000000000000001))
(assert (= temp890_54 temp890_53))
(assert (= temp890_55 (select ARGNAME_output_padding_NAMEEND_VAL temp890_54)))
(assert (= temp890_56 #x0000000000000002))
(assert (= temp890_57 temp890_56))
(assert (= temp890_58 (select ARGNAME_output_padding_NAMEEND_VAL temp890_57)))
(assert (= temp890_59 #x0000000000000003))
(assert (= temp890_60 temp890_59))
(assert (= temp890_61 (select ARGNAME_output_padding_NAMEEND_VAL temp890_60)))
(assert (= temp890_62 #x0000000000000004))
(assert (= temp890_63 temp890_62))
(assert (= temp890_64 (select ARGNAME_output_padding_NAMEEND_VAL temp890_63)))
(assert (= temp890_65 #x0000000000000005))
(assert (= temp890_66 temp890_65))
(assert (= temp890_67 (select ARGNAME_output_padding_NAMEEND_VAL temp890_66)))
(assert (= temp890_68 #x0000000000000000))
(assert (= temp890_69 #x0000000000000000))
(assert (= temp890_70 temp890_69))
(assert (= temp890_71 (select ARGNAME_output_padding_NAMEEND_VAL temp890_70)))
(assert (= temp890_72 #x0000000000000000))
(assert (= temp890_73 #x0000000000000001))
(assert (= temp890_74 temp890_73))
(assert (= temp890_75 (select ARGNAME_output_padding_NAMEEND_VAL temp890_74)))
(assert (= temp890_76 #x0000000000000000))
(assert (= temp890_77 #x0000000000000002))
(assert (= temp890_78 temp890_77))
(assert (= temp890_79 (select ARGNAME_output_padding_NAMEEND_VAL temp890_78)))
(assert (= temp890_80 #x0000000000000000))
(assert (= temp890_81 #x0000000000000003))
(assert (= temp890_82 temp890_81))
(assert (= temp890_83 (select ARGNAME_output_padding_NAMEEND_VAL temp890_82)))
(assert (= temp890_84 #x0000000000000000))
(assert (= temp890_85 #x0000000000000004))
(assert (= temp890_86 temp890_85))
(assert (= temp890_87 (select ARGNAME_output_padding_NAMEEND_VAL temp890_86)))
(assert (= temp890_88 #x0000000000000000))
(assert (= temp890_89 #x0000000000000005))
(assert (= temp890_90 temp890_89))
(assert (= temp890_91 (select ARGNAME_output_padding_NAMEEND_VAL temp890_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp890_71 temp890_68)
             (bvslt temp890_75 temp890_72)
             (bvslt temp890_79 temp890_76)
             (bvslt temp890_83 temp890_80)
             (bvslt temp890_87 temp890_84)
             (bvslt temp890_91 temp890_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_92 #x0000000000000000))
(assert (= var1191725 temp890_92))
(assert (= temp890_93 #x0000000000000000))
(assert (= temp890_94 temp890_93))
(assert (= temp890_95 (select ARGNAME_stride_NAMEEND_VAL temp890_94)))
(assert (= temp890_96 #x0000000000000001))
(assert (= temp890_97 temp890_96))
(assert (= temp890_98 (select ARGNAME_stride_NAMEEND_VAL temp890_97)))
(assert (= temp890_99 #x0000000000000002))
(assert (= temp890_100 temp890_99))
(assert (= temp890_101 (select ARGNAME_stride_NAMEEND_VAL temp890_100)))
(assert (= temp890_102 #x0000000000000003))
(assert (= temp890_103 temp890_102))
(assert (= temp890_104 (select ARGNAME_stride_NAMEEND_VAL temp890_103)))
(assert (= temp890_105 #x0000000000000004))
(assert (= temp890_106 temp890_105))
(assert (= temp890_107 (select ARGNAME_stride_NAMEEND_VAL temp890_106)))
(assert (= temp890_108 #x0000000000000005))
(assert (= temp890_109 temp890_108))
(assert (= temp890_110 (select ARGNAME_stride_NAMEEND_VAL temp890_109)))
(assert (= temp890_111 #x0000000000000000))
(assert (= temp890_112 #x0000000000000000))
(assert (= temp890_113 temp890_112))
(assert (= temp890_114 (select ARGNAME_stride_NAMEEND_VAL temp890_113)))
(assert (= temp890_115 #x0000000000000000))
(assert (= temp890_116 #x0000000000000001))
(assert (= temp890_117 temp890_116))
(assert (= temp890_118 (select ARGNAME_stride_NAMEEND_VAL temp890_117)))
(assert (= temp890_119 #x0000000000000000))
(assert (= temp890_120 #x0000000000000002))
(assert (= temp890_121 temp890_120))
(assert (= temp890_122 (select ARGNAME_stride_NAMEEND_VAL temp890_121)))
(assert (= temp890_123 #x0000000000000000))
(assert (= temp890_124 #x0000000000000003))
(assert (= temp890_125 temp890_124))
(assert (= temp890_126 (select ARGNAME_stride_NAMEEND_VAL temp890_125)))
(assert (= temp890_127 #x0000000000000000))
(assert (= temp890_128 #x0000000000000004))
(assert (= temp890_129 temp890_128))
(assert (= temp890_130 (select ARGNAME_stride_NAMEEND_VAL temp890_129)))
(assert (= temp890_131 #x0000000000000000))
(assert (= temp890_132 #x0000000000000005))
(assert (= temp890_133 temp890_132))
(assert (= temp890_134 (select ARGNAME_stride_NAMEEND_VAL temp890_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp890_114 temp890_111)
             (bvsle temp890_118 temp890_115)
             (bvsle temp890_122 temp890_119)
             (bvsle temp890_126 temp890_123)
             (bvsle temp890_130 temp890_127)
             (bvsle temp890_134 temp890_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_135 #x0000000000000000))
(assert (= var1191735 temp890_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_136 #x0000000000000001))
(assert (= var1191747 temp890_136))
(assert (= temp890_137 #x0000000000000000))
(assert (= var1179826 temp890_137))
(assert (= temp890_138 #x0000000000000000))
(assert (= temp890_139 temp890_138))
(assert (= temp890_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_139)))
(assert (= temp890_141 #x0000000000000001))
(assert (= temp890_142 temp890_141))
(assert (= temp890_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_142)))
(assert (= temp890_144 #x0000000000000002))
(assert (= temp890_145 temp890_144))
(assert (= temp890_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_145)))
(assert (= temp890_147 #x0000000000000003))
(assert (= temp890_148 temp890_147))
(assert (= temp890_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_148)))
(assert (= temp890_150 #x0000000000000004))
(assert (= temp890_151 temp890_150))
(assert (= temp890_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_151)))
(assert (= temp890_153 #x0000000000000005))
(assert (= temp890_154 temp890_153))
(assert (= temp890_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_154)))
(assert (= temp890_157 var1179826))
(assert (= temp890_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_157)))
(assert (= temp890_156 temp890_158))
(assert (= var1191780
   (ite (bvslt temp890_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_159 #x0000000000000000))
(assert (= var1191780 temp890_159))
(assert (= temp890_160 #x0000000000000000))
(assert (= var1179826 temp890_160))
(assert (= temp890_162 var1179826))
(assert (= temp890_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_162)))
(assert (= temp890_161 temp890_163))
(assert (= var1191802 (bvsmod temp890_161 ARGNAME_groups_NAMEEND)))
(assert (= temp890_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp890_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp890_165 #x0000000000000001))
(assert (= var1191803 temp890_165))
(assert (= temp890_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp890_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_167 #x0000000000000001))
(assert (= var1191823 temp890_167))
(assert (= temp890_168 #x0000000000000001))
(assert (= var1180714 temp890_168))
(assert (= temp890_169 #x0000000000000000))
(assert (= temp890_170 temp890_169))
(assert (= temp890_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp890_170)))
(assert (= temp890_172 #x0000000000000001))
(assert (= temp890_173 temp890_172))
(assert (= temp890_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp890_173)))
(assert (= temp890_175 #x0000000000000002))
(assert (= temp890_176 temp890_175))
(assert (= temp890_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp890_176)))
(assert (= temp890_178 #x0000000000000003))
(assert (= temp890_179 temp890_178))
(assert (= temp890_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp890_179)))
(assert (= temp890_181 #x0000000000000004))
(assert (= temp890_182 temp890_181))
(assert (= temp890_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp890_182)))
(assert (= temp890_184 #x0000000000000005))
(assert (= temp890_185 temp890_184))
(assert (= temp890_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp890_185)))
(assert (= temp890_187 #x0000000000000000))
(assert (= temp890_188
   (ite (bvslt var1180714 temp890_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp890_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp890_188)))
(assert (= var1191831 temp890_189))
(assert (bvslt (ite (bvslt var1180714 temp890_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp890_190 #x0000000000000001))
(assert (= var1180714 temp890_190))
(assert (= temp890_192 var1180714))
(assert (= temp890_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_192)))
(assert (= temp890_191 temp890_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp890_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp890_194 #x0000000000000001))
(assert (= var1191836 temp890_194))
(assert (= temp890_195 #x0000000000000000))
(assert (= var1179826 temp890_195))
(assert (= temp890_197 var1179826))
(assert (= temp890_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp890_197)))
(assert (= temp890_196 temp890_198))
(assert (= temp890_199 #x0000000000000002))
(assert (= var1586025 temp890_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp890_200 #x0000000000000001))
(assert (= var1191993 temp890_200))
(assert (= temp890_201 #x0000000000000001))
(assert (= var2700303 temp890_201))
(assert (= temp890_202 #x0000000000000001))
(assert (= var2962447 temp890_202))
(assert (= temp890_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp890_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_204 #x0000000000000001))
(assert (= var211058 temp890_204))
(assert (= temp890_205 #x0000000000000001))
(assert (= var211188 temp890_205))
(assert (= var3879401 var211188))
(assert (= temp890_206 #x0000000000000000))
(assert (= var3866802 temp890_206))
(assert (= temp890_207 #x0000000000000000))
(assert (= temp890_208
   (ite (bvslt var3866802 temp890_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp890_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp890_208)))
(assert (= var3879420 temp890_209))
(assert (bvslt (ite (bvslt var3866802 temp890_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp890_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp890_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp890_211 #x0000000000000001))
(assert (= var3879421 temp890_211))
(assert (= temp890_212 #x0000000000000000))
(assert (= var4079423 temp890_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp890_213 #x0000000000000002))
(assert (= var4208259 temp890_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp890_214 #x0000000000000000))
(assert (= var4273820 temp890_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp890_215 #x0000000000000001))
(assert (= var211058 temp890_215))
(model-add temp890_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp890_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp890_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp890_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





