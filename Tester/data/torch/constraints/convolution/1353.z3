(declare-fun temp10534_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10534_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10534_3 () (_ BitVec 64))
(declare-fun temp10534_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10534_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10534_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10534_7 () (_ BitVec 64))
(declare-fun temp10534_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10534_9 () (_ BitVec 64))
(declare-fun temp10534_10 () (_ BitVec 64))
(declare-fun temp10534_11 () (_ BitVec 64))
(declare-fun temp10534_12 () (_ BitVec 64))
(declare-fun temp10534_13 () (_ BitVec 64))
(declare-fun temp10534_14 () (_ BitVec 64))
(declare-fun temp10534_15 () (_ BitVec 64))
(declare-fun temp10534_16 () (_ BitVec 64))
(declare-fun temp10534_17 () (_ BitVec 64))
(declare-fun temp10534_18 () (_ BitVec 64))
(declare-fun temp10534_19 () (_ BitVec 64))
(declare-fun temp10534_20 () (_ BitVec 64))
(declare-fun temp10534_21 () (_ BitVec 64))
(declare-fun temp10534_22 () (_ BitVec 64))
(declare-fun temp10534_23 () (_ BitVec 64))
(declare-fun temp10534_24 () (_ BitVec 64))
(declare-fun temp10534_25 () (_ BitVec 64))
(declare-fun temp10534_26 () (_ BitVec 64))
(declare-fun temp10534_27 () (_ BitVec 64))
(declare-fun temp10534_28 () (_ BitVec 64))
(declare-fun temp10534_29 () (_ BitVec 64))
(declare-fun temp10534_30 () (_ BitVec 64))
(declare-fun temp10534_31 () (_ BitVec 64))
(declare-fun temp10534_32 () (_ BitVec 64))
(declare-fun temp10534_33 () (_ BitVec 64))
(declare-fun temp10534_34 () (_ BitVec 64))
(declare-fun temp10534_35 () (_ BitVec 64))
(declare-fun temp10534_36 () (_ BitVec 64))
(declare-fun temp10534_37 () (_ BitVec 64))
(declare-fun temp10534_38 () (_ BitVec 64))
(declare-fun temp10534_39 () (_ BitVec 64))
(declare-fun temp10534_40 () (_ BitVec 64))
(declare-fun temp10534_41 () (_ BitVec 64))
(declare-fun temp10534_42 () (_ BitVec 64))
(declare-fun temp10534_43 () (_ BitVec 64))
(declare-fun temp10534_44 () (_ BitVec 64))
(declare-fun temp10534_45 () (_ BitVec 64))
(declare-fun temp10534_46 () (_ BitVec 64))
(declare-fun temp10534_47 () (_ BitVec 64))
(declare-fun temp10534_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10534_49 () (_ BitVec 64))
(declare-fun temp10534_50 () (_ BitVec 64))
(declare-fun temp10534_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10534_52 () (_ BitVec 64))
(declare-fun temp10534_53 () (_ BitVec 64))
(declare-fun temp10534_54 () (_ BitVec 64))
(declare-fun temp10534_55 () (_ BitVec 64))
(declare-fun temp10534_56 () (_ BitVec 64))
(declare-fun temp10534_57 () (_ BitVec 64))
(declare-fun temp10534_58 () (_ BitVec 64))
(declare-fun temp10534_59 () (_ BitVec 64))
(declare-fun temp10534_60 () (_ BitVec 64))
(declare-fun temp10534_61 () (_ BitVec 64))
(declare-fun temp10534_62 () (_ BitVec 64))
(declare-fun temp10534_63 () (_ BitVec 64))
(declare-fun temp10534_64 () (_ BitVec 64))
(declare-fun temp10534_65 () (_ BitVec 64))
(declare-fun temp10534_66 () (_ BitVec 64))
(declare-fun temp10534_67 () (_ BitVec 64))
(declare-fun temp10534_68 () (_ BitVec 64))
(declare-fun temp10534_69 () (_ BitVec 64))
(declare-fun temp10534_70 () (_ BitVec 64))
(declare-fun temp10534_71 () (_ BitVec 64))
(declare-fun temp10534_72 () (_ BitVec 64))
(declare-fun temp10534_73 () (_ BitVec 64))
(declare-fun temp10534_74 () (_ BitVec 64))
(declare-fun temp10534_75 () (_ BitVec 64))
(declare-fun temp10534_76 () (_ BitVec 64))
(declare-fun temp10534_77 () (_ BitVec 64))
(declare-fun temp10534_78 () (_ BitVec 64))
(declare-fun temp10534_79 () (_ BitVec 64))
(declare-fun temp10534_80 () (_ BitVec 64))
(declare-fun temp10534_81 () (_ BitVec 64))
(declare-fun temp10534_82 () (_ BitVec 64))
(declare-fun temp10534_83 () (_ BitVec 64))
(declare-fun temp10534_84 () (_ BitVec 64))
(declare-fun temp10534_85 () (_ BitVec 64))
(declare-fun temp10534_86 () (_ BitVec 64))
(declare-fun temp10534_87 () (_ BitVec 64))
(declare-fun temp10534_88 () (_ BitVec 64))
(declare-fun temp10534_89 () (_ BitVec 64))
(declare-fun temp10534_90 () (_ BitVec 64))
(declare-fun temp10534_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10534_92 () (_ BitVec 64))
(declare-fun temp10534_93 () (_ BitVec 64))
(declare-fun temp10534_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10534_95 () (_ BitVec 64))
(declare-fun temp10534_96 () (_ BitVec 64))
(declare-fun temp10534_97 () (_ BitVec 64))
(declare-fun temp10534_98 () (_ BitVec 64))
(declare-fun temp10534_99 () (_ BitVec 64))
(declare-fun temp10534_100 () (_ BitVec 64))
(declare-fun temp10534_101 () (_ BitVec 64))
(declare-fun temp10534_102 () (_ BitVec 64))
(declare-fun temp10534_103 () (_ BitVec 64))
(declare-fun temp10534_104 () (_ BitVec 64))
(declare-fun temp10534_105 () (_ BitVec 64))
(declare-fun temp10534_106 () (_ BitVec 64))
(declare-fun temp10534_107 () (_ BitVec 64))
(declare-fun temp10534_108 () (_ BitVec 64))
(declare-fun temp10534_109 () (_ BitVec 64))
(declare-fun temp10534_110 () (_ BitVec 64))
(declare-fun temp10534_111 () (_ BitVec 64))
(declare-fun temp10534_112 () (_ BitVec 64))
(declare-fun temp10534_113 () (_ BitVec 64))
(declare-fun temp10534_114 () (_ BitVec 64))
(declare-fun temp10534_115 () (_ BitVec 64))
(declare-fun temp10534_116 () (_ BitVec 64))
(declare-fun temp10534_117 () (_ BitVec 64))
(declare-fun temp10534_118 () (_ BitVec 64))
(declare-fun temp10534_119 () (_ BitVec 64))
(declare-fun temp10534_120 () (_ BitVec 64))
(declare-fun temp10534_121 () (_ BitVec 64))
(declare-fun temp10534_122 () (_ BitVec 64))
(declare-fun temp10534_123 () (_ BitVec 64))
(declare-fun temp10534_124 () (_ BitVec 64))
(declare-fun temp10534_125 () (_ BitVec 64))
(declare-fun temp10534_126 () (_ BitVec 64))
(declare-fun temp10534_127 () (_ BitVec 64))
(declare-fun temp10534_128 () (_ BitVec 64))
(declare-fun temp10534_129 () (_ BitVec 64))
(declare-fun temp10534_130 () (_ BitVec 64))
(declare-fun temp10534_131 () (_ BitVec 64))
(declare-fun temp10534_132 () (_ BitVec 64))
(declare-fun temp10534_133 () (_ BitVec 64))
(declare-fun temp10534_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10534_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10534_136 () (_ BitVec 64))
(declare-fun temp10534_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10534_138 () (_ BitVec 64))
(declare-fun temp10534_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10534_140 () (_ BitVec 64))
(declare-fun temp10534_141 () (_ BitVec 64))
(declare-fun temp10534_142 () (_ BitVec 64))
(declare-fun temp10534_143 () (_ BitVec 64))
(declare-fun temp10534_144 () (_ BitVec 64))
(declare-fun temp10534_145 () (_ BitVec 64))
(declare-fun temp10534_146 () (_ BitVec 64))
(declare-fun temp10534_147 () (_ BitVec 64))
(declare-fun temp10534_148 () (_ BitVec 64))
(declare-fun temp10534_149 () (_ BitVec 64))
(declare-fun temp10534_150 () (_ BitVec 64))
(declare-fun temp10534_151 () (_ BitVec 64))
(declare-fun temp10534_152 () (_ BitVec 64))
(declare-fun temp10534_153 () (_ BitVec 64))
(declare-fun temp10534_154 () (_ BitVec 64))
(declare-fun temp10534_155 () (_ BitVec 64))
(declare-fun temp10534_157 () (_ BitVec 64))
(declare-fun temp10534_158 () (_ BitVec 64))
(declare-fun temp10534_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10534_159 () (_ BitVec 64))
(declare-fun temp10534_160 () (_ BitVec 64))
(declare-fun temp10534_162 () (_ BitVec 64))
(declare-fun temp10534_163 () (_ BitVec 64))
(declare-fun temp10534_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10534_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10534_165 () (_ BitVec 64))
(declare-fun temp10534_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10534_167 () (_ BitVec 64))
(declare-fun temp10534_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10534_169 () (_ BitVec 64))
(declare-fun temp10534_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10534_171 () (_ BitVec 64))
(declare-fun temp10534_172 () (_ BitVec 64))
(declare-fun temp10534_173 () (_ BitVec 64))
(declare-fun temp10534_174 () (_ BitVec 64))
(declare-fun temp10534_175 () (_ BitVec 64))
(declare-fun temp10534_176 () (_ BitVec 64))
(declare-fun temp10534_177 () (_ BitVec 64))
(declare-fun temp10534_178 () (_ BitVec 64))
(declare-fun temp10534_179 () (_ BitVec 64))
(declare-fun temp10534_180 () (_ BitVec 64))
(declare-fun temp10534_181 () (_ BitVec 64))
(declare-fun temp10534_182 () (_ BitVec 64))
(declare-fun temp10534_183 () (_ BitVec 64))
(declare-fun temp10534_184 () (_ BitVec 64))
(declare-fun temp10534_185 () (_ BitVec 64))
(declare-fun temp10534_186 () (_ BitVec 64))
(declare-fun temp10534_187 () (_ BitVec 64))
(declare-fun temp10534_188 () (_ BitVec 64))
(declare-fun temp10534_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10534_190 () (_ BitVec 64))
(declare-fun temp10534_192 () (_ BitVec 64))
(declare-fun temp10534_193 () (_ BitVec 64))
(declare-fun temp10534_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10534_194 () (_ BitVec 64))
(declare-fun temp10534_195 () (_ BitVec 64))
(declare-fun temp10534_197 () (_ BitVec 64))
(declare-fun temp10534_198 () (_ BitVec 64))
(declare-fun temp10534_196 () (_ BitVec 64))
(declare-fun temp10534_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10534_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10534_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10534_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10534_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10534_204 () (_ BitVec 64))
(declare-fun temp10534_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10534_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10534_207 () (_ BitVec 64))
(declare-fun temp10534_208 () (_ BitVec 64))
(declare-fun temp10534_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10534_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10534_211 () (_ BitVec 64))
(declare-fun temp10534_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10534_213 () (_ BitVec 64))
(declare-fun temp10534_214 () (_ BitVec 64))
(declare-fun temp10534_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10534_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10534_217 () (_ BitVec 64))
(declare-fun temp10534_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10534_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10534_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10534_221 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun temp10534_222 () (_ BitVec 64))
(assert (= temp10534_1 #x0000000000000001))
(assert (= var77203 temp10534_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10534_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10534_2)))
(assert (= temp10534_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10534_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10534_4 #x0000000000000000))
(assert (= var210941 temp10534_4))
(assert (= temp10534_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10534_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10534_6 #x0000000000000000))
(assert (= var210986 temp10534_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10534_7 #x0000000000000000))
(assert (= temp10534_8 temp10534_7))
(assert (= temp10534_9 (select ARGNAME_padding_NAMEEND_VAL temp10534_8)))
(assert (= temp10534_10 #x0000000000000001))
(assert (= temp10534_11 temp10534_10))
(assert (= temp10534_12 (select ARGNAME_padding_NAMEEND_VAL temp10534_11)))
(assert (= temp10534_13 #x0000000000000002))
(assert (= temp10534_14 temp10534_13))
(assert (= temp10534_15 (select ARGNAME_padding_NAMEEND_VAL temp10534_14)))
(assert (= temp10534_16 #x0000000000000003))
(assert (= temp10534_17 temp10534_16))
(assert (= temp10534_18 (select ARGNAME_padding_NAMEEND_VAL temp10534_17)))
(assert (= temp10534_19 #x0000000000000004))
(assert (= temp10534_20 temp10534_19))
(assert (= temp10534_21 (select ARGNAME_padding_NAMEEND_VAL temp10534_20)))
(assert (= temp10534_22 #x0000000000000005))
(assert (= temp10534_23 temp10534_22))
(assert (= temp10534_24 (select ARGNAME_padding_NAMEEND_VAL temp10534_23)))
(assert (= temp10534_25 #x0000000000000000))
(assert (= temp10534_26 #x0000000000000000))
(assert (= temp10534_27 temp10534_26))
(assert (= temp10534_28 (select ARGNAME_padding_NAMEEND_VAL temp10534_27)))
(assert (= temp10534_29 #x0000000000000000))
(assert (= temp10534_30 #x0000000000000001))
(assert (= temp10534_31 temp10534_30))
(assert (= temp10534_32 (select ARGNAME_padding_NAMEEND_VAL temp10534_31)))
(assert (= temp10534_33 #x0000000000000000))
(assert (= temp10534_34 #x0000000000000002))
(assert (= temp10534_35 temp10534_34))
(assert (= temp10534_36 (select ARGNAME_padding_NAMEEND_VAL temp10534_35)))
(assert (= temp10534_37 #x0000000000000000))
(assert (= temp10534_38 #x0000000000000003))
(assert (= temp10534_39 temp10534_38))
(assert (= temp10534_40 (select ARGNAME_padding_NAMEEND_VAL temp10534_39)))
(assert (= temp10534_41 #x0000000000000000))
(assert (= temp10534_42 #x0000000000000004))
(assert (= temp10534_43 temp10534_42))
(assert (= temp10534_44 (select ARGNAME_padding_NAMEEND_VAL temp10534_43)))
(assert (= temp10534_45 #x0000000000000000))
(assert (= temp10534_46 #x0000000000000005))
(assert (= temp10534_47 temp10534_46))
(assert (= temp10534_48 (select ARGNAME_padding_NAMEEND_VAL temp10534_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10534_28 temp10534_25)
             (bvslt temp10534_32 temp10534_29)
             (bvslt temp10534_36 temp10534_33)
             (bvslt temp10534_40 temp10534_37)
             (bvslt temp10534_44 temp10534_41)
             (bvslt temp10534_48 temp10534_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10534_49 #x0000000000000000))
(assert (= var1191714 temp10534_49))
(assert (= temp10534_50 #x0000000000000000))
(assert (= temp10534_51 temp10534_50))
(assert (= temp10534_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10534_51)))
(assert (= temp10534_53 #x0000000000000001))
(assert (= temp10534_54 temp10534_53))
(assert (= temp10534_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10534_54)))
(assert (= temp10534_56 #x0000000000000002))
(assert (= temp10534_57 temp10534_56))
(assert (= temp10534_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10534_57)))
(assert (= temp10534_59 #x0000000000000003))
(assert (= temp10534_60 temp10534_59))
(assert (= temp10534_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10534_60)))
(assert (= temp10534_62 #x0000000000000004))
(assert (= temp10534_63 temp10534_62))
(assert (= temp10534_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10534_63)))
(assert (= temp10534_65 #x0000000000000005))
(assert (= temp10534_66 temp10534_65))
(assert (= temp10534_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10534_66)))
(assert (= temp10534_68 #x0000000000000000))
(assert (= temp10534_69 #x0000000000000000))
(assert (= temp10534_70 temp10534_69))
(assert (= temp10534_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10534_70)))
(assert (= temp10534_72 #x0000000000000000))
(assert (= temp10534_73 #x0000000000000001))
(assert (= temp10534_74 temp10534_73))
(assert (= temp10534_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10534_74)))
(assert (= temp10534_76 #x0000000000000000))
(assert (= temp10534_77 #x0000000000000002))
(assert (= temp10534_78 temp10534_77))
(assert (= temp10534_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10534_78)))
(assert (= temp10534_80 #x0000000000000000))
(assert (= temp10534_81 #x0000000000000003))
(assert (= temp10534_82 temp10534_81))
(assert (= temp10534_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10534_82)))
(assert (= temp10534_84 #x0000000000000000))
(assert (= temp10534_85 #x0000000000000004))
(assert (= temp10534_86 temp10534_85))
(assert (= temp10534_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10534_86)))
(assert (= temp10534_88 #x0000000000000000))
(assert (= temp10534_89 #x0000000000000005))
(assert (= temp10534_90 temp10534_89))
(assert (= temp10534_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10534_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10534_71 temp10534_68)
             (bvslt temp10534_75 temp10534_72)
             (bvslt temp10534_79 temp10534_76)
             (bvslt temp10534_83 temp10534_80)
             (bvslt temp10534_87 temp10534_84)
             (bvslt temp10534_91 temp10534_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10534_92 #x0000000000000000))
(assert (= var1191725 temp10534_92))
(assert (= temp10534_93 #x0000000000000000))
(assert (= temp10534_94 temp10534_93))
(assert (= temp10534_95 (select ARGNAME_stride_NAMEEND_VAL temp10534_94)))
(assert (= temp10534_96 #x0000000000000001))
(assert (= temp10534_97 temp10534_96))
(assert (= temp10534_98 (select ARGNAME_stride_NAMEEND_VAL temp10534_97)))
(assert (= temp10534_99 #x0000000000000002))
(assert (= temp10534_100 temp10534_99))
(assert (= temp10534_101 (select ARGNAME_stride_NAMEEND_VAL temp10534_100)))
(assert (= temp10534_102 #x0000000000000003))
(assert (= temp10534_103 temp10534_102))
(assert (= temp10534_104 (select ARGNAME_stride_NAMEEND_VAL temp10534_103)))
(assert (= temp10534_105 #x0000000000000004))
(assert (= temp10534_106 temp10534_105))
(assert (= temp10534_107 (select ARGNAME_stride_NAMEEND_VAL temp10534_106)))
(assert (= temp10534_108 #x0000000000000005))
(assert (= temp10534_109 temp10534_108))
(assert (= temp10534_110 (select ARGNAME_stride_NAMEEND_VAL temp10534_109)))
(assert (= temp10534_111 #x0000000000000000))
(assert (= temp10534_112 #x0000000000000000))
(assert (= temp10534_113 temp10534_112))
(assert (= temp10534_114 (select ARGNAME_stride_NAMEEND_VAL temp10534_113)))
(assert (= temp10534_115 #x0000000000000000))
(assert (= temp10534_116 #x0000000000000001))
(assert (= temp10534_117 temp10534_116))
(assert (= temp10534_118 (select ARGNAME_stride_NAMEEND_VAL temp10534_117)))
(assert (= temp10534_119 #x0000000000000000))
(assert (= temp10534_120 #x0000000000000002))
(assert (= temp10534_121 temp10534_120))
(assert (= temp10534_122 (select ARGNAME_stride_NAMEEND_VAL temp10534_121)))
(assert (= temp10534_123 #x0000000000000000))
(assert (= temp10534_124 #x0000000000000003))
(assert (= temp10534_125 temp10534_124))
(assert (= temp10534_126 (select ARGNAME_stride_NAMEEND_VAL temp10534_125)))
(assert (= temp10534_127 #x0000000000000000))
(assert (= temp10534_128 #x0000000000000004))
(assert (= temp10534_129 temp10534_128))
(assert (= temp10534_130 (select ARGNAME_stride_NAMEEND_VAL temp10534_129)))
(assert (= temp10534_131 #x0000000000000000))
(assert (= temp10534_132 #x0000000000000005))
(assert (= temp10534_133 temp10534_132))
(assert (= temp10534_134 (select ARGNAME_stride_NAMEEND_VAL temp10534_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10534_114 temp10534_111)
             (bvsle temp10534_118 temp10534_115)
             (bvsle temp10534_122 temp10534_119)
             (bvsle temp10534_126 temp10534_123)
             (bvsle temp10534_130 temp10534_127)
             (bvsle temp10534_134 temp10534_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10534_135 #x0000000000000000))
(assert (= var1191735 temp10534_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10534_136 #x0000000000000001))
(assert (= var1191747 temp10534_136))
(assert (= temp10534_137 #x0000000000000000))
(assert (= var1179826 temp10534_137))
(assert (= temp10534_138 #x0000000000000000))
(assert (= temp10534_139 temp10534_138))
(assert (= temp10534_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10534_139)))
(assert (= temp10534_141 #x0000000000000001))
(assert (= temp10534_142 temp10534_141))
(assert (= temp10534_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10534_142)))
(assert (= temp10534_144 #x0000000000000002))
(assert (= temp10534_145 temp10534_144))
(assert (= temp10534_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10534_145)))
(assert (= temp10534_147 #x0000000000000003))
(assert (= temp10534_148 temp10534_147))
(assert (= temp10534_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10534_148)))
(assert (= temp10534_150 #x0000000000000004))
(assert (= temp10534_151 temp10534_150))
(assert (= temp10534_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10534_151)))
(assert (= temp10534_153 #x0000000000000005))
(assert (= temp10534_154 temp10534_153))
(assert (= temp10534_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10534_154)))
(assert (= temp10534_157 var1179826))
(assert (= temp10534_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10534_157)))
(assert (= temp10534_156 temp10534_158))
(assert (= var1191780
   (ite (bvslt temp10534_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10534_159 #x0000000000000000))
(assert (= var1191780 temp10534_159))
(assert (= temp10534_160 #x0000000000000000))
(assert (= var1179826 temp10534_160))
(assert (= temp10534_162 var1179826))
(assert (= temp10534_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10534_162)))
(assert (= temp10534_161 temp10534_163))
(assert (= var1191802 (bvsmod temp10534_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10534_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10534_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10534_165 #x0000000000000001))
(assert (= var1191803 temp10534_165))
(assert (= temp10534_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10534_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10534_167 #x0000000000000001))
(assert (= var1191823 temp10534_167))
(assert (= temp10534_168 #x0000000000000001))
(assert (= var1180714 temp10534_168))
(assert (= temp10534_169 #x0000000000000000))
(assert (= temp10534_170 temp10534_169))
(assert (= temp10534_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10534_170)))
(assert (= temp10534_172 #x0000000000000001))
(assert (= temp10534_173 temp10534_172))
(assert (= temp10534_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10534_173)))
(assert (= temp10534_175 #x0000000000000002))
(assert (= temp10534_176 temp10534_175))
(assert (= temp10534_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10534_176)))
(assert (= temp10534_178 #x0000000000000003))
(assert (= temp10534_179 temp10534_178))
(assert (= temp10534_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10534_179)))
(assert (= temp10534_181 #x0000000000000004))
(assert (= temp10534_182 temp10534_181))
(assert (= temp10534_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10534_182)))
(assert (= temp10534_184 #x0000000000000005))
(assert (= temp10534_185 temp10534_184))
(assert (= temp10534_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10534_185)))
(assert (= temp10534_187 #x0000000000000000))
(assert (= temp10534_188
   (ite (bvslt var1180714 temp10534_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10534_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10534_188)))
(assert (= var1191831 temp10534_189))
(assert (bvslt (ite (bvslt var1180714 temp10534_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10534_190 #x0000000000000001))
(assert (= var1180714 temp10534_190))
(assert (= temp10534_192 var1180714))
(assert (= temp10534_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10534_192)))
(assert (= temp10534_191 temp10534_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10534_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10534_194 #x0000000000000001))
(assert (= var1191836 temp10534_194))
(assert (= temp10534_195 #x0000000000000000))
(assert (= var1179826 temp10534_195))
(assert (= temp10534_197 var1179826))
(assert (= temp10534_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10534_197)))
(assert (= temp10534_196 temp10534_198))
(assert (= temp10534_199 #x0000000000000002))
(assert (= var1586025 temp10534_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10534_200 #x0000000000000001))
(assert (= var1191993 temp10534_200))
(assert (= temp10534_201 #x0000000000000001))
(assert (= var2700303 temp10534_201))
(assert (= temp10534_202 #x0000000000000001))
(assert (= var2962447 temp10534_202))
(assert (= temp10534_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10534_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10534_204 #x0000000000000001))
(assert (= var211058 temp10534_204))
(assert (= temp10534_205 #x0000000000000001))
(assert (= var211188 temp10534_205))
(assert (= var3879401 var211188))
(assert (= temp10534_206 #x0000000000000000))
(assert (= var3866802 temp10534_206))
(assert (= temp10534_207 #x0000000000000000))
(assert (= temp10534_208
   (ite (bvslt var3866802 temp10534_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10534_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10534_208)))
(assert (= var3879420 temp10534_209))
(assert (bvslt (ite (bvslt var3866802 temp10534_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10534_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10534_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10534_211 #x0000000000000000))
(assert (= var3879421 temp10534_211))
(assert (= temp10534_212 #x0000000000000001))
(assert (= var3867690 temp10534_212))
(assert (= temp10534_213 #x0000000000000000))
(assert (= temp10534_214
   (ite (bvslt var3867690 temp10534_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10534_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10534_214)))
(assert (= var3879423 temp10534_215))
(assert (bvslt (ite (bvslt var3867690 temp10534_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10534_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10534_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10534_217 #x0000000000000001))
(assert (= var3879424 temp10534_217))
(assert (= temp10534_218 #x0000000000000000))
(assert (= var4133117 temp10534_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10534_219 #x0000000000000002))
(assert (= var4339331 temp10534_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10534_220 #x0000000000000000))
(assert (= var4404892 temp10534_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10534_221 #x0000000000000000))
(assert (= var4600208 temp10534_221))
(assert (= temp10534_222 #x0000000000000001))
(assert (= var211058 temp10534_222))
(model-add temp10534_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10534_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10534_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10534_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






