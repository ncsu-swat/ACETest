(declare-fun temp10444_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10444_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10444_3 () (_ BitVec 64))
(declare-fun temp10444_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10444_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10444_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10444_7 () (_ BitVec 64))
(declare-fun temp10444_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10444_9 () (_ BitVec 64))
(declare-fun temp10444_10 () (_ BitVec 64))
(declare-fun temp10444_11 () (_ BitVec 64))
(declare-fun temp10444_12 () (_ BitVec 64))
(declare-fun temp10444_13 () (_ BitVec 64))
(declare-fun temp10444_14 () (_ BitVec 64))
(declare-fun temp10444_15 () (_ BitVec 64))
(declare-fun temp10444_16 () (_ BitVec 64))
(declare-fun temp10444_17 () (_ BitVec 64))
(declare-fun temp10444_18 () (_ BitVec 64))
(declare-fun temp10444_19 () (_ BitVec 64))
(declare-fun temp10444_20 () (_ BitVec 64))
(declare-fun temp10444_21 () (_ BitVec 64))
(declare-fun temp10444_22 () (_ BitVec 64))
(declare-fun temp10444_23 () (_ BitVec 64))
(declare-fun temp10444_24 () (_ BitVec 64))
(declare-fun temp10444_25 () (_ BitVec 64))
(declare-fun temp10444_26 () (_ BitVec 64))
(declare-fun temp10444_27 () (_ BitVec 64))
(declare-fun temp10444_28 () (_ BitVec 64))
(declare-fun temp10444_29 () (_ BitVec 64))
(declare-fun temp10444_30 () (_ BitVec 64))
(declare-fun temp10444_31 () (_ BitVec 64))
(declare-fun temp10444_32 () (_ BitVec 64))
(declare-fun temp10444_33 () (_ BitVec 64))
(declare-fun temp10444_34 () (_ BitVec 64))
(declare-fun temp10444_35 () (_ BitVec 64))
(declare-fun temp10444_36 () (_ BitVec 64))
(declare-fun temp10444_37 () (_ BitVec 64))
(declare-fun temp10444_38 () (_ BitVec 64))
(declare-fun temp10444_39 () (_ BitVec 64))
(declare-fun temp10444_40 () (_ BitVec 64))
(declare-fun temp10444_41 () (_ BitVec 64))
(declare-fun temp10444_42 () (_ BitVec 64))
(declare-fun temp10444_43 () (_ BitVec 64))
(declare-fun temp10444_44 () (_ BitVec 64))
(declare-fun temp10444_45 () (_ BitVec 64))
(declare-fun temp10444_46 () (_ BitVec 64))
(declare-fun temp10444_47 () (_ BitVec 64))
(declare-fun temp10444_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10444_49 () (_ BitVec 64))
(declare-fun temp10444_50 () (_ BitVec 64))
(declare-fun temp10444_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10444_52 () (_ BitVec 64))
(declare-fun temp10444_53 () (_ BitVec 64))
(declare-fun temp10444_54 () (_ BitVec 64))
(declare-fun temp10444_55 () (_ BitVec 64))
(declare-fun temp10444_56 () (_ BitVec 64))
(declare-fun temp10444_57 () (_ BitVec 64))
(declare-fun temp10444_58 () (_ BitVec 64))
(declare-fun temp10444_59 () (_ BitVec 64))
(declare-fun temp10444_60 () (_ BitVec 64))
(declare-fun temp10444_61 () (_ BitVec 64))
(declare-fun temp10444_62 () (_ BitVec 64))
(declare-fun temp10444_63 () (_ BitVec 64))
(declare-fun temp10444_64 () (_ BitVec 64))
(declare-fun temp10444_65 () (_ BitVec 64))
(declare-fun temp10444_66 () (_ BitVec 64))
(declare-fun temp10444_67 () (_ BitVec 64))
(declare-fun temp10444_68 () (_ BitVec 64))
(declare-fun temp10444_69 () (_ BitVec 64))
(declare-fun temp10444_70 () (_ BitVec 64))
(declare-fun temp10444_71 () (_ BitVec 64))
(declare-fun temp10444_72 () (_ BitVec 64))
(declare-fun temp10444_73 () (_ BitVec 64))
(declare-fun temp10444_74 () (_ BitVec 64))
(declare-fun temp10444_75 () (_ BitVec 64))
(declare-fun temp10444_76 () (_ BitVec 64))
(declare-fun temp10444_77 () (_ BitVec 64))
(declare-fun temp10444_78 () (_ BitVec 64))
(declare-fun temp10444_79 () (_ BitVec 64))
(declare-fun temp10444_80 () (_ BitVec 64))
(declare-fun temp10444_81 () (_ BitVec 64))
(declare-fun temp10444_82 () (_ BitVec 64))
(declare-fun temp10444_83 () (_ BitVec 64))
(declare-fun temp10444_84 () (_ BitVec 64))
(declare-fun temp10444_85 () (_ BitVec 64))
(declare-fun temp10444_86 () (_ BitVec 64))
(declare-fun temp10444_87 () (_ BitVec 64))
(declare-fun temp10444_88 () (_ BitVec 64))
(declare-fun temp10444_89 () (_ BitVec 64))
(declare-fun temp10444_90 () (_ BitVec 64))
(declare-fun temp10444_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10444_92 () (_ BitVec 64))
(declare-fun temp10444_93 () (_ BitVec 64))
(declare-fun temp10444_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10444_95 () (_ BitVec 64))
(declare-fun temp10444_96 () (_ BitVec 64))
(declare-fun temp10444_97 () (_ BitVec 64))
(declare-fun temp10444_98 () (_ BitVec 64))
(declare-fun temp10444_99 () (_ BitVec 64))
(declare-fun temp10444_100 () (_ BitVec 64))
(declare-fun temp10444_101 () (_ BitVec 64))
(declare-fun temp10444_102 () (_ BitVec 64))
(declare-fun temp10444_103 () (_ BitVec 64))
(declare-fun temp10444_104 () (_ BitVec 64))
(declare-fun temp10444_105 () (_ BitVec 64))
(declare-fun temp10444_106 () (_ BitVec 64))
(declare-fun temp10444_107 () (_ BitVec 64))
(declare-fun temp10444_108 () (_ BitVec 64))
(declare-fun temp10444_109 () (_ BitVec 64))
(declare-fun temp10444_110 () (_ BitVec 64))
(declare-fun temp10444_111 () (_ BitVec 64))
(declare-fun temp10444_112 () (_ BitVec 64))
(declare-fun temp10444_113 () (_ BitVec 64))
(declare-fun temp10444_114 () (_ BitVec 64))
(declare-fun temp10444_115 () (_ BitVec 64))
(declare-fun temp10444_116 () (_ BitVec 64))
(declare-fun temp10444_117 () (_ BitVec 64))
(declare-fun temp10444_118 () (_ BitVec 64))
(declare-fun temp10444_119 () (_ BitVec 64))
(declare-fun temp10444_120 () (_ BitVec 64))
(declare-fun temp10444_121 () (_ BitVec 64))
(declare-fun temp10444_122 () (_ BitVec 64))
(declare-fun temp10444_123 () (_ BitVec 64))
(declare-fun temp10444_124 () (_ BitVec 64))
(declare-fun temp10444_125 () (_ BitVec 64))
(declare-fun temp10444_126 () (_ BitVec 64))
(declare-fun temp10444_127 () (_ BitVec 64))
(declare-fun temp10444_128 () (_ BitVec 64))
(declare-fun temp10444_129 () (_ BitVec 64))
(declare-fun temp10444_130 () (_ BitVec 64))
(declare-fun temp10444_131 () (_ BitVec 64))
(declare-fun temp10444_132 () (_ BitVec 64))
(declare-fun temp10444_133 () (_ BitVec 64))
(declare-fun temp10444_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10444_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10444_136 () (_ BitVec 64))
(declare-fun temp10444_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10444_138 () (_ BitVec 64))
(declare-fun temp10444_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10444_140 () (_ BitVec 64))
(declare-fun temp10444_141 () (_ BitVec 64))
(declare-fun temp10444_142 () (_ BitVec 64))
(declare-fun temp10444_143 () (_ BitVec 64))
(declare-fun temp10444_144 () (_ BitVec 64))
(declare-fun temp10444_145 () (_ BitVec 64))
(declare-fun temp10444_146 () (_ BitVec 64))
(declare-fun temp10444_147 () (_ BitVec 64))
(declare-fun temp10444_148 () (_ BitVec 64))
(declare-fun temp10444_149 () (_ BitVec 64))
(declare-fun temp10444_150 () (_ BitVec 64))
(declare-fun temp10444_151 () (_ BitVec 64))
(declare-fun temp10444_152 () (_ BitVec 64))
(declare-fun temp10444_153 () (_ BitVec 64))
(declare-fun temp10444_154 () (_ BitVec 64))
(declare-fun temp10444_155 () (_ BitVec 64))
(declare-fun temp10444_157 () (_ BitVec 64))
(declare-fun temp10444_158 () (_ BitVec 64))
(declare-fun temp10444_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10444_159 () (_ BitVec 64))
(declare-fun temp10444_160 () (_ BitVec 64))
(declare-fun temp10444_162 () (_ BitVec 64))
(declare-fun temp10444_163 () (_ BitVec 64))
(declare-fun temp10444_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10444_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10444_165 () (_ BitVec 64))
(declare-fun temp10444_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10444_167 () (_ BitVec 64))
(declare-fun temp10444_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10444_169 () (_ BitVec 64))
(declare-fun temp10444_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10444_171 () (_ BitVec 64))
(declare-fun temp10444_172 () (_ BitVec 64))
(declare-fun temp10444_173 () (_ BitVec 64))
(declare-fun temp10444_174 () (_ BitVec 64))
(declare-fun temp10444_175 () (_ BitVec 64))
(declare-fun temp10444_176 () (_ BitVec 64))
(declare-fun temp10444_177 () (_ BitVec 64))
(declare-fun temp10444_178 () (_ BitVec 64))
(declare-fun temp10444_179 () (_ BitVec 64))
(declare-fun temp10444_180 () (_ BitVec 64))
(declare-fun temp10444_181 () (_ BitVec 64))
(declare-fun temp10444_182 () (_ BitVec 64))
(declare-fun temp10444_183 () (_ BitVec 64))
(declare-fun temp10444_184 () (_ BitVec 64))
(declare-fun temp10444_185 () (_ BitVec 64))
(declare-fun temp10444_186 () (_ BitVec 64))
(declare-fun temp10444_187 () (_ BitVec 64))
(declare-fun temp10444_188 () (_ BitVec 64))
(declare-fun temp10444_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10444_190 () (_ BitVec 64))
(declare-fun temp10444_192 () (_ BitVec 64))
(declare-fun temp10444_193 () (_ BitVec 64))
(declare-fun temp10444_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10444_194 () (_ BitVec 64))
(declare-fun temp10444_195 () (_ BitVec 64))
(declare-fun temp10444_197 () (_ BitVec 64))
(declare-fun temp10444_198 () (_ BitVec 64))
(declare-fun temp10444_196 () (_ BitVec 64))
(declare-fun temp10444_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10444_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10444_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10444_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10444_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10444_204 () (_ BitVec 64))
(declare-fun temp10444_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10444_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10444_207 () (_ BitVec 64))
(declare-fun temp10444_208 () (_ BitVec 64))
(declare-fun temp10444_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10444_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10444_211 () (_ BitVec 64))
(declare-fun temp10444_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10444_213 () (_ BitVec 64))
(declare-fun temp10444_214 () (_ BitVec 64))
(declare-fun temp10444_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10444_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10444_217 () (_ BitVec 64))
(declare-fun temp10444_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10444_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10444_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp10444_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp10444_222 () (_ BitVec 64))
(declare-fun temp10444_223 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5060229 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun var5125773 () (_ BitVec 64))
(declare-fun temp10444_224 () (_ BitVec 64))
(declare-fun temp10444_225 () (_ BitVec 64))
(declare-fun var6370068 () (_ BitVec 64))
(declare-fun var6370035 () (_ BitVec 64))
(declare-fun var6238599 () (_ BitVec 64))
(declare-fun var6238595 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10444_226 () (_ BitVec 64))
(assert (= temp10444_1 #x0000000000000001))
(assert (= var77203 temp10444_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10444_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10444_2)))
(assert (= temp10444_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10444_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10444_4 #x0000000000000000))
(assert (= var210941 temp10444_4))
(assert (= temp10444_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10444_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10444_6 #x0000000000000000))
(assert (= var210986 temp10444_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10444_7 #x0000000000000000))
(assert (= temp10444_8 temp10444_7))
(assert (= temp10444_9 (select ARGNAME_padding_NAMEEND_VAL temp10444_8)))
(assert (= temp10444_10 #x0000000000000001))
(assert (= temp10444_11 temp10444_10))
(assert (= temp10444_12 (select ARGNAME_padding_NAMEEND_VAL temp10444_11)))
(assert (= temp10444_13 #x0000000000000002))
(assert (= temp10444_14 temp10444_13))
(assert (= temp10444_15 (select ARGNAME_padding_NAMEEND_VAL temp10444_14)))
(assert (= temp10444_16 #x0000000000000003))
(assert (= temp10444_17 temp10444_16))
(assert (= temp10444_18 (select ARGNAME_padding_NAMEEND_VAL temp10444_17)))
(assert (= temp10444_19 #x0000000000000004))
(assert (= temp10444_20 temp10444_19))
(assert (= temp10444_21 (select ARGNAME_padding_NAMEEND_VAL temp10444_20)))
(assert (= temp10444_22 #x0000000000000005))
(assert (= temp10444_23 temp10444_22))
(assert (= temp10444_24 (select ARGNAME_padding_NAMEEND_VAL temp10444_23)))
(assert (= temp10444_25 #x0000000000000000))
(assert (= temp10444_26 #x0000000000000000))
(assert (= temp10444_27 temp10444_26))
(assert (= temp10444_28 (select ARGNAME_padding_NAMEEND_VAL temp10444_27)))
(assert (= temp10444_29 #x0000000000000000))
(assert (= temp10444_30 #x0000000000000001))
(assert (= temp10444_31 temp10444_30))
(assert (= temp10444_32 (select ARGNAME_padding_NAMEEND_VAL temp10444_31)))
(assert (= temp10444_33 #x0000000000000000))
(assert (= temp10444_34 #x0000000000000002))
(assert (= temp10444_35 temp10444_34))
(assert (= temp10444_36 (select ARGNAME_padding_NAMEEND_VAL temp10444_35)))
(assert (= temp10444_37 #x0000000000000000))
(assert (= temp10444_38 #x0000000000000003))
(assert (= temp10444_39 temp10444_38))
(assert (= temp10444_40 (select ARGNAME_padding_NAMEEND_VAL temp10444_39)))
(assert (= temp10444_41 #x0000000000000000))
(assert (= temp10444_42 #x0000000000000004))
(assert (= temp10444_43 temp10444_42))
(assert (= temp10444_44 (select ARGNAME_padding_NAMEEND_VAL temp10444_43)))
(assert (= temp10444_45 #x0000000000000000))
(assert (= temp10444_46 #x0000000000000005))
(assert (= temp10444_47 temp10444_46))
(assert (= temp10444_48 (select ARGNAME_padding_NAMEEND_VAL temp10444_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10444_28 temp10444_25)
             (bvslt temp10444_32 temp10444_29)
             (bvslt temp10444_36 temp10444_33)
             (bvslt temp10444_40 temp10444_37)
             (bvslt temp10444_44 temp10444_41)
             (bvslt temp10444_48 temp10444_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10444_49 #x0000000000000000))
(assert (= var1191714 temp10444_49))
(assert (= temp10444_50 #x0000000000000000))
(assert (= temp10444_51 temp10444_50))
(assert (= temp10444_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10444_51)))
(assert (= temp10444_53 #x0000000000000001))
(assert (= temp10444_54 temp10444_53))
(assert (= temp10444_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10444_54)))
(assert (= temp10444_56 #x0000000000000002))
(assert (= temp10444_57 temp10444_56))
(assert (= temp10444_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10444_57)))
(assert (= temp10444_59 #x0000000000000003))
(assert (= temp10444_60 temp10444_59))
(assert (= temp10444_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10444_60)))
(assert (= temp10444_62 #x0000000000000004))
(assert (= temp10444_63 temp10444_62))
(assert (= temp10444_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10444_63)))
(assert (= temp10444_65 #x0000000000000005))
(assert (= temp10444_66 temp10444_65))
(assert (= temp10444_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10444_66)))
(assert (= temp10444_68 #x0000000000000000))
(assert (= temp10444_69 #x0000000000000000))
(assert (= temp10444_70 temp10444_69))
(assert (= temp10444_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10444_70)))
(assert (= temp10444_72 #x0000000000000000))
(assert (= temp10444_73 #x0000000000000001))
(assert (= temp10444_74 temp10444_73))
(assert (= temp10444_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10444_74)))
(assert (= temp10444_76 #x0000000000000000))
(assert (= temp10444_77 #x0000000000000002))
(assert (= temp10444_78 temp10444_77))
(assert (= temp10444_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10444_78)))
(assert (= temp10444_80 #x0000000000000000))
(assert (= temp10444_81 #x0000000000000003))
(assert (= temp10444_82 temp10444_81))
(assert (= temp10444_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10444_82)))
(assert (= temp10444_84 #x0000000000000000))
(assert (= temp10444_85 #x0000000000000004))
(assert (= temp10444_86 temp10444_85))
(assert (= temp10444_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10444_86)))
(assert (= temp10444_88 #x0000000000000000))
(assert (= temp10444_89 #x0000000000000005))
(assert (= temp10444_90 temp10444_89))
(assert (= temp10444_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10444_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10444_71 temp10444_68)
             (bvslt temp10444_75 temp10444_72)
             (bvslt temp10444_79 temp10444_76)
             (bvslt temp10444_83 temp10444_80)
             (bvslt temp10444_87 temp10444_84)
             (bvslt temp10444_91 temp10444_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10444_92 #x0000000000000000))
(assert (= var1191725 temp10444_92))
(assert (= temp10444_93 #x0000000000000000))
(assert (= temp10444_94 temp10444_93))
(assert (= temp10444_95 (select ARGNAME_stride_NAMEEND_VAL temp10444_94)))
(assert (= temp10444_96 #x0000000000000001))
(assert (= temp10444_97 temp10444_96))
(assert (= temp10444_98 (select ARGNAME_stride_NAMEEND_VAL temp10444_97)))
(assert (= temp10444_99 #x0000000000000002))
(assert (= temp10444_100 temp10444_99))
(assert (= temp10444_101 (select ARGNAME_stride_NAMEEND_VAL temp10444_100)))
(assert (= temp10444_102 #x0000000000000003))
(assert (= temp10444_103 temp10444_102))
(assert (= temp10444_104 (select ARGNAME_stride_NAMEEND_VAL temp10444_103)))
(assert (= temp10444_105 #x0000000000000004))
(assert (= temp10444_106 temp10444_105))
(assert (= temp10444_107 (select ARGNAME_stride_NAMEEND_VAL temp10444_106)))
(assert (= temp10444_108 #x0000000000000005))
(assert (= temp10444_109 temp10444_108))
(assert (= temp10444_110 (select ARGNAME_stride_NAMEEND_VAL temp10444_109)))
(assert (= temp10444_111 #x0000000000000000))
(assert (= temp10444_112 #x0000000000000000))
(assert (= temp10444_113 temp10444_112))
(assert (= temp10444_114 (select ARGNAME_stride_NAMEEND_VAL temp10444_113)))
(assert (= temp10444_115 #x0000000000000000))
(assert (= temp10444_116 #x0000000000000001))
(assert (= temp10444_117 temp10444_116))
(assert (= temp10444_118 (select ARGNAME_stride_NAMEEND_VAL temp10444_117)))
(assert (= temp10444_119 #x0000000000000000))
(assert (= temp10444_120 #x0000000000000002))
(assert (= temp10444_121 temp10444_120))
(assert (= temp10444_122 (select ARGNAME_stride_NAMEEND_VAL temp10444_121)))
(assert (= temp10444_123 #x0000000000000000))
(assert (= temp10444_124 #x0000000000000003))
(assert (= temp10444_125 temp10444_124))
(assert (= temp10444_126 (select ARGNAME_stride_NAMEEND_VAL temp10444_125)))
(assert (= temp10444_127 #x0000000000000000))
(assert (= temp10444_128 #x0000000000000004))
(assert (= temp10444_129 temp10444_128))
(assert (= temp10444_130 (select ARGNAME_stride_NAMEEND_VAL temp10444_129)))
(assert (= temp10444_131 #x0000000000000000))
(assert (= temp10444_132 #x0000000000000005))
(assert (= temp10444_133 temp10444_132))
(assert (= temp10444_134 (select ARGNAME_stride_NAMEEND_VAL temp10444_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10444_114 temp10444_111)
             (bvsle temp10444_118 temp10444_115)
             (bvsle temp10444_122 temp10444_119)
             (bvsle temp10444_126 temp10444_123)
             (bvsle temp10444_130 temp10444_127)
             (bvsle temp10444_134 temp10444_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10444_135 #x0000000000000000))
(assert (= var1191735 temp10444_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10444_136 #x0000000000000001))
(assert (= var1191747 temp10444_136))
(assert (= temp10444_137 #x0000000000000000))
(assert (= var1179826 temp10444_137))
(assert (= temp10444_138 #x0000000000000000))
(assert (= temp10444_139 temp10444_138))
(assert (= temp10444_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10444_139)))
(assert (= temp10444_141 #x0000000000000001))
(assert (= temp10444_142 temp10444_141))
(assert (= temp10444_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10444_142)))
(assert (= temp10444_144 #x0000000000000002))
(assert (= temp10444_145 temp10444_144))
(assert (= temp10444_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10444_145)))
(assert (= temp10444_147 #x0000000000000003))
(assert (= temp10444_148 temp10444_147))
(assert (= temp10444_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10444_148)))
(assert (= temp10444_150 #x0000000000000004))
(assert (= temp10444_151 temp10444_150))
(assert (= temp10444_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10444_151)))
(assert (= temp10444_153 #x0000000000000005))
(assert (= temp10444_154 temp10444_153))
(assert (= temp10444_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10444_154)))
(assert (= temp10444_157 var1179826))
(assert (= temp10444_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10444_157)))
(assert (= temp10444_156 temp10444_158))
(assert (= var1191780
   (ite (bvslt temp10444_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10444_159 #x0000000000000000))
(assert (= var1191780 temp10444_159))
(assert (= temp10444_160 #x0000000000000000))
(assert (= var1179826 temp10444_160))
(assert (= temp10444_162 var1179826))
(assert (= temp10444_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10444_162)))
(assert (= temp10444_161 temp10444_163))
(assert (= var1191802 (bvsmod temp10444_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10444_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10444_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10444_165 #x0000000000000001))
(assert (= var1191803 temp10444_165))
(assert (= temp10444_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10444_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10444_167 #x0000000000000001))
(assert (= var1191823 temp10444_167))
(assert (= temp10444_168 #x0000000000000001))
(assert (= var1180714 temp10444_168))
(assert (= temp10444_169 #x0000000000000000))
(assert (= temp10444_170 temp10444_169))
(assert (= temp10444_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10444_170)))
(assert (= temp10444_172 #x0000000000000001))
(assert (= temp10444_173 temp10444_172))
(assert (= temp10444_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10444_173)))
(assert (= temp10444_175 #x0000000000000002))
(assert (= temp10444_176 temp10444_175))
(assert (= temp10444_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10444_176)))
(assert (= temp10444_178 #x0000000000000003))
(assert (= temp10444_179 temp10444_178))
(assert (= temp10444_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10444_179)))
(assert (= temp10444_181 #x0000000000000004))
(assert (= temp10444_182 temp10444_181))
(assert (= temp10444_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10444_182)))
(assert (= temp10444_184 #x0000000000000005))
(assert (= temp10444_185 temp10444_184))
(assert (= temp10444_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10444_185)))
(assert (= temp10444_187 #x0000000000000000))
(assert (= temp10444_188
   (ite (bvslt var1180714 temp10444_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10444_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10444_188)))
(assert (= var1191831 temp10444_189))
(assert (bvslt (ite (bvslt var1180714 temp10444_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10444_190 #x0000000000000001))
(assert (= var1180714 temp10444_190))
(assert (= temp10444_192 var1180714))
(assert (= temp10444_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10444_192)))
(assert (= temp10444_191 temp10444_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10444_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10444_194 #x0000000000000001))
(assert (= var1191836 temp10444_194))
(assert (= temp10444_195 #x0000000000000000))
(assert (= var1179826 temp10444_195))
(assert (= temp10444_197 var1179826))
(assert (= temp10444_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10444_197)))
(assert (= temp10444_196 temp10444_198))
(assert (= temp10444_199 #x0000000000000002))
(assert (= var1586025 temp10444_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10444_200 #x0000000000000001))
(assert (= var1191993 temp10444_200))
(assert (= temp10444_201 #x0000000000000001))
(assert (= var2700303 temp10444_201))
(assert (= temp10444_202 #x0000000000000001))
(assert (= var2962447 temp10444_202))
(assert (= temp10444_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10444_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10444_204 #x0000000000000001))
(assert (= var211058 temp10444_204))
(assert (= temp10444_205 #x0000000000000001))
(assert (= var211188 temp10444_205))
(assert (= var3879401 var211188))
(assert (= temp10444_206 #x0000000000000000))
(assert (= var3866802 temp10444_206))
(assert (= temp10444_207 #x0000000000000000))
(assert (= temp10444_208
   (ite (bvslt var3866802 temp10444_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10444_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10444_208)))
(assert (= var3879420 temp10444_209))
(assert (bvslt (ite (bvslt var3866802 temp10444_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10444_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10444_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10444_211 #x0000000000000000))
(assert (= var3879421 temp10444_211))
(assert (= temp10444_212 #x0000000000000001))
(assert (= var3867690 temp10444_212))
(assert (= temp10444_213 #x0000000000000000))
(assert (= temp10444_214
   (ite (bvslt var3867690 temp10444_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10444_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10444_214)))
(assert (= var3879423 temp10444_215))
(assert (bvslt (ite (bvslt var3867690 temp10444_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10444_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10444_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10444_217 #x0000000000000001))
(assert (= var3879424 temp10444_217))
(assert (= temp10444_218 #x0000000000000000))
(assert (= var4079423 temp10444_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10444_219 #x0000000000000002))
(assert (= var4208259 temp10444_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10444_220 #x0000000000000000))
(assert (= var4273820 temp10444_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp10444_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp10444_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10444_222 #x0000000000000001))
(assert (= var212414 temp10444_222))
(assert (= temp10444_223 #x0000000000000002))
(assert (= var5060227 temp10444_223))
(assert (= var5060229 (bvsub ARGNAME_weight_NAMEEND_DIM var5060227)))
(assert (= var5125772 var5060227))
(assert (= var5125773 var5060229))
(assert (= temp10444_224 #x0000000000000001))
(assert (= var211058 temp10444_224))
(assert (= temp10444_225 #x0000000000000000))
(assert (= var6370068 temp10444_225))
(assert (= var6370035 var6370068))
(assert (= var6238599 var6370035))
(assert (= var6238595 var6238599))
(assert (= var212669 var6238595))
(assert (= temp10444_226 #x0000000000000000))
(assert (= var212669 temp10444_226))
(model-add temp10444_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10444_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10444_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10444_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






