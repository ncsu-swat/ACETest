(declare-fun temp960_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp960_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp960_3 () (_ BitVec 64))
(declare-fun temp960_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp960_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp960_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp960_7 () (_ BitVec 64))
(declare-fun temp960_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp960_9 () (_ BitVec 64))
(declare-fun temp960_10 () (_ BitVec 64))
(declare-fun temp960_11 () (_ BitVec 64))
(declare-fun temp960_12 () (_ BitVec 64))
(declare-fun temp960_13 () (_ BitVec 64))
(declare-fun temp960_14 () (_ BitVec 64))
(declare-fun temp960_15 () (_ BitVec 64))
(declare-fun temp960_16 () (_ BitVec 64))
(declare-fun temp960_17 () (_ BitVec 64))
(declare-fun temp960_18 () (_ BitVec 64))
(declare-fun temp960_19 () (_ BitVec 64))
(declare-fun temp960_20 () (_ BitVec 64))
(declare-fun temp960_21 () (_ BitVec 64))
(declare-fun temp960_22 () (_ BitVec 64))
(declare-fun temp960_23 () (_ BitVec 64))
(declare-fun temp960_24 () (_ BitVec 64))
(declare-fun temp960_25 () (_ BitVec 64))
(declare-fun temp960_26 () (_ BitVec 64))
(declare-fun temp960_27 () (_ BitVec 64))
(declare-fun temp960_28 () (_ BitVec 64))
(declare-fun temp960_29 () (_ BitVec 64))
(declare-fun temp960_30 () (_ BitVec 64))
(declare-fun temp960_31 () (_ BitVec 64))
(declare-fun temp960_32 () (_ BitVec 64))
(declare-fun temp960_33 () (_ BitVec 64))
(declare-fun temp960_34 () (_ BitVec 64))
(declare-fun temp960_35 () (_ BitVec 64))
(declare-fun temp960_36 () (_ BitVec 64))
(declare-fun temp960_37 () (_ BitVec 64))
(declare-fun temp960_38 () (_ BitVec 64))
(declare-fun temp960_39 () (_ BitVec 64))
(declare-fun temp960_40 () (_ BitVec 64))
(declare-fun temp960_41 () (_ BitVec 64))
(declare-fun temp960_42 () (_ BitVec 64))
(declare-fun temp960_43 () (_ BitVec 64))
(declare-fun temp960_44 () (_ BitVec 64))
(declare-fun temp960_45 () (_ BitVec 64))
(declare-fun temp960_46 () (_ BitVec 64))
(declare-fun temp960_47 () (_ BitVec 64))
(declare-fun temp960_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp960_49 () (_ BitVec 64))
(declare-fun temp960_50 () (_ BitVec 64))
(declare-fun temp960_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp960_52 () (_ BitVec 64))
(declare-fun temp960_53 () (_ BitVec 64))
(declare-fun temp960_54 () (_ BitVec 64))
(declare-fun temp960_55 () (_ BitVec 64))
(declare-fun temp960_56 () (_ BitVec 64))
(declare-fun temp960_57 () (_ BitVec 64))
(declare-fun temp960_58 () (_ BitVec 64))
(declare-fun temp960_59 () (_ BitVec 64))
(declare-fun temp960_60 () (_ BitVec 64))
(declare-fun temp960_61 () (_ BitVec 64))
(declare-fun temp960_62 () (_ BitVec 64))
(declare-fun temp960_63 () (_ BitVec 64))
(declare-fun temp960_64 () (_ BitVec 64))
(declare-fun temp960_65 () (_ BitVec 64))
(declare-fun temp960_66 () (_ BitVec 64))
(declare-fun temp960_67 () (_ BitVec 64))
(declare-fun temp960_68 () (_ BitVec 64))
(declare-fun temp960_69 () (_ BitVec 64))
(declare-fun temp960_70 () (_ BitVec 64))
(declare-fun temp960_71 () (_ BitVec 64))
(declare-fun temp960_72 () (_ BitVec 64))
(declare-fun temp960_73 () (_ BitVec 64))
(declare-fun temp960_74 () (_ BitVec 64))
(declare-fun temp960_75 () (_ BitVec 64))
(declare-fun temp960_76 () (_ BitVec 64))
(declare-fun temp960_77 () (_ BitVec 64))
(declare-fun temp960_78 () (_ BitVec 64))
(declare-fun temp960_79 () (_ BitVec 64))
(declare-fun temp960_80 () (_ BitVec 64))
(declare-fun temp960_81 () (_ BitVec 64))
(declare-fun temp960_82 () (_ BitVec 64))
(declare-fun temp960_83 () (_ BitVec 64))
(declare-fun temp960_84 () (_ BitVec 64))
(declare-fun temp960_85 () (_ BitVec 64))
(declare-fun temp960_86 () (_ BitVec 64))
(declare-fun temp960_87 () (_ BitVec 64))
(declare-fun temp960_88 () (_ BitVec 64))
(declare-fun temp960_89 () (_ BitVec 64))
(declare-fun temp960_90 () (_ BitVec 64))
(declare-fun temp960_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp960_92 () (_ BitVec 64))
(declare-fun temp960_93 () (_ BitVec 64))
(declare-fun temp960_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp960_95 () (_ BitVec 64))
(declare-fun temp960_96 () (_ BitVec 64))
(declare-fun temp960_97 () (_ BitVec 64))
(declare-fun temp960_98 () (_ BitVec 64))
(declare-fun temp960_99 () (_ BitVec 64))
(declare-fun temp960_100 () (_ BitVec 64))
(declare-fun temp960_101 () (_ BitVec 64))
(declare-fun temp960_102 () (_ BitVec 64))
(declare-fun temp960_103 () (_ BitVec 64))
(declare-fun temp960_104 () (_ BitVec 64))
(declare-fun temp960_105 () (_ BitVec 64))
(declare-fun temp960_106 () (_ BitVec 64))
(declare-fun temp960_107 () (_ BitVec 64))
(declare-fun temp960_108 () (_ BitVec 64))
(declare-fun temp960_109 () (_ BitVec 64))
(declare-fun temp960_110 () (_ BitVec 64))
(declare-fun temp960_111 () (_ BitVec 64))
(declare-fun temp960_112 () (_ BitVec 64))
(declare-fun temp960_113 () (_ BitVec 64))
(declare-fun temp960_114 () (_ BitVec 64))
(declare-fun temp960_115 () (_ BitVec 64))
(declare-fun temp960_116 () (_ BitVec 64))
(declare-fun temp960_117 () (_ BitVec 64))
(declare-fun temp960_118 () (_ BitVec 64))
(declare-fun temp960_119 () (_ BitVec 64))
(declare-fun temp960_120 () (_ BitVec 64))
(declare-fun temp960_121 () (_ BitVec 64))
(declare-fun temp960_122 () (_ BitVec 64))
(declare-fun temp960_123 () (_ BitVec 64))
(declare-fun temp960_124 () (_ BitVec 64))
(declare-fun temp960_125 () (_ BitVec 64))
(declare-fun temp960_126 () (_ BitVec 64))
(declare-fun temp960_127 () (_ BitVec 64))
(declare-fun temp960_128 () (_ BitVec 64))
(declare-fun temp960_129 () (_ BitVec 64))
(declare-fun temp960_130 () (_ BitVec 64))
(declare-fun temp960_131 () (_ BitVec 64))
(declare-fun temp960_132 () (_ BitVec 64))
(declare-fun temp960_133 () (_ BitVec 64))
(declare-fun temp960_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp960_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp960_136 () (_ BitVec 64))
(declare-fun temp960_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp960_138 () (_ BitVec 64))
(declare-fun temp960_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp960_140 () (_ BitVec 64))
(declare-fun temp960_141 () (_ BitVec 64))
(declare-fun temp960_142 () (_ BitVec 64))
(declare-fun temp960_143 () (_ BitVec 64))
(declare-fun temp960_144 () (_ BitVec 64))
(declare-fun temp960_145 () (_ BitVec 64))
(declare-fun temp960_146 () (_ BitVec 64))
(declare-fun temp960_147 () (_ BitVec 64))
(declare-fun temp960_148 () (_ BitVec 64))
(declare-fun temp960_149 () (_ BitVec 64))
(declare-fun temp960_150 () (_ BitVec 64))
(declare-fun temp960_151 () (_ BitVec 64))
(declare-fun temp960_152 () (_ BitVec 64))
(declare-fun temp960_153 () (_ BitVec 64))
(declare-fun temp960_154 () (_ BitVec 64))
(declare-fun temp960_155 () (_ BitVec 64))
(declare-fun temp960_157 () (_ BitVec 64))
(declare-fun temp960_158 () (_ BitVec 64))
(declare-fun temp960_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp960_159 () (_ BitVec 64))
(declare-fun temp960_160 () (_ BitVec 64))
(declare-fun temp960_162 () (_ BitVec 64))
(declare-fun temp960_163 () (_ BitVec 64))
(declare-fun temp960_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp960_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp960_165 () (_ BitVec 64))
(declare-fun temp960_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp960_167 () (_ BitVec 64))
(declare-fun temp960_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp960_169 () (_ BitVec 64))
(declare-fun temp960_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp960_171 () (_ BitVec 64))
(declare-fun temp960_172 () (_ BitVec 64))
(declare-fun temp960_173 () (_ BitVec 64))
(declare-fun temp960_174 () (_ BitVec 64))
(declare-fun temp960_175 () (_ BitVec 64))
(declare-fun temp960_176 () (_ BitVec 64))
(declare-fun temp960_177 () (_ BitVec 64))
(declare-fun temp960_178 () (_ BitVec 64))
(declare-fun temp960_179 () (_ BitVec 64))
(declare-fun temp960_180 () (_ BitVec 64))
(declare-fun temp960_181 () (_ BitVec 64))
(declare-fun temp960_182 () (_ BitVec 64))
(declare-fun temp960_183 () (_ BitVec 64))
(declare-fun temp960_184 () (_ BitVec 64))
(declare-fun temp960_185 () (_ BitVec 64))
(declare-fun temp960_186 () (_ BitVec 64))
(declare-fun temp960_187 () (_ BitVec 64))
(declare-fun temp960_188 () (_ BitVec 64))
(declare-fun temp960_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp960_190 () (_ BitVec 64))
(declare-fun temp960_192 () (_ BitVec 64))
(declare-fun temp960_193 () (_ BitVec 64))
(declare-fun temp960_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp960_194 () (_ BitVec 64))
(declare-fun temp960_195 () (_ BitVec 64))
(declare-fun temp960_197 () (_ BitVec 64))
(declare-fun temp960_198 () (_ BitVec 64))
(declare-fun temp960_196 () (_ BitVec 64))
(declare-fun temp960_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp960_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp960_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp960_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp960_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp960_204 () (_ BitVec 64))
(declare-fun temp960_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp960_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp960_207 () (_ BitVec 64))
(declare-fun temp960_208 () (_ BitVec 64))
(declare-fun temp960_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp960_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp960_211 () (_ BitVec 64))
(declare-fun temp960_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp960_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp960_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp960_215 () (_ BitVec 64))
(assert (= temp960_1 #x0000000000000001))
(assert (= var77203 temp960_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp960_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp960_2)))
(assert (= temp960_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp960_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp960_4 #x0000000000000000))
(assert (= var210941 temp960_4))
(assert (= temp960_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp960_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp960_6 #x0000000000000000))
(assert (= var210986 temp960_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp960_7 #x0000000000000000))
(assert (= temp960_8 temp960_7))
(assert (= temp960_9 (select ARGNAME_padding_NAMEEND_VAL temp960_8)))
(assert (= temp960_10 #x0000000000000001))
(assert (= temp960_11 temp960_10))
(assert (= temp960_12 (select ARGNAME_padding_NAMEEND_VAL temp960_11)))
(assert (= temp960_13 #x0000000000000002))
(assert (= temp960_14 temp960_13))
(assert (= temp960_15 (select ARGNAME_padding_NAMEEND_VAL temp960_14)))
(assert (= temp960_16 #x0000000000000003))
(assert (= temp960_17 temp960_16))
(assert (= temp960_18 (select ARGNAME_padding_NAMEEND_VAL temp960_17)))
(assert (= temp960_19 #x0000000000000004))
(assert (= temp960_20 temp960_19))
(assert (= temp960_21 (select ARGNAME_padding_NAMEEND_VAL temp960_20)))
(assert (= temp960_22 #x0000000000000005))
(assert (= temp960_23 temp960_22))
(assert (= temp960_24 (select ARGNAME_padding_NAMEEND_VAL temp960_23)))
(assert (= temp960_25 #x0000000000000000))
(assert (= temp960_26 #x0000000000000000))
(assert (= temp960_27 temp960_26))
(assert (= temp960_28 (select ARGNAME_padding_NAMEEND_VAL temp960_27)))
(assert (= temp960_29 #x0000000000000000))
(assert (= temp960_30 #x0000000000000001))
(assert (= temp960_31 temp960_30))
(assert (= temp960_32 (select ARGNAME_padding_NAMEEND_VAL temp960_31)))
(assert (= temp960_33 #x0000000000000000))
(assert (= temp960_34 #x0000000000000002))
(assert (= temp960_35 temp960_34))
(assert (= temp960_36 (select ARGNAME_padding_NAMEEND_VAL temp960_35)))
(assert (= temp960_37 #x0000000000000000))
(assert (= temp960_38 #x0000000000000003))
(assert (= temp960_39 temp960_38))
(assert (= temp960_40 (select ARGNAME_padding_NAMEEND_VAL temp960_39)))
(assert (= temp960_41 #x0000000000000000))
(assert (= temp960_42 #x0000000000000004))
(assert (= temp960_43 temp960_42))
(assert (= temp960_44 (select ARGNAME_padding_NAMEEND_VAL temp960_43)))
(assert (= temp960_45 #x0000000000000000))
(assert (= temp960_46 #x0000000000000005))
(assert (= temp960_47 temp960_46))
(assert (= temp960_48 (select ARGNAME_padding_NAMEEND_VAL temp960_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp960_28 temp960_25)
             (bvslt temp960_32 temp960_29)
             (bvslt temp960_36 temp960_33)
             (bvslt temp960_40 temp960_37)
             (bvslt temp960_44 temp960_41)
             (bvslt temp960_48 temp960_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp960_49 #x0000000000000000))
(assert (= var1191714 temp960_49))
(assert (= temp960_50 #x0000000000000000))
(assert (= temp960_51 temp960_50))
(assert (= temp960_52 (select ARGNAME_output_padding_NAMEEND_VAL temp960_51)))
(assert (= temp960_53 #x0000000000000001))
(assert (= temp960_54 temp960_53))
(assert (= temp960_55 (select ARGNAME_output_padding_NAMEEND_VAL temp960_54)))
(assert (= temp960_56 #x0000000000000002))
(assert (= temp960_57 temp960_56))
(assert (= temp960_58 (select ARGNAME_output_padding_NAMEEND_VAL temp960_57)))
(assert (= temp960_59 #x0000000000000003))
(assert (= temp960_60 temp960_59))
(assert (= temp960_61 (select ARGNAME_output_padding_NAMEEND_VAL temp960_60)))
(assert (= temp960_62 #x0000000000000004))
(assert (= temp960_63 temp960_62))
(assert (= temp960_64 (select ARGNAME_output_padding_NAMEEND_VAL temp960_63)))
(assert (= temp960_65 #x0000000000000005))
(assert (= temp960_66 temp960_65))
(assert (= temp960_67 (select ARGNAME_output_padding_NAMEEND_VAL temp960_66)))
(assert (= temp960_68 #x0000000000000000))
(assert (= temp960_69 #x0000000000000000))
(assert (= temp960_70 temp960_69))
(assert (= temp960_71 (select ARGNAME_output_padding_NAMEEND_VAL temp960_70)))
(assert (= temp960_72 #x0000000000000000))
(assert (= temp960_73 #x0000000000000001))
(assert (= temp960_74 temp960_73))
(assert (= temp960_75 (select ARGNAME_output_padding_NAMEEND_VAL temp960_74)))
(assert (= temp960_76 #x0000000000000000))
(assert (= temp960_77 #x0000000000000002))
(assert (= temp960_78 temp960_77))
(assert (= temp960_79 (select ARGNAME_output_padding_NAMEEND_VAL temp960_78)))
(assert (= temp960_80 #x0000000000000000))
(assert (= temp960_81 #x0000000000000003))
(assert (= temp960_82 temp960_81))
(assert (= temp960_83 (select ARGNAME_output_padding_NAMEEND_VAL temp960_82)))
(assert (= temp960_84 #x0000000000000000))
(assert (= temp960_85 #x0000000000000004))
(assert (= temp960_86 temp960_85))
(assert (= temp960_87 (select ARGNAME_output_padding_NAMEEND_VAL temp960_86)))
(assert (= temp960_88 #x0000000000000000))
(assert (= temp960_89 #x0000000000000005))
(assert (= temp960_90 temp960_89))
(assert (= temp960_91 (select ARGNAME_output_padding_NAMEEND_VAL temp960_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp960_71 temp960_68)
             (bvslt temp960_75 temp960_72)
             (bvslt temp960_79 temp960_76)
             (bvslt temp960_83 temp960_80)
             (bvslt temp960_87 temp960_84)
             (bvslt temp960_91 temp960_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp960_92 #x0000000000000000))
(assert (= var1191725 temp960_92))
(assert (= temp960_93 #x0000000000000000))
(assert (= temp960_94 temp960_93))
(assert (= temp960_95 (select ARGNAME_stride_NAMEEND_VAL temp960_94)))
(assert (= temp960_96 #x0000000000000001))
(assert (= temp960_97 temp960_96))
(assert (= temp960_98 (select ARGNAME_stride_NAMEEND_VAL temp960_97)))
(assert (= temp960_99 #x0000000000000002))
(assert (= temp960_100 temp960_99))
(assert (= temp960_101 (select ARGNAME_stride_NAMEEND_VAL temp960_100)))
(assert (= temp960_102 #x0000000000000003))
(assert (= temp960_103 temp960_102))
(assert (= temp960_104 (select ARGNAME_stride_NAMEEND_VAL temp960_103)))
(assert (= temp960_105 #x0000000000000004))
(assert (= temp960_106 temp960_105))
(assert (= temp960_107 (select ARGNAME_stride_NAMEEND_VAL temp960_106)))
(assert (= temp960_108 #x0000000000000005))
(assert (= temp960_109 temp960_108))
(assert (= temp960_110 (select ARGNAME_stride_NAMEEND_VAL temp960_109)))
(assert (= temp960_111 #x0000000000000000))
(assert (= temp960_112 #x0000000000000000))
(assert (= temp960_113 temp960_112))
(assert (= temp960_114 (select ARGNAME_stride_NAMEEND_VAL temp960_113)))
(assert (= temp960_115 #x0000000000000000))
(assert (= temp960_116 #x0000000000000001))
(assert (= temp960_117 temp960_116))
(assert (= temp960_118 (select ARGNAME_stride_NAMEEND_VAL temp960_117)))
(assert (= temp960_119 #x0000000000000000))
(assert (= temp960_120 #x0000000000000002))
(assert (= temp960_121 temp960_120))
(assert (= temp960_122 (select ARGNAME_stride_NAMEEND_VAL temp960_121)))
(assert (= temp960_123 #x0000000000000000))
(assert (= temp960_124 #x0000000000000003))
(assert (= temp960_125 temp960_124))
(assert (= temp960_126 (select ARGNAME_stride_NAMEEND_VAL temp960_125)))
(assert (= temp960_127 #x0000000000000000))
(assert (= temp960_128 #x0000000000000004))
(assert (= temp960_129 temp960_128))
(assert (= temp960_130 (select ARGNAME_stride_NAMEEND_VAL temp960_129)))
(assert (= temp960_131 #x0000000000000000))
(assert (= temp960_132 #x0000000000000005))
(assert (= temp960_133 temp960_132))
(assert (= temp960_134 (select ARGNAME_stride_NAMEEND_VAL temp960_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp960_114 temp960_111)
             (bvsle temp960_118 temp960_115)
             (bvsle temp960_122 temp960_119)
             (bvsle temp960_126 temp960_123)
             (bvsle temp960_130 temp960_127)
             (bvsle temp960_134 temp960_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp960_135 #x0000000000000000))
(assert (= var1191735 temp960_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp960_136 #x0000000000000001))
(assert (= var1191747 temp960_136))
(assert (= temp960_137 #x0000000000000000))
(assert (= var1179826 temp960_137))
(assert (= temp960_138 #x0000000000000000))
(assert (= temp960_139 temp960_138))
(assert (= temp960_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp960_139)))
(assert (= temp960_141 #x0000000000000001))
(assert (= temp960_142 temp960_141))
(assert (= temp960_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp960_142)))
(assert (= temp960_144 #x0000000000000002))
(assert (= temp960_145 temp960_144))
(assert (= temp960_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp960_145)))
(assert (= temp960_147 #x0000000000000003))
(assert (= temp960_148 temp960_147))
(assert (= temp960_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp960_148)))
(assert (= temp960_150 #x0000000000000004))
(assert (= temp960_151 temp960_150))
(assert (= temp960_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp960_151)))
(assert (= temp960_153 #x0000000000000005))
(assert (= temp960_154 temp960_153))
(assert (= temp960_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp960_154)))
(assert (= temp960_157 var1179826))
(assert (= temp960_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp960_157)))
(assert (= temp960_156 temp960_158))
(assert (= var1191780
   (ite (bvslt temp960_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp960_159 #x0000000000000000))
(assert (= var1191780 temp960_159))
(assert (= temp960_160 #x0000000000000000))
(assert (= var1179826 temp960_160))
(assert (= temp960_162 var1179826))
(assert (= temp960_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp960_162)))
(assert (= temp960_161 temp960_163))
(assert (= var1191802 (bvsmod temp960_161 ARGNAME_groups_NAMEEND)))
(assert (= temp960_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp960_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp960_165 #x0000000000000001))
(assert (= var1191803 temp960_165))
(assert (= temp960_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp960_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp960_167 #x0000000000000001))
(assert (= var1191823 temp960_167))
(assert (= temp960_168 #x0000000000000001))
(assert (= var1180714 temp960_168))
(assert (= temp960_169 #x0000000000000000))
(assert (= temp960_170 temp960_169))
(assert (= temp960_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp960_170)))
(assert (= temp960_172 #x0000000000000001))
(assert (= temp960_173 temp960_172))
(assert (= temp960_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp960_173)))
(assert (= temp960_175 #x0000000000000002))
(assert (= temp960_176 temp960_175))
(assert (= temp960_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp960_176)))
(assert (= temp960_178 #x0000000000000003))
(assert (= temp960_179 temp960_178))
(assert (= temp960_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp960_179)))
(assert (= temp960_181 #x0000000000000004))
(assert (= temp960_182 temp960_181))
(assert (= temp960_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp960_182)))
(assert (= temp960_184 #x0000000000000005))
(assert (= temp960_185 temp960_184))
(assert (= temp960_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp960_185)))
(assert (= temp960_187 #x0000000000000000))
(assert (= temp960_188
   (ite (bvslt var1180714 temp960_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp960_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp960_188)))
(assert (= var1191831 temp960_189))
(assert (bvslt (ite (bvslt var1180714 temp960_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp960_190 #x0000000000000001))
(assert (= var1180714 temp960_190))
(assert (= temp960_192 var1180714))
(assert (= temp960_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp960_192)))
(assert (= temp960_191 temp960_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp960_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp960_194 #x0000000000000001))
(assert (= var1191836 temp960_194))
(assert (= temp960_195 #x0000000000000000))
(assert (= var1179826 temp960_195))
(assert (= temp960_197 var1179826))
(assert (= temp960_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp960_197)))
(assert (= temp960_196 temp960_198))
(assert (= temp960_199 #x0000000000000002))
(assert (= var1586025 temp960_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp960_200 #x0000000000000001))
(assert (= var1191993 temp960_200))
(assert (= temp960_201 #x0000000000000001))
(assert (= var2700303 temp960_201))
(assert (= temp960_202 #x0000000000000001))
(assert (= var2962447 temp960_202))
(assert (= temp960_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp960_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp960_204 #x0000000000000001))
(assert (= var211058 temp960_204))
(assert (= temp960_205 #x0000000000000001))
(assert (= var211188 temp960_205))
(assert (= var3879401 var211188))
(assert (= temp960_206 #x0000000000000000))
(assert (= var3866802 temp960_206))
(assert (= temp960_207 #x0000000000000000))
(assert (= temp960_208
   (ite (bvslt var3866802 temp960_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp960_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp960_208)))
(assert (= var3879420 temp960_209))
(assert (bvslt (ite (bvslt var3866802 temp960_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp960_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp960_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp960_211 #x0000000000000001))
(assert (= var3879421 temp960_211))
(assert (= temp960_212 #x0000000000000000))
(assert (= var4079423 temp960_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp960_213 #x0000000000000002))
(assert (= var4208259 temp960_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp960_214 #x0000000000000000))
(assert (= var4273820 temp960_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp960_215 #x0000000000000001))
(assert (= var211058 temp960_215))
(model-add temp960_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp960_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp960_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp960_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



