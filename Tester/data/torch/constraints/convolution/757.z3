(declare-fun temp1009_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1009_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1009_3 () (_ BitVec 64))
(declare-fun temp1009_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1009_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1009_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1009_7 () (_ BitVec 64))
(declare-fun temp1009_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1009_9 () (_ BitVec 64))
(declare-fun temp1009_10 () (_ BitVec 64))
(declare-fun temp1009_11 () (_ BitVec 64))
(declare-fun temp1009_12 () (_ BitVec 64))
(declare-fun temp1009_13 () (_ BitVec 64))
(declare-fun temp1009_14 () (_ BitVec 64))
(declare-fun temp1009_15 () (_ BitVec 64))
(declare-fun temp1009_16 () (_ BitVec 64))
(declare-fun temp1009_17 () (_ BitVec 64))
(declare-fun temp1009_18 () (_ BitVec 64))
(declare-fun temp1009_19 () (_ BitVec 64))
(declare-fun temp1009_20 () (_ BitVec 64))
(declare-fun temp1009_21 () (_ BitVec 64))
(declare-fun temp1009_22 () (_ BitVec 64))
(declare-fun temp1009_23 () (_ BitVec 64))
(declare-fun temp1009_24 () (_ BitVec 64))
(declare-fun temp1009_25 () (_ BitVec 64))
(declare-fun temp1009_26 () (_ BitVec 64))
(declare-fun temp1009_27 () (_ BitVec 64))
(declare-fun temp1009_28 () (_ BitVec 64))
(declare-fun temp1009_29 () (_ BitVec 64))
(declare-fun temp1009_30 () (_ BitVec 64))
(declare-fun temp1009_31 () (_ BitVec 64))
(declare-fun temp1009_32 () (_ BitVec 64))
(declare-fun temp1009_33 () (_ BitVec 64))
(declare-fun temp1009_34 () (_ BitVec 64))
(declare-fun temp1009_35 () (_ BitVec 64))
(declare-fun temp1009_36 () (_ BitVec 64))
(declare-fun temp1009_37 () (_ BitVec 64))
(declare-fun temp1009_38 () (_ BitVec 64))
(declare-fun temp1009_39 () (_ BitVec 64))
(declare-fun temp1009_40 () (_ BitVec 64))
(declare-fun temp1009_41 () (_ BitVec 64))
(declare-fun temp1009_42 () (_ BitVec 64))
(declare-fun temp1009_43 () (_ BitVec 64))
(declare-fun temp1009_44 () (_ BitVec 64))
(declare-fun temp1009_45 () (_ BitVec 64))
(declare-fun temp1009_46 () (_ BitVec 64))
(declare-fun temp1009_47 () (_ BitVec 64))
(declare-fun temp1009_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1009_49 () (_ BitVec 64))
(declare-fun temp1009_50 () (_ BitVec 64))
(declare-fun temp1009_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1009_52 () (_ BitVec 64))
(declare-fun temp1009_53 () (_ BitVec 64))
(declare-fun temp1009_54 () (_ BitVec 64))
(declare-fun temp1009_55 () (_ BitVec 64))
(declare-fun temp1009_56 () (_ BitVec 64))
(declare-fun temp1009_57 () (_ BitVec 64))
(declare-fun temp1009_58 () (_ BitVec 64))
(declare-fun temp1009_59 () (_ BitVec 64))
(declare-fun temp1009_60 () (_ BitVec 64))
(declare-fun temp1009_61 () (_ BitVec 64))
(declare-fun temp1009_62 () (_ BitVec 64))
(declare-fun temp1009_63 () (_ BitVec 64))
(declare-fun temp1009_64 () (_ BitVec 64))
(declare-fun temp1009_65 () (_ BitVec 64))
(declare-fun temp1009_66 () (_ BitVec 64))
(declare-fun temp1009_67 () (_ BitVec 64))
(declare-fun temp1009_68 () (_ BitVec 64))
(declare-fun temp1009_69 () (_ BitVec 64))
(declare-fun temp1009_70 () (_ BitVec 64))
(declare-fun temp1009_71 () (_ BitVec 64))
(declare-fun temp1009_72 () (_ BitVec 64))
(declare-fun temp1009_73 () (_ BitVec 64))
(declare-fun temp1009_74 () (_ BitVec 64))
(declare-fun temp1009_75 () (_ BitVec 64))
(declare-fun temp1009_76 () (_ BitVec 64))
(declare-fun temp1009_77 () (_ BitVec 64))
(declare-fun temp1009_78 () (_ BitVec 64))
(declare-fun temp1009_79 () (_ BitVec 64))
(declare-fun temp1009_80 () (_ BitVec 64))
(declare-fun temp1009_81 () (_ BitVec 64))
(declare-fun temp1009_82 () (_ BitVec 64))
(declare-fun temp1009_83 () (_ BitVec 64))
(declare-fun temp1009_84 () (_ BitVec 64))
(declare-fun temp1009_85 () (_ BitVec 64))
(declare-fun temp1009_86 () (_ BitVec 64))
(declare-fun temp1009_87 () (_ BitVec 64))
(declare-fun temp1009_88 () (_ BitVec 64))
(declare-fun temp1009_89 () (_ BitVec 64))
(declare-fun temp1009_90 () (_ BitVec 64))
(declare-fun temp1009_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1009_92 () (_ BitVec 64))
(declare-fun temp1009_93 () (_ BitVec 64))
(declare-fun temp1009_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1009_95 () (_ BitVec 64))
(declare-fun temp1009_96 () (_ BitVec 64))
(declare-fun temp1009_97 () (_ BitVec 64))
(declare-fun temp1009_98 () (_ BitVec 64))
(declare-fun temp1009_99 () (_ BitVec 64))
(declare-fun temp1009_100 () (_ BitVec 64))
(declare-fun temp1009_101 () (_ BitVec 64))
(declare-fun temp1009_102 () (_ BitVec 64))
(declare-fun temp1009_103 () (_ BitVec 64))
(declare-fun temp1009_104 () (_ BitVec 64))
(declare-fun temp1009_105 () (_ BitVec 64))
(declare-fun temp1009_106 () (_ BitVec 64))
(declare-fun temp1009_107 () (_ BitVec 64))
(declare-fun temp1009_108 () (_ BitVec 64))
(declare-fun temp1009_109 () (_ BitVec 64))
(declare-fun temp1009_110 () (_ BitVec 64))
(declare-fun temp1009_111 () (_ BitVec 64))
(declare-fun temp1009_112 () (_ BitVec 64))
(declare-fun temp1009_113 () (_ BitVec 64))
(declare-fun temp1009_114 () (_ BitVec 64))
(declare-fun temp1009_115 () (_ BitVec 64))
(declare-fun temp1009_116 () (_ BitVec 64))
(declare-fun temp1009_117 () (_ BitVec 64))
(declare-fun temp1009_118 () (_ BitVec 64))
(declare-fun temp1009_119 () (_ BitVec 64))
(declare-fun temp1009_120 () (_ BitVec 64))
(declare-fun temp1009_121 () (_ BitVec 64))
(declare-fun temp1009_122 () (_ BitVec 64))
(declare-fun temp1009_123 () (_ BitVec 64))
(declare-fun temp1009_124 () (_ BitVec 64))
(declare-fun temp1009_125 () (_ BitVec 64))
(declare-fun temp1009_126 () (_ BitVec 64))
(declare-fun temp1009_127 () (_ BitVec 64))
(declare-fun temp1009_128 () (_ BitVec 64))
(declare-fun temp1009_129 () (_ BitVec 64))
(declare-fun temp1009_130 () (_ BitVec 64))
(declare-fun temp1009_131 () (_ BitVec 64))
(declare-fun temp1009_132 () (_ BitVec 64))
(declare-fun temp1009_133 () (_ BitVec 64))
(declare-fun temp1009_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1009_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1009_136 () (_ BitVec 64))
(declare-fun temp1009_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1009_138 () (_ BitVec 64))
(declare-fun temp1009_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1009_140 () (_ BitVec 64))
(declare-fun temp1009_141 () (_ BitVec 64))
(declare-fun temp1009_142 () (_ BitVec 64))
(declare-fun temp1009_143 () (_ BitVec 64))
(declare-fun temp1009_144 () (_ BitVec 64))
(declare-fun temp1009_145 () (_ BitVec 64))
(declare-fun temp1009_146 () (_ BitVec 64))
(declare-fun temp1009_147 () (_ BitVec 64))
(declare-fun temp1009_148 () (_ BitVec 64))
(declare-fun temp1009_149 () (_ BitVec 64))
(declare-fun temp1009_150 () (_ BitVec 64))
(declare-fun temp1009_151 () (_ BitVec 64))
(declare-fun temp1009_152 () (_ BitVec 64))
(declare-fun temp1009_153 () (_ BitVec 64))
(declare-fun temp1009_154 () (_ BitVec 64))
(declare-fun temp1009_155 () (_ BitVec 64))
(declare-fun temp1009_157 () (_ BitVec 64))
(declare-fun temp1009_158 () (_ BitVec 64))
(declare-fun temp1009_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1009_159 () (_ BitVec 64))
(declare-fun temp1009_160 () (_ BitVec 64))
(declare-fun temp1009_162 () (_ BitVec 64))
(declare-fun temp1009_163 () (_ BitVec 64))
(declare-fun temp1009_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1009_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1009_165 () (_ BitVec 64))
(declare-fun temp1009_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1009_167 () (_ BitVec 64))
(declare-fun temp1009_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1009_169 () (_ BitVec 64))
(declare-fun temp1009_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1009_171 () (_ BitVec 64))
(declare-fun temp1009_172 () (_ BitVec 64))
(declare-fun temp1009_173 () (_ BitVec 64))
(declare-fun temp1009_174 () (_ BitVec 64))
(declare-fun temp1009_175 () (_ BitVec 64))
(declare-fun temp1009_176 () (_ BitVec 64))
(declare-fun temp1009_177 () (_ BitVec 64))
(declare-fun temp1009_178 () (_ BitVec 64))
(declare-fun temp1009_179 () (_ BitVec 64))
(declare-fun temp1009_180 () (_ BitVec 64))
(declare-fun temp1009_181 () (_ BitVec 64))
(declare-fun temp1009_182 () (_ BitVec 64))
(declare-fun temp1009_183 () (_ BitVec 64))
(declare-fun temp1009_184 () (_ BitVec 64))
(declare-fun temp1009_185 () (_ BitVec 64))
(declare-fun temp1009_186 () (_ BitVec 64))
(declare-fun temp1009_187 () (_ BitVec 64))
(declare-fun temp1009_188 () (_ BitVec 64))
(declare-fun temp1009_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1009_190 () (_ BitVec 64))
(declare-fun temp1009_192 () (_ BitVec 64))
(declare-fun temp1009_193 () (_ BitVec 64))
(declare-fun temp1009_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1009_194 () (_ BitVec 64))
(declare-fun temp1009_195 () (_ BitVec 64))
(declare-fun temp1009_197 () (_ BitVec 64))
(declare-fun temp1009_198 () (_ BitVec 64))
(declare-fun temp1009_196 () (_ BitVec 64))
(declare-fun temp1009_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1009_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1009_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1009_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1009_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1009_204 () (_ BitVec 64))
(declare-fun temp1009_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1009_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1009_207 () (_ BitVec 64))
(declare-fun temp1009_208 () (_ BitVec 64))
(declare-fun temp1009_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1009_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1009_211 () (_ BitVec 64))
(declare-fun temp1009_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1009_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1009_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp1009_215 () (_ BitVec 64))
(assert (= temp1009_1 #x0000000000000001))
(assert (= var77203 temp1009_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1009_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1009_2)))
(assert (= temp1009_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1009_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1009_4 #x0000000000000000))
(assert (= var210941 temp1009_4))
(assert (= temp1009_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1009_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1009_6 #x0000000000000000))
(assert (= var210986 temp1009_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1009_7 #x0000000000000000))
(assert (= temp1009_8 temp1009_7))
(assert (= temp1009_9 (select ARGNAME_padding_NAMEEND_VAL temp1009_8)))
(assert (= temp1009_10 #x0000000000000001))
(assert (= temp1009_11 temp1009_10))
(assert (= temp1009_12 (select ARGNAME_padding_NAMEEND_VAL temp1009_11)))
(assert (= temp1009_13 #x0000000000000002))
(assert (= temp1009_14 temp1009_13))
(assert (= temp1009_15 (select ARGNAME_padding_NAMEEND_VAL temp1009_14)))
(assert (= temp1009_16 #x0000000000000003))
(assert (= temp1009_17 temp1009_16))
(assert (= temp1009_18 (select ARGNAME_padding_NAMEEND_VAL temp1009_17)))
(assert (= temp1009_19 #x0000000000000004))
(assert (= temp1009_20 temp1009_19))
(assert (= temp1009_21 (select ARGNAME_padding_NAMEEND_VAL temp1009_20)))
(assert (= temp1009_22 #x0000000000000005))
(assert (= temp1009_23 temp1009_22))
(assert (= temp1009_24 (select ARGNAME_padding_NAMEEND_VAL temp1009_23)))
(assert (= temp1009_25 #x0000000000000000))
(assert (= temp1009_26 #x0000000000000000))
(assert (= temp1009_27 temp1009_26))
(assert (= temp1009_28 (select ARGNAME_padding_NAMEEND_VAL temp1009_27)))
(assert (= temp1009_29 #x0000000000000000))
(assert (= temp1009_30 #x0000000000000001))
(assert (= temp1009_31 temp1009_30))
(assert (= temp1009_32 (select ARGNAME_padding_NAMEEND_VAL temp1009_31)))
(assert (= temp1009_33 #x0000000000000000))
(assert (= temp1009_34 #x0000000000000002))
(assert (= temp1009_35 temp1009_34))
(assert (= temp1009_36 (select ARGNAME_padding_NAMEEND_VAL temp1009_35)))
(assert (= temp1009_37 #x0000000000000000))
(assert (= temp1009_38 #x0000000000000003))
(assert (= temp1009_39 temp1009_38))
(assert (= temp1009_40 (select ARGNAME_padding_NAMEEND_VAL temp1009_39)))
(assert (= temp1009_41 #x0000000000000000))
(assert (= temp1009_42 #x0000000000000004))
(assert (= temp1009_43 temp1009_42))
(assert (= temp1009_44 (select ARGNAME_padding_NAMEEND_VAL temp1009_43)))
(assert (= temp1009_45 #x0000000000000000))
(assert (= temp1009_46 #x0000000000000005))
(assert (= temp1009_47 temp1009_46))
(assert (= temp1009_48 (select ARGNAME_padding_NAMEEND_VAL temp1009_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1009_28 temp1009_25)
             (bvslt temp1009_32 temp1009_29)
             (bvslt temp1009_36 temp1009_33)
             (bvslt temp1009_40 temp1009_37)
             (bvslt temp1009_44 temp1009_41)
             (bvslt temp1009_48 temp1009_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1009_49 #x0000000000000000))
(assert (= var1191714 temp1009_49))
(assert (= temp1009_50 #x0000000000000000))
(assert (= temp1009_51 temp1009_50))
(assert (= temp1009_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1009_51)))
(assert (= temp1009_53 #x0000000000000001))
(assert (= temp1009_54 temp1009_53))
(assert (= temp1009_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1009_54)))
(assert (= temp1009_56 #x0000000000000002))
(assert (= temp1009_57 temp1009_56))
(assert (= temp1009_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1009_57)))
(assert (= temp1009_59 #x0000000000000003))
(assert (= temp1009_60 temp1009_59))
(assert (= temp1009_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1009_60)))
(assert (= temp1009_62 #x0000000000000004))
(assert (= temp1009_63 temp1009_62))
(assert (= temp1009_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1009_63)))
(assert (= temp1009_65 #x0000000000000005))
(assert (= temp1009_66 temp1009_65))
(assert (= temp1009_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1009_66)))
(assert (= temp1009_68 #x0000000000000000))
(assert (= temp1009_69 #x0000000000000000))
(assert (= temp1009_70 temp1009_69))
(assert (= temp1009_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1009_70)))
(assert (= temp1009_72 #x0000000000000000))
(assert (= temp1009_73 #x0000000000000001))
(assert (= temp1009_74 temp1009_73))
(assert (= temp1009_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1009_74)))
(assert (= temp1009_76 #x0000000000000000))
(assert (= temp1009_77 #x0000000000000002))
(assert (= temp1009_78 temp1009_77))
(assert (= temp1009_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1009_78)))
(assert (= temp1009_80 #x0000000000000000))
(assert (= temp1009_81 #x0000000000000003))
(assert (= temp1009_82 temp1009_81))
(assert (= temp1009_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1009_82)))
(assert (= temp1009_84 #x0000000000000000))
(assert (= temp1009_85 #x0000000000000004))
(assert (= temp1009_86 temp1009_85))
(assert (= temp1009_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1009_86)))
(assert (= temp1009_88 #x0000000000000000))
(assert (= temp1009_89 #x0000000000000005))
(assert (= temp1009_90 temp1009_89))
(assert (= temp1009_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1009_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1009_71 temp1009_68)
             (bvslt temp1009_75 temp1009_72)
             (bvslt temp1009_79 temp1009_76)
             (bvslt temp1009_83 temp1009_80)
             (bvslt temp1009_87 temp1009_84)
             (bvslt temp1009_91 temp1009_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1009_92 #x0000000000000000))
(assert (= var1191725 temp1009_92))
(assert (= temp1009_93 #x0000000000000000))
(assert (= temp1009_94 temp1009_93))
(assert (= temp1009_95 (select ARGNAME_stride_NAMEEND_VAL temp1009_94)))
(assert (= temp1009_96 #x0000000000000001))
(assert (= temp1009_97 temp1009_96))
(assert (= temp1009_98 (select ARGNAME_stride_NAMEEND_VAL temp1009_97)))
(assert (= temp1009_99 #x0000000000000002))
(assert (= temp1009_100 temp1009_99))
(assert (= temp1009_101 (select ARGNAME_stride_NAMEEND_VAL temp1009_100)))
(assert (= temp1009_102 #x0000000000000003))
(assert (= temp1009_103 temp1009_102))
(assert (= temp1009_104 (select ARGNAME_stride_NAMEEND_VAL temp1009_103)))
(assert (= temp1009_105 #x0000000000000004))
(assert (= temp1009_106 temp1009_105))
(assert (= temp1009_107 (select ARGNAME_stride_NAMEEND_VAL temp1009_106)))
(assert (= temp1009_108 #x0000000000000005))
(assert (= temp1009_109 temp1009_108))
(assert (= temp1009_110 (select ARGNAME_stride_NAMEEND_VAL temp1009_109)))
(assert (= temp1009_111 #x0000000000000000))
(assert (= temp1009_112 #x0000000000000000))
(assert (= temp1009_113 temp1009_112))
(assert (= temp1009_114 (select ARGNAME_stride_NAMEEND_VAL temp1009_113)))
(assert (= temp1009_115 #x0000000000000000))
(assert (= temp1009_116 #x0000000000000001))
(assert (= temp1009_117 temp1009_116))
(assert (= temp1009_118 (select ARGNAME_stride_NAMEEND_VAL temp1009_117)))
(assert (= temp1009_119 #x0000000000000000))
(assert (= temp1009_120 #x0000000000000002))
(assert (= temp1009_121 temp1009_120))
(assert (= temp1009_122 (select ARGNAME_stride_NAMEEND_VAL temp1009_121)))
(assert (= temp1009_123 #x0000000000000000))
(assert (= temp1009_124 #x0000000000000003))
(assert (= temp1009_125 temp1009_124))
(assert (= temp1009_126 (select ARGNAME_stride_NAMEEND_VAL temp1009_125)))
(assert (= temp1009_127 #x0000000000000000))
(assert (= temp1009_128 #x0000000000000004))
(assert (= temp1009_129 temp1009_128))
(assert (= temp1009_130 (select ARGNAME_stride_NAMEEND_VAL temp1009_129)))
(assert (= temp1009_131 #x0000000000000000))
(assert (= temp1009_132 #x0000000000000005))
(assert (= temp1009_133 temp1009_132))
(assert (= temp1009_134 (select ARGNAME_stride_NAMEEND_VAL temp1009_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1009_114 temp1009_111)
             (bvsle temp1009_118 temp1009_115)
             (bvsle temp1009_122 temp1009_119)
             (bvsle temp1009_126 temp1009_123)
             (bvsle temp1009_130 temp1009_127)
             (bvsle temp1009_134 temp1009_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1009_135 #x0000000000000000))
(assert (= var1191735 temp1009_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1009_136 #x0000000000000001))
(assert (= var1191747 temp1009_136))
(assert (= temp1009_137 #x0000000000000000))
(assert (= var1179826 temp1009_137))
(assert (= temp1009_138 #x0000000000000000))
(assert (= temp1009_139 temp1009_138))
(assert (= temp1009_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1009_139)))
(assert (= temp1009_141 #x0000000000000001))
(assert (= temp1009_142 temp1009_141))
(assert (= temp1009_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1009_142)))
(assert (= temp1009_144 #x0000000000000002))
(assert (= temp1009_145 temp1009_144))
(assert (= temp1009_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1009_145)))
(assert (= temp1009_147 #x0000000000000003))
(assert (= temp1009_148 temp1009_147))
(assert (= temp1009_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1009_148)))
(assert (= temp1009_150 #x0000000000000004))
(assert (= temp1009_151 temp1009_150))
(assert (= temp1009_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1009_151)))
(assert (= temp1009_153 #x0000000000000005))
(assert (= temp1009_154 temp1009_153))
(assert (= temp1009_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1009_154)))
(assert (= temp1009_157 var1179826))
(assert (= temp1009_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1009_157)))
(assert (= temp1009_156 temp1009_158))
(assert (= var1191780
   (ite (bvslt temp1009_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1009_159 #x0000000000000000))
(assert (= var1191780 temp1009_159))
(assert (= temp1009_160 #x0000000000000000))
(assert (= var1179826 temp1009_160))
(assert (= temp1009_162 var1179826))
(assert (= temp1009_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1009_162)))
(assert (= temp1009_161 temp1009_163))
(assert (= var1191802 (bvsmod temp1009_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1009_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1009_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1009_165 #x0000000000000001))
(assert (= var1191803 temp1009_165))
(assert (= temp1009_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1009_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1009_167 #x0000000000000001))
(assert (= var1191823 temp1009_167))
(assert (= temp1009_168 #x0000000000000001))
(assert (= var1180714 temp1009_168))
(assert (= temp1009_169 #x0000000000000000))
(assert (= temp1009_170 temp1009_169))
(assert (= temp1009_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1009_170)))
(assert (= temp1009_172 #x0000000000000001))
(assert (= temp1009_173 temp1009_172))
(assert (= temp1009_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1009_173)))
(assert (= temp1009_175 #x0000000000000002))
(assert (= temp1009_176 temp1009_175))
(assert (= temp1009_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1009_176)))
(assert (= temp1009_178 #x0000000000000003))
(assert (= temp1009_179 temp1009_178))
(assert (= temp1009_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1009_179)))
(assert (= temp1009_181 #x0000000000000004))
(assert (= temp1009_182 temp1009_181))
(assert (= temp1009_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1009_182)))
(assert (= temp1009_184 #x0000000000000005))
(assert (= temp1009_185 temp1009_184))
(assert (= temp1009_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1009_185)))
(assert (= temp1009_187 #x0000000000000000))
(assert (= temp1009_188
   (ite (bvslt var1180714 temp1009_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1009_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1009_188)))
(assert (= var1191831 temp1009_189))
(assert (bvslt (ite (bvslt var1180714 temp1009_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1009_190 #x0000000000000001))
(assert (= var1180714 temp1009_190))
(assert (= temp1009_192 var1180714))
(assert (= temp1009_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1009_192)))
(assert (= temp1009_191 temp1009_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1009_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1009_194 #x0000000000000001))
(assert (= var1191836 temp1009_194))
(assert (= temp1009_195 #x0000000000000000))
(assert (= var1179826 temp1009_195))
(assert (= temp1009_197 var1179826))
(assert (= temp1009_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1009_197)))
(assert (= temp1009_196 temp1009_198))
(assert (= temp1009_199 #x0000000000000002))
(assert (= var1586025 temp1009_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1009_200 #x0000000000000001))
(assert (= var1191993 temp1009_200))
(assert (= temp1009_201 #x0000000000000001))
(assert (= var2700303 temp1009_201))
(assert (= temp1009_202 #x0000000000000001))
(assert (= var2962447 temp1009_202))
(assert (= temp1009_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1009_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1009_204 #x0000000000000001))
(assert (= var211058 temp1009_204))
(assert (= temp1009_205 #x0000000000000001))
(assert (= var211188 temp1009_205))
(assert (= var3879401 var211188))
(assert (= temp1009_206 #x0000000000000000))
(assert (= var3866802 temp1009_206))
(assert (= temp1009_207 #x0000000000000000))
(assert (= temp1009_208
   (ite (bvslt var3866802 temp1009_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1009_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1009_208)))
(assert (= var3879420 temp1009_209))
(assert (bvslt (ite (bvslt var3866802 temp1009_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1009_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1009_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1009_211 #x0000000000000001))
(assert (= var3879421 temp1009_211))
(assert (= temp1009_212 #x0000000000000000))
(assert (= var4079423 temp1009_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1009_213 #x0000000000000002))
(assert (= var4208259 temp1009_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1009_214 #x0000000000000000))
(assert (= var4273820 temp1009_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp1009_215 #x0000000000000001))
(assert (= var211058 temp1009_215))
(model-add temp1009_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1009_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1009_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1009_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






