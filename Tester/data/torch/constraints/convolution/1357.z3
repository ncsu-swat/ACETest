(declare-fun temp10540_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10540_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10540_3 () (_ BitVec 64))
(declare-fun temp10540_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10540_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10540_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10540_7 () (_ BitVec 64))
(declare-fun temp10540_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10540_9 () (_ BitVec 64))
(declare-fun temp10540_10 () (_ BitVec 64))
(declare-fun temp10540_11 () (_ BitVec 64))
(declare-fun temp10540_12 () (_ BitVec 64))
(declare-fun temp10540_13 () (_ BitVec 64))
(declare-fun temp10540_14 () (_ BitVec 64))
(declare-fun temp10540_15 () (_ BitVec 64))
(declare-fun temp10540_16 () (_ BitVec 64))
(declare-fun temp10540_17 () (_ BitVec 64))
(declare-fun temp10540_18 () (_ BitVec 64))
(declare-fun temp10540_19 () (_ BitVec 64))
(declare-fun temp10540_20 () (_ BitVec 64))
(declare-fun temp10540_21 () (_ BitVec 64))
(declare-fun temp10540_22 () (_ BitVec 64))
(declare-fun temp10540_23 () (_ BitVec 64))
(declare-fun temp10540_24 () (_ BitVec 64))
(declare-fun temp10540_25 () (_ BitVec 64))
(declare-fun temp10540_26 () (_ BitVec 64))
(declare-fun temp10540_27 () (_ BitVec 64))
(declare-fun temp10540_28 () (_ BitVec 64))
(declare-fun temp10540_29 () (_ BitVec 64))
(declare-fun temp10540_30 () (_ BitVec 64))
(declare-fun temp10540_31 () (_ BitVec 64))
(declare-fun temp10540_32 () (_ BitVec 64))
(declare-fun temp10540_33 () (_ BitVec 64))
(declare-fun temp10540_34 () (_ BitVec 64))
(declare-fun temp10540_35 () (_ BitVec 64))
(declare-fun temp10540_36 () (_ BitVec 64))
(declare-fun temp10540_37 () (_ BitVec 64))
(declare-fun temp10540_38 () (_ BitVec 64))
(declare-fun temp10540_39 () (_ BitVec 64))
(declare-fun temp10540_40 () (_ BitVec 64))
(declare-fun temp10540_41 () (_ BitVec 64))
(declare-fun temp10540_42 () (_ BitVec 64))
(declare-fun temp10540_43 () (_ BitVec 64))
(declare-fun temp10540_44 () (_ BitVec 64))
(declare-fun temp10540_45 () (_ BitVec 64))
(declare-fun temp10540_46 () (_ BitVec 64))
(declare-fun temp10540_47 () (_ BitVec 64))
(declare-fun temp10540_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10540_49 () (_ BitVec 64))
(declare-fun temp10540_50 () (_ BitVec 64))
(declare-fun temp10540_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10540_52 () (_ BitVec 64))
(declare-fun temp10540_53 () (_ BitVec 64))
(declare-fun temp10540_54 () (_ BitVec 64))
(declare-fun temp10540_55 () (_ BitVec 64))
(declare-fun temp10540_56 () (_ BitVec 64))
(declare-fun temp10540_57 () (_ BitVec 64))
(declare-fun temp10540_58 () (_ BitVec 64))
(declare-fun temp10540_59 () (_ BitVec 64))
(declare-fun temp10540_60 () (_ BitVec 64))
(declare-fun temp10540_61 () (_ BitVec 64))
(declare-fun temp10540_62 () (_ BitVec 64))
(declare-fun temp10540_63 () (_ BitVec 64))
(declare-fun temp10540_64 () (_ BitVec 64))
(declare-fun temp10540_65 () (_ BitVec 64))
(declare-fun temp10540_66 () (_ BitVec 64))
(declare-fun temp10540_67 () (_ BitVec 64))
(declare-fun temp10540_68 () (_ BitVec 64))
(declare-fun temp10540_69 () (_ BitVec 64))
(declare-fun temp10540_70 () (_ BitVec 64))
(declare-fun temp10540_71 () (_ BitVec 64))
(declare-fun temp10540_72 () (_ BitVec 64))
(declare-fun temp10540_73 () (_ BitVec 64))
(declare-fun temp10540_74 () (_ BitVec 64))
(declare-fun temp10540_75 () (_ BitVec 64))
(declare-fun temp10540_76 () (_ BitVec 64))
(declare-fun temp10540_77 () (_ BitVec 64))
(declare-fun temp10540_78 () (_ BitVec 64))
(declare-fun temp10540_79 () (_ BitVec 64))
(declare-fun temp10540_80 () (_ BitVec 64))
(declare-fun temp10540_81 () (_ BitVec 64))
(declare-fun temp10540_82 () (_ BitVec 64))
(declare-fun temp10540_83 () (_ BitVec 64))
(declare-fun temp10540_84 () (_ BitVec 64))
(declare-fun temp10540_85 () (_ BitVec 64))
(declare-fun temp10540_86 () (_ BitVec 64))
(declare-fun temp10540_87 () (_ BitVec 64))
(declare-fun temp10540_88 () (_ BitVec 64))
(declare-fun temp10540_89 () (_ BitVec 64))
(declare-fun temp10540_90 () (_ BitVec 64))
(declare-fun temp10540_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10540_92 () (_ BitVec 64))
(declare-fun temp10540_93 () (_ BitVec 64))
(declare-fun temp10540_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10540_95 () (_ BitVec 64))
(declare-fun temp10540_96 () (_ BitVec 64))
(declare-fun temp10540_97 () (_ BitVec 64))
(declare-fun temp10540_98 () (_ BitVec 64))
(declare-fun temp10540_99 () (_ BitVec 64))
(declare-fun temp10540_100 () (_ BitVec 64))
(declare-fun temp10540_101 () (_ BitVec 64))
(declare-fun temp10540_102 () (_ BitVec 64))
(declare-fun temp10540_103 () (_ BitVec 64))
(declare-fun temp10540_104 () (_ BitVec 64))
(declare-fun temp10540_105 () (_ BitVec 64))
(declare-fun temp10540_106 () (_ BitVec 64))
(declare-fun temp10540_107 () (_ BitVec 64))
(declare-fun temp10540_108 () (_ BitVec 64))
(declare-fun temp10540_109 () (_ BitVec 64))
(declare-fun temp10540_110 () (_ BitVec 64))
(declare-fun temp10540_111 () (_ BitVec 64))
(declare-fun temp10540_112 () (_ BitVec 64))
(declare-fun temp10540_113 () (_ BitVec 64))
(declare-fun temp10540_114 () (_ BitVec 64))
(declare-fun temp10540_115 () (_ BitVec 64))
(declare-fun temp10540_116 () (_ BitVec 64))
(declare-fun temp10540_117 () (_ BitVec 64))
(declare-fun temp10540_118 () (_ BitVec 64))
(declare-fun temp10540_119 () (_ BitVec 64))
(declare-fun temp10540_120 () (_ BitVec 64))
(declare-fun temp10540_121 () (_ BitVec 64))
(declare-fun temp10540_122 () (_ BitVec 64))
(declare-fun temp10540_123 () (_ BitVec 64))
(declare-fun temp10540_124 () (_ BitVec 64))
(declare-fun temp10540_125 () (_ BitVec 64))
(declare-fun temp10540_126 () (_ BitVec 64))
(declare-fun temp10540_127 () (_ BitVec 64))
(declare-fun temp10540_128 () (_ BitVec 64))
(declare-fun temp10540_129 () (_ BitVec 64))
(declare-fun temp10540_130 () (_ BitVec 64))
(declare-fun temp10540_131 () (_ BitVec 64))
(declare-fun temp10540_132 () (_ BitVec 64))
(declare-fun temp10540_133 () (_ BitVec 64))
(declare-fun temp10540_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10540_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10540_136 () (_ BitVec 64))
(declare-fun temp10540_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10540_138 () (_ BitVec 64))
(declare-fun temp10540_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10540_140 () (_ BitVec 64))
(declare-fun temp10540_141 () (_ BitVec 64))
(declare-fun temp10540_142 () (_ BitVec 64))
(declare-fun temp10540_143 () (_ BitVec 64))
(declare-fun temp10540_144 () (_ BitVec 64))
(declare-fun temp10540_145 () (_ BitVec 64))
(declare-fun temp10540_146 () (_ BitVec 64))
(declare-fun temp10540_147 () (_ BitVec 64))
(declare-fun temp10540_148 () (_ BitVec 64))
(declare-fun temp10540_149 () (_ BitVec 64))
(declare-fun temp10540_150 () (_ BitVec 64))
(declare-fun temp10540_151 () (_ BitVec 64))
(declare-fun temp10540_152 () (_ BitVec 64))
(declare-fun temp10540_153 () (_ BitVec 64))
(declare-fun temp10540_154 () (_ BitVec 64))
(declare-fun temp10540_155 () (_ BitVec 64))
(declare-fun temp10540_157 () (_ BitVec 64))
(declare-fun temp10540_158 () (_ BitVec 64))
(declare-fun temp10540_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10540_159 () (_ BitVec 64))
(declare-fun temp10540_160 () (_ BitVec 64))
(declare-fun temp10540_162 () (_ BitVec 64))
(declare-fun temp10540_163 () (_ BitVec 64))
(declare-fun temp10540_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10540_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10540_165 () (_ BitVec 64))
(declare-fun temp10540_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10540_167 () (_ BitVec 64))
(declare-fun temp10540_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10540_169 () (_ BitVec 64))
(declare-fun temp10540_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10540_171 () (_ BitVec 64))
(declare-fun temp10540_172 () (_ BitVec 64))
(declare-fun temp10540_173 () (_ BitVec 64))
(declare-fun temp10540_174 () (_ BitVec 64))
(declare-fun temp10540_175 () (_ BitVec 64))
(declare-fun temp10540_176 () (_ BitVec 64))
(declare-fun temp10540_177 () (_ BitVec 64))
(declare-fun temp10540_178 () (_ BitVec 64))
(declare-fun temp10540_179 () (_ BitVec 64))
(declare-fun temp10540_180 () (_ BitVec 64))
(declare-fun temp10540_181 () (_ BitVec 64))
(declare-fun temp10540_182 () (_ BitVec 64))
(declare-fun temp10540_183 () (_ BitVec 64))
(declare-fun temp10540_184 () (_ BitVec 64))
(declare-fun temp10540_185 () (_ BitVec 64))
(declare-fun temp10540_186 () (_ BitVec 64))
(declare-fun temp10540_187 () (_ BitVec 64))
(declare-fun temp10540_188 () (_ BitVec 64))
(declare-fun temp10540_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10540_190 () (_ BitVec 64))
(declare-fun temp10540_192 () (_ BitVec 64))
(declare-fun temp10540_193 () (_ BitVec 64))
(declare-fun temp10540_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10540_194 () (_ BitVec 64))
(declare-fun temp10540_195 () (_ BitVec 64))
(declare-fun temp10540_197 () (_ BitVec 64))
(declare-fun temp10540_198 () (_ BitVec 64))
(declare-fun temp10540_196 () (_ BitVec 64))
(declare-fun temp10540_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10540_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10540_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10540_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10540_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10540_204 () (_ BitVec 64))
(declare-fun temp10540_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10540_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10540_207 () (_ BitVec 64))
(declare-fun temp10540_208 () (_ BitVec 64))
(declare-fun temp10540_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10540_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10540_211 () (_ BitVec 64))
(declare-fun temp10540_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10540_213 () (_ BitVec 64))
(declare-fun temp10540_214 () (_ BitVec 64))
(declare-fun temp10540_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10540_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10540_217 () (_ BitVec 64))
(declare-fun temp10540_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10540_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10540_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp10540_221 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var6045517 () (_ BitVec 64))
(declare-fun temp10540_222 () (_ BitVec 64))
(declare-fun temp10540_223 () (_ BitVec 64))
(declare-fun var6566676 () (_ BitVec 64))
(declare-fun var6566643 () (_ BitVec 64))
(declare-fun var6435207 () (_ BitVec 64))
(declare-fun var6435203 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10540_224 () (_ BitVec 64))
(assert (= temp10540_1 #x0000000000000001))
(assert (= var77203 temp10540_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10540_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10540_2)))
(assert (= temp10540_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10540_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10540_4 #x0000000000000000))
(assert (= var210941 temp10540_4))
(assert (= temp10540_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10540_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10540_6 #x0000000000000000))
(assert (= var210986 temp10540_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10540_7 #x0000000000000000))
(assert (= temp10540_8 temp10540_7))
(assert (= temp10540_9 (select ARGNAME_padding_NAMEEND_VAL temp10540_8)))
(assert (= temp10540_10 #x0000000000000001))
(assert (= temp10540_11 temp10540_10))
(assert (= temp10540_12 (select ARGNAME_padding_NAMEEND_VAL temp10540_11)))
(assert (= temp10540_13 #x0000000000000002))
(assert (= temp10540_14 temp10540_13))
(assert (= temp10540_15 (select ARGNAME_padding_NAMEEND_VAL temp10540_14)))
(assert (= temp10540_16 #x0000000000000003))
(assert (= temp10540_17 temp10540_16))
(assert (= temp10540_18 (select ARGNAME_padding_NAMEEND_VAL temp10540_17)))
(assert (= temp10540_19 #x0000000000000004))
(assert (= temp10540_20 temp10540_19))
(assert (= temp10540_21 (select ARGNAME_padding_NAMEEND_VAL temp10540_20)))
(assert (= temp10540_22 #x0000000000000005))
(assert (= temp10540_23 temp10540_22))
(assert (= temp10540_24 (select ARGNAME_padding_NAMEEND_VAL temp10540_23)))
(assert (= temp10540_25 #x0000000000000000))
(assert (= temp10540_26 #x0000000000000000))
(assert (= temp10540_27 temp10540_26))
(assert (= temp10540_28 (select ARGNAME_padding_NAMEEND_VAL temp10540_27)))
(assert (= temp10540_29 #x0000000000000000))
(assert (= temp10540_30 #x0000000000000001))
(assert (= temp10540_31 temp10540_30))
(assert (= temp10540_32 (select ARGNAME_padding_NAMEEND_VAL temp10540_31)))
(assert (= temp10540_33 #x0000000000000000))
(assert (= temp10540_34 #x0000000000000002))
(assert (= temp10540_35 temp10540_34))
(assert (= temp10540_36 (select ARGNAME_padding_NAMEEND_VAL temp10540_35)))
(assert (= temp10540_37 #x0000000000000000))
(assert (= temp10540_38 #x0000000000000003))
(assert (= temp10540_39 temp10540_38))
(assert (= temp10540_40 (select ARGNAME_padding_NAMEEND_VAL temp10540_39)))
(assert (= temp10540_41 #x0000000000000000))
(assert (= temp10540_42 #x0000000000000004))
(assert (= temp10540_43 temp10540_42))
(assert (= temp10540_44 (select ARGNAME_padding_NAMEEND_VAL temp10540_43)))
(assert (= temp10540_45 #x0000000000000000))
(assert (= temp10540_46 #x0000000000000005))
(assert (= temp10540_47 temp10540_46))
(assert (= temp10540_48 (select ARGNAME_padding_NAMEEND_VAL temp10540_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10540_28 temp10540_25)
             (bvslt temp10540_32 temp10540_29)
             (bvslt temp10540_36 temp10540_33)
             (bvslt temp10540_40 temp10540_37)
             (bvslt temp10540_44 temp10540_41)
             (bvslt temp10540_48 temp10540_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10540_49 #x0000000000000000))
(assert (= var1191714 temp10540_49))
(assert (= temp10540_50 #x0000000000000000))
(assert (= temp10540_51 temp10540_50))
(assert (= temp10540_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10540_51)))
(assert (= temp10540_53 #x0000000000000001))
(assert (= temp10540_54 temp10540_53))
(assert (= temp10540_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10540_54)))
(assert (= temp10540_56 #x0000000000000002))
(assert (= temp10540_57 temp10540_56))
(assert (= temp10540_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10540_57)))
(assert (= temp10540_59 #x0000000000000003))
(assert (= temp10540_60 temp10540_59))
(assert (= temp10540_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10540_60)))
(assert (= temp10540_62 #x0000000000000004))
(assert (= temp10540_63 temp10540_62))
(assert (= temp10540_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10540_63)))
(assert (= temp10540_65 #x0000000000000005))
(assert (= temp10540_66 temp10540_65))
(assert (= temp10540_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10540_66)))
(assert (= temp10540_68 #x0000000000000000))
(assert (= temp10540_69 #x0000000000000000))
(assert (= temp10540_70 temp10540_69))
(assert (= temp10540_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10540_70)))
(assert (= temp10540_72 #x0000000000000000))
(assert (= temp10540_73 #x0000000000000001))
(assert (= temp10540_74 temp10540_73))
(assert (= temp10540_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10540_74)))
(assert (= temp10540_76 #x0000000000000000))
(assert (= temp10540_77 #x0000000000000002))
(assert (= temp10540_78 temp10540_77))
(assert (= temp10540_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10540_78)))
(assert (= temp10540_80 #x0000000000000000))
(assert (= temp10540_81 #x0000000000000003))
(assert (= temp10540_82 temp10540_81))
(assert (= temp10540_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10540_82)))
(assert (= temp10540_84 #x0000000000000000))
(assert (= temp10540_85 #x0000000000000004))
(assert (= temp10540_86 temp10540_85))
(assert (= temp10540_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10540_86)))
(assert (= temp10540_88 #x0000000000000000))
(assert (= temp10540_89 #x0000000000000005))
(assert (= temp10540_90 temp10540_89))
(assert (= temp10540_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10540_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10540_71 temp10540_68)
             (bvslt temp10540_75 temp10540_72)
             (bvslt temp10540_79 temp10540_76)
             (bvslt temp10540_83 temp10540_80)
             (bvslt temp10540_87 temp10540_84)
             (bvslt temp10540_91 temp10540_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10540_92 #x0000000000000000))
(assert (= var1191725 temp10540_92))
(assert (= temp10540_93 #x0000000000000000))
(assert (= temp10540_94 temp10540_93))
(assert (= temp10540_95 (select ARGNAME_stride_NAMEEND_VAL temp10540_94)))
(assert (= temp10540_96 #x0000000000000001))
(assert (= temp10540_97 temp10540_96))
(assert (= temp10540_98 (select ARGNAME_stride_NAMEEND_VAL temp10540_97)))
(assert (= temp10540_99 #x0000000000000002))
(assert (= temp10540_100 temp10540_99))
(assert (= temp10540_101 (select ARGNAME_stride_NAMEEND_VAL temp10540_100)))
(assert (= temp10540_102 #x0000000000000003))
(assert (= temp10540_103 temp10540_102))
(assert (= temp10540_104 (select ARGNAME_stride_NAMEEND_VAL temp10540_103)))
(assert (= temp10540_105 #x0000000000000004))
(assert (= temp10540_106 temp10540_105))
(assert (= temp10540_107 (select ARGNAME_stride_NAMEEND_VAL temp10540_106)))
(assert (= temp10540_108 #x0000000000000005))
(assert (= temp10540_109 temp10540_108))
(assert (= temp10540_110 (select ARGNAME_stride_NAMEEND_VAL temp10540_109)))
(assert (= temp10540_111 #x0000000000000000))
(assert (= temp10540_112 #x0000000000000000))
(assert (= temp10540_113 temp10540_112))
(assert (= temp10540_114 (select ARGNAME_stride_NAMEEND_VAL temp10540_113)))
(assert (= temp10540_115 #x0000000000000000))
(assert (= temp10540_116 #x0000000000000001))
(assert (= temp10540_117 temp10540_116))
(assert (= temp10540_118 (select ARGNAME_stride_NAMEEND_VAL temp10540_117)))
(assert (= temp10540_119 #x0000000000000000))
(assert (= temp10540_120 #x0000000000000002))
(assert (= temp10540_121 temp10540_120))
(assert (= temp10540_122 (select ARGNAME_stride_NAMEEND_VAL temp10540_121)))
(assert (= temp10540_123 #x0000000000000000))
(assert (= temp10540_124 #x0000000000000003))
(assert (= temp10540_125 temp10540_124))
(assert (= temp10540_126 (select ARGNAME_stride_NAMEEND_VAL temp10540_125)))
(assert (= temp10540_127 #x0000000000000000))
(assert (= temp10540_128 #x0000000000000004))
(assert (= temp10540_129 temp10540_128))
(assert (= temp10540_130 (select ARGNAME_stride_NAMEEND_VAL temp10540_129)))
(assert (= temp10540_131 #x0000000000000000))
(assert (= temp10540_132 #x0000000000000005))
(assert (= temp10540_133 temp10540_132))
(assert (= temp10540_134 (select ARGNAME_stride_NAMEEND_VAL temp10540_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10540_114 temp10540_111)
             (bvsle temp10540_118 temp10540_115)
             (bvsle temp10540_122 temp10540_119)
             (bvsle temp10540_126 temp10540_123)
             (bvsle temp10540_130 temp10540_127)
             (bvsle temp10540_134 temp10540_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10540_135 #x0000000000000000))
(assert (= var1191735 temp10540_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10540_136 #x0000000000000001))
(assert (= var1191747 temp10540_136))
(assert (= temp10540_137 #x0000000000000000))
(assert (= var1179826 temp10540_137))
(assert (= temp10540_138 #x0000000000000000))
(assert (= temp10540_139 temp10540_138))
(assert (= temp10540_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10540_139)))
(assert (= temp10540_141 #x0000000000000001))
(assert (= temp10540_142 temp10540_141))
(assert (= temp10540_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10540_142)))
(assert (= temp10540_144 #x0000000000000002))
(assert (= temp10540_145 temp10540_144))
(assert (= temp10540_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10540_145)))
(assert (= temp10540_147 #x0000000000000003))
(assert (= temp10540_148 temp10540_147))
(assert (= temp10540_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10540_148)))
(assert (= temp10540_150 #x0000000000000004))
(assert (= temp10540_151 temp10540_150))
(assert (= temp10540_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10540_151)))
(assert (= temp10540_153 #x0000000000000005))
(assert (= temp10540_154 temp10540_153))
(assert (= temp10540_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10540_154)))
(assert (= temp10540_157 var1179826))
(assert (= temp10540_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10540_157)))
(assert (= temp10540_156 temp10540_158))
(assert (= var1191780
   (ite (bvslt temp10540_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10540_159 #x0000000000000000))
(assert (= var1191780 temp10540_159))
(assert (= temp10540_160 #x0000000000000000))
(assert (= var1179826 temp10540_160))
(assert (= temp10540_162 var1179826))
(assert (= temp10540_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10540_162)))
(assert (= temp10540_161 temp10540_163))
(assert (= var1191802 (bvsmod temp10540_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10540_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10540_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10540_165 #x0000000000000001))
(assert (= var1191803 temp10540_165))
(assert (= temp10540_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10540_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10540_167 #x0000000000000001))
(assert (= var1191823 temp10540_167))
(assert (= temp10540_168 #x0000000000000001))
(assert (= var1180714 temp10540_168))
(assert (= temp10540_169 #x0000000000000000))
(assert (= temp10540_170 temp10540_169))
(assert (= temp10540_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10540_170)))
(assert (= temp10540_172 #x0000000000000001))
(assert (= temp10540_173 temp10540_172))
(assert (= temp10540_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10540_173)))
(assert (= temp10540_175 #x0000000000000002))
(assert (= temp10540_176 temp10540_175))
(assert (= temp10540_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10540_176)))
(assert (= temp10540_178 #x0000000000000003))
(assert (= temp10540_179 temp10540_178))
(assert (= temp10540_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10540_179)))
(assert (= temp10540_181 #x0000000000000004))
(assert (= temp10540_182 temp10540_181))
(assert (= temp10540_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10540_182)))
(assert (= temp10540_184 #x0000000000000005))
(assert (= temp10540_185 temp10540_184))
(assert (= temp10540_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10540_185)))
(assert (= temp10540_187 #x0000000000000000))
(assert (= temp10540_188
   (ite (bvslt var1180714 temp10540_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10540_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10540_188)))
(assert (= var1191831 temp10540_189))
(assert (bvslt (ite (bvslt var1180714 temp10540_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10540_190 #x0000000000000001))
(assert (= var1180714 temp10540_190))
(assert (= temp10540_192 var1180714))
(assert (= temp10540_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10540_192)))
(assert (= temp10540_191 temp10540_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10540_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10540_194 #x0000000000000001))
(assert (= var1191836 temp10540_194))
(assert (= temp10540_195 #x0000000000000000))
(assert (= var1179826 temp10540_195))
(assert (= temp10540_197 var1179826))
(assert (= temp10540_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10540_197)))
(assert (= temp10540_196 temp10540_198))
(assert (= temp10540_199 #x0000000000000002))
(assert (= var1586025 temp10540_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10540_200 #x0000000000000001))
(assert (= var1191993 temp10540_200))
(assert (= temp10540_201 #x0000000000000001))
(assert (= var2700303 temp10540_201))
(assert (= temp10540_202 #x0000000000000001))
(assert (= var2962447 temp10540_202))
(assert (= temp10540_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10540_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10540_204 #x0000000000000001))
(assert (= var211058 temp10540_204))
(assert (= temp10540_205 #x0000000000000001))
(assert (= var211188 temp10540_205))
(assert (= var3879401 var211188))
(assert (= temp10540_206 #x0000000000000000))
(assert (= var3866802 temp10540_206))
(assert (= temp10540_207 #x0000000000000000))
(assert (= temp10540_208
   (ite (bvslt var3866802 temp10540_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10540_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10540_208)))
(assert (= var3879420 temp10540_209))
(assert (bvslt (ite (bvslt var3866802 temp10540_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10540_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10540_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10540_211 #x0000000000000000))
(assert (= var3879421 temp10540_211))
(assert (= temp10540_212 #x0000000000000001))
(assert (= var3867690 temp10540_212))
(assert (= temp10540_213 #x0000000000000000))
(assert (= temp10540_214
   (ite (bvslt var3867690 temp10540_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10540_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10540_214)))
(assert (= var3879423 temp10540_215))
(assert (bvslt (ite (bvslt var3867690 temp10540_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10540_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10540_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10540_217 #x0000000000000001))
(assert (= var3879424 temp10540_217))
(assert (= temp10540_218 #x0000000000000000))
(assert (= var4133117 temp10540_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10540_219 #x0000000000000002))
(assert (= var4339331 temp10540_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10540_220 #x0000000000000000))
(assert (= var4404892 temp10540_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5124496 var211201))
(assert (= var211388 var210913))
(assert (= temp10540_221 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp10540_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var6045517 var211389))
(assert (= temp10540_222 #x0000000000000001))
(assert (= var211058 temp10540_222))
(assert (= temp10540_223 #x0000000000000000))
(assert (= var6566676 temp10540_223))
(assert (= var6566643 var6566676))
(assert (= var6435207 var6566643))
(assert (= var6435203 var6435207))
(assert (= var212669 var6435203))
(assert (= temp10540_224 #x0000000000000000))
(assert (= var212669 temp10540_224))
(model-add temp10540_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10540_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10540_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10540_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





