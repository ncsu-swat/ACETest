(declare-fun temp10253_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10253_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10253_3 () (_ BitVec 64))
(declare-fun temp10253_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10253_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10253_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10253_7 () (_ BitVec 64))
(declare-fun temp10253_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10253_9 () (_ BitVec 64))
(declare-fun temp10253_10 () (_ BitVec 64))
(declare-fun temp10253_11 () (_ BitVec 64))
(declare-fun temp10253_12 () (_ BitVec 64))
(declare-fun temp10253_13 () (_ BitVec 64))
(declare-fun temp10253_14 () (_ BitVec 64))
(declare-fun temp10253_15 () (_ BitVec 64))
(declare-fun temp10253_16 () (_ BitVec 64))
(declare-fun temp10253_17 () (_ BitVec 64))
(declare-fun temp10253_18 () (_ BitVec 64))
(declare-fun temp10253_19 () (_ BitVec 64))
(declare-fun temp10253_20 () (_ BitVec 64))
(declare-fun temp10253_21 () (_ BitVec 64))
(declare-fun temp10253_22 () (_ BitVec 64))
(declare-fun temp10253_23 () (_ BitVec 64))
(declare-fun temp10253_24 () (_ BitVec 64))
(declare-fun temp10253_25 () (_ BitVec 64))
(declare-fun temp10253_26 () (_ BitVec 64))
(declare-fun temp10253_27 () (_ BitVec 64))
(declare-fun temp10253_28 () (_ BitVec 64))
(declare-fun temp10253_29 () (_ BitVec 64))
(declare-fun temp10253_30 () (_ BitVec 64))
(declare-fun temp10253_31 () (_ BitVec 64))
(declare-fun temp10253_32 () (_ BitVec 64))
(declare-fun temp10253_33 () (_ BitVec 64))
(declare-fun temp10253_34 () (_ BitVec 64))
(declare-fun temp10253_35 () (_ BitVec 64))
(declare-fun temp10253_36 () (_ BitVec 64))
(declare-fun temp10253_37 () (_ BitVec 64))
(declare-fun temp10253_38 () (_ BitVec 64))
(declare-fun temp10253_39 () (_ BitVec 64))
(declare-fun temp10253_40 () (_ BitVec 64))
(declare-fun temp10253_41 () (_ BitVec 64))
(declare-fun temp10253_42 () (_ BitVec 64))
(declare-fun temp10253_43 () (_ BitVec 64))
(declare-fun temp10253_44 () (_ BitVec 64))
(declare-fun temp10253_45 () (_ BitVec 64))
(declare-fun temp10253_46 () (_ BitVec 64))
(declare-fun temp10253_47 () (_ BitVec 64))
(declare-fun temp10253_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10253_49 () (_ BitVec 64))
(declare-fun temp10253_50 () (_ BitVec 64))
(declare-fun temp10253_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10253_52 () (_ BitVec 64))
(declare-fun temp10253_53 () (_ BitVec 64))
(declare-fun temp10253_54 () (_ BitVec 64))
(declare-fun temp10253_55 () (_ BitVec 64))
(declare-fun temp10253_56 () (_ BitVec 64))
(declare-fun temp10253_57 () (_ BitVec 64))
(declare-fun temp10253_58 () (_ BitVec 64))
(declare-fun temp10253_59 () (_ BitVec 64))
(declare-fun temp10253_60 () (_ BitVec 64))
(declare-fun temp10253_61 () (_ BitVec 64))
(declare-fun temp10253_62 () (_ BitVec 64))
(declare-fun temp10253_63 () (_ BitVec 64))
(declare-fun temp10253_64 () (_ BitVec 64))
(declare-fun temp10253_65 () (_ BitVec 64))
(declare-fun temp10253_66 () (_ BitVec 64))
(declare-fun temp10253_67 () (_ BitVec 64))
(declare-fun temp10253_68 () (_ BitVec 64))
(declare-fun temp10253_69 () (_ BitVec 64))
(declare-fun temp10253_70 () (_ BitVec 64))
(declare-fun temp10253_71 () (_ BitVec 64))
(declare-fun temp10253_72 () (_ BitVec 64))
(declare-fun temp10253_73 () (_ BitVec 64))
(declare-fun temp10253_74 () (_ BitVec 64))
(declare-fun temp10253_75 () (_ BitVec 64))
(declare-fun temp10253_76 () (_ BitVec 64))
(declare-fun temp10253_77 () (_ BitVec 64))
(declare-fun temp10253_78 () (_ BitVec 64))
(declare-fun temp10253_79 () (_ BitVec 64))
(declare-fun temp10253_80 () (_ BitVec 64))
(declare-fun temp10253_81 () (_ BitVec 64))
(declare-fun temp10253_82 () (_ BitVec 64))
(declare-fun temp10253_83 () (_ BitVec 64))
(declare-fun temp10253_84 () (_ BitVec 64))
(declare-fun temp10253_85 () (_ BitVec 64))
(declare-fun temp10253_86 () (_ BitVec 64))
(declare-fun temp10253_87 () (_ BitVec 64))
(declare-fun temp10253_88 () (_ BitVec 64))
(declare-fun temp10253_89 () (_ BitVec 64))
(declare-fun temp10253_90 () (_ BitVec 64))
(declare-fun temp10253_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10253_92 () (_ BitVec 64))
(declare-fun temp10253_93 () (_ BitVec 64))
(declare-fun temp10253_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10253_95 () (_ BitVec 64))
(declare-fun temp10253_96 () (_ BitVec 64))
(declare-fun temp10253_97 () (_ BitVec 64))
(declare-fun temp10253_98 () (_ BitVec 64))
(declare-fun temp10253_99 () (_ BitVec 64))
(declare-fun temp10253_100 () (_ BitVec 64))
(declare-fun temp10253_101 () (_ BitVec 64))
(declare-fun temp10253_102 () (_ BitVec 64))
(declare-fun temp10253_103 () (_ BitVec 64))
(declare-fun temp10253_104 () (_ BitVec 64))
(declare-fun temp10253_105 () (_ BitVec 64))
(declare-fun temp10253_106 () (_ BitVec 64))
(declare-fun temp10253_107 () (_ BitVec 64))
(declare-fun temp10253_108 () (_ BitVec 64))
(declare-fun temp10253_109 () (_ BitVec 64))
(declare-fun temp10253_110 () (_ BitVec 64))
(declare-fun temp10253_111 () (_ BitVec 64))
(declare-fun temp10253_112 () (_ BitVec 64))
(declare-fun temp10253_113 () (_ BitVec 64))
(declare-fun temp10253_114 () (_ BitVec 64))
(declare-fun temp10253_115 () (_ BitVec 64))
(declare-fun temp10253_116 () (_ BitVec 64))
(declare-fun temp10253_117 () (_ BitVec 64))
(declare-fun temp10253_118 () (_ BitVec 64))
(declare-fun temp10253_119 () (_ BitVec 64))
(declare-fun temp10253_120 () (_ BitVec 64))
(declare-fun temp10253_121 () (_ BitVec 64))
(declare-fun temp10253_122 () (_ BitVec 64))
(declare-fun temp10253_123 () (_ BitVec 64))
(declare-fun temp10253_124 () (_ BitVec 64))
(declare-fun temp10253_125 () (_ BitVec 64))
(declare-fun temp10253_126 () (_ BitVec 64))
(declare-fun temp10253_127 () (_ BitVec 64))
(declare-fun temp10253_128 () (_ BitVec 64))
(declare-fun temp10253_129 () (_ BitVec 64))
(declare-fun temp10253_130 () (_ BitVec 64))
(declare-fun temp10253_131 () (_ BitVec 64))
(declare-fun temp10253_132 () (_ BitVec 64))
(declare-fun temp10253_133 () (_ BitVec 64))
(declare-fun temp10253_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10253_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10253_136 () (_ BitVec 64))
(declare-fun temp10253_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10253_138 () (_ BitVec 64))
(declare-fun temp10253_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10253_140 () (_ BitVec 64))
(declare-fun temp10253_141 () (_ BitVec 64))
(declare-fun temp10253_142 () (_ BitVec 64))
(declare-fun temp10253_143 () (_ BitVec 64))
(declare-fun temp10253_144 () (_ BitVec 64))
(declare-fun temp10253_145 () (_ BitVec 64))
(declare-fun temp10253_146 () (_ BitVec 64))
(declare-fun temp10253_147 () (_ BitVec 64))
(declare-fun temp10253_148 () (_ BitVec 64))
(declare-fun temp10253_149 () (_ BitVec 64))
(declare-fun temp10253_150 () (_ BitVec 64))
(declare-fun temp10253_151 () (_ BitVec 64))
(declare-fun temp10253_152 () (_ BitVec 64))
(declare-fun temp10253_153 () (_ BitVec 64))
(declare-fun temp10253_154 () (_ BitVec 64))
(declare-fun temp10253_155 () (_ BitVec 64))
(declare-fun temp10253_157 () (_ BitVec 64))
(declare-fun temp10253_158 () (_ BitVec 64))
(declare-fun temp10253_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10253_159 () (_ BitVec 64))
(declare-fun temp10253_160 () (_ BitVec 64))
(declare-fun temp10253_162 () (_ BitVec 64))
(declare-fun temp10253_163 () (_ BitVec 64))
(declare-fun temp10253_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10253_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10253_165 () (_ BitVec 64))
(declare-fun temp10253_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10253_167 () (_ BitVec 64))
(declare-fun temp10253_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10253_169 () (_ BitVec 64))
(declare-fun temp10253_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10253_171 () (_ BitVec 64))
(declare-fun temp10253_172 () (_ BitVec 64))
(declare-fun temp10253_173 () (_ BitVec 64))
(declare-fun temp10253_174 () (_ BitVec 64))
(declare-fun temp10253_175 () (_ BitVec 64))
(declare-fun temp10253_176 () (_ BitVec 64))
(declare-fun temp10253_177 () (_ BitVec 64))
(declare-fun temp10253_178 () (_ BitVec 64))
(declare-fun temp10253_179 () (_ BitVec 64))
(declare-fun temp10253_180 () (_ BitVec 64))
(declare-fun temp10253_181 () (_ BitVec 64))
(declare-fun temp10253_182 () (_ BitVec 64))
(declare-fun temp10253_183 () (_ BitVec 64))
(declare-fun temp10253_184 () (_ BitVec 64))
(declare-fun temp10253_185 () (_ BitVec 64))
(declare-fun temp10253_186 () (_ BitVec 64))
(declare-fun temp10253_187 () (_ BitVec 64))
(declare-fun temp10253_188 () (_ BitVec 64))
(declare-fun temp10253_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10253_190 () (_ BitVec 64))
(declare-fun temp10253_192 () (_ BitVec 64))
(declare-fun temp10253_193 () (_ BitVec 64))
(declare-fun temp10253_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10253_194 () (_ BitVec 64))
(declare-fun temp10253_195 () (_ BitVec 64))
(declare-fun temp10253_197 () (_ BitVec 64))
(declare-fun temp10253_198 () (_ BitVec 64))
(declare-fun temp10253_196 () (_ BitVec 64))
(declare-fun temp10253_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10253_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10253_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10253_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10253_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10253_204 () (_ BitVec 64))
(declare-fun temp10253_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10253_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10253_207 () (_ BitVec 64))
(declare-fun temp10253_208 () (_ BitVec 64))
(declare-fun temp10253_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10253_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10253_211 () (_ BitVec 64))
(declare-fun temp10253_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10253_213 () (_ BitVec 64))
(declare-fun temp10253_214 () (_ BitVec 64))
(declare-fun temp10253_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10253_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10253_217 () (_ BitVec 64))
(declare-fun temp10253_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10253_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10253_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun temp10253_221 () (_ BitVec 64))
(assert (= temp10253_1 #x0000000000000001))
(assert (= var77203 temp10253_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10253_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10253_2)))
(assert (= temp10253_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10253_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10253_4 #x0000000000000000))
(assert (= var210941 temp10253_4))
(assert (= temp10253_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10253_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10253_6 #x0000000000000000))
(assert (= var210986 temp10253_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10253_7 #x0000000000000000))
(assert (= temp10253_8 temp10253_7))
(assert (= temp10253_9 (select ARGNAME_padding_NAMEEND_VAL temp10253_8)))
(assert (= temp10253_10 #x0000000000000001))
(assert (= temp10253_11 temp10253_10))
(assert (= temp10253_12 (select ARGNAME_padding_NAMEEND_VAL temp10253_11)))
(assert (= temp10253_13 #x0000000000000002))
(assert (= temp10253_14 temp10253_13))
(assert (= temp10253_15 (select ARGNAME_padding_NAMEEND_VAL temp10253_14)))
(assert (= temp10253_16 #x0000000000000003))
(assert (= temp10253_17 temp10253_16))
(assert (= temp10253_18 (select ARGNAME_padding_NAMEEND_VAL temp10253_17)))
(assert (= temp10253_19 #x0000000000000004))
(assert (= temp10253_20 temp10253_19))
(assert (= temp10253_21 (select ARGNAME_padding_NAMEEND_VAL temp10253_20)))
(assert (= temp10253_22 #x0000000000000005))
(assert (= temp10253_23 temp10253_22))
(assert (= temp10253_24 (select ARGNAME_padding_NAMEEND_VAL temp10253_23)))
(assert (= temp10253_25 #x0000000000000000))
(assert (= temp10253_26 #x0000000000000000))
(assert (= temp10253_27 temp10253_26))
(assert (= temp10253_28 (select ARGNAME_padding_NAMEEND_VAL temp10253_27)))
(assert (= temp10253_29 #x0000000000000000))
(assert (= temp10253_30 #x0000000000000001))
(assert (= temp10253_31 temp10253_30))
(assert (= temp10253_32 (select ARGNAME_padding_NAMEEND_VAL temp10253_31)))
(assert (= temp10253_33 #x0000000000000000))
(assert (= temp10253_34 #x0000000000000002))
(assert (= temp10253_35 temp10253_34))
(assert (= temp10253_36 (select ARGNAME_padding_NAMEEND_VAL temp10253_35)))
(assert (= temp10253_37 #x0000000000000000))
(assert (= temp10253_38 #x0000000000000003))
(assert (= temp10253_39 temp10253_38))
(assert (= temp10253_40 (select ARGNAME_padding_NAMEEND_VAL temp10253_39)))
(assert (= temp10253_41 #x0000000000000000))
(assert (= temp10253_42 #x0000000000000004))
(assert (= temp10253_43 temp10253_42))
(assert (= temp10253_44 (select ARGNAME_padding_NAMEEND_VAL temp10253_43)))
(assert (= temp10253_45 #x0000000000000000))
(assert (= temp10253_46 #x0000000000000005))
(assert (= temp10253_47 temp10253_46))
(assert (= temp10253_48 (select ARGNAME_padding_NAMEEND_VAL temp10253_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10253_28 temp10253_25)
             (bvslt temp10253_32 temp10253_29)
             (bvslt temp10253_36 temp10253_33)
             (bvslt temp10253_40 temp10253_37)
             (bvslt temp10253_44 temp10253_41)
             (bvslt temp10253_48 temp10253_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10253_49 #x0000000000000000))
(assert (= var1191714 temp10253_49))
(assert (= temp10253_50 #x0000000000000000))
(assert (= temp10253_51 temp10253_50))
(assert (= temp10253_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10253_51)))
(assert (= temp10253_53 #x0000000000000001))
(assert (= temp10253_54 temp10253_53))
(assert (= temp10253_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10253_54)))
(assert (= temp10253_56 #x0000000000000002))
(assert (= temp10253_57 temp10253_56))
(assert (= temp10253_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10253_57)))
(assert (= temp10253_59 #x0000000000000003))
(assert (= temp10253_60 temp10253_59))
(assert (= temp10253_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10253_60)))
(assert (= temp10253_62 #x0000000000000004))
(assert (= temp10253_63 temp10253_62))
(assert (= temp10253_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10253_63)))
(assert (= temp10253_65 #x0000000000000005))
(assert (= temp10253_66 temp10253_65))
(assert (= temp10253_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10253_66)))
(assert (= temp10253_68 #x0000000000000000))
(assert (= temp10253_69 #x0000000000000000))
(assert (= temp10253_70 temp10253_69))
(assert (= temp10253_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10253_70)))
(assert (= temp10253_72 #x0000000000000000))
(assert (= temp10253_73 #x0000000000000001))
(assert (= temp10253_74 temp10253_73))
(assert (= temp10253_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10253_74)))
(assert (= temp10253_76 #x0000000000000000))
(assert (= temp10253_77 #x0000000000000002))
(assert (= temp10253_78 temp10253_77))
(assert (= temp10253_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10253_78)))
(assert (= temp10253_80 #x0000000000000000))
(assert (= temp10253_81 #x0000000000000003))
(assert (= temp10253_82 temp10253_81))
(assert (= temp10253_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10253_82)))
(assert (= temp10253_84 #x0000000000000000))
(assert (= temp10253_85 #x0000000000000004))
(assert (= temp10253_86 temp10253_85))
(assert (= temp10253_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10253_86)))
(assert (= temp10253_88 #x0000000000000000))
(assert (= temp10253_89 #x0000000000000005))
(assert (= temp10253_90 temp10253_89))
(assert (= temp10253_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10253_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10253_71 temp10253_68)
             (bvslt temp10253_75 temp10253_72)
             (bvslt temp10253_79 temp10253_76)
             (bvslt temp10253_83 temp10253_80)
             (bvslt temp10253_87 temp10253_84)
             (bvslt temp10253_91 temp10253_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10253_92 #x0000000000000000))
(assert (= var1191725 temp10253_92))
(assert (= temp10253_93 #x0000000000000000))
(assert (= temp10253_94 temp10253_93))
(assert (= temp10253_95 (select ARGNAME_stride_NAMEEND_VAL temp10253_94)))
(assert (= temp10253_96 #x0000000000000001))
(assert (= temp10253_97 temp10253_96))
(assert (= temp10253_98 (select ARGNAME_stride_NAMEEND_VAL temp10253_97)))
(assert (= temp10253_99 #x0000000000000002))
(assert (= temp10253_100 temp10253_99))
(assert (= temp10253_101 (select ARGNAME_stride_NAMEEND_VAL temp10253_100)))
(assert (= temp10253_102 #x0000000000000003))
(assert (= temp10253_103 temp10253_102))
(assert (= temp10253_104 (select ARGNAME_stride_NAMEEND_VAL temp10253_103)))
(assert (= temp10253_105 #x0000000000000004))
(assert (= temp10253_106 temp10253_105))
(assert (= temp10253_107 (select ARGNAME_stride_NAMEEND_VAL temp10253_106)))
(assert (= temp10253_108 #x0000000000000005))
(assert (= temp10253_109 temp10253_108))
(assert (= temp10253_110 (select ARGNAME_stride_NAMEEND_VAL temp10253_109)))
(assert (= temp10253_111 #x0000000000000000))
(assert (= temp10253_112 #x0000000000000000))
(assert (= temp10253_113 temp10253_112))
(assert (= temp10253_114 (select ARGNAME_stride_NAMEEND_VAL temp10253_113)))
(assert (= temp10253_115 #x0000000000000000))
(assert (= temp10253_116 #x0000000000000001))
(assert (= temp10253_117 temp10253_116))
(assert (= temp10253_118 (select ARGNAME_stride_NAMEEND_VAL temp10253_117)))
(assert (= temp10253_119 #x0000000000000000))
(assert (= temp10253_120 #x0000000000000002))
(assert (= temp10253_121 temp10253_120))
(assert (= temp10253_122 (select ARGNAME_stride_NAMEEND_VAL temp10253_121)))
(assert (= temp10253_123 #x0000000000000000))
(assert (= temp10253_124 #x0000000000000003))
(assert (= temp10253_125 temp10253_124))
(assert (= temp10253_126 (select ARGNAME_stride_NAMEEND_VAL temp10253_125)))
(assert (= temp10253_127 #x0000000000000000))
(assert (= temp10253_128 #x0000000000000004))
(assert (= temp10253_129 temp10253_128))
(assert (= temp10253_130 (select ARGNAME_stride_NAMEEND_VAL temp10253_129)))
(assert (= temp10253_131 #x0000000000000000))
(assert (= temp10253_132 #x0000000000000005))
(assert (= temp10253_133 temp10253_132))
(assert (= temp10253_134 (select ARGNAME_stride_NAMEEND_VAL temp10253_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10253_114 temp10253_111)
             (bvsle temp10253_118 temp10253_115)
             (bvsle temp10253_122 temp10253_119)
             (bvsle temp10253_126 temp10253_123)
             (bvsle temp10253_130 temp10253_127)
             (bvsle temp10253_134 temp10253_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10253_135 #x0000000000000000))
(assert (= var1191735 temp10253_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10253_136 #x0000000000000001))
(assert (= var1191747 temp10253_136))
(assert (= temp10253_137 #x0000000000000000))
(assert (= var1179826 temp10253_137))
(assert (= temp10253_138 #x0000000000000000))
(assert (= temp10253_139 temp10253_138))
(assert (= temp10253_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10253_139)))
(assert (= temp10253_141 #x0000000000000001))
(assert (= temp10253_142 temp10253_141))
(assert (= temp10253_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10253_142)))
(assert (= temp10253_144 #x0000000000000002))
(assert (= temp10253_145 temp10253_144))
(assert (= temp10253_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10253_145)))
(assert (= temp10253_147 #x0000000000000003))
(assert (= temp10253_148 temp10253_147))
(assert (= temp10253_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10253_148)))
(assert (= temp10253_150 #x0000000000000004))
(assert (= temp10253_151 temp10253_150))
(assert (= temp10253_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10253_151)))
(assert (= temp10253_153 #x0000000000000005))
(assert (= temp10253_154 temp10253_153))
(assert (= temp10253_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10253_154)))
(assert (= temp10253_157 var1179826))
(assert (= temp10253_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10253_157)))
(assert (= temp10253_156 temp10253_158))
(assert (= var1191780
   (ite (bvslt temp10253_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10253_159 #x0000000000000000))
(assert (= var1191780 temp10253_159))
(assert (= temp10253_160 #x0000000000000000))
(assert (= var1179826 temp10253_160))
(assert (= temp10253_162 var1179826))
(assert (= temp10253_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10253_162)))
(assert (= temp10253_161 temp10253_163))
(assert (= var1191802 (bvsmod temp10253_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10253_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10253_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10253_165 #x0000000000000001))
(assert (= var1191803 temp10253_165))
(assert (= temp10253_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10253_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10253_167 #x0000000000000001))
(assert (= var1191823 temp10253_167))
(assert (= temp10253_168 #x0000000000000001))
(assert (= var1180714 temp10253_168))
(assert (= temp10253_169 #x0000000000000000))
(assert (= temp10253_170 temp10253_169))
(assert (= temp10253_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10253_170)))
(assert (= temp10253_172 #x0000000000000001))
(assert (= temp10253_173 temp10253_172))
(assert (= temp10253_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10253_173)))
(assert (= temp10253_175 #x0000000000000002))
(assert (= temp10253_176 temp10253_175))
(assert (= temp10253_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10253_176)))
(assert (= temp10253_178 #x0000000000000003))
(assert (= temp10253_179 temp10253_178))
(assert (= temp10253_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10253_179)))
(assert (= temp10253_181 #x0000000000000004))
(assert (= temp10253_182 temp10253_181))
(assert (= temp10253_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10253_182)))
(assert (= temp10253_184 #x0000000000000005))
(assert (= temp10253_185 temp10253_184))
(assert (= temp10253_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10253_185)))
(assert (= temp10253_187 #x0000000000000000))
(assert (= temp10253_188
   (ite (bvslt var1180714 temp10253_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10253_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10253_188)))
(assert (= var1191831 temp10253_189))
(assert (bvslt (ite (bvslt var1180714 temp10253_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10253_190 #x0000000000000001))
(assert (= var1180714 temp10253_190))
(assert (= temp10253_192 var1180714))
(assert (= temp10253_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10253_192)))
(assert (= temp10253_191 temp10253_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10253_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10253_194 #x0000000000000001))
(assert (= var1191836 temp10253_194))
(assert (= temp10253_195 #x0000000000000000))
(assert (= var1179826 temp10253_195))
(assert (= temp10253_197 var1179826))
(assert (= temp10253_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10253_197)))
(assert (= temp10253_196 temp10253_198))
(assert (= temp10253_199 #x0000000000000002))
(assert (= var1586025 temp10253_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10253_200 #x0000000000000001))
(assert (= var1191993 temp10253_200))
(assert (= temp10253_201 #x0000000000000001))
(assert (= var2700303 temp10253_201))
(assert (= temp10253_202 #x0000000000000001))
(assert (= var2962447 temp10253_202))
(assert (= temp10253_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10253_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10253_204 #x0000000000000001))
(assert (= var211058 temp10253_204))
(assert (= temp10253_205 #x0000000000000001))
(assert (= var211188 temp10253_205))
(assert (= var3879401 var211188))
(assert (= temp10253_206 #x0000000000000000))
(assert (= var3866802 temp10253_206))
(assert (= temp10253_207 #x0000000000000000))
(assert (= temp10253_208
   (ite (bvslt var3866802 temp10253_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10253_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10253_208)))
(assert (= var3879420 temp10253_209))
(assert (bvslt (ite (bvslt var3866802 temp10253_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10253_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10253_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10253_211 #x0000000000000000))
(assert (= var3879421 temp10253_211))
(assert (= temp10253_212 #x0000000000000001))
(assert (= var3867690 temp10253_212))
(assert (= temp10253_213 #x0000000000000000))
(assert (= temp10253_214
   (ite (bvslt var3867690 temp10253_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10253_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10253_214)))
(assert (= var3879423 temp10253_215))
(assert (bvslt (ite (bvslt var3867690 temp10253_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10253_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10253_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10253_217 #x0000000000000001))
(assert (= var3879424 temp10253_217))
(assert (= temp10253_218 #x0000000000000000))
(assert (= var4079423 temp10253_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10253_219 #x0000000000000002))
(assert (= var4208259 temp10253_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10253_220 #x0000000000000000))
(assert (= var4273820 temp10253_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4862352 var211201))
(assert (= var5124496 var211201))
(assert (= temp10253_221 #x0000000000000001))
(assert (= var211058 temp10253_221))
(model-add temp10253_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10253_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10253_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10253_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




