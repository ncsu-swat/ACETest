(declare-fun temp885_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp885_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp885_3 () (_ BitVec 64))
(declare-fun temp885_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp885_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp885_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp885_7 () (_ BitVec 64))
(declare-fun temp885_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp885_9 () (_ BitVec 64))
(declare-fun temp885_10 () (_ BitVec 64))
(declare-fun temp885_11 () (_ BitVec 64))
(declare-fun temp885_12 () (_ BitVec 64))
(declare-fun temp885_13 () (_ BitVec 64))
(declare-fun temp885_14 () (_ BitVec 64))
(declare-fun temp885_15 () (_ BitVec 64))
(declare-fun temp885_16 () (_ BitVec 64))
(declare-fun temp885_17 () (_ BitVec 64))
(declare-fun temp885_18 () (_ BitVec 64))
(declare-fun temp885_19 () (_ BitVec 64))
(declare-fun temp885_20 () (_ BitVec 64))
(declare-fun temp885_21 () (_ BitVec 64))
(declare-fun temp885_22 () (_ BitVec 64))
(declare-fun temp885_23 () (_ BitVec 64))
(declare-fun temp885_24 () (_ BitVec 64))
(declare-fun temp885_25 () (_ BitVec 64))
(declare-fun temp885_26 () (_ BitVec 64))
(declare-fun temp885_27 () (_ BitVec 64))
(declare-fun temp885_28 () (_ BitVec 64))
(declare-fun temp885_29 () (_ BitVec 64))
(declare-fun temp885_30 () (_ BitVec 64))
(declare-fun temp885_31 () (_ BitVec 64))
(declare-fun temp885_32 () (_ BitVec 64))
(declare-fun temp885_33 () (_ BitVec 64))
(declare-fun temp885_34 () (_ BitVec 64))
(declare-fun temp885_35 () (_ BitVec 64))
(declare-fun temp885_36 () (_ BitVec 64))
(declare-fun temp885_37 () (_ BitVec 64))
(declare-fun temp885_38 () (_ BitVec 64))
(declare-fun temp885_39 () (_ BitVec 64))
(declare-fun temp885_40 () (_ BitVec 64))
(declare-fun temp885_41 () (_ BitVec 64))
(declare-fun temp885_42 () (_ BitVec 64))
(declare-fun temp885_43 () (_ BitVec 64))
(declare-fun temp885_44 () (_ BitVec 64))
(declare-fun temp885_45 () (_ BitVec 64))
(declare-fun temp885_46 () (_ BitVec 64))
(declare-fun temp885_47 () (_ BitVec 64))
(declare-fun temp885_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp885_49 () (_ BitVec 64))
(declare-fun temp885_50 () (_ BitVec 64))
(declare-fun temp885_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp885_52 () (_ BitVec 64))
(declare-fun temp885_53 () (_ BitVec 64))
(declare-fun temp885_54 () (_ BitVec 64))
(declare-fun temp885_55 () (_ BitVec 64))
(declare-fun temp885_56 () (_ BitVec 64))
(declare-fun temp885_57 () (_ BitVec 64))
(declare-fun temp885_58 () (_ BitVec 64))
(declare-fun temp885_59 () (_ BitVec 64))
(declare-fun temp885_60 () (_ BitVec 64))
(declare-fun temp885_61 () (_ BitVec 64))
(declare-fun temp885_62 () (_ BitVec 64))
(declare-fun temp885_63 () (_ BitVec 64))
(declare-fun temp885_64 () (_ BitVec 64))
(declare-fun temp885_65 () (_ BitVec 64))
(declare-fun temp885_66 () (_ BitVec 64))
(declare-fun temp885_67 () (_ BitVec 64))
(declare-fun temp885_68 () (_ BitVec 64))
(declare-fun temp885_69 () (_ BitVec 64))
(declare-fun temp885_70 () (_ BitVec 64))
(declare-fun temp885_71 () (_ BitVec 64))
(declare-fun temp885_72 () (_ BitVec 64))
(declare-fun temp885_73 () (_ BitVec 64))
(declare-fun temp885_74 () (_ BitVec 64))
(declare-fun temp885_75 () (_ BitVec 64))
(declare-fun temp885_76 () (_ BitVec 64))
(declare-fun temp885_77 () (_ BitVec 64))
(declare-fun temp885_78 () (_ BitVec 64))
(declare-fun temp885_79 () (_ BitVec 64))
(declare-fun temp885_80 () (_ BitVec 64))
(declare-fun temp885_81 () (_ BitVec 64))
(declare-fun temp885_82 () (_ BitVec 64))
(declare-fun temp885_83 () (_ BitVec 64))
(declare-fun temp885_84 () (_ BitVec 64))
(declare-fun temp885_85 () (_ BitVec 64))
(declare-fun temp885_86 () (_ BitVec 64))
(declare-fun temp885_87 () (_ BitVec 64))
(declare-fun temp885_88 () (_ BitVec 64))
(declare-fun temp885_89 () (_ BitVec 64))
(declare-fun temp885_90 () (_ BitVec 64))
(declare-fun temp885_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp885_92 () (_ BitVec 64))
(declare-fun temp885_93 () (_ BitVec 64))
(declare-fun temp885_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp885_95 () (_ BitVec 64))
(declare-fun temp885_96 () (_ BitVec 64))
(declare-fun temp885_97 () (_ BitVec 64))
(declare-fun temp885_98 () (_ BitVec 64))
(declare-fun temp885_99 () (_ BitVec 64))
(declare-fun temp885_100 () (_ BitVec 64))
(declare-fun temp885_101 () (_ BitVec 64))
(declare-fun temp885_102 () (_ BitVec 64))
(declare-fun temp885_103 () (_ BitVec 64))
(declare-fun temp885_104 () (_ BitVec 64))
(declare-fun temp885_105 () (_ BitVec 64))
(declare-fun temp885_106 () (_ BitVec 64))
(declare-fun temp885_107 () (_ BitVec 64))
(declare-fun temp885_108 () (_ BitVec 64))
(declare-fun temp885_109 () (_ BitVec 64))
(declare-fun temp885_110 () (_ BitVec 64))
(declare-fun temp885_111 () (_ BitVec 64))
(declare-fun temp885_112 () (_ BitVec 64))
(declare-fun temp885_113 () (_ BitVec 64))
(declare-fun temp885_114 () (_ BitVec 64))
(declare-fun temp885_115 () (_ BitVec 64))
(declare-fun temp885_116 () (_ BitVec 64))
(declare-fun temp885_117 () (_ BitVec 64))
(declare-fun temp885_118 () (_ BitVec 64))
(declare-fun temp885_119 () (_ BitVec 64))
(declare-fun temp885_120 () (_ BitVec 64))
(declare-fun temp885_121 () (_ BitVec 64))
(declare-fun temp885_122 () (_ BitVec 64))
(declare-fun temp885_123 () (_ BitVec 64))
(declare-fun temp885_124 () (_ BitVec 64))
(declare-fun temp885_125 () (_ BitVec 64))
(declare-fun temp885_126 () (_ BitVec 64))
(declare-fun temp885_127 () (_ BitVec 64))
(declare-fun temp885_128 () (_ BitVec 64))
(declare-fun temp885_129 () (_ BitVec 64))
(declare-fun temp885_130 () (_ BitVec 64))
(declare-fun temp885_131 () (_ BitVec 64))
(declare-fun temp885_132 () (_ BitVec 64))
(declare-fun temp885_133 () (_ BitVec 64))
(declare-fun temp885_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp885_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp885_136 () (_ BitVec 64))
(declare-fun temp885_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp885_138 () (_ BitVec 64))
(declare-fun temp885_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp885_140 () (_ BitVec 64))
(declare-fun temp885_141 () (_ BitVec 64))
(declare-fun temp885_142 () (_ BitVec 64))
(declare-fun temp885_143 () (_ BitVec 64))
(declare-fun temp885_144 () (_ BitVec 64))
(declare-fun temp885_145 () (_ BitVec 64))
(declare-fun temp885_146 () (_ BitVec 64))
(declare-fun temp885_147 () (_ BitVec 64))
(declare-fun temp885_148 () (_ BitVec 64))
(declare-fun temp885_149 () (_ BitVec 64))
(declare-fun temp885_150 () (_ BitVec 64))
(declare-fun temp885_151 () (_ BitVec 64))
(declare-fun temp885_152 () (_ BitVec 64))
(declare-fun temp885_153 () (_ BitVec 64))
(declare-fun temp885_154 () (_ BitVec 64))
(declare-fun temp885_155 () (_ BitVec 64))
(declare-fun temp885_157 () (_ BitVec 64))
(declare-fun temp885_158 () (_ BitVec 64))
(declare-fun temp885_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp885_159 () (_ BitVec 64))
(declare-fun temp885_160 () (_ BitVec 64))
(declare-fun temp885_162 () (_ BitVec 64))
(declare-fun temp885_163 () (_ BitVec 64))
(declare-fun temp885_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp885_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp885_165 () (_ BitVec 64))
(declare-fun temp885_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp885_167 () (_ BitVec 64))
(declare-fun temp885_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp885_169 () (_ BitVec 64))
(declare-fun temp885_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp885_171 () (_ BitVec 64))
(declare-fun temp885_172 () (_ BitVec 64))
(declare-fun temp885_173 () (_ BitVec 64))
(declare-fun temp885_174 () (_ BitVec 64))
(declare-fun temp885_175 () (_ BitVec 64))
(declare-fun temp885_176 () (_ BitVec 64))
(declare-fun temp885_177 () (_ BitVec 64))
(declare-fun temp885_178 () (_ BitVec 64))
(declare-fun temp885_179 () (_ BitVec 64))
(declare-fun temp885_180 () (_ BitVec 64))
(declare-fun temp885_181 () (_ BitVec 64))
(declare-fun temp885_182 () (_ BitVec 64))
(declare-fun temp885_183 () (_ BitVec 64))
(declare-fun temp885_184 () (_ BitVec 64))
(declare-fun temp885_185 () (_ BitVec 64))
(declare-fun temp885_186 () (_ BitVec 64))
(declare-fun temp885_187 () (_ BitVec 64))
(declare-fun temp885_188 () (_ BitVec 64))
(declare-fun temp885_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp885_190 () (_ BitVec 64))
(declare-fun temp885_192 () (_ BitVec 64))
(declare-fun temp885_193 () (_ BitVec 64))
(declare-fun temp885_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp885_194 () (_ BitVec 64))
(declare-fun temp885_195 () (_ BitVec 64))
(declare-fun temp885_197 () (_ BitVec 64))
(declare-fun temp885_198 () (_ BitVec 64))
(declare-fun temp885_196 () (_ BitVec 64))
(declare-fun temp885_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp885_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp885_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp885_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp885_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp885_204 () (_ BitVec 64))
(declare-fun temp885_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp885_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp885_207 () (_ BitVec 64))
(declare-fun temp885_208 () (_ BitVec 64))
(declare-fun temp885_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp885_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp885_211 () (_ BitVec 64))
(declare-fun temp885_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp885_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp885_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp885_215 () (_ BitVec 64))
(assert (= temp885_1 #x0000000000000001))
(assert (= var77203 temp885_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp885_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp885_2)))
(assert (= temp885_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp885_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp885_4 #x0000000000000000))
(assert (= var210941 temp885_4))
(assert (= temp885_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp885_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp885_6 #x0000000000000000))
(assert (= var210986 temp885_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp885_7 #x0000000000000000))
(assert (= temp885_8 temp885_7))
(assert (= temp885_9 (select ARGNAME_padding_NAMEEND_VAL temp885_8)))
(assert (= temp885_10 #x0000000000000001))
(assert (= temp885_11 temp885_10))
(assert (= temp885_12 (select ARGNAME_padding_NAMEEND_VAL temp885_11)))
(assert (= temp885_13 #x0000000000000002))
(assert (= temp885_14 temp885_13))
(assert (= temp885_15 (select ARGNAME_padding_NAMEEND_VAL temp885_14)))
(assert (= temp885_16 #x0000000000000003))
(assert (= temp885_17 temp885_16))
(assert (= temp885_18 (select ARGNAME_padding_NAMEEND_VAL temp885_17)))
(assert (= temp885_19 #x0000000000000004))
(assert (= temp885_20 temp885_19))
(assert (= temp885_21 (select ARGNAME_padding_NAMEEND_VAL temp885_20)))
(assert (= temp885_22 #x0000000000000005))
(assert (= temp885_23 temp885_22))
(assert (= temp885_24 (select ARGNAME_padding_NAMEEND_VAL temp885_23)))
(assert (= temp885_25 #x0000000000000000))
(assert (= temp885_26 #x0000000000000000))
(assert (= temp885_27 temp885_26))
(assert (= temp885_28 (select ARGNAME_padding_NAMEEND_VAL temp885_27)))
(assert (= temp885_29 #x0000000000000000))
(assert (= temp885_30 #x0000000000000001))
(assert (= temp885_31 temp885_30))
(assert (= temp885_32 (select ARGNAME_padding_NAMEEND_VAL temp885_31)))
(assert (= temp885_33 #x0000000000000000))
(assert (= temp885_34 #x0000000000000002))
(assert (= temp885_35 temp885_34))
(assert (= temp885_36 (select ARGNAME_padding_NAMEEND_VAL temp885_35)))
(assert (= temp885_37 #x0000000000000000))
(assert (= temp885_38 #x0000000000000003))
(assert (= temp885_39 temp885_38))
(assert (= temp885_40 (select ARGNAME_padding_NAMEEND_VAL temp885_39)))
(assert (= temp885_41 #x0000000000000000))
(assert (= temp885_42 #x0000000000000004))
(assert (= temp885_43 temp885_42))
(assert (= temp885_44 (select ARGNAME_padding_NAMEEND_VAL temp885_43)))
(assert (= temp885_45 #x0000000000000000))
(assert (= temp885_46 #x0000000000000005))
(assert (= temp885_47 temp885_46))
(assert (= temp885_48 (select ARGNAME_padding_NAMEEND_VAL temp885_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp885_28 temp885_25)
             (bvslt temp885_32 temp885_29)
             (bvslt temp885_36 temp885_33)
             (bvslt temp885_40 temp885_37)
             (bvslt temp885_44 temp885_41)
             (bvslt temp885_48 temp885_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp885_49 #x0000000000000000))
(assert (= var1191714 temp885_49))
(assert (= temp885_50 #x0000000000000000))
(assert (= temp885_51 temp885_50))
(assert (= temp885_52 (select ARGNAME_output_padding_NAMEEND_VAL temp885_51)))
(assert (= temp885_53 #x0000000000000001))
(assert (= temp885_54 temp885_53))
(assert (= temp885_55 (select ARGNAME_output_padding_NAMEEND_VAL temp885_54)))
(assert (= temp885_56 #x0000000000000002))
(assert (= temp885_57 temp885_56))
(assert (= temp885_58 (select ARGNAME_output_padding_NAMEEND_VAL temp885_57)))
(assert (= temp885_59 #x0000000000000003))
(assert (= temp885_60 temp885_59))
(assert (= temp885_61 (select ARGNAME_output_padding_NAMEEND_VAL temp885_60)))
(assert (= temp885_62 #x0000000000000004))
(assert (= temp885_63 temp885_62))
(assert (= temp885_64 (select ARGNAME_output_padding_NAMEEND_VAL temp885_63)))
(assert (= temp885_65 #x0000000000000005))
(assert (= temp885_66 temp885_65))
(assert (= temp885_67 (select ARGNAME_output_padding_NAMEEND_VAL temp885_66)))
(assert (= temp885_68 #x0000000000000000))
(assert (= temp885_69 #x0000000000000000))
(assert (= temp885_70 temp885_69))
(assert (= temp885_71 (select ARGNAME_output_padding_NAMEEND_VAL temp885_70)))
(assert (= temp885_72 #x0000000000000000))
(assert (= temp885_73 #x0000000000000001))
(assert (= temp885_74 temp885_73))
(assert (= temp885_75 (select ARGNAME_output_padding_NAMEEND_VAL temp885_74)))
(assert (= temp885_76 #x0000000000000000))
(assert (= temp885_77 #x0000000000000002))
(assert (= temp885_78 temp885_77))
(assert (= temp885_79 (select ARGNAME_output_padding_NAMEEND_VAL temp885_78)))
(assert (= temp885_80 #x0000000000000000))
(assert (= temp885_81 #x0000000000000003))
(assert (= temp885_82 temp885_81))
(assert (= temp885_83 (select ARGNAME_output_padding_NAMEEND_VAL temp885_82)))
(assert (= temp885_84 #x0000000000000000))
(assert (= temp885_85 #x0000000000000004))
(assert (= temp885_86 temp885_85))
(assert (= temp885_87 (select ARGNAME_output_padding_NAMEEND_VAL temp885_86)))
(assert (= temp885_88 #x0000000000000000))
(assert (= temp885_89 #x0000000000000005))
(assert (= temp885_90 temp885_89))
(assert (= temp885_91 (select ARGNAME_output_padding_NAMEEND_VAL temp885_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp885_71 temp885_68)
             (bvslt temp885_75 temp885_72)
             (bvslt temp885_79 temp885_76)
             (bvslt temp885_83 temp885_80)
             (bvslt temp885_87 temp885_84)
             (bvslt temp885_91 temp885_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp885_92 #x0000000000000000))
(assert (= var1191725 temp885_92))
(assert (= temp885_93 #x0000000000000000))
(assert (= temp885_94 temp885_93))
(assert (= temp885_95 (select ARGNAME_stride_NAMEEND_VAL temp885_94)))
(assert (= temp885_96 #x0000000000000001))
(assert (= temp885_97 temp885_96))
(assert (= temp885_98 (select ARGNAME_stride_NAMEEND_VAL temp885_97)))
(assert (= temp885_99 #x0000000000000002))
(assert (= temp885_100 temp885_99))
(assert (= temp885_101 (select ARGNAME_stride_NAMEEND_VAL temp885_100)))
(assert (= temp885_102 #x0000000000000003))
(assert (= temp885_103 temp885_102))
(assert (= temp885_104 (select ARGNAME_stride_NAMEEND_VAL temp885_103)))
(assert (= temp885_105 #x0000000000000004))
(assert (= temp885_106 temp885_105))
(assert (= temp885_107 (select ARGNAME_stride_NAMEEND_VAL temp885_106)))
(assert (= temp885_108 #x0000000000000005))
(assert (= temp885_109 temp885_108))
(assert (= temp885_110 (select ARGNAME_stride_NAMEEND_VAL temp885_109)))
(assert (= temp885_111 #x0000000000000000))
(assert (= temp885_112 #x0000000000000000))
(assert (= temp885_113 temp885_112))
(assert (= temp885_114 (select ARGNAME_stride_NAMEEND_VAL temp885_113)))
(assert (= temp885_115 #x0000000000000000))
(assert (= temp885_116 #x0000000000000001))
(assert (= temp885_117 temp885_116))
(assert (= temp885_118 (select ARGNAME_stride_NAMEEND_VAL temp885_117)))
(assert (= temp885_119 #x0000000000000000))
(assert (= temp885_120 #x0000000000000002))
(assert (= temp885_121 temp885_120))
(assert (= temp885_122 (select ARGNAME_stride_NAMEEND_VAL temp885_121)))
(assert (= temp885_123 #x0000000000000000))
(assert (= temp885_124 #x0000000000000003))
(assert (= temp885_125 temp885_124))
(assert (= temp885_126 (select ARGNAME_stride_NAMEEND_VAL temp885_125)))
(assert (= temp885_127 #x0000000000000000))
(assert (= temp885_128 #x0000000000000004))
(assert (= temp885_129 temp885_128))
(assert (= temp885_130 (select ARGNAME_stride_NAMEEND_VAL temp885_129)))
(assert (= temp885_131 #x0000000000000000))
(assert (= temp885_132 #x0000000000000005))
(assert (= temp885_133 temp885_132))
(assert (= temp885_134 (select ARGNAME_stride_NAMEEND_VAL temp885_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp885_114 temp885_111)
             (bvsle temp885_118 temp885_115)
             (bvsle temp885_122 temp885_119)
             (bvsle temp885_126 temp885_123)
             (bvsle temp885_130 temp885_127)
             (bvsle temp885_134 temp885_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp885_135 #x0000000000000000))
(assert (= var1191735 temp885_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp885_136 #x0000000000000001))
(assert (= var1191747 temp885_136))
(assert (= temp885_137 #x0000000000000000))
(assert (= var1179826 temp885_137))
(assert (= temp885_138 #x0000000000000000))
(assert (= temp885_139 temp885_138))
(assert (= temp885_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp885_139)))
(assert (= temp885_141 #x0000000000000001))
(assert (= temp885_142 temp885_141))
(assert (= temp885_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp885_142)))
(assert (= temp885_144 #x0000000000000002))
(assert (= temp885_145 temp885_144))
(assert (= temp885_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp885_145)))
(assert (= temp885_147 #x0000000000000003))
(assert (= temp885_148 temp885_147))
(assert (= temp885_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp885_148)))
(assert (= temp885_150 #x0000000000000004))
(assert (= temp885_151 temp885_150))
(assert (= temp885_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp885_151)))
(assert (= temp885_153 #x0000000000000005))
(assert (= temp885_154 temp885_153))
(assert (= temp885_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp885_154)))
(assert (= temp885_157 var1179826))
(assert (= temp885_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp885_157)))
(assert (= temp885_156 temp885_158))
(assert (= var1191780
   (ite (bvslt temp885_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp885_159 #x0000000000000000))
(assert (= var1191780 temp885_159))
(assert (= temp885_160 #x0000000000000000))
(assert (= var1179826 temp885_160))
(assert (= temp885_162 var1179826))
(assert (= temp885_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp885_162)))
(assert (= temp885_161 temp885_163))
(assert (= var1191802 (bvsmod temp885_161 ARGNAME_groups_NAMEEND)))
(assert (= temp885_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp885_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp885_165 #x0000000000000001))
(assert (= var1191803 temp885_165))
(assert (= temp885_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp885_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp885_167 #x0000000000000001))
(assert (= var1191823 temp885_167))
(assert (= temp885_168 #x0000000000000001))
(assert (= var1180714 temp885_168))
(assert (= temp885_169 #x0000000000000000))
(assert (= temp885_170 temp885_169))
(assert (= temp885_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp885_170)))
(assert (= temp885_172 #x0000000000000001))
(assert (= temp885_173 temp885_172))
(assert (= temp885_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp885_173)))
(assert (= temp885_175 #x0000000000000002))
(assert (= temp885_176 temp885_175))
(assert (= temp885_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp885_176)))
(assert (= temp885_178 #x0000000000000003))
(assert (= temp885_179 temp885_178))
(assert (= temp885_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp885_179)))
(assert (= temp885_181 #x0000000000000004))
(assert (= temp885_182 temp885_181))
(assert (= temp885_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp885_182)))
(assert (= temp885_184 #x0000000000000005))
(assert (= temp885_185 temp885_184))
(assert (= temp885_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp885_185)))
(assert (= temp885_187 #x0000000000000000))
(assert (= temp885_188
   (ite (bvslt var1180714 temp885_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp885_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp885_188)))
(assert (= var1191831 temp885_189))
(assert (bvslt (ite (bvslt var1180714 temp885_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp885_190 #x0000000000000001))
(assert (= var1180714 temp885_190))
(assert (= temp885_192 var1180714))
(assert (= temp885_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp885_192)))
(assert (= temp885_191 temp885_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp885_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp885_194 #x0000000000000001))
(assert (= var1191836 temp885_194))
(assert (= temp885_195 #x0000000000000000))
(assert (= var1179826 temp885_195))
(assert (= temp885_197 var1179826))
(assert (= temp885_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp885_197)))
(assert (= temp885_196 temp885_198))
(assert (= temp885_199 #x0000000000000002))
(assert (= var1586025 temp885_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp885_200 #x0000000000000001))
(assert (= var1191993 temp885_200))
(assert (= temp885_201 #x0000000000000001))
(assert (= var2700303 temp885_201))
(assert (= temp885_202 #x0000000000000001))
(assert (= var2962447 temp885_202))
(assert (= temp885_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp885_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp885_204 #x0000000000000001))
(assert (= var211058 temp885_204))
(assert (= temp885_205 #x0000000000000001))
(assert (= var211188 temp885_205))
(assert (= var3879401 var211188))
(assert (= temp885_206 #x0000000000000000))
(assert (= var3866802 temp885_206))
(assert (= temp885_207 #x0000000000000000))
(assert (= temp885_208
   (ite (bvslt var3866802 temp885_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp885_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp885_208)))
(assert (= var3879420 temp885_209))
(assert (bvslt (ite (bvslt var3866802 temp885_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp885_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp885_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp885_211 #x0000000000000001))
(assert (= var3879421 temp885_211))
(assert (= temp885_212 #x0000000000000000))
(assert (= var4079423 temp885_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp885_213 #x0000000000000002))
(assert (= var4208259 temp885_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp885_214 #x0000000000000000))
(assert (= var4273820 temp885_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5321104 var211201))
(assert (= var5583248 var211201))
(assert (= temp885_215 #x0000000000000001))
(assert (= var211058 temp885_215))
(model-add temp885_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp885_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp885_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp885_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





