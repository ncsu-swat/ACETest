(declare-fun temp10586_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10586_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10586_3 () (_ BitVec 64))
(declare-fun temp10586_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10586_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10586_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10586_7 () (_ BitVec 64))
(declare-fun temp10586_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10586_9 () (_ BitVec 64))
(declare-fun temp10586_10 () (_ BitVec 64))
(declare-fun temp10586_11 () (_ BitVec 64))
(declare-fun temp10586_12 () (_ BitVec 64))
(declare-fun temp10586_13 () (_ BitVec 64))
(declare-fun temp10586_14 () (_ BitVec 64))
(declare-fun temp10586_15 () (_ BitVec 64))
(declare-fun temp10586_16 () (_ BitVec 64))
(declare-fun temp10586_17 () (_ BitVec 64))
(declare-fun temp10586_18 () (_ BitVec 64))
(declare-fun temp10586_19 () (_ BitVec 64))
(declare-fun temp10586_20 () (_ BitVec 64))
(declare-fun temp10586_21 () (_ BitVec 64))
(declare-fun temp10586_22 () (_ BitVec 64))
(declare-fun temp10586_23 () (_ BitVec 64))
(declare-fun temp10586_24 () (_ BitVec 64))
(declare-fun temp10586_25 () (_ BitVec 64))
(declare-fun temp10586_26 () (_ BitVec 64))
(declare-fun temp10586_27 () (_ BitVec 64))
(declare-fun temp10586_28 () (_ BitVec 64))
(declare-fun temp10586_29 () (_ BitVec 64))
(declare-fun temp10586_30 () (_ BitVec 64))
(declare-fun temp10586_31 () (_ BitVec 64))
(declare-fun temp10586_32 () (_ BitVec 64))
(declare-fun temp10586_33 () (_ BitVec 64))
(declare-fun temp10586_34 () (_ BitVec 64))
(declare-fun temp10586_35 () (_ BitVec 64))
(declare-fun temp10586_36 () (_ BitVec 64))
(declare-fun temp10586_37 () (_ BitVec 64))
(declare-fun temp10586_38 () (_ BitVec 64))
(declare-fun temp10586_39 () (_ BitVec 64))
(declare-fun temp10586_40 () (_ BitVec 64))
(declare-fun temp10586_41 () (_ BitVec 64))
(declare-fun temp10586_42 () (_ BitVec 64))
(declare-fun temp10586_43 () (_ BitVec 64))
(declare-fun temp10586_44 () (_ BitVec 64))
(declare-fun temp10586_45 () (_ BitVec 64))
(declare-fun temp10586_46 () (_ BitVec 64))
(declare-fun temp10586_47 () (_ BitVec 64))
(declare-fun temp10586_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10586_49 () (_ BitVec 64))
(declare-fun temp10586_50 () (_ BitVec 64))
(declare-fun temp10586_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10586_52 () (_ BitVec 64))
(declare-fun temp10586_53 () (_ BitVec 64))
(declare-fun temp10586_54 () (_ BitVec 64))
(declare-fun temp10586_55 () (_ BitVec 64))
(declare-fun temp10586_56 () (_ BitVec 64))
(declare-fun temp10586_57 () (_ BitVec 64))
(declare-fun temp10586_58 () (_ BitVec 64))
(declare-fun temp10586_59 () (_ BitVec 64))
(declare-fun temp10586_60 () (_ BitVec 64))
(declare-fun temp10586_61 () (_ BitVec 64))
(declare-fun temp10586_62 () (_ BitVec 64))
(declare-fun temp10586_63 () (_ BitVec 64))
(declare-fun temp10586_64 () (_ BitVec 64))
(declare-fun temp10586_65 () (_ BitVec 64))
(declare-fun temp10586_66 () (_ BitVec 64))
(declare-fun temp10586_67 () (_ BitVec 64))
(declare-fun temp10586_68 () (_ BitVec 64))
(declare-fun temp10586_69 () (_ BitVec 64))
(declare-fun temp10586_70 () (_ BitVec 64))
(declare-fun temp10586_71 () (_ BitVec 64))
(declare-fun temp10586_72 () (_ BitVec 64))
(declare-fun temp10586_73 () (_ BitVec 64))
(declare-fun temp10586_74 () (_ BitVec 64))
(declare-fun temp10586_75 () (_ BitVec 64))
(declare-fun temp10586_76 () (_ BitVec 64))
(declare-fun temp10586_77 () (_ BitVec 64))
(declare-fun temp10586_78 () (_ BitVec 64))
(declare-fun temp10586_79 () (_ BitVec 64))
(declare-fun temp10586_80 () (_ BitVec 64))
(declare-fun temp10586_81 () (_ BitVec 64))
(declare-fun temp10586_82 () (_ BitVec 64))
(declare-fun temp10586_83 () (_ BitVec 64))
(declare-fun temp10586_84 () (_ BitVec 64))
(declare-fun temp10586_85 () (_ BitVec 64))
(declare-fun temp10586_86 () (_ BitVec 64))
(declare-fun temp10586_87 () (_ BitVec 64))
(declare-fun temp10586_88 () (_ BitVec 64))
(declare-fun temp10586_89 () (_ BitVec 64))
(declare-fun temp10586_90 () (_ BitVec 64))
(declare-fun temp10586_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10586_92 () (_ BitVec 64))
(declare-fun temp10586_93 () (_ BitVec 64))
(declare-fun temp10586_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10586_95 () (_ BitVec 64))
(declare-fun temp10586_96 () (_ BitVec 64))
(declare-fun temp10586_97 () (_ BitVec 64))
(declare-fun temp10586_98 () (_ BitVec 64))
(declare-fun temp10586_99 () (_ BitVec 64))
(declare-fun temp10586_100 () (_ BitVec 64))
(declare-fun temp10586_101 () (_ BitVec 64))
(declare-fun temp10586_102 () (_ BitVec 64))
(declare-fun temp10586_103 () (_ BitVec 64))
(declare-fun temp10586_104 () (_ BitVec 64))
(declare-fun temp10586_105 () (_ BitVec 64))
(declare-fun temp10586_106 () (_ BitVec 64))
(declare-fun temp10586_107 () (_ BitVec 64))
(declare-fun temp10586_108 () (_ BitVec 64))
(declare-fun temp10586_109 () (_ BitVec 64))
(declare-fun temp10586_110 () (_ BitVec 64))
(declare-fun temp10586_111 () (_ BitVec 64))
(declare-fun temp10586_112 () (_ BitVec 64))
(declare-fun temp10586_113 () (_ BitVec 64))
(declare-fun temp10586_114 () (_ BitVec 64))
(declare-fun temp10586_115 () (_ BitVec 64))
(declare-fun temp10586_116 () (_ BitVec 64))
(declare-fun temp10586_117 () (_ BitVec 64))
(declare-fun temp10586_118 () (_ BitVec 64))
(declare-fun temp10586_119 () (_ BitVec 64))
(declare-fun temp10586_120 () (_ BitVec 64))
(declare-fun temp10586_121 () (_ BitVec 64))
(declare-fun temp10586_122 () (_ BitVec 64))
(declare-fun temp10586_123 () (_ BitVec 64))
(declare-fun temp10586_124 () (_ BitVec 64))
(declare-fun temp10586_125 () (_ BitVec 64))
(declare-fun temp10586_126 () (_ BitVec 64))
(declare-fun temp10586_127 () (_ BitVec 64))
(declare-fun temp10586_128 () (_ BitVec 64))
(declare-fun temp10586_129 () (_ BitVec 64))
(declare-fun temp10586_130 () (_ BitVec 64))
(declare-fun temp10586_131 () (_ BitVec 64))
(declare-fun temp10586_132 () (_ BitVec 64))
(declare-fun temp10586_133 () (_ BitVec 64))
(declare-fun temp10586_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10586_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10586_136 () (_ BitVec 64))
(declare-fun temp10586_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10586_138 () (_ BitVec 64))
(declare-fun temp10586_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10586_140 () (_ BitVec 64))
(declare-fun temp10586_141 () (_ BitVec 64))
(declare-fun temp10586_142 () (_ BitVec 64))
(declare-fun temp10586_143 () (_ BitVec 64))
(declare-fun temp10586_144 () (_ BitVec 64))
(declare-fun temp10586_145 () (_ BitVec 64))
(declare-fun temp10586_146 () (_ BitVec 64))
(declare-fun temp10586_147 () (_ BitVec 64))
(declare-fun temp10586_148 () (_ BitVec 64))
(declare-fun temp10586_149 () (_ BitVec 64))
(declare-fun temp10586_150 () (_ BitVec 64))
(declare-fun temp10586_151 () (_ BitVec 64))
(declare-fun temp10586_152 () (_ BitVec 64))
(declare-fun temp10586_153 () (_ BitVec 64))
(declare-fun temp10586_154 () (_ BitVec 64))
(declare-fun temp10586_155 () (_ BitVec 64))
(declare-fun temp10586_157 () (_ BitVec 64))
(declare-fun temp10586_158 () (_ BitVec 64))
(declare-fun temp10586_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10586_159 () (_ BitVec 64))
(declare-fun temp10586_160 () (_ BitVec 64))
(declare-fun temp10586_162 () (_ BitVec 64))
(declare-fun temp10586_163 () (_ BitVec 64))
(declare-fun temp10586_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10586_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10586_165 () (_ BitVec 64))
(declare-fun temp10586_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10586_167 () (_ BitVec 64))
(declare-fun temp10586_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10586_169 () (_ BitVec 64))
(declare-fun temp10586_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10586_171 () (_ BitVec 64))
(declare-fun temp10586_172 () (_ BitVec 64))
(declare-fun temp10586_173 () (_ BitVec 64))
(declare-fun temp10586_174 () (_ BitVec 64))
(declare-fun temp10586_175 () (_ BitVec 64))
(declare-fun temp10586_176 () (_ BitVec 64))
(declare-fun temp10586_177 () (_ BitVec 64))
(declare-fun temp10586_178 () (_ BitVec 64))
(declare-fun temp10586_179 () (_ BitVec 64))
(declare-fun temp10586_180 () (_ BitVec 64))
(declare-fun temp10586_181 () (_ BitVec 64))
(declare-fun temp10586_182 () (_ BitVec 64))
(declare-fun temp10586_183 () (_ BitVec 64))
(declare-fun temp10586_184 () (_ BitVec 64))
(declare-fun temp10586_185 () (_ BitVec 64))
(declare-fun temp10586_186 () (_ BitVec 64))
(declare-fun temp10586_187 () (_ BitVec 64))
(declare-fun temp10586_188 () (_ BitVec 64))
(declare-fun temp10586_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10586_190 () (_ BitVec 64))
(declare-fun temp10586_192 () (_ BitVec 64))
(declare-fun temp10586_193 () (_ BitVec 64))
(declare-fun temp10586_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10586_194 () (_ BitVec 64))
(declare-fun temp10586_195 () (_ BitVec 64))
(declare-fun temp10586_197 () (_ BitVec 64))
(declare-fun temp10586_198 () (_ BitVec 64))
(declare-fun temp10586_196 () (_ BitVec 64))
(declare-fun temp10586_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10586_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10586_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10586_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10586_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10586_204 () (_ BitVec 64))
(declare-fun temp10586_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10586_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10586_207 () (_ BitVec 64))
(declare-fun temp10586_208 () (_ BitVec 64))
(declare-fun temp10586_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10586_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10586_211 () (_ BitVec 64))
(declare-fun temp10586_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10586_213 () (_ BitVec 64))
(declare-fun temp10586_214 () (_ BitVec 64))
(declare-fun temp10586_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10586_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10586_217 () (_ BitVec 64))
(declare-fun temp10586_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10586_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10586_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp10586_221 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp10586_222 () (_ BitVec 64))
(assert (= temp10586_1 #x0000000000000001))
(assert (= var77203 temp10586_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10586_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10586_2)))
(assert (= temp10586_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10586_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10586_4 #x0000000000000000))
(assert (= var210941 temp10586_4))
(assert (= temp10586_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10586_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10586_6 #x0000000000000000))
(assert (= var210986 temp10586_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10586_7 #x0000000000000000))
(assert (= temp10586_8 temp10586_7))
(assert (= temp10586_9 (select ARGNAME_padding_NAMEEND_VAL temp10586_8)))
(assert (= temp10586_10 #x0000000000000001))
(assert (= temp10586_11 temp10586_10))
(assert (= temp10586_12 (select ARGNAME_padding_NAMEEND_VAL temp10586_11)))
(assert (= temp10586_13 #x0000000000000002))
(assert (= temp10586_14 temp10586_13))
(assert (= temp10586_15 (select ARGNAME_padding_NAMEEND_VAL temp10586_14)))
(assert (= temp10586_16 #x0000000000000003))
(assert (= temp10586_17 temp10586_16))
(assert (= temp10586_18 (select ARGNAME_padding_NAMEEND_VAL temp10586_17)))
(assert (= temp10586_19 #x0000000000000004))
(assert (= temp10586_20 temp10586_19))
(assert (= temp10586_21 (select ARGNAME_padding_NAMEEND_VAL temp10586_20)))
(assert (= temp10586_22 #x0000000000000005))
(assert (= temp10586_23 temp10586_22))
(assert (= temp10586_24 (select ARGNAME_padding_NAMEEND_VAL temp10586_23)))
(assert (= temp10586_25 #x0000000000000000))
(assert (= temp10586_26 #x0000000000000000))
(assert (= temp10586_27 temp10586_26))
(assert (= temp10586_28 (select ARGNAME_padding_NAMEEND_VAL temp10586_27)))
(assert (= temp10586_29 #x0000000000000000))
(assert (= temp10586_30 #x0000000000000001))
(assert (= temp10586_31 temp10586_30))
(assert (= temp10586_32 (select ARGNAME_padding_NAMEEND_VAL temp10586_31)))
(assert (= temp10586_33 #x0000000000000000))
(assert (= temp10586_34 #x0000000000000002))
(assert (= temp10586_35 temp10586_34))
(assert (= temp10586_36 (select ARGNAME_padding_NAMEEND_VAL temp10586_35)))
(assert (= temp10586_37 #x0000000000000000))
(assert (= temp10586_38 #x0000000000000003))
(assert (= temp10586_39 temp10586_38))
(assert (= temp10586_40 (select ARGNAME_padding_NAMEEND_VAL temp10586_39)))
(assert (= temp10586_41 #x0000000000000000))
(assert (= temp10586_42 #x0000000000000004))
(assert (= temp10586_43 temp10586_42))
(assert (= temp10586_44 (select ARGNAME_padding_NAMEEND_VAL temp10586_43)))
(assert (= temp10586_45 #x0000000000000000))
(assert (= temp10586_46 #x0000000000000005))
(assert (= temp10586_47 temp10586_46))
(assert (= temp10586_48 (select ARGNAME_padding_NAMEEND_VAL temp10586_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10586_28 temp10586_25)
             (bvslt temp10586_32 temp10586_29)
             (bvslt temp10586_36 temp10586_33)
             (bvslt temp10586_40 temp10586_37)
             (bvslt temp10586_44 temp10586_41)
             (bvslt temp10586_48 temp10586_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10586_49 #x0000000000000000))
(assert (= var1191714 temp10586_49))
(assert (= temp10586_50 #x0000000000000000))
(assert (= temp10586_51 temp10586_50))
(assert (= temp10586_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10586_51)))
(assert (= temp10586_53 #x0000000000000001))
(assert (= temp10586_54 temp10586_53))
(assert (= temp10586_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10586_54)))
(assert (= temp10586_56 #x0000000000000002))
(assert (= temp10586_57 temp10586_56))
(assert (= temp10586_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10586_57)))
(assert (= temp10586_59 #x0000000000000003))
(assert (= temp10586_60 temp10586_59))
(assert (= temp10586_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10586_60)))
(assert (= temp10586_62 #x0000000000000004))
(assert (= temp10586_63 temp10586_62))
(assert (= temp10586_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10586_63)))
(assert (= temp10586_65 #x0000000000000005))
(assert (= temp10586_66 temp10586_65))
(assert (= temp10586_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10586_66)))
(assert (= temp10586_68 #x0000000000000000))
(assert (= temp10586_69 #x0000000000000000))
(assert (= temp10586_70 temp10586_69))
(assert (= temp10586_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10586_70)))
(assert (= temp10586_72 #x0000000000000000))
(assert (= temp10586_73 #x0000000000000001))
(assert (= temp10586_74 temp10586_73))
(assert (= temp10586_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10586_74)))
(assert (= temp10586_76 #x0000000000000000))
(assert (= temp10586_77 #x0000000000000002))
(assert (= temp10586_78 temp10586_77))
(assert (= temp10586_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10586_78)))
(assert (= temp10586_80 #x0000000000000000))
(assert (= temp10586_81 #x0000000000000003))
(assert (= temp10586_82 temp10586_81))
(assert (= temp10586_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10586_82)))
(assert (= temp10586_84 #x0000000000000000))
(assert (= temp10586_85 #x0000000000000004))
(assert (= temp10586_86 temp10586_85))
(assert (= temp10586_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10586_86)))
(assert (= temp10586_88 #x0000000000000000))
(assert (= temp10586_89 #x0000000000000005))
(assert (= temp10586_90 temp10586_89))
(assert (= temp10586_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10586_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10586_71 temp10586_68)
             (bvslt temp10586_75 temp10586_72)
             (bvslt temp10586_79 temp10586_76)
             (bvslt temp10586_83 temp10586_80)
             (bvslt temp10586_87 temp10586_84)
             (bvslt temp10586_91 temp10586_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10586_92 #x0000000000000000))
(assert (= var1191725 temp10586_92))
(assert (= temp10586_93 #x0000000000000000))
(assert (= temp10586_94 temp10586_93))
(assert (= temp10586_95 (select ARGNAME_stride_NAMEEND_VAL temp10586_94)))
(assert (= temp10586_96 #x0000000000000001))
(assert (= temp10586_97 temp10586_96))
(assert (= temp10586_98 (select ARGNAME_stride_NAMEEND_VAL temp10586_97)))
(assert (= temp10586_99 #x0000000000000002))
(assert (= temp10586_100 temp10586_99))
(assert (= temp10586_101 (select ARGNAME_stride_NAMEEND_VAL temp10586_100)))
(assert (= temp10586_102 #x0000000000000003))
(assert (= temp10586_103 temp10586_102))
(assert (= temp10586_104 (select ARGNAME_stride_NAMEEND_VAL temp10586_103)))
(assert (= temp10586_105 #x0000000000000004))
(assert (= temp10586_106 temp10586_105))
(assert (= temp10586_107 (select ARGNAME_stride_NAMEEND_VAL temp10586_106)))
(assert (= temp10586_108 #x0000000000000005))
(assert (= temp10586_109 temp10586_108))
(assert (= temp10586_110 (select ARGNAME_stride_NAMEEND_VAL temp10586_109)))
(assert (= temp10586_111 #x0000000000000000))
(assert (= temp10586_112 #x0000000000000000))
(assert (= temp10586_113 temp10586_112))
(assert (= temp10586_114 (select ARGNAME_stride_NAMEEND_VAL temp10586_113)))
(assert (= temp10586_115 #x0000000000000000))
(assert (= temp10586_116 #x0000000000000001))
(assert (= temp10586_117 temp10586_116))
(assert (= temp10586_118 (select ARGNAME_stride_NAMEEND_VAL temp10586_117)))
(assert (= temp10586_119 #x0000000000000000))
(assert (= temp10586_120 #x0000000000000002))
(assert (= temp10586_121 temp10586_120))
(assert (= temp10586_122 (select ARGNAME_stride_NAMEEND_VAL temp10586_121)))
(assert (= temp10586_123 #x0000000000000000))
(assert (= temp10586_124 #x0000000000000003))
(assert (= temp10586_125 temp10586_124))
(assert (= temp10586_126 (select ARGNAME_stride_NAMEEND_VAL temp10586_125)))
(assert (= temp10586_127 #x0000000000000000))
(assert (= temp10586_128 #x0000000000000004))
(assert (= temp10586_129 temp10586_128))
(assert (= temp10586_130 (select ARGNAME_stride_NAMEEND_VAL temp10586_129)))
(assert (= temp10586_131 #x0000000000000000))
(assert (= temp10586_132 #x0000000000000005))
(assert (= temp10586_133 temp10586_132))
(assert (= temp10586_134 (select ARGNAME_stride_NAMEEND_VAL temp10586_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10586_114 temp10586_111)
             (bvsle temp10586_118 temp10586_115)
             (bvsle temp10586_122 temp10586_119)
             (bvsle temp10586_126 temp10586_123)
             (bvsle temp10586_130 temp10586_127)
             (bvsle temp10586_134 temp10586_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10586_135 #x0000000000000000))
(assert (= var1191735 temp10586_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10586_136 #x0000000000000001))
(assert (= var1191747 temp10586_136))
(assert (= temp10586_137 #x0000000000000000))
(assert (= var1179826 temp10586_137))
(assert (= temp10586_138 #x0000000000000000))
(assert (= temp10586_139 temp10586_138))
(assert (= temp10586_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10586_139)))
(assert (= temp10586_141 #x0000000000000001))
(assert (= temp10586_142 temp10586_141))
(assert (= temp10586_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10586_142)))
(assert (= temp10586_144 #x0000000000000002))
(assert (= temp10586_145 temp10586_144))
(assert (= temp10586_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10586_145)))
(assert (= temp10586_147 #x0000000000000003))
(assert (= temp10586_148 temp10586_147))
(assert (= temp10586_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10586_148)))
(assert (= temp10586_150 #x0000000000000004))
(assert (= temp10586_151 temp10586_150))
(assert (= temp10586_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10586_151)))
(assert (= temp10586_153 #x0000000000000005))
(assert (= temp10586_154 temp10586_153))
(assert (= temp10586_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10586_154)))
(assert (= temp10586_157 var1179826))
(assert (= temp10586_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10586_157)))
(assert (= temp10586_156 temp10586_158))
(assert (= var1191780
   (ite (bvslt temp10586_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10586_159 #x0000000000000000))
(assert (= var1191780 temp10586_159))
(assert (= temp10586_160 #x0000000000000000))
(assert (= var1179826 temp10586_160))
(assert (= temp10586_162 var1179826))
(assert (= temp10586_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10586_162)))
(assert (= temp10586_161 temp10586_163))
(assert (= var1191802 (bvsmod temp10586_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10586_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10586_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10586_165 #x0000000000000001))
(assert (= var1191803 temp10586_165))
(assert (= temp10586_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10586_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10586_167 #x0000000000000001))
(assert (= var1191823 temp10586_167))
(assert (= temp10586_168 #x0000000000000001))
(assert (= var1180714 temp10586_168))
(assert (= temp10586_169 #x0000000000000000))
(assert (= temp10586_170 temp10586_169))
(assert (= temp10586_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10586_170)))
(assert (= temp10586_172 #x0000000000000001))
(assert (= temp10586_173 temp10586_172))
(assert (= temp10586_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10586_173)))
(assert (= temp10586_175 #x0000000000000002))
(assert (= temp10586_176 temp10586_175))
(assert (= temp10586_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10586_176)))
(assert (= temp10586_178 #x0000000000000003))
(assert (= temp10586_179 temp10586_178))
(assert (= temp10586_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10586_179)))
(assert (= temp10586_181 #x0000000000000004))
(assert (= temp10586_182 temp10586_181))
(assert (= temp10586_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10586_182)))
(assert (= temp10586_184 #x0000000000000005))
(assert (= temp10586_185 temp10586_184))
(assert (= temp10586_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10586_185)))
(assert (= temp10586_187 #x0000000000000000))
(assert (= temp10586_188
   (ite (bvslt var1180714 temp10586_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10586_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10586_188)))
(assert (= var1191831 temp10586_189))
(assert (bvslt (ite (bvslt var1180714 temp10586_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10586_190 #x0000000000000001))
(assert (= var1180714 temp10586_190))
(assert (= temp10586_192 var1180714))
(assert (= temp10586_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10586_192)))
(assert (= temp10586_191 temp10586_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10586_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10586_194 #x0000000000000001))
(assert (= var1191836 temp10586_194))
(assert (= temp10586_195 #x0000000000000000))
(assert (= var1179826 temp10586_195))
(assert (= temp10586_197 var1179826))
(assert (= temp10586_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10586_197)))
(assert (= temp10586_196 temp10586_198))
(assert (= temp10586_199 #x0000000000000002))
(assert (= var1586025 temp10586_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10586_200 #x0000000000000001))
(assert (= var1191993 temp10586_200))
(assert (= temp10586_201 #x0000000000000001))
(assert (= var2700303 temp10586_201))
(assert (= temp10586_202 #x0000000000000001))
(assert (= var2962447 temp10586_202))
(assert (= temp10586_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10586_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10586_204 #x0000000000000001))
(assert (= var211058 temp10586_204))
(assert (= temp10586_205 #x0000000000000001))
(assert (= var211188 temp10586_205))
(assert (= var3879401 var211188))
(assert (= temp10586_206 #x0000000000000000))
(assert (= var3866802 temp10586_206))
(assert (= temp10586_207 #x0000000000000000))
(assert (= temp10586_208
   (ite (bvslt var3866802 temp10586_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10586_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10586_208)))
(assert (= var3879420 temp10586_209))
(assert (bvslt (ite (bvslt var3866802 temp10586_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10586_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10586_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10586_211 #x0000000000000000))
(assert (= var3879421 temp10586_211))
(assert (= temp10586_212 #x0000000000000001))
(assert (= var3867690 temp10586_212))
(assert (= temp10586_213 #x0000000000000000))
(assert (= temp10586_214
   (ite (bvslt var3867690 temp10586_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10586_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10586_214)))
(assert (= var3879423 temp10586_215))
(assert (bvslt (ite (bvslt var3867690 temp10586_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10586_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10586_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10586_217 #x0000000000000001))
(assert (= var3879424 temp10586_217))
(assert (= temp10586_218 #x0000000000000000))
(assert (= var4133117 temp10586_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10586_219 #x0000000000000002))
(assert (= var4339331 temp10586_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10586_220 #x0000000000000000))
(assert (= var4404892 temp10586_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4927888 var211201))
(assert (= var211494 var210913))
(assert (= temp10586_221 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp10586_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10586_222 #x0000000000000001))
(assert (= var211058 temp10586_222))
(model-add temp10586_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10586_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10586_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10586_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



