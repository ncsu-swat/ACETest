(declare-fun temp10989_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10989_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10989_3 () (_ BitVec 64))
(declare-fun temp10989_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10989_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10989_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10989_7 () (_ BitVec 64))
(declare-fun temp10989_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10989_9 () (_ BitVec 64))
(declare-fun temp10989_10 () (_ BitVec 64))
(declare-fun temp10989_11 () (_ BitVec 64))
(declare-fun temp10989_12 () (_ BitVec 64))
(declare-fun temp10989_13 () (_ BitVec 64))
(declare-fun temp10989_14 () (_ BitVec 64))
(declare-fun temp10989_15 () (_ BitVec 64))
(declare-fun temp10989_16 () (_ BitVec 64))
(declare-fun temp10989_17 () (_ BitVec 64))
(declare-fun temp10989_18 () (_ BitVec 64))
(declare-fun temp10989_19 () (_ BitVec 64))
(declare-fun temp10989_20 () (_ BitVec 64))
(declare-fun temp10989_21 () (_ BitVec 64))
(declare-fun temp10989_22 () (_ BitVec 64))
(declare-fun temp10989_23 () (_ BitVec 64))
(declare-fun temp10989_24 () (_ BitVec 64))
(declare-fun temp10989_25 () (_ BitVec 64))
(declare-fun temp10989_26 () (_ BitVec 64))
(declare-fun temp10989_27 () (_ BitVec 64))
(declare-fun temp10989_28 () (_ BitVec 64))
(declare-fun temp10989_29 () (_ BitVec 64))
(declare-fun temp10989_30 () (_ BitVec 64))
(declare-fun temp10989_31 () (_ BitVec 64))
(declare-fun temp10989_32 () (_ BitVec 64))
(declare-fun temp10989_33 () (_ BitVec 64))
(declare-fun temp10989_34 () (_ BitVec 64))
(declare-fun temp10989_35 () (_ BitVec 64))
(declare-fun temp10989_36 () (_ BitVec 64))
(declare-fun temp10989_37 () (_ BitVec 64))
(declare-fun temp10989_38 () (_ BitVec 64))
(declare-fun temp10989_39 () (_ BitVec 64))
(declare-fun temp10989_40 () (_ BitVec 64))
(declare-fun temp10989_41 () (_ BitVec 64))
(declare-fun temp10989_42 () (_ BitVec 64))
(declare-fun temp10989_43 () (_ BitVec 64))
(declare-fun temp10989_44 () (_ BitVec 64))
(declare-fun temp10989_45 () (_ BitVec 64))
(declare-fun temp10989_46 () (_ BitVec 64))
(declare-fun temp10989_47 () (_ BitVec 64))
(declare-fun temp10989_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10989_49 () (_ BitVec 64))
(declare-fun temp10989_50 () (_ BitVec 64))
(declare-fun temp10989_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10989_52 () (_ BitVec 64))
(declare-fun temp10989_53 () (_ BitVec 64))
(declare-fun temp10989_54 () (_ BitVec 64))
(declare-fun temp10989_55 () (_ BitVec 64))
(declare-fun temp10989_56 () (_ BitVec 64))
(declare-fun temp10989_57 () (_ BitVec 64))
(declare-fun temp10989_58 () (_ BitVec 64))
(declare-fun temp10989_59 () (_ BitVec 64))
(declare-fun temp10989_60 () (_ BitVec 64))
(declare-fun temp10989_61 () (_ BitVec 64))
(declare-fun temp10989_62 () (_ BitVec 64))
(declare-fun temp10989_63 () (_ BitVec 64))
(declare-fun temp10989_64 () (_ BitVec 64))
(declare-fun temp10989_65 () (_ BitVec 64))
(declare-fun temp10989_66 () (_ BitVec 64))
(declare-fun temp10989_67 () (_ BitVec 64))
(declare-fun temp10989_68 () (_ BitVec 64))
(declare-fun temp10989_69 () (_ BitVec 64))
(declare-fun temp10989_70 () (_ BitVec 64))
(declare-fun temp10989_71 () (_ BitVec 64))
(declare-fun temp10989_72 () (_ BitVec 64))
(declare-fun temp10989_73 () (_ BitVec 64))
(declare-fun temp10989_74 () (_ BitVec 64))
(declare-fun temp10989_75 () (_ BitVec 64))
(declare-fun temp10989_76 () (_ BitVec 64))
(declare-fun temp10989_77 () (_ BitVec 64))
(declare-fun temp10989_78 () (_ BitVec 64))
(declare-fun temp10989_79 () (_ BitVec 64))
(declare-fun temp10989_80 () (_ BitVec 64))
(declare-fun temp10989_81 () (_ BitVec 64))
(declare-fun temp10989_82 () (_ BitVec 64))
(declare-fun temp10989_83 () (_ BitVec 64))
(declare-fun temp10989_84 () (_ BitVec 64))
(declare-fun temp10989_85 () (_ BitVec 64))
(declare-fun temp10989_86 () (_ BitVec 64))
(declare-fun temp10989_87 () (_ BitVec 64))
(declare-fun temp10989_88 () (_ BitVec 64))
(declare-fun temp10989_89 () (_ BitVec 64))
(declare-fun temp10989_90 () (_ BitVec 64))
(declare-fun temp10989_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10989_92 () (_ BitVec 64))
(declare-fun temp10989_93 () (_ BitVec 64))
(declare-fun temp10989_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10989_95 () (_ BitVec 64))
(declare-fun temp10989_96 () (_ BitVec 64))
(declare-fun temp10989_97 () (_ BitVec 64))
(declare-fun temp10989_98 () (_ BitVec 64))
(declare-fun temp10989_99 () (_ BitVec 64))
(declare-fun temp10989_100 () (_ BitVec 64))
(declare-fun temp10989_101 () (_ BitVec 64))
(declare-fun temp10989_102 () (_ BitVec 64))
(declare-fun temp10989_103 () (_ BitVec 64))
(declare-fun temp10989_104 () (_ BitVec 64))
(declare-fun temp10989_105 () (_ BitVec 64))
(declare-fun temp10989_106 () (_ BitVec 64))
(declare-fun temp10989_107 () (_ BitVec 64))
(declare-fun temp10989_108 () (_ BitVec 64))
(declare-fun temp10989_109 () (_ BitVec 64))
(declare-fun temp10989_110 () (_ BitVec 64))
(declare-fun temp10989_111 () (_ BitVec 64))
(declare-fun temp10989_112 () (_ BitVec 64))
(declare-fun temp10989_113 () (_ BitVec 64))
(declare-fun temp10989_114 () (_ BitVec 64))
(declare-fun temp10989_115 () (_ BitVec 64))
(declare-fun temp10989_116 () (_ BitVec 64))
(declare-fun temp10989_117 () (_ BitVec 64))
(declare-fun temp10989_118 () (_ BitVec 64))
(declare-fun temp10989_119 () (_ BitVec 64))
(declare-fun temp10989_120 () (_ BitVec 64))
(declare-fun temp10989_121 () (_ BitVec 64))
(declare-fun temp10989_122 () (_ BitVec 64))
(declare-fun temp10989_123 () (_ BitVec 64))
(declare-fun temp10989_124 () (_ BitVec 64))
(declare-fun temp10989_125 () (_ BitVec 64))
(declare-fun temp10989_126 () (_ BitVec 64))
(declare-fun temp10989_127 () (_ BitVec 64))
(declare-fun temp10989_128 () (_ BitVec 64))
(declare-fun temp10989_129 () (_ BitVec 64))
(declare-fun temp10989_130 () (_ BitVec 64))
(declare-fun temp10989_131 () (_ BitVec 64))
(declare-fun temp10989_132 () (_ BitVec 64))
(declare-fun temp10989_133 () (_ BitVec 64))
(declare-fun temp10989_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10989_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10989_136 () (_ BitVec 64))
(declare-fun temp10989_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10989_138 () (_ BitVec 64))
(declare-fun temp10989_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10989_140 () (_ BitVec 64))
(declare-fun temp10989_141 () (_ BitVec 64))
(declare-fun temp10989_142 () (_ BitVec 64))
(declare-fun temp10989_143 () (_ BitVec 64))
(declare-fun temp10989_144 () (_ BitVec 64))
(declare-fun temp10989_145 () (_ BitVec 64))
(declare-fun temp10989_146 () (_ BitVec 64))
(declare-fun temp10989_147 () (_ BitVec 64))
(declare-fun temp10989_148 () (_ BitVec 64))
(declare-fun temp10989_149 () (_ BitVec 64))
(declare-fun temp10989_150 () (_ BitVec 64))
(declare-fun temp10989_151 () (_ BitVec 64))
(declare-fun temp10989_152 () (_ BitVec 64))
(declare-fun temp10989_153 () (_ BitVec 64))
(declare-fun temp10989_154 () (_ BitVec 64))
(declare-fun temp10989_155 () (_ BitVec 64))
(declare-fun temp10989_157 () (_ BitVec 64))
(declare-fun temp10989_158 () (_ BitVec 64))
(declare-fun temp10989_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10989_159 () (_ BitVec 64))
(declare-fun temp10989_160 () (_ BitVec 64))
(declare-fun temp10989_162 () (_ BitVec 64))
(declare-fun temp10989_163 () (_ BitVec 64))
(declare-fun temp10989_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10989_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10989_165 () (_ BitVec 64))
(declare-fun temp10989_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10989_167 () (_ BitVec 64))
(declare-fun temp10989_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10989_169 () (_ BitVec 64))
(declare-fun temp10989_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10989_171 () (_ BitVec 64))
(declare-fun temp10989_172 () (_ BitVec 64))
(declare-fun temp10989_173 () (_ BitVec 64))
(declare-fun temp10989_174 () (_ BitVec 64))
(declare-fun temp10989_175 () (_ BitVec 64))
(declare-fun temp10989_176 () (_ BitVec 64))
(declare-fun temp10989_177 () (_ BitVec 64))
(declare-fun temp10989_178 () (_ BitVec 64))
(declare-fun temp10989_179 () (_ BitVec 64))
(declare-fun temp10989_180 () (_ BitVec 64))
(declare-fun temp10989_181 () (_ BitVec 64))
(declare-fun temp10989_182 () (_ BitVec 64))
(declare-fun temp10989_183 () (_ BitVec 64))
(declare-fun temp10989_184 () (_ BitVec 64))
(declare-fun temp10989_185 () (_ BitVec 64))
(declare-fun temp10989_186 () (_ BitVec 64))
(declare-fun temp10989_187 () (_ BitVec 64))
(declare-fun temp10989_188 () (_ BitVec 64))
(declare-fun temp10989_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10989_190 () (_ BitVec 64))
(declare-fun temp10989_192 () (_ BitVec 64))
(declare-fun temp10989_193 () (_ BitVec 64))
(declare-fun temp10989_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10989_194 () (_ BitVec 64))
(declare-fun temp10989_195 () (_ BitVec 64))
(declare-fun temp10989_197 () (_ BitVec 64))
(declare-fun temp10989_198 () (_ BitVec 64))
(declare-fun temp10989_196 () (_ BitVec 64))
(declare-fun temp10989_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10989_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10989_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10989_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10989_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10989_204 () (_ BitVec 64))
(declare-fun temp10989_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10989_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10989_207 () (_ BitVec 64))
(declare-fun temp10989_208 () (_ BitVec 64))
(declare-fun temp10989_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10989_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10989_211 () (_ BitVec 64))
(declare-fun temp10989_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10989_213 () (_ BitVec 64))
(declare-fun temp10989_214 () (_ BitVec 64))
(declare-fun temp10989_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10989_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10989_217 () (_ BitVec 64))
(declare-fun temp10989_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10989_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10989_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10989_221 () (_ BitVec 64))
(assert (= temp10989_1 #x0000000000000001))
(assert (= var77203 temp10989_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10989_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10989_2)))
(assert (= temp10989_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10989_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10989_4 #x0000000000000000))
(assert (= var210941 temp10989_4))
(assert (= temp10989_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10989_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10989_6 #x0000000000000000))
(assert (= var210986 temp10989_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10989_7 #x0000000000000000))
(assert (= temp10989_8 temp10989_7))
(assert (= temp10989_9 (select ARGNAME_padding_NAMEEND_VAL temp10989_8)))
(assert (= temp10989_10 #x0000000000000001))
(assert (= temp10989_11 temp10989_10))
(assert (= temp10989_12 (select ARGNAME_padding_NAMEEND_VAL temp10989_11)))
(assert (= temp10989_13 #x0000000000000002))
(assert (= temp10989_14 temp10989_13))
(assert (= temp10989_15 (select ARGNAME_padding_NAMEEND_VAL temp10989_14)))
(assert (= temp10989_16 #x0000000000000003))
(assert (= temp10989_17 temp10989_16))
(assert (= temp10989_18 (select ARGNAME_padding_NAMEEND_VAL temp10989_17)))
(assert (= temp10989_19 #x0000000000000004))
(assert (= temp10989_20 temp10989_19))
(assert (= temp10989_21 (select ARGNAME_padding_NAMEEND_VAL temp10989_20)))
(assert (= temp10989_22 #x0000000000000005))
(assert (= temp10989_23 temp10989_22))
(assert (= temp10989_24 (select ARGNAME_padding_NAMEEND_VAL temp10989_23)))
(assert (= temp10989_25 #x0000000000000000))
(assert (= temp10989_26 #x0000000000000000))
(assert (= temp10989_27 temp10989_26))
(assert (= temp10989_28 (select ARGNAME_padding_NAMEEND_VAL temp10989_27)))
(assert (= temp10989_29 #x0000000000000000))
(assert (= temp10989_30 #x0000000000000001))
(assert (= temp10989_31 temp10989_30))
(assert (= temp10989_32 (select ARGNAME_padding_NAMEEND_VAL temp10989_31)))
(assert (= temp10989_33 #x0000000000000000))
(assert (= temp10989_34 #x0000000000000002))
(assert (= temp10989_35 temp10989_34))
(assert (= temp10989_36 (select ARGNAME_padding_NAMEEND_VAL temp10989_35)))
(assert (= temp10989_37 #x0000000000000000))
(assert (= temp10989_38 #x0000000000000003))
(assert (= temp10989_39 temp10989_38))
(assert (= temp10989_40 (select ARGNAME_padding_NAMEEND_VAL temp10989_39)))
(assert (= temp10989_41 #x0000000000000000))
(assert (= temp10989_42 #x0000000000000004))
(assert (= temp10989_43 temp10989_42))
(assert (= temp10989_44 (select ARGNAME_padding_NAMEEND_VAL temp10989_43)))
(assert (= temp10989_45 #x0000000000000000))
(assert (= temp10989_46 #x0000000000000005))
(assert (= temp10989_47 temp10989_46))
(assert (= temp10989_48 (select ARGNAME_padding_NAMEEND_VAL temp10989_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10989_28 temp10989_25)
             (bvslt temp10989_32 temp10989_29)
             (bvslt temp10989_36 temp10989_33)
             (bvslt temp10989_40 temp10989_37)
             (bvslt temp10989_44 temp10989_41)
             (bvslt temp10989_48 temp10989_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10989_49 #x0000000000000000))
(assert (= var1191714 temp10989_49))
(assert (= temp10989_50 #x0000000000000000))
(assert (= temp10989_51 temp10989_50))
(assert (= temp10989_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10989_51)))
(assert (= temp10989_53 #x0000000000000001))
(assert (= temp10989_54 temp10989_53))
(assert (= temp10989_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10989_54)))
(assert (= temp10989_56 #x0000000000000002))
(assert (= temp10989_57 temp10989_56))
(assert (= temp10989_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10989_57)))
(assert (= temp10989_59 #x0000000000000003))
(assert (= temp10989_60 temp10989_59))
(assert (= temp10989_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10989_60)))
(assert (= temp10989_62 #x0000000000000004))
(assert (= temp10989_63 temp10989_62))
(assert (= temp10989_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10989_63)))
(assert (= temp10989_65 #x0000000000000005))
(assert (= temp10989_66 temp10989_65))
(assert (= temp10989_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10989_66)))
(assert (= temp10989_68 #x0000000000000000))
(assert (= temp10989_69 #x0000000000000000))
(assert (= temp10989_70 temp10989_69))
(assert (= temp10989_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10989_70)))
(assert (= temp10989_72 #x0000000000000000))
(assert (= temp10989_73 #x0000000000000001))
(assert (= temp10989_74 temp10989_73))
(assert (= temp10989_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10989_74)))
(assert (= temp10989_76 #x0000000000000000))
(assert (= temp10989_77 #x0000000000000002))
(assert (= temp10989_78 temp10989_77))
(assert (= temp10989_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10989_78)))
(assert (= temp10989_80 #x0000000000000000))
(assert (= temp10989_81 #x0000000000000003))
(assert (= temp10989_82 temp10989_81))
(assert (= temp10989_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10989_82)))
(assert (= temp10989_84 #x0000000000000000))
(assert (= temp10989_85 #x0000000000000004))
(assert (= temp10989_86 temp10989_85))
(assert (= temp10989_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10989_86)))
(assert (= temp10989_88 #x0000000000000000))
(assert (= temp10989_89 #x0000000000000005))
(assert (= temp10989_90 temp10989_89))
(assert (= temp10989_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10989_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10989_71 temp10989_68)
             (bvslt temp10989_75 temp10989_72)
             (bvslt temp10989_79 temp10989_76)
             (bvslt temp10989_83 temp10989_80)
             (bvslt temp10989_87 temp10989_84)
             (bvslt temp10989_91 temp10989_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10989_92 #x0000000000000000))
(assert (= var1191725 temp10989_92))
(assert (= temp10989_93 #x0000000000000000))
(assert (= temp10989_94 temp10989_93))
(assert (= temp10989_95 (select ARGNAME_stride_NAMEEND_VAL temp10989_94)))
(assert (= temp10989_96 #x0000000000000001))
(assert (= temp10989_97 temp10989_96))
(assert (= temp10989_98 (select ARGNAME_stride_NAMEEND_VAL temp10989_97)))
(assert (= temp10989_99 #x0000000000000002))
(assert (= temp10989_100 temp10989_99))
(assert (= temp10989_101 (select ARGNAME_stride_NAMEEND_VAL temp10989_100)))
(assert (= temp10989_102 #x0000000000000003))
(assert (= temp10989_103 temp10989_102))
(assert (= temp10989_104 (select ARGNAME_stride_NAMEEND_VAL temp10989_103)))
(assert (= temp10989_105 #x0000000000000004))
(assert (= temp10989_106 temp10989_105))
(assert (= temp10989_107 (select ARGNAME_stride_NAMEEND_VAL temp10989_106)))
(assert (= temp10989_108 #x0000000000000005))
(assert (= temp10989_109 temp10989_108))
(assert (= temp10989_110 (select ARGNAME_stride_NAMEEND_VAL temp10989_109)))
(assert (= temp10989_111 #x0000000000000000))
(assert (= temp10989_112 #x0000000000000000))
(assert (= temp10989_113 temp10989_112))
(assert (= temp10989_114 (select ARGNAME_stride_NAMEEND_VAL temp10989_113)))
(assert (= temp10989_115 #x0000000000000000))
(assert (= temp10989_116 #x0000000000000001))
(assert (= temp10989_117 temp10989_116))
(assert (= temp10989_118 (select ARGNAME_stride_NAMEEND_VAL temp10989_117)))
(assert (= temp10989_119 #x0000000000000000))
(assert (= temp10989_120 #x0000000000000002))
(assert (= temp10989_121 temp10989_120))
(assert (= temp10989_122 (select ARGNAME_stride_NAMEEND_VAL temp10989_121)))
(assert (= temp10989_123 #x0000000000000000))
(assert (= temp10989_124 #x0000000000000003))
(assert (= temp10989_125 temp10989_124))
(assert (= temp10989_126 (select ARGNAME_stride_NAMEEND_VAL temp10989_125)))
(assert (= temp10989_127 #x0000000000000000))
(assert (= temp10989_128 #x0000000000000004))
(assert (= temp10989_129 temp10989_128))
(assert (= temp10989_130 (select ARGNAME_stride_NAMEEND_VAL temp10989_129)))
(assert (= temp10989_131 #x0000000000000000))
(assert (= temp10989_132 #x0000000000000005))
(assert (= temp10989_133 temp10989_132))
(assert (= temp10989_134 (select ARGNAME_stride_NAMEEND_VAL temp10989_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10989_114 temp10989_111)
             (bvsle temp10989_118 temp10989_115)
             (bvsle temp10989_122 temp10989_119)
             (bvsle temp10989_126 temp10989_123)
             (bvsle temp10989_130 temp10989_127)
             (bvsle temp10989_134 temp10989_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10989_135 #x0000000000000000))
(assert (= var1191735 temp10989_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10989_136 #x0000000000000001))
(assert (= var1191747 temp10989_136))
(assert (= temp10989_137 #x0000000000000000))
(assert (= var1179826 temp10989_137))
(assert (= temp10989_138 #x0000000000000000))
(assert (= temp10989_139 temp10989_138))
(assert (= temp10989_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10989_139)))
(assert (= temp10989_141 #x0000000000000001))
(assert (= temp10989_142 temp10989_141))
(assert (= temp10989_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10989_142)))
(assert (= temp10989_144 #x0000000000000002))
(assert (= temp10989_145 temp10989_144))
(assert (= temp10989_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10989_145)))
(assert (= temp10989_147 #x0000000000000003))
(assert (= temp10989_148 temp10989_147))
(assert (= temp10989_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10989_148)))
(assert (= temp10989_150 #x0000000000000004))
(assert (= temp10989_151 temp10989_150))
(assert (= temp10989_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10989_151)))
(assert (= temp10989_153 #x0000000000000005))
(assert (= temp10989_154 temp10989_153))
(assert (= temp10989_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10989_154)))
(assert (= temp10989_157 var1179826))
(assert (= temp10989_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10989_157)))
(assert (= temp10989_156 temp10989_158))
(assert (= var1191780
   (ite (bvslt temp10989_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10989_159 #x0000000000000000))
(assert (= var1191780 temp10989_159))
(assert (= temp10989_160 #x0000000000000000))
(assert (= var1179826 temp10989_160))
(assert (= temp10989_162 var1179826))
(assert (= temp10989_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10989_162)))
(assert (= temp10989_161 temp10989_163))
(assert (= var1191802 (bvsmod temp10989_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10989_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10989_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10989_165 #x0000000000000001))
(assert (= var1191803 temp10989_165))
(assert (= temp10989_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10989_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10989_167 #x0000000000000001))
(assert (= var1191823 temp10989_167))
(assert (= temp10989_168 #x0000000000000001))
(assert (= var1180714 temp10989_168))
(assert (= temp10989_169 #x0000000000000000))
(assert (= temp10989_170 temp10989_169))
(assert (= temp10989_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10989_170)))
(assert (= temp10989_172 #x0000000000000001))
(assert (= temp10989_173 temp10989_172))
(assert (= temp10989_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10989_173)))
(assert (= temp10989_175 #x0000000000000002))
(assert (= temp10989_176 temp10989_175))
(assert (= temp10989_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10989_176)))
(assert (= temp10989_178 #x0000000000000003))
(assert (= temp10989_179 temp10989_178))
(assert (= temp10989_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10989_179)))
(assert (= temp10989_181 #x0000000000000004))
(assert (= temp10989_182 temp10989_181))
(assert (= temp10989_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10989_182)))
(assert (= temp10989_184 #x0000000000000005))
(assert (= temp10989_185 temp10989_184))
(assert (= temp10989_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10989_185)))
(assert (= temp10989_187 #x0000000000000000))
(assert (= temp10989_188
   (ite (bvslt var1180714 temp10989_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10989_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10989_188)))
(assert (= var1191831 temp10989_189))
(assert (bvslt (ite (bvslt var1180714 temp10989_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10989_190 #x0000000000000001))
(assert (= var1180714 temp10989_190))
(assert (= temp10989_192 var1180714))
(assert (= temp10989_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10989_192)))
(assert (= temp10989_191 temp10989_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10989_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10989_194 #x0000000000000001))
(assert (= var1191836 temp10989_194))
(assert (= temp10989_195 #x0000000000000000))
(assert (= var1179826 temp10989_195))
(assert (= temp10989_197 var1179826))
(assert (= temp10989_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10989_197)))
(assert (= temp10989_196 temp10989_198))
(assert (= temp10989_199 #x0000000000000002))
(assert (= var1586025 temp10989_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10989_200 #x0000000000000001))
(assert (= var1191993 temp10989_200))
(assert (= temp10989_201 #x0000000000000001))
(assert (= var2700303 temp10989_201))
(assert (= temp10989_202 #x0000000000000001))
(assert (= var2962447 temp10989_202))
(assert (= temp10989_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10989_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10989_204 #x0000000000000001))
(assert (= var211058 temp10989_204))
(assert (= temp10989_205 #x0000000000000001))
(assert (= var211188 temp10989_205))
(assert (= var3879401 var211188))
(assert (= temp10989_206 #x0000000000000000))
(assert (= var3866802 temp10989_206))
(assert (= temp10989_207 #x0000000000000000))
(assert (= temp10989_208
   (ite (bvslt var3866802 temp10989_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10989_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10989_208)))
(assert (= var3879420 temp10989_209))
(assert (bvslt (ite (bvslt var3866802 temp10989_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10989_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10989_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10989_211 #x0000000000000000))
(assert (= var3879421 temp10989_211))
(assert (= temp10989_212 #x0000000000000001))
(assert (= var3867690 temp10989_212))
(assert (= temp10989_213 #x0000000000000000))
(assert (= temp10989_214
   (ite (bvslt var3867690 temp10989_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10989_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10989_214)))
(assert (= var3879423 temp10989_215))
(assert (bvslt (ite (bvslt var3867690 temp10989_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10989_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10989_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10989_217 #x0000000000000001))
(assert (= var3879424 temp10989_217))
(assert (= temp10989_218 #x0000000000000000))
(assert (= var4133117 temp10989_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10989_219 #x0000000000000002))
(assert (= var4339331 temp10989_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10989_220 #x0000000000000000))
(assert (= var4404892 temp10989_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10989_221 #x0000000000000001))
(assert (= var211058 temp10989_221))
(model-add temp10989_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10989_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10989_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10989_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





