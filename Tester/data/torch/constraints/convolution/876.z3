(declare-fun temp1168_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1168_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1168_3 () (_ BitVec 64))
(declare-fun temp1168_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1168_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1168_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1168_7 () (_ BitVec 64))
(declare-fun temp1168_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1168_9 () (_ BitVec 64))
(declare-fun temp1168_10 () (_ BitVec 64))
(declare-fun temp1168_11 () (_ BitVec 64))
(declare-fun temp1168_12 () (_ BitVec 64))
(declare-fun temp1168_13 () (_ BitVec 64))
(declare-fun temp1168_14 () (_ BitVec 64))
(declare-fun temp1168_15 () (_ BitVec 64))
(declare-fun temp1168_16 () (_ BitVec 64))
(declare-fun temp1168_17 () (_ BitVec 64))
(declare-fun temp1168_18 () (_ BitVec 64))
(declare-fun temp1168_19 () (_ BitVec 64))
(declare-fun temp1168_20 () (_ BitVec 64))
(declare-fun temp1168_21 () (_ BitVec 64))
(declare-fun temp1168_22 () (_ BitVec 64))
(declare-fun temp1168_23 () (_ BitVec 64))
(declare-fun temp1168_24 () (_ BitVec 64))
(declare-fun temp1168_25 () (_ BitVec 64))
(declare-fun temp1168_26 () (_ BitVec 64))
(declare-fun temp1168_27 () (_ BitVec 64))
(declare-fun temp1168_28 () (_ BitVec 64))
(declare-fun temp1168_29 () (_ BitVec 64))
(declare-fun temp1168_30 () (_ BitVec 64))
(declare-fun temp1168_31 () (_ BitVec 64))
(declare-fun temp1168_32 () (_ BitVec 64))
(declare-fun temp1168_33 () (_ BitVec 64))
(declare-fun temp1168_34 () (_ BitVec 64))
(declare-fun temp1168_35 () (_ BitVec 64))
(declare-fun temp1168_36 () (_ BitVec 64))
(declare-fun temp1168_37 () (_ BitVec 64))
(declare-fun temp1168_38 () (_ BitVec 64))
(declare-fun temp1168_39 () (_ BitVec 64))
(declare-fun temp1168_40 () (_ BitVec 64))
(declare-fun temp1168_41 () (_ BitVec 64))
(declare-fun temp1168_42 () (_ BitVec 64))
(declare-fun temp1168_43 () (_ BitVec 64))
(declare-fun temp1168_44 () (_ BitVec 64))
(declare-fun temp1168_45 () (_ BitVec 64))
(declare-fun temp1168_46 () (_ BitVec 64))
(declare-fun temp1168_47 () (_ BitVec 64))
(declare-fun temp1168_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1168_49 () (_ BitVec 64))
(declare-fun temp1168_50 () (_ BitVec 64))
(declare-fun temp1168_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1168_52 () (_ BitVec 64))
(declare-fun temp1168_53 () (_ BitVec 64))
(declare-fun temp1168_54 () (_ BitVec 64))
(declare-fun temp1168_55 () (_ BitVec 64))
(declare-fun temp1168_56 () (_ BitVec 64))
(declare-fun temp1168_57 () (_ BitVec 64))
(declare-fun temp1168_58 () (_ BitVec 64))
(declare-fun temp1168_59 () (_ BitVec 64))
(declare-fun temp1168_60 () (_ BitVec 64))
(declare-fun temp1168_61 () (_ BitVec 64))
(declare-fun temp1168_62 () (_ BitVec 64))
(declare-fun temp1168_63 () (_ BitVec 64))
(declare-fun temp1168_64 () (_ BitVec 64))
(declare-fun temp1168_65 () (_ BitVec 64))
(declare-fun temp1168_66 () (_ BitVec 64))
(declare-fun temp1168_67 () (_ BitVec 64))
(declare-fun temp1168_68 () (_ BitVec 64))
(declare-fun temp1168_69 () (_ BitVec 64))
(declare-fun temp1168_70 () (_ BitVec 64))
(declare-fun temp1168_71 () (_ BitVec 64))
(declare-fun temp1168_72 () (_ BitVec 64))
(declare-fun temp1168_73 () (_ BitVec 64))
(declare-fun temp1168_74 () (_ BitVec 64))
(declare-fun temp1168_75 () (_ BitVec 64))
(declare-fun temp1168_76 () (_ BitVec 64))
(declare-fun temp1168_77 () (_ BitVec 64))
(declare-fun temp1168_78 () (_ BitVec 64))
(declare-fun temp1168_79 () (_ BitVec 64))
(declare-fun temp1168_80 () (_ BitVec 64))
(declare-fun temp1168_81 () (_ BitVec 64))
(declare-fun temp1168_82 () (_ BitVec 64))
(declare-fun temp1168_83 () (_ BitVec 64))
(declare-fun temp1168_84 () (_ BitVec 64))
(declare-fun temp1168_85 () (_ BitVec 64))
(declare-fun temp1168_86 () (_ BitVec 64))
(declare-fun temp1168_87 () (_ BitVec 64))
(declare-fun temp1168_88 () (_ BitVec 64))
(declare-fun temp1168_89 () (_ BitVec 64))
(declare-fun temp1168_90 () (_ BitVec 64))
(declare-fun temp1168_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1168_92 () (_ BitVec 64))
(declare-fun temp1168_93 () (_ BitVec 64))
(declare-fun temp1168_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1168_95 () (_ BitVec 64))
(declare-fun temp1168_96 () (_ BitVec 64))
(declare-fun temp1168_97 () (_ BitVec 64))
(declare-fun temp1168_98 () (_ BitVec 64))
(declare-fun temp1168_99 () (_ BitVec 64))
(declare-fun temp1168_100 () (_ BitVec 64))
(declare-fun temp1168_101 () (_ BitVec 64))
(declare-fun temp1168_102 () (_ BitVec 64))
(declare-fun temp1168_103 () (_ BitVec 64))
(declare-fun temp1168_104 () (_ BitVec 64))
(declare-fun temp1168_105 () (_ BitVec 64))
(declare-fun temp1168_106 () (_ BitVec 64))
(declare-fun temp1168_107 () (_ BitVec 64))
(declare-fun temp1168_108 () (_ BitVec 64))
(declare-fun temp1168_109 () (_ BitVec 64))
(declare-fun temp1168_110 () (_ BitVec 64))
(declare-fun temp1168_111 () (_ BitVec 64))
(declare-fun temp1168_112 () (_ BitVec 64))
(declare-fun temp1168_113 () (_ BitVec 64))
(declare-fun temp1168_114 () (_ BitVec 64))
(declare-fun temp1168_115 () (_ BitVec 64))
(declare-fun temp1168_116 () (_ BitVec 64))
(declare-fun temp1168_117 () (_ BitVec 64))
(declare-fun temp1168_118 () (_ BitVec 64))
(declare-fun temp1168_119 () (_ BitVec 64))
(declare-fun temp1168_120 () (_ BitVec 64))
(declare-fun temp1168_121 () (_ BitVec 64))
(declare-fun temp1168_122 () (_ BitVec 64))
(declare-fun temp1168_123 () (_ BitVec 64))
(declare-fun temp1168_124 () (_ BitVec 64))
(declare-fun temp1168_125 () (_ BitVec 64))
(declare-fun temp1168_126 () (_ BitVec 64))
(declare-fun temp1168_127 () (_ BitVec 64))
(declare-fun temp1168_128 () (_ BitVec 64))
(declare-fun temp1168_129 () (_ BitVec 64))
(declare-fun temp1168_130 () (_ BitVec 64))
(declare-fun temp1168_131 () (_ BitVec 64))
(declare-fun temp1168_132 () (_ BitVec 64))
(declare-fun temp1168_133 () (_ BitVec 64))
(declare-fun temp1168_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1168_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1168_136 () (_ BitVec 64))
(declare-fun temp1168_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1168_138 () (_ BitVec 64))
(declare-fun temp1168_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1168_140 () (_ BitVec 64))
(declare-fun temp1168_141 () (_ BitVec 64))
(declare-fun temp1168_142 () (_ BitVec 64))
(declare-fun temp1168_143 () (_ BitVec 64))
(declare-fun temp1168_144 () (_ BitVec 64))
(declare-fun temp1168_145 () (_ BitVec 64))
(declare-fun temp1168_146 () (_ BitVec 64))
(declare-fun temp1168_147 () (_ BitVec 64))
(declare-fun temp1168_148 () (_ BitVec 64))
(declare-fun temp1168_149 () (_ BitVec 64))
(declare-fun temp1168_150 () (_ BitVec 64))
(declare-fun temp1168_151 () (_ BitVec 64))
(declare-fun temp1168_152 () (_ BitVec 64))
(declare-fun temp1168_153 () (_ BitVec 64))
(declare-fun temp1168_154 () (_ BitVec 64))
(declare-fun temp1168_155 () (_ BitVec 64))
(declare-fun temp1168_157 () (_ BitVec 64))
(declare-fun temp1168_158 () (_ BitVec 64))
(declare-fun temp1168_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1168_159 () (_ BitVec 64))
(declare-fun temp1168_160 () (_ BitVec 64))
(declare-fun temp1168_162 () (_ BitVec 64))
(declare-fun temp1168_163 () (_ BitVec 64))
(declare-fun temp1168_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1168_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1168_165 () (_ BitVec 64))
(declare-fun temp1168_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1168_167 () (_ BitVec 64))
(declare-fun temp1168_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1168_169 () (_ BitVec 64))
(declare-fun temp1168_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1168_171 () (_ BitVec 64))
(declare-fun temp1168_172 () (_ BitVec 64))
(declare-fun temp1168_173 () (_ BitVec 64))
(declare-fun temp1168_174 () (_ BitVec 64))
(declare-fun temp1168_175 () (_ BitVec 64))
(declare-fun temp1168_176 () (_ BitVec 64))
(declare-fun temp1168_177 () (_ BitVec 64))
(declare-fun temp1168_178 () (_ BitVec 64))
(declare-fun temp1168_179 () (_ BitVec 64))
(declare-fun temp1168_180 () (_ BitVec 64))
(declare-fun temp1168_181 () (_ BitVec 64))
(declare-fun temp1168_182 () (_ BitVec 64))
(declare-fun temp1168_183 () (_ BitVec 64))
(declare-fun temp1168_184 () (_ BitVec 64))
(declare-fun temp1168_185 () (_ BitVec 64))
(declare-fun temp1168_186 () (_ BitVec 64))
(declare-fun temp1168_187 () (_ BitVec 64))
(declare-fun temp1168_188 () (_ BitVec 64))
(declare-fun temp1168_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1168_190 () (_ BitVec 64))
(declare-fun temp1168_192 () (_ BitVec 64))
(declare-fun temp1168_193 () (_ BitVec 64))
(declare-fun temp1168_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1168_194 () (_ BitVec 64))
(declare-fun temp1168_195 () (_ BitVec 64))
(declare-fun temp1168_197 () (_ BitVec 64))
(declare-fun temp1168_198 () (_ BitVec 64))
(declare-fun temp1168_196 () (_ BitVec 64))
(declare-fun temp1168_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1168_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1168_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1168_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1168_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1168_204 () (_ BitVec 64))
(declare-fun temp1168_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1168_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1168_207 () (_ BitVec 64))
(declare-fun temp1168_208 () (_ BitVec 64))
(declare-fun temp1168_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1168_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1168_211 () (_ BitVec 64))
(declare-fun temp1168_212 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1168_213 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp1168_214 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp1168_215 () (_ BitVec 64))
(assert (= temp1168_1 #x0000000000000001))
(assert (= var77203 temp1168_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1168_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1168_2)))
(assert (= temp1168_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1168_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1168_4 #x0000000000000000))
(assert (= var210941 temp1168_4))
(assert (= temp1168_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1168_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1168_6 #x0000000000000000))
(assert (= var210986 temp1168_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1168_7 #x0000000000000000))
(assert (= temp1168_8 temp1168_7))
(assert (= temp1168_9 (select ARGNAME_padding_NAMEEND_VAL temp1168_8)))
(assert (= temp1168_10 #x0000000000000001))
(assert (= temp1168_11 temp1168_10))
(assert (= temp1168_12 (select ARGNAME_padding_NAMEEND_VAL temp1168_11)))
(assert (= temp1168_13 #x0000000000000002))
(assert (= temp1168_14 temp1168_13))
(assert (= temp1168_15 (select ARGNAME_padding_NAMEEND_VAL temp1168_14)))
(assert (= temp1168_16 #x0000000000000003))
(assert (= temp1168_17 temp1168_16))
(assert (= temp1168_18 (select ARGNAME_padding_NAMEEND_VAL temp1168_17)))
(assert (= temp1168_19 #x0000000000000004))
(assert (= temp1168_20 temp1168_19))
(assert (= temp1168_21 (select ARGNAME_padding_NAMEEND_VAL temp1168_20)))
(assert (= temp1168_22 #x0000000000000005))
(assert (= temp1168_23 temp1168_22))
(assert (= temp1168_24 (select ARGNAME_padding_NAMEEND_VAL temp1168_23)))
(assert (= temp1168_25 #x0000000000000000))
(assert (= temp1168_26 #x0000000000000000))
(assert (= temp1168_27 temp1168_26))
(assert (= temp1168_28 (select ARGNAME_padding_NAMEEND_VAL temp1168_27)))
(assert (= temp1168_29 #x0000000000000000))
(assert (= temp1168_30 #x0000000000000001))
(assert (= temp1168_31 temp1168_30))
(assert (= temp1168_32 (select ARGNAME_padding_NAMEEND_VAL temp1168_31)))
(assert (= temp1168_33 #x0000000000000000))
(assert (= temp1168_34 #x0000000000000002))
(assert (= temp1168_35 temp1168_34))
(assert (= temp1168_36 (select ARGNAME_padding_NAMEEND_VAL temp1168_35)))
(assert (= temp1168_37 #x0000000000000000))
(assert (= temp1168_38 #x0000000000000003))
(assert (= temp1168_39 temp1168_38))
(assert (= temp1168_40 (select ARGNAME_padding_NAMEEND_VAL temp1168_39)))
(assert (= temp1168_41 #x0000000000000000))
(assert (= temp1168_42 #x0000000000000004))
(assert (= temp1168_43 temp1168_42))
(assert (= temp1168_44 (select ARGNAME_padding_NAMEEND_VAL temp1168_43)))
(assert (= temp1168_45 #x0000000000000000))
(assert (= temp1168_46 #x0000000000000005))
(assert (= temp1168_47 temp1168_46))
(assert (= temp1168_48 (select ARGNAME_padding_NAMEEND_VAL temp1168_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1168_28 temp1168_25)
             (bvslt temp1168_32 temp1168_29)
             (bvslt temp1168_36 temp1168_33)
             (bvslt temp1168_40 temp1168_37)
             (bvslt temp1168_44 temp1168_41)
             (bvslt temp1168_48 temp1168_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1168_49 #x0000000000000000))
(assert (= var1191714 temp1168_49))
(assert (= temp1168_50 #x0000000000000000))
(assert (= temp1168_51 temp1168_50))
(assert (= temp1168_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1168_51)))
(assert (= temp1168_53 #x0000000000000001))
(assert (= temp1168_54 temp1168_53))
(assert (= temp1168_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1168_54)))
(assert (= temp1168_56 #x0000000000000002))
(assert (= temp1168_57 temp1168_56))
(assert (= temp1168_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1168_57)))
(assert (= temp1168_59 #x0000000000000003))
(assert (= temp1168_60 temp1168_59))
(assert (= temp1168_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1168_60)))
(assert (= temp1168_62 #x0000000000000004))
(assert (= temp1168_63 temp1168_62))
(assert (= temp1168_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1168_63)))
(assert (= temp1168_65 #x0000000000000005))
(assert (= temp1168_66 temp1168_65))
(assert (= temp1168_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1168_66)))
(assert (= temp1168_68 #x0000000000000000))
(assert (= temp1168_69 #x0000000000000000))
(assert (= temp1168_70 temp1168_69))
(assert (= temp1168_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1168_70)))
(assert (= temp1168_72 #x0000000000000000))
(assert (= temp1168_73 #x0000000000000001))
(assert (= temp1168_74 temp1168_73))
(assert (= temp1168_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1168_74)))
(assert (= temp1168_76 #x0000000000000000))
(assert (= temp1168_77 #x0000000000000002))
(assert (= temp1168_78 temp1168_77))
(assert (= temp1168_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1168_78)))
(assert (= temp1168_80 #x0000000000000000))
(assert (= temp1168_81 #x0000000000000003))
(assert (= temp1168_82 temp1168_81))
(assert (= temp1168_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1168_82)))
(assert (= temp1168_84 #x0000000000000000))
(assert (= temp1168_85 #x0000000000000004))
(assert (= temp1168_86 temp1168_85))
(assert (= temp1168_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1168_86)))
(assert (= temp1168_88 #x0000000000000000))
(assert (= temp1168_89 #x0000000000000005))
(assert (= temp1168_90 temp1168_89))
(assert (= temp1168_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1168_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1168_71 temp1168_68)
             (bvslt temp1168_75 temp1168_72)
             (bvslt temp1168_79 temp1168_76)
             (bvslt temp1168_83 temp1168_80)
             (bvslt temp1168_87 temp1168_84)
             (bvslt temp1168_91 temp1168_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1168_92 #x0000000000000000))
(assert (= var1191725 temp1168_92))
(assert (= temp1168_93 #x0000000000000000))
(assert (= temp1168_94 temp1168_93))
(assert (= temp1168_95 (select ARGNAME_stride_NAMEEND_VAL temp1168_94)))
(assert (= temp1168_96 #x0000000000000001))
(assert (= temp1168_97 temp1168_96))
(assert (= temp1168_98 (select ARGNAME_stride_NAMEEND_VAL temp1168_97)))
(assert (= temp1168_99 #x0000000000000002))
(assert (= temp1168_100 temp1168_99))
(assert (= temp1168_101 (select ARGNAME_stride_NAMEEND_VAL temp1168_100)))
(assert (= temp1168_102 #x0000000000000003))
(assert (= temp1168_103 temp1168_102))
(assert (= temp1168_104 (select ARGNAME_stride_NAMEEND_VAL temp1168_103)))
(assert (= temp1168_105 #x0000000000000004))
(assert (= temp1168_106 temp1168_105))
(assert (= temp1168_107 (select ARGNAME_stride_NAMEEND_VAL temp1168_106)))
(assert (= temp1168_108 #x0000000000000005))
(assert (= temp1168_109 temp1168_108))
(assert (= temp1168_110 (select ARGNAME_stride_NAMEEND_VAL temp1168_109)))
(assert (= temp1168_111 #x0000000000000000))
(assert (= temp1168_112 #x0000000000000000))
(assert (= temp1168_113 temp1168_112))
(assert (= temp1168_114 (select ARGNAME_stride_NAMEEND_VAL temp1168_113)))
(assert (= temp1168_115 #x0000000000000000))
(assert (= temp1168_116 #x0000000000000001))
(assert (= temp1168_117 temp1168_116))
(assert (= temp1168_118 (select ARGNAME_stride_NAMEEND_VAL temp1168_117)))
(assert (= temp1168_119 #x0000000000000000))
(assert (= temp1168_120 #x0000000000000002))
(assert (= temp1168_121 temp1168_120))
(assert (= temp1168_122 (select ARGNAME_stride_NAMEEND_VAL temp1168_121)))
(assert (= temp1168_123 #x0000000000000000))
(assert (= temp1168_124 #x0000000000000003))
(assert (= temp1168_125 temp1168_124))
(assert (= temp1168_126 (select ARGNAME_stride_NAMEEND_VAL temp1168_125)))
(assert (= temp1168_127 #x0000000000000000))
(assert (= temp1168_128 #x0000000000000004))
(assert (= temp1168_129 temp1168_128))
(assert (= temp1168_130 (select ARGNAME_stride_NAMEEND_VAL temp1168_129)))
(assert (= temp1168_131 #x0000000000000000))
(assert (= temp1168_132 #x0000000000000005))
(assert (= temp1168_133 temp1168_132))
(assert (= temp1168_134 (select ARGNAME_stride_NAMEEND_VAL temp1168_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1168_114 temp1168_111)
             (bvsle temp1168_118 temp1168_115)
             (bvsle temp1168_122 temp1168_119)
             (bvsle temp1168_126 temp1168_123)
             (bvsle temp1168_130 temp1168_127)
             (bvsle temp1168_134 temp1168_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1168_135 #x0000000000000000))
(assert (= var1191735 temp1168_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1168_136 #x0000000000000001))
(assert (= var1191747 temp1168_136))
(assert (= temp1168_137 #x0000000000000000))
(assert (= var1179826 temp1168_137))
(assert (= temp1168_138 #x0000000000000000))
(assert (= temp1168_139 temp1168_138))
(assert (= temp1168_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1168_139)))
(assert (= temp1168_141 #x0000000000000001))
(assert (= temp1168_142 temp1168_141))
(assert (= temp1168_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1168_142)))
(assert (= temp1168_144 #x0000000000000002))
(assert (= temp1168_145 temp1168_144))
(assert (= temp1168_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1168_145)))
(assert (= temp1168_147 #x0000000000000003))
(assert (= temp1168_148 temp1168_147))
(assert (= temp1168_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1168_148)))
(assert (= temp1168_150 #x0000000000000004))
(assert (= temp1168_151 temp1168_150))
(assert (= temp1168_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1168_151)))
(assert (= temp1168_153 #x0000000000000005))
(assert (= temp1168_154 temp1168_153))
(assert (= temp1168_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1168_154)))
(assert (= temp1168_157 var1179826))
(assert (= temp1168_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1168_157)))
(assert (= temp1168_156 temp1168_158))
(assert (= var1191780
   (ite (bvslt temp1168_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1168_159 #x0000000000000000))
(assert (= var1191780 temp1168_159))
(assert (= temp1168_160 #x0000000000000000))
(assert (= var1179826 temp1168_160))
(assert (= temp1168_162 var1179826))
(assert (= temp1168_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1168_162)))
(assert (= temp1168_161 temp1168_163))
(assert (= var1191802 (bvsmod temp1168_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1168_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1168_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1168_165 #x0000000000000001))
(assert (= var1191803 temp1168_165))
(assert (= temp1168_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1168_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1168_167 #x0000000000000001))
(assert (= var1191823 temp1168_167))
(assert (= temp1168_168 #x0000000000000001))
(assert (= var1180714 temp1168_168))
(assert (= temp1168_169 #x0000000000000000))
(assert (= temp1168_170 temp1168_169))
(assert (= temp1168_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1168_170)))
(assert (= temp1168_172 #x0000000000000001))
(assert (= temp1168_173 temp1168_172))
(assert (= temp1168_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1168_173)))
(assert (= temp1168_175 #x0000000000000002))
(assert (= temp1168_176 temp1168_175))
(assert (= temp1168_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1168_176)))
(assert (= temp1168_178 #x0000000000000003))
(assert (= temp1168_179 temp1168_178))
(assert (= temp1168_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1168_179)))
(assert (= temp1168_181 #x0000000000000004))
(assert (= temp1168_182 temp1168_181))
(assert (= temp1168_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1168_182)))
(assert (= temp1168_184 #x0000000000000005))
(assert (= temp1168_185 temp1168_184))
(assert (= temp1168_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1168_185)))
(assert (= temp1168_187 #x0000000000000000))
(assert (= temp1168_188
   (ite (bvslt var1180714 temp1168_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1168_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1168_188)))
(assert (= var1191831 temp1168_189))
(assert (bvslt (ite (bvslt var1180714 temp1168_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1168_190 #x0000000000000001))
(assert (= var1180714 temp1168_190))
(assert (= temp1168_192 var1180714))
(assert (= temp1168_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1168_192)))
(assert (= temp1168_191 temp1168_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1168_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1168_194 #x0000000000000001))
(assert (= var1191836 temp1168_194))
(assert (= temp1168_195 #x0000000000000000))
(assert (= var1179826 temp1168_195))
(assert (= temp1168_197 var1179826))
(assert (= temp1168_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1168_197)))
(assert (= temp1168_196 temp1168_198))
(assert (= temp1168_199 #x0000000000000002))
(assert (= var1586025 temp1168_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1168_200 #x0000000000000001))
(assert (= var1191993 temp1168_200))
(assert (= temp1168_201 #x0000000000000001))
(assert (= var2700303 temp1168_201))
(assert (= temp1168_202 #x0000000000000001))
(assert (= var2962447 temp1168_202))
(assert (= temp1168_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1168_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1168_204 #x0000000000000001))
(assert (= var211058 temp1168_204))
(assert (= temp1168_205 #x0000000000000001))
(assert (= var211188 temp1168_205))
(assert (= var3879401 var211188))
(assert (= temp1168_206 #x0000000000000000))
(assert (= var3866802 temp1168_206))
(assert (= temp1168_207 #x0000000000000000))
(assert (= temp1168_208
   (ite (bvslt var3866802 temp1168_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1168_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1168_208)))
(assert (= var3879420 temp1168_209))
(assert (bvslt (ite (bvslt var3866802 temp1168_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1168_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1168_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1168_211 #x0000000000000001))
(assert (= var3879421 temp1168_211))
(assert (= temp1168_212 #x0000000000000000))
(assert (= var4133117 temp1168_212))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1168_213 #x0000000000000002))
(assert (= var4339331 temp1168_213))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1168_214 #x0000000000000000))
(assert (= var4404892 temp1168_214))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp1168_215 #x0000000000000001))
(assert (= var211058 temp1168_215))
(model-add temp1168_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1168_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1168_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1168_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





