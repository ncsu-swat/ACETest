(declare-fun temp11000_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11000_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11000_3 () (_ BitVec 64))
(declare-fun temp11000_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11000_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11000_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11000_7 () (_ BitVec 64))
(declare-fun temp11000_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11000_9 () (_ BitVec 64))
(declare-fun temp11000_10 () (_ BitVec 64))
(declare-fun temp11000_11 () (_ BitVec 64))
(declare-fun temp11000_12 () (_ BitVec 64))
(declare-fun temp11000_13 () (_ BitVec 64))
(declare-fun temp11000_14 () (_ BitVec 64))
(declare-fun temp11000_15 () (_ BitVec 64))
(declare-fun temp11000_16 () (_ BitVec 64))
(declare-fun temp11000_17 () (_ BitVec 64))
(declare-fun temp11000_18 () (_ BitVec 64))
(declare-fun temp11000_19 () (_ BitVec 64))
(declare-fun temp11000_20 () (_ BitVec 64))
(declare-fun temp11000_21 () (_ BitVec 64))
(declare-fun temp11000_22 () (_ BitVec 64))
(declare-fun temp11000_23 () (_ BitVec 64))
(declare-fun temp11000_24 () (_ BitVec 64))
(declare-fun temp11000_25 () (_ BitVec 64))
(declare-fun temp11000_26 () (_ BitVec 64))
(declare-fun temp11000_27 () (_ BitVec 64))
(declare-fun temp11000_28 () (_ BitVec 64))
(declare-fun temp11000_29 () (_ BitVec 64))
(declare-fun temp11000_30 () (_ BitVec 64))
(declare-fun temp11000_31 () (_ BitVec 64))
(declare-fun temp11000_32 () (_ BitVec 64))
(declare-fun temp11000_33 () (_ BitVec 64))
(declare-fun temp11000_34 () (_ BitVec 64))
(declare-fun temp11000_35 () (_ BitVec 64))
(declare-fun temp11000_36 () (_ BitVec 64))
(declare-fun temp11000_37 () (_ BitVec 64))
(declare-fun temp11000_38 () (_ BitVec 64))
(declare-fun temp11000_39 () (_ BitVec 64))
(declare-fun temp11000_40 () (_ BitVec 64))
(declare-fun temp11000_41 () (_ BitVec 64))
(declare-fun temp11000_42 () (_ BitVec 64))
(declare-fun temp11000_43 () (_ BitVec 64))
(declare-fun temp11000_44 () (_ BitVec 64))
(declare-fun temp11000_45 () (_ BitVec 64))
(declare-fun temp11000_46 () (_ BitVec 64))
(declare-fun temp11000_47 () (_ BitVec 64))
(declare-fun temp11000_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11000_49 () (_ BitVec 64))
(declare-fun temp11000_50 () (_ BitVec 64))
(declare-fun temp11000_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11000_52 () (_ BitVec 64))
(declare-fun temp11000_53 () (_ BitVec 64))
(declare-fun temp11000_54 () (_ BitVec 64))
(declare-fun temp11000_55 () (_ BitVec 64))
(declare-fun temp11000_56 () (_ BitVec 64))
(declare-fun temp11000_57 () (_ BitVec 64))
(declare-fun temp11000_58 () (_ BitVec 64))
(declare-fun temp11000_59 () (_ BitVec 64))
(declare-fun temp11000_60 () (_ BitVec 64))
(declare-fun temp11000_61 () (_ BitVec 64))
(declare-fun temp11000_62 () (_ BitVec 64))
(declare-fun temp11000_63 () (_ BitVec 64))
(declare-fun temp11000_64 () (_ BitVec 64))
(declare-fun temp11000_65 () (_ BitVec 64))
(declare-fun temp11000_66 () (_ BitVec 64))
(declare-fun temp11000_67 () (_ BitVec 64))
(declare-fun temp11000_68 () (_ BitVec 64))
(declare-fun temp11000_69 () (_ BitVec 64))
(declare-fun temp11000_70 () (_ BitVec 64))
(declare-fun temp11000_71 () (_ BitVec 64))
(declare-fun temp11000_72 () (_ BitVec 64))
(declare-fun temp11000_73 () (_ BitVec 64))
(declare-fun temp11000_74 () (_ BitVec 64))
(declare-fun temp11000_75 () (_ BitVec 64))
(declare-fun temp11000_76 () (_ BitVec 64))
(declare-fun temp11000_77 () (_ BitVec 64))
(declare-fun temp11000_78 () (_ BitVec 64))
(declare-fun temp11000_79 () (_ BitVec 64))
(declare-fun temp11000_80 () (_ BitVec 64))
(declare-fun temp11000_81 () (_ BitVec 64))
(declare-fun temp11000_82 () (_ BitVec 64))
(declare-fun temp11000_83 () (_ BitVec 64))
(declare-fun temp11000_84 () (_ BitVec 64))
(declare-fun temp11000_85 () (_ BitVec 64))
(declare-fun temp11000_86 () (_ BitVec 64))
(declare-fun temp11000_87 () (_ BitVec 64))
(declare-fun temp11000_88 () (_ BitVec 64))
(declare-fun temp11000_89 () (_ BitVec 64))
(declare-fun temp11000_90 () (_ BitVec 64))
(declare-fun temp11000_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11000_92 () (_ BitVec 64))
(declare-fun temp11000_93 () (_ BitVec 64))
(declare-fun temp11000_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11000_95 () (_ BitVec 64))
(declare-fun temp11000_96 () (_ BitVec 64))
(declare-fun temp11000_97 () (_ BitVec 64))
(declare-fun temp11000_98 () (_ BitVec 64))
(declare-fun temp11000_99 () (_ BitVec 64))
(declare-fun temp11000_100 () (_ BitVec 64))
(declare-fun temp11000_101 () (_ BitVec 64))
(declare-fun temp11000_102 () (_ BitVec 64))
(declare-fun temp11000_103 () (_ BitVec 64))
(declare-fun temp11000_104 () (_ BitVec 64))
(declare-fun temp11000_105 () (_ BitVec 64))
(declare-fun temp11000_106 () (_ BitVec 64))
(declare-fun temp11000_107 () (_ BitVec 64))
(declare-fun temp11000_108 () (_ BitVec 64))
(declare-fun temp11000_109 () (_ BitVec 64))
(declare-fun temp11000_110 () (_ BitVec 64))
(declare-fun temp11000_111 () (_ BitVec 64))
(declare-fun temp11000_112 () (_ BitVec 64))
(declare-fun temp11000_113 () (_ BitVec 64))
(declare-fun temp11000_114 () (_ BitVec 64))
(declare-fun temp11000_115 () (_ BitVec 64))
(declare-fun temp11000_116 () (_ BitVec 64))
(declare-fun temp11000_117 () (_ BitVec 64))
(declare-fun temp11000_118 () (_ BitVec 64))
(declare-fun temp11000_119 () (_ BitVec 64))
(declare-fun temp11000_120 () (_ BitVec 64))
(declare-fun temp11000_121 () (_ BitVec 64))
(declare-fun temp11000_122 () (_ BitVec 64))
(declare-fun temp11000_123 () (_ BitVec 64))
(declare-fun temp11000_124 () (_ BitVec 64))
(declare-fun temp11000_125 () (_ BitVec 64))
(declare-fun temp11000_126 () (_ BitVec 64))
(declare-fun temp11000_127 () (_ BitVec 64))
(declare-fun temp11000_128 () (_ BitVec 64))
(declare-fun temp11000_129 () (_ BitVec 64))
(declare-fun temp11000_130 () (_ BitVec 64))
(declare-fun temp11000_131 () (_ BitVec 64))
(declare-fun temp11000_132 () (_ BitVec 64))
(declare-fun temp11000_133 () (_ BitVec 64))
(declare-fun temp11000_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11000_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11000_136 () (_ BitVec 64))
(declare-fun temp11000_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11000_138 () (_ BitVec 64))
(declare-fun temp11000_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11000_140 () (_ BitVec 64))
(declare-fun temp11000_141 () (_ BitVec 64))
(declare-fun temp11000_142 () (_ BitVec 64))
(declare-fun temp11000_143 () (_ BitVec 64))
(declare-fun temp11000_144 () (_ BitVec 64))
(declare-fun temp11000_145 () (_ BitVec 64))
(declare-fun temp11000_146 () (_ BitVec 64))
(declare-fun temp11000_147 () (_ BitVec 64))
(declare-fun temp11000_148 () (_ BitVec 64))
(declare-fun temp11000_149 () (_ BitVec 64))
(declare-fun temp11000_150 () (_ BitVec 64))
(declare-fun temp11000_151 () (_ BitVec 64))
(declare-fun temp11000_152 () (_ BitVec 64))
(declare-fun temp11000_153 () (_ BitVec 64))
(declare-fun temp11000_154 () (_ BitVec 64))
(declare-fun temp11000_155 () (_ BitVec 64))
(declare-fun temp11000_157 () (_ BitVec 64))
(declare-fun temp11000_158 () (_ BitVec 64))
(declare-fun temp11000_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11000_159 () (_ BitVec 64))
(declare-fun temp11000_160 () (_ BitVec 64))
(declare-fun temp11000_162 () (_ BitVec 64))
(declare-fun temp11000_163 () (_ BitVec 64))
(declare-fun temp11000_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11000_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11000_165 () (_ BitVec 64))
(declare-fun temp11000_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11000_167 () (_ BitVec 64))
(declare-fun temp11000_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11000_169 () (_ BitVec 64))
(declare-fun temp11000_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11000_171 () (_ BitVec 64))
(declare-fun temp11000_172 () (_ BitVec 64))
(declare-fun temp11000_173 () (_ BitVec 64))
(declare-fun temp11000_174 () (_ BitVec 64))
(declare-fun temp11000_175 () (_ BitVec 64))
(declare-fun temp11000_176 () (_ BitVec 64))
(declare-fun temp11000_177 () (_ BitVec 64))
(declare-fun temp11000_178 () (_ BitVec 64))
(declare-fun temp11000_179 () (_ BitVec 64))
(declare-fun temp11000_180 () (_ BitVec 64))
(declare-fun temp11000_181 () (_ BitVec 64))
(declare-fun temp11000_182 () (_ BitVec 64))
(declare-fun temp11000_183 () (_ BitVec 64))
(declare-fun temp11000_184 () (_ BitVec 64))
(declare-fun temp11000_185 () (_ BitVec 64))
(declare-fun temp11000_186 () (_ BitVec 64))
(declare-fun temp11000_187 () (_ BitVec 64))
(declare-fun temp11000_188 () (_ BitVec 64))
(declare-fun temp11000_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11000_190 () (_ BitVec 64))
(declare-fun temp11000_192 () (_ BitVec 64))
(declare-fun temp11000_193 () (_ BitVec 64))
(declare-fun temp11000_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11000_194 () (_ BitVec 64))
(declare-fun temp11000_195 () (_ BitVec 64))
(declare-fun temp11000_197 () (_ BitVec 64))
(declare-fun temp11000_198 () (_ BitVec 64))
(declare-fun temp11000_196 () (_ BitVec 64))
(declare-fun temp11000_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11000_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11000_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11000_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11000_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11000_204 () (_ BitVec 64))
(declare-fun temp11000_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11000_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11000_207 () (_ BitVec 64))
(declare-fun temp11000_208 () (_ BitVec 64))
(declare-fun temp11000_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11000_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11000_211 () (_ BitVec 64))
(declare-fun temp11000_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11000_213 () (_ BitVec 64))
(declare-fun temp11000_214 () (_ BitVec 64))
(declare-fun temp11000_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11000_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11000_217 () (_ BitVec 64))
(declare-fun temp11000_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11000_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp11000_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun temp11000_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp11000_222 () (_ BitVec 64))
(declare-fun temp11000_223 () (_ BitVec 64))
(declare-fun var5191299 () (_ BitVec 64))
(declare-fun var5191301 () (_ BitVec 64))
(declare-fun var5256844 () (_ BitVec 64))
(declare-fun var5256845 () (_ BitVec 64))
(declare-fun temp11000_224 () (_ BitVec 64))
(assert (= temp11000_1 #x0000000000000001))
(assert (= var77203 temp11000_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11000_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11000_2)))
(assert (= temp11000_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11000_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11000_4 #x0000000000000000))
(assert (= var210941 temp11000_4))
(assert (= temp11000_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11000_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11000_6 #x0000000000000000))
(assert (= var210986 temp11000_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11000_7 #x0000000000000000))
(assert (= temp11000_8 temp11000_7))
(assert (= temp11000_9 (select ARGNAME_padding_NAMEEND_VAL temp11000_8)))
(assert (= temp11000_10 #x0000000000000001))
(assert (= temp11000_11 temp11000_10))
(assert (= temp11000_12 (select ARGNAME_padding_NAMEEND_VAL temp11000_11)))
(assert (= temp11000_13 #x0000000000000002))
(assert (= temp11000_14 temp11000_13))
(assert (= temp11000_15 (select ARGNAME_padding_NAMEEND_VAL temp11000_14)))
(assert (= temp11000_16 #x0000000000000003))
(assert (= temp11000_17 temp11000_16))
(assert (= temp11000_18 (select ARGNAME_padding_NAMEEND_VAL temp11000_17)))
(assert (= temp11000_19 #x0000000000000004))
(assert (= temp11000_20 temp11000_19))
(assert (= temp11000_21 (select ARGNAME_padding_NAMEEND_VAL temp11000_20)))
(assert (= temp11000_22 #x0000000000000005))
(assert (= temp11000_23 temp11000_22))
(assert (= temp11000_24 (select ARGNAME_padding_NAMEEND_VAL temp11000_23)))
(assert (= temp11000_25 #x0000000000000000))
(assert (= temp11000_26 #x0000000000000000))
(assert (= temp11000_27 temp11000_26))
(assert (= temp11000_28 (select ARGNAME_padding_NAMEEND_VAL temp11000_27)))
(assert (= temp11000_29 #x0000000000000000))
(assert (= temp11000_30 #x0000000000000001))
(assert (= temp11000_31 temp11000_30))
(assert (= temp11000_32 (select ARGNAME_padding_NAMEEND_VAL temp11000_31)))
(assert (= temp11000_33 #x0000000000000000))
(assert (= temp11000_34 #x0000000000000002))
(assert (= temp11000_35 temp11000_34))
(assert (= temp11000_36 (select ARGNAME_padding_NAMEEND_VAL temp11000_35)))
(assert (= temp11000_37 #x0000000000000000))
(assert (= temp11000_38 #x0000000000000003))
(assert (= temp11000_39 temp11000_38))
(assert (= temp11000_40 (select ARGNAME_padding_NAMEEND_VAL temp11000_39)))
(assert (= temp11000_41 #x0000000000000000))
(assert (= temp11000_42 #x0000000000000004))
(assert (= temp11000_43 temp11000_42))
(assert (= temp11000_44 (select ARGNAME_padding_NAMEEND_VAL temp11000_43)))
(assert (= temp11000_45 #x0000000000000000))
(assert (= temp11000_46 #x0000000000000005))
(assert (= temp11000_47 temp11000_46))
(assert (= temp11000_48 (select ARGNAME_padding_NAMEEND_VAL temp11000_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11000_28 temp11000_25)
             (bvslt temp11000_32 temp11000_29)
             (bvslt temp11000_36 temp11000_33)
             (bvslt temp11000_40 temp11000_37)
             (bvslt temp11000_44 temp11000_41)
             (bvslt temp11000_48 temp11000_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11000_49 #x0000000000000000))
(assert (= var1191714 temp11000_49))
(assert (= temp11000_50 #x0000000000000000))
(assert (= temp11000_51 temp11000_50))
(assert (= temp11000_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11000_51)))
(assert (= temp11000_53 #x0000000000000001))
(assert (= temp11000_54 temp11000_53))
(assert (= temp11000_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11000_54)))
(assert (= temp11000_56 #x0000000000000002))
(assert (= temp11000_57 temp11000_56))
(assert (= temp11000_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11000_57)))
(assert (= temp11000_59 #x0000000000000003))
(assert (= temp11000_60 temp11000_59))
(assert (= temp11000_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11000_60)))
(assert (= temp11000_62 #x0000000000000004))
(assert (= temp11000_63 temp11000_62))
(assert (= temp11000_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11000_63)))
(assert (= temp11000_65 #x0000000000000005))
(assert (= temp11000_66 temp11000_65))
(assert (= temp11000_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11000_66)))
(assert (= temp11000_68 #x0000000000000000))
(assert (= temp11000_69 #x0000000000000000))
(assert (= temp11000_70 temp11000_69))
(assert (= temp11000_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11000_70)))
(assert (= temp11000_72 #x0000000000000000))
(assert (= temp11000_73 #x0000000000000001))
(assert (= temp11000_74 temp11000_73))
(assert (= temp11000_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11000_74)))
(assert (= temp11000_76 #x0000000000000000))
(assert (= temp11000_77 #x0000000000000002))
(assert (= temp11000_78 temp11000_77))
(assert (= temp11000_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11000_78)))
(assert (= temp11000_80 #x0000000000000000))
(assert (= temp11000_81 #x0000000000000003))
(assert (= temp11000_82 temp11000_81))
(assert (= temp11000_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11000_82)))
(assert (= temp11000_84 #x0000000000000000))
(assert (= temp11000_85 #x0000000000000004))
(assert (= temp11000_86 temp11000_85))
(assert (= temp11000_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11000_86)))
(assert (= temp11000_88 #x0000000000000000))
(assert (= temp11000_89 #x0000000000000005))
(assert (= temp11000_90 temp11000_89))
(assert (= temp11000_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11000_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11000_71 temp11000_68)
             (bvslt temp11000_75 temp11000_72)
             (bvslt temp11000_79 temp11000_76)
             (bvslt temp11000_83 temp11000_80)
             (bvslt temp11000_87 temp11000_84)
             (bvslt temp11000_91 temp11000_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11000_92 #x0000000000000000))
(assert (= var1191725 temp11000_92))
(assert (= temp11000_93 #x0000000000000000))
(assert (= temp11000_94 temp11000_93))
(assert (= temp11000_95 (select ARGNAME_stride_NAMEEND_VAL temp11000_94)))
(assert (= temp11000_96 #x0000000000000001))
(assert (= temp11000_97 temp11000_96))
(assert (= temp11000_98 (select ARGNAME_stride_NAMEEND_VAL temp11000_97)))
(assert (= temp11000_99 #x0000000000000002))
(assert (= temp11000_100 temp11000_99))
(assert (= temp11000_101 (select ARGNAME_stride_NAMEEND_VAL temp11000_100)))
(assert (= temp11000_102 #x0000000000000003))
(assert (= temp11000_103 temp11000_102))
(assert (= temp11000_104 (select ARGNAME_stride_NAMEEND_VAL temp11000_103)))
(assert (= temp11000_105 #x0000000000000004))
(assert (= temp11000_106 temp11000_105))
(assert (= temp11000_107 (select ARGNAME_stride_NAMEEND_VAL temp11000_106)))
(assert (= temp11000_108 #x0000000000000005))
(assert (= temp11000_109 temp11000_108))
(assert (= temp11000_110 (select ARGNAME_stride_NAMEEND_VAL temp11000_109)))
(assert (= temp11000_111 #x0000000000000000))
(assert (= temp11000_112 #x0000000000000000))
(assert (= temp11000_113 temp11000_112))
(assert (= temp11000_114 (select ARGNAME_stride_NAMEEND_VAL temp11000_113)))
(assert (= temp11000_115 #x0000000000000000))
(assert (= temp11000_116 #x0000000000000001))
(assert (= temp11000_117 temp11000_116))
(assert (= temp11000_118 (select ARGNAME_stride_NAMEEND_VAL temp11000_117)))
(assert (= temp11000_119 #x0000000000000000))
(assert (= temp11000_120 #x0000000000000002))
(assert (= temp11000_121 temp11000_120))
(assert (= temp11000_122 (select ARGNAME_stride_NAMEEND_VAL temp11000_121)))
(assert (= temp11000_123 #x0000000000000000))
(assert (= temp11000_124 #x0000000000000003))
(assert (= temp11000_125 temp11000_124))
(assert (= temp11000_126 (select ARGNAME_stride_NAMEEND_VAL temp11000_125)))
(assert (= temp11000_127 #x0000000000000000))
(assert (= temp11000_128 #x0000000000000004))
(assert (= temp11000_129 temp11000_128))
(assert (= temp11000_130 (select ARGNAME_stride_NAMEEND_VAL temp11000_129)))
(assert (= temp11000_131 #x0000000000000000))
(assert (= temp11000_132 #x0000000000000005))
(assert (= temp11000_133 temp11000_132))
(assert (= temp11000_134 (select ARGNAME_stride_NAMEEND_VAL temp11000_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11000_114 temp11000_111)
             (bvsle temp11000_118 temp11000_115)
             (bvsle temp11000_122 temp11000_119)
             (bvsle temp11000_126 temp11000_123)
             (bvsle temp11000_130 temp11000_127)
             (bvsle temp11000_134 temp11000_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11000_135 #x0000000000000000))
(assert (= var1191735 temp11000_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11000_136 #x0000000000000001))
(assert (= var1191747 temp11000_136))
(assert (= temp11000_137 #x0000000000000000))
(assert (= var1179826 temp11000_137))
(assert (= temp11000_138 #x0000000000000000))
(assert (= temp11000_139 temp11000_138))
(assert (= temp11000_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11000_139)))
(assert (= temp11000_141 #x0000000000000001))
(assert (= temp11000_142 temp11000_141))
(assert (= temp11000_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11000_142)))
(assert (= temp11000_144 #x0000000000000002))
(assert (= temp11000_145 temp11000_144))
(assert (= temp11000_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11000_145)))
(assert (= temp11000_147 #x0000000000000003))
(assert (= temp11000_148 temp11000_147))
(assert (= temp11000_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11000_148)))
(assert (= temp11000_150 #x0000000000000004))
(assert (= temp11000_151 temp11000_150))
(assert (= temp11000_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11000_151)))
(assert (= temp11000_153 #x0000000000000005))
(assert (= temp11000_154 temp11000_153))
(assert (= temp11000_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11000_154)))
(assert (= temp11000_157 var1179826))
(assert (= temp11000_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11000_157)))
(assert (= temp11000_156 temp11000_158))
(assert (= var1191780
   (ite (bvslt temp11000_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11000_159 #x0000000000000000))
(assert (= var1191780 temp11000_159))
(assert (= temp11000_160 #x0000000000000000))
(assert (= var1179826 temp11000_160))
(assert (= temp11000_162 var1179826))
(assert (= temp11000_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11000_162)))
(assert (= temp11000_161 temp11000_163))
(assert (= var1191802 (bvsmod temp11000_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11000_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11000_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11000_165 #x0000000000000001))
(assert (= var1191803 temp11000_165))
(assert (= temp11000_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11000_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11000_167 #x0000000000000001))
(assert (= var1191823 temp11000_167))
(assert (= temp11000_168 #x0000000000000001))
(assert (= var1180714 temp11000_168))
(assert (= temp11000_169 #x0000000000000000))
(assert (= temp11000_170 temp11000_169))
(assert (= temp11000_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11000_170)))
(assert (= temp11000_172 #x0000000000000001))
(assert (= temp11000_173 temp11000_172))
(assert (= temp11000_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11000_173)))
(assert (= temp11000_175 #x0000000000000002))
(assert (= temp11000_176 temp11000_175))
(assert (= temp11000_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11000_176)))
(assert (= temp11000_178 #x0000000000000003))
(assert (= temp11000_179 temp11000_178))
(assert (= temp11000_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11000_179)))
(assert (= temp11000_181 #x0000000000000004))
(assert (= temp11000_182 temp11000_181))
(assert (= temp11000_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11000_182)))
(assert (= temp11000_184 #x0000000000000005))
(assert (= temp11000_185 temp11000_184))
(assert (= temp11000_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11000_185)))
(assert (= temp11000_187 #x0000000000000000))
(assert (= temp11000_188
   (ite (bvslt var1180714 temp11000_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11000_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11000_188)))
(assert (= var1191831 temp11000_189))
(assert (bvslt (ite (bvslt var1180714 temp11000_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11000_190 #x0000000000000001))
(assert (= var1180714 temp11000_190))
(assert (= temp11000_192 var1180714))
(assert (= temp11000_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11000_192)))
(assert (= temp11000_191 temp11000_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11000_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11000_194 #x0000000000000001))
(assert (= var1191836 temp11000_194))
(assert (= temp11000_195 #x0000000000000000))
(assert (= var1179826 temp11000_195))
(assert (= temp11000_197 var1179826))
(assert (= temp11000_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11000_197)))
(assert (= temp11000_196 temp11000_198))
(assert (= temp11000_199 #x0000000000000002))
(assert (= var1586025 temp11000_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11000_200 #x0000000000000001))
(assert (= var1191993 temp11000_200))
(assert (= temp11000_201 #x0000000000000001))
(assert (= var2700303 temp11000_201))
(assert (= temp11000_202 #x0000000000000001))
(assert (= var2962447 temp11000_202))
(assert (= temp11000_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11000_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11000_204 #x0000000000000001))
(assert (= var211058 temp11000_204))
(assert (= temp11000_205 #x0000000000000001))
(assert (= var211188 temp11000_205))
(assert (= var3879401 var211188))
(assert (= temp11000_206 #x0000000000000000))
(assert (= var3866802 temp11000_206))
(assert (= temp11000_207 #x0000000000000000))
(assert (= temp11000_208
   (ite (bvslt var3866802 temp11000_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11000_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11000_208)))
(assert (= var3879420 temp11000_209))
(assert (bvslt (ite (bvslt var3866802 temp11000_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11000_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11000_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11000_211 #x0000000000000000))
(assert (= var3879421 temp11000_211))
(assert (= temp11000_212 #x0000000000000001))
(assert (= var3867690 temp11000_212))
(assert (= temp11000_213 #x0000000000000000))
(assert (= temp11000_214
   (ite (bvslt var3867690 temp11000_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11000_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11000_214)))
(assert (= var3879423 temp11000_215))
(assert (bvslt (ite (bvslt var3867690 temp11000_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11000_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11000_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11000_217 #x0000000000000001))
(assert (= var3879424 temp11000_217))
(assert (= temp11000_218 #x0000000000000000))
(assert (= var4133117 temp11000_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11000_219 #x0000000000000002))
(assert (= var4339331 temp11000_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11000_220 #x0000000000000000))
(assert (= var4404892 temp11000_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4600208 var211201))
(assert (= var4862352 var211201))
(assert (= temp11000_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp11000_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11000_222 #x0000000000000001))
(assert (= var212414 temp11000_222))
(assert (= temp11000_223 #x0000000000000002))
(assert (= var5191299 temp11000_223))
(assert (= var5191301 (bvsub ARGNAME_weight_NAMEEND_DIM var5191299)))
(assert (= var5256844 var5191299))
(assert (= var5256845 var5191301))
(assert (= temp11000_224 #x0000000000000001))
(assert (= var211058 temp11000_224))
(model-add temp11000_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11000_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11000_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11000_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





