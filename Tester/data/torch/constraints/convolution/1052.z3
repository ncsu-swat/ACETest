(declare-fun temp10069_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10069_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10069_3 () (_ BitVec 64))
(declare-fun temp10069_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10069_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10069_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10069_7 () (_ BitVec 64))
(declare-fun temp10069_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10069_9 () (_ BitVec 64))
(declare-fun temp10069_10 () (_ BitVec 64))
(declare-fun temp10069_11 () (_ BitVec 64))
(declare-fun temp10069_12 () (_ BitVec 64))
(declare-fun temp10069_13 () (_ BitVec 64))
(declare-fun temp10069_14 () (_ BitVec 64))
(declare-fun temp10069_15 () (_ BitVec 64))
(declare-fun temp10069_16 () (_ BitVec 64))
(declare-fun temp10069_17 () (_ BitVec 64))
(declare-fun temp10069_18 () (_ BitVec 64))
(declare-fun temp10069_19 () (_ BitVec 64))
(declare-fun temp10069_20 () (_ BitVec 64))
(declare-fun temp10069_21 () (_ BitVec 64))
(declare-fun temp10069_22 () (_ BitVec 64))
(declare-fun temp10069_23 () (_ BitVec 64))
(declare-fun temp10069_24 () (_ BitVec 64))
(declare-fun temp10069_25 () (_ BitVec 64))
(declare-fun temp10069_26 () (_ BitVec 64))
(declare-fun temp10069_27 () (_ BitVec 64))
(declare-fun temp10069_28 () (_ BitVec 64))
(declare-fun temp10069_29 () (_ BitVec 64))
(declare-fun temp10069_30 () (_ BitVec 64))
(declare-fun temp10069_31 () (_ BitVec 64))
(declare-fun temp10069_32 () (_ BitVec 64))
(declare-fun temp10069_33 () (_ BitVec 64))
(declare-fun temp10069_34 () (_ BitVec 64))
(declare-fun temp10069_35 () (_ BitVec 64))
(declare-fun temp10069_36 () (_ BitVec 64))
(declare-fun temp10069_37 () (_ BitVec 64))
(declare-fun temp10069_38 () (_ BitVec 64))
(declare-fun temp10069_39 () (_ BitVec 64))
(declare-fun temp10069_40 () (_ BitVec 64))
(declare-fun temp10069_41 () (_ BitVec 64))
(declare-fun temp10069_42 () (_ BitVec 64))
(declare-fun temp10069_43 () (_ BitVec 64))
(declare-fun temp10069_44 () (_ BitVec 64))
(declare-fun temp10069_45 () (_ BitVec 64))
(declare-fun temp10069_46 () (_ BitVec 64))
(declare-fun temp10069_47 () (_ BitVec 64))
(declare-fun temp10069_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10069_49 () (_ BitVec 64))
(declare-fun temp10069_50 () (_ BitVec 64))
(declare-fun temp10069_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10069_52 () (_ BitVec 64))
(declare-fun temp10069_53 () (_ BitVec 64))
(declare-fun temp10069_54 () (_ BitVec 64))
(declare-fun temp10069_55 () (_ BitVec 64))
(declare-fun temp10069_56 () (_ BitVec 64))
(declare-fun temp10069_57 () (_ BitVec 64))
(declare-fun temp10069_58 () (_ BitVec 64))
(declare-fun temp10069_59 () (_ BitVec 64))
(declare-fun temp10069_60 () (_ BitVec 64))
(declare-fun temp10069_61 () (_ BitVec 64))
(declare-fun temp10069_62 () (_ BitVec 64))
(declare-fun temp10069_63 () (_ BitVec 64))
(declare-fun temp10069_64 () (_ BitVec 64))
(declare-fun temp10069_65 () (_ BitVec 64))
(declare-fun temp10069_66 () (_ BitVec 64))
(declare-fun temp10069_67 () (_ BitVec 64))
(declare-fun temp10069_68 () (_ BitVec 64))
(declare-fun temp10069_69 () (_ BitVec 64))
(declare-fun temp10069_70 () (_ BitVec 64))
(declare-fun temp10069_71 () (_ BitVec 64))
(declare-fun temp10069_72 () (_ BitVec 64))
(declare-fun temp10069_73 () (_ BitVec 64))
(declare-fun temp10069_74 () (_ BitVec 64))
(declare-fun temp10069_75 () (_ BitVec 64))
(declare-fun temp10069_76 () (_ BitVec 64))
(declare-fun temp10069_77 () (_ BitVec 64))
(declare-fun temp10069_78 () (_ BitVec 64))
(declare-fun temp10069_79 () (_ BitVec 64))
(declare-fun temp10069_80 () (_ BitVec 64))
(declare-fun temp10069_81 () (_ BitVec 64))
(declare-fun temp10069_82 () (_ BitVec 64))
(declare-fun temp10069_83 () (_ BitVec 64))
(declare-fun temp10069_84 () (_ BitVec 64))
(declare-fun temp10069_85 () (_ BitVec 64))
(declare-fun temp10069_86 () (_ BitVec 64))
(declare-fun temp10069_87 () (_ BitVec 64))
(declare-fun temp10069_88 () (_ BitVec 64))
(declare-fun temp10069_89 () (_ BitVec 64))
(declare-fun temp10069_90 () (_ BitVec 64))
(declare-fun temp10069_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10069_92 () (_ BitVec 64))
(declare-fun temp10069_93 () (_ BitVec 64))
(declare-fun temp10069_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10069_95 () (_ BitVec 64))
(declare-fun temp10069_96 () (_ BitVec 64))
(declare-fun temp10069_97 () (_ BitVec 64))
(declare-fun temp10069_98 () (_ BitVec 64))
(declare-fun temp10069_99 () (_ BitVec 64))
(declare-fun temp10069_100 () (_ BitVec 64))
(declare-fun temp10069_101 () (_ BitVec 64))
(declare-fun temp10069_102 () (_ BitVec 64))
(declare-fun temp10069_103 () (_ BitVec 64))
(declare-fun temp10069_104 () (_ BitVec 64))
(declare-fun temp10069_105 () (_ BitVec 64))
(declare-fun temp10069_106 () (_ BitVec 64))
(declare-fun temp10069_107 () (_ BitVec 64))
(declare-fun temp10069_108 () (_ BitVec 64))
(declare-fun temp10069_109 () (_ BitVec 64))
(declare-fun temp10069_110 () (_ BitVec 64))
(declare-fun temp10069_111 () (_ BitVec 64))
(declare-fun temp10069_112 () (_ BitVec 64))
(declare-fun temp10069_113 () (_ BitVec 64))
(declare-fun temp10069_114 () (_ BitVec 64))
(declare-fun temp10069_115 () (_ BitVec 64))
(declare-fun temp10069_116 () (_ BitVec 64))
(declare-fun temp10069_117 () (_ BitVec 64))
(declare-fun temp10069_118 () (_ BitVec 64))
(declare-fun temp10069_119 () (_ BitVec 64))
(declare-fun temp10069_120 () (_ BitVec 64))
(declare-fun temp10069_121 () (_ BitVec 64))
(declare-fun temp10069_122 () (_ BitVec 64))
(declare-fun temp10069_123 () (_ BitVec 64))
(declare-fun temp10069_124 () (_ BitVec 64))
(declare-fun temp10069_125 () (_ BitVec 64))
(declare-fun temp10069_126 () (_ BitVec 64))
(declare-fun temp10069_127 () (_ BitVec 64))
(declare-fun temp10069_128 () (_ BitVec 64))
(declare-fun temp10069_129 () (_ BitVec 64))
(declare-fun temp10069_130 () (_ BitVec 64))
(declare-fun temp10069_131 () (_ BitVec 64))
(declare-fun temp10069_132 () (_ BitVec 64))
(declare-fun temp10069_133 () (_ BitVec 64))
(declare-fun temp10069_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10069_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10069_136 () (_ BitVec 64))
(declare-fun temp10069_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10069_138 () (_ BitVec 64))
(declare-fun temp10069_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10069_140 () (_ BitVec 64))
(declare-fun temp10069_141 () (_ BitVec 64))
(declare-fun temp10069_142 () (_ BitVec 64))
(declare-fun temp10069_143 () (_ BitVec 64))
(declare-fun temp10069_144 () (_ BitVec 64))
(declare-fun temp10069_145 () (_ BitVec 64))
(declare-fun temp10069_146 () (_ BitVec 64))
(declare-fun temp10069_147 () (_ BitVec 64))
(declare-fun temp10069_148 () (_ BitVec 64))
(declare-fun temp10069_149 () (_ BitVec 64))
(declare-fun temp10069_150 () (_ BitVec 64))
(declare-fun temp10069_151 () (_ BitVec 64))
(declare-fun temp10069_152 () (_ BitVec 64))
(declare-fun temp10069_153 () (_ BitVec 64))
(declare-fun temp10069_154 () (_ BitVec 64))
(declare-fun temp10069_155 () (_ BitVec 64))
(declare-fun temp10069_157 () (_ BitVec 64))
(declare-fun temp10069_158 () (_ BitVec 64))
(declare-fun temp10069_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10069_159 () (_ BitVec 64))
(declare-fun temp10069_160 () (_ BitVec 64))
(declare-fun temp10069_162 () (_ BitVec 64))
(declare-fun temp10069_163 () (_ BitVec 64))
(declare-fun temp10069_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10069_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10069_165 () (_ BitVec 64))
(declare-fun temp10069_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10069_167 () (_ BitVec 64))
(declare-fun temp10069_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10069_169 () (_ BitVec 64))
(declare-fun temp10069_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10069_171 () (_ BitVec 64))
(declare-fun temp10069_172 () (_ BitVec 64))
(declare-fun temp10069_173 () (_ BitVec 64))
(declare-fun temp10069_174 () (_ BitVec 64))
(declare-fun temp10069_175 () (_ BitVec 64))
(declare-fun temp10069_176 () (_ BitVec 64))
(declare-fun temp10069_177 () (_ BitVec 64))
(declare-fun temp10069_178 () (_ BitVec 64))
(declare-fun temp10069_179 () (_ BitVec 64))
(declare-fun temp10069_180 () (_ BitVec 64))
(declare-fun temp10069_181 () (_ BitVec 64))
(declare-fun temp10069_182 () (_ BitVec 64))
(declare-fun temp10069_183 () (_ BitVec 64))
(declare-fun temp10069_184 () (_ BitVec 64))
(declare-fun temp10069_185 () (_ BitVec 64))
(declare-fun temp10069_186 () (_ BitVec 64))
(declare-fun temp10069_187 () (_ BitVec 64))
(declare-fun temp10069_188 () (_ BitVec 64))
(declare-fun temp10069_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10069_190 () (_ BitVec 64))
(declare-fun temp10069_192 () (_ BitVec 64))
(declare-fun temp10069_193 () (_ BitVec 64))
(declare-fun temp10069_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10069_194 () (_ BitVec 64))
(declare-fun temp10069_195 () (_ BitVec 64))
(declare-fun temp10069_197 () (_ BitVec 64))
(declare-fun temp10069_198 () (_ BitVec 64))
(declare-fun temp10069_196 () (_ BitVec 64))
(declare-fun temp10069_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10069_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10069_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10069_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10069_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10069_204 () (_ BitVec 64))
(declare-fun temp10069_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10069_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10069_207 () (_ BitVec 64))
(declare-fun temp10069_208 () (_ BitVec 64))
(declare-fun temp10069_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10069_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10069_211 () (_ BitVec 64))
(declare-fun temp10069_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10069_213 () (_ BitVec 64))
(declare-fun temp10069_214 () (_ BitVec 64))
(declare-fun temp10069_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10069_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10069_217 () (_ BitVec 64))
(declare-fun temp10069_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10069_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10069_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10069_222 () (_ BitVec 64))
(declare-fun temp10069_221 () (_ BitVec 64))
(declare-fun temp10069_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10069_224 () (_ BitVec 64))
(declare-fun temp10069_225 () (_ BitVec 64))
(declare-fun temp10069_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10069_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10069_228 () (_ BitVec 64))
(declare-fun temp10069_230 () (_ BitVec 64))
(declare-fun temp10069_229 () (_ BitVec 64))
(declare-fun temp10069_231 () (_ BitVec 64))
(assert (= temp10069_1 #x0000000000000001))
(assert (= var77203 temp10069_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10069_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10069_2)))
(assert (= temp10069_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10069_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10069_4 #x0000000000000000))
(assert (= var210941 temp10069_4))
(assert (= temp10069_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10069_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10069_6 #x0000000000000000))
(assert (= var210986 temp10069_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10069_7 #x0000000000000000))
(assert (= temp10069_8 temp10069_7))
(assert (= temp10069_9 (select ARGNAME_padding_NAMEEND_VAL temp10069_8)))
(assert (= temp10069_10 #x0000000000000001))
(assert (= temp10069_11 temp10069_10))
(assert (= temp10069_12 (select ARGNAME_padding_NAMEEND_VAL temp10069_11)))
(assert (= temp10069_13 #x0000000000000002))
(assert (= temp10069_14 temp10069_13))
(assert (= temp10069_15 (select ARGNAME_padding_NAMEEND_VAL temp10069_14)))
(assert (= temp10069_16 #x0000000000000003))
(assert (= temp10069_17 temp10069_16))
(assert (= temp10069_18 (select ARGNAME_padding_NAMEEND_VAL temp10069_17)))
(assert (= temp10069_19 #x0000000000000004))
(assert (= temp10069_20 temp10069_19))
(assert (= temp10069_21 (select ARGNAME_padding_NAMEEND_VAL temp10069_20)))
(assert (= temp10069_22 #x0000000000000005))
(assert (= temp10069_23 temp10069_22))
(assert (= temp10069_24 (select ARGNAME_padding_NAMEEND_VAL temp10069_23)))
(assert (= temp10069_25 #x0000000000000000))
(assert (= temp10069_26 #x0000000000000000))
(assert (= temp10069_27 temp10069_26))
(assert (= temp10069_28 (select ARGNAME_padding_NAMEEND_VAL temp10069_27)))
(assert (= temp10069_29 #x0000000000000000))
(assert (= temp10069_30 #x0000000000000001))
(assert (= temp10069_31 temp10069_30))
(assert (= temp10069_32 (select ARGNAME_padding_NAMEEND_VAL temp10069_31)))
(assert (= temp10069_33 #x0000000000000000))
(assert (= temp10069_34 #x0000000000000002))
(assert (= temp10069_35 temp10069_34))
(assert (= temp10069_36 (select ARGNAME_padding_NAMEEND_VAL temp10069_35)))
(assert (= temp10069_37 #x0000000000000000))
(assert (= temp10069_38 #x0000000000000003))
(assert (= temp10069_39 temp10069_38))
(assert (= temp10069_40 (select ARGNAME_padding_NAMEEND_VAL temp10069_39)))
(assert (= temp10069_41 #x0000000000000000))
(assert (= temp10069_42 #x0000000000000004))
(assert (= temp10069_43 temp10069_42))
(assert (= temp10069_44 (select ARGNAME_padding_NAMEEND_VAL temp10069_43)))
(assert (= temp10069_45 #x0000000000000000))
(assert (= temp10069_46 #x0000000000000005))
(assert (= temp10069_47 temp10069_46))
(assert (= temp10069_48 (select ARGNAME_padding_NAMEEND_VAL temp10069_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10069_28 temp10069_25)
             (bvslt temp10069_32 temp10069_29)
             (bvslt temp10069_36 temp10069_33)
             (bvslt temp10069_40 temp10069_37)
             (bvslt temp10069_44 temp10069_41)
             (bvslt temp10069_48 temp10069_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10069_49 #x0000000000000000))
(assert (= var1191714 temp10069_49))
(assert (= temp10069_50 #x0000000000000000))
(assert (= temp10069_51 temp10069_50))
(assert (= temp10069_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10069_51)))
(assert (= temp10069_53 #x0000000000000001))
(assert (= temp10069_54 temp10069_53))
(assert (= temp10069_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10069_54)))
(assert (= temp10069_56 #x0000000000000002))
(assert (= temp10069_57 temp10069_56))
(assert (= temp10069_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10069_57)))
(assert (= temp10069_59 #x0000000000000003))
(assert (= temp10069_60 temp10069_59))
(assert (= temp10069_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10069_60)))
(assert (= temp10069_62 #x0000000000000004))
(assert (= temp10069_63 temp10069_62))
(assert (= temp10069_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10069_63)))
(assert (= temp10069_65 #x0000000000000005))
(assert (= temp10069_66 temp10069_65))
(assert (= temp10069_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10069_66)))
(assert (= temp10069_68 #x0000000000000000))
(assert (= temp10069_69 #x0000000000000000))
(assert (= temp10069_70 temp10069_69))
(assert (= temp10069_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10069_70)))
(assert (= temp10069_72 #x0000000000000000))
(assert (= temp10069_73 #x0000000000000001))
(assert (= temp10069_74 temp10069_73))
(assert (= temp10069_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10069_74)))
(assert (= temp10069_76 #x0000000000000000))
(assert (= temp10069_77 #x0000000000000002))
(assert (= temp10069_78 temp10069_77))
(assert (= temp10069_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10069_78)))
(assert (= temp10069_80 #x0000000000000000))
(assert (= temp10069_81 #x0000000000000003))
(assert (= temp10069_82 temp10069_81))
(assert (= temp10069_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10069_82)))
(assert (= temp10069_84 #x0000000000000000))
(assert (= temp10069_85 #x0000000000000004))
(assert (= temp10069_86 temp10069_85))
(assert (= temp10069_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10069_86)))
(assert (= temp10069_88 #x0000000000000000))
(assert (= temp10069_89 #x0000000000000005))
(assert (= temp10069_90 temp10069_89))
(assert (= temp10069_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10069_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10069_71 temp10069_68)
             (bvslt temp10069_75 temp10069_72)
             (bvslt temp10069_79 temp10069_76)
             (bvslt temp10069_83 temp10069_80)
             (bvslt temp10069_87 temp10069_84)
             (bvslt temp10069_91 temp10069_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10069_92 #x0000000000000000))
(assert (= var1191725 temp10069_92))
(assert (= temp10069_93 #x0000000000000000))
(assert (= temp10069_94 temp10069_93))
(assert (= temp10069_95 (select ARGNAME_stride_NAMEEND_VAL temp10069_94)))
(assert (= temp10069_96 #x0000000000000001))
(assert (= temp10069_97 temp10069_96))
(assert (= temp10069_98 (select ARGNAME_stride_NAMEEND_VAL temp10069_97)))
(assert (= temp10069_99 #x0000000000000002))
(assert (= temp10069_100 temp10069_99))
(assert (= temp10069_101 (select ARGNAME_stride_NAMEEND_VAL temp10069_100)))
(assert (= temp10069_102 #x0000000000000003))
(assert (= temp10069_103 temp10069_102))
(assert (= temp10069_104 (select ARGNAME_stride_NAMEEND_VAL temp10069_103)))
(assert (= temp10069_105 #x0000000000000004))
(assert (= temp10069_106 temp10069_105))
(assert (= temp10069_107 (select ARGNAME_stride_NAMEEND_VAL temp10069_106)))
(assert (= temp10069_108 #x0000000000000005))
(assert (= temp10069_109 temp10069_108))
(assert (= temp10069_110 (select ARGNAME_stride_NAMEEND_VAL temp10069_109)))
(assert (= temp10069_111 #x0000000000000000))
(assert (= temp10069_112 #x0000000000000000))
(assert (= temp10069_113 temp10069_112))
(assert (= temp10069_114 (select ARGNAME_stride_NAMEEND_VAL temp10069_113)))
(assert (= temp10069_115 #x0000000000000000))
(assert (= temp10069_116 #x0000000000000001))
(assert (= temp10069_117 temp10069_116))
(assert (= temp10069_118 (select ARGNAME_stride_NAMEEND_VAL temp10069_117)))
(assert (= temp10069_119 #x0000000000000000))
(assert (= temp10069_120 #x0000000000000002))
(assert (= temp10069_121 temp10069_120))
(assert (= temp10069_122 (select ARGNAME_stride_NAMEEND_VAL temp10069_121)))
(assert (= temp10069_123 #x0000000000000000))
(assert (= temp10069_124 #x0000000000000003))
(assert (= temp10069_125 temp10069_124))
(assert (= temp10069_126 (select ARGNAME_stride_NAMEEND_VAL temp10069_125)))
(assert (= temp10069_127 #x0000000000000000))
(assert (= temp10069_128 #x0000000000000004))
(assert (= temp10069_129 temp10069_128))
(assert (= temp10069_130 (select ARGNAME_stride_NAMEEND_VAL temp10069_129)))
(assert (= temp10069_131 #x0000000000000000))
(assert (= temp10069_132 #x0000000000000005))
(assert (= temp10069_133 temp10069_132))
(assert (= temp10069_134 (select ARGNAME_stride_NAMEEND_VAL temp10069_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10069_114 temp10069_111)
             (bvsle temp10069_118 temp10069_115)
             (bvsle temp10069_122 temp10069_119)
             (bvsle temp10069_126 temp10069_123)
             (bvsle temp10069_130 temp10069_127)
             (bvsle temp10069_134 temp10069_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10069_135 #x0000000000000000))
(assert (= var1191735 temp10069_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10069_136 #x0000000000000001))
(assert (= var1191747 temp10069_136))
(assert (= temp10069_137 #x0000000000000000))
(assert (= var1179826 temp10069_137))
(assert (= temp10069_138 #x0000000000000000))
(assert (= temp10069_139 temp10069_138))
(assert (= temp10069_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10069_139)))
(assert (= temp10069_141 #x0000000000000001))
(assert (= temp10069_142 temp10069_141))
(assert (= temp10069_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10069_142)))
(assert (= temp10069_144 #x0000000000000002))
(assert (= temp10069_145 temp10069_144))
(assert (= temp10069_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10069_145)))
(assert (= temp10069_147 #x0000000000000003))
(assert (= temp10069_148 temp10069_147))
(assert (= temp10069_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10069_148)))
(assert (= temp10069_150 #x0000000000000004))
(assert (= temp10069_151 temp10069_150))
(assert (= temp10069_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10069_151)))
(assert (= temp10069_153 #x0000000000000005))
(assert (= temp10069_154 temp10069_153))
(assert (= temp10069_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10069_154)))
(assert (= temp10069_157 var1179826))
(assert (= temp10069_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10069_157)))
(assert (= temp10069_156 temp10069_158))
(assert (= var1191780
   (ite (bvslt temp10069_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10069_159 #x0000000000000000))
(assert (= var1191780 temp10069_159))
(assert (= temp10069_160 #x0000000000000000))
(assert (= var1179826 temp10069_160))
(assert (= temp10069_162 var1179826))
(assert (= temp10069_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10069_162)))
(assert (= temp10069_161 temp10069_163))
(assert (= var1191802 (bvsmod temp10069_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10069_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10069_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10069_165 #x0000000000000001))
(assert (= var1191803 temp10069_165))
(assert (= temp10069_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10069_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10069_167 #x0000000000000001))
(assert (= var1191823 temp10069_167))
(assert (= temp10069_168 #x0000000000000001))
(assert (= var1180714 temp10069_168))
(assert (= temp10069_169 #x0000000000000000))
(assert (= temp10069_170 temp10069_169))
(assert (= temp10069_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10069_170)))
(assert (= temp10069_172 #x0000000000000001))
(assert (= temp10069_173 temp10069_172))
(assert (= temp10069_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10069_173)))
(assert (= temp10069_175 #x0000000000000002))
(assert (= temp10069_176 temp10069_175))
(assert (= temp10069_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10069_176)))
(assert (= temp10069_178 #x0000000000000003))
(assert (= temp10069_179 temp10069_178))
(assert (= temp10069_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10069_179)))
(assert (= temp10069_181 #x0000000000000004))
(assert (= temp10069_182 temp10069_181))
(assert (= temp10069_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10069_182)))
(assert (= temp10069_184 #x0000000000000005))
(assert (= temp10069_185 temp10069_184))
(assert (= temp10069_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10069_185)))
(assert (= temp10069_187 #x0000000000000000))
(assert (= temp10069_188
   (ite (bvslt var1180714 temp10069_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10069_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10069_188)))
(assert (= var1191831 temp10069_189))
(assert (bvslt (ite (bvslt var1180714 temp10069_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10069_190 #x0000000000000001))
(assert (= var1180714 temp10069_190))
(assert (= temp10069_192 var1180714))
(assert (= temp10069_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10069_192)))
(assert (= temp10069_191 temp10069_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10069_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10069_194 #x0000000000000001))
(assert (= var1191836 temp10069_194))
(assert (= temp10069_195 #x0000000000000000))
(assert (= var1179826 temp10069_195))
(assert (= temp10069_197 var1179826))
(assert (= temp10069_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10069_197)))
(assert (= temp10069_196 temp10069_198))
(assert (= temp10069_199 #x0000000000000002))
(assert (= var1586025 temp10069_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10069_200 #x0000000000000001))
(assert (= var1191993 temp10069_200))
(assert (= temp10069_201 #x0000000000000001))
(assert (= var2700303 temp10069_201))
(assert (= temp10069_202 #x0000000000000001))
(assert (= var2962447 temp10069_202))
(assert (= temp10069_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10069_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10069_204 #x0000000000000001))
(assert (= var211058 temp10069_204))
(assert (= temp10069_205 #x0000000000000001))
(assert (= var211188 temp10069_205))
(assert (= var3879401 var211188))
(assert (= temp10069_206 #x0000000000000000))
(assert (= var3866802 temp10069_206))
(assert (= temp10069_207 #x0000000000000000))
(assert (= temp10069_208
   (ite (bvslt var3866802 temp10069_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10069_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10069_208)))
(assert (= var3879420 temp10069_209))
(assert (bvslt (ite (bvslt var3866802 temp10069_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10069_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10069_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10069_211 #x0000000000000000))
(assert (= var3879421 temp10069_211))
(assert (= temp10069_212 #x0000000000000001))
(assert (= var3867690 temp10069_212))
(assert (= temp10069_213 #x0000000000000000))
(assert (= temp10069_214
   (ite (bvslt var3867690 temp10069_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10069_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10069_214)))
(assert (= var3879423 temp10069_215))
(assert (bvslt (ite (bvslt var3867690 temp10069_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10069_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10069_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10069_217 #x0000000000000001))
(assert (= var3879424 temp10069_217))
(assert (= temp10069_218 #x0000000000000000))
(assert (= var4079423 temp10069_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10069_219 #x0000000000000002))
(assert (= var4208259 temp10069_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10069_220 #x0000000000000000))
(assert (= var4273820 temp10069_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10069_222 #xffffffffffffffff))
(assert (= temp10069_221 temp10069_222))
(assert (= temp10069_223 #x0000000000000001))
(assert (= var197674 temp10069_223))
(assert (= temp10069_224 #x0000000000000000))
(assert (= temp10069_225
   (ite (bvslt var197674 temp10069_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10069_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10069_225)))
(assert (= var211595 temp10069_226))
(assert (bvslt (ite (bvslt var197674 temp10069_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10069_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10069_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10069_228 #x0000000000000001))
(assert (= var211596 temp10069_228))
(assert (= temp10069_230 #xffffffffffffffff))
(assert (= temp10069_229 temp10069_230))
(assert (= temp10069_231 #x0000000000000001))
(assert (= var211058 temp10069_231))
(model-add temp10069_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10069_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10069_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10069_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





