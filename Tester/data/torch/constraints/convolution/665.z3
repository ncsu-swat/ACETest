(declare-fun temp886_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp886_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp886_3 () (_ BitVec 64))
(declare-fun temp886_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp886_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp886_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp886_7 () (_ BitVec 64))
(declare-fun temp886_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp886_9 () (_ BitVec 64))
(declare-fun temp886_10 () (_ BitVec 64))
(declare-fun temp886_11 () (_ BitVec 64))
(declare-fun temp886_12 () (_ BitVec 64))
(declare-fun temp886_13 () (_ BitVec 64))
(declare-fun temp886_14 () (_ BitVec 64))
(declare-fun temp886_15 () (_ BitVec 64))
(declare-fun temp886_16 () (_ BitVec 64))
(declare-fun temp886_17 () (_ BitVec 64))
(declare-fun temp886_18 () (_ BitVec 64))
(declare-fun temp886_19 () (_ BitVec 64))
(declare-fun temp886_20 () (_ BitVec 64))
(declare-fun temp886_21 () (_ BitVec 64))
(declare-fun temp886_22 () (_ BitVec 64))
(declare-fun temp886_23 () (_ BitVec 64))
(declare-fun temp886_24 () (_ BitVec 64))
(declare-fun temp886_25 () (_ BitVec 64))
(declare-fun temp886_26 () (_ BitVec 64))
(declare-fun temp886_27 () (_ BitVec 64))
(declare-fun temp886_28 () (_ BitVec 64))
(declare-fun temp886_29 () (_ BitVec 64))
(declare-fun temp886_30 () (_ BitVec 64))
(declare-fun temp886_31 () (_ BitVec 64))
(declare-fun temp886_32 () (_ BitVec 64))
(declare-fun temp886_33 () (_ BitVec 64))
(declare-fun temp886_34 () (_ BitVec 64))
(declare-fun temp886_35 () (_ BitVec 64))
(declare-fun temp886_36 () (_ BitVec 64))
(declare-fun temp886_37 () (_ BitVec 64))
(declare-fun temp886_38 () (_ BitVec 64))
(declare-fun temp886_39 () (_ BitVec 64))
(declare-fun temp886_40 () (_ BitVec 64))
(declare-fun temp886_41 () (_ BitVec 64))
(declare-fun temp886_42 () (_ BitVec 64))
(declare-fun temp886_43 () (_ BitVec 64))
(declare-fun temp886_44 () (_ BitVec 64))
(declare-fun temp886_45 () (_ BitVec 64))
(declare-fun temp886_46 () (_ BitVec 64))
(declare-fun temp886_47 () (_ BitVec 64))
(declare-fun temp886_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp886_49 () (_ BitVec 64))
(declare-fun temp886_50 () (_ BitVec 64))
(declare-fun temp886_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp886_52 () (_ BitVec 64))
(declare-fun temp886_53 () (_ BitVec 64))
(declare-fun temp886_54 () (_ BitVec 64))
(declare-fun temp886_55 () (_ BitVec 64))
(declare-fun temp886_56 () (_ BitVec 64))
(declare-fun temp886_57 () (_ BitVec 64))
(declare-fun temp886_58 () (_ BitVec 64))
(declare-fun temp886_59 () (_ BitVec 64))
(declare-fun temp886_60 () (_ BitVec 64))
(declare-fun temp886_61 () (_ BitVec 64))
(declare-fun temp886_62 () (_ BitVec 64))
(declare-fun temp886_63 () (_ BitVec 64))
(declare-fun temp886_64 () (_ BitVec 64))
(declare-fun temp886_65 () (_ BitVec 64))
(declare-fun temp886_66 () (_ BitVec 64))
(declare-fun temp886_67 () (_ BitVec 64))
(declare-fun temp886_68 () (_ BitVec 64))
(declare-fun temp886_69 () (_ BitVec 64))
(declare-fun temp886_70 () (_ BitVec 64))
(declare-fun temp886_71 () (_ BitVec 64))
(declare-fun temp886_72 () (_ BitVec 64))
(declare-fun temp886_73 () (_ BitVec 64))
(declare-fun temp886_74 () (_ BitVec 64))
(declare-fun temp886_75 () (_ BitVec 64))
(declare-fun temp886_76 () (_ BitVec 64))
(declare-fun temp886_77 () (_ BitVec 64))
(declare-fun temp886_78 () (_ BitVec 64))
(declare-fun temp886_79 () (_ BitVec 64))
(declare-fun temp886_80 () (_ BitVec 64))
(declare-fun temp886_81 () (_ BitVec 64))
(declare-fun temp886_82 () (_ BitVec 64))
(declare-fun temp886_83 () (_ BitVec 64))
(declare-fun temp886_84 () (_ BitVec 64))
(declare-fun temp886_85 () (_ BitVec 64))
(declare-fun temp886_86 () (_ BitVec 64))
(declare-fun temp886_87 () (_ BitVec 64))
(declare-fun temp886_88 () (_ BitVec 64))
(declare-fun temp886_89 () (_ BitVec 64))
(declare-fun temp886_90 () (_ BitVec 64))
(declare-fun temp886_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp886_92 () (_ BitVec 64))
(declare-fun temp886_93 () (_ BitVec 64))
(declare-fun temp886_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp886_95 () (_ BitVec 64))
(declare-fun temp886_96 () (_ BitVec 64))
(declare-fun temp886_97 () (_ BitVec 64))
(declare-fun temp886_98 () (_ BitVec 64))
(declare-fun temp886_99 () (_ BitVec 64))
(declare-fun temp886_100 () (_ BitVec 64))
(declare-fun temp886_101 () (_ BitVec 64))
(declare-fun temp886_102 () (_ BitVec 64))
(declare-fun temp886_103 () (_ BitVec 64))
(declare-fun temp886_104 () (_ BitVec 64))
(declare-fun temp886_105 () (_ BitVec 64))
(declare-fun temp886_106 () (_ BitVec 64))
(declare-fun temp886_107 () (_ BitVec 64))
(declare-fun temp886_108 () (_ BitVec 64))
(declare-fun temp886_109 () (_ BitVec 64))
(declare-fun temp886_110 () (_ BitVec 64))
(declare-fun temp886_111 () (_ BitVec 64))
(declare-fun temp886_112 () (_ BitVec 64))
(declare-fun temp886_113 () (_ BitVec 64))
(declare-fun temp886_114 () (_ BitVec 64))
(declare-fun temp886_115 () (_ BitVec 64))
(declare-fun temp886_116 () (_ BitVec 64))
(declare-fun temp886_117 () (_ BitVec 64))
(declare-fun temp886_118 () (_ BitVec 64))
(declare-fun temp886_119 () (_ BitVec 64))
(declare-fun temp886_120 () (_ BitVec 64))
(declare-fun temp886_121 () (_ BitVec 64))
(declare-fun temp886_122 () (_ BitVec 64))
(declare-fun temp886_123 () (_ BitVec 64))
(declare-fun temp886_124 () (_ BitVec 64))
(declare-fun temp886_125 () (_ BitVec 64))
(declare-fun temp886_126 () (_ BitVec 64))
(declare-fun temp886_127 () (_ BitVec 64))
(declare-fun temp886_128 () (_ BitVec 64))
(declare-fun temp886_129 () (_ BitVec 64))
(declare-fun temp886_130 () (_ BitVec 64))
(declare-fun temp886_131 () (_ BitVec 64))
(declare-fun temp886_132 () (_ BitVec 64))
(declare-fun temp886_133 () (_ BitVec 64))
(declare-fun temp886_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp886_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp886_136 () (_ BitVec 64))
(declare-fun temp886_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp886_138 () (_ BitVec 64))
(declare-fun temp886_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp886_140 () (_ BitVec 64))
(declare-fun temp886_141 () (_ BitVec 64))
(declare-fun temp886_142 () (_ BitVec 64))
(declare-fun temp886_143 () (_ BitVec 64))
(declare-fun temp886_144 () (_ BitVec 64))
(declare-fun temp886_145 () (_ BitVec 64))
(declare-fun temp886_146 () (_ BitVec 64))
(declare-fun temp886_147 () (_ BitVec 64))
(declare-fun temp886_148 () (_ BitVec 64))
(declare-fun temp886_149 () (_ BitVec 64))
(declare-fun temp886_150 () (_ BitVec 64))
(declare-fun temp886_151 () (_ BitVec 64))
(declare-fun temp886_152 () (_ BitVec 64))
(declare-fun temp886_153 () (_ BitVec 64))
(declare-fun temp886_154 () (_ BitVec 64))
(declare-fun temp886_155 () (_ BitVec 64))
(declare-fun temp886_157 () (_ BitVec 64))
(declare-fun temp886_158 () (_ BitVec 64))
(declare-fun temp886_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp886_159 () (_ BitVec 64))
(declare-fun temp886_160 () (_ BitVec 64))
(declare-fun temp886_162 () (_ BitVec 64))
(declare-fun temp886_163 () (_ BitVec 64))
(declare-fun temp886_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp886_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp886_165 () (_ BitVec 64))
(declare-fun temp886_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp886_167 () (_ BitVec 64))
(declare-fun temp886_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp886_169 () (_ BitVec 64))
(declare-fun temp886_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp886_171 () (_ BitVec 64))
(declare-fun temp886_172 () (_ BitVec 64))
(declare-fun temp886_173 () (_ BitVec 64))
(declare-fun temp886_174 () (_ BitVec 64))
(declare-fun temp886_175 () (_ BitVec 64))
(declare-fun temp886_176 () (_ BitVec 64))
(declare-fun temp886_177 () (_ BitVec 64))
(declare-fun temp886_178 () (_ BitVec 64))
(declare-fun temp886_179 () (_ BitVec 64))
(declare-fun temp886_180 () (_ BitVec 64))
(declare-fun temp886_181 () (_ BitVec 64))
(declare-fun temp886_182 () (_ BitVec 64))
(declare-fun temp886_183 () (_ BitVec 64))
(declare-fun temp886_184 () (_ BitVec 64))
(declare-fun temp886_185 () (_ BitVec 64))
(declare-fun temp886_186 () (_ BitVec 64))
(declare-fun temp886_187 () (_ BitVec 64))
(declare-fun temp886_188 () (_ BitVec 64))
(declare-fun temp886_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp886_190 () (_ BitVec 64))
(declare-fun temp886_192 () (_ BitVec 64))
(declare-fun temp886_193 () (_ BitVec 64))
(declare-fun temp886_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp886_194 () (_ BitVec 64))
(declare-fun temp886_195 () (_ BitVec 64))
(declare-fun temp886_197 () (_ BitVec 64))
(declare-fun temp886_198 () (_ BitVec 64))
(declare-fun temp886_196 () (_ BitVec 64))
(declare-fun temp886_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp886_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp886_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp886_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp886_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp886_204 () (_ BitVec 64))
(declare-fun temp886_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp886_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp886_207 () (_ BitVec 64))
(declare-fun temp886_208 () (_ BitVec 64))
(declare-fun temp886_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp886_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp886_211 () (_ BitVec 64))
(declare-fun temp886_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp886_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp886_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp886_215 () (_ BitVec 64))
(assert (= temp886_1 #x0000000000000001))
(assert (= var77203 temp886_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp886_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp886_2)))
(assert (= temp886_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp886_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_4 #x0000000000000000))
(assert (= var210941 temp886_4))
(assert (= temp886_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp886_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_6 #x0000000000000000))
(assert (= var210986 temp886_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp886_7 #x0000000000000000))
(assert (= temp886_8 temp886_7))
(assert (= temp886_9 (select ARGNAME_padding_NAMEEND_VAL temp886_8)))
(assert (= temp886_10 #x0000000000000001))
(assert (= temp886_11 temp886_10))
(assert (= temp886_12 (select ARGNAME_padding_NAMEEND_VAL temp886_11)))
(assert (= temp886_13 #x0000000000000002))
(assert (= temp886_14 temp886_13))
(assert (= temp886_15 (select ARGNAME_padding_NAMEEND_VAL temp886_14)))
(assert (= temp886_16 #x0000000000000003))
(assert (= temp886_17 temp886_16))
(assert (= temp886_18 (select ARGNAME_padding_NAMEEND_VAL temp886_17)))
(assert (= temp886_19 #x0000000000000004))
(assert (= temp886_20 temp886_19))
(assert (= temp886_21 (select ARGNAME_padding_NAMEEND_VAL temp886_20)))
(assert (= temp886_22 #x0000000000000005))
(assert (= temp886_23 temp886_22))
(assert (= temp886_24 (select ARGNAME_padding_NAMEEND_VAL temp886_23)))
(assert (= temp886_25 #x0000000000000000))
(assert (= temp886_26 #x0000000000000000))
(assert (= temp886_27 temp886_26))
(assert (= temp886_28 (select ARGNAME_padding_NAMEEND_VAL temp886_27)))
(assert (= temp886_29 #x0000000000000000))
(assert (= temp886_30 #x0000000000000001))
(assert (= temp886_31 temp886_30))
(assert (= temp886_32 (select ARGNAME_padding_NAMEEND_VAL temp886_31)))
(assert (= temp886_33 #x0000000000000000))
(assert (= temp886_34 #x0000000000000002))
(assert (= temp886_35 temp886_34))
(assert (= temp886_36 (select ARGNAME_padding_NAMEEND_VAL temp886_35)))
(assert (= temp886_37 #x0000000000000000))
(assert (= temp886_38 #x0000000000000003))
(assert (= temp886_39 temp886_38))
(assert (= temp886_40 (select ARGNAME_padding_NAMEEND_VAL temp886_39)))
(assert (= temp886_41 #x0000000000000000))
(assert (= temp886_42 #x0000000000000004))
(assert (= temp886_43 temp886_42))
(assert (= temp886_44 (select ARGNAME_padding_NAMEEND_VAL temp886_43)))
(assert (= temp886_45 #x0000000000000000))
(assert (= temp886_46 #x0000000000000005))
(assert (= temp886_47 temp886_46))
(assert (= temp886_48 (select ARGNAME_padding_NAMEEND_VAL temp886_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp886_28 temp886_25)
             (bvslt temp886_32 temp886_29)
             (bvslt temp886_36 temp886_33)
             (bvslt temp886_40 temp886_37)
             (bvslt temp886_44 temp886_41)
             (bvslt temp886_48 temp886_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_49 #x0000000000000000))
(assert (= var1191714 temp886_49))
(assert (= temp886_50 #x0000000000000000))
(assert (= temp886_51 temp886_50))
(assert (= temp886_52 (select ARGNAME_output_padding_NAMEEND_VAL temp886_51)))
(assert (= temp886_53 #x0000000000000001))
(assert (= temp886_54 temp886_53))
(assert (= temp886_55 (select ARGNAME_output_padding_NAMEEND_VAL temp886_54)))
(assert (= temp886_56 #x0000000000000002))
(assert (= temp886_57 temp886_56))
(assert (= temp886_58 (select ARGNAME_output_padding_NAMEEND_VAL temp886_57)))
(assert (= temp886_59 #x0000000000000003))
(assert (= temp886_60 temp886_59))
(assert (= temp886_61 (select ARGNAME_output_padding_NAMEEND_VAL temp886_60)))
(assert (= temp886_62 #x0000000000000004))
(assert (= temp886_63 temp886_62))
(assert (= temp886_64 (select ARGNAME_output_padding_NAMEEND_VAL temp886_63)))
(assert (= temp886_65 #x0000000000000005))
(assert (= temp886_66 temp886_65))
(assert (= temp886_67 (select ARGNAME_output_padding_NAMEEND_VAL temp886_66)))
(assert (= temp886_68 #x0000000000000000))
(assert (= temp886_69 #x0000000000000000))
(assert (= temp886_70 temp886_69))
(assert (= temp886_71 (select ARGNAME_output_padding_NAMEEND_VAL temp886_70)))
(assert (= temp886_72 #x0000000000000000))
(assert (= temp886_73 #x0000000000000001))
(assert (= temp886_74 temp886_73))
(assert (= temp886_75 (select ARGNAME_output_padding_NAMEEND_VAL temp886_74)))
(assert (= temp886_76 #x0000000000000000))
(assert (= temp886_77 #x0000000000000002))
(assert (= temp886_78 temp886_77))
(assert (= temp886_79 (select ARGNAME_output_padding_NAMEEND_VAL temp886_78)))
(assert (= temp886_80 #x0000000000000000))
(assert (= temp886_81 #x0000000000000003))
(assert (= temp886_82 temp886_81))
(assert (= temp886_83 (select ARGNAME_output_padding_NAMEEND_VAL temp886_82)))
(assert (= temp886_84 #x0000000000000000))
(assert (= temp886_85 #x0000000000000004))
(assert (= temp886_86 temp886_85))
(assert (= temp886_87 (select ARGNAME_output_padding_NAMEEND_VAL temp886_86)))
(assert (= temp886_88 #x0000000000000000))
(assert (= temp886_89 #x0000000000000005))
(assert (= temp886_90 temp886_89))
(assert (= temp886_91 (select ARGNAME_output_padding_NAMEEND_VAL temp886_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp886_71 temp886_68)
             (bvslt temp886_75 temp886_72)
             (bvslt temp886_79 temp886_76)
             (bvslt temp886_83 temp886_80)
             (bvslt temp886_87 temp886_84)
             (bvslt temp886_91 temp886_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_92 #x0000000000000000))
(assert (= var1191725 temp886_92))
(assert (= temp886_93 #x0000000000000000))
(assert (= temp886_94 temp886_93))
(assert (= temp886_95 (select ARGNAME_stride_NAMEEND_VAL temp886_94)))
(assert (= temp886_96 #x0000000000000001))
(assert (= temp886_97 temp886_96))
(assert (= temp886_98 (select ARGNAME_stride_NAMEEND_VAL temp886_97)))
(assert (= temp886_99 #x0000000000000002))
(assert (= temp886_100 temp886_99))
(assert (= temp886_101 (select ARGNAME_stride_NAMEEND_VAL temp886_100)))
(assert (= temp886_102 #x0000000000000003))
(assert (= temp886_103 temp886_102))
(assert (= temp886_104 (select ARGNAME_stride_NAMEEND_VAL temp886_103)))
(assert (= temp886_105 #x0000000000000004))
(assert (= temp886_106 temp886_105))
(assert (= temp886_107 (select ARGNAME_stride_NAMEEND_VAL temp886_106)))
(assert (= temp886_108 #x0000000000000005))
(assert (= temp886_109 temp886_108))
(assert (= temp886_110 (select ARGNAME_stride_NAMEEND_VAL temp886_109)))
(assert (= temp886_111 #x0000000000000000))
(assert (= temp886_112 #x0000000000000000))
(assert (= temp886_113 temp886_112))
(assert (= temp886_114 (select ARGNAME_stride_NAMEEND_VAL temp886_113)))
(assert (= temp886_115 #x0000000000000000))
(assert (= temp886_116 #x0000000000000001))
(assert (= temp886_117 temp886_116))
(assert (= temp886_118 (select ARGNAME_stride_NAMEEND_VAL temp886_117)))
(assert (= temp886_119 #x0000000000000000))
(assert (= temp886_120 #x0000000000000002))
(assert (= temp886_121 temp886_120))
(assert (= temp886_122 (select ARGNAME_stride_NAMEEND_VAL temp886_121)))
(assert (= temp886_123 #x0000000000000000))
(assert (= temp886_124 #x0000000000000003))
(assert (= temp886_125 temp886_124))
(assert (= temp886_126 (select ARGNAME_stride_NAMEEND_VAL temp886_125)))
(assert (= temp886_127 #x0000000000000000))
(assert (= temp886_128 #x0000000000000004))
(assert (= temp886_129 temp886_128))
(assert (= temp886_130 (select ARGNAME_stride_NAMEEND_VAL temp886_129)))
(assert (= temp886_131 #x0000000000000000))
(assert (= temp886_132 #x0000000000000005))
(assert (= temp886_133 temp886_132))
(assert (= temp886_134 (select ARGNAME_stride_NAMEEND_VAL temp886_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp886_114 temp886_111)
             (bvsle temp886_118 temp886_115)
             (bvsle temp886_122 temp886_119)
             (bvsle temp886_126 temp886_123)
             (bvsle temp886_130 temp886_127)
             (bvsle temp886_134 temp886_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_135 #x0000000000000000))
(assert (= var1191735 temp886_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_136 #x0000000000000001))
(assert (= var1191747 temp886_136))
(assert (= temp886_137 #x0000000000000000))
(assert (= var1179826 temp886_137))
(assert (= temp886_138 #x0000000000000000))
(assert (= temp886_139 temp886_138))
(assert (= temp886_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_139)))
(assert (= temp886_141 #x0000000000000001))
(assert (= temp886_142 temp886_141))
(assert (= temp886_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_142)))
(assert (= temp886_144 #x0000000000000002))
(assert (= temp886_145 temp886_144))
(assert (= temp886_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_145)))
(assert (= temp886_147 #x0000000000000003))
(assert (= temp886_148 temp886_147))
(assert (= temp886_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_148)))
(assert (= temp886_150 #x0000000000000004))
(assert (= temp886_151 temp886_150))
(assert (= temp886_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_151)))
(assert (= temp886_153 #x0000000000000005))
(assert (= temp886_154 temp886_153))
(assert (= temp886_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_154)))
(assert (= temp886_157 var1179826))
(assert (= temp886_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_157)))
(assert (= temp886_156 temp886_158))
(assert (= var1191780
   (ite (bvslt temp886_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_159 #x0000000000000000))
(assert (= var1191780 temp886_159))
(assert (= temp886_160 #x0000000000000000))
(assert (= var1179826 temp886_160))
(assert (= temp886_162 var1179826))
(assert (= temp886_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_162)))
(assert (= temp886_161 temp886_163))
(assert (= var1191802 (bvsmod temp886_161 ARGNAME_groups_NAMEEND)))
(assert (= temp886_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp886_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp886_165 #x0000000000000001))
(assert (= var1191803 temp886_165))
(assert (= temp886_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp886_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_167 #x0000000000000001))
(assert (= var1191823 temp886_167))
(assert (= temp886_168 #x0000000000000001))
(assert (= var1180714 temp886_168))
(assert (= temp886_169 #x0000000000000000))
(assert (= temp886_170 temp886_169))
(assert (= temp886_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp886_170)))
(assert (= temp886_172 #x0000000000000001))
(assert (= temp886_173 temp886_172))
(assert (= temp886_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp886_173)))
(assert (= temp886_175 #x0000000000000002))
(assert (= temp886_176 temp886_175))
(assert (= temp886_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp886_176)))
(assert (= temp886_178 #x0000000000000003))
(assert (= temp886_179 temp886_178))
(assert (= temp886_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp886_179)))
(assert (= temp886_181 #x0000000000000004))
(assert (= temp886_182 temp886_181))
(assert (= temp886_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp886_182)))
(assert (= temp886_184 #x0000000000000005))
(assert (= temp886_185 temp886_184))
(assert (= temp886_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp886_185)))
(assert (= temp886_187 #x0000000000000000))
(assert (= temp886_188
   (ite (bvslt var1180714 temp886_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp886_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp886_188)))
(assert (= var1191831 temp886_189))
(assert (bvslt (ite (bvslt var1180714 temp886_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp886_190 #x0000000000000001))
(assert (= var1180714 temp886_190))
(assert (= temp886_192 var1180714))
(assert (= temp886_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_192)))
(assert (= temp886_191 temp886_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp886_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp886_194 #x0000000000000001))
(assert (= var1191836 temp886_194))
(assert (= temp886_195 #x0000000000000000))
(assert (= var1179826 temp886_195))
(assert (= temp886_197 var1179826))
(assert (= temp886_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_197)))
(assert (= temp886_196 temp886_198))
(assert (= temp886_199 #x0000000000000002))
(assert (= var1586025 temp886_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp886_200 #x0000000000000001))
(assert (= var1191993 temp886_200))
(assert (= temp886_201 #x0000000000000001))
(assert (= var2700303 temp886_201))
(assert (= temp886_202 #x0000000000000001))
(assert (= var2962447 temp886_202))
(assert (= temp886_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp886_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_204 #x0000000000000001))
(assert (= var211058 temp886_204))
(assert (= temp886_205 #x0000000000000001))
(assert (= var211188 temp886_205))
(assert (= var3879401 var211188))
(assert (= temp886_206 #x0000000000000000))
(assert (= var3866802 temp886_206))
(assert (= temp886_207 #x0000000000000000))
(assert (= temp886_208
   (ite (bvslt var3866802 temp886_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp886_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp886_208)))
(assert (= var3879420 temp886_209))
(assert (bvslt (ite (bvslt var3866802 temp886_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp886_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp886_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp886_211 #x0000000000000001))
(assert (= var3879421 temp886_211))
(assert (= temp886_212 #x0000000000000000))
(assert (= var4079423 temp886_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp886_213 #x0000000000000002))
(assert (= var4208259 temp886_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_214 #x0000000000000000))
(assert (= var4273820 temp886_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5321104 var211201))
(assert (= var5583248 var211201))
(assert (= temp886_215 #x0000000000000001))
(assert (= var211058 temp886_215))
(model-add temp886_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp886_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp886_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp886_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






