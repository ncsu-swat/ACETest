(declare-fun temp10561_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10561_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10561_3 () (_ BitVec 64))
(declare-fun temp10561_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10561_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10561_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10561_7 () (_ BitVec 64))
(declare-fun temp10561_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10561_9 () (_ BitVec 64))
(declare-fun temp10561_10 () (_ BitVec 64))
(declare-fun temp10561_11 () (_ BitVec 64))
(declare-fun temp10561_12 () (_ BitVec 64))
(declare-fun temp10561_13 () (_ BitVec 64))
(declare-fun temp10561_14 () (_ BitVec 64))
(declare-fun temp10561_15 () (_ BitVec 64))
(declare-fun temp10561_16 () (_ BitVec 64))
(declare-fun temp10561_17 () (_ BitVec 64))
(declare-fun temp10561_18 () (_ BitVec 64))
(declare-fun temp10561_19 () (_ BitVec 64))
(declare-fun temp10561_20 () (_ BitVec 64))
(declare-fun temp10561_21 () (_ BitVec 64))
(declare-fun temp10561_22 () (_ BitVec 64))
(declare-fun temp10561_23 () (_ BitVec 64))
(declare-fun temp10561_24 () (_ BitVec 64))
(declare-fun temp10561_25 () (_ BitVec 64))
(declare-fun temp10561_26 () (_ BitVec 64))
(declare-fun temp10561_27 () (_ BitVec 64))
(declare-fun temp10561_28 () (_ BitVec 64))
(declare-fun temp10561_29 () (_ BitVec 64))
(declare-fun temp10561_30 () (_ BitVec 64))
(declare-fun temp10561_31 () (_ BitVec 64))
(declare-fun temp10561_32 () (_ BitVec 64))
(declare-fun temp10561_33 () (_ BitVec 64))
(declare-fun temp10561_34 () (_ BitVec 64))
(declare-fun temp10561_35 () (_ BitVec 64))
(declare-fun temp10561_36 () (_ BitVec 64))
(declare-fun temp10561_37 () (_ BitVec 64))
(declare-fun temp10561_38 () (_ BitVec 64))
(declare-fun temp10561_39 () (_ BitVec 64))
(declare-fun temp10561_40 () (_ BitVec 64))
(declare-fun temp10561_41 () (_ BitVec 64))
(declare-fun temp10561_42 () (_ BitVec 64))
(declare-fun temp10561_43 () (_ BitVec 64))
(declare-fun temp10561_44 () (_ BitVec 64))
(declare-fun temp10561_45 () (_ BitVec 64))
(declare-fun temp10561_46 () (_ BitVec 64))
(declare-fun temp10561_47 () (_ BitVec 64))
(declare-fun temp10561_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10561_49 () (_ BitVec 64))
(declare-fun temp10561_50 () (_ BitVec 64))
(declare-fun temp10561_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10561_52 () (_ BitVec 64))
(declare-fun temp10561_53 () (_ BitVec 64))
(declare-fun temp10561_54 () (_ BitVec 64))
(declare-fun temp10561_55 () (_ BitVec 64))
(declare-fun temp10561_56 () (_ BitVec 64))
(declare-fun temp10561_57 () (_ BitVec 64))
(declare-fun temp10561_58 () (_ BitVec 64))
(declare-fun temp10561_59 () (_ BitVec 64))
(declare-fun temp10561_60 () (_ BitVec 64))
(declare-fun temp10561_61 () (_ BitVec 64))
(declare-fun temp10561_62 () (_ BitVec 64))
(declare-fun temp10561_63 () (_ BitVec 64))
(declare-fun temp10561_64 () (_ BitVec 64))
(declare-fun temp10561_65 () (_ BitVec 64))
(declare-fun temp10561_66 () (_ BitVec 64))
(declare-fun temp10561_67 () (_ BitVec 64))
(declare-fun temp10561_68 () (_ BitVec 64))
(declare-fun temp10561_69 () (_ BitVec 64))
(declare-fun temp10561_70 () (_ BitVec 64))
(declare-fun temp10561_71 () (_ BitVec 64))
(declare-fun temp10561_72 () (_ BitVec 64))
(declare-fun temp10561_73 () (_ BitVec 64))
(declare-fun temp10561_74 () (_ BitVec 64))
(declare-fun temp10561_75 () (_ BitVec 64))
(declare-fun temp10561_76 () (_ BitVec 64))
(declare-fun temp10561_77 () (_ BitVec 64))
(declare-fun temp10561_78 () (_ BitVec 64))
(declare-fun temp10561_79 () (_ BitVec 64))
(declare-fun temp10561_80 () (_ BitVec 64))
(declare-fun temp10561_81 () (_ BitVec 64))
(declare-fun temp10561_82 () (_ BitVec 64))
(declare-fun temp10561_83 () (_ BitVec 64))
(declare-fun temp10561_84 () (_ BitVec 64))
(declare-fun temp10561_85 () (_ BitVec 64))
(declare-fun temp10561_86 () (_ BitVec 64))
(declare-fun temp10561_87 () (_ BitVec 64))
(declare-fun temp10561_88 () (_ BitVec 64))
(declare-fun temp10561_89 () (_ BitVec 64))
(declare-fun temp10561_90 () (_ BitVec 64))
(declare-fun temp10561_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10561_92 () (_ BitVec 64))
(declare-fun temp10561_93 () (_ BitVec 64))
(declare-fun temp10561_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10561_95 () (_ BitVec 64))
(declare-fun temp10561_96 () (_ BitVec 64))
(declare-fun temp10561_97 () (_ BitVec 64))
(declare-fun temp10561_98 () (_ BitVec 64))
(declare-fun temp10561_99 () (_ BitVec 64))
(declare-fun temp10561_100 () (_ BitVec 64))
(declare-fun temp10561_101 () (_ BitVec 64))
(declare-fun temp10561_102 () (_ BitVec 64))
(declare-fun temp10561_103 () (_ BitVec 64))
(declare-fun temp10561_104 () (_ BitVec 64))
(declare-fun temp10561_105 () (_ BitVec 64))
(declare-fun temp10561_106 () (_ BitVec 64))
(declare-fun temp10561_107 () (_ BitVec 64))
(declare-fun temp10561_108 () (_ BitVec 64))
(declare-fun temp10561_109 () (_ BitVec 64))
(declare-fun temp10561_110 () (_ BitVec 64))
(declare-fun temp10561_111 () (_ BitVec 64))
(declare-fun temp10561_112 () (_ BitVec 64))
(declare-fun temp10561_113 () (_ BitVec 64))
(declare-fun temp10561_114 () (_ BitVec 64))
(declare-fun temp10561_115 () (_ BitVec 64))
(declare-fun temp10561_116 () (_ BitVec 64))
(declare-fun temp10561_117 () (_ BitVec 64))
(declare-fun temp10561_118 () (_ BitVec 64))
(declare-fun temp10561_119 () (_ BitVec 64))
(declare-fun temp10561_120 () (_ BitVec 64))
(declare-fun temp10561_121 () (_ BitVec 64))
(declare-fun temp10561_122 () (_ BitVec 64))
(declare-fun temp10561_123 () (_ BitVec 64))
(declare-fun temp10561_124 () (_ BitVec 64))
(declare-fun temp10561_125 () (_ BitVec 64))
(declare-fun temp10561_126 () (_ BitVec 64))
(declare-fun temp10561_127 () (_ BitVec 64))
(declare-fun temp10561_128 () (_ BitVec 64))
(declare-fun temp10561_129 () (_ BitVec 64))
(declare-fun temp10561_130 () (_ BitVec 64))
(declare-fun temp10561_131 () (_ BitVec 64))
(declare-fun temp10561_132 () (_ BitVec 64))
(declare-fun temp10561_133 () (_ BitVec 64))
(declare-fun temp10561_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10561_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10561_136 () (_ BitVec 64))
(declare-fun temp10561_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10561_138 () (_ BitVec 64))
(declare-fun temp10561_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10561_140 () (_ BitVec 64))
(declare-fun temp10561_141 () (_ BitVec 64))
(declare-fun temp10561_142 () (_ BitVec 64))
(declare-fun temp10561_143 () (_ BitVec 64))
(declare-fun temp10561_144 () (_ BitVec 64))
(declare-fun temp10561_145 () (_ BitVec 64))
(declare-fun temp10561_146 () (_ BitVec 64))
(declare-fun temp10561_147 () (_ BitVec 64))
(declare-fun temp10561_148 () (_ BitVec 64))
(declare-fun temp10561_149 () (_ BitVec 64))
(declare-fun temp10561_150 () (_ BitVec 64))
(declare-fun temp10561_151 () (_ BitVec 64))
(declare-fun temp10561_152 () (_ BitVec 64))
(declare-fun temp10561_153 () (_ BitVec 64))
(declare-fun temp10561_154 () (_ BitVec 64))
(declare-fun temp10561_155 () (_ BitVec 64))
(declare-fun temp10561_157 () (_ BitVec 64))
(declare-fun temp10561_158 () (_ BitVec 64))
(declare-fun temp10561_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10561_159 () (_ BitVec 64))
(declare-fun temp10561_160 () (_ BitVec 64))
(declare-fun temp10561_162 () (_ BitVec 64))
(declare-fun temp10561_163 () (_ BitVec 64))
(declare-fun temp10561_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10561_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10561_165 () (_ BitVec 64))
(declare-fun temp10561_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10561_167 () (_ BitVec 64))
(declare-fun temp10561_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10561_169 () (_ BitVec 64))
(declare-fun temp10561_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10561_171 () (_ BitVec 64))
(declare-fun temp10561_172 () (_ BitVec 64))
(declare-fun temp10561_173 () (_ BitVec 64))
(declare-fun temp10561_174 () (_ BitVec 64))
(declare-fun temp10561_175 () (_ BitVec 64))
(declare-fun temp10561_176 () (_ BitVec 64))
(declare-fun temp10561_177 () (_ BitVec 64))
(declare-fun temp10561_178 () (_ BitVec 64))
(declare-fun temp10561_179 () (_ BitVec 64))
(declare-fun temp10561_180 () (_ BitVec 64))
(declare-fun temp10561_181 () (_ BitVec 64))
(declare-fun temp10561_182 () (_ BitVec 64))
(declare-fun temp10561_183 () (_ BitVec 64))
(declare-fun temp10561_184 () (_ BitVec 64))
(declare-fun temp10561_185 () (_ BitVec 64))
(declare-fun temp10561_186 () (_ BitVec 64))
(declare-fun temp10561_187 () (_ BitVec 64))
(declare-fun temp10561_188 () (_ BitVec 64))
(declare-fun temp10561_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10561_190 () (_ BitVec 64))
(declare-fun temp10561_192 () (_ BitVec 64))
(declare-fun temp10561_193 () (_ BitVec 64))
(declare-fun temp10561_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10561_194 () (_ BitVec 64))
(declare-fun temp10561_195 () (_ BitVec 64))
(declare-fun temp10561_197 () (_ BitVec 64))
(declare-fun temp10561_198 () (_ BitVec 64))
(declare-fun temp10561_196 () (_ BitVec 64))
(declare-fun temp10561_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10561_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10561_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10561_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10561_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10561_204 () (_ BitVec 64))
(declare-fun temp10561_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10561_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10561_207 () (_ BitVec 64))
(declare-fun temp10561_208 () (_ BitVec 64))
(declare-fun temp10561_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10561_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10561_211 () (_ BitVec 64))
(declare-fun temp10561_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10561_213 () (_ BitVec 64))
(declare-fun temp10561_214 () (_ BitVec 64))
(declare-fun temp10561_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10561_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10561_217 () (_ BitVec 64))
(declare-fun temp10561_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10561_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10561_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp10561_221 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5848909 () (_ BitVec 64))
(declare-fun temp10561_223 () (_ BitVec 64))
(declare-fun temp10561_222 () (_ BitVec 64))
(declare-fun temp10561_224 () (_ BitVec 64))
(declare-fun var6688234 () (_ BitVec 64))
(declare-fun temp10561_226 () (_ BitVec 64))
(declare-fun temp10561_225 () (_ BitVec 64))
(declare-fun temp10561_227 () (_ BitVec 64))
(assert (= temp10561_1 #x0000000000000001))
(assert (= var77203 temp10561_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10561_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10561_2)))
(assert (= temp10561_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10561_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10561_4 #x0000000000000000))
(assert (= var210941 temp10561_4))
(assert (= temp10561_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10561_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10561_6 #x0000000000000000))
(assert (= var210986 temp10561_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10561_7 #x0000000000000000))
(assert (= temp10561_8 temp10561_7))
(assert (= temp10561_9 (select ARGNAME_padding_NAMEEND_VAL temp10561_8)))
(assert (= temp10561_10 #x0000000000000001))
(assert (= temp10561_11 temp10561_10))
(assert (= temp10561_12 (select ARGNAME_padding_NAMEEND_VAL temp10561_11)))
(assert (= temp10561_13 #x0000000000000002))
(assert (= temp10561_14 temp10561_13))
(assert (= temp10561_15 (select ARGNAME_padding_NAMEEND_VAL temp10561_14)))
(assert (= temp10561_16 #x0000000000000003))
(assert (= temp10561_17 temp10561_16))
(assert (= temp10561_18 (select ARGNAME_padding_NAMEEND_VAL temp10561_17)))
(assert (= temp10561_19 #x0000000000000004))
(assert (= temp10561_20 temp10561_19))
(assert (= temp10561_21 (select ARGNAME_padding_NAMEEND_VAL temp10561_20)))
(assert (= temp10561_22 #x0000000000000005))
(assert (= temp10561_23 temp10561_22))
(assert (= temp10561_24 (select ARGNAME_padding_NAMEEND_VAL temp10561_23)))
(assert (= temp10561_25 #x0000000000000000))
(assert (= temp10561_26 #x0000000000000000))
(assert (= temp10561_27 temp10561_26))
(assert (= temp10561_28 (select ARGNAME_padding_NAMEEND_VAL temp10561_27)))
(assert (= temp10561_29 #x0000000000000000))
(assert (= temp10561_30 #x0000000000000001))
(assert (= temp10561_31 temp10561_30))
(assert (= temp10561_32 (select ARGNAME_padding_NAMEEND_VAL temp10561_31)))
(assert (= temp10561_33 #x0000000000000000))
(assert (= temp10561_34 #x0000000000000002))
(assert (= temp10561_35 temp10561_34))
(assert (= temp10561_36 (select ARGNAME_padding_NAMEEND_VAL temp10561_35)))
(assert (= temp10561_37 #x0000000000000000))
(assert (= temp10561_38 #x0000000000000003))
(assert (= temp10561_39 temp10561_38))
(assert (= temp10561_40 (select ARGNAME_padding_NAMEEND_VAL temp10561_39)))
(assert (= temp10561_41 #x0000000000000000))
(assert (= temp10561_42 #x0000000000000004))
(assert (= temp10561_43 temp10561_42))
(assert (= temp10561_44 (select ARGNAME_padding_NAMEEND_VAL temp10561_43)))
(assert (= temp10561_45 #x0000000000000000))
(assert (= temp10561_46 #x0000000000000005))
(assert (= temp10561_47 temp10561_46))
(assert (= temp10561_48 (select ARGNAME_padding_NAMEEND_VAL temp10561_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10561_28 temp10561_25)
             (bvslt temp10561_32 temp10561_29)
             (bvslt temp10561_36 temp10561_33)
             (bvslt temp10561_40 temp10561_37)
             (bvslt temp10561_44 temp10561_41)
             (bvslt temp10561_48 temp10561_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10561_49 #x0000000000000000))
(assert (= var1191714 temp10561_49))
(assert (= temp10561_50 #x0000000000000000))
(assert (= temp10561_51 temp10561_50))
(assert (= temp10561_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10561_51)))
(assert (= temp10561_53 #x0000000000000001))
(assert (= temp10561_54 temp10561_53))
(assert (= temp10561_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10561_54)))
(assert (= temp10561_56 #x0000000000000002))
(assert (= temp10561_57 temp10561_56))
(assert (= temp10561_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10561_57)))
(assert (= temp10561_59 #x0000000000000003))
(assert (= temp10561_60 temp10561_59))
(assert (= temp10561_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10561_60)))
(assert (= temp10561_62 #x0000000000000004))
(assert (= temp10561_63 temp10561_62))
(assert (= temp10561_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10561_63)))
(assert (= temp10561_65 #x0000000000000005))
(assert (= temp10561_66 temp10561_65))
(assert (= temp10561_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10561_66)))
(assert (= temp10561_68 #x0000000000000000))
(assert (= temp10561_69 #x0000000000000000))
(assert (= temp10561_70 temp10561_69))
(assert (= temp10561_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10561_70)))
(assert (= temp10561_72 #x0000000000000000))
(assert (= temp10561_73 #x0000000000000001))
(assert (= temp10561_74 temp10561_73))
(assert (= temp10561_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10561_74)))
(assert (= temp10561_76 #x0000000000000000))
(assert (= temp10561_77 #x0000000000000002))
(assert (= temp10561_78 temp10561_77))
(assert (= temp10561_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10561_78)))
(assert (= temp10561_80 #x0000000000000000))
(assert (= temp10561_81 #x0000000000000003))
(assert (= temp10561_82 temp10561_81))
(assert (= temp10561_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10561_82)))
(assert (= temp10561_84 #x0000000000000000))
(assert (= temp10561_85 #x0000000000000004))
(assert (= temp10561_86 temp10561_85))
(assert (= temp10561_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10561_86)))
(assert (= temp10561_88 #x0000000000000000))
(assert (= temp10561_89 #x0000000000000005))
(assert (= temp10561_90 temp10561_89))
(assert (= temp10561_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10561_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10561_71 temp10561_68)
             (bvslt temp10561_75 temp10561_72)
             (bvslt temp10561_79 temp10561_76)
             (bvslt temp10561_83 temp10561_80)
             (bvslt temp10561_87 temp10561_84)
             (bvslt temp10561_91 temp10561_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10561_92 #x0000000000000000))
(assert (= var1191725 temp10561_92))
(assert (= temp10561_93 #x0000000000000000))
(assert (= temp10561_94 temp10561_93))
(assert (= temp10561_95 (select ARGNAME_stride_NAMEEND_VAL temp10561_94)))
(assert (= temp10561_96 #x0000000000000001))
(assert (= temp10561_97 temp10561_96))
(assert (= temp10561_98 (select ARGNAME_stride_NAMEEND_VAL temp10561_97)))
(assert (= temp10561_99 #x0000000000000002))
(assert (= temp10561_100 temp10561_99))
(assert (= temp10561_101 (select ARGNAME_stride_NAMEEND_VAL temp10561_100)))
(assert (= temp10561_102 #x0000000000000003))
(assert (= temp10561_103 temp10561_102))
(assert (= temp10561_104 (select ARGNAME_stride_NAMEEND_VAL temp10561_103)))
(assert (= temp10561_105 #x0000000000000004))
(assert (= temp10561_106 temp10561_105))
(assert (= temp10561_107 (select ARGNAME_stride_NAMEEND_VAL temp10561_106)))
(assert (= temp10561_108 #x0000000000000005))
(assert (= temp10561_109 temp10561_108))
(assert (= temp10561_110 (select ARGNAME_stride_NAMEEND_VAL temp10561_109)))
(assert (= temp10561_111 #x0000000000000000))
(assert (= temp10561_112 #x0000000000000000))
(assert (= temp10561_113 temp10561_112))
(assert (= temp10561_114 (select ARGNAME_stride_NAMEEND_VAL temp10561_113)))
(assert (= temp10561_115 #x0000000000000000))
(assert (= temp10561_116 #x0000000000000001))
(assert (= temp10561_117 temp10561_116))
(assert (= temp10561_118 (select ARGNAME_stride_NAMEEND_VAL temp10561_117)))
(assert (= temp10561_119 #x0000000000000000))
(assert (= temp10561_120 #x0000000000000002))
(assert (= temp10561_121 temp10561_120))
(assert (= temp10561_122 (select ARGNAME_stride_NAMEEND_VAL temp10561_121)))
(assert (= temp10561_123 #x0000000000000000))
(assert (= temp10561_124 #x0000000000000003))
(assert (= temp10561_125 temp10561_124))
(assert (= temp10561_126 (select ARGNAME_stride_NAMEEND_VAL temp10561_125)))
(assert (= temp10561_127 #x0000000000000000))
(assert (= temp10561_128 #x0000000000000004))
(assert (= temp10561_129 temp10561_128))
(assert (= temp10561_130 (select ARGNAME_stride_NAMEEND_VAL temp10561_129)))
(assert (= temp10561_131 #x0000000000000000))
(assert (= temp10561_132 #x0000000000000005))
(assert (= temp10561_133 temp10561_132))
(assert (= temp10561_134 (select ARGNAME_stride_NAMEEND_VAL temp10561_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10561_114 temp10561_111)
             (bvsle temp10561_118 temp10561_115)
             (bvsle temp10561_122 temp10561_119)
             (bvsle temp10561_126 temp10561_123)
             (bvsle temp10561_130 temp10561_127)
             (bvsle temp10561_134 temp10561_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10561_135 #x0000000000000000))
(assert (= var1191735 temp10561_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10561_136 #x0000000000000001))
(assert (= var1191747 temp10561_136))
(assert (= temp10561_137 #x0000000000000000))
(assert (= var1179826 temp10561_137))
(assert (= temp10561_138 #x0000000000000000))
(assert (= temp10561_139 temp10561_138))
(assert (= temp10561_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10561_139)))
(assert (= temp10561_141 #x0000000000000001))
(assert (= temp10561_142 temp10561_141))
(assert (= temp10561_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10561_142)))
(assert (= temp10561_144 #x0000000000000002))
(assert (= temp10561_145 temp10561_144))
(assert (= temp10561_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10561_145)))
(assert (= temp10561_147 #x0000000000000003))
(assert (= temp10561_148 temp10561_147))
(assert (= temp10561_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10561_148)))
(assert (= temp10561_150 #x0000000000000004))
(assert (= temp10561_151 temp10561_150))
(assert (= temp10561_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10561_151)))
(assert (= temp10561_153 #x0000000000000005))
(assert (= temp10561_154 temp10561_153))
(assert (= temp10561_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10561_154)))
(assert (= temp10561_157 var1179826))
(assert (= temp10561_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10561_157)))
(assert (= temp10561_156 temp10561_158))
(assert (= var1191780
   (ite (bvslt temp10561_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10561_159 #x0000000000000000))
(assert (= var1191780 temp10561_159))
(assert (= temp10561_160 #x0000000000000000))
(assert (= var1179826 temp10561_160))
(assert (= temp10561_162 var1179826))
(assert (= temp10561_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10561_162)))
(assert (= temp10561_161 temp10561_163))
(assert (= var1191802 (bvsmod temp10561_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10561_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10561_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10561_165 #x0000000000000001))
(assert (= var1191803 temp10561_165))
(assert (= temp10561_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10561_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10561_167 #x0000000000000001))
(assert (= var1191823 temp10561_167))
(assert (= temp10561_168 #x0000000000000001))
(assert (= var1180714 temp10561_168))
(assert (= temp10561_169 #x0000000000000000))
(assert (= temp10561_170 temp10561_169))
(assert (= temp10561_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10561_170)))
(assert (= temp10561_172 #x0000000000000001))
(assert (= temp10561_173 temp10561_172))
(assert (= temp10561_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10561_173)))
(assert (= temp10561_175 #x0000000000000002))
(assert (= temp10561_176 temp10561_175))
(assert (= temp10561_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10561_176)))
(assert (= temp10561_178 #x0000000000000003))
(assert (= temp10561_179 temp10561_178))
(assert (= temp10561_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10561_179)))
(assert (= temp10561_181 #x0000000000000004))
(assert (= temp10561_182 temp10561_181))
(assert (= temp10561_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10561_182)))
(assert (= temp10561_184 #x0000000000000005))
(assert (= temp10561_185 temp10561_184))
(assert (= temp10561_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10561_185)))
(assert (= temp10561_187 #x0000000000000000))
(assert (= temp10561_188
   (ite (bvslt var1180714 temp10561_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10561_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10561_188)))
(assert (= var1191831 temp10561_189))
(assert (bvslt (ite (bvslt var1180714 temp10561_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10561_190 #x0000000000000001))
(assert (= var1180714 temp10561_190))
(assert (= temp10561_192 var1180714))
(assert (= temp10561_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10561_192)))
(assert (= temp10561_191 temp10561_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10561_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10561_194 #x0000000000000001))
(assert (= var1191836 temp10561_194))
(assert (= temp10561_195 #x0000000000000000))
(assert (= var1179826 temp10561_195))
(assert (= temp10561_197 var1179826))
(assert (= temp10561_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10561_197)))
(assert (= temp10561_196 temp10561_198))
(assert (= temp10561_199 #x0000000000000002))
(assert (= var1586025 temp10561_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10561_200 #x0000000000000001))
(assert (= var1191993 temp10561_200))
(assert (= temp10561_201 #x0000000000000001))
(assert (= var2700303 temp10561_201))
(assert (= temp10561_202 #x0000000000000001))
(assert (= var2962447 temp10561_202))
(assert (= temp10561_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10561_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10561_204 #x0000000000000001))
(assert (= var211058 temp10561_204))
(assert (= temp10561_205 #x0000000000000001))
(assert (= var211188 temp10561_205))
(assert (= var3879401 var211188))
(assert (= temp10561_206 #x0000000000000000))
(assert (= var3866802 temp10561_206))
(assert (= temp10561_207 #x0000000000000000))
(assert (= temp10561_208
   (ite (bvslt var3866802 temp10561_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10561_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10561_208)))
(assert (= var3879420 temp10561_209))
(assert (bvslt (ite (bvslt var3866802 temp10561_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10561_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10561_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10561_211 #x0000000000000000))
(assert (= var3879421 temp10561_211))
(assert (= temp10561_212 #x0000000000000001))
(assert (= var3867690 temp10561_212))
(assert (= temp10561_213 #x0000000000000000))
(assert (= temp10561_214
   (ite (bvslt var3867690 temp10561_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10561_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10561_214)))
(assert (= var3879423 temp10561_215))
(assert (bvslt (ite (bvslt var3867690 temp10561_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10561_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10561_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10561_217 #x0000000000000001))
(assert (= var3879424 temp10561_217))
(assert (= temp10561_218 #x0000000000000000))
(assert (= var4133117 temp10561_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10561_219 #x0000000000000002))
(assert (= var4339331 temp10561_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10561_220 #x0000000000000000))
(assert (= var4404892 temp10561_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4927888 var211201))
(assert (= var211388 var210913))
(assert (= temp10561_221 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp10561_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var5848909 var211389))
(assert (= temp10561_223 #x0000000000000001))
(assert (= temp10561_222 temp10561_223))
(assert (= temp10561_224 #x0000000000000001))
(assert (= var6688234 temp10561_224))
(assert (= temp10561_226 #xffffffffffffffff))
(assert (= temp10561_225 temp10561_226))
(assert (= temp10561_227 #x0000000000000001))
(assert (= var211058 temp10561_227))
(model-add temp10561_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10561_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10561_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10561_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




