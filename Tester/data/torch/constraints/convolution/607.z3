(declare-fun temp809_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp809_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp809_3 () (_ BitVec 64))
(declare-fun temp809_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp809_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp809_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp809_7 () (_ BitVec 64))
(declare-fun temp809_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp809_9 () (_ BitVec 64))
(declare-fun temp809_10 () (_ BitVec 64))
(declare-fun temp809_11 () (_ BitVec 64))
(declare-fun temp809_12 () (_ BitVec 64))
(declare-fun temp809_13 () (_ BitVec 64))
(declare-fun temp809_14 () (_ BitVec 64))
(declare-fun temp809_15 () (_ BitVec 64))
(declare-fun temp809_16 () (_ BitVec 64))
(declare-fun temp809_17 () (_ BitVec 64))
(declare-fun temp809_18 () (_ BitVec 64))
(declare-fun temp809_19 () (_ BitVec 64))
(declare-fun temp809_20 () (_ BitVec 64))
(declare-fun temp809_21 () (_ BitVec 64))
(declare-fun temp809_22 () (_ BitVec 64))
(declare-fun temp809_23 () (_ BitVec 64))
(declare-fun temp809_24 () (_ BitVec 64))
(declare-fun temp809_25 () (_ BitVec 64))
(declare-fun temp809_26 () (_ BitVec 64))
(declare-fun temp809_27 () (_ BitVec 64))
(declare-fun temp809_28 () (_ BitVec 64))
(declare-fun temp809_29 () (_ BitVec 64))
(declare-fun temp809_30 () (_ BitVec 64))
(declare-fun temp809_31 () (_ BitVec 64))
(declare-fun temp809_32 () (_ BitVec 64))
(declare-fun temp809_33 () (_ BitVec 64))
(declare-fun temp809_34 () (_ BitVec 64))
(declare-fun temp809_35 () (_ BitVec 64))
(declare-fun temp809_36 () (_ BitVec 64))
(declare-fun temp809_37 () (_ BitVec 64))
(declare-fun temp809_38 () (_ BitVec 64))
(declare-fun temp809_39 () (_ BitVec 64))
(declare-fun temp809_40 () (_ BitVec 64))
(declare-fun temp809_41 () (_ BitVec 64))
(declare-fun temp809_42 () (_ BitVec 64))
(declare-fun temp809_43 () (_ BitVec 64))
(declare-fun temp809_44 () (_ BitVec 64))
(declare-fun temp809_45 () (_ BitVec 64))
(declare-fun temp809_46 () (_ BitVec 64))
(declare-fun temp809_47 () (_ BitVec 64))
(declare-fun temp809_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp809_49 () (_ BitVec 64))
(declare-fun temp809_50 () (_ BitVec 64))
(declare-fun temp809_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp809_52 () (_ BitVec 64))
(declare-fun temp809_53 () (_ BitVec 64))
(declare-fun temp809_54 () (_ BitVec 64))
(declare-fun temp809_55 () (_ BitVec 64))
(declare-fun temp809_56 () (_ BitVec 64))
(declare-fun temp809_57 () (_ BitVec 64))
(declare-fun temp809_58 () (_ BitVec 64))
(declare-fun temp809_59 () (_ BitVec 64))
(declare-fun temp809_60 () (_ BitVec 64))
(declare-fun temp809_61 () (_ BitVec 64))
(declare-fun temp809_62 () (_ BitVec 64))
(declare-fun temp809_63 () (_ BitVec 64))
(declare-fun temp809_64 () (_ BitVec 64))
(declare-fun temp809_65 () (_ BitVec 64))
(declare-fun temp809_66 () (_ BitVec 64))
(declare-fun temp809_67 () (_ BitVec 64))
(declare-fun temp809_68 () (_ BitVec 64))
(declare-fun temp809_69 () (_ BitVec 64))
(declare-fun temp809_70 () (_ BitVec 64))
(declare-fun temp809_71 () (_ BitVec 64))
(declare-fun temp809_72 () (_ BitVec 64))
(declare-fun temp809_73 () (_ BitVec 64))
(declare-fun temp809_74 () (_ BitVec 64))
(declare-fun temp809_75 () (_ BitVec 64))
(declare-fun temp809_76 () (_ BitVec 64))
(declare-fun temp809_77 () (_ BitVec 64))
(declare-fun temp809_78 () (_ BitVec 64))
(declare-fun temp809_79 () (_ BitVec 64))
(declare-fun temp809_80 () (_ BitVec 64))
(declare-fun temp809_81 () (_ BitVec 64))
(declare-fun temp809_82 () (_ BitVec 64))
(declare-fun temp809_83 () (_ BitVec 64))
(declare-fun temp809_84 () (_ BitVec 64))
(declare-fun temp809_85 () (_ BitVec 64))
(declare-fun temp809_86 () (_ BitVec 64))
(declare-fun temp809_87 () (_ BitVec 64))
(declare-fun temp809_88 () (_ BitVec 64))
(declare-fun temp809_89 () (_ BitVec 64))
(declare-fun temp809_90 () (_ BitVec 64))
(declare-fun temp809_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp809_92 () (_ BitVec 64))
(declare-fun temp809_93 () (_ BitVec 64))
(declare-fun temp809_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp809_95 () (_ BitVec 64))
(declare-fun temp809_96 () (_ BitVec 64))
(declare-fun temp809_97 () (_ BitVec 64))
(declare-fun temp809_98 () (_ BitVec 64))
(declare-fun temp809_99 () (_ BitVec 64))
(declare-fun temp809_100 () (_ BitVec 64))
(declare-fun temp809_101 () (_ BitVec 64))
(declare-fun temp809_102 () (_ BitVec 64))
(declare-fun temp809_103 () (_ BitVec 64))
(declare-fun temp809_104 () (_ BitVec 64))
(declare-fun temp809_105 () (_ BitVec 64))
(declare-fun temp809_106 () (_ BitVec 64))
(declare-fun temp809_107 () (_ BitVec 64))
(declare-fun temp809_108 () (_ BitVec 64))
(declare-fun temp809_109 () (_ BitVec 64))
(declare-fun temp809_110 () (_ BitVec 64))
(declare-fun temp809_111 () (_ BitVec 64))
(declare-fun temp809_112 () (_ BitVec 64))
(declare-fun temp809_113 () (_ BitVec 64))
(declare-fun temp809_114 () (_ BitVec 64))
(declare-fun temp809_115 () (_ BitVec 64))
(declare-fun temp809_116 () (_ BitVec 64))
(declare-fun temp809_117 () (_ BitVec 64))
(declare-fun temp809_118 () (_ BitVec 64))
(declare-fun temp809_119 () (_ BitVec 64))
(declare-fun temp809_120 () (_ BitVec 64))
(declare-fun temp809_121 () (_ BitVec 64))
(declare-fun temp809_122 () (_ BitVec 64))
(declare-fun temp809_123 () (_ BitVec 64))
(declare-fun temp809_124 () (_ BitVec 64))
(declare-fun temp809_125 () (_ BitVec 64))
(declare-fun temp809_126 () (_ BitVec 64))
(declare-fun temp809_127 () (_ BitVec 64))
(declare-fun temp809_128 () (_ BitVec 64))
(declare-fun temp809_129 () (_ BitVec 64))
(declare-fun temp809_130 () (_ BitVec 64))
(declare-fun temp809_131 () (_ BitVec 64))
(declare-fun temp809_132 () (_ BitVec 64))
(declare-fun temp809_133 () (_ BitVec 64))
(declare-fun temp809_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp809_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp809_136 () (_ BitVec 64))
(declare-fun temp809_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp809_138 () (_ BitVec 64))
(declare-fun temp809_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp809_140 () (_ BitVec 64))
(declare-fun temp809_141 () (_ BitVec 64))
(declare-fun temp809_142 () (_ BitVec 64))
(declare-fun temp809_143 () (_ BitVec 64))
(declare-fun temp809_144 () (_ BitVec 64))
(declare-fun temp809_145 () (_ BitVec 64))
(declare-fun temp809_146 () (_ BitVec 64))
(declare-fun temp809_147 () (_ BitVec 64))
(declare-fun temp809_148 () (_ BitVec 64))
(declare-fun temp809_149 () (_ BitVec 64))
(declare-fun temp809_150 () (_ BitVec 64))
(declare-fun temp809_151 () (_ BitVec 64))
(declare-fun temp809_152 () (_ BitVec 64))
(declare-fun temp809_153 () (_ BitVec 64))
(declare-fun temp809_154 () (_ BitVec 64))
(declare-fun temp809_155 () (_ BitVec 64))
(declare-fun temp809_157 () (_ BitVec 64))
(declare-fun temp809_158 () (_ BitVec 64))
(declare-fun temp809_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp809_159 () (_ BitVec 64))
(declare-fun temp809_160 () (_ BitVec 64))
(declare-fun temp809_162 () (_ BitVec 64))
(declare-fun temp809_163 () (_ BitVec 64))
(declare-fun temp809_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp809_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp809_165 () (_ BitVec 64))
(declare-fun temp809_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp809_167 () (_ BitVec 64))
(declare-fun temp809_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp809_169 () (_ BitVec 64))
(declare-fun temp809_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp809_171 () (_ BitVec 64))
(declare-fun temp809_172 () (_ BitVec 64))
(declare-fun temp809_173 () (_ BitVec 64))
(declare-fun temp809_174 () (_ BitVec 64))
(declare-fun temp809_175 () (_ BitVec 64))
(declare-fun temp809_176 () (_ BitVec 64))
(declare-fun temp809_177 () (_ BitVec 64))
(declare-fun temp809_178 () (_ BitVec 64))
(declare-fun temp809_179 () (_ BitVec 64))
(declare-fun temp809_180 () (_ BitVec 64))
(declare-fun temp809_181 () (_ BitVec 64))
(declare-fun temp809_182 () (_ BitVec 64))
(declare-fun temp809_183 () (_ BitVec 64))
(declare-fun temp809_184 () (_ BitVec 64))
(declare-fun temp809_185 () (_ BitVec 64))
(declare-fun temp809_186 () (_ BitVec 64))
(declare-fun temp809_187 () (_ BitVec 64))
(declare-fun temp809_188 () (_ BitVec 64))
(declare-fun temp809_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp809_190 () (_ BitVec 64))
(declare-fun temp809_192 () (_ BitVec 64))
(declare-fun temp809_193 () (_ BitVec 64))
(declare-fun temp809_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp809_194 () (_ BitVec 64))
(declare-fun temp809_195 () (_ BitVec 64))
(declare-fun temp809_197 () (_ BitVec 64))
(declare-fun temp809_198 () (_ BitVec 64))
(declare-fun temp809_196 () (_ BitVec 64))
(declare-fun temp809_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp809_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp809_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp809_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp809_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp809_204 () (_ BitVec 64))
(declare-fun temp809_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp809_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp809_207 () (_ BitVec 64))
(declare-fun temp809_208 () (_ BitVec 64))
(declare-fun temp809_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp809_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp809_211 () (_ BitVec 64))
(declare-fun temp809_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp809_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp809_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211820 () (_ BitVec 64))
(declare-fun temp809_215 () (_ BitVec 64))
(declare-fun var211821 () (_ BitVec 64))
(declare-fun temp809_216 () (_ BitVec 64))
(assert (= temp809_1 #x0000000000000001))
(assert (= var77203 temp809_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp809_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp809_2)))
(assert (= temp809_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp809_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp809_4 #x0000000000000000))
(assert (= var210941 temp809_4))
(assert (= temp809_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp809_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp809_6 #x0000000000000000))
(assert (= var210986 temp809_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp809_7 #x0000000000000000))
(assert (= temp809_8 temp809_7))
(assert (= temp809_9 (select ARGNAME_padding_NAMEEND_VAL temp809_8)))
(assert (= temp809_10 #x0000000000000001))
(assert (= temp809_11 temp809_10))
(assert (= temp809_12 (select ARGNAME_padding_NAMEEND_VAL temp809_11)))
(assert (= temp809_13 #x0000000000000002))
(assert (= temp809_14 temp809_13))
(assert (= temp809_15 (select ARGNAME_padding_NAMEEND_VAL temp809_14)))
(assert (= temp809_16 #x0000000000000003))
(assert (= temp809_17 temp809_16))
(assert (= temp809_18 (select ARGNAME_padding_NAMEEND_VAL temp809_17)))
(assert (= temp809_19 #x0000000000000004))
(assert (= temp809_20 temp809_19))
(assert (= temp809_21 (select ARGNAME_padding_NAMEEND_VAL temp809_20)))
(assert (= temp809_22 #x0000000000000005))
(assert (= temp809_23 temp809_22))
(assert (= temp809_24 (select ARGNAME_padding_NAMEEND_VAL temp809_23)))
(assert (= temp809_25 #x0000000000000000))
(assert (= temp809_26 #x0000000000000000))
(assert (= temp809_27 temp809_26))
(assert (= temp809_28 (select ARGNAME_padding_NAMEEND_VAL temp809_27)))
(assert (= temp809_29 #x0000000000000000))
(assert (= temp809_30 #x0000000000000001))
(assert (= temp809_31 temp809_30))
(assert (= temp809_32 (select ARGNAME_padding_NAMEEND_VAL temp809_31)))
(assert (= temp809_33 #x0000000000000000))
(assert (= temp809_34 #x0000000000000002))
(assert (= temp809_35 temp809_34))
(assert (= temp809_36 (select ARGNAME_padding_NAMEEND_VAL temp809_35)))
(assert (= temp809_37 #x0000000000000000))
(assert (= temp809_38 #x0000000000000003))
(assert (= temp809_39 temp809_38))
(assert (= temp809_40 (select ARGNAME_padding_NAMEEND_VAL temp809_39)))
(assert (= temp809_41 #x0000000000000000))
(assert (= temp809_42 #x0000000000000004))
(assert (= temp809_43 temp809_42))
(assert (= temp809_44 (select ARGNAME_padding_NAMEEND_VAL temp809_43)))
(assert (= temp809_45 #x0000000000000000))
(assert (= temp809_46 #x0000000000000005))
(assert (= temp809_47 temp809_46))
(assert (= temp809_48 (select ARGNAME_padding_NAMEEND_VAL temp809_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp809_28 temp809_25)
             (bvslt temp809_32 temp809_29)
             (bvslt temp809_36 temp809_33)
             (bvslt temp809_40 temp809_37)
             (bvslt temp809_44 temp809_41)
             (bvslt temp809_48 temp809_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp809_49 #x0000000000000000))
(assert (= var1191714 temp809_49))
(assert (= temp809_50 #x0000000000000000))
(assert (= temp809_51 temp809_50))
(assert (= temp809_52 (select ARGNAME_output_padding_NAMEEND_VAL temp809_51)))
(assert (= temp809_53 #x0000000000000001))
(assert (= temp809_54 temp809_53))
(assert (= temp809_55 (select ARGNAME_output_padding_NAMEEND_VAL temp809_54)))
(assert (= temp809_56 #x0000000000000002))
(assert (= temp809_57 temp809_56))
(assert (= temp809_58 (select ARGNAME_output_padding_NAMEEND_VAL temp809_57)))
(assert (= temp809_59 #x0000000000000003))
(assert (= temp809_60 temp809_59))
(assert (= temp809_61 (select ARGNAME_output_padding_NAMEEND_VAL temp809_60)))
(assert (= temp809_62 #x0000000000000004))
(assert (= temp809_63 temp809_62))
(assert (= temp809_64 (select ARGNAME_output_padding_NAMEEND_VAL temp809_63)))
(assert (= temp809_65 #x0000000000000005))
(assert (= temp809_66 temp809_65))
(assert (= temp809_67 (select ARGNAME_output_padding_NAMEEND_VAL temp809_66)))
(assert (= temp809_68 #x0000000000000000))
(assert (= temp809_69 #x0000000000000000))
(assert (= temp809_70 temp809_69))
(assert (= temp809_71 (select ARGNAME_output_padding_NAMEEND_VAL temp809_70)))
(assert (= temp809_72 #x0000000000000000))
(assert (= temp809_73 #x0000000000000001))
(assert (= temp809_74 temp809_73))
(assert (= temp809_75 (select ARGNAME_output_padding_NAMEEND_VAL temp809_74)))
(assert (= temp809_76 #x0000000000000000))
(assert (= temp809_77 #x0000000000000002))
(assert (= temp809_78 temp809_77))
(assert (= temp809_79 (select ARGNAME_output_padding_NAMEEND_VAL temp809_78)))
(assert (= temp809_80 #x0000000000000000))
(assert (= temp809_81 #x0000000000000003))
(assert (= temp809_82 temp809_81))
(assert (= temp809_83 (select ARGNAME_output_padding_NAMEEND_VAL temp809_82)))
(assert (= temp809_84 #x0000000000000000))
(assert (= temp809_85 #x0000000000000004))
(assert (= temp809_86 temp809_85))
(assert (= temp809_87 (select ARGNAME_output_padding_NAMEEND_VAL temp809_86)))
(assert (= temp809_88 #x0000000000000000))
(assert (= temp809_89 #x0000000000000005))
(assert (= temp809_90 temp809_89))
(assert (= temp809_91 (select ARGNAME_output_padding_NAMEEND_VAL temp809_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp809_71 temp809_68)
             (bvslt temp809_75 temp809_72)
             (bvslt temp809_79 temp809_76)
             (bvslt temp809_83 temp809_80)
             (bvslt temp809_87 temp809_84)
             (bvslt temp809_91 temp809_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp809_92 #x0000000000000000))
(assert (= var1191725 temp809_92))
(assert (= temp809_93 #x0000000000000000))
(assert (= temp809_94 temp809_93))
(assert (= temp809_95 (select ARGNAME_stride_NAMEEND_VAL temp809_94)))
(assert (= temp809_96 #x0000000000000001))
(assert (= temp809_97 temp809_96))
(assert (= temp809_98 (select ARGNAME_stride_NAMEEND_VAL temp809_97)))
(assert (= temp809_99 #x0000000000000002))
(assert (= temp809_100 temp809_99))
(assert (= temp809_101 (select ARGNAME_stride_NAMEEND_VAL temp809_100)))
(assert (= temp809_102 #x0000000000000003))
(assert (= temp809_103 temp809_102))
(assert (= temp809_104 (select ARGNAME_stride_NAMEEND_VAL temp809_103)))
(assert (= temp809_105 #x0000000000000004))
(assert (= temp809_106 temp809_105))
(assert (= temp809_107 (select ARGNAME_stride_NAMEEND_VAL temp809_106)))
(assert (= temp809_108 #x0000000000000005))
(assert (= temp809_109 temp809_108))
(assert (= temp809_110 (select ARGNAME_stride_NAMEEND_VAL temp809_109)))
(assert (= temp809_111 #x0000000000000000))
(assert (= temp809_112 #x0000000000000000))
(assert (= temp809_113 temp809_112))
(assert (= temp809_114 (select ARGNAME_stride_NAMEEND_VAL temp809_113)))
(assert (= temp809_115 #x0000000000000000))
(assert (= temp809_116 #x0000000000000001))
(assert (= temp809_117 temp809_116))
(assert (= temp809_118 (select ARGNAME_stride_NAMEEND_VAL temp809_117)))
(assert (= temp809_119 #x0000000000000000))
(assert (= temp809_120 #x0000000000000002))
(assert (= temp809_121 temp809_120))
(assert (= temp809_122 (select ARGNAME_stride_NAMEEND_VAL temp809_121)))
(assert (= temp809_123 #x0000000000000000))
(assert (= temp809_124 #x0000000000000003))
(assert (= temp809_125 temp809_124))
(assert (= temp809_126 (select ARGNAME_stride_NAMEEND_VAL temp809_125)))
(assert (= temp809_127 #x0000000000000000))
(assert (= temp809_128 #x0000000000000004))
(assert (= temp809_129 temp809_128))
(assert (= temp809_130 (select ARGNAME_stride_NAMEEND_VAL temp809_129)))
(assert (= temp809_131 #x0000000000000000))
(assert (= temp809_132 #x0000000000000005))
(assert (= temp809_133 temp809_132))
(assert (= temp809_134 (select ARGNAME_stride_NAMEEND_VAL temp809_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp809_114 temp809_111)
             (bvsle temp809_118 temp809_115)
             (bvsle temp809_122 temp809_119)
             (bvsle temp809_126 temp809_123)
             (bvsle temp809_130 temp809_127)
             (bvsle temp809_134 temp809_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp809_135 #x0000000000000000))
(assert (= var1191735 temp809_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp809_136 #x0000000000000001))
(assert (= var1191747 temp809_136))
(assert (= temp809_137 #x0000000000000000))
(assert (= var1179826 temp809_137))
(assert (= temp809_138 #x0000000000000000))
(assert (= temp809_139 temp809_138))
(assert (= temp809_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp809_139)))
(assert (= temp809_141 #x0000000000000001))
(assert (= temp809_142 temp809_141))
(assert (= temp809_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp809_142)))
(assert (= temp809_144 #x0000000000000002))
(assert (= temp809_145 temp809_144))
(assert (= temp809_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp809_145)))
(assert (= temp809_147 #x0000000000000003))
(assert (= temp809_148 temp809_147))
(assert (= temp809_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp809_148)))
(assert (= temp809_150 #x0000000000000004))
(assert (= temp809_151 temp809_150))
(assert (= temp809_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp809_151)))
(assert (= temp809_153 #x0000000000000005))
(assert (= temp809_154 temp809_153))
(assert (= temp809_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp809_154)))
(assert (= temp809_157 var1179826))
(assert (= temp809_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp809_157)))
(assert (= temp809_156 temp809_158))
(assert (= var1191780
   (ite (bvslt temp809_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp809_159 #x0000000000000000))
(assert (= var1191780 temp809_159))
(assert (= temp809_160 #x0000000000000000))
(assert (= var1179826 temp809_160))
(assert (= temp809_162 var1179826))
(assert (= temp809_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp809_162)))
(assert (= temp809_161 temp809_163))
(assert (= var1191802 (bvsmod temp809_161 ARGNAME_groups_NAMEEND)))
(assert (= temp809_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp809_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp809_165 #x0000000000000001))
(assert (= var1191803 temp809_165))
(assert (= temp809_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp809_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp809_167 #x0000000000000001))
(assert (= var1191823 temp809_167))
(assert (= temp809_168 #x0000000000000001))
(assert (= var1180714 temp809_168))
(assert (= temp809_169 #x0000000000000000))
(assert (= temp809_170 temp809_169))
(assert (= temp809_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp809_170)))
(assert (= temp809_172 #x0000000000000001))
(assert (= temp809_173 temp809_172))
(assert (= temp809_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp809_173)))
(assert (= temp809_175 #x0000000000000002))
(assert (= temp809_176 temp809_175))
(assert (= temp809_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp809_176)))
(assert (= temp809_178 #x0000000000000003))
(assert (= temp809_179 temp809_178))
(assert (= temp809_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp809_179)))
(assert (= temp809_181 #x0000000000000004))
(assert (= temp809_182 temp809_181))
(assert (= temp809_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp809_182)))
(assert (= temp809_184 #x0000000000000005))
(assert (= temp809_185 temp809_184))
(assert (= temp809_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp809_185)))
(assert (= temp809_187 #x0000000000000000))
(assert (= temp809_188
   (ite (bvslt var1180714 temp809_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp809_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp809_188)))
(assert (= var1191831 temp809_189))
(assert (bvslt (ite (bvslt var1180714 temp809_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp809_190 #x0000000000000001))
(assert (= var1180714 temp809_190))
(assert (= temp809_192 var1180714))
(assert (= temp809_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp809_192)))
(assert (= temp809_191 temp809_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp809_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp809_194 #x0000000000000001))
(assert (= var1191836 temp809_194))
(assert (= temp809_195 #x0000000000000000))
(assert (= var1179826 temp809_195))
(assert (= temp809_197 var1179826))
(assert (= temp809_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp809_197)))
(assert (= temp809_196 temp809_198))
(assert (= temp809_199 #x0000000000000002))
(assert (= var1586025 temp809_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp809_200 #x0000000000000001))
(assert (= var1191993 temp809_200))
(assert (= temp809_201 #x0000000000000001))
(assert (= var2700303 temp809_201))
(assert (= temp809_202 #x0000000000000001))
(assert (= var2962447 temp809_202))
(assert (= temp809_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp809_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp809_204 #x0000000000000001))
(assert (= var211058 temp809_204))
(assert (= temp809_205 #x0000000000000001))
(assert (= var211188 temp809_205))
(assert (= var3879401 var211188))
(assert (= temp809_206 #x0000000000000000))
(assert (= var3866802 temp809_206))
(assert (= temp809_207 #x0000000000000000))
(assert (= temp809_208
   (ite (bvslt var3866802 temp809_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp809_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp809_208)))
(assert (= var3879420 temp809_209))
(assert (bvslt (ite (bvslt var3866802 temp809_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp809_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp809_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp809_211 #x0000000000000001))
(assert (= var3879421 temp809_211))
(assert (= temp809_212 #x0000000000000000))
(assert (= var4079423 temp809_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp809_213 #x0000000000000002))
(assert (= var4208259 temp809_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp809_214 #x0000000000000000))
(assert (= var4273820 temp809_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211820 var210913))
(assert (= temp809_215 #x0000000000000000))
(assert (= var211821
   (ite (distinct var211820 temp809_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp809_216 #x0000000000000001))
(assert (= var211058 temp809_216))
(model-add temp809_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp809_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp809_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp809_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




