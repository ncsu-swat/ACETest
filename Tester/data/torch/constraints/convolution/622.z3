(declare-fun temp829_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp829_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp829_3 () (_ BitVec 64))
(declare-fun temp829_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp829_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp829_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp829_7 () (_ BitVec 64))
(declare-fun temp829_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp829_9 () (_ BitVec 64))
(declare-fun temp829_10 () (_ BitVec 64))
(declare-fun temp829_11 () (_ BitVec 64))
(declare-fun temp829_12 () (_ BitVec 64))
(declare-fun temp829_13 () (_ BitVec 64))
(declare-fun temp829_14 () (_ BitVec 64))
(declare-fun temp829_15 () (_ BitVec 64))
(declare-fun temp829_16 () (_ BitVec 64))
(declare-fun temp829_17 () (_ BitVec 64))
(declare-fun temp829_18 () (_ BitVec 64))
(declare-fun temp829_19 () (_ BitVec 64))
(declare-fun temp829_20 () (_ BitVec 64))
(declare-fun temp829_21 () (_ BitVec 64))
(declare-fun temp829_22 () (_ BitVec 64))
(declare-fun temp829_23 () (_ BitVec 64))
(declare-fun temp829_24 () (_ BitVec 64))
(declare-fun temp829_25 () (_ BitVec 64))
(declare-fun temp829_26 () (_ BitVec 64))
(declare-fun temp829_27 () (_ BitVec 64))
(declare-fun temp829_28 () (_ BitVec 64))
(declare-fun temp829_29 () (_ BitVec 64))
(declare-fun temp829_30 () (_ BitVec 64))
(declare-fun temp829_31 () (_ BitVec 64))
(declare-fun temp829_32 () (_ BitVec 64))
(declare-fun temp829_33 () (_ BitVec 64))
(declare-fun temp829_34 () (_ BitVec 64))
(declare-fun temp829_35 () (_ BitVec 64))
(declare-fun temp829_36 () (_ BitVec 64))
(declare-fun temp829_37 () (_ BitVec 64))
(declare-fun temp829_38 () (_ BitVec 64))
(declare-fun temp829_39 () (_ BitVec 64))
(declare-fun temp829_40 () (_ BitVec 64))
(declare-fun temp829_41 () (_ BitVec 64))
(declare-fun temp829_42 () (_ BitVec 64))
(declare-fun temp829_43 () (_ BitVec 64))
(declare-fun temp829_44 () (_ BitVec 64))
(declare-fun temp829_45 () (_ BitVec 64))
(declare-fun temp829_46 () (_ BitVec 64))
(declare-fun temp829_47 () (_ BitVec 64))
(declare-fun temp829_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp829_49 () (_ BitVec 64))
(declare-fun temp829_50 () (_ BitVec 64))
(declare-fun temp829_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp829_52 () (_ BitVec 64))
(declare-fun temp829_53 () (_ BitVec 64))
(declare-fun temp829_54 () (_ BitVec 64))
(declare-fun temp829_55 () (_ BitVec 64))
(declare-fun temp829_56 () (_ BitVec 64))
(declare-fun temp829_57 () (_ BitVec 64))
(declare-fun temp829_58 () (_ BitVec 64))
(declare-fun temp829_59 () (_ BitVec 64))
(declare-fun temp829_60 () (_ BitVec 64))
(declare-fun temp829_61 () (_ BitVec 64))
(declare-fun temp829_62 () (_ BitVec 64))
(declare-fun temp829_63 () (_ BitVec 64))
(declare-fun temp829_64 () (_ BitVec 64))
(declare-fun temp829_65 () (_ BitVec 64))
(declare-fun temp829_66 () (_ BitVec 64))
(declare-fun temp829_67 () (_ BitVec 64))
(declare-fun temp829_68 () (_ BitVec 64))
(declare-fun temp829_69 () (_ BitVec 64))
(declare-fun temp829_70 () (_ BitVec 64))
(declare-fun temp829_71 () (_ BitVec 64))
(declare-fun temp829_72 () (_ BitVec 64))
(declare-fun temp829_73 () (_ BitVec 64))
(declare-fun temp829_74 () (_ BitVec 64))
(declare-fun temp829_75 () (_ BitVec 64))
(declare-fun temp829_76 () (_ BitVec 64))
(declare-fun temp829_77 () (_ BitVec 64))
(declare-fun temp829_78 () (_ BitVec 64))
(declare-fun temp829_79 () (_ BitVec 64))
(declare-fun temp829_80 () (_ BitVec 64))
(declare-fun temp829_81 () (_ BitVec 64))
(declare-fun temp829_82 () (_ BitVec 64))
(declare-fun temp829_83 () (_ BitVec 64))
(declare-fun temp829_84 () (_ BitVec 64))
(declare-fun temp829_85 () (_ BitVec 64))
(declare-fun temp829_86 () (_ BitVec 64))
(declare-fun temp829_87 () (_ BitVec 64))
(declare-fun temp829_88 () (_ BitVec 64))
(declare-fun temp829_89 () (_ BitVec 64))
(declare-fun temp829_90 () (_ BitVec 64))
(declare-fun temp829_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp829_92 () (_ BitVec 64))
(declare-fun temp829_93 () (_ BitVec 64))
(declare-fun temp829_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp829_95 () (_ BitVec 64))
(declare-fun temp829_96 () (_ BitVec 64))
(declare-fun temp829_97 () (_ BitVec 64))
(declare-fun temp829_98 () (_ BitVec 64))
(declare-fun temp829_99 () (_ BitVec 64))
(declare-fun temp829_100 () (_ BitVec 64))
(declare-fun temp829_101 () (_ BitVec 64))
(declare-fun temp829_102 () (_ BitVec 64))
(declare-fun temp829_103 () (_ BitVec 64))
(declare-fun temp829_104 () (_ BitVec 64))
(declare-fun temp829_105 () (_ BitVec 64))
(declare-fun temp829_106 () (_ BitVec 64))
(declare-fun temp829_107 () (_ BitVec 64))
(declare-fun temp829_108 () (_ BitVec 64))
(declare-fun temp829_109 () (_ BitVec 64))
(declare-fun temp829_110 () (_ BitVec 64))
(declare-fun temp829_111 () (_ BitVec 64))
(declare-fun temp829_112 () (_ BitVec 64))
(declare-fun temp829_113 () (_ BitVec 64))
(declare-fun temp829_114 () (_ BitVec 64))
(declare-fun temp829_115 () (_ BitVec 64))
(declare-fun temp829_116 () (_ BitVec 64))
(declare-fun temp829_117 () (_ BitVec 64))
(declare-fun temp829_118 () (_ BitVec 64))
(declare-fun temp829_119 () (_ BitVec 64))
(declare-fun temp829_120 () (_ BitVec 64))
(declare-fun temp829_121 () (_ BitVec 64))
(declare-fun temp829_122 () (_ BitVec 64))
(declare-fun temp829_123 () (_ BitVec 64))
(declare-fun temp829_124 () (_ BitVec 64))
(declare-fun temp829_125 () (_ BitVec 64))
(declare-fun temp829_126 () (_ BitVec 64))
(declare-fun temp829_127 () (_ BitVec 64))
(declare-fun temp829_128 () (_ BitVec 64))
(declare-fun temp829_129 () (_ BitVec 64))
(declare-fun temp829_130 () (_ BitVec 64))
(declare-fun temp829_131 () (_ BitVec 64))
(declare-fun temp829_132 () (_ BitVec 64))
(declare-fun temp829_133 () (_ BitVec 64))
(declare-fun temp829_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp829_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp829_136 () (_ BitVec 64))
(declare-fun temp829_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp829_138 () (_ BitVec 64))
(declare-fun temp829_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp829_140 () (_ BitVec 64))
(declare-fun temp829_141 () (_ BitVec 64))
(declare-fun temp829_142 () (_ BitVec 64))
(declare-fun temp829_143 () (_ BitVec 64))
(declare-fun temp829_144 () (_ BitVec 64))
(declare-fun temp829_145 () (_ BitVec 64))
(declare-fun temp829_146 () (_ BitVec 64))
(declare-fun temp829_147 () (_ BitVec 64))
(declare-fun temp829_148 () (_ BitVec 64))
(declare-fun temp829_149 () (_ BitVec 64))
(declare-fun temp829_150 () (_ BitVec 64))
(declare-fun temp829_151 () (_ BitVec 64))
(declare-fun temp829_152 () (_ BitVec 64))
(declare-fun temp829_153 () (_ BitVec 64))
(declare-fun temp829_154 () (_ BitVec 64))
(declare-fun temp829_155 () (_ BitVec 64))
(declare-fun temp829_157 () (_ BitVec 64))
(declare-fun temp829_158 () (_ BitVec 64))
(declare-fun temp829_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp829_159 () (_ BitVec 64))
(declare-fun temp829_160 () (_ BitVec 64))
(declare-fun temp829_162 () (_ BitVec 64))
(declare-fun temp829_163 () (_ BitVec 64))
(declare-fun temp829_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp829_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp829_165 () (_ BitVec 64))
(declare-fun temp829_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp829_167 () (_ BitVec 64))
(declare-fun temp829_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp829_169 () (_ BitVec 64))
(declare-fun temp829_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp829_171 () (_ BitVec 64))
(declare-fun temp829_172 () (_ BitVec 64))
(declare-fun temp829_173 () (_ BitVec 64))
(declare-fun temp829_174 () (_ BitVec 64))
(declare-fun temp829_175 () (_ BitVec 64))
(declare-fun temp829_176 () (_ BitVec 64))
(declare-fun temp829_177 () (_ BitVec 64))
(declare-fun temp829_178 () (_ BitVec 64))
(declare-fun temp829_179 () (_ BitVec 64))
(declare-fun temp829_180 () (_ BitVec 64))
(declare-fun temp829_181 () (_ BitVec 64))
(declare-fun temp829_182 () (_ BitVec 64))
(declare-fun temp829_183 () (_ BitVec 64))
(declare-fun temp829_184 () (_ BitVec 64))
(declare-fun temp829_185 () (_ BitVec 64))
(declare-fun temp829_186 () (_ BitVec 64))
(declare-fun temp829_187 () (_ BitVec 64))
(declare-fun temp829_188 () (_ BitVec 64))
(declare-fun temp829_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp829_190 () (_ BitVec 64))
(declare-fun temp829_192 () (_ BitVec 64))
(declare-fun temp829_193 () (_ BitVec 64))
(declare-fun temp829_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp829_194 () (_ BitVec 64))
(declare-fun temp829_195 () (_ BitVec 64))
(declare-fun temp829_197 () (_ BitVec 64))
(declare-fun temp829_198 () (_ BitVec 64))
(declare-fun temp829_196 () (_ BitVec 64))
(declare-fun temp829_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp829_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp829_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp829_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp829_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp829_204 () (_ BitVec 64))
(declare-fun temp829_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp829_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp829_207 () (_ BitVec 64))
(declare-fun temp829_208 () (_ BitVec 64))
(declare-fun temp829_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp829_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp829_211 () (_ BitVec 64))
(declare-fun temp829_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp829_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp829_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211962 () (_ BitVec 64))
(declare-fun temp829_215 () (_ BitVec 64))
(declare-fun var211963 () (_ BitVec 64))
(declare-fun temp829_216 () (_ BitVec 64))
(assert (= temp829_1 #x0000000000000001))
(assert (= var77203 temp829_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp829_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp829_2)))
(assert (= temp829_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp829_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp829_4 #x0000000000000000))
(assert (= var210941 temp829_4))
(assert (= temp829_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp829_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp829_6 #x0000000000000000))
(assert (= var210986 temp829_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp829_7 #x0000000000000000))
(assert (= temp829_8 temp829_7))
(assert (= temp829_9 (select ARGNAME_padding_NAMEEND_VAL temp829_8)))
(assert (= temp829_10 #x0000000000000001))
(assert (= temp829_11 temp829_10))
(assert (= temp829_12 (select ARGNAME_padding_NAMEEND_VAL temp829_11)))
(assert (= temp829_13 #x0000000000000002))
(assert (= temp829_14 temp829_13))
(assert (= temp829_15 (select ARGNAME_padding_NAMEEND_VAL temp829_14)))
(assert (= temp829_16 #x0000000000000003))
(assert (= temp829_17 temp829_16))
(assert (= temp829_18 (select ARGNAME_padding_NAMEEND_VAL temp829_17)))
(assert (= temp829_19 #x0000000000000004))
(assert (= temp829_20 temp829_19))
(assert (= temp829_21 (select ARGNAME_padding_NAMEEND_VAL temp829_20)))
(assert (= temp829_22 #x0000000000000005))
(assert (= temp829_23 temp829_22))
(assert (= temp829_24 (select ARGNAME_padding_NAMEEND_VAL temp829_23)))
(assert (= temp829_25 #x0000000000000000))
(assert (= temp829_26 #x0000000000000000))
(assert (= temp829_27 temp829_26))
(assert (= temp829_28 (select ARGNAME_padding_NAMEEND_VAL temp829_27)))
(assert (= temp829_29 #x0000000000000000))
(assert (= temp829_30 #x0000000000000001))
(assert (= temp829_31 temp829_30))
(assert (= temp829_32 (select ARGNAME_padding_NAMEEND_VAL temp829_31)))
(assert (= temp829_33 #x0000000000000000))
(assert (= temp829_34 #x0000000000000002))
(assert (= temp829_35 temp829_34))
(assert (= temp829_36 (select ARGNAME_padding_NAMEEND_VAL temp829_35)))
(assert (= temp829_37 #x0000000000000000))
(assert (= temp829_38 #x0000000000000003))
(assert (= temp829_39 temp829_38))
(assert (= temp829_40 (select ARGNAME_padding_NAMEEND_VAL temp829_39)))
(assert (= temp829_41 #x0000000000000000))
(assert (= temp829_42 #x0000000000000004))
(assert (= temp829_43 temp829_42))
(assert (= temp829_44 (select ARGNAME_padding_NAMEEND_VAL temp829_43)))
(assert (= temp829_45 #x0000000000000000))
(assert (= temp829_46 #x0000000000000005))
(assert (= temp829_47 temp829_46))
(assert (= temp829_48 (select ARGNAME_padding_NAMEEND_VAL temp829_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp829_28 temp829_25)
             (bvslt temp829_32 temp829_29)
             (bvslt temp829_36 temp829_33)
             (bvslt temp829_40 temp829_37)
             (bvslt temp829_44 temp829_41)
             (bvslt temp829_48 temp829_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp829_49 #x0000000000000000))
(assert (= var1191714 temp829_49))
(assert (= temp829_50 #x0000000000000000))
(assert (= temp829_51 temp829_50))
(assert (= temp829_52 (select ARGNAME_output_padding_NAMEEND_VAL temp829_51)))
(assert (= temp829_53 #x0000000000000001))
(assert (= temp829_54 temp829_53))
(assert (= temp829_55 (select ARGNAME_output_padding_NAMEEND_VAL temp829_54)))
(assert (= temp829_56 #x0000000000000002))
(assert (= temp829_57 temp829_56))
(assert (= temp829_58 (select ARGNAME_output_padding_NAMEEND_VAL temp829_57)))
(assert (= temp829_59 #x0000000000000003))
(assert (= temp829_60 temp829_59))
(assert (= temp829_61 (select ARGNAME_output_padding_NAMEEND_VAL temp829_60)))
(assert (= temp829_62 #x0000000000000004))
(assert (= temp829_63 temp829_62))
(assert (= temp829_64 (select ARGNAME_output_padding_NAMEEND_VAL temp829_63)))
(assert (= temp829_65 #x0000000000000005))
(assert (= temp829_66 temp829_65))
(assert (= temp829_67 (select ARGNAME_output_padding_NAMEEND_VAL temp829_66)))
(assert (= temp829_68 #x0000000000000000))
(assert (= temp829_69 #x0000000000000000))
(assert (= temp829_70 temp829_69))
(assert (= temp829_71 (select ARGNAME_output_padding_NAMEEND_VAL temp829_70)))
(assert (= temp829_72 #x0000000000000000))
(assert (= temp829_73 #x0000000000000001))
(assert (= temp829_74 temp829_73))
(assert (= temp829_75 (select ARGNAME_output_padding_NAMEEND_VAL temp829_74)))
(assert (= temp829_76 #x0000000000000000))
(assert (= temp829_77 #x0000000000000002))
(assert (= temp829_78 temp829_77))
(assert (= temp829_79 (select ARGNAME_output_padding_NAMEEND_VAL temp829_78)))
(assert (= temp829_80 #x0000000000000000))
(assert (= temp829_81 #x0000000000000003))
(assert (= temp829_82 temp829_81))
(assert (= temp829_83 (select ARGNAME_output_padding_NAMEEND_VAL temp829_82)))
(assert (= temp829_84 #x0000000000000000))
(assert (= temp829_85 #x0000000000000004))
(assert (= temp829_86 temp829_85))
(assert (= temp829_87 (select ARGNAME_output_padding_NAMEEND_VAL temp829_86)))
(assert (= temp829_88 #x0000000000000000))
(assert (= temp829_89 #x0000000000000005))
(assert (= temp829_90 temp829_89))
(assert (= temp829_91 (select ARGNAME_output_padding_NAMEEND_VAL temp829_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp829_71 temp829_68)
             (bvslt temp829_75 temp829_72)
             (bvslt temp829_79 temp829_76)
             (bvslt temp829_83 temp829_80)
             (bvslt temp829_87 temp829_84)
             (bvslt temp829_91 temp829_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp829_92 #x0000000000000000))
(assert (= var1191725 temp829_92))
(assert (= temp829_93 #x0000000000000000))
(assert (= temp829_94 temp829_93))
(assert (= temp829_95 (select ARGNAME_stride_NAMEEND_VAL temp829_94)))
(assert (= temp829_96 #x0000000000000001))
(assert (= temp829_97 temp829_96))
(assert (= temp829_98 (select ARGNAME_stride_NAMEEND_VAL temp829_97)))
(assert (= temp829_99 #x0000000000000002))
(assert (= temp829_100 temp829_99))
(assert (= temp829_101 (select ARGNAME_stride_NAMEEND_VAL temp829_100)))
(assert (= temp829_102 #x0000000000000003))
(assert (= temp829_103 temp829_102))
(assert (= temp829_104 (select ARGNAME_stride_NAMEEND_VAL temp829_103)))
(assert (= temp829_105 #x0000000000000004))
(assert (= temp829_106 temp829_105))
(assert (= temp829_107 (select ARGNAME_stride_NAMEEND_VAL temp829_106)))
(assert (= temp829_108 #x0000000000000005))
(assert (= temp829_109 temp829_108))
(assert (= temp829_110 (select ARGNAME_stride_NAMEEND_VAL temp829_109)))
(assert (= temp829_111 #x0000000000000000))
(assert (= temp829_112 #x0000000000000000))
(assert (= temp829_113 temp829_112))
(assert (= temp829_114 (select ARGNAME_stride_NAMEEND_VAL temp829_113)))
(assert (= temp829_115 #x0000000000000000))
(assert (= temp829_116 #x0000000000000001))
(assert (= temp829_117 temp829_116))
(assert (= temp829_118 (select ARGNAME_stride_NAMEEND_VAL temp829_117)))
(assert (= temp829_119 #x0000000000000000))
(assert (= temp829_120 #x0000000000000002))
(assert (= temp829_121 temp829_120))
(assert (= temp829_122 (select ARGNAME_stride_NAMEEND_VAL temp829_121)))
(assert (= temp829_123 #x0000000000000000))
(assert (= temp829_124 #x0000000000000003))
(assert (= temp829_125 temp829_124))
(assert (= temp829_126 (select ARGNAME_stride_NAMEEND_VAL temp829_125)))
(assert (= temp829_127 #x0000000000000000))
(assert (= temp829_128 #x0000000000000004))
(assert (= temp829_129 temp829_128))
(assert (= temp829_130 (select ARGNAME_stride_NAMEEND_VAL temp829_129)))
(assert (= temp829_131 #x0000000000000000))
(assert (= temp829_132 #x0000000000000005))
(assert (= temp829_133 temp829_132))
(assert (= temp829_134 (select ARGNAME_stride_NAMEEND_VAL temp829_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp829_114 temp829_111)
             (bvsle temp829_118 temp829_115)
             (bvsle temp829_122 temp829_119)
             (bvsle temp829_126 temp829_123)
             (bvsle temp829_130 temp829_127)
             (bvsle temp829_134 temp829_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp829_135 #x0000000000000000))
(assert (= var1191735 temp829_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp829_136 #x0000000000000001))
(assert (= var1191747 temp829_136))
(assert (= temp829_137 #x0000000000000000))
(assert (= var1179826 temp829_137))
(assert (= temp829_138 #x0000000000000000))
(assert (= temp829_139 temp829_138))
(assert (= temp829_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp829_139)))
(assert (= temp829_141 #x0000000000000001))
(assert (= temp829_142 temp829_141))
(assert (= temp829_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp829_142)))
(assert (= temp829_144 #x0000000000000002))
(assert (= temp829_145 temp829_144))
(assert (= temp829_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp829_145)))
(assert (= temp829_147 #x0000000000000003))
(assert (= temp829_148 temp829_147))
(assert (= temp829_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp829_148)))
(assert (= temp829_150 #x0000000000000004))
(assert (= temp829_151 temp829_150))
(assert (= temp829_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp829_151)))
(assert (= temp829_153 #x0000000000000005))
(assert (= temp829_154 temp829_153))
(assert (= temp829_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp829_154)))
(assert (= temp829_157 var1179826))
(assert (= temp829_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp829_157)))
(assert (= temp829_156 temp829_158))
(assert (= var1191780
   (ite (bvslt temp829_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp829_159 #x0000000000000000))
(assert (= var1191780 temp829_159))
(assert (= temp829_160 #x0000000000000000))
(assert (= var1179826 temp829_160))
(assert (= temp829_162 var1179826))
(assert (= temp829_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp829_162)))
(assert (= temp829_161 temp829_163))
(assert (= var1191802 (bvsmod temp829_161 ARGNAME_groups_NAMEEND)))
(assert (= temp829_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp829_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp829_165 #x0000000000000001))
(assert (= var1191803 temp829_165))
(assert (= temp829_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp829_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp829_167 #x0000000000000001))
(assert (= var1191823 temp829_167))
(assert (= temp829_168 #x0000000000000001))
(assert (= var1180714 temp829_168))
(assert (= temp829_169 #x0000000000000000))
(assert (= temp829_170 temp829_169))
(assert (= temp829_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp829_170)))
(assert (= temp829_172 #x0000000000000001))
(assert (= temp829_173 temp829_172))
(assert (= temp829_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp829_173)))
(assert (= temp829_175 #x0000000000000002))
(assert (= temp829_176 temp829_175))
(assert (= temp829_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp829_176)))
(assert (= temp829_178 #x0000000000000003))
(assert (= temp829_179 temp829_178))
(assert (= temp829_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp829_179)))
(assert (= temp829_181 #x0000000000000004))
(assert (= temp829_182 temp829_181))
(assert (= temp829_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp829_182)))
(assert (= temp829_184 #x0000000000000005))
(assert (= temp829_185 temp829_184))
(assert (= temp829_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp829_185)))
(assert (= temp829_187 #x0000000000000000))
(assert (= temp829_188
   (ite (bvslt var1180714 temp829_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp829_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp829_188)))
(assert (= var1191831 temp829_189))
(assert (bvslt (ite (bvslt var1180714 temp829_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp829_190 #x0000000000000001))
(assert (= var1180714 temp829_190))
(assert (= temp829_192 var1180714))
(assert (= temp829_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp829_192)))
(assert (= temp829_191 temp829_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp829_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp829_194 #x0000000000000001))
(assert (= var1191836 temp829_194))
(assert (= temp829_195 #x0000000000000000))
(assert (= var1179826 temp829_195))
(assert (= temp829_197 var1179826))
(assert (= temp829_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp829_197)))
(assert (= temp829_196 temp829_198))
(assert (= temp829_199 #x0000000000000002))
(assert (= var1586025 temp829_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp829_200 #x0000000000000001))
(assert (= var1191993 temp829_200))
(assert (= temp829_201 #x0000000000000001))
(assert (= var2700303 temp829_201))
(assert (= temp829_202 #x0000000000000001))
(assert (= var2962447 temp829_202))
(assert (= temp829_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp829_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp829_204 #x0000000000000001))
(assert (= var211058 temp829_204))
(assert (= temp829_205 #x0000000000000001))
(assert (= var211188 temp829_205))
(assert (= var3879401 var211188))
(assert (= temp829_206 #x0000000000000000))
(assert (= var3866802 temp829_206))
(assert (= temp829_207 #x0000000000000000))
(assert (= temp829_208
   (ite (bvslt var3866802 temp829_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp829_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp829_208)))
(assert (= var3879420 temp829_209))
(assert (bvslt (ite (bvslt var3866802 temp829_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp829_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp829_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp829_211 #x0000000000000001))
(assert (= var3879421 temp829_211))
(assert (= temp829_212 #x0000000000000000))
(assert (= var4079423 temp829_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp829_213 #x0000000000000002))
(assert (= var4208259 temp829_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp829_214 #x0000000000000000))
(assert (= var4273820 temp829_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211962 var210913))
(assert (= temp829_215 #x0000000000000000))
(assert (= var211963
   (ite (distinct var211962 temp829_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp829_216 #x0000000000000001))
(assert (= var211058 temp829_216))
(model-add temp829_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp829_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp829_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp829_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




