(declare-fun temp10828_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10828_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10828_3 () (_ BitVec 64))
(declare-fun temp10828_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10828_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10828_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10828_7 () (_ BitVec 64))
(declare-fun temp10828_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10828_9 () (_ BitVec 64))
(declare-fun temp10828_10 () (_ BitVec 64))
(declare-fun temp10828_11 () (_ BitVec 64))
(declare-fun temp10828_12 () (_ BitVec 64))
(declare-fun temp10828_13 () (_ BitVec 64))
(declare-fun temp10828_14 () (_ BitVec 64))
(declare-fun temp10828_15 () (_ BitVec 64))
(declare-fun temp10828_16 () (_ BitVec 64))
(declare-fun temp10828_17 () (_ BitVec 64))
(declare-fun temp10828_18 () (_ BitVec 64))
(declare-fun temp10828_19 () (_ BitVec 64))
(declare-fun temp10828_20 () (_ BitVec 64))
(declare-fun temp10828_21 () (_ BitVec 64))
(declare-fun temp10828_22 () (_ BitVec 64))
(declare-fun temp10828_23 () (_ BitVec 64))
(declare-fun temp10828_24 () (_ BitVec 64))
(declare-fun temp10828_25 () (_ BitVec 64))
(declare-fun temp10828_26 () (_ BitVec 64))
(declare-fun temp10828_27 () (_ BitVec 64))
(declare-fun temp10828_28 () (_ BitVec 64))
(declare-fun temp10828_29 () (_ BitVec 64))
(declare-fun temp10828_30 () (_ BitVec 64))
(declare-fun temp10828_31 () (_ BitVec 64))
(declare-fun temp10828_32 () (_ BitVec 64))
(declare-fun temp10828_33 () (_ BitVec 64))
(declare-fun temp10828_34 () (_ BitVec 64))
(declare-fun temp10828_35 () (_ BitVec 64))
(declare-fun temp10828_36 () (_ BitVec 64))
(declare-fun temp10828_37 () (_ BitVec 64))
(declare-fun temp10828_38 () (_ BitVec 64))
(declare-fun temp10828_39 () (_ BitVec 64))
(declare-fun temp10828_40 () (_ BitVec 64))
(declare-fun temp10828_41 () (_ BitVec 64))
(declare-fun temp10828_42 () (_ BitVec 64))
(declare-fun temp10828_43 () (_ BitVec 64))
(declare-fun temp10828_44 () (_ BitVec 64))
(declare-fun temp10828_45 () (_ BitVec 64))
(declare-fun temp10828_46 () (_ BitVec 64))
(declare-fun temp10828_47 () (_ BitVec 64))
(declare-fun temp10828_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10828_49 () (_ BitVec 64))
(declare-fun temp10828_50 () (_ BitVec 64))
(declare-fun temp10828_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10828_52 () (_ BitVec 64))
(declare-fun temp10828_53 () (_ BitVec 64))
(declare-fun temp10828_54 () (_ BitVec 64))
(declare-fun temp10828_55 () (_ BitVec 64))
(declare-fun temp10828_56 () (_ BitVec 64))
(declare-fun temp10828_57 () (_ BitVec 64))
(declare-fun temp10828_58 () (_ BitVec 64))
(declare-fun temp10828_59 () (_ BitVec 64))
(declare-fun temp10828_60 () (_ BitVec 64))
(declare-fun temp10828_61 () (_ BitVec 64))
(declare-fun temp10828_62 () (_ BitVec 64))
(declare-fun temp10828_63 () (_ BitVec 64))
(declare-fun temp10828_64 () (_ BitVec 64))
(declare-fun temp10828_65 () (_ BitVec 64))
(declare-fun temp10828_66 () (_ BitVec 64))
(declare-fun temp10828_67 () (_ BitVec 64))
(declare-fun temp10828_68 () (_ BitVec 64))
(declare-fun temp10828_69 () (_ BitVec 64))
(declare-fun temp10828_70 () (_ BitVec 64))
(declare-fun temp10828_71 () (_ BitVec 64))
(declare-fun temp10828_72 () (_ BitVec 64))
(declare-fun temp10828_73 () (_ BitVec 64))
(declare-fun temp10828_74 () (_ BitVec 64))
(declare-fun temp10828_75 () (_ BitVec 64))
(declare-fun temp10828_76 () (_ BitVec 64))
(declare-fun temp10828_77 () (_ BitVec 64))
(declare-fun temp10828_78 () (_ BitVec 64))
(declare-fun temp10828_79 () (_ BitVec 64))
(declare-fun temp10828_80 () (_ BitVec 64))
(declare-fun temp10828_81 () (_ BitVec 64))
(declare-fun temp10828_82 () (_ BitVec 64))
(declare-fun temp10828_83 () (_ BitVec 64))
(declare-fun temp10828_84 () (_ BitVec 64))
(declare-fun temp10828_85 () (_ BitVec 64))
(declare-fun temp10828_86 () (_ BitVec 64))
(declare-fun temp10828_87 () (_ BitVec 64))
(declare-fun temp10828_88 () (_ BitVec 64))
(declare-fun temp10828_89 () (_ BitVec 64))
(declare-fun temp10828_90 () (_ BitVec 64))
(declare-fun temp10828_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10828_92 () (_ BitVec 64))
(declare-fun temp10828_93 () (_ BitVec 64))
(declare-fun temp10828_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10828_95 () (_ BitVec 64))
(declare-fun temp10828_96 () (_ BitVec 64))
(declare-fun temp10828_97 () (_ BitVec 64))
(declare-fun temp10828_98 () (_ BitVec 64))
(declare-fun temp10828_99 () (_ BitVec 64))
(declare-fun temp10828_100 () (_ BitVec 64))
(declare-fun temp10828_101 () (_ BitVec 64))
(declare-fun temp10828_102 () (_ BitVec 64))
(declare-fun temp10828_103 () (_ BitVec 64))
(declare-fun temp10828_104 () (_ BitVec 64))
(declare-fun temp10828_105 () (_ BitVec 64))
(declare-fun temp10828_106 () (_ BitVec 64))
(declare-fun temp10828_107 () (_ BitVec 64))
(declare-fun temp10828_108 () (_ BitVec 64))
(declare-fun temp10828_109 () (_ BitVec 64))
(declare-fun temp10828_110 () (_ BitVec 64))
(declare-fun temp10828_111 () (_ BitVec 64))
(declare-fun temp10828_112 () (_ BitVec 64))
(declare-fun temp10828_113 () (_ BitVec 64))
(declare-fun temp10828_114 () (_ BitVec 64))
(declare-fun temp10828_115 () (_ BitVec 64))
(declare-fun temp10828_116 () (_ BitVec 64))
(declare-fun temp10828_117 () (_ BitVec 64))
(declare-fun temp10828_118 () (_ BitVec 64))
(declare-fun temp10828_119 () (_ BitVec 64))
(declare-fun temp10828_120 () (_ BitVec 64))
(declare-fun temp10828_121 () (_ BitVec 64))
(declare-fun temp10828_122 () (_ BitVec 64))
(declare-fun temp10828_123 () (_ BitVec 64))
(declare-fun temp10828_124 () (_ BitVec 64))
(declare-fun temp10828_125 () (_ BitVec 64))
(declare-fun temp10828_126 () (_ BitVec 64))
(declare-fun temp10828_127 () (_ BitVec 64))
(declare-fun temp10828_128 () (_ BitVec 64))
(declare-fun temp10828_129 () (_ BitVec 64))
(declare-fun temp10828_130 () (_ BitVec 64))
(declare-fun temp10828_131 () (_ BitVec 64))
(declare-fun temp10828_132 () (_ BitVec 64))
(declare-fun temp10828_133 () (_ BitVec 64))
(declare-fun temp10828_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10828_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10828_136 () (_ BitVec 64))
(declare-fun temp10828_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10828_138 () (_ BitVec 64))
(declare-fun temp10828_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10828_140 () (_ BitVec 64))
(declare-fun temp10828_141 () (_ BitVec 64))
(declare-fun temp10828_142 () (_ BitVec 64))
(declare-fun temp10828_143 () (_ BitVec 64))
(declare-fun temp10828_144 () (_ BitVec 64))
(declare-fun temp10828_145 () (_ BitVec 64))
(declare-fun temp10828_146 () (_ BitVec 64))
(declare-fun temp10828_147 () (_ BitVec 64))
(declare-fun temp10828_148 () (_ BitVec 64))
(declare-fun temp10828_149 () (_ BitVec 64))
(declare-fun temp10828_150 () (_ BitVec 64))
(declare-fun temp10828_151 () (_ BitVec 64))
(declare-fun temp10828_152 () (_ BitVec 64))
(declare-fun temp10828_153 () (_ BitVec 64))
(declare-fun temp10828_154 () (_ BitVec 64))
(declare-fun temp10828_155 () (_ BitVec 64))
(declare-fun temp10828_157 () (_ BitVec 64))
(declare-fun temp10828_158 () (_ BitVec 64))
(declare-fun temp10828_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10828_159 () (_ BitVec 64))
(declare-fun temp10828_160 () (_ BitVec 64))
(declare-fun temp10828_162 () (_ BitVec 64))
(declare-fun temp10828_163 () (_ BitVec 64))
(declare-fun temp10828_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10828_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10828_165 () (_ BitVec 64))
(declare-fun temp10828_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10828_167 () (_ BitVec 64))
(declare-fun temp10828_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10828_169 () (_ BitVec 64))
(declare-fun temp10828_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10828_171 () (_ BitVec 64))
(declare-fun temp10828_172 () (_ BitVec 64))
(declare-fun temp10828_173 () (_ BitVec 64))
(declare-fun temp10828_174 () (_ BitVec 64))
(declare-fun temp10828_175 () (_ BitVec 64))
(declare-fun temp10828_176 () (_ BitVec 64))
(declare-fun temp10828_177 () (_ BitVec 64))
(declare-fun temp10828_178 () (_ BitVec 64))
(declare-fun temp10828_179 () (_ BitVec 64))
(declare-fun temp10828_180 () (_ BitVec 64))
(declare-fun temp10828_181 () (_ BitVec 64))
(declare-fun temp10828_182 () (_ BitVec 64))
(declare-fun temp10828_183 () (_ BitVec 64))
(declare-fun temp10828_184 () (_ BitVec 64))
(declare-fun temp10828_185 () (_ BitVec 64))
(declare-fun temp10828_186 () (_ BitVec 64))
(declare-fun temp10828_187 () (_ BitVec 64))
(declare-fun temp10828_188 () (_ BitVec 64))
(declare-fun temp10828_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10828_190 () (_ BitVec 64))
(declare-fun temp10828_192 () (_ BitVec 64))
(declare-fun temp10828_193 () (_ BitVec 64))
(declare-fun temp10828_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10828_194 () (_ BitVec 64))
(declare-fun temp10828_195 () (_ BitVec 64))
(declare-fun temp10828_197 () (_ BitVec 64))
(declare-fun temp10828_198 () (_ BitVec 64))
(declare-fun temp10828_196 () (_ BitVec 64))
(declare-fun temp10828_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10828_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10828_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10828_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10828_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10828_204 () (_ BitVec 64))
(declare-fun temp10828_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10828_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10828_207 () (_ BitVec 64))
(declare-fun temp10828_208 () (_ BitVec 64))
(declare-fun temp10828_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10828_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10828_211 () (_ BitVec 64))
(declare-fun temp10828_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10828_213 () (_ BitVec 64))
(declare-fun temp10828_214 () (_ BitVec 64))
(declare-fun temp10828_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10828_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10828_217 () (_ BitVec 64))
(declare-fun temp10828_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10828_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10828_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var5255568 () (_ BitVec 64))
(declare-fun temp10828_221 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp10828_222 () (_ BitVec 64))
(declare-fun temp10828_223 () (_ BitVec 64))
(declare-fun var7025428 () (_ BitVec 64))
(declare-fun var7025395 () (_ BitVec 64))
(declare-fun var6893959 () (_ BitVec 64))
(declare-fun var6893955 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10828_224 () (_ BitVec 64))
(assert (= temp10828_1 #x0000000000000001))
(assert (= var77203 temp10828_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10828_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10828_2)))
(assert (= temp10828_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10828_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10828_4 #x0000000000000000))
(assert (= var210941 temp10828_4))
(assert (= temp10828_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10828_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10828_6 #x0000000000000000))
(assert (= var210986 temp10828_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10828_7 #x0000000000000000))
(assert (= temp10828_8 temp10828_7))
(assert (= temp10828_9 (select ARGNAME_padding_NAMEEND_VAL temp10828_8)))
(assert (= temp10828_10 #x0000000000000001))
(assert (= temp10828_11 temp10828_10))
(assert (= temp10828_12 (select ARGNAME_padding_NAMEEND_VAL temp10828_11)))
(assert (= temp10828_13 #x0000000000000002))
(assert (= temp10828_14 temp10828_13))
(assert (= temp10828_15 (select ARGNAME_padding_NAMEEND_VAL temp10828_14)))
(assert (= temp10828_16 #x0000000000000003))
(assert (= temp10828_17 temp10828_16))
(assert (= temp10828_18 (select ARGNAME_padding_NAMEEND_VAL temp10828_17)))
(assert (= temp10828_19 #x0000000000000004))
(assert (= temp10828_20 temp10828_19))
(assert (= temp10828_21 (select ARGNAME_padding_NAMEEND_VAL temp10828_20)))
(assert (= temp10828_22 #x0000000000000005))
(assert (= temp10828_23 temp10828_22))
(assert (= temp10828_24 (select ARGNAME_padding_NAMEEND_VAL temp10828_23)))
(assert (= temp10828_25 #x0000000000000000))
(assert (= temp10828_26 #x0000000000000000))
(assert (= temp10828_27 temp10828_26))
(assert (= temp10828_28 (select ARGNAME_padding_NAMEEND_VAL temp10828_27)))
(assert (= temp10828_29 #x0000000000000000))
(assert (= temp10828_30 #x0000000000000001))
(assert (= temp10828_31 temp10828_30))
(assert (= temp10828_32 (select ARGNAME_padding_NAMEEND_VAL temp10828_31)))
(assert (= temp10828_33 #x0000000000000000))
(assert (= temp10828_34 #x0000000000000002))
(assert (= temp10828_35 temp10828_34))
(assert (= temp10828_36 (select ARGNAME_padding_NAMEEND_VAL temp10828_35)))
(assert (= temp10828_37 #x0000000000000000))
(assert (= temp10828_38 #x0000000000000003))
(assert (= temp10828_39 temp10828_38))
(assert (= temp10828_40 (select ARGNAME_padding_NAMEEND_VAL temp10828_39)))
(assert (= temp10828_41 #x0000000000000000))
(assert (= temp10828_42 #x0000000000000004))
(assert (= temp10828_43 temp10828_42))
(assert (= temp10828_44 (select ARGNAME_padding_NAMEEND_VAL temp10828_43)))
(assert (= temp10828_45 #x0000000000000000))
(assert (= temp10828_46 #x0000000000000005))
(assert (= temp10828_47 temp10828_46))
(assert (= temp10828_48 (select ARGNAME_padding_NAMEEND_VAL temp10828_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10828_28 temp10828_25)
             (bvslt temp10828_32 temp10828_29)
             (bvslt temp10828_36 temp10828_33)
             (bvslt temp10828_40 temp10828_37)
             (bvslt temp10828_44 temp10828_41)
             (bvslt temp10828_48 temp10828_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10828_49 #x0000000000000000))
(assert (= var1191714 temp10828_49))
(assert (= temp10828_50 #x0000000000000000))
(assert (= temp10828_51 temp10828_50))
(assert (= temp10828_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10828_51)))
(assert (= temp10828_53 #x0000000000000001))
(assert (= temp10828_54 temp10828_53))
(assert (= temp10828_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10828_54)))
(assert (= temp10828_56 #x0000000000000002))
(assert (= temp10828_57 temp10828_56))
(assert (= temp10828_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10828_57)))
(assert (= temp10828_59 #x0000000000000003))
(assert (= temp10828_60 temp10828_59))
(assert (= temp10828_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10828_60)))
(assert (= temp10828_62 #x0000000000000004))
(assert (= temp10828_63 temp10828_62))
(assert (= temp10828_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10828_63)))
(assert (= temp10828_65 #x0000000000000005))
(assert (= temp10828_66 temp10828_65))
(assert (= temp10828_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10828_66)))
(assert (= temp10828_68 #x0000000000000000))
(assert (= temp10828_69 #x0000000000000000))
(assert (= temp10828_70 temp10828_69))
(assert (= temp10828_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10828_70)))
(assert (= temp10828_72 #x0000000000000000))
(assert (= temp10828_73 #x0000000000000001))
(assert (= temp10828_74 temp10828_73))
(assert (= temp10828_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10828_74)))
(assert (= temp10828_76 #x0000000000000000))
(assert (= temp10828_77 #x0000000000000002))
(assert (= temp10828_78 temp10828_77))
(assert (= temp10828_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10828_78)))
(assert (= temp10828_80 #x0000000000000000))
(assert (= temp10828_81 #x0000000000000003))
(assert (= temp10828_82 temp10828_81))
(assert (= temp10828_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10828_82)))
(assert (= temp10828_84 #x0000000000000000))
(assert (= temp10828_85 #x0000000000000004))
(assert (= temp10828_86 temp10828_85))
(assert (= temp10828_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10828_86)))
(assert (= temp10828_88 #x0000000000000000))
(assert (= temp10828_89 #x0000000000000005))
(assert (= temp10828_90 temp10828_89))
(assert (= temp10828_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10828_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10828_71 temp10828_68)
             (bvslt temp10828_75 temp10828_72)
             (bvslt temp10828_79 temp10828_76)
             (bvslt temp10828_83 temp10828_80)
             (bvslt temp10828_87 temp10828_84)
             (bvslt temp10828_91 temp10828_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10828_92 #x0000000000000000))
(assert (= var1191725 temp10828_92))
(assert (= temp10828_93 #x0000000000000000))
(assert (= temp10828_94 temp10828_93))
(assert (= temp10828_95 (select ARGNAME_stride_NAMEEND_VAL temp10828_94)))
(assert (= temp10828_96 #x0000000000000001))
(assert (= temp10828_97 temp10828_96))
(assert (= temp10828_98 (select ARGNAME_stride_NAMEEND_VAL temp10828_97)))
(assert (= temp10828_99 #x0000000000000002))
(assert (= temp10828_100 temp10828_99))
(assert (= temp10828_101 (select ARGNAME_stride_NAMEEND_VAL temp10828_100)))
(assert (= temp10828_102 #x0000000000000003))
(assert (= temp10828_103 temp10828_102))
(assert (= temp10828_104 (select ARGNAME_stride_NAMEEND_VAL temp10828_103)))
(assert (= temp10828_105 #x0000000000000004))
(assert (= temp10828_106 temp10828_105))
(assert (= temp10828_107 (select ARGNAME_stride_NAMEEND_VAL temp10828_106)))
(assert (= temp10828_108 #x0000000000000005))
(assert (= temp10828_109 temp10828_108))
(assert (= temp10828_110 (select ARGNAME_stride_NAMEEND_VAL temp10828_109)))
(assert (= temp10828_111 #x0000000000000000))
(assert (= temp10828_112 #x0000000000000000))
(assert (= temp10828_113 temp10828_112))
(assert (= temp10828_114 (select ARGNAME_stride_NAMEEND_VAL temp10828_113)))
(assert (= temp10828_115 #x0000000000000000))
(assert (= temp10828_116 #x0000000000000001))
(assert (= temp10828_117 temp10828_116))
(assert (= temp10828_118 (select ARGNAME_stride_NAMEEND_VAL temp10828_117)))
(assert (= temp10828_119 #x0000000000000000))
(assert (= temp10828_120 #x0000000000000002))
(assert (= temp10828_121 temp10828_120))
(assert (= temp10828_122 (select ARGNAME_stride_NAMEEND_VAL temp10828_121)))
(assert (= temp10828_123 #x0000000000000000))
(assert (= temp10828_124 #x0000000000000003))
(assert (= temp10828_125 temp10828_124))
(assert (= temp10828_126 (select ARGNAME_stride_NAMEEND_VAL temp10828_125)))
(assert (= temp10828_127 #x0000000000000000))
(assert (= temp10828_128 #x0000000000000004))
(assert (= temp10828_129 temp10828_128))
(assert (= temp10828_130 (select ARGNAME_stride_NAMEEND_VAL temp10828_129)))
(assert (= temp10828_131 #x0000000000000000))
(assert (= temp10828_132 #x0000000000000005))
(assert (= temp10828_133 temp10828_132))
(assert (= temp10828_134 (select ARGNAME_stride_NAMEEND_VAL temp10828_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10828_114 temp10828_111)
             (bvsle temp10828_118 temp10828_115)
             (bvsle temp10828_122 temp10828_119)
             (bvsle temp10828_126 temp10828_123)
             (bvsle temp10828_130 temp10828_127)
             (bvsle temp10828_134 temp10828_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10828_135 #x0000000000000000))
(assert (= var1191735 temp10828_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10828_136 #x0000000000000001))
(assert (= var1191747 temp10828_136))
(assert (= temp10828_137 #x0000000000000000))
(assert (= var1179826 temp10828_137))
(assert (= temp10828_138 #x0000000000000000))
(assert (= temp10828_139 temp10828_138))
(assert (= temp10828_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10828_139)))
(assert (= temp10828_141 #x0000000000000001))
(assert (= temp10828_142 temp10828_141))
(assert (= temp10828_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10828_142)))
(assert (= temp10828_144 #x0000000000000002))
(assert (= temp10828_145 temp10828_144))
(assert (= temp10828_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10828_145)))
(assert (= temp10828_147 #x0000000000000003))
(assert (= temp10828_148 temp10828_147))
(assert (= temp10828_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10828_148)))
(assert (= temp10828_150 #x0000000000000004))
(assert (= temp10828_151 temp10828_150))
(assert (= temp10828_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10828_151)))
(assert (= temp10828_153 #x0000000000000005))
(assert (= temp10828_154 temp10828_153))
(assert (= temp10828_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10828_154)))
(assert (= temp10828_157 var1179826))
(assert (= temp10828_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10828_157)))
(assert (= temp10828_156 temp10828_158))
(assert (= var1191780
   (ite (bvslt temp10828_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10828_159 #x0000000000000000))
(assert (= var1191780 temp10828_159))
(assert (= temp10828_160 #x0000000000000000))
(assert (= var1179826 temp10828_160))
(assert (= temp10828_162 var1179826))
(assert (= temp10828_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10828_162)))
(assert (= temp10828_161 temp10828_163))
(assert (= var1191802 (bvsmod temp10828_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10828_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10828_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10828_165 #x0000000000000001))
(assert (= var1191803 temp10828_165))
(assert (= temp10828_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10828_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10828_167 #x0000000000000001))
(assert (= var1191823 temp10828_167))
(assert (= temp10828_168 #x0000000000000001))
(assert (= var1180714 temp10828_168))
(assert (= temp10828_169 #x0000000000000000))
(assert (= temp10828_170 temp10828_169))
(assert (= temp10828_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10828_170)))
(assert (= temp10828_172 #x0000000000000001))
(assert (= temp10828_173 temp10828_172))
(assert (= temp10828_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10828_173)))
(assert (= temp10828_175 #x0000000000000002))
(assert (= temp10828_176 temp10828_175))
(assert (= temp10828_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10828_176)))
(assert (= temp10828_178 #x0000000000000003))
(assert (= temp10828_179 temp10828_178))
(assert (= temp10828_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10828_179)))
(assert (= temp10828_181 #x0000000000000004))
(assert (= temp10828_182 temp10828_181))
(assert (= temp10828_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10828_182)))
(assert (= temp10828_184 #x0000000000000005))
(assert (= temp10828_185 temp10828_184))
(assert (= temp10828_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10828_185)))
(assert (= temp10828_187 #x0000000000000000))
(assert (= temp10828_188
   (ite (bvslt var1180714 temp10828_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10828_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10828_188)))
(assert (= var1191831 temp10828_189))
(assert (bvslt (ite (bvslt var1180714 temp10828_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10828_190 #x0000000000000001))
(assert (= var1180714 temp10828_190))
(assert (= temp10828_192 var1180714))
(assert (= temp10828_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10828_192)))
(assert (= temp10828_191 temp10828_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10828_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10828_194 #x0000000000000001))
(assert (= var1191836 temp10828_194))
(assert (= temp10828_195 #x0000000000000000))
(assert (= var1179826 temp10828_195))
(assert (= temp10828_197 var1179826))
(assert (= temp10828_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10828_197)))
(assert (= temp10828_196 temp10828_198))
(assert (= temp10828_199 #x0000000000000002))
(assert (= var1586025 temp10828_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10828_200 #x0000000000000001))
(assert (= var1191993 temp10828_200))
(assert (= temp10828_201 #x0000000000000001))
(assert (= var2700303 temp10828_201))
(assert (= temp10828_202 #x0000000000000001))
(assert (= var2962447 temp10828_202))
(assert (= temp10828_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10828_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10828_204 #x0000000000000001))
(assert (= var211058 temp10828_204))
(assert (= temp10828_205 #x0000000000000001))
(assert (= var211188 temp10828_205))
(assert (= var3879401 var211188))
(assert (= temp10828_206 #x0000000000000000))
(assert (= var3866802 temp10828_206))
(assert (= temp10828_207 #x0000000000000000))
(assert (= temp10828_208
   (ite (bvslt var3866802 temp10828_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10828_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10828_208)))
(assert (= var3879420 temp10828_209))
(assert (bvslt (ite (bvslt var3866802 temp10828_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10828_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10828_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10828_211 #x0000000000000000))
(assert (= var3879421 temp10828_211))
(assert (= temp10828_212 #x0000000000000001))
(assert (= var3867690 temp10828_212))
(assert (= temp10828_213 #x0000000000000000))
(assert (= temp10828_214
   (ite (bvslt var3867690 temp10828_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10828_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10828_214)))
(assert (= var3879423 temp10828_215))
(assert (bvslt (ite (bvslt var3867690 temp10828_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10828_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10828_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10828_217 #x0000000000000001))
(assert (= var3879424 temp10828_217))
(assert (= temp10828_218 #x0000000000000000))
(assert (= var4133117 temp10828_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10828_219 #x0000000000000002))
(assert (= var4339331 temp10828_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10828_220 #x0000000000000000))
(assert (= var4404892 temp10828_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4993424 var211201))
(assert (= var5255568 var211201))
(assert (= temp10828_221 #x0000000000000000))
(assert (= var5583248 temp10828_221))
(assert (= temp10828_222 #x0000000000000001))
(assert (= var211058 temp10828_222))
(assert (= temp10828_223 #x0000000000000000))
(assert (= var7025428 temp10828_223))
(assert (= var7025395 var7025428))
(assert (= var6893959 var7025395))
(assert (= var6893955 var6893959))
(assert (= var212669 var6893955))
(assert (= temp10828_224 #x0000000000000000))
(assert (= var212669 temp10828_224))
(model-add temp10828_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10828_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10828_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10828_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





