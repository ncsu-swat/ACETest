(declare-fun temp10893_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10893_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10893_3 () (_ BitVec 64))
(declare-fun temp10893_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10893_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10893_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10893_7 () (_ BitVec 64))
(declare-fun temp10893_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10893_9 () (_ BitVec 64))
(declare-fun temp10893_10 () (_ BitVec 64))
(declare-fun temp10893_11 () (_ BitVec 64))
(declare-fun temp10893_12 () (_ BitVec 64))
(declare-fun temp10893_13 () (_ BitVec 64))
(declare-fun temp10893_14 () (_ BitVec 64))
(declare-fun temp10893_15 () (_ BitVec 64))
(declare-fun temp10893_16 () (_ BitVec 64))
(declare-fun temp10893_17 () (_ BitVec 64))
(declare-fun temp10893_18 () (_ BitVec 64))
(declare-fun temp10893_19 () (_ BitVec 64))
(declare-fun temp10893_20 () (_ BitVec 64))
(declare-fun temp10893_21 () (_ BitVec 64))
(declare-fun temp10893_22 () (_ BitVec 64))
(declare-fun temp10893_23 () (_ BitVec 64))
(declare-fun temp10893_24 () (_ BitVec 64))
(declare-fun temp10893_25 () (_ BitVec 64))
(declare-fun temp10893_26 () (_ BitVec 64))
(declare-fun temp10893_27 () (_ BitVec 64))
(declare-fun temp10893_28 () (_ BitVec 64))
(declare-fun temp10893_29 () (_ BitVec 64))
(declare-fun temp10893_30 () (_ BitVec 64))
(declare-fun temp10893_31 () (_ BitVec 64))
(declare-fun temp10893_32 () (_ BitVec 64))
(declare-fun temp10893_33 () (_ BitVec 64))
(declare-fun temp10893_34 () (_ BitVec 64))
(declare-fun temp10893_35 () (_ BitVec 64))
(declare-fun temp10893_36 () (_ BitVec 64))
(declare-fun temp10893_37 () (_ BitVec 64))
(declare-fun temp10893_38 () (_ BitVec 64))
(declare-fun temp10893_39 () (_ BitVec 64))
(declare-fun temp10893_40 () (_ BitVec 64))
(declare-fun temp10893_41 () (_ BitVec 64))
(declare-fun temp10893_42 () (_ BitVec 64))
(declare-fun temp10893_43 () (_ BitVec 64))
(declare-fun temp10893_44 () (_ BitVec 64))
(declare-fun temp10893_45 () (_ BitVec 64))
(declare-fun temp10893_46 () (_ BitVec 64))
(declare-fun temp10893_47 () (_ BitVec 64))
(declare-fun temp10893_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10893_49 () (_ BitVec 64))
(declare-fun temp10893_50 () (_ BitVec 64))
(declare-fun temp10893_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10893_52 () (_ BitVec 64))
(declare-fun temp10893_53 () (_ BitVec 64))
(declare-fun temp10893_54 () (_ BitVec 64))
(declare-fun temp10893_55 () (_ BitVec 64))
(declare-fun temp10893_56 () (_ BitVec 64))
(declare-fun temp10893_57 () (_ BitVec 64))
(declare-fun temp10893_58 () (_ BitVec 64))
(declare-fun temp10893_59 () (_ BitVec 64))
(declare-fun temp10893_60 () (_ BitVec 64))
(declare-fun temp10893_61 () (_ BitVec 64))
(declare-fun temp10893_62 () (_ BitVec 64))
(declare-fun temp10893_63 () (_ BitVec 64))
(declare-fun temp10893_64 () (_ BitVec 64))
(declare-fun temp10893_65 () (_ BitVec 64))
(declare-fun temp10893_66 () (_ BitVec 64))
(declare-fun temp10893_67 () (_ BitVec 64))
(declare-fun temp10893_68 () (_ BitVec 64))
(declare-fun temp10893_69 () (_ BitVec 64))
(declare-fun temp10893_70 () (_ BitVec 64))
(declare-fun temp10893_71 () (_ BitVec 64))
(declare-fun temp10893_72 () (_ BitVec 64))
(declare-fun temp10893_73 () (_ BitVec 64))
(declare-fun temp10893_74 () (_ BitVec 64))
(declare-fun temp10893_75 () (_ BitVec 64))
(declare-fun temp10893_76 () (_ BitVec 64))
(declare-fun temp10893_77 () (_ BitVec 64))
(declare-fun temp10893_78 () (_ BitVec 64))
(declare-fun temp10893_79 () (_ BitVec 64))
(declare-fun temp10893_80 () (_ BitVec 64))
(declare-fun temp10893_81 () (_ BitVec 64))
(declare-fun temp10893_82 () (_ BitVec 64))
(declare-fun temp10893_83 () (_ BitVec 64))
(declare-fun temp10893_84 () (_ BitVec 64))
(declare-fun temp10893_85 () (_ BitVec 64))
(declare-fun temp10893_86 () (_ BitVec 64))
(declare-fun temp10893_87 () (_ BitVec 64))
(declare-fun temp10893_88 () (_ BitVec 64))
(declare-fun temp10893_89 () (_ BitVec 64))
(declare-fun temp10893_90 () (_ BitVec 64))
(declare-fun temp10893_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10893_92 () (_ BitVec 64))
(declare-fun temp10893_93 () (_ BitVec 64))
(declare-fun temp10893_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10893_95 () (_ BitVec 64))
(declare-fun temp10893_96 () (_ BitVec 64))
(declare-fun temp10893_97 () (_ BitVec 64))
(declare-fun temp10893_98 () (_ BitVec 64))
(declare-fun temp10893_99 () (_ BitVec 64))
(declare-fun temp10893_100 () (_ BitVec 64))
(declare-fun temp10893_101 () (_ BitVec 64))
(declare-fun temp10893_102 () (_ BitVec 64))
(declare-fun temp10893_103 () (_ BitVec 64))
(declare-fun temp10893_104 () (_ BitVec 64))
(declare-fun temp10893_105 () (_ BitVec 64))
(declare-fun temp10893_106 () (_ BitVec 64))
(declare-fun temp10893_107 () (_ BitVec 64))
(declare-fun temp10893_108 () (_ BitVec 64))
(declare-fun temp10893_109 () (_ BitVec 64))
(declare-fun temp10893_110 () (_ BitVec 64))
(declare-fun temp10893_111 () (_ BitVec 64))
(declare-fun temp10893_112 () (_ BitVec 64))
(declare-fun temp10893_113 () (_ BitVec 64))
(declare-fun temp10893_114 () (_ BitVec 64))
(declare-fun temp10893_115 () (_ BitVec 64))
(declare-fun temp10893_116 () (_ BitVec 64))
(declare-fun temp10893_117 () (_ BitVec 64))
(declare-fun temp10893_118 () (_ BitVec 64))
(declare-fun temp10893_119 () (_ BitVec 64))
(declare-fun temp10893_120 () (_ BitVec 64))
(declare-fun temp10893_121 () (_ BitVec 64))
(declare-fun temp10893_122 () (_ BitVec 64))
(declare-fun temp10893_123 () (_ BitVec 64))
(declare-fun temp10893_124 () (_ BitVec 64))
(declare-fun temp10893_125 () (_ BitVec 64))
(declare-fun temp10893_126 () (_ BitVec 64))
(declare-fun temp10893_127 () (_ BitVec 64))
(declare-fun temp10893_128 () (_ BitVec 64))
(declare-fun temp10893_129 () (_ BitVec 64))
(declare-fun temp10893_130 () (_ BitVec 64))
(declare-fun temp10893_131 () (_ BitVec 64))
(declare-fun temp10893_132 () (_ BitVec 64))
(declare-fun temp10893_133 () (_ BitVec 64))
(declare-fun temp10893_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10893_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10893_136 () (_ BitVec 64))
(declare-fun temp10893_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10893_138 () (_ BitVec 64))
(declare-fun temp10893_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10893_140 () (_ BitVec 64))
(declare-fun temp10893_141 () (_ BitVec 64))
(declare-fun temp10893_142 () (_ BitVec 64))
(declare-fun temp10893_143 () (_ BitVec 64))
(declare-fun temp10893_144 () (_ BitVec 64))
(declare-fun temp10893_145 () (_ BitVec 64))
(declare-fun temp10893_146 () (_ BitVec 64))
(declare-fun temp10893_147 () (_ BitVec 64))
(declare-fun temp10893_148 () (_ BitVec 64))
(declare-fun temp10893_149 () (_ BitVec 64))
(declare-fun temp10893_150 () (_ BitVec 64))
(declare-fun temp10893_151 () (_ BitVec 64))
(declare-fun temp10893_152 () (_ BitVec 64))
(declare-fun temp10893_153 () (_ BitVec 64))
(declare-fun temp10893_154 () (_ BitVec 64))
(declare-fun temp10893_155 () (_ BitVec 64))
(declare-fun temp10893_157 () (_ BitVec 64))
(declare-fun temp10893_158 () (_ BitVec 64))
(declare-fun temp10893_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10893_159 () (_ BitVec 64))
(declare-fun temp10893_160 () (_ BitVec 64))
(declare-fun temp10893_162 () (_ BitVec 64))
(declare-fun temp10893_163 () (_ BitVec 64))
(declare-fun temp10893_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10893_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10893_165 () (_ BitVec 64))
(declare-fun temp10893_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10893_167 () (_ BitVec 64))
(declare-fun temp10893_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10893_169 () (_ BitVec 64))
(declare-fun temp10893_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10893_171 () (_ BitVec 64))
(declare-fun temp10893_172 () (_ BitVec 64))
(declare-fun temp10893_173 () (_ BitVec 64))
(declare-fun temp10893_174 () (_ BitVec 64))
(declare-fun temp10893_175 () (_ BitVec 64))
(declare-fun temp10893_176 () (_ BitVec 64))
(declare-fun temp10893_177 () (_ BitVec 64))
(declare-fun temp10893_178 () (_ BitVec 64))
(declare-fun temp10893_179 () (_ BitVec 64))
(declare-fun temp10893_180 () (_ BitVec 64))
(declare-fun temp10893_181 () (_ BitVec 64))
(declare-fun temp10893_182 () (_ BitVec 64))
(declare-fun temp10893_183 () (_ BitVec 64))
(declare-fun temp10893_184 () (_ BitVec 64))
(declare-fun temp10893_185 () (_ BitVec 64))
(declare-fun temp10893_186 () (_ BitVec 64))
(declare-fun temp10893_187 () (_ BitVec 64))
(declare-fun temp10893_188 () (_ BitVec 64))
(declare-fun temp10893_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10893_190 () (_ BitVec 64))
(declare-fun temp10893_192 () (_ BitVec 64))
(declare-fun temp10893_193 () (_ BitVec 64))
(declare-fun temp10893_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10893_194 () (_ BitVec 64))
(declare-fun temp10893_195 () (_ BitVec 64))
(declare-fun temp10893_197 () (_ BitVec 64))
(declare-fun temp10893_198 () (_ BitVec 64))
(declare-fun temp10893_196 () (_ BitVec 64))
(declare-fun temp10893_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10893_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10893_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10893_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10893_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10893_204 () (_ BitVec 64))
(declare-fun temp10893_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10893_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10893_207 () (_ BitVec 64))
(declare-fun temp10893_208 () (_ BitVec 64))
(declare-fun temp10893_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10893_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10893_211 () (_ BitVec 64))
(declare-fun temp10893_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10893_213 () (_ BitVec 64))
(declare-fun temp10893_214 () (_ BitVec 64))
(declare-fun temp10893_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10893_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10893_217 () (_ BitVec 64))
(declare-fun temp10893_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10893_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10893_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10893_221 () (_ BitVec 64))
(assert (= temp10893_1 #x0000000000000001))
(assert (= var77203 temp10893_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10893_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10893_2)))
(assert (= temp10893_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10893_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10893_4 #x0000000000000000))
(assert (= var210941 temp10893_4))
(assert (= temp10893_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10893_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10893_6 #x0000000000000000))
(assert (= var210986 temp10893_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10893_7 #x0000000000000000))
(assert (= temp10893_8 temp10893_7))
(assert (= temp10893_9 (select ARGNAME_padding_NAMEEND_VAL temp10893_8)))
(assert (= temp10893_10 #x0000000000000001))
(assert (= temp10893_11 temp10893_10))
(assert (= temp10893_12 (select ARGNAME_padding_NAMEEND_VAL temp10893_11)))
(assert (= temp10893_13 #x0000000000000002))
(assert (= temp10893_14 temp10893_13))
(assert (= temp10893_15 (select ARGNAME_padding_NAMEEND_VAL temp10893_14)))
(assert (= temp10893_16 #x0000000000000003))
(assert (= temp10893_17 temp10893_16))
(assert (= temp10893_18 (select ARGNAME_padding_NAMEEND_VAL temp10893_17)))
(assert (= temp10893_19 #x0000000000000004))
(assert (= temp10893_20 temp10893_19))
(assert (= temp10893_21 (select ARGNAME_padding_NAMEEND_VAL temp10893_20)))
(assert (= temp10893_22 #x0000000000000005))
(assert (= temp10893_23 temp10893_22))
(assert (= temp10893_24 (select ARGNAME_padding_NAMEEND_VAL temp10893_23)))
(assert (= temp10893_25 #x0000000000000000))
(assert (= temp10893_26 #x0000000000000000))
(assert (= temp10893_27 temp10893_26))
(assert (= temp10893_28 (select ARGNAME_padding_NAMEEND_VAL temp10893_27)))
(assert (= temp10893_29 #x0000000000000000))
(assert (= temp10893_30 #x0000000000000001))
(assert (= temp10893_31 temp10893_30))
(assert (= temp10893_32 (select ARGNAME_padding_NAMEEND_VAL temp10893_31)))
(assert (= temp10893_33 #x0000000000000000))
(assert (= temp10893_34 #x0000000000000002))
(assert (= temp10893_35 temp10893_34))
(assert (= temp10893_36 (select ARGNAME_padding_NAMEEND_VAL temp10893_35)))
(assert (= temp10893_37 #x0000000000000000))
(assert (= temp10893_38 #x0000000000000003))
(assert (= temp10893_39 temp10893_38))
(assert (= temp10893_40 (select ARGNAME_padding_NAMEEND_VAL temp10893_39)))
(assert (= temp10893_41 #x0000000000000000))
(assert (= temp10893_42 #x0000000000000004))
(assert (= temp10893_43 temp10893_42))
(assert (= temp10893_44 (select ARGNAME_padding_NAMEEND_VAL temp10893_43)))
(assert (= temp10893_45 #x0000000000000000))
(assert (= temp10893_46 #x0000000000000005))
(assert (= temp10893_47 temp10893_46))
(assert (= temp10893_48 (select ARGNAME_padding_NAMEEND_VAL temp10893_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10893_28 temp10893_25)
             (bvslt temp10893_32 temp10893_29)
             (bvslt temp10893_36 temp10893_33)
             (bvslt temp10893_40 temp10893_37)
             (bvslt temp10893_44 temp10893_41)
             (bvslt temp10893_48 temp10893_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10893_49 #x0000000000000000))
(assert (= var1191714 temp10893_49))
(assert (= temp10893_50 #x0000000000000000))
(assert (= temp10893_51 temp10893_50))
(assert (= temp10893_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10893_51)))
(assert (= temp10893_53 #x0000000000000001))
(assert (= temp10893_54 temp10893_53))
(assert (= temp10893_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10893_54)))
(assert (= temp10893_56 #x0000000000000002))
(assert (= temp10893_57 temp10893_56))
(assert (= temp10893_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10893_57)))
(assert (= temp10893_59 #x0000000000000003))
(assert (= temp10893_60 temp10893_59))
(assert (= temp10893_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10893_60)))
(assert (= temp10893_62 #x0000000000000004))
(assert (= temp10893_63 temp10893_62))
(assert (= temp10893_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10893_63)))
(assert (= temp10893_65 #x0000000000000005))
(assert (= temp10893_66 temp10893_65))
(assert (= temp10893_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10893_66)))
(assert (= temp10893_68 #x0000000000000000))
(assert (= temp10893_69 #x0000000000000000))
(assert (= temp10893_70 temp10893_69))
(assert (= temp10893_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10893_70)))
(assert (= temp10893_72 #x0000000000000000))
(assert (= temp10893_73 #x0000000000000001))
(assert (= temp10893_74 temp10893_73))
(assert (= temp10893_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10893_74)))
(assert (= temp10893_76 #x0000000000000000))
(assert (= temp10893_77 #x0000000000000002))
(assert (= temp10893_78 temp10893_77))
(assert (= temp10893_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10893_78)))
(assert (= temp10893_80 #x0000000000000000))
(assert (= temp10893_81 #x0000000000000003))
(assert (= temp10893_82 temp10893_81))
(assert (= temp10893_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10893_82)))
(assert (= temp10893_84 #x0000000000000000))
(assert (= temp10893_85 #x0000000000000004))
(assert (= temp10893_86 temp10893_85))
(assert (= temp10893_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10893_86)))
(assert (= temp10893_88 #x0000000000000000))
(assert (= temp10893_89 #x0000000000000005))
(assert (= temp10893_90 temp10893_89))
(assert (= temp10893_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10893_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10893_71 temp10893_68)
             (bvslt temp10893_75 temp10893_72)
             (bvslt temp10893_79 temp10893_76)
             (bvslt temp10893_83 temp10893_80)
             (bvslt temp10893_87 temp10893_84)
             (bvslt temp10893_91 temp10893_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10893_92 #x0000000000000000))
(assert (= var1191725 temp10893_92))
(assert (= temp10893_93 #x0000000000000000))
(assert (= temp10893_94 temp10893_93))
(assert (= temp10893_95 (select ARGNAME_stride_NAMEEND_VAL temp10893_94)))
(assert (= temp10893_96 #x0000000000000001))
(assert (= temp10893_97 temp10893_96))
(assert (= temp10893_98 (select ARGNAME_stride_NAMEEND_VAL temp10893_97)))
(assert (= temp10893_99 #x0000000000000002))
(assert (= temp10893_100 temp10893_99))
(assert (= temp10893_101 (select ARGNAME_stride_NAMEEND_VAL temp10893_100)))
(assert (= temp10893_102 #x0000000000000003))
(assert (= temp10893_103 temp10893_102))
(assert (= temp10893_104 (select ARGNAME_stride_NAMEEND_VAL temp10893_103)))
(assert (= temp10893_105 #x0000000000000004))
(assert (= temp10893_106 temp10893_105))
(assert (= temp10893_107 (select ARGNAME_stride_NAMEEND_VAL temp10893_106)))
(assert (= temp10893_108 #x0000000000000005))
(assert (= temp10893_109 temp10893_108))
(assert (= temp10893_110 (select ARGNAME_stride_NAMEEND_VAL temp10893_109)))
(assert (= temp10893_111 #x0000000000000000))
(assert (= temp10893_112 #x0000000000000000))
(assert (= temp10893_113 temp10893_112))
(assert (= temp10893_114 (select ARGNAME_stride_NAMEEND_VAL temp10893_113)))
(assert (= temp10893_115 #x0000000000000000))
(assert (= temp10893_116 #x0000000000000001))
(assert (= temp10893_117 temp10893_116))
(assert (= temp10893_118 (select ARGNAME_stride_NAMEEND_VAL temp10893_117)))
(assert (= temp10893_119 #x0000000000000000))
(assert (= temp10893_120 #x0000000000000002))
(assert (= temp10893_121 temp10893_120))
(assert (= temp10893_122 (select ARGNAME_stride_NAMEEND_VAL temp10893_121)))
(assert (= temp10893_123 #x0000000000000000))
(assert (= temp10893_124 #x0000000000000003))
(assert (= temp10893_125 temp10893_124))
(assert (= temp10893_126 (select ARGNAME_stride_NAMEEND_VAL temp10893_125)))
(assert (= temp10893_127 #x0000000000000000))
(assert (= temp10893_128 #x0000000000000004))
(assert (= temp10893_129 temp10893_128))
(assert (= temp10893_130 (select ARGNAME_stride_NAMEEND_VAL temp10893_129)))
(assert (= temp10893_131 #x0000000000000000))
(assert (= temp10893_132 #x0000000000000005))
(assert (= temp10893_133 temp10893_132))
(assert (= temp10893_134 (select ARGNAME_stride_NAMEEND_VAL temp10893_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10893_114 temp10893_111)
             (bvsle temp10893_118 temp10893_115)
             (bvsle temp10893_122 temp10893_119)
             (bvsle temp10893_126 temp10893_123)
             (bvsle temp10893_130 temp10893_127)
             (bvsle temp10893_134 temp10893_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10893_135 #x0000000000000000))
(assert (= var1191735 temp10893_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10893_136 #x0000000000000001))
(assert (= var1191747 temp10893_136))
(assert (= temp10893_137 #x0000000000000000))
(assert (= var1179826 temp10893_137))
(assert (= temp10893_138 #x0000000000000000))
(assert (= temp10893_139 temp10893_138))
(assert (= temp10893_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10893_139)))
(assert (= temp10893_141 #x0000000000000001))
(assert (= temp10893_142 temp10893_141))
(assert (= temp10893_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10893_142)))
(assert (= temp10893_144 #x0000000000000002))
(assert (= temp10893_145 temp10893_144))
(assert (= temp10893_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10893_145)))
(assert (= temp10893_147 #x0000000000000003))
(assert (= temp10893_148 temp10893_147))
(assert (= temp10893_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10893_148)))
(assert (= temp10893_150 #x0000000000000004))
(assert (= temp10893_151 temp10893_150))
(assert (= temp10893_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10893_151)))
(assert (= temp10893_153 #x0000000000000005))
(assert (= temp10893_154 temp10893_153))
(assert (= temp10893_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10893_154)))
(assert (= temp10893_157 var1179826))
(assert (= temp10893_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10893_157)))
(assert (= temp10893_156 temp10893_158))
(assert (= var1191780
   (ite (bvslt temp10893_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10893_159 #x0000000000000000))
(assert (= var1191780 temp10893_159))
(assert (= temp10893_160 #x0000000000000000))
(assert (= var1179826 temp10893_160))
(assert (= temp10893_162 var1179826))
(assert (= temp10893_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10893_162)))
(assert (= temp10893_161 temp10893_163))
(assert (= var1191802 (bvsmod temp10893_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10893_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10893_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10893_165 #x0000000000000001))
(assert (= var1191803 temp10893_165))
(assert (= temp10893_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10893_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10893_167 #x0000000000000001))
(assert (= var1191823 temp10893_167))
(assert (= temp10893_168 #x0000000000000001))
(assert (= var1180714 temp10893_168))
(assert (= temp10893_169 #x0000000000000000))
(assert (= temp10893_170 temp10893_169))
(assert (= temp10893_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10893_170)))
(assert (= temp10893_172 #x0000000000000001))
(assert (= temp10893_173 temp10893_172))
(assert (= temp10893_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10893_173)))
(assert (= temp10893_175 #x0000000000000002))
(assert (= temp10893_176 temp10893_175))
(assert (= temp10893_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10893_176)))
(assert (= temp10893_178 #x0000000000000003))
(assert (= temp10893_179 temp10893_178))
(assert (= temp10893_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10893_179)))
(assert (= temp10893_181 #x0000000000000004))
(assert (= temp10893_182 temp10893_181))
(assert (= temp10893_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10893_182)))
(assert (= temp10893_184 #x0000000000000005))
(assert (= temp10893_185 temp10893_184))
(assert (= temp10893_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10893_185)))
(assert (= temp10893_187 #x0000000000000000))
(assert (= temp10893_188
   (ite (bvslt var1180714 temp10893_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10893_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10893_188)))
(assert (= var1191831 temp10893_189))
(assert (bvslt (ite (bvslt var1180714 temp10893_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10893_190 #x0000000000000001))
(assert (= var1180714 temp10893_190))
(assert (= temp10893_192 var1180714))
(assert (= temp10893_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10893_192)))
(assert (= temp10893_191 temp10893_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10893_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10893_194 #x0000000000000001))
(assert (= var1191836 temp10893_194))
(assert (= temp10893_195 #x0000000000000000))
(assert (= var1179826 temp10893_195))
(assert (= temp10893_197 var1179826))
(assert (= temp10893_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10893_197)))
(assert (= temp10893_196 temp10893_198))
(assert (= temp10893_199 #x0000000000000002))
(assert (= var1586025 temp10893_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10893_200 #x0000000000000001))
(assert (= var1191993 temp10893_200))
(assert (= temp10893_201 #x0000000000000001))
(assert (= var2700303 temp10893_201))
(assert (= temp10893_202 #x0000000000000001))
(assert (= var2962447 temp10893_202))
(assert (= temp10893_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10893_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10893_204 #x0000000000000001))
(assert (= var211058 temp10893_204))
(assert (= temp10893_205 #x0000000000000001))
(assert (= var211188 temp10893_205))
(assert (= var3879401 var211188))
(assert (= temp10893_206 #x0000000000000000))
(assert (= var3866802 temp10893_206))
(assert (= temp10893_207 #x0000000000000000))
(assert (= temp10893_208
   (ite (bvslt var3866802 temp10893_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10893_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10893_208)))
(assert (= var3879420 temp10893_209))
(assert (bvslt (ite (bvslt var3866802 temp10893_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10893_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10893_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10893_211 #x0000000000000000))
(assert (= var3879421 temp10893_211))
(assert (= temp10893_212 #x0000000000000001))
(assert (= var3867690 temp10893_212))
(assert (= temp10893_213 #x0000000000000000))
(assert (= temp10893_214
   (ite (bvslt var3867690 temp10893_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10893_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10893_214)))
(assert (= var3879423 temp10893_215))
(assert (bvslt (ite (bvslt var3867690 temp10893_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10893_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10893_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10893_217 #x0000000000000001))
(assert (= var3879424 temp10893_217))
(assert (= temp10893_218 #x0000000000000000))
(assert (= var4133117 temp10893_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10893_219 #x0000000000000002))
(assert (= var4339331 temp10893_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10893_220 #x0000000000000000))
(assert (= var4404892 temp10893_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10893_221 #x0000000000000001))
(assert (= var211058 temp10893_221))
(model-add temp10893_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10893_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10893_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10893_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




