(declare-fun temp10829_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10829_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10829_3 () (_ BitVec 64))
(declare-fun temp10829_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10829_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10829_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10829_7 () (_ BitVec 64))
(declare-fun temp10829_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10829_9 () (_ BitVec 64))
(declare-fun temp10829_10 () (_ BitVec 64))
(declare-fun temp10829_11 () (_ BitVec 64))
(declare-fun temp10829_12 () (_ BitVec 64))
(declare-fun temp10829_13 () (_ BitVec 64))
(declare-fun temp10829_14 () (_ BitVec 64))
(declare-fun temp10829_15 () (_ BitVec 64))
(declare-fun temp10829_16 () (_ BitVec 64))
(declare-fun temp10829_17 () (_ BitVec 64))
(declare-fun temp10829_18 () (_ BitVec 64))
(declare-fun temp10829_19 () (_ BitVec 64))
(declare-fun temp10829_20 () (_ BitVec 64))
(declare-fun temp10829_21 () (_ BitVec 64))
(declare-fun temp10829_22 () (_ BitVec 64))
(declare-fun temp10829_23 () (_ BitVec 64))
(declare-fun temp10829_24 () (_ BitVec 64))
(declare-fun temp10829_25 () (_ BitVec 64))
(declare-fun temp10829_26 () (_ BitVec 64))
(declare-fun temp10829_27 () (_ BitVec 64))
(declare-fun temp10829_28 () (_ BitVec 64))
(declare-fun temp10829_29 () (_ BitVec 64))
(declare-fun temp10829_30 () (_ BitVec 64))
(declare-fun temp10829_31 () (_ BitVec 64))
(declare-fun temp10829_32 () (_ BitVec 64))
(declare-fun temp10829_33 () (_ BitVec 64))
(declare-fun temp10829_34 () (_ BitVec 64))
(declare-fun temp10829_35 () (_ BitVec 64))
(declare-fun temp10829_36 () (_ BitVec 64))
(declare-fun temp10829_37 () (_ BitVec 64))
(declare-fun temp10829_38 () (_ BitVec 64))
(declare-fun temp10829_39 () (_ BitVec 64))
(declare-fun temp10829_40 () (_ BitVec 64))
(declare-fun temp10829_41 () (_ BitVec 64))
(declare-fun temp10829_42 () (_ BitVec 64))
(declare-fun temp10829_43 () (_ BitVec 64))
(declare-fun temp10829_44 () (_ BitVec 64))
(declare-fun temp10829_45 () (_ BitVec 64))
(declare-fun temp10829_46 () (_ BitVec 64))
(declare-fun temp10829_47 () (_ BitVec 64))
(declare-fun temp10829_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10829_49 () (_ BitVec 64))
(declare-fun temp10829_50 () (_ BitVec 64))
(declare-fun temp10829_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10829_52 () (_ BitVec 64))
(declare-fun temp10829_53 () (_ BitVec 64))
(declare-fun temp10829_54 () (_ BitVec 64))
(declare-fun temp10829_55 () (_ BitVec 64))
(declare-fun temp10829_56 () (_ BitVec 64))
(declare-fun temp10829_57 () (_ BitVec 64))
(declare-fun temp10829_58 () (_ BitVec 64))
(declare-fun temp10829_59 () (_ BitVec 64))
(declare-fun temp10829_60 () (_ BitVec 64))
(declare-fun temp10829_61 () (_ BitVec 64))
(declare-fun temp10829_62 () (_ BitVec 64))
(declare-fun temp10829_63 () (_ BitVec 64))
(declare-fun temp10829_64 () (_ BitVec 64))
(declare-fun temp10829_65 () (_ BitVec 64))
(declare-fun temp10829_66 () (_ BitVec 64))
(declare-fun temp10829_67 () (_ BitVec 64))
(declare-fun temp10829_68 () (_ BitVec 64))
(declare-fun temp10829_69 () (_ BitVec 64))
(declare-fun temp10829_70 () (_ BitVec 64))
(declare-fun temp10829_71 () (_ BitVec 64))
(declare-fun temp10829_72 () (_ BitVec 64))
(declare-fun temp10829_73 () (_ BitVec 64))
(declare-fun temp10829_74 () (_ BitVec 64))
(declare-fun temp10829_75 () (_ BitVec 64))
(declare-fun temp10829_76 () (_ BitVec 64))
(declare-fun temp10829_77 () (_ BitVec 64))
(declare-fun temp10829_78 () (_ BitVec 64))
(declare-fun temp10829_79 () (_ BitVec 64))
(declare-fun temp10829_80 () (_ BitVec 64))
(declare-fun temp10829_81 () (_ BitVec 64))
(declare-fun temp10829_82 () (_ BitVec 64))
(declare-fun temp10829_83 () (_ BitVec 64))
(declare-fun temp10829_84 () (_ BitVec 64))
(declare-fun temp10829_85 () (_ BitVec 64))
(declare-fun temp10829_86 () (_ BitVec 64))
(declare-fun temp10829_87 () (_ BitVec 64))
(declare-fun temp10829_88 () (_ BitVec 64))
(declare-fun temp10829_89 () (_ BitVec 64))
(declare-fun temp10829_90 () (_ BitVec 64))
(declare-fun temp10829_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10829_92 () (_ BitVec 64))
(declare-fun temp10829_93 () (_ BitVec 64))
(declare-fun temp10829_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10829_95 () (_ BitVec 64))
(declare-fun temp10829_96 () (_ BitVec 64))
(declare-fun temp10829_97 () (_ BitVec 64))
(declare-fun temp10829_98 () (_ BitVec 64))
(declare-fun temp10829_99 () (_ BitVec 64))
(declare-fun temp10829_100 () (_ BitVec 64))
(declare-fun temp10829_101 () (_ BitVec 64))
(declare-fun temp10829_102 () (_ BitVec 64))
(declare-fun temp10829_103 () (_ BitVec 64))
(declare-fun temp10829_104 () (_ BitVec 64))
(declare-fun temp10829_105 () (_ BitVec 64))
(declare-fun temp10829_106 () (_ BitVec 64))
(declare-fun temp10829_107 () (_ BitVec 64))
(declare-fun temp10829_108 () (_ BitVec 64))
(declare-fun temp10829_109 () (_ BitVec 64))
(declare-fun temp10829_110 () (_ BitVec 64))
(declare-fun temp10829_111 () (_ BitVec 64))
(declare-fun temp10829_112 () (_ BitVec 64))
(declare-fun temp10829_113 () (_ BitVec 64))
(declare-fun temp10829_114 () (_ BitVec 64))
(declare-fun temp10829_115 () (_ BitVec 64))
(declare-fun temp10829_116 () (_ BitVec 64))
(declare-fun temp10829_117 () (_ BitVec 64))
(declare-fun temp10829_118 () (_ BitVec 64))
(declare-fun temp10829_119 () (_ BitVec 64))
(declare-fun temp10829_120 () (_ BitVec 64))
(declare-fun temp10829_121 () (_ BitVec 64))
(declare-fun temp10829_122 () (_ BitVec 64))
(declare-fun temp10829_123 () (_ BitVec 64))
(declare-fun temp10829_124 () (_ BitVec 64))
(declare-fun temp10829_125 () (_ BitVec 64))
(declare-fun temp10829_126 () (_ BitVec 64))
(declare-fun temp10829_127 () (_ BitVec 64))
(declare-fun temp10829_128 () (_ BitVec 64))
(declare-fun temp10829_129 () (_ BitVec 64))
(declare-fun temp10829_130 () (_ BitVec 64))
(declare-fun temp10829_131 () (_ BitVec 64))
(declare-fun temp10829_132 () (_ BitVec 64))
(declare-fun temp10829_133 () (_ BitVec 64))
(declare-fun temp10829_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10829_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10829_136 () (_ BitVec 64))
(declare-fun temp10829_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10829_138 () (_ BitVec 64))
(declare-fun temp10829_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10829_140 () (_ BitVec 64))
(declare-fun temp10829_141 () (_ BitVec 64))
(declare-fun temp10829_142 () (_ BitVec 64))
(declare-fun temp10829_143 () (_ BitVec 64))
(declare-fun temp10829_144 () (_ BitVec 64))
(declare-fun temp10829_145 () (_ BitVec 64))
(declare-fun temp10829_146 () (_ BitVec 64))
(declare-fun temp10829_147 () (_ BitVec 64))
(declare-fun temp10829_148 () (_ BitVec 64))
(declare-fun temp10829_149 () (_ BitVec 64))
(declare-fun temp10829_150 () (_ BitVec 64))
(declare-fun temp10829_151 () (_ BitVec 64))
(declare-fun temp10829_152 () (_ BitVec 64))
(declare-fun temp10829_153 () (_ BitVec 64))
(declare-fun temp10829_154 () (_ BitVec 64))
(declare-fun temp10829_155 () (_ BitVec 64))
(declare-fun temp10829_157 () (_ BitVec 64))
(declare-fun temp10829_158 () (_ BitVec 64))
(declare-fun temp10829_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10829_159 () (_ BitVec 64))
(declare-fun temp10829_160 () (_ BitVec 64))
(declare-fun temp10829_162 () (_ BitVec 64))
(declare-fun temp10829_163 () (_ BitVec 64))
(declare-fun temp10829_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10829_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10829_165 () (_ BitVec 64))
(declare-fun temp10829_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10829_167 () (_ BitVec 64))
(declare-fun temp10829_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10829_169 () (_ BitVec 64))
(declare-fun temp10829_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10829_171 () (_ BitVec 64))
(declare-fun temp10829_172 () (_ BitVec 64))
(declare-fun temp10829_173 () (_ BitVec 64))
(declare-fun temp10829_174 () (_ BitVec 64))
(declare-fun temp10829_175 () (_ BitVec 64))
(declare-fun temp10829_176 () (_ BitVec 64))
(declare-fun temp10829_177 () (_ BitVec 64))
(declare-fun temp10829_178 () (_ BitVec 64))
(declare-fun temp10829_179 () (_ BitVec 64))
(declare-fun temp10829_180 () (_ BitVec 64))
(declare-fun temp10829_181 () (_ BitVec 64))
(declare-fun temp10829_182 () (_ BitVec 64))
(declare-fun temp10829_183 () (_ BitVec 64))
(declare-fun temp10829_184 () (_ BitVec 64))
(declare-fun temp10829_185 () (_ BitVec 64))
(declare-fun temp10829_186 () (_ BitVec 64))
(declare-fun temp10829_187 () (_ BitVec 64))
(declare-fun temp10829_188 () (_ BitVec 64))
(declare-fun temp10829_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10829_190 () (_ BitVec 64))
(declare-fun temp10829_192 () (_ BitVec 64))
(declare-fun temp10829_193 () (_ BitVec 64))
(declare-fun temp10829_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10829_194 () (_ BitVec 64))
(declare-fun temp10829_195 () (_ BitVec 64))
(declare-fun temp10829_197 () (_ BitVec 64))
(declare-fun temp10829_198 () (_ BitVec 64))
(declare-fun temp10829_196 () (_ BitVec 64))
(declare-fun temp10829_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10829_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10829_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10829_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10829_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10829_204 () (_ BitVec 64))
(declare-fun temp10829_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10829_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10829_207 () (_ BitVec 64))
(declare-fun temp10829_208 () (_ BitVec 64))
(declare-fun temp10829_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10829_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10829_211 () (_ BitVec 64))
(declare-fun temp10829_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10829_213 () (_ BitVec 64))
(declare-fun temp10829_214 () (_ BitVec 64))
(declare-fun temp10829_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10829_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10829_217 () (_ BitVec 64))
(declare-fun temp10829_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10829_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10829_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var5255568 () (_ BitVec 64))
(declare-fun temp10829_221 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp10829_222 () (_ BitVec 64))
(assert (= temp10829_1 #x0000000000000001))
(assert (= var77203 temp10829_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10829_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10829_2)))
(assert (= temp10829_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10829_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10829_4 #x0000000000000000))
(assert (= var210941 temp10829_4))
(assert (= temp10829_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10829_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10829_6 #x0000000000000000))
(assert (= var210986 temp10829_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10829_7 #x0000000000000000))
(assert (= temp10829_8 temp10829_7))
(assert (= temp10829_9 (select ARGNAME_padding_NAMEEND_VAL temp10829_8)))
(assert (= temp10829_10 #x0000000000000001))
(assert (= temp10829_11 temp10829_10))
(assert (= temp10829_12 (select ARGNAME_padding_NAMEEND_VAL temp10829_11)))
(assert (= temp10829_13 #x0000000000000002))
(assert (= temp10829_14 temp10829_13))
(assert (= temp10829_15 (select ARGNAME_padding_NAMEEND_VAL temp10829_14)))
(assert (= temp10829_16 #x0000000000000003))
(assert (= temp10829_17 temp10829_16))
(assert (= temp10829_18 (select ARGNAME_padding_NAMEEND_VAL temp10829_17)))
(assert (= temp10829_19 #x0000000000000004))
(assert (= temp10829_20 temp10829_19))
(assert (= temp10829_21 (select ARGNAME_padding_NAMEEND_VAL temp10829_20)))
(assert (= temp10829_22 #x0000000000000005))
(assert (= temp10829_23 temp10829_22))
(assert (= temp10829_24 (select ARGNAME_padding_NAMEEND_VAL temp10829_23)))
(assert (= temp10829_25 #x0000000000000000))
(assert (= temp10829_26 #x0000000000000000))
(assert (= temp10829_27 temp10829_26))
(assert (= temp10829_28 (select ARGNAME_padding_NAMEEND_VAL temp10829_27)))
(assert (= temp10829_29 #x0000000000000000))
(assert (= temp10829_30 #x0000000000000001))
(assert (= temp10829_31 temp10829_30))
(assert (= temp10829_32 (select ARGNAME_padding_NAMEEND_VAL temp10829_31)))
(assert (= temp10829_33 #x0000000000000000))
(assert (= temp10829_34 #x0000000000000002))
(assert (= temp10829_35 temp10829_34))
(assert (= temp10829_36 (select ARGNAME_padding_NAMEEND_VAL temp10829_35)))
(assert (= temp10829_37 #x0000000000000000))
(assert (= temp10829_38 #x0000000000000003))
(assert (= temp10829_39 temp10829_38))
(assert (= temp10829_40 (select ARGNAME_padding_NAMEEND_VAL temp10829_39)))
(assert (= temp10829_41 #x0000000000000000))
(assert (= temp10829_42 #x0000000000000004))
(assert (= temp10829_43 temp10829_42))
(assert (= temp10829_44 (select ARGNAME_padding_NAMEEND_VAL temp10829_43)))
(assert (= temp10829_45 #x0000000000000000))
(assert (= temp10829_46 #x0000000000000005))
(assert (= temp10829_47 temp10829_46))
(assert (= temp10829_48 (select ARGNAME_padding_NAMEEND_VAL temp10829_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10829_28 temp10829_25)
             (bvslt temp10829_32 temp10829_29)
             (bvslt temp10829_36 temp10829_33)
             (bvslt temp10829_40 temp10829_37)
             (bvslt temp10829_44 temp10829_41)
             (bvslt temp10829_48 temp10829_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10829_49 #x0000000000000000))
(assert (= var1191714 temp10829_49))
(assert (= temp10829_50 #x0000000000000000))
(assert (= temp10829_51 temp10829_50))
(assert (= temp10829_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10829_51)))
(assert (= temp10829_53 #x0000000000000001))
(assert (= temp10829_54 temp10829_53))
(assert (= temp10829_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10829_54)))
(assert (= temp10829_56 #x0000000000000002))
(assert (= temp10829_57 temp10829_56))
(assert (= temp10829_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10829_57)))
(assert (= temp10829_59 #x0000000000000003))
(assert (= temp10829_60 temp10829_59))
(assert (= temp10829_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10829_60)))
(assert (= temp10829_62 #x0000000000000004))
(assert (= temp10829_63 temp10829_62))
(assert (= temp10829_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10829_63)))
(assert (= temp10829_65 #x0000000000000005))
(assert (= temp10829_66 temp10829_65))
(assert (= temp10829_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10829_66)))
(assert (= temp10829_68 #x0000000000000000))
(assert (= temp10829_69 #x0000000000000000))
(assert (= temp10829_70 temp10829_69))
(assert (= temp10829_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10829_70)))
(assert (= temp10829_72 #x0000000000000000))
(assert (= temp10829_73 #x0000000000000001))
(assert (= temp10829_74 temp10829_73))
(assert (= temp10829_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10829_74)))
(assert (= temp10829_76 #x0000000000000000))
(assert (= temp10829_77 #x0000000000000002))
(assert (= temp10829_78 temp10829_77))
(assert (= temp10829_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10829_78)))
(assert (= temp10829_80 #x0000000000000000))
(assert (= temp10829_81 #x0000000000000003))
(assert (= temp10829_82 temp10829_81))
(assert (= temp10829_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10829_82)))
(assert (= temp10829_84 #x0000000000000000))
(assert (= temp10829_85 #x0000000000000004))
(assert (= temp10829_86 temp10829_85))
(assert (= temp10829_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10829_86)))
(assert (= temp10829_88 #x0000000000000000))
(assert (= temp10829_89 #x0000000000000005))
(assert (= temp10829_90 temp10829_89))
(assert (= temp10829_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10829_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10829_71 temp10829_68)
             (bvslt temp10829_75 temp10829_72)
             (bvslt temp10829_79 temp10829_76)
             (bvslt temp10829_83 temp10829_80)
             (bvslt temp10829_87 temp10829_84)
             (bvslt temp10829_91 temp10829_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10829_92 #x0000000000000000))
(assert (= var1191725 temp10829_92))
(assert (= temp10829_93 #x0000000000000000))
(assert (= temp10829_94 temp10829_93))
(assert (= temp10829_95 (select ARGNAME_stride_NAMEEND_VAL temp10829_94)))
(assert (= temp10829_96 #x0000000000000001))
(assert (= temp10829_97 temp10829_96))
(assert (= temp10829_98 (select ARGNAME_stride_NAMEEND_VAL temp10829_97)))
(assert (= temp10829_99 #x0000000000000002))
(assert (= temp10829_100 temp10829_99))
(assert (= temp10829_101 (select ARGNAME_stride_NAMEEND_VAL temp10829_100)))
(assert (= temp10829_102 #x0000000000000003))
(assert (= temp10829_103 temp10829_102))
(assert (= temp10829_104 (select ARGNAME_stride_NAMEEND_VAL temp10829_103)))
(assert (= temp10829_105 #x0000000000000004))
(assert (= temp10829_106 temp10829_105))
(assert (= temp10829_107 (select ARGNAME_stride_NAMEEND_VAL temp10829_106)))
(assert (= temp10829_108 #x0000000000000005))
(assert (= temp10829_109 temp10829_108))
(assert (= temp10829_110 (select ARGNAME_stride_NAMEEND_VAL temp10829_109)))
(assert (= temp10829_111 #x0000000000000000))
(assert (= temp10829_112 #x0000000000000000))
(assert (= temp10829_113 temp10829_112))
(assert (= temp10829_114 (select ARGNAME_stride_NAMEEND_VAL temp10829_113)))
(assert (= temp10829_115 #x0000000000000000))
(assert (= temp10829_116 #x0000000000000001))
(assert (= temp10829_117 temp10829_116))
(assert (= temp10829_118 (select ARGNAME_stride_NAMEEND_VAL temp10829_117)))
(assert (= temp10829_119 #x0000000000000000))
(assert (= temp10829_120 #x0000000000000002))
(assert (= temp10829_121 temp10829_120))
(assert (= temp10829_122 (select ARGNAME_stride_NAMEEND_VAL temp10829_121)))
(assert (= temp10829_123 #x0000000000000000))
(assert (= temp10829_124 #x0000000000000003))
(assert (= temp10829_125 temp10829_124))
(assert (= temp10829_126 (select ARGNAME_stride_NAMEEND_VAL temp10829_125)))
(assert (= temp10829_127 #x0000000000000000))
(assert (= temp10829_128 #x0000000000000004))
(assert (= temp10829_129 temp10829_128))
(assert (= temp10829_130 (select ARGNAME_stride_NAMEEND_VAL temp10829_129)))
(assert (= temp10829_131 #x0000000000000000))
(assert (= temp10829_132 #x0000000000000005))
(assert (= temp10829_133 temp10829_132))
(assert (= temp10829_134 (select ARGNAME_stride_NAMEEND_VAL temp10829_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10829_114 temp10829_111)
             (bvsle temp10829_118 temp10829_115)
             (bvsle temp10829_122 temp10829_119)
             (bvsle temp10829_126 temp10829_123)
             (bvsle temp10829_130 temp10829_127)
             (bvsle temp10829_134 temp10829_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10829_135 #x0000000000000000))
(assert (= var1191735 temp10829_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10829_136 #x0000000000000001))
(assert (= var1191747 temp10829_136))
(assert (= temp10829_137 #x0000000000000000))
(assert (= var1179826 temp10829_137))
(assert (= temp10829_138 #x0000000000000000))
(assert (= temp10829_139 temp10829_138))
(assert (= temp10829_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10829_139)))
(assert (= temp10829_141 #x0000000000000001))
(assert (= temp10829_142 temp10829_141))
(assert (= temp10829_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10829_142)))
(assert (= temp10829_144 #x0000000000000002))
(assert (= temp10829_145 temp10829_144))
(assert (= temp10829_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10829_145)))
(assert (= temp10829_147 #x0000000000000003))
(assert (= temp10829_148 temp10829_147))
(assert (= temp10829_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10829_148)))
(assert (= temp10829_150 #x0000000000000004))
(assert (= temp10829_151 temp10829_150))
(assert (= temp10829_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10829_151)))
(assert (= temp10829_153 #x0000000000000005))
(assert (= temp10829_154 temp10829_153))
(assert (= temp10829_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10829_154)))
(assert (= temp10829_157 var1179826))
(assert (= temp10829_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10829_157)))
(assert (= temp10829_156 temp10829_158))
(assert (= var1191780
   (ite (bvslt temp10829_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10829_159 #x0000000000000000))
(assert (= var1191780 temp10829_159))
(assert (= temp10829_160 #x0000000000000000))
(assert (= var1179826 temp10829_160))
(assert (= temp10829_162 var1179826))
(assert (= temp10829_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10829_162)))
(assert (= temp10829_161 temp10829_163))
(assert (= var1191802 (bvsmod temp10829_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10829_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10829_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10829_165 #x0000000000000001))
(assert (= var1191803 temp10829_165))
(assert (= temp10829_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10829_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10829_167 #x0000000000000001))
(assert (= var1191823 temp10829_167))
(assert (= temp10829_168 #x0000000000000001))
(assert (= var1180714 temp10829_168))
(assert (= temp10829_169 #x0000000000000000))
(assert (= temp10829_170 temp10829_169))
(assert (= temp10829_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10829_170)))
(assert (= temp10829_172 #x0000000000000001))
(assert (= temp10829_173 temp10829_172))
(assert (= temp10829_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10829_173)))
(assert (= temp10829_175 #x0000000000000002))
(assert (= temp10829_176 temp10829_175))
(assert (= temp10829_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10829_176)))
(assert (= temp10829_178 #x0000000000000003))
(assert (= temp10829_179 temp10829_178))
(assert (= temp10829_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10829_179)))
(assert (= temp10829_181 #x0000000000000004))
(assert (= temp10829_182 temp10829_181))
(assert (= temp10829_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10829_182)))
(assert (= temp10829_184 #x0000000000000005))
(assert (= temp10829_185 temp10829_184))
(assert (= temp10829_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10829_185)))
(assert (= temp10829_187 #x0000000000000000))
(assert (= temp10829_188
   (ite (bvslt var1180714 temp10829_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10829_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10829_188)))
(assert (= var1191831 temp10829_189))
(assert (bvslt (ite (bvslt var1180714 temp10829_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10829_190 #x0000000000000001))
(assert (= var1180714 temp10829_190))
(assert (= temp10829_192 var1180714))
(assert (= temp10829_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10829_192)))
(assert (= temp10829_191 temp10829_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10829_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10829_194 #x0000000000000001))
(assert (= var1191836 temp10829_194))
(assert (= temp10829_195 #x0000000000000000))
(assert (= var1179826 temp10829_195))
(assert (= temp10829_197 var1179826))
(assert (= temp10829_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10829_197)))
(assert (= temp10829_196 temp10829_198))
(assert (= temp10829_199 #x0000000000000002))
(assert (= var1586025 temp10829_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10829_200 #x0000000000000001))
(assert (= var1191993 temp10829_200))
(assert (= temp10829_201 #x0000000000000001))
(assert (= var2700303 temp10829_201))
(assert (= temp10829_202 #x0000000000000001))
(assert (= var2962447 temp10829_202))
(assert (= temp10829_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10829_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10829_204 #x0000000000000001))
(assert (= var211058 temp10829_204))
(assert (= temp10829_205 #x0000000000000001))
(assert (= var211188 temp10829_205))
(assert (= var3879401 var211188))
(assert (= temp10829_206 #x0000000000000000))
(assert (= var3866802 temp10829_206))
(assert (= temp10829_207 #x0000000000000000))
(assert (= temp10829_208
   (ite (bvslt var3866802 temp10829_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10829_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10829_208)))
(assert (= var3879420 temp10829_209))
(assert (bvslt (ite (bvslt var3866802 temp10829_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10829_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10829_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10829_211 #x0000000000000000))
(assert (= var3879421 temp10829_211))
(assert (= temp10829_212 #x0000000000000001))
(assert (= var3867690 temp10829_212))
(assert (= temp10829_213 #x0000000000000000))
(assert (= temp10829_214
   (ite (bvslt var3867690 temp10829_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10829_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10829_214)))
(assert (= var3879423 temp10829_215))
(assert (bvslt (ite (bvslt var3867690 temp10829_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10829_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10829_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10829_217 #x0000000000000001))
(assert (= var3879424 temp10829_217))
(assert (= temp10829_218 #x0000000000000000))
(assert (= var4133117 temp10829_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10829_219 #x0000000000000002))
(assert (= var4339331 temp10829_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10829_220 #x0000000000000000))
(assert (= var4404892 temp10829_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4993424 var211201))
(assert (= var5255568 var211201))
(assert (= temp10829_221 #x0000000000000000))
(assert (= var5583248 temp10829_221))
(assert (= temp10829_222 #x0000000000000001))
(assert (= var211058 temp10829_222))
(model-add temp10829_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10829_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10829_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10829_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



