(declare-fun temp10046_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10046_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10046_3 () (_ BitVec 64))
(declare-fun temp10046_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10046_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10046_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10046_7 () (_ BitVec 64))
(declare-fun temp10046_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10046_9 () (_ BitVec 64))
(declare-fun temp10046_10 () (_ BitVec 64))
(declare-fun temp10046_11 () (_ BitVec 64))
(declare-fun temp10046_12 () (_ BitVec 64))
(declare-fun temp10046_13 () (_ BitVec 64))
(declare-fun temp10046_14 () (_ BitVec 64))
(declare-fun temp10046_15 () (_ BitVec 64))
(declare-fun temp10046_16 () (_ BitVec 64))
(declare-fun temp10046_17 () (_ BitVec 64))
(declare-fun temp10046_18 () (_ BitVec 64))
(declare-fun temp10046_19 () (_ BitVec 64))
(declare-fun temp10046_20 () (_ BitVec 64))
(declare-fun temp10046_21 () (_ BitVec 64))
(declare-fun temp10046_22 () (_ BitVec 64))
(declare-fun temp10046_23 () (_ BitVec 64))
(declare-fun temp10046_24 () (_ BitVec 64))
(declare-fun temp10046_25 () (_ BitVec 64))
(declare-fun temp10046_26 () (_ BitVec 64))
(declare-fun temp10046_27 () (_ BitVec 64))
(declare-fun temp10046_28 () (_ BitVec 64))
(declare-fun temp10046_29 () (_ BitVec 64))
(declare-fun temp10046_30 () (_ BitVec 64))
(declare-fun temp10046_31 () (_ BitVec 64))
(declare-fun temp10046_32 () (_ BitVec 64))
(declare-fun temp10046_33 () (_ BitVec 64))
(declare-fun temp10046_34 () (_ BitVec 64))
(declare-fun temp10046_35 () (_ BitVec 64))
(declare-fun temp10046_36 () (_ BitVec 64))
(declare-fun temp10046_37 () (_ BitVec 64))
(declare-fun temp10046_38 () (_ BitVec 64))
(declare-fun temp10046_39 () (_ BitVec 64))
(declare-fun temp10046_40 () (_ BitVec 64))
(declare-fun temp10046_41 () (_ BitVec 64))
(declare-fun temp10046_42 () (_ BitVec 64))
(declare-fun temp10046_43 () (_ BitVec 64))
(declare-fun temp10046_44 () (_ BitVec 64))
(declare-fun temp10046_45 () (_ BitVec 64))
(declare-fun temp10046_46 () (_ BitVec 64))
(declare-fun temp10046_47 () (_ BitVec 64))
(declare-fun temp10046_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10046_49 () (_ BitVec 64))
(declare-fun temp10046_50 () (_ BitVec 64))
(declare-fun temp10046_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10046_52 () (_ BitVec 64))
(declare-fun temp10046_53 () (_ BitVec 64))
(declare-fun temp10046_54 () (_ BitVec 64))
(declare-fun temp10046_55 () (_ BitVec 64))
(declare-fun temp10046_56 () (_ BitVec 64))
(declare-fun temp10046_57 () (_ BitVec 64))
(declare-fun temp10046_58 () (_ BitVec 64))
(declare-fun temp10046_59 () (_ BitVec 64))
(declare-fun temp10046_60 () (_ BitVec 64))
(declare-fun temp10046_61 () (_ BitVec 64))
(declare-fun temp10046_62 () (_ BitVec 64))
(declare-fun temp10046_63 () (_ BitVec 64))
(declare-fun temp10046_64 () (_ BitVec 64))
(declare-fun temp10046_65 () (_ BitVec 64))
(declare-fun temp10046_66 () (_ BitVec 64))
(declare-fun temp10046_67 () (_ BitVec 64))
(declare-fun temp10046_68 () (_ BitVec 64))
(declare-fun temp10046_69 () (_ BitVec 64))
(declare-fun temp10046_70 () (_ BitVec 64))
(declare-fun temp10046_71 () (_ BitVec 64))
(declare-fun temp10046_72 () (_ BitVec 64))
(declare-fun temp10046_73 () (_ BitVec 64))
(declare-fun temp10046_74 () (_ BitVec 64))
(declare-fun temp10046_75 () (_ BitVec 64))
(declare-fun temp10046_76 () (_ BitVec 64))
(declare-fun temp10046_77 () (_ BitVec 64))
(declare-fun temp10046_78 () (_ BitVec 64))
(declare-fun temp10046_79 () (_ BitVec 64))
(declare-fun temp10046_80 () (_ BitVec 64))
(declare-fun temp10046_81 () (_ BitVec 64))
(declare-fun temp10046_82 () (_ BitVec 64))
(declare-fun temp10046_83 () (_ BitVec 64))
(declare-fun temp10046_84 () (_ BitVec 64))
(declare-fun temp10046_85 () (_ BitVec 64))
(declare-fun temp10046_86 () (_ BitVec 64))
(declare-fun temp10046_87 () (_ BitVec 64))
(declare-fun temp10046_88 () (_ BitVec 64))
(declare-fun temp10046_89 () (_ BitVec 64))
(declare-fun temp10046_90 () (_ BitVec 64))
(declare-fun temp10046_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10046_92 () (_ BitVec 64))
(declare-fun temp10046_93 () (_ BitVec 64))
(declare-fun temp10046_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10046_95 () (_ BitVec 64))
(declare-fun temp10046_96 () (_ BitVec 64))
(declare-fun temp10046_97 () (_ BitVec 64))
(declare-fun temp10046_98 () (_ BitVec 64))
(declare-fun temp10046_99 () (_ BitVec 64))
(declare-fun temp10046_100 () (_ BitVec 64))
(declare-fun temp10046_101 () (_ BitVec 64))
(declare-fun temp10046_102 () (_ BitVec 64))
(declare-fun temp10046_103 () (_ BitVec 64))
(declare-fun temp10046_104 () (_ BitVec 64))
(declare-fun temp10046_105 () (_ BitVec 64))
(declare-fun temp10046_106 () (_ BitVec 64))
(declare-fun temp10046_107 () (_ BitVec 64))
(declare-fun temp10046_108 () (_ BitVec 64))
(declare-fun temp10046_109 () (_ BitVec 64))
(declare-fun temp10046_110 () (_ BitVec 64))
(declare-fun temp10046_111 () (_ BitVec 64))
(declare-fun temp10046_112 () (_ BitVec 64))
(declare-fun temp10046_113 () (_ BitVec 64))
(declare-fun temp10046_114 () (_ BitVec 64))
(declare-fun temp10046_115 () (_ BitVec 64))
(declare-fun temp10046_116 () (_ BitVec 64))
(declare-fun temp10046_117 () (_ BitVec 64))
(declare-fun temp10046_118 () (_ BitVec 64))
(declare-fun temp10046_119 () (_ BitVec 64))
(declare-fun temp10046_120 () (_ BitVec 64))
(declare-fun temp10046_121 () (_ BitVec 64))
(declare-fun temp10046_122 () (_ BitVec 64))
(declare-fun temp10046_123 () (_ BitVec 64))
(declare-fun temp10046_124 () (_ BitVec 64))
(declare-fun temp10046_125 () (_ BitVec 64))
(declare-fun temp10046_126 () (_ BitVec 64))
(declare-fun temp10046_127 () (_ BitVec 64))
(declare-fun temp10046_128 () (_ BitVec 64))
(declare-fun temp10046_129 () (_ BitVec 64))
(declare-fun temp10046_130 () (_ BitVec 64))
(declare-fun temp10046_131 () (_ BitVec 64))
(declare-fun temp10046_132 () (_ BitVec 64))
(declare-fun temp10046_133 () (_ BitVec 64))
(declare-fun temp10046_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10046_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10046_136 () (_ BitVec 64))
(declare-fun temp10046_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10046_138 () (_ BitVec 64))
(declare-fun temp10046_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10046_140 () (_ BitVec 64))
(declare-fun temp10046_141 () (_ BitVec 64))
(declare-fun temp10046_142 () (_ BitVec 64))
(declare-fun temp10046_143 () (_ BitVec 64))
(declare-fun temp10046_144 () (_ BitVec 64))
(declare-fun temp10046_145 () (_ BitVec 64))
(declare-fun temp10046_146 () (_ BitVec 64))
(declare-fun temp10046_147 () (_ BitVec 64))
(declare-fun temp10046_148 () (_ BitVec 64))
(declare-fun temp10046_149 () (_ BitVec 64))
(declare-fun temp10046_150 () (_ BitVec 64))
(declare-fun temp10046_151 () (_ BitVec 64))
(declare-fun temp10046_152 () (_ BitVec 64))
(declare-fun temp10046_153 () (_ BitVec 64))
(declare-fun temp10046_154 () (_ BitVec 64))
(declare-fun temp10046_155 () (_ BitVec 64))
(declare-fun temp10046_157 () (_ BitVec 64))
(declare-fun temp10046_158 () (_ BitVec 64))
(declare-fun temp10046_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10046_159 () (_ BitVec 64))
(declare-fun temp10046_160 () (_ BitVec 64))
(declare-fun temp10046_162 () (_ BitVec 64))
(declare-fun temp10046_163 () (_ BitVec 64))
(declare-fun temp10046_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10046_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10046_165 () (_ BitVec 64))
(declare-fun temp10046_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10046_167 () (_ BitVec 64))
(declare-fun temp10046_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10046_169 () (_ BitVec 64))
(declare-fun temp10046_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10046_171 () (_ BitVec 64))
(declare-fun temp10046_172 () (_ BitVec 64))
(declare-fun temp10046_173 () (_ BitVec 64))
(declare-fun temp10046_174 () (_ BitVec 64))
(declare-fun temp10046_175 () (_ BitVec 64))
(declare-fun temp10046_176 () (_ BitVec 64))
(declare-fun temp10046_177 () (_ BitVec 64))
(declare-fun temp10046_178 () (_ BitVec 64))
(declare-fun temp10046_179 () (_ BitVec 64))
(declare-fun temp10046_180 () (_ BitVec 64))
(declare-fun temp10046_181 () (_ BitVec 64))
(declare-fun temp10046_182 () (_ BitVec 64))
(declare-fun temp10046_183 () (_ BitVec 64))
(declare-fun temp10046_184 () (_ BitVec 64))
(declare-fun temp10046_185 () (_ BitVec 64))
(declare-fun temp10046_186 () (_ BitVec 64))
(declare-fun temp10046_187 () (_ BitVec 64))
(declare-fun temp10046_188 () (_ BitVec 64))
(declare-fun temp10046_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10046_190 () (_ BitVec 64))
(declare-fun temp10046_192 () (_ BitVec 64))
(declare-fun temp10046_193 () (_ BitVec 64))
(declare-fun temp10046_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10046_194 () (_ BitVec 64))
(declare-fun temp10046_195 () (_ BitVec 64))
(declare-fun temp10046_197 () (_ BitVec 64))
(declare-fun temp10046_198 () (_ BitVec 64))
(declare-fun temp10046_196 () (_ BitVec 64))
(declare-fun temp10046_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10046_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10046_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10046_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10046_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10046_204 () (_ BitVec 64))
(declare-fun temp10046_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10046_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10046_207 () (_ BitVec 64))
(declare-fun temp10046_208 () (_ BitVec 64))
(declare-fun temp10046_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10046_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10046_211 () (_ BitVec 64))
(declare-fun temp10046_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10046_213 () (_ BitVec 64))
(declare-fun temp10046_214 () (_ BitVec 64))
(declare-fun temp10046_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10046_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10046_217 () (_ BitVec 64))
(declare-fun temp10046_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10046_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10046_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10046_222 () (_ BitVec 64))
(declare-fun temp10046_221 () (_ BitVec 64))
(declare-fun temp10046_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10046_224 () (_ BitVec 64))
(declare-fun temp10046_225 () (_ BitVec 64))
(declare-fun temp10046_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10046_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10046_228 () (_ BitVec 64))
(declare-fun temp10046_230 () (_ BitVec 64))
(declare-fun temp10046_229 () (_ BitVec 64))
(declare-fun temp10046_231 () (_ BitVec 64))
(assert (= temp10046_1 #x0000000000000001))
(assert (= var77203 temp10046_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10046_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10046_2)))
(assert (= temp10046_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10046_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10046_4 #x0000000000000000))
(assert (= var210941 temp10046_4))
(assert (= temp10046_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10046_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10046_6 #x0000000000000000))
(assert (= var210986 temp10046_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10046_7 #x0000000000000000))
(assert (= temp10046_8 temp10046_7))
(assert (= temp10046_9 (select ARGNAME_padding_NAMEEND_VAL temp10046_8)))
(assert (= temp10046_10 #x0000000000000001))
(assert (= temp10046_11 temp10046_10))
(assert (= temp10046_12 (select ARGNAME_padding_NAMEEND_VAL temp10046_11)))
(assert (= temp10046_13 #x0000000000000002))
(assert (= temp10046_14 temp10046_13))
(assert (= temp10046_15 (select ARGNAME_padding_NAMEEND_VAL temp10046_14)))
(assert (= temp10046_16 #x0000000000000003))
(assert (= temp10046_17 temp10046_16))
(assert (= temp10046_18 (select ARGNAME_padding_NAMEEND_VAL temp10046_17)))
(assert (= temp10046_19 #x0000000000000004))
(assert (= temp10046_20 temp10046_19))
(assert (= temp10046_21 (select ARGNAME_padding_NAMEEND_VAL temp10046_20)))
(assert (= temp10046_22 #x0000000000000005))
(assert (= temp10046_23 temp10046_22))
(assert (= temp10046_24 (select ARGNAME_padding_NAMEEND_VAL temp10046_23)))
(assert (= temp10046_25 #x0000000000000000))
(assert (= temp10046_26 #x0000000000000000))
(assert (= temp10046_27 temp10046_26))
(assert (= temp10046_28 (select ARGNAME_padding_NAMEEND_VAL temp10046_27)))
(assert (= temp10046_29 #x0000000000000000))
(assert (= temp10046_30 #x0000000000000001))
(assert (= temp10046_31 temp10046_30))
(assert (= temp10046_32 (select ARGNAME_padding_NAMEEND_VAL temp10046_31)))
(assert (= temp10046_33 #x0000000000000000))
(assert (= temp10046_34 #x0000000000000002))
(assert (= temp10046_35 temp10046_34))
(assert (= temp10046_36 (select ARGNAME_padding_NAMEEND_VAL temp10046_35)))
(assert (= temp10046_37 #x0000000000000000))
(assert (= temp10046_38 #x0000000000000003))
(assert (= temp10046_39 temp10046_38))
(assert (= temp10046_40 (select ARGNAME_padding_NAMEEND_VAL temp10046_39)))
(assert (= temp10046_41 #x0000000000000000))
(assert (= temp10046_42 #x0000000000000004))
(assert (= temp10046_43 temp10046_42))
(assert (= temp10046_44 (select ARGNAME_padding_NAMEEND_VAL temp10046_43)))
(assert (= temp10046_45 #x0000000000000000))
(assert (= temp10046_46 #x0000000000000005))
(assert (= temp10046_47 temp10046_46))
(assert (= temp10046_48 (select ARGNAME_padding_NAMEEND_VAL temp10046_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10046_28 temp10046_25)
             (bvslt temp10046_32 temp10046_29)
             (bvslt temp10046_36 temp10046_33)
             (bvslt temp10046_40 temp10046_37)
             (bvslt temp10046_44 temp10046_41)
             (bvslt temp10046_48 temp10046_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10046_49 #x0000000000000000))
(assert (= var1191714 temp10046_49))
(assert (= temp10046_50 #x0000000000000000))
(assert (= temp10046_51 temp10046_50))
(assert (= temp10046_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10046_51)))
(assert (= temp10046_53 #x0000000000000001))
(assert (= temp10046_54 temp10046_53))
(assert (= temp10046_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10046_54)))
(assert (= temp10046_56 #x0000000000000002))
(assert (= temp10046_57 temp10046_56))
(assert (= temp10046_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10046_57)))
(assert (= temp10046_59 #x0000000000000003))
(assert (= temp10046_60 temp10046_59))
(assert (= temp10046_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10046_60)))
(assert (= temp10046_62 #x0000000000000004))
(assert (= temp10046_63 temp10046_62))
(assert (= temp10046_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10046_63)))
(assert (= temp10046_65 #x0000000000000005))
(assert (= temp10046_66 temp10046_65))
(assert (= temp10046_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10046_66)))
(assert (= temp10046_68 #x0000000000000000))
(assert (= temp10046_69 #x0000000000000000))
(assert (= temp10046_70 temp10046_69))
(assert (= temp10046_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10046_70)))
(assert (= temp10046_72 #x0000000000000000))
(assert (= temp10046_73 #x0000000000000001))
(assert (= temp10046_74 temp10046_73))
(assert (= temp10046_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10046_74)))
(assert (= temp10046_76 #x0000000000000000))
(assert (= temp10046_77 #x0000000000000002))
(assert (= temp10046_78 temp10046_77))
(assert (= temp10046_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10046_78)))
(assert (= temp10046_80 #x0000000000000000))
(assert (= temp10046_81 #x0000000000000003))
(assert (= temp10046_82 temp10046_81))
(assert (= temp10046_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10046_82)))
(assert (= temp10046_84 #x0000000000000000))
(assert (= temp10046_85 #x0000000000000004))
(assert (= temp10046_86 temp10046_85))
(assert (= temp10046_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10046_86)))
(assert (= temp10046_88 #x0000000000000000))
(assert (= temp10046_89 #x0000000000000005))
(assert (= temp10046_90 temp10046_89))
(assert (= temp10046_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10046_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10046_71 temp10046_68)
             (bvslt temp10046_75 temp10046_72)
             (bvslt temp10046_79 temp10046_76)
             (bvslt temp10046_83 temp10046_80)
             (bvslt temp10046_87 temp10046_84)
             (bvslt temp10046_91 temp10046_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10046_92 #x0000000000000000))
(assert (= var1191725 temp10046_92))
(assert (= temp10046_93 #x0000000000000000))
(assert (= temp10046_94 temp10046_93))
(assert (= temp10046_95 (select ARGNAME_stride_NAMEEND_VAL temp10046_94)))
(assert (= temp10046_96 #x0000000000000001))
(assert (= temp10046_97 temp10046_96))
(assert (= temp10046_98 (select ARGNAME_stride_NAMEEND_VAL temp10046_97)))
(assert (= temp10046_99 #x0000000000000002))
(assert (= temp10046_100 temp10046_99))
(assert (= temp10046_101 (select ARGNAME_stride_NAMEEND_VAL temp10046_100)))
(assert (= temp10046_102 #x0000000000000003))
(assert (= temp10046_103 temp10046_102))
(assert (= temp10046_104 (select ARGNAME_stride_NAMEEND_VAL temp10046_103)))
(assert (= temp10046_105 #x0000000000000004))
(assert (= temp10046_106 temp10046_105))
(assert (= temp10046_107 (select ARGNAME_stride_NAMEEND_VAL temp10046_106)))
(assert (= temp10046_108 #x0000000000000005))
(assert (= temp10046_109 temp10046_108))
(assert (= temp10046_110 (select ARGNAME_stride_NAMEEND_VAL temp10046_109)))
(assert (= temp10046_111 #x0000000000000000))
(assert (= temp10046_112 #x0000000000000000))
(assert (= temp10046_113 temp10046_112))
(assert (= temp10046_114 (select ARGNAME_stride_NAMEEND_VAL temp10046_113)))
(assert (= temp10046_115 #x0000000000000000))
(assert (= temp10046_116 #x0000000000000001))
(assert (= temp10046_117 temp10046_116))
(assert (= temp10046_118 (select ARGNAME_stride_NAMEEND_VAL temp10046_117)))
(assert (= temp10046_119 #x0000000000000000))
(assert (= temp10046_120 #x0000000000000002))
(assert (= temp10046_121 temp10046_120))
(assert (= temp10046_122 (select ARGNAME_stride_NAMEEND_VAL temp10046_121)))
(assert (= temp10046_123 #x0000000000000000))
(assert (= temp10046_124 #x0000000000000003))
(assert (= temp10046_125 temp10046_124))
(assert (= temp10046_126 (select ARGNAME_stride_NAMEEND_VAL temp10046_125)))
(assert (= temp10046_127 #x0000000000000000))
(assert (= temp10046_128 #x0000000000000004))
(assert (= temp10046_129 temp10046_128))
(assert (= temp10046_130 (select ARGNAME_stride_NAMEEND_VAL temp10046_129)))
(assert (= temp10046_131 #x0000000000000000))
(assert (= temp10046_132 #x0000000000000005))
(assert (= temp10046_133 temp10046_132))
(assert (= temp10046_134 (select ARGNAME_stride_NAMEEND_VAL temp10046_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10046_114 temp10046_111)
             (bvsle temp10046_118 temp10046_115)
             (bvsle temp10046_122 temp10046_119)
             (bvsle temp10046_126 temp10046_123)
             (bvsle temp10046_130 temp10046_127)
             (bvsle temp10046_134 temp10046_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10046_135 #x0000000000000000))
(assert (= var1191735 temp10046_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10046_136 #x0000000000000001))
(assert (= var1191747 temp10046_136))
(assert (= temp10046_137 #x0000000000000000))
(assert (= var1179826 temp10046_137))
(assert (= temp10046_138 #x0000000000000000))
(assert (= temp10046_139 temp10046_138))
(assert (= temp10046_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10046_139)))
(assert (= temp10046_141 #x0000000000000001))
(assert (= temp10046_142 temp10046_141))
(assert (= temp10046_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10046_142)))
(assert (= temp10046_144 #x0000000000000002))
(assert (= temp10046_145 temp10046_144))
(assert (= temp10046_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10046_145)))
(assert (= temp10046_147 #x0000000000000003))
(assert (= temp10046_148 temp10046_147))
(assert (= temp10046_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10046_148)))
(assert (= temp10046_150 #x0000000000000004))
(assert (= temp10046_151 temp10046_150))
(assert (= temp10046_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10046_151)))
(assert (= temp10046_153 #x0000000000000005))
(assert (= temp10046_154 temp10046_153))
(assert (= temp10046_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10046_154)))
(assert (= temp10046_157 var1179826))
(assert (= temp10046_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10046_157)))
(assert (= temp10046_156 temp10046_158))
(assert (= var1191780
   (ite (bvslt temp10046_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10046_159 #x0000000000000000))
(assert (= var1191780 temp10046_159))
(assert (= temp10046_160 #x0000000000000000))
(assert (= var1179826 temp10046_160))
(assert (= temp10046_162 var1179826))
(assert (= temp10046_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10046_162)))
(assert (= temp10046_161 temp10046_163))
(assert (= var1191802 (bvsmod temp10046_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10046_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10046_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10046_165 #x0000000000000001))
(assert (= var1191803 temp10046_165))
(assert (= temp10046_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10046_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10046_167 #x0000000000000001))
(assert (= var1191823 temp10046_167))
(assert (= temp10046_168 #x0000000000000001))
(assert (= var1180714 temp10046_168))
(assert (= temp10046_169 #x0000000000000000))
(assert (= temp10046_170 temp10046_169))
(assert (= temp10046_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10046_170)))
(assert (= temp10046_172 #x0000000000000001))
(assert (= temp10046_173 temp10046_172))
(assert (= temp10046_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10046_173)))
(assert (= temp10046_175 #x0000000000000002))
(assert (= temp10046_176 temp10046_175))
(assert (= temp10046_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10046_176)))
(assert (= temp10046_178 #x0000000000000003))
(assert (= temp10046_179 temp10046_178))
(assert (= temp10046_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10046_179)))
(assert (= temp10046_181 #x0000000000000004))
(assert (= temp10046_182 temp10046_181))
(assert (= temp10046_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10046_182)))
(assert (= temp10046_184 #x0000000000000005))
(assert (= temp10046_185 temp10046_184))
(assert (= temp10046_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10046_185)))
(assert (= temp10046_187 #x0000000000000000))
(assert (= temp10046_188
   (ite (bvslt var1180714 temp10046_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10046_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10046_188)))
(assert (= var1191831 temp10046_189))
(assert (bvslt (ite (bvslt var1180714 temp10046_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10046_190 #x0000000000000001))
(assert (= var1180714 temp10046_190))
(assert (= temp10046_192 var1180714))
(assert (= temp10046_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10046_192)))
(assert (= temp10046_191 temp10046_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10046_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10046_194 #x0000000000000001))
(assert (= var1191836 temp10046_194))
(assert (= temp10046_195 #x0000000000000000))
(assert (= var1179826 temp10046_195))
(assert (= temp10046_197 var1179826))
(assert (= temp10046_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10046_197)))
(assert (= temp10046_196 temp10046_198))
(assert (= temp10046_199 #x0000000000000002))
(assert (= var1586025 temp10046_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10046_200 #x0000000000000001))
(assert (= var1191993 temp10046_200))
(assert (= temp10046_201 #x0000000000000001))
(assert (= var2700303 temp10046_201))
(assert (= temp10046_202 #x0000000000000001))
(assert (= var2962447 temp10046_202))
(assert (= temp10046_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10046_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10046_204 #x0000000000000001))
(assert (= var211058 temp10046_204))
(assert (= temp10046_205 #x0000000000000001))
(assert (= var211188 temp10046_205))
(assert (= var3879401 var211188))
(assert (= temp10046_206 #x0000000000000000))
(assert (= var3866802 temp10046_206))
(assert (= temp10046_207 #x0000000000000000))
(assert (= temp10046_208
   (ite (bvslt var3866802 temp10046_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10046_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10046_208)))
(assert (= var3879420 temp10046_209))
(assert (bvslt (ite (bvslt var3866802 temp10046_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10046_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10046_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10046_211 #x0000000000000000))
(assert (= var3879421 temp10046_211))
(assert (= temp10046_212 #x0000000000000001))
(assert (= var3867690 temp10046_212))
(assert (= temp10046_213 #x0000000000000000))
(assert (= temp10046_214
   (ite (bvslt var3867690 temp10046_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10046_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10046_214)))
(assert (= var3879423 temp10046_215))
(assert (bvslt (ite (bvslt var3867690 temp10046_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10046_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10046_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10046_217 #x0000000000000001))
(assert (= var3879424 temp10046_217))
(assert (= temp10046_218 #x0000000000000000))
(assert (= var4079423 temp10046_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10046_219 #x0000000000000002))
(assert (= var4208259 temp10046_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10046_220 #x0000000000000000))
(assert (= var4273820 temp10046_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10046_222 #xffffffffffffffff))
(assert (= temp10046_221 temp10046_222))
(assert (= temp10046_223 #x0000000000000001))
(assert (= var197674 temp10046_223))
(assert (= temp10046_224 #x0000000000000000))
(assert (= temp10046_225
   (ite (bvslt var197674 temp10046_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10046_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10046_225)))
(assert (= var211595 temp10046_226))
(assert (bvslt (ite (bvslt var197674 temp10046_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10046_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10046_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10046_228 #x0000000000000001))
(assert (= var211596 temp10046_228))
(assert (= temp10046_230 #xffffffffffffffff))
(assert (= temp10046_229 temp10046_230))
(assert (= temp10046_231 #x0000000000000001))
(assert (= var211058 temp10046_231))
(model-add temp10046_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10046_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10046_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10046_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





