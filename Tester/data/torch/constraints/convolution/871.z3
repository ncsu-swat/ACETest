(declare-fun temp1161_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1161_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1161_3 () (_ BitVec 64))
(declare-fun temp1161_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1161_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1161_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1161_7 () (_ BitVec 64))
(declare-fun temp1161_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1161_9 () (_ BitVec 64))
(declare-fun temp1161_10 () (_ BitVec 64))
(declare-fun temp1161_11 () (_ BitVec 64))
(declare-fun temp1161_12 () (_ BitVec 64))
(declare-fun temp1161_13 () (_ BitVec 64))
(declare-fun temp1161_14 () (_ BitVec 64))
(declare-fun temp1161_15 () (_ BitVec 64))
(declare-fun temp1161_16 () (_ BitVec 64))
(declare-fun temp1161_17 () (_ BitVec 64))
(declare-fun temp1161_18 () (_ BitVec 64))
(declare-fun temp1161_19 () (_ BitVec 64))
(declare-fun temp1161_20 () (_ BitVec 64))
(declare-fun temp1161_21 () (_ BitVec 64))
(declare-fun temp1161_22 () (_ BitVec 64))
(declare-fun temp1161_23 () (_ BitVec 64))
(declare-fun temp1161_24 () (_ BitVec 64))
(declare-fun temp1161_25 () (_ BitVec 64))
(declare-fun temp1161_26 () (_ BitVec 64))
(declare-fun temp1161_27 () (_ BitVec 64))
(declare-fun temp1161_28 () (_ BitVec 64))
(declare-fun temp1161_29 () (_ BitVec 64))
(declare-fun temp1161_30 () (_ BitVec 64))
(declare-fun temp1161_31 () (_ BitVec 64))
(declare-fun temp1161_32 () (_ BitVec 64))
(declare-fun temp1161_33 () (_ BitVec 64))
(declare-fun temp1161_34 () (_ BitVec 64))
(declare-fun temp1161_35 () (_ BitVec 64))
(declare-fun temp1161_36 () (_ BitVec 64))
(declare-fun temp1161_37 () (_ BitVec 64))
(declare-fun temp1161_38 () (_ BitVec 64))
(declare-fun temp1161_39 () (_ BitVec 64))
(declare-fun temp1161_40 () (_ BitVec 64))
(declare-fun temp1161_41 () (_ BitVec 64))
(declare-fun temp1161_42 () (_ BitVec 64))
(declare-fun temp1161_43 () (_ BitVec 64))
(declare-fun temp1161_44 () (_ BitVec 64))
(declare-fun temp1161_45 () (_ BitVec 64))
(declare-fun temp1161_46 () (_ BitVec 64))
(declare-fun temp1161_47 () (_ BitVec 64))
(declare-fun temp1161_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1161_49 () (_ BitVec 64))
(declare-fun temp1161_50 () (_ BitVec 64))
(declare-fun temp1161_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1161_52 () (_ BitVec 64))
(declare-fun temp1161_53 () (_ BitVec 64))
(declare-fun temp1161_54 () (_ BitVec 64))
(declare-fun temp1161_55 () (_ BitVec 64))
(declare-fun temp1161_56 () (_ BitVec 64))
(declare-fun temp1161_57 () (_ BitVec 64))
(declare-fun temp1161_58 () (_ BitVec 64))
(declare-fun temp1161_59 () (_ BitVec 64))
(declare-fun temp1161_60 () (_ BitVec 64))
(declare-fun temp1161_61 () (_ BitVec 64))
(declare-fun temp1161_62 () (_ BitVec 64))
(declare-fun temp1161_63 () (_ BitVec 64))
(declare-fun temp1161_64 () (_ BitVec 64))
(declare-fun temp1161_65 () (_ BitVec 64))
(declare-fun temp1161_66 () (_ BitVec 64))
(declare-fun temp1161_67 () (_ BitVec 64))
(declare-fun temp1161_68 () (_ BitVec 64))
(declare-fun temp1161_69 () (_ BitVec 64))
(declare-fun temp1161_70 () (_ BitVec 64))
(declare-fun temp1161_71 () (_ BitVec 64))
(declare-fun temp1161_72 () (_ BitVec 64))
(declare-fun temp1161_73 () (_ BitVec 64))
(declare-fun temp1161_74 () (_ BitVec 64))
(declare-fun temp1161_75 () (_ BitVec 64))
(declare-fun temp1161_76 () (_ BitVec 64))
(declare-fun temp1161_77 () (_ BitVec 64))
(declare-fun temp1161_78 () (_ BitVec 64))
(declare-fun temp1161_79 () (_ BitVec 64))
(declare-fun temp1161_80 () (_ BitVec 64))
(declare-fun temp1161_81 () (_ BitVec 64))
(declare-fun temp1161_82 () (_ BitVec 64))
(declare-fun temp1161_83 () (_ BitVec 64))
(declare-fun temp1161_84 () (_ BitVec 64))
(declare-fun temp1161_85 () (_ BitVec 64))
(declare-fun temp1161_86 () (_ BitVec 64))
(declare-fun temp1161_87 () (_ BitVec 64))
(declare-fun temp1161_88 () (_ BitVec 64))
(declare-fun temp1161_89 () (_ BitVec 64))
(declare-fun temp1161_90 () (_ BitVec 64))
(declare-fun temp1161_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1161_92 () (_ BitVec 64))
(declare-fun temp1161_93 () (_ BitVec 64))
(declare-fun temp1161_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1161_95 () (_ BitVec 64))
(declare-fun temp1161_96 () (_ BitVec 64))
(declare-fun temp1161_97 () (_ BitVec 64))
(declare-fun temp1161_98 () (_ BitVec 64))
(declare-fun temp1161_99 () (_ BitVec 64))
(declare-fun temp1161_100 () (_ BitVec 64))
(declare-fun temp1161_101 () (_ BitVec 64))
(declare-fun temp1161_102 () (_ BitVec 64))
(declare-fun temp1161_103 () (_ BitVec 64))
(declare-fun temp1161_104 () (_ BitVec 64))
(declare-fun temp1161_105 () (_ BitVec 64))
(declare-fun temp1161_106 () (_ BitVec 64))
(declare-fun temp1161_107 () (_ BitVec 64))
(declare-fun temp1161_108 () (_ BitVec 64))
(declare-fun temp1161_109 () (_ BitVec 64))
(declare-fun temp1161_110 () (_ BitVec 64))
(declare-fun temp1161_111 () (_ BitVec 64))
(declare-fun temp1161_112 () (_ BitVec 64))
(declare-fun temp1161_113 () (_ BitVec 64))
(declare-fun temp1161_114 () (_ BitVec 64))
(declare-fun temp1161_115 () (_ BitVec 64))
(declare-fun temp1161_116 () (_ BitVec 64))
(declare-fun temp1161_117 () (_ BitVec 64))
(declare-fun temp1161_118 () (_ BitVec 64))
(declare-fun temp1161_119 () (_ BitVec 64))
(declare-fun temp1161_120 () (_ BitVec 64))
(declare-fun temp1161_121 () (_ BitVec 64))
(declare-fun temp1161_122 () (_ BitVec 64))
(declare-fun temp1161_123 () (_ BitVec 64))
(declare-fun temp1161_124 () (_ BitVec 64))
(declare-fun temp1161_125 () (_ BitVec 64))
(declare-fun temp1161_126 () (_ BitVec 64))
(declare-fun temp1161_127 () (_ BitVec 64))
(declare-fun temp1161_128 () (_ BitVec 64))
(declare-fun temp1161_129 () (_ BitVec 64))
(declare-fun temp1161_130 () (_ BitVec 64))
(declare-fun temp1161_131 () (_ BitVec 64))
(declare-fun temp1161_132 () (_ BitVec 64))
(declare-fun temp1161_133 () (_ BitVec 64))
(declare-fun temp1161_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1161_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1161_136 () (_ BitVec 64))
(declare-fun temp1161_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1161_138 () (_ BitVec 64))
(declare-fun temp1161_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1161_140 () (_ BitVec 64))
(declare-fun temp1161_141 () (_ BitVec 64))
(declare-fun temp1161_142 () (_ BitVec 64))
(declare-fun temp1161_143 () (_ BitVec 64))
(declare-fun temp1161_144 () (_ BitVec 64))
(declare-fun temp1161_145 () (_ BitVec 64))
(declare-fun temp1161_146 () (_ BitVec 64))
(declare-fun temp1161_147 () (_ BitVec 64))
(declare-fun temp1161_148 () (_ BitVec 64))
(declare-fun temp1161_149 () (_ BitVec 64))
(declare-fun temp1161_150 () (_ BitVec 64))
(declare-fun temp1161_151 () (_ BitVec 64))
(declare-fun temp1161_152 () (_ BitVec 64))
(declare-fun temp1161_153 () (_ BitVec 64))
(declare-fun temp1161_154 () (_ BitVec 64))
(declare-fun temp1161_155 () (_ BitVec 64))
(declare-fun temp1161_157 () (_ BitVec 64))
(declare-fun temp1161_158 () (_ BitVec 64))
(declare-fun temp1161_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1161_159 () (_ BitVec 64))
(declare-fun temp1161_160 () (_ BitVec 64))
(declare-fun temp1161_162 () (_ BitVec 64))
(declare-fun temp1161_163 () (_ BitVec 64))
(declare-fun temp1161_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1161_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1161_165 () (_ BitVec 64))
(declare-fun temp1161_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1161_167 () (_ BitVec 64))
(declare-fun temp1161_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1161_169 () (_ BitVec 64))
(declare-fun temp1161_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1161_171 () (_ BitVec 64))
(declare-fun temp1161_172 () (_ BitVec 64))
(declare-fun temp1161_173 () (_ BitVec 64))
(declare-fun temp1161_174 () (_ BitVec 64))
(declare-fun temp1161_175 () (_ BitVec 64))
(declare-fun temp1161_176 () (_ BitVec 64))
(declare-fun temp1161_177 () (_ BitVec 64))
(declare-fun temp1161_178 () (_ BitVec 64))
(declare-fun temp1161_179 () (_ BitVec 64))
(declare-fun temp1161_180 () (_ BitVec 64))
(declare-fun temp1161_181 () (_ BitVec 64))
(declare-fun temp1161_182 () (_ BitVec 64))
(declare-fun temp1161_183 () (_ BitVec 64))
(declare-fun temp1161_184 () (_ BitVec 64))
(declare-fun temp1161_185 () (_ BitVec 64))
(declare-fun temp1161_186 () (_ BitVec 64))
(declare-fun temp1161_187 () (_ BitVec 64))
(declare-fun temp1161_188 () (_ BitVec 64))
(declare-fun temp1161_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1161_190 () (_ BitVec 64))
(declare-fun temp1161_192 () (_ BitVec 64))
(declare-fun temp1161_193 () (_ BitVec 64))
(declare-fun temp1161_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1161_194 () (_ BitVec 64))
(declare-fun temp1161_195 () (_ BitVec 64))
(declare-fun temp1161_197 () (_ BitVec 64))
(declare-fun temp1161_198 () (_ BitVec 64))
(declare-fun temp1161_196 () (_ BitVec 64))
(declare-fun temp1161_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1161_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1161_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1161_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1161_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1161_204 () (_ BitVec 64))
(declare-fun temp1161_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1161_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1161_207 () (_ BitVec 64))
(declare-fun temp1161_208 () (_ BitVec 64))
(declare-fun temp1161_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1161_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1161_211 () (_ BitVec 64))
(declare-fun temp1161_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1161_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1161_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp1161_215 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp1161_216 () (_ BitVec 64))
(declare-fun temp1161_217 () (_ BitVec 64))
(assert (= temp1161_1 #x0000000000000001))
(assert (= var77203 temp1161_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1161_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1161_2)))
(assert (= temp1161_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1161_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1161_4 #x0000000000000000))
(assert (= var210941 temp1161_4))
(assert (= temp1161_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1161_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1161_6 #x0000000000000000))
(assert (= var210986 temp1161_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1161_7 #x0000000000000000))
(assert (= temp1161_8 temp1161_7))
(assert (= temp1161_9 (select ARGNAME_padding_NAMEEND_VAL temp1161_8)))
(assert (= temp1161_10 #x0000000000000001))
(assert (= temp1161_11 temp1161_10))
(assert (= temp1161_12 (select ARGNAME_padding_NAMEEND_VAL temp1161_11)))
(assert (= temp1161_13 #x0000000000000002))
(assert (= temp1161_14 temp1161_13))
(assert (= temp1161_15 (select ARGNAME_padding_NAMEEND_VAL temp1161_14)))
(assert (= temp1161_16 #x0000000000000003))
(assert (= temp1161_17 temp1161_16))
(assert (= temp1161_18 (select ARGNAME_padding_NAMEEND_VAL temp1161_17)))
(assert (= temp1161_19 #x0000000000000004))
(assert (= temp1161_20 temp1161_19))
(assert (= temp1161_21 (select ARGNAME_padding_NAMEEND_VAL temp1161_20)))
(assert (= temp1161_22 #x0000000000000005))
(assert (= temp1161_23 temp1161_22))
(assert (= temp1161_24 (select ARGNAME_padding_NAMEEND_VAL temp1161_23)))
(assert (= temp1161_25 #x0000000000000000))
(assert (= temp1161_26 #x0000000000000000))
(assert (= temp1161_27 temp1161_26))
(assert (= temp1161_28 (select ARGNAME_padding_NAMEEND_VAL temp1161_27)))
(assert (= temp1161_29 #x0000000000000000))
(assert (= temp1161_30 #x0000000000000001))
(assert (= temp1161_31 temp1161_30))
(assert (= temp1161_32 (select ARGNAME_padding_NAMEEND_VAL temp1161_31)))
(assert (= temp1161_33 #x0000000000000000))
(assert (= temp1161_34 #x0000000000000002))
(assert (= temp1161_35 temp1161_34))
(assert (= temp1161_36 (select ARGNAME_padding_NAMEEND_VAL temp1161_35)))
(assert (= temp1161_37 #x0000000000000000))
(assert (= temp1161_38 #x0000000000000003))
(assert (= temp1161_39 temp1161_38))
(assert (= temp1161_40 (select ARGNAME_padding_NAMEEND_VAL temp1161_39)))
(assert (= temp1161_41 #x0000000000000000))
(assert (= temp1161_42 #x0000000000000004))
(assert (= temp1161_43 temp1161_42))
(assert (= temp1161_44 (select ARGNAME_padding_NAMEEND_VAL temp1161_43)))
(assert (= temp1161_45 #x0000000000000000))
(assert (= temp1161_46 #x0000000000000005))
(assert (= temp1161_47 temp1161_46))
(assert (= temp1161_48 (select ARGNAME_padding_NAMEEND_VAL temp1161_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1161_28 temp1161_25)
             (bvslt temp1161_32 temp1161_29)
             (bvslt temp1161_36 temp1161_33)
             (bvslt temp1161_40 temp1161_37)
             (bvslt temp1161_44 temp1161_41)
             (bvslt temp1161_48 temp1161_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1161_49 #x0000000000000000))
(assert (= var1191714 temp1161_49))
(assert (= temp1161_50 #x0000000000000000))
(assert (= temp1161_51 temp1161_50))
(assert (= temp1161_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1161_51)))
(assert (= temp1161_53 #x0000000000000001))
(assert (= temp1161_54 temp1161_53))
(assert (= temp1161_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1161_54)))
(assert (= temp1161_56 #x0000000000000002))
(assert (= temp1161_57 temp1161_56))
(assert (= temp1161_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1161_57)))
(assert (= temp1161_59 #x0000000000000003))
(assert (= temp1161_60 temp1161_59))
(assert (= temp1161_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1161_60)))
(assert (= temp1161_62 #x0000000000000004))
(assert (= temp1161_63 temp1161_62))
(assert (= temp1161_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1161_63)))
(assert (= temp1161_65 #x0000000000000005))
(assert (= temp1161_66 temp1161_65))
(assert (= temp1161_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1161_66)))
(assert (= temp1161_68 #x0000000000000000))
(assert (= temp1161_69 #x0000000000000000))
(assert (= temp1161_70 temp1161_69))
(assert (= temp1161_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1161_70)))
(assert (= temp1161_72 #x0000000000000000))
(assert (= temp1161_73 #x0000000000000001))
(assert (= temp1161_74 temp1161_73))
(assert (= temp1161_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1161_74)))
(assert (= temp1161_76 #x0000000000000000))
(assert (= temp1161_77 #x0000000000000002))
(assert (= temp1161_78 temp1161_77))
(assert (= temp1161_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1161_78)))
(assert (= temp1161_80 #x0000000000000000))
(assert (= temp1161_81 #x0000000000000003))
(assert (= temp1161_82 temp1161_81))
(assert (= temp1161_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1161_82)))
(assert (= temp1161_84 #x0000000000000000))
(assert (= temp1161_85 #x0000000000000004))
(assert (= temp1161_86 temp1161_85))
(assert (= temp1161_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1161_86)))
(assert (= temp1161_88 #x0000000000000000))
(assert (= temp1161_89 #x0000000000000005))
(assert (= temp1161_90 temp1161_89))
(assert (= temp1161_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1161_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1161_71 temp1161_68)
             (bvslt temp1161_75 temp1161_72)
             (bvslt temp1161_79 temp1161_76)
             (bvslt temp1161_83 temp1161_80)
             (bvslt temp1161_87 temp1161_84)
             (bvslt temp1161_91 temp1161_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1161_92 #x0000000000000000))
(assert (= var1191725 temp1161_92))
(assert (= temp1161_93 #x0000000000000000))
(assert (= temp1161_94 temp1161_93))
(assert (= temp1161_95 (select ARGNAME_stride_NAMEEND_VAL temp1161_94)))
(assert (= temp1161_96 #x0000000000000001))
(assert (= temp1161_97 temp1161_96))
(assert (= temp1161_98 (select ARGNAME_stride_NAMEEND_VAL temp1161_97)))
(assert (= temp1161_99 #x0000000000000002))
(assert (= temp1161_100 temp1161_99))
(assert (= temp1161_101 (select ARGNAME_stride_NAMEEND_VAL temp1161_100)))
(assert (= temp1161_102 #x0000000000000003))
(assert (= temp1161_103 temp1161_102))
(assert (= temp1161_104 (select ARGNAME_stride_NAMEEND_VAL temp1161_103)))
(assert (= temp1161_105 #x0000000000000004))
(assert (= temp1161_106 temp1161_105))
(assert (= temp1161_107 (select ARGNAME_stride_NAMEEND_VAL temp1161_106)))
(assert (= temp1161_108 #x0000000000000005))
(assert (= temp1161_109 temp1161_108))
(assert (= temp1161_110 (select ARGNAME_stride_NAMEEND_VAL temp1161_109)))
(assert (= temp1161_111 #x0000000000000000))
(assert (= temp1161_112 #x0000000000000000))
(assert (= temp1161_113 temp1161_112))
(assert (= temp1161_114 (select ARGNAME_stride_NAMEEND_VAL temp1161_113)))
(assert (= temp1161_115 #x0000000000000000))
(assert (= temp1161_116 #x0000000000000001))
(assert (= temp1161_117 temp1161_116))
(assert (= temp1161_118 (select ARGNAME_stride_NAMEEND_VAL temp1161_117)))
(assert (= temp1161_119 #x0000000000000000))
(assert (= temp1161_120 #x0000000000000002))
(assert (= temp1161_121 temp1161_120))
(assert (= temp1161_122 (select ARGNAME_stride_NAMEEND_VAL temp1161_121)))
(assert (= temp1161_123 #x0000000000000000))
(assert (= temp1161_124 #x0000000000000003))
(assert (= temp1161_125 temp1161_124))
(assert (= temp1161_126 (select ARGNAME_stride_NAMEEND_VAL temp1161_125)))
(assert (= temp1161_127 #x0000000000000000))
(assert (= temp1161_128 #x0000000000000004))
(assert (= temp1161_129 temp1161_128))
(assert (= temp1161_130 (select ARGNAME_stride_NAMEEND_VAL temp1161_129)))
(assert (= temp1161_131 #x0000000000000000))
(assert (= temp1161_132 #x0000000000000005))
(assert (= temp1161_133 temp1161_132))
(assert (= temp1161_134 (select ARGNAME_stride_NAMEEND_VAL temp1161_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1161_114 temp1161_111)
             (bvsle temp1161_118 temp1161_115)
             (bvsle temp1161_122 temp1161_119)
             (bvsle temp1161_126 temp1161_123)
             (bvsle temp1161_130 temp1161_127)
             (bvsle temp1161_134 temp1161_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1161_135 #x0000000000000000))
(assert (= var1191735 temp1161_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1161_136 #x0000000000000001))
(assert (= var1191747 temp1161_136))
(assert (= temp1161_137 #x0000000000000000))
(assert (= var1179826 temp1161_137))
(assert (= temp1161_138 #x0000000000000000))
(assert (= temp1161_139 temp1161_138))
(assert (= temp1161_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1161_139)))
(assert (= temp1161_141 #x0000000000000001))
(assert (= temp1161_142 temp1161_141))
(assert (= temp1161_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1161_142)))
(assert (= temp1161_144 #x0000000000000002))
(assert (= temp1161_145 temp1161_144))
(assert (= temp1161_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1161_145)))
(assert (= temp1161_147 #x0000000000000003))
(assert (= temp1161_148 temp1161_147))
(assert (= temp1161_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1161_148)))
(assert (= temp1161_150 #x0000000000000004))
(assert (= temp1161_151 temp1161_150))
(assert (= temp1161_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1161_151)))
(assert (= temp1161_153 #x0000000000000005))
(assert (= temp1161_154 temp1161_153))
(assert (= temp1161_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1161_154)))
(assert (= temp1161_157 var1179826))
(assert (= temp1161_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1161_157)))
(assert (= temp1161_156 temp1161_158))
(assert (= var1191780
   (ite (bvslt temp1161_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1161_159 #x0000000000000000))
(assert (= var1191780 temp1161_159))
(assert (= temp1161_160 #x0000000000000000))
(assert (= var1179826 temp1161_160))
(assert (= temp1161_162 var1179826))
(assert (= temp1161_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1161_162)))
(assert (= temp1161_161 temp1161_163))
(assert (= var1191802 (bvsmod temp1161_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1161_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1161_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1161_165 #x0000000000000001))
(assert (= var1191803 temp1161_165))
(assert (= temp1161_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1161_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1161_167 #x0000000000000001))
(assert (= var1191823 temp1161_167))
(assert (= temp1161_168 #x0000000000000001))
(assert (= var1180714 temp1161_168))
(assert (= temp1161_169 #x0000000000000000))
(assert (= temp1161_170 temp1161_169))
(assert (= temp1161_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1161_170)))
(assert (= temp1161_172 #x0000000000000001))
(assert (= temp1161_173 temp1161_172))
(assert (= temp1161_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1161_173)))
(assert (= temp1161_175 #x0000000000000002))
(assert (= temp1161_176 temp1161_175))
(assert (= temp1161_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1161_176)))
(assert (= temp1161_178 #x0000000000000003))
(assert (= temp1161_179 temp1161_178))
(assert (= temp1161_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1161_179)))
(assert (= temp1161_181 #x0000000000000004))
(assert (= temp1161_182 temp1161_181))
(assert (= temp1161_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1161_182)))
(assert (= temp1161_184 #x0000000000000005))
(assert (= temp1161_185 temp1161_184))
(assert (= temp1161_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1161_185)))
(assert (= temp1161_187 #x0000000000000000))
(assert (= temp1161_188
   (ite (bvslt var1180714 temp1161_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1161_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1161_188)))
(assert (= var1191831 temp1161_189))
(assert (bvslt (ite (bvslt var1180714 temp1161_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1161_190 #x0000000000000001))
(assert (= var1180714 temp1161_190))
(assert (= temp1161_192 var1180714))
(assert (= temp1161_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1161_192)))
(assert (= temp1161_191 temp1161_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1161_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1161_194 #x0000000000000001))
(assert (= var1191836 temp1161_194))
(assert (= temp1161_195 #x0000000000000000))
(assert (= var1179826 temp1161_195))
(assert (= temp1161_197 var1179826))
(assert (= temp1161_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1161_197)))
(assert (= temp1161_196 temp1161_198))
(assert (= temp1161_199 #x0000000000000002))
(assert (= var1586025 temp1161_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1161_200 #x0000000000000001))
(assert (= var1191993 temp1161_200))
(assert (= temp1161_201 #x0000000000000001))
(assert (= var2700303 temp1161_201))
(assert (= temp1161_202 #x0000000000000001))
(assert (= var2962447 temp1161_202))
(assert (= temp1161_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1161_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1161_204 #x0000000000000001))
(assert (= var211058 temp1161_204))
(assert (= temp1161_205 #x0000000000000001))
(assert (= var211188 temp1161_205))
(assert (= var3879401 var211188))
(assert (= temp1161_206 #x0000000000000000))
(assert (= var3866802 temp1161_206))
(assert (= temp1161_207 #x0000000000000000))
(assert (= temp1161_208
   (ite (bvslt var3866802 temp1161_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1161_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1161_208)))
(assert (= var3879420 temp1161_209))
(assert (bvslt (ite (bvslt var3866802 temp1161_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1161_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1161_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1161_211 #x0000000000000001))
(assert (= var3879421 temp1161_211))
(assert (= temp1161_212 #x0000000000000000))
(assert (= var4079423 temp1161_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1161_213 #x0000000000000002))
(assert (= var4208259 temp1161_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1161_214 #x0000000000000000))
(assert (= var4273820 temp1161_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp1161_215 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp1161_215)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1161_216 #x0000000000000000))
(assert (= var212414 temp1161_216))
(assert (= temp1161_217 #x0000000000000001))
(assert (= var211058 temp1161_217))
(model-add temp1161_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1161_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1161_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1161_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





