(declare-fun temp10504_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10504_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10504_3 () (_ BitVec 64))
(declare-fun temp10504_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10504_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10504_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10504_7 () (_ BitVec 64))
(declare-fun temp10504_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10504_9 () (_ BitVec 64))
(declare-fun temp10504_10 () (_ BitVec 64))
(declare-fun temp10504_11 () (_ BitVec 64))
(declare-fun temp10504_12 () (_ BitVec 64))
(declare-fun temp10504_13 () (_ BitVec 64))
(declare-fun temp10504_14 () (_ BitVec 64))
(declare-fun temp10504_15 () (_ BitVec 64))
(declare-fun temp10504_16 () (_ BitVec 64))
(declare-fun temp10504_17 () (_ BitVec 64))
(declare-fun temp10504_18 () (_ BitVec 64))
(declare-fun temp10504_19 () (_ BitVec 64))
(declare-fun temp10504_20 () (_ BitVec 64))
(declare-fun temp10504_21 () (_ BitVec 64))
(declare-fun temp10504_22 () (_ BitVec 64))
(declare-fun temp10504_23 () (_ BitVec 64))
(declare-fun temp10504_24 () (_ BitVec 64))
(declare-fun temp10504_25 () (_ BitVec 64))
(declare-fun temp10504_26 () (_ BitVec 64))
(declare-fun temp10504_27 () (_ BitVec 64))
(declare-fun temp10504_28 () (_ BitVec 64))
(declare-fun temp10504_29 () (_ BitVec 64))
(declare-fun temp10504_30 () (_ BitVec 64))
(declare-fun temp10504_31 () (_ BitVec 64))
(declare-fun temp10504_32 () (_ BitVec 64))
(declare-fun temp10504_33 () (_ BitVec 64))
(declare-fun temp10504_34 () (_ BitVec 64))
(declare-fun temp10504_35 () (_ BitVec 64))
(declare-fun temp10504_36 () (_ BitVec 64))
(declare-fun temp10504_37 () (_ BitVec 64))
(declare-fun temp10504_38 () (_ BitVec 64))
(declare-fun temp10504_39 () (_ BitVec 64))
(declare-fun temp10504_40 () (_ BitVec 64))
(declare-fun temp10504_41 () (_ BitVec 64))
(declare-fun temp10504_42 () (_ BitVec 64))
(declare-fun temp10504_43 () (_ BitVec 64))
(declare-fun temp10504_44 () (_ BitVec 64))
(declare-fun temp10504_45 () (_ BitVec 64))
(declare-fun temp10504_46 () (_ BitVec 64))
(declare-fun temp10504_47 () (_ BitVec 64))
(declare-fun temp10504_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10504_49 () (_ BitVec 64))
(declare-fun temp10504_50 () (_ BitVec 64))
(declare-fun temp10504_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10504_52 () (_ BitVec 64))
(declare-fun temp10504_53 () (_ BitVec 64))
(declare-fun temp10504_54 () (_ BitVec 64))
(declare-fun temp10504_55 () (_ BitVec 64))
(declare-fun temp10504_56 () (_ BitVec 64))
(declare-fun temp10504_57 () (_ BitVec 64))
(declare-fun temp10504_58 () (_ BitVec 64))
(declare-fun temp10504_59 () (_ BitVec 64))
(declare-fun temp10504_60 () (_ BitVec 64))
(declare-fun temp10504_61 () (_ BitVec 64))
(declare-fun temp10504_62 () (_ BitVec 64))
(declare-fun temp10504_63 () (_ BitVec 64))
(declare-fun temp10504_64 () (_ BitVec 64))
(declare-fun temp10504_65 () (_ BitVec 64))
(declare-fun temp10504_66 () (_ BitVec 64))
(declare-fun temp10504_67 () (_ BitVec 64))
(declare-fun temp10504_68 () (_ BitVec 64))
(declare-fun temp10504_69 () (_ BitVec 64))
(declare-fun temp10504_70 () (_ BitVec 64))
(declare-fun temp10504_71 () (_ BitVec 64))
(declare-fun temp10504_72 () (_ BitVec 64))
(declare-fun temp10504_73 () (_ BitVec 64))
(declare-fun temp10504_74 () (_ BitVec 64))
(declare-fun temp10504_75 () (_ BitVec 64))
(declare-fun temp10504_76 () (_ BitVec 64))
(declare-fun temp10504_77 () (_ BitVec 64))
(declare-fun temp10504_78 () (_ BitVec 64))
(declare-fun temp10504_79 () (_ BitVec 64))
(declare-fun temp10504_80 () (_ BitVec 64))
(declare-fun temp10504_81 () (_ BitVec 64))
(declare-fun temp10504_82 () (_ BitVec 64))
(declare-fun temp10504_83 () (_ BitVec 64))
(declare-fun temp10504_84 () (_ BitVec 64))
(declare-fun temp10504_85 () (_ BitVec 64))
(declare-fun temp10504_86 () (_ BitVec 64))
(declare-fun temp10504_87 () (_ BitVec 64))
(declare-fun temp10504_88 () (_ BitVec 64))
(declare-fun temp10504_89 () (_ BitVec 64))
(declare-fun temp10504_90 () (_ BitVec 64))
(declare-fun temp10504_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10504_92 () (_ BitVec 64))
(declare-fun temp10504_93 () (_ BitVec 64))
(declare-fun temp10504_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10504_95 () (_ BitVec 64))
(declare-fun temp10504_96 () (_ BitVec 64))
(declare-fun temp10504_97 () (_ BitVec 64))
(declare-fun temp10504_98 () (_ BitVec 64))
(declare-fun temp10504_99 () (_ BitVec 64))
(declare-fun temp10504_100 () (_ BitVec 64))
(declare-fun temp10504_101 () (_ BitVec 64))
(declare-fun temp10504_102 () (_ BitVec 64))
(declare-fun temp10504_103 () (_ BitVec 64))
(declare-fun temp10504_104 () (_ BitVec 64))
(declare-fun temp10504_105 () (_ BitVec 64))
(declare-fun temp10504_106 () (_ BitVec 64))
(declare-fun temp10504_107 () (_ BitVec 64))
(declare-fun temp10504_108 () (_ BitVec 64))
(declare-fun temp10504_109 () (_ BitVec 64))
(declare-fun temp10504_110 () (_ BitVec 64))
(declare-fun temp10504_111 () (_ BitVec 64))
(declare-fun temp10504_112 () (_ BitVec 64))
(declare-fun temp10504_113 () (_ BitVec 64))
(declare-fun temp10504_114 () (_ BitVec 64))
(declare-fun temp10504_115 () (_ BitVec 64))
(declare-fun temp10504_116 () (_ BitVec 64))
(declare-fun temp10504_117 () (_ BitVec 64))
(declare-fun temp10504_118 () (_ BitVec 64))
(declare-fun temp10504_119 () (_ BitVec 64))
(declare-fun temp10504_120 () (_ BitVec 64))
(declare-fun temp10504_121 () (_ BitVec 64))
(declare-fun temp10504_122 () (_ BitVec 64))
(declare-fun temp10504_123 () (_ BitVec 64))
(declare-fun temp10504_124 () (_ BitVec 64))
(declare-fun temp10504_125 () (_ BitVec 64))
(declare-fun temp10504_126 () (_ BitVec 64))
(declare-fun temp10504_127 () (_ BitVec 64))
(declare-fun temp10504_128 () (_ BitVec 64))
(declare-fun temp10504_129 () (_ BitVec 64))
(declare-fun temp10504_130 () (_ BitVec 64))
(declare-fun temp10504_131 () (_ BitVec 64))
(declare-fun temp10504_132 () (_ BitVec 64))
(declare-fun temp10504_133 () (_ BitVec 64))
(declare-fun temp10504_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10504_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10504_136 () (_ BitVec 64))
(declare-fun temp10504_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10504_138 () (_ BitVec 64))
(declare-fun temp10504_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10504_140 () (_ BitVec 64))
(declare-fun temp10504_141 () (_ BitVec 64))
(declare-fun temp10504_142 () (_ BitVec 64))
(declare-fun temp10504_143 () (_ BitVec 64))
(declare-fun temp10504_144 () (_ BitVec 64))
(declare-fun temp10504_145 () (_ BitVec 64))
(declare-fun temp10504_146 () (_ BitVec 64))
(declare-fun temp10504_147 () (_ BitVec 64))
(declare-fun temp10504_148 () (_ BitVec 64))
(declare-fun temp10504_149 () (_ BitVec 64))
(declare-fun temp10504_150 () (_ BitVec 64))
(declare-fun temp10504_151 () (_ BitVec 64))
(declare-fun temp10504_152 () (_ BitVec 64))
(declare-fun temp10504_153 () (_ BitVec 64))
(declare-fun temp10504_154 () (_ BitVec 64))
(declare-fun temp10504_155 () (_ BitVec 64))
(declare-fun temp10504_157 () (_ BitVec 64))
(declare-fun temp10504_158 () (_ BitVec 64))
(declare-fun temp10504_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10504_159 () (_ BitVec 64))
(declare-fun temp10504_160 () (_ BitVec 64))
(declare-fun temp10504_162 () (_ BitVec 64))
(declare-fun temp10504_163 () (_ BitVec 64))
(declare-fun temp10504_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10504_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10504_165 () (_ BitVec 64))
(declare-fun temp10504_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10504_167 () (_ BitVec 64))
(declare-fun temp10504_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10504_169 () (_ BitVec 64))
(declare-fun temp10504_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10504_171 () (_ BitVec 64))
(declare-fun temp10504_172 () (_ BitVec 64))
(declare-fun temp10504_173 () (_ BitVec 64))
(declare-fun temp10504_174 () (_ BitVec 64))
(declare-fun temp10504_175 () (_ BitVec 64))
(declare-fun temp10504_176 () (_ BitVec 64))
(declare-fun temp10504_177 () (_ BitVec 64))
(declare-fun temp10504_178 () (_ BitVec 64))
(declare-fun temp10504_179 () (_ BitVec 64))
(declare-fun temp10504_180 () (_ BitVec 64))
(declare-fun temp10504_181 () (_ BitVec 64))
(declare-fun temp10504_182 () (_ BitVec 64))
(declare-fun temp10504_183 () (_ BitVec 64))
(declare-fun temp10504_184 () (_ BitVec 64))
(declare-fun temp10504_185 () (_ BitVec 64))
(declare-fun temp10504_186 () (_ BitVec 64))
(declare-fun temp10504_187 () (_ BitVec 64))
(declare-fun temp10504_188 () (_ BitVec 64))
(declare-fun temp10504_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10504_190 () (_ BitVec 64))
(declare-fun temp10504_192 () (_ BitVec 64))
(declare-fun temp10504_193 () (_ BitVec 64))
(declare-fun temp10504_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10504_194 () (_ BitVec 64))
(declare-fun temp10504_195 () (_ BitVec 64))
(declare-fun temp10504_197 () (_ BitVec 64))
(declare-fun temp10504_198 () (_ BitVec 64))
(declare-fun temp10504_196 () (_ BitVec 64))
(declare-fun temp10504_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10504_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10504_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10504_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10504_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10504_204 () (_ BitVec 64))
(declare-fun temp10504_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10504_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10504_207 () (_ BitVec 64))
(declare-fun temp10504_208 () (_ BitVec 64))
(declare-fun temp10504_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10504_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10504_211 () (_ BitVec 64))
(declare-fun temp10504_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10504_213 () (_ BitVec 64))
(declare-fun temp10504_214 () (_ BitVec 64))
(declare-fun temp10504_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10504_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10504_217 () (_ BitVec 64))
(declare-fun temp10504_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10504_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10504_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp10504_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp10504_222 () (_ BitVec 64))
(declare-fun temp10504_223 () (_ BitVec 64))
(assert (= temp10504_1 #x0000000000000001))
(assert (= var77203 temp10504_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10504_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10504_2)))
(assert (= temp10504_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10504_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10504_4 #x0000000000000000))
(assert (= var210941 temp10504_4))
(assert (= temp10504_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10504_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10504_6 #x0000000000000000))
(assert (= var210986 temp10504_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10504_7 #x0000000000000000))
(assert (= temp10504_8 temp10504_7))
(assert (= temp10504_9 (select ARGNAME_padding_NAMEEND_VAL temp10504_8)))
(assert (= temp10504_10 #x0000000000000001))
(assert (= temp10504_11 temp10504_10))
(assert (= temp10504_12 (select ARGNAME_padding_NAMEEND_VAL temp10504_11)))
(assert (= temp10504_13 #x0000000000000002))
(assert (= temp10504_14 temp10504_13))
(assert (= temp10504_15 (select ARGNAME_padding_NAMEEND_VAL temp10504_14)))
(assert (= temp10504_16 #x0000000000000003))
(assert (= temp10504_17 temp10504_16))
(assert (= temp10504_18 (select ARGNAME_padding_NAMEEND_VAL temp10504_17)))
(assert (= temp10504_19 #x0000000000000004))
(assert (= temp10504_20 temp10504_19))
(assert (= temp10504_21 (select ARGNAME_padding_NAMEEND_VAL temp10504_20)))
(assert (= temp10504_22 #x0000000000000005))
(assert (= temp10504_23 temp10504_22))
(assert (= temp10504_24 (select ARGNAME_padding_NAMEEND_VAL temp10504_23)))
(assert (= temp10504_25 #x0000000000000000))
(assert (= temp10504_26 #x0000000000000000))
(assert (= temp10504_27 temp10504_26))
(assert (= temp10504_28 (select ARGNAME_padding_NAMEEND_VAL temp10504_27)))
(assert (= temp10504_29 #x0000000000000000))
(assert (= temp10504_30 #x0000000000000001))
(assert (= temp10504_31 temp10504_30))
(assert (= temp10504_32 (select ARGNAME_padding_NAMEEND_VAL temp10504_31)))
(assert (= temp10504_33 #x0000000000000000))
(assert (= temp10504_34 #x0000000000000002))
(assert (= temp10504_35 temp10504_34))
(assert (= temp10504_36 (select ARGNAME_padding_NAMEEND_VAL temp10504_35)))
(assert (= temp10504_37 #x0000000000000000))
(assert (= temp10504_38 #x0000000000000003))
(assert (= temp10504_39 temp10504_38))
(assert (= temp10504_40 (select ARGNAME_padding_NAMEEND_VAL temp10504_39)))
(assert (= temp10504_41 #x0000000000000000))
(assert (= temp10504_42 #x0000000000000004))
(assert (= temp10504_43 temp10504_42))
(assert (= temp10504_44 (select ARGNAME_padding_NAMEEND_VAL temp10504_43)))
(assert (= temp10504_45 #x0000000000000000))
(assert (= temp10504_46 #x0000000000000005))
(assert (= temp10504_47 temp10504_46))
(assert (= temp10504_48 (select ARGNAME_padding_NAMEEND_VAL temp10504_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10504_28 temp10504_25)
             (bvslt temp10504_32 temp10504_29)
             (bvslt temp10504_36 temp10504_33)
             (bvslt temp10504_40 temp10504_37)
             (bvslt temp10504_44 temp10504_41)
             (bvslt temp10504_48 temp10504_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10504_49 #x0000000000000000))
(assert (= var1191714 temp10504_49))
(assert (= temp10504_50 #x0000000000000000))
(assert (= temp10504_51 temp10504_50))
(assert (= temp10504_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10504_51)))
(assert (= temp10504_53 #x0000000000000001))
(assert (= temp10504_54 temp10504_53))
(assert (= temp10504_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10504_54)))
(assert (= temp10504_56 #x0000000000000002))
(assert (= temp10504_57 temp10504_56))
(assert (= temp10504_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10504_57)))
(assert (= temp10504_59 #x0000000000000003))
(assert (= temp10504_60 temp10504_59))
(assert (= temp10504_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10504_60)))
(assert (= temp10504_62 #x0000000000000004))
(assert (= temp10504_63 temp10504_62))
(assert (= temp10504_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10504_63)))
(assert (= temp10504_65 #x0000000000000005))
(assert (= temp10504_66 temp10504_65))
(assert (= temp10504_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10504_66)))
(assert (= temp10504_68 #x0000000000000000))
(assert (= temp10504_69 #x0000000000000000))
(assert (= temp10504_70 temp10504_69))
(assert (= temp10504_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10504_70)))
(assert (= temp10504_72 #x0000000000000000))
(assert (= temp10504_73 #x0000000000000001))
(assert (= temp10504_74 temp10504_73))
(assert (= temp10504_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10504_74)))
(assert (= temp10504_76 #x0000000000000000))
(assert (= temp10504_77 #x0000000000000002))
(assert (= temp10504_78 temp10504_77))
(assert (= temp10504_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10504_78)))
(assert (= temp10504_80 #x0000000000000000))
(assert (= temp10504_81 #x0000000000000003))
(assert (= temp10504_82 temp10504_81))
(assert (= temp10504_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10504_82)))
(assert (= temp10504_84 #x0000000000000000))
(assert (= temp10504_85 #x0000000000000004))
(assert (= temp10504_86 temp10504_85))
(assert (= temp10504_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10504_86)))
(assert (= temp10504_88 #x0000000000000000))
(assert (= temp10504_89 #x0000000000000005))
(assert (= temp10504_90 temp10504_89))
(assert (= temp10504_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10504_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10504_71 temp10504_68)
             (bvslt temp10504_75 temp10504_72)
             (bvslt temp10504_79 temp10504_76)
             (bvslt temp10504_83 temp10504_80)
             (bvslt temp10504_87 temp10504_84)
             (bvslt temp10504_91 temp10504_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10504_92 #x0000000000000000))
(assert (= var1191725 temp10504_92))
(assert (= temp10504_93 #x0000000000000000))
(assert (= temp10504_94 temp10504_93))
(assert (= temp10504_95 (select ARGNAME_stride_NAMEEND_VAL temp10504_94)))
(assert (= temp10504_96 #x0000000000000001))
(assert (= temp10504_97 temp10504_96))
(assert (= temp10504_98 (select ARGNAME_stride_NAMEEND_VAL temp10504_97)))
(assert (= temp10504_99 #x0000000000000002))
(assert (= temp10504_100 temp10504_99))
(assert (= temp10504_101 (select ARGNAME_stride_NAMEEND_VAL temp10504_100)))
(assert (= temp10504_102 #x0000000000000003))
(assert (= temp10504_103 temp10504_102))
(assert (= temp10504_104 (select ARGNAME_stride_NAMEEND_VAL temp10504_103)))
(assert (= temp10504_105 #x0000000000000004))
(assert (= temp10504_106 temp10504_105))
(assert (= temp10504_107 (select ARGNAME_stride_NAMEEND_VAL temp10504_106)))
(assert (= temp10504_108 #x0000000000000005))
(assert (= temp10504_109 temp10504_108))
(assert (= temp10504_110 (select ARGNAME_stride_NAMEEND_VAL temp10504_109)))
(assert (= temp10504_111 #x0000000000000000))
(assert (= temp10504_112 #x0000000000000000))
(assert (= temp10504_113 temp10504_112))
(assert (= temp10504_114 (select ARGNAME_stride_NAMEEND_VAL temp10504_113)))
(assert (= temp10504_115 #x0000000000000000))
(assert (= temp10504_116 #x0000000000000001))
(assert (= temp10504_117 temp10504_116))
(assert (= temp10504_118 (select ARGNAME_stride_NAMEEND_VAL temp10504_117)))
(assert (= temp10504_119 #x0000000000000000))
(assert (= temp10504_120 #x0000000000000002))
(assert (= temp10504_121 temp10504_120))
(assert (= temp10504_122 (select ARGNAME_stride_NAMEEND_VAL temp10504_121)))
(assert (= temp10504_123 #x0000000000000000))
(assert (= temp10504_124 #x0000000000000003))
(assert (= temp10504_125 temp10504_124))
(assert (= temp10504_126 (select ARGNAME_stride_NAMEEND_VAL temp10504_125)))
(assert (= temp10504_127 #x0000000000000000))
(assert (= temp10504_128 #x0000000000000004))
(assert (= temp10504_129 temp10504_128))
(assert (= temp10504_130 (select ARGNAME_stride_NAMEEND_VAL temp10504_129)))
(assert (= temp10504_131 #x0000000000000000))
(assert (= temp10504_132 #x0000000000000005))
(assert (= temp10504_133 temp10504_132))
(assert (= temp10504_134 (select ARGNAME_stride_NAMEEND_VAL temp10504_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10504_114 temp10504_111)
             (bvsle temp10504_118 temp10504_115)
             (bvsle temp10504_122 temp10504_119)
             (bvsle temp10504_126 temp10504_123)
             (bvsle temp10504_130 temp10504_127)
             (bvsle temp10504_134 temp10504_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10504_135 #x0000000000000000))
(assert (= var1191735 temp10504_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10504_136 #x0000000000000001))
(assert (= var1191747 temp10504_136))
(assert (= temp10504_137 #x0000000000000000))
(assert (= var1179826 temp10504_137))
(assert (= temp10504_138 #x0000000000000000))
(assert (= temp10504_139 temp10504_138))
(assert (= temp10504_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10504_139)))
(assert (= temp10504_141 #x0000000000000001))
(assert (= temp10504_142 temp10504_141))
(assert (= temp10504_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10504_142)))
(assert (= temp10504_144 #x0000000000000002))
(assert (= temp10504_145 temp10504_144))
(assert (= temp10504_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10504_145)))
(assert (= temp10504_147 #x0000000000000003))
(assert (= temp10504_148 temp10504_147))
(assert (= temp10504_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10504_148)))
(assert (= temp10504_150 #x0000000000000004))
(assert (= temp10504_151 temp10504_150))
(assert (= temp10504_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10504_151)))
(assert (= temp10504_153 #x0000000000000005))
(assert (= temp10504_154 temp10504_153))
(assert (= temp10504_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10504_154)))
(assert (= temp10504_157 var1179826))
(assert (= temp10504_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10504_157)))
(assert (= temp10504_156 temp10504_158))
(assert (= var1191780
   (ite (bvslt temp10504_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10504_159 #x0000000000000000))
(assert (= var1191780 temp10504_159))
(assert (= temp10504_160 #x0000000000000000))
(assert (= var1179826 temp10504_160))
(assert (= temp10504_162 var1179826))
(assert (= temp10504_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10504_162)))
(assert (= temp10504_161 temp10504_163))
(assert (= var1191802 (bvsmod temp10504_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10504_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10504_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10504_165 #x0000000000000001))
(assert (= var1191803 temp10504_165))
(assert (= temp10504_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10504_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10504_167 #x0000000000000001))
(assert (= var1191823 temp10504_167))
(assert (= temp10504_168 #x0000000000000001))
(assert (= var1180714 temp10504_168))
(assert (= temp10504_169 #x0000000000000000))
(assert (= temp10504_170 temp10504_169))
(assert (= temp10504_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10504_170)))
(assert (= temp10504_172 #x0000000000000001))
(assert (= temp10504_173 temp10504_172))
(assert (= temp10504_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10504_173)))
(assert (= temp10504_175 #x0000000000000002))
(assert (= temp10504_176 temp10504_175))
(assert (= temp10504_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10504_176)))
(assert (= temp10504_178 #x0000000000000003))
(assert (= temp10504_179 temp10504_178))
(assert (= temp10504_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10504_179)))
(assert (= temp10504_181 #x0000000000000004))
(assert (= temp10504_182 temp10504_181))
(assert (= temp10504_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10504_182)))
(assert (= temp10504_184 #x0000000000000005))
(assert (= temp10504_185 temp10504_184))
(assert (= temp10504_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10504_185)))
(assert (= temp10504_187 #x0000000000000000))
(assert (= temp10504_188
   (ite (bvslt var1180714 temp10504_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10504_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10504_188)))
(assert (= var1191831 temp10504_189))
(assert (bvslt (ite (bvslt var1180714 temp10504_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10504_190 #x0000000000000001))
(assert (= var1180714 temp10504_190))
(assert (= temp10504_192 var1180714))
(assert (= temp10504_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10504_192)))
(assert (= temp10504_191 temp10504_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10504_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10504_194 #x0000000000000001))
(assert (= var1191836 temp10504_194))
(assert (= temp10504_195 #x0000000000000000))
(assert (= var1179826 temp10504_195))
(assert (= temp10504_197 var1179826))
(assert (= temp10504_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10504_197)))
(assert (= temp10504_196 temp10504_198))
(assert (= temp10504_199 #x0000000000000002))
(assert (= var1586025 temp10504_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10504_200 #x0000000000000001))
(assert (= var1191993 temp10504_200))
(assert (= temp10504_201 #x0000000000000001))
(assert (= var2700303 temp10504_201))
(assert (= temp10504_202 #x0000000000000001))
(assert (= var2962447 temp10504_202))
(assert (= temp10504_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10504_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10504_204 #x0000000000000001))
(assert (= var211058 temp10504_204))
(assert (= temp10504_205 #x0000000000000001))
(assert (= var211188 temp10504_205))
(assert (= var3879401 var211188))
(assert (= temp10504_206 #x0000000000000000))
(assert (= var3866802 temp10504_206))
(assert (= temp10504_207 #x0000000000000000))
(assert (= temp10504_208
   (ite (bvslt var3866802 temp10504_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10504_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10504_208)))
(assert (= var3879420 temp10504_209))
(assert (bvslt (ite (bvslt var3866802 temp10504_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10504_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10504_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10504_211 #x0000000000000000))
(assert (= var3879421 temp10504_211))
(assert (= temp10504_212 #x0000000000000001))
(assert (= var3867690 temp10504_212))
(assert (= temp10504_213 #x0000000000000000))
(assert (= temp10504_214
   (ite (bvslt var3867690 temp10504_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10504_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10504_214)))
(assert (= var3879423 temp10504_215))
(assert (bvslt (ite (bvslt var3867690 temp10504_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10504_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10504_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10504_217 #x0000000000000001))
(assert (= var3879424 temp10504_217))
(assert (= temp10504_218 #x0000000000000000))
(assert (= var4079423 temp10504_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10504_219 #x0000000000000002))
(assert (= var4208259 temp10504_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10504_220 #x0000000000000000))
(assert (= var4273820 temp10504_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp10504_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp10504_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10504_222 #x0000000000000000))
(assert (= var212414 temp10504_222))
(assert (= temp10504_223 #x0000000000000001))
(assert (= var211058 temp10504_223))
(model-add temp10504_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10504_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10504_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10504_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





