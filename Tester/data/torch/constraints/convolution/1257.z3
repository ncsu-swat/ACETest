(declare-fun temp10406_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10406_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10406_3 () (_ BitVec 64))
(declare-fun temp10406_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10406_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10406_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10406_7 () (_ BitVec 64))
(declare-fun temp10406_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10406_9 () (_ BitVec 64))
(declare-fun temp10406_10 () (_ BitVec 64))
(declare-fun temp10406_11 () (_ BitVec 64))
(declare-fun temp10406_12 () (_ BitVec 64))
(declare-fun temp10406_13 () (_ BitVec 64))
(declare-fun temp10406_14 () (_ BitVec 64))
(declare-fun temp10406_15 () (_ BitVec 64))
(declare-fun temp10406_16 () (_ BitVec 64))
(declare-fun temp10406_17 () (_ BitVec 64))
(declare-fun temp10406_18 () (_ BitVec 64))
(declare-fun temp10406_19 () (_ BitVec 64))
(declare-fun temp10406_20 () (_ BitVec 64))
(declare-fun temp10406_21 () (_ BitVec 64))
(declare-fun temp10406_22 () (_ BitVec 64))
(declare-fun temp10406_23 () (_ BitVec 64))
(declare-fun temp10406_24 () (_ BitVec 64))
(declare-fun temp10406_25 () (_ BitVec 64))
(declare-fun temp10406_26 () (_ BitVec 64))
(declare-fun temp10406_27 () (_ BitVec 64))
(declare-fun temp10406_28 () (_ BitVec 64))
(declare-fun temp10406_29 () (_ BitVec 64))
(declare-fun temp10406_30 () (_ BitVec 64))
(declare-fun temp10406_31 () (_ BitVec 64))
(declare-fun temp10406_32 () (_ BitVec 64))
(declare-fun temp10406_33 () (_ BitVec 64))
(declare-fun temp10406_34 () (_ BitVec 64))
(declare-fun temp10406_35 () (_ BitVec 64))
(declare-fun temp10406_36 () (_ BitVec 64))
(declare-fun temp10406_37 () (_ BitVec 64))
(declare-fun temp10406_38 () (_ BitVec 64))
(declare-fun temp10406_39 () (_ BitVec 64))
(declare-fun temp10406_40 () (_ BitVec 64))
(declare-fun temp10406_41 () (_ BitVec 64))
(declare-fun temp10406_42 () (_ BitVec 64))
(declare-fun temp10406_43 () (_ BitVec 64))
(declare-fun temp10406_44 () (_ BitVec 64))
(declare-fun temp10406_45 () (_ BitVec 64))
(declare-fun temp10406_46 () (_ BitVec 64))
(declare-fun temp10406_47 () (_ BitVec 64))
(declare-fun temp10406_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10406_49 () (_ BitVec 64))
(declare-fun temp10406_50 () (_ BitVec 64))
(declare-fun temp10406_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10406_52 () (_ BitVec 64))
(declare-fun temp10406_53 () (_ BitVec 64))
(declare-fun temp10406_54 () (_ BitVec 64))
(declare-fun temp10406_55 () (_ BitVec 64))
(declare-fun temp10406_56 () (_ BitVec 64))
(declare-fun temp10406_57 () (_ BitVec 64))
(declare-fun temp10406_58 () (_ BitVec 64))
(declare-fun temp10406_59 () (_ BitVec 64))
(declare-fun temp10406_60 () (_ BitVec 64))
(declare-fun temp10406_61 () (_ BitVec 64))
(declare-fun temp10406_62 () (_ BitVec 64))
(declare-fun temp10406_63 () (_ BitVec 64))
(declare-fun temp10406_64 () (_ BitVec 64))
(declare-fun temp10406_65 () (_ BitVec 64))
(declare-fun temp10406_66 () (_ BitVec 64))
(declare-fun temp10406_67 () (_ BitVec 64))
(declare-fun temp10406_68 () (_ BitVec 64))
(declare-fun temp10406_69 () (_ BitVec 64))
(declare-fun temp10406_70 () (_ BitVec 64))
(declare-fun temp10406_71 () (_ BitVec 64))
(declare-fun temp10406_72 () (_ BitVec 64))
(declare-fun temp10406_73 () (_ BitVec 64))
(declare-fun temp10406_74 () (_ BitVec 64))
(declare-fun temp10406_75 () (_ BitVec 64))
(declare-fun temp10406_76 () (_ BitVec 64))
(declare-fun temp10406_77 () (_ BitVec 64))
(declare-fun temp10406_78 () (_ BitVec 64))
(declare-fun temp10406_79 () (_ BitVec 64))
(declare-fun temp10406_80 () (_ BitVec 64))
(declare-fun temp10406_81 () (_ BitVec 64))
(declare-fun temp10406_82 () (_ BitVec 64))
(declare-fun temp10406_83 () (_ BitVec 64))
(declare-fun temp10406_84 () (_ BitVec 64))
(declare-fun temp10406_85 () (_ BitVec 64))
(declare-fun temp10406_86 () (_ BitVec 64))
(declare-fun temp10406_87 () (_ BitVec 64))
(declare-fun temp10406_88 () (_ BitVec 64))
(declare-fun temp10406_89 () (_ BitVec 64))
(declare-fun temp10406_90 () (_ BitVec 64))
(declare-fun temp10406_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10406_92 () (_ BitVec 64))
(declare-fun temp10406_93 () (_ BitVec 64))
(declare-fun temp10406_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10406_95 () (_ BitVec 64))
(declare-fun temp10406_96 () (_ BitVec 64))
(declare-fun temp10406_97 () (_ BitVec 64))
(declare-fun temp10406_98 () (_ BitVec 64))
(declare-fun temp10406_99 () (_ BitVec 64))
(declare-fun temp10406_100 () (_ BitVec 64))
(declare-fun temp10406_101 () (_ BitVec 64))
(declare-fun temp10406_102 () (_ BitVec 64))
(declare-fun temp10406_103 () (_ BitVec 64))
(declare-fun temp10406_104 () (_ BitVec 64))
(declare-fun temp10406_105 () (_ BitVec 64))
(declare-fun temp10406_106 () (_ BitVec 64))
(declare-fun temp10406_107 () (_ BitVec 64))
(declare-fun temp10406_108 () (_ BitVec 64))
(declare-fun temp10406_109 () (_ BitVec 64))
(declare-fun temp10406_110 () (_ BitVec 64))
(declare-fun temp10406_111 () (_ BitVec 64))
(declare-fun temp10406_112 () (_ BitVec 64))
(declare-fun temp10406_113 () (_ BitVec 64))
(declare-fun temp10406_114 () (_ BitVec 64))
(declare-fun temp10406_115 () (_ BitVec 64))
(declare-fun temp10406_116 () (_ BitVec 64))
(declare-fun temp10406_117 () (_ BitVec 64))
(declare-fun temp10406_118 () (_ BitVec 64))
(declare-fun temp10406_119 () (_ BitVec 64))
(declare-fun temp10406_120 () (_ BitVec 64))
(declare-fun temp10406_121 () (_ BitVec 64))
(declare-fun temp10406_122 () (_ BitVec 64))
(declare-fun temp10406_123 () (_ BitVec 64))
(declare-fun temp10406_124 () (_ BitVec 64))
(declare-fun temp10406_125 () (_ BitVec 64))
(declare-fun temp10406_126 () (_ BitVec 64))
(declare-fun temp10406_127 () (_ BitVec 64))
(declare-fun temp10406_128 () (_ BitVec 64))
(declare-fun temp10406_129 () (_ BitVec 64))
(declare-fun temp10406_130 () (_ BitVec 64))
(declare-fun temp10406_131 () (_ BitVec 64))
(declare-fun temp10406_132 () (_ BitVec 64))
(declare-fun temp10406_133 () (_ BitVec 64))
(declare-fun temp10406_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10406_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10406_136 () (_ BitVec 64))
(declare-fun temp10406_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10406_138 () (_ BitVec 64))
(declare-fun temp10406_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10406_140 () (_ BitVec 64))
(declare-fun temp10406_141 () (_ BitVec 64))
(declare-fun temp10406_142 () (_ BitVec 64))
(declare-fun temp10406_143 () (_ BitVec 64))
(declare-fun temp10406_144 () (_ BitVec 64))
(declare-fun temp10406_145 () (_ BitVec 64))
(declare-fun temp10406_146 () (_ BitVec 64))
(declare-fun temp10406_147 () (_ BitVec 64))
(declare-fun temp10406_148 () (_ BitVec 64))
(declare-fun temp10406_149 () (_ BitVec 64))
(declare-fun temp10406_150 () (_ BitVec 64))
(declare-fun temp10406_151 () (_ BitVec 64))
(declare-fun temp10406_152 () (_ BitVec 64))
(declare-fun temp10406_153 () (_ BitVec 64))
(declare-fun temp10406_154 () (_ BitVec 64))
(declare-fun temp10406_155 () (_ BitVec 64))
(declare-fun temp10406_157 () (_ BitVec 64))
(declare-fun temp10406_158 () (_ BitVec 64))
(declare-fun temp10406_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10406_159 () (_ BitVec 64))
(declare-fun temp10406_160 () (_ BitVec 64))
(declare-fun temp10406_162 () (_ BitVec 64))
(declare-fun temp10406_163 () (_ BitVec 64))
(declare-fun temp10406_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10406_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10406_165 () (_ BitVec 64))
(declare-fun temp10406_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10406_167 () (_ BitVec 64))
(declare-fun temp10406_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10406_169 () (_ BitVec 64))
(declare-fun temp10406_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10406_171 () (_ BitVec 64))
(declare-fun temp10406_172 () (_ BitVec 64))
(declare-fun temp10406_173 () (_ BitVec 64))
(declare-fun temp10406_174 () (_ BitVec 64))
(declare-fun temp10406_175 () (_ BitVec 64))
(declare-fun temp10406_176 () (_ BitVec 64))
(declare-fun temp10406_177 () (_ BitVec 64))
(declare-fun temp10406_178 () (_ BitVec 64))
(declare-fun temp10406_179 () (_ BitVec 64))
(declare-fun temp10406_180 () (_ BitVec 64))
(declare-fun temp10406_181 () (_ BitVec 64))
(declare-fun temp10406_182 () (_ BitVec 64))
(declare-fun temp10406_183 () (_ BitVec 64))
(declare-fun temp10406_184 () (_ BitVec 64))
(declare-fun temp10406_185 () (_ BitVec 64))
(declare-fun temp10406_186 () (_ BitVec 64))
(declare-fun temp10406_187 () (_ BitVec 64))
(declare-fun temp10406_188 () (_ BitVec 64))
(declare-fun temp10406_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10406_190 () (_ BitVec 64))
(declare-fun temp10406_192 () (_ BitVec 64))
(declare-fun temp10406_193 () (_ BitVec 64))
(declare-fun temp10406_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10406_194 () (_ BitVec 64))
(declare-fun temp10406_195 () (_ BitVec 64))
(declare-fun temp10406_197 () (_ BitVec 64))
(declare-fun temp10406_198 () (_ BitVec 64))
(declare-fun temp10406_196 () (_ BitVec 64))
(declare-fun temp10406_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10406_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10406_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10406_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10406_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10406_204 () (_ BitVec 64))
(declare-fun temp10406_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10406_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10406_207 () (_ BitVec 64))
(declare-fun temp10406_208 () (_ BitVec 64))
(declare-fun temp10406_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10406_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10406_211 () (_ BitVec 64))
(declare-fun temp10406_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10406_213 () (_ BitVec 64))
(declare-fun temp10406_214 () (_ BitVec 64))
(declare-fun temp10406_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10406_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10406_217 () (_ BitVec 64))
(declare-fun temp10406_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10406_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10406_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10406_221 () (_ BitVec 64))
(assert (= temp10406_1 #x0000000000000001))
(assert (= var77203 temp10406_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10406_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10406_2)))
(assert (= temp10406_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10406_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10406_4 #x0000000000000000))
(assert (= var210941 temp10406_4))
(assert (= temp10406_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10406_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10406_6 #x0000000000000000))
(assert (= var210986 temp10406_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10406_7 #x0000000000000000))
(assert (= temp10406_8 temp10406_7))
(assert (= temp10406_9 (select ARGNAME_padding_NAMEEND_VAL temp10406_8)))
(assert (= temp10406_10 #x0000000000000001))
(assert (= temp10406_11 temp10406_10))
(assert (= temp10406_12 (select ARGNAME_padding_NAMEEND_VAL temp10406_11)))
(assert (= temp10406_13 #x0000000000000002))
(assert (= temp10406_14 temp10406_13))
(assert (= temp10406_15 (select ARGNAME_padding_NAMEEND_VAL temp10406_14)))
(assert (= temp10406_16 #x0000000000000003))
(assert (= temp10406_17 temp10406_16))
(assert (= temp10406_18 (select ARGNAME_padding_NAMEEND_VAL temp10406_17)))
(assert (= temp10406_19 #x0000000000000004))
(assert (= temp10406_20 temp10406_19))
(assert (= temp10406_21 (select ARGNAME_padding_NAMEEND_VAL temp10406_20)))
(assert (= temp10406_22 #x0000000000000005))
(assert (= temp10406_23 temp10406_22))
(assert (= temp10406_24 (select ARGNAME_padding_NAMEEND_VAL temp10406_23)))
(assert (= temp10406_25 #x0000000000000000))
(assert (= temp10406_26 #x0000000000000000))
(assert (= temp10406_27 temp10406_26))
(assert (= temp10406_28 (select ARGNAME_padding_NAMEEND_VAL temp10406_27)))
(assert (= temp10406_29 #x0000000000000000))
(assert (= temp10406_30 #x0000000000000001))
(assert (= temp10406_31 temp10406_30))
(assert (= temp10406_32 (select ARGNAME_padding_NAMEEND_VAL temp10406_31)))
(assert (= temp10406_33 #x0000000000000000))
(assert (= temp10406_34 #x0000000000000002))
(assert (= temp10406_35 temp10406_34))
(assert (= temp10406_36 (select ARGNAME_padding_NAMEEND_VAL temp10406_35)))
(assert (= temp10406_37 #x0000000000000000))
(assert (= temp10406_38 #x0000000000000003))
(assert (= temp10406_39 temp10406_38))
(assert (= temp10406_40 (select ARGNAME_padding_NAMEEND_VAL temp10406_39)))
(assert (= temp10406_41 #x0000000000000000))
(assert (= temp10406_42 #x0000000000000004))
(assert (= temp10406_43 temp10406_42))
(assert (= temp10406_44 (select ARGNAME_padding_NAMEEND_VAL temp10406_43)))
(assert (= temp10406_45 #x0000000000000000))
(assert (= temp10406_46 #x0000000000000005))
(assert (= temp10406_47 temp10406_46))
(assert (= temp10406_48 (select ARGNAME_padding_NAMEEND_VAL temp10406_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10406_28 temp10406_25)
             (bvslt temp10406_32 temp10406_29)
             (bvslt temp10406_36 temp10406_33)
             (bvslt temp10406_40 temp10406_37)
             (bvslt temp10406_44 temp10406_41)
             (bvslt temp10406_48 temp10406_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10406_49 #x0000000000000000))
(assert (= var1191714 temp10406_49))
(assert (= temp10406_50 #x0000000000000000))
(assert (= temp10406_51 temp10406_50))
(assert (= temp10406_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10406_51)))
(assert (= temp10406_53 #x0000000000000001))
(assert (= temp10406_54 temp10406_53))
(assert (= temp10406_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10406_54)))
(assert (= temp10406_56 #x0000000000000002))
(assert (= temp10406_57 temp10406_56))
(assert (= temp10406_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10406_57)))
(assert (= temp10406_59 #x0000000000000003))
(assert (= temp10406_60 temp10406_59))
(assert (= temp10406_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10406_60)))
(assert (= temp10406_62 #x0000000000000004))
(assert (= temp10406_63 temp10406_62))
(assert (= temp10406_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10406_63)))
(assert (= temp10406_65 #x0000000000000005))
(assert (= temp10406_66 temp10406_65))
(assert (= temp10406_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10406_66)))
(assert (= temp10406_68 #x0000000000000000))
(assert (= temp10406_69 #x0000000000000000))
(assert (= temp10406_70 temp10406_69))
(assert (= temp10406_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10406_70)))
(assert (= temp10406_72 #x0000000000000000))
(assert (= temp10406_73 #x0000000000000001))
(assert (= temp10406_74 temp10406_73))
(assert (= temp10406_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10406_74)))
(assert (= temp10406_76 #x0000000000000000))
(assert (= temp10406_77 #x0000000000000002))
(assert (= temp10406_78 temp10406_77))
(assert (= temp10406_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10406_78)))
(assert (= temp10406_80 #x0000000000000000))
(assert (= temp10406_81 #x0000000000000003))
(assert (= temp10406_82 temp10406_81))
(assert (= temp10406_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10406_82)))
(assert (= temp10406_84 #x0000000000000000))
(assert (= temp10406_85 #x0000000000000004))
(assert (= temp10406_86 temp10406_85))
(assert (= temp10406_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10406_86)))
(assert (= temp10406_88 #x0000000000000000))
(assert (= temp10406_89 #x0000000000000005))
(assert (= temp10406_90 temp10406_89))
(assert (= temp10406_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10406_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10406_71 temp10406_68)
             (bvslt temp10406_75 temp10406_72)
             (bvslt temp10406_79 temp10406_76)
             (bvslt temp10406_83 temp10406_80)
             (bvslt temp10406_87 temp10406_84)
             (bvslt temp10406_91 temp10406_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10406_92 #x0000000000000000))
(assert (= var1191725 temp10406_92))
(assert (= temp10406_93 #x0000000000000000))
(assert (= temp10406_94 temp10406_93))
(assert (= temp10406_95 (select ARGNAME_stride_NAMEEND_VAL temp10406_94)))
(assert (= temp10406_96 #x0000000000000001))
(assert (= temp10406_97 temp10406_96))
(assert (= temp10406_98 (select ARGNAME_stride_NAMEEND_VAL temp10406_97)))
(assert (= temp10406_99 #x0000000000000002))
(assert (= temp10406_100 temp10406_99))
(assert (= temp10406_101 (select ARGNAME_stride_NAMEEND_VAL temp10406_100)))
(assert (= temp10406_102 #x0000000000000003))
(assert (= temp10406_103 temp10406_102))
(assert (= temp10406_104 (select ARGNAME_stride_NAMEEND_VAL temp10406_103)))
(assert (= temp10406_105 #x0000000000000004))
(assert (= temp10406_106 temp10406_105))
(assert (= temp10406_107 (select ARGNAME_stride_NAMEEND_VAL temp10406_106)))
(assert (= temp10406_108 #x0000000000000005))
(assert (= temp10406_109 temp10406_108))
(assert (= temp10406_110 (select ARGNAME_stride_NAMEEND_VAL temp10406_109)))
(assert (= temp10406_111 #x0000000000000000))
(assert (= temp10406_112 #x0000000000000000))
(assert (= temp10406_113 temp10406_112))
(assert (= temp10406_114 (select ARGNAME_stride_NAMEEND_VAL temp10406_113)))
(assert (= temp10406_115 #x0000000000000000))
(assert (= temp10406_116 #x0000000000000001))
(assert (= temp10406_117 temp10406_116))
(assert (= temp10406_118 (select ARGNAME_stride_NAMEEND_VAL temp10406_117)))
(assert (= temp10406_119 #x0000000000000000))
(assert (= temp10406_120 #x0000000000000002))
(assert (= temp10406_121 temp10406_120))
(assert (= temp10406_122 (select ARGNAME_stride_NAMEEND_VAL temp10406_121)))
(assert (= temp10406_123 #x0000000000000000))
(assert (= temp10406_124 #x0000000000000003))
(assert (= temp10406_125 temp10406_124))
(assert (= temp10406_126 (select ARGNAME_stride_NAMEEND_VAL temp10406_125)))
(assert (= temp10406_127 #x0000000000000000))
(assert (= temp10406_128 #x0000000000000004))
(assert (= temp10406_129 temp10406_128))
(assert (= temp10406_130 (select ARGNAME_stride_NAMEEND_VAL temp10406_129)))
(assert (= temp10406_131 #x0000000000000000))
(assert (= temp10406_132 #x0000000000000005))
(assert (= temp10406_133 temp10406_132))
(assert (= temp10406_134 (select ARGNAME_stride_NAMEEND_VAL temp10406_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10406_114 temp10406_111)
             (bvsle temp10406_118 temp10406_115)
             (bvsle temp10406_122 temp10406_119)
             (bvsle temp10406_126 temp10406_123)
             (bvsle temp10406_130 temp10406_127)
             (bvsle temp10406_134 temp10406_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10406_135 #x0000000000000000))
(assert (= var1191735 temp10406_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10406_136 #x0000000000000001))
(assert (= var1191747 temp10406_136))
(assert (= temp10406_137 #x0000000000000000))
(assert (= var1179826 temp10406_137))
(assert (= temp10406_138 #x0000000000000000))
(assert (= temp10406_139 temp10406_138))
(assert (= temp10406_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10406_139)))
(assert (= temp10406_141 #x0000000000000001))
(assert (= temp10406_142 temp10406_141))
(assert (= temp10406_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10406_142)))
(assert (= temp10406_144 #x0000000000000002))
(assert (= temp10406_145 temp10406_144))
(assert (= temp10406_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10406_145)))
(assert (= temp10406_147 #x0000000000000003))
(assert (= temp10406_148 temp10406_147))
(assert (= temp10406_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10406_148)))
(assert (= temp10406_150 #x0000000000000004))
(assert (= temp10406_151 temp10406_150))
(assert (= temp10406_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10406_151)))
(assert (= temp10406_153 #x0000000000000005))
(assert (= temp10406_154 temp10406_153))
(assert (= temp10406_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10406_154)))
(assert (= temp10406_157 var1179826))
(assert (= temp10406_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10406_157)))
(assert (= temp10406_156 temp10406_158))
(assert (= var1191780
   (ite (bvslt temp10406_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10406_159 #x0000000000000000))
(assert (= var1191780 temp10406_159))
(assert (= temp10406_160 #x0000000000000000))
(assert (= var1179826 temp10406_160))
(assert (= temp10406_162 var1179826))
(assert (= temp10406_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10406_162)))
(assert (= temp10406_161 temp10406_163))
(assert (= var1191802 (bvsmod temp10406_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10406_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10406_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10406_165 #x0000000000000001))
(assert (= var1191803 temp10406_165))
(assert (= temp10406_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10406_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10406_167 #x0000000000000001))
(assert (= var1191823 temp10406_167))
(assert (= temp10406_168 #x0000000000000001))
(assert (= var1180714 temp10406_168))
(assert (= temp10406_169 #x0000000000000000))
(assert (= temp10406_170 temp10406_169))
(assert (= temp10406_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10406_170)))
(assert (= temp10406_172 #x0000000000000001))
(assert (= temp10406_173 temp10406_172))
(assert (= temp10406_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10406_173)))
(assert (= temp10406_175 #x0000000000000002))
(assert (= temp10406_176 temp10406_175))
(assert (= temp10406_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10406_176)))
(assert (= temp10406_178 #x0000000000000003))
(assert (= temp10406_179 temp10406_178))
(assert (= temp10406_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10406_179)))
(assert (= temp10406_181 #x0000000000000004))
(assert (= temp10406_182 temp10406_181))
(assert (= temp10406_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10406_182)))
(assert (= temp10406_184 #x0000000000000005))
(assert (= temp10406_185 temp10406_184))
(assert (= temp10406_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10406_185)))
(assert (= temp10406_187 #x0000000000000000))
(assert (= temp10406_188
   (ite (bvslt var1180714 temp10406_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10406_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10406_188)))
(assert (= var1191831 temp10406_189))
(assert (bvslt (ite (bvslt var1180714 temp10406_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10406_190 #x0000000000000001))
(assert (= var1180714 temp10406_190))
(assert (= temp10406_192 var1180714))
(assert (= temp10406_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10406_192)))
(assert (= temp10406_191 temp10406_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10406_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10406_194 #x0000000000000001))
(assert (= var1191836 temp10406_194))
(assert (= temp10406_195 #x0000000000000000))
(assert (= var1179826 temp10406_195))
(assert (= temp10406_197 var1179826))
(assert (= temp10406_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10406_197)))
(assert (= temp10406_196 temp10406_198))
(assert (= temp10406_199 #x0000000000000002))
(assert (= var1586025 temp10406_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10406_200 #x0000000000000001))
(assert (= var1191993 temp10406_200))
(assert (= temp10406_201 #x0000000000000001))
(assert (= var2700303 temp10406_201))
(assert (= temp10406_202 #x0000000000000001))
(assert (= var2962447 temp10406_202))
(assert (= temp10406_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10406_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10406_204 #x0000000000000001))
(assert (= var211058 temp10406_204))
(assert (= temp10406_205 #x0000000000000001))
(assert (= var211188 temp10406_205))
(assert (= var3879401 var211188))
(assert (= temp10406_206 #x0000000000000000))
(assert (= var3866802 temp10406_206))
(assert (= temp10406_207 #x0000000000000000))
(assert (= temp10406_208
   (ite (bvslt var3866802 temp10406_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10406_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10406_208)))
(assert (= var3879420 temp10406_209))
(assert (bvslt (ite (bvslt var3866802 temp10406_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10406_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10406_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10406_211 #x0000000000000000))
(assert (= var3879421 temp10406_211))
(assert (= temp10406_212 #x0000000000000001))
(assert (= var3867690 temp10406_212))
(assert (= temp10406_213 #x0000000000000000))
(assert (= temp10406_214
   (ite (bvslt var3867690 temp10406_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10406_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10406_214)))
(assert (= var3879423 temp10406_215))
(assert (bvslt (ite (bvslt var3867690 temp10406_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10406_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10406_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10406_217 #x0000000000000001))
(assert (= var3879424 temp10406_217))
(assert (= temp10406_218 #x0000000000000000))
(assert (= var4079423 temp10406_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10406_219 #x0000000000000002))
(assert (= var4208259 temp10406_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10406_220 #x0000000000000000))
(assert (= var4273820 temp10406_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10406_221 #x0000000000000001))
(assert (= var211058 temp10406_221))
(model-add temp10406_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10406_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10406_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10406_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





