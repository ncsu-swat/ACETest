(declare-fun temp382_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp382_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp382_3 () (_ BitVec 64))
(declare-fun temp382_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp382_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp382_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp382_7 () (_ BitVec 64))
(declare-fun temp382_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp382_9 () (_ BitVec 64))
(declare-fun temp382_10 () (_ BitVec 64))
(declare-fun temp382_11 () (_ BitVec 64))
(declare-fun temp382_12 () (_ BitVec 64))
(declare-fun temp382_13 () (_ BitVec 64))
(declare-fun temp382_14 () (_ BitVec 64))
(declare-fun temp382_15 () (_ BitVec 64))
(declare-fun temp382_16 () (_ BitVec 64))
(declare-fun temp382_17 () (_ BitVec 64))
(declare-fun temp382_18 () (_ BitVec 64))
(declare-fun temp382_19 () (_ BitVec 64))
(declare-fun temp382_20 () (_ BitVec 64))
(declare-fun temp382_21 () (_ BitVec 64))
(declare-fun temp382_22 () (_ BitVec 64))
(declare-fun temp382_23 () (_ BitVec 64))
(declare-fun temp382_24 () (_ BitVec 64))
(declare-fun temp382_25 () (_ BitVec 64))
(declare-fun temp382_26 () (_ BitVec 64))
(declare-fun temp382_27 () (_ BitVec 64))
(declare-fun temp382_28 () (_ BitVec 64))
(declare-fun temp382_29 () (_ BitVec 64))
(declare-fun temp382_30 () (_ BitVec 64))
(declare-fun temp382_31 () (_ BitVec 64))
(declare-fun temp382_32 () (_ BitVec 64))
(declare-fun temp382_33 () (_ BitVec 64))
(declare-fun temp382_34 () (_ BitVec 64))
(declare-fun temp382_35 () (_ BitVec 64))
(declare-fun temp382_36 () (_ BitVec 64))
(declare-fun temp382_37 () (_ BitVec 64))
(declare-fun temp382_38 () (_ BitVec 64))
(declare-fun temp382_39 () (_ BitVec 64))
(declare-fun temp382_40 () (_ BitVec 64))
(declare-fun temp382_41 () (_ BitVec 64))
(declare-fun temp382_42 () (_ BitVec 64))
(declare-fun temp382_43 () (_ BitVec 64))
(declare-fun temp382_44 () (_ BitVec 64))
(declare-fun temp382_45 () (_ BitVec 64))
(declare-fun temp382_46 () (_ BitVec 64))
(declare-fun temp382_47 () (_ BitVec 64))
(declare-fun temp382_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp382_49 () (_ BitVec 64))
(declare-fun temp382_50 () (_ BitVec 64))
(declare-fun temp382_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp382_52 () (_ BitVec 64))
(declare-fun temp382_53 () (_ BitVec 64))
(declare-fun temp382_54 () (_ BitVec 64))
(declare-fun temp382_55 () (_ BitVec 64))
(declare-fun temp382_56 () (_ BitVec 64))
(declare-fun temp382_57 () (_ BitVec 64))
(declare-fun temp382_58 () (_ BitVec 64))
(declare-fun temp382_59 () (_ BitVec 64))
(declare-fun temp382_60 () (_ BitVec 64))
(declare-fun temp382_61 () (_ BitVec 64))
(declare-fun temp382_62 () (_ BitVec 64))
(declare-fun temp382_63 () (_ BitVec 64))
(declare-fun temp382_64 () (_ BitVec 64))
(declare-fun temp382_65 () (_ BitVec 64))
(declare-fun temp382_66 () (_ BitVec 64))
(declare-fun temp382_67 () (_ BitVec 64))
(declare-fun temp382_68 () (_ BitVec 64))
(declare-fun temp382_69 () (_ BitVec 64))
(declare-fun temp382_70 () (_ BitVec 64))
(declare-fun temp382_71 () (_ BitVec 64))
(declare-fun temp382_72 () (_ BitVec 64))
(declare-fun temp382_73 () (_ BitVec 64))
(declare-fun temp382_74 () (_ BitVec 64))
(declare-fun temp382_75 () (_ BitVec 64))
(declare-fun temp382_76 () (_ BitVec 64))
(declare-fun temp382_77 () (_ BitVec 64))
(declare-fun temp382_78 () (_ BitVec 64))
(declare-fun temp382_79 () (_ BitVec 64))
(declare-fun temp382_80 () (_ BitVec 64))
(declare-fun temp382_81 () (_ BitVec 64))
(declare-fun temp382_82 () (_ BitVec 64))
(declare-fun temp382_83 () (_ BitVec 64))
(declare-fun temp382_84 () (_ BitVec 64))
(declare-fun temp382_85 () (_ BitVec 64))
(declare-fun temp382_86 () (_ BitVec 64))
(declare-fun temp382_87 () (_ BitVec 64))
(declare-fun temp382_88 () (_ BitVec 64))
(declare-fun temp382_89 () (_ BitVec 64))
(declare-fun temp382_90 () (_ BitVec 64))
(declare-fun temp382_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp382_92 () (_ BitVec 64))
(declare-fun temp382_93 () (_ BitVec 64))
(declare-fun temp382_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp382_95 () (_ BitVec 64))
(declare-fun temp382_96 () (_ BitVec 64))
(declare-fun temp382_97 () (_ BitVec 64))
(declare-fun temp382_98 () (_ BitVec 64))
(declare-fun temp382_99 () (_ BitVec 64))
(declare-fun temp382_100 () (_ BitVec 64))
(declare-fun temp382_101 () (_ BitVec 64))
(declare-fun temp382_102 () (_ BitVec 64))
(declare-fun temp382_103 () (_ BitVec 64))
(declare-fun temp382_104 () (_ BitVec 64))
(declare-fun temp382_105 () (_ BitVec 64))
(declare-fun temp382_106 () (_ BitVec 64))
(declare-fun temp382_107 () (_ BitVec 64))
(declare-fun temp382_108 () (_ BitVec 64))
(declare-fun temp382_109 () (_ BitVec 64))
(declare-fun temp382_110 () (_ BitVec 64))
(declare-fun temp382_111 () (_ BitVec 64))
(declare-fun temp382_112 () (_ BitVec 64))
(declare-fun temp382_113 () (_ BitVec 64))
(declare-fun temp382_114 () (_ BitVec 64))
(declare-fun temp382_115 () (_ BitVec 64))
(declare-fun temp382_116 () (_ BitVec 64))
(declare-fun temp382_117 () (_ BitVec 64))
(declare-fun temp382_118 () (_ BitVec 64))
(declare-fun temp382_119 () (_ BitVec 64))
(declare-fun temp382_120 () (_ BitVec 64))
(declare-fun temp382_121 () (_ BitVec 64))
(declare-fun temp382_122 () (_ BitVec 64))
(declare-fun temp382_123 () (_ BitVec 64))
(declare-fun temp382_124 () (_ BitVec 64))
(declare-fun temp382_125 () (_ BitVec 64))
(declare-fun temp382_126 () (_ BitVec 64))
(declare-fun temp382_127 () (_ BitVec 64))
(declare-fun temp382_128 () (_ BitVec 64))
(declare-fun temp382_129 () (_ BitVec 64))
(declare-fun temp382_130 () (_ BitVec 64))
(declare-fun temp382_131 () (_ BitVec 64))
(declare-fun temp382_132 () (_ BitVec 64))
(declare-fun temp382_133 () (_ BitVec 64))
(declare-fun temp382_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp382_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp382_136 () (_ BitVec 64))
(declare-fun temp382_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp382_138 () (_ BitVec 64))
(declare-fun temp382_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp382_140 () (_ BitVec 64))
(declare-fun temp382_141 () (_ BitVec 64))
(declare-fun temp382_142 () (_ BitVec 64))
(declare-fun temp382_143 () (_ BitVec 64))
(declare-fun temp382_144 () (_ BitVec 64))
(declare-fun temp382_145 () (_ BitVec 64))
(declare-fun temp382_146 () (_ BitVec 64))
(declare-fun temp382_147 () (_ BitVec 64))
(declare-fun temp382_148 () (_ BitVec 64))
(declare-fun temp382_149 () (_ BitVec 64))
(declare-fun temp382_150 () (_ BitVec 64))
(declare-fun temp382_151 () (_ BitVec 64))
(declare-fun temp382_152 () (_ BitVec 64))
(declare-fun temp382_153 () (_ BitVec 64))
(declare-fun temp382_154 () (_ BitVec 64))
(declare-fun temp382_155 () (_ BitVec 64))
(declare-fun temp382_157 () (_ BitVec 64))
(declare-fun temp382_158 () (_ BitVec 64))
(declare-fun temp382_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp382_159 () (_ BitVec 64))
(declare-fun temp382_160 () (_ BitVec 64))
(declare-fun temp382_162 () (_ BitVec 64))
(declare-fun temp382_163 () (_ BitVec 64))
(declare-fun temp382_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp382_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp382_165 () (_ BitVec 64))
(declare-fun temp382_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp382_167 () (_ BitVec 64))
(declare-fun temp382_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp382_169 () (_ BitVec 64))
(declare-fun temp382_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp382_171 () (_ BitVec 64))
(declare-fun temp382_172 () (_ BitVec 64))
(declare-fun temp382_173 () (_ BitVec 64))
(declare-fun temp382_174 () (_ BitVec 64))
(declare-fun temp382_175 () (_ BitVec 64))
(declare-fun temp382_176 () (_ BitVec 64))
(declare-fun temp382_177 () (_ BitVec 64))
(declare-fun temp382_178 () (_ BitVec 64))
(declare-fun temp382_179 () (_ BitVec 64))
(declare-fun temp382_180 () (_ BitVec 64))
(declare-fun temp382_181 () (_ BitVec 64))
(declare-fun temp382_182 () (_ BitVec 64))
(declare-fun temp382_183 () (_ BitVec 64))
(declare-fun temp382_184 () (_ BitVec 64))
(declare-fun temp382_185 () (_ BitVec 64))
(declare-fun temp382_186 () (_ BitVec 64))
(declare-fun temp382_187 () (_ BitVec 64))
(declare-fun temp382_188 () (_ BitVec 64))
(declare-fun temp382_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp382_190 () (_ BitVec 64))
(declare-fun temp382_192 () (_ BitVec 64))
(declare-fun temp382_193 () (_ BitVec 64))
(declare-fun temp382_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp382_194 () (_ BitVec 64))
(declare-fun temp382_195 () (_ BitVec 64))
(declare-fun temp382_197 () (_ BitVec 64))
(declare-fun temp382_198 () (_ BitVec 64))
(declare-fun temp382_196 () (_ BitVec 64))
(declare-fun temp382_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp382_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp382_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp382_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp382_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp382_204 () (_ BitVec 64))
(declare-fun temp382_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp382_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp382_207 () (_ BitVec 64))
(declare-fun temp382_208 () (_ BitVec 64))
(declare-fun temp382_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp382_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp382_211 () (_ BitVec 64))
(declare-fun temp382_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp382_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp382_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp382_215 () (_ BitVec 64))
(assert (= temp382_1 #x0000000000000001))
(assert (= var77203 temp382_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp382_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp382_2)))
(assert (= temp382_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp382_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp382_4 #x0000000000000000))
(assert (= var210941 temp382_4))
(assert (= temp382_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp382_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp382_6 #x0000000000000000))
(assert (= var210986 temp382_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp382_7 #x0000000000000000))
(assert (= temp382_8 temp382_7))
(assert (= temp382_9 (select ARGNAME_padding_NAMEEND_VAL temp382_8)))
(assert (= temp382_10 #x0000000000000001))
(assert (= temp382_11 temp382_10))
(assert (= temp382_12 (select ARGNAME_padding_NAMEEND_VAL temp382_11)))
(assert (= temp382_13 #x0000000000000002))
(assert (= temp382_14 temp382_13))
(assert (= temp382_15 (select ARGNAME_padding_NAMEEND_VAL temp382_14)))
(assert (= temp382_16 #x0000000000000003))
(assert (= temp382_17 temp382_16))
(assert (= temp382_18 (select ARGNAME_padding_NAMEEND_VAL temp382_17)))
(assert (= temp382_19 #x0000000000000004))
(assert (= temp382_20 temp382_19))
(assert (= temp382_21 (select ARGNAME_padding_NAMEEND_VAL temp382_20)))
(assert (= temp382_22 #x0000000000000005))
(assert (= temp382_23 temp382_22))
(assert (= temp382_24 (select ARGNAME_padding_NAMEEND_VAL temp382_23)))
(assert (= temp382_25 #x0000000000000000))
(assert (= temp382_26 #x0000000000000000))
(assert (= temp382_27 temp382_26))
(assert (= temp382_28 (select ARGNAME_padding_NAMEEND_VAL temp382_27)))
(assert (= temp382_29 #x0000000000000000))
(assert (= temp382_30 #x0000000000000001))
(assert (= temp382_31 temp382_30))
(assert (= temp382_32 (select ARGNAME_padding_NAMEEND_VAL temp382_31)))
(assert (= temp382_33 #x0000000000000000))
(assert (= temp382_34 #x0000000000000002))
(assert (= temp382_35 temp382_34))
(assert (= temp382_36 (select ARGNAME_padding_NAMEEND_VAL temp382_35)))
(assert (= temp382_37 #x0000000000000000))
(assert (= temp382_38 #x0000000000000003))
(assert (= temp382_39 temp382_38))
(assert (= temp382_40 (select ARGNAME_padding_NAMEEND_VAL temp382_39)))
(assert (= temp382_41 #x0000000000000000))
(assert (= temp382_42 #x0000000000000004))
(assert (= temp382_43 temp382_42))
(assert (= temp382_44 (select ARGNAME_padding_NAMEEND_VAL temp382_43)))
(assert (= temp382_45 #x0000000000000000))
(assert (= temp382_46 #x0000000000000005))
(assert (= temp382_47 temp382_46))
(assert (= temp382_48 (select ARGNAME_padding_NAMEEND_VAL temp382_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp382_28 temp382_25)
             (bvslt temp382_32 temp382_29)
             (bvslt temp382_36 temp382_33)
             (bvslt temp382_40 temp382_37)
             (bvslt temp382_44 temp382_41)
             (bvslt temp382_48 temp382_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp382_49 #x0000000000000000))
(assert (= var1191714 temp382_49))
(assert (= temp382_50 #x0000000000000000))
(assert (= temp382_51 temp382_50))
(assert (= temp382_52 (select ARGNAME_output_padding_NAMEEND_VAL temp382_51)))
(assert (= temp382_53 #x0000000000000001))
(assert (= temp382_54 temp382_53))
(assert (= temp382_55 (select ARGNAME_output_padding_NAMEEND_VAL temp382_54)))
(assert (= temp382_56 #x0000000000000002))
(assert (= temp382_57 temp382_56))
(assert (= temp382_58 (select ARGNAME_output_padding_NAMEEND_VAL temp382_57)))
(assert (= temp382_59 #x0000000000000003))
(assert (= temp382_60 temp382_59))
(assert (= temp382_61 (select ARGNAME_output_padding_NAMEEND_VAL temp382_60)))
(assert (= temp382_62 #x0000000000000004))
(assert (= temp382_63 temp382_62))
(assert (= temp382_64 (select ARGNAME_output_padding_NAMEEND_VAL temp382_63)))
(assert (= temp382_65 #x0000000000000005))
(assert (= temp382_66 temp382_65))
(assert (= temp382_67 (select ARGNAME_output_padding_NAMEEND_VAL temp382_66)))
(assert (= temp382_68 #x0000000000000000))
(assert (= temp382_69 #x0000000000000000))
(assert (= temp382_70 temp382_69))
(assert (= temp382_71 (select ARGNAME_output_padding_NAMEEND_VAL temp382_70)))
(assert (= temp382_72 #x0000000000000000))
(assert (= temp382_73 #x0000000000000001))
(assert (= temp382_74 temp382_73))
(assert (= temp382_75 (select ARGNAME_output_padding_NAMEEND_VAL temp382_74)))
(assert (= temp382_76 #x0000000000000000))
(assert (= temp382_77 #x0000000000000002))
(assert (= temp382_78 temp382_77))
(assert (= temp382_79 (select ARGNAME_output_padding_NAMEEND_VAL temp382_78)))
(assert (= temp382_80 #x0000000000000000))
(assert (= temp382_81 #x0000000000000003))
(assert (= temp382_82 temp382_81))
(assert (= temp382_83 (select ARGNAME_output_padding_NAMEEND_VAL temp382_82)))
(assert (= temp382_84 #x0000000000000000))
(assert (= temp382_85 #x0000000000000004))
(assert (= temp382_86 temp382_85))
(assert (= temp382_87 (select ARGNAME_output_padding_NAMEEND_VAL temp382_86)))
(assert (= temp382_88 #x0000000000000000))
(assert (= temp382_89 #x0000000000000005))
(assert (= temp382_90 temp382_89))
(assert (= temp382_91 (select ARGNAME_output_padding_NAMEEND_VAL temp382_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp382_71 temp382_68)
             (bvslt temp382_75 temp382_72)
             (bvslt temp382_79 temp382_76)
             (bvslt temp382_83 temp382_80)
             (bvslt temp382_87 temp382_84)
             (bvslt temp382_91 temp382_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp382_92 #x0000000000000000))
(assert (= var1191725 temp382_92))
(assert (= temp382_93 #x0000000000000000))
(assert (= temp382_94 temp382_93))
(assert (= temp382_95 (select ARGNAME_stride_NAMEEND_VAL temp382_94)))
(assert (= temp382_96 #x0000000000000001))
(assert (= temp382_97 temp382_96))
(assert (= temp382_98 (select ARGNAME_stride_NAMEEND_VAL temp382_97)))
(assert (= temp382_99 #x0000000000000002))
(assert (= temp382_100 temp382_99))
(assert (= temp382_101 (select ARGNAME_stride_NAMEEND_VAL temp382_100)))
(assert (= temp382_102 #x0000000000000003))
(assert (= temp382_103 temp382_102))
(assert (= temp382_104 (select ARGNAME_stride_NAMEEND_VAL temp382_103)))
(assert (= temp382_105 #x0000000000000004))
(assert (= temp382_106 temp382_105))
(assert (= temp382_107 (select ARGNAME_stride_NAMEEND_VAL temp382_106)))
(assert (= temp382_108 #x0000000000000005))
(assert (= temp382_109 temp382_108))
(assert (= temp382_110 (select ARGNAME_stride_NAMEEND_VAL temp382_109)))
(assert (= temp382_111 #x0000000000000000))
(assert (= temp382_112 #x0000000000000000))
(assert (= temp382_113 temp382_112))
(assert (= temp382_114 (select ARGNAME_stride_NAMEEND_VAL temp382_113)))
(assert (= temp382_115 #x0000000000000000))
(assert (= temp382_116 #x0000000000000001))
(assert (= temp382_117 temp382_116))
(assert (= temp382_118 (select ARGNAME_stride_NAMEEND_VAL temp382_117)))
(assert (= temp382_119 #x0000000000000000))
(assert (= temp382_120 #x0000000000000002))
(assert (= temp382_121 temp382_120))
(assert (= temp382_122 (select ARGNAME_stride_NAMEEND_VAL temp382_121)))
(assert (= temp382_123 #x0000000000000000))
(assert (= temp382_124 #x0000000000000003))
(assert (= temp382_125 temp382_124))
(assert (= temp382_126 (select ARGNAME_stride_NAMEEND_VAL temp382_125)))
(assert (= temp382_127 #x0000000000000000))
(assert (= temp382_128 #x0000000000000004))
(assert (= temp382_129 temp382_128))
(assert (= temp382_130 (select ARGNAME_stride_NAMEEND_VAL temp382_129)))
(assert (= temp382_131 #x0000000000000000))
(assert (= temp382_132 #x0000000000000005))
(assert (= temp382_133 temp382_132))
(assert (= temp382_134 (select ARGNAME_stride_NAMEEND_VAL temp382_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp382_114 temp382_111)
             (bvsle temp382_118 temp382_115)
             (bvsle temp382_122 temp382_119)
             (bvsle temp382_126 temp382_123)
             (bvsle temp382_130 temp382_127)
             (bvsle temp382_134 temp382_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp382_135 #x0000000000000000))
(assert (= var1191735 temp382_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp382_136 #x0000000000000001))
(assert (= var1191747 temp382_136))
(assert (= temp382_137 #x0000000000000000))
(assert (= var1179826 temp382_137))
(assert (= temp382_138 #x0000000000000000))
(assert (= temp382_139 temp382_138))
(assert (= temp382_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp382_139)))
(assert (= temp382_141 #x0000000000000001))
(assert (= temp382_142 temp382_141))
(assert (= temp382_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp382_142)))
(assert (= temp382_144 #x0000000000000002))
(assert (= temp382_145 temp382_144))
(assert (= temp382_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp382_145)))
(assert (= temp382_147 #x0000000000000003))
(assert (= temp382_148 temp382_147))
(assert (= temp382_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp382_148)))
(assert (= temp382_150 #x0000000000000004))
(assert (= temp382_151 temp382_150))
(assert (= temp382_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp382_151)))
(assert (= temp382_153 #x0000000000000005))
(assert (= temp382_154 temp382_153))
(assert (= temp382_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp382_154)))
(assert (= temp382_157 var1179826))
(assert (= temp382_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp382_157)))
(assert (= temp382_156 temp382_158))
(assert (= var1191780
   (ite (bvslt temp382_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp382_159 #x0000000000000000))
(assert (= var1191780 temp382_159))
(assert (= temp382_160 #x0000000000000000))
(assert (= var1179826 temp382_160))
(assert (= temp382_162 var1179826))
(assert (= temp382_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp382_162)))
(assert (= temp382_161 temp382_163))
(assert (= var1191802 (bvsmod temp382_161 ARGNAME_groups_NAMEEND)))
(assert (= temp382_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp382_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp382_165 #x0000000000000001))
(assert (= var1191803 temp382_165))
(assert (= temp382_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp382_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp382_167 #x0000000000000001))
(assert (= var1191823 temp382_167))
(assert (= temp382_168 #x0000000000000001))
(assert (= var1180714 temp382_168))
(assert (= temp382_169 #x0000000000000000))
(assert (= temp382_170 temp382_169))
(assert (= temp382_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp382_170)))
(assert (= temp382_172 #x0000000000000001))
(assert (= temp382_173 temp382_172))
(assert (= temp382_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp382_173)))
(assert (= temp382_175 #x0000000000000002))
(assert (= temp382_176 temp382_175))
(assert (= temp382_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp382_176)))
(assert (= temp382_178 #x0000000000000003))
(assert (= temp382_179 temp382_178))
(assert (= temp382_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp382_179)))
(assert (= temp382_181 #x0000000000000004))
(assert (= temp382_182 temp382_181))
(assert (= temp382_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp382_182)))
(assert (= temp382_184 #x0000000000000005))
(assert (= temp382_185 temp382_184))
(assert (= temp382_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp382_185)))
(assert (= temp382_187 #x0000000000000000))
(assert (= temp382_188
   (ite (bvslt var1180714 temp382_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp382_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp382_188)))
(assert (= var1191831 temp382_189))
(assert (bvslt (ite (bvslt var1180714 temp382_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp382_190 #x0000000000000001))
(assert (= var1180714 temp382_190))
(assert (= temp382_192 var1180714))
(assert (= temp382_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp382_192)))
(assert (= temp382_191 temp382_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp382_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp382_194 #x0000000000000001))
(assert (= var1191836 temp382_194))
(assert (= temp382_195 #x0000000000000000))
(assert (= var1179826 temp382_195))
(assert (= temp382_197 var1179826))
(assert (= temp382_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp382_197)))
(assert (= temp382_196 temp382_198))
(assert (= temp382_199 #x0000000000000002))
(assert (= var1586025 temp382_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp382_200 #x0000000000000001))
(assert (= var1191993 temp382_200))
(assert (= temp382_201 #x0000000000000001))
(assert (= var2700303 temp382_201))
(assert (= temp382_202 #x0000000000000001))
(assert (= var2962447 temp382_202))
(assert (= temp382_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp382_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp382_204 #x0000000000000001))
(assert (= var211058 temp382_204))
(assert (= temp382_205 #x0000000000000001))
(assert (= var211188 temp382_205))
(assert (= var3879401 var211188))
(assert (= temp382_206 #x0000000000000000))
(assert (= var3866802 temp382_206))
(assert (= temp382_207 #x0000000000000000))
(assert (= temp382_208
   (ite (bvslt var3866802 temp382_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp382_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp382_208)))
(assert (= var3879420 temp382_209))
(assert (bvslt (ite (bvslt var3866802 temp382_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp382_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp382_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp382_211 #x0000000000000001))
(assert (= var3879421 temp382_211))
(assert (= temp382_212 #x0000000000000000))
(assert (= var4079423 temp382_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp382_213 #x0000000000000002))
(assert (= var4208259 temp382_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp382_214 #x0000000000000000))
(assert (= var4273820 temp382_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp382_215 #x0000000000000001))
(assert (= var211058 temp382_215))
(model-add temp382_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp382_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp382_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp382_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




