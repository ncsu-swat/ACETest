(declare-fun temp10830_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10830_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10830_3 () (_ BitVec 64))
(declare-fun temp10830_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10830_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10830_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10830_7 () (_ BitVec 64))
(declare-fun temp10830_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10830_9 () (_ BitVec 64))
(declare-fun temp10830_10 () (_ BitVec 64))
(declare-fun temp10830_11 () (_ BitVec 64))
(declare-fun temp10830_12 () (_ BitVec 64))
(declare-fun temp10830_13 () (_ BitVec 64))
(declare-fun temp10830_14 () (_ BitVec 64))
(declare-fun temp10830_15 () (_ BitVec 64))
(declare-fun temp10830_16 () (_ BitVec 64))
(declare-fun temp10830_17 () (_ BitVec 64))
(declare-fun temp10830_18 () (_ BitVec 64))
(declare-fun temp10830_19 () (_ BitVec 64))
(declare-fun temp10830_20 () (_ BitVec 64))
(declare-fun temp10830_21 () (_ BitVec 64))
(declare-fun temp10830_22 () (_ BitVec 64))
(declare-fun temp10830_23 () (_ BitVec 64))
(declare-fun temp10830_24 () (_ BitVec 64))
(declare-fun temp10830_25 () (_ BitVec 64))
(declare-fun temp10830_26 () (_ BitVec 64))
(declare-fun temp10830_27 () (_ BitVec 64))
(declare-fun temp10830_28 () (_ BitVec 64))
(declare-fun temp10830_29 () (_ BitVec 64))
(declare-fun temp10830_30 () (_ BitVec 64))
(declare-fun temp10830_31 () (_ BitVec 64))
(declare-fun temp10830_32 () (_ BitVec 64))
(declare-fun temp10830_33 () (_ BitVec 64))
(declare-fun temp10830_34 () (_ BitVec 64))
(declare-fun temp10830_35 () (_ BitVec 64))
(declare-fun temp10830_36 () (_ BitVec 64))
(declare-fun temp10830_37 () (_ BitVec 64))
(declare-fun temp10830_38 () (_ BitVec 64))
(declare-fun temp10830_39 () (_ BitVec 64))
(declare-fun temp10830_40 () (_ BitVec 64))
(declare-fun temp10830_41 () (_ BitVec 64))
(declare-fun temp10830_42 () (_ BitVec 64))
(declare-fun temp10830_43 () (_ BitVec 64))
(declare-fun temp10830_44 () (_ BitVec 64))
(declare-fun temp10830_45 () (_ BitVec 64))
(declare-fun temp10830_46 () (_ BitVec 64))
(declare-fun temp10830_47 () (_ BitVec 64))
(declare-fun temp10830_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10830_49 () (_ BitVec 64))
(declare-fun temp10830_50 () (_ BitVec 64))
(declare-fun temp10830_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10830_52 () (_ BitVec 64))
(declare-fun temp10830_53 () (_ BitVec 64))
(declare-fun temp10830_54 () (_ BitVec 64))
(declare-fun temp10830_55 () (_ BitVec 64))
(declare-fun temp10830_56 () (_ BitVec 64))
(declare-fun temp10830_57 () (_ BitVec 64))
(declare-fun temp10830_58 () (_ BitVec 64))
(declare-fun temp10830_59 () (_ BitVec 64))
(declare-fun temp10830_60 () (_ BitVec 64))
(declare-fun temp10830_61 () (_ BitVec 64))
(declare-fun temp10830_62 () (_ BitVec 64))
(declare-fun temp10830_63 () (_ BitVec 64))
(declare-fun temp10830_64 () (_ BitVec 64))
(declare-fun temp10830_65 () (_ BitVec 64))
(declare-fun temp10830_66 () (_ BitVec 64))
(declare-fun temp10830_67 () (_ BitVec 64))
(declare-fun temp10830_68 () (_ BitVec 64))
(declare-fun temp10830_69 () (_ BitVec 64))
(declare-fun temp10830_70 () (_ BitVec 64))
(declare-fun temp10830_71 () (_ BitVec 64))
(declare-fun temp10830_72 () (_ BitVec 64))
(declare-fun temp10830_73 () (_ BitVec 64))
(declare-fun temp10830_74 () (_ BitVec 64))
(declare-fun temp10830_75 () (_ BitVec 64))
(declare-fun temp10830_76 () (_ BitVec 64))
(declare-fun temp10830_77 () (_ BitVec 64))
(declare-fun temp10830_78 () (_ BitVec 64))
(declare-fun temp10830_79 () (_ BitVec 64))
(declare-fun temp10830_80 () (_ BitVec 64))
(declare-fun temp10830_81 () (_ BitVec 64))
(declare-fun temp10830_82 () (_ BitVec 64))
(declare-fun temp10830_83 () (_ BitVec 64))
(declare-fun temp10830_84 () (_ BitVec 64))
(declare-fun temp10830_85 () (_ BitVec 64))
(declare-fun temp10830_86 () (_ BitVec 64))
(declare-fun temp10830_87 () (_ BitVec 64))
(declare-fun temp10830_88 () (_ BitVec 64))
(declare-fun temp10830_89 () (_ BitVec 64))
(declare-fun temp10830_90 () (_ BitVec 64))
(declare-fun temp10830_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10830_92 () (_ BitVec 64))
(declare-fun temp10830_93 () (_ BitVec 64))
(declare-fun temp10830_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10830_95 () (_ BitVec 64))
(declare-fun temp10830_96 () (_ BitVec 64))
(declare-fun temp10830_97 () (_ BitVec 64))
(declare-fun temp10830_98 () (_ BitVec 64))
(declare-fun temp10830_99 () (_ BitVec 64))
(declare-fun temp10830_100 () (_ BitVec 64))
(declare-fun temp10830_101 () (_ BitVec 64))
(declare-fun temp10830_102 () (_ BitVec 64))
(declare-fun temp10830_103 () (_ BitVec 64))
(declare-fun temp10830_104 () (_ BitVec 64))
(declare-fun temp10830_105 () (_ BitVec 64))
(declare-fun temp10830_106 () (_ BitVec 64))
(declare-fun temp10830_107 () (_ BitVec 64))
(declare-fun temp10830_108 () (_ BitVec 64))
(declare-fun temp10830_109 () (_ BitVec 64))
(declare-fun temp10830_110 () (_ BitVec 64))
(declare-fun temp10830_111 () (_ BitVec 64))
(declare-fun temp10830_112 () (_ BitVec 64))
(declare-fun temp10830_113 () (_ BitVec 64))
(declare-fun temp10830_114 () (_ BitVec 64))
(declare-fun temp10830_115 () (_ BitVec 64))
(declare-fun temp10830_116 () (_ BitVec 64))
(declare-fun temp10830_117 () (_ BitVec 64))
(declare-fun temp10830_118 () (_ BitVec 64))
(declare-fun temp10830_119 () (_ BitVec 64))
(declare-fun temp10830_120 () (_ BitVec 64))
(declare-fun temp10830_121 () (_ BitVec 64))
(declare-fun temp10830_122 () (_ BitVec 64))
(declare-fun temp10830_123 () (_ BitVec 64))
(declare-fun temp10830_124 () (_ BitVec 64))
(declare-fun temp10830_125 () (_ BitVec 64))
(declare-fun temp10830_126 () (_ BitVec 64))
(declare-fun temp10830_127 () (_ BitVec 64))
(declare-fun temp10830_128 () (_ BitVec 64))
(declare-fun temp10830_129 () (_ BitVec 64))
(declare-fun temp10830_130 () (_ BitVec 64))
(declare-fun temp10830_131 () (_ BitVec 64))
(declare-fun temp10830_132 () (_ BitVec 64))
(declare-fun temp10830_133 () (_ BitVec 64))
(declare-fun temp10830_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10830_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10830_136 () (_ BitVec 64))
(declare-fun temp10830_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10830_138 () (_ BitVec 64))
(declare-fun temp10830_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10830_140 () (_ BitVec 64))
(declare-fun temp10830_141 () (_ BitVec 64))
(declare-fun temp10830_142 () (_ BitVec 64))
(declare-fun temp10830_143 () (_ BitVec 64))
(declare-fun temp10830_144 () (_ BitVec 64))
(declare-fun temp10830_145 () (_ BitVec 64))
(declare-fun temp10830_146 () (_ BitVec 64))
(declare-fun temp10830_147 () (_ BitVec 64))
(declare-fun temp10830_148 () (_ BitVec 64))
(declare-fun temp10830_149 () (_ BitVec 64))
(declare-fun temp10830_150 () (_ BitVec 64))
(declare-fun temp10830_151 () (_ BitVec 64))
(declare-fun temp10830_152 () (_ BitVec 64))
(declare-fun temp10830_153 () (_ BitVec 64))
(declare-fun temp10830_154 () (_ BitVec 64))
(declare-fun temp10830_155 () (_ BitVec 64))
(declare-fun temp10830_157 () (_ BitVec 64))
(declare-fun temp10830_158 () (_ BitVec 64))
(declare-fun temp10830_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10830_159 () (_ BitVec 64))
(declare-fun temp10830_160 () (_ BitVec 64))
(declare-fun temp10830_162 () (_ BitVec 64))
(declare-fun temp10830_163 () (_ BitVec 64))
(declare-fun temp10830_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10830_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10830_165 () (_ BitVec 64))
(declare-fun temp10830_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10830_167 () (_ BitVec 64))
(declare-fun temp10830_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10830_169 () (_ BitVec 64))
(declare-fun temp10830_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10830_171 () (_ BitVec 64))
(declare-fun temp10830_172 () (_ BitVec 64))
(declare-fun temp10830_173 () (_ BitVec 64))
(declare-fun temp10830_174 () (_ BitVec 64))
(declare-fun temp10830_175 () (_ BitVec 64))
(declare-fun temp10830_176 () (_ BitVec 64))
(declare-fun temp10830_177 () (_ BitVec 64))
(declare-fun temp10830_178 () (_ BitVec 64))
(declare-fun temp10830_179 () (_ BitVec 64))
(declare-fun temp10830_180 () (_ BitVec 64))
(declare-fun temp10830_181 () (_ BitVec 64))
(declare-fun temp10830_182 () (_ BitVec 64))
(declare-fun temp10830_183 () (_ BitVec 64))
(declare-fun temp10830_184 () (_ BitVec 64))
(declare-fun temp10830_185 () (_ BitVec 64))
(declare-fun temp10830_186 () (_ BitVec 64))
(declare-fun temp10830_187 () (_ BitVec 64))
(declare-fun temp10830_188 () (_ BitVec 64))
(declare-fun temp10830_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10830_190 () (_ BitVec 64))
(declare-fun temp10830_192 () (_ BitVec 64))
(declare-fun temp10830_193 () (_ BitVec 64))
(declare-fun temp10830_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10830_194 () (_ BitVec 64))
(declare-fun temp10830_195 () (_ BitVec 64))
(declare-fun temp10830_197 () (_ BitVec 64))
(declare-fun temp10830_198 () (_ BitVec 64))
(declare-fun temp10830_196 () (_ BitVec 64))
(declare-fun temp10830_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10830_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10830_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10830_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10830_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10830_204 () (_ BitVec 64))
(declare-fun temp10830_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10830_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10830_207 () (_ BitVec 64))
(declare-fun temp10830_208 () (_ BitVec 64))
(declare-fun temp10830_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10830_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10830_211 () (_ BitVec 64))
(declare-fun temp10830_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10830_213 () (_ BitVec 64))
(declare-fun temp10830_214 () (_ BitVec 64))
(declare-fun temp10830_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10830_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10830_217 () (_ BitVec 64))
(declare-fun temp10830_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10830_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10830_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var5255568 () (_ BitVec 64))
(declare-fun temp10830_221 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp10830_222 () (_ BitVec 64))
(assert (= temp10830_1 #x0000000000000001))
(assert (= var77203 temp10830_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10830_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10830_2)))
(assert (= temp10830_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10830_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10830_4 #x0000000000000000))
(assert (= var210941 temp10830_4))
(assert (= temp10830_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10830_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10830_6 #x0000000000000000))
(assert (= var210986 temp10830_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10830_7 #x0000000000000000))
(assert (= temp10830_8 temp10830_7))
(assert (= temp10830_9 (select ARGNAME_padding_NAMEEND_VAL temp10830_8)))
(assert (= temp10830_10 #x0000000000000001))
(assert (= temp10830_11 temp10830_10))
(assert (= temp10830_12 (select ARGNAME_padding_NAMEEND_VAL temp10830_11)))
(assert (= temp10830_13 #x0000000000000002))
(assert (= temp10830_14 temp10830_13))
(assert (= temp10830_15 (select ARGNAME_padding_NAMEEND_VAL temp10830_14)))
(assert (= temp10830_16 #x0000000000000003))
(assert (= temp10830_17 temp10830_16))
(assert (= temp10830_18 (select ARGNAME_padding_NAMEEND_VAL temp10830_17)))
(assert (= temp10830_19 #x0000000000000004))
(assert (= temp10830_20 temp10830_19))
(assert (= temp10830_21 (select ARGNAME_padding_NAMEEND_VAL temp10830_20)))
(assert (= temp10830_22 #x0000000000000005))
(assert (= temp10830_23 temp10830_22))
(assert (= temp10830_24 (select ARGNAME_padding_NAMEEND_VAL temp10830_23)))
(assert (= temp10830_25 #x0000000000000000))
(assert (= temp10830_26 #x0000000000000000))
(assert (= temp10830_27 temp10830_26))
(assert (= temp10830_28 (select ARGNAME_padding_NAMEEND_VAL temp10830_27)))
(assert (= temp10830_29 #x0000000000000000))
(assert (= temp10830_30 #x0000000000000001))
(assert (= temp10830_31 temp10830_30))
(assert (= temp10830_32 (select ARGNAME_padding_NAMEEND_VAL temp10830_31)))
(assert (= temp10830_33 #x0000000000000000))
(assert (= temp10830_34 #x0000000000000002))
(assert (= temp10830_35 temp10830_34))
(assert (= temp10830_36 (select ARGNAME_padding_NAMEEND_VAL temp10830_35)))
(assert (= temp10830_37 #x0000000000000000))
(assert (= temp10830_38 #x0000000000000003))
(assert (= temp10830_39 temp10830_38))
(assert (= temp10830_40 (select ARGNAME_padding_NAMEEND_VAL temp10830_39)))
(assert (= temp10830_41 #x0000000000000000))
(assert (= temp10830_42 #x0000000000000004))
(assert (= temp10830_43 temp10830_42))
(assert (= temp10830_44 (select ARGNAME_padding_NAMEEND_VAL temp10830_43)))
(assert (= temp10830_45 #x0000000000000000))
(assert (= temp10830_46 #x0000000000000005))
(assert (= temp10830_47 temp10830_46))
(assert (= temp10830_48 (select ARGNAME_padding_NAMEEND_VAL temp10830_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10830_28 temp10830_25)
             (bvslt temp10830_32 temp10830_29)
             (bvslt temp10830_36 temp10830_33)
             (bvslt temp10830_40 temp10830_37)
             (bvslt temp10830_44 temp10830_41)
             (bvslt temp10830_48 temp10830_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10830_49 #x0000000000000000))
(assert (= var1191714 temp10830_49))
(assert (= temp10830_50 #x0000000000000000))
(assert (= temp10830_51 temp10830_50))
(assert (= temp10830_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10830_51)))
(assert (= temp10830_53 #x0000000000000001))
(assert (= temp10830_54 temp10830_53))
(assert (= temp10830_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10830_54)))
(assert (= temp10830_56 #x0000000000000002))
(assert (= temp10830_57 temp10830_56))
(assert (= temp10830_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10830_57)))
(assert (= temp10830_59 #x0000000000000003))
(assert (= temp10830_60 temp10830_59))
(assert (= temp10830_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10830_60)))
(assert (= temp10830_62 #x0000000000000004))
(assert (= temp10830_63 temp10830_62))
(assert (= temp10830_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10830_63)))
(assert (= temp10830_65 #x0000000000000005))
(assert (= temp10830_66 temp10830_65))
(assert (= temp10830_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10830_66)))
(assert (= temp10830_68 #x0000000000000000))
(assert (= temp10830_69 #x0000000000000000))
(assert (= temp10830_70 temp10830_69))
(assert (= temp10830_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10830_70)))
(assert (= temp10830_72 #x0000000000000000))
(assert (= temp10830_73 #x0000000000000001))
(assert (= temp10830_74 temp10830_73))
(assert (= temp10830_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10830_74)))
(assert (= temp10830_76 #x0000000000000000))
(assert (= temp10830_77 #x0000000000000002))
(assert (= temp10830_78 temp10830_77))
(assert (= temp10830_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10830_78)))
(assert (= temp10830_80 #x0000000000000000))
(assert (= temp10830_81 #x0000000000000003))
(assert (= temp10830_82 temp10830_81))
(assert (= temp10830_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10830_82)))
(assert (= temp10830_84 #x0000000000000000))
(assert (= temp10830_85 #x0000000000000004))
(assert (= temp10830_86 temp10830_85))
(assert (= temp10830_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10830_86)))
(assert (= temp10830_88 #x0000000000000000))
(assert (= temp10830_89 #x0000000000000005))
(assert (= temp10830_90 temp10830_89))
(assert (= temp10830_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10830_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10830_71 temp10830_68)
             (bvslt temp10830_75 temp10830_72)
             (bvslt temp10830_79 temp10830_76)
             (bvslt temp10830_83 temp10830_80)
             (bvslt temp10830_87 temp10830_84)
             (bvslt temp10830_91 temp10830_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10830_92 #x0000000000000000))
(assert (= var1191725 temp10830_92))
(assert (= temp10830_93 #x0000000000000000))
(assert (= temp10830_94 temp10830_93))
(assert (= temp10830_95 (select ARGNAME_stride_NAMEEND_VAL temp10830_94)))
(assert (= temp10830_96 #x0000000000000001))
(assert (= temp10830_97 temp10830_96))
(assert (= temp10830_98 (select ARGNAME_stride_NAMEEND_VAL temp10830_97)))
(assert (= temp10830_99 #x0000000000000002))
(assert (= temp10830_100 temp10830_99))
(assert (= temp10830_101 (select ARGNAME_stride_NAMEEND_VAL temp10830_100)))
(assert (= temp10830_102 #x0000000000000003))
(assert (= temp10830_103 temp10830_102))
(assert (= temp10830_104 (select ARGNAME_stride_NAMEEND_VAL temp10830_103)))
(assert (= temp10830_105 #x0000000000000004))
(assert (= temp10830_106 temp10830_105))
(assert (= temp10830_107 (select ARGNAME_stride_NAMEEND_VAL temp10830_106)))
(assert (= temp10830_108 #x0000000000000005))
(assert (= temp10830_109 temp10830_108))
(assert (= temp10830_110 (select ARGNAME_stride_NAMEEND_VAL temp10830_109)))
(assert (= temp10830_111 #x0000000000000000))
(assert (= temp10830_112 #x0000000000000000))
(assert (= temp10830_113 temp10830_112))
(assert (= temp10830_114 (select ARGNAME_stride_NAMEEND_VAL temp10830_113)))
(assert (= temp10830_115 #x0000000000000000))
(assert (= temp10830_116 #x0000000000000001))
(assert (= temp10830_117 temp10830_116))
(assert (= temp10830_118 (select ARGNAME_stride_NAMEEND_VAL temp10830_117)))
(assert (= temp10830_119 #x0000000000000000))
(assert (= temp10830_120 #x0000000000000002))
(assert (= temp10830_121 temp10830_120))
(assert (= temp10830_122 (select ARGNAME_stride_NAMEEND_VAL temp10830_121)))
(assert (= temp10830_123 #x0000000000000000))
(assert (= temp10830_124 #x0000000000000003))
(assert (= temp10830_125 temp10830_124))
(assert (= temp10830_126 (select ARGNAME_stride_NAMEEND_VAL temp10830_125)))
(assert (= temp10830_127 #x0000000000000000))
(assert (= temp10830_128 #x0000000000000004))
(assert (= temp10830_129 temp10830_128))
(assert (= temp10830_130 (select ARGNAME_stride_NAMEEND_VAL temp10830_129)))
(assert (= temp10830_131 #x0000000000000000))
(assert (= temp10830_132 #x0000000000000005))
(assert (= temp10830_133 temp10830_132))
(assert (= temp10830_134 (select ARGNAME_stride_NAMEEND_VAL temp10830_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10830_114 temp10830_111)
             (bvsle temp10830_118 temp10830_115)
             (bvsle temp10830_122 temp10830_119)
             (bvsle temp10830_126 temp10830_123)
             (bvsle temp10830_130 temp10830_127)
             (bvsle temp10830_134 temp10830_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10830_135 #x0000000000000000))
(assert (= var1191735 temp10830_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10830_136 #x0000000000000001))
(assert (= var1191747 temp10830_136))
(assert (= temp10830_137 #x0000000000000000))
(assert (= var1179826 temp10830_137))
(assert (= temp10830_138 #x0000000000000000))
(assert (= temp10830_139 temp10830_138))
(assert (= temp10830_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10830_139)))
(assert (= temp10830_141 #x0000000000000001))
(assert (= temp10830_142 temp10830_141))
(assert (= temp10830_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10830_142)))
(assert (= temp10830_144 #x0000000000000002))
(assert (= temp10830_145 temp10830_144))
(assert (= temp10830_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10830_145)))
(assert (= temp10830_147 #x0000000000000003))
(assert (= temp10830_148 temp10830_147))
(assert (= temp10830_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10830_148)))
(assert (= temp10830_150 #x0000000000000004))
(assert (= temp10830_151 temp10830_150))
(assert (= temp10830_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10830_151)))
(assert (= temp10830_153 #x0000000000000005))
(assert (= temp10830_154 temp10830_153))
(assert (= temp10830_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10830_154)))
(assert (= temp10830_157 var1179826))
(assert (= temp10830_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10830_157)))
(assert (= temp10830_156 temp10830_158))
(assert (= var1191780
   (ite (bvslt temp10830_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10830_159 #x0000000000000000))
(assert (= var1191780 temp10830_159))
(assert (= temp10830_160 #x0000000000000000))
(assert (= var1179826 temp10830_160))
(assert (= temp10830_162 var1179826))
(assert (= temp10830_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10830_162)))
(assert (= temp10830_161 temp10830_163))
(assert (= var1191802 (bvsmod temp10830_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10830_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10830_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10830_165 #x0000000000000001))
(assert (= var1191803 temp10830_165))
(assert (= temp10830_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10830_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10830_167 #x0000000000000001))
(assert (= var1191823 temp10830_167))
(assert (= temp10830_168 #x0000000000000001))
(assert (= var1180714 temp10830_168))
(assert (= temp10830_169 #x0000000000000000))
(assert (= temp10830_170 temp10830_169))
(assert (= temp10830_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10830_170)))
(assert (= temp10830_172 #x0000000000000001))
(assert (= temp10830_173 temp10830_172))
(assert (= temp10830_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10830_173)))
(assert (= temp10830_175 #x0000000000000002))
(assert (= temp10830_176 temp10830_175))
(assert (= temp10830_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10830_176)))
(assert (= temp10830_178 #x0000000000000003))
(assert (= temp10830_179 temp10830_178))
(assert (= temp10830_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10830_179)))
(assert (= temp10830_181 #x0000000000000004))
(assert (= temp10830_182 temp10830_181))
(assert (= temp10830_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10830_182)))
(assert (= temp10830_184 #x0000000000000005))
(assert (= temp10830_185 temp10830_184))
(assert (= temp10830_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10830_185)))
(assert (= temp10830_187 #x0000000000000000))
(assert (= temp10830_188
   (ite (bvslt var1180714 temp10830_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10830_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10830_188)))
(assert (= var1191831 temp10830_189))
(assert (bvslt (ite (bvslt var1180714 temp10830_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10830_190 #x0000000000000001))
(assert (= var1180714 temp10830_190))
(assert (= temp10830_192 var1180714))
(assert (= temp10830_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10830_192)))
(assert (= temp10830_191 temp10830_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10830_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10830_194 #x0000000000000001))
(assert (= var1191836 temp10830_194))
(assert (= temp10830_195 #x0000000000000000))
(assert (= var1179826 temp10830_195))
(assert (= temp10830_197 var1179826))
(assert (= temp10830_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10830_197)))
(assert (= temp10830_196 temp10830_198))
(assert (= temp10830_199 #x0000000000000002))
(assert (= var1586025 temp10830_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10830_200 #x0000000000000001))
(assert (= var1191993 temp10830_200))
(assert (= temp10830_201 #x0000000000000001))
(assert (= var2700303 temp10830_201))
(assert (= temp10830_202 #x0000000000000001))
(assert (= var2962447 temp10830_202))
(assert (= temp10830_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10830_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10830_204 #x0000000000000001))
(assert (= var211058 temp10830_204))
(assert (= temp10830_205 #x0000000000000001))
(assert (= var211188 temp10830_205))
(assert (= var3879401 var211188))
(assert (= temp10830_206 #x0000000000000000))
(assert (= var3866802 temp10830_206))
(assert (= temp10830_207 #x0000000000000000))
(assert (= temp10830_208
   (ite (bvslt var3866802 temp10830_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10830_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10830_208)))
(assert (= var3879420 temp10830_209))
(assert (bvslt (ite (bvslt var3866802 temp10830_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10830_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10830_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10830_211 #x0000000000000000))
(assert (= var3879421 temp10830_211))
(assert (= temp10830_212 #x0000000000000001))
(assert (= var3867690 temp10830_212))
(assert (= temp10830_213 #x0000000000000000))
(assert (= temp10830_214
   (ite (bvslt var3867690 temp10830_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10830_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10830_214)))
(assert (= var3879423 temp10830_215))
(assert (bvslt (ite (bvslt var3867690 temp10830_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10830_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10830_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10830_217 #x0000000000000001))
(assert (= var3879424 temp10830_217))
(assert (= temp10830_218 #x0000000000000000))
(assert (= var4133117 temp10830_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10830_219 #x0000000000000002))
(assert (= var4339331 temp10830_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10830_220 #x0000000000000000))
(assert (= var4404892 temp10830_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4993424 var211201))
(assert (= var5255568 var211201))
(assert (= temp10830_221 #x0000000000000000))
(assert (= var5583248 temp10830_221))
(assert (= temp10830_222 #x0000000000000001))
(assert (= var211058 temp10830_222))
(model-add temp10830_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10830_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10830_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10830_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





