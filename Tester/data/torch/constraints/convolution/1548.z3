(declare-fun temp10858_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10858_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10858_3 () (_ BitVec 64))
(declare-fun temp10858_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10858_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10858_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10858_7 () (_ BitVec 64))
(declare-fun temp10858_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10858_9 () (_ BitVec 64))
(declare-fun temp10858_10 () (_ BitVec 64))
(declare-fun temp10858_11 () (_ BitVec 64))
(declare-fun temp10858_12 () (_ BitVec 64))
(declare-fun temp10858_13 () (_ BitVec 64))
(declare-fun temp10858_14 () (_ BitVec 64))
(declare-fun temp10858_15 () (_ BitVec 64))
(declare-fun temp10858_16 () (_ BitVec 64))
(declare-fun temp10858_17 () (_ BitVec 64))
(declare-fun temp10858_18 () (_ BitVec 64))
(declare-fun temp10858_19 () (_ BitVec 64))
(declare-fun temp10858_20 () (_ BitVec 64))
(declare-fun temp10858_21 () (_ BitVec 64))
(declare-fun temp10858_22 () (_ BitVec 64))
(declare-fun temp10858_23 () (_ BitVec 64))
(declare-fun temp10858_24 () (_ BitVec 64))
(declare-fun temp10858_25 () (_ BitVec 64))
(declare-fun temp10858_26 () (_ BitVec 64))
(declare-fun temp10858_27 () (_ BitVec 64))
(declare-fun temp10858_28 () (_ BitVec 64))
(declare-fun temp10858_29 () (_ BitVec 64))
(declare-fun temp10858_30 () (_ BitVec 64))
(declare-fun temp10858_31 () (_ BitVec 64))
(declare-fun temp10858_32 () (_ BitVec 64))
(declare-fun temp10858_33 () (_ BitVec 64))
(declare-fun temp10858_34 () (_ BitVec 64))
(declare-fun temp10858_35 () (_ BitVec 64))
(declare-fun temp10858_36 () (_ BitVec 64))
(declare-fun temp10858_37 () (_ BitVec 64))
(declare-fun temp10858_38 () (_ BitVec 64))
(declare-fun temp10858_39 () (_ BitVec 64))
(declare-fun temp10858_40 () (_ BitVec 64))
(declare-fun temp10858_41 () (_ BitVec 64))
(declare-fun temp10858_42 () (_ BitVec 64))
(declare-fun temp10858_43 () (_ BitVec 64))
(declare-fun temp10858_44 () (_ BitVec 64))
(declare-fun temp10858_45 () (_ BitVec 64))
(declare-fun temp10858_46 () (_ BitVec 64))
(declare-fun temp10858_47 () (_ BitVec 64))
(declare-fun temp10858_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10858_49 () (_ BitVec 64))
(declare-fun temp10858_50 () (_ BitVec 64))
(declare-fun temp10858_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10858_52 () (_ BitVec 64))
(declare-fun temp10858_53 () (_ BitVec 64))
(declare-fun temp10858_54 () (_ BitVec 64))
(declare-fun temp10858_55 () (_ BitVec 64))
(declare-fun temp10858_56 () (_ BitVec 64))
(declare-fun temp10858_57 () (_ BitVec 64))
(declare-fun temp10858_58 () (_ BitVec 64))
(declare-fun temp10858_59 () (_ BitVec 64))
(declare-fun temp10858_60 () (_ BitVec 64))
(declare-fun temp10858_61 () (_ BitVec 64))
(declare-fun temp10858_62 () (_ BitVec 64))
(declare-fun temp10858_63 () (_ BitVec 64))
(declare-fun temp10858_64 () (_ BitVec 64))
(declare-fun temp10858_65 () (_ BitVec 64))
(declare-fun temp10858_66 () (_ BitVec 64))
(declare-fun temp10858_67 () (_ BitVec 64))
(declare-fun temp10858_68 () (_ BitVec 64))
(declare-fun temp10858_69 () (_ BitVec 64))
(declare-fun temp10858_70 () (_ BitVec 64))
(declare-fun temp10858_71 () (_ BitVec 64))
(declare-fun temp10858_72 () (_ BitVec 64))
(declare-fun temp10858_73 () (_ BitVec 64))
(declare-fun temp10858_74 () (_ BitVec 64))
(declare-fun temp10858_75 () (_ BitVec 64))
(declare-fun temp10858_76 () (_ BitVec 64))
(declare-fun temp10858_77 () (_ BitVec 64))
(declare-fun temp10858_78 () (_ BitVec 64))
(declare-fun temp10858_79 () (_ BitVec 64))
(declare-fun temp10858_80 () (_ BitVec 64))
(declare-fun temp10858_81 () (_ BitVec 64))
(declare-fun temp10858_82 () (_ BitVec 64))
(declare-fun temp10858_83 () (_ BitVec 64))
(declare-fun temp10858_84 () (_ BitVec 64))
(declare-fun temp10858_85 () (_ BitVec 64))
(declare-fun temp10858_86 () (_ BitVec 64))
(declare-fun temp10858_87 () (_ BitVec 64))
(declare-fun temp10858_88 () (_ BitVec 64))
(declare-fun temp10858_89 () (_ BitVec 64))
(declare-fun temp10858_90 () (_ BitVec 64))
(declare-fun temp10858_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10858_92 () (_ BitVec 64))
(declare-fun temp10858_93 () (_ BitVec 64))
(declare-fun temp10858_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10858_95 () (_ BitVec 64))
(declare-fun temp10858_96 () (_ BitVec 64))
(declare-fun temp10858_97 () (_ BitVec 64))
(declare-fun temp10858_98 () (_ BitVec 64))
(declare-fun temp10858_99 () (_ BitVec 64))
(declare-fun temp10858_100 () (_ BitVec 64))
(declare-fun temp10858_101 () (_ BitVec 64))
(declare-fun temp10858_102 () (_ BitVec 64))
(declare-fun temp10858_103 () (_ BitVec 64))
(declare-fun temp10858_104 () (_ BitVec 64))
(declare-fun temp10858_105 () (_ BitVec 64))
(declare-fun temp10858_106 () (_ BitVec 64))
(declare-fun temp10858_107 () (_ BitVec 64))
(declare-fun temp10858_108 () (_ BitVec 64))
(declare-fun temp10858_109 () (_ BitVec 64))
(declare-fun temp10858_110 () (_ BitVec 64))
(declare-fun temp10858_111 () (_ BitVec 64))
(declare-fun temp10858_112 () (_ BitVec 64))
(declare-fun temp10858_113 () (_ BitVec 64))
(declare-fun temp10858_114 () (_ BitVec 64))
(declare-fun temp10858_115 () (_ BitVec 64))
(declare-fun temp10858_116 () (_ BitVec 64))
(declare-fun temp10858_117 () (_ BitVec 64))
(declare-fun temp10858_118 () (_ BitVec 64))
(declare-fun temp10858_119 () (_ BitVec 64))
(declare-fun temp10858_120 () (_ BitVec 64))
(declare-fun temp10858_121 () (_ BitVec 64))
(declare-fun temp10858_122 () (_ BitVec 64))
(declare-fun temp10858_123 () (_ BitVec 64))
(declare-fun temp10858_124 () (_ BitVec 64))
(declare-fun temp10858_125 () (_ BitVec 64))
(declare-fun temp10858_126 () (_ BitVec 64))
(declare-fun temp10858_127 () (_ BitVec 64))
(declare-fun temp10858_128 () (_ BitVec 64))
(declare-fun temp10858_129 () (_ BitVec 64))
(declare-fun temp10858_130 () (_ BitVec 64))
(declare-fun temp10858_131 () (_ BitVec 64))
(declare-fun temp10858_132 () (_ BitVec 64))
(declare-fun temp10858_133 () (_ BitVec 64))
(declare-fun temp10858_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10858_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10858_136 () (_ BitVec 64))
(declare-fun temp10858_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10858_138 () (_ BitVec 64))
(declare-fun temp10858_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10858_140 () (_ BitVec 64))
(declare-fun temp10858_141 () (_ BitVec 64))
(declare-fun temp10858_142 () (_ BitVec 64))
(declare-fun temp10858_143 () (_ BitVec 64))
(declare-fun temp10858_144 () (_ BitVec 64))
(declare-fun temp10858_145 () (_ BitVec 64))
(declare-fun temp10858_146 () (_ BitVec 64))
(declare-fun temp10858_147 () (_ BitVec 64))
(declare-fun temp10858_148 () (_ BitVec 64))
(declare-fun temp10858_149 () (_ BitVec 64))
(declare-fun temp10858_150 () (_ BitVec 64))
(declare-fun temp10858_151 () (_ BitVec 64))
(declare-fun temp10858_152 () (_ BitVec 64))
(declare-fun temp10858_153 () (_ BitVec 64))
(declare-fun temp10858_154 () (_ BitVec 64))
(declare-fun temp10858_155 () (_ BitVec 64))
(declare-fun temp10858_157 () (_ BitVec 64))
(declare-fun temp10858_158 () (_ BitVec 64))
(declare-fun temp10858_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10858_159 () (_ BitVec 64))
(declare-fun temp10858_160 () (_ BitVec 64))
(declare-fun temp10858_162 () (_ BitVec 64))
(declare-fun temp10858_163 () (_ BitVec 64))
(declare-fun temp10858_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10858_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10858_165 () (_ BitVec 64))
(declare-fun temp10858_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10858_167 () (_ BitVec 64))
(declare-fun temp10858_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10858_169 () (_ BitVec 64))
(declare-fun temp10858_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10858_171 () (_ BitVec 64))
(declare-fun temp10858_172 () (_ BitVec 64))
(declare-fun temp10858_173 () (_ BitVec 64))
(declare-fun temp10858_174 () (_ BitVec 64))
(declare-fun temp10858_175 () (_ BitVec 64))
(declare-fun temp10858_176 () (_ BitVec 64))
(declare-fun temp10858_177 () (_ BitVec 64))
(declare-fun temp10858_178 () (_ BitVec 64))
(declare-fun temp10858_179 () (_ BitVec 64))
(declare-fun temp10858_180 () (_ BitVec 64))
(declare-fun temp10858_181 () (_ BitVec 64))
(declare-fun temp10858_182 () (_ BitVec 64))
(declare-fun temp10858_183 () (_ BitVec 64))
(declare-fun temp10858_184 () (_ BitVec 64))
(declare-fun temp10858_185 () (_ BitVec 64))
(declare-fun temp10858_186 () (_ BitVec 64))
(declare-fun temp10858_187 () (_ BitVec 64))
(declare-fun temp10858_188 () (_ BitVec 64))
(declare-fun temp10858_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10858_190 () (_ BitVec 64))
(declare-fun temp10858_192 () (_ BitVec 64))
(declare-fun temp10858_193 () (_ BitVec 64))
(declare-fun temp10858_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10858_194 () (_ BitVec 64))
(declare-fun temp10858_195 () (_ BitVec 64))
(declare-fun temp10858_197 () (_ BitVec 64))
(declare-fun temp10858_198 () (_ BitVec 64))
(declare-fun temp10858_196 () (_ BitVec 64))
(declare-fun temp10858_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10858_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10858_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10858_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10858_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10858_204 () (_ BitVec 64))
(declare-fun temp10858_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10858_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10858_207 () (_ BitVec 64))
(declare-fun temp10858_208 () (_ BitVec 64))
(declare-fun temp10858_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10858_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10858_211 () (_ BitVec 64))
(declare-fun temp10858_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10858_213 () (_ BitVec 64))
(declare-fun temp10858_214 () (_ BitVec 64))
(declare-fun temp10858_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10858_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10858_217 () (_ BitVec 64))
(declare-fun temp10858_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10858_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10858_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp10858_221 () (_ BitVec 64))
(assert (= temp10858_1 #x0000000000000001))
(assert (= var77203 temp10858_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10858_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10858_2)))
(assert (= temp10858_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10858_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10858_4 #x0000000000000000))
(assert (= var210941 temp10858_4))
(assert (= temp10858_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10858_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10858_6 #x0000000000000000))
(assert (= var210986 temp10858_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10858_7 #x0000000000000000))
(assert (= temp10858_8 temp10858_7))
(assert (= temp10858_9 (select ARGNAME_padding_NAMEEND_VAL temp10858_8)))
(assert (= temp10858_10 #x0000000000000001))
(assert (= temp10858_11 temp10858_10))
(assert (= temp10858_12 (select ARGNAME_padding_NAMEEND_VAL temp10858_11)))
(assert (= temp10858_13 #x0000000000000002))
(assert (= temp10858_14 temp10858_13))
(assert (= temp10858_15 (select ARGNAME_padding_NAMEEND_VAL temp10858_14)))
(assert (= temp10858_16 #x0000000000000003))
(assert (= temp10858_17 temp10858_16))
(assert (= temp10858_18 (select ARGNAME_padding_NAMEEND_VAL temp10858_17)))
(assert (= temp10858_19 #x0000000000000004))
(assert (= temp10858_20 temp10858_19))
(assert (= temp10858_21 (select ARGNAME_padding_NAMEEND_VAL temp10858_20)))
(assert (= temp10858_22 #x0000000000000005))
(assert (= temp10858_23 temp10858_22))
(assert (= temp10858_24 (select ARGNAME_padding_NAMEEND_VAL temp10858_23)))
(assert (= temp10858_25 #x0000000000000000))
(assert (= temp10858_26 #x0000000000000000))
(assert (= temp10858_27 temp10858_26))
(assert (= temp10858_28 (select ARGNAME_padding_NAMEEND_VAL temp10858_27)))
(assert (= temp10858_29 #x0000000000000000))
(assert (= temp10858_30 #x0000000000000001))
(assert (= temp10858_31 temp10858_30))
(assert (= temp10858_32 (select ARGNAME_padding_NAMEEND_VAL temp10858_31)))
(assert (= temp10858_33 #x0000000000000000))
(assert (= temp10858_34 #x0000000000000002))
(assert (= temp10858_35 temp10858_34))
(assert (= temp10858_36 (select ARGNAME_padding_NAMEEND_VAL temp10858_35)))
(assert (= temp10858_37 #x0000000000000000))
(assert (= temp10858_38 #x0000000000000003))
(assert (= temp10858_39 temp10858_38))
(assert (= temp10858_40 (select ARGNAME_padding_NAMEEND_VAL temp10858_39)))
(assert (= temp10858_41 #x0000000000000000))
(assert (= temp10858_42 #x0000000000000004))
(assert (= temp10858_43 temp10858_42))
(assert (= temp10858_44 (select ARGNAME_padding_NAMEEND_VAL temp10858_43)))
(assert (= temp10858_45 #x0000000000000000))
(assert (= temp10858_46 #x0000000000000005))
(assert (= temp10858_47 temp10858_46))
(assert (= temp10858_48 (select ARGNAME_padding_NAMEEND_VAL temp10858_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10858_28 temp10858_25)
             (bvslt temp10858_32 temp10858_29)
             (bvslt temp10858_36 temp10858_33)
             (bvslt temp10858_40 temp10858_37)
             (bvslt temp10858_44 temp10858_41)
             (bvslt temp10858_48 temp10858_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10858_49 #x0000000000000000))
(assert (= var1191714 temp10858_49))
(assert (= temp10858_50 #x0000000000000000))
(assert (= temp10858_51 temp10858_50))
(assert (= temp10858_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10858_51)))
(assert (= temp10858_53 #x0000000000000001))
(assert (= temp10858_54 temp10858_53))
(assert (= temp10858_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10858_54)))
(assert (= temp10858_56 #x0000000000000002))
(assert (= temp10858_57 temp10858_56))
(assert (= temp10858_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10858_57)))
(assert (= temp10858_59 #x0000000000000003))
(assert (= temp10858_60 temp10858_59))
(assert (= temp10858_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10858_60)))
(assert (= temp10858_62 #x0000000000000004))
(assert (= temp10858_63 temp10858_62))
(assert (= temp10858_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10858_63)))
(assert (= temp10858_65 #x0000000000000005))
(assert (= temp10858_66 temp10858_65))
(assert (= temp10858_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10858_66)))
(assert (= temp10858_68 #x0000000000000000))
(assert (= temp10858_69 #x0000000000000000))
(assert (= temp10858_70 temp10858_69))
(assert (= temp10858_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10858_70)))
(assert (= temp10858_72 #x0000000000000000))
(assert (= temp10858_73 #x0000000000000001))
(assert (= temp10858_74 temp10858_73))
(assert (= temp10858_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10858_74)))
(assert (= temp10858_76 #x0000000000000000))
(assert (= temp10858_77 #x0000000000000002))
(assert (= temp10858_78 temp10858_77))
(assert (= temp10858_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10858_78)))
(assert (= temp10858_80 #x0000000000000000))
(assert (= temp10858_81 #x0000000000000003))
(assert (= temp10858_82 temp10858_81))
(assert (= temp10858_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10858_82)))
(assert (= temp10858_84 #x0000000000000000))
(assert (= temp10858_85 #x0000000000000004))
(assert (= temp10858_86 temp10858_85))
(assert (= temp10858_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10858_86)))
(assert (= temp10858_88 #x0000000000000000))
(assert (= temp10858_89 #x0000000000000005))
(assert (= temp10858_90 temp10858_89))
(assert (= temp10858_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10858_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10858_71 temp10858_68)
             (bvslt temp10858_75 temp10858_72)
             (bvslt temp10858_79 temp10858_76)
             (bvslt temp10858_83 temp10858_80)
             (bvslt temp10858_87 temp10858_84)
             (bvslt temp10858_91 temp10858_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10858_92 #x0000000000000000))
(assert (= var1191725 temp10858_92))
(assert (= temp10858_93 #x0000000000000000))
(assert (= temp10858_94 temp10858_93))
(assert (= temp10858_95 (select ARGNAME_stride_NAMEEND_VAL temp10858_94)))
(assert (= temp10858_96 #x0000000000000001))
(assert (= temp10858_97 temp10858_96))
(assert (= temp10858_98 (select ARGNAME_stride_NAMEEND_VAL temp10858_97)))
(assert (= temp10858_99 #x0000000000000002))
(assert (= temp10858_100 temp10858_99))
(assert (= temp10858_101 (select ARGNAME_stride_NAMEEND_VAL temp10858_100)))
(assert (= temp10858_102 #x0000000000000003))
(assert (= temp10858_103 temp10858_102))
(assert (= temp10858_104 (select ARGNAME_stride_NAMEEND_VAL temp10858_103)))
(assert (= temp10858_105 #x0000000000000004))
(assert (= temp10858_106 temp10858_105))
(assert (= temp10858_107 (select ARGNAME_stride_NAMEEND_VAL temp10858_106)))
(assert (= temp10858_108 #x0000000000000005))
(assert (= temp10858_109 temp10858_108))
(assert (= temp10858_110 (select ARGNAME_stride_NAMEEND_VAL temp10858_109)))
(assert (= temp10858_111 #x0000000000000000))
(assert (= temp10858_112 #x0000000000000000))
(assert (= temp10858_113 temp10858_112))
(assert (= temp10858_114 (select ARGNAME_stride_NAMEEND_VAL temp10858_113)))
(assert (= temp10858_115 #x0000000000000000))
(assert (= temp10858_116 #x0000000000000001))
(assert (= temp10858_117 temp10858_116))
(assert (= temp10858_118 (select ARGNAME_stride_NAMEEND_VAL temp10858_117)))
(assert (= temp10858_119 #x0000000000000000))
(assert (= temp10858_120 #x0000000000000002))
(assert (= temp10858_121 temp10858_120))
(assert (= temp10858_122 (select ARGNAME_stride_NAMEEND_VAL temp10858_121)))
(assert (= temp10858_123 #x0000000000000000))
(assert (= temp10858_124 #x0000000000000003))
(assert (= temp10858_125 temp10858_124))
(assert (= temp10858_126 (select ARGNAME_stride_NAMEEND_VAL temp10858_125)))
(assert (= temp10858_127 #x0000000000000000))
(assert (= temp10858_128 #x0000000000000004))
(assert (= temp10858_129 temp10858_128))
(assert (= temp10858_130 (select ARGNAME_stride_NAMEEND_VAL temp10858_129)))
(assert (= temp10858_131 #x0000000000000000))
(assert (= temp10858_132 #x0000000000000005))
(assert (= temp10858_133 temp10858_132))
(assert (= temp10858_134 (select ARGNAME_stride_NAMEEND_VAL temp10858_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10858_114 temp10858_111)
             (bvsle temp10858_118 temp10858_115)
             (bvsle temp10858_122 temp10858_119)
             (bvsle temp10858_126 temp10858_123)
             (bvsle temp10858_130 temp10858_127)
             (bvsle temp10858_134 temp10858_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10858_135 #x0000000000000000))
(assert (= var1191735 temp10858_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10858_136 #x0000000000000001))
(assert (= var1191747 temp10858_136))
(assert (= temp10858_137 #x0000000000000000))
(assert (= var1179826 temp10858_137))
(assert (= temp10858_138 #x0000000000000000))
(assert (= temp10858_139 temp10858_138))
(assert (= temp10858_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10858_139)))
(assert (= temp10858_141 #x0000000000000001))
(assert (= temp10858_142 temp10858_141))
(assert (= temp10858_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10858_142)))
(assert (= temp10858_144 #x0000000000000002))
(assert (= temp10858_145 temp10858_144))
(assert (= temp10858_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10858_145)))
(assert (= temp10858_147 #x0000000000000003))
(assert (= temp10858_148 temp10858_147))
(assert (= temp10858_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10858_148)))
(assert (= temp10858_150 #x0000000000000004))
(assert (= temp10858_151 temp10858_150))
(assert (= temp10858_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10858_151)))
(assert (= temp10858_153 #x0000000000000005))
(assert (= temp10858_154 temp10858_153))
(assert (= temp10858_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10858_154)))
(assert (= temp10858_157 var1179826))
(assert (= temp10858_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10858_157)))
(assert (= temp10858_156 temp10858_158))
(assert (= var1191780
   (ite (bvslt temp10858_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10858_159 #x0000000000000000))
(assert (= var1191780 temp10858_159))
(assert (= temp10858_160 #x0000000000000000))
(assert (= var1179826 temp10858_160))
(assert (= temp10858_162 var1179826))
(assert (= temp10858_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10858_162)))
(assert (= temp10858_161 temp10858_163))
(assert (= var1191802 (bvsmod temp10858_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10858_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10858_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10858_165 #x0000000000000001))
(assert (= var1191803 temp10858_165))
(assert (= temp10858_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10858_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10858_167 #x0000000000000001))
(assert (= var1191823 temp10858_167))
(assert (= temp10858_168 #x0000000000000001))
(assert (= var1180714 temp10858_168))
(assert (= temp10858_169 #x0000000000000000))
(assert (= temp10858_170 temp10858_169))
(assert (= temp10858_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10858_170)))
(assert (= temp10858_172 #x0000000000000001))
(assert (= temp10858_173 temp10858_172))
(assert (= temp10858_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10858_173)))
(assert (= temp10858_175 #x0000000000000002))
(assert (= temp10858_176 temp10858_175))
(assert (= temp10858_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10858_176)))
(assert (= temp10858_178 #x0000000000000003))
(assert (= temp10858_179 temp10858_178))
(assert (= temp10858_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10858_179)))
(assert (= temp10858_181 #x0000000000000004))
(assert (= temp10858_182 temp10858_181))
(assert (= temp10858_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10858_182)))
(assert (= temp10858_184 #x0000000000000005))
(assert (= temp10858_185 temp10858_184))
(assert (= temp10858_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10858_185)))
(assert (= temp10858_187 #x0000000000000000))
(assert (= temp10858_188
   (ite (bvslt var1180714 temp10858_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10858_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10858_188)))
(assert (= var1191831 temp10858_189))
(assert (bvslt (ite (bvslt var1180714 temp10858_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10858_190 #x0000000000000001))
(assert (= var1180714 temp10858_190))
(assert (= temp10858_192 var1180714))
(assert (= temp10858_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10858_192)))
(assert (= temp10858_191 temp10858_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10858_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10858_194 #x0000000000000001))
(assert (= var1191836 temp10858_194))
(assert (= temp10858_195 #x0000000000000000))
(assert (= var1179826 temp10858_195))
(assert (= temp10858_197 var1179826))
(assert (= temp10858_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10858_197)))
(assert (= temp10858_196 temp10858_198))
(assert (= temp10858_199 #x0000000000000002))
(assert (= var1586025 temp10858_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10858_200 #x0000000000000001))
(assert (= var1191993 temp10858_200))
(assert (= temp10858_201 #x0000000000000001))
(assert (= var2700303 temp10858_201))
(assert (= temp10858_202 #x0000000000000001))
(assert (= var2962447 temp10858_202))
(assert (= temp10858_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10858_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10858_204 #x0000000000000001))
(assert (= var211058 temp10858_204))
(assert (= temp10858_205 #x0000000000000001))
(assert (= var211188 temp10858_205))
(assert (= var3879401 var211188))
(assert (= temp10858_206 #x0000000000000000))
(assert (= var3866802 temp10858_206))
(assert (= temp10858_207 #x0000000000000000))
(assert (= temp10858_208
   (ite (bvslt var3866802 temp10858_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10858_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10858_208)))
(assert (= var3879420 temp10858_209))
(assert (bvslt (ite (bvslt var3866802 temp10858_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10858_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10858_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10858_211 #x0000000000000000))
(assert (= var3879421 temp10858_211))
(assert (= temp10858_212 #x0000000000000001))
(assert (= var3867690 temp10858_212))
(assert (= temp10858_213 #x0000000000000000))
(assert (= temp10858_214
   (ite (bvslt var3867690 temp10858_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10858_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10858_214)))
(assert (= var3879423 temp10858_215))
(assert (bvslt (ite (bvslt var3867690 temp10858_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10858_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10858_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10858_217 #x0000000000000001))
(assert (= var3879424 temp10858_217))
(assert (= temp10858_218 #x0000000000000000))
(assert (= var4133117 temp10858_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10858_219 #x0000000000000002))
(assert (= var4339331 temp10858_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10858_220 #x0000000000000000))
(assert (= var4404892 temp10858_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5452176 var211201))
(assert (= var5714320 var211201))
(assert (= temp10858_221 #x0000000000000001))
(assert (= var211058 temp10858_221))
(model-add temp10858_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10858_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10858_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10858_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




