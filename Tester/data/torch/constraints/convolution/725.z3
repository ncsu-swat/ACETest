(declare-fun temp966_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp966_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp966_3 () (_ BitVec 64))
(declare-fun temp966_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp966_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp966_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp966_7 () (_ BitVec 64))
(declare-fun temp966_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp966_9 () (_ BitVec 64))
(declare-fun temp966_10 () (_ BitVec 64))
(declare-fun temp966_11 () (_ BitVec 64))
(declare-fun temp966_12 () (_ BitVec 64))
(declare-fun temp966_13 () (_ BitVec 64))
(declare-fun temp966_14 () (_ BitVec 64))
(declare-fun temp966_15 () (_ BitVec 64))
(declare-fun temp966_16 () (_ BitVec 64))
(declare-fun temp966_17 () (_ BitVec 64))
(declare-fun temp966_18 () (_ BitVec 64))
(declare-fun temp966_19 () (_ BitVec 64))
(declare-fun temp966_20 () (_ BitVec 64))
(declare-fun temp966_21 () (_ BitVec 64))
(declare-fun temp966_22 () (_ BitVec 64))
(declare-fun temp966_23 () (_ BitVec 64))
(declare-fun temp966_24 () (_ BitVec 64))
(declare-fun temp966_25 () (_ BitVec 64))
(declare-fun temp966_26 () (_ BitVec 64))
(declare-fun temp966_27 () (_ BitVec 64))
(declare-fun temp966_28 () (_ BitVec 64))
(declare-fun temp966_29 () (_ BitVec 64))
(declare-fun temp966_30 () (_ BitVec 64))
(declare-fun temp966_31 () (_ BitVec 64))
(declare-fun temp966_32 () (_ BitVec 64))
(declare-fun temp966_33 () (_ BitVec 64))
(declare-fun temp966_34 () (_ BitVec 64))
(declare-fun temp966_35 () (_ BitVec 64))
(declare-fun temp966_36 () (_ BitVec 64))
(declare-fun temp966_37 () (_ BitVec 64))
(declare-fun temp966_38 () (_ BitVec 64))
(declare-fun temp966_39 () (_ BitVec 64))
(declare-fun temp966_40 () (_ BitVec 64))
(declare-fun temp966_41 () (_ BitVec 64))
(declare-fun temp966_42 () (_ BitVec 64))
(declare-fun temp966_43 () (_ BitVec 64))
(declare-fun temp966_44 () (_ BitVec 64))
(declare-fun temp966_45 () (_ BitVec 64))
(declare-fun temp966_46 () (_ BitVec 64))
(declare-fun temp966_47 () (_ BitVec 64))
(declare-fun temp966_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp966_49 () (_ BitVec 64))
(declare-fun temp966_50 () (_ BitVec 64))
(declare-fun temp966_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp966_52 () (_ BitVec 64))
(declare-fun temp966_53 () (_ BitVec 64))
(declare-fun temp966_54 () (_ BitVec 64))
(declare-fun temp966_55 () (_ BitVec 64))
(declare-fun temp966_56 () (_ BitVec 64))
(declare-fun temp966_57 () (_ BitVec 64))
(declare-fun temp966_58 () (_ BitVec 64))
(declare-fun temp966_59 () (_ BitVec 64))
(declare-fun temp966_60 () (_ BitVec 64))
(declare-fun temp966_61 () (_ BitVec 64))
(declare-fun temp966_62 () (_ BitVec 64))
(declare-fun temp966_63 () (_ BitVec 64))
(declare-fun temp966_64 () (_ BitVec 64))
(declare-fun temp966_65 () (_ BitVec 64))
(declare-fun temp966_66 () (_ BitVec 64))
(declare-fun temp966_67 () (_ BitVec 64))
(declare-fun temp966_68 () (_ BitVec 64))
(declare-fun temp966_69 () (_ BitVec 64))
(declare-fun temp966_70 () (_ BitVec 64))
(declare-fun temp966_71 () (_ BitVec 64))
(declare-fun temp966_72 () (_ BitVec 64))
(declare-fun temp966_73 () (_ BitVec 64))
(declare-fun temp966_74 () (_ BitVec 64))
(declare-fun temp966_75 () (_ BitVec 64))
(declare-fun temp966_76 () (_ BitVec 64))
(declare-fun temp966_77 () (_ BitVec 64))
(declare-fun temp966_78 () (_ BitVec 64))
(declare-fun temp966_79 () (_ BitVec 64))
(declare-fun temp966_80 () (_ BitVec 64))
(declare-fun temp966_81 () (_ BitVec 64))
(declare-fun temp966_82 () (_ BitVec 64))
(declare-fun temp966_83 () (_ BitVec 64))
(declare-fun temp966_84 () (_ BitVec 64))
(declare-fun temp966_85 () (_ BitVec 64))
(declare-fun temp966_86 () (_ BitVec 64))
(declare-fun temp966_87 () (_ BitVec 64))
(declare-fun temp966_88 () (_ BitVec 64))
(declare-fun temp966_89 () (_ BitVec 64))
(declare-fun temp966_90 () (_ BitVec 64))
(declare-fun temp966_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp966_92 () (_ BitVec 64))
(declare-fun temp966_93 () (_ BitVec 64))
(declare-fun temp966_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp966_95 () (_ BitVec 64))
(declare-fun temp966_96 () (_ BitVec 64))
(declare-fun temp966_97 () (_ BitVec 64))
(declare-fun temp966_98 () (_ BitVec 64))
(declare-fun temp966_99 () (_ BitVec 64))
(declare-fun temp966_100 () (_ BitVec 64))
(declare-fun temp966_101 () (_ BitVec 64))
(declare-fun temp966_102 () (_ BitVec 64))
(declare-fun temp966_103 () (_ BitVec 64))
(declare-fun temp966_104 () (_ BitVec 64))
(declare-fun temp966_105 () (_ BitVec 64))
(declare-fun temp966_106 () (_ BitVec 64))
(declare-fun temp966_107 () (_ BitVec 64))
(declare-fun temp966_108 () (_ BitVec 64))
(declare-fun temp966_109 () (_ BitVec 64))
(declare-fun temp966_110 () (_ BitVec 64))
(declare-fun temp966_111 () (_ BitVec 64))
(declare-fun temp966_112 () (_ BitVec 64))
(declare-fun temp966_113 () (_ BitVec 64))
(declare-fun temp966_114 () (_ BitVec 64))
(declare-fun temp966_115 () (_ BitVec 64))
(declare-fun temp966_116 () (_ BitVec 64))
(declare-fun temp966_117 () (_ BitVec 64))
(declare-fun temp966_118 () (_ BitVec 64))
(declare-fun temp966_119 () (_ BitVec 64))
(declare-fun temp966_120 () (_ BitVec 64))
(declare-fun temp966_121 () (_ BitVec 64))
(declare-fun temp966_122 () (_ BitVec 64))
(declare-fun temp966_123 () (_ BitVec 64))
(declare-fun temp966_124 () (_ BitVec 64))
(declare-fun temp966_125 () (_ BitVec 64))
(declare-fun temp966_126 () (_ BitVec 64))
(declare-fun temp966_127 () (_ BitVec 64))
(declare-fun temp966_128 () (_ BitVec 64))
(declare-fun temp966_129 () (_ BitVec 64))
(declare-fun temp966_130 () (_ BitVec 64))
(declare-fun temp966_131 () (_ BitVec 64))
(declare-fun temp966_132 () (_ BitVec 64))
(declare-fun temp966_133 () (_ BitVec 64))
(declare-fun temp966_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp966_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp966_136 () (_ BitVec 64))
(declare-fun temp966_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp966_138 () (_ BitVec 64))
(declare-fun temp966_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp966_140 () (_ BitVec 64))
(declare-fun temp966_141 () (_ BitVec 64))
(declare-fun temp966_142 () (_ BitVec 64))
(declare-fun temp966_143 () (_ BitVec 64))
(declare-fun temp966_144 () (_ BitVec 64))
(declare-fun temp966_145 () (_ BitVec 64))
(declare-fun temp966_146 () (_ BitVec 64))
(declare-fun temp966_147 () (_ BitVec 64))
(declare-fun temp966_148 () (_ BitVec 64))
(declare-fun temp966_149 () (_ BitVec 64))
(declare-fun temp966_150 () (_ BitVec 64))
(declare-fun temp966_151 () (_ BitVec 64))
(declare-fun temp966_152 () (_ BitVec 64))
(declare-fun temp966_153 () (_ BitVec 64))
(declare-fun temp966_154 () (_ BitVec 64))
(declare-fun temp966_155 () (_ BitVec 64))
(declare-fun temp966_157 () (_ BitVec 64))
(declare-fun temp966_158 () (_ BitVec 64))
(declare-fun temp966_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp966_159 () (_ BitVec 64))
(declare-fun temp966_160 () (_ BitVec 64))
(declare-fun temp966_162 () (_ BitVec 64))
(declare-fun temp966_163 () (_ BitVec 64))
(declare-fun temp966_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp966_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp966_165 () (_ BitVec 64))
(declare-fun temp966_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp966_167 () (_ BitVec 64))
(declare-fun temp966_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp966_169 () (_ BitVec 64))
(declare-fun temp966_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp966_171 () (_ BitVec 64))
(declare-fun temp966_172 () (_ BitVec 64))
(declare-fun temp966_173 () (_ BitVec 64))
(declare-fun temp966_174 () (_ BitVec 64))
(declare-fun temp966_175 () (_ BitVec 64))
(declare-fun temp966_176 () (_ BitVec 64))
(declare-fun temp966_177 () (_ BitVec 64))
(declare-fun temp966_178 () (_ BitVec 64))
(declare-fun temp966_179 () (_ BitVec 64))
(declare-fun temp966_180 () (_ BitVec 64))
(declare-fun temp966_181 () (_ BitVec 64))
(declare-fun temp966_182 () (_ BitVec 64))
(declare-fun temp966_183 () (_ BitVec 64))
(declare-fun temp966_184 () (_ BitVec 64))
(declare-fun temp966_185 () (_ BitVec 64))
(declare-fun temp966_186 () (_ BitVec 64))
(declare-fun temp966_187 () (_ BitVec 64))
(declare-fun temp966_188 () (_ BitVec 64))
(declare-fun temp966_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp966_190 () (_ BitVec 64))
(declare-fun temp966_192 () (_ BitVec 64))
(declare-fun temp966_193 () (_ BitVec 64))
(declare-fun temp966_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp966_194 () (_ BitVec 64))
(declare-fun temp966_195 () (_ BitVec 64))
(declare-fun temp966_197 () (_ BitVec 64))
(declare-fun temp966_198 () (_ BitVec 64))
(declare-fun temp966_196 () (_ BitVec 64))
(declare-fun temp966_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp966_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp966_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp966_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp966_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp966_204 () (_ BitVec 64))
(declare-fun temp966_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp966_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp966_207 () (_ BitVec 64))
(declare-fun temp966_208 () (_ BitVec 64))
(declare-fun temp966_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp966_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp966_211 () (_ BitVec 64))
(declare-fun temp966_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp966_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp966_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp966_215 () (_ BitVec 64))
(assert (= temp966_1 #x0000000000000001))
(assert (= var77203 temp966_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp966_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp966_2)))
(assert (= temp966_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp966_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp966_4 #x0000000000000000))
(assert (= var210941 temp966_4))
(assert (= temp966_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp966_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp966_6 #x0000000000000000))
(assert (= var210986 temp966_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp966_7 #x0000000000000000))
(assert (= temp966_8 temp966_7))
(assert (= temp966_9 (select ARGNAME_padding_NAMEEND_VAL temp966_8)))
(assert (= temp966_10 #x0000000000000001))
(assert (= temp966_11 temp966_10))
(assert (= temp966_12 (select ARGNAME_padding_NAMEEND_VAL temp966_11)))
(assert (= temp966_13 #x0000000000000002))
(assert (= temp966_14 temp966_13))
(assert (= temp966_15 (select ARGNAME_padding_NAMEEND_VAL temp966_14)))
(assert (= temp966_16 #x0000000000000003))
(assert (= temp966_17 temp966_16))
(assert (= temp966_18 (select ARGNAME_padding_NAMEEND_VAL temp966_17)))
(assert (= temp966_19 #x0000000000000004))
(assert (= temp966_20 temp966_19))
(assert (= temp966_21 (select ARGNAME_padding_NAMEEND_VAL temp966_20)))
(assert (= temp966_22 #x0000000000000005))
(assert (= temp966_23 temp966_22))
(assert (= temp966_24 (select ARGNAME_padding_NAMEEND_VAL temp966_23)))
(assert (= temp966_25 #x0000000000000000))
(assert (= temp966_26 #x0000000000000000))
(assert (= temp966_27 temp966_26))
(assert (= temp966_28 (select ARGNAME_padding_NAMEEND_VAL temp966_27)))
(assert (= temp966_29 #x0000000000000000))
(assert (= temp966_30 #x0000000000000001))
(assert (= temp966_31 temp966_30))
(assert (= temp966_32 (select ARGNAME_padding_NAMEEND_VAL temp966_31)))
(assert (= temp966_33 #x0000000000000000))
(assert (= temp966_34 #x0000000000000002))
(assert (= temp966_35 temp966_34))
(assert (= temp966_36 (select ARGNAME_padding_NAMEEND_VAL temp966_35)))
(assert (= temp966_37 #x0000000000000000))
(assert (= temp966_38 #x0000000000000003))
(assert (= temp966_39 temp966_38))
(assert (= temp966_40 (select ARGNAME_padding_NAMEEND_VAL temp966_39)))
(assert (= temp966_41 #x0000000000000000))
(assert (= temp966_42 #x0000000000000004))
(assert (= temp966_43 temp966_42))
(assert (= temp966_44 (select ARGNAME_padding_NAMEEND_VAL temp966_43)))
(assert (= temp966_45 #x0000000000000000))
(assert (= temp966_46 #x0000000000000005))
(assert (= temp966_47 temp966_46))
(assert (= temp966_48 (select ARGNAME_padding_NAMEEND_VAL temp966_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp966_28 temp966_25)
             (bvslt temp966_32 temp966_29)
             (bvslt temp966_36 temp966_33)
             (bvslt temp966_40 temp966_37)
             (bvslt temp966_44 temp966_41)
             (bvslt temp966_48 temp966_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp966_49 #x0000000000000000))
(assert (= var1191714 temp966_49))
(assert (= temp966_50 #x0000000000000000))
(assert (= temp966_51 temp966_50))
(assert (= temp966_52 (select ARGNAME_output_padding_NAMEEND_VAL temp966_51)))
(assert (= temp966_53 #x0000000000000001))
(assert (= temp966_54 temp966_53))
(assert (= temp966_55 (select ARGNAME_output_padding_NAMEEND_VAL temp966_54)))
(assert (= temp966_56 #x0000000000000002))
(assert (= temp966_57 temp966_56))
(assert (= temp966_58 (select ARGNAME_output_padding_NAMEEND_VAL temp966_57)))
(assert (= temp966_59 #x0000000000000003))
(assert (= temp966_60 temp966_59))
(assert (= temp966_61 (select ARGNAME_output_padding_NAMEEND_VAL temp966_60)))
(assert (= temp966_62 #x0000000000000004))
(assert (= temp966_63 temp966_62))
(assert (= temp966_64 (select ARGNAME_output_padding_NAMEEND_VAL temp966_63)))
(assert (= temp966_65 #x0000000000000005))
(assert (= temp966_66 temp966_65))
(assert (= temp966_67 (select ARGNAME_output_padding_NAMEEND_VAL temp966_66)))
(assert (= temp966_68 #x0000000000000000))
(assert (= temp966_69 #x0000000000000000))
(assert (= temp966_70 temp966_69))
(assert (= temp966_71 (select ARGNAME_output_padding_NAMEEND_VAL temp966_70)))
(assert (= temp966_72 #x0000000000000000))
(assert (= temp966_73 #x0000000000000001))
(assert (= temp966_74 temp966_73))
(assert (= temp966_75 (select ARGNAME_output_padding_NAMEEND_VAL temp966_74)))
(assert (= temp966_76 #x0000000000000000))
(assert (= temp966_77 #x0000000000000002))
(assert (= temp966_78 temp966_77))
(assert (= temp966_79 (select ARGNAME_output_padding_NAMEEND_VAL temp966_78)))
(assert (= temp966_80 #x0000000000000000))
(assert (= temp966_81 #x0000000000000003))
(assert (= temp966_82 temp966_81))
(assert (= temp966_83 (select ARGNAME_output_padding_NAMEEND_VAL temp966_82)))
(assert (= temp966_84 #x0000000000000000))
(assert (= temp966_85 #x0000000000000004))
(assert (= temp966_86 temp966_85))
(assert (= temp966_87 (select ARGNAME_output_padding_NAMEEND_VAL temp966_86)))
(assert (= temp966_88 #x0000000000000000))
(assert (= temp966_89 #x0000000000000005))
(assert (= temp966_90 temp966_89))
(assert (= temp966_91 (select ARGNAME_output_padding_NAMEEND_VAL temp966_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp966_71 temp966_68)
             (bvslt temp966_75 temp966_72)
             (bvslt temp966_79 temp966_76)
             (bvslt temp966_83 temp966_80)
             (bvslt temp966_87 temp966_84)
             (bvslt temp966_91 temp966_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp966_92 #x0000000000000000))
(assert (= var1191725 temp966_92))
(assert (= temp966_93 #x0000000000000000))
(assert (= temp966_94 temp966_93))
(assert (= temp966_95 (select ARGNAME_stride_NAMEEND_VAL temp966_94)))
(assert (= temp966_96 #x0000000000000001))
(assert (= temp966_97 temp966_96))
(assert (= temp966_98 (select ARGNAME_stride_NAMEEND_VAL temp966_97)))
(assert (= temp966_99 #x0000000000000002))
(assert (= temp966_100 temp966_99))
(assert (= temp966_101 (select ARGNAME_stride_NAMEEND_VAL temp966_100)))
(assert (= temp966_102 #x0000000000000003))
(assert (= temp966_103 temp966_102))
(assert (= temp966_104 (select ARGNAME_stride_NAMEEND_VAL temp966_103)))
(assert (= temp966_105 #x0000000000000004))
(assert (= temp966_106 temp966_105))
(assert (= temp966_107 (select ARGNAME_stride_NAMEEND_VAL temp966_106)))
(assert (= temp966_108 #x0000000000000005))
(assert (= temp966_109 temp966_108))
(assert (= temp966_110 (select ARGNAME_stride_NAMEEND_VAL temp966_109)))
(assert (= temp966_111 #x0000000000000000))
(assert (= temp966_112 #x0000000000000000))
(assert (= temp966_113 temp966_112))
(assert (= temp966_114 (select ARGNAME_stride_NAMEEND_VAL temp966_113)))
(assert (= temp966_115 #x0000000000000000))
(assert (= temp966_116 #x0000000000000001))
(assert (= temp966_117 temp966_116))
(assert (= temp966_118 (select ARGNAME_stride_NAMEEND_VAL temp966_117)))
(assert (= temp966_119 #x0000000000000000))
(assert (= temp966_120 #x0000000000000002))
(assert (= temp966_121 temp966_120))
(assert (= temp966_122 (select ARGNAME_stride_NAMEEND_VAL temp966_121)))
(assert (= temp966_123 #x0000000000000000))
(assert (= temp966_124 #x0000000000000003))
(assert (= temp966_125 temp966_124))
(assert (= temp966_126 (select ARGNAME_stride_NAMEEND_VAL temp966_125)))
(assert (= temp966_127 #x0000000000000000))
(assert (= temp966_128 #x0000000000000004))
(assert (= temp966_129 temp966_128))
(assert (= temp966_130 (select ARGNAME_stride_NAMEEND_VAL temp966_129)))
(assert (= temp966_131 #x0000000000000000))
(assert (= temp966_132 #x0000000000000005))
(assert (= temp966_133 temp966_132))
(assert (= temp966_134 (select ARGNAME_stride_NAMEEND_VAL temp966_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp966_114 temp966_111)
             (bvsle temp966_118 temp966_115)
             (bvsle temp966_122 temp966_119)
             (bvsle temp966_126 temp966_123)
             (bvsle temp966_130 temp966_127)
             (bvsle temp966_134 temp966_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp966_135 #x0000000000000000))
(assert (= var1191735 temp966_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp966_136 #x0000000000000001))
(assert (= var1191747 temp966_136))
(assert (= temp966_137 #x0000000000000000))
(assert (= var1179826 temp966_137))
(assert (= temp966_138 #x0000000000000000))
(assert (= temp966_139 temp966_138))
(assert (= temp966_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp966_139)))
(assert (= temp966_141 #x0000000000000001))
(assert (= temp966_142 temp966_141))
(assert (= temp966_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp966_142)))
(assert (= temp966_144 #x0000000000000002))
(assert (= temp966_145 temp966_144))
(assert (= temp966_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp966_145)))
(assert (= temp966_147 #x0000000000000003))
(assert (= temp966_148 temp966_147))
(assert (= temp966_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp966_148)))
(assert (= temp966_150 #x0000000000000004))
(assert (= temp966_151 temp966_150))
(assert (= temp966_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp966_151)))
(assert (= temp966_153 #x0000000000000005))
(assert (= temp966_154 temp966_153))
(assert (= temp966_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp966_154)))
(assert (= temp966_157 var1179826))
(assert (= temp966_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp966_157)))
(assert (= temp966_156 temp966_158))
(assert (= var1191780
   (ite (bvslt temp966_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp966_159 #x0000000000000000))
(assert (= var1191780 temp966_159))
(assert (= temp966_160 #x0000000000000000))
(assert (= var1179826 temp966_160))
(assert (= temp966_162 var1179826))
(assert (= temp966_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp966_162)))
(assert (= temp966_161 temp966_163))
(assert (= var1191802 (bvsmod temp966_161 ARGNAME_groups_NAMEEND)))
(assert (= temp966_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp966_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp966_165 #x0000000000000001))
(assert (= var1191803 temp966_165))
(assert (= temp966_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp966_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp966_167 #x0000000000000001))
(assert (= var1191823 temp966_167))
(assert (= temp966_168 #x0000000000000001))
(assert (= var1180714 temp966_168))
(assert (= temp966_169 #x0000000000000000))
(assert (= temp966_170 temp966_169))
(assert (= temp966_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp966_170)))
(assert (= temp966_172 #x0000000000000001))
(assert (= temp966_173 temp966_172))
(assert (= temp966_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp966_173)))
(assert (= temp966_175 #x0000000000000002))
(assert (= temp966_176 temp966_175))
(assert (= temp966_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp966_176)))
(assert (= temp966_178 #x0000000000000003))
(assert (= temp966_179 temp966_178))
(assert (= temp966_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp966_179)))
(assert (= temp966_181 #x0000000000000004))
(assert (= temp966_182 temp966_181))
(assert (= temp966_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp966_182)))
(assert (= temp966_184 #x0000000000000005))
(assert (= temp966_185 temp966_184))
(assert (= temp966_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp966_185)))
(assert (= temp966_187 #x0000000000000000))
(assert (= temp966_188
   (ite (bvslt var1180714 temp966_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp966_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp966_188)))
(assert (= var1191831 temp966_189))
(assert (bvslt (ite (bvslt var1180714 temp966_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp966_190 #x0000000000000001))
(assert (= var1180714 temp966_190))
(assert (= temp966_192 var1180714))
(assert (= temp966_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp966_192)))
(assert (= temp966_191 temp966_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp966_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp966_194 #x0000000000000001))
(assert (= var1191836 temp966_194))
(assert (= temp966_195 #x0000000000000000))
(assert (= var1179826 temp966_195))
(assert (= temp966_197 var1179826))
(assert (= temp966_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp966_197)))
(assert (= temp966_196 temp966_198))
(assert (= temp966_199 #x0000000000000002))
(assert (= var1586025 temp966_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp966_200 #x0000000000000001))
(assert (= var1191993 temp966_200))
(assert (= temp966_201 #x0000000000000001))
(assert (= var2700303 temp966_201))
(assert (= temp966_202 #x0000000000000001))
(assert (= var2962447 temp966_202))
(assert (= temp966_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp966_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp966_204 #x0000000000000001))
(assert (= var211058 temp966_204))
(assert (= temp966_205 #x0000000000000001))
(assert (= var211188 temp966_205))
(assert (= var3879401 var211188))
(assert (= temp966_206 #x0000000000000000))
(assert (= var3866802 temp966_206))
(assert (= temp966_207 #x0000000000000000))
(assert (= temp966_208
   (ite (bvslt var3866802 temp966_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp966_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp966_208)))
(assert (= var3879420 temp966_209))
(assert (bvslt (ite (bvslt var3866802 temp966_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp966_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp966_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp966_211 #x0000000000000001))
(assert (= var3879421 temp966_211))
(assert (= temp966_212 #x0000000000000000))
(assert (= var4079423 temp966_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp966_213 #x0000000000000002))
(assert (= var4208259 temp966_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp966_214 #x0000000000000000))
(assert (= var4273820 temp966_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp966_215 #x0000000000000001))
(assert (= var211058 temp966_215))
(model-add temp966_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp966_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp966_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp966_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





