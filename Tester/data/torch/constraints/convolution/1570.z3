(declare-fun temp10888_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10888_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10888_3 () (_ BitVec 64))
(declare-fun temp10888_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10888_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10888_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10888_7 () (_ BitVec 64))
(declare-fun temp10888_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10888_9 () (_ BitVec 64))
(declare-fun temp10888_10 () (_ BitVec 64))
(declare-fun temp10888_11 () (_ BitVec 64))
(declare-fun temp10888_12 () (_ BitVec 64))
(declare-fun temp10888_13 () (_ BitVec 64))
(declare-fun temp10888_14 () (_ BitVec 64))
(declare-fun temp10888_15 () (_ BitVec 64))
(declare-fun temp10888_16 () (_ BitVec 64))
(declare-fun temp10888_17 () (_ BitVec 64))
(declare-fun temp10888_18 () (_ BitVec 64))
(declare-fun temp10888_19 () (_ BitVec 64))
(declare-fun temp10888_20 () (_ BitVec 64))
(declare-fun temp10888_21 () (_ BitVec 64))
(declare-fun temp10888_22 () (_ BitVec 64))
(declare-fun temp10888_23 () (_ BitVec 64))
(declare-fun temp10888_24 () (_ BitVec 64))
(declare-fun temp10888_25 () (_ BitVec 64))
(declare-fun temp10888_26 () (_ BitVec 64))
(declare-fun temp10888_27 () (_ BitVec 64))
(declare-fun temp10888_28 () (_ BitVec 64))
(declare-fun temp10888_29 () (_ BitVec 64))
(declare-fun temp10888_30 () (_ BitVec 64))
(declare-fun temp10888_31 () (_ BitVec 64))
(declare-fun temp10888_32 () (_ BitVec 64))
(declare-fun temp10888_33 () (_ BitVec 64))
(declare-fun temp10888_34 () (_ BitVec 64))
(declare-fun temp10888_35 () (_ BitVec 64))
(declare-fun temp10888_36 () (_ BitVec 64))
(declare-fun temp10888_37 () (_ BitVec 64))
(declare-fun temp10888_38 () (_ BitVec 64))
(declare-fun temp10888_39 () (_ BitVec 64))
(declare-fun temp10888_40 () (_ BitVec 64))
(declare-fun temp10888_41 () (_ BitVec 64))
(declare-fun temp10888_42 () (_ BitVec 64))
(declare-fun temp10888_43 () (_ BitVec 64))
(declare-fun temp10888_44 () (_ BitVec 64))
(declare-fun temp10888_45 () (_ BitVec 64))
(declare-fun temp10888_46 () (_ BitVec 64))
(declare-fun temp10888_47 () (_ BitVec 64))
(declare-fun temp10888_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10888_49 () (_ BitVec 64))
(declare-fun temp10888_50 () (_ BitVec 64))
(declare-fun temp10888_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10888_52 () (_ BitVec 64))
(declare-fun temp10888_53 () (_ BitVec 64))
(declare-fun temp10888_54 () (_ BitVec 64))
(declare-fun temp10888_55 () (_ BitVec 64))
(declare-fun temp10888_56 () (_ BitVec 64))
(declare-fun temp10888_57 () (_ BitVec 64))
(declare-fun temp10888_58 () (_ BitVec 64))
(declare-fun temp10888_59 () (_ BitVec 64))
(declare-fun temp10888_60 () (_ BitVec 64))
(declare-fun temp10888_61 () (_ BitVec 64))
(declare-fun temp10888_62 () (_ BitVec 64))
(declare-fun temp10888_63 () (_ BitVec 64))
(declare-fun temp10888_64 () (_ BitVec 64))
(declare-fun temp10888_65 () (_ BitVec 64))
(declare-fun temp10888_66 () (_ BitVec 64))
(declare-fun temp10888_67 () (_ BitVec 64))
(declare-fun temp10888_68 () (_ BitVec 64))
(declare-fun temp10888_69 () (_ BitVec 64))
(declare-fun temp10888_70 () (_ BitVec 64))
(declare-fun temp10888_71 () (_ BitVec 64))
(declare-fun temp10888_72 () (_ BitVec 64))
(declare-fun temp10888_73 () (_ BitVec 64))
(declare-fun temp10888_74 () (_ BitVec 64))
(declare-fun temp10888_75 () (_ BitVec 64))
(declare-fun temp10888_76 () (_ BitVec 64))
(declare-fun temp10888_77 () (_ BitVec 64))
(declare-fun temp10888_78 () (_ BitVec 64))
(declare-fun temp10888_79 () (_ BitVec 64))
(declare-fun temp10888_80 () (_ BitVec 64))
(declare-fun temp10888_81 () (_ BitVec 64))
(declare-fun temp10888_82 () (_ BitVec 64))
(declare-fun temp10888_83 () (_ BitVec 64))
(declare-fun temp10888_84 () (_ BitVec 64))
(declare-fun temp10888_85 () (_ BitVec 64))
(declare-fun temp10888_86 () (_ BitVec 64))
(declare-fun temp10888_87 () (_ BitVec 64))
(declare-fun temp10888_88 () (_ BitVec 64))
(declare-fun temp10888_89 () (_ BitVec 64))
(declare-fun temp10888_90 () (_ BitVec 64))
(declare-fun temp10888_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10888_92 () (_ BitVec 64))
(declare-fun temp10888_93 () (_ BitVec 64))
(declare-fun temp10888_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10888_95 () (_ BitVec 64))
(declare-fun temp10888_96 () (_ BitVec 64))
(declare-fun temp10888_97 () (_ BitVec 64))
(declare-fun temp10888_98 () (_ BitVec 64))
(declare-fun temp10888_99 () (_ BitVec 64))
(declare-fun temp10888_100 () (_ BitVec 64))
(declare-fun temp10888_101 () (_ BitVec 64))
(declare-fun temp10888_102 () (_ BitVec 64))
(declare-fun temp10888_103 () (_ BitVec 64))
(declare-fun temp10888_104 () (_ BitVec 64))
(declare-fun temp10888_105 () (_ BitVec 64))
(declare-fun temp10888_106 () (_ BitVec 64))
(declare-fun temp10888_107 () (_ BitVec 64))
(declare-fun temp10888_108 () (_ BitVec 64))
(declare-fun temp10888_109 () (_ BitVec 64))
(declare-fun temp10888_110 () (_ BitVec 64))
(declare-fun temp10888_111 () (_ BitVec 64))
(declare-fun temp10888_112 () (_ BitVec 64))
(declare-fun temp10888_113 () (_ BitVec 64))
(declare-fun temp10888_114 () (_ BitVec 64))
(declare-fun temp10888_115 () (_ BitVec 64))
(declare-fun temp10888_116 () (_ BitVec 64))
(declare-fun temp10888_117 () (_ BitVec 64))
(declare-fun temp10888_118 () (_ BitVec 64))
(declare-fun temp10888_119 () (_ BitVec 64))
(declare-fun temp10888_120 () (_ BitVec 64))
(declare-fun temp10888_121 () (_ BitVec 64))
(declare-fun temp10888_122 () (_ BitVec 64))
(declare-fun temp10888_123 () (_ BitVec 64))
(declare-fun temp10888_124 () (_ BitVec 64))
(declare-fun temp10888_125 () (_ BitVec 64))
(declare-fun temp10888_126 () (_ BitVec 64))
(declare-fun temp10888_127 () (_ BitVec 64))
(declare-fun temp10888_128 () (_ BitVec 64))
(declare-fun temp10888_129 () (_ BitVec 64))
(declare-fun temp10888_130 () (_ BitVec 64))
(declare-fun temp10888_131 () (_ BitVec 64))
(declare-fun temp10888_132 () (_ BitVec 64))
(declare-fun temp10888_133 () (_ BitVec 64))
(declare-fun temp10888_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10888_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10888_136 () (_ BitVec 64))
(declare-fun temp10888_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10888_138 () (_ BitVec 64))
(declare-fun temp10888_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10888_140 () (_ BitVec 64))
(declare-fun temp10888_141 () (_ BitVec 64))
(declare-fun temp10888_142 () (_ BitVec 64))
(declare-fun temp10888_143 () (_ BitVec 64))
(declare-fun temp10888_144 () (_ BitVec 64))
(declare-fun temp10888_145 () (_ BitVec 64))
(declare-fun temp10888_146 () (_ BitVec 64))
(declare-fun temp10888_147 () (_ BitVec 64))
(declare-fun temp10888_148 () (_ BitVec 64))
(declare-fun temp10888_149 () (_ BitVec 64))
(declare-fun temp10888_150 () (_ BitVec 64))
(declare-fun temp10888_151 () (_ BitVec 64))
(declare-fun temp10888_152 () (_ BitVec 64))
(declare-fun temp10888_153 () (_ BitVec 64))
(declare-fun temp10888_154 () (_ BitVec 64))
(declare-fun temp10888_155 () (_ BitVec 64))
(declare-fun temp10888_157 () (_ BitVec 64))
(declare-fun temp10888_158 () (_ BitVec 64))
(declare-fun temp10888_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10888_159 () (_ BitVec 64))
(declare-fun temp10888_160 () (_ BitVec 64))
(declare-fun temp10888_162 () (_ BitVec 64))
(declare-fun temp10888_163 () (_ BitVec 64))
(declare-fun temp10888_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10888_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10888_165 () (_ BitVec 64))
(declare-fun temp10888_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10888_167 () (_ BitVec 64))
(declare-fun temp10888_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10888_169 () (_ BitVec 64))
(declare-fun temp10888_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10888_171 () (_ BitVec 64))
(declare-fun temp10888_172 () (_ BitVec 64))
(declare-fun temp10888_173 () (_ BitVec 64))
(declare-fun temp10888_174 () (_ BitVec 64))
(declare-fun temp10888_175 () (_ BitVec 64))
(declare-fun temp10888_176 () (_ BitVec 64))
(declare-fun temp10888_177 () (_ BitVec 64))
(declare-fun temp10888_178 () (_ BitVec 64))
(declare-fun temp10888_179 () (_ BitVec 64))
(declare-fun temp10888_180 () (_ BitVec 64))
(declare-fun temp10888_181 () (_ BitVec 64))
(declare-fun temp10888_182 () (_ BitVec 64))
(declare-fun temp10888_183 () (_ BitVec 64))
(declare-fun temp10888_184 () (_ BitVec 64))
(declare-fun temp10888_185 () (_ BitVec 64))
(declare-fun temp10888_186 () (_ BitVec 64))
(declare-fun temp10888_187 () (_ BitVec 64))
(declare-fun temp10888_188 () (_ BitVec 64))
(declare-fun temp10888_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10888_190 () (_ BitVec 64))
(declare-fun temp10888_192 () (_ BitVec 64))
(declare-fun temp10888_193 () (_ BitVec 64))
(declare-fun temp10888_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10888_194 () (_ BitVec 64))
(declare-fun temp10888_195 () (_ BitVec 64))
(declare-fun temp10888_197 () (_ BitVec 64))
(declare-fun temp10888_198 () (_ BitVec 64))
(declare-fun temp10888_196 () (_ BitVec 64))
(declare-fun temp10888_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10888_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10888_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10888_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10888_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10888_204 () (_ BitVec 64))
(declare-fun temp10888_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10888_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10888_207 () (_ BitVec 64))
(declare-fun temp10888_208 () (_ BitVec 64))
(declare-fun temp10888_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10888_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10888_211 () (_ BitVec 64))
(declare-fun temp10888_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10888_213 () (_ BitVec 64))
(declare-fun temp10888_214 () (_ BitVec 64))
(declare-fun temp10888_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10888_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10888_217 () (_ BitVec 64))
(declare-fun temp10888_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10888_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10888_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10888_221 () (_ BitVec 64))
(assert (= temp10888_1 #x0000000000000001))
(assert (= var77203 temp10888_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10888_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10888_2)))
(assert (= temp10888_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10888_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10888_4 #x0000000000000000))
(assert (= var210941 temp10888_4))
(assert (= temp10888_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10888_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10888_6 #x0000000000000000))
(assert (= var210986 temp10888_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10888_7 #x0000000000000000))
(assert (= temp10888_8 temp10888_7))
(assert (= temp10888_9 (select ARGNAME_padding_NAMEEND_VAL temp10888_8)))
(assert (= temp10888_10 #x0000000000000001))
(assert (= temp10888_11 temp10888_10))
(assert (= temp10888_12 (select ARGNAME_padding_NAMEEND_VAL temp10888_11)))
(assert (= temp10888_13 #x0000000000000002))
(assert (= temp10888_14 temp10888_13))
(assert (= temp10888_15 (select ARGNAME_padding_NAMEEND_VAL temp10888_14)))
(assert (= temp10888_16 #x0000000000000003))
(assert (= temp10888_17 temp10888_16))
(assert (= temp10888_18 (select ARGNAME_padding_NAMEEND_VAL temp10888_17)))
(assert (= temp10888_19 #x0000000000000004))
(assert (= temp10888_20 temp10888_19))
(assert (= temp10888_21 (select ARGNAME_padding_NAMEEND_VAL temp10888_20)))
(assert (= temp10888_22 #x0000000000000005))
(assert (= temp10888_23 temp10888_22))
(assert (= temp10888_24 (select ARGNAME_padding_NAMEEND_VAL temp10888_23)))
(assert (= temp10888_25 #x0000000000000000))
(assert (= temp10888_26 #x0000000000000000))
(assert (= temp10888_27 temp10888_26))
(assert (= temp10888_28 (select ARGNAME_padding_NAMEEND_VAL temp10888_27)))
(assert (= temp10888_29 #x0000000000000000))
(assert (= temp10888_30 #x0000000000000001))
(assert (= temp10888_31 temp10888_30))
(assert (= temp10888_32 (select ARGNAME_padding_NAMEEND_VAL temp10888_31)))
(assert (= temp10888_33 #x0000000000000000))
(assert (= temp10888_34 #x0000000000000002))
(assert (= temp10888_35 temp10888_34))
(assert (= temp10888_36 (select ARGNAME_padding_NAMEEND_VAL temp10888_35)))
(assert (= temp10888_37 #x0000000000000000))
(assert (= temp10888_38 #x0000000000000003))
(assert (= temp10888_39 temp10888_38))
(assert (= temp10888_40 (select ARGNAME_padding_NAMEEND_VAL temp10888_39)))
(assert (= temp10888_41 #x0000000000000000))
(assert (= temp10888_42 #x0000000000000004))
(assert (= temp10888_43 temp10888_42))
(assert (= temp10888_44 (select ARGNAME_padding_NAMEEND_VAL temp10888_43)))
(assert (= temp10888_45 #x0000000000000000))
(assert (= temp10888_46 #x0000000000000005))
(assert (= temp10888_47 temp10888_46))
(assert (= temp10888_48 (select ARGNAME_padding_NAMEEND_VAL temp10888_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10888_28 temp10888_25)
             (bvslt temp10888_32 temp10888_29)
             (bvslt temp10888_36 temp10888_33)
             (bvslt temp10888_40 temp10888_37)
             (bvslt temp10888_44 temp10888_41)
             (bvslt temp10888_48 temp10888_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10888_49 #x0000000000000000))
(assert (= var1191714 temp10888_49))
(assert (= temp10888_50 #x0000000000000000))
(assert (= temp10888_51 temp10888_50))
(assert (= temp10888_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10888_51)))
(assert (= temp10888_53 #x0000000000000001))
(assert (= temp10888_54 temp10888_53))
(assert (= temp10888_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10888_54)))
(assert (= temp10888_56 #x0000000000000002))
(assert (= temp10888_57 temp10888_56))
(assert (= temp10888_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10888_57)))
(assert (= temp10888_59 #x0000000000000003))
(assert (= temp10888_60 temp10888_59))
(assert (= temp10888_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10888_60)))
(assert (= temp10888_62 #x0000000000000004))
(assert (= temp10888_63 temp10888_62))
(assert (= temp10888_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10888_63)))
(assert (= temp10888_65 #x0000000000000005))
(assert (= temp10888_66 temp10888_65))
(assert (= temp10888_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10888_66)))
(assert (= temp10888_68 #x0000000000000000))
(assert (= temp10888_69 #x0000000000000000))
(assert (= temp10888_70 temp10888_69))
(assert (= temp10888_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10888_70)))
(assert (= temp10888_72 #x0000000000000000))
(assert (= temp10888_73 #x0000000000000001))
(assert (= temp10888_74 temp10888_73))
(assert (= temp10888_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10888_74)))
(assert (= temp10888_76 #x0000000000000000))
(assert (= temp10888_77 #x0000000000000002))
(assert (= temp10888_78 temp10888_77))
(assert (= temp10888_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10888_78)))
(assert (= temp10888_80 #x0000000000000000))
(assert (= temp10888_81 #x0000000000000003))
(assert (= temp10888_82 temp10888_81))
(assert (= temp10888_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10888_82)))
(assert (= temp10888_84 #x0000000000000000))
(assert (= temp10888_85 #x0000000000000004))
(assert (= temp10888_86 temp10888_85))
(assert (= temp10888_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10888_86)))
(assert (= temp10888_88 #x0000000000000000))
(assert (= temp10888_89 #x0000000000000005))
(assert (= temp10888_90 temp10888_89))
(assert (= temp10888_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10888_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10888_71 temp10888_68)
             (bvslt temp10888_75 temp10888_72)
             (bvslt temp10888_79 temp10888_76)
             (bvslt temp10888_83 temp10888_80)
             (bvslt temp10888_87 temp10888_84)
             (bvslt temp10888_91 temp10888_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10888_92 #x0000000000000000))
(assert (= var1191725 temp10888_92))
(assert (= temp10888_93 #x0000000000000000))
(assert (= temp10888_94 temp10888_93))
(assert (= temp10888_95 (select ARGNAME_stride_NAMEEND_VAL temp10888_94)))
(assert (= temp10888_96 #x0000000000000001))
(assert (= temp10888_97 temp10888_96))
(assert (= temp10888_98 (select ARGNAME_stride_NAMEEND_VAL temp10888_97)))
(assert (= temp10888_99 #x0000000000000002))
(assert (= temp10888_100 temp10888_99))
(assert (= temp10888_101 (select ARGNAME_stride_NAMEEND_VAL temp10888_100)))
(assert (= temp10888_102 #x0000000000000003))
(assert (= temp10888_103 temp10888_102))
(assert (= temp10888_104 (select ARGNAME_stride_NAMEEND_VAL temp10888_103)))
(assert (= temp10888_105 #x0000000000000004))
(assert (= temp10888_106 temp10888_105))
(assert (= temp10888_107 (select ARGNAME_stride_NAMEEND_VAL temp10888_106)))
(assert (= temp10888_108 #x0000000000000005))
(assert (= temp10888_109 temp10888_108))
(assert (= temp10888_110 (select ARGNAME_stride_NAMEEND_VAL temp10888_109)))
(assert (= temp10888_111 #x0000000000000000))
(assert (= temp10888_112 #x0000000000000000))
(assert (= temp10888_113 temp10888_112))
(assert (= temp10888_114 (select ARGNAME_stride_NAMEEND_VAL temp10888_113)))
(assert (= temp10888_115 #x0000000000000000))
(assert (= temp10888_116 #x0000000000000001))
(assert (= temp10888_117 temp10888_116))
(assert (= temp10888_118 (select ARGNAME_stride_NAMEEND_VAL temp10888_117)))
(assert (= temp10888_119 #x0000000000000000))
(assert (= temp10888_120 #x0000000000000002))
(assert (= temp10888_121 temp10888_120))
(assert (= temp10888_122 (select ARGNAME_stride_NAMEEND_VAL temp10888_121)))
(assert (= temp10888_123 #x0000000000000000))
(assert (= temp10888_124 #x0000000000000003))
(assert (= temp10888_125 temp10888_124))
(assert (= temp10888_126 (select ARGNAME_stride_NAMEEND_VAL temp10888_125)))
(assert (= temp10888_127 #x0000000000000000))
(assert (= temp10888_128 #x0000000000000004))
(assert (= temp10888_129 temp10888_128))
(assert (= temp10888_130 (select ARGNAME_stride_NAMEEND_VAL temp10888_129)))
(assert (= temp10888_131 #x0000000000000000))
(assert (= temp10888_132 #x0000000000000005))
(assert (= temp10888_133 temp10888_132))
(assert (= temp10888_134 (select ARGNAME_stride_NAMEEND_VAL temp10888_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10888_114 temp10888_111)
             (bvsle temp10888_118 temp10888_115)
             (bvsle temp10888_122 temp10888_119)
             (bvsle temp10888_126 temp10888_123)
             (bvsle temp10888_130 temp10888_127)
             (bvsle temp10888_134 temp10888_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10888_135 #x0000000000000000))
(assert (= var1191735 temp10888_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10888_136 #x0000000000000001))
(assert (= var1191747 temp10888_136))
(assert (= temp10888_137 #x0000000000000000))
(assert (= var1179826 temp10888_137))
(assert (= temp10888_138 #x0000000000000000))
(assert (= temp10888_139 temp10888_138))
(assert (= temp10888_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10888_139)))
(assert (= temp10888_141 #x0000000000000001))
(assert (= temp10888_142 temp10888_141))
(assert (= temp10888_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10888_142)))
(assert (= temp10888_144 #x0000000000000002))
(assert (= temp10888_145 temp10888_144))
(assert (= temp10888_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10888_145)))
(assert (= temp10888_147 #x0000000000000003))
(assert (= temp10888_148 temp10888_147))
(assert (= temp10888_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10888_148)))
(assert (= temp10888_150 #x0000000000000004))
(assert (= temp10888_151 temp10888_150))
(assert (= temp10888_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10888_151)))
(assert (= temp10888_153 #x0000000000000005))
(assert (= temp10888_154 temp10888_153))
(assert (= temp10888_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10888_154)))
(assert (= temp10888_157 var1179826))
(assert (= temp10888_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10888_157)))
(assert (= temp10888_156 temp10888_158))
(assert (= var1191780
   (ite (bvslt temp10888_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10888_159 #x0000000000000000))
(assert (= var1191780 temp10888_159))
(assert (= temp10888_160 #x0000000000000000))
(assert (= var1179826 temp10888_160))
(assert (= temp10888_162 var1179826))
(assert (= temp10888_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10888_162)))
(assert (= temp10888_161 temp10888_163))
(assert (= var1191802 (bvsmod temp10888_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10888_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10888_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10888_165 #x0000000000000001))
(assert (= var1191803 temp10888_165))
(assert (= temp10888_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10888_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10888_167 #x0000000000000001))
(assert (= var1191823 temp10888_167))
(assert (= temp10888_168 #x0000000000000001))
(assert (= var1180714 temp10888_168))
(assert (= temp10888_169 #x0000000000000000))
(assert (= temp10888_170 temp10888_169))
(assert (= temp10888_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10888_170)))
(assert (= temp10888_172 #x0000000000000001))
(assert (= temp10888_173 temp10888_172))
(assert (= temp10888_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10888_173)))
(assert (= temp10888_175 #x0000000000000002))
(assert (= temp10888_176 temp10888_175))
(assert (= temp10888_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10888_176)))
(assert (= temp10888_178 #x0000000000000003))
(assert (= temp10888_179 temp10888_178))
(assert (= temp10888_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10888_179)))
(assert (= temp10888_181 #x0000000000000004))
(assert (= temp10888_182 temp10888_181))
(assert (= temp10888_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10888_182)))
(assert (= temp10888_184 #x0000000000000005))
(assert (= temp10888_185 temp10888_184))
(assert (= temp10888_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10888_185)))
(assert (= temp10888_187 #x0000000000000000))
(assert (= temp10888_188
   (ite (bvslt var1180714 temp10888_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10888_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10888_188)))
(assert (= var1191831 temp10888_189))
(assert (bvslt (ite (bvslt var1180714 temp10888_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10888_190 #x0000000000000001))
(assert (= var1180714 temp10888_190))
(assert (= temp10888_192 var1180714))
(assert (= temp10888_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10888_192)))
(assert (= temp10888_191 temp10888_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10888_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10888_194 #x0000000000000001))
(assert (= var1191836 temp10888_194))
(assert (= temp10888_195 #x0000000000000000))
(assert (= var1179826 temp10888_195))
(assert (= temp10888_197 var1179826))
(assert (= temp10888_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10888_197)))
(assert (= temp10888_196 temp10888_198))
(assert (= temp10888_199 #x0000000000000002))
(assert (= var1586025 temp10888_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10888_200 #x0000000000000001))
(assert (= var1191993 temp10888_200))
(assert (= temp10888_201 #x0000000000000001))
(assert (= var2700303 temp10888_201))
(assert (= temp10888_202 #x0000000000000001))
(assert (= var2962447 temp10888_202))
(assert (= temp10888_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10888_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10888_204 #x0000000000000001))
(assert (= var211058 temp10888_204))
(assert (= temp10888_205 #x0000000000000001))
(assert (= var211188 temp10888_205))
(assert (= var3879401 var211188))
(assert (= temp10888_206 #x0000000000000000))
(assert (= var3866802 temp10888_206))
(assert (= temp10888_207 #x0000000000000000))
(assert (= temp10888_208
   (ite (bvslt var3866802 temp10888_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10888_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10888_208)))
(assert (= var3879420 temp10888_209))
(assert (bvslt (ite (bvslt var3866802 temp10888_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10888_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10888_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10888_211 #x0000000000000000))
(assert (= var3879421 temp10888_211))
(assert (= temp10888_212 #x0000000000000001))
(assert (= var3867690 temp10888_212))
(assert (= temp10888_213 #x0000000000000000))
(assert (= temp10888_214
   (ite (bvslt var3867690 temp10888_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10888_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10888_214)))
(assert (= var3879423 temp10888_215))
(assert (bvslt (ite (bvslt var3867690 temp10888_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10888_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10888_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10888_217 #x0000000000000001))
(assert (= var3879424 temp10888_217))
(assert (= temp10888_218 #x0000000000000000))
(assert (= var4133117 temp10888_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10888_219 #x0000000000000002))
(assert (= var4339331 temp10888_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10888_220 #x0000000000000000))
(assert (= var4404892 temp10888_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10888_221 #x0000000000000001))
(assert (= var211058 temp10888_221))
(model-add temp10888_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10888_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10888_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10888_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





