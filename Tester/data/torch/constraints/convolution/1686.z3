(declare-fun temp11042_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11042_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11042_3 () (_ BitVec 64))
(declare-fun temp11042_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11042_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11042_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11042_7 () (_ BitVec 64))
(declare-fun temp11042_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11042_9 () (_ BitVec 64))
(declare-fun temp11042_10 () (_ BitVec 64))
(declare-fun temp11042_11 () (_ BitVec 64))
(declare-fun temp11042_12 () (_ BitVec 64))
(declare-fun temp11042_13 () (_ BitVec 64))
(declare-fun temp11042_14 () (_ BitVec 64))
(declare-fun temp11042_15 () (_ BitVec 64))
(declare-fun temp11042_16 () (_ BitVec 64))
(declare-fun temp11042_17 () (_ BitVec 64))
(declare-fun temp11042_18 () (_ BitVec 64))
(declare-fun temp11042_19 () (_ BitVec 64))
(declare-fun temp11042_20 () (_ BitVec 64))
(declare-fun temp11042_21 () (_ BitVec 64))
(declare-fun temp11042_22 () (_ BitVec 64))
(declare-fun temp11042_23 () (_ BitVec 64))
(declare-fun temp11042_24 () (_ BitVec 64))
(declare-fun temp11042_25 () (_ BitVec 64))
(declare-fun temp11042_26 () (_ BitVec 64))
(declare-fun temp11042_27 () (_ BitVec 64))
(declare-fun temp11042_28 () (_ BitVec 64))
(declare-fun temp11042_29 () (_ BitVec 64))
(declare-fun temp11042_30 () (_ BitVec 64))
(declare-fun temp11042_31 () (_ BitVec 64))
(declare-fun temp11042_32 () (_ BitVec 64))
(declare-fun temp11042_33 () (_ BitVec 64))
(declare-fun temp11042_34 () (_ BitVec 64))
(declare-fun temp11042_35 () (_ BitVec 64))
(declare-fun temp11042_36 () (_ BitVec 64))
(declare-fun temp11042_37 () (_ BitVec 64))
(declare-fun temp11042_38 () (_ BitVec 64))
(declare-fun temp11042_39 () (_ BitVec 64))
(declare-fun temp11042_40 () (_ BitVec 64))
(declare-fun temp11042_41 () (_ BitVec 64))
(declare-fun temp11042_42 () (_ BitVec 64))
(declare-fun temp11042_43 () (_ BitVec 64))
(declare-fun temp11042_44 () (_ BitVec 64))
(declare-fun temp11042_45 () (_ BitVec 64))
(declare-fun temp11042_46 () (_ BitVec 64))
(declare-fun temp11042_47 () (_ BitVec 64))
(declare-fun temp11042_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11042_49 () (_ BitVec 64))
(declare-fun temp11042_50 () (_ BitVec 64))
(declare-fun temp11042_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11042_52 () (_ BitVec 64))
(declare-fun temp11042_53 () (_ BitVec 64))
(declare-fun temp11042_54 () (_ BitVec 64))
(declare-fun temp11042_55 () (_ BitVec 64))
(declare-fun temp11042_56 () (_ BitVec 64))
(declare-fun temp11042_57 () (_ BitVec 64))
(declare-fun temp11042_58 () (_ BitVec 64))
(declare-fun temp11042_59 () (_ BitVec 64))
(declare-fun temp11042_60 () (_ BitVec 64))
(declare-fun temp11042_61 () (_ BitVec 64))
(declare-fun temp11042_62 () (_ BitVec 64))
(declare-fun temp11042_63 () (_ BitVec 64))
(declare-fun temp11042_64 () (_ BitVec 64))
(declare-fun temp11042_65 () (_ BitVec 64))
(declare-fun temp11042_66 () (_ BitVec 64))
(declare-fun temp11042_67 () (_ BitVec 64))
(declare-fun temp11042_68 () (_ BitVec 64))
(declare-fun temp11042_69 () (_ BitVec 64))
(declare-fun temp11042_70 () (_ BitVec 64))
(declare-fun temp11042_71 () (_ BitVec 64))
(declare-fun temp11042_72 () (_ BitVec 64))
(declare-fun temp11042_73 () (_ BitVec 64))
(declare-fun temp11042_74 () (_ BitVec 64))
(declare-fun temp11042_75 () (_ BitVec 64))
(declare-fun temp11042_76 () (_ BitVec 64))
(declare-fun temp11042_77 () (_ BitVec 64))
(declare-fun temp11042_78 () (_ BitVec 64))
(declare-fun temp11042_79 () (_ BitVec 64))
(declare-fun temp11042_80 () (_ BitVec 64))
(declare-fun temp11042_81 () (_ BitVec 64))
(declare-fun temp11042_82 () (_ BitVec 64))
(declare-fun temp11042_83 () (_ BitVec 64))
(declare-fun temp11042_84 () (_ BitVec 64))
(declare-fun temp11042_85 () (_ BitVec 64))
(declare-fun temp11042_86 () (_ BitVec 64))
(declare-fun temp11042_87 () (_ BitVec 64))
(declare-fun temp11042_88 () (_ BitVec 64))
(declare-fun temp11042_89 () (_ BitVec 64))
(declare-fun temp11042_90 () (_ BitVec 64))
(declare-fun temp11042_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11042_92 () (_ BitVec 64))
(declare-fun temp11042_93 () (_ BitVec 64))
(declare-fun temp11042_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11042_95 () (_ BitVec 64))
(declare-fun temp11042_96 () (_ BitVec 64))
(declare-fun temp11042_97 () (_ BitVec 64))
(declare-fun temp11042_98 () (_ BitVec 64))
(declare-fun temp11042_99 () (_ BitVec 64))
(declare-fun temp11042_100 () (_ BitVec 64))
(declare-fun temp11042_101 () (_ BitVec 64))
(declare-fun temp11042_102 () (_ BitVec 64))
(declare-fun temp11042_103 () (_ BitVec 64))
(declare-fun temp11042_104 () (_ BitVec 64))
(declare-fun temp11042_105 () (_ BitVec 64))
(declare-fun temp11042_106 () (_ BitVec 64))
(declare-fun temp11042_107 () (_ BitVec 64))
(declare-fun temp11042_108 () (_ BitVec 64))
(declare-fun temp11042_109 () (_ BitVec 64))
(declare-fun temp11042_110 () (_ BitVec 64))
(declare-fun temp11042_111 () (_ BitVec 64))
(declare-fun temp11042_112 () (_ BitVec 64))
(declare-fun temp11042_113 () (_ BitVec 64))
(declare-fun temp11042_114 () (_ BitVec 64))
(declare-fun temp11042_115 () (_ BitVec 64))
(declare-fun temp11042_116 () (_ BitVec 64))
(declare-fun temp11042_117 () (_ BitVec 64))
(declare-fun temp11042_118 () (_ BitVec 64))
(declare-fun temp11042_119 () (_ BitVec 64))
(declare-fun temp11042_120 () (_ BitVec 64))
(declare-fun temp11042_121 () (_ BitVec 64))
(declare-fun temp11042_122 () (_ BitVec 64))
(declare-fun temp11042_123 () (_ BitVec 64))
(declare-fun temp11042_124 () (_ BitVec 64))
(declare-fun temp11042_125 () (_ BitVec 64))
(declare-fun temp11042_126 () (_ BitVec 64))
(declare-fun temp11042_127 () (_ BitVec 64))
(declare-fun temp11042_128 () (_ BitVec 64))
(declare-fun temp11042_129 () (_ BitVec 64))
(declare-fun temp11042_130 () (_ BitVec 64))
(declare-fun temp11042_131 () (_ BitVec 64))
(declare-fun temp11042_132 () (_ BitVec 64))
(declare-fun temp11042_133 () (_ BitVec 64))
(declare-fun temp11042_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11042_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11042_136 () (_ BitVec 64))
(declare-fun temp11042_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11042_138 () (_ BitVec 64))
(declare-fun temp11042_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11042_140 () (_ BitVec 64))
(declare-fun temp11042_141 () (_ BitVec 64))
(declare-fun temp11042_142 () (_ BitVec 64))
(declare-fun temp11042_143 () (_ BitVec 64))
(declare-fun temp11042_144 () (_ BitVec 64))
(declare-fun temp11042_145 () (_ BitVec 64))
(declare-fun temp11042_146 () (_ BitVec 64))
(declare-fun temp11042_147 () (_ BitVec 64))
(declare-fun temp11042_148 () (_ BitVec 64))
(declare-fun temp11042_149 () (_ BitVec 64))
(declare-fun temp11042_150 () (_ BitVec 64))
(declare-fun temp11042_151 () (_ BitVec 64))
(declare-fun temp11042_152 () (_ BitVec 64))
(declare-fun temp11042_153 () (_ BitVec 64))
(declare-fun temp11042_154 () (_ BitVec 64))
(declare-fun temp11042_155 () (_ BitVec 64))
(declare-fun temp11042_157 () (_ BitVec 64))
(declare-fun temp11042_158 () (_ BitVec 64))
(declare-fun temp11042_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11042_159 () (_ BitVec 64))
(declare-fun temp11042_160 () (_ BitVec 64))
(declare-fun temp11042_162 () (_ BitVec 64))
(declare-fun temp11042_163 () (_ BitVec 64))
(declare-fun temp11042_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11042_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11042_165 () (_ BitVec 64))
(declare-fun temp11042_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11042_167 () (_ BitVec 64))
(declare-fun temp11042_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11042_169 () (_ BitVec 64))
(declare-fun temp11042_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11042_171 () (_ BitVec 64))
(declare-fun temp11042_172 () (_ BitVec 64))
(declare-fun temp11042_173 () (_ BitVec 64))
(declare-fun temp11042_174 () (_ BitVec 64))
(declare-fun temp11042_175 () (_ BitVec 64))
(declare-fun temp11042_176 () (_ BitVec 64))
(declare-fun temp11042_177 () (_ BitVec 64))
(declare-fun temp11042_178 () (_ BitVec 64))
(declare-fun temp11042_179 () (_ BitVec 64))
(declare-fun temp11042_180 () (_ BitVec 64))
(declare-fun temp11042_181 () (_ BitVec 64))
(declare-fun temp11042_182 () (_ BitVec 64))
(declare-fun temp11042_183 () (_ BitVec 64))
(declare-fun temp11042_184 () (_ BitVec 64))
(declare-fun temp11042_185 () (_ BitVec 64))
(declare-fun temp11042_186 () (_ BitVec 64))
(declare-fun temp11042_187 () (_ BitVec 64))
(declare-fun temp11042_188 () (_ BitVec 64))
(declare-fun temp11042_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11042_190 () (_ BitVec 64))
(declare-fun temp11042_192 () (_ BitVec 64))
(declare-fun temp11042_193 () (_ BitVec 64))
(declare-fun temp11042_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11042_194 () (_ BitVec 64))
(declare-fun temp11042_195 () (_ BitVec 64))
(declare-fun temp11042_197 () (_ BitVec 64))
(declare-fun temp11042_198 () (_ BitVec 64))
(declare-fun temp11042_196 () (_ BitVec 64))
(declare-fun temp11042_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11042_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11042_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11042_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11042_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11042_204 () (_ BitVec 64))
(declare-fun temp11042_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11042_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11042_207 () (_ BitVec 64))
(declare-fun temp11042_208 () (_ BitVec 64))
(declare-fun temp11042_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11042_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11042_211 () (_ BitVec 64))
(declare-fun temp11042_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11042_213 () (_ BitVec 64))
(declare-fun temp11042_214 () (_ BitVec 64))
(declare-fun temp11042_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11042_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11042_217 () (_ BitVec 64))
(declare-fun temp11042_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11042_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp11042_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun temp11042_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp11042_222 () (_ BitVec 64))
(declare-fun temp11042_223 () (_ BitVec 64))
(declare-fun var5191299 () (_ BitVec 64))
(declare-fun var5256844 () (_ BitVec 64))
(declare-fun temp11042_224 () (_ BitVec 64))
(assert (= temp11042_1 #x0000000000000001))
(assert (= var77203 temp11042_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11042_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11042_2)))
(assert (= temp11042_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11042_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11042_4 #x0000000000000000))
(assert (= var210941 temp11042_4))
(assert (= temp11042_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11042_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11042_6 #x0000000000000000))
(assert (= var210986 temp11042_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11042_7 #x0000000000000000))
(assert (= temp11042_8 temp11042_7))
(assert (= temp11042_9 (select ARGNAME_padding_NAMEEND_VAL temp11042_8)))
(assert (= temp11042_10 #x0000000000000001))
(assert (= temp11042_11 temp11042_10))
(assert (= temp11042_12 (select ARGNAME_padding_NAMEEND_VAL temp11042_11)))
(assert (= temp11042_13 #x0000000000000002))
(assert (= temp11042_14 temp11042_13))
(assert (= temp11042_15 (select ARGNAME_padding_NAMEEND_VAL temp11042_14)))
(assert (= temp11042_16 #x0000000000000003))
(assert (= temp11042_17 temp11042_16))
(assert (= temp11042_18 (select ARGNAME_padding_NAMEEND_VAL temp11042_17)))
(assert (= temp11042_19 #x0000000000000004))
(assert (= temp11042_20 temp11042_19))
(assert (= temp11042_21 (select ARGNAME_padding_NAMEEND_VAL temp11042_20)))
(assert (= temp11042_22 #x0000000000000005))
(assert (= temp11042_23 temp11042_22))
(assert (= temp11042_24 (select ARGNAME_padding_NAMEEND_VAL temp11042_23)))
(assert (= temp11042_25 #x0000000000000000))
(assert (= temp11042_26 #x0000000000000000))
(assert (= temp11042_27 temp11042_26))
(assert (= temp11042_28 (select ARGNAME_padding_NAMEEND_VAL temp11042_27)))
(assert (= temp11042_29 #x0000000000000000))
(assert (= temp11042_30 #x0000000000000001))
(assert (= temp11042_31 temp11042_30))
(assert (= temp11042_32 (select ARGNAME_padding_NAMEEND_VAL temp11042_31)))
(assert (= temp11042_33 #x0000000000000000))
(assert (= temp11042_34 #x0000000000000002))
(assert (= temp11042_35 temp11042_34))
(assert (= temp11042_36 (select ARGNAME_padding_NAMEEND_VAL temp11042_35)))
(assert (= temp11042_37 #x0000000000000000))
(assert (= temp11042_38 #x0000000000000003))
(assert (= temp11042_39 temp11042_38))
(assert (= temp11042_40 (select ARGNAME_padding_NAMEEND_VAL temp11042_39)))
(assert (= temp11042_41 #x0000000000000000))
(assert (= temp11042_42 #x0000000000000004))
(assert (= temp11042_43 temp11042_42))
(assert (= temp11042_44 (select ARGNAME_padding_NAMEEND_VAL temp11042_43)))
(assert (= temp11042_45 #x0000000000000000))
(assert (= temp11042_46 #x0000000000000005))
(assert (= temp11042_47 temp11042_46))
(assert (= temp11042_48 (select ARGNAME_padding_NAMEEND_VAL temp11042_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11042_28 temp11042_25)
             (bvslt temp11042_32 temp11042_29)
             (bvslt temp11042_36 temp11042_33)
             (bvslt temp11042_40 temp11042_37)
             (bvslt temp11042_44 temp11042_41)
             (bvslt temp11042_48 temp11042_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11042_49 #x0000000000000000))
(assert (= var1191714 temp11042_49))
(assert (= temp11042_50 #x0000000000000000))
(assert (= temp11042_51 temp11042_50))
(assert (= temp11042_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11042_51)))
(assert (= temp11042_53 #x0000000000000001))
(assert (= temp11042_54 temp11042_53))
(assert (= temp11042_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11042_54)))
(assert (= temp11042_56 #x0000000000000002))
(assert (= temp11042_57 temp11042_56))
(assert (= temp11042_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11042_57)))
(assert (= temp11042_59 #x0000000000000003))
(assert (= temp11042_60 temp11042_59))
(assert (= temp11042_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11042_60)))
(assert (= temp11042_62 #x0000000000000004))
(assert (= temp11042_63 temp11042_62))
(assert (= temp11042_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11042_63)))
(assert (= temp11042_65 #x0000000000000005))
(assert (= temp11042_66 temp11042_65))
(assert (= temp11042_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11042_66)))
(assert (= temp11042_68 #x0000000000000000))
(assert (= temp11042_69 #x0000000000000000))
(assert (= temp11042_70 temp11042_69))
(assert (= temp11042_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11042_70)))
(assert (= temp11042_72 #x0000000000000000))
(assert (= temp11042_73 #x0000000000000001))
(assert (= temp11042_74 temp11042_73))
(assert (= temp11042_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11042_74)))
(assert (= temp11042_76 #x0000000000000000))
(assert (= temp11042_77 #x0000000000000002))
(assert (= temp11042_78 temp11042_77))
(assert (= temp11042_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11042_78)))
(assert (= temp11042_80 #x0000000000000000))
(assert (= temp11042_81 #x0000000000000003))
(assert (= temp11042_82 temp11042_81))
(assert (= temp11042_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11042_82)))
(assert (= temp11042_84 #x0000000000000000))
(assert (= temp11042_85 #x0000000000000004))
(assert (= temp11042_86 temp11042_85))
(assert (= temp11042_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11042_86)))
(assert (= temp11042_88 #x0000000000000000))
(assert (= temp11042_89 #x0000000000000005))
(assert (= temp11042_90 temp11042_89))
(assert (= temp11042_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11042_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11042_71 temp11042_68)
             (bvslt temp11042_75 temp11042_72)
             (bvslt temp11042_79 temp11042_76)
             (bvslt temp11042_83 temp11042_80)
             (bvslt temp11042_87 temp11042_84)
             (bvslt temp11042_91 temp11042_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11042_92 #x0000000000000000))
(assert (= var1191725 temp11042_92))
(assert (= temp11042_93 #x0000000000000000))
(assert (= temp11042_94 temp11042_93))
(assert (= temp11042_95 (select ARGNAME_stride_NAMEEND_VAL temp11042_94)))
(assert (= temp11042_96 #x0000000000000001))
(assert (= temp11042_97 temp11042_96))
(assert (= temp11042_98 (select ARGNAME_stride_NAMEEND_VAL temp11042_97)))
(assert (= temp11042_99 #x0000000000000002))
(assert (= temp11042_100 temp11042_99))
(assert (= temp11042_101 (select ARGNAME_stride_NAMEEND_VAL temp11042_100)))
(assert (= temp11042_102 #x0000000000000003))
(assert (= temp11042_103 temp11042_102))
(assert (= temp11042_104 (select ARGNAME_stride_NAMEEND_VAL temp11042_103)))
(assert (= temp11042_105 #x0000000000000004))
(assert (= temp11042_106 temp11042_105))
(assert (= temp11042_107 (select ARGNAME_stride_NAMEEND_VAL temp11042_106)))
(assert (= temp11042_108 #x0000000000000005))
(assert (= temp11042_109 temp11042_108))
(assert (= temp11042_110 (select ARGNAME_stride_NAMEEND_VAL temp11042_109)))
(assert (= temp11042_111 #x0000000000000000))
(assert (= temp11042_112 #x0000000000000000))
(assert (= temp11042_113 temp11042_112))
(assert (= temp11042_114 (select ARGNAME_stride_NAMEEND_VAL temp11042_113)))
(assert (= temp11042_115 #x0000000000000000))
(assert (= temp11042_116 #x0000000000000001))
(assert (= temp11042_117 temp11042_116))
(assert (= temp11042_118 (select ARGNAME_stride_NAMEEND_VAL temp11042_117)))
(assert (= temp11042_119 #x0000000000000000))
(assert (= temp11042_120 #x0000000000000002))
(assert (= temp11042_121 temp11042_120))
(assert (= temp11042_122 (select ARGNAME_stride_NAMEEND_VAL temp11042_121)))
(assert (= temp11042_123 #x0000000000000000))
(assert (= temp11042_124 #x0000000000000003))
(assert (= temp11042_125 temp11042_124))
(assert (= temp11042_126 (select ARGNAME_stride_NAMEEND_VAL temp11042_125)))
(assert (= temp11042_127 #x0000000000000000))
(assert (= temp11042_128 #x0000000000000004))
(assert (= temp11042_129 temp11042_128))
(assert (= temp11042_130 (select ARGNAME_stride_NAMEEND_VAL temp11042_129)))
(assert (= temp11042_131 #x0000000000000000))
(assert (= temp11042_132 #x0000000000000005))
(assert (= temp11042_133 temp11042_132))
(assert (= temp11042_134 (select ARGNAME_stride_NAMEEND_VAL temp11042_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11042_114 temp11042_111)
             (bvsle temp11042_118 temp11042_115)
             (bvsle temp11042_122 temp11042_119)
             (bvsle temp11042_126 temp11042_123)
             (bvsle temp11042_130 temp11042_127)
             (bvsle temp11042_134 temp11042_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11042_135 #x0000000000000000))
(assert (= var1191735 temp11042_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11042_136 #x0000000000000001))
(assert (= var1191747 temp11042_136))
(assert (= temp11042_137 #x0000000000000000))
(assert (= var1179826 temp11042_137))
(assert (= temp11042_138 #x0000000000000000))
(assert (= temp11042_139 temp11042_138))
(assert (= temp11042_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11042_139)))
(assert (= temp11042_141 #x0000000000000001))
(assert (= temp11042_142 temp11042_141))
(assert (= temp11042_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11042_142)))
(assert (= temp11042_144 #x0000000000000002))
(assert (= temp11042_145 temp11042_144))
(assert (= temp11042_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11042_145)))
(assert (= temp11042_147 #x0000000000000003))
(assert (= temp11042_148 temp11042_147))
(assert (= temp11042_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11042_148)))
(assert (= temp11042_150 #x0000000000000004))
(assert (= temp11042_151 temp11042_150))
(assert (= temp11042_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11042_151)))
(assert (= temp11042_153 #x0000000000000005))
(assert (= temp11042_154 temp11042_153))
(assert (= temp11042_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11042_154)))
(assert (= temp11042_157 var1179826))
(assert (= temp11042_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11042_157)))
(assert (= temp11042_156 temp11042_158))
(assert (= var1191780
   (ite (bvslt temp11042_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11042_159 #x0000000000000000))
(assert (= var1191780 temp11042_159))
(assert (= temp11042_160 #x0000000000000000))
(assert (= var1179826 temp11042_160))
(assert (= temp11042_162 var1179826))
(assert (= temp11042_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11042_162)))
(assert (= temp11042_161 temp11042_163))
(assert (= var1191802 (bvsmod temp11042_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11042_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11042_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11042_165 #x0000000000000001))
(assert (= var1191803 temp11042_165))
(assert (= temp11042_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11042_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11042_167 #x0000000000000001))
(assert (= var1191823 temp11042_167))
(assert (= temp11042_168 #x0000000000000001))
(assert (= var1180714 temp11042_168))
(assert (= temp11042_169 #x0000000000000000))
(assert (= temp11042_170 temp11042_169))
(assert (= temp11042_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11042_170)))
(assert (= temp11042_172 #x0000000000000001))
(assert (= temp11042_173 temp11042_172))
(assert (= temp11042_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11042_173)))
(assert (= temp11042_175 #x0000000000000002))
(assert (= temp11042_176 temp11042_175))
(assert (= temp11042_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11042_176)))
(assert (= temp11042_178 #x0000000000000003))
(assert (= temp11042_179 temp11042_178))
(assert (= temp11042_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11042_179)))
(assert (= temp11042_181 #x0000000000000004))
(assert (= temp11042_182 temp11042_181))
(assert (= temp11042_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11042_182)))
(assert (= temp11042_184 #x0000000000000005))
(assert (= temp11042_185 temp11042_184))
(assert (= temp11042_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11042_185)))
(assert (= temp11042_187 #x0000000000000000))
(assert (= temp11042_188
   (ite (bvslt var1180714 temp11042_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11042_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11042_188)))
(assert (= var1191831 temp11042_189))
(assert (bvslt (ite (bvslt var1180714 temp11042_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11042_190 #x0000000000000001))
(assert (= var1180714 temp11042_190))
(assert (= temp11042_192 var1180714))
(assert (= temp11042_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11042_192)))
(assert (= temp11042_191 temp11042_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11042_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11042_194 #x0000000000000001))
(assert (= var1191836 temp11042_194))
(assert (= temp11042_195 #x0000000000000000))
(assert (= var1179826 temp11042_195))
(assert (= temp11042_197 var1179826))
(assert (= temp11042_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11042_197)))
(assert (= temp11042_196 temp11042_198))
(assert (= temp11042_199 #x0000000000000002))
(assert (= var1586025 temp11042_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11042_200 #x0000000000000001))
(assert (= var1191993 temp11042_200))
(assert (= temp11042_201 #x0000000000000001))
(assert (= var2700303 temp11042_201))
(assert (= temp11042_202 #x0000000000000001))
(assert (= var2962447 temp11042_202))
(assert (= temp11042_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11042_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11042_204 #x0000000000000001))
(assert (= var211058 temp11042_204))
(assert (= temp11042_205 #x0000000000000001))
(assert (= var211188 temp11042_205))
(assert (= var3879401 var211188))
(assert (= temp11042_206 #x0000000000000000))
(assert (= var3866802 temp11042_206))
(assert (= temp11042_207 #x0000000000000000))
(assert (= temp11042_208
   (ite (bvslt var3866802 temp11042_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11042_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11042_208)))
(assert (= var3879420 temp11042_209))
(assert (bvslt (ite (bvslt var3866802 temp11042_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11042_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11042_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11042_211 #x0000000000000000))
(assert (= var3879421 temp11042_211))
(assert (= temp11042_212 #x0000000000000001))
(assert (= var3867690 temp11042_212))
(assert (= temp11042_213 #x0000000000000000))
(assert (= temp11042_214
   (ite (bvslt var3867690 temp11042_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11042_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11042_214)))
(assert (= var3879423 temp11042_215))
(assert (bvslt (ite (bvslt var3867690 temp11042_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11042_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11042_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11042_217 #x0000000000000001))
(assert (= var3879424 temp11042_217))
(assert (= temp11042_218 #x0000000000000000))
(assert (= var4133117 temp11042_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11042_219 #x0000000000000002))
(assert (= var4339331 temp11042_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11042_220 #x0000000000000000))
(assert (= var4404892 temp11042_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4600208 var211201))
(assert (= var4862352 var211201))
(assert (= temp11042_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp11042_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11042_222 #x0000000000000000))
(assert (= var212414 temp11042_222))
(assert (= temp11042_223 #x0000000000000002))
(assert (= var5191299 temp11042_223))
(assert (= var5256844 var5191299))
(assert (= temp11042_224 #x0000000000000001))
(assert (= var211058 temp11042_224))
(model-add temp11042_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11042_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11042_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11042_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




