(declare-fun temp321_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp321_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp321_3 () (_ BitVec 64))
(declare-fun temp321_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp321_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp321_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp321_7 () (_ BitVec 64))
(declare-fun temp321_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp321_9 () (_ BitVec 64))
(declare-fun temp321_10 () (_ BitVec 64))
(declare-fun temp321_11 () (_ BitVec 64))
(declare-fun temp321_12 () (_ BitVec 64))
(declare-fun temp321_13 () (_ BitVec 64))
(declare-fun temp321_14 () (_ BitVec 64))
(declare-fun temp321_15 () (_ BitVec 64))
(declare-fun temp321_16 () (_ BitVec 64))
(declare-fun temp321_17 () (_ BitVec 64))
(declare-fun temp321_18 () (_ BitVec 64))
(declare-fun temp321_19 () (_ BitVec 64))
(declare-fun temp321_20 () (_ BitVec 64))
(declare-fun temp321_21 () (_ BitVec 64))
(declare-fun temp321_22 () (_ BitVec 64))
(declare-fun temp321_23 () (_ BitVec 64))
(declare-fun temp321_24 () (_ BitVec 64))
(declare-fun temp321_25 () (_ BitVec 64))
(declare-fun temp321_26 () (_ BitVec 64))
(declare-fun temp321_27 () (_ BitVec 64))
(declare-fun temp321_28 () (_ BitVec 64))
(declare-fun temp321_29 () (_ BitVec 64))
(declare-fun temp321_30 () (_ BitVec 64))
(declare-fun temp321_31 () (_ BitVec 64))
(declare-fun temp321_32 () (_ BitVec 64))
(declare-fun temp321_33 () (_ BitVec 64))
(declare-fun temp321_34 () (_ BitVec 64))
(declare-fun temp321_35 () (_ BitVec 64))
(declare-fun temp321_36 () (_ BitVec 64))
(declare-fun temp321_37 () (_ BitVec 64))
(declare-fun temp321_38 () (_ BitVec 64))
(declare-fun temp321_39 () (_ BitVec 64))
(declare-fun temp321_40 () (_ BitVec 64))
(declare-fun temp321_41 () (_ BitVec 64))
(declare-fun temp321_42 () (_ BitVec 64))
(declare-fun temp321_43 () (_ BitVec 64))
(declare-fun temp321_44 () (_ BitVec 64))
(declare-fun temp321_45 () (_ BitVec 64))
(declare-fun temp321_46 () (_ BitVec 64))
(declare-fun temp321_47 () (_ BitVec 64))
(declare-fun temp321_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp321_49 () (_ BitVec 64))
(declare-fun temp321_50 () (_ BitVec 64))
(declare-fun temp321_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp321_52 () (_ BitVec 64))
(declare-fun temp321_53 () (_ BitVec 64))
(declare-fun temp321_54 () (_ BitVec 64))
(declare-fun temp321_55 () (_ BitVec 64))
(declare-fun temp321_56 () (_ BitVec 64))
(declare-fun temp321_57 () (_ BitVec 64))
(declare-fun temp321_58 () (_ BitVec 64))
(declare-fun temp321_59 () (_ BitVec 64))
(declare-fun temp321_60 () (_ BitVec 64))
(declare-fun temp321_61 () (_ BitVec 64))
(declare-fun temp321_62 () (_ BitVec 64))
(declare-fun temp321_63 () (_ BitVec 64))
(declare-fun temp321_64 () (_ BitVec 64))
(declare-fun temp321_65 () (_ BitVec 64))
(declare-fun temp321_66 () (_ BitVec 64))
(declare-fun temp321_67 () (_ BitVec 64))
(declare-fun temp321_68 () (_ BitVec 64))
(declare-fun temp321_69 () (_ BitVec 64))
(declare-fun temp321_70 () (_ BitVec 64))
(declare-fun temp321_71 () (_ BitVec 64))
(declare-fun temp321_72 () (_ BitVec 64))
(declare-fun temp321_73 () (_ BitVec 64))
(declare-fun temp321_74 () (_ BitVec 64))
(declare-fun temp321_75 () (_ BitVec 64))
(declare-fun temp321_76 () (_ BitVec 64))
(declare-fun temp321_77 () (_ BitVec 64))
(declare-fun temp321_78 () (_ BitVec 64))
(declare-fun temp321_79 () (_ BitVec 64))
(declare-fun temp321_80 () (_ BitVec 64))
(declare-fun temp321_81 () (_ BitVec 64))
(declare-fun temp321_82 () (_ BitVec 64))
(declare-fun temp321_83 () (_ BitVec 64))
(declare-fun temp321_84 () (_ BitVec 64))
(declare-fun temp321_85 () (_ BitVec 64))
(declare-fun temp321_86 () (_ BitVec 64))
(declare-fun temp321_87 () (_ BitVec 64))
(declare-fun temp321_88 () (_ BitVec 64))
(declare-fun temp321_89 () (_ BitVec 64))
(declare-fun temp321_90 () (_ BitVec 64))
(declare-fun temp321_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp321_92 () (_ BitVec 64))
(declare-fun temp321_93 () (_ BitVec 64))
(declare-fun temp321_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp321_95 () (_ BitVec 64))
(declare-fun temp321_96 () (_ BitVec 64))
(declare-fun temp321_97 () (_ BitVec 64))
(declare-fun temp321_98 () (_ BitVec 64))
(declare-fun temp321_99 () (_ BitVec 64))
(declare-fun temp321_100 () (_ BitVec 64))
(declare-fun temp321_101 () (_ BitVec 64))
(declare-fun temp321_102 () (_ BitVec 64))
(declare-fun temp321_103 () (_ BitVec 64))
(declare-fun temp321_104 () (_ BitVec 64))
(declare-fun temp321_105 () (_ BitVec 64))
(declare-fun temp321_106 () (_ BitVec 64))
(declare-fun temp321_107 () (_ BitVec 64))
(declare-fun temp321_108 () (_ BitVec 64))
(declare-fun temp321_109 () (_ BitVec 64))
(declare-fun temp321_110 () (_ BitVec 64))
(declare-fun temp321_111 () (_ BitVec 64))
(declare-fun temp321_112 () (_ BitVec 64))
(declare-fun temp321_113 () (_ BitVec 64))
(declare-fun temp321_114 () (_ BitVec 64))
(declare-fun temp321_115 () (_ BitVec 64))
(declare-fun temp321_116 () (_ BitVec 64))
(declare-fun temp321_117 () (_ BitVec 64))
(declare-fun temp321_118 () (_ BitVec 64))
(declare-fun temp321_119 () (_ BitVec 64))
(declare-fun temp321_120 () (_ BitVec 64))
(declare-fun temp321_121 () (_ BitVec 64))
(declare-fun temp321_122 () (_ BitVec 64))
(declare-fun temp321_123 () (_ BitVec 64))
(declare-fun temp321_124 () (_ BitVec 64))
(declare-fun temp321_125 () (_ BitVec 64))
(declare-fun temp321_126 () (_ BitVec 64))
(declare-fun temp321_127 () (_ BitVec 64))
(declare-fun temp321_128 () (_ BitVec 64))
(declare-fun temp321_129 () (_ BitVec 64))
(declare-fun temp321_130 () (_ BitVec 64))
(declare-fun temp321_131 () (_ BitVec 64))
(declare-fun temp321_132 () (_ BitVec 64))
(declare-fun temp321_133 () (_ BitVec 64))
(declare-fun temp321_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp321_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp321_136 () (_ BitVec 64))
(declare-fun temp321_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp321_138 () (_ BitVec 64))
(declare-fun temp321_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp321_140 () (_ BitVec 64))
(declare-fun temp321_141 () (_ BitVec 64))
(declare-fun temp321_142 () (_ BitVec 64))
(declare-fun temp321_143 () (_ BitVec 64))
(declare-fun temp321_144 () (_ BitVec 64))
(declare-fun temp321_145 () (_ BitVec 64))
(declare-fun temp321_146 () (_ BitVec 64))
(declare-fun temp321_147 () (_ BitVec 64))
(declare-fun temp321_148 () (_ BitVec 64))
(declare-fun temp321_149 () (_ BitVec 64))
(declare-fun temp321_150 () (_ BitVec 64))
(declare-fun temp321_151 () (_ BitVec 64))
(declare-fun temp321_152 () (_ BitVec 64))
(declare-fun temp321_153 () (_ BitVec 64))
(declare-fun temp321_154 () (_ BitVec 64))
(declare-fun temp321_155 () (_ BitVec 64))
(declare-fun temp321_157 () (_ BitVec 64))
(declare-fun temp321_158 () (_ BitVec 64))
(declare-fun temp321_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp321_159 () (_ BitVec 64))
(declare-fun temp321_160 () (_ BitVec 64))
(declare-fun temp321_162 () (_ BitVec 64))
(declare-fun temp321_163 () (_ BitVec 64))
(declare-fun temp321_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp321_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp321_165 () (_ BitVec 64))
(declare-fun temp321_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp321_167 () (_ BitVec 64))
(declare-fun temp321_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp321_169 () (_ BitVec 64))
(declare-fun temp321_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp321_171 () (_ BitVec 64))
(declare-fun temp321_172 () (_ BitVec 64))
(declare-fun temp321_173 () (_ BitVec 64))
(declare-fun temp321_174 () (_ BitVec 64))
(declare-fun temp321_175 () (_ BitVec 64))
(declare-fun temp321_176 () (_ BitVec 64))
(declare-fun temp321_177 () (_ BitVec 64))
(declare-fun temp321_178 () (_ BitVec 64))
(declare-fun temp321_179 () (_ BitVec 64))
(declare-fun temp321_180 () (_ BitVec 64))
(declare-fun temp321_181 () (_ BitVec 64))
(declare-fun temp321_182 () (_ BitVec 64))
(declare-fun temp321_183 () (_ BitVec 64))
(declare-fun temp321_184 () (_ BitVec 64))
(declare-fun temp321_185 () (_ BitVec 64))
(declare-fun temp321_186 () (_ BitVec 64))
(declare-fun temp321_187 () (_ BitVec 64))
(declare-fun temp321_188 () (_ BitVec 64))
(declare-fun temp321_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp321_190 () (_ BitVec 64))
(declare-fun temp321_192 () (_ BitVec 64))
(declare-fun temp321_193 () (_ BitVec 64))
(declare-fun temp321_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp321_194 () (_ BitVec 64))
(declare-fun temp321_195 () (_ BitVec 64))
(declare-fun temp321_197 () (_ BitVec 64))
(declare-fun temp321_198 () (_ BitVec 64))
(declare-fun temp321_196 () (_ BitVec 64))
(declare-fun temp321_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp321_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp321_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp321_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp321_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp321_204 () (_ BitVec 64))
(declare-fun temp321_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp321_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp321_207 () (_ BitVec 64))
(declare-fun temp321_208 () (_ BitVec 64))
(declare-fun temp321_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp321_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp321_211 () (_ BitVec 64))
(declare-fun temp321_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp321_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp321_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun temp321_215 () (_ BitVec 64))
(assert (= temp321_1 #x0000000000000001))
(assert (= var77203 temp321_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp321_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp321_2)))
(assert (= temp321_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp321_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp321_4 #x0000000000000000))
(assert (= var210941 temp321_4))
(assert (= temp321_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp321_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp321_6 #x0000000000000000))
(assert (= var210986 temp321_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp321_7 #x0000000000000000))
(assert (= temp321_8 temp321_7))
(assert (= temp321_9 (select ARGNAME_padding_NAMEEND_VAL temp321_8)))
(assert (= temp321_10 #x0000000000000001))
(assert (= temp321_11 temp321_10))
(assert (= temp321_12 (select ARGNAME_padding_NAMEEND_VAL temp321_11)))
(assert (= temp321_13 #x0000000000000002))
(assert (= temp321_14 temp321_13))
(assert (= temp321_15 (select ARGNAME_padding_NAMEEND_VAL temp321_14)))
(assert (= temp321_16 #x0000000000000003))
(assert (= temp321_17 temp321_16))
(assert (= temp321_18 (select ARGNAME_padding_NAMEEND_VAL temp321_17)))
(assert (= temp321_19 #x0000000000000004))
(assert (= temp321_20 temp321_19))
(assert (= temp321_21 (select ARGNAME_padding_NAMEEND_VAL temp321_20)))
(assert (= temp321_22 #x0000000000000005))
(assert (= temp321_23 temp321_22))
(assert (= temp321_24 (select ARGNAME_padding_NAMEEND_VAL temp321_23)))
(assert (= temp321_25 #x0000000000000000))
(assert (= temp321_26 #x0000000000000000))
(assert (= temp321_27 temp321_26))
(assert (= temp321_28 (select ARGNAME_padding_NAMEEND_VAL temp321_27)))
(assert (= temp321_29 #x0000000000000000))
(assert (= temp321_30 #x0000000000000001))
(assert (= temp321_31 temp321_30))
(assert (= temp321_32 (select ARGNAME_padding_NAMEEND_VAL temp321_31)))
(assert (= temp321_33 #x0000000000000000))
(assert (= temp321_34 #x0000000000000002))
(assert (= temp321_35 temp321_34))
(assert (= temp321_36 (select ARGNAME_padding_NAMEEND_VAL temp321_35)))
(assert (= temp321_37 #x0000000000000000))
(assert (= temp321_38 #x0000000000000003))
(assert (= temp321_39 temp321_38))
(assert (= temp321_40 (select ARGNAME_padding_NAMEEND_VAL temp321_39)))
(assert (= temp321_41 #x0000000000000000))
(assert (= temp321_42 #x0000000000000004))
(assert (= temp321_43 temp321_42))
(assert (= temp321_44 (select ARGNAME_padding_NAMEEND_VAL temp321_43)))
(assert (= temp321_45 #x0000000000000000))
(assert (= temp321_46 #x0000000000000005))
(assert (= temp321_47 temp321_46))
(assert (= temp321_48 (select ARGNAME_padding_NAMEEND_VAL temp321_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp321_28 temp321_25)
             (bvslt temp321_32 temp321_29)
             (bvslt temp321_36 temp321_33)
             (bvslt temp321_40 temp321_37)
             (bvslt temp321_44 temp321_41)
             (bvslt temp321_48 temp321_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp321_49 #x0000000000000000))
(assert (= var1191714 temp321_49))
(assert (= temp321_50 #x0000000000000000))
(assert (= temp321_51 temp321_50))
(assert (= temp321_52 (select ARGNAME_output_padding_NAMEEND_VAL temp321_51)))
(assert (= temp321_53 #x0000000000000001))
(assert (= temp321_54 temp321_53))
(assert (= temp321_55 (select ARGNAME_output_padding_NAMEEND_VAL temp321_54)))
(assert (= temp321_56 #x0000000000000002))
(assert (= temp321_57 temp321_56))
(assert (= temp321_58 (select ARGNAME_output_padding_NAMEEND_VAL temp321_57)))
(assert (= temp321_59 #x0000000000000003))
(assert (= temp321_60 temp321_59))
(assert (= temp321_61 (select ARGNAME_output_padding_NAMEEND_VAL temp321_60)))
(assert (= temp321_62 #x0000000000000004))
(assert (= temp321_63 temp321_62))
(assert (= temp321_64 (select ARGNAME_output_padding_NAMEEND_VAL temp321_63)))
(assert (= temp321_65 #x0000000000000005))
(assert (= temp321_66 temp321_65))
(assert (= temp321_67 (select ARGNAME_output_padding_NAMEEND_VAL temp321_66)))
(assert (= temp321_68 #x0000000000000000))
(assert (= temp321_69 #x0000000000000000))
(assert (= temp321_70 temp321_69))
(assert (= temp321_71 (select ARGNAME_output_padding_NAMEEND_VAL temp321_70)))
(assert (= temp321_72 #x0000000000000000))
(assert (= temp321_73 #x0000000000000001))
(assert (= temp321_74 temp321_73))
(assert (= temp321_75 (select ARGNAME_output_padding_NAMEEND_VAL temp321_74)))
(assert (= temp321_76 #x0000000000000000))
(assert (= temp321_77 #x0000000000000002))
(assert (= temp321_78 temp321_77))
(assert (= temp321_79 (select ARGNAME_output_padding_NAMEEND_VAL temp321_78)))
(assert (= temp321_80 #x0000000000000000))
(assert (= temp321_81 #x0000000000000003))
(assert (= temp321_82 temp321_81))
(assert (= temp321_83 (select ARGNAME_output_padding_NAMEEND_VAL temp321_82)))
(assert (= temp321_84 #x0000000000000000))
(assert (= temp321_85 #x0000000000000004))
(assert (= temp321_86 temp321_85))
(assert (= temp321_87 (select ARGNAME_output_padding_NAMEEND_VAL temp321_86)))
(assert (= temp321_88 #x0000000000000000))
(assert (= temp321_89 #x0000000000000005))
(assert (= temp321_90 temp321_89))
(assert (= temp321_91 (select ARGNAME_output_padding_NAMEEND_VAL temp321_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp321_71 temp321_68)
             (bvslt temp321_75 temp321_72)
             (bvslt temp321_79 temp321_76)
             (bvslt temp321_83 temp321_80)
             (bvslt temp321_87 temp321_84)
             (bvslt temp321_91 temp321_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp321_92 #x0000000000000000))
(assert (= var1191725 temp321_92))
(assert (= temp321_93 #x0000000000000000))
(assert (= temp321_94 temp321_93))
(assert (= temp321_95 (select ARGNAME_stride_NAMEEND_VAL temp321_94)))
(assert (= temp321_96 #x0000000000000001))
(assert (= temp321_97 temp321_96))
(assert (= temp321_98 (select ARGNAME_stride_NAMEEND_VAL temp321_97)))
(assert (= temp321_99 #x0000000000000002))
(assert (= temp321_100 temp321_99))
(assert (= temp321_101 (select ARGNAME_stride_NAMEEND_VAL temp321_100)))
(assert (= temp321_102 #x0000000000000003))
(assert (= temp321_103 temp321_102))
(assert (= temp321_104 (select ARGNAME_stride_NAMEEND_VAL temp321_103)))
(assert (= temp321_105 #x0000000000000004))
(assert (= temp321_106 temp321_105))
(assert (= temp321_107 (select ARGNAME_stride_NAMEEND_VAL temp321_106)))
(assert (= temp321_108 #x0000000000000005))
(assert (= temp321_109 temp321_108))
(assert (= temp321_110 (select ARGNAME_stride_NAMEEND_VAL temp321_109)))
(assert (= temp321_111 #x0000000000000000))
(assert (= temp321_112 #x0000000000000000))
(assert (= temp321_113 temp321_112))
(assert (= temp321_114 (select ARGNAME_stride_NAMEEND_VAL temp321_113)))
(assert (= temp321_115 #x0000000000000000))
(assert (= temp321_116 #x0000000000000001))
(assert (= temp321_117 temp321_116))
(assert (= temp321_118 (select ARGNAME_stride_NAMEEND_VAL temp321_117)))
(assert (= temp321_119 #x0000000000000000))
(assert (= temp321_120 #x0000000000000002))
(assert (= temp321_121 temp321_120))
(assert (= temp321_122 (select ARGNAME_stride_NAMEEND_VAL temp321_121)))
(assert (= temp321_123 #x0000000000000000))
(assert (= temp321_124 #x0000000000000003))
(assert (= temp321_125 temp321_124))
(assert (= temp321_126 (select ARGNAME_stride_NAMEEND_VAL temp321_125)))
(assert (= temp321_127 #x0000000000000000))
(assert (= temp321_128 #x0000000000000004))
(assert (= temp321_129 temp321_128))
(assert (= temp321_130 (select ARGNAME_stride_NAMEEND_VAL temp321_129)))
(assert (= temp321_131 #x0000000000000000))
(assert (= temp321_132 #x0000000000000005))
(assert (= temp321_133 temp321_132))
(assert (= temp321_134 (select ARGNAME_stride_NAMEEND_VAL temp321_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp321_114 temp321_111)
             (bvsle temp321_118 temp321_115)
             (bvsle temp321_122 temp321_119)
             (bvsle temp321_126 temp321_123)
             (bvsle temp321_130 temp321_127)
             (bvsle temp321_134 temp321_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp321_135 #x0000000000000000))
(assert (= var1191735 temp321_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp321_136 #x0000000000000001))
(assert (= var1191747 temp321_136))
(assert (= temp321_137 #x0000000000000000))
(assert (= var1179826 temp321_137))
(assert (= temp321_138 #x0000000000000000))
(assert (= temp321_139 temp321_138))
(assert (= temp321_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp321_139)))
(assert (= temp321_141 #x0000000000000001))
(assert (= temp321_142 temp321_141))
(assert (= temp321_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp321_142)))
(assert (= temp321_144 #x0000000000000002))
(assert (= temp321_145 temp321_144))
(assert (= temp321_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp321_145)))
(assert (= temp321_147 #x0000000000000003))
(assert (= temp321_148 temp321_147))
(assert (= temp321_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp321_148)))
(assert (= temp321_150 #x0000000000000004))
(assert (= temp321_151 temp321_150))
(assert (= temp321_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp321_151)))
(assert (= temp321_153 #x0000000000000005))
(assert (= temp321_154 temp321_153))
(assert (= temp321_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp321_154)))
(assert (= temp321_157 var1179826))
(assert (= temp321_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp321_157)))
(assert (= temp321_156 temp321_158))
(assert (= var1191780
   (ite (bvslt temp321_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp321_159 #x0000000000000000))
(assert (= var1191780 temp321_159))
(assert (= temp321_160 #x0000000000000000))
(assert (= var1179826 temp321_160))
(assert (= temp321_162 var1179826))
(assert (= temp321_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp321_162)))
(assert (= temp321_161 temp321_163))
(assert (= var1191802 (bvsmod temp321_161 ARGNAME_groups_NAMEEND)))
(assert (= temp321_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp321_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp321_165 #x0000000000000001))
(assert (= var1191803 temp321_165))
(assert (= temp321_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp321_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp321_167 #x0000000000000001))
(assert (= var1191823 temp321_167))
(assert (= temp321_168 #x0000000000000001))
(assert (= var1180714 temp321_168))
(assert (= temp321_169 #x0000000000000000))
(assert (= temp321_170 temp321_169))
(assert (= temp321_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp321_170)))
(assert (= temp321_172 #x0000000000000001))
(assert (= temp321_173 temp321_172))
(assert (= temp321_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp321_173)))
(assert (= temp321_175 #x0000000000000002))
(assert (= temp321_176 temp321_175))
(assert (= temp321_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp321_176)))
(assert (= temp321_178 #x0000000000000003))
(assert (= temp321_179 temp321_178))
(assert (= temp321_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp321_179)))
(assert (= temp321_181 #x0000000000000004))
(assert (= temp321_182 temp321_181))
(assert (= temp321_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp321_182)))
(assert (= temp321_184 #x0000000000000005))
(assert (= temp321_185 temp321_184))
(assert (= temp321_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp321_185)))
(assert (= temp321_187 #x0000000000000000))
(assert (= temp321_188
   (ite (bvslt var1180714 temp321_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp321_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp321_188)))
(assert (= var1191831 temp321_189))
(assert (bvslt (ite (bvslt var1180714 temp321_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp321_190 #x0000000000000001))
(assert (= var1180714 temp321_190))
(assert (= temp321_192 var1180714))
(assert (= temp321_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp321_192)))
(assert (= temp321_191 temp321_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp321_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp321_194 #x0000000000000001))
(assert (= var1191836 temp321_194))
(assert (= temp321_195 #x0000000000000000))
(assert (= var1179826 temp321_195))
(assert (= temp321_197 var1179826))
(assert (= temp321_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp321_197)))
(assert (= temp321_196 temp321_198))
(assert (= temp321_199 #x0000000000000002))
(assert (= var1586025 temp321_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp321_200 #x0000000000000001))
(assert (= var1191993 temp321_200))
(assert (= temp321_201 #x0000000000000001))
(assert (= var2700303 temp321_201))
(assert (= temp321_202 #x0000000000000001))
(assert (= var2962447 temp321_202))
(assert (= temp321_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp321_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp321_204 #x0000000000000001))
(assert (= var211058 temp321_204))
(assert (= temp321_205 #x0000000000000001))
(assert (= var211188 temp321_205))
(assert (= var3879401 var211188))
(assert (= temp321_206 #x0000000000000000))
(assert (= var3866802 temp321_206))
(assert (= temp321_207 #x0000000000000000))
(assert (= temp321_208
   (ite (bvslt var3866802 temp321_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp321_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp321_208)))
(assert (= var3879420 temp321_209))
(assert (bvslt (ite (bvslt var3866802 temp321_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp321_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp321_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp321_211 #x0000000000000001))
(assert (= var3879421 temp321_211))
(assert (= temp321_212 #x0000000000000000))
(assert (= var4079423 temp321_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp321_213 #x0000000000000002))
(assert (= var4208259 temp321_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp321_214 #x0000000000000000))
(assert (= var4273820 temp321_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4862352 var211201))
(assert (= var5124496 var211201))
(assert (= temp321_215 #x0000000000000001))
(assert (= var211058 temp321_215))
(model-add temp321_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp321_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp321_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp321_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




