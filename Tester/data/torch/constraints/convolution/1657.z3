(declare-fun temp11004_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11004_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11004_3 () (_ BitVec 64))
(declare-fun temp11004_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11004_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11004_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11004_7 () (_ BitVec 64))
(declare-fun temp11004_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11004_9 () (_ BitVec 64))
(declare-fun temp11004_10 () (_ BitVec 64))
(declare-fun temp11004_11 () (_ BitVec 64))
(declare-fun temp11004_12 () (_ BitVec 64))
(declare-fun temp11004_13 () (_ BitVec 64))
(declare-fun temp11004_14 () (_ BitVec 64))
(declare-fun temp11004_15 () (_ BitVec 64))
(declare-fun temp11004_16 () (_ BitVec 64))
(declare-fun temp11004_17 () (_ BitVec 64))
(declare-fun temp11004_18 () (_ BitVec 64))
(declare-fun temp11004_19 () (_ BitVec 64))
(declare-fun temp11004_20 () (_ BitVec 64))
(declare-fun temp11004_21 () (_ BitVec 64))
(declare-fun temp11004_22 () (_ BitVec 64))
(declare-fun temp11004_23 () (_ BitVec 64))
(declare-fun temp11004_24 () (_ BitVec 64))
(declare-fun temp11004_25 () (_ BitVec 64))
(declare-fun temp11004_26 () (_ BitVec 64))
(declare-fun temp11004_27 () (_ BitVec 64))
(declare-fun temp11004_28 () (_ BitVec 64))
(declare-fun temp11004_29 () (_ BitVec 64))
(declare-fun temp11004_30 () (_ BitVec 64))
(declare-fun temp11004_31 () (_ BitVec 64))
(declare-fun temp11004_32 () (_ BitVec 64))
(declare-fun temp11004_33 () (_ BitVec 64))
(declare-fun temp11004_34 () (_ BitVec 64))
(declare-fun temp11004_35 () (_ BitVec 64))
(declare-fun temp11004_36 () (_ BitVec 64))
(declare-fun temp11004_37 () (_ BitVec 64))
(declare-fun temp11004_38 () (_ BitVec 64))
(declare-fun temp11004_39 () (_ BitVec 64))
(declare-fun temp11004_40 () (_ BitVec 64))
(declare-fun temp11004_41 () (_ BitVec 64))
(declare-fun temp11004_42 () (_ BitVec 64))
(declare-fun temp11004_43 () (_ BitVec 64))
(declare-fun temp11004_44 () (_ BitVec 64))
(declare-fun temp11004_45 () (_ BitVec 64))
(declare-fun temp11004_46 () (_ BitVec 64))
(declare-fun temp11004_47 () (_ BitVec 64))
(declare-fun temp11004_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11004_49 () (_ BitVec 64))
(declare-fun temp11004_50 () (_ BitVec 64))
(declare-fun temp11004_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11004_52 () (_ BitVec 64))
(declare-fun temp11004_53 () (_ BitVec 64))
(declare-fun temp11004_54 () (_ BitVec 64))
(declare-fun temp11004_55 () (_ BitVec 64))
(declare-fun temp11004_56 () (_ BitVec 64))
(declare-fun temp11004_57 () (_ BitVec 64))
(declare-fun temp11004_58 () (_ BitVec 64))
(declare-fun temp11004_59 () (_ BitVec 64))
(declare-fun temp11004_60 () (_ BitVec 64))
(declare-fun temp11004_61 () (_ BitVec 64))
(declare-fun temp11004_62 () (_ BitVec 64))
(declare-fun temp11004_63 () (_ BitVec 64))
(declare-fun temp11004_64 () (_ BitVec 64))
(declare-fun temp11004_65 () (_ BitVec 64))
(declare-fun temp11004_66 () (_ BitVec 64))
(declare-fun temp11004_67 () (_ BitVec 64))
(declare-fun temp11004_68 () (_ BitVec 64))
(declare-fun temp11004_69 () (_ BitVec 64))
(declare-fun temp11004_70 () (_ BitVec 64))
(declare-fun temp11004_71 () (_ BitVec 64))
(declare-fun temp11004_72 () (_ BitVec 64))
(declare-fun temp11004_73 () (_ BitVec 64))
(declare-fun temp11004_74 () (_ BitVec 64))
(declare-fun temp11004_75 () (_ BitVec 64))
(declare-fun temp11004_76 () (_ BitVec 64))
(declare-fun temp11004_77 () (_ BitVec 64))
(declare-fun temp11004_78 () (_ BitVec 64))
(declare-fun temp11004_79 () (_ BitVec 64))
(declare-fun temp11004_80 () (_ BitVec 64))
(declare-fun temp11004_81 () (_ BitVec 64))
(declare-fun temp11004_82 () (_ BitVec 64))
(declare-fun temp11004_83 () (_ BitVec 64))
(declare-fun temp11004_84 () (_ BitVec 64))
(declare-fun temp11004_85 () (_ BitVec 64))
(declare-fun temp11004_86 () (_ BitVec 64))
(declare-fun temp11004_87 () (_ BitVec 64))
(declare-fun temp11004_88 () (_ BitVec 64))
(declare-fun temp11004_89 () (_ BitVec 64))
(declare-fun temp11004_90 () (_ BitVec 64))
(declare-fun temp11004_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11004_92 () (_ BitVec 64))
(declare-fun temp11004_93 () (_ BitVec 64))
(declare-fun temp11004_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11004_95 () (_ BitVec 64))
(declare-fun temp11004_96 () (_ BitVec 64))
(declare-fun temp11004_97 () (_ BitVec 64))
(declare-fun temp11004_98 () (_ BitVec 64))
(declare-fun temp11004_99 () (_ BitVec 64))
(declare-fun temp11004_100 () (_ BitVec 64))
(declare-fun temp11004_101 () (_ BitVec 64))
(declare-fun temp11004_102 () (_ BitVec 64))
(declare-fun temp11004_103 () (_ BitVec 64))
(declare-fun temp11004_104 () (_ BitVec 64))
(declare-fun temp11004_105 () (_ BitVec 64))
(declare-fun temp11004_106 () (_ BitVec 64))
(declare-fun temp11004_107 () (_ BitVec 64))
(declare-fun temp11004_108 () (_ BitVec 64))
(declare-fun temp11004_109 () (_ BitVec 64))
(declare-fun temp11004_110 () (_ BitVec 64))
(declare-fun temp11004_111 () (_ BitVec 64))
(declare-fun temp11004_112 () (_ BitVec 64))
(declare-fun temp11004_113 () (_ BitVec 64))
(declare-fun temp11004_114 () (_ BitVec 64))
(declare-fun temp11004_115 () (_ BitVec 64))
(declare-fun temp11004_116 () (_ BitVec 64))
(declare-fun temp11004_117 () (_ BitVec 64))
(declare-fun temp11004_118 () (_ BitVec 64))
(declare-fun temp11004_119 () (_ BitVec 64))
(declare-fun temp11004_120 () (_ BitVec 64))
(declare-fun temp11004_121 () (_ BitVec 64))
(declare-fun temp11004_122 () (_ BitVec 64))
(declare-fun temp11004_123 () (_ BitVec 64))
(declare-fun temp11004_124 () (_ BitVec 64))
(declare-fun temp11004_125 () (_ BitVec 64))
(declare-fun temp11004_126 () (_ BitVec 64))
(declare-fun temp11004_127 () (_ BitVec 64))
(declare-fun temp11004_128 () (_ BitVec 64))
(declare-fun temp11004_129 () (_ BitVec 64))
(declare-fun temp11004_130 () (_ BitVec 64))
(declare-fun temp11004_131 () (_ BitVec 64))
(declare-fun temp11004_132 () (_ BitVec 64))
(declare-fun temp11004_133 () (_ BitVec 64))
(declare-fun temp11004_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11004_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11004_136 () (_ BitVec 64))
(declare-fun temp11004_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11004_138 () (_ BitVec 64))
(declare-fun temp11004_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11004_140 () (_ BitVec 64))
(declare-fun temp11004_141 () (_ BitVec 64))
(declare-fun temp11004_142 () (_ BitVec 64))
(declare-fun temp11004_143 () (_ BitVec 64))
(declare-fun temp11004_144 () (_ BitVec 64))
(declare-fun temp11004_145 () (_ BitVec 64))
(declare-fun temp11004_146 () (_ BitVec 64))
(declare-fun temp11004_147 () (_ BitVec 64))
(declare-fun temp11004_148 () (_ BitVec 64))
(declare-fun temp11004_149 () (_ BitVec 64))
(declare-fun temp11004_150 () (_ BitVec 64))
(declare-fun temp11004_151 () (_ BitVec 64))
(declare-fun temp11004_152 () (_ BitVec 64))
(declare-fun temp11004_153 () (_ BitVec 64))
(declare-fun temp11004_154 () (_ BitVec 64))
(declare-fun temp11004_155 () (_ BitVec 64))
(declare-fun temp11004_157 () (_ BitVec 64))
(declare-fun temp11004_158 () (_ BitVec 64))
(declare-fun temp11004_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11004_159 () (_ BitVec 64))
(declare-fun temp11004_160 () (_ BitVec 64))
(declare-fun temp11004_162 () (_ BitVec 64))
(declare-fun temp11004_163 () (_ BitVec 64))
(declare-fun temp11004_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11004_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11004_165 () (_ BitVec 64))
(declare-fun temp11004_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11004_167 () (_ BitVec 64))
(declare-fun temp11004_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11004_169 () (_ BitVec 64))
(declare-fun temp11004_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11004_171 () (_ BitVec 64))
(declare-fun temp11004_172 () (_ BitVec 64))
(declare-fun temp11004_173 () (_ BitVec 64))
(declare-fun temp11004_174 () (_ BitVec 64))
(declare-fun temp11004_175 () (_ BitVec 64))
(declare-fun temp11004_176 () (_ BitVec 64))
(declare-fun temp11004_177 () (_ BitVec 64))
(declare-fun temp11004_178 () (_ BitVec 64))
(declare-fun temp11004_179 () (_ BitVec 64))
(declare-fun temp11004_180 () (_ BitVec 64))
(declare-fun temp11004_181 () (_ BitVec 64))
(declare-fun temp11004_182 () (_ BitVec 64))
(declare-fun temp11004_183 () (_ BitVec 64))
(declare-fun temp11004_184 () (_ BitVec 64))
(declare-fun temp11004_185 () (_ BitVec 64))
(declare-fun temp11004_186 () (_ BitVec 64))
(declare-fun temp11004_187 () (_ BitVec 64))
(declare-fun temp11004_188 () (_ BitVec 64))
(declare-fun temp11004_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11004_190 () (_ BitVec 64))
(declare-fun temp11004_192 () (_ BitVec 64))
(declare-fun temp11004_193 () (_ BitVec 64))
(declare-fun temp11004_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11004_194 () (_ BitVec 64))
(declare-fun temp11004_195 () (_ BitVec 64))
(declare-fun temp11004_197 () (_ BitVec 64))
(declare-fun temp11004_198 () (_ BitVec 64))
(declare-fun temp11004_196 () (_ BitVec 64))
(declare-fun temp11004_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11004_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11004_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11004_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11004_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11004_204 () (_ BitVec 64))
(declare-fun temp11004_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11004_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11004_207 () (_ BitVec 64))
(declare-fun temp11004_208 () (_ BitVec 64))
(declare-fun temp11004_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11004_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11004_211 () (_ BitVec 64))
(declare-fun temp11004_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11004_213 () (_ BitVec 64))
(declare-fun temp11004_214 () (_ BitVec 64))
(declare-fun temp11004_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11004_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11004_217 () (_ BitVec 64))
(declare-fun temp11004_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11004_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp11004_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun temp11004_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp11004_222 () (_ BitVec 64))
(declare-fun temp11004_223 () (_ BitVec 64))
(declare-fun var5191299 () (_ BitVec 64))
(declare-fun var5191301 () (_ BitVec 64))
(declare-fun var5256844 () (_ BitVec 64))
(declare-fun var5256845 () (_ BitVec 64))
(declare-fun temp11004_224 () (_ BitVec 64))
(declare-fun temp11004_225 () (_ BitVec 64))
(declare-fun var6107924 () (_ BitVec 64))
(declare-fun var6107891 () (_ BitVec 64))
(declare-fun var5976455 () (_ BitVec 64))
(declare-fun var5976451 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp11004_226 () (_ BitVec 64))
(assert (= temp11004_1 #x0000000000000001))
(assert (= var77203 temp11004_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11004_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11004_2)))
(assert (= temp11004_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11004_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11004_4 #x0000000000000000))
(assert (= var210941 temp11004_4))
(assert (= temp11004_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11004_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11004_6 #x0000000000000000))
(assert (= var210986 temp11004_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11004_7 #x0000000000000000))
(assert (= temp11004_8 temp11004_7))
(assert (= temp11004_9 (select ARGNAME_padding_NAMEEND_VAL temp11004_8)))
(assert (= temp11004_10 #x0000000000000001))
(assert (= temp11004_11 temp11004_10))
(assert (= temp11004_12 (select ARGNAME_padding_NAMEEND_VAL temp11004_11)))
(assert (= temp11004_13 #x0000000000000002))
(assert (= temp11004_14 temp11004_13))
(assert (= temp11004_15 (select ARGNAME_padding_NAMEEND_VAL temp11004_14)))
(assert (= temp11004_16 #x0000000000000003))
(assert (= temp11004_17 temp11004_16))
(assert (= temp11004_18 (select ARGNAME_padding_NAMEEND_VAL temp11004_17)))
(assert (= temp11004_19 #x0000000000000004))
(assert (= temp11004_20 temp11004_19))
(assert (= temp11004_21 (select ARGNAME_padding_NAMEEND_VAL temp11004_20)))
(assert (= temp11004_22 #x0000000000000005))
(assert (= temp11004_23 temp11004_22))
(assert (= temp11004_24 (select ARGNAME_padding_NAMEEND_VAL temp11004_23)))
(assert (= temp11004_25 #x0000000000000000))
(assert (= temp11004_26 #x0000000000000000))
(assert (= temp11004_27 temp11004_26))
(assert (= temp11004_28 (select ARGNAME_padding_NAMEEND_VAL temp11004_27)))
(assert (= temp11004_29 #x0000000000000000))
(assert (= temp11004_30 #x0000000000000001))
(assert (= temp11004_31 temp11004_30))
(assert (= temp11004_32 (select ARGNAME_padding_NAMEEND_VAL temp11004_31)))
(assert (= temp11004_33 #x0000000000000000))
(assert (= temp11004_34 #x0000000000000002))
(assert (= temp11004_35 temp11004_34))
(assert (= temp11004_36 (select ARGNAME_padding_NAMEEND_VAL temp11004_35)))
(assert (= temp11004_37 #x0000000000000000))
(assert (= temp11004_38 #x0000000000000003))
(assert (= temp11004_39 temp11004_38))
(assert (= temp11004_40 (select ARGNAME_padding_NAMEEND_VAL temp11004_39)))
(assert (= temp11004_41 #x0000000000000000))
(assert (= temp11004_42 #x0000000000000004))
(assert (= temp11004_43 temp11004_42))
(assert (= temp11004_44 (select ARGNAME_padding_NAMEEND_VAL temp11004_43)))
(assert (= temp11004_45 #x0000000000000000))
(assert (= temp11004_46 #x0000000000000005))
(assert (= temp11004_47 temp11004_46))
(assert (= temp11004_48 (select ARGNAME_padding_NAMEEND_VAL temp11004_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11004_28 temp11004_25)
             (bvslt temp11004_32 temp11004_29)
             (bvslt temp11004_36 temp11004_33)
             (bvslt temp11004_40 temp11004_37)
             (bvslt temp11004_44 temp11004_41)
             (bvslt temp11004_48 temp11004_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11004_49 #x0000000000000000))
(assert (= var1191714 temp11004_49))
(assert (= temp11004_50 #x0000000000000000))
(assert (= temp11004_51 temp11004_50))
(assert (= temp11004_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11004_51)))
(assert (= temp11004_53 #x0000000000000001))
(assert (= temp11004_54 temp11004_53))
(assert (= temp11004_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11004_54)))
(assert (= temp11004_56 #x0000000000000002))
(assert (= temp11004_57 temp11004_56))
(assert (= temp11004_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11004_57)))
(assert (= temp11004_59 #x0000000000000003))
(assert (= temp11004_60 temp11004_59))
(assert (= temp11004_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11004_60)))
(assert (= temp11004_62 #x0000000000000004))
(assert (= temp11004_63 temp11004_62))
(assert (= temp11004_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11004_63)))
(assert (= temp11004_65 #x0000000000000005))
(assert (= temp11004_66 temp11004_65))
(assert (= temp11004_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11004_66)))
(assert (= temp11004_68 #x0000000000000000))
(assert (= temp11004_69 #x0000000000000000))
(assert (= temp11004_70 temp11004_69))
(assert (= temp11004_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11004_70)))
(assert (= temp11004_72 #x0000000000000000))
(assert (= temp11004_73 #x0000000000000001))
(assert (= temp11004_74 temp11004_73))
(assert (= temp11004_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11004_74)))
(assert (= temp11004_76 #x0000000000000000))
(assert (= temp11004_77 #x0000000000000002))
(assert (= temp11004_78 temp11004_77))
(assert (= temp11004_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11004_78)))
(assert (= temp11004_80 #x0000000000000000))
(assert (= temp11004_81 #x0000000000000003))
(assert (= temp11004_82 temp11004_81))
(assert (= temp11004_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11004_82)))
(assert (= temp11004_84 #x0000000000000000))
(assert (= temp11004_85 #x0000000000000004))
(assert (= temp11004_86 temp11004_85))
(assert (= temp11004_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11004_86)))
(assert (= temp11004_88 #x0000000000000000))
(assert (= temp11004_89 #x0000000000000005))
(assert (= temp11004_90 temp11004_89))
(assert (= temp11004_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11004_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11004_71 temp11004_68)
             (bvslt temp11004_75 temp11004_72)
             (bvslt temp11004_79 temp11004_76)
             (bvslt temp11004_83 temp11004_80)
             (bvslt temp11004_87 temp11004_84)
             (bvslt temp11004_91 temp11004_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11004_92 #x0000000000000000))
(assert (= var1191725 temp11004_92))
(assert (= temp11004_93 #x0000000000000000))
(assert (= temp11004_94 temp11004_93))
(assert (= temp11004_95 (select ARGNAME_stride_NAMEEND_VAL temp11004_94)))
(assert (= temp11004_96 #x0000000000000001))
(assert (= temp11004_97 temp11004_96))
(assert (= temp11004_98 (select ARGNAME_stride_NAMEEND_VAL temp11004_97)))
(assert (= temp11004_99 #x0000000000000002))
(assert (= temp11004_100 temp11004_99))
(assert (= temp11004_101 (select ARGNAME_stride_NAMEEND_VAL temp11004_100)))
(assert (= temp11004_102 #x0000000000000003))
(assert (= temp11004_103 temp11004_102))
(assert (= temp11004_104 (select ARGNAME_stride_NAMEEND_VAL temp11004_103)))
(assert (= temp11004_105 #x0000000000000004))
(assert (= temp11004_106 temp11004_105))
(assert (= temp11004_107 (select ARGNAME_stride_NAMEEND_VAL temp11004_106)))
(assert (= temp11004_108 #x0000000000000005))
(assert (= temp11004_109 temp11004_108))
(assert (= temp11004_110 (select ARGNAME_stride_NAMEEND_VAL temp11004_109)))
(assert (= temp11004_111 #x0000000000000000))
(assert (= temp11004_112 #x0000000000000000))
(assert (= temp11004_113 temp11004_112))
(assert (= temp11004_114 (select ARGNAME_stride_NAMEEND_VAL temp11004_113)))
(assert (= temp11004_115 #x0000000000000000))
(assert (= temp11004_116 #x0000000000000001))
(assert (= temp11004_117 temp11004_116))
(assert (= temp11004_118 (select ARGNAME_stride_NAMEEND_VAL temp11004_117)))
(assert (= temp11004_119 #x0000000000000000))
(assert (= temp11004_120 #x0000000000000002))
(assert (= temp11004_121 temp11004_120))
(assert (= temp11004_122 (select ARGNAME_stride_NAMEEND_VAL temp11004_121)))
(assert (= temp11004_123 #x0000000000000000))
(assert (= temp11004_124 #x0000000000000003))
(assert (= temp11004_125 temp11004_124))
(assert (= temp11004_126 (select ARGNAME_stride_NAMEEND_VAL temp11004_125)))
(assert (= temp11004_127 #x0000000000000000))
(assert (= temp11004_128 #x0000000000000004))
(assert (= temp11004_129 temp11004_128))
(assert (= temp11004_130 (select ARGNAME_stride_NAMEEND_VAL temp11004_129)))
(assert (= temp11004_131 #x0000000000000000))
(assert (= temp11004_132 #x0000000000000005))
(assert (= temp11004_133 temp11004_132))
(assert (= temp11004_134 (select ARGNAME_stride_NAMEEND_VAL temp11004_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11004_114 temp11004_111)
             (bvsle temp11004_118 temp11004_115)
             (bvsle temp11004_122 temp11004_119)
             (bvsle temp11004_126 temp11004_123)
             (bvsle temp11004_130 temp11004_127)
             (bvsle temp11004_134 temp11004_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11004_135 #x0000000000000000))
(assert (= var1191735 temp11004_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11004_136 #x0000000000000001))
(assert (= var1191747 temp11004_136))
(assert (= temp11004_137 #x0000000000000000))
(assert (= var1179826 temp11004_137))
(assert (= temp11004_138 #x0000000000000000))
(assert (= temp11004_139 temp11004_138))
(assert (= temp11004_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11004_139)))
(assert (= temp11004_141 #x0000000000000001))
(assert (= temp11004_142 temp11004_141))
(assert (= temp11004_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11004_142)))
(assert (= temp11004_144 #x0000000000000002))
(assert (= temp11004_145 temp11004_144))
(assert (= temp11004_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11004_145)))
(assert (= temp11004_147 #x0000000000000003))
(assert (= temp11004_148 temp11004_147))
(assert (= temp11004_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11004_148)))
(assert (= temp11004_150 #x0000000000000004))
(assert (= temp11004_151 temp11004_150))
(assert (= temp11004_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11004_151)))
(assert (= temp11004_153 #x0000000000000005))
(assert (= temp11004_154 temp11004_153))
(assert (= temp11004_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11004_154)))
(assert (= temp11004_157 var1179826))
(assert (= temp11004_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11004_157)))
(assert (= temp11004_156 temp11004_158))
(assert (= var1191780
   (ite (bvslt temp11004_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11004_159 #x0000000000000000))
(assert (= var1191780 temp11004_159))
(assert (= temp11004_160 #x0000000000000000))
(assert (= var1179826 temp11004_160))
(assert (= temp11004_162 var1179826))
(assert (= temp11004_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11004_162)))
(assert (= temp11004_161 temp11004_163))
(assert (= var1191802 (bvsmod temp11004_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11004_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11004_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11004_165 #x0000000000000001))
(assert (= var1191803 temp11004_165))
(assert (= temp11004_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11004_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11004_167 #x0000000000000001))
(assert (= var1191823 temp11004_167))
(assert (= temp11004_168 #x0000000000000001))
(assert (= var1180714 temp11004_168))
(assert (= temp11004_169 #x0000000000000000))
(assert (= temp11004_170 temp11004_169))
(assert (= temp11004_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11004_170)))
(assert (= temp11004_172 #x0000000000000001))
(assert (= temp11004_173 temp11004_172))
(assert (= temp11004_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11004_173)))
(assert (= temp11004_175 #x0000000000000002))
(assert (= temp11004_176 temp11004_175))
(assert (= temp11004_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11004_176)))
(assert (= temp11004_178 #x0000000000000003))
(assert (= temp11004_179 temp11004_178))
(assert (= temp11004_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11004_179)))
(assert (= temp11004_181 #x0000000000000004))
(assert (= temp11004_182 temp11004_181))
(assert (= temp11004_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11004_182)))
(assert (= temp11004_184 #x0000000000000005))
(assert (= temp11004_185 temp11004_184))
(assert (= temp11004_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11004_185)))
(assert (= temp11004_187 #x0000000000000000))
(assert (= temp11004_188
   (ite (bvslt var1180714 temp11004_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11004_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11004_188)))
(assert (= var1191831 temp11004_189))
(assert (bvslt (ite (bvslt var1180714 temp11004_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11004_190 #x0000000000000001))
(assert (= var1180714 temp11004_190))
(assert (= temp11004_192 var1180714))
(assert (= temp11004_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11004_192)))
(assert (= temp11004_191 temp11004_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11004_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11004_194 #x0000000000000001))
(assert (= var1191836 temp11004_194))
(assert (= temp11004_195 #x0000000000000000))
(assert (= var1179826 temp11004_195))
(assert (= temp11004_197 var1179826))
(assert (= temp11004_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11004_197)))
(assert (= temp11004_196 temp11004_198))
(assert (= temp11004_199 #x0000000000000002))
(assert (= var1586025 temp11004_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11004_200 #x0000000000000001))
(assert (= var1191993 temp11004_200))
(assert (= temp11004_201 #x0000000000000001))
(assert (= var2700303 temp11004_201))
(assert (= temp11004_202 #x0000000000000001))
(assert (= var2962447 temp11004_202))
(assert (= temp11004_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11004_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11004_204 #x0000000000000001))
(assert (= var211058 temp11004_204))
(assert (= temp11004_205 #x0000000000000001))
(assert (= var211188 temp11004_205))
(assert (= var3879401 var211188))
(assert (= temp11004_206 #x0000000000000000))
(assert (= var3866802 temp11004_206))
(assert (= temp11004_207 #x0000000000000000))
(assert (= temp11004_208
   (ite (bvslt var3866802 temp11004_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11004_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11004_208)))
(assert (= var3879420 temp11004_209))
(assert (bvslt (ite (bvslt var3866802 temp11004_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11004_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11004_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11004_211 #x0000000000000000))
(assert (= var3879421 temp11004_211))
(assert (= temp11004_212 #x0000000000000001))
(assert (= var3867690 temp11004_212))
(assert (= temp11004_213 #x0000000000000000))
(assert (= temp11004_214
   (ite (bvslt var3867690 temp11004_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11004_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11004_214)))
(assert (= var3879423 temp11004_215))
(assert (bvslt (ite (bvslt var3867690 temp11004_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11004_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11004_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11004_217 #x0000000000000001))
(assert (= var3879424 temp11004_217))
(assert (= temp11004_218 #x0000000000000000))
(assert (= var4133117 temp11004_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11004_219 #x0000000000000002))
(assert (= var4339331 temp11004_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11004_220 #x0000000000000000))
(assert (= var4404892 temp11004_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4600208 var211201))
(assert (= var4862352 var211201))
(assert (= temp11004_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp11004_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11004_222 #x0000000000000001))
(assert (= var212414 temp11004_222))
(assert (= temp11004_223 #x0000000000000002))
(assert (= var5191299 temp11004_223))
(assert (= var5191301 (bvsub ARGNAME_weight_NAMEEND_DIM var5191299)))
(assert (= var5256844 var5191299))
(assert (= var5256845 var5191301))
(assert (= temp11004_224 #x0000000000000001))
(assert (= var211058 temp11004_224))
(assert (= temp11004_225 #x0000000000000000))
(assert (= var6107924 temp11004_225))
(assert (= var6107891 var6107924))
(assert (= var5976455 var6107891))
(assert (= var5976451 var5976455))
(assert (= var212669 var5976451))
(assert (= temp11004_226 #x0000000000000000))
(assert (= var212669 temp11004_226))
(model-add temp11004_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11004_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11004_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11004_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




