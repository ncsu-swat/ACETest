(declare-fun temp10800_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10800_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10800_3 () (_ BitVec 64))
(declare-fun temp10800_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10800_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10800_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10800_7 () (_ BitVec 64))
(declare-fun temp10800_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10800_9 () (_ BitVec 64))
(declare-fun temp10800_10 () (_ BitVec 64))
(declare-fun temp10800_11 () (_ BitVec 64))
(declare-fun temp10800_12 () (_ BitVec 64))
(declare-fun temp10800_13 () (_ BitVec 64))
(declare-fun temp10800_14 () (_ BitVec 64))
(declare-fun temp10800_15 () (_ BitVec 64))
(declare-fun temp10800_16 () (_ BitVec 64))
(declare-fun temp10800_17 () (_ BitVec 64))
(declare-fun temp10800_18 () (_ BitVec 64))
(declare-fun temp10800_19 () (_ BitVec 64))
(declare-fun temp10800_20 () (_ BitVec 64))
(declare-fun temp10800_21 () (_ BitVec 64))
(declare-fun temp10800_22 () (_ BitVec 64))
(declare-fun temp10800_23 () (_ BitVec 64))
(declare-fun temp10800_24 () (_ BitVec 64))
(declare-fun temp10800_25 () (_ BitVec 64))
(declare-fun temp10800_26 () (_ BitVec 64))
(declare-fun temp10800_27 () (_ BitVec 64))
(declare-fun temp10800_28 () (_ BitVec 64))
(declare-fun temp10800_29 () (_ BitVec 64))
(declare-fun temp10800_30 () (_ BitVec 64))
(declare-fun temp10800_31 () (_ BitVec 64))
(declare-fun temp10800_32 () (_ BitVec 64))
(declare-fun temp10800_33 () (_ BitVec 64))
(declare-fun temp10800_34 () (_ BitVec 64))
(declare-fun temp10800_35 () (_ BitVec 64))
(declare-fun temp10800_36 () (_ BitVec 64))
(declare-fun temp10800_37 () (_ BitVec 64))
(declare-fun temp10800_38 () (_ BitVec 64))
(declare-fun temp10800_39 () (_ BitVec 64))
(declare-fun temp10800_40 () (_ BitVec 64))
(declare-fun temp10800_41 () (_ BitVec 64))
(declare-fun temp10800_42 () (_ BitVec 64))
(declare-fun temp10800_43 () (_ BitVec 64))
(declare-fun temp10800_44 () (_ BitVec 64))
(declare-fun temp10800_45 () (_ BitVec 64))
(declare-fun temp10800_46 () (_ BitVec 64))
(declare-fun temp10800_47 () (_ BitVec 64))
(declare-fun temp10800_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10800_49 () (_ BitVec 64))
(declare-fun temp10800_50 () (_ BitVec 64))
(declare-fun temp10800_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10800_52 () (_ BitVec 64))
(declare-fun temp10800_53 () (_ BitVec 64))
(declare-fun temp10800_54 () (_ BitVec 64))
(declare-fun temp10800_55 () (_ BitVec 64))
(declare-fun temp10800_56 () (_ BitVec 64))
(declare-fun temp10800_57 () (_ BitVec 64))
(declare-fun temp10800_58 () (_ BitVec 64))
(declare-fun temp10800_59 () (_ BitVec 64))
(declare-fun temp10800_60 () (_ BitVec 64))
(declare-fun temp10800_61 () (_ BitVec 64))
(declare-fun temp10800_62 () (_ BitVec 64))
(declare-fun temp10800_63 () (_ BitVec 64))
(declare-fun temp10800_64 () (_ BitVec 64))
(declare-fun temp10800_65 () (_ BitVec 64))
(declare-fun temp10800_66 () (_ BitVec 64))
(declare-fun temp10800_67 () (_ BitVec 64))
(declare-fun temp10800_68 () (_ BitVec 64))
(declare-fun temp10800_69 () (_ BitVec 64))
(declare-fun temp10800_70 () (_ BitVec 64))
(declare-fun temp10800_71 () (_ BitVec 64))
(declare-fun temp10800_72 () (_ BitVec 64))
(declare-fun temp10800_73 () (_ BitVec 64))
(declare-fun temp10800_74 () (_ BitVec 64))
(declare-fun temp10800_75 () (_ BitVec 64))
(declare-fun temp10800_76 () (_ BitVec 64))
(declare-fun temp10800_77 () (_ BitVec 64))
(declare-fun temp10800_78 () (_ BitVec 64))
(declare-fun temp10800_79 () (_ BitVec 64))
(declare-fun temp10800_80 () (_ BitVec 64))
(declare-fun temp10800_81 () (_ BitVec 64))
(declare-fun temp10800_82 () (_ BitVec 64))
(declare-fun temp10800_83 () (_ BitVec 64))
(declare-fun temp10800_84 () (_ BitVec 64))
(declare-fun temp10800_85 () (_ BitVec 64))
(declare-fun temp10800_86 () (_ BitVec 64))
(declare-fun temp10800_87 () (_ BitVec 64))
(declare-fun temp10800_88 () (_ BitVec 64))
(declare-fun temp10800_89 () (_ BitVec 64))
(declare-fun temp10800_90 () (_ BitVec 64))
(declare-fun temp10800_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10800_92 () (_ BitVec 64))
(declare-fun temp10800_93 () (_ BitVec 64))
(declare-fun temp10800_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10800_95 () (_ BitVec 64))
(declare-fun temp10800_96 () (_ BitVec 64))
(declare-fun temp10800_97 () (_ BitVec 64))
(declare-fun temp10800_98 () (_ BitVec 64))
(declare-fun temp10800_99 () (_ BitVec 64))
(declare-fun temp10800_100 () (_ BitVec 64))
(declare-fun temp10800_101 () (_ BitVec 64))
(declare-fun temp10800_102 () (_ BitVec 64))
(declare-fun temp10800_103 () (_ BitVec 64))
(declare-fun temp10800_104 () (_ BitVec 64))
(declare-fun temp10800_105 () (_ BitVec 64))
(declare-fun temp10800_106 () (_ BitVec 64))
(declare-fun temp10800_107 () (_ BitVec 64))
(declare-fun temp10800_108 () (_ BitVec 64))
(declare-fun temp10800_109 () (_ BitVec 64))
(declare-fun temp10800_110 () (_ BitVec 64))
(declare-fun temp10800_111 () (_ BitVec 64))
(declare-fun temp10800_112 () (_ BitVec 64))
(declare-fun temp10800_113 () (_ BitVec 64))
(declare-fun temp10800_114 () (_ BitVec 64))
(declare-fun temp10800_115 () (_ BitVec 64))
(declare-fun temp10800_116 () (_ BitVec 64))
(declare-fun temp10800_117 () (_ BitVec 64))
(declare-fun temp10800_118 () (_ BitVec 64))
(declare-fun temp10800_119 () (_ BitVec 64))
(declare-fun temp10800_120 () (_ BitVec 64))
(declare-fun temp10800_121 () (_ BitVec 64))
(declare-fun temp10800_122 () (_ BitVec 64))
(declare-fun temp10800_123 () (_ BitVec 64))
(declare-fun temp10800_124 () (_ BitVec 64))
(declare-fun temp10800_125 () (_ BitVec 64))
(declare-fun temp10800_126 () (_ BitVec 64))
(declare-fun temp10800_127 () (_ BitVec 64))
(declare-fun temp10800_128 () (_ BitVec 64))
(declare-fun temp10800_129 () (_ BitVec 64))
(declare-fun temp10800_130 () (_ BitVec 64))
(declare-fun temp10800_131 () (_ BitVec 64))
(declare-fun temp10800_132 () (_ BitVec 64))
(declare-fun temp10800_133 () (_ BitVec 64))
(declare-fun temp10800_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10800_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10800_136 () (_ BitVec 64))
(declare-fun temp10800_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10800_138 () (_ BitVec 64))
(declare-fun temp10800_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10800_140 () (_ BitVec 64))
(declare-fun temp10800_141 () (_ BitVec 64))
(declare-fun temp10800_142 () (_ BitVec 64))
(declare-fun temp10800_143 () (_ BitVec 64))
(declare-fun temp10800_144 () (_ BitVec 64))
(declare-fun temp10800_145 () (_ BitVec 64))
(declare-fun temp10800_146 () (_ BitVec 64))
(declare-fun temp10800_147 () (_ BitVec 64))
(declare-fun temp10800_148 () (_ BitVec 64))
(declare-fun temp10800_149 () (_ BitVec 64))
(declare-fun temp10800_150 () (_ BitVec 64))
(declare-fun temp10800_151 () (_ BitVec 64))
(declare-fun temp10800_152 () (_ BitVec 64))
(declare-fun temp10800_153 () (_ BitVec 64))
(declare-fun temp10800_154 () (_ BitVec 64))
(declare-fun temp10800_155 () (_ BitVec 64))
(declare-fun temp10800_157 () (_ BitVec 64))
(declare-fun temp10800_158 () (_ BitVec 64))
(declare-fun temp10800_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10800_159 () (_ BitVec 64))
(declare-fun temp10800_160 () (_ BitVec 64))
(declare-fun temp10800_162 () (_ BitVec 64))
(declare-fun temp10800_163 () (_ BitVec 64))
(declare-fun temp10800_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10800_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10800_165 () (_ BitVec 64))
(declare-fun temp10800_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10800_167 () (_ BitVec 64))
(declare-fun temp10800_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10800_169 () (_ BitVec 64))
(declare-fun temp10800_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10800_171 () (_ BitVec 64))
(declare-fun temp10800_172 () (_ BitVec 64))
(declare-fun temp10800_173 () (_ BitVec 64))
(declare-fun temp10800_174 () (_ BitVec 64))
(declare-fun temp10800_175 () (_ BitVec 64))
(declare-fun temp10800_176 () (_ BitVec 64))
(declare-fun temp10800_177 () (_ BitVec 64))
(declare-fun temp10800_178 () (_ BitVec 64))
(declare-fun temp10800_179 () (_ BitVec 64))
(declare-fun temp10800_180 () (_ BitVec 64))
(declare-fun temp10800_181 () (_ BitVec 64))
(declare-fun temp10800_182 () (_ BitVec 64))
(declare-fun temp10800_183 () (_ BitVec 64))
(declare-fun temp10800_184 () (_ BitVec 64))
(declare-fun temp10800_185 () (_ BitVec 64))
(declare-fun temp10800_186 () (_ BitVec 64))
(declare-fun temp10800_187 () (_ BitVec 64))
(declare-fun temp10800_188 () (_ BitVec 64))
(declare-fun temp10800_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10800_190 () (_ BitVec 64))
(declare-fun temp10800_192 () (_ BitVec 64))
(declare-fun temp10800_193 () (_ BitVec 64))
(declare-fun temp10800_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10800_194 () (_ BitVec 64))
(declare-fun temp10800_195 () (_ BitVec 64))
(declare-fun temp10800_197 () (_ BitVec 64))
(declare-fun temp10800_198 () (_ BitVec 64))
(declare-fun temp10800_196 () (_ BitVec 64))
(declare-fun temp10800_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10800_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10800_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10800_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10800_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10800_204 () (_ BitVec 64))
(declare-fun temp10800_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10800_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10800_207 () (_ BitVec 64))
(declare-fun temp10800_208 () (_ BitVec 64))
(declare-fun temp10800_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10800_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10800_211 () (_ BitVec 64))
(declare-fun temp10800_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10800_213 () (_ BitVec 64))
(declare-fun temp10800_214 () (_ BitVec 64))
(declare-fun temp10800_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10800_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10800_217 () (_ BitVec 64))
(declare-fun temp10800_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10800_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10800_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp10800_221 () (_ BitVec 64))
(declare-fun var6042000 () (_ BitVec 64))
(declare-fun temp10800_222 () (_ BitVec 64))
(assert (= temp10800_1 #x0000000000000001))
(assert (= var77203 temp10800_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10800_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10800_2)))
(assert (= temp10800_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10800_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10800_4 #x0000000000000000))
(assert (= var210941 temp10800_4))
(assert (= temp10800_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10800_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10800_6 #x0000000000000000))
(assert (= var210986 temp10800_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10800_7 #x0000000000000000))
(assert (= temp10800_8 temp10800_7))
(assert (= temp10800_9 (select ARGNAME_padding_NAMEEND_VAL temp10800_8)))
(assert (= temp10800_10 #x0000000000000001))
(assert (= temp10800_11 temp10800_10))
(assert (= temp10800_12 (select ARGNAME_padding_NAMEEND_VAL temp10800_11)))
(assert (= temp10800_13 #x0000000000000002))
(assert (= temp10800_14 temp10800_13))
(assert (= temp10800_15 (select ARGNAME_padding_NAMEEND_VAL temp10800_14)))
(assert (= temp10800_16 #x0000000000000003))
(assert (= temp10800_17 temp10800_16))
(assert (= temp10800_18 (select ARGNAME_padding_NAMEEND_VAL temp10800_17)))
(assert (= temp10800_19 #x0000000000000004))
(assert (= temp10800_20 temp10800_19))
(assert (= temp10800_21 (select ARGNAME_padding_NAMEEND_VAL temp10800_20)))
(assert (= temp10800_22 #x0000000000000005))
(assert (= temp10800_23 temp10800_22))
(assert (= temp10800_24 (select ARGNAME_padding_NAMEEND_VAL temp10800_23)))
(assert (= temp10800_25 #x0000000000000000))
(assert (= temp10800_26 #x0000000000000000))
(assert (= temp10800_27 temp10800_26))
(assert (= temp10800_28 (select ARGNAME_padding_NAMEEND_VAL temp10800_27)))
(assert (= temp10800_29 #x0000000000000000))
(assert (= temp10800_30 #x0000000000000001))
(assert (= temp10800_31 temp10800_30))
(assert (= temp10800_32 (select ARGNAME_padding_NAMEEND_VAL temp10800_31)))
(assert (= temp10800_33 #x0000000000000000))
(assert (= temp10800_34 #x0000000000000002))
(assert (= temp10800_35 temp10800_34))
(assert (= temp10800_36 (select ARGNAME_padding_NAMEEND_VAL temp10800_35)))
(assert (= temp10800_37 #x0000000000000000))
(assert (= temp10800_38 #x0000000000000003))
(assert (= temp10800_39 temp10800_38))
(assert (= temp10800_40 (select ARGNAME_padding_NAMEEND_VAL temp10800_39)))
(assert (= temp10800_41 #x0000000000000000))
(assert (= temp10800_42 #x0000000000000004))
(assert (= temp10800_43 temp10800_42))
(assert (= temp10800_44 (select ARGNAME_padding_NAMEEND_VAL temp10800_43)))
(assert (= temp10800_45 #x0000000000000000))
(assert (= temp10800_46 #x0000000000000005))
(assert (= temp10800_47 temp10800_46))
(assert (= temp10800_48 (select ARGNAME_padding_NAMEEND_VAL temp10800_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10800_28 temp10800_25)
             (bvslt temp10800_32 temp10800_29)
             (bvslt temp10800_36 temp10800_33)
             (bvslt temp10800_40 temp10800_37)
             (bvslt temp10800_44 temp10800_41)
             (bvslt temp10800_48 temp10800_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10800_49 #x0000000000000000))
(assert (= var1191714 temp10800_49))
(assert (= temp10800_50 #x0000000000000000))
(assert (= temp10800_51 temp10800_50))
(assert (= temp10800_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10800_51)))
(assert (= temp10800_53 #x0000000000000001))
(assert (= temp10800_54 temp10800_53))
(assert (= temp10800_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10800_54)))
(assert (= temp10800_56 #x0000000000000002))
(assert (= temp10800_57 temp10800_56))
(assert (= temp10800_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10800_57)))
(assert (= temp10800_59 #x0000000000000003))
(assert (= temp10800_60 temp10800_59))
(assert (= temp10800_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10800_60)))
(assert (= temp10800_62 #x0000000000000004))
(assert (= temp10800_63 temp10800_62))
(assert (= temp10800_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10800_63)))
(assert (= temp10800_65 #x0000000000000005))
(assert (= temp10800_66 temp10800_65))
(assert (= temp10800_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10800_66)))
(assert (= temp10800_68 #x0000000000000000))
(assert (= temp10800_69 #x0000000000000000))
(assert (= temp10800_70 temp10800_69))
(assert (= temp10800_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10800_70)))
(assert (= temp10800_72 #x0000000000000000))
(assert (= temp10800_73 #x0000000000000001))
(assert (= temp10800_74 temp10800_73))
(assert (= temp10800_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10800_74)))
(assert (= temp10800_76 #x0000000000000000))
(assert (= temp10800_77 #x0000000000000002))
(assert (= temp10800_78 temp10800_77))
(assert (= temp10800_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10800_78)))
(assert (= temp10800_80 #x0000000000000000))
(assert (= temp10800_81 #x0000000000000003))
(assert (= temp10800_82 temp10800_81))
(assert (= temp10800_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10800_82)))
(assert (= temp10800_84 #x0000000000000000))
(assert (= temp10800_85 #x0000000000000004))
(assert (= temp10800_86 temp10800_85))
(assert (= temp10800_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10800_86)))
(assert (= temp10800_88 #x0000000000000000))
(assert (= temp10800_89 #x0000000000000005))
(assert (= temp10800_90 temp10800_89))
(assert (= temp10800_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10800_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10800_71 temp10800_68)
             (bvslt temp10800_75 temp10800_72)
             (bvslt temp10800_79 temp10800_76)
             (bvslt temp10800_83 temp10800_80)
             (bvslt temp10800_87 temp10800_84)
             (bvslt temp10800_91 temp10800_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10800_92 #x0000000000000000))
(assert (= var1191725 temp10800_92))
(assert (= temp10800_93 #x0000000000000000))
(assert (= temp10800_94 temp10800_93))
(assert (= temp10800_95 (select ARGNAME_stride_NAMEEND_VAL temp10800_94)))
(assert (= temp10800_96 #x0000000000000001))
(assert (= temp10800_97 temp10800_96))
(assert (= temp10800_98 (select ARGNAME_stride_NAMEEND_VAL temp10800_97)))
(assert (= temp10800_99 #x0000000000000002))
(assert (= temp10800_100 temp10800_99))
(assert (= temp10800_101 (select ARGNAME_stride_NAMEEND_VAL temp10800_100)))
(assert (= temp10800_102 #x0000000000000003))
(assert (= temp10800_103 temp10800_102))
(assert (= temp10800_104 (select ARGNAME_stride_NAMEEND_VAL temp10800_103)))
(assert (= temp10800_105 #x0000000000000004))
(assert (= temp10800_106 temp10800_105))
(assert (= temp10800_107 (select ARGNAME_stride_NAMEEND_VAL temp10800_106)))
(assert (= temp10800_108 #x0000000000000005))
(assert (= temp10800_109 temp10800_108))
(assert (= temp10800_110 (select ARGNAME_stride_NAMEEND_VAL temp10800_109)))
(assert (= temp10800_111 #x0000000000000000))
(assert (= temp10800_112 #x0000000000000000))
(assert (= temp10800_113 temp10800_112))
(assert (= temp10800_114 (select ARGNAME_stride_NAMEEND_VAL temp10800_113)))
(assert (= temp10800_115 #x0000000000000000))
(assert (= temp10800_116 #x0000000000000001))
(assert (= temp10800_117 temp10800_116))
(assert (= temp10800_118 (select ARGNAME_stride_NAMEEND_VAL temp10800_117)))
(assert (= temp10800_119 #x0000000000000000))
(assert (= temp10800_120 #x0000000000000002))
(assert (= temp10800_121 temp10800_120))
(assert (= temp10800_122 (select ARGNAME_stride_NAMEEND_VAL temp10800_121)))
(assert (= temp10800_123 #x0000000000000000))
(assert (= temp10800_124 #x0000000000000003))
(assert (= temp10800_125 temp10800_124))
(assert (= temp10800_126 (select ARGNAME_stride_NAMEEND_VAL temp10800_125)))
(assert (= temp10800_127 #x0000000000000000))
(assert (= temp10800_128 #x0000000000000004))
(assert (= temp10800_129 temp10800_128))
(assert (= temp10800_130 (select ARGNAME_stride_NAMEEND_VAL temp10800_129)))
(assert (= temp10800_131 #x0000000000000000))
(assert (= temp10800_132 #x0000000000000005))
(assert (= temp10800_133 temp10800_132))
(assert (= temp10800_134 (select ARGNAME_stride_NAMEEND_VAL temp10800_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10800_114 temp10800_111)
             (bvsle temp10800_118 temp10800_115)
             (bvsle temp10800_122 temp10800_119)
             (bvsle temp10800_126 temp10800_123)
             (bvsle temp10800_130 temp10800_127)
             (bvsle temp10800_134 temp10800_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10800_135 #x0000000000000000))
(assert (= var1191735 temp10800_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10800_136 #x0000000000000001))
(assert (= var1191747 temp10800_136))
(assert (= temp10800_137 #x0000000000000000))
(assert (= var1179826 temp10800_137))
(assert (= temp10800_138 #x0000000000000000))
(assert (= temp10800_139 temp10800_138))
(assert (= temp10800_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10800_139)))
(assert (= temp10800_141 #x0000000000000001))
(assert (= temp10800_142 temp10800_141))
(assert (= temp10800_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10800_142)))
(assert (= temp10800_144 #x0000000000000002))
(assert (= temp10800_145 temp10800_144))
(assert (= temp10800_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10800_145)))
(assert (= temp10800_147 #x0000000000000003))
(assert (= temp10800_148 temp10800_147))
(assert (= temp10800_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10800_148)))
(assert (= temp10800_150 #x0000000000000004))
(assert (= temp10800_151 temp10800_150))
(assert (= temp10800_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10800_151)))
(assert (= temp10800_153 #x0000000000000005))
(assert (= temp10800_154 temp10800_153))
(assert (= temp10800_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10800_154)))
(assert (= temp10800_157 var1179826))
(assert (= temp10800_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10800_157)))
(assert (= temp10800_156 temp10800_158))
(assert (= var1191780
   (ite (bvslt temp10800_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10800_159 #x0000000000000000))
(assert (= var1191780 temp10800_159))
(assert (= temp10800_160 #x0000000000000000))
(assert (= var1179826 temp10800_160))
(assert (= temp10800_162 var1179826))
(assert (= temp10800_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10800_162)))
(assert (= temp10800_161 temp10800_163))
(assert (= var1191802 (bvsmod temp10800_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10800_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10800_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10800_165 #x0000000000000001))
(assert (= var1191803 temp10800_165))
(assert (= temp10800_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10800_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10800_167 #x0000000000000001))
(assert (= var1191823 temp10800_167))
(assert (= temp10800_168 #x0000000000000001))
(assert (= var1180714 temp10800_168))
(assert (= temp10800_169 #x0000000000000000))
(assert (= temp10800_170 temp10800_169))
(assert (= temp10800_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10800_170)))
(assert (= temp10800_172 #x0000000000000001))
(assert (= temp10800_173 temp10800_172))
(assert (= temp10800_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10800_173)))
(assert (= temp10800_175 #x0000000000000002))
(assert (= temp10800_176 temp10800_175))
(assert (= temp10800_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10800_176)))
(assert (= temp10800_178 #x0000000000000003))
(assert (= temp10800_179 temp10800_178))
(assert (= temp10800_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10800_179)))
(assert (= temp10800_181 #x0000000000000004))
(assert (= temp10800_182 temp10800_181))
(assert (= temp10800_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10800_182)))
(assert (= temp10800_184 #x0000000000000005))
(assert (= temp10800_185 temp10800_184))
(assert (= temp10800_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10800_185)))
(assert (= temp10800_187 #x0000000000000000))
(assert (= temp10800_188
   (ite (bvslt var1180714 temp10800_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10800_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10800_188)))
(assert (= var1191831 temp10800_189))
(assert (bvslt (ite (bvslt var1180714 temp10800_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10800_190 #x0000000000000001))
(assert (= var1180714 temp10800_190))
(assert (= temp10800_192 var1180714))
(assert (= temp10800_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10800_192)))
(assert (= temp10800_191 temp10800_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10800_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10800_194 #x0000000000000001))
(assert (= var1191836 temp10800_194))
(assert (= temp10800_195 #x0000000000000000))
(assert (= var1179826 temp10800_195))
(assert (= temp10800_197 var1179826))
(assert (= temp10800_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10800_197)))
(assert (= temp10800_196 temp10800_198))
(assert (= temp10800_199 #x0000000000000002))
(assert (= var1586025 temp10800_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10800_200 #x0000000000000001))
(assert (= var1191993 temp10800_200))
(assert (= temp10800_201 #x0000000000000001))
(assert (= var2700303 temp10800_201))
(assert (= temp10800_202 #x0000000000000001))
(assert (= var2962447 temp10800_202))
(assert (= temp10800_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10800_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10800_204 #x0000000000000001))
(assert (= var211058 temp10800_204))
(assert (= temp10800_205 #x0000000000000001))
(assert (= var211188 temp10800_205))
(assert (= var3879401 var211188))
(assert (= temp10800_206 #x0000000000000000))
(assert (= var3866802 temp10800_206))
(assert (= temp10800_207 #x0000000000000000))
(assert (= temp10800_208
   (ite (bvslt var3866802 temp10800_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10800_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10800_208)))
(assert (= var3879420 temp10800_209))
(assert (bvslt (ite (bvslt var3866802 temp10800_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10800_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10800_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10800_211 #x0000000000000000))
(assert (= var3879421 temp10800_211))
(assert (= temp10800_212 #x0000000000000001))
(assert (= var3867690 temp10800_212))
(assert (= temp10800_213 #x0000000000000000))
(assert (= temp10800_214
   (ite (bvslt var3867690 temp10800_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10800_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10800_214)))
(assert (= var3879423 temp10800_215))
(assert (bvslt (ite (bvslt var3867690 temp10800_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10800_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10800_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10800_217 #x0000000000000001))
(assert (= var3879424 temp10800_217))
(assert (= temp10800_218 #x0000000000000000))
(assert (= var4133117 temp10800_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10800_219 #x0000000000000002))
(assert (= var4339331 temp10800_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10800_220 #x0000000000000000))
(assert (= var4404892 temp10800_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5452176 var211201))
(assert (= var5714320 var211201))
(assert (= temp10800_221 #x0000000000000000))
(assert (= var6042000 temp10800_221))
(assert (= temp10800_222 #x0000000000000001))
(assert (= var211058 temp10800_222))
(model-add temp10800_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10800_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10800_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10800_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




