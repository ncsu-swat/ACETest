(declare-fun temp98_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp98_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp98_3 () (_ BitVec 64))
(declare-fun temp98_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp98_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp98_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp98_7 () (_ BitVec 64))
(declare-fun temp98_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp98_9 () (_ BitVec 64))
(declare-fun temp98_10 () (_ BitVec 64))
(declare-fun temp98_11 () (_ BitVec 64))
(declare-fun temp98_12 () (_ BitVec 64))
(declare-fun temp98_13 () (_ BitVec 64))
(declare-fun temp98_14 () (_ BitVec 64))
(declare-fun temp98_15 () (_ BitVec 64))
(declare-fun temp98_16 () (_ BitVec 64))
(declare-fun temp98_17 () (_ BitVec 64))
(declare-fun temp98_18 () (_ BitVec 64))
(declare-fun temp98_19 () (_ BitVec 64))
(declare-fun temp98_20 () (_ BitVec 64))
(declare-fun temp98_21 () (_ BitVec 64))
(declare-fun temp98_22 () (_ BitVec 64))
(declare-fun temp98_23 () (_ BitVec 64))
(declare-fun temp98_24 () (_ BitVec 64))
(declare-fun temp98_25 () (_ BitVec 64))
(declare-fun temp98_26 () (_ BitVec 64))
(declare-fun temp98_27 () (_ BitVec 64))
(declare-fun temp98_28 () (_ BitVec 64))
(declare-fun temp98_29 () (_ BitVec 64))
(declare-fun temp98_30 () (_ BitVec 64))
(declare-fun temp98_31 () (_ BitVec 64))
(declare-fun temp98_32 () (_ BitVec 64))
(declare-fun temp98_33 () (_ BitVec 64))
(declare-fun temp98_34 () (_ BitVec 64))
(declare-fun temp98_35 () (_ BitVec 64))
(declare-fun temp98_36 () (_ BitVec 64))
(declare-fun temp98_37 () (_ BitVec 64))
(declare-fun temp98_38 () (_ BitVec 64))
(declare-fun temp98_39 () (_ BitVec 64))
(declare-fun temp98_40 () (_ BitVec 64))
(declare-fun temp98_41 () (_ BitVec 64))
(declare-fun temp98_42 () (_ BitVec 64))
(declare-fun temp98_43 () (_ BitVec 64))
(declare-fun temp98_44 () (_ BitVec 64))
(declare-fun temp98_45 () (_ BitVec 64))
(declare-fun temp98_46 () (_ BitVec 64))
(declare-fun temp98_47 () (_ BitVec 64))
(declare-fun temp98_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp98_49 () (_ BitVec 64))
(declare-fun temp98_50 () (_ BitVec 64))
(declare-fun temp98_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp98_52 () (_ BitVec 64))
(declare-fun temp98_53 () (_ BitVec 64))
(declare-fun temp98_54 () (_ BitVec 64))
(declare-fun temp98_55 () (_ BitVec 64))
(declare-fun temp98_56 () (_ BitVec 64))
(declare-fun temp98_57 () (_ BitVec 64))
(declare-fun temp98_58 () (_ BitVec 64))
(declare-fun temp98_59 () (_ BitVec 64))
(declare-fun temp98_60 () (_ BitVec 64))
(declare-fun temp98_61 () (_ BitVec 64))
(declare-fun temp98_62 () (_ BitVec 64))
(declare-fun temp98_63 () (_ BitVec 64))
(declare-fun temp98_64 () (_ BitVec 64))
(declare-fun temp98_65 () (_ BitVec 64))
(declare-fun temp98_66 () (_ BitVec 64))
(declare-fun temp98_67 () (_ BitVec 64))
(declare-fun temp98_68 () (_ BitVec 64))
(declare-fun temp98_69 () (_ BitVec 64))
(declare-fun temp98_70 () (_ BitVec 64))
(declare-fun temp98_71 () (_ BitVec 64))
(declare-fun temp98_72 () (_ BitVec 64))
(declare-fun temp98_73 () (_ BitVec 64))
(declare-fun temp98_74 () (_ BitVec 64))
(declare-fun temp98_75 () (_ BitVec 64))
(declare-fun temp98_76 () (_ BitVec 64))
(declare-fun temp98_77 () (_ BitVec 64))
(declare-fun temp98_78 () (_ BitVec 64))
(declare-fun temp98_79 () (_ BitVec 64))
(declare-fun temp98_80 () (_ BitVec 64))
(declare-fun temp98_81 () (_ BitVec 64))
(declare-fun temp98_82 () (_ BitVec 64))
(declare-fun temp98_83 () (_ BitVec 64))
(declare-fun temp98_84 () (_ BitVec 64))
(declare-fun temp98_85 () (_ BitVec 64))
(declare-fun temp98_86 () (_ BitVec 64))
(declare-fun temp98_87 () (_ BitVec 64))
(declare-fun temp98_88 () (_ BitVec 64))
(declare-fun temp98_89 () (_ BitVec 64))
(declare-fun temp98_90 () (_ BitVec 64))
(declare-fun temp98_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp98_92 () (_ BitVec 64))
(declare-fun temp98_93 () (_ BitVec 64))
(declare-fun temp98_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp98_95 () (_ BitVec 64))
(declare-fun temp98_96 () (_ BitVec 64))
(declare-fun temp98_97 () (_ BitVec 64))
(declare-fun temp98_98 () (_ BitVec 64))
(declare-fun temp98_99 () (_ BitVec 64))
(declare-fun temp98_100 () (_ BitVec 64))
(declare-fun temp98_101 () (_ BitVec 64))
(declare-fun temp98_102 () (_ BitVec 64))
(declare-fun temp98_103 () (_ BitVec 64))
(declare-fun temp98_104 () (_ BitVec 64))
(declare-fun temp98_105 () (_ BitVec 64))
(declare-fun temp98_106 () (_ BitVec 64))
(declare-fun temp98_107 () (_ BitVec 64))
(declare-fun temp98_108 () (_ BitVec 64))
(declare-fun temp98_109 () (_ BitVec 64))
(declare-fun temp98_110 () (_ BitVec 64))
(declare-fun temp98_111 () (_ BitVec 64))
(declare-fun temp98_112 () (_ BitVec 64))
(declare-fun temp98_113 () (_ BitVec 64))
(declare-fun temp98_114 () (_ BitVec 64))
(declare-fun temp98_115 () (_ BitVec 64))
(declare-fun temp98_116 () (_ BitVec 64))
(declare-fun temp98_117 () (_ BitVec 64))
(declare-fun temp98_118 () (_ BitVec 64))
(declare-fun temp98_119 () (_ BitVec 64))
(declare-fun temp98_120 () (_ BitVec 64))
(declare-fun temp98_121 () (_ BitVec 64))
(declare-fun temp98_122 () (_ BitVec 64))
(declare-fun temp98_123 () (_ BitVec 64))
(declare-fun temp98_124 () (_ BitVec 64))
(declare-fun temp98_125 () (_ BitVec 64))
(declare-fun temp98_126 () (_ BitVec 64))
(declare-fun temp98_127 () (_ BitVec 64))
(declare-fun temp98_128 () (_ BitVec 64))
(declare-fun temp98_129 () (_ BitVec 64))
(declare-fun temp98_130 () (_ BitVec 64))
(declare-fun temp98_131 () (_ BitVec 64))
(declare-fun temp98_132 () (_ BitVec 64))
(declare-fun temp98_133 () (_ BitVec 64))
(declare-fun temp98_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp98_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp98_136 () (_ BitVec 64))
(declare-fun temp98_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp98_138 () (_ BitVec 64))
(declare-fun temp98_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp98_140 () (_ BitVec 64))
(declare-fun temp98_141 () (_ BitVec 64))
(declare-fun temp98_142 () (_ BitVec 64))
(declare-fun temp98_143 () (_ BitVec 64))
(declare-fun temp98_144 () (_ BitVec 64))
(declare-fun temp98_145 () (_ BitVec 64))
(declare-fun temp98_146 () (_ BitVec 64))
(declare-fun temp98_147 () (_ BitVec 64))
(declare-fun temp98_148 () (_ BitVec 64))
(declare-fun temp98_149 () (_ BitVec 64))
(declare-fun temp98_150 () (_ BitVec 64))
(declare-fun temp98_151 () (_ BitVec 64))
(declare-fun temp98_152 () (_ BitVec 64))
(declare-fun temp98_153 () (_ BitVec 64))
(declare-fun temp98_154 () (_ BitVec 64))
(declare-fun temp98_155 () (_ BitVec 64))
(declare-fun temp98_157 () (_ BitVec 64))
(declare-fun temp98_158 () (_ BitVec 64))
(declare-fun temp98_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp98_159 () (_ BitVec 64))
(declare-fun temp98_160 () (_ BitVec 64))
(declare-fun temp98_162 () (_ BitVec 64))
(declare-fun temp98_163 () (_ BitVec 64))
(declare-fun temp98_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp98_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp98_165 () (_ BitVec 64))
(declare-fun temp98_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp98_167 () (_ BitVec 64))
(declare-fun temp98_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp98_169 () (_ BitVec 64))
(declare-fun temp98_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp98_171 () (_ BitVec 64))
(declare-fun temp98_172 () (_ BitVec 64))
(declare-fun temp98_173 () (_ BitVec 64))
(declare-fun temp98_174 () (_ BitVec 64))
(declare-fun temp98_175 () (_ BitVec 64))
(declare-fun temp98_176 () (_ BitVec 64))
(declare-fun temp98_177 () (_ BitVec 64))
(declare-fun temp98_178 () (_ BitVec 64))
(declare-fun temp98_179 () (_ BitVec 64))
(declare-fun temp98_180 () (_ BitVec 64))
(declare-fun temp98_181 () (_ BitVec 64))
(declare-fun temp98_182 () (_ BitVec 64))
(declare-fun temp98_183 () (_ BitVec 64))
(declare-fun temp98_184 () (_ BitVec 64))
(declare-fun temp98_185 () (_ BitVec 64))
(declare-fun temp98_186 () (_ BitVec 64))
(declare-fun temp98_187 () (_ BitVec 64))
(declare-fun temp98_188 () (_ BitVec 64))
(declare-fun temp98_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp98_190 () (_ BitVec 64))
(declare-fun temp98_192 () (_ BitVec 64))
(declare-fun temp98_193 () (_ BitVec 64))
(declare-fun temp98_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp98_194 () (_ BitVec 64))
(declare-fun temp98_195 () (_ BitVec 64))
(declare-fun temp98_197 () (_ BitVec 64))
(declare-fun temp98_198 () (_ BitVec 64))
(declare-fun temp98_196 () (_ BitVec 64))
(declare-fun temp98_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp98_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp98_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp98_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp98_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp98_204 () (_ BitVec 64))
(declare-fun temp98_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp98_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp98_207 () (_ BitVec 64))
(declare-fun temp98_208 () (_ BitVec 64))
(declare-fun temp98_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp98_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp98_211 () (_ BitVec 64))
(declare-fun temp98_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp98_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp98_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp98_216 () (_ BitVec 64))
(declare-fun temp98_215 () (_ BitVec 64))
(declare-fun temp98_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp98_218 () (_ BitVec 64))
(declare-fun temp98_219 () (_ BitVec 64))
(declare-fun temp98_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp98_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp98_222 () (_ BitVec 64))
(declare-fun temp98_224 () (_ BitVec 64))
(declare-fun temp98_223 () (_ BitVec 64))
(declare-fun temp98_225 () (_ BitVec 64))
(assert (= temp98_1 #x0000000000000001))
(assert (= var77203 temp98_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp98_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp98_2)))
(assert (= temp98_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp98_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_4 #x0000000000000000))
(assert (= var210941 temp98_4))
(assert (= temp98_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp98_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_6 #x0000000000000000))
(assert (= var210986 temp98_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp98_7 #x0000000000000000))
(assert (= temp98_8 temp98_7))
(assert (= temp98_9 (select ARGNAME_padding_NAMEEND_VAL temp98_8)))
(assert (= temp98_10 #x0000000000000001))
(assert (= temp98_11 temp98_10))
(assert (= temp98_12 (select ARGNAME_padding_NAMEEND_VAL temp98_11)))
(assert (= temp98_13 #x0000000000000002))
(assert (= temp98_14 temp98_13))
(assert (= temp98_15 (select ARGNAME_padding_NAMEEND_VAL temp98_14)))
(assert (= temp98_16 #x0000000000000003))
(assert (= temp98_17 temp98_16))
(assert (= temp98_18 (select ARGNAME_padding_NAMEEND_VAL temp98_17)))
(assert (= temp98_19 #x0000000000000004))
(assert (= temp98_20 temp98_19))
(assert (= temp98_21 (select ARGNAME_padding_NAMEEND_VAL temp98_20)))
(assert (= temp98_22 #x0000000000000005))
(assert (= temp98_23 temp98_22))
(assert (= temp98_24 (select ARGNAME_padding_NAMEEND_VAL temp98_23)))
(assert (= temp98_25 #x0000000000000000))
(assert (= temp98_26 #x0000000000000000))
(assert (= temp98_27 temp98_26))
(assert (= temp98_28 (select ARGNAME_padding_NAMEEND_VAL temp98_27)))
(assert (= temp98_29 #x0000000000000000))
(assert (= temp98_30 #x0000000000000001))
(assert (= temp98_31 temp98_30))
(assert (= temp98_32 (select ARGNAME_padding_NAMEEND_VAL temp98_31)))
(assert (= temp98_33 #x0000000000000000))
(assert (= temp98_34 #x0000000000000002))
(assert (= temp98_35 temp98_34))
(assert (= temp98_36 (select ARGNAME_padding_NAMEEND_VAL temp98_35)))
(assert (= temp98_37 #x0000000000000000))
(assert (= temp98_38 #x0000000000000003))
(assert (= temp98_39 temp98_38))
(assert (= temp98_40 (select ARGNAME_padding_NAMEEND_VAL temp98_39)))
(assert (= temp98_41 #x0000000000000000))
(assert (= temp98_42 #x0000000000000004))
(assert (= temp98_43 temp98_42))
(assert (= temp98_44 (select ARGNAME_padding_NAMEEND_VAL temp98_43)))
(assert (= temp98_45 #x0000000000000000))
(assert (= temp98_46 #x0000000000000005))
(assert (= temp98_47 temp98_46))
(assert (= temp98_48 (select ARGNAME_padding_NAMEEND_VAL temp98_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp98_28 temp98_25)
             (bvslt temp98_32 temp98_29)
             (bvslt temp98_36 temp98_33)
             (bvslt temp98_40 temp98_37)
             (bvslt temp98_44 temp98_41)
             (bvslt temp98_48 temp98_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_49 #x0000000000000000))
(assert (= var1191714 temp98_49))
(assert (= temp98_50 #x0000000000000000))
(assert (= temp98_51 temp98_50))
(assert (= temp98_52 (select ARGNAME_output_padding_NAMEEND_VAL temp98_51)))
(assert (= temp98_53 #x0000000000000001))
(assert (= temp98_54 temp98_53))
(assert (= temp98_55 (select ARGNAME_output_padding_NAMEEND_VAL temp98_54)))
(assert (= temp98_56 #x0000000000000002))
(assert (= temp98_57 temp98_56))
(assert (= temp98_58 (select ARGNAME_output_padding_NAMEEND_VAL temp98_57)))
(assert (= temp98_59 #x0000000000000003))
(assert (= temp98_60 temp98_59))
(assert (= temp98_61 (select ARGNAME_output_padding_NAMEEND_VAL temp98_60)))
(assert (= temp98_62 #x0000000000000004))
(assert (= temp98_63 temp98_62))
(assert (= temp98_64 (select ARGNAME_output_padding_NAMEEND_VAL temp98_63)))
(assert (= temp98_65 #x0000000000000005))
(assert (= temp98_66 temp98_65))
(assert (= temp98_67 (select ARGNAME_output_padding_NAMEEND_VAL temp98_66)))
(assert (= temp98_68 #x0000000000000000))
(assert (= temp98_69 #x0000000000000000))
(assert (= temp98_70 temp98_69))
(assert (= temp98_71 (select ARGNAME_output_padding_NAMEEND_VAL temp98_70)))
(assert (= temp98_72 #x0000000000000000))
(assert (= temp98_73 #x0000000000000001))
(assert (= temp98_74 temp98_73))
(assert (= temp98_75 (select ARGNAME_output_padding_NAMEEND_VAL temp98_74)))
(assert (= temp98_76 #x0000000000000000))
(assert (= temp98_77 #x0000000000000002))
(assert (= temp98_78 temp98_77))
(assert (= temp98_79 (select ARGNAME_output_padding_NAMEEND_VAL temp98_78)))
(assert (= temp98_80 #x0000000000000000))
(assert (= temp98_81 #x0000000000000003))
(assert (= temp98_82 temp98_81))
(assert (= temp98_83 (select ARGNAME_output_padding_NAMEEND_VAL temp98_82)))
(assert (= temp98_84 #x0000000000000000))
(assert (= temp98_85 #x0000000000000004))
(assert (= temp98_86 temp98_85))
(assert (= temp98_87 (select ARGNAME_output_padding_NAMEEND_VAL temp98_86)))
(assert (= temp98_88 #x0000000000000000))
(assert (= temp98_89 #x0000000000000005))
(assert (= temp98_90 temp98_89))
(assert (= temp98_91 (select ARGNAME_output_padding_NAMEEND_VAL temp98_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp98_71 temp98_68)
             (bvslt temp98_75 temp98_72)
             (bvslt temp98_79 temp98_76)
             (bvslt temp98_83 temp98_80)
             (bvslt temp98_87 temp98_84)
             (bvslt temp98_91 temp98_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_92 #x0000000000000000))
(assert (= var1191725 temp98_92))
(assert (= temp98_93 #x0000000000000000))
(assert (= temp98_94 temp98_93))
(assert (= temp98_95 (select ARGNAME_stride_NAMEEND_VAL temp98_94)))
(assert (= temp98_96 #x0000000000000001))
(assert (= temp98_97 temp98_96))
(assert (= temp98_98 (select ARGNAME_stride_NAMEEND_VAL temp98_97)))
(assert (= temp98_99 #x0000000000000002))
(assert (= temp98_100 temp98_99))
(assert (= temp98_101 (select ARGNAME_stride_NAMEEND_VAL temp98_100)))
(assert (= temp98_102 #x0000000000000003))
(assert (= temp98_103 temp98_102))
(assert (= temp98_104 (select ARGNAME_stride_NAMEEND_VAL temp98_103)))
(assert (= temp98_105 #x0000000000000004))
(assert (= temp98_106 temp98_105))
(assert (= temp98_107 (select ARGNAME_stride_NAMEEND_VAL temp98_106)))
(assert (= temp98_108 #x0000000000000005))
(assert (= temp98_109 temp98_108))
(assert (= temp98_110 (select ARGNAME_stride_NAMEEND_VAL temp98_109)))
(assert (= temp98_111 #x0000000000000000))
(assert (= temp98_112 #x0000000000000000))
(assert (= temp98_113 temp98_112))
(assert (= temp98_114 (select ARGNAME_stride_NAMEEND_VAL temp98_113)))
(assert (= temp98_115 #x0000000000000000))
(assert (= temp98_116 #x0000000000000001))
(assert (= temp98_117 temp98_116))
(assert (= temp98_118 (select ARGNAME_stride_NAMEEND_VAL temp98_117)))
(assert (= temp98_119 #x0000000000000000))
(assert (= temp98_120 #x0000000000000002))
(assert (= temp98_121 temp98_120))
(assert (= temp98_122 (select ARGNAME_stride_NAMEEND_VAL temp98_121)))
(assert (= temp98_123 #x0000000000000000))
(assert (= temp98_124 #x0000000000000003))
(assert (= temp98_125 temp98_124))
(assert (= temp98_126 (select ARGNAME_stride_NAMEEND_VAL temp98_125)))
(assert (= temp98_127 #x0000000000000000))
(assert (= temp98_128 #x0000000000000004))
(assert (= temp98_129 temp98_128))
(assert (= temp98_130 (select ARGNAME_stride_NAMEEND_VAL temp98_129)))
(assert (= temp98_131 #x0000000000000000))
(assert (= temp98_132 #x0000000000000005))
(assert (= temp98_133 temp98_132))
(assert (= temp98_134 (select ARGNAME_stride_NAMEEND_VAL temp98_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp98_114 temp98_111)
             (bvsle temp98_118 temp98_115)
             (bvsle temp98_122 temp98_119)
             (bvsle temp98_126 temp98_123)
             (bvsle temp98_130 temp98_127)
             (bvsle temp98_134 temp98_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_135 #x0000000000000000))
(assert (= var1191735 temp98_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_136 #x0000000000000001))
(assert (= var1191747 temp98_136))
(assert (= temp98_137 #x0000000000000000))
(assert (= var1179826 temp98_137))
(assert (= temp98_138 #x0000000000000000))
(assert (= temp98_139 temp98_138))
(assert (= temp98_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_139)))
(assert (= temp98_141 #x0000000000000001))
(assert (= temp98_142 temp98_141))
(assert (= temp98_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_142)))
(assert (= temp98_144 #x0000000000000002))
(assert (= temp98_145 temp98_144))
(assert (= temp98_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_145)))
(assert (= temp98_147 #x0000000000000003))
(assert (= temp98_148 temp98_147))
(assert (= temp98_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_148)))
(assert (= temp98_150 #x0000000000000004))
(assert (= temp98_151 temp98_150))
(assert (= temp98_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_151)))
(assert (= temp98_153 #x0000000000000005))
(assert (= temp98_154 temp98_153))
(assert (= temp98_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_154)))
(assert (= temp98_157 var1179826))
(assert (= temp98_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_157)))
(assert (= temp98_156 temp98_158))
(assert (= var1191780
   (ite (bvslt temp98_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_159 #x0000000000000000))
(assert (= var1191780 temp98_159))
(assert (= temp98_160 #x0000000000000000))
(assert (= var1179826 temp98_160))
(assert (= temp98_162 var1179826))
(assert (= temp98_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_162)))
(assert (= temp98_161 temp98_163))
(assert (= var1191802 (bvsmod temp98_161 ARGNAME_groups_NAMEEND)))
(assert (= temp98_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp98_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp98_165 #x0000000000000001))
(assert (= var1191803 temp98_165))
(assert (= temp98_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp98_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_167 #x0000000000000001))
(assert (= var1191823 temp98_167))
(assert (= temp98_168 #x0000000000000001))
(assert (= var1180714 temp98_168))
(assert (= temp98_169 #x0000000000000000))
(assert (= temp98_170 temp98_169))
(assert (= temp98_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp98_170)))
(assert (= temp98_172 #x0000000000000001))
(assert (= temp98_173 temp98_172))
(assert (= temp98_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp98_173)))
(assert (= temp98_175 #x0000000000000002))
(assert (= temp98_176 temp98_175))
(assert (= temp98_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp98_176)))
(assert (= temp98_178 #x0000000000000003))
(assert (= temp98_179 temp98_178))
(assert (= temp98_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp98_179)))
(assert (= temp98_181 #x0000000000000004))
(assert (= temp98_182 temp98_181))
(assert (= temp98_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp98_182)))
(assert (= temp98_184 #x0000000000000005))
(assert (= temp98_185 temp98_184))
(assert (= temp98_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp98_185)))
(assert (= temp98_187 #x0000000000000000))
(assert (= temp98_188
   (ite (bvslt var1180714 temp98_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp98_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp98_188)))
(assert (= var1191831 temp98_189))
(assert (bvslt (ite (bvslt var1180714 temp98_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp98_190 #x0000000000000001))
(assert (= var1180714 temp98_190))
(assert (= temp98_192 var1180714))
(assert (= temp98_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_192)))
(assert (= temp98_191 temp98_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp98_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp98_194 #x0000000000000001))
(assert (= var1191836 temp98_194))
(assert (= temp98_195 #x0000000000000000))
(assert (= var1179826 temp98_195))
(assert (= temp98_197 var1179826))
(assert (= temp98_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_197)))
(assert (= temp98_196 temp98_198))
(assert (= temp98_199 #x0000000000000002))
(assert (= var1586025 temp98_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp98_200 #x0000000000000001))
(assert (= var1191993 temp98_200))
(assert (= temp98_201 #x0000000000000001))
(assert (= var2700303 temp98_201))
(assert (= temp98_202 #x0000000000000001))
(assert (= var2962447 temp98_202))
(assert (= temp98_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp98_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_204 #x0000000000000001))
(assert (= var211058 temp98_204))
(assert (= temp98_205 #x0000000000000001))
(assert (= var211188 temp98_205))
(assert (= var3879401 var211188))
(assert (= temp98_206 #x0000000000000000))
(assert (= var3866802 temp98_206))
(assert (= temp98_207 #x0000000000000000))
(assert (= temp98_208
   (ite (bvslt var3866802 temp98_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp98_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp98_208)))
(assert (= var3879420 temp98_209))
(assert (bvslt (ite (bvslt var3866802 temp98_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp98_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp98_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp98_211 #x0000000000000001))
(assert (= var3879421 temp98_211))
(assert (= temp98_212 #x0000000000000000))
(assert (= var4079423 temp98_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp98_213 #x0000000000000002))
(assert (= var4208259 temp98_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_214 #x0000000000000000))
(assert (= var4273820 temp98_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp98_216 #xffffffffffffffff))
(assert (= temp98_215 temp98_216))
(assert (= temp98_217 #x0000000000000001))
(assert (= var197674 temp98_217))
(assert (= temp98_218 #x0000000000000000))
(assert (= temp98_219
   (ite (bvslt var197674 temp98_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp98_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp98_219)))
(assert (= var211595 temp98_220))
(assert (bvslt (ite (bvslt var197674 temp98_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp98_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp98_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp98_222 #x0000000000000001))
(assert (= var211596 temp98_222))
(assert (= temp98_224 #xffffffffffffffff))
(assert (= temp98_223 temp98_224))
(assert (= temp98_225 #x0000000000000001))
(assert (= var211058 temp98_225))
(model-add temp98_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp98_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp98_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp98_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



