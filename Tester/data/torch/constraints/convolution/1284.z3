(declare-fun temp10442_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10442_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10442_3 () (_ BitVec 64))
(declare-fun temp10442_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10442_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10442_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10442_7 () (_ BitVec 64))
(declare-fun temp10442_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10442_9 () (_ BitVec 64))
(declare-fun temp10442_10 () (_ BitVec 64))
(declare-fun temp10442_11 () (_ BitVec 64))
(declare-fun temp10442_12 () (_ BitVec 64))
(declare-fun temp10442_13 () (_ BitVec 64))
(declare-fun temp10442_14 () (_ BitVec 64))
(declare-fun temp10442_15 () (_ BitVec 64))
(declare-fun temp10442_16 () (_ BitVec 64))
(declare-fun temp10442_17 () (_ BitVec 64))
(declare-fun temp10442_18 () (_ BitVec 64))
(declare-fun temp10442_19 () (_ BitVec 64))
(declare-fun temp10442_20 () (_ BitVec 64))
(declare-fun temp10442_21 () (_ BitVec 64))
(declare-fun temp10442_22 () (_ BitVec 64))
(declare-fun temp10442_23 () (_ BitVec 64))
(declare-fun temp10442_24 () (_ BitVec 64))
(declare-fun temp10442_25 () (_ BitVec 64))
(declare-fun temp10442_26 () (_ BitVec 64))
(declare-fun temp10442_27 () (_ BitVec 64))
(declare-fun temp10442_28 () (_ BitVec 64))
(declare-fun temp10442_29 () (_ BitVec 64))
(declare-fun temp10442_30 () (_ BitVec 64))
(declare-fun temp10442_31 () (_ BitVec 64))
(declare-fun temp10442_32 () (_ BitVec 64))
(declare-fun temp10442_33 () (_ BitVec 64))
(declare-fun temp10442_34 () (_ BitVec 64))
(declare-fun temp10442_35 () (_ BitVec 64))
(declare-fun temp10442_36 () (_ BitVec 64))
(declare-fun temp10442_37 () (_ BitVec 64))
(declare-fun temp10442_38 () (_ BitVec 64))
(declare-fun temp10442_39 () (_ BitVec 64))
(declare-fun temp10442_40 () (_ BitVec 64))
(declare-fun temp10442_41 () (_ BitVec 64))
(declare-fun temp10442_42 () (_ BitVec 64))
(declare-fun temp10442_43 () (_ BitVec 64))
(declare-fun temp10442_44 () (_ BitVec 64))
(declare-fun temp10442_45 () (_ BitVec 64))
(declare-fun temp10442_46 () (_ BitVec 64))
(declare-fun temp10442_47 () (_ BitVec 64))
(declare-fun temp10442_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10442_49 () (_ BitVec 64))
(declare-fun temp10442_50 () (_ BitVec 64))
(declare-fun temp10442_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10442_52 () (_ BitVec 64))
(declare-fun temp10442_53 () (_ BitVec 64))
(declare-fun temp10442_54 () (_ BitVec 64))
(declare-fun temp10442_55 () (_ BitVec 64))
(declare-fun temp10442_56 () (_ BitVec 64))
(declare-fun temp10442_57 () (_ BitVec 64))
(declare-fun temp10442_58 () (_ BitVec 64))
(declare-fun temp10442_59 () (_ BitVec 64))
(declare-fun temp10442_60 () (_ BitVec 64))
(declare-fun temp10442_61 () (_ BitVec 64))
(declare-fun temp10442_62 () (_ BitVec 64))
(declare-fun temp10442_63 () (_ BitVec 64))
(declare-fun temp10442_64 () (_ BitVec 64))
(declare-fun temp10442_65 () (_ BitVec 64))
(declare-fun temp10442_66 () (_ BitVec 64))
(declare-fun temp10442_67 () (_ BitVec 64))
(declare-fun temp10442_68 () (_ BitVec 64))
(declare-fun temp10442_69 () (_ BitVec 64))
(declare-fun temp10442_70 () (_ BitVec 64))
(declare-fun temp10442_71 () (_ BitVec 64))
(declare-fun temp10442_72 () (_ BitVec 64))
(declare-fun temp10442_73 () (_ BitVec 64))
(declare-fun temp10442_74 () (_ BitVec 64))
(declare-fun temp10442_75 () (_ BitVec 64))
(declare-fun temp10442_76 () (_ BitVec 64))
(declare-fun temp10442_77 () (_ BitVec 64))
(declare-fun temp10442_78 () (_ BitVec 64))
(declare-fun temp10442_79 () (_ BitVec 64))
(declare-fun temp10442_80 () (_ BitVec 64))
(declare-fun temp10442_81 () (_ BitVec 64))
(declare-fun temp10442_82 () (_ BitVec 64))
(declare-fun temp10442_83 () (_ BitVec 64))
(declare-fun temp10442_84 () (_ BitVec 64))
(declare-fun temp10442_85 () (_ BitVec 64))
(declare-fun temp10442_86 () (_ BitVec 64))
(declare-fun temp10442_87 () (_ BitVec 64))
(declare-fun temp10442_88 () (_ BitVec 64))
(declare-fun temp10442_89 () (_ BitVec 64))
(declare-fun temp10442_90 () (_ BitVec 64))
(declare-fun temp10442_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10442_92 () (_ BitVec 64))
(declare-fun temp10442_93 () (_ BitVec 64))
(declare-fun temp10442_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10442_95 () (_ BitVec 64))
(declare-fun temp10442_96 () (_ BitVec 64))
(declare-fun temp10442_97 () (_ BitVec 64))
(declare-fun temp10442_98 () (_ BitVec 64))
(declare-fun temp10442_99 () (_ BitVec 64))
(declare-fun temp10442_100 () (_ BitVec 64))
(declare-fun temp10442_101 () (_ BitVec 64))
(declare-fun temp10442_102 () (_ BitVec 64))
(declare-fun temp10442_103 () (_ BitVec 64))
(declare-fun temp10442_104 () (_ BitVec 64))
(declare-fun temp10442_105 () (_ BitVec 64))
(declare-fun temp10442_106 () (_ BitVec 64))
(declare-fun temp10442_107 () (_ BitVec 64))
(declare-fun temp10442_108 () (_ BitVec 64))
(declare-fun temp10442_109 () (_ BitVec 64))
(declare-fun temp10442_110 () (_ BitVec 64))
(declare-fun temp10442_111 () (_ BitVec 64))
(declare-fun temp10442_112 () (_ BitVec 64))
(declare-fun temp10442_113 () (_ BitVec 64))
(declare-fun temp10442_114 () (_ BitVec 64))
(declare-fun temp10442_115 () (_ BitVec 64))
(declare-fun temp10442_116 () (_ BitVec 64))
(declare-fun temp10442_117 () (_ BitVec 64))
(declare-fun temp10442_118 () (_ BitVec 64))
(declare-fun temp10442_119 () (_ BitVec 64))
(declare-fun temp10442_120 () (_ BitVec 64))
(declare-fun temp10442_121 () (_ BitVec 64))
(declare-fun temp10442_122 () (_ BitVec 64))
(declare-fun temp10442_123 () (_ BitVec 64))
(declare-fun temp10442_124 () (_ BitVec 64))
(declare-fun temp10442_125 () (_ BitVec 64))
(declare-fun temp10442_126 () (_ BitVec 64))
(declare-fun temp10442_127 () (_ BitVec 64))
(declare-fun temp10442_128 () (_ BitVec 64))
(declare-fun temp10442_129 () (_ BitVec 64))
(declare-fun temp10442_130 () (_ BitVec 64))
(declare-fun temp10442_131 () (_ BitVec 64))
(declare-fun temp10442_132 () (_ BitVec 64))
(declare-fun temp10442_133 () (_ BitVec 64))
(declare-fun temp10442_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10442_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10442_136 () (_ BitVec 64))
(declare-fun temp10442_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10442_138 () (_ BitVec 64))
(declare-fun temp10442_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10442_140 () (_ BitVec 64))
(declare-fun temp10442_141 () (_ BitVec 64))
(declare-fun temp10442_142 () (_ BitVec 64))
(declare-fun temp10442_143 () (_ BitVec 64))
(declare-fun temp10442_144 () (_ BitVec 64))
(declare-fun temp10442_145 () (_ BitVec 64))
(declare-fun temp10442_146 () (_ BitVec 64))
(declare-fun temp10442_147 () (_ BitVec 64))
(declare-fun temp10442_148 () (_ BitVec 64))
(declare-fun temp10442_149 () (_ BitVec 64))
(declare-fun temp10442_150 () (_ BitVec 64))
(declare-fun temp10442_151 () (_ BitVec 64))
(declare-fun temp10442_152 () (_ BitVec 64))
(declare-fun temp10442_153 () (_ BitVec 64))
(declare-fun temp10442_154 () (_ BitVec 64))
(declare-fun temp10442_155 () (_ BitVec 64))
(declare-fun temp10442_157 () (_ BitVec 64))
(declare-fun temp10442_158 () (_ BitVec 64))
(declare-fun temp10442_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10442_159 () (_ BitVec 64))
(declare-fun temp10442_160 () (_ BitVec 64))
(declare-fun temp10442_162 () (_ BitVec 64))
(declare-fun temp10442_163 () (_ BitVec 64))
(declare-fun temp10442_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10442_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10442_165 () (_ BitVec 64))
(declare-fun temp10442_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10442_167 () (_ BitVec 64))
(declare-fun temp10442_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10442_169 () (_ BitVec 64))
(declare-fun temp10442_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10442_171 () (_ BitVec 64))
(declare-fun temp10442_172 () (_ BitVec 64))
(declare-fun temp10442_173 () (_ BitVec 64))
(declare-fun temp10442_174 () (_ BitVec 64))
(declare-fun temp10442_175 () (_ BitVec 64))
(declare-fun temp10442_176 () (_ BitVec 64))
(declare-fun temp10442_177 () (_ BitVec 64))
(declare-fun temp10442_178 () (_ BitVec 64))
(declare-fun temp10442_179 () (_ BitVec 64))
(declare-fun temp10442_180 () (_ BitVec 64))
(declare-fun temp10442_181 () (_ BitVec 64))
(declare-fun temp10442_182 () (_ BitVec 64))
(declare-fun temp10442_183 () (_ BitVec 64))
(declare-fun temp10442_184 () (_ BitVec 64))
(declare-fun temp10442_185 () (_ BitVec 64))
(declare-fun temp10442_186 () (_ BitVec 64))
(declare-fun temp10442_187 () (_ BitVec 64))
(declare-fun temp10442_188 () (_ BitVec 64))
(declare-fun temp10442_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10442_190 () (_ BitVec 64))
(declare-fun temp10442_192 () (_ BitVec 64))
(declare-fun temp10442_193 () (_ BitVec 64))
(declare-fun temp10442_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10442_194 () (_ BitVec 64))
(declare-fun temp10442_195 () (_ BitVec 64))
(declare-fun temp10442_197 () (_ BitVec 64))
(declare-fun temp10442_198 () (_ BitVec 64))
(declare-fun temp10442_196 () (_ BitVec 64))
(declare-fun temp10442_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10442_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10442_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10442_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10442_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10442_204 () (_ BitVec 64))
(declare-fun temp10442_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10442_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10442_207 () (_ BitVec 64))
(declare-fun temp10442_208 () (_ BitVec 64))
(declare-fun temp10442_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10442_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10442_211 () (_ BitVec 64))
(declare-fun temp10442_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10442_213 () (_ BitVec 64))
(declare-fun temp10442_214 () (_ BitVec 64))
(declare-fun temp10442_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10442_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10442_217 () (_ BitVec 64))
(declare-fun temp10442_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10442_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10442_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp10442_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp10442_222 () (_ BitVec 64))
(declare-fun temp10442_223 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5060229 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun var5125773 () (_ BitVec 64))
(declare-fun temp10442_224 () (_ BitVec 64))
(assert (= temp10442_1 #x0000000000000001))
(assert (= var77203 temp10442_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10442_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10442_2)))
(assert (= temp10442_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10442_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10442_4 #x0000000000000000))
(assert (= var210941 temp10442_4))
(assert (= temp10442_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10442_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10442_6 #x0000000000000000))
(assert (= var210986 temp10442_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10442_7 #x0000000000000000))
(assert (= temp10442_8 temp10442_7))
(assert (= temp10442_9 (select ARGNAME_padding_NAMEEND_VAL temp10442_8)))
(assert (= temp10442_10 #x0000000000000001))
(assert (= temp10442_11 temp10442_10))
(assert (= temp10442_12 (select ARGNAME_padding_NAMEEND_VAL temp10442_11)))
(assert (= temp10442_13 #x0000000000000002))
(assert (= temp10442_14 temp10442_13))
(assert (= temp10442_15 (select ARGNAME_padding_NAMEEND_VAL temp10442_14)))
(assert (= temp10442_16 #x0000000000000003))
(assert (= temp10442_17 temp10442_16))
(assert (= temp10442_18 (select ARGNAME_padding_NAMEEND_VAL temp10442_17)))
(assert (= temp10442_19 #x0000000000000004))
(assert (= temp10442_20 temp10442_19))
(assert (= temp10442_21 (select ARGNAME_padding_NAMEEND_VAL temp10442_20)))
(assert (= temp10442_22 #x0000000000000005))
(assert (= temp10442_23 temp10442_22))
(assert (= temp10442_24 (select ARGNAME_padding_NAMEEND_VAL temp10442_23)))
(assert (= temp10442_25 #x0000000000000000))
(assert (= temp10442_26 #x0000000000000000))
(assert (= temp10442_27 temp10442_26))
(assert (= temp10442_28 (select ARGNAME_padding_NAMEEND_VAL temp10442_27)))
(assert (= temp10442_29 #x0000000000000000))
(assert (= temp10442_30 #x0000000000000001))
(assert (= temp10442_31 temp10442_30))
(assert (= temp10442_32 (select ARGNAME_padding_NAMEEND_VAL temp10442_31)))
(assert (= temp10442_33 #x0000000000000000))
(assert (= temp10442_34 #x0000000000000002))
(assert (= temp10442_35 temp10442_34))
(assert (= temp10442_36 (select ARGNAME_padding_NAMEEND_VAL temp10442_35)))
(assert (= temp10442_37 #x0000000000000000))
(assert (= temp10442_38 #x0000000000000003))
(assert (= temp10442_39 temp10442_38))
(assert (= temp10442_40 (select ARGNAME_padding_NAMEEND_VAL temp10442_39)))
(assert (= temp10442_41 #x0000000000000000))
(assert (= temp10442_42 #x0000000000000004))
(assert (= temp10442_43 temp10442_42))
(assert (= temp10442_44 (select ARGNAME_padding_NAMEEND_VAL temp10442_43)))
(assert (= temp10442_45 #x0000000000000000))
(assert (= temp10442_46 #x0000000000000005))
(assert (= temp10442_47 temp10442_46))
(assert (= temp10442_48 (select ARGNAME_padding_NAMEEND_VAL temp10442_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10442_28 temp10442_25)
             (bvslt temp10442_32 temp10442_29)
             (bvslt temp10442_36 temp10442_33)
             (bvslt temp10442_40 temp10442_37)
             (bvslt temp10442_44 temp10442_41)
             (bvslt temp10442_48 temp10442_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10442_49 #x0000000000000000))
(assert (= var1191714 temp10442_49))
(assert (= temp10442_50 #x0000000000000000))
(assert (= temp10442_51 temp10442_50))
(assert (= temp10442_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10442_51)))
(assert (= temp10442_53 #x0000000000000001))
(assert (= temp10442_54 temp10442_53))
(assert (= temp10442_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10442_54)))
(assert (= temp10442_56 #x0000000000000002))
(assert (= temp10442_57 temp10442_56))
(assert (= temp10442_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10442_57)))
(assert (= temp10442_59 #x0000000000000003))
(assert (= temp10442_60 temp10442_59))
(assert (= temp10442_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10442_60)))
(assert (= temp10442_62 #x0000000000000004))
(assert (= temp10442_63 temp10442_62))
(assert (= temp10442_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10442_63)))
(assert (= temp10442_65 #x0000000000000005))
(assert (= temp10442_66 temp10442_65))
(assert (= temp10442_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10442_66)))
(assert (= temp10442_68 #x0000000000000000))
(assert (= temp10442_69 #x0000000000000000))
(assert (= temp10442_70 temp10442_69))
(assert (= temp10442_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10442_70)))
(assert (= temp10442_72 #x0000000000000000))
(assert (= temp10442_73 #x0000000000000001))
(assert (= temp10442_74 temp10442_73))
(assert (= temp10442_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10442_74)))
(assert (= temp10442_76 #x0000000000000000))
(assert (= temp10442_77 #x0000000000000002))
(assert (= temp10442_78 temp10442_77))
(assert (= temp10442_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10442_78)))
(assert (= temp10442_80 #x0000000000000000))
(assert (= temp10442_81 #x0000000000000003))
(assert (= temp10442_82 temp10442_81))
(assert (= temp10442_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10442_82)))
(assert (= temp10442_84 #x0000000000000000))
(assert (= temp10442_85 #x0000000000000004))
(assert (= temp10442_86 temp10442_85))
(assert (= temp10442_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10442_86)))
(assert (= temp10442_88 #x0000000000000000))
(assert (= temp10442_89 #x0000000000000005))
(assert (= temp10442_90 temp10442_89))
(assert (= temp10442_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10442_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10442_71 temp10442_68)
             (bvslt temp10442_75 temp10442_72)
             (bvslt temp10442_79 temp10442_76)
             (bvslt temp10442_83 temp10442_80)
             (bvslt temp10442_87 temp10442_84)
             (bvslt temp10442_91 temp10442_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10442_92 #x0000000000000000))
(assert (= var1191725 temp10442_92))
(assert (= temp10442_93 #x0000000000000000))
(assert (= temp10442_94 temp10442_93))
(assert (= temp10442_95 (select ARGNAME_stride_NAMEEND_VAL temp10442_94)))
(assert (= temp10442_96 #x0000000000000001))
(assert (= temp10442_97 temp10442_96))
(assert (= temp10442_98 (select ARGNAME_stride_NAMEEND_VAL temp10442_97)))
(assert (= temp10442_99 #x0000000000000002))
(assert (= temp10442_100 temp10442_99))
(assert (= temp10442_101 (select ARGNAME_stride_NAMEEND_VAL temp10442_100)))
(assert (= temp10442_102 #x0000000000000003))
(assert (= temp10442_103 temp10442_102))
(assert (= temp10442_104 (select ARGNAME_stride_NAMEEND_VAL temp10442_103)))
(assert (= temp10442_105 #x0000000000000004))
(assert (= temp10442_106 temp10442_105))
(assert (= temp10442_107 (select ARGNAME_stride_NAMEEND_VAL temp10442_106)))
(assert (= temp10442_108 #x0000000000000005))
(assert (= temp10442_109 temp10442_108))
(assert (= temp10442_110 (select ARGNAME_stride_NAMEEND_VAL temp10442_109)))
(assert (= temp10442_111 #x0000000000000000))
(assert (= temp10442_112 #x0000000000000000))
(assert (= temp10442_113 temp10442_112))
(assert (= temp10442_114 (select ARGNAME_stride_NAMEEND_VAL temp10442_113)))
(assert (= temp10442_115 #x0000000000000000))
(assert (= temp10442_116 #x0000000000000001))
(assert (= temp10442_117 temp10442_116))
(assert (= temp10442_118 (select ARGNAME_stride_NAMEEND_VAL temp10442_117)))
(assert (= temp10442_119 #x0000000000000000))
(assert (= temp10442_120 #x0000000000000002))
(assert (= temp10442_121 temp10442_120))
(assert (= temp10442_122 (select ARGNAME_stride_NAMEEND_VAL temp10442_121)))
(assert (= temp10442_123 #x0000000000000000))
(assert (= temp10442_124 #x0000000000000003))
(assert (= temp10442_125 temp10442_124))
(assert (= temp10442_126 (select ARGNAME_stride_NAMEEND_VAL temp10442_125)))
(assert (= temp10442_127 #x0000000000000000))
(assert (= temp10442_128 #x0000000000000004))
(assert (= temp10442_129 temp10442_128))
(assert (= temp10442_130 (select ARGNAME_stride_NAMEEND_VAL temp10442_129)))
(assert (= temp10442_131 #x0000000000000000))
(assert (= temp10442_132 #x0000000000000005))
(assert (= temp10442_133 temp10442_132))
(assert (= temp10442_134 (select ARGNAME_stride_NAMEEND_VAL temp10442_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10442_114 temp10442_111)
             (bvsle temp10442_118 temp10442_115)
             (bvsle temp10442_122 temp10442_119)
             (bvsle temp10442_126 temp10442_123)
             (bvsle temp10442_130 temp10442_127)
             (bvsle temp10442_134 temp10442_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10442_135 #x0000000000000000))
(assert (= var1191735 temp10442_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10442_136 #x0000000000000001))
(assert (= var1191747 temp10442_136))
(assert (= temp10442_137 #x0000000000000000))
(assert (= var1179826 temp10442_137))
(assert (= temp10442_138 #x0000000000000000))
(assert (= temp10442_139 temp10442_138))
(assert (= temp10442_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10442_139)))
(assert (= temp10442_141 #x0000000000000001))
(assert (= temp10442_142 temp10442_141))
(assert (= temp10442_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10442_142)))
(assert (= temp10442_144 #x0000000000000002))
(assert (= temp10442_145 temp10442_144))
(assert (= temp10442_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10442_145)))
(assert (= temp10442_147 #x0000000000000003))
(assert (= temp10442_148 temp10442_147))
(assert (= temp10442_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10442_148)))
(assert (= temp10442_150 #x0000000000000004))
(assert (= temp10442_151 temp10442_150))
(assert (= temp10442_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10442_151)))
(assert (= temp10442_153 #x0000000000000005))
(assert (= temp10442_154 temp10442_153))
(assert (= temp10442_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10442_154)))
(assert (= temp10442_157 var1179826))
(assert (= temp10442_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10442_157)))
(assert (= temp10442_156 temp10442_158))
(assert (= var1191780
   (ite (bvslt temp10442_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10442_159 #x0000000000000000))
(assert (= var1191780 temp10442_159))
(assert (= temp10442_160 #x0000000000000000))
(assert (= var1179826 temp10442_160))
(assert (= temp10442_162 var1179826))
(assert (= temp10442_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10442_162)))
(assert (= temp10442_161 temp10442_163))
(assert (= var1191802 (bvsmod temp10442_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10442_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10442_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10442_165 #x0000000000000001))
(assert (= var1191803 temp10442_165))
(assert (= temp10442_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10442_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10442_167 #x0000000000000001))
(assert (= var1191823 temp10442_167))
(assert (= temp10442_168 #x0000000000000001))
(assert (= var1180714 temp10442_168))
(assert (= temp10442_169 #x0000000000000000))
(assert (= temp10442_170 temp10442_169))
(assert (= temp10442_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10442_170)))
(assert (= temp10442_172 #x0000000000000001))
(assert (= temp10442_173 temp10442_172))
(assert (= temp10442_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10442_173)))
(assert (= temp10442_175 #x0000000000000002))
(assert (= temp10442_176 temp10442_175))
(assert (= temp10442_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10442_176)))
(assert (= temp10442_178 #x0000000000000003))
(assert (= temp10442_179 temp10442_178))
(assert (= temp10442_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10442_179)))
(assert (= temp10442_181 #x0000000000000004))
(assert (= temp10442_182 temp10442_181))
(assert (= temp10442_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10442_182)))
(assert (= temp10442_184 #x0000000000000005))
(assert (= temp10442_185 temp10442_184))
(assert (= temp10442_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10442_185)))
(assert (= temp10442_187 #x0000000000000000))
(assert (= temp10442_188
   (ite (bvslt var1180714 temp10442_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10442_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10442_188)))
(assert (= var1191831 temp10442_189))
(assert (bvslt (ite (bvslt var1180714 temp10442_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10442_190 #x0000000000000001))
(assert (= var1180714 temp10442_190))
(assert (= temp10442_192 var1180714))
(assert (= temp10442_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10442_192)))
(assert (= temp10442_191 temp10442_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10442_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10442_194 #x0000000000000001))
(assert (= var1191836 temp10442_194))
(assert (= temp10442_195 #x0000000000000000))
(assert (= var1179826 temp10442_195))
(assert (= temp10442_197 var1179826))
(assert (= temp10442_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10442_197)))
(assert (= temp10442_196 temp10442_198))
(assert (= temp10442_199 #x0000000000000002))
(assert (= var1586025 temp10442_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10442_200 #x0000000000000001))
(assert (= var1191993 temp10442_200))
(assert (= temp10442_201 #x0000000000000001))
(assert (= var2700303 temp10442_201))
(assert (= temp10442_202 #x0000000000000001))
(assert (= var2962447 temp10442_202))
(assert (= temp10442_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10442_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10442_204 #x0000000000000001))
(assert (= var211058 temp10442_204))
(assert (= temp10442_205 #x0000000000000001))
(assert (= var211188 temp10442_205))
(assert (= var3879401 var211188))
(assert (= temp10442_206 #x0000000000000000))
(assert (= var3866802 temp10442_206))
(assert (= temp10442_207 #x0000000000000000))
(assert (= temp10442_208
   (ite (bvslt var3866802 temp10442_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10442_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10442_208)))
(assert (= var3879420 temp10442_209))
(assert (bvslt (ite (bvslt var3866802 temp10442_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10442_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10442_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10442_211 #x0000000000000000))
(assert (= var3879421 temp10442_211))
(assert (= temp10442_212 #x0000000000000001))
(assert (= var3867690 temp10442_212))
(assert (= temp10442_213 #x0000000000000000))
(assert (= temp10442_214
   (ite (bvslt var3867690 temp10442_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10442_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10442_214)))
(assert (= var3879423 temp10442_215))
(assert (bvslt (ite (bvslt var3867690 temp10442_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10442_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10442_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10442_217 #x0000000000000001))
(assert (= var3879424 temp10442_217))
(assert (= temp10442_218 #x0000000000000000))
(assert (= var4079423 temp10442_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10442_219 #x0000000000000002))
(assert (= var4208259 temp10442_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10442_220 #x0000000000000000))
(assert (= var4273820 temp10442_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp10442_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp10442_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10442_222 #x0000000000000001))
(assert (= var212414 temp10442_222))
(assert (= temp10442_223 #x0000000000000002))
(assert (= var5060227 temp10442_223))
(assert (= var5060229 (bvsub ARGNAME_weight_NAMEEND_DIM var5060227)))
(assert (= var5125772 var5060227))
(assert (= var5125773 var5060229))
(assert (= temp10442_224 #x0000000000000001))
(assert (= var211058 temp10442_224))
(model-add temp10442_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10442_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10442_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10442_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



