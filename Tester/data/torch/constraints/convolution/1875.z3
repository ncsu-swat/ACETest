(declare-fun temp11358_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11358_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11358_3 () (_ BitVec 64))
(declare-fun temp11358_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11358_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11358_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11358_7 () (_ BitVec 64))
(declare-fun temp11358_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11358_9 () (_ BitVec 64))
(declare-fun temp11358_10 () (_ BitVec 64))
(declare-fun temp11358_11 () (_ BitVec 64))
(declare-fun temp11358_12 () (_ BitVec 64))
(declare-fun temp11358_13 () (_ BitVec 64))
(declare-fun temp11358_14 () (_ BitVec 64))
(declare-fun temp11358_15 () (_ BitVec 64))
(declare-fun temp11358_16 () (_ BitVec 64))
(declare-fun temp11358_17 () (_ BitVec 64))
(declare-fun temp11358_18 () (_ BitVec 64))
(declare-fun temp11358_19 () (_ BitVec 64))
(declare-fun temp11358_20 () (_ BitVec 64))
(declare-fun temp11358_21 () (_ BitVec 64))
(declare-fun temp11358_22 () (_ BitVec 64))
(declare-fun temp11358_23 () (_ BitVec 64))
(declare-fun temp11358_24 () (_ BitVec 64))
(declare-fun temp11358_25 () (_ BitVec 64))
(declare-fun temp11358_26 () (_ BitVec 64))
(declare-fun temp11358_27 () (_ BitVec 64))
(declare-fun temp11358_28 () (_ BitVec 64))
(declare-fun temp11358_29 () (_ BitVec 64))
(declare-fun temp11358_30 () (_ BitVec 64))
(declare-fun temp11358_31 () (_ BitVec 64))
(declare-fun temp11358_32 () (_ BitVec 64))
(declare-fun temp11358_33 () (_ BitVec 64))
(declare-fun temp11358_34 () (_ BitVec 64))
(declare-fun temp11358_35 () (_ BitVec 64))
(declare-fun temp11358_36 () (_ BitVec 64))
(declare-fun temp11358_37 () (_ BitVec 64))
(declare-fun temp11358_38 () (_ BitVec 64))
(declare-fun temp11358_39 () (_ BitVec 64))
(declare-fun temp11358_40 () (_ BitVec 64))
(declare-fun temp11358_41 () (_ BitVec 64))
(declare-fun temp11358_42 () (_ BitVec 64))
(declare-fun temp11358_43 () (_ BitVec 64))
(declare-fun temp11358_44 () (_ BitVec 64))
(declare-fun temp11358_45 () (_ BitVec 64))
(declare-fun temp11358_46 () (_ BitVec 64))
(declare-fun temp11358_47 () (_ BitVec 64))
(declare-fun temp11358_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11358_49 () (_ BitVec 64))
(declare-fun temp11358_50 () (_ BitVec 64))
(declare-fun temp11358_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11358_52 () (_ BitVec 64))
(declare-fun temp11358_53 () (_ BitVec 64))
(declare-fun temp11358_54 () (_ BitVec 64))
(declare-fun temp11358_55 () (_ BitVec 64))
(declare-fun temp11358_56 () (_ BitVec 64))
(declare-fun temp11358_57 () (_ BitVec 64))
(declare-fun temp11358_58 () (_ BitVec 64))
(declare-fun temp11358_59 () (_ BitVec 64))
(declare-fun temp11358_60 () (_ BitVec 64))
(declare-fun temp11358_61 () (_ BitVec 64))
(declare-fun temp11358_62 () (_ BitVec 64))
(declare-fun temp11358_63 () (_ BitVec 64))
(declare-fun temp11358_64 () (_ BitVec 64))
(declare-fun temp11358_65 () (_ BitVec 64))
(declare-fun temp11358_66 () (_ BitVec 64))
(declare-fun temp11358_67 () (_ BitVec 64))
(declare-fun temp11358_68 () (_ BitVec 64))
(declare-fun temp11358_69 () (_ BitVec 64))
(declare-fun temp11358_70 () (_ BitVec 64))
(declare-fun temp11358_71 () (_ BitVec 64))
(declare-fun temp11358_72 () (_ BitVec 64))
(declare-fun temp11358_73 () (_ BitVec 64))
(declare-fun temp11358_74 () (_ BitVec 64))
(declare-fun temp11358_75 () (_ BitVec 64))
(declare-fun temp11358_76 () (_ BitVec 64))
(declare-fun temp11358_77 () (_ BitVec 64))
(declare-fun temp11358_78 () (_ BitVec 64))
(declare-fun temp11358_79 () (_ BitVec 64))
(declare-fun temp11358_80 () (_ BitVec 64))
(declare-fun temp11358_81 () (_ BitVec 64))
(declare-fun temp11358_82 () (_ BitVec 64))
(declare-fun temp11358_83 () (_ BitVec 64))
(declare-fun temp11358_84 () (_ BitVec 64))
(declare-fun temp11358_85 () (_ BitVec 64))
(declare-fun temp11358_86 () (_ BitVec 64))
(declare-fun temp11358_87 () (_ BitVec 64))
(declare-fun temp11358_88 () (_ BitVec 64))
(declare-fun temp11358_89 () (_ BitVec 64))
(declare-fun temp11358_90 () (_ BitVec 64))
(declare-fun temp11358_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11358_92 () (_ BitVec 64))
(declare-fun temp11358_93 () (_ BitVec 64))
(declare-fun temp11358_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11358_95 () (_ BitVec 64))
(declare-fun temp11358_96 () (_ BitVec 64))
(declare-fun temp11358_97 () (_ BitVec 64))
(declare-fun temp11358_98 () (_ BitVec 64))
(declare-fun temp11358_99 () (_ BitVec 64))
(declare-fun temp11358_100 () (_ BitVec 64))
(declare-fun temp11358_101 () (_ BitVec 64))
(declare-fun temp11358_102 () (_ BitVec 64))
(declare-fun temp11358_103 () (_ BitVec 64))
(declare-fun temp11358_104 () (_ BitVec 64))
(declare-fun temp11358_105 () (_ BitVec 64))
(declare-fun temp11358_106 () (_ BitVec 64))
(declare-fun temp11358_107 () (_ BitVec 64))
(declare-fun temp11358_108 () (_ BitVec 64))
(declare-fun temp11358_109 () (_ BitVec 64))
(declare-fun temp11358_110 () (_ BitVec 64))
(declare-fun temp11358_111 () (_ BitVec 64))
(declare-fun temp11358_112 () (_ BitVec 64))
(declare-fun temp11358_113 () (_ BitVec 64))
(declare-fun temp11358_114 () (_ BitVec 64))
(declare-fun temp11358_115 () (_ BitVec 64))
(declare-fun temp11358_116 () (_ BitVec 64))
(declare-fun temp11358_117 () (_ BitVec 64))
(declare-fun temp11358_118 () (_ BitVec 64))
(declare-fun temp11358_119 () (_ BitVec 64))
(declare-fun temp11358_120 () (_ BitVec 64))
(declare-fun temp11358_121 () (_ BitVec 64))
(declare-fun temp11358_122 () (_ BitVec 64))
(declare-fun temp11358_123 () (_ BitVec 64))
(declare-fun temp11358_124 () (_ BitVec 64))
(declare-fun temp11358_125 () (_ BitVec 64))
(declare-fun temp11358_126 () (_ BitVec 64))
(declare-fun temp11358_127 () (_ BitVec 64))
(declare-fun temp11358_128 () (_ BitVec 64))
(declare-fun temp11358_129 () (_ BitVec 64))
(declare-fun temp11358_130 () (_ BitVec 64))
(declare-fun temp11358_131 () (_ BitVec 64))
(declare-fun temp11358_132 () (_ BitVec 64))
(declare-fun temp11358_133 () (_ BitVec 64))
(declare-fun temp11358_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11358_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11358_136 () (_ BitVec 64))
(declare-fun temp11358_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11358_138 () (_ BitVec 64))
(declare-fun temp11358_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11358_140 () (_ BitVec 64))
(declare-fun temp11358_141 () (_ BitVec 64))
(declare-fun temp11358_142 () (_ BitVec 64))
(declare-fun temp11358_143 () (_ BitVec 64))
(declare-fun temp11358_144 () (_ BitVec 64))
(declare-fun temp11358_145 () (_ BitVec 64))
(declare-fun temp11358_146 () (_ BitVec 64))
(declare-fun temp11358_147 () (_ BitVec 64))
(declare-fun temp11358_148 () (_ BitVec 64))
(declare-fun temp11358_149 () (_ BitVec 64))
(declare-fun temp11358_150 () (_ BitVec 64))
(declare-fun temp11358_151 () (_ BitVec 64))
(declare-fun temp11358_152 () (_ BitVec 64))
(declare-fun temp11358_153 () (_ BitVec 64))
(declare-fun temp11358_154 () (_ BitVec 64))
(declare-fun temp11358_155 () (_ BitVec 64))
(declare-fun temp11358_157 () (_ BitVec 64))
(declare-fun temp11358_158 () (_ BitVec 64))
(declare-fun temp11358_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11358_159 () (_ BitVec 64))
(declare-fun temp11358_160 () (_ BitVec 64))
(declare-fun temp11358_162 () (_ BitVec 64))
(declare-fun temp11358_163 () (_ BitVec 64))
(declare-fun temp11358_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11358_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11358_165 () (_ BitVec 64))
(declare-fun temp11358_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11358_167 () (_ BitVec 64))
(declare-fun temp11358_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11358_169 () (_ BitVec 64))
(declare-fun temp11358_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11358_171 () (_ BitVec 64))
(declare-fun temp11358_172 () (_ BitVec 64))
(declare-fun temp11358_173 () (_ BitVec 64))
(declare-fun temp11358_174 () (_ BitVec 64))
(declare-fun temp11358_175 () (_ BitVec 64))
(declare-fun temp11358_176 () (_ BitVec 64))
(declare-fun temp11358_177 () (_ BitVec 64))
(declare-fun temp11358_178 () (_ BitVec 64))
(declare-fun temp11358_179 () (_ BitVec 64))
(declare-fun temp11358_180 () (_ BitVec 64))
(declare-fun temp11358_181 () (_ BitVec 64))
(declare-fun temp11358_182 () (_ BitVec 64))
(declare-fun temp11358_183 () (_ BitVec 64))
(declare-fun temp11358_184 () (_ BitVec 64))
(declare-fun temp11358_185 () (_ BitVec 64))
(declare-fun temp11358_186 () (_ BitVec 64))
(declare-fun temp11358_187 () (_ BitVec 64))
(declare-fun temp11358_188 () (_ BitVec 64))
(declare-fun temp11358_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11358_190 () (_ BitVec 64))
(declare-fun temp11358_192 () (_ BitVec 64))
(declare-fun temp11358_193 () (_ BitVec 64))
(declare-fun temp11358_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11358_194 () (_ BitVec 64))
(declare-fun temp11358_195 () (_ BitVec 64))
(declare-fun temp11358_197 () (_ BitVec 64))
(declare-fun temp11358_198 () (_ BitVec 64))
(declare-fun temp11358_196 () (_ BitVec 64))
(declare-fun temp11358_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11358_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11358_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11358_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11358_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11358_204 () (_ BitVec 64))
(declare-fun temp11358_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11358_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11358_207 () (_ BitVec 64))
(declare-fun temp11358_208 () (_ BitVec 64))
(declare-fun temp11358_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11358_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11358_211 () (_ BitVec 64))
(declare-fun temp11358_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11358_213 () (_ BitVec 64))
(declare-fun temp11358_214 () (_ BitVec 64))
(declare-fun temp11358_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11358_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11358_217 () (_ BitVec 64))
(declare-fun temp11358_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11358_219 () (_ BitVec 64))
(declare-fun var4404867 () (_ BitVec 64))
(declare-fun var4404869 () (_ BitVec 64))
(declare-fun var4470412 () (_ BitVec 64))
(declare-fun var4470413 () (_ BitVec 64))
(declare-fun var4470426 () (_ BitVec 64))
(declare-fun var4470428 () (_ BitVec 64))
(declare-fun temp11358_220 () (_ BitVec 64))
(declare-fun var4470453 () (_ BitVec 64))
(declare-fun var4470455 () (_ BitVec 64))
(declare-fun var4591443 () (_ BitVec 64))
(declare-fun temp11358_221 () (_ BitVec 64))
(assert (= temp11358_1 #x0000000000000001))
(assert (= var77203 temp11358_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11358_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11358_2)))
(assert (= temp11358_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11358_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11358_4 #x0000000000000000))
(assert (= var210941 temp11358_4))
(assert (= temp11358_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11358_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11358_6 #x0000000000000000))
(assert (= var210986 temp11358_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11358_7 #x0000000000000000))
(assert (= temp11358_8 temp11358_7))
(assert (= temp11358_9 (select ARGNAME_padding_NAMEEND_VAL temp11358_8)))
(assert (= temp11358_10 #x0000000000000001))
(assert (= temp11358_11 temp11358_10))
(assert (= temp11358_12 (select ARGNAME_padding_NAMEEND_VAL temp11358_11)))
(assert (= temp11358_13 #x0000000000000002))
(assert (= temp11358_14 temp11358_13))
(assert (= temp11358_15 (select ARGNAME_padding_NAMEEND_VAL temp11358_14)))
(assert (= temp11358_16 #x0000000000000003))
(assert (= temp11358_17 temp11358_16))
(assert (= temp11358_18 (select ARGNAME_padding_NAMEEND_VAL temp11358_17)))
(assert (= temp11358_19 #x0000000000000004))
(assert (= temp11358_20 temp11358_19))
(assert (= temp11358_21 (select ARGNAME_padding_NAMEEND_VAL temp11358_20)))
(assert (= temp11358_22 #x0000000000000005))
(assert (= temp11358_23 temp11358_22))
(assert (= temp11358_24 (select ARGNAME_padding_NAMEEND_VAL temp11358_23)))
(assert (= temp11358_25 #x0000000000000000))
(assert (= temp11358_26 #x0000000000000000))
(assert (= temp11358_27 temp11358_26))
(assert (= temp11358_28 (select ARGNAME_padding_NAMEEND_VAL temp11358_27)))
(assert (= temp11358_29 #x0000000000000000))
(assert (= temp11358_30 #x0000000000000001))
(assert (= temp11358_31 temp11358_30))
(assert (= temp11358_32 (select ARGNAME_padding_NAMEEND_VAL temp11358_31)))
(assert (= temp11358_33 #x0000000000000000))
(assert (= temp11358_34 #x0000000000000002))
(assert (= temp11358_35 temp11358_34))
(assert (= temp11358_36 (select ARGNAME_padding_NAMEEND_VAL temp11358_35)))
(assert (= temp11358_37 #x0000000000000000))
(assert (= temp11358_38 #x0000000000000003))
(assert (= temp11358_39 temp11358_38))
(assert (= temp11358_40 (select ARGNAME_padding_NAMEEND_VAL temp11358_39)))
(assert (= temp11358_41 #x0000000000000000))
(assert (= temp11358_42 #x0000000000000004))
(assert (= temp11358_43 temp11358_42))
(assert (= temp11358_44 (select ARGNAME_padding_NAMEEND_VAL temp11358_43)))
(assert (= temp11358_45 #x0000000000000000))
(assert (= temp11358_46 #x0000000000000005))
(assert (= temp11358_47 temp11358_46))
(assert (= temp11358_48 (select ARGNAME_padding_NAMEEND_VAL temp11358_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11358_28 temp11358_25)
             (bvslt temp11358_32 temp11358_29)
             (bvslt temp11358_36 temp11358_33)
             (bvslt temp11358_40 temp11358_37)
             (bvslt temp11358_44 temp11358_41)
             (bvslt temp11358_48 temp11358_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11358_49 #x0000000000000000))
(assert (= var1191714 temp11358_49))
(assert (= temp11358_50 #x0000000000000000))
(assert (= temp11358_51 temp11358_50))
(assert (= temp11358_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11358_51)))
(assert (= temp11358_53 #x0000000000000001))
(assert (= temp11358_54 temp11358_53))
(assert (= temp11358_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11358_54)))
(assert (= temp11358_56 #x0000000000000002))
(assert (= temp11358_57 temp11358_56))
(assert (= temp11358_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11358_57)))
(assert (= temp11358_59 #x0000000000000003))
(assert (= temp11358_60 temp11358_59))
(assert (= temp11358_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11358_60)))
(assert (= temp11358_62 #x0000000000000004))
(assert (= temp11358_63 temp11358_62))
(assert (= temp11358_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11358_63)))
(assert (= temp11358_65 #x0000000000000005))
(assert (= temp11358_66 temp11358_65))
(assert (= temp11358_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11358_66)))
(assert (= temp11358_68 #x0000000000000000))
(assert (= temp11358_69 #x0000000000000000))
(assert (= temp11358_70 temp11358_69))
(assert (= temp11358_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11358_70)))
(assert (= temp11358_72 #x0000000000000000))
(assert (= temp11358_73 #x0000000000000001))
(assert (= temp11358_74 temp11358_73))
(assert (= temp11358_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11358_74)))
(assert (= temp11358_76 #x0000000000000000))
(assert (= temp11358_77 #x0000000000000002))
(assert (= temp11358_78 temp11358_77))
(assert (= temp11358_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11358_78)))
(assert (= temp11358_80 #x0000000000000000))
(assert (= temp11358_81 #x0000000000000003))
(assert (= temp11358_82 temp11358_81))
(assert (= temp11358_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11358_82)))
(assert (= temp11358_84 #x0000000000000000))
(assert (= temp11358_85 #x0000000000000004))
(assert (= temp11358_86 temp11358_85))
(assert (= temp11358_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11358_86)))
(assert (= temp11358_88 #x0000000000000000))
(assert (= temp11358_89 #x0000000000000005))
(assert (= temp11358_90 temp11358_89))
(assert (= temp11358_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11358_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11358_71 temp11358_68)
             (bvslt temp11358_75 temp11358_72)
             (bvslt temp11358_79 temp11358_76)
             (bvslt temp11358_83 temp11358_80)
             (bvslt temp11358_87 temp11358_84)
             (bvslt temp11358_91 temp11358_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11358_92 #x0000000000000000))
(assert (= var1191725 temp11358_92))
(assert (= temp11358_93 #x0000000000000000))
(assert (= temp11358_94 temp11358_93))
(assert (= temp11358_95 (select ARGNAME_stride_NAMEEND_VAL temp11358_94)))
(assert (= temp11358_96 #x0000000000000001))
(assert (= temp11358_97 temp11358_96))
(assert (= temp11358_98 (select ARGNAME_stride_NAMEEND_VAL temp11358_97)))
(assert (= temp11358_99 #x0000000000000002))
(assert (= temp11358_100 temp11358_99))
(assert (= temp11358_101 (select ARGNAME_stride_NAMEEND_VAL temp11358_100)))
(assert (= temp11358_102 #x0000000000000003))
(assert (= temp11358_103 temp11358_102))
(assert (= temp11358_104 (select ARGNAME_stride_NAMEEND_VAL temp11358_103)))
(assert (= temp11358_105 #x0000000000000004))
(assert (= temp11358_106 temp11358_105))
(assert (= temp11358_107 (select ARGNAME_stride_NAMEEND_VAL temp11358_106)))
(assert (= temp11358_108 #x0000000000000005))
(assert (= temp11358_109 temp11358_108))
(assert (= temp11358_110 (select ARGNAME_stride_NAMEEND_VAL temp11358_109)))
(assert (= temp11358_111 #x0000000000000000))
(assert (= temp11358_112 #x0000000000000000))
(assert (= temp11358_113 temp11358_112))
(assert (= temp11358_114 (select ARGNAME_stride_NAMEEND_VAL temp11358_113)))
(assert (= temp11358_115 #x0000000000000000))
(assert (= temp11358_116 #x0000000000000001))
(assert (= temp11358_117 temp11358_116))
(assert (= temp11358_118 (select ARGNAME_stride_NAMEEND_VAL temp11358_117)))
(assert (= temp11358_119 #x0000000000000000))
(assert (= temp11358_120 #x0000000000000002))
(assert (= temp11358_121 temp11358_120))
(assert (= temp11358_122 (select ARGNAME_stride_NAMEEND_VAL temp11358_121)))
(assert (= temp11358_123 #x0000000000000000))
(assert (= temp11358_124 #x0000000000000003))
(assert (= temp11358_125 temp11358_124))
(assert (= temp11358_126 (select ARGNAME_stride_NAMEEND_VAL temp11358_125)))
(assert (= temp11358_127 #x0000000000000000))
(assert (= temp11358_128 #x0000000000000004))
(assert (= temp11358_129 temp11358_128))
(assert (= temp11358_130 (select ARGNAME_stride_NAMEEND_VAL temp11358_129)))
(assert (= temp11358_131 #x0000000000000000))
(assert (= temp11358_132 #x0000000000000005))
(assert (= temp11358_133 temp11358_132))
(assert (= temp11358_134 (select ARGNAME_stride_NAMEEND_VAL temp11358_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11358_114 temp11358_111)
             (bvsle temp11358_118 temp11358_115)
             (bvsle temp11358_122 temp11358_119)
             (bvsle temp11358_126 temp11358_123)
             (bvsle temp11358_130 temp11358_127)
             (bvsle temp11358_134 temp11358_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11358_135 #x0000000000000000))
(assert (= var1191735 temp11358_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11358_136 #x0000000000000001))
(assert (= var1191747 temp11358_136))
(assert (= temp11358_137 #x0000000000000000))
(assert (= var1179826 temp11358_137))
(assert (= temp11358_138 #x0000000000000000))
(assert (= temp11358_139 temp11358_138))
(assert (= temp11358_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11358_139)))
(assert (= temp11358_141 #x0000000000000001))
(assert (= temp11358_142 temp11358_141))
(assert (= temp11358_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11358_142)))
(assert (= temp11358_144 #x0000000000000002))
(assert (= temp11358_145 temp11358_144))
(assert (= temp11358_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11358_145)))
(assert (= temp11358_147 #x0000000000000003))
(assert (= temp11358_148 temp11358_147))
(assert (= temp11358_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11358_148)))
(assert (= temp11358_150 #x0000000000000004))
(assert (= temp11358_151 temp11358_150))
(assert (= temp11358_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11358_151)))
(assert (= temp11358_153 #x0000000000000005))
(assert (= temp11358_154 temp11358_153))
(assert (= temp11358_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11358_154)))
(assert (= temp11358_157 var1179826))
(assert (= temp11358_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11358_157)))
(assert (= temp11358_156 temp11358_158))
(assert (= var1191780
   (ite (bvslt temp11358_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11358_159 #x0000000000000000))
(assert (= var1191780 temp11358_159))
(assert (= temp11358_160 #x0000000000000000))
(assert (= var1179826 temp11358_160))
(assert (= temp11358_162 var1179826))
(assert (= temp11358_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11358_162)))
(assert (= temp11358_161 temp11358_163))
(assert (= var1191802 (bvsmod temp11358_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11358_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11358_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11358_165 #x0000000000000001))
(assert (= var1191803 temp11358_165))
(assert (= temp11358_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11358_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11358_167 #x0000000000000001))
(assert (= var1191823 temp11358_167))
(assert (= temp11358_168 #x0000000000000001))
(assert (= var1180714 temp11358_168))
(assert (= temp11358_169 #x0000000000000000))
(assert (= temp11358_170 temp11358_169))
(assert (= temp11358_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11358_170)))
(assert (= temp11358_172 #x0000000000000001))
(assert (= temp11358_173 temp11358_172))
(assert (= temp11358_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11358_173)))
(assert (= temp11358_175 #x0000000000000002))
(assert (= temp11358_176 temp11358_175))
(assert (= temp11358_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11358_176)))
(assert (= temp11358_178 #x0000000000000003))
(assert (= temp11358_179 temp11358_178))
(assert (= temp11358_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11358_179)))
(assert (= temp11358_181 #x0000000000000004))
(assert (= temp11358_182 temp11358_181))
(assert (= temp11358_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11358_182)))
(assert (= temp11358_184 #x0000000000000005))
(assert (= temp11358_185 temp11358_184))
(assert (= temp11358_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11358_185)))
(assert (= temp11358_187 #x0000000000000000))
(assert (= temp11358_188
   (ite (bvslt var1180714 temp11358_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11358_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11358_188)))
(assert (= var1191831 temp11358_189))
(assert (bvslt (ite (bvslt var1180714 temp11358_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11358_190 #x0000000000000001))
(assert (= var1180714 temp11358_190))
(assert (= temp11358_192 var1180714))
(assert (= temp11358_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11358_192)))
(assert (= temp11358_191 temp11358_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11358_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11358_194 #x0000000000000001))
(assert (= var1191836 temp11358_194))
(assert (= temp11358_195 #x0000000000000000))
(assert (= var1179826 temp11358_195))
(assert (= temp11358_197 var1179826))
(assert (= temp11358_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11358_197)))
(assert (= temp11358_196 temp11358_198))
(assert (= temp11358_199 #x0000000000000002))
(assert (= var1586025 temp11358_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11358_200 #x0000000000000001))
(assert (= var1191993 temp11358_200))
(assert (= temp11358_201 #x0000000000000001))
(assert (= var2700303 temp11358_201))
(assert (= temp11358_202 #x0000000000000001))
(assert (= var2962447 temp11358_202))
(assert (= temp11358_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11358_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11358_204 #x0000000000000001))
(assert (= var211058 temp11358_204))
(assert (= temp11358_205 #x0000000000000001))
(assert (= var211188 temp11358_205))
(assert (= var3879401 var211188))
(assert (= temp11358_206 #x0000000000000000))
(assert (= var3866802 temp11358_206))
(assert (= temp11358_207 #x0000000000000000))
(assert (= temp11358_208
   (ite (bvslt var3866802 temp11358_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11358_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11358_208)))
(assert (= var3879420 temp11358_209))
(assert (bvslt (ite (bvslt var3866802 temp11358_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11358_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11358_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11358_211 #x0000000000000000))
(assert (= var3879421 temp11358_211))
(assert (= temp11358_212 #x0000000000000001))
(assert (= var3867690 temp11358_212))
(assert (= temp11358_213 #x0000000000000000))
(assert (= temp11358_214
   (ite (bvslt var3867690 temp11358_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11358_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11358_214)))
(assert (= var3879423 temp11358_215))
(assert (bvslt (ite (bvslt var3867690 temp11358_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11358_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11358_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11358_217 #x0000000000000001))
(assert (= var3879424 temp11358_217))
(assert (= temp11358_218 #x0000000000000000))
(assert (= var4133117 temp11358_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11358_219 #x0000000000000002))
(assert (= var4404867 temp11358_219))
(assert (= var4404869 (bvsub ARGNAME_weight_NAMEEND_DIM var4404867)))
(assert (= var4470412 var4404867))
(assert (= var4470413 var4404869))
(assert (= var4470426 (bvadd var4470413 var4470412)))
(assert (= var4470428
   (ite (bvsgt var4470426 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11358_220 #x0000000000000000))
(assert (= var4470428 temp11358_220))
(assert (= var4470453 var4470412))
(assert (= var4470455 var4470413))
(assert (= var4591443 var4470455))
(assert (= temp11358_221 #x0000000000000001))
(assert (= var211058 temp11358_221))
(model-add temp11358_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11358_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11358_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11358_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




