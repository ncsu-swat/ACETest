(declare-fun temp10458_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10458_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10458_3 () (_ BitVec 64))
(declare-fun temp10458_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10458_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10458_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10458_7 () (_ BitVec 64))
(declare-fun temp10458_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10458_9 () (_ BitVec 64))
(declare-fun temp10458_10 () (_ BitVec 64))
(declare-fun temp10458_11 () (_ BitVec 64))
(declare-fun temp10458_12 () (_ BitVec 64))
(declare-fun temp10458_13 () (_ BitVec 64))
(declare-fun temp10458_14 () (_ BitVec 64))
(declare-fun temp10458_15 () (_ BitVec 64))
(declare-fun temp10458_16 () (_ BitVec 64))
(declare-fun temp10458_17 () (_ BitVec 64))
(declare-fun temp10458_18 () (_ BitVec 64))
(declare-fun temp10458_19 () (_ BitVec 64))
(declare-fun temp10458_20 () (_ BitVec 64))
(declare-fun temp10458_21 () (_ BitVec 64))
(declare-fun temp10458_22 () (_ BitVec 64))
(declare-fun temp10458_23 () (_ BitVec 64))
(declare-fun temp10458_24 () (_ BitVec 64))
(declare-fun temp10458_25 () (_ BitVec 64))
(declare-fun temp10458_26 () (_ BitVec 64))
(declare-fun temp10458_27 () (_ BitVec 64))
(declare-fun temp10458_28 () (_ BitVec 64))
(declare-fun temp10458_29 () (_ BitVec 64))
(declare-fun temp10458_30 () (_ BitVec 64))
(declare-fun temp10458_31 () (_ BitVec 64))
(declare-fun temp10458_32 () (_ BitVec 64))
(declare-fun temp10458_33 () (_ BitVec 64))
(declare-fun temp10458_34 () (_ BitVec 64))
(declare-fun temp10458_35 () (_ BitVec 64))
(declare-fun temp10458_36 () (_ BitVec 64))
(declare-fun temp10458_37 () (_ BitVec 64))
(declare-fun temp10458_38 () (_ BitVec 64))
(declare-fun temp10458_39 () (_ BitVec 64))
(declare-fun temp10458_40 () (_ BitVec 64))
(declare-fun temp10458_41 () (_ BitVec 64))
(declare-fun temp10458_42 () (_ BitVec 64))
(declare-fun temp10458_43 () (_ BitVec 64))
(declare-fun temp10458_44 () (_ BitVec 64))
(declare-fun temp10458_45 () (_ BitVec 64))
(declare-fun temp10458_46 () (_ BitVec 64))
(declare-fun temp10458_47 () (_ BitVec 64))
(declare-fun temp10458_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10458_49 () (_ BitVec 64))
(declare-fun temp10458_50 () (_ BitVec 64))
(declare-fun temp10458_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10458_52 () (_ BitVec 64))
(declare-fun temp10458_53 () (_ BitVec 64))
(declare-fun temp10458_54 () (_ BitVec 64))
(declare-fun temp10458_55 () (_ BitVec 64))
(declare-fun temp10458_56 () (_ BitVec 64))
(declare-fun temp10458_57 () (_ BitVec 64))
(declare-fun temp10458_58 () (_ BitVec 64))
(declare-fun temp10458_59 () (_ BitVec 64))
(declare-fun temp10458_60 () (_ BitVec 64))
(declare-fun temp10458_61 () (_ BitVec 64))
(declare-fun temp10458_62 () (_ BitVec 64))
(declare-fun temp10458_63 () (_ BitVec 64))
(declare-fun temp10458_64 () (_ BitVec 64))
(declare-fun temp10458_65 () (_ BitVec 64))
(declare-fun temp10458_66 () (_ BitVec 64))
(declare-fun temp10458_67 () (_ BitVec 64))
(declare-fun temp10458_68 () (_ BitVec 64))
(declare-fun temp10458_69 () (_ BitVec 64))
(declare-fun temp10458_70 () (_ BitVec 64))
(declare-fun temp10458_71 () (_ BitVec 64))
(declare-fun temp10458_72 () (_ BitVec 64))
(declare-fun temp10458_73 () (_ BitVec 64))
(declare-fun temp10458_74 () (_ BitVec 64))
(declare-fun temp10458_75 () (_ BitVec 64))
(declare-fun temp10458_76 () (_ BitVec 64))
(declare-fun temp10458_77 () (_ BitVec 64))
(declare-fun temp10458_78 () (_ BitVec 64))
(declare-fun temp10458_79 () (_ BitVec 64))
(declare-fun temp10458_80 () (_ BitVec 64))
(declare-fun temp10458_81 () (_ BitVec 64))
(declare-fun temp10458_82 () (_ BitVec 64))
(declare-fun temp10458_83 () (_ BitVec 64))
(declare-fun temp10458_84 () (_ BitVec 64))
(declare-fun temp10458_85 () (_ BitVec 64))
(declare-fun temp10458_86 () (_ BitVec 64))
(declare-fun temp10458_87 () (_ BitVec 64))
(declare-fun temp10458_88 () (_ BitVec 64))
(declare-fun temp10458_89 () (_ BitVec 64))
(declare-fun temp10458_90 () (_ BitVec 64))
(declare-fun temp10458_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10458_92 () (_ BitVec 64))
(declare-fun temp10458_93 () (_ BitVec 64))
(declare-fun temp10458_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10458_95 () (_ BitVec 64))
(declare-fun temp10458_96 () (_ BitVec 64))
(declare-fun temp10458_97 () (_ BitVec 64))
(declare-fun temp10458_98 () (_ BitVec 64))
(declare-fun temp10458_99 () (_ BitVec 64))
(declare-fun temp10458_100 () (_ BitVec 64))
(declare-fun temp10458_101 () (_ BitVec 64))
(declare-fun temp10458_102 () (_ BitVec 64))
(declare-fun temp10458_103 () (_ BitVec 64))
(declare-fun temp10458_104 () (_ BitVec 64))
(declare-fun temp10458_105 () (_ BitVec 64))
(declare-fun temp10458_106 () (_ BitVec 64))
(declare-fun temp10458_107 () (_ BitVec 64))
(declare-fun temp10458_108 () (_ BitVec 64))
(declare-fun temp10458_109 () (_ BitVec 64))
(declare-fun temp10458_110 () (_ BitVec 64))
(declare-fun temp10458_111 () (_ BitVec 64))
(declare-fun temp10458_112 () (_ BitVec 64))
(declare-fun temp10458_113 () (_ BitVec 64))
(declare-fun temp10458_114 () (_ BitVec 64))
(declare-fun temp10458_115 () (_ BitVec 64))
(declare-fun temp10458_116 () (_ BitVec 64))
(declare-fun temp10458_117 () (_ BitVec 64))
(declare-fun temp10458_118 () (_ BitVec 64))
(declare-fun temp10458_119 () (_ BitVec 64))
(declare-fun temp10458_120 () (_ BitVec 64))
(declare-fun temp10458_121 () (_ BitVec 64))
(declare-fun temp10458_122 () (_ BitVec 64))
(declare-fun temp10458_123 () (_ BitVec 64))
(declare-fun temp10458_124 () (_ BitVec 64))
(declare-fun temp10458_125 () (_ BitVec 64))
(declare-fun temp10458_126 () (_ BitVec 64))
(declare-fun temp10458_127 () (_ BitVec 64))
(declare-fun temp10458_128 () (_ BitVec 64))
(declare-fun temp10458_129 () (_ BitVec 64))
(declare-fun temp10458_130 () (_ BitVec 64))
(declare-fun temp10458_131 () (_ BitVec 64))
(declare-fun temp10458_132 () (_ BitVec 64))
(declare-fun temp10458_133 () (_ BitVec 64))
(declare-fun temp10458_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10458_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10458_136 () (_ BitVec 64))
(declare-fun temp10458_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10458_138 () (_ BitVec 64))
(declare-fun temp10458_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10458_140 () (_ BitVec 64))
(declare-fun temp10458_141 () (_ BitVec 64))
(declare-fun temp10458_142 () (_ BitVec 64))
(declare-fun temp10458_143 () (_ BitVec 64))
(declare-fun temp10458_144 () (_ BitVec 64))
(declare-fun temp10458_145 () (_ BitVec 64))
(declare-fun temp10458_146 () (_ BitVec 64))
(declare-fun temp10458_147 () (_ BitVec 64))
(declare-fun temp10458_148 () (_ BitVec 64))
(declare-fun temp10458_149 () (_ BitVec 64))
(declare-fun temp10458_150 () (_ BitVec 64))
(declare-fun temp10458_151 () (_ BitVec 64))
(declare-fun temp10458_152 () (_ BitVec 64))
(declare-fun temp10458_153 () (_ BitVec 64))
(declare-fun temp10458_154 () (_ BitVec 64))
(declare-fun temp10458_155 () (_ BitVec 64))
(declare-fun temp10458_157 () (_ BitVec 64))
(declare-fun temp10458_158 () (_ BitVec 64))
(declare-fun temp10458_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10458_159 () (_ BitVec 64))
(declare-fun temp10458_160 () (_ BitVec 64))
(declare-fun temp10458_162 () (_ BitVec 64))
(declare-fun temp10458_163 () (_ BitVec 64))
(declare-fun temp10458_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10458_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10458_165 () (_ BitVec 64))
(declare-fun temp10458_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10458_167 () (_ BitVec 64))
(declare-fun temp10458_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10458_169 () (_ BitVec 64))
(declare-fun temp10458_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10458_171 () (_ BitVec 64))
(declare-fun temp10458_172 () (_ BitVec 64))
(declare-fun temp10458_173 () (_ BitVec 64))
(declare-fun temp10458_174 () (_ BitVec 64))
(declare-fun temp10458_175 () (_ BitVec 64))
(declare-fun temp10458_176 () (_ BitVec 64))
(declare-fun temp10458_177 () (_ BitVec 64))
(declare-fun temp10458_178 () (_ BitVec 64))
(declare-fun temp10458_179 () (_ BitVec 64))
(declare-fun temp10458_180 () (_ BitVec 64))
(declare-fun temp10458_181 () (_ BitVec 64))
(declare-fun temp10458_182 () (_ BitVec 64))
(declare-fun temp10458_183 () (_ BitVec 64))
(declare-fun temp10458_184 () (_ BitVec 64))
(declare-fun temp10458_185 () (_ BitVec 64))
(declare-fun temp10458_186 () (_ BitVec 64))
(declare-fun temp10458_187 () (_ BitVec 64))
(declare-fun temp10458_188 () (_ BitVec 64))
(declare-fun temp10458_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10458_190 () (_ BitVec 64))
(declare-fun temp10458_192 () (_ BitVec 64))
(declare-fun temp10458_193 () (_ BitVec 64))
(declare-fun temp10458_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10458_194 () (_ BitVec 64))
(declare-fun temp10458_195 () (_ BitVec 64))
(declare-fun temp10458_197 () (_ BitVec 64))
(declare-fun temp10458_198 () (_ BitVec 64))
(declare-fun temp10458_196 () (_ BitVec 64))
(declare-fun temp10458_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10458_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10458_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10458_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10458_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10458_204 () (_ BitVec 64))
(declare-fun temp10458_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10458_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10458_207 () (_ BitVec 64))
(declare-fun temp10458_208 () (_ BitVec 64))
(declare-fun temp10458_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10458_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10458_211 () (_ BitVec 64))
(declare-fun temp10458_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10458_213 () (_ BitVec 64))
(declare-fun temp10458_214 () (_ BitVec 64))
(declare-fun temp10458_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10458_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10458_217 () (_ BitVec 64))
(declare-fun temp10458_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10458_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10458_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp10458_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp10458_222 () (_ BitVec 64))
(declare-fun temp10458_223 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun temp10458_224 () (_ BitVec 64))
(assert (= temp10458_1 #x0000000000000001))
(assert (= var77203 temp10458_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10458_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10458_2)))
(assert (= temp10458_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10458_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10458_4 #x0000000000000000))
(assert (= var210941 temp10458_4))
(assert (= temp10458_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10458_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10458_6 #x0000000000000000))
(assert (= var210986 temp10458_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10458_7 #x0000000000000000))
(assert (= temp10458_8 temp10458_7))
(assert (= temp10458_9 (select ARGNAME_padding_NAMEEND_VAL temp10458_8)))
(assert (= temp10458_10 #x0000000000000001))
(assert (= temp10458_11 temp10458_10))
(assert (= temp10458_12 (select ARGNAME_padding_NAMEEND_VAL temp10458_11)))
(assert (= temp10458_13 #x0000000000000002))
(assert (= temp10458_14 temp10458_13))
(assert (= temp10458_15 (select ARGNAME_padding_NAMEEND_VAL temp10458_14)))
(assert (= temp10458_16 #x0000000000000003))
(assert (= temp10458_17 temp10458_16))
(assert (= temp10458_18 (select ARGNAME_padding_NAMEEND_VAL temp10458_17)))
(assert (= temp10458_19 #x0000000000000004))
(assert (= temp10458_20 temp10458_19))
(assert (= temp10458_21 (select ARGNAME_padding_NAMEEND_VAL temp10458_20)))
(assert (= temp10458_22 #x0000000000000005))
(assert (= temp10458_23 temp10458_22))
(assert (= temp10458_24 (select ARGNAME_padding_NAMEEND_VAL temp10458_23)))
(assert (= temp10458_25 #x0000000000000000))
(assert (= temp10458_26 #x0000000000000000))
(assert (= temp10458_27 temp10458_26))
(assert (= temp10458_28 (select ARGNAME_padding_NAMEEND_VAL temp10458_27)))
(assert (= temp10458_29 #x0000000000000000))
(assert (= temp10458_30 #x0000000000000001))
(assert (= temp10458_31 temp10458_30))
(assert (= temp10458_32 (select ARGNAME_padding_NAMEEND_VAL temp10458_31)))
(assert (= temp10458_33 #x0000000000000000))
(assert (= temp10458_34 #x0000000000000002))
(assert (= temp10458_35 temp10458_34))
(assert (= temp10458_36 (select ARGNAME_padding_NAMEEND_VAL temp10458_35)))
(assert (= temp10458_37 #x0000000000000000))
(assert (= temp10458_38 #x0000000000000003))
(assert (= temp10458_39 temp10458_38))
(assert (= temp10458_40 (select ARGNAME_padding_NAMEEND_VAL temp10458_39)))
(assert (= temp10458_41 #x0000000000000000))
(assert (= temp10458_42 #x0000000000000004))
(assert (= temp10458_43 temp10458_42))
(assert (= temp10458_44 (select ARGNAME_padding_NAMEEND_VAL temp10458_43)))
(assert (= temp10458_45 #x0000000000000000))
(assert (= temp10458_46 #x0000000000000005))
(assert (= temp10458_47 temp10458_46))
(assert (= temp10458_48 (select ARGNAME_padding_NAMEEND_VAL temp10458_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10458_28 temp10458_25)
             (bvslt temp10458_32 temp10458_29)
             (bvslt temp10458_36 temp10458_33)
             (bvslt temp10458_40 temp10458_37)
             (bvslt temp10458_44 temp10458_41)
             (bvslt temp10458_48 temp10458_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10458_49 #x0000000000000000))
(assert (= var1191714 temp10458_49))
(assert (= temp10458_50 #x0000000000000000))
(assert (= temp10458_51 temp10458_50))
(assert (= temp10458_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10458_51)))
(assert (= temp10458_53 #x0000000000000001))
(assert (= temp10458_54 temp10458_53))
(assert (= temp10458_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10458_54)))
(assert (= temp10458_56 #x0000000000000002))
(assert (= temp10458_57 temp10458_56))
(assert (= temp10458_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10458_57)))
(assert (= temp10458_59 #x0000000000000003))
(assert (= temp10458_60 temp10458_59))
(assert (= temp10458_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10458_60)))
(assert (= temp10458_62 #x0000000000000004))
(assert (= temp10458_63 temp10458_62))
(assert (= temp10458_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10458_63)))
(assert (= temp10458_65 #x0000000000000005))
(assert (= temp10458_66 temp10458_65))
(assert (= temp10458_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10458_66)))
(assert (= temp10458_68 #x0000000000000000))
(assert (= temp10458_69 #x0000000000000000))
(assert (= temp10458_70 temp10458_69))
(assert (= temp10458_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10458_70)))
(assert (= temp10458_72 #x0000000000000000))
(assert (= temp10458_73 #x0000000000000001))
(assert (= temp10458_74 temp10458_73))
(assert (= temp10458_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10458_74)))
(assert (= temp10458_76 #x0000000000000000))
(assert (= temp10458_77 #x0000000000000002))
(assert (= temp10458_78 temp10458_77))
(assert (= temp10458_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10458_78)))
(assert (= temp10458_80 #x0000000000000000))
(assert (= temp10458_81 #x0000000000000003))
(assert (= temp10458_82 temp10458_81))
(assert (= temp10458_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10458_82)))
(assert (= temp10458_84 #x0000000000000000))
(assert (= temp10458_85 #x0000000000000004))
(assert (= temp10458_86 temp10458_85))
(assert (= temp10458_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10458_86)))
(assert (= temp10458_88 #x0000000000000000))
(assert (= temp10458_89 #x0000000000000005))
(assert (= temp10458_90 temp10458_89))
(assert (= temp10458_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10458_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10458_71 temp10458_68)
             (bvslt temp10458_75 temp10458_72)
             (bvslt temp10458_79 temp10458_76)
             (bvslt temp10458_83 temp10458_80)
             (bvslt temp10458_87 temp10458_84)
             (bvslt temp10458_91 temp10458_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10458_92 #x0000000000000000))
(assert (= var1191725 temp10458_92))
(assert (= temp10458_93 #x0000000000000000))
(assert (= temp10458_94 temp10458_93))
(assert (= temp10458_95 (select ARGNAME_stride_NAMEEND_VAL temp10458_94)))
(assert (= temp10458_96 #x0000000000000001))
(assert (= temp10458_97 temp10458_96))
(assert (= temp10458_98 (select ARGNAME_stride_NAMEEND_VAL temp10458_97)))
(assert (= temp10458_99 #x0000000000000002))
(assert (= temp10458_100 temp10458_99))
(assert (= temp10458_101 (select ARGNAME_stride_NAMEEND_VAL temp10458_100)))
(assert (= temp10458_102 #x0000000000000003))
(assert (= temp10458_103 temp10458_102))
(assert (= temp10458_104 (select ARGNAME_stride_NAMEEND_VAL temp10458_103)))
(assert (= temp10458_105 #x0000000000000004))
(assert (= temp10458_106 temp10458_105))
(assert (= temp10458_107 (select ARGNAME_stride_NAMEEND_VAL temp10458_106)))
(assert (= temp10458_108 #x0000000000000005))
(assert (= temp10458_109 temp10458_108))
(assert (= temp10458_110 (select ARGNAME_stride_NAMEEND_VAL temp10458_109)))
(assert (= temp10458_111 #x0000000000000000))
(assert (= temp10458_112 #x0000000000000000))
(assert (= temp10458_113 temp10458_112))
(assert (= temp10458_114 (select ARGNAME_stride_NAMEEND_VAL temp10458_113)))
(assert (= temp10458_115 #x0000000000000000))
(assert (= temp10458_116 #x0000000000000001))
(assert (= temp10458_117 temp10458_116))
(assert (= temp10458_118 (select ARGNAME_stride_NAMEEND_VAL temp10458_117)))
(assert (= temp10458_119 #x0000000000000000))
(assert (= temp10458_120 #x0000000000000002))
(assert (= temp10458_121 temp10458_120))
(assert (= temp10458_122 (select ARGNAME_stride_NAMEEND_VAL temp10458_121)))
(assert (= temp10458_123 #x0000000000000000))
(assert (= temp10458_124 #x0000000000000003))
(assert (= temp10458_125 temp10458_124))
(assert (= temp10458_126 (select ARGNAME_stride_NAMEEND_VAL temp10458_125)))
(assert (= temp10458_127 #x0000000000000000))
(assert (= temp10458_128 #x0000000000000004))
(assert (= temp10458_129 temp10458_128))
(assert (= temp10458_130 (select ARGNAME_stride_NAMEEND_VAL temp10458_129)))
(assert (= temp10458_131 #x0000000000000000))
(assert (= temp10458_132 #x0000000000000005))
(assert (= temp10458_133 temp10458_132))
(assert (= temp10458_134 (select ARGNAME_stride_NAMEEND_VAL temp10458_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10458_114 temp10458_111)
             (bvsle temp10458_118 temp10458_115)
             (bvsle temp10458_122 temp10458_119)
             (bvsle temp10458_126 temp10458_123)
             (bvsle temp10458_130 temp10458_127)
             (bvsle temp10458_134 temp10458_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10458_135 #x0000000000000000))
(assert (= var1191735 temp10458_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10458_136 #x0000000000000001))
(assert (= var1191747 temp10458_136))
(assert (= temp10458_137 #x0000000000000000))
(assert (= var1179826 temp10458_137))
(assert (= temp10458_138 #x0000000000000000))
(assert (= temp10458_139 temp10458_138))
(assert (= temp10458_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10458_139)))
(assert (= temp10458_141 #x0000000000000001))
(assert (= temp10458_142 temp10458_141))
(assert (= temp10458_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10458_142)))
(assert (= temp10458_144 #x0000000000000002))
(assert (= temp10458_145 temp10458_144))
(assert (= temp10458_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10458_145)))
(assert (= temp10458_147 #x0000000000000003))
(assert (= temp10458_148 temp10458_147))
(assert (= temp10458_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10458_148)))
(assert (= temp10458_150 #x0000000000000004))
(assert (= temp10458_151 temp10458_150))
(assert (= temp10458_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10458_151)))
(assert (= temp10458_153 #x0000000000000005))
(assert (= temp10458_154 temp10458_153))
(assert (= temp10458_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10458_154)))
(assert (= temp10458_157 var1179826))
(assert (= temp10458_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10458_157)))
(assert (= temp10458_156 temp10458_158))
(assert (= var1191780
   (ite (bvslt temp10458_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10458_159 #x0000000000000000))
(assert (= var1191780 temp10458_159))
(assert (= temp10458_160 #x0000000000000000))
(assert (= var1179826 temp10458_160))
(assert (= temp10458_162 var1179826))
(assert (= temp10458_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10458_162)))
(assert (= temp10458_161 temp10458_163))
(assert (= var1191802 (bvsmod temp10458_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10458_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10458_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10458_165 #x0000000000000001))
(assert (= var1191803 temp10458_165))
(assert (= temp10458_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10458_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10458_167 #x0000000000000001))
(assert (= var1191823 temp10458_167))
(assert (= temp10458_168 #x0000000000000001))
(assert (= var1180714 temp10458_168))
(assert (= temp10458_169 #x0000000000000000))
(assert (= temp10458_170 temp10458_169))
(assert (= temp10458_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10458_170)))
(assert (= temp10458_172 #x0000000000000001))
(assert (= temp10458_173 temp10458_172))
(assert (= temp10458_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10458_173)))
(assert (= temp10458_175 #x0000000000000002))
(assert (= temp10458_176 temp10458_175))
(assert (= temp10458_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10458_176)))
(assert (= temp10458_178 #x0000000000000003))
(assert (= temp10458_179 temp10458_178))
(assert (= temp10458_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10458_179)))
(assert (= temp10458_181 #x0000000000000004))
(assert (= temp10458_182 temp10458_181))
(assert (= temp10458_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10458_182)))
(assert (= temp10458_184 #x0000000000000005))
(assert (= temp10458_185 temp10458_184))
(assert (= temp10458_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10458_185)))
(assert (= temp10458_187 #x0000000000000000))
(assert (= temp10458_188
   (ite (bvslt var1180714 temp10458_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10458_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10458_188)))
(assert (= var1191831 temp10458_189))
(assert (bvslt (ite (bvslt var1180714 temp10458_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10458_190 #x0000000000000001))
(assert (= var1180714 temp10458_190))
(assert (= temp10458_192 var1180714))
(assert (= temp10458_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10458_192)))
(assert (= temp10458_191 temp10458_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10458_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10458_194 #x0000000000000001))
(assert (= var1191836 temp10458_194))
(assert (= temp10458_195 #x0000000000000000))
(assert (= var1179826 temp10458_195))
(assert (= temp10458_197 var1179826))
(assert (= temp10458_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10458_197)))
(assert (= temp10458_196 temp10458_198))
(assert (= temp10458_199 #x0000000000000002))
(assert (= var1586025 temp10458_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10458_200 #x0000000000000001))
(assert (= var1191993 temp10458_200))
(assert (= temp10458_201 #x0000000000000001))
(assert (= var2700303 temp10458_201))
(assert (= temp10458_202 #x0000000000000001))
(assert (= var2962447 temp10458_202))
(assert (= temp10458_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10458_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10458_204 #x0000000000000001))
(assert (= var211058 temp10458_204))
(assert (= temp10458_205 #x0000000000000001))
(assert (= var211188 temp10458_205))
(assert (= var3879401 var211188))
(assert (= temp10458_206 #x0000000000000000))
(assert (= var3866802 temp10458_206))
(assert (= temp10458_207 #x0000000000000000))
(assert (= temp10458_208
   (ite (bvslt var3866802 temp10458_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10458_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10458_208)))
(assert (= var3879420 temp10458_209))
(assert (bvslt (ite (bvslt var3866802 temp10458_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10458_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10458_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10458_211 #x0000000000000000))
(assert (= var3879421 temp10458_211))
(assert (= temp10458_212 #x0000000000000001))
(assert (= var3867690 temp10458_212))
(assert (= temp10458_213 #x0000000000000000))
(assert (= temp10458_214
   (ite (bvslt var3867690 temp10458_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10458_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10458_214)))
(assert (= var3879423 temp10458_215))
(assert (bvslt (ite (bvslt var3867690 temp10458_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10458_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10458_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10458_217 #x0000000000000001))
(assert (= var3879424 temp10458_217))
(assert (= temp10458_218 #x0000000000000000))
(assert (= var4079423 temp10458_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10458_219 #x0000000000000002))
(assert (= var4208259 temp10458_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10458_220 #x0000000000000000))
(assert (= var4273820 temp10458_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp10458_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp10458_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10458_222 #x0000000000000000))
(assert (= var212414 temp10458_222))
(assert (= temp10458_223 #x0000000000000002))
(assert (= var5060227 temp10458_223))
(assert (= var5125772 var5060227))
(assert (= temp10458_224 #x0000000000000001))
(assert (= var211058 temp10458_224))
(model-add temp10458_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10458_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10458_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10458_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




