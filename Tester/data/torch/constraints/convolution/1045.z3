(declare-fun temp10060_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10060_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10060_3 () (_ BitVec 64))
(declare-fun temp10060_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10060_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10060_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10060_7 () (_ BitVec 64))
(declare-fun temp10060_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10060_9 () (_ BitVec 64))
(declare-fun temp10060_10 () (_ BitVec 64))
(declare-fun temp10060_11 () (_ BitVec 64))
(declare-fun temp10060_12 () (_ BitVec 64))
(declare-fun temp10060_13 () (_ BitVec 64))
(declare-fun temp10060_14 () (_ BitVec 64))
(declare-fun temp10060_15 () (_ BitVec 64))
(declare-fun temp10060_16 () (_ BitVec 64))
(declare-fun temp10060_17 () (_ BitVec 64))
(declare-fun temp10060_18 () (_ BitVec 64))
(declare-fun temp10060_19 () (_ BitVec 64))
(declare-fun temp10060_20 () (_ BitVec 64))
(declare-fun temp10060_21 () (_ BitVec 64))
(declare-fun temp10060_22 () (_ BitVec 64))
(declare-fun temp10060_23 () (_ BitVec 64))
(declare-fun temp10060_24 () (_ BitVec 64))
(declare-fun temp10060_25 () (_ BitVec 64))
(declare-fun temp10060_26 () (_ BitVec 64))
(declare-fun temp10060_27 () (_ BitVec 64))
(declare-fun temp10060_28 () (_ BitVec 64))
(declare-fun temp10060_29 () (_ BitVec 64))
(declare-fun temp10060_30 () (_ BitVec 64))
(declare-fun temp10060_31 () (_ BitVec 64))
(declare-fun temp10060_32 () (_ BitVec 64))
(declare-fun temp10060_33 () (_ BitVec 64))
(declare-fun temp10060_34 () (_ BitVec 64))
(declare-fun temp10060_35 () (_ BitVec 64))
(declare-fun temp10060_36 () (_ BitVec 64))
(declare-fun temp10060_37 () (_ BitVec 64))
(declare-fun temp10060_38 () (_ BitVec 64))
(declare-fun temp10060_39 () (_ BitVec 64))
(declare-fun temp10060_40 () (_ BitVec 64))
(declare-fun temp10060_41 () (_ BitVec 64))
(declare-fun temp10060_42 () (_ BitVec 64))
(declare-fun temp10060_43 () (_ BitVec 64))
(declare-fun temp10060_44 () (_ BitVec 64))
(declare-fun temp10060_45 () (_ BitVec 64))
(declare-fun temp10060_46 () (_ BitVec 64))
(declare-fun temp10060_47 () (_ BitVec 64))
(declare-fun temp10060_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10060_49 () (_ BitVec 64))
(declare-fun temp10060_50 () (_ BitVec 64))
(declare-fun temp10060_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10060_52 () (_ BitVec 64))
(declare-fun temp10060_53 () (_ BitVec 64))
(declare-fun temp10060_54 () (_ BitVec 64))
(declare-fun temp10060_55 () (_ BitVec 64))
(declare-fun temp10060_56 () (_ BitVec 64))
(declare-fun temp10060_57 () (_ BitVec 64))
(declare-fun temp10060_58 () (_ BitVec 64))
(declare-fun temp10060_59 () (_ BitVec 64))
(declare-fun temp10060_60 () (_ BitVec 64))
(declare-fun temp10060_61 () (_ BitVec 64))
(declare-fun temp10060_62 () (_ BitVec 64))
(declare-fun temp10060_63 () (_ BitVec 64))
(declare-fun temp10060_64 () (_ BitVec 64))
(declare-fun temp10060_65 () (_ BitVec 64))
(declare-fun temp10060_66 () (_ BitVec 64))
(declare-fun temp10060_67 () (_ BitVec 64))
(declare-fun temp10060_68 () (_ BitVec 64))
(declare-fun temp10060_69 () (_ BitVec 64))
(declare-fun temp10060_70 () (_ BitVec 64))
(declare-fun temp10060_71 () (_ BitVec 64))
(declare-fun temp10060_72 () (_ BitVec 64))
(declare-fun temp10060_73 () (_ BitVec 64))
(declare-fun temp10060_74 () (_ BitVec 64))
(declare-fun temp10060_75 () (_ BitVec 64))
(declare-fun temp10060_76 () (_ BitVec 64))
(declare-fun temp10060_77 () (_ BitVec 64))
(declare-fun temp10060_78 () (_ BitVec 64))
(declare-fun temp10060_79 () (_ BitVec 64))
(declare-fun temp10060_80 () (_ BitVec 64))
(declare-fun temp10060_81 () (_ BitVec 64))
(declare-fun temp10060_82 () (_ BitVec 64))
(declare-fun temp10060_83 () (_ BitVec 64))
(declare-fun temp10060_84 () (_ BitVec 64))
(declare-fun temp10060_85 () (_ BitVec 64))
(declare-fun temp10060_86 () (_ BitVec 64))
(declare-fun temp10060_87 () (_ BitVec 64))
(declare-fun temp10060_88 () (_ BitVec 64))
(declare-fun temp10060_89 () (_ BitVec 64))
(declare-fun temp10060_90 () (_ BitVec 64))
(declare-fun temp10060_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10060_92 () (_ BitVec 64))
(declare-fun temp10060_93 () (_ BitVec 64))
(declare-fun temp10060_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10060_95 () (_ BitVec 64))
(declare-fun temp10060_96 () (_ BitVec 64))
(declare-fun temp10060_97 () (_ BitVec 64))
(declare-fun temp10060_98 () (_ BitVec 64))
(declare-fun temp10060_99 () (_ BitVec 64))
(declare-fun temp10060_100 () (_ BitVec 64))
(declare-fun temp10060_101 () (_ BitVec 64))
(declare-fun temp10060_102 () (_ BitVec 64))
(declare-fun temp10060_103 () (_ BitVec 64))
(declare-fun temp10060_104 () (_ BitVec 64))
(declare-fun temp10060_105 () (_ BitVec 64))
(declare-fun temp10060_106 () (_ BitVec 64))
(declare-fun temp10060_107 () (_ BitVec 64))
(declare-fun temp10060_108 () (_ BitVec 64))
(declare-fun temp10060_109 () (_ BitVec 64))
(declare-fun temp10060_110 () (_ BitVec 64))
(declare-fun temp10060_111 () (_ BitVec 64))
(declare-fun temp10060_112 () (_ BitVec 64))
(declare-fun temp10060_113 () (_ BitVec 64))
(declare-fun temp10060_114 () (_ BitVec 64))
(declare-fun temp10060_115 () (_ BitVec 64))
(declare-fun temp10060_116 () (_ BitVec 64))
(declare-fun temp10060_117 () (_ BitVec 64))
(declare-fun temp10060_118 () (_ BitVec 64))
(declare-fun temp10060_119 () (_ BitVec 64))
(declare-fun temp10060_120 () (_ BitVec 64))
(declare-fun temp10060_121 () (_ BitVec 64))
(declare-fun temp10060_122 () (_ BitVec 64))
(declare-fun temp10060_123 () (_ BitVec 64))
(declare-fun temp10060_124 () (_ BitVec 64))
(declare-fun temp10060_125 () (_ BitVec 64))
(declare-fun temp10060_126 () (_ BitVec 64))
(declare-fun temp10060_127 () (_ BitVec 64))
(declare-fun temp10060_128 () (_ BitVec 64))
(declare-fun temp10060_129 () (_ BitVec 64))
(declare-fun temp10060_130 () (_ BitVec 64))
(declare-fun temp10060_131 () (_ BitVec 64))
(declare-fun temp10060_132 () (_ BitVec 64))
(declare-fun temp10060_133 () (_ BitVec 64))
(declare-fun temp10060_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10060_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10060_136 () (_ BitVec 64))
(declare-fun temp10060_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10060_138 () (_ BitVec 64))
(declare-fun temp10060_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10060_140 () (_ BitVec 64))
(declare-fun temp10060_141 () (_ BitVec 64))
(declare-fun temp10060_142 () (_ BitVec 64))
(declare-fun temp10060_143 () (_ BitVec 64))
(declare-fun temp10060_144 () (_ BitVec 64))
(declare-fun temp10060_145 () (_ BitVec 64))
(declare-fun temp10060_146 () (_ BitVec 64))
(declare-fun temp10060_147 () (_ BitVec 64))
(declare-fun temp10060_148 () (_ BitVec 64))
(declare-fun temp10060_149 () (_ BitVec 64))
(declare-fun temp10060_150 () (_ BitVec 64))
(declare-fun temp10060_151 () (_ BitVec 64))
(declare-fun temp10060_152 () (_ BitVec 64))
(declare-fun temp10060_153 () (_ BitVec 64))
(declare-fun temp10060_154 () (_ BitVec 64))
(declare-fun temp10060_155 () (_ BitVec 64))
(declare-fun temp10060_157 () (_ BitVec 64))
(declare-fun temp10060_158 () (_ BitVec 64))
(declare-fun temp10060_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10060_159 () (_ BitVec 64))
(declare-fun temp10060_160 () (_ BitVec 64))
(declare-fun temp10060_162 () (_ BitVec 64))
(declare-fun temp10060_163 () (_ BitVec 64))
(declare-fun temp10060_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10060_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10060_165 () (_ BitVec 64))
(declare-fun temp10060_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10060_167 () (_ BitVec 64))
(declare-fun temp10060_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10060_169 () (_ BitVec 64))
(declare-fun temp10060_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10060_171 () (_ BitVec 64))
(declare-fun temp10060_172 () (_ BitVec 64))
(declare-fun temp10060_173 () (_ BitVec 64))
(declare-fun temp10060_174 () (_ BitVec 64))
(declare-fun temp10060_175 () (_ BitVec 64))
(declare-fun temp10060_176 () (_ BitVec 64))
(declare-fun temp10060_177 () (_ BitVec 64))
(declare-fun temp10060_178 () (_ BitVec 64))
(declare-fun temp10060_179 () (_ BitVec 64))
(declare-fun temp10060_180 () (_ BitVec 64))
(declare-fun temp10060_181 () (_ BitVec 64))
(declare-fun temp10060_182 () (_ BitVec 64))
(declare-fun temp10060_183 () (_ BitVec 64))
(declare-fun temp10060_184 () (_ BitVec 64))
(declare-fun temp10060_185 () (_ BitVec 64))
(declare-fun temp10060_186 () (_ BitVec 64))
(declare-fun temp10060_187 () (_ BitVec 64))
(declare-fun temp10060_188 () (_ BitVec 64))
(declare-fun temp10060_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10060_190 () (_ BitVec 64))
(declare-fun temp10060_192 () (_ BitVec 64))
(declare-fun temp10060_193 () (_ BitVec 64))
(declare-fun temp10060_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10060_194 () (_ BitVec 64))
(declare-fun temp10060_195 () (_ BitVec 64))
(declare-fun temp10060_197 () (_ BitVec 64))
(declare-fun temp10060_198 () (_ BitVec 64))
(declare-fun temp10060_196 () (_ BitVec 64))
(declare-fun temp10060_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10060_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10060_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10060_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10060_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10060_204 () (_ BitVec 64))
(declare-fun temp10060_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10060_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10060_207 () (_ BitVec 64))
(declare-fun temp10060_208 () (_ BitVec 64))
(declare-fun temp10060_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10060_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10060_211 () (_ BitVec 64))
(declare-fun temp10060_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10060_213 () (_ BitVec 64))
(declare-fun temp10060_214 () (_ BitVec 64))
(declare-fun temp10060_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10060_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10060_217 () (_ BitVec 64))
(declare-fun temp10060_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10060_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10060_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10060_222 () (_ BitVec 64))
(declare-fun temp10060_221 () (_ BitVec 64))
(declare-fun temp10060_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10060_224 () (_ BitVec 64))
(declare-fun temp10060_225 () (_ BitVec 64))
(declare-fun temp10060_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10060_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10060_228 () (_ BitVec 64))
(declare-fun temp10060_230 () (_ BitVec 64))
(declare-fun temp10060_229 () (_ BitVec 64))
(declare-fun temp10060_231 () (_ BitVec 64))
(declare-fun temp10060_232 () (_ BitVec 64))
(declare-fun var5452564 () (_ BitVec 64))
(declare-fun var5452531 () (_ BitVec 64))
(declare-fun var5321095 () (_ BitVec 64))
(declare-fun var5321091 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10060_233 () (_ BitVec 64))
(assert (= temp10060_1 #x0000000000000001))
(assert (= var77203 temp10060_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10060_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10060_2)))
(assert (= temp10060_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10060_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10060_4 #x0000000000000000))
(assert (= var210941 temp10060_4))
(assert (= temp10060_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10060_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10060_6 #x0000000000000000))
(assert (= var210986 temp10060_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10060_7 #x0000000000000000))
(assert (= temp10060_8 temp10060_7))
(assert (= temp10060_9 (select ARGNAME_padding_NAMEEND_VAL temp10060_8)))
(assert (= temp10060_10 #x0000000000000001))
(assert (= temp10060_11 temp10060_10))
(assert (= temp10060_12 (select ARGNAME_padding_NAMEEND_VAL temp10060_11)))
(assert (= temp10060_13 #x0000000000000002))
(assert (= temp10060_14 temp10060_13))
(assert (= temp10060_15 (select ARGNAME_padding_NAMEEND_VAL temp10060_14)))
(assert (= temp10060_16 #x0000000000000003))
(assert (= temp10060_17 temp10060_16))
(assert (= temp10060_18 (select ARGNAME_padding_NAMEEND_VAL temp10060_17)))
(assert (= temp10060_19 #x0000000000000004))
(assert (= temp10060_20 temp10060_19))
(assert (= temp10060_21 (select ARGNAME_padding_NAMEEND_VAL temp10060_20)))
(assert (= temp10060_22 #x0000000000000005))
(assert (= temp10060_23 temp10060_22))
(assert (= temp10060_24 (select ARGNAME_padding_NAMEEND_VAL temp10060_23)))
(assert (= temp10060_25 #x0000000000000000))
(assert (= temp10060_26 #x0000000000000000))
(assert (= temp10060_27 temp10060_26))
(assert (= temp10060_28 (select ARGNAME_padding_NAMEEND_VAL temp10060_27)))
(assert (= temp10060_29 #x0000000000000000))
(assert (= temp10060_30 #x0000000000000001))
(assert (= temp10060_31 temp10060_30))
(assert (= temp10060_32 (select ARGNAME_padding_NAMEEND_VAL temp10060_31)))
(assert (= temp10060_33 #x0000000000000000))
(assert (= temp10060_34 #x0000000000000002))
(assert (= temp10060_35 temp10060_34))
(assert (= temp10060_36 (select ARGNAME_padding_NAMEEND_VAL temp10060_35)))
(assert (= temp10060_37 #x0000000000000000))
(assert (= temp10060_38 #x0000000000000003))
(assert (= temp10060_39 temp10060_38))
(assert (= temp10060_40 (select ARGNAME_padding_NAMEEND_VAL temp10060_39)))
(assert (= temp10060_41 #x0000000000000000))
(assert (= temp10060_42 #x0000000000000004))
(assert (= temp10060_43 temp10060_42))
(assert (= temp10060_44 (select ARGNAME_padding_NAMEEND_VAL temp10060_43)))
(assert (= temp10060_45 #x0000000000000000))
(assert (= temp10060_46 #x0000000000000005))
(assert (= temp10060_47 temp10060_46))
(assert (= temp10060_48 (select ARGNAME_padding_NAMEEND_VAL temp10060_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10060_28 temp10060_25)
             (bvslt temp10060_32 temp10060_29)
             (bvslt temp10060_36 temp10060_33)
             (bvslt temp10060_40 temp10060_37)
             (bvslt temp10060_44 temp10060_41)
             (bvslt temp10060_48 temp10060_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10060_49 #x0000000000000000))
(assert (= var1191714 temp10060_49))
(assert (= temp10060_50 #x0000000000000000))
(assert (= temp10060_51 temp10060_50))
(assert (= temp10060_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10060_51)))
(assert (= temp10060_53 #x0000000000000001))
(assert (= temp10060_54 temp10060_53))
(assert (= temp10060_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10060_54)))
(assert (= temp10060_56 #x0000000000000002))
(assert (= temp10060_57 temp10060_56))
(assert (= temp10060_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10060_57)))
(assert (= temp10060_59 #x0000000000000003))
(assert (= temp10060_60 temp10060_59))
(assert (= temp10060_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10060_60)))
(assert (= temp10060_62 #x0000000000000004))
(assert (= temp10060_63 temp10060_62))
(assert (= temp10060_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10060_63)))
(assert (= temp10060_65 #x0000000000000005))
(assert (= temp10060_66 temp10060_65))
(assert (= temp10060_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10060_66)))
(assert (= temp10060_68 #x0000000000000000))
(assert (= temp10060_69 #x0000000000000000))
(assert (= temp10060_70 temp10060_69))
(assert (= temp10060_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10060_70)))
(assert (= temp10060_72 #x0000000000000000))
(assert (= temp10060_73 #x0000000000000001))
(assert (= temp10060_74 temp10060_73))
(assert (= temp10060_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10060_74)))
(assert (= temp10060_76 #x0000000000000000))
(assert (= temp10060_77 #x0000000000000002))
(assert (= temp10060_78 temp10060_77))
(assert (= temp10060_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10060_78)))
(assert (= temp10060_80 #x0000000000000000))
(assert (= temp10060_81 #x0000000000000003))
(assert (= temp10060_82 temp10060_81))
(assert (= temp10060_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10060_82)))
(assert (= temp10060_84 #x0000000000000000))
(assert (= temp10060_85 #x0000000000000004))
(assert (= temp10060_86 temp10060_85))
(assert (= temp10060_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10060_86)))
(assert (= temp10060_88 #x0000000000000000))
(assert (= temp10060_89 #x0000000000000005))
(assert (= temp10060_90 temp10060_89))
(assert (= temp10060_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10060_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10060_71 temp10060_68)
             (bvslt temp10060_75 temp10060_72)
             (bvslt temp10060_79 temp10060_76)
             (bvslt temp10060_83 temp10060_80)
             (bvslt temp10060_87 temp10060_84)
             (bvslt temp10060_91 temp10060_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10060_92 #x0000000000000000))
(assert (= var1191725 temp10060_92))
(assert (= temp10060_93 #x0000000000000000))
(assert (= temp10060_94 temp10060_93))
(assert (= temp10060_95 (select ARGNAME_stride_NAMEEND_VAL temp10060_94)))
(assert (= temp10060_96 #x0000000000000001))
(assert (= temp10060_97 temp10060_96))
(assert (= temp10060_98 (select ARGNAME_stride_NAMEEND_VAL temp10060_97)))
(assert (= temp10060_99 #x0000000000000002))
(assert (= temp10060_100 temp10060_99))
(assert (= temp10060_101 (select ARGNAME_stride_NAMEEND_VAL temp10060_100)))
(assert (= temp10060_102 #x0000000000000003))
(assert (= temp10060_103 temp10060_102))
(assert (= temp10060_104 (select ARGNAME_stride_NAMEEND_VAL temp10060_103)))
(assert (= temp10060_105 #x0000000000000004))
(assert (= temp10060_106 temp10060_105))
(assert (= temp10060_107 (select ARGNAME_stride_NAMEEND_VAL temp10060_106)))
(assert (= temp10060_108 #x0000000000000005))
(assert (= temp10060_109 temp10060_108))
(assert (= temp10060_110 (select ARGNAME_stride_NAMEEND_VAL temp10060_109)))
(assert (= temp10060_111 #x0000000000000000))
(assert (= temp10060_112 #x0000000000000000))
(assert (= temp10060_113 temp10060_112))
(assert (= temp10060_114 (select ARGNAME_stride_NAMEEND_VAL temp10060_113)))
(assert (= temp10060_115 #x0000000000000000))
(assert (= temp10060_116 #x0000000000000001))
(assert (= temp10060_117 temp10060_116))
(assert (= temp10060_118 (select ARGNAME_stride_NAMEEND_VAL temp10060_117)))
(assert (= temp10060_119 #x0000000000000000))
(assert (= temp10060_120 #x0000000000000002))
(assert (= temp10060_121 temp10060_120))
(assert (= temp10060_122 (select ARGNAME_stride_NAMEEND_VAL temp10060_121)))
(assert (= temp10060_123 #x0000000000000000))
(assert (= temp10060_124 #x0000000000000003))
(assert (= temp10060_125 temp10060_124))
(assert (= temp10060_126 (select ARGNAME_stride_NAMEEND_VAL temp10060_125)))
(assert (= temp10060_127 #x0000000000000000))
(assert (= temp10060_128 #x0000000000000004))
(assert (= temp10060_129 temp10060_128))
(assert (= temp10060_130 (select ARGNAME_stride_NAMEEND_VAL temp10060_129)))
(assert (= temp10060_131 #x0000000000000000))
(assert (= temp10060_132 #x0000000000000005))
(assert (= temp10060_133 temp10060_132))
(assert (= temp10060_134 (select ARGNAME_stride_NAMEEND_VAL temp10060_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10060_114 temp10060_111)
             (bvsle temp10060_118 temp10060_115)
             (bvsle temp10060_122 temp10060_119)
             (bvsle temp10060_126 temp10060_123)
             (bvsle temp10060_130 temp10060_127)
             (bvsle temp10060_134 temp10060_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10060_135 #x0000000000000000))
(assert (= var1191735 temp10060_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10060_136 #x0000000000000001))
(assert (= var1191747 temp10060_136))
(assert (= temp10060_137 #x0000000000000000))
(assert (= var1179826 temp10060_137))
(assert (= temp10060_138 #x0000000000000000))
(assert (= temp10060_139 temp10060_138))
(assert (= temp10060_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10060_139)))
(assert (= temp10060_141 #x0000000000000001))
(assert (= temp10060_142 temp10060_141))
(assert (= temp10060_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10060_142)))
(assert (= temp10060_144 #x0000000000000002))
(assert (= temp10060_145 temp10060_144))
(assert (= temp10060_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10060_145)))
(assert (= temp10060_147 #x0000000000000003))
(assert (= temp10060_148 temp10060_147))
(assert (= temp10060_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10060_148)))
(assert (= temp10060_150 #x0000000000000004))
(assert (= temp10060_151 temp10060_150))
(assert (= temp10060_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10060_151)))
(assert (= temp10060_153 #x0000000000000005))
(assert (= temp10060_154 temp10060_153))
(assert (= temp10060_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10060_154)))
(assert (= temp10060_157 var1179826))
(assert (= temp10060_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10060_157)))
(assert (= temp10060_156 temp10060_158))
(assert (= var1191780
   (ite (bvslt temp10060_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10060_159 #x0000000000000000))
(assert (= var1191780 temp10060_159))
(assert (= temp10060_160 #x0000000000000000))
(assert (= var1179826 temp10060_160))
(assert (= temp10060_162 var1179826))
(assert (= temp10060_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10060_162)))
(assert (= temp10060_161 temp10060_163))
(assert (= var1191802 (bvsmod temp10060_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10060_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10060_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10060_165 #x0000000000000001))
(assert (= var1191803 temp10060_165))
(assert (= temp10060_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10060_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10060_167 #x0000000000000001))
(assert (= var1191823 temp10060_167))
(assert (= temp10060_168 #x0000000000000001))
(assert (= var1180714 temp10060_168))
(assert (= temp10060_169 #x0000000000000000))
(assert (= temp10060_170 temp10060_169))
(assert (= temp10060_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10060_170)))
(assert (= temp10060_172 #x0000000000000001))
(assert (= temp10060_173 temp10060_172))
(assert (= temp10060_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10060_173)))
(assert (= temp10060_175 #x0000000000000002))
(assert (= temp10060_176 temp10060_175))
(assert (= temp10060_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10060_176)))
(assert (= temp10060_178 #x0000000000000003))
(assert (= temp10060_179 temp10060_178))
(assert (= temp10060_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10060_179)))
(assert (= temp10060_181 #x0000000000000004))
(assert (= temp10060_182 temp10060_181))
(assert (= temp10060_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10060_182)))
(assert (= temp10060_184 #x0000000000000005))
(assert (= temp10060_185 temp10060_184))
(assert (= temp10060_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10060_185)))
(assert (= temp10060_187 #x0000000000000000))
(assert (= temp10060_188
   (ite (bvslt var1180714 temp10060_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10060_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10060_188)))
(assert (= var1191831 temp10060_189))
(assert (bvslt (ite (bvslt var1180714 temp10060_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10060_190 #x0000000000000001))
(assert (= var1180714 temp10060_190))
(assert (= temp10060_192 var1180714))
(assert (= temp10060_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10060_192)))
(assert (= temp10060_191 temp10060_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10060_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10060_194 #x0000000000000001))
(assert (= var1191836 temp10060_194))
(assert (= temp10060_195 #x0000000000000000))
(assert (= var1179826 temp10060_195))
(assert (= temp10060_197 var1179826))
(assert (= temp10060_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10060_197)))
(assert (= temp10060_196 temp10060_198))
(assert (= temp10060_199 #x0000000000000002))
(assert (= var1586025 temp10060_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10060_200 #x0000000000000001))
(assert (= var1191993 temp10060_200))
(assert (= temp10060_201 #x0000000000000001))
(assert (= var2700303 temp10060_201))
(assert (= temp10060_202 #x0000000000000001))
(assert (= var2962447 temp10060_202))
(assert (= temp10060_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10060_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10060_204 #x0000000000000001))
(assert (= var211058 temp10060_204))
(assert (= temp10060_205 #x0000000000000001))
(assert (= var211188 temp10060_205))
(assert (= var3879401 var211188))
(assert (= temp10060_206 #x0000000000000000))
(assert (= var3866802 temp10060_206))
(assert (= temp10060_207 #x0000000000000000))
(assert (= temp10060_208
   (ite (bvslt var3866802 temp10060_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10060_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10060_208)))
(assert (= var3879420 temp10060_209))
(assert (bvslt (ite (bvslt var3866802 temp10060_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10060_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10060_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10060_211 #x0000000000000000))
(assert (= var3879421 temp10060_211))
(assert (= temp10060_212 #x0000000000000001))
(assert (= var3867690 temp10060_212))
(assert (= temp10060_213 #x0000000000000000))
(assert (= temp10060_214
   (ite (bvslt var3867690 temp10060_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10060_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10060_214)))
(assert (= var3879423 temp10060_215))
(assert (bvslt (ite (bvslt var3867690 temp10060_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10060_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10060_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10060_217 #x0000000000000001))
(assert (= var3879424 temp10060_217))
(assert (= temp10060_218 #x0000000000000000))
(assert (= var4079423 temp10060_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10060_219 #x0000000000000002))
(assert (= var4208259 temp10060_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10060_220 #x0000000000000000))
(assert (= var4273820 temp10060_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10060_222 #xffffffffffffffff))
(assert (= temp10060_221 temp10060_222))
(assert (= temp10060_223 #x0000000000000001))
(assert (= var197674 temp10060_223))
(assert (= temp10060_224 #x0000000000000000))
(assert (= temp10060_225
   (ite (bvslt var197674 temp10060_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10060_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10060_225)))
(assert (= var211595 temp10060_226))
(assert (bvslt (ite (bvslt var197674 temp10060_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10060_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10060_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10060_228 #x0000000000000001))
(assert (= var211596 temp10060_228))
(assert (= temp10060_230 #xffffffffffffffff))
(assert (= temp10060_229 temp10060_230))
(assert (= temp10060_231 #x0000000000000001))
(assert (= var211058 temp10060_231))
(assert (= temp10060_232 #x0000000000000000))
(assert (= var5452564 temp10060_232))
(assert (= var5452531 var5452564))
(assert (= var5321095 var5452531))
(assert (= var5321091 var5321095))
(assert (= var212669 var5321091))
(assert (= temp10060_233 #x0000000000000000))
(assert (= var212669 temp10060_233))
(model-add temp10060_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10060_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10060_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10060_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





