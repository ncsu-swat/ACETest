(declare-fun temp10868_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10868_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10868_3 () (_ BitVec 64))
(declare-fun temp10868_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10868_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10868_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10868_7 () (_ BitVec 64))
(declare-fun temp10868_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10868_9 () (_ BitVec 64))
(declare-fun temp10868_10 () (_ BitVec 64))
(declare-fun temp10868_11 () (_ BitVec 64))
(declare-fun temp10868_12 () (_ BitVec 64))
(declare-fun temp10868_13 () (_ BitVec 64))
(declare-fun temp10868_14 () (_ BitVec 64))
(declare-fun temp10868_15 () (_ BitVec 64))
(declare-fun temp10868_16 () (_ BitVec 64))
(declare-fun temp10868_17 () (_ BitVec 64))
(declare-fun temp10868_18 () (_ BitVec 64))
(declare-fun temp10868_19 () (_ BitVec 64))
(declare-fun temp10868_20 () (_ BitVec 64))
(declare-fun temp10868_21 () (_ BitVec 64))
(declare-fun temp10868_22 () (_ BitVec 64))
(declare-fun temp10868_23 () (_ BitVec 64))
(declare-fun temp10868_24 () (_ BitVec 64))
(declare-fun temp10868_25 () (_ BitVec 64))
(declare-fun temp10868_26 () (_ BitVec 64))
(declare-fun temp10868_27 () (_ BitVec 64))
(declare-fun temp10868_28 () (_ BitVec 64))
(declare-fun temp10868_29 () (_ BitVec 64))
(declare-fun temp10868_30 () (_ BitVec 64))
(declare-fun temp10868_31 () (_ BitVec 64))
(declare-fun temp10868_32 () (_ BitVec 64))
(declare-fun temp10868_33 () (_ BitVec 64))
(declare-fun temp10868_34 () (_ BitVec 64))
(declare-fun temp10868_35 () (_ BitVec 64))
(declare-fun temp10868_36 () (_ BitVec 64))
(declare-fun temp10868_37 () (_ BitVec 64))
(declare-fun temp10868_38 () (_ BitVec 64))
(declare-fun temp10868_39 () (_ BitVec 64))
(declare-fun temp10868_40 () (_ BitVec 64))
(declare-fun temp10868_41 () (_ BitVec 64))
(declare-fun temp10868_42 () (_ BitVec 64))
(declare-fun temp10868_43 () (_ BitVec 64))
(declare-fun temp10868_44 () (_ BitVec 64))
(declare-fun temp10868_45 () (_ BitVec 64))
(declare-fun temp10868_46 () (_ BitVec 64))
(declare-fun temp10868_47 () (_ BitVec 64))
(declare-fun temp10868_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10868_49 () (_ BitVec 64))
(declare-fun temp10868_50 () (_ BitVec 64))
(declare-fun temp10868_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10868_52 () (_ BitVec 64))
(declare-fun temp10868_53 () (_ BitVec 64))
(declare-fun temp10868_54 () (_ BitVec 64))
(declare-fun temp10868_55 () (_ BitVec 64))
(declare-fun temp10868_56 () (_ BitVec 64))
(declare-fun temp10868_57 () (_ BitVec 64))
(declare-fun temp10868_58 () (_ BitVec 64))
(declare-fun temp10868_59 () (_ BitVec 64))
(declare-fun temp10868_60 () (_ BitVec 64))
(declare-fun temp10868_61 () (_ BitVec 64))
(declare-fun temp10868_62 () (_ BitVec 64))
(declare-fun temp10868_63 () (_ BitVec 64))
(declare-fun temp10868_64 () (_ BitVec 64))
(declare-fun temp10868_65 () (_ BitVec 64))
(declare-fun temp10868_66 () (_ BitVec 64))
(declare-fun temp10868_67 () (_ BitVec 64))
(declare-fun temp10868_68 () (_ BitVec 64))
(declare-fun temp10868_69 () (_ BitVec 64))
(declare-fun temp10868_70 () (_ BitVec 64))
(declare-fun temp10868_71 () (_ BitVec 64))
(declare-fun temp10868_72 () (_ BitVec 64))
(declare-fun temp10868_73 () (_ BitVec 64))
(declare-fun temp10868_74 () (_ BitVec 64))
(declare-fun temp10868_75 () (_ BitVec 64))
(declare-fun temp10868_76 () (_ BitVec 64))
(declare-fun temp10868_77 () (_ BitVec 64))
(declare-fun temp10868_78 () (_ BitVec 64))
(declare-fun temp10868_79 () (_ BitVec 64))
(declare-fun temp10868_80 () (_ BitVec 64))
(declare-fun temp10868_81 () (_ BitVec 64))
(declare-fun temp10868_82 () (_ BitVec 64))
(declare-fun temp10868_83 () (_ BitVec 64))
(declare-fun temp10868_84 () (_ BitVec 64))
(declare-fun temp10868_85 () (_ BitVec 64))
(declare-fun temp10868_86 () (_ BitVec 64))
(declare-fun temp10868_87 () (_ BitVec 64))
(declare-fun temp10868_88 () (_ BitVec 64))
(declare-fun temp10868_89 () (_ BitVec 64))
(declare-fun temp10868_90 () (_ BitVec 64))
(declare-fun temp10868_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10868_92 () (_ BitVec 64))
(declare-fun temp10868_93 () (_ BitVec 64))
(declare-fun temp10868_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10868_95 () (_ BitVec 64))
(declare-fun temp10868_96 () (_ BitVec 64))
(declare-fun temp10868_97 () (_ BitVec 64))
(declare-fun temp10868_98 () (_ BitVec 64))
(declare-fun temp10868_99 () (_ BitVec 64))
(declare-fun temp10868_100 () (_ BitVec 64))
(declare-fun temp10868_101 () (_ BitVec 64))
(declare-fun temp10868_102 () (_ BitVec 64))
(declare-fun temp10868_103 () (_ BitVec 64))
(declare-fun temp10868_104 () (_ BitVec 64))
(declare-fun temp10868_105 () (_ BitVec 64))
(declare-fun temp10868_106 () (_ BitVec 64))
(declare-fun temp10868_107 () (_ BitVec 64))
(declare-fun temp10868_108 () (_ BitVec 64))
(declare-fun temp10868_109 () (_ BitVec 64))
(declare-fun temp10868_110 () (_ BitVec 64))
(declare-fun temp10868_111 () (_ BitVec 64))
(declare-fun temp10868_112 () (_ BitVec 64))
(declare-fun temp10868_113 () (_ BitVec 64))
(declare-fun temp10868_114 () (_ BitVec 64))
(declare-fun temp10868_115 () (_ BitVec 64))
(declare-fun temp10868_116 () (_ BitVec 64))
(declare-fun temp10868_117 () (_ BitVec 64))
(declare-fun temp10868_118 () (_ BitVec 64))
(declare-fun temp10868_119 () (_ BitVec 64))
(declare-fun temp10868_120 () (_ BitVec 64))
(declare-fun temp10868_121 () (_ BitVec 64))
(declare-fun temp10868_122 () (_ BitVec 64))
(declare-fun temp10868_123 () (_ BitVec 64))
(declare-fun temp10868_124 () (_ BitVec 64))
(declare-fun temp10868_125 () (_ BitVec 64))
(declare-fun temp10868_126 () (_ BitVec 64))
(declare-fun temp10868_127 () (_ BitVec 64))
(declare-fun temp10868_128 () (_ BitVec 64))
(declare-fun temp10868_129 () (_ BitVec 64))
(declare-fun temp10868_130 () (_ BitVec 64))
(declare-fun temp10868_131 () (_ BitVec 64))
(declare-fun temp10868_132 () (_ BitVec 64))
(declare-fun temp10868_133 () (_ BitVec 64))
(declare-fun temp10868_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10868_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10868_136 () (_ BitVec 64))
(declare-fun temp10868_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10868_138 () (_ BitVec 64))
(declare-fun temp10868_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10868_140 () (_ BitVec 64))
(declare-fun temp10868_141 () (_ BitVec 64))
(declare-fun temp10868_142 () (_ BitVec 64))
(declare-fun temp10868_143 () (_ BitVec 64))
(declare-fun temp10868_144 () (_ BitVec 64))
(declare-fun temp10868_145 () (_ BitVec 64))
(declare-fun temp10868_146 () (_ BitVec 64))
(declare-fun temp10868_147 () (_ BitVec 64))
(declare-fun temp10868_148 () (_ BitVec 64))
(declare-fun temp10868_149 () (_ BitVec 64))
(declare-fun temp10868_150 () (_ BitVec 64))
(declare-fun temp10868_151 () (_ BitVec 64))
(declare-fun temp10868_152 () (_ BitVec 64))
(declare-fun temp10868_153 () (_ BitVec 64))
(declare-fun temp10868_154 () (_ BitVec 64))
(declare-fun temp10868_155 () (_ BitVec 64))
(declare-fun temp10868_157 () (_ BitVec 64))
(declare-fun temp10868_158 () (_ BitVec 64))
(declare-fun temp10868_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10868_159 () (_ BitVec 64))
(declare-fun temp10868_160 () (_ BitVec 64))
(declare-fun temp10868_162 () (_ BitVec 64))
(declare-fun temp10868_163 () (_ BitVec 64))
(declare-fun temp10868_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10868_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10868_165 () (_ BitVec 64))
(declare-fun temp10868_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10868_167 () (_ BitVec 64))
(declare-fun temp10868_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10868_169 () (_ BitVec 64))
(declare-fun temp10868_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10868_171 () (_ BitVec 64))
(declare-fun temp10868_172 () (_ BitVec 64))
(declare-fun temp10868_173 () (_ BitVec 64))
(declare-fun temp10868_174 () (_ BitVec 64))
(declare-fun temp10868_175 () (_ BitVec 64))
(declare-fun temp10868_176 () (_ BitVec 64))
(declare-fun temp10868_177 () (_ BitVec 64))
(declare-fun temp10868_178 () (_ BitVec 64))
(declare-fun temp10868_179 () (_ BitVec 64))
(declare-fun temp10868_180 () (_ BitVec 64))
(declare-fun temp10868_181 () (_ BitVec 64))
(declare-fun temp10868_182 () (_ BitVec 64))
(declare-fun temp10868_183 () (_ BitVec 64))
(declare-fun temp10868_184 () (_ BitVec 64))
(declare-fun temp10868_185 () (_ BitVec 64))
(declare-fun temp10868_186 () (_ BitVec 64))
(declare-fun temp10868_187 () (_ BitVec 64))
(declare-fun temp10868_188 () (_ BitVec 64))
(declare-fun temp10868_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10868_190 () (_ BitVec 64))
(declare-fun temp10868_192 () (_ BitVec 64))
(declare-fun temp10868_193 () (_ BitVec 64))
(declare-fun temp10868_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10868_194 () (_ BitVec 64))
(declare-fun temp10868_195 () (_ BitVec 64))
(declare-fun temp10868_197 () (_ BitVec 64))
(declare-fun temp10868_198 () (_ BitVec 64))
(declare-fun temp10868_196 () (_ BitVec 64))
(declare-fun temp10868_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10868_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10868_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10868_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10868_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10868_204 () (_ BitVec 64))
(declare-fun temp10868_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10868_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10868_207 () (_ BitVec 64))
(declare-fun temp10868_208 () (_ BitVec 64))
(declare-fun temp10868_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10868_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10868_211 () (_ BitVec 64))
(declare-fun temp10868_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10868_213 () (_ BitVec 64))
(declare-fun temp10868_214 () (_ BitVec 64))
(declare-fun temp10868_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10868_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10868_217 () (_ BitVec 64))
(declare-fun temp10868_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10868_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10868_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10868_221 () (_ BitVec 64))
(declare-fun temp10868_222 () (_ BitVec 64))
(declare-fun var6894356 () (_ BitVec 64))
(declare-fun var6894323 () (_ BitVec 64))
(declare-fun var6762887 () (_ BitVec 64))
(declare-fun var6762883 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10868_223 () (_ BitVec 64))
(assert (= temp10868_1 #x0000000000000001))
(assert (= var77203 temp10868_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10868_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10868_2)))
(assert (= temp10868_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10868_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10868_4 #x0000000000000000))
(assert (= var210941 temp10868_4))
(assert (= temp10868_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10868_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10868_6 #x0000000000000000))
(assert (= var210986 temp10868_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10868_7 #x0000000000000000))
(assert (= temp10868_8 temp10868_7))
(assert (= temp10868_9 (select ARGNAME_padding_NAMEEND_VAL temp10868_8)))
(assert (= temp10868_10 #x0000000000000001))
(assert (= temp10868_11 temp10868_10))
(assert (= temp10868_12 (select ARGNAME_padding_NAMEEND_VAL temp10868_11)))
(assert (= temp10868_13 #x0000000000000002))
(assert (= temp10868_14 temp10868_13))
(assert (= temp10868_15 (select ARGNAME_padding_NAMEEND_VAL temp10868_14)))
(assert (= temp10868_16 #x0000000000000003))
(assert (= temp10868_17 temp10868_16))
(assert (= temp10868_18 (select ARGNAME_padding_NAMEEND_VAL temp10868_17)))
(assert (= temp10868_19 #x0000000000000004))
(assert (= temp10868_20 temp10868_19))
(assert (= temp10868_21 (select ARGNAME_padding_NAMEEND_VAL temp10868_20)))
(assert (= temp10868_22 #x0000000000000005))
(assert (= temp10868_23 temp10868_22))
(assert (= temp10868_24 (select ARGNAME_padding_NAMEEND_VAL temp10868_23)))
(assert (= temp10868_25 #x0000000000000000))
(assert (= temp10868_26 #x0000000000000000))
(assert (= temp10868_27 temp10868_26))
(assert (= temp10868_28 (select ARGNAME_padding_NAMEEND_VAL temp10868_27)))
(assert (= temp10868_29 #x0000000000000000))
(assert (= temp10868_30 #x0000000000000001))
(assert (= temp10868_31 temp10868_30))
(assert (= temp10868_32 (select ARGNAME_padding_NAMEEND_VAL temp10868_31)))
(assert (= temp10868_33 #x0000000000000000))
(assert (= temp10868_34 #x0000000000000002))
(assert (= temp10868_35 temp10868_34))
(assert (= temp10868_36 (select ARGNAME_padding_NAMEEND_VAL temp10868_35)))
(assert (= temp10868_37 #x0000000000000000))
(assert (= temp10868_38 #x0000000000000003))
(assert (= temp10868_39 temp10868_38))
(assert (= temp10868_40 (select ARGNAME_padding_NAMEEND_VAL temp10868_39)))
(assert (= temp10868_41 #x0000000000000000))
(assert (= temp10868_42 #x0000000000000004))
(assert (= temp10868_43 temp10868_42))
(assert (= temp10868_44 (select ARGNAME_padding_NAMEEND_VAL temp10868_43)))
(assert (= temp10868_45 #x0000000000000000))
(assert (= temp10868_46 #x0000000000000005))
(assert (= temp10868_47 temp10868_46))
(assert (= temp10868_48 (select ARGNAME_padding_NAMEEND_VAL temp10868_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10868_28 temp10868_25)
             (bvslt temp10868_32 temp10868_29)
             (bvslt temp10868_36 temp10868_33)
             (bvslt temp10868_40 temp10868_37)
             (bvslt temp10868_44 temp10868_41)
             (bvslt temp10868_48 temp10868_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10868_49 #x0000000000000000))
(assert (= var1191714 temp10868_49))
(assert (= temp10868_50 #x0000000000000000))
(assert (= temp10868_51 temp10868_50))
(assert (= temp10868_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10868_51)))
(assert (= temp10868_53 #x0000000000000001))
(assert (= temp10868_54 temp10868_53))
(assert (= temp10868_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10868_54)))
(assert (= temp10868_56 #x0000000000000002))
(assert (= temp10868_57 temp10868_56))
(assert (= temp10868_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10868_57)))
(assert (= temp10868_59 #x0000000000000003))
(assert (= temp10868_60 temp10868_59))
(assert (= temp10868_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10868_60)))
(assert (= temp10868_62 #x0000000000000004))
(assert (= temp10868_63 temp10868_62))
(assert (= temp10868_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10868_63)))
(assert (= temp10868_65 #x0000000000000005))
(assert (= temp10868_66 temp10868_65))
(assert (= temp10868_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10868_66)))
(assert (= temp10868_68 #x0000000000000000))
(assert (= temp10868_69 #x0000000000000000))
(assert (= temp10868_70 temp10868_69))
(assert (= temp10868_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10868_70)))
(assert (= temp10868_72 #x0000000000000000))
(assert (= temp10868_73 #x0000000000000001))
(assert (= temp10868_74 temp10868_73))
(assert (= temp10868_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10868_74)))
(assert (= temp10868_76 #x0000000000000000))
(assert (= temp10868_77 #x0000000000000002))
(assert (= temp10868_78 temp10868_77))
(assert (= temp10868_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10868_78)))
(assert (= temp10868_80 #x0000000000000000))
(assert (= temp10868_81 #x0000000000000003))
(assert (= temp10868_82 temp10868_81))
(assert (= temp10868_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10868_82)))
(assert (= temp10868_84 #x0000000000000000))
(assert (= temp10868_85 #x0000000000000004))
(assert (= temp10868_86 temp10868_85))
(assert (= temp10868_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10868_86)))
(assert (= temp10868_88 #x0000000000000000))
(assert (= temp10868_89 #x0000000000000005))
(assert (= temp10868_90 temp10868_89))
(assert (= temp10868_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10868_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10868_71 temp10868_68)
             (bvslt temp10868_75 temp10868_72)
             (bvslt temp10868_79 temp10868_76)
             (bvslt temp10868_83 temp10868_80)
             (bvslt temp10868_87 temp10868_84)
             (bvslt temp10868_91 temp10868_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10868_92 #x0000000000000000))
(assert (= var1191725 temp10868_92))
(assert (= temp10868_93 #x0000000000000000))
(assert (= temp10868_94 temp10868_93))
(assert (= temp10868_95 (select ARGNAME_stride_NAMEEND_VAL temp10868_94)))
(assert (= temp10868_96 #x0000000000000001))
(assert (= temp10868_97 temp10868_96))
(assert (= temp10868_98 (select ARGNAME_stride_NAMEEND_VAL temp10868_97)))
(assert (= temp10868_99 #x0000000000000002))
(assert (= temp10868_100 temp10868_99))
(assert (= temp10868_101 (select ARGNAME_stride_NAMEEND_VAL temp10868_100)))
(assert (= temp10868_102 #x0000000000000003))
(assert (= temp10868_103 temp10868_102))
(assert (= temp10868_104 (select ARGNAME_stride_NAMEEND_VAL temp10868_103)))
(assert (= temp10868_105 #x0000000000000004))
(assert (= temp10868_106 temp10868_105))
(assert (= temp10868_107 (select ARGNAME_stride_NAMEEND_VAL temp10868_106)))
(assert (= temp10868_108 #x0000000000000005))
(assert (= temp10868_109 temp10868_108))
(assert (= temp10868_110 (select ARGNAME_stride_NAMEEND_VAL temp10868_109)))
(assert (= temp10868_111 #x0000000000000000))
(assert (= temp10868_112 #x0000000000000000))
(assert (= temp10868_113 temp10868_112))
(assert (= temp10868_114 (select ARGNAME_stride_NAMEEND_VAL temp10868_113)))
(assert (= temp10868_115 #x0000000000000000))
(assert (= temp10868_116 #x0000000000000001))
(assert (= temp10868_117 temp10868_116))
(assert (= temp10868_118 (select ARGNAME_stride_NAMEEND_VAL temp10868_117)))
(assert (= temp10868_119 #x0000000000000000))
(assert (= temp10868_120 #x0000000000000002))
(assert (= temp10868_121 temp10868_120))
(assert (= temp10868_122 (select ARGNAME_stride_NAMEEND_VAL temp10868_121)))
(assert (= temp10868_123 #x0000000000000000))
(assert (= temp10868_124 #x0000000000000003))
(assert (= temp10868_125 temp10868_124))
(assert (= temp10868_126 (select ARGNAME_stride_NAMEEND_VAL temp10868_125)))
(assert (= temp10868_127 #x0000000000000000))
(assert (= temp10868_128 #x0000000000000004))
(assert (= temp10868_129 temp10868_128))
(assert (= temp10868_130 (select ARGNAME_stride_NAMEEND_VAL temp10868_129)))
(assert (= temp10868_131 #x0000000000000000))
(assert (= temp10868_132 #x0000000000000005))
(assert (= temp10868_133 temp10868_132))
(assert (= temp10868_134 (select ARGNAME_stride_NAMEEND_VAL temp10868_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10868_114 temp10868_111)
             (bvsle temp10868_118 temp10868_115)
             (bvsle temp10868_122 temp10868_119)
             (bvsle temp10868_126 temp10868_123)
             (bvsle temp10868_130 temp10868_127)
             (bvsle temp10868_134 temp10868_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10868_135 #x0000000000000000))
(assert (= var1191735 temp10868_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10868_136 #x0000000000000001))
(assert (= var1191747 temp10868_136))
(assert (= temp10868_137 #x0000000000000000))
(assert (= var1179826 temp10868_137))
(assert (= temp10868_138 #x0000000000000000))
(assert (= temp10868_139 temp10868_138))
(assert (= temp10868_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10868_139)))
(assert (= temp10868_141 #x0000000000000001))
(assert (= temp10868_142 temp10868_141))
(assert (= temp10868_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10868_142)))
(assert (= temp10868_144 #x0000000000000002))
(assert (= temp10868_145 temp10868_144))
(assert (= temp10868_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10868_145)))
(assert (= temp10868_147 #x0000000000000003))
(assert (= temp10868_148 temp10868_147))
(assert (= temp10868_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10868_148)))
(assert (= temp10868_150 #x0000000000000004))
(assert (= temp10868_151 temp10868_150))
(assert (= temp10868_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10868_151)))
(assert (= temp10868_153 #x0000000000000005))
(assert (= temp10868_154 temp10868_153))
(assert (= temp10868_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10868_154)))
(assert (= temp10868_157 var1179826))
(assert (= temp10868_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10868_157)))
(assert (= temp10868_156 temp10868_158))
(assert (= var1191780
   (ite (bvslt temp10868_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10868_159 #x0000000000000000))
(assert (= var1191780 temp10868_159))
(assert (= temp10868_160 #x0000000000000000))
(assert (= var1179826 temp10868_160))
(assert (= temp10868_162 var1179826))
(assert (= temp10868_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10868_162)))
(assert (= temp10868_161 temp10868_163))
(assert (= var1191802 (bvsmod temp10868_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10868_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10868_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10868_165 #x0000000000000001))
(assert (= var1191803 temp10868_165))
(assert (= temp10868_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10868_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10868_167 #x0000000000000001))
(assert (= var1191823 temp10868_167))
(assert (= temp10868_168 #x0000000000000001))
(assert (= var1180714 temp10868_168))
(assert (= temp10868_169 #x0000000000000000))
(assert (= temp10868_170 temp10868_169))
(assert (= temp10868_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10868_170)))
(assert (= temp10868_172 #x0000000000000001))
(assert (= temp10868_173 temp10868_172))
(assert (= temp10868_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10868_173)))
(assert (= temp10868_175 #x0000000000000002))
(assert (= temp10868_176 temp10868_175))
(assert (= temp10868_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10868_176)))
(assert (= temp10868_178 #x0000000000000003))
(assert (= temp10868_179 temp10868_178))
(assert (= temp10868_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10868_179)))
(assert (= temp10868_181 #x0000000000000004))
(assert (= temp10868_182 temp10868_181))
(assert (= temp10868_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10868_182)))
(assert (= temp10868_184 #x0000000000000005))
(assert (= temp10868_185 temp10868_184))
(assert (= temp10868_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10868_185)))
(assert (= temp10868_187 #x0000000000000000))
(assert (= temp10868_188
   (ite (bvslt var1180714 temp10868_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10868_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10868_188)))
(assert (= var1191831 temp10868_189))
(assert (bvslt (ite (bvslt var1180714 temp10868_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10868_190 #x0000000000000001))
(assert (= var1180714 temp10868_190))
(assert (= temp10868_192 var1180714))
(assert (= temp10868_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10868_192)))
(assert (= temp10868_191 temp10868_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10868_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10868_194 #x0000000000000001))
(assert (= var1191836 temp10868_194))
(assert (= temp10868_195 #x0000000000000000))
(assert (= var1179826 temp10868_195))
(assert (= temp10868_197 var1179826))
(assert (= temp10868_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10868_197)))
(assert (= temp10868_196 temp10868_198))
(assert (= temp10868_199 #x0000000000000002))
(assert (= var1586025 temp10868_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10868_200 #x0000000000000001))
(assert (= var1191993 temp10868_200))
(assert (= temp10868_201 #x0000000000000001))
(assert (= var2700303 temp10868_201))
(assert (= temp10868_202 #x0000000000000001))
(assert (= var2962447 temp10868_202))
(assert (= temp10868_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10868_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10868_204 #x0000000000000001))
(assert (= var211058 temp10868_204))
(assert (= temp10868_205 #x0000000000000001))
(assert (= var211188 temp10868_205))
(assert (= var3879401 var211188))
(assert (= temp10868_206 #x0000000000000000))
(assert (= var3866802 temp10868_206))
(assert (= temp10868_207 #x0000000000000000))
(assert (= temp10868_208
   (ite (bvslt var3866802 temp10868_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10868_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10868_208)))
(assert (= var3879420 temp10868_209))
(assert (bvslt (ite (bvslt var3866802 temp10868_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10868_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10868_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10868_211 #x0000000000000000))
(assert (= var3879421 temp10868_211))
(assert (= temp10868_212 #x0000000000000001))
(assert (= var3867690 temp10868_212))
(assert (= temp10868_213 #x0000000000000000))
(assert (= temp10868_214
   (ite (bvslt var3867690 temp10868_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10868_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10868_214)))
(assert (= var3879423 temp10868_215))
(assert (bvslt (ite (bvslt var3867690 temp10868_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10868_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10868_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10868_217 #x0000000000000001))
(assert (= var3879424 temp10868_217))
(assert (= temp10868_218 #x0000000000000000))
(assert (= var4133117 temp10868_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10868_219 #x0000000000000002))
(assert (= var4339331 temp10868_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10868_220 #x0000000000000000))
(assert (= var4404892 temp10868_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10868_221 #x0000000000000001))
(assert (= var211058 temp10868_221))
(assert (= temp10868_222 #x0000000000000000))
(assert (= var6894356 temp10868_222))
(assert (= var6894323 var6894356))
(assert (= var6762887 var6894323))
(assert (= var6762883 var6762887))
(assert (= var212669 var6762883))
(assert (= temp10868_223 #x0000000000000000))
(assert (= var212669 temp10868_223))
(model-add temp10868_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10868_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10868_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10868_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





