(declare-fun temp10780_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10780_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10780_3 () (_ BitVec 64))
(declare-fun temp10780_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10780_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10780_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10780_7 () (_ BitVec 64))
(declare-fun temp10780_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10780_9 () (_ BitVec 64))
(declare-fun temp10780_10 () (_ BitVec 64))
(declare-fun temp10780_11 () (_ BitVec 64))
(declare-fun temp10780_12 () (_ BitVec 64))
(declare-fun temp10780_13 () (_ BitVec 64))
(declare-fun temp10780_14 () (_ BitVec 64))
(declare-fun temp10780_15 () (_ BitVec 64))
(declare-fun temp10780_16 () (_ BitVec 64))
(declare-fun temp10780_17 () (_ BitVec 64))
(declare-fun temp10780_18 () (_ BitVec 64))
(declare-fun temp10780_19 () (_ BitVec 64))
(declare-fun temp10780_20 () (_ BitVec 64))
(declare-fun temp10780_21 () (_ BitVec 64))
(declare-fun temp10780_22 () (_ BitVec 64))
(declare-fun temp10780_23 () (_ BitVec 64))
(declare-fun temp10780_24 () (_ BitVec 64))
(declare-fun temp10780_25 () (_ BitVec 64))
(declare-fun temp10780_26 () (_ BitVec 64))
(declare-fun temp10780_27 () (_ BitVec 64))
(declare-fun temp10780_28 () (_ BitVec 64))
(declare-fun temp10780_29 () (_ BitVec 64))
(declare-fun temp10780_30 () (_ BitVec 64))
(declare-fun temp10780_31 () (_ BitVec 64))
(declare-fun temp10780_32 () (_ BitVec 64))
(declare-fun temp10780_33 () (_ BitVec 64))
(declare-fun temp10780_34 () (_ BitVec 64))
(declare-fun temp10780_35 () (_ BitVec 64))
(declare-fun temp10780_36 () (_ BitVec 64))
(declare-fun temp10780_37 () (_ BitVec 64))
(declare-fun temp10780_38 () (_ BitVec 64))
(declare-fun temp10780_39 () (_ BitVec 64))
(declare-fun temp10780_40 () (_ BitVec 64))
(declare-fun temp10780_41 () (_ BitVec 64))
(declare-fun temp10780_42 () (_ BitVec 64))
(declare-fun temp10780_43 () (_ BitVec 64))
(declare-fun temp10780_44 () (_ BitVec 64))
(declare-fun temp10780_45 () (_ BitVec 64))
(declare-fun temp10780_46 () (_ BitVec 64))
(declare-fun temp10780_47 () (_ BitVec 64))
(declare-fun temp10780_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10780_49 () (_ BitVec 64))
(declare-fun temp10780_50 () (_ BitVec 64))
(declare-fun temp10780_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10780_52 () (_ BitVec 64))
(declare-fun temp10780_53 () (_ BitVec 64))
(declare-fun temp10780_54 () (_ BitVec 64))
(declare-fun temp10780_55 () (_ BitVec 64))
(declare-fun temp10780_56 () (_ BitVec 64))
(declare-fun temp10780_57 () (_ BitVec 64))
(declare-fun temp10780_58 () (_ BitVec 64))
(declare-fun temp10780_59 () (_ BitVec 64))
(declare-fun temp10780_60 () (_ BitVec 64))
(declare-fun temp10780_61 () (_ BitVec 64))
(declare-fun temp10780_62 () (_ BitVec 64))
(declare-fun temp10780_63 () (_ BitVec 64))
(declare-fun temp10780_64 () (_ BitVec 64))
(declare-fun temp10780_65 () (_ BitVec 64))
(declare-fun temp10780_66 () (_ BitVec 64))
(declare-fun temp10780_67 () (_ BitVec 64))
(declare-fun temp10780_68 () (_ BitVec 64))
(declare-fun temp10780_69 () (_ BitVec 64))
(declare-fun temp10780_70 () (_ BitVec 64))
(declare-fun temp10780_71 () (_ BitVec 64))
(declare-fun temp10780_72 () (_ BitVec 64))
(declare-fun temp10780_73 () (_ BitVec 64))
(declare-fun temp10780_74 () (_ BitVec 64))
(declare-fun temp10780_75 () (_ BitVec 64))
(declare-fun temp10780_76 () (_ BitVec 64))
(declare-fun temp10780_77 () (_ BitVec 64))
(declare-fun temp10780_78 () (_ BitVec 64))
(declare-fun temp10780_79 () (_ BitVec 64))
(declare-fun temp10780_80 () (_ BitVec 64))
(declare-fun temp10780_81 () (_ BitVec 64))
(declare-fun temp10780_82 () (_ BitVec 64))
(declare-fun temp10780_83 () (_ BitVec 64))
(declare-fun temp10780_84 () (_ BitVec 64))
(declare-fun temp10780_85 () (_ BitVec 64))
(declare-fun temp10780_86 () (_ BitVec 64))
(declare-fun temp10780_87 () (_ BitVec 64))
(declare-fun temp10780_88 () (_ BitVec 64))
(declare-fun temp10780_89 () (_ BitVec 64))
(declare-fun temp10780_90 () (_ BitVec 64))
(declare-fun temp10780_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10780_92 () (_ BitVec 64))
(declare-fun temp10780_93 () (_ BitVec 64))
(declare-fun temp10780_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10780_95 () (_ BitVec 64))
(declare-fun temp10780_96 () (_ BitVec 64))
(declare-fun temp10780_97 () (_ BitVec 64))
(declare-fun temp10780_98 () (_ BitVec 64))
(declare-fun temp10780_99 () (_ BitVec 64))
(declare-fun temp10780_100 () (_ BitVec 64))
(declare-fun temp10780_101 () (_ BitVec 64))
(declare-fun temp10780_102 () (_ BitVec 64))
(declare-fun temp10780_103 () (_ BitVec 64))
(declare-fun temp10780_104 () (_ BitVec 64))
(declare-fun temp10780_105 () (_ BitVec 64))
(declare-fun temp10780_106 () (_ BitVec 64))
(declare-fun temp10780_107 () (_ BitVec 64))
(declare-fun temp10780_108 () (_ BitVec 64))
(declare-fun temp10780_109 () (_ BitVec 64))
(declare-fun temp10780_110 () (_ BitVec 64))
(declare-fun temp10780_111 () (_ BitVec 64))
(declare-fun temp10780_112 () (_ BitVec 64))
(declare-fun temp10780_113 () (_ BitVec 64))
(declare-fun temp10780_114 () (_ BitVec 64))
(declare-fun temp10780_115 () (_ BitVec 64))
(declare-fun temp10780_116 () (_ BitVec 64))
(declare-fun temp10780_117 () (_ BitVec 64))
(declare-fun temp10780_118 () (_ BitVec 64))
(declare-fun temp10780_119 () (_ BitVec 64))
(declare-fun temp10780_120 () (_ BitVec 64))
(declare-fun temp10780_121 () (_ BitVec 64))
(declare-fun temp10780_122 () (_ BitVec 64))
(declare-fun temp10780_123 () (_ BitVec 64))
(declare-fun temp10780_124 () (_ BitVec 64))
(declare-fun temp10780_125 () (_ BitVec 64))
(declare-fun temp10780_126 () (_ BitVec 64))
(declare-fun temp10780_127 () (_ BitVec 64))
(declare-fun temp10780_128 () (_ BitVec 64))
(declare-fun temp10780_129 () (_ BitVec 64))
(declare-fun temp10780_130 () (_ BitVec 64))
(declare-fun temp10780_131 () (_ BitVec 64))
(declare-fun temp10780_132 () (_ BitVec 64))
(declare-fun temp10780_133 () (_ BitVec 64))
(declare-fun temp10780_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10780_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10780_136 () (_ BitVec 64))
(declare-fun temp10780_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10780_138 () (_ BitVec 64))
(declare-fun temp10780_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10780_140 () (_ BitVec 64))
(declare-fun temp10780_141 () (_ BitVec 64))
(declare-fun temp10780_142 () (_ BitVec 64))
(declare-fun temp10780_143 () (_ BitVec 64))
(declare-fun temp10780_144 () (_ BitVec 64))
(declare-fun temp10780_145 () (_ BitVec 64))
(declare-fun temp10780_146 () (_ BitVec 64))
(declare-fun temp10780_147 () (_ BitVec 64))
(declare-fun temp10780_148 () (_ BitVec 64))
(declare-fun temp10780_149 () (_ BitVec 64))
(declare-fun temp10780_150 () (_ BitVec 64))
(declare-fun temp10780_151 () (_ BitVec 64))
(declare-fun temp10780_152 () (_ BitVec 64))
(declare-fun temp10780_153 () (_ BitVec 64))
(declare-fun temp10780_154 () (_ BitVec 64))
(declare-fun temp10780_155 () (_ BitVec 64))
(declare-fun temp10780_157 () (_ BitVec 64))
(declare-fun temp10780_158 () (_ BitVec 64))
(declare-fun temp10780_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10780_159 () (_ BitVec 64))
(declare-fun temp10780_160 () (_ BitVec 64))
(declare-fun temp10780_162 () (_ BitVec 64))
(declare-fun temp10780_163 () (_ BitVec 64))
(declare-fun temp10780_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10780_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10780_165 () (_ BitVec 64))
(declare-fun temp10780_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10780_167 () (_ BitVec 64))
(declare-fun temp10780_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10780_169 () (_ BitVec 64))
(declare-fun temp10780_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10780_171 () (_ BitVec 64))
(declare-fun temp10780_172 () (_ BitVec 64))
(declare-fun temp10780_173 () (_ BitVec 64))
(declare-fun temp10780_174 () (_ BitVec 64))
(declare-fun temp10780_175 () (_ BitVec 64))
(declare-fun temp10780_176 () (_ BitVec 64))
(declare-fun temp10780_177 () (_ BitVec 64))
(declare-fun temp10780_178 () (_ BitVec 64))
(declare-fun temp10780_179 () (_ BitVec 64))
(declare-fun temp10780_180 () (_ BitVec 64))
(declare-fun temp10780_181 () (_ BitVec 64))
(declare-fun temp10780_182 () (_ BitVec 64))
(declare-fun temp10780_183 () (_ BitVec 64))
(declare-fun temp10780_184 () (_ BitVec 64))
(declare-fun temp10780_185 () (_ BitVec 64))
(declare-fun temp10780_186 () (_ BitVec 64))
(declare-fun temp10780_187 () (_ BitVec 64))
(declare-fun temp10780_188 () (_ BitVec 64))
(declare-fun temp10780_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10780_190 () (_ BitVec 64))
(declare-fun temp10780_192 () (_ BitVec 64))
(declare-fun temp10780_193 () (_ BitVec 64))
(declare-fun temp10780_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10780_194 () (_ BitVec 64))
(declare-fun temp10780_195 () (_ BitVec 64))
(declare-fun temp10780_197 () (_ BitVec 64))
(declare-fun temp10780_198 () (_ BitVec 64))
(declare-fun temp10780_196 () (_ BitVec 64))
(declare-fun temp10780_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10780_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10780_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10780_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10780_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10780_204 () (_ BitVec 64))
(declare-fun temp10780_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10780_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10780_207 () (_ BitVec 64))
(declare-fun temp10780_208 () (_ BitVec 64))
(declare-fun temp10780_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10780_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10780_211 () (_ BitVec 64))
(declare-fun temp10780_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10780_213 () (_ BitVec 64))
(declare-fun temp10780_214 () (_ BitVec 64))
(declare-fun temp10780_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10780_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10780_217 () (_ BitVec 64))
(declare-fun temp10780_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10780_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10780_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5190032 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun temp10780_221 () (_ BitVec 64))
(declare-fun var5779856 () (_ BitVec 64))
(declare-fun temp10780_222 () (_ BitVec 64))
(declare-fun temp10780_223 () (_ BitVec 64))
(declare-fun var7222036 () (_ BitVec 64))
(declare-fun var7222003 () (_ BitVec 64))
(declare-fun var7090567 () (_ BitVec 64))
(declare-fun var7090563 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10780_224 () (_ BitVec 64))
(assert (= temp10780_1 #x0000000000000001))
(assert (= var77203 temp10780_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10780_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10780_2)))
(assert (= temp10780_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10780_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10780_4 #x0000000000000000))
(assert (= var210941 temp10780_4))
(assert (= temp10780_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10780_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10780_6 #x0000000000000000))
(assert (= var210986 temp10780_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10780_7 #x0000000000000000))
(assert (= temp10780_8 temp10780_7))
(assert (= temp10780_9 (select ARGNAME_padding_NAMEEND_VAL temp10780_8)))
(assert (= temp10780_10 #x0000000000000001))
(assert (= temp10780_11 temp10780_10))
(assert (= temp10780_12 (select ARGNAME_padding_NAMEEND_VAL temp10780_11)))
(assert (= temp10780_13 #x0000000000000002))
(assert (= temp10780_14 temp10780_13))
(assert (= temp10780_15 (select ARGNAME_padding_NAMEEND_VAL temp10780_14)))
(assert (= temp10780_16 #x0000000000000003))
(assert (= temp10780_17 temp10780_16))
(assert (= temp10780_18 (select ARGNAME_padding_NAMEEND_VAL temp10780_17)))
(assert (= temp10780_19 #x0000000000000004))
(assert (= temp10780_20 temp10780_19))
(assert (= temp10780_21 (select ARGNAME_padding_NAMEEND_VAL temp10780_20)))
(assert (= temp10780_22 #x0000000000000005))
(assert (= temp10780_23 temp10780_22))
(assert (= temp10780_24 (select ARGNAME_padding_NAMEEND_VAL temp10780_23)))
(assert (= temp10780_25 #x0000000000000000))
(assert (= temp10780_26 #x0000000000000000))
(assert (= temp10780_27 temp10780_26))
(assert (= temp10780_28 (select ARGNAME_padding_NAMEEND_VAL temp10780_27)))
(assert (= temp10780_29 #x0000000000000000))
(assert (= temp10780_30 #x0000000000000001))
(assert (= temp10780_31 temp10780_30))
(assert (= temp10780_32 (select ARGNAME_padding_NAMEEND_VAL temp10780_31)))
(assert (= temp10780_33 #x0000000000000000))
(assert (= temp10780_34 #x0000000000000002))
(assert (= temp10780_35 temp10780_34))
(assert (= temp10780_36 (select ARGNAME_padding_NAMEEND_VAL temp10780_35)))
(assert (= temp10780_37 #x0000000000000000))
(assert (= temp10780_38 #x0000000000000003))
(assert (= temp10780_39 temp10780_38))
(assert (= temp10780_40 (select ARGNAME_padding_NAMEEND_VAL temp10780_39)))
(assert (= temp10780_41 #x0000000000000000))
(assert (= temp10780_42 #x0000000000000004))
(assert (= temp10780_43 temp10780_42))
(assert (= temp10780_44 (select ARGNAME_padding_NAMEEND_VAL temp10780_43)))
(assert (= temp10780_45 #x0000000000000000))
(assert (= temp10780_46 #x0000000000000005))
(assert (= temp10780_47 temp10780_46))
(assert (= temp10780_48 (select ARGNAME_padding_NAMEEND_VAL temp10780_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10780_28 temp10780_25)
             (bvslt temp10780_32 temp10780_29)
             (bvslt temp10780_36 temp10780_33)
             (bvslt temp10780_40 temp10780_37)
             (bvslt temp10780_44 temp10780_41)
             (bvslt temp10780_48 temp10780_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10780_49 #x0000000000000000))
(assert (= var1191714 temp10780_49))
(assert (= temp10780_50 #x0000000000000000))
(assert (= temp10780_51 temp10780_50))
(assert (= temp10780_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10780_51)))
(assert (= temp10780_53 #x0000000000000001))
(assert (= temp10780_54 temp10780_53))
(assert (= temp10780_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10780_54)))
(assert (= temp10780_56 #x0000000000000002))
(assert (= temp10780_57 temp10780_56))
(assert (= temp10780_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10780_57)))
(assert (= temp10780_59 #x0000000000000003))
(assert (= temp10780_60 temp10780_59))
(assert (= temp10780_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10780_60)))
(assert (= temp10780_62 #x0000000000000004))
(assert (= temp10780_63 temp10780_62))
(assert (= temp10780_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10780_63)))
(assert (= temp10780_65 #x0000000000000005))
(assert (= temp10780_66 temp10780_65))
(assert (= temp10780_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10780_66)))
(assert (= temp10780_68 #x0000000000000000))
(assert (= temp10780_69 #x0000000000000000))
(assert (= temp10780_70 temp10780_69))
(assert (= temp10780_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10780_70)))
(assert (= temp10780_72 #x0000000000000000))
(assert (= temp10780_73 #x0000000000000001))
(assert (= temp10780_74 temp10780_73))
(assert (= temp10780_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10780_74)))
(assert (= temp10780_76 #x0000000000000000))
(assert (= temp10780_77 #x0000000000000002))
(assert (= temp10780_78 temp10780_77))
(assert (= temp10780_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10780_78)))
(assert (= temp10780_80 #x0000000000000000))
(assert (= temp10780_81 #x0000000000000003))
(assert (= temp10780_82 temp10780_81))
(assert (= temp10780_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10780_82)))
(assert (= temp10780_84 #x0000000000000000))
(assert (= temp10780_85 #x0000000000000004))
(assert (= temp10780_86 temp10780_85))
(assert (= temp10780_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10780_86)))
(assert (= temp10780_88 #x0000000000000000))
(assert (= temp10780_89 #x0000000000000005))
(assert (= temp10780_90 temp10780_89))
(assert (= temp10780_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10780_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10780_71 temp10780_68)
             (bvslt temp10780_75 temp10780_72)
             (bvslt temp10780_79 temp10780_76)
             (bvslt temp10780_83 temp10780_80)
             (bvslt temp10780_87 temp10780_84)
             (bvslt temp10780_91 temp10780_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10780_92 #x0000000000000000))
(assert (= var1191725 temp10780_92))
(assert (= temp10780_93 #x0000000000000000))
(assert (= temp10780_94 temp10780_93))
(assert (= temp10780_95 (select ARGNAME_stride_NAMEEND_VAL temp10780_94)))
(assert (= temp10780_96 #x0000000000000001))
(assert (= temp10780_97 temp10780_96))
(assert (= temp10780_98 (select ARGNAME_stride_NAMEEND_VAL temp10780_97)))
(assert (= temp10780_99 #x0000000000000002))
(assert (= temp10780_100 temp10780_99))
(assert (= temp10780_101 (select ARGNAME_stride_NAMEEND_VAL temp10780_100)))
(assert (= temp10780_102 #x0000000000000003))
(assert (= temp10780_103 temp10780_102))
(assert (= temp10780_104 (select ARGNAME_stride_NAMEEND_VAL temp10780_103)))
(assert (= temp10780_105 #x0000000000000004))
(assert (= temp10780_106 temp10780_105))
(assert (= temp10780_107 (select ARGNAME_stride_NAMEEND_VAL temp10780_106)))
(assert (= temp10780_108 #x0000000000000005))
(assert (= temp10780_109 temp10780_108))
(assert (= temp10780_110 (select ARGNAME_stride_NAMEEND_VAL temp10780_109)))
(assert (= temp10780_111 #x0000000000000000))
(assert (= temp10780_112 #x0000000000000000))
(assert (= temp10780_113 temp10780_112))
(assert (= temp10780_114 (select ARGNAME_stride_NAMEEND_VAL temp10780_113)))
(assert (= temp10780_115 #x0000000000000000))
(assert (= temp10780_116 #x0000000000000001))
(assert (= temp10780_117 temp10780_116))
(assert (= temp10780_118 (select ARGNAME_stride_NAMEEND_VAL temp10780_117)))
(assert (= temp10780_119 #x0000000000000000))
(assert (= temp10780_120 #x0000000000000002))
(assert (= temp10780_121 temp10780_120))
(assert (= temp10780_122 (select ARGNAME_stride_NAMEEND_VAL temp10780_121)))
(assert (= temp10780_123 #x0000000000000000))
(assert (= temp10780_124 #x0000000000000003))
(assert (= temp10780_125 temp10780_124))
(assert (= temp10780_126 (select ARGNAME_stride_NAMEEND_VAL temp10780_125)))
(assert (= temp10780_127 #x0000000000000000))
(assert (= temp10780_128 #x0000000000000004))
(assert (= temp10780_129 temp10780_128))
(assert (= temp10780_130 (select ARGNAME_stride_NAMEEND_VAL temp10780_129)))
(assert (= temp10780_131 #x0000000000000000))
(assert (= temp10780_132 #x0000000000000005))
(assert (= temp10780_133 temp10780_132))
(assert (= temp10780_134 (select ARGNAME_stride_NAMEEND_VAL temp10780_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10780_114 temp10780_111)
             (bvsle temp10780_118 temp10780_115)
             (bvsle temp10780_122 temp10780_119)
             (bvsle temp10780_126 temp10780_123)
             (bvsle temp10780_130 temp10780_127)
             (bvsle temp10780_134 temp10780_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10780_135 #x0000000000000000))
(assert (= var1191735 temp10780_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10780_136 #x0000000000000001))
(assert (= var1191747 temp10780_136))
(assert (= temp10780_137 #x0000000000000000))
(assert (= var1179826 temp10780_137))
(assert (= temp10780_138 #x0000000000000000))
(assert (= temp10780_139 temp10780_138))
(assert (= temp10780_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10780_139)))
(assert (= temp10780_141 #x0000000000000001))
(assert (= temp10780_142 temp10780_141))
(assert (= temp10780_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10780_142)))
(assert (= temp10780_144 #x0000000000000002))
(assert (= temp10780_145 temp10780_144))
(assert (= temp10780_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10780_145)))
(assert (= temp10780_147 #x0000000000000003))
(assert (= temp10780_148 temp10780_147))
(assert (= temp10780_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10780_148)))
(assert (= temp10780_150 #x0000000000000004))
(assert (= temp10780_151 temp10780_150))
(assert (= temp10780_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10780_151)))
(assert (= temp10780_153 #x0000000000000005))
(assert (= temp10780_154 temp10780_153))
(assert (= temp10780_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10780_154)))
(assert (= temp10780_157 var1179826))
(assert (= temp10780_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10780_157)))
(assert (= temp10780_156 temp10780_158))
(assert (= var1191780
   (ite (bvslt temp10780_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10780_159 #x0000000000000000))
(assert (= var1191780 temp10780_159))
(assert (= temp10780_160 #x0000000000000000))
(assert (= var1179826 temp10780_160))
(assert (= temp10780_162 var1179826))
(assert (= temp10780_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10780_162)))
(assert (= temp10780_161 temp10780_163))
(assert (= var1191802 (bvsmod temp10780_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10780_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10780_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10780_165 #x0000000000000001))
(assert (= var1191803 temp10780_165))
(assert (= temp10780_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10780_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10780_167 #x0000000000000001))
(assert (= var1191823 temp10780_167))
(assert (= temp10780_168 #x0000000000000001))
(assert (= var1180714 temp10780_168))
(assert (= temp10780_169 #x0000000000000000))
(assert (= temp10780_170 temp10780_169))
(assert (= temp10780_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10780_170)))
(assert (= temp10780_172 #x0000000000000001))
(assert (= temp10780_173 temp10780_172))
(assert (= temp10780_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10780_173)))
(assert (= temp10780_175 #x0000000000000002))
(assert (= temp10780_176 temp10780_175))
(assert (= temp10780_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10780_176)))
(assert (= temp10780_178 #x0000000000000003))
(assert (= temp10780_179 temp10780_178))
(assert (= temp10780_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10780_179)))
(assert (= temp10780_181 #x0000000000000004))
(assert (= temp10780_182 temp10780_181))
(assert (= temp10780_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10780_182)))
(assert (= temp10780_184 #x0000000000000005))
(assert (= temp10780_185 temp10780_184))
(assert (= temp10780_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10780_185)))
(assert (= temp10780_187 #x0000000000000000))
(assert (= temp10780_188
   (ite (bvslt var1180714 temp10780_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10780_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10780_188)))
(assert (= var1191831 temp10780_189))
(assert (bvslt (ite (bvslt var1180714 temp10780_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10780_190 #x0000000000000001))
(assert (= var1180714 temp10780_190))
(assert (= temp10780_192 var1180714))
(assert (= temp10780_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10780_192)))
(assert (= temp10780_191 temp10780_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10780_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10780_194 #x0000000000000001))
(assert (= var1191836 temp10780_194))
(assert (= temp10780_195 #x0000000000000000))
(assert (= var1179826 temp10780_195))
(assert (= temp10780_197 var1179826))
(assert (= temp10780_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10780_197)))
(assert (= temp10780_196 temp10780_198))
(assert (= temp10780_199 #x0000000000000002))
(assert (= var1586025 temp10780_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10780_200 #x0000000000000001))
(assert (= var1191993 temp10780_200))
(assert (= temp10780_201 #x0000000000000001))
(assert (= var2700303 temp10780_201))
(assert (= temp10780_202 #x0000000000000001))
(assert (= var2962447 temp10780_202))
(assert (= temp10780_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10780_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10780_204 #x0000000000000001))
(assert (= var211058 temp10780_204))
(assert (= temp10780_205 #x0000000000000001))
(assert (= var211188 temp10780_205))
(assert (= var3879401 var211188))
(assert (= temp10780_206 #x0000000000000000))
(assert (= var3866802 temp10780_206))
(assert (= temp10780_207 #x0000000000000000))
(assert (= temp10780_208
   (ite (bvslt var3866802 temp10780_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10780_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10780_208)))
(assert (= var3879420 temp10780_209))
(assert (bvslt (ite (bvslt var3866802 temp10780_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10780_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10780_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10780_211 #x0000000000000000))
(assert (= var3879421 temp10780_211))
(assert (= temp10780_212 #x0000000000000001))
(assert (= var3867690 temp10780_212))
(assert (= temp10780_213 #x0000000000000000))
(assert (= temp10780_214
   (ite (bvslt var3867690 temp10780_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10780_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10780_214)))
(assert (= var3879423 temp10780_215))
(assert (bvslt (ite (bvslt var3867690 temp10780_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10780_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10780_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10780_217 #x0000000000000001))
(assert (= var3879424 temp10780_217))
(assert (= temp10780_218 #x0000000000000000))
(assert (= var4133117 temp10780_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10780_219 #x0000000000000002))
(assert (= var4339331 temp10780_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10780_220 #x0000000000000000))
(assert (= var4404892 temp10780_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5190032 var211201))
(assert (= var5452176 var211201))
(assert (= temp10780_221 #x0000000000000000))
(assert (= var5779856 temp10780_221))
(assert (= temp10780_222 #x0000000000000001))
(assert (= var211058 temp10780_222))
(assert (= temp10780_223 #x0000000000000000))
(assert (= var7222036 temp10780_223))
(assert (= var7222003 var7222036))
(assert (= var7090567 var7222003))
(assert (= var7090563 var7090567))
(assert (= var212669 var7090563))
(assert (= temp10780_224 #x0000000000000000))
(assert (= var212669 temp10780_224))
(model-add temp10780_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10780_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10780_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10780_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






