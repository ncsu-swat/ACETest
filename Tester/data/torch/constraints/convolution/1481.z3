(declare-fun temp10769_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10769_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10769_3 () (_ BitVec 64))
(declare-fun temp10769_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10769_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10769_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10769_7 () (_ BitVec 64))
(declare-fun temp10769_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10769_9 () (_ BitVec 64))
(declare-fun temp10769_10 () (_ BitVec 64))
(declare-fun temp10769_11 () (_ BitVec 64))
(declare-fun temp10769_12 () (_ BitVec 64))
(declare-fun temp10769_13 () (_ BitVec 64))
(declare-fun temp10769_14 () (_ BitVec 64))
(declare-fun temp10769_15 () (_ BitVec 64))
(declare-fun temp10769_16 () (_ BitVec 64))
(declare-fun temp10769_17 () (_ BitVec 64))
(declare-fun temp10769_18 () (_ BitVec 64))
(declare-fun temp10769_19 () (_ BitVec 64))
(declare-fun temp10769_20 () (_ BitVec 64))
(declare-fun temp10769_21 () (_ BitVec 64))
(declare-fun temp10769_22 () (_ BitVec 64))
(declare-fun temp10769_23 () (_ BitVec 64))
(declare-fun temp10769_24 () (_ BitVec 64))
(declare-fun temp10769_25 () (_ BitVec 64))
(declare-fun temp10769_26 () (_ BitVec 64))
(declare-fun temp10769_27 () (_ BitVec 64))
(declare-fun temp10769_28 () (_ BitVec 64))
(declare-fun temp10769_29 () (_ BitVec 64))
(declare-fun temp10769_30 () (_ BitVec 64))
(declare-fun temp10769_31 () (_ BitVec 64))
(declare-fun temp10769_32 () (_ BitVec 64))
(declare-fun temp10769_33 () (_ BitVec 64))
(declare-fun temp10769_34 () (_ BitVec 64))
(declare-fun temp10769_35 () (_ BitVec 64))
(declare-fun temp10769_36 () (_ BitVec 64))
(declare-fun temp10769_37 () (_ BitVec 64))
(declare-fun temp10769_38 () (_ BitVec 64))
(declare-fun temp10769_39 () (_ BitVec 64))
(declare-fun temp10769_40 () (_ BitVec 64))
(declare-fun temp10769_41 () (_ BitVec 64))
(declare-fun temp10769_42 () (_ BitVec 64))
(declare-fun temp10769_43 () (_ BitVec 64))
(declare-fun temp10769_44 () (_ BitVec 64))
(declare-fun temp10769_45 () (_ BitVec 64))
(declare-fun temp10769_46 () (_ BitVec 64))
(declare-fun temp10769_47 () (_ BitVec 64))
(declare-fun temp10769_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10769_49 () (_ BitVec 64))
(declare-fun temp10769_50 () (_ BitVec 64))
(declare-fun temp10769_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10769_52 () (_ BitVec 64))
(declare-fun temp10769_53 () (_ BitVec 64))
(declare-fun temp10769_54 () (_ BitVec 64))
(declare-fun temp10769_55 () (_ BitVec 64))
(declare-fun temp10769_56 () (_ BitVec 64))
(declare-fun temp10769_57 () (_ BitVec 64))
(declare-fun temp10769_58 () (_ BitVec 64))
(declare-fun temp10769_59 () (_ BitVec 64))
(declare-fun temp10769_60 () (_ BitVec 64))
(declare-fun temp10769_61 () (_ BitVec 64))
(declare-fun temp10769_62 () (_ BitVec 64))
(declare-fun temp10769_63 () (_ BitVec 64))
(declare-fun temp10769_64 () (_ BitVec 64))
(declare-fun temp10769_65 () (_ BitVec 64))
(declare-fun temp10769_66 () (_ BitVec 64))
(declare-fun temp10769_67 () (_ BitVec 64))
(declare-fun temp10769_68 () (_ BitVec 64))
(declare-fun temp10769_69 () (_ BitVec 64))
(declare-fun temp10769_70 () (_ BitVec 64))
(declare-fun temp10769_71 () (_ BitVec 64))
(declare-fun temp10769_72 () (_ BitVec 64))
(declare-fun temp10769_73 () (_ BitVec 64))
(declare-fun temp10769_74 () (_ BitVec 64))
(declare-fun temp10769_75 () (_ BitVec 64))
(declare-fun temp10769_76 () (_ BitVec 64))
(declare-fun temp10769_77 () (_ BitVec 64))
(declare-fun temp10769_78 () (_ BitVec 64))
(declare-fun temp10769_79 () (_ BitVec 64))
(declare-fun temp10769_80 () (_ BitVec 64))
(declare-fun temp10769_81 () (_ BitVec 64))
(declare-fun temp10769_82 () (_ BitVec 64))
(declare-fun temp10769_83 () (_ BitVec 64))
(declare-fun temp10769_84 () (_ BitVec 64))
(declare-fun temp10769_85 () (_ BitVec 64))
(declare-fun temp10769_86 () (_ BitVec 64))
(declare-fun temp10769_87 () (_ BitVec 64))
(declare-fun temp10769_88 () (_ BitVec 64))
(declare-fun temp10769_89 () (_ BitVec 64))
(declare-fun temp10769_90 () (_ BitVec 64))
(declare-fun temp10769_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10769_92 () (_ BitVec 64))
(declare-fun temp10769_93 () (_ BitVec 64))
(declare-fun temp10769_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10769_95 () (_ BitVec 64))
(declare-fun temp10769_96 () (_ BitVec 64))
(declare-fun temp10769_97 () (_ BitVec 64))
(declare-fun temp10769_98 () (_ BitVec 64))
(declare-fun temp10769_99 () (_ BitVec 64))
(declare-fun temp10769_100 () (_ BitVec 64))
(declare-fun temp10769_101 () (_ BitVec 64))
(declare-fun temp10769_102 () (_ BitVec 64))
(declare-fun temp10769_103 () (_ BitVec 64))
(declare-fun temp10769_104 () (_ BitVec 64))
(declare-fun temp10769_105 () (_ BitVec 64))
(declare-fun temp10769_106 () (_ BitVec 64))
(declare-fun temp10769_107 () (_ BitVec 64))
(declare-fun temp10769_108 () (_ BitVec 64))
(declare-fun temp10769_109 () (_ BitVec 64))
(declare-fun temp10769_110 () (_ BitVec 64))
(declare-fun temp10769_111 () (_ BitVec 64))
(declare-fun temp10769_112 () (_ BitVec 64))
(declare-fun temp10769_113 () (_ BitVec 64))
(declare-fun temp10769_114 () (_ BitVec 64))
(declare-fun temp10769_115 () (_ BitVec 64))
(declare-fun temp10769_116 () (_ BitVec 64))
(declare-fun temp10769_117 () (_ BitVec 64))
(declare-fun temp10769_118 () (_ BitVec 64))
(declare-fun temp10769_119 () (_ BitVec 64))
(declare-fun temp10769_120 () (_ BitVec 64))
(declare-fun temp10769_121 () (_ BitVec 64))
(declare-fun temp10769_122 () (_ BitVec 64))
(declare-fun temp10769_123 () (_ BitVec 64))
(declare-fun temp10769_124 () (_ BitVec 64))
(declare-fun temp10769_125 () (_ BitVec 64))
(declare-fun temp10769_126 () (_ BitVec 64))
(declare-fun temp10769_127 () (_ BitVec 64))
(declare-fun temp10769_128 () (_ BitVec 64))
(declare-fun temp10769_129 () (_ BitVec 64))
(declare-fun temp10769_130 () (_ BitVec 64))
(declare-fun temp10769_131 () (_ BitVec 64))
(declare-fun temp10769_132 () (_ BitVec 64))
(declare-fun temp10769_133 () (_ BitVec 64))
(declare-fun temp10769_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10769_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10769_136 () (_ BitVec 64))
(declare-fun temp10769_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10769_138 () (_ BitVec 64))
(declare-fun temp10769_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10769_140 () (_ BitVec 64))
(declare-fun temp10769_141 () (_ BitVec 64))
(declare-fun temp10769_142 () (_ BitVec 64))
(declare-fun temp10769_143 () (_ BitVec 64))
(declare-fun temp10769_144 () (_ BitVec 64))
(declare-fun temp10769_145 () (_ BitVec 64))
(declare-fun temp10769_146 () (_ BitVec 64))
(declare-fun temp10769_147 () (_ BitVec 64))
(declare-fun temp10769_148 () (_ BitVec 64))
(declare-fun temp10769_149 () (_ BitVec 64))
(declare-fun temp10769_150 () (_ BitVec 64))
(declare-fun temp10769_151 () (_ BitVec 64))
(declare-fun temp10769_152 () (_ BitVec 64))
(declare-fun temp10769_153 () (_ BitVec 64))
(declare-fun temp10769_154 () (_ BitVec 64))
(declare-fun temp10769_155 () (_ BitVec 64))
(declare-fun temp10769_157 () (_ BitVec 64))
(declare-fun temp10769_158 () (_ BitVec 64))
(declare-fun temp10769_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10769_159 () (_ BitVec 64))
(declare-fun temp10769_160 () (_ BitVec 64))
(declare-fun temp10769_162 () (_ BitVec 64))
(declare-fun temp10769_163 () (_ BitVec 64))
(declare-fun temp10769_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10769_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10769_165 () (_ BitVec 64))
(declare-fun temp10769_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10769_167 () (_ BitVec 64))
(declare-fun temp10769_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10769_169 () (_ BitVec 64))
(declare-fun temp10769_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10769_171 () (_ BitVec 64))
(declare-fun temp10769_172 () (_ BitVec 64))
(declare-fun temp10769_173 () (_ BitVec 64))
(declare-fun temp10769_174 () (_ BitVec 64))
(declare-fun temp10769_175 () (_ BitVec 64))
(declare-fun temp10769_176 () (_ BitVec 64))
(declare-fun temp10769_177 () (_ BitVec 64))
(declare-fun temp10769_178 () (_ BitVec 64))
(declare-fun temp10769_179 () (_ BitVec 64))
(declare-fun temp10769_180 () (_ BitVec 64))
(declare-fun temp10769_181 () (_ BitVec 64))
(declare-fun temp10769_182 () (_ BitVec 64))
(declare-fun temp10769_183 () (_ BitVec 64))
(declare-fun temp10769_184 () (_ BitVec 64))
(declare-fun temp10769_185 () (_ BitVec 64))
(declare-fun temp10769_186 () (_ BitVec 64))
(declare-fun temp10769_187 () (_ BitVec 64))
(declare-fun temp10769_188 () (_ BitVec 64))
(declare-fun temp10769_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10769_190 () (_ BitVec 64))
(declare-fun temp10769_192 () (_ BitVec 64))
(declare-fun temp10769_193 () (_ BitVec 64))
(declare-fun temp10769_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10769_194 () (_ BitVec 64))
(declare-fun temp10769_195 () (_ BitVec 64))
(declare-fun temp10769_197 () (_ BitVec 64))
(declare-fun temp10769_198 () (_ BitVec 64))
(declare-fun temp10769_196 () (_ BitVec 64))
(declare-fun temp10769_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10769_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10769_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10769_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10769_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10769_204 () (_ BitVec 64))
(declare-fun temp10769_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10769_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10769_207 () (_ BitVec 64))
(declare-fun temp10769_208 () (_ BitVec 64))
(declare-fun temp10769_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10769_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10769_211 () (_ BitVec 64))
(declare-fun temp10769_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10769_213 () (_ BitVec 64))
(declare-fun temp10769_214 () (_ BitVec 64))
(declare-fun temp10769_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10769_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10769_217 () (_ BitVec 64))
(declare-fun temp10769_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10769_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10769_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10769_221 () (_ BitVec 64))
(assert (= temp10769_1 #x0000000000000001))
(assert (= var77203 temp10769_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10769_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10769_2)))
(assert (= temp10769_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10769_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10769_4 #x0000000000000000))
(assert (= var210941 temp10769_4))
(assert (= temp10769_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10769_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10769_6 #x0000000000000000))
(assert (= var210986 temp10769_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10769_7 #x0000000000000000))
(assert (= temp10769_8 temp10769_7))
(assert (= temp10769_9 (select ARGNAME_padding_NAMEEND_VAL temp10769_8)))
(assert (= temp10769_10 #x0000000000000001))
(assert (= temp10769_11 temp10769_10))
(assert (= temp10769_12 (select ARGNAME_padding_NAMEEND_VAL temp10769_11)))
(assert (= temp10769_13 #x0000000000000002))
(assert (= temp10769_14 temp10769_13))
(assert (= temp10769_15 (select ARGNAME_padding_NAMEEND_VAL temp10769_14)))
(assert (= temp10769_16 #x0000000000000003))
(assert (= temp10769_17 temp10769_16))
(assert (= temp10769_18 (select ARGNAME_padding_NAMEEND_VAL temp10769_17)))
(assert (= temp10769_19 #x0000000000000004))
(assert (= temp10769_20 temp10769_19))
(assert (= temp10769_21 (select ARGNAME_padding_NAMEEND_VAL temp10769_20)))
(assert (= temp10769_22 #x0000000000000005))
(assert (= temp10769_23 temp10769_22))
(assert (= temp10769_24 (select ARGNAME_padding_NAMEEND_VAL temp10769_23)))
(assert (= temp10769_25 #x0000000000000000))
(assert (= temp10769_26 #x0000000000000000))
(assert (= temp10769_27 temp10769_26))
(assert (= temp10769_28 (select ARGNAME_padding_NAMEEND_VAL temp10769_27)))
(assert (= temp10769_29 #x0000000000000000))
(assert (= temp10769_30 #x0000000000000001))
(assert (= temp10769_31 temp10769_30))
(assert (= temp10769_32 (select ARGNAME_padding_NAMEEND_VAL temp10769_31)))
(assert (= temp10769_33 #x0000000000000000))
(assert (= temp10769_34 #x0000000000000002))
(assert (= temp10769_35 temp10769_34))
(assert (= temp10769_36 (select ARGNAME_padding_NAMEEND_VAL temp10769_35)))
(assert (= temp10769_37 #x0000000000000000))
(assert (= temp10769_38 #x0000000000000003))
(assert (= temp10769_39 temp10769_38))
(assert (= temp10769_40 (select ARGNAME_padding_NAMEEND_VAL temp10769_39)))
(assert (= temp10769_41 #x0000000000000000))
(assert (= temp10769_42 #x0000000000000004))
(assert (= temp10769_43 temp10769_42))
(assert (= temp10769_44 (select ARGNAME_padding_NAMEEND_VAL temp10769_43)))
(assert (= temp10769_45 #x0000000000000000))
(assert (= temp10769_46 #x0000000000000005))
(assert (= temp10769_47 temp10769_46))
(assert (= temp10769_48 (select ARGNAME_padding_NAMEEND_VAL temp10769_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10769_28 temp10769_25)
             (bvslt temp10769_32 temp10769_29)
             (bvslt temp10769_36 temp10769_33)
             (bvslt temp10769_40 temp10769_37)
             (bvslt temp10769_44 temp10769_41)
             (bvslt temp10769_48 temp10769_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10769_49 #x0000000000000000))
(assert (= var1191714 temp10769_49))
(assert (= temp10769_50 #x0000000000000000))
(assert (= temp10769_51 temp10769_50))
(assert (= temp10769_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10769_51)))
(assert (= temp10769_53 #x0000000000000001))
(assert (= temp10769_54 temp10769_53))
(assert (= temp10769_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10769_54)))
(assert (= temp10769_56 #x0000000000000002))
(assert (= temp10769_57 temp10769_56))
(assert (= temp10769_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10769_57)))
(assert (= temp10769_59 #x0000000000000003))
(assert (= temp10769_60 temp10769_59))
(assert (= temp10769_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10769_60)))
(assert (= temp10769_62 #x0000000000000004))
(assert (= temp10769_63 temp10769_62))
(assert (= temp10769_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10769_63)))
(assert (= temp10769_65 #x0000000000000005))
(assert (= temp10769_66 temp10769_65))
(assert (= temp10769_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10769_66)))
(assert (= temp10769_68 #x0000000000000000))
(assert (= temp10769_69 #x0000000000000000))
(assert (= temp10769_70 temp10769_69))
(assert (= temp10769_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10769_70)))
(assert (= temp10769_72 #x0000000000000000))
(assert (= temp10769_73 #x0000000000000001))
(assert (= temp10769_74 temp10769_73))
(assert (= temp10769_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10769_74)))
(assert (= temp10769_76 #x0000000000000000))
(assert (= temp10769_77 #x0000000000000002))
(assert (= temp10769_78 temp10769_77))
(assert (= temp10769_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10769_78)))
(assert (= temp10769_80 #x0000000000000000))
(assert (= temp10769_81 #x0000000000000003))
(assert (= temp10769_82 temp10769_81))
(assert (= temp10769_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10769_82)))
(assert (= temp10769_84 #x0000000000000000))
(assert (= temp10769_85 #x0000000000000004))
(assert (= temp10769_86 temp10769_85))
(assert (= temp10769_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10769_86)))
(assert (= temp10769_88 #x0000000000000000))
(assert (= temp10769_89 #x0000000000000005))
(assert (= temp10769_90 temp10769_89))
(assert (= temp10769_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10769_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10769_71 temp10769_68)
             (bvslt temp10769_75 temp10769_72)
             (bvslt temp10769_79 temp10769_76)
             (bvslt temp10769_83 temp10769_80)
             (bvslt temp10769_87 temp10769_84)
             (bvslt temp10769_91 temp10769_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10769_92 #x0000000000000000))
(assert (= var1191725 temp10769_92))
(assert (= temp10769_93 #x0000000000000000))
(assert (= temp10769_94 temp10769_93))
(assert (= temp10769_95 (select ARGNAME_stride_NAMEEND_VAL temp10769_94)))
(assert (= temp10769_96 #x0000000000000001))
(assert (= temp10769_97 temp10769_96))
(assert (= temp10769_98 (select ARGNAME_stride_NAMEEND_VAL temp10769_97)))
(assert (= temp10769_99 #x0000000000000002))
(assert (= temp10769_100 temp10769_99))
(assert (= temp10769_101 (select ARGNAME_stride_NAMEEND_VAL temp10769_100)))
(assert (= temp10769_102 #x0000000000000003))
(assert (= temp10769_103 temp10769_102))
(assert (= temp10769_104 (select ARGNAME_stride_NAMEEND_VAL temp10769_103)))
(assert (= temp10769_105 #x0000000000000004))
(assert (= temp10769_106 temp10769_105))
(assert (= temp10769_107 (select ARGNAME_stride_NAMEEND_VAL temp10769_106)))
(assert (= temp10769_108 #x0000000000000005))
(assert (= temp10769_109 temp10769_108))
(assert (= temp10769_110 (select ARGNAME_stride_NAMEEND_VAL temp10769_109)))
(assert (= temp10769_111 #x0000000000000000))
(assert (= temp10769_112 #x0000000000000000))
(assert (= temp10769_113 temp10769_112))
(assert (= temp10769_114 (select ARGNAME_stride_NAMEEND_VAL temp10769_113)))
(assert (= temp10769_115 #x0000000000000000))
(assert (= temp10769_116 #x0000000000000001))
(assert (= temp10769_117 temp10769_116))
(assert (= temp10769_118 (select ARGNAME_stride_NAMEEND_VAL temp10769_117)))
(assert (= temp10769_119 #x0000000000000000))
(assert (= temp10769_120 #x0000000000000002))
(assert (= temp10769_121 temp10769_120))
(assert (= temp10769_122 (select ARGNAME_stride_NAMEEND_VAL temp10769_121)))
(assert (= temp10769_123 #x0000000000000000))
(assert (= temp10769_124 #x0000000000000003))
(assert (= temp10769_125 temp10769_124))
(assert (= temp10769_126 (select ARGNAME_stride_NAMEEND_VAL temp10769_125)))
(assert (= temp10769_127 #x0000000000000000))
(assert (= temp10769_128 #x0000000000000004))
(assert (= temp10769_129 temp10769_128))
(assert (= temp10769_130 (select ARGNAME_stride_NAMEEND_VAL temp10769_129)))
(assert (= temp10769_131 #x0000000000000000))
(assert (= temp10769_132 #x0000000000000005))
(assert (= temp10769_133 temp10769_132))
(assert (= temp10769_134 (select ARGNAME_stride_NAMEEND_VAL temp10769_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10769_114 temp10769_111)
             (bvsle temp10769_118 temp10769_115)
             (bvsle temp10769_122 temp10769_119)
             (bvsle temp10769_126 temp10769_123)
             (bvsle temp10769_130 temp10769_127)
             (bvsle temp10769_134 temp10769_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10769_135 #x0000000000000000))
(assert (= var1191735 temp10769_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10769_136 #x0000000000000001))
(assert (= var1191747 temp10769_136))
(assert (= temp10769_137 #x0000000000000000))
(assert (= var1179826 temp10769_137))
(assert (= temp10769_138 #x0000000000000000))
(assert (= temp10769_139 temp10769_138))
(assert (= temp10769_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10769_139)))
(assert (= temp10769_141 #x0000000000000001))
(assert (= temp10769_142 temp10769_141))
(assert (= temp10769_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10769_142)))
(assert (= temp10769_144 #x0000000000000002))
(assert (= temp10769_145 temp10769_144))
(assert (= temp10769_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10769_145)))
(assert (= temp10769_147 #x0000000000000003))
(assert (= temp10769_148 temp10769_147))
(assert (= temp10769_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10769_148)))
(assert (= temp10769_150 #x0000000000000004))
(assert (= temp10769_151 temp10769_150))
(assert (= temp10769_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10769_151)))
(assert (= temp10769_153 #x0000000000000005))
(assert (= temp10769_154 temp10769_153))
(assert (= temp10769_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10769_154)))
(assert (= temp10769_157 var1179826))
(assert (= temp10769_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10769_157)))
(assert (= temp10769_156 temp10769_158))
(assert (= var1191780
   (ite (bvslt temp10769_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10769_159 #x0000000000000000))
(assert (= var1191780 temp10769_159))
(assert (= temp10769_160 #x0000000000000000))
(assert (= var1179826 temp10769_160))
(assert (= temp10769_162 var1179826))
(assert (= temp10769_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10769_162)))
(assert (= temp10769_161 temp10769_163))
(assert (= var1191802 (bvsmod temp10769_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10769_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10769_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10769_165 #x0000000000000001))
(assert (= var1191803 temp10769_165))
(assert (= temp10769_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10769_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10769_167 #x0000000000000001))
(assert (= var1191823 temp10769_167))
(assert (= temp10769_168 #x0000000000000001))
(assert (= var1180714 temp10769_168))
(assert (= temp10769_169 #x0000000000000000))
(assert (= temp10769_170 temp10769_169))
(assert (= temp10769_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10769_170)))
(assert (= temp10769_172 #x0000000000000001))
(assert (= temp10769_173 temp10769_172))
(assert (= temp10769_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10769_173)))
(assert (= temp10769_175 #x0000000000000002))
(assert (= temp10769_176 temp10769_175))
(assert (= temp10769_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10769_176)))
(assert (= temp10769_178 #x0000000000000003))
(assert (= temp10769_179 temp10769_178))
(assert (= temp10769_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10769_179)))
(assert (= temp10769_181 #x0000000000000004))
(assert (= temp10769_182 temp10769_181))
(assert (= temp10769_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10769_182)))
(assert (= temp10769_184 #x0000000000000005))
(assert (= temp10769_185 temp10769_184))
(assert (= temp10769_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10769_185)))
(assert (= temp10769_187 #x0000000000000000))
(assert (= temp10769_188
   (ite (bvslt var1180714 temp10769_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10769_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10769_188)))
(assert (= var1191831 temp10769_189))
(assert (bvslt (ite (bvslt var1180714 temp10769_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10769_190 #x0000000000000001))
(assert (= var1180714 temp10769_190))
(assert (= temp10769_192 var1180714))
(assert (= temp10769_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10769_192)))
(assert (= temp10769_191 temp10769_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10769_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10769_194 #x0000000000000001))
(assert (= var1191836 temp10769_194))
(assert (= temp10769_195 #x0000000000000000))
(assert (= var1179826 temp10769_195))
(assert (= temp10769_197 var1179826))
(assert (= temp10769_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10769_197)))
(assert (= temp10769_196 temp10769_198))
(assert (= temp10769_199 #x0000000000000002))
(assert (= var1586025 temp10769_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10769_200 #x0000000000000001))
(assert (= var1191993 temp10769_200))
(assert (= temp10769_201 #x0000000000000001))
(assert (= var2700303 temp10769_201))
(assert (= temp10769_202 #x0000000000000001))
(assert (= var2962447 temp10769_202))
(assert (= temp10769_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10769_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10769_204 #x0000000000000001))
(assert (= var211058 temp10769_204))
(assert (= temp10769_205 #x0000000000000001))
(assert (= var211188 temp10769_205))
(assert (= var3879401 var211188))
(assert (= temp10769_206 #x0000000000000000))
(assert (= var3866802 temp10769_206))
(assert (= temp10769_207 #x0000000000000000))
(assert (= temp10769_208
   (ite (bvslt var3866802 temp10769_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10769_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10769_208)))
(assert (= var3879420 temp10769_209))
(assert (bvslt (ite (bvslt var3866802 temp10769_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10769_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10769_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10769_211 #x0000000000000000))
(assert (= var3879421 temp10769_211))
(assert (= temp10769_212 #x0000000000000001))
(assert (= var3867690 temp10769_212))
(assert (= temp10769_213 #x0000000000000000))
(assert (= temp10769_214
   (ite (bvslt var3867690 temp10769_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10769_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10769_214)))
(assert (= var3879423 temp10769_215))
(assert (bvslt (ite (bvslt var3867690 temp10769_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10769_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10769_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10769_217 #x0000000000000001))
(assert (= var3879424 temp10769_217))
(assert (= temp10769_218 #x0000000000000000))
(assert (= var4133117 temp10769_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10769_219 #x0000000000000002))
(assert (= var4339331 temp10769_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10769_220 #x0000000000000000))
(assert (= var4404892 temp10769_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10769_221 #x0000000000000001))
(assert (= var211058 temp10769_221))
(model-add temp10769_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10769_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10769_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10769_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





