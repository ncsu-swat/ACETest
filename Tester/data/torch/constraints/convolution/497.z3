(declare-fun temp662_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp662_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp662_3 () (_ BitVec 64))
(declare-fun temp662_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp662_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp662_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp662_7 () (_ BitVec 64))
(declare-fun temp662_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp662_9 () (_ BitVec 64))
(declare-fun temp662_10 () (_ BitVec 64))
(declare-fun temp662_11 () (_ BitVec 64))
(declare-fun temp662_12 () (_ BitVec 64))
(declare-fun temp662_13 () (_ BitVec 64))
(declare-fun temp662_14 () (_ BitVec 64))
(declare-fun temp662_15 () (_ BitVec 64))
(declare-fun temp662_16 () (_ BitVec 64))
(declare-fun temp662_17 () (_ BitVec 64))
(declare-fun temp662_18 () (_ BitVec 64))
(declare-fun temp662_19 () (_ BitVec 64))
(declare-fun temp662_20 () (_ BitVec 64))
(declare-fun temp662_21 () (_ BitVec 64))
(declare-fun temp662_22 () (_ BitVec 64))
(declare-fun temp662_23 () (_ BitVec 64))
(declare-fun temp662_24 () (_ BitVec 64))
(declare-fun temp662_25 () (_ BitVec 64))
(declare-fun temp662_26 () (_ BitVec 64))
(declare-fun temp662_27 () (_ BitVec 64))
(declare-fun temp662_28 () (_ BitVec 64))
(declare-fun temp662_29 () (_ BitVec 64))
(declare-fun temp662_30 () (_ BitVec 64))
(declare-fun temp662_31 () (_ BitVec 64))
(declare-fun temp662_32 () (_ BitVec 64))
(declare-fun temp662_33 () (_ BitVec 64))
(declare-fun temp662_34 () (_ BitVec 64))
(declare-fun temp662_35 () (_ BitVec 64))
(declare-fun temp662_36 () (_ BitVec 64))
(declare-fun temp662_37 () (_ BitVec 64))
(declare-fun temp662_38 () (_ BitVec 64))
(declare-fun temp662_39 () (_ BitVec 64))
(declare-fun temp662_40 () (_ BitVec 64))
(declare-fun temp662_41 () (_ BitVec 64))
(declare-fun temp662_42 () (_ BitVec 64))
(declare-fun temp662_43 () (_ BitVec 64))
(declare-fun temp662_44 () (_ BitVec 64))
(declare-fun temp662_45 () (_ BitVec 64))
(declare-fun temp662_46 () (_ BitVec 64))
(declare-fun temp662_47 () (_ BitVec 64))
(declare-fun temp662_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp662_49 () (_ BitVec 64))
(declare-fun temp662_50 () (_ BitVec 64))
(declare-fun temp662_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp662_52 () (_ BitVec 64))
(declare-fun temp662_53 () (_ BitVec 64))
(declare-fun temp662_54 () (_ BitVec 64))
(declare-fun temp662_55 () (_ BitVec 64))
(declare-fun temp662_56 () (_ BitVec 64))
(declare-fun temp662_57 () (_ BitVec 64))
(declare-fun temp662_58 () (_ BitVec 64))
(declare-fun temp662_59 () (_ BitVec 64))
(declare-fun temp662_60 () (_ BitVec 64))
(declare-fun temp662_61 () (_ BitVec 64))
(declare-fun temp662_62 () (_ BitVec 64))
(declare-fun temp662_63 () (_ BitVec 64))
(declare-fun temp662_64 () (_ BitVec 64))
(declare-fun temp662_65 () (_ BitVec 64))
(declare-fun temp662_66 () (_ BitVec 64))
(declare-fun temp662_67 () (_ BitVec 64))
(declare-fun temp662_68 () (_ BitVec 64))
(declare-fun temp662_69 () (_ BitVec 64))
(declare-fun temp662_70 () (_ BitVec 64))
(declare-fun temp662_71 () (_ BitVec 64))
(declare-fun temp662_72 () (_ BitVec 64))
(declare-fun temp662_73 () (_ BitVec 64))
(declare-fun temp662_74 () (_ BitVec 64))
(declare-fun temp662_75 () (_ BitVec 64))
(declare-fun temp662_76 () (_ BitVec 64))
(declare-fun temp662_77 () (_ BitVec 64))
(declare-fun temp662_78 () (_ BitVec 64))
(declare-fun temp662_79 () (_ BitVec 64))
(declare-fun temp662_80 () (_ BitVec 64))
(declare-fun temp662_81 () (_ BitVec 64))
(declare-fun temp662_82 () (_ BitVec 64))
(declare-fun temp662_83 () (_ BitVec 64))
(declare-fun temp662_84 () (_ BitVec 64))
(declare-fun temp662_85 () (_ BitVec 64))
(declare-fun temp662_86 () (_ BitVec 64))
(declare-fun temp662_87 () (_ BitVec 64))
(declare-fun temp662_88 () (_ BitVec 64))
(declare-fun temp662_89 () (_ BitVec 64))
(declare-fun temp662_90 () (_ BitVec 64))
(declare-fun temp662_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp662_92 () (_ BitVec 64))
(declare-fun temp662_93 () (_ BitVec 64))
(declare-fun temp662_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp662_95 () (_ BitVec 64))
(declare-fun temp662_96 () (_ BitVec 64))
(declare-fun temp662_97 () (_ BitVec 64))
(declare-fun temp662_98 () (_ BitVec 64))
(declare-fun temp662_99 () (_ BitVec 64))
(declare-fun temp662_100 () (_ BitVec 64))
(declare-fun temp662_101 () (_ BitVec 64))
(declare-fun temp662_102 () (_ BitVec 64))
(declare-fun temp662_103 () (_ BitVec 64))
(declare-fun temp662_104 () (_ BitVec 64))
(declare-fun temp662_105 () (_ BitVec 64))
(declare-fun temp662_106 () (_ BitVec 64))
(declare-fun temp662_107 () (_ BitVec 64))
(declare-fun temp662_108 () (_ BitVec 64))
(declare-fun temp662_109 () (_ BitVec 64))
(declare-fun temp662_110 () (_ BitVec 64))
(declare-fun temp662_111 () (_ BitVec 64))
(declare-fun temp662_112 () (_ BitVec 64))
(declare-fun temp662_113 () (_ BitVec 64))
(declare-fun temp662_114 () (_ BitVec 64))
(declare-fun temp662_115 () (_ BitVec 64))
(declare-fun temp662_116 () (_ BitVec 64))
(declare-fun temp662_117 () (_ BitVec 64))
(declare-fun temp662_118 () (_ BitVec 64))
(declare-fun temp662_119 () (_ BitVec 64))
(declare-fun temp662_120 () (_ BitVec 64))
(declare-fun temp662_121 () (_ BitVec 64))
(declare-fun temp662_122 () (_ BitVec 64))
(declare-fun temp662_123 () (_ BitVec 64))
(declare-fun temp662_124 () (_ BitVec 64))
(declare-fun temp662_125 () (_ BitVec 64))
(declare-fun temp662_126 () (_ BitVec 64))
(declare-fun temp662_127 () (_ BitVec 64))
(declare-fun temp662_128 () (_ BitVec 64))
(declare-fun temp662_129 () (_ BitVec 64))
(declare-fun temp662_130 () (_ BitVec 64))
(declare-fun temp662_131 () (_ BitVec 64))
(declare-fun temp662_132 () (_ BitVec 64))
(declare-fun temp662_133 () (_ BitVec 64))
(declare-fun temp662_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp662_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp662_136 () (_ BitVec 64))
(declare-fun temp662_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp662_138 () (_ BitVec 64))
(declare-fun temp662_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp662_140 () (_ BitVec 64))
(declare-fun temp662_141 () (_ BitVec 64))
(declare-fun temp662_142 () (_ BitVec 64))
(declare-fun temp662_143 () (_ BitVec 64))
(declare-fun temp662_144 () (_ BitVec 64))
(declare-fun temp662_145 () (_ BitVec 64))
(declare-fun temp662_146 () (_ BitVec 64))
(declare-fun temp662_147 () (_ BitVec 64))
(declare-fun temp662_148 () (_ BitVec 64))
(declare-fun temp662_149 () (_ BitVec 64))
(declare-fun temp662_150 () (_ BitVec 64))
(declare-fun temp662_151 () (_ BitVec 64))
(declare-fun temp662_152 () (_ BitVec 64))
(declare-fun temp662_153 () (_ BitVec 64))
(declare-fun temp662_154 () (_ BitVec 64))
(declare-fun temp662_155 () (_ BitVec 64))
(declare-fun temp662_157 () (_ BitVec 64))
(declare-fun temp662_158 () (_ BitVec 64))
(declare-fun temp662_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp662_159 () (_ BitVec 64))
(declare-fun temp662_160 () (_ BitVec 64))
(declare-fun temp662_162 () (_ BitVec 64))
(declare-fun temp662_163 () (_ BitVec 64))
(declare-fun temp662_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp662_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp662_165 () (_ BitVec 64))
(declare-fun temp662_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp662_167 () (_ BitVec 64))
(declare-fun temp662_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp662_169 () (_ BitVec 64))
(declare-fun temp662_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp662_171 () (_ BitVec 64))
(declare-fun temp662_172 () (_ BitVec 64))
(declare-fun temp662_173 () (_ BitVec 64))
(declare-fun temp662_174 () (_ BitVec 64))
(declare-fun temp662_175 () (_ BitVec 64))
(declare-fun temp662_176 () (_ BitVec 64))
(declare-fun temp662_177 () (_ BitVec 64))
(declare-fun temp662_178 () (_ BitVec 64))
(declare-fun temp662_179 () (_ BitVec 64))
(declare-fun temp662_180 () (_ BitVec 64))
(declare-fun temp662_181 () (_ BitVec 64))
(declare-fun temp662_182 () (_ BitVec 64))
(declare-fun temp662_183 () (_ BitVec 64))
(declare-fun temp662_184 () (_ BitVec 64))
(declare-fun temp662_185 () (_ BitVec 64))
(declare-fun temp662_186 () (_ BitVec 64))
(declare-fun temp662_187 () (_ BitVec 64))
(declare-fun temp662_188 () (_ BitVec 64))
(declare-fun temp662_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp662_190 () (_ BitVec 64))
(declare-fun temp662_192 () (_ BitVec 64))
(declare-fun temp662_193 () (_ BitVec 64))
(declare-fun temp662_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp662_194 () (_ BitVec 64))
(declare-fun temp662_195 () (_ BitVec 64))
(declare-fun temp662_197 () (_ BitVec 64))
(declare-fun temp662_198 () (_ BitVec 64))
(declare-fun temp662_196 () (_ BitVec 64))
(declare-fun temp662_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp662_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp662_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp662_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp662_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp662_204 () (_ BitVec 64))
(declare-fun temp662_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp662_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp662_207 () (_ BitVec 64))
(declare-fun temp662_208 () (_ BitVec 64))
(declare-fun temp662_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp662_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp662_211 () (_ BitVec 64))
(declare-fun temp662_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp662_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp662_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp662_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp662_216 () (_ BitVec 64))
(assert (= temp662_1 #x0000000000000001))
(assert (= var77203 temp662_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp662_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp662_2)))
(assert (= temp662_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp662_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp662_4 #x0000000000000000))
(assert (= var210941 temp662_4))
(assert (= temp662_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp662_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp662_6 #x0000000000000000))
(assert (= var210986 temp662_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp662_7 #x0000000000000000))
(assert (= temp662_8 temp662_7))
(assert (= temp662_9 (select ARGNAME_padding_NAMEEND_VAL temp662_8)))
(assert (= temp662_10 #x0000000000000001))
(assert (= temp662_11 temp662_10))
(assert (= temp662_12 (select ARGNAME_padding_NAMEEND_VAL temp662_11)))
(assert (= temp662_13 #x0000000000000002))
(assert (= temp662_14 temp662_13))
(assert (= temp662_15 (select ARGNAME_padding_NAMEEND_VAL temp662_14)))
(assert (= temp662_16 #x0000000000000003))
(assert (= temp662_17 temp662_16))
(assert (= temp662_18 (select ARGNAME_padding_NAMEEND_VAL temp662_17)))
(assert (= temp662_19 #x0000000000000004))
(assert (= temp662_20 temp662_19))
(assert (= temp662_21 (select ARGNAME_padding_NAMEEND_VAL temp662_20)))
(assert (= temp662_22 #x0000000000000005))
(assert (= temp662_23 temp662_22))
(assert (= temp662_24 (select ARGNAME_padding_NAMEEND_VAL temp662_23)))
(assert (= temp662_25 #x0000000000000000))
(assert (= temp662_26 #x0000000000000000))
(assert (= temp662_27 temp662_26))
(assert (= temp662_28 (select ARGNAME_padding_NAMEEND_VAL temp662_27)))
(assert (= temp662_29 #x0000000000000000))
(assert (= temp662_30 #x0000000000000001))
(assert (= temp662_31 temp662_30))
(assert (= temp662_32 (select ARGNAME_padding_NAMEEND_VAL temp662_31)))
(assert (= temp662_33 #x0000000000000000))
(assert (= temp662_34 #x0000000000000002))
(assert (= temp662_35 temp662_34))
(assert (= temp662_36 (select ARGNAME_padding_NAMEEND_VAL temp662_35)))
(assert (= temp662_37 #x0000000000000000))
(assert (= temp662_38 #x0000000000000003))
(assert (= temp662_39 temp662_38))
(assert (= temp662_40 (select ARGNAME_padding_NAMEEND_VAL temp662_39)))
(assert (= temp662_41 #x0000000000000000))
(assert (= temp662_42 #x0000000000000004))
(assert (= temp662_43 temp662_42))
(assert (= temp662_44 (select ARGNAME_padding_NAMEEND_VAL temp662_43)))
(assert (= temp662_45 #x0000000000000000))
(assert (= temp662_46 #x0000000000000005))
(assert (= temp662_47 temp662_46))
(assert (= temp662_48 (select ARGNAME_padding_NAMEEND_VAL temp662_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp662_28 temp662_25)
             (bvslt temp662_32 temp662_29)
             (bvslt temp662_36 temp662_33)
             (bvslt temp662_40 temp662_37)
             (bvslt temp662_44 temp662_41)
             (bvslt temp662_48 temp662_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp662_49 #x0000000000000000))
(assert (= var1191714 temp662_49))
(assert (= temp662_50 #x0000000000000000))
(assert (= temp662_51 temp662_50))
(assert (= temp662_52 (select ARGNAME_output_padding_NAMEEND_VAL temp662_51)))
(assert (= temp662_53 #x0000000000000001))
(assert (= temp662_54 temp662_53))
(assert (= temp662_55 (select ARGNAME_output_padding_NAMEEND_VAL temp662_54)))
(assert (= temp662_56 #x0000000000000002))
(assert (= temp662_57 temp662_56))
(assert (= temp662_58 (select ARGNAME_output_padding_NAMEEND_VAL temp662_57)))
(assert (= temp662_59 #x0000000000000003))
(assert (= temp662_60 temp662_59))
(assert (= temp662_61 (select ARGNAME_output_padding_NAMEEND_VAL temp662_60)))
(assert (= temp662_62 #x0000000000000004))
(assert (= temp662_63 temp662_62))
(assert (= temp662_64 (select ARGNAME_output_padding_NAMEEND_VAL temp662_63)))
(assert (= temp662_65 #x0000000000000005))
(assert (= temp662_66 temp662_65))
(assert (= temp662_67 (select ARGNAME_output_padding_NAMEEND_VAL temp662_66)))
(assert (= temp662_68 #x0000000000000000))
(assert (= temp662_69 #x0000000000000000))
(assert (= temp662_70 temp662_69))
(assert (= temp662_71 (select ARGNAME_output_padding_NAMEEND_VAL temp662_70)))
(assert (= temp662_72 #x0000000000000000))
(assert (= temp662_73 #x0000000000000001))
(assert (= temp662_74 temp662_73))
(assert (= temp662_75 (select ARGNAME_output_padding_NAMEEND_VAL temp662_74)))
(assert (= temp662_76 #x0000000000000000))
(assert (= temp662_77 #x0000000000000002))
(assert (= temp662_78 temp662_77))
(assert (= temp662_79 (select ARGNAME_output_padding_NAMEEND_VAL temp662_78)))
(assert (= temp662_80 #x0000000000000000))
(assert (= temp662_81 #x0000000000000003))
(assert (= temp662_82 temp662_81))
(assert (= temp662_83 (select ARGNAME_output_padding_NAMEEND_VAL temp662_82)))
(assert (= temp662_84 #x0000000000000000))
(assert (= temp662_85 #x0000000000000004))
(assert (= temp662_86 temp662_85))
(assert (= temp662_87 (select ARGNAME_output_padding_NAMEEND_VAL temp662_86)))
(assert (= temp662_88 #x0000000000000000))
(assert (= temp662_89 #x0000000000000005))
(assert (= temp662_90 temp662_89))
(assert (= temp662_91 (select ARGNAME_output_padding_NAMEEND_VAL temp662_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp662_71 temp662_68)
             (bvslt temp662_75 temp662_72)
             (bvslt temp662_79 temp662_76)
             (bvslt temp662_83 temp662_80)
             (bvslt temp662_87 temp662_84)
             (bvslt temp662_91 temp662_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp662_92 #x0000000000000000))
(assert (= var1191725 temp662_92))
(assert (= temp662_93 #x0000000000000000))
(assert (= temp662_94 temp662_93))
(assert (= temp662_95 (select ARGNAME_stride_NAMEEND_VAL temp662_94)))
(assert (= temp662_96 #x0000000000000001))
(assert (= temp662_97 temp662_96))
(assert (= temp662_98 (select ARGNAME_stride_NAMEEND_VAL temp662_97)))
(assert (= temp662_99 #x0000000000000002))
(assert (= temp662_100 temp662_99))
(assert (= temp662_101 (select ARGNAME_stride_NAMEEND_VAL temp662_100)))
(assert (= temp662_102 #x0000000000000003))
(assert (= temp662_103 temp662_102))
(assert (= temp662_104 (select ARGNAME_stride_NAMEEND_VAL temp662_103)))
(assert (= temp662_105 #x0000000000000004))
(assert (= temp662_106 temp662_105))
(assert (= temp662_107 (select ARGNAME_stride_NAMEEND_VAL temp662_106)))
(assert (= temp662_108 #x0000000000000005))
(assert (= temp662_109 temp662_108))
(assert (= temp662_110 (select ARGNAME_stride_NAMEEND_VAL temp662_109)))
(assert (= temp662_111 #x0000000000000000))
(assert (= temp662_112 #x0000000000000000))
(assert (= temp662_113 temp662_112))
(assert (= temp662_114 (select ARGNAME_stride_NAMEEND_VAL temp662_113)))
(assert (= temp662_115 #x0000000000000000))
(assert (= temp662_116 #x0000000000000001))
(assert (= temp662_117 temp662_116))
(assert (= temp662_118 (select ARGNAME_stride_NAMEEND_VAL temp662_117)))
(assert (= temp662_119 #x0000000000000000))
(assert (= temp662_120 #x0000000000000002))
(assert (= temp662_121 temp662_120))
(assert (= temp662_122 (select ARGNAME_stride_NAMEEND_VAL temp662_121)))
(assert (= temp662_123 #x0000000000000000))
(assert (= temp662_124 #x0000000000000003))
(assert (= temp662_125 temp662_124))
(assert (= temp662_126 (select ARGNAME_stride_NAMEEND_VAL temp662_125)))
(assert (= temp662_127 #x0000000000000000))
(assert (= temp662_128 #x0000000000000004))
(assert (= temp662_129 temp662_128))
(assert (= temp662_130 (select ARGNAME_stride_NAMEEND_VAL temp662_129)))
(assert (= temp662_131 #x0000000000000000))
(assert (= temp662_132 #x0000000000000005))
(assert (= temp662_133 temp662_132))
(assert (= temp662_134 (select ARGNAME_stride_NAMEEND_VAL temp662_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp662_114 temp662_111)
             (bvsle temp662_118 temp662_115)
             (bvsle temp662_122 temp662_119)
             (bvsle temp662_126 temp662_123)
             (bvsle temp662_130 temp662_127)
             (bvsle temp662_134 temp662_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp662_135 #x0000000000000000))
(assert (= var1191735 temp662_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp662_136 #x0000000000000001))
(assert (= var1191747 temp662_136))
(assert (= temp662_137 #x0000000000000000))
(assert (= var1179826 temp662_137))
(assert (= temp662_138 #x0000000000000000))
(assert (= temp662_139 temp662_138))
(assert (= temp662_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp662_139)))
(assert (= temp662_141 #x0000000000000001))
(assert (= temp662_142 temp662_141))
(assert (= temp662_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp662_142)))
(assert (= temp662_144 #x0000000000000002))
(assert (= temp662_145 temp662_144))
(assert (= temp662_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp662_145)))
(assert (= temp662_147 #x0000000000000003))
(assert (= temp662_148 temp662_147))
(assert (= temp662_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp662_148)))
(assert (= temp662_150 #x0000000000000004))
(assert (= temp662_151 temp662_150))
(assert (= temp662_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp662_151)))
(assert (= temp662_153 #x0000000000000005))
(assert (= temp662_154 temp662_153))
(assert (= temp662_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp662_154)))
(assert (= temp662_157 var1179826))
(assert (= temp662_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp662_157)))
(assert (= temp662_156 temp662_158))
(assert (= var1191780
   (ite (bvslt temp662_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp662_159 #x0000000000000000))
(assert (= var1191780 temp662_159))
(assert (= temp662_160 #x0000000000000000))
(assert (= var1179826 temp662_160))
(assert (= temp662_162 var1179826))
(assert (= temp662_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp662_162)))
(assert (= temp662_161 temp662_163))
(assert (= var1191802 (bvsmod temp662_161 ARGNAME_groups_NAMEEND)))
(assert (= temp662_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp662_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp662_165 #x0000000000000001))
(assert (= var1191803 temp662_165))
(assert (= temp662_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp662_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp662_167 #x0000000000000001))
(assert (= var1191823 temp662_167))
(assert (= temp662_168 #x0000000000000001))
(assert (= var1180714 temp662_168))
(assert (= temp662_169 #x0000000000000000))
(assert (= temp662_170 temp662_169))
(assert (= temp662_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp662_170)))
(assert (= temp662_172 #x0000000000000001))
(assert (= temp662_173 temp662_172))
(assert (= temp662_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp662_173)))
(assert (= temp662_175 #x0000000000000002))
(assert (= temp662_176 temp662_175))
(assert (= temp662_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp662_176)))
(assert (= temp662_178 #x0000000000000003))
(assert (= temp662_179 temp662_178))
(assert (= temp662_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp662_179)))
(assert (= temp662_181 #x0000000000000004))
(assert (= temp662_182 temp662_181))
(assert (= temp662_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp662_182)))
(assert (= temp662_184 #x0000000000000005))
(assert (= temp662_185 temp662_184))
(assert (= temp662_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp662_185)))
(assert (= temp662_187 #x0000000000000000))
(assert (= temp662_188
   (ite (bvslt var1180714 temp662_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp662_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp662_188)))
(assert (= var1191831 temp662_189))
(assert (bvslt (ite (bvslt var1180714 temp662_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp662_190 #x0000000000000001))
(assert (= var1180714 temp662_190))
(assert (= temp662_192 var1180714))
(assert (= temp662_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp662_192)))
(assert (= temp662_191 temp662_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp662_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp662_194 #x0000000000000001))
(assert (= var1191836 temp662_194))
(assert (= temp662_195 #x0000000000000000))
(assert (= var1179826 temp662_195))
(assert (= temp662_197 var1179826))
(assert (= temp662_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp662_197)))
(assert (= temp662_196 temp662_198))
(assert (= temp662_199 #x0000000000000002))
(assert (= var1586025 temp662_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp662_200 #x0000000000000001))
(assert (= var1191993 temp662_200))
(assert (= temp662_201 #x0000000000000001))
(assert (= var2700303 temp662_201))
(assert (= temp662_202 #x0000000000000001))
(assert (= var2962447 temp662_202))
(assert (= temp662_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp662_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp662_204 #x0000000000000001))
(assert (= var211058 temp662_204))
(assert (= temp662_205 #x0000000000000001))
(assert (= var211188 temp662_205))
(assert (= var3879401 var211188))
(assert (= temp662_206 #x0000000000000000))
(assert (= var3866802 temp662_206))
(assert (= temp662_207 #x0000000000000000))
(assert (= temp662_208
   (ite (bvslt var3866802 temp662_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp662_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp662_208)))
(assert (= var3879420 temp662_209))
(assert (bvslt (ite (bvslt var3866802 temp662_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp662_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp662_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp662_211 #x0000000000000001))
(assert (= var3879421 temp662_211))
(assert (= temp662_212 #x0000000000000000))
(assert (= var4079423 temp662_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp662_213 #x0000000000000002))
(assert (= var4208259 temp662_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp662_214 #x0000000000000000))
(assert (= var4273820 temp662_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211494 var210913))
(assert (= temp662_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp662_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp662_216 #x0000000000000001))
(assert (= var211058 temp662_216))
(model-add temp662_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp662_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp662_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp662_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




