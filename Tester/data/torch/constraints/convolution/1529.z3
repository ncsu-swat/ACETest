(declare-fun temp10833_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10833_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10833_3 () (_ BitVec 64))
(declare-fun temp10833_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10833_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10833_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10833_7 () (_ BitVec 64))
(declare-fun temp10833_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10833_9 () (_ BitVec 64))
(declare-fun temp10833_10 () (_ BitVec 64))
(declare-fun temp10833_11 () (_ BitVec 64))
(declare-fun temp10833_12 () (_ BitVec 64))
(declare-fun temp10833_13 () (_ BitVec 64))
(declare-fun temp10833_14 () (_ BitVec 64))
(declare-fun temp10833_15 () (_ BitVec 64))
(declare-fun temp10833_16 () (_ BitVec 64))
(declare-fun temp10833_17 () (_ BitVec 64))
(declare-fun temp10833_18 () (_ BitVec 64))
(declare-fun temp10833_19 () (_ BitVec 64))
(declare-fun temp10833_20 () (_ BitVec 64))
(declare-fun temp10833_21 () (_ BitVec 64))
(declare-fun temp10833_22 () (_ BitVec 64))
(declare-fun temp10833_23 () (_ BitVec 64))
(declare-fun temp10833_24 () (_ BitVec 64))
(declare-fun temp10833_25 () (_ BitVec 64))
(declare-fun temp10833_26 () (_ BitVec 64))
(declare-fun temp10833_27 () (_ BitVec 64))
(declare-fun temp10833_28 () (_ BitVec 64))
(declare-fun temp10833_29 () (_ BitVec 64))
(declare-fun temp10833_30 () (_ BitVec 64))
(declare-fun temp10833_31 () (_ BitVec 64))
(declare-fun temp10833_32 () (_ BitVec 64))
(declare-fun temp10833_33 () (_ BitVec 64))
(declare-fun temp10833_34 () (_ BitVec 64))
(declare-fun temp10833_35 () (_ BitVec 64))
(declare-fun temp10833_36 () (_ BitVec 64))
(declare-fun temp10833_37 () (_ BitVec 64))
(declare-fun temp10833_38 () (_ BitVec 64))
(declare-fun temp10833_39 () (_ BitVec 64))
(declare-fun temp10833_40 () (_ BitVec 64))
(declare-fun temp10833_41 () (_ BitVec 64))
(declare-fun temp10833_42 () (_ BitVec 64))
(declare-fun temp10833_43 () (_ BitVec 64))
(declare-fun temp10833_44 () (_ BitVec 64))
(declare-fun temp10833_45 () (_ BitVec 64))
(declare-fun temp10833_46 () (_ BitVec 64))
(declare-fun temp10833_47 () (_ BitVec 64))
(declare-fun temp10833_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10833_49 () (_ BitVec 64))
(declare-fun temp10833_50 () (_ BitVec 64))
(declare-fun temp10833_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10833_52 () (_ BitVec 64))
(declare-fun temp10833_53 () (_ BitVec 64))
(declare-fun temp10833_54 () (_ BitVec 64))
(declare-fun temp10833_55 () (_ BitVec 64))
(declare-fun temp10833_56 () (_ BitVec 64))
(declare-fun temp10833_57 () (_ BitVec 64))
(declare-fun temp10833_58 () (_ BitVec 64))
(declare-fun temp10833_59 () (_ BitVec 64))
(declare-fun temp10833_60 () (_ BitVec 64))
(declare-fun temp10833_61 () (_ BitVec 64))
(declare-fun temp10833_62 () (_ BitVec 64))
(declare-fun temp10833_63 () (_ BitVec 64))
(declare-fun temp10833_64 () (_ BitVec 64))
(declare-fun temp10833_65 () (_ BitVec 64))
(declare-fun temp10833_66 () (_ BitVec 64))
(declare-fun temp10833_67 () (_ BitVec 64))
(declare-fun temp10833_68 () (_ BitVec 64))
(declare-fun temp10833_69 () (_ BitVec 64))
(declare-fun temp10833_70 () (_ BitVec 64))
(declare-fun temp10833_71 () (_ BitVec 64))
(declare-fun temp10833_72 () (_ BitVec 64))
(declare-fun temp10833_73 () (_ BitVec 64))
(declare-fun temp10833_74 () (_ BitVec 64))
(declare-fun temp10833_75 () (_ BitVec 64))
(declare-fun temp10833_76 () (_ BitVec 64))
(declare-fun temp10833_77 () (_ BitVec 64))
(declare-fun temp10833_78 () (_ BitVec 64))
(declare-fun temp10833_79 () (_ BitVec 64))
(declare-fun temp10833_80 () (_ BitVec 64))
(declare-fun temp10833_81 () (_ BitVec 64))
(declare-fun temp10833_82 () (_ BitVec 64))
(declare-fun temp10833_83 () (_ BitVec 64))
(declare-fun temp10833_84 () (_ BitVec 64))
(declare-fun temp10833_85 () (_ BitVec 64))
(declare-fun temp10833_86 () (_ BitVec 64))
(declare-fun temp10833_87 () (_ BitVec 64))
(declare-fun temp10833_88 () (_ BitVec 64))
(declare-fun temp10833_89 () (_ BitVec 64))
(declare-fun temp10833_90 () (_ BitVec 64))
(declare-fun temp10833_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10833_92 () (_ BitVec 64))
(declare-fun temp10833_93 () (_ BitVec 64))
(declare-fun temp10833_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10833_95 () (_ BitVec 64))
(declare-fun temp10833_96 () (_ BitVec 64))
(declare-fun temp10833_97 () (_ BitVec 64))
(declare-fun temp10833_98 () (_ BitVec 64))
(declare-fun temp10833_99 () (_ BitVec 64))
(declare-fun temp10833_100 () (_ BitVec 64))
(declare-fun temp10833_101 () (_ BitVec 64))
(declare-fun temp10833_102 () (_ BitVec 64))
(declare-fun temp10833_103 () (_ BitVec 64))
(declare-fun temp10833_104 () (_ BitVec 64))
(declare-fun temp10833_105 () (_ BitVec 64))
(declare-fun temp10833_106 () (_ BitVec 64))
(declare-fun temp10833_107 () (_ BitVec 64))
(declare-fun temp10833_108 () (_ BitVec 64))
(declare-fun temp10833_109 () (_ BitVec 64))
(declare-fun temp10833_110 () (_ BitVec 64))
(declare-fun temp10833_111 () (_ BitVec 64))
(declare-fun temp10833_112 () (_ BitVec 64))
(declare-fun temp10833_113 () (_ BitVec 64))
(declare-fun temp10833_114 () (_ BitVec 64))
(declare-fun temp10833_115 () (_ BitVec 64))
(declare-fun temp10833_116 () (_ BitVec 64))
(declare-fun temp10833_117 () (_ BitVec 64))
(declare-fun temp10833_118 () (_ BitVec 64))
(declare-fun temp10833_119 () (_ BitVec 64))
(declare-fun temp10833_120 () (_ BitVec 64))
(declare-fun temp10833_121 () (_ BitVec 64))
(declare-fun temp10833_122 () (_ BitVec 64))
(declare-fun temp10833_123 () (_ BitVec 64))
(declare-fun temp10833_124 () (_ BitVec 64))
(declare-fun temp10833_125 () (_ BitVec 64))
(declare-fun temp10833_126 () (_ BitVec 64))
(declare-fun temp10833_127 () (_ BitVec 64))
(declare-fun temp10833_128 () (_ BitVec 64))
(declare-fun temp10833_129 () (_ BitVec 64))
(declare-fun temp10833_130 () (_ BitVec 64))
(declare-fun temp10833_131 () (_ BitVec 64))
(declare-fun temp10833_132 () (_ BitVec 64))
(declare-fun temp10833_133 () (_ BitVec 64))
(declare-fun temp10833_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10833_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10833_136 () (_ BitVec 64))
(declare-fun temp10833_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10833_138 () (_ BitVec 64))
(declare-fun temp10833_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10833_140 () (_ BitVec 64))
(declare-fun temp10833_141 () (_ BitVec 64))
(declare-fun temp10833_142 () (_ BitVec 64))
(declare-fun temp10833_143 () (_ BitVec 64))
(declare-fun temp10833_144 () (_ BitVec 64))
(declare-fun temp10833_145 () (_ BitVec 64))
(declare-fun temp10833_146 () (_ BitVec 64))
(declare-fun temp10833_147 () (_ BitVec 64))
(declare-fun temp10833_148 () (_ BitVec 64))
(declare-fun temp10833_149 () (_ BitVec 64))
(declare-fun temp10833_150 () (_ BitVec 64))
(declare-fun temp10833_151 () (_ BitVec 64))
(declare-fun temp10833_152 () (_ BitVec 64))
(declare-fun temp10833_153 () (_ BitVec 64))
(declare-fun temp10833_154 () (_ BitVec 64))
(declare-fun temp10833_155 () (_ BitVec 64))
(declare-fun temp10833_157 () (_ BitVec 64))
(declare-fun temp10833_158 () (_ BitVec 64))
(declare-fun temp10833_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10833_159 () (_ BitVec 64))
(declare-fun temp10833_160 () (_ BitVec 64))
(declare-fun temp10833_162 () (_ BitVec 64))
(declare-fun temp10833_163 () (_ BitVec 64))
(declare-fun temp10833_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10833_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10833_165 () (_ BitVec 64))
(declare-fun temp10833_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10833_167 () (_ BitVec 64))
(declare-fun temp10833_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10833_169 () (_ BitVec 64))
(declare-fun temp10833_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10833_171 () (_ BitVec 64))
(declare-fun temp10833_172 () (_ BitVec 64))
(declare-fun temp10833_173 () (_ BitVec 64))
(declare-fun temp10833_174 () (_ BitVec 64))
(declare-fun temp10833_175 () (_ BitVec 64))
(declare-fun temp10833_176 () (_ BitVec 64))
(declare-fun temp10833_177 () (_ BitVec 64))
(declare-fun temp10833_178 () (_ BitVec 64))
(declare-fun temp10833_179 () (_ BitVec 64))
(declare-fun temp10833_180 () (_ BitVec 64))
(declare-fun temp10833_181 () (_ BitVec 64))
(declare-fun temp10833_182 () (_ BitVec 64))
(declare-fun temp10833_183 () (_ BitVec 64))
(declare-fun temp10833_184 () (_ BitVec 64))
(declare-fun temp10833_185 () (_ BitVec 64))
(declare-fun temp10833_186 () (_ BitVec 64))
(declare-fun temp10833_187 () (_ BitVec 64))
(declare-fun temp10833_188 () (_ BitVec 64))
(declare-fun temp10833_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10833_190 () (_ BitVec 64))
(declare-fun temp10833_192 () (_ BitVec 64))
(declare-fun temp10833_193 () (_ BitVec 64))
(declare-fun temp10833_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10833_194 () (_ BitVec 64))
(declare-fun temp10833_195 () (_ BitVec 64))
(declare-fun temp10833_197 () (_ BitVec 64))
(declare-fun temp10833_198 () (_ BitVec 64))
(declare-fun temp10833_196 () (_ BitVec 64))
(declare-fun temp10833_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10833_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10833_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10833_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10833_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10833_204 () (_ BitVec 64))
(declare-fun temp10833_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10833_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10833_207 () (_ BitVec 64))
(declare-fun temp10833_208 () (_ BitVec 64))
(declare-fun temp10833_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10833_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10833_211 () (_ BitVec 64))
(declare-fun temp10833_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10833_213 () (_ BitVec 64))
(declare-fun temp10833_214 () (_ BitVec 64))
(declare-fun temp10833_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10833_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10833_217 () (_ BitVec 64))
(declare-fun temp10833_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10833_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10833_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var5255568 () (_ BitVec 64))
(declare-fun temp10833_221 () (_ BitVec 64))
(assert (= temp10833_1 #x0000000000000001))
(assert (= var77203 temp10833_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10833_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10833_2)))
(assert (= temp10833_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10833_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10833_4 #x0000000000000000))
(assert (= var210941 temp10833_4))
(assert (= temp10833_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10833_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10833_6 #x0000000000000000))
(assert (= var210986 temp10833_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10833_7 #x0000000000000000))
(assert (= temp10833_8 temp10833_7))
(assert (= temp10833_9 (select ARGNAME_padding_NAMEEND_VAL temp10833_8)))
(assert (= temp10833_10 #x0000000000000001))
(assert (= temp10833_11 temp10833_10))
(assert (= temp10833_12 (select ARGNAME_padding_NAMEEND_VAL temp10833_11)))
(assert (= temp10833_13 #x0000000000000002))
(assert (= temp10833_14 temp10833_13))
(assert (= temp10833_15 (select ARGNAME_padding_NAMEEND_VAL temp10833_14)))
(assert (= temp10833_16 #x0000000000000003))
(assert (= temp10833_17 temp10833_16))
(assert (= temp10833_18 (select ARGNAME_padding_NAMEEND_VAL temp10833_17)))
(assert (= temp10833_19 #x0000000000000004))
(assert (= temp10833_20 temp10833_19))
(assert (= temp10833_21 (select ARGNAME_padding_NAMEEND_VAL temp10833_20)))
(assert (= temp10833_22 #x0000000000000005))
(assert (= temp10833_23 temp10833_22))
(assert (= temp10833_24 (select ARGNAME_padding_NAMEEND_VAL temp10833_23)))
(assert (= temp10833_25 #x0000000000000000))
(assert (= temp10833_26 #x0000000000000000))
(assert (= temp10833_27 temp10833_26))
(assert (= temp10833_28 (select ARGNAME_padding_NAMEEND_VAL temp10833_27)))
(assert (= temp10833_29 #x0000000000000000))
(assert (= temp10833_30 #x0000000000000001))
(assert (= temp10833_31 temp10833_30))
(assert (= temp10833_32 (select ARGNAME_padding_NAMEEND_VAL temp10833_31)))
(assert (= temp10833_33 #x0000000000000000))
(assert (= temp10833_34 #x0000000000000002))
(assert (= temp10833_35 temp10833_34))
(assert (= temp10833_36 (select ARGNAME_padding_NAMEEND_VAL temp10833_35)))
(assert (= temp10833_37 #x0000000000000000))
(assert (= temp10833_38 #x0000000000000003))
(assert (= temp10833_39 temp10833_38))
(assert (= temp10833_40 (select ARGNAME_padding_NAMEEND_VAL temp10833_39)))
(assert (= temp10833_41 #x0000000000000000))
(assert (= temp10833_42 #x0000000000000004))
(assert (= temp10833_43 temp10833_42))
(assert (= temp10833_44 (select ARGNAME_padding_NAMEEND_VAL temp10833_43)))
(assert (= temp10833_45 #x0000000000000000))
(assert (= temp10833_46 #x0000000000000005))
(assert (= temp10833_47 temp10833_46))
(assert (= temp10833_48 (select ARGNAME_padding_NAMEEND_VAL temp10833_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10833_28 temp10833_25)
             (bvslt temp10833_32 temp10833_29)
             (bvslt temp10833_36 temp10833_33)
             (bvslt temp10833_40 temp10833_37)
             (bvslt temp10833_44 temp10833_41)
             (bvslt temp10833_48 temp10833_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10833_49 #x0000000000000000))
(assert (= var1191714 temp10833_49))
(assert (= temp10833_50 #x0000000000000000))
(assert (= temp10833_51 temp10833_50))
(assert (= temp10833_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10833_51)))
(assert (= temp10833_53 #x0000000000000001))
(assert (= temp10833_54 temp10833_53))
(assert (= temp10833_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10833_54)))
(assert (= temp10833_56 #x0000000000000002))
(assert (= temp10833_57 temp10833_56))
(assert (= temp10833_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10833_57)))
(assert (= temp10833_59 #x0000000000000003))
(assert (= temp10833_60 temp10833_59))
(assert (= temp10833_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10833_60)))
(assert (= temp10833_62 #x0000000000000004))
(assert (= temp10833_63 temp10833_62))
(assert (= temp10833_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10833_63)))
(assert (= temp10833_65 #x0000000000000005))
(assert (= temp10833_66 temp10833_65))
(assert (= temp10833_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10833_66)))
(assert (= temp10833_68 #x0000000000000000))
(assert (= temp10833_69 #x0000000000000000))
(assert (= temp10833_70 temp10833_69))
(assert (= temp10833_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10833_70)))
(assert (= temp10833_72 #x0000000000000000))
(assert (= temp10833_73 #x0000000000000001))
(assert (= temp10833_74 temp10833_73))
(assert (= temp10833_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10833_74)))
(assert (= temp10833_76 #x0000000000000000))
(assert (= temp10833_77 #x0000000000000002))
(assert (= temp10833_78 temp10833_77))
(assert (= temp10833_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10833_78)))
(assert (= temp10833_80 #x0000000000000000))
(assert (= temp10833_81 #x0000000000000003))
(assert (= temp10833_82 temp10833_81))
(assert (= temp10833_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10833_82)))
(assert (= temp10833_84 #x0000000000000000))
(assert (= temp10833_85 #x0000000000000004))
(assert (= temp10833_86 temp10833_85))
(assert (= temp10833_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10833_86)))
(assert (= temp10833_88 #x0000000000000000))
(assert (= temp10833_89 #x0000000000000005))
(assert (= temp10833_90 temp10833_89))
(assert (= temp10833_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10833_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10833_71 temp10833_68)
             (bvslt temp10833_75 temp10833_72)
             (bvslt temp10833_79 temp10833_76)
             (bvslt temp10833_83 temp10833_80)
             (bvslt temp10833_87 temp10833_84)
             (bvslt temp10833_91 temp10833_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10833_92 #x0000000000000000))
(assert (= var1191725 temp10833_92))
(assert (= temp10833_93 #x0000000000000000))
(assert (= temp10833_94 temp10833_93))
(assert (= temp10833_95 (select ARGNAME_stride_NAMEEND_VAL temp10833_94)))
(assert (= temp10833_96 #x0000000000000001))
(assert (= temp10833_97 temp10833_96))
(assert (= temp10833_98 (select ARGNAME_stride_NAMEEND_VAL temp10833_97)))
(assert (= temp10833_99 #x0000000000000002))
(assert (= temp10833_100 temp10833_99))
(assert (= temp10833_101 (select ARGNAME_stride_NAMEEND_VAL temp10833_100)))
(assert (= temp10833_102 #x0000000000000003))
(assert (= temp10833_103 temp10833_102))
(assert (= temp10833_104 (select ARGNAME_stride_NAMEEND_VAL temp10833_103)))
(assert (= temp10833_105 #x0000000000000004))
(assert (= temp10833_106 temp10833_105))
(assert (= temp10833_107 (select ARGNAME_stride_NAMEEND_VAL temp10833_106)))
(assert (= temp10833_108 #x0000000000000005))
(assert (= temp10833_109 temp10833_108))
(assert (= temp10833_110 (select ARGNAME_stride_NAMEEND_VAL temp10833_109)))
(assert (= temp10833_111 #x0000000000000000))
(assert (= temp10833_112 #x0000000000000000))
(assert (= temp10833_113 temp10833_112))
(assert (= temp10833_114 (select ARGNAME_stride_NAMEEND_VAL temp10833_113)))
(assert (= temp10833_115 #x0000000000000000))
(assert (= temp10833_116 #x0000000000000001))
(assert (= temp10833_117 temp10833_116))
(assert (= temp10833_118 (select ARGNAME_stride_NAMEEND_VAL temp10833_117)))
(assert (= temp10833_119 #x0000000000000000))
(assert (= temp10833_120 #x0000000000000002))
(assert (= temp10833_121 temp10833_120))
(assert (= temp10833_122 (select ARGNAME_stride_NAMEEND_VAL temp10833_121)))
(assert (= temp10833_123 #x0000000000000000))
(assert (= temp10833_124 #x0000000000000003))
(assert (= temp10833_125 temp10833_124))
(assert (= temp10833_126 (select ARGNAME_stride_NAMEEND_VAL temp10833_125)))
(assert (= temp10833_127 #x0000000000000000))
(assert (= temp10833_128 #x0000000000000004))
(assert (= temp10833_129 temp10833_128))
(assert (= temp10833_130 (select ARGNAME_stride_NAMEEND_VAL temp10833_129)))
(assert (= temp10833_131 #x0000000000000000))
(assert (= temp10833_132 #x0000000000000005))
(assert (= temp10833_133 temp10833_132))
(assert (= temp10833_134 (select ARGNAME_stride_NAMEEND_VAL temp10833_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10833_114 temp10833_111)
             (bvsle temp10833_118 temp10833_115)
             (bvsle temp10833_122 temp10833_119)
             (bvsle temp10833_126 temp10833_123)
             (bvsle temp10833_130 temp10833_127)
             (bvsle temp10833_134 temp10833_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10833_135 #x0000000000000000))
(assert (= var1191735 temp10833_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10833_136 #x0000000000000001))
(assert (= var1191747 temp10833_136))
(assert (= temp10833_137 #x0000000000000000))
(assert (= var1179826 temp10833_137))
(assert (= temp10833_138 #x0000000000000000))
(assert (= temp10833_139 temp10833_138))
(assert (= temp10833_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10833_139)))
(assert (= temp10833_141 #x0000000000000001))
(assert (= temp10833_142 temp10833_141))
(assert (= temp10833_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10833_142)))
(assert (= temp10833_144 #x0000000000000002))
(assert (= temp10833_145 temp10833_144))
(assert (= temp10833_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10833_145)))
(assert (= temp10833_147 #x0000000000000003))
(assert (= temp10833_148 temp10833_147))
(assert (= temp10833_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10833_148)))
(assert (= temp10833_150 #x0000000000000004))
(assert (= temp10833_151 temp10833_150))
(assert (= temp10833_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10833_151)))
(assert (= temp10833_153 #x0000000000000005))
(assert (= temp10833_154 temp10833_153))
(assert (= temp10833_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10833_154)))
(assert (= temp10833_157 var1179826))
(assert (= temp10833_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10833_157)))
(assert (= temp10833_156 temp10833_158))
(assert (= var1191780
   (ite (bvslt temp10833_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10833_159 #x0000000000000000))
(assert (= var1191780 temp10833_159))
(assert (= temp10833_160 #x0000000000000000))
(assert (= var1179826 temp10833_160))
(assert (= temp10833_162 var1179826))
(assert (= temp10833_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10833_162)))
(assert (= temp10833_161 temp10833_163))
(assert (= var1191802 (bvsmod temp10833_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10833_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10833_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10833_165 #x0000000000000001))
(assert (= var1191803 temp10833_165))
(assert (= temp10833_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10833_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10833_167 #x0000000000000001))
(assert (= var1191823 temp10833_167))
(assert (= temp10833_168 #x0000000000000001))
(assert (= var1180714 temp10833_168))
(assert (= temp10833_169 #x0000000000000000))
(assert (= temp10833_170 temp10833_169))
(assert (= temp10833_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10833_170)))
(assert (= temp10833_172 #x0000000000000001))
(assert (= temp10833_173 temp10833_172))
(assert (= temp10833_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10833_173)))
(assert (= temp10833_175 #x0000000000000002))
(assert (= temp10833_176 temp10833_175))
(assert (= temp10833_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10833_176)))
(assert (= temp10833_178 #x0000000000000003))
(assert (= temp10833_179 temp10833_178))
(assert (= temp10833_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10833_179)))
(assert (= temp10833_181 #x0000000000000004))
(assert (= temp10833_182 temp10833_181))
(assert (= temp10833_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10833_182)))
(assert (= temp10833_184 #x0000000000000005))
(assert (= temp10833_185 temp10833_184))
(assert (= temp10833_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10833_185)))
(assert (= temp10833_187 #x0000000000000000))
(assert (= temp10833_188
   (ite (bvslt var1180714 temp10833_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10833_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10833_188)))
(assert (= var1191831 temp10833_189))
(assert (bvslt (ite (bvslt var1180714 temp10833_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10833_190 #x0000000000000001))
(assert (= var1180714 temp10833_190))
(assert (= temp10833_192 var1180714))
(assert (= temp10833_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10833_192)))
(assert (= temp10833_191 temp10833_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10833_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10833_194 #x0000000000000001))
(assert (= var1191836 temp10833_194))
(assert (= temp10833_195 #x0000000000000000))
(assert (= var1179826 temp10833_195))
(assert (= temp10833_197 var1179826))
(assert (= temp10833_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10833_197)))
(assert (= temp10833_196 temp10833_198))
(assert (= temp10833_199 #x0000000000000002))
(assert (= var1586025 temp10833_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10833_200 #x0000000000000001))
(assert (= var1191993 temp10833_200))
(assert (= temp10833_201 #x0000000000000001))
(assert (= var2700303 temp10833_201))
(assert (= temp10833_202 #x0000000000000001))
(assert (= var2962447 temp10833_202))
(assert (= temp10833_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10833_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10833_204 #x0000000000000001))
(assert (= var211058 temp10833_204))
(assert (= temp10833_205 #x0000000000000001))
(assert (= var211188 temp10833_205))
(assert (= var3879401 var211188))
(assert (= temp10833_206 #x0000000000000000))
(assert (= var3866802 temp10833_206))
(assert (= temp10833_207 #x0000000000000000))
(assert (= temp10833_208
   (ite (bvslt var3866802 temp10833_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10833_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10833_208)))
(assert (= var3879420 temp10833_209))
(assert (bvslt (ite (bvslt var3866802 temp10833_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10833_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10833_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10833_211 #x0000000000000000))
(assert (= var3879421 temp10833_211))
(assert (= temp10833_212 #x0000000000000001))
(assert (= var3867690 temp10833_212))
(assert (= temp10833_213 #x0000000000000000))
(assert (= temp10833_214
   (ite (bvslt var3867690 temp10833_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10833_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10833_214)))
(assert (= var3879423 temp10833_215))
(assert (bvslt (ite (bvslt var3867690 temp10833_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10833_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10833_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10833_217 #x0000000000000001))
(assert (= var3879424 temp10833_217))
(assert (= temp10833_218 #x0000000000000000))
(assert (= var4133117 temp10833_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10833_219 #x0000000000000002))
(assert (= var4339331 temp10833_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10833_220 #x0000000000000000))
(assert (= var4404892 temp10833_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4993424 var211201))
(assert (= var5255568 var211201))
(assert (= temp10833_221 #x0000000000000001))
(assert (= var211058 temp10833_221))
(model-add temp10833_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10833_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10833_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10833_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





