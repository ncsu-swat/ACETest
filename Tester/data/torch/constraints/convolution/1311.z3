(declare-fun temp10478_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10478_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10478_3 () (_ BitVec 64))
(declare-fun temp10478_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10478_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10478_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10478_7 () (_ BitVec 64))
(declare-fun temp10478_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10478_9 () (_ BitVec 64))
(declare-fun temp10478_10 () (_ BitVec 64))
(declare-fun temp10478_11 () (_ BitVec 64))
(declare-fun temp10478_12 () (_ BitVec 64))
(declare-fun temp10478_13 () (_ BitVec 64))
(declare-fun temp10478_14 () (_ BitVec 64))
(declare-fun temp10478_15 () (_ BitVec 64))
(declare-fun temp10478_16 () (_ BitVec 64))
(declare-fun temp10478_17 () (_ BitVec 64))
(declare-fun temp10478_18 () (_ BitVec 64))
(declare-fun temp10478_19 () (_ BitVec 64))
(declare-fun temp10478_20 () (_ BitVec 64))
(declare-fun temp10478_21 () (_ BitVec 64))
(declare-fun temp10478_22 () (_ BitVec 64))
(declare-fun temp10478_23 () (_ BitVec 64))
(declare-fun temp10478_24 () (_ BitVec 64))
(declare-fun temp10478_25 () (_ BitVec 64))
(declare-fun temp10478_26 () (_ BitVec 64))
(declare-fun temp10478_27 () (_ BitVec 64))
(declare-fun temp10478_28 () (_ BitVec 64))
(declare-fun temp10478_29 () (_ BitVec 64))
(declare-fun temp10478_30 () (_ BitVec 64))
(declare-fun temp10478_31 () (_ BitVec 64))
(declare-fun temp10478_32 () (_ BitVec 64))
(declare-fun temp10478_33 () (_ BitVec 64))
(declare-fun temp10478_34 () (_ BitVec 64))
(declare-fun temp10478_35 () (_ BitVec 64))
(declare-fun temp10478_36 () (_ BitVec 64))
(declare-fun temp10478_37 () (_ BitVec 64))
(declare-fun temp10478_38 () (_ BitVec 64))
(declare-fun temp10478_39 () (_ BitVec 64))
(declare-fun temp10478_40 () (_ BitVec 64))
(declare-fun temp10478_41 () (_ BitVec 64))
(declare-fun temp10478_42 () (_ BitVec 64))
(declare-fun temp10478_43 () (_ BitVec 64))
(declare-fun temp10478_44 () (_ BitVec 64))
(declare-fun temp10478_45 () (_ BitVec 64))
(declare-fun temp10478_46 () (_ BitVec 64))
(declare-fun temp10478_47 () (_ BitVec 64))
(declare-fun temp10478_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10478_49 () (_ BitVec 64))
(declare-fun temp10478_50 () (_ BitVec 64))
(declare-fun temp10478_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10478_52 () (_ BitVec 64))
(declare-fun temp10478_53 () (_ BitVec 64))
(declare-fun temp10478_54 () (_ BitVec 64))
(declare-fun temp10478_55 () (_ BitVec 64))
(declare-fun temp10478_56 () (_ BitVec 64))
(declare-fun temp10478_57 () (_ BitVec 64))
(declare-fun temp10478_58 () (_ BitVec 64))
(declare-fun temp10478_59 () (_ BitVec 64))
(declare-fun temp10478_60 () (_ BitVec 64))
(declare-fun temp10478_61 () (_ BitVec 64))
(declare-fun temp10478_62 () (_ BitVec 64))
(declare-fun temp10478_63 () (_ BitVec 64))
(declare-fun temp10478_64 () (_ BitVec 64))
(declare-fun temp10478_65 () (_ BitVec 64))
(declare-fun temp10478_66 () (_ BitVec 64))
(declare-fun temp10478_67 () (_ BitVec 64))
(declare-fun temp10478_68 () (_ BitVec 64))
(declare-fun temp10478_69 () (_ BitVec 64))
(declare-fun temp10478_70 () (_ BitVec 64))
(declare-fun temp10478_71 () (_ BitVec 64))
(declare-fun temp10478_72 () (_ BitVec 64))
(declare-fun temp10478_73 () (_ BitVec 64))
(declare-fun temp10478_74 () (_ BitVec 64))
(declare-fun temp10478_75 () (_ BitVec 64))
(declare-fun temp10478_76 () (_ BitVec 64))
(declare-fun temp10478_77 () (_ BitVec 64))
(declare-fun temp10478_78 () (_ BitVec 64))
(declare-fun temp10478_79 () (_ BitVec 64))
(declare-fun temp10478_80 () (_ BitVec 64))
(declare-fun temp10478_81 () (_ BitVec 64))
(declare-fun temp10478_82 () (_ BitVec 64))
(declare-fun temp10478_83 () (_ BitVec 64))
(declare-fun temp10478_84 () (_ BitVec 64))
(declare-fun temp10478_85 () (_ BitVec 64))
(declare-fun temp10478_86 () (_ BitVec 64))
(declare-fun temp10478_87 () (_ BitVec 64))
(declare-fun temp10478_88 () (_ BitVec 64))
(declare-fun temp10478_89 () (_ BitVec 64))
(declare-fun temp10478_90 () (_ BitVec 64))
(declare-fun temp10478_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10478_92 () (_ BitVec 64))
(declare-fun temp10478_93 () (_ BitVec 64))
(declare-fun temp10478_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10478_95 () (_ BitVec 64))
(declare-fun temp10478_96 () (_ BitVec 64))
(declare-fun temp10478_97 () (_ BitVec 64))
(declare-fun temp10478_98 () (_ BitVec 64))
(declare-fun temp10478_99 () (_ BitVec 64))
(declare-fun temp10478_100 () (_ BitVec 64))
(declare-fun temp10478_101 () (_ BitVec 64))
(declare-fun temp10478_102 () (_ BitVec 64))
(declare-fun temp10478_103 () (_ BitVec 64))
(declare-fun temp10478_104 () (_ BitVec 64))
(declare-fun temp10478_105 () (_ BitVec 64))
(declare-fun temp10478_106 () (_ BitVec 64))
(declare-fun temp10478_107 () (_ BitVec 64))
(declare-fun temp10478_108 () (_ BitVec 64))
(declare-fun temp10478_109 () (_ BitVec 64))
(declare-fun temp10478_110 () (_ BitVec 64))
(declare-fun temp10478_111 () (_ BitVec 64))
(declare-fun temp10478_112 () (_ BitVec 64))
(declare-fun temp10478_113 () (_ BitVec 64))
(declare-fun temp10478_114 () (_ BitVec 64))
(declare-fun temp10478_115 () (_ BitVec 64))
(declare-fun temp10478_116 () (_ BitVec 64))
(declare-fun temp10478_117 () (_ BitVec 64))
(declare-fun temp10478_118 () (_ BitVec 64))
(declare-fun temp10478_119 () (_ BitVec 64))
(declare-fun temp10478_120 () (_ BitVec 64))
(declare-fun temp10478_121 () (_ BitVec 64))
(declare-fun temp10478_122 () (_ BitVec 64))
(declare-fun temp10478_123 () (_ BitVec 64))
(declare-fun temp10478_124 () (_ BitVec 64))
(declare-fun temp10478_125 () (_ BitVec 64))
(declare-fun temp10478_126 () (_ BitVec 64))
(declare-fun temp10478_127 () (_ BitVec 64))
(declare-fun temp10478_128 () (_ BitVec 64))
(declare-fun temp10478_129 () (_ BitVec 64))
(declare-fun temp10478_130 () (_ BitVec 64))
(declare-fun temp10478_131 () (_ BitVec 64))
(declare-fun temp10478_132 () (_ BitVec 64))
(declare-fun temp10478_133 () (_ BitVec 64))
(declare-fun temp10478_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10478_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10478_136 () (_ BitVec 64))
(declare-fun temp10478_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10478_138 () (_ BitVec 64))
(declare-fun temp10478_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10478_140 () (_ BitVec 64))
(declare-fun temp10478_141 () (_ BitVec 64))
(declare-fun temp10478_142 () (_ BitVec 64))
(declare-fun temp10478_143 () (_ BitVec 64))
(declare-fun temp10478_144 () (_ BitVec 64))
(declare-fun temp10478_145 () (_ BitVec 64))
(declare-fun temp10478_146 () (_ BitVec 64))
(declare-fun temp10478_147 () (_ BitVec 64))
(declare-fun temp10478_148 () (_ BitVec 64))
(declare-fun temp10478_149 () (_ BitVec 64))
(declare-fun temp10478_150 () (_ BitVec 64))
(declare-fun temp10478_151 () (_ BitVec 64))
(declare-fun temp10478_152 () (_ BitVec 64))
(declare-fun temp10478_153 () (_ BitVec 64))
(declare-fun temp10478_154 () (_ BitVec 64))
(declare-fun temp10478_155 () (_ BitVec 64))
(declare-fun temp10478_157 () (_ BitVec 64))
(declare-fun temp10478_158 () (_ BitVec 64))
(declare-fun temp10478_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10478_159 () (_ BitVec 64))
(declare-fun temp10478_160 () (_ BitVec 64))
(declare-fun temp10478_162 () (_ BitVec 64))
(declare-fun temp10478_163 () (_ BitVec 64))
(declare-fun temp10478_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10478_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10478_165 () (_ BitVec 64))
(declare-fun temp10478_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10478_167 () (_ BitVec 64))
(declare-fun temp10478_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10478_169 () (_ BitVec 64))
(declare-fun temp10478_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10478_171 () (_ BitVec 64))
(declare-fun temp10478_172 () (_ BitVec 64))
(declare-fun temp10478_173 () (_ BitVec 64))
(declare-fun temp10478_174 () (_ BitVec 64))
(declare-fun temp10478_175 () (_ BitVec 64))
(declare-fun temp10478_176 () (_ BitVec 64))
(declare-fun temp10478_177 () (_ BitVec 64))
(declare-fun temp10478_178 () (_ BitVec 64))
(declare-fun temp10478_179 () (_ BitVec 64))
(declare-fun temp10478_180 () (_ BitVec 64))
(declare-fun temp10478_181 () (_ BitVec 64))
(declare-fun temp10478_182 () (_ BitVec 64))
(declare-fun temp10478_183 () (_ BitVec 64))
(declare-fun temp10478_184 () (_ BitVec 64))
(declare-fun temp10478_185 () (_ BitVec 64))
(declare-fun temp10478_186 () (_ BitVec 64))
(declare-fun temp10478_187 () (_ BitVec 64))
(declare-fun temp10478_188 () (_ BitVec 64))
(declare-fun temp10478_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10478_190 () (_ BitVec 64))
(declare-fun temp10478_192 () (_ BitVec 64))
(declare-fun temp10478_193 () (_ BitVec 64))
(declare-fun temp10478_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10478_194 () (_ BitVec 64))
(declare-fun temp10478_195 () (_ BitVec 64))
(declare-fun temp10478_197 () (_ BitVec 64))
(declare-fun temp10478_198 () (_ BitVec 64))
(declare-fun temp10478_196 () (_ BitVec 64))
(declare-fun temp10478_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10478_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10478_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10478_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10478_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10478_204 () (_ BitVec 64))
(declare-fun temp10478_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10478_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10478_207 () (_ BitVec 64))
(declare-fun temp10478_208 () (_ BitVec 64))
(declare-fun temp10478_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10478_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10478_211 () (_ BitVec 64))
(declare-fun temp10478_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10478_213 () (_ BitVec 64))
(declare-fun temp10478_214 () (_ BitVec 64))
(declare-fun temp10478_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10478_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10478_217 () (_ BitVec 64))
(declare-fun temp10478_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10478_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10478_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp10478_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp10478_222 () (_ BitVec 64))
(declare-fun temp10478_223 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun temp10478_224 () (_ BitVec 64))
(assert (= temp10478_1 #x0000000000000001))
(assert (= var77203 temp10478_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10478_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10478_2)))
(assert (= temp10478_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10478_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10478_4 #x0000000000000000))
(assert (= var210941 temp10478_4))
(assert (= temp10478_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10478_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10478_6 #x0000000000000000))
(assert (= var210986 temp10478_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10478_7 #x0000000000000000))
(assert (= temp10478_8 temp10478_7))
(assert (= temp10478_9 (select ARGNAME_padding_NAMEEND_VAL temp10478_8)))
(assert (= temp10478_10 #x0000000000000001))
(assert (= temp10478_11 temp10478_10))
(assert (= temp10478_12 (select ARGNAME_padding_NAMEEND_VAL temp10478_11)))
(assert (= temp10478_13 #x0000000000000002))
(assert (= temp10478_14 temp10478_13))
(assert (= temp10478_15 (select ARGNAME_padding_NAMEEND_VAL temp10478_14)))
(assert (= temp10478_16 #x0000000000000003))
(assert (= temp10478_17 temp10478_16))
(assert (= temp10478_18 (select ARGNAME_padding_NAMEEND_VAL temp10478_17)))
(assert (= temp10478_19 #x0000000000000004))
(assert (= temp10478_20 temp10478_19))
(assert (= temp10478_21 (select ARGNAME_padding_NAMEEND_VAL temp10478_20)))
(assert (= temp10478_22 #x0000000000000005))
(assert (= temp10478_23 temp10478_22))
(assert (= temp10478_24 (select ARGNAME_padding_NAMEEND_VAL temp10478_23)))
(assert (= temp10478_25 #x0000000000000000))
(assert (= temp10478_26 #x0000000000000000))
(assert (= temp10478_27 temp10478_26))
(assert (= temp10478_28 (select ARGNAME_padding_NAMEEND_VAL temp10478_27)))
(assert (= temp10478_29 #x0000000000000000))
(assert (= temp10478_30 #x0000000000000001))
(assert (= temp10478_31 temp10478_30))
(assert (= temp10478_32 (select ARGNAME_padding_NAMEEND_VAL temp10478_31)))
(assert (= temp10478_33 #x0000000000000000))
(assert (= temp10478_34 #x0000000000000002))
(assert (= temp10478_35 temp10478_34))
(assert (= temp10478_36 (select ARGNAME_padding_NAMEEND_VAL temp10478_35)))
(assert (= temp10478_37 #x0000000000000000))
(assert (= temp10478_38 #x0000000000000003))
(assert (= temp10478_39 temp10478_38))
(assert (= temp10478_40 (select ARGNAME_padding_NAMEEND_VAL temp10478_39)))
(assert (= temp10478_41 #x0000000000000000))
(assert (= temp10478_42 #x0000000000000004))
(assert (= temp10478_43 temp10478_42))
(assert (= temp10478_44 (select ARGNAME_padding_NAMEEND_VAL temp10478_43)))
(assert (= temp10478_45 #x0000000000000000))
(assert (= temp10478_46 #x0000000000000005))
(assert (= temp10478_47 temp10478_46))
(assert (= temp10478_48 (select ARGNAME_padding_NAMEEND_VAL temp10478_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10478_28 temp10478_25)
             (bvslt temp10478_32 temp10478_29)
             (bvslt temp10478_36 temp10478_33)
             (bvslt temp10478_40 temp10478_37)
             (bvslt temp10478_44 temp10478_41)
             (bvslt temp10478_48 temp10478_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10478_49 #x0000000000000000))
(assert (= var1191714 temp10478_49))
(assert (= temp10478_50 #x0000000000000000))
(assert (= temp10478_51 temp10478_50))
(assert (= temp10478_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10478_51)))
(assert (= temp10478_53 #x0000000000000001))
(assert (= temp10478_54 temp10478_53))
(assert (= temp10478_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10478_54)))
(assert (= temp10478_56 #x0000000000000002))
(assert (= temp10478_57 temp10478_56))
(assert (= temp10478_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10478_57)))
(assert (= temp10478_59 #x0000000000000003))
(assert (= temp10478_60 temp10478_59))
(assert (= temp10478_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10478_60)))
(assert (= temp10478_62 #x0000000000000004))
(assert (= temp10478_63 temp10478_62))
(assert (= temp10478_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10478_63)))
(assert (= temp10478_65 #x0000000000000005))
(assert (= temp10478_66 temp10478_65))
(assert (= temp10478_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10478_66)))
(assert (= temp10478_68 #x0000000000000000))
(assert (= temp10478_69 #x0000000000000000))
(assert (= temp10478_70 temp10478_69))
(assert (= temp10478_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10478_70)))
(assert (= temp10478_72 #x0000000000000000))
(assert (= temp10478_73 #x0000000000000001))
(assert (= temp10478_74 temp10478_73))
(assert (= temp10478_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10478_74)))
(assert (= temp10478_76 #x0000000000000000))
(assert (= temp10478_77 #x0000000000000002))
(assert (= temp10478_78 temp10478_77))
(assert (= temp10478_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10478_78)))
(assert (= temp10478_80 #x0000000000000000))
(assert (= temp10478_81 #x0000000000000003))
(assert (= temp10478_82 temp10478_81))
(assert (= temp10478_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10478_82)))
(assert (= temp10478_84 #x0000000000000000))
(assert (= temp10478_85 #x0000000000000004))
(assert (= temp10478_86 temp10478_85))
(assert (= temp10478_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10478_86)))
(assert (= temp10478_88 #x0000000000000000))
(assert (= temp10478_89 #x0000000000000005))
(assert (= temp10478_90 temp10478_89))
(assert (= temp10478_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10478_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10478_71 temp10478_68)
             (bvslt temp10478_75 temp10478_72)
             (bvslt temp10478_79 temp10478_76)
             (bvslt temp10478_83 temp10478_80)
             (bvslt temp10478_87 temp10478_84)
             (bvslt temp10478_91 temp10478_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10478_92 #x0000000000000000))
(assert (= var1191725 temp10478_92))
(assert (= temp10478_93 #x0000000000000000))
(assert (= temp10478_94 temp10478_93))
(assert (= temp10478_95 (select ARGNAME_stride_NAMEEND_VAL temp10478_94)))
(assert (= temp10478_96 #x0000000000000001))
(assert (= temp10478_97 temp10478_96))
(assert (= temp10478_98 (select ARGNAME_stride_NAMEEND_VAL temp10478_97)))
(assert (= temp10478_99 #x0000000000000002))
(assert (= temp10478_100 temp10478_99))
(assert (= temp10478_101 (select ARGNAME_stride_NAMEEND_VAL temp10478_100)))
(assert (= temp10478_102 #x0000000000000003))
(assert (= temp10478_103 temp10478_102))
(assert (= temp10478_104 (select ARGNAME_stride_NAMEEND_VAL temp10478_103)))
(assert (= temp10478_105 #x0000000000000004))
(assert (= temp10478_106 temp10478_105))
(assert (= temp10478_107 (select ARGNAME_stride_NAMEEND_VAL temp10478_106)))
(assert (= temp10478_108 #x0000000000000005))
(assert (= temp10478_109 temp10478_108))
(assert (= temp10478_110 (select ARGNAME_stride_NAMEEND_VAL temp10478_109)))
(assert (= temp10478_111 #x0000000000000000))
(assert (= temp10478_112 #x0000000000000000))
(assert (= temp10478_113 temp10478_112))
(assert (= temp10478_114 (select ARGNAME_stride_NAMEEND_VAL temp10478_113)))
(assert (= temp10478_115 #x0000000000000000))
(assert (= temp10478_116 #x0000000000000001))
(assert (= temp10478_117 temp10478_116))
(assert (= temp10478_118 (select ARGNAME_stride_NAMEEND_VAL temp10478_117)))
(assert (= temp10478_119 #x0000000000000000))
(assert (= temp10478_120 #x0000000000000002))
(assert (= temp10478_121 temp10478_120))
(assert (= temp10478_122 (select ARGNAME_stride_NAMEEND_VAL temp10478_121)))
(assert (= temp10478_123 #x0000000000000000))
(assert (= temp10478_124 #x0000000000000003))
(assert (= temp10478_125 temp10478_124))
(assert (= temp10478_126 (select ARGNAME_stride_NAMEEND_VAL temp10478_125)))
(assert (= temp10478_127 #x0000000000000000))
(assert (= temp10478_128 #x0000000000000004))
(assert (= temp10478_129 temp10478_128))
(assert (= temp10478_130 (select ARGNAME_stride_NAMEEND_VAL temp10478_129)))
(assert (= temp10478_131 #x0000000000000000))
(assert (= temp10478_132 #x0000000000000005))
(assert (= temp10478_133 temp10478_132))
(assert (= temp10478_134 (select ARGNAME_stride_NAMEEND_VAL temp10478_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10478_114 temp10478_111)
             (bvsle temp10478_118 temp10478_115)
             (bvsle temp10478_122 temp10478_119)
             (bvsle temp10478_126 temp10478_123)
             (bvsle temp10478_130 temp10478_127)
             (bvsle temp10478_134 temp10478_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10478_135 #x0000000000000000))
(assert (= var1191735 temp10478_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10478_136 #x0000000000000001))
(assert (= var1191747 temp10478_136))
(assert (= temp10478_137 #x0000000000000000))
(assert (= var1179826 temp10478_137))
(assert (= temp10478_138 #x0000000000000000))
(assert (= temp10478_139 temp10478_138))
(assert (= temp10478_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10478_139)))
(assert (= temp10478_141 #x0000000000000001))
(assert (= temp10478_142 temp10478_141))
(assert (= temp10478_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10478_142)))
(assert (= temp10478_144 #x0000000000000002))
(assert (= temp10478_145 temp10478_144))
(assert (= temp10478_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10478_145)))
(assert (= temp10478_147 #x0000000000000003))
(assert (= temp10478_148 temp10478_147))
(assert (= temp10478_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10478_148)))
(assert (= temp10478_150 #x0000000000000004))
(assert (= temp10478_151 temp10478_150))
(assert (= temp10478_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10478_151)))
(assert (= temp10478_153 #x0000000000000005))
(assert (= temp10478_154 temp10478_153))
(assert (= temp10478_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10478_154)))
(assert (= temp10478_157 var1179826))
(assert (= temp10478_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10478_157)))
(assert (= temp10478_156 temp10478_158))
(assert (= var1191780
   (ite (bvslt temp10478_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10478_159 #x0000000000000000))
(assert (= var1191780 temp10478_159))
(assert (= temp10478_160 #x0000000000000000))
(assert (= var1179826 temp10478_160))
(assert (= temp10478_162 var1179826))
(assert (= temp10478_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10478_162)))
(assert (= temp10478_161 temp10478_163))
(assert (= var1191802 (bvsmod temp10478_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10478_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10478_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10478_165 #x0000000000000001))
(assert (= var1191803 temp10478_165))
(assert (= temp10478_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10478_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10478_167 #x0000000000000001))
(assert (= var1191823 temp10478_167))
(assert (= temp10478_168 #x0000000000000001))
(assert (= var1180714 temp10478_168))
(assert (= temp10478_169 #x0000000000000000))
(assert (= temp10478_170 temp10478_169))
(assert (= temp10478_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10478_170)))
(assert (= temp10478_172 #x0000000000000001))
(assert (= temp10478_173 temp10478_172))
(assert (= temp10478_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10478_173)))
(assert (= temp10478_175 #x0000000000000002))
(assert (= temp10478_176 temp10478_175))
(assert (= temp10478_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10478_176)))
(assert (= temp10478_178 #x0000000000000003))
(assert (= temp10478_179 temp10478_178))
(assert (= temp10478_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10478_179)))
(assert (= temp10478_181 #x0000000000000004))
(assert (= temp10478_182 temp10478_181))
(assert (= temp10478_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10478_182)))
(assert (= temp10478_184 #x0000000000000005))
(assert (= temp10478_185 temp10478_184))
(assert (= temp10478_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10478_185)))
(assert (= temp10478_187 #x0000000000000000))
(assert (= temp10478_188
   (ite (bvslt var1180714 temp10478_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10478_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10478_188)))
(assert (= var1191831 temp10478_189))
(assert (bvslt (ite (bvslt var1180714 temp10478_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10478_190 #x0000000000000001))
(assert (= var1180714 temp10478_190))
(assert (= temp10478_192 var1180714))
(assert (= temp10478_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10478_192)))
(assert (= temp10478_191 temp10478_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10478_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10478_194 #x0000000000000001))
(assert (= var1191836 temp10478_194))
(assert (= temp10478_195 #x0000000000000000))
(assert (= var1179826 temp10478_195))
(assert (= temp10478_197 var1179826))
(assert (= temp10478_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10478_197)))
(assert (= temp10478_196 temp10478_198))
(assert (= temp10478_199 #x0000000000000002))
(assert (= var1586025 temp10478_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10478_200 #x0000000000000001))
(assert (= var1191993 temp10478_200))
(assert (= temp10478_201 #x0000000000000001))
(assert (= var2700303 temp10478_201))
(assert (= temp10478_202 #x0000000000000001))
(assert (= var2962447 temp10478_202))
(assert (= temp10478_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10478_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10478_204 #x0000000000000001))
(assert (= var211058 temp10478_204))
(assert (= temp10478_205 #x0000000000000001))
(assert (= var211188 temp10478_205))
(assert (= var3879401 var211188))
(assert (= temp10478_206 #x0000000000000000))
(assert (= var3866802 temp10478_206))
(assert (= temp10478_207 #x0000000000000000))
(assert (= temp10478_208
   (ite (bvslt var3866802 temp10478_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10478_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10478_208)))
(assert (= var3879420 temp10478_209))
(assert (bvslt (ite (bvslt var3866802 temp10478_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10478_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10478_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10478_211 #x0000000000000000))
(assert (= var3879421 temp10478_211))
(assert (= temp10478_212 #x0000000000000001))
(assert (= var3867690 temp10478_212))
(assert (= temp10478_213 #x0000000000000000))
(assert (= temp10478_214
   (ite (bvslt var3867690 temp10478_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10478_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10478_214)))
(assert (= var3879423 temp10478_215))
(assert (bvslt (ite (bvslt var3867690 temp10478_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10478_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10478_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10478_217 #x0000000000000001))
(assert (= var3879424 temp10478_217))
(assert (= temp10478_218 #x0000000000000000))
(assert (= var4079423 temp10478_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10478_219 #x0000000000000002))
(assert (= var4208259 temp10478_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10478_220 #x0000000000000000))
(assert (= var4273820 temp10478_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp10478_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp10478_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10478_222 #x0000000000000000))
(assert (= var212414 temp10478_222))
(assert (= temp10478_223 #x0000000000000002))
(assert (= var5060227 temp10478_223))
(assert (= var5125772 var5060227))
(assert (= temp10478_224 #x0000000000000001))
(assert (= var211058 temp10478_224))
(model-add temp10478_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10478_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10478_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10478_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





