(declare-fun temp10258_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10258_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10258_3 () (_ BitVec 64))
(declare-fun temp10258_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10258_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10258_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10258_7 () (_ BitVec 64))
(declare-fun temp10258_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10258_9 () (_ BitVec 64))
(declare-fun temp10258_10 () (_ BitVec 64))
(declare-fun temp10258_11 () (_ BitVec 64))
(declare-fun temp10258_12 () (_ BitVec 64))
(declare-fun temp10258_13 () (_ BitVec 64))
(declare-fun temp10258_14 () (_ BitVec 64))
(declare-fun temp10258_15 () (_ BitVec 64))
(declare-fun temp10258_16 () (_ BitVec 64))
(declare-fun temp10258_17 () (_ BitVec 64))
(declare-fun temp10258_18 () (_ BitVec 64))
(declare-fun temp10258_19 () (_ BitVec 64))
(declare-fun temp10258_20 () (_ BitVec 64))
(declare-fun temp10258_21 () (_ BitVec 64))
(declare-fun temp10258_22 () (_ BitVec 64))
(declare-fun temp10258_23 () (_ BitVec 64))
(declare-fun temp10258_24 () (_ BitVec 64))
(declare-fun temp10258_25 () (_ BitVec 64))
(declare-fun temp10258_26 () (_ BitVec 64))
(declare-fun temp10258_27 () (_ BitVec 64))
(declare-fun temp10258_28 () (_ BitVec 64))
(declare-fun temp10258_29 () (_ BitVec 64))
(declare-fun temp10258_30 () (_ BitVec 64))
(declare-fun temp10258_31 () (_ BitVec 64))
(declare-fun temp10258_32 () (_ BitVec 64))
(declare-fun temp10258_33 () (_ BitVec 64))
(declare-fun temp10258_34 () (_ BitVec 64))
(declare-fun temp10258_35 () (_ BitVec 64))
(declare-fun temp10258_36 () (_ BitVec 64))
(declare-fun temp10258_37 () (_ BitVec 64))
(declare-fun temp10258_38 () (_ BitVec 64))
(declare-fun temp10258_39 () (_ BitVec 64))
(declare-fun temp10258_40 () (_ BitVec 64))
(declare-fun temp10258_41 () (_ BitVec 64))
(declare-fun temp10258_42 () (_ BitVec 64))
(declare-fun temp10258_43 () (_ BitVec 64))
(declare-fun temp10258_44 () (_ BitVec 64))
(declare-fun temp10258_45 () (_ BitVec 64))
(declare-fun temp10258_46 () (_ BitVec 64))
(declare-fun temp10258_47 () (_ BitVec 64))
(declare-fun temp10258_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10258_49 () (_ BitVec 64))
(declare-fun temp10258_50 () (_ BitVec 64))
(declare-fun temp10258_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10258_52 () (_ BitVec 64))
(declare-fun temp10258_53 () (_ BitVec 64))
(declare-fun temp10258_54 () (_ BitVec 64))
(declare-fun temp10258_55 () (_ BitVec 64))
(declare-fun temp10258_56 () (_ BitVec 64))
(declare-fun temp10258_57 () (_ BitVec 64))
(declare-fun temp10258_58 () (_ BitVec 64))
(declare-fun temp10258_59 () (_ BitVec 64))
(declare-fun temp10258_60 () (_ BitVec 64))
(declare-fun temp10258_61 () (_ BitVec 64))
(declare-fun temp10258_62 () (_ BitVec 64))
(declare-fun temp10258_63 () (_ BitVec 64))
(declare-fun temp10258_64 () (_ BitVec 64))
(declare-fun temp10258_65 () (_ BitVec 64))
(declare-fun temp10258_66 () (_ BitVec 64))
(declare-fun temp10258_67 () (_ BitVec 64))
(declare-fun temp10258_68 () (_ BitVec 64))
(declare-fun temp10258_69 () (_ BitVec 64))
(declare-fun temp10258_70 () (_ BitVec 64))
(declare-fun temp10258_71 () (_ BitVec 64))
(declare-fun temp10258_72 () (_ BitVec 64))
(declare-fun temp10258_73 () (_ BitVec 64))
(declare-fun temp10258_74 () (_ BitVec 64))
(declare-fun temp10258_75 () (_ BitVec 64))
(declare-fun temp10258_76 () (_ BitVec 64))
(declare-fun temp10258_77 () (_ BitVec 64))
(declare-fun temp10258_78 () (_ BitVec 64))
(declare-fun temp10258_79 () (_ BitVec 64))
(declare-fun temp10258_80 () (_ BitVec 64))
(declare-fun temp10258_81 () (_ BitVec 64))
(declare-fun temp10258_82 () (_ BitVec 64))
(declare-fun temp10258_83 () (_ BitVec 64))
(declare-fun temp10258_84 () (_ BitVec 64))
(declare-fun temp10258_85 () (_ BitVec 64))
(declare-fun temp10258_86 () (_ BitVec 64))
(declare-fun temp10258_87 () (_ BitVec 64))
(declare-fun temp10258_88 () (_ BitVec 64))
(declare-fun temp10258_89 () (_ BitVec 64))
(declare-fun temp10258_90 () (_ BitVec 64))
(declare-fun temp10258_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10258_92 () (_ BitVec 64))
(declare-fun temp10258_93 () (_ BitVec 64))
(declare-fun temp10258_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10258_95 () (_ BitVec 64))
(declare-fun temp10258_96 () (_ BitVec 64))
(declare-fun temp10258_97 () (_ BitVec 64))
(declare-fun temp10258_98 () (_ BitVec 64))
(declare-fun temp10258_99 () (_ BitVec 64))
(declare-fun temp10258_100 () (_ BitVec 64))
(declare-fun temp10258_101 () (_ BitVec 64))
(declare-fun temp10258_102 () (_ BitVec 64))
(declare-fun temp10258_103 () (_ BitVec 64))
(declare-fun temp10258_104 () (_ BitVec 64))
(declare-fun temp10258_105 () (_ BitVec 64))
(declare-fun temp10258_106 () (_ BitVec 64))
(declare-fun temp10258_107 () (_ BitVec 64))
(declare-fun temp10258_108 () (_ BitVec 64))
(declare-fun temp10258_109 () (_ BitVec 64))
(declare-fun temp10258_110 () (_ BitVec 64))
(declare-fun temp10258_111 () (_ BitVec 64))
(declare-fun temp10258_112 () (_ BitVec 64))
(declare-fun temp10258_113 () (_ BitVec 64))
(declare-fun temp10258_114 () (_ BitVec 64))
(declare-fun temp10258_115 () (_ BitVec 64))
(declare-fun temp10258_116 () (_ BitVec 64))
(declare-fun temp10258_117 () (_ BitVec 64))
(declare-fun temp10258_118 () (_ BitVec 64))
(declare-fun temp10258_119 () (_ BitVec 64))
(declare-fun temp10258_120 () (_ BitVec 64))
(declare-fun temp10258_121 () (_ BitVec 64))
(declare-fun temp10258_122 () (_ BitVec 64))
(declare-fun temp10258_123 () (_ BitVec 64))
(declare-fun temp10258_124 () (_ BitVec 64))
(declare-fun temp10258_125 () (_ BitVec 64))
(declare-fun temp10258_126 () (_ BitVec 64))
(declare-fun temp10258_127 () (_ BitVec 64))
(declare-fun temp10258_128 () (_ BitVec 64))
(declare-fun temp10258_129 () (_ BitVec 64))
(declare-fun temp10258_130 () (_ BitVec 64))
(declare-fun temp10258_131 () (_ BitVec 64))
(declare-fun temp10258_132 () (_ BitVec 64))
(declare-fun temp10258_133 () (_ BitVec 64))
(declare-fun temp10258_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10258_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10258_136 () (_ BitVec 64))
(declare-fun temp10258_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10258_138 () (_ BitVec 64))
(declare-fun temp10258_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10258_140 () (_ BitVec 64))
(declare-fun temp10258_141 () (_ BitVec 64))
(declare-fun temp10258_142 () (_ BitVec 64))
(declare-fun temp10258_143 () (_ BitVec 64))
(declare-fun temp10258_144 () (_ BitVec 64))
(declare-fun temp10258_145 () (_ BitVec 64))
(declare-fun temp10258_146 () (_ BitVec 64))
(declare-fun temp10258_147 () (_ BitVec 64))
(declare-fun temp10258_148 () (_ BitVec 64))
(declare-fun temp10258_149 () (_ BitVec 64))
(declare-fun temp10258_150 () (_ BitVec 64))
(declare-fun temp10258_151 () (_ BitVec 64))
(declare-fun temp10258_152 () (_ BitVec 64))
(declare-fun temp10258_153 () (_ BitVec 64))
(declare-fun temp10258_154 () (_ BitVec 64))
(declare-fun temp10258_155 () (_ BitVec 64))
(declare-fun temp10258_157 () (_ BitVec 64))
(declare-fun temp10258_158 () (_ BitVec 64))
(declare-fun temp10258_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10258_159 () (_ BitVec 64))
(declare-fun temp10258_160 () (_ BitVec 64))
(declare-fun temp10258_162 () (_ BitVec 64))
(declare-fun temp10258_163 () (_ BitVec 64))
(declare-fun temp10258_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10258_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10258_165 () (_ BitVec 64))
(declare-fun temp10258_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10258_167 () (_ BitVec 64))
(declare-fun temp10258_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10258_169 () (_ BitVec 64))
(declare-fun temp10258_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10258_171 () (_ BitVec 64))
(declare-fun temp10258_172 () (_ BitVec 64))
(declare-fun temp10258_173 () (_ BitVec 64))
(declare-fun temp10258_174 () (_ BitVec 64))
(declare-fun temp10258_175 () (_ BitVec 64))
(declare-fun temp10258_176 () (_ BitVec 64))
(declare-fun temp10258_177 () (_ BitVec 64))
(declare-fun temp10258_178 () (_ BitVec 64))
(declare-fun temp10258_179 () (_ BitVec 64))
(declare-fun temp10258_180 () (_ BitVec 64))
(declare-fun temp10258_181 () (_ BitVec 64))
(declare-fun temp10258_182 () (_ BitVec 64))
(declare-fun temp10258_183 () (_ BitVec 64))
(declare-fun temp10258_184 () (_ BitVec 64))
(declare-fun temp10258_185 () (_ BitVec 64))
(declare-fun temp10258_186 () (_ BitVec 64))
(declare-fun temp10258_187 () (_ BitVec 64))
(declare-fun temp10258_188 () (_ BitVec 64))
(declare-fun temp10258_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10258_190 () (_ BitVec 64))
(declare-fun temp10258_192 () (_ BitVec 64))
(declare-fun temp10258_193 () (_ BitVec 64))
(declare-fun temp10258_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10258_194 () (_ BitVec 64))
(declare-fun temp10258_195 () (_ BitVec 64))
(declare-fun temp10258_197 () (_ BitVec 64))
(declare-fun temp10258_198 () (_ BitVec 64))
(declare-fun temp10258_196 () (_ BitVec 64))
(declare-fun temp10258_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10258_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10258_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10258_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10258_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10258_204 () (_ BitVec 64))
(declare-fun temp10258_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10258_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10258_207 () (_ BitVec 64))
(declare-fun temp10258_208 () (_ BitVec 64))
(declare-fun temp10258_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10258_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10258_211 () (_ BitVec 64))
(declare-fun temp10258_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10258_213 () (_ BitVec 64))
(declare-fun temp10258_214 () (_ BitVec 64))
(declare-fun temp10258_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10258_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10258_217 () (_ BitVec 64))
(declare-fun temp10258_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10258_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10258_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10258_221 () (_ BitVec 64))
(assert (= temp10258_1 #x0000000000000001))
(assert (= var77203 temp10258_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10258_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10258_2)))
(assert (= temp10258_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10258_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10258_4 #x0000000000000000))
(assert (= var210941 temp10258_4))
(assert (= temp10258_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10258_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10258_6 #x0000000000000000))
(assert (= var210986 temp10258_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10258_7 #x0000000000000000))
(assert (= temp10258_8 temp10258_7))
(assert (= temp10258_9 (select ARGNAME_padding_NAMEEND_VAL temp10258_8)))
(assert (= temp10258_10 #x0000000000000001))
(assert (= temp10258_11 temp10258_10))
(assert (= temp10258_12 (select ARGNAME_padding_NAMEEND_VAL temp10258_11)))
(assert (= temp10258_13 #x0000000000000002))
(assert (= temp10258_14 temp10258_13))
(assert (= temp10258_15 (select ARGNAME_padding_NAMEEND_VAL temp10258_14)))
(assert (= temp10258_16 #x0000000000000003))
(assert (= temp10258_17 temp10258_16))
(assert (= temp10258_18 (select ARGNAME_padding_NAMEEND_VAL temp10258_17)))
(assert (= temp10258_19 #x0000000000000004))
(assert (= temp10258_20 temp10258_19))
(assert (= temp10258_21 (select ARGNAME_padding_NAMEEND_VAL temp10258_20)))
(assert (= temp10258_22 #x0000000000000005))
(assert (= temp10258_23 temp10258_22))
(assert (= temp10258_24 (select ARGNAME_padding_NAMEEND_VAL temp10258_23)))
(assert (= temp10258_25 #x0000000000000000))
(assert (= temp10258_26 #x0000000000000000))
(assert (= temp10258_27 temp10258_26))
(assert (= temp10258_28 (select ARGNAME_padding_NAMEEND_VAL temp10258_27)))
(assert (= temp10258_29 #x0000000000000000))
(assert (= temp10258_30 #x0000000000000001))
(assert (= temp10258_31 temp10258_30))
(assert (= temp10258_32 (select ARGNAME_padding_NAMEEND_VAL temp10258_31)))
(assert (= temp10258_33 #x0000000000000000))
(assert (= temp10258_34 #x0000000000000002))
(assert (= temp10258_35 temp10258_34))
(assert (= temp10258_36 (select ARGNAME_padding_NAMEEND_VAL temp10258_35)))
(assert (= temp10258_37 #x0000000000000000))
(assert (= temp10258_38 #x0000000000000003))
(assert (= temp10258_39 temp10258_38))
(assert (= temp10258_40 (select ARGNAME_padding_NAMEEND_VAL temp10258_39)))
(assert (= temp10258_41 #x0000000000000000))
(assert (= temp10258_42 #x0000000000000004))
(assert (= temp10258_43 temp10258_42))
(assert (= temp10258_44 (select ARGNAME_padding_NAMEEND_VAL temp10258_43)))
(assert (= temp10258_45 #x0000000000000000))
(assert (= temp10258_46 #x0000000000000005))
(assert (= temp10258_47 temp10258_46))
(assert (= temp10258_48 (select ARGNAME_padding_NAMEEND_VAL temp10258_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10258_28 temp10258_25)
             (bvslt temp10258_32 temp10258_29)
             (bvslt temp10258_36 temp10258_33)
             (bvslt temp10258_40 temp10258_37)
             (bvslt temp10258_44 temp10258_41)
             (bvslt temp10258_48 temp10258_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10258_49 #x0000000000000000))
(assert (= var1191714 temp10258_49))
(assert (= temp10258_50 #x0000000000000000))
(assert (= temp10258_51 temp10258_50))
(assert (= temp10258_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10258_51)))
(assert (= temp10258_53 #x0000000000000001))
(assert (= temp10258_54 temp10258_53))
(assert (= temp10258_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10258_54)))
(assert (= temp10258_56 #x0000000000000002))
(assert (= temp10258_57 temp10258_56))
(assert (= temp10258_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10258_57)))
(assert (= temp10258_59 #x0000000000000003))
(assert (= temp10258_60 temp10258_59))
(assert (= temp10258_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10258_60)))
(assert (= temp10258_62 #x0000000000000004))
(assert (= temp10258_63 temp10258_62))
(assert (= temp10258_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10258_63)))
(assert (= temp10258_65 #x0000000000000005))
(assert (= temp10258_66 temp10258_65))
(assert (= temp10258_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10258_66)))
(assert (= temp10258_68 #x0000000000000000))
(assert (= temp10258_69 #x0000000000000000))
(assert (= temp10258_70 temp10258_69))
(assert (= temp10258_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10258_70)))
(assert (= temp10258_72 #x0000000000000000))
(assert (= temp10258_73 #x0000000000000001))
(assert (= temp10258_74 temp10258_73))
(assert (= temp10258_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10258_74)))
(assert (= temp10258_76 #x0000000000000000))
(assert (= temp10258_77 #x0000000000000002))
(assert (= temp10258_78 temp10258_77))
(assert (= temp10258_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10258_78)))
(assert (= temp10258_80 #x0000000000000000))
(assert (= temp10258_81 #x0000000000000003))
(assert (= temp10258_82 temp10258_81))
(assert (= temp10258_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10258_82)))
(assert (= temp10258_84 #x0000000000000000))
(assert (= temp10258_85 #x0000000000000004))
(assert (= temp10258_86 temp10258_85))
(assert (= temp10258_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10258_86)))
(assert (= temp10258_88 #x0000000000000000))
(assert (= temp10258_89 #x0000000000000005))
(assert (= temp10258_90 temp10258_89))
(assert (= temp10258_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10258_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10258_71 temp10258_68)
             (bvslt temp10258_75 temp10258_72)
             (bvslt temp10258_79 temp10258_76)
             (bvslt temp10258_83 temp10258_80)
             (bvslt temp10258_87 temp10258_84)
             (bvslt temp10258_91 temp10258_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10258_92 #x0000000000000000))
(assert (= var1191725 temp10258_92))
(assert (= temp10258_93 #x0000000000000000))
(assert (= temp10258_94 temp10258_93))
(assert (= temp10258_95 (select ARGNAME_stride_NAMEEND_VAL temp10258_94)))
(assert (= temp10258_96 #x0000000000000001))
(assert (= temp10258_97 temp10258_96))
(assert (= temp10258_98 (select ARGNAME_stride_NAMEEND_VAL temp10258_97)))
(assert (= temp10258_99 #x0000000000000002))
(assert (= temp10258_100 temp10258_99))
(assert (= temp10258_101 (select ARGNAME_stride_NAMEEND_VAL temp10258_100)))
(assert (= temp10258_102 #x0000000000000003))
(assert (= temp10258_103 temp10258_102))
(assert (= temp10258_104 (select ARGNAME_stride_NAMEEND_VAL temp10258_103)))
(assert (= temp10258_105 #x0000000000000004))
(assert (= temp10258_106 temp10258_105))
(assert (= temp10258_107 (select ARGNAME_stride_NAMEEND_VAL temp10258_106)))
(assert (= temp10258_108 #x0000000000000005))
(assert (= temp10258_109 temp10258_108))
(assert (= temp10258_110 (select ARGNAME_stride_NAMEEND_VAL temp10258_109)))
(assert (= temp10258_111 #x0000000000000000))
(assert (= temp10258_112 #x0000000000000000))
(assert (= temp10258_113 temp10258_112))
(assert (= temp10258_114 (select ARGNAME_stride_NAMEEND_VAL temp10258_113)))
(assert (= temp10258_115 #x0000000000000000))
(assert (= temp10258_116 #x0000000000000001))
(assert (= temp10258_117 temp10258_116))
(assert (= temp10258_118 (select ARGNAME_stride_NAMEEND_VAL temp10258_117)))
(assert (= temp10258_119 #x0000000000000000))
(assert (= temp10258_120 #x0000000000000002))
(assert (= temp10258_121 temp10258_120))
(assert (= temp10258_122 (select ARGNAME_stride_NAMEEND_VAL temp10258_121)))
(assert (= temp10258_123 #x0000000000000000))
(assert (= temp10258_124 #x0000000000000003))
(assert (= temp10258_125 temp10258_124))
(assert (= temp10258_126 (select ARGNAME_stride_NAMEEND_VAL temp10258_125)))
(assert (= temp10258_127 #x0000000000000000))
(assert (= temp10258_128 #x0000000000000004))
(assert (= temp10258_129 temp10258_128))
(assert (= temp10258_130 (select ARGNAME_stride_NAMEEND_VAL temp10258_129)))
(assert (= temp10258_131 #x0000000000000000))
(assert (= temp10258_132 #x0000000000000005))
(assert (= temp10258_133 temp10258_132))
(assert (= temp10258_134 (select ARGNAME_stride_NAMEEND_VAL temp10258_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10258_114 temp10258_111)
             (bvsle temp10258_118 temp10258_115)
             (bvsle temp10258_122 temp10258_119)
             (bvsle temp10258_126 temp10258_123)
             (bvsle temp10258_130 temp10258_127)
             (bvsle temp10258_134 temp10258_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10258_135 #x0000000000000000))
(assert (= var1191735 temp10258_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10258_136 #x0000000000000001))
(assert (= var1191747 temp10258_136))
(assert (= temp10258_137 #x0000000000000000))
(assert (= var1179826 temp10258_137))
(assert (= temp10258_138 #x0000000000000000))
(assert (= temp10258_139 temp10258_138))
(assert (= temp10258_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10258_139)))
(assert (= temp10258_141 #x0000000000000001))
(assert (= temp10258_142 temp10258_141))
(assert (= temp10258_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10258_142)))
(assert (= temp10258_144 #x0000000000000002))
(assert (= temp10258_145 temp10258_144))
(assert (= temp10258_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10258_145)))
(assert (= temp10258_147 #x0000000000000003))
(assert (= temp10258_148 temp10258_147))
(assert (= temp10258_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10258_148)))
(assert (= temp10258_150 #x0000000000000004))
(assert (= temp10258_151 temp10258_150))
(assert (= temp10258_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10258_151)))
(assert (= temp10258_153 #x0000000000000005))
(assert (= temp10258_154 temp10258_153))
(assert (= temp10258_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10258_154)))
(assert (= temp10258_157 var1179826))
(assert (= temp10258_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10258_157)))
(assert (= temp10258_156 temp10258_158))
(assert (= var1191780
   (ite (bvslt temp10258_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10258_159 #x0000000000000000))
(assert (= var1191780 temp10258_159))
(assert (= temp10258_160 #x0000000000000000))
(assert (= var1179826 temp10258_160))
(assert (= temp10258_162 var1179826))
(assert (= temp10258_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10258_162)))
(assert (= temp10258_161 temp10258_163))
(assert (= var1191802 (bvsmod temp10258_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10258_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10258_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10258_165 #x0000000000000001))
(assert (= var1191803 temp10258_165))
(assert (= temp10258_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10258_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10258_167 #x0000000000000001))
(assert (= var1191823 temp10258_167))
(assert (= temp10258_168 #x0000000000000001))
(assert (= var1180714 temp10258_168))
(assert (= temp10258_169 #x0000000000000000))
(assert (= temp10258_170 temp10258_169))
(assert (= temp10258_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10258_170)))
(assert (= temp10258_172 #x0000000000000001))
(assert (= temp10258_173 temp10258_172))
(assert (= temp10258_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10258_173)))
(assert (= temp10258_175 #x0000000000000002))
(assert (= temp10258_176 temp10258_175))
(assert (= temp10258_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10258_176)))
(assert (= temp10258_178 #x0000000000000003))
(assert (= temp10258_179 temp10258_178))
(assert (= temp10258_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10258_179)))
(assert (= temp10258_181 #x0000000000000004))
(assert (= temp10258_182 temp10258_181))
(assert (= temp10258_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10258_182)))
(assert (= temp10258_184 #x0000000000000005))
(assert (= temp10258_185 temp10258_184))
(assert (= temp10258_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10258_185)))
(assert (= temp10258_187 #x0000000000000000))
(assert (= temp10258_188
   (ite (bvslt var1180714 temp10258_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10258_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10258_188)))
(assert (= var1191831 temp10258_189))
(assert (bvslt (ite (bvslt var1180714 temp10258_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10258_190 #x0000000000000001))
(assert (= var1180714 temp10258_190))
(assert (= temp10258_192 var1180714))
(assert (= temp10258_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10258_192)))
(assert (= temp10258_191 temp10258_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10258_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10258_194 #x0000000000000001))
(assert (= var1191836 temp10258_194))
(assert (= temp10258_195 #x0000000000000000))
(assert (= var1179826 temp10258_195))
(assert (= temp10258_197 var1179826))
(assert (= temp10258_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10258_197)))
(assert (= temp10258_196 temp10258_198))
(assert (= temp10258_199 #x0000000000000002))
(assert (= var1586025 temp10258_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10258_200 #x0000000000000001))
(assert (= var1191993 temp10258_200))
(assert (= temp10258_201 #x0000000000000001))
(assert (= var2700303 temp10258_201))
(assert (= temp10258_202 #x0000000000000001))
(assert (= var2962447 temp10258_202))
(assert (= temp10258_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10258_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10258_204 #x0000000000000001))
(assert (= var211058 temp10258_204))
(assert (= temp10258_205 #x0000000000000001))
(assert (= var211188 temp10258_205))
(assert (= var3879401 var211188))
(assert (= temp10258_206 #x0000000000000000))
(assert (= var3866802 temp10258_206))
(assert (= temp10258_207 #x0000000000000000))
(assert (= temp10258_208
   (ite (bvslt var3866802 temp10258_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10258_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10258_208)))
(assert (= var3879420 temp10258_209))
(assert (bvslt (ite (bvslt var3866802 temp10258_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10258_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10258_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10258_211 #x0000000000000000))
(assert (= var3879421 temp10258_211))
(assert (= temp10258_212 #x0000000000000001))
(assert (= var3867690 temp10258_212))
(assert (= temp10258_213 #x0000000000000000))
(assert (= temp10258_214
   (ite (bvslt var3867690 temp10258_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10258_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10258_214)))
(assert (= var3879423 temp10258_215))
(assert (bvslt (ite (bvslt var3867690 temp10258_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10258_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10258_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10258_217 #x0000000000000001))
(assert (= var3879424 temp10258_217))
(assert (= temp10258_218 #x0000000000000000))
(assert (= var4079423 temp10258_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10258_219 #x0000000000000002))
(assert (= var4208259 temp10258_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10258_220 #x0000000000000000))
(assert (= var4273820 temp10258_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10258_221 #x0000000000000001))
(assert (= var211058 temp10258_221))
(model-add temp10258_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10258_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10258_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10258_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



