(declare-fun temp10609_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10609_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10609_3 () (_ BitVec 64))
(declare-fun temp10609_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10609_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10609_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10609_7 () (_ BitVec 64))
(declare-fun temp10609_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10609_9 () (_ BitVec 64))
(declare-fun temp10609_10 () (_ BitVec 64))
(declare-fun temp10609_11 () (_ BitVec 64))
(declare-fun temp10609_12 () (_ BitVec 64))
(declare-fun temp10609_13 () (_ BitVec 64))
(declare-fun temp10609_14 () (_ BitVec 64))
(declare-fun temp10609_15 () (_ BitVec 64))
(declare-fun temp10609_16 () (_ BitVec 64))
(declare-fun temp10609_17 () (_ BitVec 64))
(declare-fun temp10609_18 () (_ BitVec 64))
(declare-fun temp10609_19 () (_ BitVec 64))
(declare-fun temp10609_20 () (_ BitVec 64))
(declare-fun temp10609_21 () (_ BitVec 64))
(declare-fun temp10609_22 () (_ BitVec 64))
(declare-fun temp10609_23 () (_ BitVec 64))
(declare-fun temp10609_24 () (_ BitVec 64))
(declare-fun temp10609_25 () (_ BitVec 64))
(declare-fun temp10609_26 () (_ BitVec 64))
(declare-fun temp10609_27 () (_ BitVec 64))
(declare-fun temp10609_28 () (_ BitVec 64))
(declare-fun temp10609_29 () (_ BitVec 64))
(declare-fun temp10609_30 () (_ BitVec 64))
(declare-fun temp10609_31 () (_ BitVec 64))
(declare-fun temp10609_32 () (_ BitVec 64))
(declare-fun temp10609_33 () (_ BitVec 64))
(declare-fun temp10609_34 () (_ BitVec 64))
(declare-fun temp10609_35 () (_ BitVec 64))
(declare-fun temp10609_36 () (_ BitVec 64))
(declare-fun temp10609_37 () (_ BitVec 64))
(declare-fun temp10609_38 () (_ BitVec 64))
(declare-fun temp10609_39 () (_ BitVec 64))
(declare-fun temp10609_40 () (_ BitVec 64))
(declare-fun temp10609_41 () (_ BitVec 64))
(declare-fun temp10609_42 () (_ BitVec 64))
(declare-fun temp10609_43 () (_ BitVec 64))
(declare-fun temp10609_44 () (_ BitVec 64))
(declare-fun temp10609_45 () (_ BitVec 64))
(declare-fun temp10609_46 () (_ BitVec 64))
(declare-fun temp10609_47 () (_ BitVec 64))
(declare-fun temp10609_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10609_49 () (_ BitVec 64))
(declare-fun temp10609_50 () (_ BitVec 64))
(declare-fun temp10609_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10609_52 () (_ BitVec 64))
(declare-fun temp10609_53 () (_ BitVec 64))
(declare-fun temp10609_54 () (_ BitVec 64))
(declare-fun temp10609_55 () (_ BitVec 64))
(declare-fun temp10609_56 () (_ BitVec 64))
(declare-fun temp10609_57 () (_ BitVec 64))
(declare-fun temp10609_58 () (_ BitVec 64))
(declare-fun temp10609_59 () (_ BitVec 64))
(declare-fun temp10609_60 () (_ BitVec 64))
(declare-fun temp10609_61 () (_ BitVec 64))
(declare-fun temp10609_62 () (_ BitVec 64))
(declare-fun temp10609_63 () (_ BitVec 64))
(declare-fun temp10609_64 () (_ BitVec 64))
(declare-fun temp10609_65 () (_ BitVec 64))
(declare-fun temp10609_66 () (_ BitVec 64))
(declare-fun temp10609_67 () (_ BitVec 64))
(declare-fun temp10609_68 () (_ BitVec 64))
(declare-fun temp10609_69 () (_ BitVec 64))
(declare-fun temp10609_70 () (_ BitVec 64))
(declare-fun temp10609_71 () (_ BitVec 64))
(declare-fun temp10609_72 () (_ BitVec 64))
(declare-fun temp10609_73 () (_ BitVec 64))
(declare-fun temp10609_74 () (_ BitVec 64))
(declare-fun temp10609_75 () (_ BitVec 64))
(declare-fun temp10609_76 () (_ BitVec 64))
(declare-fun temp10609_77 () (_ BitVec 64))
(declare-fun temp10609_78 () (_ BitVec 64))
(declare-fun temp10609_79 () (_ BitVec 64))
(declare-fun temp10609_80 () (_ BitVec 64))
(declare-fun temp10609_81 () (_ BitVec 64))
(declare-fun temp10609_82 () (_ BitVec 64))
(declare-fun temp10609_83 () (_ BitVec 64))
(declare-fun temp10609_84 () (_ BitVec 64))
(declare-fun temp10609_85 () (_ BitVec 64))
(declare-fun temp10609_86 () (_ BitVec 64))
(declare-fun temp10609_87 () (_ BitVec 64))
(declare-fun temp10609_88 () (_ BitVec 64))
(declare-fun temp10609_89 () (_ BitVec 64))
(declare-fun temp10609_90 () (_ BitVec 64))
(declare-fun temp10609_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10609_92 () (_ BitVec 64))
(declare-fun temp10609_93 () (_ BitVec 64))
(declare-fun temp10609_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10609_95 () (_ BitVec 64))
(declare-fun temp10609_96 () (_ BitVec 64))
(declare-fun temp10609_97 () (_ BitVec 64))
(declare-fun temp10609_98 () (_ BitVec 64))
(declare-fun temp10609_99 () (_ BitVec 64))
(declare-fun temp10609_100 () (_ BitVec 64))
(declare-fun temp10609_101 () (_ BitVec 64))
(declare-fun temp10609_102 () (_ BitVec 64))
(declare-fun temp10609_103 () (_ BitVec 64))
(declare-fun temp10609_104 () (_ BitVec 64))
(declare-fun temp10609_105 () (_ BitVec 64))
(declare-fun temp10609_106 () (_ BitVec 64))
(declare-fun temp10609_107 () (_ BitVec 64))
(declare-fun temp10609_108 () (_ BitVec 64))
(declare-fun temp10609_109 () (_ BitVec 64))
(declare-fun temp10609_110 () (_ BitVec 64))
(declare-fun temp10609_111 () (_ BitVec 64))
(declare-fun temp10609_112 () (_ BitVec 64))
(declare-fun temp10609_113 () (_ BitVec 64))
(declare-fun temp10609_114 () (_ BitVec 64))
(declare-fun temp10609_115 () (_ BitVec 64))
(declare-fun temp10609_116 () (_ BitVec 64))
(declare-fun temp10609_117 () (_ BitVec 64))
(declare-fun temp10609_118 () (_ BitVec 64))
(declare-fun temp10609_119 () (_ BitVec 64))
(declare-fun temp10609_120 () (_ BitVec 64))
(declare-fun temp10609_121 () (_ BitVec 64))
(declare-fun temp10609_122 () (_ BitVec 64))
(declare-fun temp10609_123 () (_ BitVec 64))
(declare-fun temp10609_124 () (_ BitVec 64))
(declare-fun temp10609_125 () (_ BitVec 64))
(declare-fun temp10609_126 () (_ BitVec 64))
(declare-fun temp10609_127 () (_ BitVec 64))
(declare-fun temp10609_128 () (_ BitVec 64))
(declare-fun temp10609_129 () (_ BitVec 64))
(declare-fun temp10609_130 () (_ BitVec 64))
(declare-fun temp10609_131 () (_ BitVec 64))
(declare-fun temp10609_132 () (_ BitVec 64))
(declare-fun temp10609_133 () (_ BitVec 64))
(declare-fun temp10609_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10609_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10609_136 () (_ BitVec 64))
(declare-fun temp10609_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10609_138 () (_ BitVec 64))
(declare-fun temp10609_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10609_140 () (_ BitVec 64))
(declare-fun temp10609_141 () (_ BitVec 64))
(declare-fun temp10609_142 () (_ BitVec 64))
(declare-fun temp10609_143 () (_ BitVec 64))
(declare-fun temp10609_144 () (_ BitVec 64))
(declare-fun temp10609_145 () (_ BitVec 64))
(declare-fun temp10609_146 () (_ BitVec 64))
(declare-fun temp10609_147 () (_ BitVec 64))
(declare-fun temp10609_148 () (_ BitVec 64))
(declare-fun temp10609_149 () (_ BitVec 64))
(declare-fun temp10609_150 () (_ BitVec 64))
(declare-fun temp10609_151 () (_ BitVec 64))
(declare-fun temp10609_152 () (_ BitVec 64))
(declare-fun temp10609_153 () (_ BitVec 64))
(declare-fun temp10609_154 () (_ BitVec 64))
(declare-fun temp10609_155 () (_ BitVec 64))
(declare-fun temp10609_157 () (_ BitVec 64))
(declare-fun temp10609_158 () (_ BitVec 64))
(declare-fun temp10609_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10609_159 () (_ BitVec 64))
(declare-fun temp10609_160 () (_ BitVec 64))
(declare-fun temp10609_162 () (_ BitVec 64))
(declare-fun temp10609_163 () (_ BitVec 64))
(declare-fun temp10609_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10609_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10609_165 () (_ BitVec 64))
(declare-fun temp10609_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10609_167 () (_ BitVec 64))
(declare-fun temp10609_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10609_169 () (_ BitVec 64))
(declare-fun temp10609_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10609_171 () (_ BitVec 64))
(declare-fun temp10609_172 () (_ BitVec 64))
(declare-fun temp10609_173 () (_ BitVec 64))
(declare-fun temp10609_174 () (_ BitVec 64))
(declare-fun temp10609_175 () (_ BitVec 64))
(declare-fun temp10609_176 () (_ BitVec 64))
(declare-fun temp10609_177 () (_ BitVec 64))
(declare-fun temp10609_178 () (_ BitVec 64))
(declare-fun temp10609_179 () (_ BitVec 64))
(declare-fun temp10609_180 () (_ BitVec 64))
(declare-fun temp10609_181 () (_ BitVec 64))
(declare-fun temp10609_182 () (_ BitVec 64))
(declare-fun temp10609_183 () (_ BitVec 64))
(declare-fun temp10609_184 () (_ BitVec 64))
(declare-fun temp10609_185 () (_ BitVec 64))
(declare-fun temp10609_186 () (_ BitVec 64))
(declare-fun temp10609_187 () (_ BitVec 64))
(declare-fun temp10609_188 () (_ BitVec 64))
(declare-fun temp10609_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10609_190 () (_ BitVec 64))
(declare-fun temp10609_192 () (_ BitVec 64))
(declare-fun temp10609_193 () (_ BitVec 64))
(declare-fun temp10609_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10609_194 () (_ BitVec 64))
(declare-fun temp10609_195 () (_ BitVec 64))
(declare-fun temp10609_197 () (_ BitVec 64))
(declare-fun temp10609_198 () (_ BitVec 64))
(declare-fun temp10609_196 () (_ BitVec 64))
(declare-fun temp10609_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10609_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10609_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10609_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10609_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10609_204 () (_ BitVec 64))
(declare-fun temp10609_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10609_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10609_207 () (_ BitVec 64))
(declare-fun temp10609_208 () (_ BitVec 64))
(declare-fun temp10609_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10609_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10609_211 () (_ BitVec 64))
(declare-fun temp10609_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10609_213 () (_ BitVec 64))
(declare-fun temp10609_214 () (_ BitVec 64))
(declare-fun temp10609_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10609_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10609_217 () (_ BitVec 64))
(declare-fun temp10609_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10609_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10609_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10609_222 () (_ BitVec 64))
(declare-fun temp10609_221 () (_ BitVec 64))
(declare-fun temp10609_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10609_224 () (_ BitVec 64))
(declare-fun temp10609_225 () (_ BitVec 64))
(declare-fun temp10609_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10609_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10609_228 () (_ BitVec 64))
(declare-fun temp10609_230 () (_ BitVec 64))
(declare-fun temp10609_229 () (_ BitVec 64))
(declare-fun temp10609_231 () (_ BitVec 64))
(assert (= temp10609_1 #x0000000000000001))
(assert (= var77203 temp10609_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10609_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10609_2)))
(assert (= temp10609_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10609_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10609_4 #x0000000000000000))
(assert (= var210941 temp10609_4))
(assert (= temp10609_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10609_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10609_6 #x0000000000000000))
(assert (= var210986 temp10609_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10609_7 #x0000000000000000))
(assert (= temp10609_8 temp10609_7))
(assert (= temp10609_9 (select ARGNAME_padding_NAMEEND_VAL temp10609_8)))
(assert (= temp10609_10 #x0000000000000001))
(assert (= temp10609_11 temp10609_10))
(assert (= temp10609_12 (select ARGNAME_padding_NAMEEND_VAL temp10609_11)))
(assert (= temp10609_13 #x0000000000000002))
(assert (= temp10609_14 temp10609_13))
(assert (= temp10609_15 (select ARGNAME_padding_NAMEEND_VAL temp10609_14)))
(assert (= temp10609_16 #x0000000000000003))
(assert (= temp10609_17 temp10609_16))
(assert (= temp10609_18 (select ARGNAME_padding_NAMEEND_VAL temp10609_17)))
(assert (= temp10609_19 #x0000000000000004))
(assert (= temp10609_20 temp10609_19))
(assert (= temp10609_21 (select ARGNAME_padding_NAMEEND_VAL temp10609_20)))
(assert (= temp10609_22 #x0000000000000005))
(assert (= temp10609_23 temp10609_22))
(assert (= temp10609_24 (select ARGNAME_padding_NAMEEND_VAL temp10609_23)))
(assert (= temp10609_25 #x0000000000000000))
(assert (= temp10609_26 #x0000000000000000))
(assert (= temp10609_27 temp10609_26))
(assert (= temp10609_28 (select ARGNAME_padding_NAMEEND_VAL temp10609_27)))
(assert (= temp10609_29 #x0000000000000000))
(assert (= temp10609_30 #x0000000000000001))
(assert (= temp10609_31 temp10609_30))
(assert (= temp10609_32 (select ARGNAME_padding_NAMEEND_VAL temp10609_31)))
(assert (= temp10609_33 #x0000000000000000))
(assert (= temp10609_34 #x0000000000000002))
(assert (= temp10609_35 temp10609_34))
(assert (= temp10609_36 (select ARGNAME_padding_NAMEEND_VAL temp10609_35)))
(assert (= temp10609_37 #x0000000000000000))
(assert (= temp10609_38 #x0000000000000003))
(assert (= temp10609_39 temp10609_38))
(assert (= temp10609_40 (select ARGNAME_padding_NAMEEND_VAL temp10609_39)))
(assert (= temp10609_41 #x0000000000000000))
(assert (= temp10609_42 #x0000000000000004))
(assert (= temp10609_43 temp10609_42))
(assert (= temp10609_44 (select ARGNAME_padding_NAMEEND_VAL temp10609_43)))
(assert (= temp10609_45 #x0000000000000000))
(assert (= temp10609_46 #x0000000000000005))
(assert (= temp10609_47 temp10609_46))
(assert (= temp10609_48 (select ARGNAME_padding_NAMEEND_VAL temp10609_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10609_28 temp10609_25)
             (bvslt temp10609_32 temp10609_29)
             (bvslt temp10609_36 temp10609_33)
             (bvslt temp10609_40 temp10609_37)
             (bvslt temp10609_44 temp10609_41)
             (bvslt temp10609_48 temp10609_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10609_49 #x0000000000000000))
(assert (= var1191714 temp10609_49))
(assert (= temp10609_50 #x0000000000000000))
(assert (= temp10609_51 temp10609_50))
(assert (= temp10609_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10609_51)))
(assert (= temp10609_53 #x0000000000000001))
(assert (= temp10609_54 temp10609_53))
(assert (= temp10609_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10609_54)))
(assert (= temp10609_56 #x0000000000000002))
(assert (= temp10609_57 temp10609_56))
(assert (= temp10609_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10609_57)))
(assert (= temp10609_59 #x0000000000000003))
(assert (= temp10609_60 temp10609_59))
(assert (= temp10609_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10609_60)))
(assert (= temp10609_62 #x0000000000000004))
(assert (= temp10609_63 temp10609_62))
(assert (= temp10609_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10609_63)))
(assert (= temp10609_65 #x0000000000000005))
(assert (= temp10609_66 temp10609_65))
(assert (= temp10609_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10609_66)))
(assert (= temp10609_68 #x0000000000000000))
(assert (= temp10609_69 #x0000000000000000))
(assert (= temp10609_70 temp10609_69))
(assert (= temp10609_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10609_70)))
(assert (= temp10609_72 #x0000000000000000))
(assert (= temp10609_73 #x0000000000000001))
(assert (= temp10609_74 temp10609_73))
(assert (= temp10609_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10609_74)))
(assert (= temp10609_76 #x0000000000000000))
(assert (= temp10609_77 #x0000000000000002))
(assert (= temp10609_78 temp10609_77))
(assert (= temp10609_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10609_78)))
(assert (= temp10609_80 #x0000000000000000))
(assert (= temp10609_81 #x0000000000000003))
(assert (= temp10609_82 temp10609_81))
(assert (= temp10609_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10609_82)))
(assert (= temp10609_84 #x0000000000000000))
(assert (= temp10609_85 #x0000000000000004))
(assert (= temp10609_86 temp10609_85))
(assert (= temp10609_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10609_86)))
(assert (= temp10609_88 #x0000000000000000))
(assert (= temp10609_89 #x0000000000000005))
(assert (= temp10609_90 temp10609_89))
(assert (= temp10609_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10609_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10609_71 temp10609_68)
             (bvslt temp10609_75 temp10609_72)
             (bvslt temp10609_79 temp10609_76)
             (bvslt temp10609_83 temp10609_80)
             (bvslt temp10609_87 temp10609_84)
             (bvslt temp10609_91 temp10609_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10609_92 #x0000000000000000))
(assert (= var1191725 temp10609_92))
(assert (= temp10609_93 #x0000000000000000))
(assert (= temp10609_94 temp10609_93))
(assert (= temp10609_95 (select ARGNAME_stride_NAMEEND_VAL temp10609_94)))
(assert (= temp10609_96 #x0000000000000001))
(assert (= temp10609_97 temp10609_96))
(assert (= temp10609_98 (select ARGNAME_stride_NAMEEND_VAL temp10609_97)))
(assert (= temp10609_99 #x0000000000000002))
(assert (= temp10609_100 temp10609_99))
(assert (= temp10609_101 (select ARGNAME_stride_NAMEEND_VAL temp10609_100)))
(assert (= temp10609_102 #x0000000000000003))
(assert (= temp10609_103 temp10609_102))
(assert (= temp10609_104 (select ARGNAME_stride_NAMEEND_VAL temp10609_103)))
(assert (= temp10609_105 #x0000000000000004))
(assert (= temp10609_106 temp10609_105))
(assert (= temp10609_107 (select ARGNAME_stride_NAMEEND_VAL temp10609_106)))
(assert (= temp10609_108 #x0000000000000005))
(assert (= temp10609_109 temp10609_108))
(assert (= temp10609_110 (select ARGNAME_stride_NAMEEND_VAL temp10609_109)))
(assert (= temp10609_111 #x0000000000000000))
(assert (= temp10609_112 #x0000000000000000))
(assert (= temp10609_113 temp10609_112))
(assert (= temp10609_114 (select ARGNAME_stride_NAMEEND_VAL temp10609_113)))
(assert (= temp10609_115 #x0000000000000000))
(assert (= temp10609_116 #x0000000000000001))
(assert (= temp10609_117 temp10609_116))
(assert (= temp10609_118 (select ARGNAME_stride_NAMEEND_VAL temp10609_117)))
(assert (= temp10609_119 #x0000000000000000))
(assert (= temp10609_120 #x0000000000000002))
(assert (= temp10609_121 temp10609_120))
(assert (= temp10609_122 (select ARGNAME_stride_NAMEEND_VAL temp10609_121)))
(assert (= temp10609_123 #x0000000000000000))
(assert (= temp10609_124 #x0000000000000003))
(assert (= temp10609_125 temp10609_124))
(assert (= temp10609_126 (select ARGNAME_stride_NAMEEND_VAL temp10609_125)))
(assert (= temp10609_127 #x0000000000000000))
(assert (= temp10609_128 #x0000000000000004))
(assert (= temp10609_129 temp10609_128))
(assert (= temp10609_130 (select ARGNAME_stride_NAMEEND_VAL temp10609_129)))
(assert (= temp10609_131 #x0000000000000000))
(assert (= temp10609_132 #x0000000000000005))
(assert (= temp10609_133 temp10609_132))
(assert (= temp10609_134 (select ARGNAME_stride_NAMEEND_VAL temp10609_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10609_114 temp10609_111)
             (bvsle temp10609_118 temp10609_115)
             (bvsle temp10609_122 temp10609_119)
             (bvsle temp10609_126 temp10609_123)
             (bvsle temp10609_130 temp10609_127)
             (bvsle temp10609_134 temp10609_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10609_135 #x0000000000000000))
(assert (= var1191735 temp10609_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10609_136 #x0000000000000001))
(assert (= var1191747 temp10609_136))
(assert (= temp10609_137 #x0000000000000000))
(assert (= var1179826 temp10609_137))
(assert (= temp10609_138 #x0000000000000000))
(assert (= temp10609_139 temp10609_138))
(assert (= temp10609_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10609_139)))
(assert (= temp10609_141 #x0000000000000001))
(assert (= temp10609_142 temp10609_141))
(assert (= temp10609_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10609_142)))
(assert (= temp10609_144 #x0000000000000002))
(assert (= temp10609_145 temp10609_144))
(assert (= temp10609_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10609_145)))
(assert (= temp10609_147 #x0000000000000003))
(assert (= temp10609_148 temp10609_147))
(assert (= temp10609_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10609_148)))
(assert (= temp10609_150 #x0000000000000004))
(assert (= temp10609_151 temp10609_150))
(assert (= temp10609_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10609_151)))
(assert (= temp10609_153 #x0000000000000005))
(assert (= temp10609_154 temp10609_153))
(assert (= temp10609_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10609_154)))
(assert (= temp10609_157 var1179826))
(assert (= temp10609_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10609_157)))
(assert (= temp10609_156 temp10609_158))
(assert (= var1191780
   (ite (bvslt temp10609_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10609_159 #x0000000000000000))
(assert (= var1191780 temp10609_159))
(assert (= temp10609_160 #x0000000000000000))
(assert (= var1179826 temp10609_160))
(assert (= temp10609_162 var1179826))
(assert (= temp10609_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10609_162)))
(assert (= temp10609_161 temp10609_163))
(assert (= var1191802 (bvsmod temp10609_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10609_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10609_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10609_165 #x0000000000000001))
(assert (= var1191803 temp10609_165))
(assert (= temp10609_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10609_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10609_167 #x0000000000000001))
(assert (= var1191823 temp10609_167))
(assert (= temp10609_168 #x0000000000000001))
(assert (= var1180714 temp10609_168))
(assert (= temp10609_169 #x0000000000000000))
(assert (= temp10609_170 temp10609_169))
(assert (= temp10609_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10609_170)))
(assert (= temp10609_172 #x0000000000000001))
(assert (= temp10609_173 temp10609_172))
(assert (= temp10609_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10609_173)))
(assert (= temp10609_175 #x0000000000000002))
(assert (= temp10609_176 temp10609_175))
(assert (= temp10609_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10609_176)))
(assert (= temp10609_178 #x0000000000000003))
(assert (= temp10609_179 temp10609_178))
(assert (= temp10609_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10609_179)))
(assert (= temp10609_181 #x0000000000000004))
(assert (= temp10609_182 temp10609_181))
(assert (= temp10609_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10609_182)))
(assert (= temp10609_184 #x0000000000000005))
(assert (= temp10609_185 temp10609_184))
(assert (= temp10609_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10609_185)))
(assert (= temp10609_187 #x0000000000000000))
(assert (= temp10609_188
   (ite (bvslt var1180714 temp10609_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10609_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10609_188)))
(assert (= var1191831 temp10609_189))
(assert (bvslt (ite (bvslt var1180714 temp10609_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10609_190 #x0000000000000001))
(assert (= var1180714 temp10609_190))
(assert (= temp10609_192 var1180714))
(assert (= temp10609_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10609_192)))
(assert (= temp10609_191 temp10609_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10609_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10609_194 #x0000000000000001))
(assert (= var1191836 temp10609_194))
(assert (= temp10609_195 #x0000000000000000))
(assert (= var1179826 temp10609_195))
(assert (= temp10609_197 var1179826))
(assert (= temp10609_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10609_197)))
(assert (= temp10609_196 temp10609_198))
(assert (= temp10609_199 #x0000000000000002))
(assert (= var1586025 temp10609_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10609_200 #x0000000000000001))
(assert (= var1191993 temp10609_200))
(assert (= temp10609_201 #x0000000000000001))
(assert (= var2700303 temp10609_201))
(assert (= temp10609_202 #x0000000000000001))
(assert (= var2962447 temp10609_202))
(assert (= temp10609_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10609_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10609_204 #x0000000000000001))
(assert (= var211058 temp10609_204))
(assert (= temp10609_205 #x0000000000000001))
(assert (= var211188 temp10609_205))
(assert (= var3879401 var211188))
(assert (= temp10609_206 #x0000000000000000))
(assert (= var3866802 temp10609_206))
(assert (= temp10609_207 #x0000000000000000))
(assert (= temp10609_208
   (ite (bvslt var3866802 temp10609_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10609_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10609_208)))
(assert (= var3879420 temp10609_209))
(assert (bvslt (ite (bvslt var3866802 temp10609_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10609_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10609_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10609_211 #x0000000000000000))
(assert (= var3879421 temp10609_211))
(assert (= temp10609_212 #x0000000000000001))
(assert (= var3867690 temp10609_212))
(assert (= temp10609_213 #x0000000000000000))
(assert (= temp10609_214
   (ite (bvslt var3867690 temp10609_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10609_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10609_214)))
(assert (= var3879423 temp10609_215))
(assert (bvslt (ite (bvslt var3867690 temp10609_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10609_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10609_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10609_217 #x0000000000000001))
(assert (= var3879424 temp10609_217))
(assert (= temp10609_218 #x0000000000000000))
(assert (= var4133117 temp10609_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10609_219 #x0000000000000002))
(assert (= var4339331 temp10609_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10609_220 #x0000000000000000))
(assert (= var4404892 temp10609_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10609_222 #xffffffffffffffff))
(assert (= temp10609_221 temp10609_222))
(assert (= temp10609_223 #x0000000000000001))
(assert (= var197674 temp10609_223))
(assert (= temp10609_224 #x0000000000000000))
(assert (= temp10609_225
   (ite (bvslt var197674 temp10609_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10609_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10609_225)))
(assert (= var211595 temp10609_226))
(assert (bvslt (ite (bvslt var197674 temp10609_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10609_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10609_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10609_228 #x0000000000000001))
(assert (= var211596 temp10609_228))
(assert (= temp10609_230 #xffffffffffffffff))
(assert (= temp10609_229 temp10609_230))
(assert (= temp10609_231 #x0000000000000001))
(assert (= var211058 temp10609_231))
(model-add temp10609_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10609_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10609_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10609_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






