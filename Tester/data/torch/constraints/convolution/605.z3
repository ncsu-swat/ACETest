(declare-fun temp806_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp806_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp806_3 () (_ BitVec 64))
(declare-fun temp806_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp806_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp806_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp806_7 () (_ BitVec 64))
(declare-fun temp806_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp806_9 () (_ BitVec 64))
(declare-fun temp806_10 () (_ BitVec 64))
(declare-fun temp806_11 () (_ BitVec 64))
(declare-fun temp806_12 () (_ BitVec 64))
(declare-fun temp806_13 () (_ BitVec 64))
(declare-fun temp806_14 () (_ BitVec 64))
(declare-fun temp806_15 () (_ BitVec 64))
(declare-fun temp806_16 () (_ BitVec 64))
(declare-fun temp806_17 () (_ BitVec 64))
(declare-fun temp806_18 () (_ BitVec 64))
(declare-fun temp806_19 () (_ BitVec 64))
(declare-fun temp806_20 () (_ BitVec 64))
(declare-fun temp806_21 () (_ BitVec 64))
(declare-fun temp806_22 () (_ BitVec 64))
(declare-fun temp806_23 () (_ BitVec 64))
(declare-fun temp806_24 () (_ BitVec 64))
(declare-fun temp806_25 () (_ BitVec 64))
(declare-fun temp806_26 () (_ BitVec 64))
(declare-fun temp806_27 () (_ BitVec 64))
(declare-fun temp806_28 () (_ BitVec 64))
(declare-fun temp806_29 () (_ BitVec 64))
(declare-fun temp806_30 () (_ BitVec 64))
(declare-fun temp806_31 () (_ BitVec 64))
(declare-fun temp806_32 () (_ BitVec 64))
(declare-fun temp806_33 () (_ BitVec 64))
(declare-fun temp806_34 () (_ BitVec 64))
(declare-fun temp806_35 () (_ BitVec 64))
(declare-fun temp806_36 () (_ BitVec 64))
(declare-fun temp806_37 () (_ BitVec 64))
(declare-fun temp806_38 () (_ BitVec 64))
(declare-fun temp806_39 () (_ BitVec 64))
(declare-fun temp806_40 () (_ BitVec 64))
(declare-fun temp806_41 () (_ BitVec 64))
(declare-fun temp806_42 () (_ BitVec 64))
(declare-fun temp806_43 () (_ BitVec 64))
(declare-fun temp806_44 () (_ BitVec 64))
(declare-fun temp806_45 () (_ BitVec 64))
(declare-fun temp806_46 () (_ BitVec 64))
(declare-fun temp806_47 () (_ BitVec 64))
(declare-fun temp806_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp806_49 () (_ BitVec 64))
(declare-fun temp806_50 () (_ BitVec 64))
(declare-fun temp806_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp806_52 () (_ BitVec 64))
(declare-fun temp806_53 () (_ BitVec 64))
(declare-fun temp806_54 () (_ BitVec 64))
(declare-fun temp806_55 () (_ BitVec 64))
(declare-fun temp806_56 () (_ BitVec 64))
(declare-fun temp806_57 () (_ BitVec 64))
(declare-fun temp806_58 () (_ BitVec 64))
(declare-fun temp806_59 () (_ BitVec 64))
(declare-fun temp806_60 () (_ BitVec 64))
(declare-fun temp806_61 () (_ BitVec 64))
(declare-fun temp806_62 () (_ BitVec 64))
(declare-fun temp806_63 () (_ BitVec 64))
(declare-fun temp806_64 () (_ BitVec 64))
(declare-fun temp806_65 () (_ BitVec 64))
(declare-fun temp806_66 () (_ BitVec 64))
(declare-fun temp806_67 () (_ BitVec 64))
(declare-fun temp806_68 () (_ BitVec 64))
(declare-fun temp806_69 () (_ BitVec 64))
(declare-fun temp806_70 () (_ BitVec 64))
(declare-fun temp806_71 () (_ BitVec 64))
(declare-fun temp806_72 () (_ BitVec 64))
(declare-fun temp806_73 () (_ BitVec 64))
(declare-fun temp806_74 () (_ BitVec 64))
(declare-fun temp806_75 () (_ BitVec 64))
(declare-fun temp806_76 () (_ BitVec 64))
(declare-fun temp806_77 () (_ BitVec 64))
(declare-fun temp806_78 () (_ BitVec 64))
(declare-fun temp806_79 () (_ BitVec 64))
(declare-fun temp806_80 () (_ BitVec 64))
(declare-fun temp806_81 () (_ BitVec 64))
(declare-fun temp806_82 () (_ BitVec 64))
(declare-fun temp806_83 () (_ BitVec 64))
(declare-fun temp806_84 () (_ BitVec 64))
(declare-fun temp806_85 () (_ BitVec 64))
(declare-fun temp806_86 () (_ BitVec 64))
(declare-fun temp806_87 () (_ BitVec 64))
(declare-fun temp806_88 () (_ BitVec 64))
(declare-fun temp806_89 () (_ BitVec 64))
(declare-fun temp806_90 () (_ BitVec 64))
(declare-fun temp806_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp806_92 () (_ BitVec 64))
(declare-fun temp806_93 () (_ BitVec 64))
(declare-fun temp806_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp806_95 () (_ BitVec 64))
(declare-fun temp806_96 () (_ BitVec 64))
(declare-fun temp806_97 () (_ BitVec 64))
(declare-fun temp806_98 () (_ BitVec 64))
(declare-fun temp806_99 () (_ BitVec 64))
(declare-fun temp806_100 () (_ BitVec 64))
(declare-fun temp806_101 () (_ BitVec 64))
(declare-fun temp806_102 () (_ BitVec 64))
(declare-fun temp806_103 () (_ BitVec 64))
(declare-fun temp806_104 () (_ BitVec 64))
(declare-fun temp806_105 () (_ BitVec 64))
(declare-fun temp806_106 () (_ BitVec 64))
(declare-fun temp806_107 () (_ BitVec 64))
(declare-fun temp806_108 () (_ BitVec 64))
(declare-fun temp806_109 () (_ BitVec 64))
(declare-fun temp806_110 () (_ BitVec 64))
(declare-fun temp806_111 () (_ BitVec 64))
(declare-fun temp806_112 () (_ BitVec 64))
(declare-fun temp806_113 () (_ BitVec 64))
(declare-fun temp806_114 () (_ BitVec 64))
(declare-fun temp806_115 () (_ BitVec 64))
(declare-fun temp806_116 () (_ BitVec 64))
(declare-fun temp806_117 () (_ BitVec 64))
(declare-fun temp806_118 () (_ BitVec 64))
(declare-fun temp806_119 () (_ BitVec 64))
(declare-fun temp806_120 () (_ BitVec 64))
(declare-fun temp806_121 () (_ BitVec 64))
(declare-fun temp806_122 () (_ BitVec 64))
(declare-fun temp806_123 () (_ BitVec 64))
(declare-fun temp806_124 () (_ BitVec 64))
(declare-fun temp806_125 () (_ BitVec 64))
(declare-fun temp806_126 () (_ BitVec 64))
(declare-fun temp806_127 () (_ BitVec 64))
(declare-fun temp806_128 () (_ BitVec 64))
(declare-fun temp806_129 () (_ BitVec 64))
(declare-fun temp806_130 () (_ BitVec 64))
(declare-fun temp806_131 () (_ BitVec 64))
(declare-fun temp806_132 () (_ BitVec 64))
(declare-fun temp806_133 () (_ BitVec 64))
(declare-fun temp806_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp806_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp806_136 () (_ BitVec 64))
(declare-fun temp806_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp806_138 () (_ BitVec 64))
(declare-fun temp806_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp806_140 () (_ BitVec 64))
(declare-fun temp806_141 () (_ BitVec 64))
(declare-fun temp806_142 () (_ BitVec 64))
(declare-fun temp806_143 () (_ BitVec 64))
(declare-fun temp806_144 () (_ BitVec 64))
(declare-fun temp806_145 () (_ BitVec 64))
(declare-fun temp806_146 () (_ BitVec 64))
(declare-fun temp806_147 () (_ BitVec 64))
(declare-fun temp806_148 () (_ BitVec 64))
(declare-fun temp806_149 () (_ BitVec 64))
(declare-fun temp806_150 () (_ BitVec 64))
(declare-fun temp806_151 () (_ BitVec 64))
(declare-fun temp806_152 () (_ BitVec 64))
(declare-fun temp806_153 () (_ BitVec 64))
(declare-fun temp806_154 () (_ BitVec 64))
(declare-fun temp806_155 () (_ BitVec 64))
(declare-fun temp806_157 () (_ BitVec 64))
(declare-fun temp806_158 () (_ BitVec 64))
(declare-fun temp806_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp806_159 () (_ BitVec 64))
(declare-fun temp806_160 () (_ BitVec 64))
(declare-fun temp806_162 () (_ BitVec 64))
(declare-fun temp806_163 () (_ BitVec 64))
(declare-fun temp806_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp806_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp806_165 () (_ BitVec 64))
(declare-fun temp806_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp806_167 () (_ BitVec 64))
(declare-fun temp806_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp806_169 () (_ BitVec 64))
(declare-fun temp806_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp806_171 () (_ BitVec 64))
(declare-fun temp806_172 () (_ BitVec 64))
(declare-fun temp806_173 () (_ BitVec 64))
(declare-fun temp806_174 () (_ BitVec 64))
(declare-fun temp806_175 () (_ BitVec 64))
(declare-fun temp806_176 () (_ BitVec 64))
(declare-fun temp806_177 () (_ BitVec 64))
(declare-fun temp806_178 () (_ BitVec 64))
(declare-fun temp806_179 () (_ BitVec 64))
(declare-fun temp806_180 () (_ BitVec 64))
(declare-fun temp806_181 () (_ BitVec 64))
(declare-fun temp806_182 () (_ BitVec 64))
(declare-fun temp806_183 () (_ BitVec 64))
(declare-fun temp806_184 () (_ BitVec 64))
(declare-fun temp806_185 () (_ BitVec 64))
(declare-fun temp806_186 () (_ BitVec 64))
(declare-fun temp806_187 () (_ BitVec 64))
(declare-fun temp806_188 () (_ BitVec 64))
(declare-fun temp806_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp806_190 () (_ BitVec 64))
(declare-fun temp806_192 () (_ BitVec 64))
(declare-fun temp806_193 () (_ BitVec 64))
(declare-fun temp806_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp806_194 () (_ BitVec 64))
(declare-fun temp806_195 () (_ BitVec 64))
(declare-fun temp806_197 () (_ BitVec 64))
(declare-fun temp806_198 () (_ BitVec 64))
(declare-fun temp806_196 () (_ BitVec 64))
(declare-fun temp806_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp806_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp806_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp806_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp806_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp806_204 () (_ BitVec 64))
(declare-fun temp806_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp806_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp806_207 () (_ BitVec 64))
(declare-fun temp806_208 () (_ BitVec 64))
(declare-fun temp806_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp806_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp806_211 () (_ BitVec 64))
(declare-fun temp806_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp806_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp806_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211820 () (_ BitVec 64))
(declare-fun temp806_215 () (_ BitVec 64))
(declare-fun var211821 () (_ BitVec 64))
(declare-fun temp806_216 () (_ BitVec 64))
(assert (= temp806_1 #x0000000000000001))
(assert (= var77203 temp806_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp806_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp806_2)))
(assert (= temp806_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp806_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp806_4 #x0000000000000000))
(assert (= var210941 temp806_4))
(assert (= temp806_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp806_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp806_6 #x0000000000000000))
(assert (= var210986 temp806_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp806_7 #x0000000000000000))
(assert (= temp806_8 temp806_7))
(assert (= temp806_9 (select ARGNAME_padding_NAMEEND_VAL temp806_8)))
(assert (= temp806_10 #x0000000000000001))
(assert (= temp806_11 temp806_10))
(assert (= temp806_12 (select ARGNAME_padding_NAMEEND_VAL temp806_11)))
(assert (= temp806_13 #x0000000000000002))
(assert (= temp806_14 temp806_13))
(assert (= temp806_15 (select ARGNAME_padding_NAMEEND_VAL temp806_14)))
(assert (= temp806_16 #x0000000000000003))
(assert (= temp806_17 temp806_16))
(assert (= temp806_18 (select ARGNAME_padding_NAMEEND_VAL temp806_17)))
(assert (= temp806_19 #x0000000000000004))
(assert (= temp806_20 temp806_19))
(assert (= temp806_21 (select ARGNAME_padding_NAMEEND_VAL temp806_20)))
(assert (= temp806_22 #x0000000000000005))
(assert (= temp806_23 temp806_22))
(assert (= temp806_24 (select ARGNAME_padding_NAMEEND_VAL temp806_23)))
(assert (= temp806_25 #x0000000000000000))
(assert (= temp806_26 #x0000000000000000))
(assert (= temp806_27 temp806_26))
(assert (= temp806_28 (select ARGNAME_padding_NAMEEND_VAL temp806_27)))
(assert (= temp806_29 #x0000000000000000))
(assert (= temp806_30 #x0000000000000001))
(assert (= temp806_31 temp806_30))
(assert (= temp806_32 (select ARGNAME_padding_NAMEEND_VAL temp806_31)))
(assert (= temp806_33 #x0000000000000000))
(assert (= temp806_34 #x0000000000000002))
(assert (= temp806_35 temp806_34))
(assert (= temp806_36 (select ARGNAME_padding_NAMEEND_VAL temp806_35)))
(assert (= temp806_37 #x0000000000000000))
(assert (= temp806_38 #x0000000000000003))
(assert (= temp806_39 temp806_38))
(assert (= temp806_40 (select ARGNAME_padding_NAMEEND_VAL temp806_39)))
(assert (= temp806_41 #x0000000000000000))
(assert (= temp806_42 #x0000000000000004))
(assert (= temp806_43 temp806_42))
(assert (= temp806_44 (select ARGNAME_padding_NAMEEND_VAL temp806_43)))
(assert (= temp806_45 #x0000000000000000))
(assert (= temp806_46 #x0000000000000005))
(assert (= temp806_47 temp806_46))
(assert (= temp806_48 (select ARGNAME_padding_NAMEEND_VAL temp806_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp806_28 temp806_25)
             (bvslt temp806_32 temp806_29)
             (bvslt temp806_36 temp806_33)
             (bvslt temp806_40 temp806_37)
             (bvslt temp806_44 temp806_41)
             (bvslt temp806_48 temp806_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp806_49 #x0000000000000000))
(assert (= var1191714 temp806_49))
(assert (= temp806_50 #x0000000000000000))
(assert (= temp806_51 temp806_50))
(assert (= temp806_52 (select ARGNAME_output_padding_NAMEEND_VAL temp806_51)))
(assert (= temp806_53 #x0000000000000001))
(assert (= temp806_54 temp806_53))
(assert (= temp806_55 (select ARGNAME_output_padding_NAMEEND_VAL temp806_54)))
(assert (= temp806_56 #x0000000000000002))
(assert (= temp806_57 temp806_56))
(assert (= temp806_58 (select ARGNAME_output_padding_NAMEEND_VAL temp806_57)))
(assert (= temp806_59 #x0000000000000003))
(assert (= temp806_60 temp806_59))
(assert (= temp806_61 (select ARGNAME_output_padding_NAMEEND_VAL temp806_60)))
(assert (= temp806_62 #x0000000000000004))
(assert (= temp806_63 temp806_62))
(assert (= temp806_64 (select ARGNAME_output_padding_NAMEEND_VAL temp806_63)))
(assert (= temp806_65 #x0000000000000005))
(assert (= temp806_66 temp806_65))
(assert (= temp806_67 (select ARGNAME_output_padding_NAMEEND_VAL temp806_66)))
(assert (= temp806_68 #x0000000000000000))
(assert (= temp806_69 #x0000000000000000))
(assert (= temp806_70 temp806_69))
(assert (= temp806_71 (select ARGNAME_output_padding_NAMEEND_VAL temp806_70)))
(assert (= temp806_72 #x0000000000000000))
(assert (= temp806_73 #x0000000000000001))
(assert (= temp806_74 temp806_73))
(assert (= temp806_75 (select ARGNAME_output_padding_NAMEEND_VAL temp806_74)))
(assert (= temp806_76 #x0000000000000000))
(assert (= temp806_77 #x0000000000000002))
(assert (= temp806_78 temp806_77))
(assert (= temp806_79 (select ARGNAME_output_padding_NAMEEND_VAL temp806_78)))
(assert (= temp806_80 #x0000000000000000))
(assert (= temp806_81 #x0000000000000003))
(assert (= temp806_82 temp806_81))
(assert (= temp806_83 (select ARGNAME_output_padding_NAMEEND_VAL temp806_82)))
(assert (= temp806_84 #x0000000000000000))
(assert (= temp806_85 #x0000000000000004))
(assert (= temp806_86 temp806_85))
(assert (= temp806_87 (select ARGNAME_output_padding_NAMEEND_VAL temp806_86)))
(assert (= temp806_88 #x0000000000000000))
(assert (= temp806_89 #x0000000000000005))
(assert (= temp806_90 temp806_89))
(assert (= temp806_91 (select ARGNAME_output_padding_NAMEEND_VAL temp806_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp806_71 temp806_68)
             (bvslt temp806_75 temp806_72)
             (bvslt temp806_79 temp806_76)
             (bvslt temp806_83 temp806_80)
             (bvslt temp806_87 temp806_84)
             (bvslt temp806_91 temp806_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp806_92 #x0000000000000000))
(assert (= var1191725 temp806_92))
(assert (= temp806_93 #x0000000000000000))
(assert (= temp806_94 temp806_93))
(assert (= temp806_95 (select ARGNAME_stride_NAMEEND_VAL temp806_94)))
(assert (= temp806_96 #x0000000000000001))
(assert (= temp806_97 temp806_96))
(assert (= temp806_98 (select ARGNAME_stride_NAMEEND_VAL temp806_97)))
(assert (= temp806_99 #x0000000000000002))
(assert (= temp806_100 temp806_99))
(assert (= temp806_101 (select ARGNAME_stride_NAMEEND_VAL temp806_100)))
(assert (= temp806_102 #x0000000000000003))
(assert (= temp806_103 temp806_102))
(assert (= temp806_104 (select ARGNAME_stride_NAMEEND_VAL temp806_103)))
(assert (= temp806_105 #x0000000000000004))
(assert (= temp806_106 temp806_105))
(assert (= temp806_107 (select ARGNAME_stride_NAMEEND_VAL temp806_106)))
(assert (= temp806_108 #x0000000000000005))
(assert (= temp806_109 temp806_108))
(assert (= temp806_110 (select ARGNAME_stride_NAMEEND_VAL temp806_109)))
(assert (= temp806_111 #x0000000000000000))
(assert (= temp806_112 #x0000000000000000))
(assert (= temp806_113 temp806_112))
(assert (= temp806_114 (select ARGNAME_stride_NAMEEND_VAL temp806_113)))
(assert (= temp806_115 #x0000000000000000))
(assert (= temp806_116 #x0000000000000001))
(assert (= temp806_117 temp806_116))
(assert (= temp806_118 (select ARGNAME_stride_NAMEEND_VAL temp806_117)))
(assert (= temp806_119 #x0000000000000000))
(assert (= temp806_120 #x0000000000000002))
(assert (= temp806_121 temp806_120))
(assert (= temp806_122 (select ARGNAME_stride_NAMEEND_VAL temp806_121)))
(assert (= temp806_123 #x0000000000000000))
(assert (= temp806_124 #x0000000000000003))
(assert (= temp806_125 temp806_124))
(assert (= temp806_126 (select ARGNAME_stride_NAMEEND_VAL temp806_125)))
(assert (= temp806_127 #x0000000000000000))
(assert (= temp806_128 #x0000000000000004))
(assert (= temp806_129 temp806_128))
(assert (= temp806_130 (select ARGNAME_stride_NAMEEND_VAL temp806_129)))
(assert (= temp806_131 #x0000000000000000))
(assert (= temp806_132 #x0000000000000005))
(assert (= temp806_133 temp806_132))
(assert (= temp806_134 (select ARGNAME_stride_NAMEEND_VAL temp806_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp806_114 temp806_111)
             (bvsle temp806_118 temp806_115)
             (bvsle temp806_122 temp806_119)
             (bvsle temp806_126 temp806_123)
             (bvsle temp806_130 temp806_127)
             (bvsle temp806_134 temp806_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp806_135 #x0000000000000000))
(assert (= var1191735 temp806_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp806_136 #x0000000000000001))
(assert (= var1191747 temp806_136))
(assert (= temp806_137 #x0000000000000000))
(assert (= var1179826 temp806_137))
(assert (= temp806_138 #x0000000000000000))
(assert (= temp806_139 temp806_138))
(assert (= temp806_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp806_139)))
(assert (= temp806_141 #x0000000000000001))
(assert (= temp806_142 temp806_141))
(assert (= temp806_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp806_142)))
(assert (= temp806_144 #x0000000000000002))
(assert (= temp806_145 temp806_144))
(assert (= temp806_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp806_145)))
(assert (= temp806_147 #x0000000000000003))
(assert (= temp806_148 temp806_147))
(assert (= temp806_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp806_148)))
(assert (= temp806_150 #x0000000000000004))
(assert (= temp806_151 temp806_150))
(assert (= temp806_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp806_151)))
(assert (= temp806_153 #x0000000000000005))
(assert (= temp806_154 temp806_153))
(assert (= temp806_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp806_154)))
(assert (= temp806_157 var1179826))
(assert (= temp806_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp806_157)))
(assert (= temp806_156 temp806_158))
(assert (= var1191780
   (ite (bvslt temp806_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp806_159 #x0000000000000000))
(assert (= var1191780 temp806_159))
(assert (= temp806_160 #x0000000000000000))
(assert (= var1179826 temp806_160))
(assert (= temp806_162 var1179826))
(assert (= temp806_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp806_162)))
(assert (= temp806_161 temp806_163))
(assert (= var1191802 (bvsmod temp806_161 ARGNAME_groups_NAMEEND)))
(assert (= temp806_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp806_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp806_165 #x0000000000000001))
(assert (= var1191803 temp806_165))
(assert (= temp806_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp806_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp806_167 #x0000000000000001))
(assert (= var1191823 temp806_167))
(assert (= temp806_168 #x0000000000000001))
(assert (= var1180714 temp806_168))
(assert (= temp806_169 #x0000000000000000))
(assert (= temp806_170 temp806_169))
(assert (= temp806_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp806_170)))
(assert (= temp806_172 #x0000000000000001))
(assert (= temp806_173 temp806_172))
(assert (= temp806_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp806_173)))
(assert (= temp806_175 #x0000000000000002))
(assert (= temp806_176 temp806_175))
(assert (= temp806_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp806_176)))
(assert (= temp806_178 #x0000000000000003))
(assert (= temp806_179 temp806_178))
(assert (= temp806_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp806_179)))
(assert (= temp806_181 #x0000000000000004))
(assert (= temp806_182 temp806_181))
(assert (= temp806_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp806_182)))
(assert (= temp806_184 #x0000000000000005))
(assert (= temp806_185 temp806_184))
(assert (= temp806_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp806_185)))
(assert (= temp806_187 #x0000000000000000))
(assert (= temp806_188
   (ite (bvslt var1180714 temp806_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp806_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp806_188)))
(assert (= var1191831 temp806_189))
(assert (bvslt (ite (bvslt var1180714 temp806_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp806_190 #x0000000000000001))
(assert (= var1180714 temp806_190))
(assert (= temp806_192 var1180714))
(assert (= temp806_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp806_192)))
(assert (= temp806_191 temp806_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp806_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp806_194 #x0000000000000001))
(assert (= var1191836 temp806_194))
(assert (= temp806_195 #x0000000000000000))
(assert (= var1179826 temp806_195))
(assert (= temp806_197 var1179826))
(assert (= temp806_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp806_197)))
(assert (= temp806_196 temp806_198))
(assert (= temp806_199 #x0000000000000002))
(assert (= var1586025 temp806_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp806_200 #x0000000000000001))
(assert (= var1191993 temp806_200))
(assert (= temp806_201 #x0000000000000001))
(assert (= var2700303 temp806_201))
(assert (= temp806_202 #x0000000000000001))
(assert (= var2962447 temp806_202))
(assert (= temp806_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp806_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp806_204 #x0000000000000001))
(assert (= var211058 temp806_204))
(assert (= temp806_205 #x0000000000000001))
(assert (= var211188 temp806_205))
(assert (= var3879401 var211188))
(assert (= temp806_206 #x0000000000000000))
(assert (= var3866802 temp806_206))
(assert (= temp806_207 #x0000000000000000))
(assert (= temp806_208
   (ite (bvslt var3866802 temp806_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp806_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp806_208)))
(assert (= var3879420 temp806_209))
(assert (bvslt (ite (bvslt var3866802 temp806_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp806_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp806_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp806_211 #x0000000000000001))
(assert (= var3879421 temp806_211))
(assert (= temp806_212 #x0000000000000000))
(assert (= var4079423 temp806_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp806_213 #x0000000000000002))
(assert (= var4208259 temp806_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp806_214 #x0000000000000000))
(assert (= var4273820 temp806_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211820 var210913))
(assert (= temp806_215 #x0000000000000000))
(assert (= var211821
   (ite (distinct var211820 temp806_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp806_216 #x0000000000000001))
(assert (= var211058 temp806_216))
(model-add temp806_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp806_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp806_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp806_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





