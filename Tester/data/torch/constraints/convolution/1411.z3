(declare-fun temp10612_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10612_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10612_3 () (_ BitVec 64))
(declare-fun temp10612_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10612_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10612_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10612_7 () (_ BitVec 64))
(declare-fun temp10612_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10612_9 () (_ BitVec 64))
(declare-fun temp10612_10 () (_ BitVec 64))
(declare-fun temp10612_11 () (_ BitVec 64))
(declare-fun temp10612_12 () (_ BitVec 64))
(declare-fun temp10612_13 () (_ BitVec 64))
(declare-fun temp10612_14 () (_ BitVec 64))
(declare-fun temp10612_15 () (_ BitVec 64))
(declare-fun temp10612_16 () (_ BitVec 64))
(declare-fun temp10612_17 () (_ BitVec 64))
(declare-fun temp10612_18 () (_ BitVec 64))
(declare-fun temp10612_19 () (_ BitVec 64))
(declare-fun temp10612_20 () (_ BitVec 64))
(declare-fun temp10612_21 () (_ BitVec 64))
(declare-fun temp10612_22 () (_ BitVec 64))
(declare-fun temp10612_23 () (_ BitVec 64))
(declare-fun temp10612_24 () (_ BitVec 64))
(declare-fun temp10612_25 () (_ BitVec 64))
(declare-fun temp10612_26 () (_ BitVec 64))
(declare-fun temp10612_27 () (_ BitVec 64))
(declare-fun temp10612_28 () (_ BitVec 64))
(declare-fun temp10612_29 () (_ BitVec 64))
(declare-fun temp10612_30 () (_ BitVec 64))
(declare-fun temp10612_31 () (_ BitVec 64))
(declare-fun temp10612_32 () (_ BitVec 64))
(declare-fun temp10612_33 () (_ BitVec 64))
(declare-fun temp10612_34 () (_ BitVec 64))
(declare-fun temp10612_35 () (_ BitVec 64))
(declare-fun temp10612_36 () (_ BitVec 64))
(declare-fun temp10612_37 () (_ BitVec 64))
(declare-fun temp10612_38 () (_ BitVec 64))
(declare-fun temp10612_39 () (_ BitVec 64))
(declare-fun temp10612_40 () (_ BitVec 64))
(declare-fun temp10612_41 () (_ BitVec 64))
(declare-fun temp10612_42 () (_ BitVec 64))
(declare-fun temp10612_43 () (_ BitVec 64))
(declare-fun temp10612_44 () (_ BitVec 64))
(declare-fun temp10612_45 () (_ BitVec 64))
(declare-fun temp10612_46 () (_ BitVec 64))
(declare-fun temp10612_47 () (_ BitVec 64))
(declare-fun temp10612_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10612_49 () (_ BitVec 64))
(declare-fun temp10612_50 () (_ BitVec 64))
(declare-fun temp10612_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10612_52 () (_ BitVec 64))
(declare-fun temp10612_53 () (_ BitVec 64))
(declare-fun temp10612_54 () (_ BitVec 64))
(declare-fun temp10612_55 () (_ BitVec 64))
(declare-fun temp10612_56 () (_ BitVec 64))
(declare-fun temp10612_57 () (_ BitVec 64))
(declare-fun temp10612_58 () (_ BitVec 64))
(declare-fun temp10612_59 () (_ BitVec 64))
(declare-fun temp10612_60 () (_ BitVec 64))
(declare-fun temp10612_61 () (_ BitVec 64))
(declare-fun temp10612_62 () (_ BitVec 64))
(declare-fun temp10612_63 () (_ BitVec 64))
(declare-fun temp10612_64 () (_ BitVec 64))
(declare-fun temp10612_65 () (_ BitVec 64))
(declare-fun temp10612_66 () (_ BitVec 64))
(declare-fun temp10612_67 () (_ BitVec 64))
(declare-fun temp10612_68 () (_ BitVec 64))
(declare-fun temp10612_69 () (_ BitVec 64))
(declare-fun temp10612_70 () (_ BitVec 64))
(declare-fun temp10612_71 () (_ BitVec 64))
(declare-fun temp10612_72 () (_ BitVec 64))
(declare-fun temp10612_73 () (_ BitVec 64))
(declare-fun temp10612_74 () (_ BitVec 64))
(declare-fun temp10612_75 () (_ BitVec 64))
(declare-fun temp10612_76 () (_ BitVec 64))
(declare-fun temp10612_77 () (_ BitVec 64))
(declare-fun temp10612_78 () (_ BitVec 64))
(declare-fun temp10612_79 () (_ BitVec 64))
(declare-fun temp10612_80 () (_ BitVec 64))
(declare-fun temp10612_81 () (_ BitVec 64))
(declare-fun temp10612_82 () (_ BitVec 64))
(declare-fun temp10612_83 () (_ BitVec 64))
(declare-fun temp10612_84 () (_ BitVec 64))
(declare-fun temp10612_85 () (_ BitVec 64))
(declare-fun temp10612_86 () (_ BitVec 64))
(declare-fun temp10612_87 () (_ BitVec 64))
(declare-fun temp10612_88 () (_ BitVec 64))
(declare-fun temp10612_89 () (_ BitVec 64))
(declare-fun temp10612_90 () (_ BitVec 64))
(declare-fun temp10612_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10612_92 () (_ BitVec 64))
(declare-fun temp10612_93 () (_ BitVec 64))
(declare-fun temp10612_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10612_95 () (_ BitVec 64))
(declare-fun temp10612_96 () (_ BitVec 64))
(declare-fun temp10612_97 () (_ BitVec 64))
(declare-fun temp10612_98 () (_ BitVec 64))
(declare-fun temp10612_99 () (_ BitVec 64))
(declare-fun temp10612_100 () (_ BitVec 64))
(declare-fun temp10612_101 () (_ BitVec 64))
(declare-fun temp10612_102 () (_ BitVec 64))
(declare-fun temp10612_103 () (_ BitVec 64))
(declare-fun temp10612_104 () (_ BitVec 64))
(declare-fun temp10612_105 () (_ BitVec 64))
(declare-fun temp10612_106 () (_ BitVec 64))
(declare-fun temp10612_107 () (_ BitVec 64))
(declare-fun temp10612_108 () (_ BitVec 64))
(declare-fun temp10612_109 () (_ BitVec 64))
(declare-fun temp10612_110 () (_ BitVec 64))
(declare-fun temp10612_111 () (_ BitVec 64))
(declare-fun temp10612_112 () (_ BitVec 64))
(declare-fun temp10612_113 () (_ BitVec 64))
(declare-fun temp10612_114 () (_ BitVec 64))
(declare-fun temp10612_115 () (_ BitVec 64))
(declare-fun temp10612_116 () (_ BitVec 64))
(declare-fun temp10612_117 () (_ BitVec 64))
(declare-fun temp10612_118 () (_ BitVec 64))
(declare-fun temp10612_119 () (_ BitVec 64))
(declare-fun temp10612_120 () (_ BitVec 64))
(declare-fun temp10612_121 () (_ BitVec 64))
(declare-fun temp10612_122 () (_ BitVec 64))
(declare-fun temp10612_123 () (_ BitVec 64))
(declare-fun temp10612_124 () (_ BitVec 64))
(declare-fun temp10612_125 () (_ BitVec 64))
(declare-fun temp10612_126 () (_ BitVec 64))
(declare-fun temp10612_127 () (_ BitVec 64))
(declare-fun temp10612_128 () (_ BitVec 64))
(declare-fun temp10612_129 () (_ BitVec 64))
(declare-fun temp10612_130 () (_ BitVec 64))
(declare-fun temp10612_131 () (_ BitVec 64))
(declare-fun temp10612_132 () (_ BitVec 64))
(declare-fun temp10612_133 () (_ BitVec 64))
(declare-fun temp10612_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10612_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10612_136 () (_ BitVec 64))
(declare-fun temp10612_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10612_138 () (_ BitVec 64))
(declare-fun temp10612_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10612_140 () (_ BitVec 64))
(declare-fun temp10612_141 () (_ BitVec 64))
(declare-fun temp10612_142 () (_ BitVec 64))
(declare-fun temp10612_143 () (_ BitVec 64))
(declare-fun temp10612_144 () (_ BitVec 64))
(declare-fun temp10612_145 () (_ BitVec 64))
(declare-fun temp10612_146 () (_ BitVec 64))
(declare-fun temp10612_147 () (_ BitVec 64))
(declare-fun temp10612_148 () (_ BitVec 64))
(declare-fun temp10612_149 () (_ BitVec 64))
(declare-fun temp10612_150 () (_ BitVec 64))
(declare-fun temp10612_151 () (_ BitVec 64))
(declare-fun temp10612_152 () (_ BitVec 64))
(declare-fun temp10612_153 () (_ BitVec 64))
(declare-fun temp10612_154 () (_ BitVec 64))
(declare-fun temp10612_155 () (_ BitVec 64))
(declare-fun temp10612_157 () (_ BitVec 64))
(declare-fun temp10612_158 () (_ BitVec 64))
(declare-fun temp10612_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10612_159 () (_ BitVec 64))
(declare-fun temp10612_160 () (_ BitVec 64))
(declare-fun temp10612_162 () (_ BitVec 64))
(declare-fun temp10612_163 () (_ BitVec 64))
(declare-fun temp10612_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10612_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10612_165 () (_ BitVec 64))
(declare-fun temp10612_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10612_167 () (_ BitVec 64))
(declare-fun temp10612_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10612_169 () (_ BitVec 64))
(declare-fun temp10612_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10612_171 () (_ BitVec 64))
(declare-fun temp10612_172 () (_ BitVec 64))
(declare-fun temp10612_173 () (_ BitVec 64))
(declare-fun temp10612_174 () (_ BitVec 64))
(declare-fun temp10612_175 () (_ BitVec 64))
(declare-fun temp10612_176 () (_ BitVec 64))
(declare-fun temp10612_177 () (_ BitVec 64))
(declare-fun temp10612_178 () (_ BitVec 64))
(declare-fun temp10612_179 () (_ BitVec 64))
(declare-fun temp10612_180 () (_ BitVec 64))
(declare-fun temp10612_181 () (_ BitVec 64))
(declare-fun temp10612_182 () (_ BitVec 64))
(declare-fun temp10612_183 () (_ BitVec 64))
(declare-fun temp10612_184 () (_ BitVec 64))
(declare-fun temp10612_185 () (_ BitVec 64))
(declare-fun temp10612_186 () (_ BitVec 64))
(declare-fun temp10612_187 () (_ BitVec 64))
(declare-fun temp10612_188 () (_ BitVec 64))
(declare-fun temp10612_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10612_190 () (_ BitVec 64))
(declare-fun temp10612_192 () (_ BitVec 64))
(declare-fun temp10612_193 () (_ BitVec 64))
(declare-fun temp10612_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10612_194 () (_ BitVec 64))
(declare-fun temp10612_195 () (_ BitVec 64))
(declare-fun temp10612_197 () (_ BitVec 64))
(declare-fun temp10612_198 () (_ BitVec 64))
(declare-fun temp10612_196 () (_ BitVec 64))
(declare-fun temp10612_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10612_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10612_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10612_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10612_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10612_204 () (_ BitVec 64))
(declare-fun temp10612_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10612_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10612_207 () (_ BitVec 64))
(declare-fun temp10612_208 () (_ BitVec 64))
(declare-fun temp10612_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10612_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10612_211 () (_ BitVec 64))
(declare-fun temp10612_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10612_213 () (_ BitVec 64))
(declare-fun temp10612_214 () (_ BitVec 64))
(declare-fun temp10612_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10612_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10612_217 () (_ BitVec 64))
(declare-fun temp10612_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10612_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10612_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10612_222 () (_ BitVec 64))
(declare-fun temp10612_221 () (_ BitVec 64))
(declare-fun temp10612_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10612_224 () (_ BitVec 64))
(declare-fun temp10612_225 () (_ BitVec 64))
(declare-fun temp10612_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10612_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10612_228 () (_ BitVec 64))
(declare-fun temp10612_230 () (_ BitVec 64))
(declare-fun temp10612_229 () (_ BitVec 64))
(declare-fun temp10612_231 () (_ BitVec 64))
(declare-fun temp10612_232 () (_ BitVec 64))
(declare-fun var5649172 () (_ BitVec 64))
(declare-fun var5649139 () (_ BitVec 64))
(declare-fun var5517703 () (_ BitVec 64))
(declare-fun var5517699 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10612_233 () (_ BitVec 64))
(assert (= temp10612_1 #x0000000000000001))
(assert (= var77203 temp10612_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10612_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10612_2)))
(assert (= temp10612_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10612_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10612_4 #x0000000000000000))
(assert (= var210941 temp10612_4))
(assert (= temp10612_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10612_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10612_6 #x0000000000000000))
(assert (= var210986 temp10612_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10612_7 #x0000000000000000))
(assert (= temp10612_8 temp10612_7))
(assert (= temp10612_9 (select ARGNAME_padding_NAMEEND_VAL temp10612_8)))
(assert (= temp10612_10 #x0000000000000001))
(assert (= temp10612_11 temp10612_10))
(assert (= temp10612_12 (select ARGNAME_padding_NAMEEND_VAL temp10612_11)))
(assert (= temp10612_13 #x0000000000000002))
(assert (= temp10612_14 temp10612_13))
(assert (= temp10612_15 (select ARGNAME_padding_NAMEEND_VAL temp10612_14)))
(assert (= temp10612_16 #x0000000000000003))
(assert (= temp10612_17 temp10612_16))
(assert (= temp10612_18 (select ARGNAME_padding_NAMEEND_VAL temp10612_17)))
(assert (= temp10612_19 #x0000000000000004))
(assert (= temp10612_20 temp10612_19))
(assert (= temp10612_21 (select ARGNAME_padding_NAMEEND_VAL temp10612_20)))
(assert (= temp10612_22 #x0000000000000005))
(assert (= temp10612_23 temp10612_22))
(assert (= temp10612_24 (select ARGNAME_padding_NAMEEND_VAL temp10612_23)))
(assert (= temp10612_25 #x0000000000000000))
(assert (= temp10612_26 #x0000000000000000))
(assert (= temp10612_27 temp10612_26))
(assert (= temp10612_28 (select ARGNAME_padding_NAMEEND_VAL temp10612_27)))
(assert (= temp10612_29 #x0000000000000000))
(assert (= temp10612_30 #x0000000000000001))
(assert (= temp10612_31 temp10612_30))
(assert (= temp10612_32 (select ARGNAME_padding_NAMEEND_VAL temp10612_31)))
(assert (= temp10612_33 #x0000000000000000))
(assert (= temp10612_34 #x0000000000000002))
(assert (= temp10612_35 temp10612_34))
(assert (= temp10612_36 (select ARGNAME_padding_NAMEEND_VAL temp10612_35)))
(assert (= temp10612_37 #x0000000000000000))
(assert (= temp10612_38 #x0000000000000003))
(assert (= temp10612_39 temp10612_38))
(assert (= temp10612_40 (select ARGNAME_padding_NAMEEND_VAL temp10612_39)))
(assert (= temp10612_41 #x0000000000000000))
(assert (= temp10612_42 #x0000000000000004))
(assert (= temp10612_43 temp10612_42))
(assert (= temp10612_44 (select ARGNAME_padding_NAMEEND_VAL temp10612_43)))
(assert (= temp10612_45 #x0000000000000000))
(assert (= temp10612_46 #x0000000000000005))
(assert (= temp10612_47 temp10612_46))
(assert (= temp10612_48 (select ARGNAME_padding_NAMEEND_VAL temp10612_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10612_28 temp10612_25)
             (bvslt temp10612_32 temp10612_29)
             (bvslt temp10612_36 temp10612_33)
             (bvslt temp10612_40 temp10612_37)
             (bvslt temp10612_44 temp10612_41)
             (bvslt temp10612_48 temp10612_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10612_49 #x0000000000000000))
(assert (= var1191714 temp10612_49))
(assert (= temp10612_50 #x0000000000000000))
(assert (= temp10612_51 temp10612_50))
(assert (= temp10612_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10612_51)))
(assert (= temp10612_53 #x0000000000000001))
(assert (= temp10612_54 temp10612_53))
(assert (= temp10612_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10612_54)))
(assert (= temp10612_56 #x0000000000000002))
(assert (= temp10612_57 temp10612_56))
(assert (= temp10612_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10612_57)))
(assert (= temp10612_59 #x0000000000000003))
(assert (= temp10612_60 temp10612_59))
(assert (= temp10612_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10612_60)))
(assert (= temp10612_62 #x0000000000000004))
(assert (= temp10612_63 temp10612_62))
(assert (= temp10612_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10612_63)))
(assert (= temp10612_65 #x0000000000000005))
(assert (= temp10612_66 temp10612_65))
(assert (= temp10612_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10612_66)))
(assert (= temp10612_68 #x0000000000000000))
(assert (= temp10612_69 #x0000000000000000))
(assert (= temp10612_70 temp10612_69))
(assert (= temp10612_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10612_70)))
(assert (= temp10612_72 #x0000000000000000))
(assert (= temp10612_73 #x0000000000000001))
(assert (= temp10612_74 temp10612_73))
(assert (= temp10612_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10612_74)))
(assert (= temp10612_76 #x0000000000000000))
(assert (= temp10612_77 #x0000000000000002))
(assert (= temp10612_78 temp10612_77))
(assert (= temp10612_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10612_78)))
(assert (= temp10612_80 #x0000000000000000))
(assert (= temp10612_81 #x0000000000000003))
(assert (= temp10612_82 temp10612_81))
(assert (= temp10612_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10612_82)))
(assert (= temp10612_84 #x0000000000000000))
(assert (= temp10612_85 #x0000000000000004))
(assert (= temp10612_86 temp10612_85))
(assert (= temp10612_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10612_86)))
(assert (= temp10612_88 #x0000000000000000))
(assert (= temp10612_89 #x0000000000000005))
(assert (= temp10612_90 temp10612_89))
(assert (= temp10612_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10612_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10612_71 temp10612_68)
             (bvslt temp10612_75 temp10612_72)
             (bvslt temp10612_79 temp10612_76)
             (bvslt temp10612_83 temp10612_80)
             (bvslt temp10612_87 temp10612_84)
             (bvslt temp10612_91 temp10612_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10612_92 #x0000000000000000))
(assert (= var1191725 temp10612_92))
(assert (= temp10612_93 #x0000000000000000))
(assert (= temp10612_94 temp10612_93))
(assert (= temp10612_95 (select ARGNAME_stride_NAMEEND_VAL temp10612_94)))
(assert (= temp10612_96 #x0000000000000001))
(assert (= temp10612_97 temp10612_96))
(assert (= temp10612_98 (select ARGNAME_stride_NAMEEND_VAL temp10612_97)))
(assert (= temp10612_99 #x0000000000000002))
(assert (= temp10612_100 temp10612_99))
(assert (= temp10612_101 (select ARGNAME_stride_NAMEEND_VAL temp10612_100)))
(assert (= temp10612_102 #x0000000000000003))
(assert (= temp10612_103 temp10612_102))
(assert (= temp10612_104 (select ARGNAME_stride_NAMEEND_VAL temp10612_103)))
(assert (= temp10612_105 #x0000000000000004))
(assert (= temp10612_106 temp10612_105))
(assert (= temp10612_107 (select ARGNAME_stride_NAMEEND_VAL temp10612_106)))
(assert (= temp10612_108 #x0000000000000005))
(assert (= temp10612_109 temp10612_108))
(assert (= temp10612_110 (select ARGNAME_stride_NAMEEND_VAL temp10612_109)))
(assert (= temp10612_111 #x0000000000000000))
(assert (= temp10612_112 #x0000000000000000))
(assert (= temp10612_113 temp10612_112))
(assert (= temp10612_114 (select ARGNAME_stride_NAMEEND_VAL temp10612_113)))
(assert (= temp10612_115 #x0000000000000000))
(assert (= temp10612_116 #x0000000000000001))
(assert (= temp10612_117 temp10612_116))
(assert (= temp10612_118 (select ARGNAME_stride_NAMEEND_VAL temp10612_117)))
(assert (= temp10612_119 #x0000000000000000))
(assert (= temp10612_120 #x0000000000000002))
(assert (= temp10612_121 temp10612_120))
(assert (= temp10612_122 (select ARGNAME_stride_NAMEEND_VAL temp10612_121)))
(assert (= temp10612_123 #x0000000000000000))
(assert (= temp10612_124 #x0000000000000003))
(assert (= temp10612_125 temp10612_124))
(assert (= temp10612_126 (select ARGNAME_stride_NAMEEND_VAL temp10612_125)))
(assert (= temp10612_127 #x0000000000000000))
(assert (= temp10612_128 #x0000000000000004))
(assert (= temp10612_129 temp10612_128))
(assert (= temp10612_130 (select ARGNAME_stride_NAMEEND_VAL temp10612_129)))
(assert (= temp10612_131 #x0000000000000000))
(assert (= temp10612_132 #x0000000000000005))
(assert (= temp10612_133 temp10612_132))
(assert (= temp10612_134 (select ARGNAME_stride_NAMEEND_VAL temp10612_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10612_114 temp10612_111)
             (bvsle temp10612_118 temp10612_115)
             (bvsle temp10612_122 temp10612_119)
             (bvsle temp10612_126 temp10612_123)
             (bvsle temp10612_130 temp10612_127)
             (bvsle temp10612_134 temp10612_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10612_135 #x0000000000000000))
(assert (= var1191735 temp10612_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10612_136 #x0000000000000001))
(assert (= var1191747 temp10612_136))
(assert (= temp10612_137 #x0000000000000000))
(assert (= var1179826 temp10612_137))
(assert (= temp10612_138 #x0000000000000000))
(assert (= temp10612_139 temp10612_138))
(assert (= temp10612_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10612_139)))
(assert (= temp10612_141 #x0000000000000001))
(assert (= temp10612_142 temp10612_141))
(assert (= temp10612_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10612_142)))
(assert (= temp10612_144 #x0000000000000002))
(assert (= temp10612_145 temp10612_144))
(assert (= temp10612_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10612_145)))
(assert (= temp10612_147 #x0000000000000003))
(assert (= temp10612_148 temp10612_147))
(assert (= temp10612_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10612_148)))
(assert (= temp10612_150 #x0000000000000004))
(assert (= temp10612_151 temp10612_150))
(assert (= temp10612_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10612_151)))
(assert (= temp10612_153 #x0000000000000005))
(assert (= temp10612_154 temp10612_153))
(assert (= temp10612_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10612_154)))
(assert (= temp10612_157 var1179826))
(assert (= temp10612_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10612_157)))
(assert (= temp10612_156 temp10612_158))
(assert (= var1191780
   (ite (bvslt temp10612_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10612_159 #x0000000000000000))
(assert (= var1191780 temp10612_159))
(assert (= temp10612_160 #x0000000000000000))
(assert (= var1179826 temp10612_160))
(assert (= temp10612_162 var1179826))
(assert (= temp10612_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10612_162)))
(assert (= temp10612_161 temp10612_163))
(assert (= var1191802 (bvsmod temp10612_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10612_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10612_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10612_165 #x0000000000000001))
(assert (= var1191803 temp10612_165))
(assert (= temp10612_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10612_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10612_167 #x0000000000000001))
(assert (= var1191823 temp10612_167))
(assert (= temp10612_168 #x0000000000000001))
(assert (= var1180714 temp10612_168))
(assert (= temp10612_169 #x0000000000000000))
(assert (= temp10612_170 temp10612_169))
(assert (= temp10612_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10612_170)))
(assert (= temp10612_172 #x0000000000000001))
(assert (= temp10612_173 temp10612_172))
(assert (= temp10612_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10612_173)))
(assert (= temp10612_175 #x0000000000000002))
(assert (= temp10612_176 temp10612_175))
(assert (= temp10612_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10612_176)))
(assert (= temp10612_178 #x0000000000000003))
(assert (= temp10612_179 temp10612_178))
(assert (= temp10612_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10612_179)))
(assert (= temp10612_181 #x0000000000000004))
(assert (= temp10612_182 temp10612_181))
(assert (= temp10612_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10612_182)))
(assert (= temp10612_184 #x0000000000000005))
(assert (= temp10612_185 temp10612_184))
(assert (= temp10612_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10612_185)))
(assert (= temp10612_187 #x0000000000000000))
(assert (= temp10612_188
   (ite (bvslt var1180714 temp10612_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10612_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10612_188)))
(assert (= var1191831 temp10612_189))
(assert (bvslt (ite (bvslt var1180714 temp10612_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10612_190 #x0000000000000001))
(assert (= var1180714 temp10612_190))
(assert (= temp10612_192 var1180714))
(assert (= temp10612_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10612_192)))
(assert (= temp10612_191 temp10612_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10612_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10612_194 #x0000000000000001))
(assert (= var1191836 temp10612_194))
(assert (= temp10612_195 #x0000000000000000))
(assert (= var1179826 temp10612_195))
(assert (= temp10612_197 var1179826))
(assert (= temp10612_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10612_197)))
(assert (= temp10612_196 temp10612_198))
(assert (= temp10612_199 #x0000000000000002))
(assert (= var1586025 temp10612_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10612_200 #x0000000000000001))
(assert (= var1191993 temp10612_200))
(assert (= temp10612_201 #x0000000000000001))
(assert (= var2700303 temp10612_201))
(assert (= temp10612_202 #x0000000000000001))
(assert (= var2962447 temp10612_202))
(assert (= temp10612_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10612_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10612_204 #x0000000000000001))
(assert (= var211058 temp10612_204))
(assert (= temp10612_205 #x0000000000000001))
(assert (= var211188 temp10612_205))
(assert (= var3879401 var211188))
(assert (= temp10612_206 #x0000000000000000))
(assert (= var3866802 temp10612_206))
(assert (= temp10612_207 #x0000000000000000))
(assert (= temp10612_208
   (ite (bvslt var3866802 temp10612_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10612_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10612_208)))
(assert (= var3879420 temp10612_209))
(assert (bvslt (ite (bvslt var3866802 temp10612_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10612_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10612_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10612_211 #x0000000000000000))
(assert (= var3879421 temp10612_211))
(assert (= temp10612_212 #x0000000000000001))
(assert (= var3867690 temp10612_212))
(assert (= temp10612_213 #x0000000000000000))
(assert (= temp10612_214
   (ite (bvslt var3867690 temp10612_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10612_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10612_214)))
(assert (= var3879423 temp10612_215))
(assert (bvslt (ite (bvslt var3867690 temp10612_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10612_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10612_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10612_217 #x0000000000000001))
(assert (= var3879424 temp10612_217))
(assert (= temp10612_218 #x0000000000000000))
(assert (= var4133117 temp10612_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10612_219 #x0000000000000002))
(assert (= var4339331 temp10612_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10612_220 #x0000000000000000))
(assert (= var4404892 temp10612_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10612_222 #xffffffffffffffff))
(assert (= temp10612_221 temp10612_222))
(assert (= temp10612_223 #x0000000000000001))
(assert (= var197674 temp10612_223))
(assert (= temp10612_224 #x0000000000000000))
(assert (= temp10612_225
   (ite (bvslt var197674 temp10612_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10612_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10612_225)))
(assert (= var211595 temp10612_226))
(assert (bvslt (ite (bvslt var197674 temp10612_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10612_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10612_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10612_228 #x0000000000000001))
(assert (= var211596 temp10612_228))
(assert (= temp10612_230 #xffffffffffffffff))
(assert (= temp10612_229 temp10612_230))
(assert (= temp10612_231 #x0000000000000001))
(assert (= var211058 temp10612_231))
(assert (= temp10612_232 #x0000000000000000))
(assert (= var5649172 temp10612_232))
(assert (= var5649139 var5649172))
(assert (= var5517703 var5649139))
(assert (= var5517699 var5517703))
(assert (= var212669 var5517699))
(assert (= temp10612_233 #x0000000000000000))
(assert (= var212669 temp10612_233))
(model-add temp10612_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10612_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10612_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10612_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




