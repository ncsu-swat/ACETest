(declare-fun temp11021_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11021_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11021_3 () (_ BitVec 64))
(declare-fun temp11021_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11021_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11021_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11021_7 () (_ BitVec 64))
(declare-fun temp11021_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11021_9 () (_ BitVec 64))
(declare-fun temp11021_10 () (_ BitVec 64))
(declare-fun temp11021_11 () (_ BitVec 64))
(declare-fun temp11021_12 () (_ BitVec 64))
(declare-fun temp11021_13 () (_ BitVec 64))
(declare-fun temp11021_14 () (_ BitVec 64))
(declare-fun temp11021_15 () (_ BitVec 64))
(declare-fun temp11021_16 () (_ BitVec 64))
(declare-fun temp11021_17 () (_ BitVec 64))
(declare-fun temp11021_18 () (_ BitVec 64))
(declare-fun temp11021_19 () (_ BitVec 64))
(declare-fun temp11021_20 () (_ BitVec 64))
(declare-fun temp11021_21 () (_ BitVec 64))
(declare-fun temp11021_22 () (_ BitVec 64))
(declare-fun temp11021_23 () (_ BitVec 64))
(declare-fun temp11021_24 () (_ BitVec 64))
(declare-fun temp11021_25 () (_ BitVec 64))
(declare-fun temp11021_26 () (_ BitVec 64))
(declare-fun temp11021_27 () (_ BitVec 64))
(declare-fun temp11021_28 () (_ BitVec 64))
(declare-fun temp11021_29 () (_ BitVec 64))
(declare-fun temp11021_30 () (_ BitVec 64))
(declare-fun temp11021_31 () (_ BitVec 64))
(declare-fun temp11021_32 () (_ BitVec 64))
(declare-fun temp11021_33 () (_ BitVec 64))
(declare-fun temp11021_34 () (_ BitVec 64))
(declare-fun temp11021_35 () (_ BitVec 64))
(declare-fun temp11021_36 () (_ BitVec 64))
(declare-fun temp11021_37 () (_ BitVec 64))
(declare-fun temp11021_38 () (_ BitVec 64))
(declare-fun temp11021_39 () (_ BitVec 64))
(declare-fun temp11021_40 () (_ BitVec 64))
(declare-fun temp11021_41 () (_ BitVec 64))
(declare-fun temp11021_42 () (_ BitVec 64))
(declare-fun temp11021_43 () (_ BitVec 64))
(declare-fun temp11021_44 () (_ BitVec 64))
(declare-fun temp11021_45 () (_ BitVec 64))
(declare-fun temp11021_46 () (_ BitVec 64))
(declare-fun temp11021_47 () (_ BitVec 64))
(declare-fun temp11021_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11021_49 () (_ BitVec 64))
(declare-fun temp11021_50 () (_ BitVec 64))
(declare-fun temp11021_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11021_52 () (_ BitVec 64))
(declare-fun temp11021_53 () (_ BitVec 64))
(declare-fun temp11021_54 () (_ BitVec 64))
(declare-fun temp11021_55 () (_ BitVec 64))
(declare-fun temp11021_56 () (_ BitVec 64))
(declare-fun temp11021_57 () (_ BitVec 64))
(declare-fun temp11021_58 () (_ BitVec 64))
(declare-fun temp11021_59 () (_ BitVec 64))
(declare-fun temp11021_60 () (_ BitVec 64))
(declare-fun temp11021_61 () (_ BitVec 64))
(declare-fun temp11021_62 () (_ BitVec 64))
(declare-fun temp11021_63 () (_ BitVec 64))
(declare-fun temp11021_64 () (_ BitVec 64))
(declare-fun temp11021_65 () (_ BitVec 64))
(declare-fun temp11021_66 () (_ BitVec 64))
(declare-fun temp11021_67 () (_ BitVec 64))
(declare-fun temp11021_68 () (_ BitVec 64))
(declare-fun temp11021_69 () (_ BitVec 64))
(declare-fun temp11021_70 () (_ BitVec 64))
(declare-fun temp11021_71 () (_ BitVec 64))
(declare-fun temp11021_72 () (_ BitVec 64))
(declare-fun temp11021_73 () (_ BitVec 64))
(declare-fun temp11021_74 () (_ BitVec 64))
(declare-fun temp11021_75 () (_ BitVec 64))
(declare-fun temp11021_76 () (_ BitVec 64))
(declare-fun temp11021_77 () (_ BitVec 64))
(declare-fun temp11021_78 () (_ BitVec 64))
(declare-fun temp11021_79 () (_ BitVec 64))
(declare-fun temp11021_80 () (_ BitVec 64))
(declare-fun temp11021_81 () (_ BitVec 64))
(declare-fun temp11021_82 () (_ BitVec 64))
(declare-fun temp11021_83 () (_ BitVec 64))
(declare-fun temp11021_84 () (_ BitVec 64))
(declare-fun temp11021_85 () (_ BitVec 64))
(declare-fun temp11021_86 () (_ BitVec 64))
(declare-fun temp11021_87 () (_ BitVec 64))
(declare-fun temp11021_88 () (_ BitVec 64))
(declare-fun temp11021_89 () (_ BitVec 64))
(declare-fun temp11021_90 () (_ BitVec 64))
(declare-fun temp11021_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11021_92 () (_ BitVec 64))
(declare-fun temp11021_93 () (_ BitVec 64))
(declare-fun temp11021_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11021_95 () (_ BitVec 64))
(declare-fun temp11021_96 () (_ BitVec 64))
(declare-fun temp11021_97 () (_ BitVec 64))
(declare-fun temp11021_98 () (_ BitVec 64))
(declare-fun temp11021_99 () (_ BitVec 64))
(declare-fun temp11021_100 () (_ BitVec 64))
(declare-fun temp11021_101 () (_ BitVec 64))
(declare-fun temp11021_102 () (_ BitVec 64))
(declare-fun temp11021_103 () (_ BitVec 64))
(declare-fun temp11021_104 () (_ BitVec 64))
(declare-fun temp11021_105 () (_ BitVec 64))
(declare-fun temp11021_106 () (_ BitVec 64))
(declare-fun temp11021_107 () (_ BitVec 64))
(declare-fun temp11021_108 () (_ BitVec 64))
(declare-fun temp11021_109 () (_ BitVec 64))
(declare-fun temp11021_110 () (_ BitVec 64))
(declare-fun temp11021_111 () (_ BitVec 64))
(declare-fun temp11021_112 () (_ BitVec 64))
(declare-fun temp11021_113 () (_ BitVec 64))
(declare-fun temp11021_114 () (_ BitVec 64))
(declare-fun temp11021_115 () (_ BitVec 64))
(declare-fun temp11021_116 () (_ BitVec 64))
(declare-fun temp11021_117 () (_ BitVec 64))
(declare-fun temp11021_118 () (_ BitVec 64))
(declare-fun temp11021_119 () (_ BitVec 64))
(declare-fun temp11021_120 () (_ BitVec 64))
(declare-fun temp11021_121 () (_ BitVec 64))
(declare-fun temp11021_122 () (_ BitVec 64))
(declare-fun temp11021_123 () (_ BitVec 64))
(declare-fun temp11021_124 () (_ BitVec 64))
(declare-fun temp11021_125 () (_ BitVec 64))
(declare-fun temp11021_126 () (_ BitVec 64))
(declare-fun temp11021_127 () (_ BitVec 64))
(declare-fun temp11021_128 () (_ BitVec 64))
(declare-fun temp11021_129 () (_ BitVec 64))
(declare-fun temp11021_130 () (_ BitVec 64))
(declare-fun temp11021_131 () (_ BitVec 64))
(declare-fun temp11021_132 () (_ BitVec 64))
(declare-fun temp11021_133 () (_ BitVec 64))
(declare-fun temp11021_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11021_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11021_136 () (_ BitVec 64))
(declare-fun temp11021_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11021_138 () (_ BitVec 64))
(declare-fun temp11021_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11021_140 () (_ BitVec 64))
(declare-fun temp11021_141 () (_ BitVec 64))
(declare-fun temp11021_142 () (_ BitVec 64))
(declare-fun temp11021_143 () (_ BitVec 64))
(declare-fun temp11021_144 () (_ BitVec 64))
(declare-fun temp11021_145 () (_ BitVec 64))
(declare-fun temp11021_146 () (_ BitVec 64))
(declare-fun temp11021_147 () (_ BitVec 64))
(declare-fun temp11021_148 () (_ BitVec 64))
(declare-fun temp11021_149 () (_ BitVec 64))
(declare-fun temp11021_150 () (_ BitVec 64))
(declare-fun temp11021_151 () (_ BitVec 64))
(declare-fun temp11021_152 () (_ BitVec 64))
(declare-fun temp11021_153 () (_ BitVec 64))
(declare-fun temp11021_154 () (_ BitVec 64))
(declare-fun temp11021_155 () (_ BitVec 64))
(declare-fun temp11021_157 () (_ BitVec 64))
(declare-fun temp11021_158 () (_ BitVec 64))
(declare-fun temp11021_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11021_159 () (_ BitVec 64))
(declare-fun temp11021_160 () (_ BitVec 64))
(declare-fun temp11021_162 () (_ BitVec 64))
(declare-fun temp11021_163 () (_ BitVec 64))
(declare-fun temp11021_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11021_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11021_165 () (_ BitVec 64))
(declare-fun temp11021_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11021_167 () (_ BitVec 64))
(declare-fun temp11021_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11021_169 () (_ BitVec 64))
(declare-fun temp11021_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11021_171 () (_ BitVec 64))
(declare-fun temp11021_172 () (_ BitVec 64))
(declare-fun temp11021_173 () (_ BitVec 64))
(declare-fun temp11021_174 () (_ BitVec 64))
(declare-fun temp11021_175 () (_ BitVec 64))
(declare-fun temp11021_176 () (_ BitVec 64))
(declare-fun temp11021_177 () (_ BitVec 64))
(declare-fun temp11021_178 () (_ BitVec 64))
(declare-fun temp11021_179 () (_ BitVec 64))
(declare-fun temp11021_180 () (_ BitVec 64))
(declare-fun temp11021_181 () (_ BitVec 64))
(declare-fun temp11021_182 () (_ BitVec 64))
(declare-fun temp11021_183 () (_ BitVec 64))
(declare-fun temp11021_184 () (_ BitVec 64))
(declare-fun temp11021_185 () (_ BitVec 64))
(declare-fun temp11021_186 () (_ BitVec 64))
(declare-fun temp11021_187 () (_ BitVec 64))
(declare-fun temp11021_188 () (_ BitVec 64))
(declare-fun temp11021_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11021_190 () (_ BitVec 64))
(declare-fun temp11021_192 () (_ BitVec 64))
(declare-fun temp11021_193 () (_ BitVec 64))
(declare-fun temp11021_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11021_194 () (_ BitVec 64))
(declare-fun temp11021_195 () (_ BitVec 64))
(declare-fun temp11021_197 () (_ BitVec 64))
(declare-fun temp11021_198 () (_ BitVec 64))
(declare-fun temp11021_196 () (_ BitVec 64))
(declare-fun temp11021_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11021_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11021_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11021_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11021_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11021_204 () (_ BitVec 64))
(declare-fun temp11021_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11021_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11021_207 () (_ BitVec 64))
(declare-fun temp11021_208 () (_ BitVec 64))
(declare-fun temp11021_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11021_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11021_211 () (_ BitVec 64))
(declare-fun temp11021_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11021_213 () (_ BitVec 64))
(declare-fun temp11021_214 () (_ BitVec 64))
(declare-fun temp11021_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11021_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11021_217 () (_ BitVec 64))
(declare-fun temp11021_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11021_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp11021_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun temp11021_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp11021_222 () (_ BitVec 64))
(declare-fun temp11021_223 () (_ BitVec 64))
(declare-fun var5191299 () (_ BitVec 64))
(declare-fun var5191301 () (_ BitVec 64))
(declare-fun var5256844 () (_ BitVec 64))
(declare-fun var5256845 () (_ BitVec 64))
(declare-fun temp11021_224 () (_ BitVec 64))
(assert (= temp11021_1 #x0000000000000001))
(assert (= var77203 temp11021_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11021_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11021_2)))
(assert (= temp11021_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11021_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11021_4 #x0000000000000000))
(assert (= var210941 temp11021_4))
(assert (= temp11021_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11021_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11021_6 #x0000000000000000))
(assert (= var210986 temp11021_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11021_7 #x0000000000000000))
(assert (= temp11021_8 temp11021_7))
(assert (= temp11021_9 (select ARGNAME_padding_NAMEEND_VAL temp11021_8)))
(assert (= temp11021_10 #x0000000000000001))
(assert (= temp11021_11 temp11021_10))
(assert (= temp11021_12 (select ARGNAME_padding_NAMEEND_VAL temp11021_11)))
(assert (= temp11021_13 #x0000000000000002))
(assert (= temp11021_14 temp11021_13))
(assert (= temp11021_15 (select ARGNAME_padding_NAMEEND_VAL temp11021_14)))
(assert (= temp11021_16 #x0000000000000003))
(assert (= temp11021_17 temp11021_16))
(assert (= temp11021_18 (select ARGNAME_padding_NAMEEND_VAL temp11021_17)))
(assert (= temp11021_19 #x0000000000000004))
(assert (= temp11021_20 temp11021_19))
(assert (= temp11021_21 (select ARGNAME_padding_NAMEEND_VAL temp11021_20)))
(assert (= temp11021_22 #x0000000000000005))
(assert (= temp11021_23 temp11021_22))
(assert (= temp11021_24 (select ARGNAME_padding_NAMEEND_VAL temp11021_23)))
(assert (= temp11021_25 #x0000000000000000))
(assert (= temp11021_26 #x0000000000000000))
(assert (= temp11021_27 temp11021_26))
(assert (= temp11021_28 (select ARGNAME_padding_NAMEEND_VAL temp11021_27)))
(assert (= temp11021_29 #x0000000000000000))
(assert (= temp11021_30 #x0000000000000001))
(assert (= temp11021_31 temp11021_30))
(assert (= temp11021_32 (select ARGNAME_padding_NAMEEND_VAL temp11021_31)))
(assert (= temp11021_33 #x0000000000000000))
(assert (= temp11021_34 #x0000000000000002))
(assert (= temp11021_35 temp11021_34))
(assert (= temp11021_36 (select ARGNAME_padding_NAMEEND_VAL temp11021_35)))
(assert (= temp11021_37 #x0000000000000000))
(assert (= temp11021_38 #x0000000000000003))
(assert (= temp11021_39 temp11021_38))
(assert (= temp11021_40 (select ARGNAME_padding_NAMEEND_VAL temp11021_39)))
(assert (= temp11021_41 #x0000000000000000))
(assert (= temp11021_42 #x0000000000000004))
(assert (= temp11021_43 temp11021_42))
(assert (= temp11021_44 (select ARGNAME_padding_NAMEEND_VAL temp11021_43)))
(assert (= temp11021_45 #x0000000000000000))
(assert (= temp11021_46 #x0000000000000005))
(assert (= temp11021_47 temp11021_46))
(assert (= temp11021_48 (select ARGNAME_padding_NAMEEND_VAL temp11021_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11021_28 temp11021_25)
             (bvslt temp11021_32 temp11021_29)
             (bvslt temp11021_36 temp11021_33)
             (bvslt temp11021_40 temp11021_37)
             (bvslt temp11021_44 temp11021_41)
             (bvslt temp11021_48 temp11021_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11021_49 #x0000000000000000))
(assert (= var1191714 temp11021_49))
(assert (= temp11021_50 #x0000000000000000))
(assert (= temp11021_51 temp11021_50))
(assert (= temp11021_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11021_51)))
(assert (= temp11021_53 #x0000000000000001))
(assert (= temp11021_54 temp11021_53))
(assert (= temp11021_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11021_54)))
(assert (= temp11021_56 #x0000000000000002))
(assert (= temp11021_57 temp11021_56))
(assert (= temp11021_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11021_57)))
(assert (= temp11021_59 #x0000000000000003))
(assert (= temp11021_60 temp11021_59))
(assert (= temp11021_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11021_60)))
(assert (= temp11021_62 #x0000000000000004))
(assert (= temp11021_63 temp11021_62))
(assert (= temp11021_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11021_63)))
(assert (= temp11021_65 #x0000000000000005))
(assert (= temp11021_66 temp11021_65))
(assert (= temp11021_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11021_66)))
(assert (= temp11021_68 #x0000000000000000))
(assert (= temp11021_69 #x0000000000000000))
(assert (= temp11021_70 temp11021_69))
(assert (= temp11021_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11021_70)))
(assert (= temp11021_72 #x0000000000000000))
(assert (= temp11021_73 #x0000000000000001))
(assert (= temp11021_74 temp11021_73))
(assert (= temp11021_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11021_74)))
(assert (= temp11021_76 #x0000000000000000))
(assert (= temp11021_77 #x0000000000000002))
(assert (= temp11021_78 temp11021_77))
(assert (= temp11021_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11021_78)))
(assert (= temp11021_80 #x0000000000000000))
(assert (= temp11021_81 #x0000000000000003))
(assert (= temp11021_82 temp11021_81))
(assert (= temp11021_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11021_82)))
(assert (= temp11021_84 #x0000000000000000))
(assert (= temp11021_85 #x0000000000000004))
(assert (= temp11021_86 temp11021_85))
(assert (= temp11021_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11021_86)))
(assert (= temp11021_88 #x0000000000000000))
(assert (= temp11021_89 #x0000000000000005))
(assert (= temp11021_90 temp11021_89))
(assert (= temp11021_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11021_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11021_71 temp11021_68)
             (bvslt temp11021_75 temp11021_72)
             (bvslt temp11021_79 temp11021_76)
             (bvslt temp11021_83 temp11021_80)
             (bvslt temp11021_87 temp11021_84)
             (bvslt temp11021_91 temp11021_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11021_92 #x0000000000000000))
(assert (= var1191725 temp11021_92))
(assert (= temp11021_93 #x0000000000000000))
(assert (= temp11021_94 temp11021_93))
(assert (= temp11021_95 (select ARGNAME_stride_NAMEEND_VAL temp11021_94)))
(assert (= temp11021_96 #x0000000000000001))
(assert (= temp11021_97 temp11021_96))
(assert (= temp11021_98 (select ARGNAME_stride_NAMEEND_VAL temp11021_97)))
(assert (= temp11021_99 #x0000000000000002))
(assert (= temp11021_100 temp11021_99))
(assert (= temp11021_101 (select ARGNAME_stride_NAMEEND_VAL temp11021_100)))
(assert (= temp11021_102 #x0000000000000003))
(assert (= temp11021_103 temp11021_102))
(assert (= temp11021_104 (select ARGNAME_stride_NAMEEND_VAL temp11021_103)))
(assert (= temp11021_105 #x0000000000000004))
(assert (= temp11021_106 temp11021_105))
(assert (= temp11021_107 (select ARGNAME_stride_NAMEEND_VAL temp11021_106)))
(assert (= temp11021_108 #x0000000000000005))
(assert (= temp11021_109 temp11021_108))
(assert (= temp11021_110 (select ARGNAME_stride_NAMEEND_VAL temp11021_109)))
(assert (= temp11021_111 #x0000000000000000))
(assert (= temp11021_112 #x0000000000000000))
(assert (= temp11021_113 temp11021_112))
(assert (= temp11021_114 (select ARGNAME_stride_NAMEEND_VAL temp11021_113)))
(assert (= temp11021_115 #x0000000000000000))
(assert (= temp11021_116 #x0000000000000001))
(assert (= temp11021_117 temp11021_116))
(assert (= temp11021_118 (select ARGNAME_stride_NAMEEND_VAL temp11021_117)))
(assert (= temp11021_119 #x0000000000000000))
(assert (= temp11021_120 #x0000000000000002))
(assert (= temp11021_121 temp11021_120))
(assert (= temp11021_122 (select ARGNAME_stride_NAMEEND_VAL temp11021_121)))
(assert (= temp11021_123 #x0000000000000000))
(assert (= temp11021_124 #x0000000000000003))
(assert (= temp11021_125 temp11021_124))
(assert (= temp11021_126 (select ARGNAME_stride_NAMEEND_VAL temp11021_125)))
(assert (= temp11021_127 #x0000000000000000))
(assert (= temp11021_128 #x0000000000000004))
(assert (= temp11021_129 temp11021_128))
(assert (= temp11021_130 (select ARGNAME_stride_NAMEEND_VAL temp11021_129)))
(assert (= temp11021_131 #x0000000000000000))
(assert (= temp11021_132 #x0000000000000005))
(assert (= temp11021_133 temp11021_132))
(assert (= temp11021_134 (select ARGNAME_stride_NAMEEND_VAL temp11021_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11021_114 temp11021_111)
             (bvsle temp11021_118 temp11021_115)
             (bvsle temp11021_122 temp11021_119)
             (bvsle temp11021_126 temp11021_123)
             (bvsle temp11021_130 temp11021_127)
             (bvsle temp11021_134 temp11021_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11021_135 #x0000000000000000))
(assert (= var1191735 temp11021_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11021_136 #x0000000000000001))
(assert (= var1191747 temp11021_136))
(assert (= temp11021_137 #x0000000000000000))
(assert (= var1179826 temp11021_137))
(assert (= temp11021_138 #x0000000000000000))
(assert (= temp11021_139 temp11021_138))
(assert (= temp11021_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11021_139)))
(assert (= temp11021_141 #x0000000000000001))
(assert (= temp11021_142 temp11021_141))
(assert (= temp11021_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11021_142)))
(assert (= temp11021_144 #x0000000000000002))
(assert (= temp11021_145 temp11021_144))
(assert (= temp11021_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11021_145)))
(assert (= temp11021_147 #x0000000000000003))
(assert (= temp11021_148 temp11021_147))
(assert (= temp11021_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11021_148)))
(assert (= temp11021_150 #x0000000000000004))
(assert (= temp11021_151 temp11021_150))
(assert (= temp11021_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11021_151)))
(assert (= temp11021_153 #x0000000000000005))
(assert (= temp11021_154 temp11021_153))
(assert (= temp11021_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11021_154)))
(assert (= temp11021_157 var1179826))
(assert (= temp11021_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11021_157)))
(assert (= temp11021_156 temp11021_158))
(assert (= var1191780
   (ite (bvslt temp11021_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11021_159 #x0000000000000000))
(assert (= var1191780 temp11021_159))
(assert (= temp11021_160 #x0000000000000000))
(assert (= var1179826 temp11021_160))
(assert (= temp11021_162 var1179826))
(assert (= temp11021_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11021_162)))
(assert (= temp11021_161 temp11021_163))
(assert (= var1191802 (bvsmod temp11021_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11021_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11021_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11021_165 #x0000000000000001))
(assert (= var1191803 temp11021_165))
(assert (= temp11021_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11021_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11021_167 #x0000000000000001))
(assert (= var1191823 temp11021_167))
(assert (= temp11021_168 #x0000000000000001))
(assert (= var1180714 temp11021_168))
(assert (= temp11021_169 #x0000000000000000))
(assert (= temp11021_170 temp11021_169))
(assert (= temp11021_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11021_170)))
(assert (= temp11021_172 #x0000000000000001))
(assert (= temp11021_173 temp11021_172))
(assert (= temp11021_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11021_173)))
(assert (= temp11021_175 #x0000000000000002))
(assert (= temp11021_176 temp11021_175))
(assert (= temp11021_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11021_176)))
(assert (= temp11021_178 #x0000000000000003))
(assert (= temp11021_179 temp11021_178))
(assert (= temp11021_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11021_179)))
(assert (= temp11021_181 #x0000000000000004))
(assert (= temp11021_182 temp11021_181))
(assert (= temp11021_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11021_182)))
(assert (= temp11021_184 #x0000000000000005))
(assert (= temp11021_185 temp11021_184))
(assert (= temp11021_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11021_185)))
(assert (= temp11021_187 #x0000000000000000))
(assert (= temp11021_188
   (ite (bvslt var1180714 temp11021_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11021_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11021_188)))
(assert (= var1191831 temp11021_189))
(assert (bvslt (ite (bvslt var1180714 temp11021_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11021_190 #x0000000000000001))
(assert (= var1180714 temp11021_190))
(assert (= temp11021_192 var1180714))
(assert (= temp11021_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11021_192)))
(assert (= temp11021_191 temp11021_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11021_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11021_194 #x0000000000000001))
(assert (= var1191836 temp11021_194))
(assert (= temp11021_195 #x0000000000000000))
(assert (= var1179826 temp11021_195))
(assert (= temp11021_197 var1179826))
(assert (= temp11021_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11021_197)))
(assert (= temp11021_196 temp11021_198))
(assert (= temp11021_199 #x0000000000000002))
(assert (= var1586025 temp11021_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11021_200 #x0000000000000001))
(assert (= var1191993 temp11021_200))
(assert (= temp11021_201 #x0000000000000001))
(assert (= var2700303 temp11021_201))
(assert (= temp11021_202 #x0000000000000001))
(assert (= var2962447 temp11021_202))
(assert (= temp11021_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11021_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11021_204 #x0000000000000001))
(assert (= var211058 temp11021_204))
(assert (= temp11021_205 #x0000000000000001))
(assert (= var211188 temp11021_205))
(assert (= var3879401 var211188))
(assert (= temp11021_206 #x0000000000000000))
(assert (= var3866802 temp11021_206))
(assert (= temp11021_207 #x0000000000000000))
(assert (= temp11021_208
   (ite (bvslt var3866802 temp11021_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11021_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11021_208)))
(assert (= var3879420 temp11021_209))
(assert (bvslt (ite (bvslt var3866802 temp11021_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11021_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11021_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11021_211 #x0000000000000000))
(assert (= var3879421 temp11021_211))
(assert (= temp11021_212 #x0000000000000001))
(assert (= var3867690 temp11021_212))
(assert (= temp11021_213 #x0000000000000000))
(assert (= temp11021_214
   (ite (bvslt var3867690 temp11021_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11021_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11021_214)))
(assert (= var3879423 temp11021_215))
(assert (bvslt (ite (bvslt var3867690 temp11021_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11021_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11021_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11021_217 #x0000000000000001))
(assert (= var3879424 temp11021_217))
(assert (= temp11021_218 #x0000000000000000))
(assert (= var4133117 temp11021_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11021_219 #x0000000000000002))
(assert (= var4339331 temp11021_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11021_220 #x0000000000000000))
(assert (= var4404892 temp11021_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4600208 var211201))
(assert (= var4862352 var211201))
(assert (= temp11021_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp11021_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11021_222 #x0000000000000001))
(assert (= var212414 temp11021_222))
(assert (= temp11021_223 #x0000000000000002))
(assert (= var5191299 temp11021_223))
(assert (= var5191301 (bvsub ARGNAME_weight_NAMEEND_DIM var5191299)))
(assert (= var5256844 var5191299))
(assert (= var5256845 var5191301))
(assert (= temp11021_224 #x0000000000000001))
(assert (= var211058 temp11021_224))
(model-add temp11021_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11021_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11021_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11021_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




