(declare-fun temp802_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp802_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp802_3 () (_ BitVec 64))
(declare-fun temp802_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp802_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp802_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp802_7 () (_ BitVec 64))
(declare-fun temp802_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp802_9 () (_ BitVec 64))
(declare-fun temp802_10 () (_ BitVec 64))
(declare-fun temp802_11 () (_ BitVec 64))
(declare-fun temp802_12 () (_ BitVec 64))
(declare-fun temp802_13 () (_ BitVec 64))
(declare-fun temp802_14 () (_ BitVec 64))
(declare-fun temp802_15 () (_ BitVec 64))
(declare-fun temp802_16 () (_ BitVec 64))
(declare-fun temp802_17 () (_ BitVec 64))
(declare-fun temp802_18 () (_ BitVec 64))
(declare-fun temp802_19 () (_ BitVec 64))
(declare-fun temp802_20 () (_ BitVec 64))
(declare-fun temp802_21 () (_ BitVec 64))
(declare-fun temp802_22 () (_ BitVec 64))
(declare-fun temp802_23 () (_ BitVec 64))
(declare-fun temp802_24 () (_ BitVec 64))
(declare-fun temp802_25 () (_ BitVec 64))
(declare-fun temp802_26 () (_ BitVec 64))
(declare-fun temp802_27 () (_ BitVec 64))
(declare-fun temp802_28 () (_ BitVec 64))
(declare-fun temp802_29 () (_ BitVec 64))
(declare-fun temp802_30 () (_ BitVec 64))
(declare-fun temp802_31 () (_ BitVec 64))
(declare-fun temp802_32 () (_ BitVec 64))
(declare-fun temp802_33 () (_ BitVec 64))
(declare-fun temp802_34 () (_ BitVec 64))
(declare-fun temp802_35 () (_ BitVec 64))
(declare-fun temp802_36 () (_ BitVec 64))
(declare-fun temp802_37 () (_ BitVec 64))
(declare-fun temp802_38 () (_ BitVec 64))
(declare-fun temp802_39 () (_ BitVec 64))
(declare-fun temp802_40 () (_ BitVec 64))
(declare-fun temp802_41 () (_ BitVec 64))
(declare-fun temp802_42 () (_ BitVec 64))
(declare-fun temp802_43 () (_ BitVec 64))
(declare-fun temp802_44 () (_ BitVec 64))
(declare-fun temp802_45 () (_ BitVec 64))
(declare-fun temp802_46 () (_ BitVec 64))
(declare-fun temp802_47 () (_ BitVec 64))
(declare-fun temp802_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp802_49 () (_ BitVec 64))
(declare-fun temp802_50 () (_ BitVec 64))
(declare-fun temp802_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp802_52 () (_ BitVec 64))
(declare-fun temp802_53 () (_ BitVec 64))
(declare-fun temp802_54 () (_ BitVec 64))
(declare-fun temp802_55 () (_ BitVec 64))
(declare-fun temp802_56 () (_ BitVec 64))
(declare-fun temp802_57 () (_ BitVec 64))
(declare-fun temp802_58 () (_ BitVec 64))
(declare-fun temp802_59 () (_ BitVec 64))
(declare-fun temp802_60 () (_ BitVec 64))
(declare-fun temp802_61 () (_ BitVec 64))
(declare-fun temp802_62 () (_ BitVec 64))
(declare-fun temp802_63 () (_ BitVec 64))
(declare-fun temp802_64 () (_ BitVec 64))
(declare-fun temp802_65 () (_ BitVec 64))
(declare-fun temp802_66 () (_ BitVec 64))
(declare-fun temp802_67 () (_ BitVec 64))
(declare-fun temp802_68 () (_ BitVec 64))
(declare-fun temp802_69 () (_ BitVec 64))
(declare-fun temp802_70 () (_ BitVec 64))
(declare-fun temp802_71 () (_ BitVec 64))
(declare-fun temp802_72 () (_ BitVec 64))
(declare-fun temp802_73 () (_ BitVec 64))
(declare-fun temp802_74 () (_ BitVec 64))
(declare-fun temp802_75 () (_ BitVec 64))
(declare-fun temp802_76 () (_ BitVec 64))
(declare-fun temp802_77 () (_ BitVec 64))
(declare-fun temp802_78 () (_ BitVec 64))
(declare-fun temp802_79 () (_ BitVec 64))
(declare-fun temp802_80 () (_ BitVec 64))
(declare-fun temp802_81 () (_ BitVec 64))
(declare-fun temp802_82 () (_ BitVec 64))
(declare-fun temp802_83 () (_ BitVec 64))
(declare-fun temp802_84 () (_ BitVec 64))
(declare-fun temp802_85 () (_ BitVec 64))
(declare-fun temp802_86 () (_ BitVec 64))
(declare-fun temp802_87 () (_ BitVec 64))
(declare-fun temp802_88 () (_ BitVec 64))
(declare-fun temp802_89 () (_ BitVec 64))
(declare-fun temp802_90 () (_ BitVec 64))
(declare-fun temp802_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp802_92 () (_ BitVec 64))
(declare-fun temp802_93 () (_ BitVec 64))
(declare-fun temp802_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp802_95 () (_ BitVec 64))
(declare-fun temp802_96 () (_ BitVec 64))
(declare-fun temp802_97 () (_ BitVec 64))
(declare-fun temp802_98 () (_ BitVec 64))
(declare-fun temp802_99 () (_ BitVec 64))
(declare-fun temp802_100 () (_ BitVec 64))
(declare-fun temp802_101 () (_ BitVec 64))
(declare-fun temp802_102 () (_ BitVec 64))
(declare-fun temp802_103 () (_ BitVec 64))
(declare-fun temp802_104 () (_ BitVec 64))
(declare-fun temp802_105 () (_ BitVec 64))
(declare-fun temp802_106 () (_ BitVec 64))
(declare-fun temp802_107 () (_ BitVec 64))
(declare-fun temp802_108 () (_ BitVec 64))
(declare-fun temp802_109 () (_ BitVec 64))
(declare-fun temp802_110 () (_ BitVec 64))
(declare-fun temp802_111 () (_ BitVec 64))
(declare-fun temp802_112 () (_ BitVec 64))
(declare-fun temp802_113 () (_ BitVec 64))
(declare-fun temp802_114 () (_ BitVec 64))
(declare-fun temp802_115 () (_ BitVec 64))
(declare-fun temp802_116 () (_ BitVec 64))
(declare-fun temp802_117 () (_ BitVec 64))
(declare-fun temp802_118 () (_ BitVec 64))
(declare-fun temp802_119 () (_ BitVec 64))
(declare-fun temp802_120 () (_ BitVec 64))
(declare-fun temp802_121 () (_ BitVec 64))
(declare-fun temp802_122 () (_ BitVec 64))
(declare-fun temp802_123 () (_ BitVec 64))
(declare-fun temp802_124 () (_ BitVec 64))
(declare-fun temp802_125 () (_ BitVec 64))
(declare-fun temp802_126 () (_ BitVec 64))
(declare-fun temp802_127 () (_ BitVec 64))
(declare-fun temp802_128 () (_ BitVec 64))
(declare-fun temp802_129 () (_ BitVec 64))
(declare-fun temp802_130 () (_ BitVec 64))
(declare-fun temp802_131 () (_ BitVec 64))
(declare-fun temp802_132 () (_ BitVec 64))
(declare-fun temp802_133 () (_ BitVec 64))
(declare-fun temp802_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp802_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp802_136 () (_ BitVec 64))
(declare-fun temp802_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp802_138 () (_ BitVec 64))
(declare-fun temp802_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp802_140 () (_ BitVec 64))
(declare-fun temp802_141 () (_ BitVec 64))
(declare-fun temp802_142 () (_ BitVec 64))
(declare-fun temp802_143 () (_ BitVec 64))
(declare-fun temp802_144 () (_ BitVec 64))
(declare-fun temp802_145 () (_ BitVec 64))
(declare-fun temp802_146 () (_ BitVec 64))
(declare-fun temp802_147 () (_ BitVec 64))
(declare-fun temp802_148 () (_ BitVec 64))
(declare-fun temp802_149 () (_ BitVec 64))
(declare-fun temp802_150 () (_ BitVec 64))
(declare-fun temp802_151 () (_ BitVec 64))
(declare-fun temp802_152 () (_ BitVec 64))
(declare-fun temp802_153 () (_ BitVec 64))
(declare-fun temp802_154 () (_ BitVec 64))
(declare-fun temp802_155 () (_ BitVec 64))
(declare-fun temp802_157 () (_ BitVec 64))
(declare-fun temp802_158 () (_ BitVec 64))
(declare-fun temp802_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp802_159 () (_ BitVec 64))
(declare-fun temp802_160 () (_ BitVec 64))
(declare-fun temp802_162 () (_ BitVec 64))
(declare-fun temp802_163 () (_ BitVec 64))
(declare-fun temp802_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp802_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp802_165 () (_ BitVec 64))
(declare-fun temp802_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp802_167 () (_ BitVec 64))
(declare-fun temp802_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp802_169 () (_ BitVec 64))
(declare-fun temp802_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp802_171 () (_ BitVec 64))
(declare-fun temp802_172 () (_ BitVec 64))
(declare-fun temp802_173 () (_ BitVec 64))
(declare-fun temp802_174 () (_ BitVec 64))
(declare-fun temp802_175 () (_ BitVec 64))
(declare-fun temp802_176 () (_ BitVec 64))
(declare-fun temp802_177 () (_ BitVec 64))
(declare-fun temp802_178 () (_ BitVec 64))
(declare-fun temp802_179 () (_ BitVec 64))
(declare-fun temp802_180 () (_ BitVec 64))
(declare-fun temp802_181 () (_ BitVec 64))
(declare-fun temp802_182 () (_ BitVec 64))
(declare-fun temp802_183 () (_ BitVec 64))
(declare-fun temp802_184 () (_ BitVec 64))
(declare-fun temp802_185 () (_ BitVec 64))
(declare-fun temp802_186 () (_ BitVec 64))
(declare-fun temp802_187 () (_ BitVec 64))
(declare-fun temp802_188 () (_ BitVec 64))
(declare-fun temp802_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp802_190 () (_ BitVec 64))
(declare-fun temp802_192 () (_ BitVec 64))
(declare-fun temp802_193 () (_ BitVec 64))
(declare-fun temp802_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp802_194 () (_ BitVec 64))
(declare-fun temp802_195 () (_ BitVec 64))
(declare-fun temp802_197 () (_ BitVec 64))
(declare-fun temp802_198 () (_ BitVec 64))
(declare-fun temp802_196 () (_ BitVec 64))
(declare-fun temp802_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp802_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp802_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp802_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp802_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp802_204 () (_ BitVec 64))
(declare-fun temp802_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp802_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp802_207 () (_ BitVec 64))
(declare-fun temp802_208 () (_ BitVec 64))
(declare-fun temp802_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp802_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp802_211 () (_ BitVec 64))
(declare-fun temp802_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp802_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp802_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211820 () (_ BitVec 64))
(declare-fun temp802_215 () (_ BitVec 64))
(declare-fun var211821 () (_ BitVec 64))
(declare-fun temp802_216 () (_ BitVec 64))
(assert (= temp802_1 #x0000000000000001))
(assert (= var77203 temp802_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp802_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp802_2)))
(assert (= temp802_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp802_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp802_4 #x0000000000000000))
(assert (= var210941 temp802_4))
(assert (= temp802_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp802_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp802_6 #x0000000000000000))
(assert (= var210986 temp802_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp802_7 #x0000000000000000))
(assert (= temp802_8 temp802_7))
(assert (= temp802_9 (select ARGNAME_padding_NAMEEND_VAL temp802_8)))
(assert (= temp802_10 #x0000000000000001))
(assert (= temp802_11 temp802_10))
(assert (= temp802_12 (select ARGNAME_padding_NAMEEND_VAL temp802_11)))
(assert (= temp802_13 #x0000000000000002))
(assert (= temp802_14 temp802_13))
(assert (= temp802_15 (select ARGNAME_padding_NAMEEND_VAL temp802_14)))
(assert (= temp802_16 #x0000000000000003))
(assert (= temp802_17 temp802_16))
(assert (= temp802_18 (select ARGNAME_padding_NAMEEND_VAL temp802_17)))
(assert (= temp802_19 #x0000000000000004))
(assert (= temp802_20 temp802_19))
(assert (= temp802_21 (select ARGNAME_padding_NAMEEND_VAL temp802_20)))
(assert (= temp802_22 #x0000000000000005))
(assert (= temp802_23 temp802_22))
(assert (= temp802_24 (select ARGNAME_padding_NAMEEND_VAL temp802_23)))
(assert (= temp802_25 #x0000000000000000))
(assert (= temp802_26 #x0000000000000000))
(assert (= temp802_27 temp802_26))
(assert (= temp802_28 (select ARGNAME_padding_NAMEEND_VAL temp802_27)))
(assert (= temp802_29 #x0000000000000000))
(assert (= temp802_30 #x0000000000000001))
(assert (= temp802_31 temp802_30))
(assert (= temp802_32 (select ARGNAME_padding_NAMEEND_VAL temp802_31)))
(assert (= temp802_33 #x0000000000000000))
(assert (= temp802_34 #x0000000000000002))
(assert (= temp802_35 temp802_34))
(assert (= temp802_36 (select ARGNAME_padding_NAMEEND_VAL temp802_35)))
(assert (= temp802_37 #x0000000000000000))
(assert (= temp802_38 #x0000000000000003))
(assert (= temp802_39 temp802_38))
(assert (= temp802_40 (select ARGNAME_padding_NAMEEND_VAL temp802_39)))
(assert (= temp802_41 #x0000000000000000))
(assert (= temp802_42 #x0000000000000004))
(assert (= temp802_43 temp802_42))
(assert (= temp802_44 (select ARGNAME_padding_NAMEEND_VAL temp802_43)))
(assert (= temp802_45 #x0000000000000000))
(assert (= temp802_46 #x0000000000000005))
(assert (= temp802_47 temp802_46))
(assert (= temp802_48 (select ARGNAME_padding_NAMEEND_VAL temp802_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp802_28 temp802_25)
             (bvslt temp802_32 temp802_29)
             (bvslt temp802_36 temp802_33)
             (bvslt temp802_40 temp802_37)
             (bvslt temp802_44 temp802_41)
             (bvslt temp802_48 temp802_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp802_49 #x0000000000000000))
(assert (= var1191714 temp802_49))
(assert (= temp802_50 #x0000000000000000))
(assert (= temp802_51 temp802_50))
(assert (= temp802_52 (select ARGNAME_output_padding_NAMEEND_VAL temp802_51)))
(assert (= temp802_53 #x0000000000000001))
(assert (= temp802_54 temp802_53))
(assert (= temp802_55 (select ARGNAME_output_padding_NAMEEND_VAL temp802_54)))
(assert (= temp802_56 #x0000000000000002))
(assert (= temp802_57 temp802_56))
(assert (= temp802_58 (select ARGNAME_output_padding_NAMEEND_VAL temp802_57)))
(assert (= temp802_59 #x0000000000000003))
(assert (= temp802_60 temp802_59))
(assert (= temp802_61 (select ARGNAME_output_padding_NAMEEND_VAL temp802_60)))
(assert (= temp802_62 #x0000000000000004))
(assert (= temp802_63 temp802_62))
(assert (= temp802_64 (select ARGNAME_output_padding_NAMEEND_VAL temp802_63)))
(assert (= temp802_65 #x0000000000000005))
(assert (= temp802_66 temp802_65))
(assert (= temp802_67 (select ARGNAME_output_padding_NAMEEND_VAL temp802_66)))
(assert (= temp802_68 #x0000000000000000))
(assert (= temp802_69 #x0000000000000000))
(assert (= temp802_70 temp802_69))
(assert (= temp802_71 (select ARGNAME_output_padding_NAMEEND_VAL temp802_70)))
(assert (= temp802_72 #x0000000000000000))
(assert (= temp802_73 #x0000000000000001))
(assert (= temp802_74 temp802_73))
(assert (= temp802_75 (select ARGNAME_output_padding_NAMEEND_VAL temp802_74)))
(assert (= temp802_76 #x0000000000000000))
(assert (= temp802_77 #x0000000000000002))
(assert (= temp802_78 temp802_77))
(assert (= temp802_79 (select ARGNAME_output_padding_NAMEEND_VAL temp802_78)))
(assert (= temp802_80 #x0000000000000000))
(assert (= temp802_81 #x0000000000000003))
(assert (= temp802_82 temp802_81))
(assert (= temp802_83 (select ARGNAME_output_padding_NAMEEND_VAL temp802_82)))
(assert (= temp802_84 #x0000000000000000))
(assert (= temp802_85 #x0000000000000004))
(assert (= temp802_86 temp802_85))
(assert (= temp802_87 (select ARGNAME_output_padding_NAMEEND_VAL temp802_86)))
(assert (= temp802_88 #x0000000000000000))
(assert (= temp802_89 #x0000000000000005))
(assert (= temp802_90 temp802_89))
(assert (= temp802_91 (select ARGNAME_output_padding_NAMEEND_VAL temp802_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp802_71 temp802_68)
             (bvslt temp802_75 temp802_72)
             (bvslt temp802_79 temp802_76)
             (bvslt temp802_83 temp802_80)
             (bvslt temp802_87 temp802_84)
             (bvslt temp802_91 temp802_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp802_92 #x0000000000000000))
(assert (= var1191725 temp802_92))
(assert (= temp802_93 #x0000000000000000))
(assert (= temp802_94 temp802_93))
(assert (= temp802_95 (select ARGNAME_stride_NAMEEND_VAL temp802_94)))
(assert (= temp802_96 #x0000000000000001))
(assert (= temp802_97 temp802_96))
(assert (= temp802_98 (select ARGNAME_stride_NAMEEND_VAL temp802_97)))
(assert (= temp802_99 #x0000000000000002))
(assert (= temp802_100 temp802_99))
(assert (= temp802_101 (select ARGNAME_stride_NAMEEND_VAL temp802_100)))
(assert (= temp802_102 #x0000000000000003))
(assert (= temp802_103 temp802_102))
(assert (= temp802_104 (select ARGNAME_stride_NAMEEND_VAL temp802_103)))
(assert (= temp802_105 #x0000000000000004))
(assert (= temp802_106 temp802_105))
(assert (= temp802_107 (select ARGNAME_stride_NAMEEND_VAL temp802_106)))
(assert (= temp802_108 #x0000000000000005))
(assert (= temp802_109 temp802_108))
(assert (= temp802_110 (select ARGNAME_stride_NAMEEND_VAL temp802_109)))
(assert (= temp802_111 #x0000000000000000))
(assert (= temp802_112 #x0000000000000000))
(assert (= temp802_113 temp802_112))
(assert (= temp802_114 (select ARGNAME_stride_NAMEEND_VAL temp802_113)))
(assert (= temp802_115 #x0000000000000000))
(assert (= temp802_116 #x0000000000000001))
(assert (= temp802_117 temp802_116))
(assert (= temp802_118 (select ARGNAME_stride_NAMEEND_VAL temp802_117)))
(assert (= temp802_119 #x0000000000000000))
(assert (= temp802_120 #x0000000000000002))
(assert (= temp802_121 temp802_120))
(assert (= temp802_122 (select ARGNAME_stride_NAMEEND_VAL temp802_121)))
(assert (= temp802_123 #x0000000000000000))
(assert (= temp802_124 #x0000000000000003))
(assert (= temp802_125 temp802_124))
(assert (= temp802_126 (select ARGNAME_stride_NAMEEND_VAL temp802_125)))
(assert (= temp802_127 #x0000000000000000))
(assert (= temp802_128 #x0000000000000004))
(assert (= temp802_129 temp802_128))
(assert (= temp802_130 (select ARGNAME_stride_NAMEEND_VAL temp802_129)))
(assert (= temp802_131 #x0000000000000000))
(assert (= temp802_132 #x0000000000000005))
(assert (= temp802_133 temp802_132))
(assert (= temp802_134 (select ARGNAME_stride_NAMEEND_VAL temp802_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp802_114 temp802_111)
             (bvsle temp802_118 temp802_115)
             (bvsle temp802_122 temp802_119)
             (bvsle temp802_126 temp802_123)
             (bvsle temp802_130 temp802_127)
             (bvsle temp802_134 temp802_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp802_135 #x0000000000000000))
(assert (= var1191735 temp802_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp802_136 #x0000000000000001))
(assert (= var1191747 temp802_136))
(assert (= temp802_137 #x0000000000000000))
(assert (= var1179826 temp802_137))
(assert (= temp802_138 #x0000000000000000))
(assert (= temp802_139 temp802_138))
(assert (= temp802_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp802_139)))
(assert (= temp802_141 #x0000000000000001))
(assert (= temp802_142 temp802_141))
(assert (= temp802_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp802_142)))
(assert (= temp802_144 #x0000000000000002))
(assert (= temp802_145 temp802_144))
(assert (= temp802_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp802_145)))
(assert (= temp802_147 #x0000000000000003))
(assert (= temp802_148 temp802_147))
(assert (= temp802_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp802_148)))
(assert (= temp802_150 #x0000000000000004))
(assert (= temp802_151 temp802_150))
(assert (= temp802_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp802_151)))
(assert (= temp802_153 #x0000000000000005))
(assert (= temp802_154 temp802_153))
(assert (= temp802_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp802_154)))
(assert (= temp802_157 var1179826))
(assert (= temp802_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp802_157)))
(assert (= temp802_156 temp802_158))
(assert (= var1191780
   (ite (bvslt temp802_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp802_159 #x0000000000000000))
(assert (= var1191780 temp802_159))
(assert (= temp802_160 #x0000000000000000))
(assert (= var1179826 temp802_160))
(assert (= temp802_162 var1179826))
(assert (= temp802_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp802_162)))
(assert (= temp802_161 temp802_163))
(assert (= var1191802 (bvsmod temp802_161 ARGNAME_groups_NAMEEND)))
(assert (= temp802_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp802_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp802_165 #x0000000000000001))
(assert (= var1191803 temp802_165))
(assert (= temp802_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp802_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp802_167 #x0000000000000001))
(assert (= var1191823 temp802_167))
(assert (= temp802_168 #x0000000000000001))
(assert (= var1180714 temp802_168))
(assert (= temp802_169 #x0000000000000000))
(assert (= temp802_170 temp802_169))
(assert (= temp802_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp802_170)))
(assert (= temp802_172 #x0000000000000001))
(assert (= temp802_173 temp802_172))
(assert (= temp802_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp802_173)))
(assert (= temp802_175 #x0000000000000002))
(assert (= temp802_176 temp802_175))
(assert (= temp802_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp802_176)))
(assert (= temp802_178 #x0000000000000003))
(assert (= temp802_179 temp802_178))
(assert (= temp802_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp802_179)))
(assert (= temp802_181 #x0000000000000004))
(assert (= temp802_182 temp802_181))
(assert (= temp802_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp802_182)))
(assert (= temp802_184 #x0000000000000005))
(assert (= temp802_185 temp802_184))
(assert (= temp802_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp802_185)))
(assert (= temp802_187 #x0000000000000000))
(assert (= temp802_188
   (ite (bvslt var1180714 temp802_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp802_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp802_188)))
(assert (= var1191831 temp802_189))
(assert (bvslt (ite (bvslt var1180714 temp802_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp802_190 #x0000000000000001))
(assert (= var1180714 temp802_190))
(assert (= temp802_192 var1180714))
(assert (= temp802_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp802_192)))
(assert (= temp802_191 temp802_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp802_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp802_194 #x0000000000000001))
(assert (= var1191836 temp802_194))
(assert (= temp802_195 #x0000000000000000))
(assert (= var1179826 temp802_195))
(assert (= temp802_197 var1179826))
(assert (= temp802_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp802_197)))
(assert (= temp802_196 temp802_198))
(assert (= temp802_199 #x0000000000000002))
(assert (= var1586025 temp802_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp802_200 #x0000000000000001))
(assert (= var1191993 temp802_200))
(assert (= temp802_201 #x0000000000000001))
(assert (= var2700303 temp802_201))
(assert (= temp802_202 #x0000000000000001))
(assert (= var2962447 temp802_202))
(assert (= temp802_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp802_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp802_204 #x0000000000000001))
(assert (= var211058 temp802_204))
(assert (= temp802_205 #x0000000000000001))
(assert (= var211188 temp802_205))
(assert (= var3879401 var211188))
(assert (= temp802_206 #x0000000000000000))
(assert (= var3866802 temp802_206))
(assert (= temp802_207 #x0000000000000000))
(assert (= temp802_208
   (ite (bvslt var3866802 temp802_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp802_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp802_208)))
(assert (= var3879420 temp802_209))
(assert (bvslt (ite (bvslt var3866802 temp802_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp802_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp802_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp802_211 #x0000000000000001))
(assert (= var3879421 temp802_211))
(assert (= temp802_212 #x0000000000000000))
(assert (= var4079423 temp802_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp802_213 #x0000000000000002))
(assert (= var4208259 temp802_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp802_214 #x0000000000000000))
(assert (= var4273820 temp802_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211820 var210913))
(assert (= temp802_215 #x0000000000000000))
(assert (= var211821
   (ite (distinct var211820 temp802_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp802_216 #x0000000000000001))
(assert (= var211058 temp802_216))
(model-add temp802_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp802_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp802_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp802_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




