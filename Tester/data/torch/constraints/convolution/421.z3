(declare-fun temp561_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp561_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp561_3 () (_ BitVec 64))
(declare-fun temp561_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp561_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp561_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp561_7 () (_ BitVec 64))
(declare-fun temp561_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp561_9 () (_ BitVec 64))
(declare-fun temp561_10 () (_ BitVec 64))
(declare-fun temp561_11 () (_ BitVec 64))
(declare-fun temp561_12 () (_ BitVec 64))
(declare-fun temp561_13 () (_ BitVec 64))
(declare-fun temp561_14 () (_ BitVec 64))
(declare-fun temp561_15 () (_ BitVec 64))
(declare-fun temp561_16 () (_ BitVec 64))
(declare-fun temp561_17 () (_ BitVec 64))
(declare-fun temp561_18 () (_ BitVec 64))
(declare-fun temp561_19 () (_ BitVec 64))
(declare-fun temp561_20 () (_ BitVec 64))
(declare-fun temp561_21 () (_ BitVec 64))
(declare-fun temp561_22 () (_ BitVec 64))
(declare-fun temp561_23 () (_ BitVec 64))
(declare-fun temp561_24 () (_ BitVec 64))
(declare-fun temp561_25 () (_ BitVec 64))
(declare-fun temp561_26 () (_ BitVec 64))
(declare-fun temp561_27 () (_ BitVec 64))
(declare-fun temp561_28 () (_ BitVec 64))
(declare-fun temp561_29 () (_ BitVec 64))
(declare-fun temp561_30 () (_ BitVec 64))
(declare-fun temp561_31 () (_ BitVec 64))
(declare-fun temp561_32 () (_ BitVec 64))
(declare-fun temp561_33 () (_ BitVec 64))
(declare-fun temp561_34 () (_ BitVec 64))
(declare-fun temp561_35 () (_ BitVec 64))
(declare-fun temp561_36 () (_ BitVec 64))
(declare-fun temp561_37 () (_ BitVec 64))
(declare-fun temp561_38 () (_ BitVec 64))
(declare-fun temp561_39 () (_ BitVec 64))
(declare-fun temp561_40 () (_ BitVec 64))
(declare-fun temp561_41 () (_ BitVec 64))
(declare-fun temp561_42 () (_ BitVec 64))
(declare-fun temp561_43 () (_ BitVec 64))
(declare-fun temp561_44 () (_ BitVec 64))
(declare-fun temp561_45 () (_ BitVec 64))
(declare-fun temp561_46 () (_ BitVec 64))
(declare-fun temp561_47 () (_ BitVec 64))
(declare-fun temp561_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp561_49 () (_ BitVec 64))
(declare-fun temp561_50 () (_ BitVec 64))
(declare-fun temp561_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp561_52 () (_ BitVec 64))
(declare-fun temp561_53 () (_ BitVec 64))
(declare-fun temp561_54 () (_ BitVec 64))
(declare-fun temp561_55 () (_ BitVec 64))
(declare-fun temp561_56 () (_ BitVec 64))
(declare-fun temp561_57 () (_ BitVec 64))
(declare-fun temp561_58 () (_ BitVec 64))
(declare-fun temp561_59 () (_ BitVec 64))
(declare-fun temp561_60 () (_ BitVec 64))
(declare-fun temp561_61 () (_ BitVec 64))
(declare-fun temp561_62 () (_ BitVec 64))
(declare-fun temp561_63 () (_ BitVec 64))
(declare-fun temp561_64 () (_ BitVec 64))
(declare-fun temp561_65 () (_ BitVec 64))
(declare-fun temp561_66 () (_ BitVec 64))
(declare-fun temp561_67 () (_ BitVec 64))
(declare-fun temp561_68 () (_ BitVec 64))
(declare-fun temp561_69 () (_ BitVec 64))
(declare-fun temp561_70 () (_ BitVec 64))
(declare-fun temp561_71 () (_ BitVec 64))
(declare-fun temp561_72 () (_ BitVec 64))
(declare-fun temp561_73 () (_ BitVec 64))
(declare-fun temp561_74 () (_ BitVec 64))
(declare-fun temp561_75 () (_ BitVec 64))
(declare-fun temp561_76 () (_ BitVec 64))
(declare-fun temp561_77 () (_ BitVec 64))
(declare-fun temp561_78 () (_ BitVec 64))
(declare-fun temp561_79 () (_ BitVec 64))
(declare-fun temp561_80 () (_ BitVec 64))
(declare-fun temp561_81 () (_ BitVec 64))
(declare-fun temp561_82 () (_ BitVec 64))
(declare-fun temp561_83 () (_ BitVec 64))
(declare-fun temp561_84 () (_ BitVec 64))
(declare-fun temp561_85 () (_ BitVec 64))
(declare-fun temp561_86 () (_ BitVec 64))
(declare-fun temp561_87 () (_ BitVec 64))
(declare-fun temp561_88 () (_ BitVec 64))
(declare-fun temp561_89 () (_ BitVec 64))
(declare-fun temp561_90 () (_ BitVec 64))
(declare-fun temp561_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp561_92 () (_ BitVec 64))
(declare-fun temp561_93 () (_ BitVec 64))
(declare-fun temp561_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp561_95 () (_ BitVec 64))
(declare-fun temp561_96 () (_ BitVec 64))
(declare-fun temp561_97 () (_ BitVec 64))
(declare-fun temp561_98 () (_ BitVec 64))
(declare-fun temp561_99 () (_ BitVec 64))
(declare-fun temp561_100 () (_ BitVec 64))
(declare-fun temp561_101 () (_ BitVec 64))
(declare-fun temp561_102 () (_ BitVec 64))
(declare-fun temp561_103 () (_ BitVec 64))
(declare-fun temp561_104 () (_ BitVec 64))
(declare-fun temp561_105 () (_ BitVec 64))
(declare-fun temp561_106 () (_ BitVec 64))
(declare-fun temp561_107 () (_ BitVec 64))
(declare-fun temp561_108 () (_ BitVec 64))
(declare-fun temp561_109 () (_ BitVec 64))
(declare-fun temp561_110 () (_ BitVec 64))
(declare-fun temp561_111 () (_ BitVec 64))
(declare-fun temp561_112 () (_ BitVec 64))
(declare-fun temp561_113 () (_ BitVec 64))
(declare-fun temp561_114 () (_ BitVec 64))
(declare-fun temp561_115 () (_ BitVec 64))
(declare-fun temp561_116 () (_ BitVec 64))
(declare-fun temp561_117 () (_ BitVec 64))
(declare-fun temp561_118 () (_ BitVec 64))
(declare-fun temp561_119 () (_ BitVec 64))
(declare-fun temp561_120 () (_ BitVec 64))
(declare-fun temp561_121 () (_ BitVec 64))
(declare-fun temp561_122 () (_ BitVec 64))
(declare-fun temp561_123 () (_ BitVec 64))
(declare-fun temp561_124 () (_ BitVec 64))
(declare-fun temp561_125 () (_ BitVec 64))
(declare-fun temp561_126 () (_ BitVec 64))
(declare-fun temp561_127 () (_ BitVec 64))
(declare-fun temp561_128 () (_ BitVec 64))
(declare-fun temp561_129 () (_ BitVec 64))
(declare-fun temp561_130 () (_ BitVec 64))
(declare-fun temp561_131 () (_ BitVec 64))
(declare-fun temp561_132 () (_ BitVec 64))
(declare-fun temp561_133 () (_ BitVec 64))
(declare-fun temp561_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp561_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp561_136 () (_ BitVec 64))
(declare-fun temp561_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp561_138 () (_ BitVec 64))
(declare-fun temp561_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp561_140 () (_ BitVec 64))
(declare-fun temp561_141 () (_ BitVec 64))
(declare-fun temp561_142 () (_ BitVec 64))
(declare-fun temp561_143 () (_ BitVec 64))
(declare-fun temp561_144 () (_ BitVec 64))
(declare-fun temp561_145 () (_ BitVec 64))
(declare-fun temp561_146 () (_ BitVec 64))
(declare-fun temp561_147 () (_ BitVec 64))
(declare-fun temp561_148 () (_ BitVec 64))
(declare-fun temp561_149 () (_ BitVec 64))
(declare-fun temp561_150 () (_ BitVec 64))
(declare-fun temp561_151 () (_ BitVec 64))
(declare-fun temp561_152 () (_ BitVec 64))
(declare-fun temp561_153 () (_ BitVec 64))
(declare-fun temp561_154 () (_ BitVec 64))
(declare-fun temp561_155 () (_ BitVec 64))
(declare-fun temp561_157 () (_ BitVec 64))
(declare-fun temp561_158 () (_ BitVec 64))
(declare-fun temp561_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp561_159 () (_ BitVec 64))
(declare-fun temp561_160 () (_ BitVec 64))
(declare-fun temp561_162 () (_ BitVec 64))
(declare-fun temp561_163 () (_ BitVec 64))
(declare-fun temp561_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp561_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp561_165 () (_ BitVec 64))
(declare-fun temp561_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp561_167 () (_ BitVec 64))
(declare-fun temp561_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp561_169 () (_ BitVec 64))
(declare-fun temp561_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp561_171 () (_ BitVec 64))
(declare-fun temp561_172 () (_ BitVec 64))
(declare-fun temp561_173 () (_ BitVec 64))
(declare-fun temp561_174 () (_ BitVec 64))
(declare-fun temp561_175 () (_ BitVec 64))
(declare-fun temp561_176 () (_ BitVec 64))
(declare-fun temp561_177 () (_ BitVec 64))
(declare-fun temp561_178 () (_ BitVec 64))
(declare-fun temp561_179 () (_ BitVec 64))
(declare-fun temp561_180 () (_ BitVec 64))
(declare-fun temp561_181 () (_ BitVec 64))
(declare-fun temp561_182 () (_ BitVec 64))
(declare-fun temp561_183 () (_ BitVec 64))
(declare-fun temp561_184 () (_ BitVec 64))
(declare-fun temp561_185 () (_ BitVec 64))
(declare-fun temp561_186 () (_ BitVec 64))
(declare-fun temp561_187 () (_ BitVec 64))
(declare-fun temp561_188 () (_ BitVec 64))
(declare-fun temp561_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp561_190 () (_ BitVec 64))
(declare-fun temp561_192 () (_ BitVec 64))
(declare-fun temp561_193 () (_ BitVec 64))
(declare-fun temp561_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp561_194 () (_ BitVec 64))
(declare-fun temp561_195 () (_ BitVec 64))
(declare-fun temp561_197 () (_ BitVec 64))
(declare-fun temp561_198 () (_ BitVec 64))
(declare-fun temp561_196 () (_ BitVec 64))
(declare-fun temp561_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp561_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp561_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp561_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp561_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp561_204 () (_ BitVec 64))
(declare-fun temp561_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp561_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp561_207 () (_ BitVec 64))
(declare-fun temp561_208 () (_ BitVec 64))
(declare-fun temp561_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp561_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp561_211 () (_ BitVec 64))
(declare-fun temp561_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp561_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp561_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp561_215 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp561_216 () (_ BitVec 64))
(declare-fun temp561_217 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun temp561_218 () (_ BitVec 64))
(assert (= temp561_1 #x0000000000000001))
(assert (= var77203 temp561_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp561_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp561_2)))
(assert (= temp561_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp561_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp561_4 #x0000000000000000))
(assert (= var210941 temp561_4))
(assert (= temp561_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp561_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp561_6 #x0000000000000000))
(assert (= var210986 temp561_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp561_7 #x0000000000000000))
(assert (= temp561_8 temp561_7))
(assert (= temp561_9 (select ARGNAME_padding_NAMEEND_VAL temp561_8)))
(assert (= temp561_10 #x0000000000000001))
(assert (= temp561_11 temp561_10))
(assert (= temp561_12 (select ARGNAME_padding_NAMEEND_VAL temp561_11)))
(assert (= temp561_13 #x0000000000000002))
(assert (= temp561_14 temp561_13))
(assert (= temp561_15 (select ARGNAME_padding_NAMEEND_VAL temp561_14)))
(assert (= temp561_16 #x0000000000000003))
(assert (= temp561_17 temp561_16))
(assert (= temp561_18 (select ARGNAME_padding_NAMEEND_VAL temp561_17)))
(assert (= temp561_19 #x0000000000000004))
(assert (= temp561_20 temp561_19))
(assert (= temp561_21 (select ARGNAME_padding_NAMEEND_VAL temp561_20)))
(assert (= temp561_22 #x0000000000000005))
(assert (= temp561_23 temp561_22))
(assert (= temp561_24 (select ARGNAME_padding_NAMEEND_VAL temp561_23)))
(assert (= temp561_25 #x0000000000000000))
(assert (= temp561_26 #x0000000000000000))
(assert (= temp561_27 temp561_26))
(assert (= temp561_28 (select ARGNAME_padding_NAMEEND_VAL temp561_27)))
(assert (= temp561_29 #x0000000000000000))
(assert (= temp561_30 #x0000000000000001))
(assert (= temp561_31 temp561_30))
(assert (= temp561_32 (select ARGNAME_padding_NAMEEND_VAL temp561_31)))
(assert (= temp561_33 #x0000000000000000))
(assert (= temp561_34 #x0000000000000002))
(assert (= temp561_35 temp561_34))
(assert (= temp561_36 (select ARGNAME_padding_NAMEEND_VAL temp561_35)))
(assert (= temp561_37 #x0000000000000000))
(assert (= temp561_38 #x0000000000000003))
(assert (= temp561_39 temp561_38))
(assert (= temp561_40 (select ARGNAME_padding_NAMEEND_VAL temp561_39)))
(assert (= temp561_41 #x0000000000000000))
(assert (= temp561_42 #x0000000000000004))
(assert (= temp561_43 temp561_42))
(assert (= temp561_44 (select ARGNAME_padding_NAMEEND_VAL temp561_43)))
(assert (= temp561_45 #x0000000000000000))
(assert (= temp561_46 #x0000000000000005))
(assert (= temp561_47 temp561_46))
(assert (= temp561_48 (select ARGNAME_padding_NAMEEND_VAL temp561_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp561_28 temp561_25)
             (bvslt temp561_32 temp561_29)
             (bvslt temp561_36 temp561_33)
             (bvslt temp561_40 temp561_37)
             (bvslt temp561_44 temp561_41)
             (bvslt temp561_48 temp561_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp561_49 #x0000000000000000))
(assert (= var1191714 temp561_49))
(assert (= temp561_50 #x0000000000000000))
(assert (= temp561_51 temp561_50))
(assert (= temp561_52 (select ARGNAME_output_padding_NAMEEND_VAL temp561_51)))
(assert (= temp561_53 #x0000000000000001))
(assert (= temp561_54 temp561_53))
(assert (= temp561_55 (select ARGNAME_output_padding_NAMEEND_VAL temp561_54)))
(assert (= temp561_56 #x0000000000000002))
(assert (= temp561_57 temp561_56))
(assert (= temp561_58 (select ARGNAME_output_padding_NAMEEND_VAL temp561_57)))
(assert (= temp561_59 #x0000000000000003))
(assert (= temp561_60 temp561_59))
(assert (= temp561_61 (select ARGNAME_output_padding_NAMEEND_VAL temp561_60)))
(assert (= temp561_62 #x0000000000000004))
(assert (= temp561_63 temp561_62))
(assert (= temp561_64 (select ARGNAME_output_padding_NAMEEND_VAL temp561_63)))
(assert (= temp561_65 #x0000000000000005))
(assert (= temp561_66 temp561_65))
(assert (= temp561_67 (select ARGNAME_output_padding_NAMEEND_VAL temp561_66)))
(assert (= temp561_68 #x0000000000000000))
(assert (= temp561_69 #x0000000000000000))
(assert (= temp561_70 temp561_69))
(assert (= temp561_71 (select ARGNAME_output_padding_NAMEEND_VAL temp561_70)))
(assert (= temp561_72 #x0000000000000000))
(assert (= temp561_73 #x0000000000000001))
(assert (= temp561_74 temp561_73))
(assert (= temp561_75 (select ARGNAME_output_padding_NAMEEND_VAL temp561_74)))
(assert (= temp561_76 #x0000000000000000))
(assert (= temp561_77 #x0000000000000002))
(assert (= temp561_78 temp561_77))
(assert (= temp561_79 (select ARGNAME_output_padding_NAMEEND_VAL temp561_78)))
(assert (= temp561_80 #x0000000000000000))
(assert (= temp561_81 #x0000000000000003))
(assert (= temp561_82 temp561_81))
(assert (= temp561_83 (select ARGNAME_output_padding_NAMEEND_VAL temp561_82)))
(assert (= temp561_84 #x0000000000000000))
(assert (= temp561_85 #x0000000000000004))
(assert (= temp561_86 temp561_85))
(assert (= temp561_87 (select ARGNAME_output_padding_NAMEEND_VAL temp561_86)))
(assert (= temp561_88 #x0000000000000000))
(assert (= temp561_89 #x0000000000000005))
(assert (= temp561_90 temp561_89))
(assert (= temp561_91 (select ARGNAME_output_padding_NAMEEND_VAL temp561_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp561_71 temp561_68)
             (bvslt temp561_75 temp561_72)
             (bvslt temp561_79 temp561_76)
             (bvslt temp561_83 temp561_80)
             (bvslt temp561_87 temp561_84)
             (bvslt temp561_91 temp561_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp561_92 #x0000000000000000))
(assert (= var1191725 temp561_92))
(assert (= temp561_93 #x0000000000000000))
(assert (= temp561_94 temp561_93))
(assert (= temp561_95 (select ARGNAME_stride_NAMEEND_VAL temp561_94)))
(assert (= temp561_96 #x0000000000000001))
(assert (= temp561_97 temp561_96))
(assert (= temp561_98 (select ARGNAME_stride_NAMEEND_VAL temp561_97)))
(assert (= temp561_99 #x0000000000000002))
(assert (= temp561_100 temp561_99))
(assert (= temp561_101 (select ARGNAME_stride_NAMEEND_VAL temp561_100)))
(assert (= temp561_102 #x0000000000000003))
(assert (= temp561_103 temp561_102))
(assert (= temp561_104 (select ARGNAME_stride_NAMEEND_VAL temp561_103)))
(assert (= temp561_105 #x0000000000000004))
(assert (= temp561_106 temp561_105))
(assert (= temp561_107 (select ARGNAME_stride_NAMEEND_VAL temp561_106)))
(assert (= temp561_108 #x0000000000000005))
(assert (= temp561_109 temp561_108))
(assert (= temp561_110 (select ARGNAME_stride_NAMEEND_VAL temp561_109)))
(assert (= temp561_111 #x0000000000000000))
(assert (= temp561_112 #x0000000000000000))
(assert (= temp561_113 temp561_112))
(assert (= temp561_114 (select ARGNAME_stride_NAMEEND_VAL temp561_113)))
(assert (= temp561_115 #x0000000000000000))
(assert (= temp561_116 #x0000000000000001))
(assert (= temp561_117 temp561_116))
(assert (= temp561_118 (select ARGNAME_stride_NAMEEND_VAL temp561_117)))
(assert (= temp561_119 #x0000000000000000))
(assert (= temp561_120 #x0000000000000002))
(assert (= temp561_121 temp561_120))
(assert (= temp561_122 (select ARGNAME_stride_NAMEEND_VAL temp561_121)))
(assert (= temp561_123 #x0000000000000000))
(assert (= temp561_124 #x0000000000000003))
(assert (= temp561_125 temp561_124))
(assert (= temp561_126 (select ARGNAME_stride_NAMEEND_VAL temp561_125)))
(assert (= temp561_127 #x0000000000000000))
(assert (= temp561_128 #x0000000000000004))
(assert (= temp561_129 temp561_128))
(assert (= temp561_130 (select ARGNAME_stride_NAMEEND_VAL temp561_129)))
(assert (= temp561_131 #x0000000000000000))
(assert (= temp561_132 #x0000000000000005))
(assert (= temp561_133 temp561_132))
(assert (= temp561_134 (select ARGNAME_stride_NAMEEND_VAL temp561_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp561_114 temp561_111)
             (bvsle temp561_118 temp561_115)
             (bvsle temp561_122 temp561_119)
             (bvsle temp561_126 temp561_123)
             (bvsle temp561_130 temp561_127)
             (bvsle temp561_134 temp561_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp561_135 #x0000000000000000))
(assert (= var1191735 temp561_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp561_136 #x0000000000000001))
(assert (= var1191747 temp561_136))
(assert (= temp561_137 #x0000000000000000))
(assert (= var1179826 temp561_137))
(assert (= temp561_138 #x0000000000000000))
(assert (= temp561_139 temp561_138))
(assert (= temp561_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp561_139)))
(assert (= temp561_141 #x0000000000000001))
(assert (= temp561_142 temp561_141))
(assert (= temp561_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp561_142)))
(assert (= temp561_144 #x0000000000000002))
(assert (= temp561_145 temp561_144))
(assert (= temp561_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp561_145)))
(assert (= temp561_147 #x0000000000000003))
(assert (= temp561_148 temp561_147))
(assert (= temp561_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp561_148)))
(assert (= temp561_150 #x0000000000000004))
(assert (= temp561_151 temp561_150))
(assert (= temp561_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp561_151)))
(assert (= temp561_153 #x0000000000000005))
(assert (= temp561_154 temp561_153))
(assert (= temp561_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp561_154)))
(assert (= temp561_157 var1179826))
(assert (= temp561_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp561_157)))
(assert (= temp561_156 temp561_158))
(assert (= var1191780
   (ite (bvslt temp561_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp561_159 #x0000000000000000))
(assert (= var1191780 temp561_159))
(assert (= temp561_160 #x0000000000000000))
(assert (= var1179826 temp561_160))
(assert (= temp561_162 var1179826))
(assert (= temp561_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp561_162)))
(assert (= temp561_161 temp561_163))
(assert (= var1191802 (bvsmod temp561_161 ARGNAME_groups_NAMEEND)))
(assert (= temp561_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp561_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp561_165 #x0000000000000001))
(assert (= var1191803 temp561_165))
(assert (= temp561_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp561_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp561_167 #x0000000000000001))
(assert (= var1191823 temp561_167))
(assert (= temp561_168 #x0000000000000001))
(assert (= var1180714 temp561_168))
(assert (= temp561_169 #x0000000000000000))
(assert (= temp561_170 temp561_169))
(assert (= temp561_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp561_170)))
(assert (= temp561_172 #x0000000000000001))
(assert (= temp561_173 temp561_172))
(assert (= temp561_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp561_173)))
(assert (= temp561_175 #x0000000000000002))
(assert (= temp561_176 temp561_175))
(assert (= temp561_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp561_176)))
(assert (= temp561_178 #x0000000000000003))
(assert (= temp561_179 temp561_178))
(assert (= temp561_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp561_179)))
(assert (= temp561_181 #x0000000000000004))
(assert (= temp561_182 temp561_181))
(assert (= temp561_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp561_182)))
(assert (= temp561_184 #x0000000000000005))
(assert (= temp561_185 temp561_184))
(assert (= temp561_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp561_185)))
(assert (= temp561_187 #x0000000000000000))
(assert (= temp561_188
   (ite (bvslt var1180714 temp561_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp561_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp561_188)))
(assert (= var1191831 temp561_189))
(assert (bvslt (ite (bvslt var1180714 temp561_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp561_190 #x0000000000000001))
(assert (= var1180714 temp561_190))
(assert (= temp561_192 var1180714))
(assert (= temp561_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp561_192)))
(assert (= temp561_191 temp561_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp561_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp561_194 #x0000000000000001))
(assert (= var1191836 temp561_194))
(assert (= temp561_195 #x0000000000000000))
(assert (= var1179826 temp561_195))
(assert (= temp561_197 var1179826))
(assert (= temp561_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp561_197)))
(assert (= temp561_196 temp561_198))
(assert (= temp561_199 #x0000000000000002))
(assert (= var1586025 temp561_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp561_200 #x0000000000000001))
(assert (= var1191993 temp561_200))
(assert (= temp561_201 #x0000000000000001))
(assert (= var2700303 temp561_201))
(assert (= temp561_202 #x0000000000000001))
(assert (= var2962447 temp561_202))
(assert (= temp561_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp561_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp561_204 #x0000000000000001))
(assert (= var211058 temp561_204))
(assert (= temp561_205 #x0000000000000001))
(assert (= var211188 temp561_205))
(assert (= var3879401 var211188))
(assert (= temp561_206 #x0000000000000000))
(assert (= var3866802 temp561_206))
(assert (= temp561_207 #x0000000000000000))
(assert (= temp561_208
   (ite (bvslt var3866802 temp561_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp561_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp561_208)))
(assert (= var3879420 temp561_209))
(assert (bvslt (ite (bvslt var3866802 temp561_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp561_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp561_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp561_211 #x0000000000000001))
(assert (= var3879421 temp561_211))
(assert (= temp561_212 #x0000000000000000))
(assert (= var4079423 temp561_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp561_213 #x0000000000000002))
(assert (= var4208259 temp561_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp561_214 #x0000000000000000))
(assert (= var4273820 temp561_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp561_215 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp561_215)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp561_216 #x0000000000000000))
(assert (= var212414 temp561_216))
(assert (= temp561_217 #x0000000000000002))
(assert (= var5060227 temp561_217))
(assert (= var5125772 var5060227))
(assert (= temp561_218 #x0000000000000001))
(assert (= var211058 temp561_218))
(model-add temp561_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp561_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp561_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp561_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





