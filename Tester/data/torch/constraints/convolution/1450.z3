(declare-fun temp10728_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10728_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10728_3 () (_ BitVec 64))
(declare-fun temp10728_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10728_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10728_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10728_7 () (_ BitVec 64))
(declare-fun temp10728_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10728_9 () (_ BitVec 64))
(declare-fun temp10728_10 () (_ BitVec 64))
(declare-fun temp10728_11 () (_ BitVec 64))
(declare-fun temp10728_12 () (_ BitVec 64))
(declare-fun temp10728_13 () (_ BitVec 64))
(declare-fun temp10728_14 () (_ BitVec 64))
(declare-fun temp10728_15 () (_ BitVec 64))
(declare-fun temp10728_16 () (_ BitVec 64))
(declare-fun temp10728_17 () (_ BitVec 64))
(declare-fun temp10728_18 () (_ BitVec 64))
(declare-fun temp10728_19 () (_ BitVec 64))
(declare-fun temp10728_20 () (_ BitVec 64))
(declare-fun temp10728_21 () (_ BitVec 64))
(declare-fun temp10728_22 () (_ BitVec 64))
(declare-fun temp10728_23 () (_ BitVec 64))
(declare-fun temp10728_24 () (_ BitVec 64))
(declare-fun temp10728_25 () (_ BitVec 64))
(declare-fun temp10728_26 () (_ BitVec 64))
(declare-fun temp10728_27 () (_ BitVec 64))
(declare-fun temp10728_28 () (_ BitVec 64))
(declare-fun temp10728_29 () (_ BitVec 64))
(declare-fun temp10728_30 () (_ BitVec 64))
(declare-fun temp10728_31 () (_ BitVec 64))
(declare-fun temp10728_32 () (_ BitVec 64))
(declare-fun temp10728_33 () (_ BitVec 64))
(declare-fun temp10728_34 () (_ BitVec 64))
(declare-fun temp10728_35 () (_ BitVec 64))
(declare-fun temp10728_36 () (_ BitVec 64))
(declare-fun temp10728_37 () (_ BitVec 64))
(declare-fun temp10728_38 () (_ BitVec 64))
(declare-fun temp10728_39 () (_ BitVec 64))
(declare-fun temp10728_40 () (_ BitVec 64))
(declare-fun temp10728_41 () (_ BitVec 64))
(declare-fun temp10728_42 () (_ BitVec 64))
(declare-fun temp10728_43 () (_ BitVec 64))
(declare-fun temp10728_44 () (_ BitVec 64))
(declare-fun temp10728_45 () (_ BitVec 64))
(declare-fun temp10728_46 () (_ BitVec 64))
(declare-fun temp10728_47 () (_ BitVec 64))
(declare-fun temp10728_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10728_49 () (_ BitVec 64))
(declare-fun temp10728_50 () (_ BitVec 64))
(declare-fun temp10728_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10728_52 () (_ BitVec 64))
(declare-fun temp10728_53 () (_ BitVec 64))
(declare-fun temp10728_54 () (_ BitVec 64))
(declare-fun temp10728_55 () (_ BitVec 64))
(declare-fun temp10728_56 () (_ BitVec 64))
(declare-fun temp10728_57 () (_ BitVec 64))
(declare-fun temp10728_58 () (_ BitVec 64))
(declare-fun temp10728_59 () (_ BitVec 64))
(declare-fun temp10728_60 () (_ BitVec 64))
(declare-fun temp10728_61 () (_ BitVec 64))
(declare-fun temp10728_62 () (_ BitVec 64))
(declare-fun temp10728_63 () (_ BitVec 64))
(declare-fun temp10728_64 () (_ BitVec 64))
(declare-fun temp10728_65 () (_ BitVec 64))
(declare-fun temp10728_66 () (_ BitVec 64))
(declare-fun temp10728_67 () (_ BitVec 64))
(declare-fun temp10728_68 () (_ BitVec 64))
(declare-fun temp10728_69 () (_ BitVec 64))
(declare-fun temp10728_70 () (_ BitVec 64))
(declare-fun temp10728_71 () (_ BitVec 64))
(declare-fun temp10728_72 () (_ BitVec 64))
(declare-fun temp10728_73 () (_ BitVec 64))
(declare-fun temp10728_74 () (_ BitVec 64))
(declare-fun temp10728_75 () (_ BitVec 64))
(declare-fun temp10728_76 () (_ BitVec 64))
(declare-fun temp10728_77 () (_ BitVec 64))
(declare-fun temp10728_78 () (_ BitVec 64))
(declare-fun temp10728_79 () (_ BitVec 64))
(declare-fun temp10728_80 () (_ BitVec 64))
(declare-fun temp10728_81 () (_ BitVec 64))
(declare-fun temp10728_82 () (_ BitVec 64))
(declare-fun temp10728_83 () (_ BitVec 64))
(declare-fun temp10728_84 () (_ BitVec 64))
(declare-fun temp10728_85 () (_ BitVec 64))
(declare-fun temp10728_86 () (_ BitVec 64))
(declare-fun temp10728_87 () (_ BitVec 64))
(declare-fun temp10728_88 () (_ BitVec 64))
(declare-fun temp10728_89 () (_ BitVec 64))
(declare-fun temp10728_90 () (_ BitVec 64))
(declare-fun temp10728_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10728_92 () (_ BitVec 64))
(declare-fun temp10728_93 () (_ BitVec 64))
(declare-fun temp10728_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10728_95 () (_ BitVec 64))
(declare-fun temp10728_96 () (_ BitVec 64))
(declare-fun temp10728_97 () (_ BitVec 64))
(declare-fun temp10728_98 () (_ BitVec 64))
(declare-fun temp10728_99 () (_ BitVec 64))
(declare-fun temp10728_100 () (_ BitVec 64))
(declare-fun temp10728_101 () (_ BitVec 64))
(declare-fun temp10728_102 () (_ BitVec 64))
(declare-fun temp10728_103 () (_ BitVec 64))
(declare-fun temp10728_104 () (_ BitVec 64))
(declare-fun temp10728_105 () (_ BitVec 64))
(declare-fun temp10728_106 () (_ BitVec 64))
(declare-fun temp10728_107 () (_ BitVec 64))
(declare-fun temp10728_108 () (_ BitVec 64))
(declare-fun temp10728_109 () (_ BitVec 64))
(declare-fun temp10728_110 () (_ BitVec 64))
(declare-fun temp10728_111 () (_ BitVec 64))
(declare-fun temp10728_112 () (_ BitVec 64))
(declare-fun temp10728_113 () (_ BitVec 64))
(declare-fun temp10728_114 () (_ BitVec 64))
(declare-fun temp10728_115 () (_ BitVec 64))
(declare-fun temp10728_116 () (_ BitVec 64))
(declare-fun temp10728_117 () (_ BitVec 64))
(declare-fun temp10728_118 () (_ BitVec 64))
(declare-fun temp10728_119 () (_ BitVec 64))
(declare-fun temp10728_120 () (_ BitVec 64))
(declare-fun temp10728_121 () (_ BitVec 64))
(declare-fun temp10728_122 () (_ BitVec 64))
(declare-fun temp10728_123 () (_ BitVec 64))
(declare-fun temp10728_124 () (_ BitVec 64))
(declare-fun temp10728_125 () (_ BitVec 64))
(declare-fun temp10728_126 () (_ BitVec 64))
(declare-fun temp10728_127 () (_ BitVec 64))
(declare-fun temp10728_128 () (_ BitVec 64))
(declare-fun temp10728_129 () (_ BitVec 64))
(declare-fun temp10728_130 () (_ BitVec 64))
(declare-fun temp10728_131 () (_ BitVec 64))
(declare-fun temp10728_132 () (_ BitVec 64))
(declare-fun temp10728_133 () (_ BitVec 64))
(declare-fun temp10728_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10728_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10728_136 () (_ BitVec 64))
(declare-fun temp10728_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10728_138 () (_ BitVec 64))
(declare-fun temp10728_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10728_140 () (_ BitVec 64))
(declare-fun temp10728_141 () (_ BitVec 64))
(declare-fun temp10728_142 () (_ BitVec 64))
(declare-fun temp10728_143 () (_ BitVec 64))
(declare-fun temp10728_144 () (_ BitVec 64))
(declare-fun temp10728_145 () (_ BitVec 64))
(declare-fun temp10728_146 () (_ BitVec 64))
(declare-fun temp10728_147 () (_ BitVec 64))
(declare-fun temp10728_148 () (_ BitVec 64))
(declare-fun temp10728_149 () (_ BitVec 64))
(declare-fun temp10728_150 () (_ BitVec 64))
(declare-fun temp10728_151 () (_ BitVec 64))
(declare-fun temp10728_152 () (_ BitVec 64))
(declare-fun temp10728_153 () (_ BitVec 64))
(declare-fun temp10728_154 () (_ BitVec 64))
(declare-fun temp10728_155 () (_ BitVec 64))
(declare-fun temp10728_157 () (_ BitVec 64))
(declare-fun temp10728_158 () (_ BitVec 64))
(declare-fun temp10728_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10728_159 () (_ BitVec 64))
(declare-fun temp10728_160 () (_ BitVec 64))
(declare-fun temp10728_162 () (_ BitVec 64))
(declare-fun temp10728_163 () (_ BitVec 64))
(declare-fun temp10728_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10728_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10728_165 () (_ BitVec 64))
(declare-fun temp10728_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10728_167 () (_ BitVec 64))
(declare-fun temp10728_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10728_169 () (_ BitVec 64))
(declare-fun temp10728_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10728_171 () (_ BitVec 64))
(declare-fun temp10728_172 () (_ BitVec 64))
(declare-fun temp10728_173 () (_ BitVec 64))
(declare-fun temp10728_174 () (_ BitVec 64))
(declare-fun temp10728_175 () (_ BitVec 64))
(declare-fun temp10728_176 () (_ BitVec 64))
(declare-fun temp10728_177 () (_ BitVec 64))
(declare-fun temp10728_178 () (_ BitVec 64))
(declare-fun temp10728_179 () (_ BitVec 64))
(declare-fun temp10728_180 () (_ BitVec 64))
(declare-fun temp10728_181 () (_ BitVec 64))
(declare-fun temp10728_182 () (_ BitVec 64))
(declare-fun temp10728_183 () (_ BitVec 64))
(declare-fun temp10728_184 () (_ BitVec 64))
(declare-fun temp10728_185 () (_ BitVec 64))
(declare-fun temp10728_186 () (_ BitVec 64))
(declare-fun temp10728_187 () (_ BitVec 64))
(declare-fun temp10728_188 () (_ BitVec 64))
(declare-fun temp10728_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10728_190 () (_ BitVec 64))
(declare-fun temp10728_192 () (_ BitVec 64))
(declare-fun temp10728_193 () (_ BitVec 64))
(declare-fun temp10728_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10728_194 () (_ BitVec 64))
(declare-fun temp10728_195 () (_ BitVec 64))
(declare-fun temp10728_197 () (_ BitVec 64))
(declare-fun temp10728_198 () (_ BitVec 64))
(declare-fun temp10728_196 () (_ BitVec 64))
(declare-fun temp10728_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10728_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10728_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10728_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10728_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10728_204 () (_ BitVec 64))
(declare-fun temp10728_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10728_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10728_207 () (_ BitVec 64))
(declare-fun temp10728_208 () (_ BitVec 64))
(declare-fun temp10728_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10728_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10728_211 () (_ BitVec 64))
(declare-fun temp10728_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10728_213 () (_ BitVec 64))
(declare-fun temp10728_214 () (_ BitVec 64))
(declare-fun temp10728_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10728_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10728_217 () (_ BitVec 64))
(declare-fun temp10728_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10728_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10728_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var211820 () (_ BitVec 64))
(declare-fun temp10728_221 () (_ BitVec 64))
(declare-fun var211821 () (_ BitVec 64))
(declare-fun temp10728_222 () (_ BitVec 64))
(assert (= temp10728_1 #x0000000000000001))
(assert (= var77203 temp10728_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10728_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10728_2)))
(assert (= temp10728_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10728_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10728_4 #x0000000000000000))
(assert (= var210941 temp10728_4))
(assert (= temp10728_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10728_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10728_6 #x0000000000000000))
(assert (= var210986 temp10728_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10728_7 #x0000000000000000))
(assert (= temp10728_8 temp10728_7))
(assert (= temp10728_9 (select ARGNAME_padding_NAMEEND_VAL temp10728_8)))
(assert (= temp10728_10 #x0000000000000001))
(assert (= temp10728_11 temp10728_10))
(assert (= temp10728_12 (select ARGNAME_padding_NAMEEND_VAL temp10728_11)))
(assert (= temp10728_13 #x0000000000000002))
(assert (= temp10728_14 temp10728_13))
(assert (= temp10728_15 (select ARGNAME_padding_NAMEEND_VAL temp10728_14)))
(assert (= temp10728_16 #x0000000000000003))
(assert (= temp10728_17 temp10728_16))
(assert (= temp10728_18 (select ARGNAME_padding_NAMEEND_VAL temp10728_17)))
(assert (= temp10728_19 #x0000000000000004))
(assert (= temp10728_20 temp10728_19))
(assert (= temp10728_21 (select ARGNAME_padding_NAMEEND_VAL temp10728_20)))
(assert (= temp10728_22 #x0000000000000005))
(assert (= temp10728_23 temp10728_22))
(assert (= temp10728_24 (select ARGNAME_padding_NAMEEND_VAL temp10728_23)))
(assert (= temp10728_25 #x0000000000000000))
(assert (= temp10728_26 #x0000000000000000))
(assert (= temp10728_27 temp10728_26))
(assert (= temp10728_28 (select ARGNAME_padding_NAMEEND_VAL temp10728_27)))
(assert (= temp10728_29 #x0000000000000000))
(assert (= temp10728_30 #x0000000000000001))
(assert (= temp10728_31 temp10728_30))
(assert (= temp10728_32 (select ARGNAME_padding_NAMEEND_VAL temp10728_31)))
(assert (= temp10728_33 #x0000000000000000))
(assert (= temp10728_34 #x0000000000000002))
(assert (= temp10728_35 temp10728_34))
(assert (= temp10728_36 (select ARGNAME_padding_NAMEEND_VAL temp10728_35)))
(assert (= temp10728_37 #x0000000000000000))
(assert (= temp10728_38 #x0000000000000003))
(assert (= temp10728_39 temp10728_38))
(assert (= temp10728_40 (select ARGNAME_padding_NAMEEND_VAL temp10728_39)))
(assert (= temp10728_41 #x0000000000000000))
(assert (= temp10728_42 #x0000000000000004))
(assert (= temp10728_43 temp10728_42))
(assert (= temp10728_44 (select ARGNAME_padding_NAMEEND_VAL temp10728_43)))
(assert (= temp10728_45 #x0000000000000000))
(assert (= temp10728_46 #x0000000000000005))
(assert (= temp10728_47 temp10728_46))
(assert (= temp10728_48 (select ARGNAME_padding_NAMEEND_VAL temp10728_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10728_28 temp10728_25)
             (bvslt temp10728_32 temp10728_29)
             (bvslt temp10728_36 temp10728_33)
             (bvslt temp10728_40 temp10728_37)
             (bvslt temp10728_44 temp10728_41)
             (bvslt temp10728_48 temp10728_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10728_49 #x0000000000000000))
(assert (= var1191714 temp10728_49))
(assert (= temp10728_50 #x0000000000000000))
(assert (= temp10728_51 temp10728_50))
(assert (= temp10728_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10728_51)))
(assert (= temp10728_53 #x0000000000000001))
(assert (= temp10728_54 temp10728_53))
(assert (= temp10728_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10728_54)))
(assert (= temp10728_56 #x0000000000000002))
(assert (= temp10728_57 temp10728_56))
(assert (= temp10728_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10728_57)))
(assert (= temp10728_59 #x0000000000000003))
(assert (= temp10728_60 temp10728_59))
(assert (= temp10728_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10728_60)))
(assert (= temp10728_62 #x0000000000000004))
(assert (= temp10728_63 temp10728_62))
(assert (= temp10728_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10728_63)))
(assert (= temp10728_65 #x0000000000000005))
(assert (= temp10728_66 temp10728_65))
(assert (= temp10728_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10728_66)))
(assert (= temp10728_68 #x0000000000000000))
(assert (= temp10728_69 #x0000000000000000))
(assert (= temp10728_70 temp10728_69))
(assert (= temp10728_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10728_70)))
(assert (= temp10728_72 #x0000000000000000))
(assert (= temp10728_73 #x0000000000000001))
(assert (= temp10728_74 temp10728_73))
(assert (= temp10728_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10728_74)))
(assert (= temp10728_76 #x0000000000000000))
(assert (= temp10728_77 #x0000000000000002))
(assert (= temp10728_78 temp10728_77))
(assert (= temp10728_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10728_78)))
(assert (= temp10728_80 #x0000000000000000))
(assert (= temp10728_81 #x0000000000000003))
(assert (= temp10728_82 temp10728_81))
(assert (= temp10728_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10728_82)))
(assert (= temp10728_84 #x0000000000000000))
(assert (= temp10728_85 #x0000000000000004))
(assert (= temp10728_86 temp10728_85))
(assert (= temp10728_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10728_86)))
(assert (= temp10728_88 #x0000000000000000))
(assert (= temp10728_89 #x0000000000000005))
(assert (= temp10728_90 temp10728_89))
(assert (= temp10728_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10728_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10728_71 temp10728_68)
             (bvslt temp10728_75 temp10728_72)
             (bvslt temp10728_79 temp10728_76)
             (bvslt temp10728_83 temp10728_80)
             (bvslt temp10728_87 temp10728_84)
             (bvslt temp10728_91 temp10728_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10728_92 #x0000000000000000))
(assert (= var1191725 temp10728_92))
(assert (= temp10728_93 #x0000000000000000))
(assert (= temp10728_94 temp10728_93))
(assert (= temp10728_95 (select ARGNAME_stride_NAMEEND_VAL temp10728_94)))
(assert (= temp10728_96 #x0000000000000001))
(assert (= temp10728_97 temp10728_96))
(assert (= temp10728_98 (select ARGNAME_stride_NAMEEND_VAL temp10728_97)))
(assert (= temp10728_99 #x0000000000000002))
(assert (= temp10728_100 temp10728_99))
(assert (= temp10728_101 (select ARGNAME_stride_NAMEEND_VAL temp10728_100)))
(assert (= temp10728_102 #x0000000000000003))
(assert (= temp10728_103 temp10728_102))
(assert (= temp10728_104 (select ARGNAME_stride_NAMEEND_VAL temp10728_103)))
(assert (= temp10728_105 #x0000000000000004))
(assert (= temp10728_106 temp10728_105))
(assert (= temp10728_107 (select ARGNAME_stride_NAMEEND_VAL temp10728_106)))
(assert (= temp10728_108 #x0000000000000005))
(assert (= temp10728_109 temp10728_108))
(assert (= temp10728_110 (select ARGNAME_stride_NAMEEND_VAL temp10728_109)))
(assert (= temp10728_111 #x0000000000000000))
(assert (= temp10728_112 #x0000000000000000))
(assert (= temp10728_113 temp10728_112))
(assert (= temp10728_114 (select ARGNAME_stride_NAMEEND_VAL temp10728_113)))
(assert (= temp10728_115 #x0000000000000000))
(assert (= temp10728_116 #x0000000000000001))
(assert (= temp10728_117 temp10728_116))
(assert (= temp10728_118 (select ARGNAME_stride_NAMEEND_VAL temp10728_117)))
(assert (= temp10728_119 #x0000000000000000))
(assert (= temp10728_120 #x0000000000000002))
(assert (= temp10728_121 temp10728_120))
(assert (= temp10728_122 (select ARGNAME_stride_NAMEEND_VAL temp10728_121)))
(assert (= temp10728_123 #x0000000000000000))
(assert (= temp10728_124 #x0000000000000003))
(assert (= temp10728_125 temp10728_124))
(assert (= temp10728_126 (select ARGNAME_stride_NAMEEND_VAL temp10728_125)))
(assert (= temp10728_127 #x0000000000000000))
(assert (= temp10728_128 #x0000000000000004))
(assert (= temp10728_129 temp10728_128))
(assert (= temp10728_130 (select ARGNAME_stride_NAMEEND_VAL temp10728_129)))
(assert (= temp10728_131 #x0000000000000000))
(assert (= temp10728_132 #x0000000000000005))
(assert (= temp10728_133 temp10728_132))
(assert (= temp10728_134 (select ARGNAME_stride_NAMEEND_VAL temp10728_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10728_114 temp10728_111)
             (bvsle temp10728_118 temp10728_115)
             (bvsle temp10728_122 temp10728_119)
             (bvsle temp10728_126 temp10728_123)
             (bvsle temp10728_130 temp10728_127)
             (bvsle temp10728_134 temp10728_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10728_135 #x0000000000000000))
(assert (= var1191735 temp10728_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10728_136 #x0000000000000001))
(assert (= var1191747 temp10728_136))
(assert (= temp10728_137 #x0000000000000000))
(assert (= var1179826 temp10728_137))
(assert (= temp10728_138 #x0000000000000000))
(assert (= temp10728_139 temp10728_138))
(assert (= temp10728_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10728_139)))
(assert (= temp10728_141 #x0000000000000001))
(assert (= temp10728_142 temp10728_141))
(assert (= temp10728_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10728_142)))
(assert (= temp10728_144 #x0000000000000002))
(assert (= temp10728_145 temp10728_144))
(assert (= temp10728_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10728_145)))
(assert (= temp10728_147 #x0000000000000003))
(assert (= temp10728_148 temp10728_147))
(assert (= temp10728_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10728_148)))
(assert (= temp10728_150 #x0000000000000004))
(assert (= temp10728_151 temp10728_150))
(assert (= temp10728_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10728_151)))
(assert (= temp10728_153 #x0000000000000005))
(assert (= temp10728_154 temp10728_153))
(assert (= temp10728_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10728_154)))
(assert (= temp10728_157 var1179826))
(assert (= temp10728_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10728_157)))
(assert (= temp10728_156 temp10728_158))
(assert (= var1191780
   (ite (bvslt temp10728_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10728_159 #x0000000000000000))
(assert (= var1191780 temp10728_159))
(assert (= temp10728_160 #x0000000000000000))
(assert (= var1179826 temp10728_160))
(assert (= temp10728_162 var1179826))
(assert (= temp10728_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10728_162)))
(assert (= temp10728_161 temp10728_163))
(assert (= var1191802 (bvsmod temp10728_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10728_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10728_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10728_165 #x0000000000000001))
(assert (= var1191803 temp10728_165))
(assert (= temp10728_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10728_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10728_167 #x0000000000000001))
(assert (= var1191823 temp10728_167))
(assert (= temp10728_168 #x0000000000000001))
(assert (= var1180714 temp10728_168))
(assert (= temp10728_169 #x0000000000000000))
(assert (= temp10728_170 temp10728_169))
(assert (= temp10728_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10728_170)))
(assert (= temp10728_172 #x0000000000000001))
(assert (= temp10728_173 temp10728_172))
(assert (= temp10728_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10728_173)))
(assert (= temp10728_175 #x0000000000000002))
(assert (= temp10728_176 temp10728_175))
(assert (= temp10728_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10728_176)))
(assert (= temp10728_178 #x0000000000000003))
(assert (= temp10728_179 temp10728_178))
(assert (= temp10728_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10728_179)))
(assert (= temp10728_181 #x0000000000000004))
(assert (= temp10728_182 temp10728_181))
(assert (= temp10728_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10728_182)))
(assert (= temp10728_184 #x0000000000000005))
(assert (= temp10728_185 temp10728_184))
(assert (= temp10728_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10728_185)))
(assert (= temp10728_187 #x0000000000000000))
(assert (= temp10728_188
   (ite (bvslt var1180714 temp10728_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10728_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10728_188)))
(assert (= var1191831 temp10728_189))
(assert (bvslt (ite (bvslt var1180714 temp10728_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10728_190 #x0000000000000001))
(assert (= var1180714 temp10728_190))
(assert (= temp10728_192 var1180714))
(assert (= temp10728_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10728_192)))
(assert (= temp10728_191 temp10728_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10728_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10728_194 #x0000000000000001))
(assert (= var1191836 temp10728_194))
(assert (= temp10728_195 #x0000000000000000))
(assert (= var1179826 temp10728_195))
(assert (= temp10728_197 var1179826))
(assert (= temp10728_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10728_197)))
(assert (= temp10728_196 temp10728_198))
(assert (= temp10728_199 #x0000000000000002))
(assert (= var1586025 temp10728_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10728_200 #x0000000000000001))
(assert (= var1191993 temp10728_200))
(assert (= temp10728_201 #x0000000000000001))
(assert (= var2700303 temp10728_201))
(assert (= temp10728_202 #x0000000000000001))
(assert (= var2962447 temp10728_202))
(assert (= temp10728_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10728_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10728_204 #x0000000000000001))
(assert (= var211058 temp10728_204))
(assert (= temp10728_205 #x0000000000000001))
(assert (= var211188 temp10728_205))
(assert (= var3879401 var211188))
(assert (= temp10728_206 #x0000000000000000))
(assert (= var3866802 temp10728_206))
(assert (= temp10728_207 #x0000000000000000))
(assert (= temp10728_208
   (ite (bvslt var3866802 temp10728_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10728_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10728_208)))
(assert (= var3879420 temp10728_209))
(assert (bvslt (ite (bvslt var3866802 temp10728_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10728_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10728_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10728_211 #x0000000000000000))
(assert (= var3879421 temp10728_211))
(assert (= temp10728_212 #x0000000000000001))
(assert (= var3867690 temp10728_212))
(assert (= temp10728_213 #x0000000000000000))
(assert (= temp10728_214
   (ite (bvslt var3867690 temp10728_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10728_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10728_214)))
(assert (= var3879423 temp10728_215))
(assert (bvslt (ite (bvslt var3867690 temp10728_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10728_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10728_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10728_217 #x0000000000000001))
(assert (= var3879424 temp10728_217))
(assert (= temp10728_218 #x0000000000000000))
(assert (= var4133117 temp10728_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10728_219 #x0000000000000002))
(assert (= var4339331 temp10728_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10728_220 #x0000000000000000))
(assert (= var4404892 temp10728_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5124496 var211201))
(assert (= var211820 var210913))
(assert (= temp10728_221 #x0000000000000000))
(assert (= var211821
   (ite (distinct var211820 temp10728_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10728_222 #x0000000000000001))
(assert (= var211058 temp10728_222))
(model-add temp10728_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10728_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10728_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10728_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



