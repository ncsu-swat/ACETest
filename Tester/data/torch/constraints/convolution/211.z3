(declare-fun temp281_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp281_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp281_3 () (_ BitVec 64))
(declare-fun temp281_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp281_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp281_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp281_7 () (_ BitVec 64))
(declare-fun temp281_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp281_9 () (_ BitVec 64))
(declare-fun temp281_10 () (_ BitVec 64))
(declare-fun temp281_11 () (_ BitVec 64))
(declare-fun temp281_12 () (_ BitVec 64))
(declare-fun temp281_13 () (_ BitVec 64))
(declare-fun temp281_14 () (_ BitVec 64))
(declare-fun temp281_15 () (_ BitVec 64))
(declare-fun temp281_16 () (_ BitVec 64))
(declare-fun temp281_17 () (_ BitVec 64))
(declare-fun temp281_18 () (_ BitVec 64))
(declare-fun temp281_19 () (_ BitVec 64))
(declare-fun temp281_20 () (_ BitVec 64))
(declare-fun temp281_21 () (_ BitVec 64))
(declare-fun temp281_22 () (_ BitVec 64))
(declare-fun temp281_23 () (_ BitVec 64))
(declare-fun temp281_24 () (_ BitVec 64))
(declare-fun temp281_25 () (_ BitVec 64))
(declare-fun temp281_26 () (_ BitVec 64))
(declare-fun temp281_27 () (_ BitVec 64))
(declare-fun temp281_28 () (_ BitVec 64))
(declare-fun temp281_29 () (_ BitVec 64))
(declare-fun temp281_30 () (_ BitVec 64))
(declare-fun temp281_31 () (_ BitVec 64))
(declare-fun temp281_32 () (_ BitVec 64))
(declare-fun temp281_33 () (_ BitVec 64))
(declare-fun temp281_34 () (_ BitVec 64))
(declare-fun temp281_35 () (_ BitVec 64))
(declare-fun temp281_36 () (_ BitVec 64))
(declare-fun temp281_37 () (_ BitVec 64))
(declare-fun temp281_38 () (_ BitVec 64))
(declare-fun temp281_39 () (_ BitVec 64))
(declare-fun temp281_40 () (_ BitVec 64))
(declare-fun temp281_41 () (_ BitVec 64))
(declare-fun temp281_42 () (_ BitVec 64))
(declare-fun temp281_43 () (_ BitVec 64))
(declare-fun temp281_44 () (_ BitVec 64))
(declare-fun temp281_45 () (_ BitVec 64))
(declare-fun temp281_46 () (_ BitVec 64))
(declare-fun temp281_47 () (_ BitVec 64))
(declare-fun temp281_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp281_49 () (_ BitVec 64))
(declare-fun temp281_50 () (_ BitVec 64))
(declare-fun temp281_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp281_52 () (_ BitVec 64))
(declare-fun temp281_53 () (_ BitVec 64))
(declare-fun temp281_54 () (_ BitVec 64))
(declare-fun temp281_55 () (_ BitVec 64))
(declare-fun temp281_56 () (_ BitVec 64))
(declare-fun temp281_57 () (_ BitVec 64))
(declare-fun temp281_58 () (_ BitVec 64))
(declare-fun temp281_59 () (_ BitVec 64))
(declare-fun temp281_60 () (_ BitVec 64))
(declare-fun temp281_61 () (_ BitVec 64))
(declare-fun temp281_62 () (_ BitVec 64))
(declare-fun temp281_63 () (_ BitVec 64))
(declare-fun temp281_64 () (_ BitVec 64))
(declare-fun temp281_65 () (_ BitVec 64))
(declare-fun temp281_66 () (_ BitVec 64))
(declare-fun temp281_67 () (_ BitVec 64))
(declare-fun temp281_68 () (_ BitVec 64))
(declare-fun temp281_69 () (_ BitVec 64))
(declare-fun temp281_70 () (_ BitVec 64))
(declare-fun temp281_71 () (_ BitVec 64))
(declare-fun temp281_72 () (_ BitVec 64))
(declare-fun temp281_73 () (_ BitVec 64))
(declare-fun temp281_74 () (_ BitVec 64))
(declare-fun temp281_75 () (_ BitVec 64))
(declare-fun temp281_76 () (_ BitVec 64))
(declare-fun temp281_77 () (_ BitVec 64))
(declare-fun temp281_78 () (_ BitVec 64))
(declare-fun temp281_79 () (_ BitVec 64))
(declare-fun temp281_80 () (_ BitVec 64))
(declare-fun temp281_81 () (_ BitVec 64))
(declare-fun temp281_82 () (_ BitVec 64))
(declare-fun temp281_83 () (_ BitVec 64))
(declare-fun temp281_84 () (_ BitVec 64))
(declare-fun temp281_85 () (_ BitVec 64))
(declare-fun temp281_86 () (_ BitVec 64))
(declare-fun temp281_87 () (_ BitVec 64))
(declare-fun temp281_88 () (_ BitVec 64))
(declare-fun temp281_89 () (_ BitVec 64))
(declare-fun temp281_90 () (_ BitVec 64))
(declare-fun temp281_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp281_92 () (_ BitVec 64))
(declare-fun temp281_93 () (_ BitVec 64))
(declare-fun temp281_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp281_95 () (_ BitVec 64))
(declare-fun temp281_96 () (_ BitVec 64))
(declare-fun temp281_97 () (_ BitVec 64))
(declare-fun temp281_98 () (_ BitVec 64))
(declare-fun temp281_99 () (_ BitVec 64))
(declare-fun temp281_100 () (_ BitVec 64))
(declare-fun temp281_101 () (_ BitVec 64))
(declare-fun temp281_102 () (_ BitVec 64))
(declare-fun temp281_103 () (_ BitVec 64))
(declare-fun temp281_104 () (_ BitVec 64))
(declare-fun temp281_105 () (_ BitVec 64))
(declare-fun temp281_106 () (_ BitVec 64))
(declare-fun temp281_107 () (_ BitVec 64))
(declare-fun temp281_108 () (_ BitVec 64))
(declare-fun temp281_109 () (_ BitVec 64))
(declare-fun temp281_110 () (_ BitVec 64))
(declare-fun temp281_111 () (_ BitVec 64))
(declare-fun temp281_112 () (_ BitVec 64))
(declare-fun temp281_113 () (_ BitVec 64))
(declare-fun temp281_114 () (_ BitVec 64))
(declare-fun temp281_115 () (_ BitVec 64))
(declare-fun temp281_116 () (_ BitVec 64))
(declare-fun temp281_117 () (_ BitVec 64))
(declare-fun temp281_118 () (_ BitVec 64))
(declare-fun temp281_119 () (_ BitVec 64))
(declare-fun temp281_120 () (_ BitVec 64))
(declare-fun temp281_121 () (_ BitVec 64))
(declare-fun temp281_122 () (_ BitVec 64))
(declare-fun temp281_123 () (_ BitVec 64))
(declare-fun temp281_124 () (_ BitVec 64))
(declare-fun temp281_125 () (_ BitVec 64))
(declare-fun temp281_126 () (_ BitVec 64))
(declare-fun temp281_127 () (_ BitVec 64))
(declare-fun temp281_128 () (_ BitVec 64))
(declare-fun temp281_129 () (_ BitVec 64))
(declare-fun temp281_130 () (_ BitVec 64))
(declare-fun temp281_131 () (_ BitVec 64))
(declare-fun temp281_132 () (_ BitVec 64))
(declare-fun temp281_133 () (_ BitVec 64))
(declare-fun temp281_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp281_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp281_136 () (_ BitVec 64))
(declare-fun temp281_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp281_138 () (_ BitVec 64))
(declare-fun temp281_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp281_140 () (_ BitVec 64))
(declare-fun temp281_141 () (_ BitVec 64))
(declare-fun temp281_142 () (_ BitVec 64))
(declare-fun temp281_143 () (_ BitVec 64))
(declare-fun temp281_144 () (_ BitVec 64))
(declare-fun temp281_145 () (_ BitVec 64))
(declare-fun temp281_146 () (_ BitVec 64))
(declare-fun temp281_147 () (_ BitVec 64))
(declare-fun temp281_148 () (_ BitVec 64))
(declare-fun temp281_149 () (_ BitVec 64))
(declare-fun temp281_150 () (_ BitVec 64))
(declare-fun temp281_151 () (_ BitVec 64))
(declare-fun temp281_152 () (_ BitVec 64))
(declare-fun temp281_153 () (_ BitVec 64))
(declare-fun temp281_154 () (_ BitVec 64))
(declare-fun temp281_155 () (_ BitVec 64))
(declare-fun temp281_157 () (_ BitVec 64))
(declare-fun temp281_158 () (_ BitVec 64))
(declare-fun temp281_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp281_159 () (_ BitVec 64))
(declare-fun temp281_160 () (_ BitVec 64))
(declare-fun temp281_162 () (_ BitVec 64))
(declare-fun temp281_163 () (_ BitVec 64))
(declare-fun temp281_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp281_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp281_165 () (_ BitVec 64))
(declare-fun temp281_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp281_167 () (_ BitVec 64))
(declare-fun temp281_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp281_169 () (_ BitVec 64))
(declare-fun temp281_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp281_171 () (_ BitVec 64))
(declare-fun temp281_172 () (_ BitVec 64))
(declare-fun temp281_173 () (_ BitVec 64))
(declare-fun temp281_174 () (_ BitVec 64))
(declare-fun temp281_175 () (_ BitVec 64))
(declare-fun temp281_176 () (_ BitVec 64))
(declare-fun temp281_177 () (_ BitVec 64))
(declare-fun temp281_178 () (_ BitVec 64))
(declare-fun temp281_179 () (_ BitVec 64))
(declare-fun temp281_180 () (_ BitVec 64))
(declare-fun temp281_181 () (_ BitVec 64))
(declare-fun temp281_182 () (_ BitVec 64))
(declare-fun temp281_183 () (_ BitVec 64))
(declare-fun temp281_184 () (_ BitVec 64))
(declare-fun temp281_185 () (_ BitVec 64))
(declare-fun temp281_186 () (_ BitVec 64))
(declare-fun temp281_187 () (_ BitVec 64))
(declare-fun temp281_188 () (_ BitVec 64))
(declare-fun temp281_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp281_190 () (_ BitVec 64))
(declare-fun temp281_192 () (_ BitVec 64))
(declare-fun temp281_193 () (_ BitVec 64))
(declare-fun temp281_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp281_194 () (_ BitVec 64))
(declare-fun temp281_195 () (_ BitVec 64))
(declare-fun temp281_197 () (_ BitVec 64))
(declare-fun temp281_198 () (_ BitVec 64))
(declare-fun temp281_196 () (_ BitVec 64))
(declare-fun temp281_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp281_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp281_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp281_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp281_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp281_204 () (_ BitVec 64))
(declare-fun temp281_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp281_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp281_207 () (_ BitVec 64))
(declare-fun temp281_208 () (_ BitVec 64))
(declare-fun temp281_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp281_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp281_211 () (_ BitVec 64))
(declare-fun temp281_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp281_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp281_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp281_215 () (_ BitVec 64))
(assert (= temp281_1 #x0000000000000001))
(assert (= var77203 temp281_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp281_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp281_2)))
(assert (= temp281_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp281_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp281_4 #x0000000000000000))
(assert (= var210941 temp281_4))
(assert (= temp281_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp281_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp281_6 #x0000000000000000))
(assert (= var210986 temp281_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp281_7 #x0000000000000000))
(assert (= temp281_8 temp281_7))
(assert (= temp281_9 (select ARGNAME_padding_NAMEEND_VAL temp281_8)))
(assert (= temp281_10 #x0000000000000001))
(assert (= temp281_11 temp281_10))
(assert (= temp281_12 (select ARGNAME_padding_NAMEEND_VAL temp281_11)))
(assert (= temp281_13 #x0000000000000002))
(assert (= temp281_14 temp281_13))
(assert (= temp281_15 (select ARGNAME_padding_NAMEEND_VAL temp281_14)))
(assert (= temp281_16 #x0000000000000003))
(assert (= temp281_17 temp281_16))
(assert (= temp281_18 (select ARGNAME_padding_NAMEEND_VAL temp281_17)))
(assert (= temp281_19 #x0000000000000004))
(assert (= temp281_20 temp281_19))
(assert (= temp281_21 (select ARGNAME_padding_NAMEEND_VAL temp281_20)))
(assert (= temp281_22 #x0000000000000005))
(assert (= temp281_23 temp281_22))
(assert (= temp281_24 (select ARGNAME_padding_NAMEEND_VAL temp281_23)))
(assert (= temp281_25 #x0000000000000000))
(assert (= temp281_26 #x0000000000000000))
(assert (= temp281_27 temp281_26))
(assert (= temp281_28 (select ARGNAME_padding_NAMEEND_VAL temp281_27)))
(assert (= temp281_29 #x0000000000000000))
(assert (= temp281_30 #x0000000000000001))
(assert (= temp281_31 temp281_30))
(assert (= temp281_32 (select ARGNAME_padding_NAMEEND_VAL temp281_31)))
(assert (= temp281_33 #x0000000000000000))
(assert (= temp281_34 #x0000000000000002))
(assert (= temp281_35 temp281_34))
(assert (= temp281_36 (select ARGNAME_padding_NAMEEND_VAL temp281_35)))
(assert (= temp281_37 #x0000000000000000))
(assert (= temp281_38 #x0000000000000003))
(assert (= temp281_39 temp281_38))
(assert (= temp281_40 (select ARGNAME_padding_NAMEEND_VAL temp281_39)))
(assert (= temp281_41 #x0000000000000000))
(assert (= temp281_42 #x0000000000000004))
(assert (= temp281_43 temp281_42))
(assert (= temp281_44 (select ARGNAME_padding_NAMEEND_VAL temp281_43)))
(assert (= temp281_45 #x0000000000000000))
(assert (= temp281_46 #x0000000000000005))
(assert (= temp281_47 temp281_46))
(assert (= temp281_48 (select ARGNAME_padding_NAMEEND_VAL temp281_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp281_28 temp281_25)
             (bvslt temp281_32 temp281_29)
             (bvslt temp281_36 temp281_33)
             (bvslt temp281_40 temp281_37)
             (bvslt temp281_44 temp281_41)
             (bvslt temp281_48 temp281_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp281_49 #x0000000000000000))
(assert (= var1191714 temp281_49))
(assert (= temp281_50 #x0000000000000000))
(assert (= temp281_51 temp281_50))
(assert (= temp281_52 (select ARGNAME_output_padding_NAMEEND_VAL temp281_51)))
(assert (= temp281_53 #x0000000000000001))
(assert (= temp281_54 temp281_53))
(assert (= temp281_55 (select ARGNAME_output_padding_NAMEEND_VAL temp281_54)))
(assert (= temp281_56 #x0000000000000002))
(assert (= temp281_57 temp281_56))
(assert (= temp281_58 (select ARGNAME_output_padding_NAMEEND_VAL temp281_57)))
(assert (= temp281_59 #x0000000000000003))
(assert (= temp281_60 temp281_59))
(assert (= temp281_61 (select ARGNAME_output_padding_NAMEEND_VAL temp281_60)))
(assert (= temp281_62 #x0000000000000004))
(assert (= temp281_63 temp281_62))
(assert (= temp281_64 (select ARGNAME_output_padding_NAMEEND_VAL temp281_63)))
(assert (= temp281_65 #x0000000000000005))
(assert (= temp281_66 temp281_65))
(assert (= temp281_67 (select ARGNAME_output_padding_NAMEEND_VAL temp281_66)))
(assert (= temp281_68 #x0000000000000000))
(assert (= temp281_69 #x0000000000000000))
(assert (= temp281_70 temp281_69))
(assert (= temp281_71 (select ARGNAME_output_padding_NAMEEND_VAL temp281_70)))
(assert (= temp281_72 #x0000000000000000))
(assert (= temp281_73 #x0000000000000001))
(assert (= temp281_74 temp281_73))
(assert (= temp281_75 (select ARGNAME_output_padding_NAMEEND_VAL temp281_74)))
(assert (= temp281_76 #x0000000000000000))
(assert (= temp281_77 #x0000000000000002))
(assert (= temp281_78 temp281_77))
(assert (= temp281_79 (select ARGNAME_output_padding_NAMEEND_VAL temp281_78)))
(assert (= temp281_80 #x0000000000000000))
(assert (= temp281_81 #x0000000000000003))
(assert (= temp281_82 temp281_81))
(assert (= temp281_83 (select ARGNAME_output_padding_NAMEEND_VAL temp281_82)))
(assert (= temp281_84 #x0000000000000000))
(assert (= temp281_85 #x0000000000000004))
(assert (= temp281_86 temp281_85))
(assert (= temp281_87 (select ARGNAME_output_padding_NAMEEND_VAL temp281_86)))
(assert (= temp281_88 #x0000000000000000))
(assert (= temp281_89 #x0000000000000005))
(assert (= temp281_90 temp281_89))
(assert (= temp281_91 (select ARGNAME_output_padding_NAMEEND_VAL temp281_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp281_71 temp281_68)
             (bvslt temp281_75 temp281_72)
             (bvslt temp281_79 temp281_76)
             (bvslt temp281_83 temp281_80)
             (bvslt temp281_87 temp281_84)
             (bvslt temp281_91 temp281_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp281_92 #x0000000000000000))
(assert (= var1191725 temp281_92))
(assert (= temp281_93 #x0000000000000000))
(assert (= temp281_94 temp281_93))
(assert (= temp281_95 (select ARGNAME_stride_NAMEEND_VAL temp281_94)))
(assert (= temp281_96 #x0000000000000001))
(assert (= temp281_97 temp281_96))
(assert (= temp281_98 (select ARGNAME_stride_NAMEEND_VAL temp281_97)))
(assert (= temp281_99 #x0000000000000002))
(assert (= temp281_100 temp281_99))
(assert (= temp281_101 (select ARGNAME_stride_NAMEEND_VAL temp281_100)))
(assert (= temp281_102 #x0000000000000003))
(assert (= temp281_103 temp281_102))
(assert (= temp281_104 (select ARGNAME_stride_NAMEEND_VAL temp281_103)))
(assert (= temp281_105 #x0000000000000004))
(assert (= temp281_106 temp281_105))
(assert (= temp281_107 (select ARGNAME_stride_NAMEEND_VAL temp281_106)))
(assert (= temp281_108 #x0000000000000005))
(assert (= temp281_109 temp281_108))
(assert (= temp281_110 (select ARGNAME_stride_NAMEEND_VAL temp281_109)))
(assert (= temp281_111 #x0000000000000000))
(assert (= temp281_112 #x0000000000000000))
(assert (= temp281_113 temp281_112))
(assert (= temp281_114 (select ARGNAME_stride_NAMEEND_VAL temp281_113)))
(assert (= temp281_115 #x0000000000000000))
(assert (= temp281_116 #x0000000000000001))
(assert (= temp281_117 temp281_116))
(assert (= temp281_118 (select ARGNAME_stride_NAMEEND_VAL temp281_117)))
(assert (= temp281_119 #x0000000000000000))
(assert (= temp281_120 #x0000000000000002))
(assert (= temp281_121 temp281_120))
(assert (= temp281_122 (select ARGNAME_stride_NAMEEND_VAL temp281_121)))
(assert (= temp281_123 #x0000000000000000))
(assert (= temp281_124 #x0000000000000003))
(assert (= temp281_125 temp281_124))
(assert (= temp281_126 (select ARGNAME_stride_NAMEEND_VAL temp281_125)))
(assert (= temp281_127 #x0000000000000000))
(assert (= temp281_128 #x0000000000000004))
(assert (= temp281_129 temp281_128))
(assert (= temp281_130 (select ARGNAME_stride_NAMEEND_VAL temp281_129)))
(assert (= temp281_131 #x0000000000000000))
(assert (= temp281_132 #x0000000000000005))
(assert (= temp281_133 temp281_132))
(assert (= temp281_134 (select ARGNAME_stride_NAMEEND_VAL temp281_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp281_114 temp281_111)
             (bvsle temp281_118 temp281_115)
             (bvsle temp281_122 temp281_119)
             (bvsle temp281_126 temp281_123)
             (bvsle temp281_130 temp281_127)
             (bvsle temp281_134 temp281_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp281_135 #x0000000000000000))
(assert (= var1191735 temp281_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp281_136 #x0000000000000001))
(assert (= var1191747 temp281_136))
(assert (= temp281_137 #x0000000000000000))
(assert (= var1179826 temp281_137))
(assert (= temp281_138 #x0000000000000000))
(assert (= temp281_139 temp281_138))
(assert (= temp281_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp281_139)))
(assert (= temp281_141 #x0000000000000001))
(assert (= temp281_142 temp281_141))
(assert (= temp281_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp281_142)))
(assert (= temp281_144 #x0000000000000002))
(assert (= temp281_145 temp281_144))
(assert (= temp281_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp281_145)))
(assert (= temp281_147 #x0000000000000003))
(assert (= temp281_148 temp281_147))
(assert (= temp281_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp281_148)))
(assert (= temp281_150 #x0000000000000004))
(assert (= temp281_151 temp281_150))
(assert (= temp281_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp281_151)))
(assert (= temp281_153 #x0000000000000005))
(assert (= temp281_154 temp281_153))
(assert (= temp281_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp281_154)))
(assert (= temp281_157 var1179826))
(assert (= temp281_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp281_157)))
(assert (= temp281_156 temp281_158))
(assert (= var1191780
   (ite (bvslt temp281_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp281_159 #x0000000000000000))
(assert (= var1191780 temp281_159))
(assert (= temp281_160 #x0000000000000000))
(assert (= var1179826 temp281_160))
(assert (= temp281_162 var1179826))
(assert (= temp281_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp281_162)))
(assert (= temp281_161 temp281_163))
(assert (= var1191802 (bvsmod temp281_161 ARGNAME_groups_NAMEEND)))
(assert (= temp281_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp281_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp281_165 #x0000000000000001))
(assert (= var1191803 temp281_165))
(assert (= temp281_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp281_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp281_167 #x0000000000000001))
(assert (= var1191823 temp281_167))
(assert (= temp281_168 #x0000000000000001))
(assert (= var1180714 temp281_168))
(assert (= temp281_169 #x0000000000000000))
(assert (= temp281_170 temp281_169))
(assert (= temp281_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp281_170)))
(assert (= temp281_172 #x0000000000000001))
(assert (= temp281_173 temp281_172))
(assert (= temp281_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp281_173)))
(assert (= temp281_175 #x0000000000000002))
(assert (= temp281_176 temp281_175))
(assert (= temp281_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp281_176)))
(assert (= temp281_178 #x0000000000000003))
(assert (= temp281_179 temp281_178))
(assert (= temp281_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp281_179)))
(assert (= temp281_181 #x0000000000000004))
(assert (= temp281_182 temp281_181))
(assert (= temp281_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp281_182)))
(assert (= temp281_184 #x0000000000000005))
(assert (= temp281_185 temp281_184))
(assert (= temp281_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp281_185)))
(assert (= temp281_187 #x0000000000000000))
(assert (= temp281_188
   (ite (bvslt var1180714 temp281_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp281_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp281_188)))
(assert (= var1191831 temp281_189))
(assert (bvslt (ite (bvslt var1180714 temp281_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp281_190 #x0000000000000001))
(assert (= var1180714 temp281_190))
(assert (= temp281_192 var1180714))
(assert (= temp281_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp281_192)))
(assert (= temp281_191 temp281_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp281_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp281_194 #x0000000000000001))
(assert (= var1191836 temp281_194))
(assert (= temp281_195 #x0000000000000000))
(assert (= var1179826 temp281_195))
(assert (= temp281_197 var1179826))
(assert (= temp281_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp281_197)))
(assert (= temp281_196 temp281_198))
(assert (= temp281_199 #x0000000000000002))
(assert (= var1586025 temp281_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp281_200 #x0000000000000001))
(assert (= var1191993 temp281_200))
(assert (= temp281_201 #x0000000000000001))
(assert (= var2700303 temp281_201))
(assert (= temp281_202 #x0000000000000001))
(assert (= var2962447 temp281_202))
(assert (= temp281_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp281_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp281_204 #x0000000000000001))
(assert (= var211058 temp281_204))
(assert (= temp281_205 #x0000000000000001))
(assert (= var211188 temp281_205))
(assert (= var3879401 var211188))
(assert (= temp281_206 #x0000000000000000))
(assert (= var3866802 temp281_206))
(assert (= temp281_207 #x0000000000000000))
(assert (= temp281_208
   (ite (bvslt var3866802 temp281_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp281_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp281_208)))
(assert (= var3879420 temp281_209))
(assert (bvslt (ite (bvslt var3866802 temp281_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp281_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp281_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp281_211 #x0000000000000001))
(assert (= var3879421 temp281_211))
(assert (= temp281_212 #x0000000000000000))
(assert (= var4079423 temp281_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp281_213 #x0000000000000002))
(assert (= var4208259 temp281_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp281_214 #x0000000000000000))
(assert (= var4273820 temp281_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp281_215 #x0000000000000001))
(assert (= var211058 temp281_215))
(model-add temp281_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp281_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp281_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp281_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




