(declare-fun temp444_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp444_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp444_3 () (_ BitVec 64))
(declare-fun temp444_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp444_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp444_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp444_7 () (_ BitVec 64))
(declare-fun temp444_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp444_9 () (_ BitVec 64))
(declare-fun temp444_10 () (_ BitVec 64))
(declare-fun temp444_11 () (_ BitVec 64))
(declare-fun temp444_12 () (_ BitVec 64))
(declare-fun temp444_13 () (_ BitVec 64))
(declare-fun temp444_14 () (_ BitVec 64))
(declare-fun temp444_15 () (_ BitVec 64))
(declare-fun temp444_16 () (_ BitVec 64))
(declare-fun temp444_17 () (_ BitVec 64))
(declare-fun temp444_18 () (_ BitVec 64))
(declare-fun temp444_19 () (_ BitVec 64))
(declare-fun temp444_20 () (_ BitVec 64))
(declare-fun temp444_21 () (_ BitVec 64))
(declare-fun temp444_22 () (_ BitVec 64))
(declare-fun temp444_23 () (_ BitVec 64))
(declare-fun temp444_24 () (_ BitVec 64))
(declare-fun temp444_25 () (_ BitVec 64))
(declare-fun temp444_26 () (_ BitVec 64))
(declare-fun temp444_27 () (_ BitVec 64))
(declare-fun temp444_28 () (_ BitVec 64))
(declare-fun temp444_29 () (_ BitVec 64))
(declare-fun temp444_30 () (_ BitVec 64))
(declare-fun temp444_31 () (_ BitVec 64))
(declare-fun temp444_32 () (_ BitVec 64))
(declare-fun temp444_33 () (_ BitVec 64))
(declare-fun temp444_34 () (_ BitVec 64))
(declare-fun temp444_35 () (_ BitVec 64))
(declare-fun temp444_36 () (_ BitVec 64))
(declare-fun temp444_37 () (_ BitVec 64))
(declare-fun temp444_38 () (_ BitVec 64))
(declare-fun temp444_39 () (_ BitVec 64))
(declare-fun temp444_40 () (_ BitVec 64))
(declare-fun temp444_41 () (_ BitVec 64))
(declare-fun temp444_42 () (_ BitVec 64))
(declare-fun temp444_43 () (_ BitVec 64))
(declare-fun temp444_44 () (_ BitVec 64))
(declare-fun temp444_45 () (_ BitVec 64))
(declare-fun temp444_46 () (_ BitVec 64))
(declare-fun temp444_47 () (_ BitVec 64))
(declare-fun temp444_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp444_49 () (_ BitVec 64))
(declare-fun temp444_50 () (_ BitVec 64))
(declare-fun temp444_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp444_52 () (_ BitVec 64))
(declare-fun temp444_53 () (_ BitVec 64))
(declare-fun temp444_54 () (_ BitVec 64))
(declare-fun temp444_55 () (_ BitVec 64))
(declare-fun temp444_56 () (_ BitVec 64))
(declare-fun temp444_57 () (_ BitVec 64))
(declare-fun temp444_58 () (_ BitVec 64))
(declare-fun temp444_59 () (_ BitVec 64))
(declare-fun temp444_60 () (_ BitVec 64))
(declare-fun temp444_61 () (_ BitVec 64))
(declare-fun temp444_62 () (_ BitVec 64))
(declare-fun temp444_63 () (_ BitVec 64))
(declare-fun temp444_64 () (_ BitVec 64))
(declare-fun temp444_65 () (_ BitVec 64))
(declare-fun temp444_66 () (_ BitVec 64))
(declare-fun temp444_67 () (_ BitVec 64))
(declare-fun temp444_68 () (_ BitVec 64))
(declare-fun temp444_69 () (_ BitVec 64))
(declare-fun temp444_70 () (_ BitVec 64))
(declare-fun temp444_71 () (_ BitVec 64))
(declare-fun temp444_72 () (_ BitVec 64))
(declare-fun temp444_73 () (_ BitVec 64))
(declare-fun temp444_74 () (_ BitVec 64))
(declare-fun temp444_75 () (_ BitVec 64))
(declare-fun temp444_76 () (_ BitVec 64))
(declare-fun temp444_77 () (_ BitVec 64))
(declare-fun temp444_78 () (_ BitVec 64))
(declare-fun temp444_79 () (_ BitVec 64))
(declare-fun temp444_80 () (_ BitVec 64))
(declare-fun temp444_81 () (_ BitVec 64))
(declare-fun temp444_82 () (_ BitVec 64))
(declare-fun temp444_83 () (_ BitVec 64))
(declare-fun temp444_84 () (_ BitVec 64))
(declare-fun temp444_85 () (_ BitVec 64))
(declare-fun temp444_86 () (_ BitVec 64))
(declare-fun temp444_87 () (_ BitVec 64))
(declare-fun temp444_88 () (_ BitVec 64))
(declare-fun temp444_89 () (_ BitVec 64))
(declare-fun temp444_90 () (_ BitVec 64))
(declare-fun temp444_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp444_92 () (_ BitVec 64))
(declare-fun temp444_93 () (_ BitVec 64))
(declare-fun temp444_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp444_95 () (_ BitVec 64))
(declare-fun temp444_96 () (_ BitVec 64))
(declare-fun temp444_97 () (_ BitVec 64))
(declare-fun temp444_98 () (_ BitVec 64))
(declare-fun temp444_99 () (_ BitVec 64))
(declare-fun temp444_100 () (_ BitVec 64))
(declare-fun temp444_101 () (_ BitVec 64))
(declare-fun temp444_102 () (_ BitVec 64))
(declare-fun temp444_103 () (_ BitVec 64))
(declare-fun temp444_104 () (_ BitVec 64))
(declare-fun temp444_105 () (_ BitVec 64))
(declare-fun temp444_106 () (_ BitVec 64))
(declare-fun temp444_107 () (_ BitVec 64))
(declare-fun temp444_108 () (_ BitVec 64))
(declare-fun temp444_109 () (_ BitVec 64))
(declare-fun temp444_110 () (_ BitVec 64))
(declare-fun temp444_111 () (_ BitVec 64))
(declare-fun temp444_112 () (_ BitVec 64))
(declare-fun temp444_113 () (_ BitVec 64))
(declare-fun temp444_114 () (_ BitVec 64))
(declare-fun temp444_115 () (_ BitVec 64))
(declare-fun temp444_116 () (_ BitVec 64))
(declare-fun temp444_117 () (_ BitVec 64))
(declare-fun temp444_118 () (_ BitVec 64))
(declare-fun temp444_119 () (_ BitVec 64))
(declare-fun temp444_120 () (_ BitVec 64))
(declare-fun temp444_121 () (_ BitVec 64))
(declare-fun temp444_122 () (_ BitVec 64))
(declare-fun temp444_123 () (_ BitVec 64))
(declare-fun temp444_124 () (_ BitVec 64))
(declare-fun temp444_125 () (_ BitVec 64))
(declare-fun temp444_126 () (_ BitVec 64))
(declare-fun temp444_127 () (_ BitVec 64))
(declare-fun temp444_128 () (_ BitVec 64))
(declare-fun temp444_129 () (_ BitVec 64))
(declare-fun temp444_130 () (_ BitVec 64))
(declare-fun temp444_131 () (_ BitVec 64))
(declare-fun temp444_132 () (_ BitVec 64))
(declare-fun temp444_133 () (_ BitVec 64))
(declare-fun temp444_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp444_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp444_136 () (_ BitVec 64))
(declare-fun temp444_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp444_138 () (_ BitVec 64))
(declare-fun temp444_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp444_140 () (_ BitVec 64))
(declare-fun temp444_141 () (_ BitVec 64))
(declare-fun temp444_142 () (_ BitVec 64))
(declare-fun temp444_143 () (_ BitVec 64))
(declare-fun temp444_144 () (_ BitVec 64))
(declare-fun temp444_145 () (_ BitVec 64))
(declare-fun temp444_146 () (_ BitVec 64))
(declare-fun temp444_147 () (_ BitVec 64))
(declare-fun temp444_148 () (_ BitVec 64))
(declare-fun temp444_149 () (_ BitVec 64))
(declare-fun temp444_150 () (_ BitVec 64))
(declare-fun temp444_151 () (_ BitVec 64))
(declare-fun temp444_152 () (_ BitVec 64))
(declare-fun temp444_153 () (_ BitVec 64))
(declare-fun temp444_154 () (_ BitVec 64))
(declare-fun temp444_155 () (_ BitVec 64))
(declare-fun temp444_157 () (_ BitVec 64))
(declare-fun temp444_158 () (_ BitVec 64))
(declare-fun temp444_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp444_159 () (_ BitVec 64))
(declare-fun temp444_160 () (_ BitVec 64))
(declare-fun temp444_162 () (_ BitVec 64))
(declare-fun temp444_163 () (_ BitVec 64))
(declare-fun temp444_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp444_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp444_165 () (_ BitVec 64))
(declare-fun temp444_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp444_167 () (_ BitVec 64))
(declare-fun temp444_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp444_169 () (_ BitVec 64))
(declare-fun temp444_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp444_171 () (_ BitVec 64))
(declare-fun temp444_172 () (_ BitVec 64))
(declare-fun temp444_173 () (_ BitVec 64))
(declare-fun temp444_174 () (_ BitVec 64))
(declare-fun temp444_175 () (_ BitVec 64))
(declare-fun temp444_176 () (_ BitVec 64))
(declare-fun temp444_177 () (_ BitVec 64))
(declare-fun temp444_178 () (_ BitVec 64))
(declare-fun temp444_179 () (_ BitVec 64))
(declare-fun temp444_180 () (_ BitVec 64))
(declare-fun temp444_181 () (_ BitVec 64))
(declare-fun temp444_182 () (_ BitVec 64))
(declare-fun temp444_183 () (_ BitVec 64))
(declare-fun temp444_184 () (_ BitVec 64))
(declare-fun temp444_185 () (_ BitVec 64))
(declare-fun temp444_186 () (_ BitVec 64))
(declare-fun temp444_187 () (_ BitVec 64))
(declare-fun temp444_188 () (_ BitVec 64))
(declare-fun temp444_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp444_190 () (_ BitVec 64))
(declare-fun temp444_192 () (_ BitVec 64))
(declare-fun temp444_193 () (_ BitVec 64))
(declare-fun temp444_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp444_194 () (_ BitVec 64))
(declare-fun temp444_195 () (_ BitVec 64))
(declare-fun temp444_197 () (_ BitVec 64))
(declare-fun temp444_198 () (_ BitVec 64))
(declare-fun temp444_196 () (_ BitVec 64))
(declare-fun temp444_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp444_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp444_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp444_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp444_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp444_204 () (_ BitVec 64))
(declare-fun temp444_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp444_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp444_207 () (_ BitVec 64))
(declare-fun temp444_208 () (_ BitVec 64))
(declare-fun temp444_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp444_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp444_211 () (_ BitVec 64))
(declare-fun temp444_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp444_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp444_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun var5190032 () (_ BitVec 64))
(declare-fun temp444_215 () (_ BitVec 64))
(declare-fun temp444_216 () (_ BitVec 64))
(declare-fun var6828820 () (_ BitVec 64))
(declare-fun var6828787 () (_ BitVec 64))
(declare-fun var6697351 () (_ BitVec 64))
(declare-fun var6697347 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp444_217 () (_ BitVec 64))
(assert (= temp444_1 #x0000000000000001))
(assert (= var77203 temp444_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp444_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp444_2)))
(assert (= temp444_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp444_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_4 #x0000000000000000))
(assert (= var210941 temp444_4))
(assert (= temp444_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp444_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_6 #x0000000000000000))
(assert (= var210986 temp444_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp444_7 #x0000000000000000))
(assert (= temp444_8 temp444_7))
(assert (= temp444_9 (select ARGNAME_padding_NAMEEND_VAL temp444_8)))
(assert (= temp444_10 #x0000000000000001))
(assert (= temp444_11 temp444_10))
(assert (= temp444_12 (select ARGNAME_padding_NAMEEND_VAL temp444_11)))
(assert (= temp444_13 #x0000000000000002))
(assert (= temp444_14 temp444_13))
(assert (= temp444_15 (select ARGNAME_padding_NAMEEND_VAL temp444_14)))
(assert (= temp444_16 #x0000000000000003))
(assert (= temp444_17 temp444_16))
(assert (= temp444_18 (select ARGNAME_padding_NAMEEND_VAL temp444_17)))
(assert (= temp444_19 #x0000000000000004))
(assert (= temp444_20 temp444_19))
(assert (= temp444_21 (select ARGNAME_padding_NAMEEND_VAL temp444_20)))
(assert (= temp444_22 #x0000000000000005))
(assert (= temp444_23 temp444_22))
(assert (= temp444_24 (select ARGNAME_padding_NAMEEND_VAL temp444_23)))
(assert (= temp444_25 #x0000000000000000))
(assert (= temp444_26 #x0000000000000000))
(assert (= temp444_27 temp444_26))
(assert (= temp444_28 (select ARGNAME_padding_NAMEEND_VAL temp444_27)))
(assert (= temp444_29 #x0000000000000000))
(assert (= temp444_30 #x0000000000000001))
(assert (= temp444_31 temp444_30))
(assert (= temp444_32 (select ARGNAME_padding_NAMEEND_VAL temp444_31)))
(assert (= temp444_33 #x0000000000000000))
(assert (= temp444_34 #x0000000000000002))
(assert (= temp444_35 temp444_34))
(assert (= temp444_36 (select ARGNAME_padding_NAMEEND_VAL temp444_35)))
(assert (= temp444_37 #x0000000000000000))
(assert (= temp444_38 #x0000000000000003))
(assert (= temp444_39 temp444_38))
(assert (= temp444_40 (select ARGNAME_padding_NAMEEND_VAL temp444_39)))
(assert (= temp444_41 #x0000000000000000))
(assert (= temp444_42 #x0000000000000004))
(assert (= temp444_43 temp444_42))
(assert (= temp444_44 (select ARGNAME_padding_NAMEEND_VAL temp444_43)))
(assert (= temp444_45 #x0000000000000000))
(assert (= temp444_46 #x0000000000000005))
(assert (= temp444_47 temp444_46))
(assert (= temp444_48 (select ARGNAME_padding_NAMEEND_VAL temp444_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp444_28 temp444_25)
             (bvslt temp444_32 temp444_29)
             (bvslt temp444_36 temp444_33)
             (bvslt temp444_40 temp444_37)
             (bvslt temp444_44 temp444_41)
             (bvslt temp444_48 temp444_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_49 #x0000000000000000))
(assert (= var1191714 temp444_49))
(assert (= temp444_50 #x0000000000000000))
(assert (= temp444_51 temp444_50))
(assert (= temp444_52 (select ARGNAME_output_padding_NAMEEND_VAL temp444_51)))
(assert (= temp444_53 #x0000000000000001))
(assert (= temp444_54 temp444_53))
(assert (= temp444_55 (select ARGNAME_output_padding_NAMEEND_VAL temp444_54)))
(assert (= temp444_56 #x0000000000000002))
(assert (= temp444_57 temp444_56))
(assert (= temp444_58 (select ARGNAME_output_padding_NAMEEND_VAL temp444_57)))
(assert (= temp444_59 #x0000000000000003))
(assert (= temp444_60 temp444_59))
(assert (= temp444_61 (select ARGNAME_output_padding_NAMEEND_VAL temp444_60)))
(assert (= temp444_62 #x0000000000000004))
(assert (= temp444_63 temp444_62))
(assert (= temp444_64 (select ARGNAME_output_padding_NAMEEND_VAL temp444_63)))
(assert (= temp444_65 #x0000000000000005))
(assert (= temp444_66 temp444_65))
(assert (= temp444_67 (select ARGNAME_output_padding_NAMEEND_VAL temp444_66)))
(assert (= temp444_68 #x0000000000000000))
(assert (= temp444_69 #x0000000000000000))
(assert (= temp444_70 temp444_69))
(assert (= temp444_71 (select ARGNAME_output_padding_NAMEEND_VAL temp444_70)))
(assert (= temp444_72 #x0000000000000000))
(assert (= temp444_73 #x0000000000000001))
(assert (= temp444_74 temp444_73))
(assert (= temp444_75 (select ARGNAME_output_padding_NAMEEND_VAL temp444_74)))
(assert (= temp444_76 #x0000000000000000))
(assert (= temp444_77 #x0000000000000002))
(assert (= temp444_78 temp444_77))
(assert (= temp444_79 (select ARGNAME_output_padding_NAMEEND_VAL temp444_78)))
(assert (= temp444_80 #x0000000000000000))
(assert (= temp444_81 #x0000000000000003))
(assert (= temp444_82 temp444_81))
(assert (= temp444_83 (select ARGNAME_output_padding_NAMEEND_VAL temp444_82)))
(assert (= temp444_84 #x0000000000000000))
(assert (= temp444_85 #x0000000000000004))
(assert (= temp444_86 temp444_85))
(assert (= temp444_87 (select ARGNAME_output_padding_NAMEEND_VAL temp444_86)))
(assert (= temp444_88 #x0000000000000000))
(assert (= temp444_89 #x0000000000000005))
(assert (= temp444_90 temp444_89))
(assert (= temp444_91 (select ARGNAME_output_padding_NAMEEND_VAL temp444_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp444_71 temp444_68)
             (bvslt temp444_75 temp444_72)
             (bvslt temp444_79 temp444_76)
             (bvslt temp444_83 temp444_80)
             (bvslt temp444_87 temp444_84)
             (bvslt temp444_91 temp444_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_92 #x0000000000000000))
(assert (= var1191725 temp444_92))
(assert (= temp444_93 #x0000000000000000))
(assert (= temp444_94 temp444_93))
(assert (= temp444_95 (select ARGNAME_stride_NAMEEND_VAL temp444_94)))
(assert (= temp444_96 #x0000000000000001))
(assert (= temp444_97 temp444_96))
(assert (= temp444_98 (select ARGNAME_stride_NAMEEND_VAL temp444_97)))
(assert (= temp444_99 #x0000000000000002))
(assert (= temp444_100 temp444_99))
(assert (= temp444_101 (select ARGNAME_stride_NAMEEND_VAL temp444_100)))
(assert (= temp444_102 #x0000000000000003))
(assert (= temp444_103 temp444_102))
(assert (= temp444_104 (select ARGNAME_stride_NAMEEND_VAL temp444_103)))
(assert (= temp444_105 #x0000000000000004))
(assert (= temp444_106 temp444_105))
(assert (= temp444_107 (select ARGNAME_stride_NAMEEND_VAL temp444_106)))
(assert (= temp444_108 #x0000000000000005))
(assert (= temp444_109 temp444_108))
(assert (= temp444_110 (select ARGNAME_stride_NAMEEND_VAL temp444_109)))
(assert (= temp444_111 #x0000000000000000))
(assert (= temp444_112 #x0000000000000000))
(assert (= temp444_113 temp444_112))
(assert (= temp444_114 (select ARGNAME_stride_NAMEEND_VAL temp444_113)))
(assert (= temp444_115 #x0000000000000000))
(assert (= temp444_116 #x0000000000000001))
(assert (= temp444_117 temp444_116))
(assert (= temp444_118 (select ARGNAME_stride_NAMEEND_VAL temp444_117)))
(assert (= temp444_119 #x0000000000000000))
(assert (= temp444_120 #x0000000000000002))
(assert (= temp444_121 temp444_120))
(assert (= temp444_122 (select ARGNAME_stride_NAMEEND_VAL temp444_121)))
(assert (= temp444_123 #x0000000000000000))
(assert (= temp444_124 #x0000000000000003))
(assert (= temp444_125 temp444_124))
(assert (= temp444_126 (select ARGNAME_stride_NAMEEND_VAL temp444_125)))
(assert (= temp444_127 #x0000000000000000))
(assert (= temp444_128 #x0000000000000004))
(assert (= temp444_129 temp444_128))
(assert (= temp444_130 (select ARGNAME_stride_NAMEEND_VAL temp444_129)))
(assert (= temp444_131 #x0000000000000000))
(assert (= temp444_132 #x0000000000000005))
(assert (= temp444_133 temp444_132))
(assert (= temp444_134 (select ARGNAME_stride_NAMEEND_VAL temp444_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp444_114 temp444_111)
             (bvsle temp444_118 temp444_115)
             (bvsle temp444_122 temp444_119)
             (bvsle temp444_126 temp444_123)
             (bvsle temp444_130 temp444_127)
             (bvsle temp444_134 temp444_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_135 #x0000000000000000))
(assert (= var1191735 temp444_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_136 #x0000000000000001))
(assert (= var1191747 temp444_136))
(assert (= temp444_137 #x0000000000000000))
(assert (= var1179826 temp444_137))
(assert (= temp444_138 #x0000000000000000))
(assert (= temp444_139 temp444_138))
(assert (= temp444_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_139)))
(assert (= temp444_141 #x0000000000000001))
(assert (= temp444_142 temp444_141))
(assert (= temp444_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_142)))
(assert (= temp444_144 #x0000000000000002))
(assert (= temp444_145 temp444_144))
(assert (= temp444_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_145)))
(assert (= temp444_147 #x0000000000000003))
(assert (= temp444_148 temp444_147))
(assert (= temp444_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_148)))
(assert (= temp444_150 #x0000000000000004))
(assert (= temp444_151 temp444_150))
(assert (= temp444_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_151)))
(assert (= temp444_153 #x0000000000000005))
(assert (= temp444_154 temp444_153))
(assert (= temp444_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_154)))
(assert (= temp444_157 var1179826))
(assert (= temp444_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_157)))
(assert (= temp444_156 temp444_158))
(assert (= var1191780
   (ite (bvslt temp444_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_159 #x0000000000000000))
(assert (= var1191780 temp444_159))
(assert (= temp444_160 #x0000000000000000))
(assert (= var1179826 temp444_160))
(assert (= temp444_162 var1179826))
(assert (= temp444_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_162)))
(assert (= temp444_161 temp444_163))
(assert (= var1191802 (bvsmod temp444_161 ARGNAME_groups_NAMEEND)))
(assert (= temp444_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp444_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp444_165 #x0000000000000001))
(assert (= var1191803 temp444_165))
(assert (= temp444_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp444_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_167 #x0000000000000001))
(assert (= var1191823 temp444_167))
(assert (= temp444_168 #x0000000000000001))
(assert (= var1180714 temp444_168))
(assert (= temp444_169 #x0000000000000000))
(assert (= temp444_170 temp444_169))
(assert (= temp444_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp444_170)))
(assert (= temp444_172 #x0000000000000001))
(assert (= temp444_173 temp444_172))
(assert (= temp444_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp444_173)))
(assert (= temp444_175 #x0000000000000002))
(assert (= temp444_176 temp444_175))
(assert (= temp444_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp444_176)))
(assert (= temp444_178 #x0000000000000003))
(assert (= temp444_179 temp444_178))
(assert (= temp444_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp444_179)))
(assert (= temp444_181 #x0000000000000004))
(assert (= temp444_182 temp444_181))
(assert (= temp444_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp444_182)))
(assert (= temp444_184 #x0000000000000005))
(assert (= temp444_185 temp444_184))
(assert (= temp444_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp444_185)))
(assert (= temp444_187 #x0000000000000000))
(assert (= temp444_188
   (ite (bvslt var1180714 temp444_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp444_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp444_188)))
(assert (= var1191831 temp444_189))
(assert (bvslt (ite (bvslt var1180714 temp444_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp444_190 #x0000000000000001))
(assert (= var1180714 temp444_190))
(assert (= temp444_192 var1180714))
(assert (= temp444_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_192)))
(assert (= temp444_191 temp444_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp444_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp444_194 #x0000000000000001))
(assert (= var1191836 temp444_194))
(assert (= temp444_195 #x0000000000000000))
(assert (= var1179826 temp444_195))
(assert (= temp444_197 var1179826))
(assert (= temp444_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp444_197)))
(assert (= temp444_196 temp444_198))
(assert (= temp444_199 #x0000000000000002))
(assert (= var1586025 temp444_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp444_200 #x0000000000000001))
(assert (= var1191993 temp444_200))
(assert (= temp444_201 #x0000000000000001))
(assert (= var2700303 temp444_201))
(assert (= temp444_202 #x0000000000000001))
(assert (= var2962447 temp444_202))
(assert (= temp444_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp444_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_204 #x0000000000000001))
(assert (= var211058 temp444_204))
(assert (= temp444_205 #x0000000000000001))
(assert (= var211188 temp444_205))
(assert (= var3879401 var211188))
(assert (= temp444_206 #x0000000000000000))
(assert (= var3866802 temp444_206))
(assert (= temp444_207 #x0000000000000000))
(assert (= temp444_208
   (ite (bvslt var3866802 temp444_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp444_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp444_208)))
(assert (= var3879420 temp444_209))
(assert (bvslt (ite (bvslt var3866802 temp444_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp444_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp444_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp444_211 #x0000000000000001))
(assert (= var3879421 temp444_211))
(assert (= temp444_212 #x0000000000000000))
(assert (= var4079423 temp444_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp444_213 #x0000000000000002))
(assert (= var4208259 temp444_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp444_214 #x0000000000000000))
(assert (= var4273820 temp444_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4927888 var211201))
(assert (= var5190032 var211201))
(assert (= temp444_215 #x0000000000000001))
(assert (= var211058 temp444_215))
(assert (= temp444_216 #x0000000000000000))
(assert (= var6828820 temp444_216))
(assert (= var6828787 var6828820))
(assert (= var6697351 var6828787))
(assert (= var6697347 var6697351))
(assert (= var212669 var6697347))
(assert (= temp444_217 #x0000000000000000))
(assert (= var212669 temp444_217))
(model-add temp444_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp444_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp444_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp444_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




