(declare-fun temp10621_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10621_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10621_3 () (_ BitVec 64))
(declare-fun temp10621_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10621_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10621_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10621_7 () (_ BitVec 64))
(declare-fun temp10621_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10621_9 () (_ BitVec 64))
(declare-fun temp10621_10 () (_ BitVec 64))
(declare-fun temp10621_11 () (_ BitVec 64))
(declare-fun temp10621_12 () (_ BitVec 64))
(declare-fun temp10621_13 () (_ BitVec 64))
(declare-fun temp10621_14 () (_ BitVec 64))
(declare-fun temp10621_15 () (_ BitVec 64))
(declare-fun temp10621_16 () (_ BitVec 64))
(declare-fun temp10621_17 () (_ BitVec 64))
(declare-fun temp10621_18 () (_ BitVec 64))
(declare-fun temp10621_19 () (_ BitVec 64))
(declare-fun temp10621_20 () (_ BitVec 64))
(declare-fun temp10621_21 () (_ BitVec 64))
(declare-fun temp10621_22 () (_ BitVec 64))
(declare-fun temp10621_23 () (_ BitVec 64))
(declare-fun temp10621_24 () (_ BitVec 64))
(declare-fun temp10621_25 () (_ BitVec 64))
(declare-fun temp10621_26 () (_ BitVec 64))
(declare-fun temp10621_27 () (_ BitVec 64))
(declare-fun temp10621_28 () (_ BitVec 64))
(declare-fun temp10621_29 () (_ BitVec 64))
(declare-fun temp10621_30 () (_ BitVec 64))
(declare-fun temp10621_31 () (_ BitVec 64))
(declare-fun temp10621_32 () (_ BitVec 64))
(declare-fun temp10621_33 () (_ BitVec 64))
(declare-fun temp10621_34 () (_ BitVec 64))
(declare-fun temp10621_35 () (_ BitVec 64))
(declare-fun temp10621_36 () (_ BitVec 64))
(declare-fun temp10621_37 () (_ BitVec 64))
(declare-fun temp10621_38 () (_ BitVec 64))
(declare-fun temp10621_39 () (_ BitVec 64))
(declare-fun temp10621_40 () (_ BitVec 64))
(declare-fun temp10621_41 () (_ BitVec 64))
(declare-fun temp10621_42 () (_ BitVec 64))
(declare-fun temp10621_43 () (_ BitVec 64))
(declare-fun temp10621_44 () (_ BitVec 64))
(declare-fun temp10621_45 () (_ BitVec 64))
(declare-fun temp10621_46 () (_ BitVec 64))
(declare-fun temp10621_47 () (_ BitVec 64))
(declare-fun temp10621_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10621_49 () (_ BitVec 64))
(declare-fun temp10621_50 () (_ BitVec 64))
(declare-fun temp10621_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10621_52 () (_ BitVec 64))
(declare-fun temp10621_53 () (_ BitVec 64))
(declare-fun temp10621_54 () (_ BitVec 64))
(declare-fun temp10621_55 () (_ BitVec 64))
(declare-fun temp10621_56 () (_ BitVec 64))
(declare-fun temp10621_57 () (_ BitVec 64))
(declare-fun temp10621_58 () (_ BitVec 64))
(declare-fun temp10621_59 () (_ BitVec 64))
(declare-fun temp10621_60 () (_ BitVec 64))
(declare-fun temp10621_61 () (_ BitVec 64))
(declare-fun temp10621_62 () (_ BitVec 64))
(declare-fun temp10621_63 () (_ BitVec 64))
(declare-fun temp10621_64 () (_ BitVec 64))
(declare-fun temp10621_65 () (_ BitVec 64))
(declare-fun temp10621_66 () (_ BitVec 64))
(declare-fun temp10621_67 () (_ BitVec 64))
(declare-fun temp10621_68 () (_ BitVec 64))
(declare-fun temp10621_69 () (_ BitVec 64))
(declare-fun temp10621_70 () (_ BitVec 64))
(declare-fun temp10621_71 () (_ BitVec 64))
(declare-fun temp10621_72 () (_ BitVec 64))
(declare-fun temp10621_73 () (_ BitVec 64))
(declare-fun temp10621_74 () (_ BitVec 64))
(declare-fun temp10621_75 () (_ BitVec 64))
(declare-fun temp10621_76 () (_ BitVec 64))
(declare-fun temp10621_77 () (_ BitVec 64))
(declare-fun temp10621_78 () (_ BitVec 64))
(declare-fun temp10621_79 () (_ BitVec 64))
(declare-fun temp10621_80 () (_ BitVec 64))
(declare-fun temp10621_81 () (_ BitVec 64))
(declare-fun temp10621_82 () (_ BitVec 64))
(declare-fun temp10621_83 () (_ BitVec 64))
(declare-fun temp10621_84 () (_ BitVec 64))
(declare-fun temp10621_85 () (_ BitVec 64))
(declare-fun temp10621_86 () (_ BitVec 64))
(declare-fun temp10621_87 () (_ BitVec 64))
(declare-fun temp10621_88 () (_ BitVec 64))
(declare-fun temp10621_89 () (_ BitVec 64))
(declare-fun temp10621_90 () (_ BitVec 64))
(declare-fun temp10621_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10621_92 () (_ BitVec 64))
(declare-fun temp10621_93 () (_ BitVec 64))
(declare-fun temp10621_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10621_95 () (_ BitVec 64))
(declare-fun temp10621_96 () (_ BitVec 64))
(declare-fun temp10621_97 () (_ BitVec 64))
(declare-fun temp10621_98 () (_ BitVec 64))
(declare-fun temp10621_99 () (_ BitVec 64))
(declare-fun temp10621_100 () (_ BitVec 64))
(declare-fun temp10621_101 () (_ BitVec 64))
(declare-fun temp10621_102 () (_ BitVec 64))
(declare-fun temp10621_103 () (_ BitVec 64))
(declare-fun temp10621_104 () (_ BitVec 64))
(declare-fun temp10621_105 () (_ BitVec 64))
(declare-fun temp10621_106 () (_ BitVec 64))
(declare-fun temp10621_107 () (_ BitVec 64))
(declare-fun temp10621_108 () (_ BitVec 64))
(declare-fun temp10621_109 () (_ BitVec 64))
(declare-fun temp10621_110 () (_ BitVec 64))
(declare-fun temp10621_111 () (_ BitVec 64))
(declare-fun temp10621_112 () (_ BitVec 64))
(declare-fun temp10621_113 () (_ BitVec 64))
(declare-fun temp10621_114 () (_ BitVec 64))
(declare-fun temp10621_115 () (_ BitVec 64))
(declare-fun temp10621_116 () (_ BitVec 64))
(declare-fun temp10621_117 () (_ BitVec 64))
(declare-fun temp10621_118 () (_ BitVec 64))
(declare-fun temp10621_119 () (_ BitVec 64))
(declare-fun temp10621_120 () (_ BitVec 64))
(declare-fun temp10621_121 () (_ BitVec 64))
(declare-fun temp10621_122 () (_ BitVec 64))
(declare-fun temp10621_123 () (_ BitVec 64))
(declare-fun temp10621_124 () (_ BitVec 64))
(declare-fun temp10621_125 () (_ BitVec 64))
(declare-fun temp10621_126 () (_ BitVec 64))
(declare-fun temp10621_127 () (_ BitVec 64))
(declare-fun temp10621_128 () (_ BitVec 64))
(declare-fun temp10621_129 () (_ BitVec 64))
(declare-fun temp10621_130 () (_ BitVec 64))
(declare-fun temp10621_131 () (_ BitVec 64))
(declare-fun temp10621_132 () (_ BitVec 64))
(declare-fun temp10621_133 () (_ BitVec 64))
(declare-fun temp10621_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10621_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10621_136 () (_ BitVec 64))
(declare-fun temp10621_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10621_138 () (_ BitVec 64))
(declare-fun temp10621_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10621_140 () (_ BitVec 64))
(declare-fun temp10621_141 () (_ BitVec 64))
(declare-fun temp10621_142 () (_ BitVec 64))
(declare-fun temp10621_143 () (_ BitVec 64))
(declare-fun temp10621_144 () (_ BitVec 64))
(declare-fun temp10621_145 () (_ BitVec 64))
(declare-fun temp10621_146 () (_ BitVec 64))
(declare-fun temp10621_147 () (_ BitVec 64))
(declare-fun temp10621_148 () (_ BitVec 64))
(declare-fun temp10621_149 () (_ BitVec 64))
(declare-fun temp10621_150 () (_ BitVec 64))
(declare-fun temp10621_151 () (_ BitVec 64))
(declare-fun temp10621_152 () (_ BitVec 64))
(declare-fun temp10621_153 () (_ BitVec 64))
(declare-fun temp10621_154 () (_ BitVec 64))
(declare-fun temp10621_155 () (_ BitVec 64))
(declare-fun temp10621_157 () (_ BitVec 64))
(declare-fun temp10621_158 () (_ BitVec 64))
(declare-fun temp10621_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10621_159 () (_ BitVec 64))
(declare-fun temp10621_160 () (_ BitVec 64))
(declare-fun temp10621_162 () (_ BitVec 64))
(declare-fun temp10621_163 () (_ BitVec 64))
(declare-fun temp10621_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10621_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10621_165 () (_ BitVec 64))
(declare-fun temp10621_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10621_167 () (_ BitVec 64))
(declare-fun temp10621_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10621_169 () (_ BitVec 64))
(declare-fun temp10621_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10621_171 () (_ BitVec 64))
(declare-fun temp10621_172 () (_ BitVec 64))
(declare-fun temp10621_173 () (_ BitVec 64))
(declare-fun temp10621_174 () (_ BitVec 64))
(declare-fun temp10621_175 () (_ BitVec 64))
(declare-fun temp10621_176 () (_ BitVec 64))
(declare-fun temp10621_177 () (_ BitVec 64))
(declare-fun temp10621_178 () (_ BitVec 64))
(declare-fun temp10621_179 () (_ BitVec 64))
(declare-fun temp10621_180 () (_ BitVec 64))
(declare-fun temp10621_181 () (_ BitVec 64))
(declare-fun temp10621_182 () (_ BitVec 64))
(declare-fun temp10621_183 () (_ BitVec 64))
(declare-fun temp10621_184 () (_ BitVec 64))
(declare-fun temp10621_185 () (_ BitVec 64))
(declare-fun temp10621_186 () (_ BitVec 64))
(declare-fun temp10621_187 () (_ BitVec 64))
(declare-fun temp10621_188 () (_ BitVec 64))
(declare-fun temp10621_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10621_190 () (_ BitVec 64))
(declare-fun temp10621_192 () (_ BitVec 64))
(declare-fun temp10621_193 () (_ BitVec 64))
(declare-fun temp10621_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10621_194 () (_ BitVec 64))
(declare-fun temp10621_195 () (_ BitVec 64))
(declare-fun temp10621_197 () (_ BitVec 64))
(declare-fun temp10621_198 () (_ BitVec 64))
(declare-fun temp10621_196 () (_ BitVec 64))
(declare-fun temp10621_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10621_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10621_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10621_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10621_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10621_204 () (_ BitVec 64))
(declare-fun temp10621_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10621_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10621_207 () (_ BitVec 64))
(declare-fun temp10621_208 () (_ BitVec 64))
(declare-fun temp10621_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10621_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10621_211 () (_ BitVec 64))
(declare-fun temp10621_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10621_213 () (_ BitVec 64))
(declare-fun temp10621_214 () (_ BitVec 64))
(declare-fun temp10621_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10621_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10621_217 () (_ BitVec 64))
(declare-fun temp10621_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10621_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10621_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10621_222 () (_ BitVec 64))
(declare-fun temp10621_221 () (_ BitVec 64))
(declare-fun temp10621_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10621_224 () (_ BitVec 64))
(declare-fun temp10621_225 () (_ BitVec 64))
(declare-fun temp10621_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10621_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10621_228 () (_ BitVec 64))
(declare-fun temp10621_230 () (_ BitVec 64))
(declare-fun temp10621_229 () (_ BitVec 64))
(declare-fun temp10621_231 () (_ BitVec 64))
(assert (= temp10621_1 #x0000000000000001))
(assert (= var77203 temp10621_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10621_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10621_2)))
(assert (= temp10621_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10621_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10621_4 #x0000000000000000))
(assert (= var210941 temp10621_4))
(assert (= temp10621_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10621_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10621_6 #x0000000000000000))
(assert (= var210986 temp10621_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10621_7 #x0000000000000000))
(assert (= temp10621_8 temp10621_7))
(assert (= temp10621_9 (select ARGNAME_padding_NAMEEND_VAL temp10621_8)))
(assert (= temp10621_10 #x0000000000000001))
(assert (= temp10621_11 temp10621_10))
(assert (= temp10621_12 (select ARGNAME_padding_NAMEEND_VAL temp10621_11)))
(assert (= temp10621_13 #x0000000000000002))
(assert (= temp10621_14 temp10621_13))
(assert (= temp10621_15 (select ARGNAME_padding_NAMEEND_VAL temp10621_14)))
(assert (= temp10621_16 #x0000000000000003))
(assert (= temp10621_17 temp10621_16))
(assert (= temp10621_18 (select ARGNAME_padding_NAMEEND_VAL temp10621_17)))
(assert (= temp10621_19 #x0000000000000004))
(assert (= temp10621_20 temp10621_19))
(assert (= temp10621_21 (select ARGNAME_padding_NAMEEND_VAL temp10621_20)))
(assert (= temp10621_22 #x0000000000000005))
(assert (= temp10621_23 temp10621_22))
(assert (= temp10621_24 (select ARGNAME_padding_NAMEEND_VAL temp10621_23)))
(assert (= temp10621_25 #x0000000000000000))
(assert (= temp10621_26 #x0000000000000000))
(assert (= temp10621_27 temp10621_26))
(assert (= temp10621_28 (select ARGNAME_padding_NAMEEND_VAL temp10621_27)))
(assert (= temp10621_29 #x0000000000000000))
(assert (= temp10621_30 #x0000000000000001))
(assert (= temp10621_31 temp10621_30))
(assert (= temp10621_32 (select ARGNAME_padding_NAMEEND_VAL temp10621_31)))
(assert (= temp10621_33 #x0000000000000000))
(assert (= temp10621_34 #x0000000000000002))
(assert (= temp10621_35 temp10621_34))
(assert (= temp10621_36 (select ARGNAME_padding_NAMEEND_VAL temp10621_35)))
(assert (= temp10621_37 #x0000000000000000))
(assert (= temp10621_38 #x0000000000000003))
(assert (= temp10621_39 temp10621_38))
(assert (= temp10621_40 (select ARGNAME_padding_NAMEEND_VAL temp10621_39)))
(assert (= temp10621_41 #x0000000000000000))
(assert (= temp10621_42 #x0000000000000004))
(assert (= temp10621_43 temp10621_42))
(assert (= temp10621_44 (select ARGNAME_padding_NAMEEND_VAL temp10621_43)))
(assert (= temp10621_45 #x0000000000000000))
(assert (= temp10621_46 #x0000000000000005))
(assert (= temp10621_47 temp10621_46))
(assert (= temp10621_48 (select ARGNAME_padding_NAMEEND_VAL temp10621_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10621_28 temp10621_25)
             (bvslt temp10621_32 temp10621_29)
             (bvslt temp10621_36 temp10621_33)
             (bvslt temp10621_40 temp10621_37)
             (bvslt temp10621_44 temp10621_41)
             (bvslt temp10621_48 temp10621_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10621_49 #x0000000000000000))
(assert (= var1191714 temp10621_49))
(assert (= temp10621_50 #x0000000000000000))
(assert (= temp10621_51 temp10621_50))
(assert (= temp10621_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10621_51)))
(assert (= temp10621_53 #x0000000000000001))
(assert (= temp10621_54 temp10621_53))
(assert (= temp10621_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10621_54)))
(assert (= temp10621_56 #x0000000000000002))
(assert (= temp10621_57 temp10621_56))
(assert (= temp10621_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10621_57)))
(assert (= temp10621_59 #x0000000000000003))
(assert (= temp10621_60 temp10621_59))
(assert (= temp10621_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10621_60)))
(assert (= temp10621_62 #x0000000000000004))
(assert (= temp10621_63 temp10621_62))
(assert (= temp10621_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10621_63)))
(assert (= temp10621_65 #x0000000000000005))
(assert (= temp10621_66 temp10621_65))
(assert (= temp10621_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10621_66)))
(assert (= temp10621_68 #x0000000000000000))
(assert (= temp10621_69 #x0000000000000000))
(assert (= temp10621_70 temp10621_69))
(assert (= temp10621_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10621_70)))
(assert (= temp10621_72 #x0000000000000000))
(assert (= temp10621_73 #x0000000000000001))
(assert (= temp10621_74 temp10621_73))
(assert (= temp10621_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10621_74)))
(assert (= temp10621_76 #x0000000000000000))
(assert (= temp10621_77 #x0000000000000002))
(assert (= temp10621_78 temp10621_77))
(assert (= temp10621_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10621_78)))
(assert (= temp10621_80 #x0000000000000000))
(assert (= temp10621_81 #x0000000000000003))
(assert (= temp10621_82 temp10621_81))
(assert (= temp10621_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10621_82)))
(assert (= temp10621_84 #x0000000000000000))
(assert (= temp10621_85 #x0000000000000004))
(assert (= temp10621_86 temp10621_85))
(assert (= temp10621_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10621_86)))
(assert (= temp10621_88 #x0000000000000000))
(assert (= temp10621_89 #x0000000000000005))
(assert (= temp10621_90 temp10621_89))
(assert (= temp10621_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10621_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10621_71 temp10621_68)
             (bvslt temp10621_75 temp10621_72)
             (bvslt temp10621_79 temp10621_76)
             (bvslt temp10621_83 temp10621_80)
             (bvslt temp10621_87 temp10621_84)
             (bvslt temp10621_91 temp10621_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10621_92 #x0000000000000000))
(assert (= var1191725 temp10621_92))
(assert (= temp10621_93 #x0000000000000000))
(assert (= temp10621_94 temp10621_93))
(assert (= temp10621_95 (select ARGNAME_stride_NAMEEND_VAL temp10621_94)))
(assert (= temp10621_96 #x0000000000000001))
(assert (= temp10621_97 temp10621_96))
(assert (= temp10621_98 (select ARGNAME_stride_NAMEEND_VAL temp10621_97)))
(assert (= temp10621_99 #x0000000000000002))
(assert (= temp10621_100 temp10621_99))
(assert (= temp10621_101 (select ARGNAME_stride_NAMEEND_VAL temp10621_100)))
(assert (= temp10621_102 #x0000000000000003))
(assert (= temp10621_103 temp10621_102))
(assert (= temp10621_104 (select ARGNAME_stride_NAMEEND_VAL temp10621_103)))
(assert (= temp10621_105 #x0000000000000004))
(assert (= temp10621_106 temp10621_105))
(assert (= temp10621_107 (select ARGNAME_stride_NAMEEND_VAL temp10621_106)))
(assert (= temp10621_108 #x0000000000000005))
(assert (= temp10621_109 temp10621_108))
(assert (= temp10621_110 (select ARGNAME_stride_NAMEEND_VAL temp10621_109)))
(assert (= temp10621_111 #x0000000000000000))
(assert (= temp10621_112 #x0000000000000000))
(assert (= temp10621_113 temp10621_112))
(assert (= temp10621_114 (select ARGNAME_stride_NAMEEND_VAL temp10621_113)))
(assert (= temp10621_115 #x0000000000000000))
(assert (= temp10621_116 #x0000000000000001))
(assert (= temp10621_117 temp10621_116))
(assert (= temp10621_118 (select ARGNAME_stride_NAMEEND_VAL temp10621_117)))
(assert (= temp10621_119 #x0000000000000000))
(assert (= temp10621_120 #x0000000000000002))
(assert (= temp10621_121 temp10621_120))
(assert (= temp10621_122 (select ARGNAME_stride_NAMEEND_VAL temp10621_121)))
(assert (= temp10621_123 #x0000000000000000))
(assert (= temp10621_124 #x0000000000000003))
(assert (= temp10621_125 temp10621_124))
(assert (= temp10621_126 (select ARGNAME_stride_NAMEEND_VAL temp10621_125)))
(assert (= temp10621_127 #x0000000000000000))
(assert (= temp10621_128 #x0000000000000004))
(assert (= temp10621_129 temp10621_128))
(assert (= temp10621_130 (select ARGNAME_stride_NAMEEND_VAL temp10621_129)))
(assert (= temp10621_131 #x0000000000000000))
(assert (= temp10621_132 #x0000000000000005))
(assert (= temp10621_133 temp10621_132))
(assert (= temp10621_134 (select ARGNAME_stride_NAMEEND_VAL temp10621_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10621_114 temp10621_111)
             (bvsle temp10621_118 temp10621_115)
             (bvsle temp10621_122 temp10621_119)
             (bvsle temp10621_126 temp10621_123)
             (bvsle temp10621_130 temp10621_127)
             (bvsle temp10621_134 temp10621_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10621_135 #x0000000000000000))
(assert (= var1191735 temp10621_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10621_136 #x0000000000000001))
(assert (= var1191747 temp10621_136))
(assert (= temp10621_137 #x0000000000000000))
(assert (= var1179826 temp10621_137))
(assert (= temp10621_138 #x0000000000000000))
(assert (= temp10621_139 temp10621_138))
(assert (= temp10621_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10621_139)))
(assert (= temp10621_141 #x0000000000000001))
(assert (= temp10621_142 temp10621_141))
(assert (= temp10621_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10621_142)))
(assert (= temp10621_144 #x0000000000000002))
(assert (= temp10621_145 temp10621_144))
(assert (= temp10621_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10621_145)))
(assert (= temp10621_147 #x0000000000000003))
(assert (= temp10621_148 temp10621_147))
(assert (= temp10621_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10621_148)))
(assert (= temp10621_150 #x0000000000000004))
(assert (= temp10621_151 temp10621_150))
(assert (= temp10621_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10621_151)))
(assert (= temp10621_153 #x0000000000000005))
(assert (= temp10621_154 temp10621_153))
(assert (= temp10621_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10621_154)))
(assert (= temp10621_157 var1179826))
(assert (= temp10621_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10621_157)))
(assert (= temp10621_156 temp10621_158))
(assert (= var1191780
   (ite (bvslt temp10621_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10621_159 #x0000000000000000))
(assert (= var1191780 temp10621_159))
(assert (= temp10621_160 #x0000000000000000))
(assert (= var1179826 temp10621_160))
(assert (= temp10621_162 var1179826))
(assert (= temp10621_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10621_162)))
(assert (= temp10621_161 temp10621_163))
(assert (= var1191802 (bvsmod temp10621_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10621_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10621_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10621_165 #x0000000000000001))
(assert (= var1191803 temp10621_165))
(assert (= temp10621_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10621_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10621_167 #x0000000000000001))
(assert (= var1191823 temp10621_167))
(assert (= temp10621_168 #x0000000000000001))
(assert (= var1180714 temp10621_168))
(assert (= temp10621_169 #x0000000000000000))
(assert (= temp10621_170 temp10621_169))
(assert (= temp10621_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10621_170)))
(assert (= temp10621_172 #x0000000000000001))
(assert (= temp10621_173 temp10621_172))
(assert (= temp10621_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10621_173)))
(assert (= temp10621_175 #x0000000000000002))
(assert (= temp10621_176 temp10621_175))
(assert (= temp10621_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10621_176)))
(assert (= temp10621_178 #x0000000000000003))
(assert (= temp10621_179 temp10621_178))
(assert (= temp10621_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10621_179)))
(assert (= temp10621_181 #x0000000000000004))
(assert (= temp10621_182 temp10621_181))
(assert (= temp10621_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10621_182)))
(assert (= temp10621_184 #x0000000000000005))
(assert (= temp10621_185 temp10621_184))
(assert (= temp10621_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10621_185)))
(assert (= temp10621_187 #x0000000000000000))
(assert (= temp10621_188
   (ite (bvslt var1180714 temp10621_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10621_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10621_188)))
(assert (= var1191831 temp10621_189))
(assert (bvslt (ite (bvslt var1180714 temp10621_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10621_190 #x0000000000000001))
(assert (= var1180714 temp10621_190))
(assert (= temp10621_192 var1180714))
(assert (= temp10621_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10621_192)))
(assert (= temp10621_191 temp10621_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10621_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10621_194 #x0000000000000001))
(assert (= var1191836 temp10621_194))
(assert (= temp10621_195 #x0000000000000000))
(assert (= var1179826 temp10621_195))
(assert (= temp10621_197 var1179826))
(assert (= temp10621_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10621_197)))
(assert (= temp10621_196 temp10621_198))
(assert (= temp10621_199 #x0000000000000002))
(assert (= var1586025 temp10621_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10621_200 #x0000000000000001))
(assert (= var1191993 temp10621_200))
(assert (= temp10621_201 #x0000000000000001))
(assert (= var2700303 temp10621_201))
(assert (= temp10621_202 #x0000000000000001))
(assert (= var2962447 temp10621_202))
(assert (= temp10621_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10621_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10621_204 #x0000000000000001))
(assert (= var211058 temp10621_204))
(assert (= temp10621_205 #x0000000000000001))
(assert (= var211188 temp10621_205))
(assert (= var3879401 var211188))
(assert (= temp10621_206 #x0000000000000000))
(assert (= var3866802 temp10621_206))
(assert (= temp10621_207 #x0000000000000000))
(assert (= temp10621_208
   (ite (bvslt var3866802 temp10621_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10621_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10621_208)))
(assert (= var3879420 temp10621_209))
(assert (bvslt (ite (bvslt var3866802 temp10621_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10621_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10621_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10621_211 #x0000000000000000))
(assert (= var3879421 temp10621_211))
(assert (= temp10621_212 #x0000000000000001))
(assert (= var3867690 temp10621_212))
(assert (= temp10621_213 #x0000000000000000))
(assert (= temp10621_214
   (ite (bvslt var3867690 temp10621_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10621_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10621_214)))
(assert (= var3879423 temp10621_215))
(assert (bvslt (ite (bvslt var3867690 temp10621_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10621_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10621_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10621_217 #x0000000000000001))
(assert (= var3879424 temp10621_217))
(assert (= temp10621_218 #x0000000000000000))
(assert (= var4133117 temp10621_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10621_219 #x0000000000000002))
(assert (= var4339331 temp10621_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10621_220 #x0000000000000000))
(assert (= var4404892 temp10621_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10621_222 #xffffffffffffffff))
(assert (= temp10621_221 temp10621_222))
(assert (= temp10621_223 #x0000000000000001))
(assert (= var197674 temp10621_223))
(assert (= temp10621_224 #x0000000000000000))
(assert (= temp10621_225
   (ite (bvslt var197674 temp10621_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10621_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10621_225)))
(assert (= var211595 temp10621_226))
(assert (bvslt (ite (bvslt var197674 temp10621_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10621_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10621_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10621_228 #x0000000000000001))
(assert (= var211596 temp10621_228))
(assert (= temp10621_230 #xffffffffffffffff))
(assert (= temp10621_229 temp10621_230))
(assert (= temp10621_231 #x0000000000000001))
(assert (= var211058 temp10621_231))
(model-add temp10621_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10621_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10621_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10621_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





