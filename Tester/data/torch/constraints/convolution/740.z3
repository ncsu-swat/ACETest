(declare-fun temp986_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp986_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp986_3 () (_ BitVec 64))
(declare-fun temp986_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp986_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp986_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp986_7 () (_ BitVec 64))
(declare-fun temp986_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp986_9 () (_ BitVec 64))
(declare-fun temp986_10 () (_ BitVec 64))
(declare-fun temp986_11 () (_ BitVec 64))
(declare-fun temp986_12 () (_ BitVec 64))
(declare-fun temp986_13 () (_ BitVec 64))
(declare-fun temp986_14 () (_ BitVec 64))
(declare-fun temp986_15 () (_ BitVec 64))
(declare-fun temp986_16 () (_ BitVec 64))
(declare-fun temp986_17 () (_ BitVec 64))
(declare-fun temp986_18 () (_ BitVec 64))
(declare-fun temp986_19 () (_ BitVec 64))
(declare-fun temp986_20 () (_ BitVec 64))
(declare-fun temp986_21 () (_ BitVec 64))
(declare-fun temp986_22 () (_ BitVec 64))
(declare-fun temp986_23 () (_ BitVec 64))
(declare-fun temp986_24 () (_ BitVec 64))
(declare-fun temp986_25 () (_ BitVec 64))
(declare-fun temp986_26 () (_ BitVec 64))
(declare-fun temp986_27 () (_ BitVec 64))
(declare-fun temp986_28 () (_ BitVec 64))
(declare-fun temp986_29 () (_ BitVec 64))
(declare-fun temp986_30 () (_ BitVec 64))
(declare-fun temp986_31 () (_ BitVec 64))
(declare-fun temp986_32 () (_ BitVec 64))
(declare-fun temp986_33 () (_ BitVec 64))
(declare-fun temp986_34 () (_ BitVec 64))
(declare-fun temp986_35 () (_ BitVec 64))
(declare-fun temp986_36 () (_ BitVec 64))
(declare-fun temp986_37 () (_ BitVec 64))
(declare-fun temp986_38 () (_ BitVec 64))
(declare-fun temp986_39 () (_ BitVec 64))
(declare-fun temp986_40 () (_ BitVec 64))
(declare-fun temp986_41 () (_ BitVec 64))
(declare-fun temp986_42 () (_ BitVec 64))
(declare-fun temp986_43 () (_ BitVec 64))
(declare-fun temp986_44 () (_ BitVec 64))
(declare-fun temp986_45 () (_ BitVec 64))
(declare-fun temp986_46 () (_ BitVec 64))
(declare-fun temp986_47 () (_ BitVec 64))
(declare-fun temp986_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp986_49 () (_ BitVec 64))
(declare-fun temp986_50 () (_ BitVec 64))
(declare-fun temp986_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp986_52 () (_ BitVec 64))
(declare-fun temp986_53 () (_ BitVec 64))
(declare-fun temp986_54 () (_ BitVec 64))
(declare-fun temp986_55 () (_ BitVec 64))
(declare-fun temp986_56 () (_ BitVec 64))
(declare-fun temp986_57 () (_ BitVec 64))
(declare-fun temp986_58 () (_ BitVec 64))
(declare-fun temp986_59 () (_ BitVec 64))
(declare-fun temp986_60 () (_ BitVec 64))
(declare-fun temp986_61 () (_ BitVec 64))
(declare-fun temp986_62 () (_ BitVec 64))
(declare-fun temp986_63 () (_ BitVec 64))
(declare-fun temp986_64 () (_ BitVec 64))
(declare-fun temp986_65 () (_ BitVec 64))
(declare-fun temp986_66 () (_ BitVec 64))
(declare-fun temp986_67 () (_ BitVec 64))
(declare-fun temp986_68 () (_ BitVec 64))
(declare-fun temp986_69 () (_ BitVec 64))
(declare-fun temp986_70 () (_ BitVec 64))
(declare-fun temp986_71 () (_ BitVec 64))
(declare-fun temp986_72 () (_ BitVec 64))
(declare-fun temp986_73 () (_ BitVec 64))
(declare-fun temp986_74 () (_ BitVec 64))
(declare-fun temp986_75 () (_ BitVec 64))
(declare-fun temp986_76 () (_ BitVec 64))
(declare-fun temp986_77 () (_ BitVec 64))
(declare-fun temp986_78 () (_ BitVec 64))
(declare-fun temp986_79 () (_ BitVec 64))
(declare-fun temp986_80 () (_ BitVec 64))
(declare-fun temp986_81 () (_ BitVec 64))
(declare-fun temp986_82 () (_ BitVec 64))
(declare-fun temp986_83 () (_ BitVec 64))
(declare-fun temp986_84 () (_ BitVec 64))
(declare-fun temp986_85 () (_ BitVec 64))
(declare-fun temp986_86 () (_ BitVec 64))
(declare-fun temp986_87 () (_ BitVec 64))
(declare-fun temp986_88 () (_ BitVec 64))
(declare-fun temp986_89 () (_ BitVec 64))
(declare-fun temp986_90 () (_ BitVec 64))
(declare-fun temp986_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp986_92 () (_ BitVec 64))
(declare-fun temp986_93 () (_ BitVec 64))
(declare-fun temp986_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp986_95 () (_ BitVec 64))
(declare-fun temp986_96 () (_ BitVec 64))
(declare-fun temp986_97 () (_ BitVec 64))
(declare-fun temp986_98 () (_ BitVec 64))
(declare-fun temp986_99 () (_ BitVec 64))
(declare-fun temp986_100 () (_ BitVec 64))
(declare-fun temp986_101 () (_ BitVec 64))
(declare-fun temp986_102 () (_ BitVec 64))
(declare-fun temp986_103 () (_ BitVec 64))
(declare-fun temp986_104 () (_ BitVec 64))
(declare-fun temp986_105 () (_ BitVec 64))
(declare-fun temp986_106 () (_ BitVec 64))
(declare-fun temp986_107 () (_ BitVec 64))
(declare-fun temp986_108 () (_ BitVec 64))
(declare-fun temp986_109 () (_ BitVec 64))
(declare-fun temp986_110 () (_ BitVec 64))
(declare-fun temp986_111 () (_ BitVec 64))
(declare-fun temp986_112 () (_ BitVec 64))
(declare-fun temp986_113 () (_ BitVec 64))
(declare-fun temp986_114 () (_ BitVec 64))
(declare-fun temp986_115 () (_ BitVec 64))
(declare-fun temp986_116 () (_ BitVec 64))
(declare-fun temp986_117 () (_ BitVec 64))
(declare-fun temp986_118 () (_ BitVec 64))
(declare-fun temp986_119 () (_ BitVec 64))
(declare-fun temp986_120 () (_ BitVec 64))
(declare-fun temp986_121 () (_ BitVec 64))
(declare-fun temp986_122 () (_ BitVec 64))
(declare-fun temp986_123 () (_ BitVec 64))
(declare-fun temp986_124 () (_ BitVec 64))
(declare-fun temp986_125 () (_ BitVec 64))
(declare-fun temp986_126 () (_ BitVec 64))
(declare-fun temp986_127 () (_ BitVec 64))
(declare-fun temp986_128 () (_ BitVec 64))
(declare-fun temp986_129 () (_ BitVec 64))
(declare-fun temp986_130 () (_ BitVec 64))
(declare-fun temp986_131 () (_ BitVec 64))
(declare-fun temp986_132 () (_ BitVec 64))
(declare-fun temp986_133 () (_ BitVec 64))
(declare-fun temp986_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp986_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp986_136 () (_ BitVec 64))
(declare-fun temp986_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp986_138 () (_ BitVec 64))
(declare-fun temp986_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp986_140 () (_ BitVec 64))
(declare-fun temp986_141 () (_ BitVec 64))
(declare-fun temp986_142 () (_ BitVec 64))
(declare-fun temp986_143 () (_ BitVec 64))
(declare-fun temp986_144 () (_ BitVec 64))
(declare-fun temp986_145 () (_ BitVec 64))
(declare-fun temp986_146 () (_ BitVec 64))
(declare-fun temp986_147 () (_ BitVec 64))
(declare-fun temp986_148 () (_ BitVec 64))
(declare-fun temp986_149 () (_ BitVec 64))
(declare-fun temp986_150 () (_ BitVec 64))
(declare-fun temp986_151 () (_ BitVec 64))
(declare-fun temp986_152 () (_ BitVec 64))
(declare-fun temp986_153 () (_ BitVec 64))
(declare-fun temp986_154 () (_ BitVec 64))
(declare-fun temp986_155 () (_ BitVec 64))
(declare-fun temp986_157 () (_ BitVec 64))
(declare-fun temp986_158 () (_ BitVec 64))
(declare-fun temp986_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp986_159 () (_ BitVec 64))
(declare-fun temp986_160 () (_ BitVec 64))
(declare-fun temp986_162 () (_ BitVec 64))
(declare-fun temp986_163 () (_ BitVec 64))
(declare-fun temp986_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp986_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp986_165 () (_ BitVec 64))
(declare-fun temp986_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp986_167 () (_ BitVec 64))
(declare-fun temp986_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp986_169 () (_ BitVec 64))
(declare-fun temp986_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp986_171 () (_ BitVec 64))
(declare-fun temp986_172 () (_ BitVec 64))
(declare-fun temp986_173 () (_ BitVec 64))
(declare-fun temp986_174 () (_ BitVec 64))
(declare-fun temp986_175 () (_ BitVec 64))
(declare-fun temp986_176 () (_ BitVec 64))
(declare-fun temp986_177 () (_ BitVec 64))
(declare-fun temp986_178 () (_ BitVec 64))
(declare-fun temp986_179 () (_ BitVec 64))
(declare-fun temp986_180 () (_ BitVec 64))
(declare-fun temp986_181 () (_ BitVec 64))
(declare-fun temp986_182 () (_ BitVec 64))
(declare-fun temp986_183 () (_ BitVec 64))
(declare-fun temp986_184 () (_ BitVec 64))
(declare-fun temp986_185 () (_ BitVec 64))
(declare-fun temp986_186 () (_ BitVec 64))
(declare-fun temp986_187 () (_ BitVec 64))
(declare-fun temp986_188 () (_ BitVec 64))
(declare-fun temp986_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp986_190 () (_ BitVec 64))
(declare-fun temp986_192 () (_ BitVec 64))
(declare-fun temp986_193 () (_ BitVec 64))
(declare-fun temp986_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp986_194 () (_ BitVec 64))
(declare-fun temp986_195 () (_ BitVec 64))
(declare-fun temp986_197 () (_ BitVec 64))
(declare-fun temp986_198 () (_ BitVec 64))
(declare-fun temp986_196 () (_ BitVec 64))
(declare-fun temp986_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp986_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp986_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp986_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp986_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp986_204 () (_ BitVec 64))
(declare-fun temp986_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp986_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp986_207 () (_ BitVec 64))
(declare-fun temp986_208 () (_ BitVec 64))
(declare-fun temp986_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp986_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp986_211 () (_ BitVec 64))
(declare-fun temp986_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp986_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp986_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp986_215 () (_ BitVec 64))
(assert (= temp986_1 #x0000000000000001))
(assert (= var77203 temp986_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp986_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp986_2)))
(assert (= temp986_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp986_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_4 #x0000000000000000))
(assert (= var210941 temp986_4))
(assert (= temp986_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp986_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_6 #x0000000000000000))
(assert (= var210986 temp986_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp986_7 #x0000000000000000))
(assert (= temp986_8 temp986_7))
(assert (= temp986_9 (select ARGNAME_padding_NAMEEND_VAL temp986_8)))
(assert (= temp986_10 #x0000000000000001))
(assert (= temp986_11 temp986_10))
(assert (= temp986_12 (select ARGNAME_padding_NAMEEND_VAL temp986_11)))
(assert (= temp986_13 #x0000000000000002))
(assert (= temp986_14 temp986_13))
(assert (= temp986_15 (select ARGNAME_padding_NAMEEND_VAL temp986_14)))
(assert (= temp986_16 #x0000000000000003))
(assert (= temp986_17 temp986_16))
(assert (= temp986_18 (select ARGNAME_padding_NAMEEND_VAL temp986_17)))
(assert (= temp986_19 #x0000000000000004))
(assert (= temp986_20 temp986_19))
(assert (= temp986_21 (select ARGNAME_padding_NAMEEND_VAL temp986_20)))
(assert (= temp986_22 #x0000000000000005))
(assert (= temp986_23 temp986_22))
(assert (= temp986_24 (select ARGNAME_padding_NAMEEND_VAL temp986_23)))
(assert (= temp986_25 #x0000000000000000))
(assert (= temp986_26 #x0000000000000000))
(assert (= temp986_27 temp986_26))
(assert (= temp986_28 (select ARGNAME_padding_NAMEEND_VAL temp986_27)))
(assert (= temp986_29 #x0000000000000000))
(assert (= temp986_30 #x0000000000000001))
(assert (= temp986_31 temp986_30))
(assert (= temp986_32 (select ARGNAME_padding_NAMEEND_VAL temp986_31)))
(assert (= temp986_33 #x0000000000000000))
(assert (= temp986_34 #x0000000000000002))
(assert (= temp986_35 temp986_34))
(assert (= temp986_36 (select ARGNAME_padding_NAMEEND_VAL temp986_35)))
(assert (= temp986_37 #x0000000000000000))
(assert (= temp986_38 #x0000000000000003))
(assert (= temp986_39 temp986_38))
(assert (= temp986_40 (select ARGNAME_padding_NAMEEND_VAL temp986_39)))
(assert (= temp986_41 #x0000000000000000))
(assert (= temp986_42 #x0000000000000004))
(assert (= temp986_43 temp986_42))
(assert (= temp986_44 (select ARGNAME_padding_NAMEEND_VAL temp986_43)))
(assert (= temp986_45 #x0000000000000000))
(assert (= temp986_46 #x0000000000000005))
(assert (= temp986_47 temp986_46))
(assert (= temp986_48 (select ARGNAME_padding_NAMEEND_VAL temp986_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp986_28 temp986_25)
             (bvslt temp986_32 temp986_29)
             (bvslt temp986_36 temp986_33)
             (bvslt temp986_40 temp986_37)
             (bvslt temp986_44 temp986_41)
             (bvslt temp986_48 temp986_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_49 #x0000000000000000))
(assert (= var1191714 temp986_49))
(assert (= temp986_50 #x0000000000000000))
(assert (= temp986_51 temp986_50))
(assert (= temp986_52 (select ARGNAME_output_padding_NAMEEND_VAL temp986_51)))
(assert (= temp986_53 #x0000000000000001))
(assert (= temp986_54 temp986_53))
(assert (= temp986_55 (select ARGNAME_output_padding_NAMEEND_VAL temp986_54)))
(assert (= temp986_56 #x0000000000000002))
(assert (= temp986_57 temp986_56))
(assert (= temp986_58 (select ARGNAME_output_padding_NAMEEND_VAL temp986_57)))
(assert (= temp986_59 #x0000000000000003))
(assert (= temp986_60 temp986_59))
(assert (= temp986_61 (select ARGNAME_output_padding_NAMEEND_VAL temp986_60)))
(assert (= temp986_62 #x0000000000000004))
(assert (= temp986_63 temp986_62))
(assert (= temp986_64 (select ARGNAME_output_padding_NAMEEND_VAL temp986_63)))
(assert (= temp986_65 #x0000000000000005))
(assert (= temp986_66 temp986_65))
(assert (= temp986_67 (select ARGNAME_output_padding_NAMEEND_VAL temp986_66)))
(assert (= temp986_68 #x0000000000000000))
(assert (= temp986_69 #x0000000000000000))
(assert (= temp986_70 temp986_69))
(assert (= temp986_71 (select ARGNAME_output_padding_NAMEEND_VAL temp986_70)))
(assert (= temp986_72 #x0000000000000000))
(assert (= temp986_73 #x0000000000000001))
(assert (= temp986_74 temp986_73))
(assert (= temp986_75 (select ARGNAME_output_padding_NAMEEND_VAL temp986_74)))
(assert (= temp986_76 #x0000000000000000))
(assert (= temp986_77 #x0000000000000002))
(assert (= temp986_78 temp986_77))
(assert (= temp986_79 (select ARGNAME_output_padding_NAMEEND_VAL temp986_78)))
(assert (= temp986_80 #x0000000000000000))
(assert (= temp986_81 #x0000000000000003))
(assert (= temp986_82 temp986_81))
(assert (= temp986_83 (select ARGNAME_output_padding_NAMEEND_VAL temp986_82)))
(assert (= temp986_84 #x0000000000000000))
(assert (= temp986_85 #x0000000000000004))
(assert (= temp986_86 temp986_85))
(assert (= temp986_87 (select ARGNAME_output_padding_NAMEEND_VAL temp986_86)))
(assert (= temp986_88 #x0000000000000000))
(assert (= temp986_89 #x0000000000000005))
(assert (= temp986_90 temp986_89))
(assert (= temp986_91 (select ARGNAME_output_padding_NAMEEND_VAL temp986_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp986_71 temp986_68)
             (bvslt temp986_75 temp986_72)
             (bvslt temp986_79 temp986_76)
             (bvslt temp986_83 temp986_80)
             (bvslt temp986_87 temp986_84)
             (bvslt temp986_91 temp986_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_92 #x0000000000000000))
(assert (= var1191725 temp986_92))
(assert (= temp986_93 #x0000000000000000))
(assert (= temp986_94 temp986_93))
(assert (= temp986_95 (select ARGNAME_stride_NAMEEND_VAL temp986_94)))
(assert (= temp986_96 #x0000000000000001))
(assert (= temp986_97 temp986_96))
(assert (= temp986_98 (select ARGNAME_stride_NAMEEND_VAL temp986_97)))
(assert (= temp986_99 #x0000000000000002))
(assert (= temp986_100 temp986_99))
(assert (= temp986_101 (select ARGNAME_stride_NAMEEND_VAL temp986_100)))
(assert (= temp986_102 #x0000000000000003))
(assert (= temp986_103 temp986_102))
(assert (= temp986_104 (select ARGNAME_stride_NAMEEND_VAL temp986_103)))
(assert (= temp986_105 #x0000000000000004))
(assert (= temp986_106 temp986_105))
(assert (= temp986_107 (select ARGNAME_stride_NAMEEND_VAL temp986_106)))
(assert (= temp986_108 #x0000000000000005))
(assert (= temp986_109 temp986_108))
(assert (= temp986_110 (select ARGNAME_stride_NAMEEND_VAL temp986_109)))
(assert (= temp986_111 #x0000000000000000))
(assert (= temp986_112 #x0000000000000000))
(assert (= temp986_113 temp986_112))
(assert (= temp986_114 (select ARGNAME_stride_NAMEEND_VAL temp986_113)))
(assert (= temp986_115 #x0000000000000000))
(assert (= temp986_116 #x0000000000000001))
(assert (= temp986_117 temp986_116))
(assert (= temp986_118 (select ARGNAME_stride_NAMEEND_VAL temp986_117)))
(assert (= temp986_119 #x0000000000000000))
(assert (= temp986_120 #x0000000000000002))
(assert (= temp986_121 temp986_120))
(assert (= temp986_122 (select ARGNAME_stride_NAMEEND_VAL temp986_121)))
(assert (= temp986_123 #x0000000000000000))
(assert (= temp986_124 #x0000000000000003))
(assert (= temp986_125 temp986_124))
(assert (= temp986_126 (select ARGNAME_stride_NAMEEND_VAL temp986_125)))
(assert (= temp986_127 #x0000000000000000))
(assert (= temp986_128 #x0000000000000004))
(assert (= temp986_129 temp986_128))
(assert (= temp986_130 (select ARGNAME_stride_NAMEEND_VAL temp986_129)))
(assert (= temp986_131 #x0000000000000000))
(assert (= temp986_132 #x0000000000000005))
(assert (= temp986_133 temp986_132))
(assert (= temp986_134 (select ARGNAME_stride_NAMEEND_VAL temp986_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp986_114 temp986_111)
             (bvsle temp986_118 temp986_115)
             (bvsle temp986_122 temp986_119)
             (bvsle temp986_126 temp986_123)
             (bvsle temp986_130 temp986_127)
             (bvsle temp986_134 temp986_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_135 #x0000000000000000))
(assert (= var1191735 temp986_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_136 #x0000000000000001))
(assert (= var1191747 temp986_136))
(assert (= temp986_137 #x0000000000000000))
(assert (= var1179826 temp986_137))
(assert (= temp986_138 #x0000000000000000))
(assert (= temp986_139 temp986_138))
(assert (= temp986_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_139)))
(assert (= temp986_141 #x0000000000000001))
(assert (= temp986_142 temp986_141))
(assert (= temp986_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_142)))
(assert (= temp986_144 #x0000000000000002))
(assert (= temp986_145 temp986_144))
(assert (= temp986_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_145)))
(assert (= temp986_147 #x0000000000000003))
(assert (= temp986_148 temp986_147))
(assert (= temp986_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_148)))
(assert (= temp986_150 #x0000000000000004))
(assert (= temp986_151 temp986_150))
(assert (= temp986_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_151)))
(assert (= temp986_153 #x0000000000000005))
(assert (= temp986_154 temp986_153))
(assert (= temp986_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_154)))
(assert (= temp986_157 var1179826))
(assert (= temp986_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_157)))
(assert (= temp986_156 temp986_158))
(assert (= var1191780
   (ite (bvslt temp986_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_159 #x0000000000000000))
(assert (= var1191780 temp986_159))
(assert (= temp986_160 #x0000000000000000))
(assert (= var1179826 temp986_160))
(assert (= temp986_162 var1179826))
(assert (= temp986_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_162)))
(assert (= temp986_161 temp986_163))
(assert (= var1191802 (bvsmod temp986_161 ARGNAME_groups_NAMEEND)))
(assert (= temp986_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp986_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp986_165 #x0000000000000001))
(assert (= var1191803 temp986_165))
(assert (= temp986_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp986_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_167 #x0000000000000001))
(assert (= var1191823 temp986_167))
(assert (= temp986_168 #x0000000000000001))
(assert (= var1180714 temp986_168))
(assert (= temp986_169 #x0000000000000000))
(assert (= temp986_170 temp986_169))
(assert (= temp986_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp986_170)))
(assert (= temp986_172 #x0000000000000001))
(assert (= temp986_173 temp986_172))
(assert (= temp986_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp986_173)))
(assert (= temp986_175 #x0000000000000002))
(assert (= temp986_176 temp986_175))
(assert (= temp986_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp986_176)))
(assert (= temp986_178 #x0000000000000003))
(assert (= temp986_179 temp986_178))
(assert (= temp986_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp986_179)))
(assert (= temp986_181 #x0000000000000004))
(assert (= temp986_182 temp986_181))
(assert (= temp986_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp986_182)))
(assert (= temp986_184 #x0000000000000005))
(assert (= temp986_185 temp986_184))
(assert (= temp986_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp986_185)))
(assert (= temp986_187 #x0000000000000000))
(assert (= temp986_188
   (ite (bvslt var1180714 temp986_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp986_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp986_188)))
(assert (= var1191831 temp986_189))
(assert (bvslt (ite (bvslt var1180714 temp986_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp986_190 #x0000000000000001))
(assert (= var1180714 temp986_190))
(assert (= temp986_192 var1180714))
(assert (= temp986_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_192)))
(assert (= temp986_191 temp986_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp986_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp986_194 #x0000000000000001))
(assert (= var1191836 temp986_194))
(assert (= temp986_195 #x0000000000000000))
(assert (= var1179826 temp986_195))
(assert (= temp986_197 var1179826))
(assert (= temp986_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_197)))
(assert (= temp986_196 temp986_198))
(assert (= temp986_199 #x0000000000000002))
(assert (= var1586025 temp986_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp986_200 #x0000000000000001))
(assert (= var1191993 temp986_200))
(assert (= temp986_201 #x0000000000000001))
(assert (= var2700303 temp986_201))
(assert (= temp986_202 #x0000000000000001))
(assert (= var2962447 temp986_202))
(assert (= temp986_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp986_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_204 #x0000000000000001))
(assert (= var211058 temp986_204))
(assert (= temp986_205 #x0000000000000001))
(assert (= var211188 temp986_205))
(assert (= var3879401 var211188))
(assert (= temp986_206 #x0000000000000000))
(assert (= var3866802 temp986_206))
(assert (= temp986_207 #x0000000000000000))
(assert (= temp986_208
   (ite (bvslt var3866802 temp986_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp986_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp986_208)))
(assert (= var3879420 temp986_209))
(assert (bvslt (ite (bvslt var3866802 temp986_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp986_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp986_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp986_211 #x0000000000000001))
(assert (= var3879421 temp986_211))
(assert (= temp986_212 #x0000000000000000))
(assert (= var4079423 temp986_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp986_213 #x0000000000000002))
(assert (= var4208259 temp986_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_214 #x0000000000000000))
(assert (= var4273820 temp986_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp986_215 #x0000000000000001))
(assert (= var211058 temp986_215))
(model-add temp986_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp986_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp986_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp986_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




