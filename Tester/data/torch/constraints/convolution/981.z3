(declare-fun temp1308_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1308_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1308_3 () (_ BitVec 64))
(declare-fun temp1308_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1308_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1308_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1308_7 () (_ BitVec 64))
(declare-fun temp1308_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1308_9 () (_ BitVec 64))
(declare-fun temp1308_10 () (_ BitVec 64))
(declare-fun temp1308_11 () (_ BitVec 64))
(declare-fun temp1308_12 () (_ BitVec 64))
(declare-fun temp1308_13 () (_ BitVec 64))
(declare-fun temp1308_14 () (_ BitVec 64))
(declare-fun temp1308_15 () (_ BitVec 64))
(declare-fun temp1308_16 () (_ BitVec 64))
(declare-fun temp1308_17 () (_ BitVec 64))
(declare-fun temp1308_18 () (_ BitVec 64))
(declare-fun temp1308_19 () (_ BitVec 64))
(declare-fun temp1308_20 () (_ BitVec 64))
(declare-fun temp1308_21 () (_ BitVec 64))
(declare-fun temp1308_22 () (_ BitVec 64))
(declare-fun temp1308_23 () (_ BitVec 64))
(declare-fun temp1308_24 () (_ BitVec 64))
(declare-fun temp1308_25 () (_ BitVec 64))
(declare-fun temp1308_26 () (_ BitVec 64))
(declare-fun temp1308_27 () (_ BitVec 64))
(declare-fun temp1308_28 () (_ BitVec 64))
(declare-fun temp1308_29 () (_ BitVec 64))
(declare-fun temp1308_30 () (_ BitVec 64))
(declare-fun temp1308_31 () (_ BitVec 64))
(declare-fun temp1308_32 () (_ BitVec 64))
(declare-fun temp1308_33 () (_ BitVec 64))
(declare-fun temp1308_34 () (_ BitVec 64))
(declare-fun temp1308_35 () (_ BitVec 64))
(declare-fun temp1308_36 () (_ BitVec 64))
(declare-fun temp1308_37 () (_ BitVec 64))
(declare-fun temp1308_38 () (_ BitVec 64))
(declare-fun temp1308_39 () (_ BitVec 64))
(declare-fun temp1308_40 () (_ BitVec 64))
(declare-fun temp1308_41 () (_ BitVec 64))
(declare-fun temp1308_42 () (_ BitVec 64))
(declare-fun temp1308_43 () (_ BitVec 64))
(declare-fun temp1308_44 () (_ BitVec 64))
(declare-fun temp1308_45 () (_ BitVec 64))
(declare-fun temp1308_46 () (_ BitVec 64))
(declare-fun temp1308_47 () (_ BitVec 64))
(declare-fun temp1308_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1308_49 () (_ BitVec 64))
(declare-fun temp1308_50 () (_ BitVec 64))
(declare-fun temp1308_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1308_52 () (_ BitVec 64))
(declare-fun temp1308_53 () (_ BitVec 64))
(declare-fun temp1308_54 () (_ BitVec 64))
(declare-fun temp1308_55 () (_ BitVec 64))
(declare-fun temp1308_56 () (_ BitVec 64))
(declare-fun temp1308_57 () (_ BitVec 64))
(declare-fun temp1308_58 () (_ BitVec 64))
(declare-fun temp1308_59 () (_ BitVec 64))
(declare-fun temp1308_60 () (_ BitVec 64))
(declare-fun temp1308_61 () (_ BitVec 64))
(declare-fun temp1308_62 () (_ BitVec 64))
(declare-fun temp1308_63 () (_ BitVec 64))
(declare-fun temp1308_64 () (_ BitVec 64))
(declare-fun temp1308_65 () (_ BitVec 64))
(declare-fun temp1308_66 () (_ BitVec 64))
(declare-fun temp1308_67 () (_ BitVec 64))
(declare-fun temp1308_68 () (_ BitVec 64))
(declare-fun temp1308_69 () (_ BitVec 64))
(declare-fun temp1308_70 () (_ BitVec 64))
(declare-fun temp1308_71 () (_ BitVec 64))
(declare-fun temp1308_72 () (_ BitVec 64))
(declare-fun temp1308_73 () (_ BitVec 64))
(declare-fun temp1308_74 () (_ BitVec 64))
(declare-fun temp1308_75 () (_ BitVec 64))
(declare-fun temp1308_76 () (_ BitVec 64))
(declare-fun temp1308_77 () (_ BitVec 64))
(declare-fun temp1308_78 () (_ BitVec 64))
(declare-fun temp1308_79 () (_ BitVec 64))
(declare-fun temp1308_80 () (_ BitVec 64))
(declare-fun temp1308_81 () (_ BitVec 64))
(declare-fun temp1308_82 () (_ BitVec 64))
(declare-fun temp1308_83 () (_ BitVec 64))
(declare-fun temp1308_84 () (_ BitVec 64))
(declare-fun temp1308_85 () (_ BitVec 64))
(declare-fun temp1308_86 () (_ BitVec 64))
(declare-fun temp1308_87 () (_ BitVec 64))
(declare-fun temp1308_88 () (_ BitVec 64))
(declare-fun temp1308_89 () (_ BitVec 64))
(declare-fun temp1308_90 () (_ BitVec 64))
(declare-fun temp1308_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1308_92 () (_ BitVec 64))
(declare-fun temp1308_93 () (_ BitVec 64))
(declare-fun temp1308_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1308_95 () (_ BitVec 64))
(declare-fun temp1308_96 () (_ BitVec 64))
(declare-fun temp1308_97 () (_ BitVec 64))
(declare-fun temp1308_98 () (_ BitVec 64))
(declare-fun temp1308_99 () (_ BitVec 64))
(declare-fun temp1308_100 () (_ BitVec 64))
(declare-fun temp1308_101 () (_ BitVec 64))
(declare-fun temp1308_102 () (_ BitVec 64))
(declare-fun temp1308_103 () (_ BitVec 64))
(declare-fun temp1308_104 () (_ BitVec 64))
(declare-fun temp1308_105 () (_ BitVec 64))
(declare-fun temp1308_106 () (_ BitVec 64))
(declare-fun temp1308_107 () (_ BitVec 64))
(declare-fun temp1308_108 () (_ BitVec 64))
(declare-fun temp1308_109 () (_ BitVec 64))
(declare-fun temp1308_110 () (_ BitVec 64))
(declare-fun temp1308_111 () (_ BitVec 64))
(declare-fun temp1308_112 () (_ BitVec 64))
(declare-fun temp1308_113 () (_ BitVec 64))
(declare-fun temp1308_114 () (_ BitVec 64))
(declare-fun temp1308_115 () (_ BitVec 64))
(declare-fun temp1308_116 () (_ BitVec 64))
(declare-fun temp1308_117 () (_ BitVec 64))
(declare-fun temp1308_118 () (_ BitVec 64))
(declare-fun temp1308_119 () (_ BitVec 64))
(declare-fun temp1308_120 () (_ BitVec 64))
(declare-fun temp1308_121 () (_ BitVec 64))
(declare-fun temp1308_122 () (_ BitVec 64))
(declare-fun temp1308_123 () (_ BitVec 64))
(declare-fun temp1308_124 () (_ BitVec 64))
(declare-fun temp1308_125 () (_ BitVec 64))
(declare-fun temp1308_126 () (_ BitVec 64))
(declare-fun temp1308_127 () (_ BitVec 64))
(declare-fun temp1308_128 () (_ BitVec 64))
(declare-fun temp1308_129 () (_ BitVec 64))
(declare-fun temp1308_130 () (_ BitVec 64))
(declare-fun temp1308_131 () (_ BitVec 64))
(declare-fun temp1308_132 () (_ BitVec 64))
(declare-fun temp1308_133 () (_ BitVec 64))
(declare-fun temp1308_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1308_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1308_136 () (_ BitVec 64))
(declare-fun temp1308_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1308_138 () (_ BitVec 64))
(declare-fun temp1308_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1308_140 () (_ BitVec 64))
(declare-fun temp1308_141 () (_ BitVec 64))
(declare-fun temp1308_142 () (_ BitVec 64))
(declare-fun temp1308_143 () (_ BitVec 64))
(declare-fun temp1308_144 () (_ BitVec 64))
(declare-fun temp1308_145 () (_ BitVec 64))
(declare-fun temp1308_146 () (_ BitVec 64))
(declare-fun temp1308_147 () (_ BitVec 64))
(declare-fun temp1308_148 () (_ BitVec 64))
(declare-fun temp1308_149 () (_ BitVec 64))
(declare-fun temp1308_150 () (_ BitVec 64))
(declare-fun temp1308_151 () (_ BitVec 64))
(declare-fun temp1308_152 () (_ BitVec 64))
(declare-fun temp1308_153 () (_ BitVec 64))
(declare-fun temp1308_154 () (_ BitVec 64))
(declare-fun temp1308_155 () (_ BitVec 64))
(declare-fun temp1308_157 () (_ BitVec 64))
(declare-fun temp1308_158 () (_ BitVec 64))
(declare-fun temp1308_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1308_159 () (_ BitVec 64))
(declare-fun temp1308_160 () (_ BitVec 64))
(declare-fun temp1308_162 () (_ BitVec 64))
(declare-fun temp1308_163 () (_ BitVec 64))
(declare-fun temp1308_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1308_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1308_165 () (_ BitVec 64))
(declare-fun temp1308_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1308_167 () (_ BitVec 64))
(declare-fun temp1308_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1308_169 () (_ BitVec 64))
(declare-fun temp1308_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1308_171 () (_ BitVec 64))
(declare-fun temp1308_172 () (_ BitVec 64))
(declare-fun temp1308_173 () (_ BitVec 64))
(declare-fun temp1308_174 () (_ BitVec 64))
(declare-fun temp1308_175 () (_ BitVec 64))
(declare-fun temp1308_176 () (_ BitVec 64))
(declare-fun temp1308_177 () (_ BitVec 64))
(declare-fun temp1308_178 () (_ BitVec 64))
(declare-fun temp1308_179 () (_ BitVec 64))
(declare-fun temp1308_180 () (_ BitVec 64))
(declare-fun temp1308_181 () (_ BitVec 64))
(declare-fun temp1308_182 () (_ BitVec 64))
(declare-fun temp1308_183 () (_ BitVec 64))
(declare-fun temp1308_184 () (_ BitVec 64))
(declare-fun temp1308_185 () (_ BitVec 64))
(declare-fun temp1308_186 () (_ BitVec 64))
(declare-fun temp1308_187 () (_ BitVec 64))
(declare-fun temp1308_188 () (_ BitVec 64))
(declare-fun temp1308_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1308_190 () (_ BitVec 64))
(declare-fun temp1308_192 () (_ BitVec 64))
(declare-fun temp1308_193 () (_ BitVec 64))
(declare-fun temp1308_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1308_194 () (_ BitVec 64))
(declare-fun temp1308_195 () (_ BitVec 64))
(declare-fun temp1308_197 () (_ BitVec 64))
(declare-fun temp1308_198 () (_ BitVec 64))
(declare-fun temp1308_196 () (_ BitVec 64))
(declare-fun temp1308_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1308_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1308_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1308_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1308_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1308_204 () (_ BitVec 64))
(declare-fun temp1308_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1308_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1308_207 () (_ BitVec 64))
(declare-fun temp1308_208 () (_ BitVec 64))
(declare-fun temp1308_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1308_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1308_211 () (_ BitVec 64))
(declare-fun temp1308_212 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1308_213 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp1308_214 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp1308_216 () (_ BitVec 64))
(declare-fun temp1308_215 () (_ BitVec 64))
(declare-fun temp1308_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp1308_218 () (_ BitVec 64))
(declare-fun temp1308_219 () (_ BitVec 64))
(declare-fun temp1308_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp1308_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp1308_222 () (_ BitVec 64))
(declare-fun temp1308_224 () (_ BitVec 64))
(declare-fun temp1308_223 () (_ BitVec 64))
(declare-fun temp1308_225 () (_ BitVec 64))
(declare-fun temp1308_226 () (_ BitVec 64))
(declare-fun var5583636 () (_ BitVec 64))
(declare-fun var5583603 () (_ BitVec 64))
(declare-fun var5452167 () (_ BitVec 64))
(declare-fun var5452163 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp1308_227 () (_ BitVec 64))
(assert (= temp1308_1 #x0000000000000001))
(assert (= var77203 temp1308_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1308_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1308_2)))
(assert (= temp1308_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1308_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1308_4 #x0000000000000000))
(assert (= var210941 temp1308_4))
(assert (= temp1308_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1308_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1308_6 #x0000000000000000))
(assert (= var210986 temp1308_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1308_7 #x0000000000000000))
(assert (= temp1308_8 temp1308_7))
(assert (= temp1308_9 (select ARGNAME_padding_NAMEEND_VAL temp1308_8)))
(assert (= temp1308_10 #x0000000000000001))
(assert (= temp1308_11 temp1308_10))
(assert (= temp1308_12 (select ARGNAME_padding_NAMEEND_VAL temp1308_11)))
(assert (= temp1308_13 #x0000000000000002))
(assert (= temp1308_14 temp1308_13))
(assert (= temp1308_15 (select ARGNAME_padding_NAMEEND_VAL temp1308_14)))
(assert (= temp1308_16 #x0000000000000003))
(assert (= temp1308_17 temp1308_16))
(assert (= temp1308_18 (select ARGNAME_padding_NAMEEND_VAL temp1308_17)))
(assert (= temp1308_19 #x0000000000000004))
(assert (= temp1308_20 temp1308_19))
(assert (= temp1308_21 (select ARGNAME_padding_NAMEEND_VAL temp1308_20)))
(assert (= temp1308_22 #x0000000000000005))
(assert (= temp1308_23 temp1308_22))
(assert (= temp1308_24 (select ARGNAME_padding_NAMEEND_VAL temp1308_23)))
(assert (= temp1308_25 #x0000000000000000))
(assert (= temp1308_26 #x0000000000000000))
(assert (= temp1308_27 temp1308_26))
(assert (= temp1308_28 (select ARGNAME_padding_NAMEEND_VAL temp1308_27)))
(assert (= temp1308_29 #x0000000000000000))
(assert (= temp1308_30 #x0000000000000001))
(assert (= temp1308_31 temp1308_30))
(assert (= temp1308_32 (select ARGNAME_padding_NAMEEND_VAL temp1308_31)))
(assert (= temp1308_33 #x0000000000000000))
(assert (= temp1308_34 #x0000000000000002))
(assert (= temp1308_35 temp1308_34))
(assert (= temp1308_36 (select ARGNAME_padding_NAMEEND_VAL temp1308_35)))
(assert (= temp1308_37 #x0000000000000000))
(assert (= temp1308_38 #x0000000000000003))
(assert (= temp1308_39 temp1308_38))
(assert (= temp1308_40 (select ARGNAME_padding_NAMEEND_VAL temp1308_39)))
(assert (= temp1308_41 #x0000000000000000))
(assert (= temp1308_42 #x0000000000000004))
(assert (= temp1308_43 temp1308_42))
(assert (= temp1308_44 (select ARGNAME_padding_NAMEEND_VAL temp1308_43)))
(assert (= temp1308_45 #x0000000000000000))
(assert (= temp1308_46 #x0000000000000005))
(assert (= temp1308_47 temp1308_46))
(assert (= temp1308_48 (select ARGNAME_padding_NAMEEND_VAL temp1308_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1308_28 temp1308_25)
             (bvslt temp1308_32 temp1308_29)
             (bvslt temp1308_36 temp1308_33)
             (bvslt temp1308_40 temp1308_37)
             (bvslt temp1308_44 temp1308_41)
             (bvslt temp1308_48 temp1308_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1308_49 #x0000000000000000))
(assert (= var1191714 temp1308_49))
(assert (= temp1308_50 #x0000000000000000))
(assert (= temp1308_51 temp1308_50))
(assert (= temp1308_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1308_51)))
(assert (= temp1308_53 #x0000000000000001))
(assert (= temp1308_54 temp1308_53))
(assert (= temp1308_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1308_54)))
(assert (= temp1308_56 #x0000000000000002))
(assert (= temp1308_57 temp1308_56))
(assert (= temp1308_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1308_57)))
(assert (= temp1308_59 #x0000000000000003))
(assert (= temp1308_60 temp1308_59))
(assert (= temp1308_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1308_60)))
(assert (= temp1308_62 #x0000000000000004))
(assert (= temp1308_63 temp1308_62))
(assert (= temp1308_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1308_63)))
(assert (= temp1308_65 #x0000000000000005))
(assert (= temp1308_66 temp1308_65))
(assert (= temp1308_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1308_66)))
(assert (= temp1308_68 #x0000000000000000))
(assert (= temp1308_69 #x0000000000000000))
(assert (= temp1308_70 temp1308_69))
(assert (= temp1308_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1308_70)))
(assert (= temp1308_72 #x0000000000000000))
(assert (= temp1308_73 #x0000000000000001))
(assert (= temp1308_74 temp1308_73))
(assert (= temp1308_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1308_74)))
(assert (= temp1308_76 #x0000000000000000))
(assert (= temp1308_77 #x0000000000000002))
(assert (= temp1308_78 temp1308_77))
(assert (= temp1308_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1308_78)))
(assert (= temp1308_80 #x0000000000000000))
(assert (= temp1308_81 #x0000000000000003))
(assert (= temp1308_82 temp1308_81))
(assert (= temp1308_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1308_82)))
(assert (= temp1308_84 #x0000000000000000))
(assert (= temp1308_85 #x0000000000000004))
(assert (= temp1308_86 temp1308_85))
(assert (= temp1308_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1308_86)))
(assert (= temp1308_88 #x0000000000000000))
(assert (= temp1308_89 #x0000000000000005))
(assert (= temp1308_90 temp1308_89))
(assert (= temp1308_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1308_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1308_71 temp1308_68)
             (bvslt temp1308_75 temp1308_72)
             (bvslt temp1308_79 temp1308_76)
             (bvslt temp1308_83 temp1308_80)
             (bvslt temp1308_87 temp1308_84)
             (bvslt temp1308_91 temp1308_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1308_92 #x0000000000000000))
(assert (= var1191725 temp1308_92))
(assert (= temp1308_93 #x0000000000000000))
(assert (= temp1308_94 temp1308_93))
(assert (= temp1308_95 (select ARGNAME_stride_NAMEEND_VAL temp1308_94)))
(assert (= temp1308_96 #x0000000000000001))
(assert (= temp1308_97 temp1308_96))
(assert (= temp1308_98 (select ARGNAME_stride_NAMEEND_VAL temp1308_97)))
(assert (= temp1308_99 #x0000000000000002))
(assert (= temp1308_100 temp1308_99))
(assert (= temp1308_101 (select ARGNAME_stride_NAMEEND_VAL temp1308_100)))
(assert (= temp1308_102 #x0000000000000003))
(assert (= temp1308_103 temp1308_102))
(assert (= temp1308_104 (select ARGNAME_stride_NAMEEND_VAL temp1308_103)))
(assert (= temp1308_105 #x0000000000000004))
(assert (= temp1308_106 temp1308_105))
(assert (= temp1308_107 (select ARGNAME_stride_NAMEEND_VAL temp1308_106)))
(assert (= temp1308_108 #x0000000000000005))
(assert (= temp1308_109 temp1308_108))
(assert (= temp1308_110 (select ARGNAME_stride_NAMEEND_VAL temp1308_109)))
(assert (= temp1308_111 #x0000000000000000))
(assert (= temp1308_112 #x0000000000000000))
(assert (= temp1308_113 temp1308_112))
(assert (= temp1308_114 (select ARGNAME_stride_NAMEEND_VAL temp1308_113)))
(assert (= temp1308_115 #x0000000000000000))
(assert (= temp1308_116 #x0000000000000001))
(assert (= temp1308_117 temp1308_116))
(assert (= temp1308_118 (select ARGNAME_stride_NAMEEND_VAL temp1308_117)))
(assert (= temp1308_119 #x0000000000000000))
(assert (= temp1308_120 #x0000000000000002))
(assert (= temp1308_121 temp1308_120))
(assert (= temp1308_122 (select ARGNAME_stride_NAMEEND_VAL temp1308_121)))
(assert (= temp1308_123 #x0000000000000000))
(assert (= temp1308_124 #x0000000000000003))
(assert (= temp1308_125 temp1308_124))
(assert (= temp1308_126 (select ARGNAME_stride_NAMEEND_VAL temp1308_125)))
(assert (= temp1308_127 #x0000000000000000))
(assert (= temp1308_128 #x0000000000000004))
(assert (= temp1308_129 temp1308_128))
(assert (= temp1308_130 (select ARGNAME_stride_NAMEEND_VAL temp1308_129)))
(assert (= temp1308_131 #x0000000000000000))
(assert (= temp1308_132 #x0000000000000005))
(assert (= temp1308_133 temp1308_132))
(assert (= temp1308_134 (select ARGNAME_stride_NAMEEND_VAL temp1308_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1308_114 temp1308_111)
             (bvsle temp1308_118 temp1308_115)
             (bvsle temp1308_122 temp1308_119)
             (bvsle temp1308_126 temp1308_123)
             (bvsle temp1308_130 temp1308_127)
             (bvsle temp1308_134 temp1308_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1308_135 #x0000000000000000))
(assert (= var1191735 temp1308_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1308_136 #x0000000000000001))
(assert (= var1191747 temp1308_136))
(assert (= temp1308_137 #x0000000000000000))
(assert (= var1179826 temp1308_137))
(assert (= temp1308_138 #x0000000000000000))
(assert (= temp1308_139 temp1308_138))
(assert (= temp1308_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1308_139)))
(assert (= temp1308_141 #x0000000000000001))
(assert (= temp1308_142 temp1308_141))
(assert (= temp1308_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1308_142)))
(assert (= temp1308_144 #x0000000000000002))
(assert (= temp1308_145 temp1308_144))
(assert (= temp1308_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1308_145)))
(assert (= temp1308_147 #x0000000000000003))
(assert (= temp1308_148 temp1308_147))
(assert (= temp1308_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1308_148)))
(assert (= temp1308_150 #x0000000000000004))
(assert (= temp1308_151 temp1308_150))
(assert (= temp1308_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1308_151)))
(assert (= temp1308_153 #x0000000000000005))
(assert (= temp1308_154 temp1308_153))
(assert (= temp1308_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1308_154)))
(assert (= temp1308_157 var1179826))
(assert (= temp1308_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1308_157)))
(assert (= temp1308_156 temp1308_158))
(assert (= var1191780
   (ite (bvslt temp1308_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1308_159 #x0000000000000000))
(assert (= var1191780 temp1308_159))
(assert (= temp1308_160 #x0000000000000000))
(assert (= var1179826 temp1308_160))
(assert (= temp1308_162 var1179826))
(assert (= temp1308_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1308_162)))
(assert (= temp1308_161 temp1308_163))
(assert (= var1191802 (bvsmod temp1308_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1308_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1308_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1308_165 #x0000000000000001))
(assert (= var1191803 temp1308_165))
(assert (= temp1308_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1308_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1308_167 #x0000000000000001))
(assert (= var1191823 temp1308_167))
(assert (= temp1308_168 #x0000000000000001))
(assert (= var1180714 temp1308_168))
(assert (= temp1308_169 #x0000000000000000))
(assert (= temp1308_170 temp1308_169))
(assert (= temp1308_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1308_170)))
(assert (= temp1308_172 #x0000000000000001))
(assert (= temp1308_173 temp1308_172))
(assert (= temp1308_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1308_173)))
(assert (= temp1308_175 #x0000000000000002))
(assert (= temp1308_176 temp1308_175))
(assert (= temp1308_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1308_176)))
(assert (= temp1308_178 #x0000000000000003))
(assert (= temp1308_179 temp1308_178))
(assert (= temp1308_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1308_179)))
(assert (= temp1308_181 #x0000000000000004))
(assert (= temp1308_182 temp1308_181))
(assert (= temp1308_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1308_182)))
(assert (= temp1308_184 #x0000000000000005))
(assert (= temp1308_185 temp1308_184))
(assert (= temp1308_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1308_185)))
(assert (= temp1308_187 #x0000000000000000))
(assert (= temp1308_188
   (ite (bvslt var1180714 temp1308_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1308_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1308_188)))
(assert (= var1191831 temp1308_189))
(assert (bvslt (ite (bvslt var1180714 temp1308_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1308_190 #x0000000000000001))
(assert (= var1180714 temp1308_190))
(assert (= temp1308_192 var1180714))
(assert (= temp1308_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1308_192)))
(assert (= temp1308_191 temp1308_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1308_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1308_194 #x0000000000000001))
(assert (= var1191836 temp1308_194))
(assert (= temp1308_195 #x0000000000000000))
(assert (= var1179826 temp1308_195))
(assert (= temp1308_197 var1179826))
(assert (= temp1308_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1308_197)))
(assert (= temp1308_196 temp1308_198))
(assert (= temp1308_199 #x0000000000000002))
(assert (= var1586025 temp1308_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1308_200 #x0000000000000001))
(assert (= var1191993 temp1308_200))
(assert (= temp1308_201 #x0000000000000001))
(assert (= var2700303 temp1308_201))
(assert (= temp1308_202 #x0000000000000001))
(assert (= var2962447 temp1308_202))
(assert (= temp1308_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1308_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1308_204 #x0000000000000001))
(assert (= var211058 temp1308_204))
(assert (= temp1308_205 #x0000000000000001))
(assert (= var211188 temp1308_205))
(assert (= var3879401 var211188))
(assert (= temp1308_206 #x0000000000000000))
(assert (= var3866802 temp1308_206))
(assert (= temp1308_207 #x0000000000000000))
(assert (= temp1308_208
   (ite (bvslt var3866802 temp1308_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1308_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1308_208)))
(assert (= var3879420 temp1308_209))
(assert (bvslt (ite (bvslt var3866802 temp1308_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1308_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1308_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1308_211 #x0000000000000001))
(assert (= var3879421 temp1308_211))
(assert (= temp1308_212 #x0000000000000000))
(assert (= var4133117 temp1308_212))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1308_213 #x0000000000000002))
(assert (= var4339331 temp1308_213))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1308_214 #x0000000000000000))
(assert (= var4404892 temp1308_214))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp1308_216 #xffffffffffffffff))
(assert (= temp1308_215 temp1308_216))
(assert (= temp1308_217 #x0000000000000001))
(assert (= var197674 temp1308_217))
(assert (= temp1308_218 #x0000000000000000))
(assert (= temp1308_219
   (ite (bvslt var197674 temp1308_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp1308_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp1308_219)))
(assert (= var211595 temp1308_220))
(assert (bvslt (ite (bvslt var197674 temp1308_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1308_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp1308_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp1308_222 #x0000000000000001))
(assert (= var211596 temp1308_222))
(assert (= temp1308_224 #xffffffffffffffff))
(assert (= temp1308_223 temp1308_224))
(assert (= temp1308_225 #x0000000000000001))
(assert (= var211058 temp1308_225))
(assert (= temp1308_226 #x0000000000000000))
(assert (= var5583636 temp1308_226))
(assert (= var5583603 var5583636))
(assert (= var5452167 var5583603))
(assert (= var5452163 var5452167))
(assert (= var212669 var5452163))
(assert (= temp1308_227 #x0000000000000000))
(assert (= var212669 temp1308_227))
(model-add temp1308_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1308_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1308_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1308_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





