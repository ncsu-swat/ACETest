(declare-fun temp11012_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11012_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11012_3 () (_ BitVec 64))
(declare-fun temp11012_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11012_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11012_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11012_7 () (_ BitVec 64))
(declare-fun temp11012_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11012_9 () (_ BitVec 64))
(declare-fun temp11012_10 () (_ BitVec 64))
(declare-fun temp11012_11 () (_ BitVec 64))
(declare-fun temp11012_12 () (_ BitVec 64))
(declare-fun temp11012_13 () (_ BitVec 64))
(declare-fun temp11012_14 () (_ BitVec 64))
(declare-fun temp11012_15 () (_ BitVec 64))
(declare-fun temp11012_16 () (_ BitVec 64))
(declare-fun temp11012_17 () (_ BitVec 64))
(declare-fun temp11012_18 () (_ BitVec 64))
(declare-fun temp11012_19 () (_ BitVec 64))
(declare-fun temp11012_20 () (_ BitVec 64))
(declare-fun temp11012_21 () (_ BitVec 64))
(declare-fun temp11012_22 () (_ BitVec 64))
(declare-fun temp11012_23 () (_ BitVec 64))
(declare-fun temp11012_24 () (_ BitVec 64))
(declare-fun temp11012_25 () (_ BitVec 64))
(declare-fun temp11012_26 () (_ BitVec 64))
(declare-fun temp11012_27 () (_ BitVec 64))
(declare-fun temp11012_28 () (_ BitVec 64))
(declare-fun temp11012_29 () (_ BitVec 64))
(declare-fun temp11012_30 () (_ BitVec 64))
(declare-fun temp11012_31 () (_ BitVec 64))
(declare-fun temp11012_32 () (_ BitVec 64))
(declare-fun temp11012_33 () (_ BitVec 64))
(declare-fun temp11012_34 () (_ BitVec 64))
(declare-fun temp11012_35 () (_ BitVec 64))
(declare-fun temp11012_36 () (_ BitVec 64))
(declare-fun temp11012_37 () (_ BitVec 64))
(declare-fun temp11012_38 () (_ BitVec 64))
(declare-fun temp11012_39 () (_ BitVec 64))
(declare-fun temp11012_40 () (_ BitVec 64))
(declare-fun temp11012_41 () (_ BitVec 64))
(declare-fun temp11012_42 () (_ BitVec 64))
(declare-fun temp11012_43 () (_ BitVec 64))
(declare-fun temp11012_44 () (_ BitVec 64))
(declare-fun temp11012_45 () (_ BitVec 64))
(declare-fun temp11012_46 () (_ BitVec 64))
(declare-fun temp11012_47 () (_ BitVec 64))
(declare-fun temp11012_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11012_49 () (_ BitVec 64))
(declare-fun temp11012_50 () (_ BitVec 64))
(declare-fun temp11012_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11012_52 () (_ BitVec 64))
(declare-fun temp11012_53 () (_ BitVec 64))
(declare-fun temp11012_54 () (_ BitVec 64))
(declare-fun temp11012_55 () (_ BitVec 64))
(declare-fun temp11012_56 () (_ BitVec 64))
(declare-fun temp11012_57 () (_ BitVec 64))
(declare-fun temp11012_58 () (_ BitVec 64))
(declare-fun temp11012_59 () (_ BitVec 64))
(declare-fun temp11012_60 () (_ BitVec 64))
(declare-fun temp11012_61 () (_ BitVec 64))
(declare-fun temp11012_62 () (_ BitVec 64))
(declare-fun temp11012_63 () (_ BitVec 64))
(declare-fun temp11012_64 () (_ BitVec 64))
(declare-fun temp11012_65 () (_ BitVec 64))
(declare-fun temp11012_66 () (_ BitVec 64))
(declare-fun temp11012_67 () (_ BitVec 64))
(declare-fun temp11012_68 () (_ BitVec 64))
(declare-fun temp11012_69 () (_ BitVec 64))
(declare-fun temp11012_70 () (_ BitVec 64))
(declare-fun temp11012_71 () (_ BitVec 64))
(declare-fun temp11012_72 () (_ BitVec 64))
(declare-fun temp11012_73 () (_ BitVec 64))
(declare-fun temp11012_74 () (_ BitVec 64))
(declare-fun temp11012_75 () (_ BitVec 64))
(declare-fun temp11012_76 () (_ BitVec 64))
(declare-fun temp11012_77 () (_ BitVec 64))
(declare-fun temp11012_78 () (_ BitVec 64))
(declare-fun temp11012_79 () (_ BitVec 64))
(declare-fun temp11012_80 () (_ BitVec 64))
(declare-fun temp11012_81 () (_ BitVec 64))
(declare-fun temp11012_82 () (_ BitVec 64))
(declare-fun temp11012_83 () (_ BitVec 64))
(declare-fun temp11012_84 () (_ BitVec 64))
(declare-fun temp11012_85 () (_ BitVec 64))
(declare-fun temp11012_86 () (_ BitVec 64))
(declare-fun temp11012_87 () (_ BitVec 64))
(declare-fun temp11012_88 () (_ BitVec 64))
(declare-fun temp11012_89 () (_ BitVec 64))
(declare-fun temp11012_90 () (_ BitVec 64))
(declare-fun temp11012_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11012_92 () (_ BitVec 64))
(declare-fun temp11012_93 () (_ BitVec 64))
(declare-fun temp11012_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11012_95 () (_ BitVec 64))
(declare-fun temp11012_96 () (_ BitVec 64))
(declare-fun temp11012_97 () (_ BitVec 64))
(declare-fun temp11012_98 () (_ BitVec 64))
(declare-fun temp11012_99 () (_ BitVec 64))
(declare-fun temp11012_100 () (_ BitVec 64))
(declare-fun temp11012_101 () (_ BitVec 64))
(declare-fun temp11012_102 () (_ BitVec 64))
(declare-fun temp11012_103 () (_ BitVec 64))
(declare-fun temp11012_104 () (_ BitVec 64))
(declare-fun temp11012_105 () (_ BitVec 64))
(declare-fun temp11012_106 () (_ BitVec 64))
(declare-fun temp11012_107 () (_ BitVec 64))
(declare-fun temp11012_108 () (_ BitVec 64))
(declare-fun temp11012_109 () (_ BitVec 64))
(declare-fun temp11012_110 () (_ BitVec 64))
(declare-fun temp11012_111 () (_ BitVec 64))
(declare-fun temp11012_112 () (_ BitVec 64))
(declare-fun temp11012_113 () (_ BitVec 64))
(declare-fun temp11012_114 () (_ BitVec 64))
(declare-fun temp11012_115 () (_ BitVec 64))
(declare-fun temp11012_116 () (_ BitVec 64))
(declare-fun temp11012_117 () (_ BitVec 64))
(declare-fun temp11012_118 () (_ BitVec 64))
(declare-fun temp11012_119 () (_ BitVec 64))
(declare-fun temp11012_120 () (_ BitVec 64))
(declare-fun temp11012_121 () (_ BitVec 64))
(declare-fun temp11012_122 () (_ BitVec 64))
(declare-fun temp11012_123 () (_ BitVec 64))
(declare-fun temp11012_124 () (_ BitVec 64))
(declare-fun temp11012_125 () (_ BitVec 64))
(declare-fun temp11012_126 () (_ BitVec 64))
(declare-fun temp11012_127 () (_ BitVec 64))
(declare-fun temp11012_128 () (_ BitVec 64))
(declare-fun temp11012_129 () (_ BitVec 64))
(declare-fun temp11012_130 () (_ BitVec 64))
(declare-fun temp11012_131 () (_ BitVec 64))
(declare-fun temp11012_132 () (_ BitVec 64))
(declare-fun temp11012_133 () (_ BitVec 64))
(declare-fun temp11012_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11012_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11012_136 () (_ BitVec 64))
(declare-fun temp11012_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11012_138 () (_ BitVec 64))
(declare-fun temp11012_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11012_140 () (_ BitVec 64))
(declare-fun temp11012_141 () (_ BitVec 64))
(declare-fun temp11012_142 () (_ BitVec 64))
(declare-fun temp11012_143 () (_ BitVec 64))
(declare-fun temp11012_144 () (_ BitVec 64))
(declare-fun temp11012_145 () (_ BitVec 64))
(declare-fun temp11012_146 () (_ BitVec 64))
(declare-fun temp11012_147 () (_ BitVec 64))
(declare-fun temp11012_148 () (_ BitVec 64))
(declare-fun temp11012_149 () (_ BitVec 64))
(declare-fun temp11012_150 () (_ BitVec 64))
(declare-fun temp11012_151 () (_ BitVec 64))
(declare-fun temp11012_152 () (_ BitVec 64))
(declare-fun temp11012_153 () (_ BitVec 64))
(declare-fun temp11012_154 () (_ BitVec 64))
(declare-fun temp11012_155 () (_ BitVec 64))
(declare-fun temp11012_157 () (_ BitVec 64))
(declare-fun temp11012_158 () (_ BitVec 64))
(declare-fun temp11012_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11012_159 () (_ BitVec 64))
(declare-fun temp11012_160 () (_ BitVec 64))
(declare-fun temp11012_162 () (_ BitVec 64))
(declare-fun temp11012_163 () (_ BitVec 64))
(declare-fun temp11012_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11012_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11012_165 () (_ BitVec 64))
(declare-fun temp11012_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11012_167 () (_ BitVec 64))
(declare-fun temp11012_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11012_169 () (_ BitVec 64))
(declare-fun temp11012_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11012_171 () (_ BitVec 64))
(declare-fun temp11012_172 () (_ BitVec 64))
(declare-fun temp11012_173 () (_ BitVec 64))
(declare-fun temp11012_174 () (_ BitVec 64))
(declare-fun temp11012_175 () (_ BitVec 64))
(declare-fun temp11012_176 () (_ BitVec 64))
(declare-fun temp11012_177 () (_ BitVec 64))
(declare-fun temp11012_178 () (_ BitVec 64))
(declare-fun temp11012_179 () (_ BitVec 64))
(declare-fun temp11012_180 () (_ BitVec 64))
(declare-fun temp11012_181 () (_ BitVec 64))
(declare-fun temp11012_182 () (_ BitVec 64))
(declare-fun temp11012_183 () (_ BitVec 64))
(declare-fun temp11012_184 () (_ BitVec 64))
(declare-fun temp11012_185 () (_ BitVec 64))
(declare-fun temp11012_186 () (_ BitVec 64))
(declare-fun temp11012_187 () (_ BitVec 64))
(declare-fun temp11012_188 () (_ BitVec 64))
(declare-fun temp11012_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11012_190 () (_ BitVec 64))
(declare-fun temp11012_192 () (_ BitVec 64))
(declare-fun temp11012_193 () (_ BitVec 64))
(declare-fun temp11012_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11012_194 () (_ BitVec 64))
(declare-fun temp11012_195 () (_ BitVec 64))
(declare-fun temp11012_197 () (_ BitVec 64))
(declare-fun temp11012_198 () (_ BitVec 64))
(declare-fun temp11012_196 () (_ BitVec 64))
(declare-fun temp11012_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11012_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11012_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11012_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11012_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11012_204 () (_ BitVec 64))
(declare-fun temp11012_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11012_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11012_207 () (_ BitVec 64))
(declare-fun temp11012_208 () (_ BitVec 64))
(declare-fun temp11012_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11012_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11012_211 () (_ BitVec 64))
(declare-fun temp11012_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11012_213 () (_ BitVec 64))
(declare-fun temp11012_214 () (_ BitVec 64))
(declare-fun temp11012_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11012_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11012_217 () (_ BitVec 64))
(declare-fun temp11012_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11012_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp11012_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun temp11012_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp11012_222 () (_ BitVec 64))
(declare-fun temp11012_223 () (_ BitVec 64))
(declare-fun var5191299 () (_ BitVec 64))
(declare-fun var5191301 () (_ BitVec 64))
(declare-fun var5256844 () (_ BitVec 64))
(declare-fun var5256845 () (_ BitVec 64))
(declare-fun temp11012_224 () (_ BitVec 64))
(declare-fun temp11012_225 () (_ BitVec 64))
(declare-fun var6304532 () (_ BitVec 64))
(declare-fun var6304499 () (_ BitVec 64))
(declare-fun var6173063 () (_ BitVec 64))
(declare-fun var6173059 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp11012_226 () (_ BitVec 64))
(assert (= temp11012_1 #x0000000000000001))
(assert (= var77203 temp11012_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11012_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11012_2)))
(assert (= temp11012_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11012_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11012_4 #x0000000000000000))
(assert (= var210941 temp11012_4))
(assert (= temp11012_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11012_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11012_6 #x0000000000000000))
(assert (= var210986 temp11012_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11012_7 #x0000000000000000))
(assert (= temp11012_8 temp11012_7))
(assert (= temp11012_9 (select ARGNAME_padding_NAMEEND_VAL temp11012_8)))
(assert (= temp11012_10 #x0000000000000001))
(assert (= temp11012_11 temp11012_10))
(assert (= temp11012_12 (select ARGNAME_padding_NAMEEND_VAL temp11012_11)))
(assert (= temp11012_13 #x0000000000000002))
(assert (= temp11012_14 temp11012_13))
(assert (= temp11012_15 (select ARGNAME_padding_NAMEEND_VAL temp11012_14)))
(assert (= temp11012_16 #x0000000000000003))
(assert (= temp11012_17 temp11012_16))
(assert (= temp11012_18 (select ARGNAME_padding_NAMEEND_VAL temp11012_17)))
(assert (= temp11012_19 #x0000000000000004))
(assert (= temp11012_20 temp11012_19))
(assert (= temp11012_21 (select ARGNAME_padding_NAMEEND_VAL temp11012_20)))
(assert (= temp11012_22 #x0000000000000005))
(assert (= temp11012_23 temp11012_22))
(assert (= temp11012_24 (select ARGNAME_padding_NAMEEND_VAL temp11012_23)))
(assert (= temp11012_25 #x0000000000000000))
(assert (= temp11012_26 #x0000000000000000))
(assert (= temp11012_27 temp11012_26))
(assert (= temp11012_28 (select ARGNAME_padding_NAMEEND_VAL temp11012_27)))
(assert (= temp11012_29 #x0000000000000000))
(assert (= temp11012_30 #x0000000000000001))
(assert (= temp11012_31 temp11012_30))
(assert (= temp11012_32 (select ARGNAME_padding_NAMEEND_VAL temp11012_31)))
(assert (= temp11012_33 #x0000000000000000))
(assert (= temp11012_34 #x0000000000000002))
(assert (= temp11012_35 temp11012_34))
(assert (= temp11012_36 (select ARGNAME_padding_NAMEEND_VAL temp11012_35)))
(assert (= temp11012_37 #x0000000000000000))
(assert (= temp11012_38 #x0000000000000003))
(assert (= temp11012_39 temp11012_38))
(assert (= temp11012_40 (select ARGNAME_padding_NAMEEND_VAL temp11012_39)))
(assert (= temp11012_41 #x0000000000000000))
(assert (= temp11012_42 #x0000000000000004))
(assert (= temp11012_43 temp11012_42))
(assert (= temp11012_44 (select ARGNAME_padding_NAMEEND_VAL temp11012_43)))
(assert (= temp11012_45 #x0000000000000000))
(assert (= temp11012_46 #x0000000000000005))
(assert (= temp11012_47 temp11012_46))
(assert (= temp11012_48 (select ARGNAME_padding_NAMEEND_VAL temp11012_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11012_28 temp11012_25)
             (bvslt temp11012_32 temp11012_29)
             (bvslt temp11012_36 temp11012_33)
             (bvslt temp11012_40 temp11012_37)
             (bvslt temp11012_44 temp11012_41)
             (bvslt temp11012_48 temp11012_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11012_49 #x0000000000000000))
(assert (= var1191714 temp11012_49))
(assert (= temp11012_50 #x0000000000000000))
(assert (= temp11012_51 temp11012_50))
(assert (= temp11012_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11012_51)))
(assert (= temp11012_53 #x0000000000000001))
(assert (= temp11012_54 temp11012_53))
(assert (= temp11012_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11012_54)))
(assert (= temp11012_56 #x0000000000000002))
(assert (= temp11012_57 temp11012_56))
(assert (= temp11012_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11012_57)))
(assert (= temp11012_59 #x0000000000000003))
(assert (= temp11012_60 temp11012_59))
(assert (= temp11012_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11012_60)))
(assert (= temp11012_62 #x0000000000000004))
(assert (= temp11012_63 temp11012_62))
(assert (= temp11012_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11012_63)))
(assert (= temp11012_65 #x0000000000000005))
(assert (= temp11012_66 temp11012_65))
(assert (= temp11012_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11012_66)))
(assert (= temp11012_68 #x0000000000000000))
(assert (= temp11012_69 #x0000000000000000))
(assert (= temp11012_70 temp11012_69))
(assert (= temp11012_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11012_70)))
(assert (= temp11012_72 #x0000000000000000))
(assert (= temp11012_73 #x0000000000000001))
(assert (= temp11012_74 temp11012_73))
(assert (= temp11012_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11012_74)))
(assert (= temp11012_76 #x0000000000000000))
(assert (= temp11012_77 #x0000000000000002))
(assert (= temp11012_78 temp11012_77))
(assert (= temp11012_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11012_78)))
(assert (= temp11012_80 #x0000000000000000))
(assert (= temp11012_81 #x0000000000000003))
(assert (= temp11012_82 temp11012_81))
(assert (= temp11012_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11012_82)))
(assert (= temp11012_84 #x0000000000000000))
(assert (= temp11012_85 #x0000000000000004))
(assert (= temp11012_86 temp11012_85))
(assert (= temp11012_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11012_86)))
(assert (= temp11012_88 #x0000000000000000))
(assert (= temp11012_89 #x0000000000000005))
(assert (= temp11012_90 temp11012_89))
(assert (= temp11012_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11012_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11012_71 temp11012_68)
             (bvslt temp11012_75 temp11012_72)
             (bvslt temp11012_79 temp11012_76)
             (bvslt temp11012_83 temp11012_80)
             (bvslt temp11012_87 temp11012_84)
             (bvslt temp11012_91 temp11012_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11012_92 #x0000000000000000))
(assert (= var1191725 temp11012_92))
(assert (= temp11012_93 #x0000000000000000))
(assert (= temp11012_94 temp11012_93))
(assert (= temp11012_95 (select ARGNAME_stride_NAMEEND_VAL temp11012_94)))
(assert (= temp11012_96 #x0000000000000001))
(assert (= temp11012_97 temp11012_96))
(assert (= temp11012_98 (select ARGNAME_stride_NAMEEND_VAL temp11012_97)))
(assert (= temp11012_99 #x0000000000000002))
(assert (= temp11012_100 temp11012_99))
(assert (= temp11012_101 (select ARGNAME_stride_NAMEEND_VAL temp11012_100)))
(assert (= temp11012_102 #x0000000000000003))
(assert (= temp11012_103 temp11012_102))
(assert (= temp11012_104 (select ARGNAME_stride_NAMEEND_VAL temp11012_103)))
(assert (= temp11012_105 #x0000000000000004))
(assert (= temp11012_106 temp11012_105))
(assert (= temp11012_107 (select ARGNAME_stride_NAMEEND_VAL temp11012_106)))
(assert (= temp11012_108 #x0000000000000005))
(assert (= temp11012_109 temp11012_108))
(assert (= temp11012_110 (select ARGNAME_stride_NAMEEND_VAL temp11012_109)))
(assert (= temp11012_111 #x0000000000000000))
(assert (= temp11012_112 #x0000000000000000))
(assert (= temp11012_113 temp11012_112))
(assert (= temp11012_114 (select ARGNAME_stride_NAMEEND_VAL temp11012_113)))
(assert (= temp11012_115 #x0000000000000000))
(assert (= temp11012_116 #x0000000000000001))
(assert (= temp11012_117 temp11012_116))
(assert (= temp11012_118 (select ARGNAME_stride_NAMEEND_VAL temp11012_117)))
(assert (= temp11012_119 #x0000000000000000))
(assert (= temp11012_120 #x0000000000000002))
(assert (= temp11012_121 temp11012_120))
(assert (= temp11012_122 (select ARGNAME_stride_NAMEEND_VAL temp11012_121)))
(assert (= temp11012_123 #x0000000000000000))
(assert (= temp11012_124 #x0000000000000003))
(assert (= temp11012_125 temp11012_124))
(assert (= temp11012_126 (select ARGNAME_stride_NAMEEND_VAL temp11012_125)))
(assert (= temp11012_127 #x0000000000000000))
(assert (= temp11012_128 #x0000000000000004))
(assert (= temp11012_129 temp11012_128))
(assert (= temp11012_130 (select ARGNAME_stride_NAMEEND_VAL temp11012_129)))
(assert (= temp11012_131 #x0000000000000000))
(assert (= temp11012_132 #x0000000000000005))
(assert (= temp11012_133 temp11012_132))
(assert (= temp11012_134 (select ARGNAME_stride_NAMEEND_VAL temp11012_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11012_114 temp11012_111)
             (bvsle temp11012_118 temp11012_115)
             (bvsle temp11012_122 temp11012_119)
             (bvsle temp11012_126 temp11012_123)
             (bvsle temp11012_130 temp11012_127)
             (bvsle temp11012_134 temp11012_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11012_135 #x0000000000000000))
(assert (= var1191735 temp11012_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11012_136 #x0000000000000001))
(assert (= var1191747 temp11012_136))
(assert (= temp11012_137 #x0000000000000000))
(assert (= var1179826 temp11012_137))
(assert (= temp11012_138 #x0000000000000000))
(assert (= temp11012_139 temp11012_138))
(assert (= temp11012_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11012_139)))
(assert (= temp11012_141 #x0000000000000001))
(assert (= temp11012_142 temp11012_141))
(assert (= temp11012_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11012_142)))
(assert (= temp11012_144 #x0000000000000002))
(assert (= temp11012_145 temp11012_144))
(assert (= temp11012_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11012_145)))
(assert (= temp11012_147 #x0000000000000003))
(assert (= temp11012_148 temp11012_147))
(assert (= temp11012_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11012_148)))
(assert (= temp11012_150 #x0000000000000004))
(assert (= temp11012_151 temp11012_150))
(assert (= temp11012_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11012_151)))
(assert (= temp11012_153 #x0000000000000005))
(assert (= temp11012_154 temp11012_153))
(assert (= temp11012_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11012_154)))
(assert (= temp11012_157 var1179826))
(assert (= temp11012_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11012_157)))
(assert (= temp11012_156 temp11012_158))
(assert (= var1191780
   (ite (bvslt temp11012_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11012_159 #x0000000000000000))
(assert (= var1191780 temp11012_159))
(assert (= temp11012_160 #x0000000000000000))
(assert (= var1179826 temp11012_160))
(assert (= temp11012_162 var1179826))
(assert (= temp11012_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11012_162)))
(assert (= temp11012_161 temp11012_163))
(assert (= var1191802 (bvsmod temp11012_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11012_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11012_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11012_165 #x0000000000000001))
(assert (= var1191803 temp11012_165))
(assert (= temp11012_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11012_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11012_167 #x0000000000000001))
(assert (= var1191823 temp11012_167))
(assert (= temp11012_168 #x0000000000000001))
(assert (= var1180714 temp11012_168))
(assert (= temp11012_169 #x0000000000000000))
(assert (= temp11012_170 temp11012_169))
(assert (= temp11012_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11012_170)))
(assert (= temp11012_172 #x0000000000000001))
(assert (= temp11012_173 temp11012_172))
(assert (= temp11012_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11012_173)))
(assert (= temp11012_175 #x0000000000000002))
(assert (= temp11012_176 temp11012_175))
(assert (= temp11012_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11012_176)))
(assert (= temp11012_178 #x0000000000000003))
(assert (= temp11012_179 temp11012_178))
(assert (= temp11012_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11012_179)))
(assert (= temp11012_181 #x0000000000000004))
(assert (= temp11012_182 temp11012_181))
(assert (= temp11012_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11012_182)))
(assert (= temp11012_184 #x0000000000000005))
(assert (= temp11012_185 temp11012_184))
(assert (= temp11012_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11012_185)))
(assert (= temp11012_187 #x0000000000000000))
(assert (= temp11012_188
   (ite (bvslt var1180714 temp11012_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11012_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11012_188)))
(assert (= var1191831 temp11012_189))
(assert (bvslt (ite (bvslt var1180714 temp11012_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11012_190 #x0000000000000001))
(assert (= var1180714 temp11012_190))
(assert (= temp11012_192 var1180714))
(assert (= temp11012_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11012_192)))
(assert (= temp11012_191 temp11012_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11012_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11012_194 #x0000000000000001))
(assert (= var1191836 temp11012_194))
(assert (= temp11012_195 #x0000000000000000))
(assert (= var1179826 temp11012_195))
(assert (= temp11012_197 var1179826))
(assert (= temp11012_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11012_197)))
(assert (= temp11012_196 temp11012_198))
(assert (= temp11012_199 #x0000000000000002))
(assert (= var1586025 temp11012_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11012_200 #x0000000000000001))
(assert (= var1191993 temp11012_200))
(assert (= temp11012_201 #x0000000000000001))
(assert (= var2700303 temp11012_201))
(assert (= temp11012_202 #x0000000000000001))
(assert (= var2962447 temp11012_202))
(assert (= temp11012_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11012_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11012_204 #x0000000000000001))
(assert (= var211058 temp11012_204))
(assert (= temp11012_205 #x0000000000000001))
(assert (= var211188 temp11012_205))
(assert (= var3879401 var211188))
(assert (= temp11012_206 #x0000000000000000))
(assert (= var3866802 temp11012_206))
(assert (= temp11012_207 #x0000000000000000))
(assert (= temp11012_208
   (ite (bvslt var3866802 temp11012_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11012_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11012_208)))
(assert (= var3879420 temp11012_209))
(assert (bvslt (ite (bvslt var3866802 temp11012_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11012_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11012_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11012_211 #x0000000000000000))
(assert (= var3879421 temp11012_211))
(assert (= temp11012_212 #x0000000000000001))
(assert (= var3867690 temp11012_212))
(assert (= temp11012_213 #x0000000000000000))
(assert (= temp11012_214
   (ite (bvslt var3867690 temp11012_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11012_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11012_214)))
(assert (= var3879423 temp11012_215))
(assert (bvslt (ite (bvslt var3867690 temp11012_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11012_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11012_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11012_217 #x0000000000000001))
(assert (= var3879424 temp11012_217))
(assert (= temp11012_218 #x0000000000000000))
(assert (= var4133117 temp11012_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11012_219 #x0000000000000002))
(assert (= var4339331 temp11012_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11012_220 #x0000000000000000))
(assert (= var4404892 temp11012_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4600208 var211201))
(assert (= var4862352 var211201))
(assert (= temp11012_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp11012_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11012_222 #x0000000000000001))
(assert (= var212414 temp11012_222))
(assert (= temp11012_223 #x0000000000000002))
(assert (= var5191299 temp11012_223))
(assert (= var5191301 (bvsub ARGNAME_weight_NAMEEND_DIM var5191299)))
(assert (= var5256844 var5191299))
(assert (= var5256845 var5191301))
(assert (= temp11012_224 #x0000000000000001))
(assert (= var211058 temp11012_224))
(assert (= temp11012_225 #x0000000000000000))
(assert (= var6304532 temp11012_225))
(assert (= var6304499 var6304532))
(assert (= var6173063 var6304499))
(assert (= var6173059 var6173063))
(assert (= var212669 var6173059))
(assert (= temp11012_226 #x0000000000000000))
(assert (= var212669 temp11012_226))
(model-add temp11012_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11012_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11012_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11012_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





