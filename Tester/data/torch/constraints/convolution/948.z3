(declare-fun temp1264_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1264_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1264_3 () (_ BitVec 64))
(declare-fun temp1264_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1264_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1264_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1264_7 () (_ BitVec 64))
(declare-fun temp1264_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1264_9 () (_ BitVec 64))
(declare-fun temp1264_10 () (_ BitVec 64))
(declare-fun temp1264_11 () (_ BitVec 64))
(declare-fun temp1264_12 () (_ BitVec 64))
(declare-fun temp1264_13 () (_ BitVec 64))
(declare-fun temp1264_14 () (_ BitVec 64))
(declare-fun temp1264_15 () (_ BitVec 64))
(declare-fun temp1264_16 () (_ BitVec 64))
(declare-fun temp1264_17 () (_ BitVec 64))
(declare-fun temp1264_18 () (_ BitVec 64))
(declare-fun temp1264_19 () (_ BitVec 64))
(declare-fun temp1264_20 () (_ BitVec 64))
(declare-fun temp1264_21 () (_ BitVec 64))
(declare-fun temp1264_22 () (_ BitVec 64))
(declare-fun temp1264_23 () (_ BitVec 64))
(declare-fun temp1264_24 () (_ BitVec 64))
(declare-fun temp1264_25 () (_ BitVec 64))
(declare-fun temp1264_26 () (_ BitVec 64))
(declare-fun temp1264_27 () (_ BitVec 64))
(declare-fun temp1264_28 () (_ BitVec 64))
(declare-fun temp1264_29 () (_ BitVec 64))
(declare-fun temp1264_30 () (_ BitVec 64))
(declare-fun temp1264_31 () (_ BitVec 64))
(declare-fun temp1264_32 () (_ BitVec 64))
(declare-fun temp1264_33 () (_ BitVec 64))
(declare-fun temp1264_34 () (_ BitVec 64))
(declare-fun temp1264_35 () (_ BitVec 64))
(declare-fun temp1264_36 () (_ BitVec 64))
(declare-fun temp1264_37 () (_ BitVec 64))
(declare-fun temp1264_38 () (_ BitVec 64))
(declare-fun temp1264_39 () (_ BitVec 64))
(declare-fun temp1264_40 () (_ BitVec 64))
(declare-fun temp1264_41 () (_ BitVec 64))
(declare-fun temp1264_42 () (_ BitVec 64))
(declare-fun temp1264_43 () (_ BitVec 64))
(declare-fun temp1264_44 () (_ BitVec 64))
(declare-fun temp1264_45 () (_ BitVec 64))
(declare-fun temp1264_46 () (_ BitVec 64))
(declare-fun temp1264_47 () (_ BitVec 64))
(declare-fun temp1264_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1264_49 () (_ BitVec 64))
(declare-fun temp1264_50 () (_ BitVec 64))
(declare-fun temp1264_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1264_52 () (_ BitVec 64))
(declare-fun temp1264_53 () (_ BitVec 64))
(declare-fun temp1264_54 () (_ BitVec 64))
(declare-fun temp1264_55 () (_ BitVec 64))
(declare-fun temp1264_56 () (_ BitVec 64))
(declare-fun temp1264_57 () (_ BitVec 64))
(declare-fun temp1264_58 () (_ BitVec 64))
(declare-fun temp1264_59 () (_ BitVec 64))
(declare-fun temp1264_60 () (_ BitVec 64))
(declare-fun temp1264_61 () (_ BitVec 64))
(declare-fun temp1264_62 () (_ BitVec 64))
(declare-fun temp1264_63 () (_ BitVec 64))
(declare-fun temp1264_64 () (_ BitVec 64))
(declare-fun temp1264_65 () (_ BitVec 64))
(declare-fun temp1264_66 () (_ BitVec 64))
(declare-fun temp1264_67 () (_ BitVec 64))
(declare-fun temp1264_68 () (_ BitVec 64))
(declare-fun temp1264_69 () (_ BitVec 64))
(declare-fun temp1264_70 () (_ BitVec 64))
(declare-fun temp1264_71 () (_ BitVec 64))
(declare-fun temp1264_72 () (_ BitVec 64))
(declare-fun temp1264_73 () (_ BitVec 64))
(declare-fun temp1264_74 () (_ BitVec 64))
(declare-fun temp1264_75 () (_ BitVec 64))
(declare-fun temp1264_76 () (_ BitVec 64))
(declare-fun temp1264_77 () (_ BitVec 64))
(declare-fun temp1264_78 () (_ BitVec 64))
(declare-fun temp1264_79 () (_ BitVec 64))
(declare-fun temp1264_80 () (_ BitVec 64))
(declare-fun temp1264_81 () (_ BitVec 64))
(declare-fun temp1264_82 () (_ BitVec 64))
(declare-fun temp1264_83 () (_ BitVec 64))
(declare-fun temp1264_84 () (_ BitVec 64))
(declare-fun temp1264_85 () (_ BitVec 64))
(declare-fun temp1264_86 () (_ BitVec 64))
(declare-fun temp1264_87 () (_ BitVec 64))
(declare-fun temp1264_88 () (_ BitVec 64))
(declare-fun temp1264_89 () (_ BitVec 64))
(declare-fun temp1264_90 () (_ BitVec 64))
(declare-fun temp1264_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1264_92 () (_ BitVec 64))
(declare-fun temp1264_93 () (_ BitVec 64))
(declare-fun temp1264_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1264_95 () (_ BitVec 64))
(declare-fun temp1264_96 () (_ BitVec 64))
(declare-fun temp1264_97 () (_ BitVec 64))
(declare-fun temp1264_98 () (_ BitVec 64))
(declare-fun temp1264_99 () (_ BitVec 64))
(declare-fun temp1264_100 () (_ BitVec 64))
(declare-fun temp1264_101 () (_ BitVec 64))
(declare-fun temp1264_102 () (_ BitVec 64))
(declare-fun temp1264_103 () (_ BitVec 64))
(declare-fun temp1264_104 () (_ BitVec 64))
(declare-fun temp1264_105 () (_ BitVec 64))
(declare-fun temp1264_106 () (_ BitVec 64))
(declare-fun temp1264_107 () (_ BitVec 64))
(declare-fun temp1264_108 () (_ BitVec 64))
(declare-fun temp1264_109 () (_ BitVec 64))
(declare-fun temp1264_110 () (_ BitVec 64))
(declare-fun temp1264_111 () (_ BitVec 64))
(declare-fun temp1264_112 () (_ BitVec 64))
(declare-fun temp1264_113 () (_ BitVec 64))
(declare-fun temp1264_114 () (_ BitVec 64))
(declare-fun temp1264_115 () (_ BitVec 64))
(declare-fun temp1264_116 () (_ BitVec 64))
(declare-fun temp1264_117 () (_ BitVec 64))
(declare-fun temp1264_118 () (_ BitVec 64))
(declare-fun temp1264_119 () (_ BitVec 64))
(declare-fun temp1264_120 () (_ BitVec 64))
(declare-fun temp1264_121 () (_ BitVec 64))
(declare-fun temp1264_122 () (_ BitVec 64))
(declare-fun temp1264_123 () (_ BitVec 64))
(declare-fun temp1264_124 () (_ BitVec 64))
(declare-fun temp1264_125 () (_ BitVec 64))
(declare-fun temp1264_126 () (_ BitVec 64))
(declare-fun temp1264_127 () (_ BitVec 64))
(declare-fun temp1264_128 () (_ BitVec 64))
(declare-fun temp1264_129 () (_ BitVec 64))
(declare-fun temp1264_130 () (_ BitVec 64))
(declare-fun temp1264_131 () (_ BitVec 64))
(declare-fun temp1264_132 () (_ BitVec 64))
(declare-fun temp1264_133 () (_ BitVec 64))
(declare-fun temp1264_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1264_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1264_136 () (_ BitVec 64))
(declare-fun temp1264_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1264_138 () (_ BitVec 64))
(declare-fun temp1264_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1264_140 () (_ BitVec 64))
(declare-fun temp1264_141 () (_ BitVec 64))
(declare-fun temp1264_142 () (_ BitVec 64))
(declare-fun temp1264_143 () (_ BitVec 64))
(declare-fun temp1264_144 () (_ BitVec 64))
(declare-fun temp1264_145 () (_ BitVec 64))
(declare-fun temp1264_146 () (_ BitVec 64))
(declare-fun temp1264_147 () (_ BitVec 64))
(declare-fun temp1264_148 () (_ BitVec 64))
(declare-fun temp1264_149 () (_ BitVec 64))
(declare-fun temp1264_150 () (_ BitVec 64))
(declare-fun temp1264_151 () (_ BitVec 64))
(declare-fun temp1264_152 () (_ BitVec 64))
(declare-fun temp1264_153 () (_ BitVec 64))
(declare-fun temp1264_154 () (_ BitVec 64))
(declare-fun temp1264_155 () (_ BitVec 64))
(declare-fun temp1264_157 () (_ BitVec 64))
(declare-fun temp1264_158 () (_ BitVec 64))
(declare-fun temp1264_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1264_159 () (_ BitVec 64))
(declare-fun temp1264_160 () (_ BitVec 64))
(declare-fun temp1264_162 () (_ BitVec 64))
(declare-fun temp1264_163 () (_ BitVec 64))
(declare-fun temp1264_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1264_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1264_165 () (_ BitVec 64))
(declare-fun temp1264_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1264_167 () (_ BitVec 64))
(declare-fun temp1264_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1264_169 () (_ BitVec 64))
(declare-fun temp1264_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1264_171 () (_ BitVec 64))
(declare-fun temp1264_172 () (_ BitVec 64))
(declare-fun temp1264_173 () (_ BitVec 64))
(declare-fun temp1264_174 () (_ BitVec 64))
(declare-fun temp1264_175 () (_ BitVec 64))
(declare-fun temp1264_176 () (_ BitVec 64))
(declare-fun temp1264_177 () (_ BitVec 64))
(declare-fun temp1264_178 () (_ BitVec 64))
(declare-fun temp1264_179 () (_ BitVec 64))
(declare-fun temp1264_180 () (_ BitVec 64))
(declare-fun temp1264_181 () (_ BitVec 64))
(declare-fun temp1264_182 () (_ BitVec 64))
(declare-fun temp1264_183 () (_ BitVec 64))
(declare-fun temp1264_184 () (_ BitVec 64))
(declare-fun temp1264_185 () (_ BitVec 64))
(declare-fun temp1264_186 () (_ BitVec 64))
(declare-fun temp1264_187 () (_ BitVec 64))
(declare-fun temp1264_188 () (_ BitVec 64))
(declare-fun temp1264_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1264_190 () (_ BitVec 64))
(declare-fun temp1264_192 () (_ BitVec 64))
(declare-fun temp1264_193 () (_ BitVec 64))
(declare-fun temp1264_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1264_194 () (_ BitVec 64))
(declare-fun temp1264_195 () (_ BitVec 64))
(declare-fun temp1264_197 () (_ BitVec 64))
(declare-fun temp1264_198 () (_ BitVec 64))
(declare-fun temp1264_196 () (_ BitVec 64))
(declare-fun temp1264_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1264_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1264_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1264_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1264_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1264_204 () (_ BitVec 64))
(declare-fun temp1264_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1264_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1264_207 () (_ BitVec 64))
(declare-fun temp1264_208 () (_ BitVec 64))
(declare-fun temp1264_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1264_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1264_211 () (_ BitVec 64))
(declare-fun temp1264_212 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1264_213 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp1264_214 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp1264_216 () (_ BitVec 64))
(declare-fun temp1264_215 () (_ BitVec 64))
(declare-fun temp1264_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp1264_218 () (_ BitVec 64))
(declare-fun temp1264_219 () (_ BitVec 64))
(declare-fun temp1264_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp1264_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp1264_222 () (_ BitVec 64))
(declare-fun temp1264_224 () (_ BitVec 64))
(declare-fun temp1264_223 () (_ BitVec 64))
(declare-fun temp1264_225 () (_ BitVec 64))
(assert (= temp1264_1 #x0000000000000001))
(assert (= var77203 temp1264_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1264_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1264_2)))
(assert (= temp1264_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1264_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_4 #x0000000000000000))
(assert (= var210941 temp1264_4))
(assert (= temp1264_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1264_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_6 #x0000000000000000))
(assert (= var210986 temp1264_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1264_7 #x0000000000000000))
(assert (= temp1264_8 temp1264_7))
(assert (= temp1264_9 (select ARGNAME_padding_NAMEEND_VAL temp1264_8)))
(assert (= temp1264_10 #x0000000000000001))
(assert (= temp1264_11 temp1264_10))
(assert (= temp1264_12 (select ARGNAME_padding_NAMEEND_VAL temp1264_11)))
(assert (= temp1264_13 #x0000000000000002))
(assert (= temp1264_14 temp1264_13))
(assert (= temp1264_15 (select ARGNAME_padding_NAMEEND_VAL temp1264_14)))
(assert (= temp1264_16 #x0000000000000003))
(assert (= temp1264_17 temp1264_16))
(assert (= temp1264_18 (select ARGNAME_padding_NAMEEND_VAL temp1264_17)))
(assert (= temp1264_19 #x0000000000000004))
(assert (= temp1264_20 temp1264_19))
(assert (= temp1264_21 (select ARGNAME_padding_NAMEEND_VAL temp1264_20)))
(assert (= temp1264_22 #x0000000000000005))
(assert (= temp1264_23 temp1264_22))
(assert (= temp1264_24 (select ARGNAME_padding_NAMEEND_VAL temp1264_23)))
(assert (= temp1264_25 #x0000000000000000))
(assert (= temp1264_26 #x0000000000000000))
(assert (= temp1264_27 temp1264_26))
(assert (= temp1264_28 (select ARGNAME_padding_NAMEEND_VAL temp1264_27)))
(assert (= temp1264_29 #x0000000000000000))
(assert (= temp1264_30 #x0000000000000001))
(assert (= temp1264_31 temp1264_30))
(assert (= temp1264_32 (select ARGNAME_padding_NAMEEND_VAL temp1264_31)))
(assert (= temp1264_33 #x0000000000000000))
(assert (= temp1264_34 #x0000000000000002))
(assert (= temp1264_35 temp1264_34))
(assert (= temp1264_36 (select ARGNAME_padding_NAMEEND_VAL temp1264_35)))
(assert (= temp1264_37 #x0000000000000000))
(assert (= temp1264_38 #x0000000000000003))
(assert (= temp1264_39 temp1264_38))
(assert (= temp1264_40 (select ARGNAME_padding_NAMEEND_VAL temp1264_39)))
(assert (= temp1264_41 #x0000000000000000))
(assert (= temp1264_42 #x0000000000000004))
(assert (= temp1264_43 temp1264_42))
(assert (= temp1264_44 (select ARGNAME_padding_NAMEEND_VAL temp1264_43)))
(assert (= temp1264_45 #x0000000000000000))
(assert (= temp1264_46 #x0000000000000005))
(assert (= temp1264_47 temp1264_46))
(assert (= temp1264_48 (select ARGNAME_padding_NAMEEND_VAL temp1264_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1264_28 temp1264_25)
             (bvslt temp1264_32 temp1264_29)
             (bvslt temp1264_36 temp1264_33)
             (bvslt temp1264_40 temp1264_37)
             (bvslt temp1264_44 temp1264_41)
             (bvslt temp1264_48 temp1264_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_49 #x0000000000000000))
(assert (= var1191714 temp1264_49))
(assert (= temp1264_50 #x0000000000000000))
(assert (= temp1264_51 temp1264_50))
(assert (= temp1264_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1264_51)))
(assert (= temp1264_53 #x0000000000000001))
(assert (= temp1264_54 temp1264_53))
(assert (= temp1264_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1264_54)))
(assert (= temp1264_56 #x0000000000000002))
(assert (= temp1264_57 temp1264_56))
(assert (= temp1264_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1264_57)))
(assert (= temp1264_59 #x0000000000000003))
(assert (= temp1264_60 temp1264_59))
(assert (= temp1264_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1264_60)))
(assert (= temp1264_62 #x0000000000000004))
(assert (= temp1264_63 temp1264_62))
(assert (= temp1264_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1264_63)))
(assert (= temp1264_65 #x0000000000000005))
(assert (= temp1264_66 temp1264_65))
(assert (= temp1264_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1264_66)))
(assert (= temp1264_68 #x0000000000000000))
(assert (= temp1264_69 #x0000000000000000))
(assert (= temp1264_70 temp1264_69))
(assert (= temp1264_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1264_70)))
(assert (= temp1264_72 #x0000000000000000))
(assert (= temp1264_73 #x0000000000000001))
(assert (= temp1264_74 temp1264_73))
(assert (= temp1264_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1264_74)))
(assert (= temp1264_76 #x0000000000000000))
(assert (= temp1264_77 #x0000000000000002))
(assert (= temp1264_78 temp1264_77))
(assert (= temp1264_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1264_78)))
(assert (= temp1264_80 #x0000000000000000))
(assert (= temp1264_81 #x0000000000000003))
(assert (= temp1264_82 temp1264_81))
(assert (= temp1264_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1264_82)))
(assert (= temp1264_84 #x0000000000000000))
(assert (= temp1264_85 #x0000000000000004))
(assert (= temp1264_86 temp1264_85))
(assert (= temp1264_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1264_86)))
(assert (= temp1264_88 #x0000000000000000))
(assert (= temp1264_89 #x0000000000000005))
(assert (= temp1264_90 temp1264_89))
(assert (= temp1264_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1264_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1264_71 temp1264_68)
             (bvslt temp1264_75 temp1264_72)
             (bvslt temp1264_79 temp1264_76)
             (bvslt temp1264_83 temp1264_80)
             (bvslt temp1264_87 temp1264_84)
             (bvslt temp1264_91 temp1264_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_92 #x0000000000000000))
(assert (= var1191725 temp1264_92))
(assert (= temp1264_93 #x0000000000000000))
(assert (= temp1264_94 temp1264_93))
(assert (= temp1264_95 (select ARGNAME_stride_NAMEEND_VAL temp1264_94)))
(assert (= temp1264_96 #x0000000000000001))
(assert (= temp1264_97 temp1264_96))
(assert (= temp1264_98 (select ARGNAME_stride_NAMEEND_VAL temp1264_97)))
(assert (= temp1264_99 #x0000000000000002))
(assert (= temp1264_100 temp1264_99))
(assert (= temp1264_101 (select ARGNAME_stride_NAMEEND_VAL temp1264_100)))
(assert (= temp1264_102 #x0000000000000003))
(assert (= temp1264_103 temp1264_102))
(assert (= temp1264_104 (select ARGNAME_stride_NAMEEND_VAL temp1264_103)))
(assert (= temp1264_105 #x0000000000000004))
(assert (= temp1264_106 temp1264_105))
(assert (= temp1264_107 (select ARGNAME_stride_NAMEEND_VAL temp1264_106)))
(assert (= temp1264_108 #x0000000000000005))
(assert (= temp1264_109 temp1264_108))
(assert (= temp1264_110 (select ARGNAME_stride_NAMEEND_VAL temp1264_109)))
(assert (= temp1264_111 #x0000000000000000))
(assert (= temp1264_112 #x0000000000000000))
(assert (= temp1264_113 temp1264_112))
(assert (= temp1264_114 (select ARGNAME_stride_NAMEEND_VAL temp1264_113)))
(assert (= temp1264_115 #x0000000000000000))
(assert (= temp1264_116 #x0000000000000001))
(assert (= temp1264_117 temp1264_116))
(assert (= temp1264_118 (select ARGNAME_stride_NAMEEND_VAL temp1264_117)))
(assert (= temp1264_119 #x0000000000000000))
(assert (= temp1264_120 #x0000000000000002))
(assert (= temp1264_121 temp1264_120))
(assert (= temp1264_122 (select ARGNAME_stride_NAMEEND_VAL temp1264_121)))
(assert (= temp1264_123 #x0000000000000000))
(assert (= temp1264_124 #x0000000000000003))
(assert (= temp1264_125 temp1264_124))
(assert (= temp1264_126 (select ARGNAME_stride_NAMEEND_VAL temp1264_125)))
(assert (= temp1264_127 #x0000000000000000))
(assert (= temp1264_128 #x0000000000000004))
(assert (= temp1264_129 temp1264_128))
(assert (= temp1264_130 (select ARGNAME_stride_NAMEEND_VAL temp1264_129)))
(assert (= temp1264_131 #x0000000000000000))
(assert (= temp1264_132 #x0000000000000005))
(assert (= temp1264_133 temp1264_132))
(assert (= temp1264_134 (select ARGNAME_stride_NAMEEND_VAL temp1264_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1264_114 temp1264_111)
             (bvsle temp1264_118 temp1264_115)
             (bvsle temp1264_122 temp1264_119)
             (bvsle temp1264_126 temp1264_123)
             (bvsle temp1264_130 temp1264_127)
             (bvsle temp1264_134 temp1264_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_135 #x0000000000000000))
(assert (= var1191735 temp1264_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_136 #x0000000000000001))
(assert (= var1191747 temp1264_136))
(assert (= temp1264_137 #x0000000000000000))
(assert (= var1179826 temp1264_137))
(assert (= temp1264_138 #x0000000000000000))
(assert (= temp1264_139 temp1264_138))
(assert (= temp1264_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1264_139)))
(assert (= temp1264_141 #x0000000000000001))
(assert (= temp1264_142 temp1264_141))
(assert (= temp1264_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1264_142)))
(assert (= temp1264_144 #x0000000000000002))
(assert (= temp1264_145 temp1264_144))
(assert (= temp1264_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1264_145)))
(assert (= temp1264_147 #x0000000000000003))
(assert (= temp1264_148 temp1264_147))
(assert (= temp1264_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1264_148)))
(assert (= temp1264_150 #x0000000000000004))
(assert (= temp1264_151 temp1264_150))
(assert (= temp1264_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1264_151)))
(assert (= temp1264_153 #x0000000000000005))
(assert (= temp1264_154 temp1264_153))
(assert (= temp1264_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1264_154)))
(assert (= temp1264_157 var1179826))
(assert (= temp1264_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1264_157)))
(assert (= temp1264_156 temp1264_158))
(assert (= var1191780
   (ite (bvslt temp1264_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_159 #x0000000000000000))
(assert (= var1191780 temp1264_159))
(assert (= temp1264_160 #x0000000000000000))
(assert (= var1179826 temp1264_160))
(assert (= temp1264_162 var1179826))
(assert (= temp1264_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1264_162)))
(assert (= temp1264_161 temp1264_163))
(assert (= var1191802 (bvsmod temp1264_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1264_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1264_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1264_165 #x0000000000000001))
(assert (= var1191803 temp1264_165))
(assert (= temp1264_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1264_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_167 #x0000000000000001))
(assert (= var1191823 temp1264_167))
(assert (= temp1264_168 #x0000000000000001))
(assert (= var1180714 temp1264_168))
(assert (= temp1264_169 #x0000000000000000))
(assert (= temp1264_170 temp1264_169))
(assert (= temp1264_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1264_170)))
(assert (= temp1264_172 #x0000000000000001))
(assert (= temp1264_173 temp1264_172))
(assert (= temp1264_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1264_173)))
(assert (= temp1264_175 #x0000000000000002))
(assert (= temp1264_176 temp1264_175))
(assert (= temp1264_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1264_176)))
(assert (= temp1264_178 #x0000000000000003))
(assert (= temp1264_179 temp1264_178))
(assert (= temp1264_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1264_179)))
(assert (= temp1264_181 #x0000000000000004))
(assert (= temp1264_182 temp1264_181))
(assert (= temp1264_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1264_182)))
(assert (= temp1264_184 #x0000000000000005))
(assert (= temp1264_185 temp1264_184))
(assert (= temp1264_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1264_185)))
(assert (= temp1264_187 #x0000000000000000))
(assert (= temp1264_188
   (ite (bvslt var1180714 temp1264_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1264_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1264_188)))
(assert (= var1191831 temp1264_189))
(assert (bvslt (ite (bvslt var1180714 temp1264_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1264_190 #x0000000000000001))
(assert (= var1180714 temp1264_190))
(assert (= temp1264_192 var1180714))
(assert (= temp1264_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1264_192)))
(assert (= temp1264_191 temp1264_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1264_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1264_194 #x0000000000000001))
(assert (= var1191836 temp1264_194))
(assert (= temp1264_195 #x0000000000000000))
(assert (= var1179826 temp1264_195))
(assert (= temp1264_197 var1179826))
(assert (= temp1264_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1264_197)))
(assert (= temp1264_196 temp1264_198))
(assert (= temp1264_199 #x0000000000000002))
(assert (= var1586025 temp1264_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1264_200 #x0000000000000001))
(assert (= var1191993 temp1264_200))
(assert (= temp1264_201 #x0000000000000001))
(assert (= var2700303 temp1264_201))
(assert (= temp1264_202 #x0000000000000001))
(assert (= var2962447 temp1264_202))
(assert (= temp1264_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1264_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_204 #x0000000000000001))
(assert (= var211058 temp1264_204))
(assert (= temp1264_205 #x0000000000000001))
(assert (= var211188 temp1264_205))
(assert (= var3879401 var211188))
(assert (= temp1264_206 #x0000000000000000))
(assert (= var3866802 temp1264_206))
(assert (= temp1264_207 #x0000000000000000))
(assert (= temp1264_208
   (ite (bvslt var3866802 temp1264_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1264_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1264_208)))
(assert (= var3879420 temp1264_209))
(assert (bvslt (ite (bvslt var3866802 temp1264_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1264_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1264_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1264_211 #x0000000000000001))
(assert (= var3879421 temp1264_211))
(assert (= temp1264_212 #x0000000000000000))
(assert (= var4133117 temp1264_212))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1264_213 #x0000000000000002))
(assert (= var4339331 temp1264_213))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1264_214 #x0000000000000000))
(assert (= var4404892 temp1264_214))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp1264_216 #xffffffffffffffff))
(assert (= temp1264_215 temp1264_216))
(assert (= temp1264_217 #x0000000000000001))
(assert (= var197674 temp1264_217))
(assert (= temp1264_218 #x0000000000000000))
(assert (= temp1264_219
   (ite (bvslt var197674 temp1264_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp1264_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp1264_219)))
(assert (= var211595 temp1264_220))
(assert (bvslt (ite (bvslt var197674 temp1264_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1264_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp1264_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp1264_222 #x0000000000000001))
(assert (= var211596 temp1264_222))
(assert (= temp1264_224 #xffffffffffffffff))
(assert (= temp1264_223 temp1264_224))
(assert (= temp1264_225 #x0000000000000001))
(assert (= var211058 temp1264_225))
(model-add temp1264_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1264_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1264_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1264_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





