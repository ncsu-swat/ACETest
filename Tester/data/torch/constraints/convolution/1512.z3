(declare-fun temp10810_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10810_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10810_3 () (_ BitVec 64))
(declare-fun temp10810_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10810_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10810_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10810_7 () (_ BitVec 64))
(declare-fun temp10810_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10810_9 () (_ BitVec 64))
(declare-fun temp10810_10 () (_ BitVec 64))
(declare-fun temp10810_11 () (_ BitVec 64))
(declare-fun temp10810_12 () (_ BitVec 64))
(declare-fun temp10810_13 () (_ BitVec 64))
(declare-fun temp10810_14 () (_ BitVec 64))
(declare-fun temp10810_15 () (_ BitVec 64))
(declare-fun temp10810_16 () (_ BitVec 64))
(declare-fun temp10810_17 () (_ BitVec 64))
(declare-fun temp10810_18 () (_ BitVec 64))
(declare-fun temp10810_19 () (_ BitVec 64))
(declare-fun temp10810_20 () (_ BitVec 64))
(declare-fun temp10810_21 () (_ BitVec 64))
(declare-fun temp10810_22 () (_ BitVec 64))
(declare-fun temp10810_23 () (_ BitVec 64))
(declare-fun temp10810_24 () (_ BitVec 64))
(declare-fun temp10810_25 () (_ BitVec 64))
(declare-fun temp10810_26 () (_ BitVec 64))
(declare-fun temp10810_27 () (_ BitVec 64))
(declare-fun temp10810_28 () (_ BitVec 64))
(declare-fun temp10810_29 () (_ BitVec 64))
(declare-fun temp10810_30 () (_ BitVec 64))
(declare-fun temp10810_31 () (_ BitVec 64))
(declare-fun temp10810_32 () (_ BitVec 64))
(declare-fun temp10810_33 () (_ BitVec 64))
(declare-fun temp10810_34 () (_ BitVec 64))
(declare-fun temp10810_35 () (_ BitVec 64))
(declare-fun temp10810_36 () (_ BitVec 64))
(declare-fun temp10810_37 () (_ BitVec 64))
(declare-fun temp10810_38 () (_ BitVec 64))
(declare-fun temp10810_39 () (_ BitVec 64))
(declare-fun temp10810_40 () (_ BitVec 64))
(declare-fun temp10810_41 () (_ BitVec 64))
(declare-fun temp10810_42 () (_ BitVec 64))
(declare-fun temp10810_43 () (_ BitVec 64))
(declare-fun temp10810_44 () (_ BitVec 64))
(declare-fun temp10810_45 () (_ BitVec 64))
(declare-fun temp10810_46 () (_ BitVec 64))
(declare-fun temp10810_47 () (_ BitVec 64))
(declare-fun temp10810_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10810_49 () (_ BitVec 64))
(declare-fun temp10810_50 () (_ BitVec 64))
(declare-fun temp10810_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10810_52 () (_ BitVec 64))
(declare-fun temp10810_53 () (_ BitVec 64))
(declare-fun temp10810_54 () (_ BitVec 64))
(declare-fun temp10810_55 () (_ BitVec 64))
(declare-fun temp10810_56 () (_ BitVec 64))
(declare-fun temp10810_57 () (_ BitVec 64))
(declare-fun temp10810_58 () (_ BitVec 64))
(declare-fun temp10810_59 () (_ BitVec 64))
(declare-fun temp10810_60 () (_ BitVec 64))
(declare-fun temp10810_61 () (_ BitVec 64))
(declare-fun temp10810_62 () (_ BitVec 64))
(declare-fun temp10810_63 () (_ BitVec 64))
(declare-fun temp10810_64 () (_ BitVec 64))
(declare-fun temp10810_65 () (_ BitVec 64))
(declare-fun temp10810_66 () (_ BitVec 64))
(declare-fun temp10810_67 () (_ BitVec 64))
(declare-fun temp10810_68 () (_ BitVec 64))
(declare-fun temp10810_69 () (_ BitVec 64))
(declare-fun temp10810_70 () (_ BitVec 64))
(declare-fun temp10810_71 () (_ BitVec 64))
(declare-fun temp10810_72 () (_ BitVec 64))
(declare-fun temp10810_73 () (_ BitVec 64))
(declare-fun temp10810_74 () (_ BitVec 64))
(declare-fun temp10810_75 () (_ BitVec 64))
(declare-fun temp10810_76 () (_ BitVec 64))
(declare-fun temp10810_77 () (_ BitVec 64))
(declare-fun temp10810_78 () (_ BitVec 64))
(declare-fun temp10810_79 () (_ BitVec 64))
(declare-fun temp10810_80 () (_ BitVec 64))
(declare-fun temp10810_81 () (_ BitVec 64))
(declare-fun temp10810_82 () (_ BitVec 64))
(declare-fun temp10810_83 () (_ BitVec 64))
(declare-fun temp10810_84 () (_ BitVec 64))
(declare-fun temp10810_85 () (_ BitVec 64))
(declare-fun temp10810_86 () (_ BitVec 64))
(declare-fun temp10810_87 () (_ BitVec 64))
(declare-fun temp10810_88 () (_ BitVec 64))
(declare-fun temp10810_89 () (_ BitVec 64))
(declare-fun temp10810_90 () (_ BitVec 64))
(declare-fun temp10810_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10810_92 () (_ BitVec 64))
(declare-fun temp10810_93 () (_ BitVec 64))
(declare-fun temp10810_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10810_95 () (_ BitVec 64))
(declare-fun temp10810_96 () (_ BitVec 64))
(declare-fun temp10810_97 () (_ BitVec 64))
(declare-fun temp10810_98 () (_ BitVec 64))
(declare-fun temp10810_99 () (_ BitVec 64))
(declare-fun temp10810_100 () (_ BitVec 64))
(declare-fun temp10810_101 () (_ BitVec 64))
(declare-fun temp10810_102 () (_ BitVec 64))
(declare-fun temp10810_103 () (_ BitVec 64))
(declare-fun temp10810_104 () (_ BitVec 64))
(declare-fun temp10810_105 () (_ BitVec 64))
(declare-fun temp10810_106 () (_ BitVec 64))
(declare-fun temp10810_107 () (_ BitVec 64))
(declare-fun temp10810_108 () (_ BitVec 64))
(declare-fun temp10810_109 () (_ BitVec 64))
(declare-fun temp10810_110 () (_ BitVec 64))
(declare-fun temp10810_111 () (_ BitVec 64))
(declare-fun temp10810_112 () (_ BitVec 64))
(declare-fun temp10810_113 () (_ BitVec 64))
(declare-fun temp10810_114 () (_ BitVec 64))
(declare-fun temp10810_115 () (_ BitVec 64))
(declare-fun temp10810_116 () (_ BitVec 64))
(declare-fun temp10810_117 () (_ BitVec 64))
(declare-fun temp10810_118 () (_ BitVec 64))
(declare-fun temp10810_119 () (_ BitVec 64))
(declare-fun temp10810_120 () (_ BitVec 64))
(declare-fun temp10810_121 () (_ BitVec 64))
(declare-fun temp10810_122 () (_ BitVec 64))
(declare-fun temp10810_123 () (_ BitVec 64))
(declare-fun temp10810_124 () (_ BitVec 64))
(declare-fun temp10810_125 () (_ BitVec 64))
(declare-fun temp10810_126 () (_ BitVec 64))
(declare-fun temp10810_127 () (_ BitVec 64))
(declare-fun temp10810_128 () (_ BitVec 64))
(declare-fun temp10810_129 () (_ BitVec 64))
(declare-fun temp10810_130 () (_ BitVec 64))
(declare-fun temp10810_131 () (_ BitVec 64))
(declare-fun temp10810_132 () (_ BitVec 64))
(declare-fun temp10810_133 () (_ BitVec 64))
(declare-fun temp10810_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10810_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10810_136 () (_ BitVec 64))
(declare-fun temp10810_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10810_138 () (_ BitVec 64))
(declare-fun temp10810_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10810_140 () (_ BitVec 64))
(declare-fun temp10810_141 () (_ BitVec 64))
(declare-fun temp10810_142 () (_ BitVec 64))
(declare-fun temp10810_143 () (_ BitVec 64))
(declare-fun temp10810_144 () (_ BitVec 64))
(declare-fun temp10810_145 () (_ BitVec 64))
(declare-fun temp10810_146 () (_ BitVec 64))
(declare-fun temp10810_147 () (_ BitVec 64))
(declare-fun temp10810_148 () (_ BitVec 64))
(declare-fun temp10810_149 () (_ BitVec 64))
(declare-fun temp10810_150 () (_ BitVec 64))
(declare-fun temp10810_151 () (_ BitVec 64))
(declare-fun temp10810_152 () (_ BitVec 64))
(declare-fun temp10810_153 () (_ BitVec 64))
(declare-fun temp10810_154 () (_ BitVec 64))
(declare-fun temp10810_155 () (_ BitVec 64))
(declare-fun temp10810_157 () (_ BitVec 64))
(declare-fun temp10810_158 () (_ BitVec 64))
(declare-fun temp10810_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10810_159 () (_ BitVec 64))
(declare-fun temp10810_160 () (_ BitVec 64))
(declare-fun temp10810_162 () (_ BitVec 64))
(declare-fun temp10810_163 () (_ BitVec 64))
(declare-fun temp10810_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10810_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10810_165 () (_ BitVec 64))
(declare-fun temp10810_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10810_167 () (_ BitVec 64))
(declare-fun temp10810_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10810_169 () (_ BitVec 64))
(declare-fun temp10810_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10810_171 () (_ BitVec 64))
(declare-fun temp10810_172 () (_ BitVec 64))
(declare-fun temp10810_173 () (_ BitVec 64))
(declare-fun temp10810_174 () (_ BitVec 64))
(declare-fun temp10810_175 () (_ BitVec 64))
(declare-fun temp10810_176 () (_ BitVec 64))
(declare-fun temp10810_177 () (_ BitVec 64))
(declare-fun temp10810_178 () (_ BitVec 64))
(declare-fun temp10810_179 () (_ BitVec 64))
(declare-fun temp10810_180 () (_ BitVec 64))
(declare-fun temp10810_181 () (_ BitVec 64))
(declare-fun temp10810_182 () (_ BitVec 64))
(declare-fun temp10810_183 () (_ BitVec 64))
(declare-fun temp10810_184 () (_ BitVec 64))
(declare-fun temp10810_185 () (_ BitVec 64))
(declare-fun temp10810_186 () (_ BitVec 64))
(declare-fun temp10810_187 () (_ BitVec 64))
(declare-fun temp10810_188 () (_ BitVec 64))
(declare-fun temp10810_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10810_190 () (_ BitVec 64))
(declare-fun temp10810_192 () (_ BitVec 64))
(declare-fun temp10810_193 () (_ BitVec 64))
(declare-fun temp10810_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10810_194 () (_ BitVec 64))
(declare-fun temp10810_195 () (_ BitVec 64))
(declare-fun temp10810_197 () (_ BitVec 64))
(declare-fun temp10810_198 () (_ BitVec 64))
(declare-fun temp10810_196 () (_ BitVec 64))
(declare-fun temp10810_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10810_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10810_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10810_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10810_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10810_204 () (_ BitVec 64))
(declare-fun temp10810_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10810_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10810_207 () (_ BitVec 64))
(declare-fun temp10810_208 () (_ BitVec 64))
(declare-fun temp10810_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10810_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10810_211 () (_ BitVec 64))
(declare-fun temp10810_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10810_213 () (_ BitVec 64))
(declare-fun temp10810_214 () (_ BitVec 64))
(declare-fun temp10810_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10810_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10810_217 () (_ BitVec 64))
(declare-fun temp10810_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10810_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10810_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp10810_221 () (_ BitVec 64))
(assert (= temp10810_1 #x0000000000000001))
(assert (= var77203 temp10810_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10810_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10810_2)))
(assert (= temp10810_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10810_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10810_4 #x0000000000000000))
(assert (= var210941 temp10810_4))
(assert (= temp10810_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10810_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10810_6 #x0000000000000000))
(assert (= var210986 temp10810_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10810_7 #x0000000000000000))
(assert (= temp10810_8 temp10810_7))
(assert (= temp10810_9 (select ARGNAME_padding_NAMEEND_VAL temp10810_8)))
(assert (= temp10810_10 #x0000000000000001))
(assert (= temp10810_11 temp10810_10))
(assert (= temp10810_12 (select ARGNAME_padding_NAMEEND_VAL temp10810_11)))
(assert (= temp10810_13 #x0000000000000002))
(assert (= temp10810_14 temp10810_13))
(assert (= temp10810_15 (select ARGNAME_padding_NAMEEND_VAL temp10810_14)))
(assert (= temp10810_16 #x0000000000000003))
(assert (= temp10810_17 temp10810_16))
(assert (= temp10810_18 (select ARGNAME_padding_NAMEEND_VAL temp10810_17)))
(assert (= temp10810_19 #x0000000000000004))
(assert (= temp10810_20 temp10810_19))
(assert (= temp10810_21 (select ARGNAME_padding_NAMEEND_VAL temp10810_20)))
(assert (= temp10810_22 #x0000000000000005))
(assert (= temp10810_23 temp10810_22))
(assert (= temp10810_24 (select ARGNAME_padding_NAMEEND_VAL temp10810_23)))
(assert (= temp10810_25 #x0000000000000000))
(assert (= temp10810_26 #x0000000000000000))
(assert (= temp10810_27 temp10810_26))
(assert (= temp10810_28 (select ARGNAME_padding_NAMEEND_VAL temp10810_27)))
(assert (= temp10810_29 #x0000000000000000))
(assert (= temp10810_30 #x0000000000000001))
(assert (= temp10810_31 temp10810_30))
(assert (= temp10810_32 (select ARGNAME_padding_NAMEEND_VAL temp10810_31)))
(assert (= temp10810_33 #x0000000000000000))
(assert (= temp10810_34 #x0000000000000002))
(assert (= temp10810_35 temp10810_34))
(assert (= temp10810_36 (select ARGNAME_padding_NAMEEND_VAL temp10810_35)))
(assert (= temp10810_37 #x0000000000000000))
(assert (= temp10810_38 #x0000000000000003))
(assert (= temp10810_39 temp10810_38))
(assert (= temp10810_40 (select ARGNAME_padding_NAMEEND_VAL temp10810_39)))
(assert (= temp10810_41 #x0000000000000000))
(assert (= temp10810_42 #x0000000000000004))
(assert (= temp10810_43 temp10810_42))
(assert (= temp10810_44 (select ARGNAME_padding_NAMEEND_VAL temp10810_43)))
(assert (= temp10810_45 #x0000000000000000))
(assert (= temp10810_46 #x0000000000000005))
(assert (= temp10810_47 temp10810_46))
(assert (= temp10810_48 (select ARGNAME_padding_NAMEEND_VAL temp10810_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10810_28 temp10810_25)
             (bvslt temp10810_32 temp10810_29)
             (bvslt temp10810_36 temp10810_33)
             (bvslt temp10810_40 temp10810_37)
             (bvslt temp10810_44 temp10810_41)
             (bvslt temp10810_48 temp10810_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10810_49 #x0000000000000000))
(assert (= var1191714 temp10810_49))
(assert (= temp10810_50 #x0000000000000000))
(assert (= temp10810_51 temp10810_50))
(assert (= temp10810_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10810_51)))
(assert (= temp10810_53 #x0000000000000001))
(assert (= temp10810_54 temp10810_53))
(assert (= temp10810_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10810_54)))
(assert (= temp10810_56 #x0000000000000002))
(assert (= temp10810_57 temp10810_56))
(assert (= temp10810_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10810_57)))
(assert (= temp10810_59 #x0000000000000003))
(assert (= temp10810_60 temp10810_59))
(assert (= temp10810_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10810_60)))
(assert (= temp10810_62 #x0000000000000004))
(assert (= temp10810_63 temp10810_62))
(assert (= temp10810_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10810_63)))
(assert (= temp10810_65 #x0000000000000005))
(assert (= temp10810_66 temp10810_65))
(assert (= temp10810_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10810_66)))
(assert (= temp10810_68 #x0000000000000000))
(assert (= temp10810_69 #x0000000000000000))
(assert (= temp10810_70 temp10810_69))
(assert (= temp10810_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10810_70)))
(assert (= temp10810_72 #x0000000000000000))
(assert (= temp10810_73 #x0000000000000001))
(assert (= temp10810_74 temp10810_73))
(assert (= temp10810_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10810_74)))
(assert (= temp10810_76 #x0000000000000000))
(assert (= temp10810_77 #x0000000000000002))
(assert (= temp10810_78 temp10810_77))
(assert (= temp10810_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10810_78)))
(assert (= temp10810_80 #x0000000000000000))
(assert (= temp10810_81 #x0000000000000003))
(assert (= temp10810_82 temp10810_81))
(assert (= temp10810_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10810_82)))
(assert (= temp10810_84 #x0000000000000000))
(assert (= temp10810_85 #x0000000000000004))
(assert (= temp10810_86 temp10810_85))
(assert (= temp10810_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10810_86)))
(assert (= temp10810_88 #x0000000000000000))
(assert (= temp10810_89 #x0000000000000005))
(assert (= temp10810_90 temp10810_89))
(assert (= temp10810_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10810_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10810_71 temp10810_68)
             (bvslt temp10810_75 temp10810_72)
             (bvslt temp10810_79 temp10810_76)
             (bvslt temp10810_83 temp10810_80)
             (bvslt temp10810_87 temp10810_84)
             (bvslt temp10810_91 temp10810_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10810_92 #x0000000000000000))
(assert (= var1191725 temp10810_92))
(assert (= temp10810_93 #x0000000000000000))
(assert (= temp10810_94 temp10810_93))
(assert (= temp10810_95 (select ARGNAME_stride_NAMEEND_VAL temp10810_94)))
(assert (= temp10810_96 #x0000000000000001))
(assert (= temp10810_97 temp10810_96))
(assert (= temp10810_98 (select ARGNAME_stride_NAMEEND_VAL temp10810_97)))
(assert (= temp10810_99 #x0000000000000002))
(assert (= temp10810_100 temp10810_99))
(assert (= temp10810_101 (select ARGNAME_stride_NAMEEND_VAL temp10810_100)))
(assert (= temp10810_102 #x0000000000000003))
(assert (= temp10810_103 temp10810_102))
(assert (= temp10810_104 (select ARGNAME_stride_NAMEEND_VAL temp10810_103)))
(assert (= temp10810_105 #x0000000000000004))
(assert (= temp10810_106 temp10810_105))
(assert (= temp10810_107 (select ARGNAME_stride_NAMEEND_VAL temp10810_106)))
(assert (= temp10810_108 #x0000000000000005))
(assert (= temp10810_109 temp10810_108))
(assert (= temp10810_110 (select ARGNAME_stride_NAMEEND_VAL temp10810_109)))
(assert (= temp10810_111 #x0000000000000000))
(assert (= temp10810_112 #x0000000000000000))
(assert (= temp10810_113 temp10810_112))
(assert (= temp10810_114 (select ARGNAME_stride_NAMEEND_VAL temp10810_113)))
(assert (= temp10810_115 #x0000000000000000))
(assert (= temp10810_116 #x0000000000000001))
(assert (= temp10810_117 temp10810_116))
(assert (= temp10810_118 (select ARGNAME_stride_NAMEEND_VAL temp10810_117)))
(assert (= temp10810_119 #x0000000000000000))
(assert (= temp10810_120 #x0000000000000002))
(assert (= temp10810_121 temp10810_120))
(assert (= temp10810_122 (select ARGNAME_stride_NAMEEND_VAL temp10810_121)))
(assert (= temp10810_123 #x0000000000000000))
(assert (= temp10810_124 #x0000000000000003))
(assert (= temp10810_125 temp10810_124))
(assert (= temp10810_126 (select ARGNAME_stride_NAMEEND_VAL temp10810_125)))
(assert (= temp10810_127 #x0000000000000000))
(assert (= temp10810_128 #x0000000000000004))
(assert (= temp10810_129 temp10810_128))
(assert (= temp10810_130 (select ARGNAME_stride_NAMEEND_VAL temp10810_129)))
(assert (= temp10810_131 #x0000000000000000))
(assert (= temp10810_132 #x0000000000000005))
(assert (= temp10810_133 temp10810_132))
(assert (= temp10810_134 (select ARGNAME_stride_NAMEEND_VAL temp10810_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10810_114 temp10810_111)
             (bvsle temp10810_118 temp10810_115)
             (bvsle temp10810_122 temp10810_119)
             (bvsle temp10810_126 temp10810_123)
             (bvsle temp10810_130 temp10810_127)
             (bvsle temp10810_134 temp10810_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10810_135 #x0000000000000000))
(assert (= var1191735 temp10810_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10810_136 #x0000000000000001))
(assert (= var1191747 temp10810_136))
(assert (= temp10810_137 #x0000000000000000))
(assert (= var1179826 temp10810_137))
(assert (= temp10810_138 #x0000000000000000))
(assert (= temp10810_139 temp10810_138))
(assert (= temp10810_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10810_139)))
(assert (= temp10810_141 #x0000000000000001))
(assert (= temp10810_142 temp10810_141))
(assert (= temp10810_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10810_142)))
(assert (= temp10810_144 #x0000000000000002))
(assert (= temp10810_145 temp10810_144))
(assert (= temp10810_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10810_145)))
(assert (= temp10810_147 #x0000000000000003))
(assert (= temp10810_148 temp10810_147))
(assert (= temp10810_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10810_148)))
(assert (= temp10810_150 #x0000000000000004))
(assert (= temp10810_151 temp10810_150))
(assert (= temp10810_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10810_151)))
(assert (= temp10810_153 #x0000000000000005))
(assert (= temp10810_154 temp10810_153))
(assert (= temp10810_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10810_154)))
(assert (= temp10810_157 var1179826))
(assert (= temp10810_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10810_157)))
(assert (= temp10810_156 temp10810_158))
(assert (= var1191780
   (ite (bvslt temp10810_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10810_159 #x0000000000000000))
(assert (= var1191780 temp10810_159))
(assert (= temp10810_160 #x0000000000000000))
(assert (= var1179826 temp10810_160))
(assert (= temp10810_162 var1179826))
(assert (= temp10810_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10810_162)))
(assert (= temp10810_161 temp10810_163))
(assert (= var1191802 (bvsmod temp10810_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10810_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10810_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10810_165 #x0000000000000001))
(assert (= var1191803 temp10810_165))
(assert (= temp10810_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10810_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10810_167 #x0000000000000001))
(assert (= var1191823 temp10810_167))
(assert (= temp10810_168 #x0000000000000001))
(assert (= var1180714 temp10810_168))
(assert (= temp10810_169 #x0000000000000000))
(assert (= temp10810_170 temp10810_169))
(assert (= temp10810_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10810_170)))
(assert (= temp10810_172 #x0000000000000001))
(assert (= temp10810_173 temp10810_172))
(assert (= temp10810_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10810_173)))
(assert (= temp10810_175 #x0000000000000002))
(assert (= temp10810_176 temp10810_175))
(assert (= temp10810_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10810_176)))
(assert (= temp10810_178 #x0000000000000003))
(assert (= temp10810_179 temp10810_178))
(assert (= temp10810_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10810_179)))
(assert (= temp10810_181 #x0000000000000004))
(assert (= temp10810_182 temp10810_181))
(assert (= temp10810_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10810_182)))
(assert (= temp10810_184 #x0000000000000005))
(assert (= temp10810_185 temp10810_184))
(assert (= temp10810_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10810_185)))
(assert (= temp10810_187 #x0000000000000000))
(assert (= temp10810_188
   (ite (bvslt var1180714 temp10810_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10810_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10810_188)))
(assert (= var1191831 temp10810_189))
(assert (bvslt (ite (bvslt var1180714 temp10810_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10810_190 #x0000000000000001))
(assert (= var1180714 temp10810_190))
(assert (= temp10810_192 var1180714))
(assert (= temp10810_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10810_192)))
(assert (= temp10810_191 temp10810_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10810_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10810_194 #x0000000000000001))
(assert (= var1191836 temp10810_194))
(assert (= temp10810_195 #x0000000000000000))
(assert (= var1179826 temp10810_195))
(assert (= temp10810_197 var1179826))
(assert (= temp10810_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10810_197)))
(assert (= temp10810_196 temp10810_198))
(assert (= temp10810_199 #x0000000000000002))
(assert (= var1586025 temp10810_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10810_200 #x0000000000000001))
(assert (= var1191993 temp10810_200))
(assert (= temp10810_201 #x0000000000000001))
(assert (= var2700303 temp10810_201))
(assert (= temp10810_202 #x0000000000000001))
(assert (= var2962447 temp10810_202))
(assert (= temp10810_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10810_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10810_204 #x0000000000000001))
(assert (= var211058 temp10810_204))
(assert (= temp10810_205 #x0000000000000001))
(assert (= var211188 temp10810_205))
(assert (= var3879401 var211188))
(assert (= temp10810_206 #x0000000000000000))
(assert (= var3866802 temp10810_206))
(assert (= temp10810_207 #x0000000000000000))
(assert (= temp10810_208
   (ite (bvslt var3866802 temp10810_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10810_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10810_208)))
(assert (= var3879420 temp10810_209))
(assert (bvslt (ite (bvslt var3866802 temp10810_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10810_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10810_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10810_211 #x0000000000000000))
(assert (= var3879421 temp10810_211))
(assert (= temp10810_212 #x0000000000000001))
(assert (= var3867690 temp10810_212))
(assert (= temp10810_213 #x0000000000000000))
(assert (= temp10810_214
   (ite (bvslt var3867690 temp10810_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10810_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10810_214)))
(assert (= var3879423 temp10810_215))
(assert (bvslt (ite (bvslt var3867690 temp10810_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10810_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10810_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10810_217 #x0000000000000001))
(assert (= var3879424 temp10810_217))
(assert (= temp10810_218 #x0000000000000000))
(assert (= var4133117 temp10810_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10810_219 #x0000000000000002))
(assert (= var4339331 temp10810_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10810_220 #x0000000000000000))
(assert (= var4404892 temp10810_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5452176 var211201))
(assert (= var5714320 var211201))
(assert (= temp10810_221 #x0000000000000001))
(assert (= var211058 temp10810_221))
(model-add temp10810_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10810_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10810_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10810_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





