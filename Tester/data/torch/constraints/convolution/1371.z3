(declare-fun temp10558_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10558_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10558_3 () (_ BitVec 64))
(declare-fun temp10558_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10558_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10558_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10558_7 () (_ BitVec 64))
(declare-fun temp10558_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10558_9 () (_ BitVec 64))
(declare-fun temp10558_10 () (_ BitVec 64))
(declare-fun temp10558_11 () (_ BitVec 64))
(declare-fun temp10558_12 () (_ BitVec 64))
(declare-fun temp10558_13 () (_ BitVec 64))
(declare-fun temp10558_14 () (_ BitVec 64))
(declare-fun temp10558_15 () (_ BitVec 64))
(declare-fun temp10558_16 () (_ BitVec 64))
(declare-fun temp10558_17 () (_ BitVec 64))
(declare-fun temp10558_18 () (_ BitVec 64))
(declare-fun temp10558_19 () (_ BitVec 64))
(declare-fun temp10558_20 () (_ BitVec 64))
(declare-fun temp10558_21 () (_ BitVec 64))
(declare-fun temp10558_22 () (_ BitVec 64))
(declare-fun temp10558_23 () (_ BitVec 64))
(declare-fun temp10558_24 () (_ BitVec 64))
(declare-fun temp10558_25 () (_ BitVec 64))
(declare-fun temp10558_26 () (_ BitVec 64))
(declare-fun temp10558_27 () (_ BitVec 64))
(declare-fun temp10558_28 () (_ BitVec 64))
(declare-fun temp10558_29 () (_ BitVec 64))
(declare-fun temp10558_30 () (_ BitVec 64))
(declare-fun temp10558_31 () (_ BitVec 64))
(declare-fun temp10558_32 () (_ BitVec 64))
(declare-fun temp10558_33 () (_ BitVec 64))
(declare-fun temp10558_34 () (_ BitVec 64))
(declare-fun temp10558_35 () (_ BitVec 64))
(declare-fun temp10558_36 () (_ BitVec 64))
(declare-fun temp10558_37 () (_ BitVec 64))
(declare-fun temp10558_38 () (_ BitVec 64))
(declare-fun temp10558_39 () (_ BitVec 64))
(declare-fun temp10558_40 () (_ BitVec 64))
(declare-fun temp10558_41 () (_ BitVec 64))
(declare-fun temp10558_42 () (_ BitVec 64))
(declare-fun temp10558_43 () (_ BitVec 64))
(declare-fun temp10558_44 () (_ BitVec 64))
(declare-fun temp10558_45 () (_ BitVec 64))
(declare-fun temp10558_46 () (_ BitVec 64))
(declare-fun temp10558_47 () (_ BitVec 64))
(declare-fun temp10558_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10558_49 () (_ BitVec 64))
(declare-fun temp10558_50 () (_ BitVec 64))
(declare-fun temp10558_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10558_52 () (_ BitVec 64))
(declare-fun temp10558_53 () (_ BitVec 64))
(declare-fun temp10558_54 () (_ BitVec 64))
(declare-fun temp10558_55 () (_ BitVec 64))
(declare-fun temp10558_56 () (_ BitVec 64))
(declare-fun temp10558_57 () (_ BitVec 64))
(declare-fun temp10558_58 () (_ BitVec 64))
(declare-fun temp10558_59 () (_ BitVec 64))
(declare-fun temp10558_60 () (_ BitVec 64))
(declare-fun temp10558_61 () (_ BitVec 64))
(declare-fun temp10558_62 () (_ BitVec 64))
(declare-fun temp10558_63 () (_ BitVec 64))
(declare-fun temp10558_64 () (_ BitVec 64))
(declare-fun temp10558_65 () (_ BitVec 64))
(declare-fun temp10558_66 () (_ BitVec 64))
(declare-fun temp10558_67 () (_ BitVec 64))
(declare-fun temp10558_68 () (_ BitVec 64))
(declare-fun temp10558_69 () (_ BitVec 64))
(declare-fun temp10558_70 () (_ BitVec 64))
(declare-fun temp10558_71 () (_ BitVec 64))
(declare-fun temp10558_72 () (_ BitVec 64))
(declare-fun temp10558_73 () (_ BitVec 64))
(declare-fun temp10558_74 () (_ BitVec 64))
(declare-fun temp10558_75 () (_ BitVec 64))
(declare-fun temp10558_76 () (_ BitVec 64))
(declare-fun temp10558_77 () (_ BitVec 64))
(declare-fun temp10558_78 () (_ BitVec 64))
(declare-fun temp10558_79 () (_ BitVec 64))
(declare-fun temp10558_80 () (_ BitVec 64))
(declare-fun temp10558_81 () (_ BitVec 64))
(declare-fun temp10558_82 () (_ BitVec 64))
(declare-fun temp10558_83 () (_ BitVec 64))
(declare-fun temp10558_84 () (_ BitVec 64))
(declare-fun temp10558_85 () (_ BitVec 64))
(declare-fun temp10558_86 () (_ BitVec 64))
(declare-fun temp10558_87 () (_ BitVec 64))
(declare-fun temp10558_88 () (_ BitVec 64))
(declare-fun temp10558_89 () (_ BitVec 64))
(declare-fun temp10558_90 () (_ BitVec 64))
(declare-fun temp10558_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10558_92 () (_ BitVec 64))
(declare-fun temp10558_93 () (_ BitVec 64))
(declare-fun temp10558_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10558_95 () (_ BitVec 64))
(declare-fun temp10558_96 () (_ BitVec 64))
(declare-fun temp10558_97 () (_ BitVec 64))
(declare-fun temp10558_98 () (_ BitVec 64))
(declare-fun temp10558_99 () (_ BitVec 64))
(declare-fun temp10558_100 () (_ BitVec 64))
(declare-fun temp10558_101 () (_ BitVec 64))
(declare-fun temp10558_102 () (_ BitVec 64))
(declare-fun temp10558_103 () (_ BitVec 64))
(declare-fun temp10558_104 () (_ BitVec 64))
(declare-fun temp10558_105 () (_ BitVec 64))
(declare-fun temp10558_106 () (_ BitVec 64))
(declare-fun temp10558_107 () (_ BitVec 64))
(declare-fun temp10558_108 () (_ BitVec 64))
(declare-fun temp10558_109 () (_ BitVec 64))
(declare-fun temp10558_110 () (_ BitVec 64))
(declare-fun temp10558_111 () (_ BitVec 64))
(declare-fun temp10558_112 () (_ BitVec 64))
(declare-fun temp10558_113 () (_ BitVec 64))
(declare-fun temp10558_114 () (_ BitVec 64))
(declare-fun temp10558_115 () (_ BitVec 64))
(declare-fun temp10558_116 () (_ BitVec 64))
(declare-fun temp10558_117 () (_ BitVec 64))
(declare-fun temp10558_118 () (_ BitVec 64))
(declare-fun temp10558_119 () (_ BitVec 64))
(declare-fun temp10558_120 () (_ BitVec 64))
(declare-fun temp10558_121 () (_ BitVec 64))
(declare-fun temp10558_122 () (_ BitVec 64))
(declare-fun temp10558_123 () (_ BitVec 64))
(declare-fun temp10558_124 () (_ BitVec 64))
(declare-fun temp10558_125 () (_ BitVec 64))
(declare-fun temp10558_126 () (_ BitVec 64))
(declare-fun temp10558_127 () (_ BitVec 64))
(declare-fun temp10558_128 () (_ BitVec 64))
(declare-fun temp10558_129 () (_ BitVec 64))
(declare-fun temp10558_130 () (_ BitVec 64))
(declare-fun temp10558_131 () (_ BitVec 64))
(declare-fun temp10558_132 () (_ BitVec 64))
(declare-fun temp10558_133 () (_ BitVec 64))
(declare-fun temp10558_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10558_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10558_136 () (_ BitVec 64))
(declare-fun temp10558_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10558_138 () (_ BitVec 64))
(declare-fun temp10558_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10558_140 () (_ BitVec 64))
(declare-fun temp10558_141 () (_ BitVec 64))
(declare-fun temp10558_142 () (_ BitVec 64))
(declare-fun temp10558_143 () (_ BitVec 64))
(declare-fun temp10558_144 () (_ BitVec 64))
(declare-fun temp10558_145 () (_ BitVec 64))
(declare-fun temp10558_146 () (_ BitVec 64))
(declare-fun temp10558_147 () (_ BitVec 64))
(declare-fun temp10558_148 () (_ BitVec 64))
(declare-fun temp10558_149 () (_ BitVec 64))
(declare-fun temp10558_150 () (_ BitVec 64))
(declare-fun temp10558_151 () (_ BitVec 64))
(declare-fun temp10558_152 () (_ BitVec 64))
(declare-fun temp10558_153 () (_ BitVec 64))
(declare-fun temp10558_154 () (_ BitVec 64))
(declare-fun temp10558_155 () (_ BitVec 64))
(declare-fun temp10558_157 () (_ BitVec 64))
(declare-fun temp10558_158 () (_ BitVec 64))
(declare-fun temp10558_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10558_159 () (_ BitVec 64))
(declare-fun temp10558_160 () (_ BitVec 64))
(declare-fun temp10558_162 () (_ BitVec 64))
(declare-fun temp10558_163 () (_ BitVec 64))
(declare-fun temp10558_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10558_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10558_165 () (_ BitVec 64))
(declare-fun temp10558_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10558_167 () (_ BitVec 64))
(declare-fun temp10558_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10558_169 () (_ BitVec 64))
(declare-fun temp10558_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10558_171 () (_ BitVec 64))
(declare-fun temp10558_172 () (_ BitVec 64))
(declare-fun temp10558_173 () (_ BitVec 64))
(declare-fun temp10558_174 () (_ BitVec 64))
(declare-fun temp10558_175 () (_ BitVec 64))
(declare-fun temp10558_176 () (_ BitVec 64))
(declare-fun temp10558_177 () (_ BitVec 64))
(declare-fun temp10558_178 () (_ BitVec 64))
(declare-fun temp10558_179 () (_ BitVec 64))
(declare-fun temp10558_180 () (_ BitVec 64))
(declare-fun temp10558_181 () (_ BitVec 64))
(declare-fun temp10558_182 () (_ BitVec 64))
(declare-fun temp10558_183 () (_ BitVec 64))
(declare-fun temp10558_184 () (_ BitVec 64))
(declare-fun temp10558_185 () (_ BitVec 64))
(declare-fun temp10558_186 () (_ BitVec 64))
(declare-fun temp10558_187 () (_ BitVec 64))
(declare-fun temp10558_188 () (_ BitVec 64))
(declare-fun temp10558_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10558_190 () (_ BitVec 64))
(declare-fun temp10558_192 () (_ BitVec 64))
(declare-fun temp10558_193 () (_ BitVec 64))
(declare-fun temp10558_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10558_194 () (_ BitVec 64))
(declare-fun temp10558_195 () (_ BitVec 64))
(declare-fun temp10558_197 () (_ BitVec 64))
(declare-fun temp10558_198 () (_ BitVec 64))
(declare-fun temp10558_196 () (_ BitVec 64))
(declare-fun temp10558_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10558_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10558_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10558_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10558_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10558_204 () (_ BitVec 64))
(declare-fun temp10558_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10558_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10558_207 () (_ BitVec 64))
(declare-fun temp10558_208 () (_ BitVec 64))
(declare-fun temp10558_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10558_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10558_211 () (_ BitVec 64))
(declare-fun temp10558_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10558_213 () (_ BitVec 64))
(declare-fun temp10558_214 () (_ BitVec 64))
(declare-fun temp10558_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10558_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10558_217 () (_ BitVec 64))
(declare-fun temp10558_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10558_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10558_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp10558_221 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5848909 () (_ BitVec 64))
(declare-fun temp10558_222 () (_ BitVec 64))
(assert (= temp10558_1 #x0000000000000001))
(assert (= var77203 temp10558_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10558_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10558_2)))
(assert (= temp10558_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10558_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10558_4 #x0000000000000000))
(assert (= var210941 temp10558_4))
(assert (= temp10558_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10558_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10558_6 #x0000000000000000))
(assert (= var210986 temp10558_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10558_7 #x0000000000000000))
(assert (= temp10558_8 temp10558_7))
(assert (= temp10558_9 (select ARGNAME_padding_NAMEEND_VAL temp10558_8)))
(assert (= temp10558_10 #x0000000000000001))
(assert (= temp10558_11 temp10558_10))
(assert (= temp10558_12 (select ARGNAME_padding_NAMEEND_VAL temp10558_11)))
(assert (= temp10558_13 #x0000000000000002))
(assert (= temp10558_14 temp10558_13))
(assert (= temp10558_15 (select ARGNAME_padding_NAMEEND_VAL temp10558_14)))
(assert (= temp10558_16 #x0000000000000003))
(assert (= temp10558_17 temp10558_16))
(assert (= temp10558_18 (select ARGNAME_padding_NAMEEND_VAL temp10558_17)))
(assert (= temp10558_19 #x0000000000000004))
(assert (= temp10558_20 temp10558_19))
(assert (= temp10558_21 (select ARGNAME_padding_NAMEEND_VAL temp10558_20)))
(assert (= temp10558_22 #x0000000000000005))
(assert (= temp10558_23 temp10558_22))
(assert (= temp10558_24 (select ARGNAME_padding_NAMEEND_VAL temp10558_23)))
(assert (= temp10558_25 #x0000000000000000))
(assert (= temp10558_26 #x0000000000000000))
(assert (= temp10558_27 temp10558_26))
(assert (= temp10558_28 (select ARGNAME_padding_NAMEEND_VAL temp10558_27)))
(assert (= temp10558_29 #x0000000000000000))
(assert (= temp10558_30 #x0000000000000001))
(assert (= temp10558_31 temp10558_30))
(assert (= temp10558_32 (select ARGNAME_padding_NAMEEND_VAL temp10558_31)))
(assert (= temp10558_33 #x0000000000000000))
(assert (= temp10558_34 #x0000000000000002))
(assert (= temp10558_35 temp10558_34))
(assert (= temp10558_36 (select ARGNAME_padding_NAMEEND_VAL temp10558_35)))
(assert (= temp10558_37 #x0000000000000000))
(assert (= temp10558_38 #x0000000000000003))
(assert (= temp10558_39 temp10558_38))
(assert (= temp10558_40 (select ARGNAME_padding_NAMEEND_VAL temp10558_39)))
(assert (= temp10558_41 #x0000000000000000))
(assert (= temp10558_42 #x0000000000000004))
(assert (= temp10558_43 temp10558_42))
(assert (= temp10558_44 (select ARGNAME_padding_NAMEEND_VAL temp10558_43)))
(assert (= temp10558_45 #x0000000000000000))
(assert (= temp10558_46 #x0000000000000005))
(assert (= temp10558_47 temp10558_46))
(assert (= temp10558_48 (select ARGNAME_padding_NAMEEND_VAL temp10558_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10558_28 temp10558_25)
             (bvslt temp10558_32 temp10558_29)
             (bvslt temp10558_36 temp10558_33)
             (bvslt temp10558_40 temp10558_37)
             (bvslt temp10558_44 temp10558_41)
             (bvslt temp10558_48 temp10558_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10558_49 #x0000000000000000))
(assert (= var1191714 temp10558_49))
(assert (= temp10558_50 #x0000000000000000))
(assert (= temp10558_51 temp10558_50))
(assert (= temp10558_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10558_51)))
(assert (= temp10558_53 #x0000000000000001))
(assert (= temp10558_54 temp10558_53))
(assert (= temp10558_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10558_54)))
(assert (= temp10558_56 #x0000000000000002))
(assert (= temp10558_57 temp10558_56))
(assert (= temp10558_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10558_57)))
(assert (= temp10558_59 #x0000000000000003))
(assert (= temp10558_60 temp10558_59))
(assert (= temp10558_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10558_60)))
(assert (= temp10558_62 #x0000000000000004))
(assert (= temp10558_63 temp10558_62))
(assert (= temp10558_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10558_63)))
(assert (= temp10558_65 #x0000000000000005))
(assert (= temp10558_66 temp10558_65))
(assert (= temp10558_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10558_66)))
(assert (= temp10558_68 #x0000000000000000))
(assert (= temp10558_69 #x0000000000000000))
(assert (= temp10558_70 temp10558_69))
(assert (= temp10558_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10558_70)))
(assert (= temp10558_72 #x0000000000000000))
(assert (= temp10558_73 #x0000000000000001))
(assert (= temp10558_74 temp10558_73))
(assert (= temp10558_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10558_74)))
(assert (= temp10558_76 #x0000000000000000))
(assert (= temp10558_77 #x0000000000000002))
(assert (= temp10558_78 temp10558_77))
(assert (= temp10558_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10558_78)))
(assert (= temp10558_80 #x0000000000000000))
(assert (= temp10558_81 #x0000000000000003))
(assert (= temp10558_82 temp10558_81))
(assert (= temp10558_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10558_82)))
(assert (= temp10558_84 #x0000000000000000))
(assert (= temp10558_85 #x0000000000000004))
(assert (= temp10558_86 temp10558_85))
(assert (= temp10558_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10558_86)))
(assert (= temp10558_88 #x0000000000000000))
(assert (= temp10558_89 #x0000000000000005))
(assert (= temp10558_90 temp10558_89))
(assert (= temp10558_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10558_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10558_71 temp10558_68)
             (bvslt temp10558_75 temp10558_72)
             (bvslt temp10558_79 temp10558_76)
             (bvslt temp10558_83 temp10558_80)
             (bvslt temp10558_87 temp10558_84)
             (bvslt temp10558_91 temp10558_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10558_92 #x0000000000000000))
(assert (= var1191725 temp10558_92))
(assert (= temp10558_93 #x0000000000000000))
(assert (= temp10558_94 temp10558_93))
(assert (= temp10558_95 (select ARGNAME_stride_NAMEEND_VAL temp10558_94)))
(assert (= temp10558_96 #x0000000000000001))
(assert (= temp10558_97 temp10558_96))
(assert (= temp10558_98 (select ARGNAME_stride_NAMEEND_VAL temp10558_97)))
(assert (= temp10558_99 #x0000000000000002))
(assert (= temp10558_100 temp10558_99))
(assert (= temp10558_101 (select ARGNAME_stride_NAMEEND_VAL temp10558_100)))
(assert (= temp10558_102 #x0000000000000003))
(assert (= temp10558_103 temp10558_102))
(assert (= temp10558_104 (select ARGNAME_stride_NAMEEND_VAL temp10558_103)))
(assert (= temp10558_105 #x0000000000000004))
(assert (= temp10558_106 temp10558_105))
(assert (= temp10558_107 (select ARGNAME_stride_NAMEEND_VAL temp10558_106)))
(assert (= temp10558_108 #x0000000000000005))
(assert (= temp10558_109 temp10558_108))
(assert (= temp10558_110 (select ARGNAME_stride_NAMEEND_VAL temp10558_109)))
(assert (= temp10558_111 #x0000000000000000))
(assert (= temp10558_112 #x0000000000000000))
(assert (= temp10558_113 temp10558_112))
(assert (= temp10558_114 (select ARGNAME_stride_NAMEEND_VAL temp10558_113)))
(assert (= temp10558_115 #x0000000000000000))
(assert (= temp10558_116 #x0000000000000001))
(assert (= temp10558_117 temp10558_116))
(assert (= temp10558_118 (select ARGNAME_stride_NAMEEND_VAL temp10558_117)))
(assert (= temp10558_119 #x0000000000000000))
(assert (= temp10558_120 #x0000000000000002))
(assert (= temp10558_121 temp10558_120))
(assert (= temp10558_122 (select ARGNAME_stride_NAMEEND_VAL temp10558_121)))
(assert (= temp10558_123 #x0000000000000000))
(assert (= temp10558_124 #x0000000000000003))
(assert (= temp10558_125 temp10558_124))
(assert (= temp10558_126 (select ARGNAME_stride_NAMEEND_VAL temp10558_125)))
(assert (= temp10558_127 #x0000000000000000))
(assert (= temp10558_128 #x0000000000000004))
(assert (= temp10558_129 temp10558_128))
(assert (= temp10558_130 (select ARGNAME_stride_NAMEEND_VAL temp10558_129)))
(assert (= temp10558_131 #x0000000000000000))
(assert (= temp10558_132 #x0000000000000005))
(assert (= temp10558_133 temp10558_132))
(assert (= temp10558_134 (select ARGNAME_stride_NAMEEND_VAL temp10558_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10558_114 temp10558_111)
             (bvsle temp10558_118 temp10558_115)
             (bvsle temp10558_122 temp10558_119)
             (bvsle temp10558_126 temp10558_123)
             (bvsle temp10558_130 temp10558_127)
             (bvsle temp10558_134 temp10558_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10558_135 #x0000000000000000))
(assert (= var1191735 temp10558_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10558_136 #x0000000000000001))
(assert (= var1191747 temp10558_136))
(assert (= temp10558_137 #x0000000000000000))
(assert (= var1179826 temp10558_137))
(assert (= temp10558_138 #x0000000000000000))
(assert (= temp10558_139 temp10558_138))
(assert (= temp10558_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10558_139)))
(assert (= temp10558_141 #x0000000000000001))
(assert (= temp10558_142 temp10558_141))
(assert (= temp10558_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10558_142)))
(assert (= temp10558_144 #x0000000000000002))
(assert (= temp10558_145 temp10558_144))
(assert (= temp10558_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10558_145)))
(assert (= temp10558_147 #x0000000000000003))
(assert (= temp10558_148 temp10558_147))
(assert (= temp10558_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10558_148)))
(assert (= temp10558_150 #x0000000000000004))
(assert (= temp10558_151 temp10558_150))
(assert (= temp10558_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10558_151)))
(assert (= temp10558_153 #x0000000000000005))
(assert (= temp10558_154 temp10558_153))
(assert (= temp10558_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10558_154)))
(assert (= temp10558_157 var1179826))
(assert (= temp10558_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10558_157)))
(assert (= temp10558_156 temp10558_158))
(assert (= var1191780
   (ite (bvslt temp10558_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10558_159 #x0000000000000000))
(assert (= var1191780 temp10558_159))
(assert (= temp10558_160 #x0000000000000000))
(assert (= var1179826 temp10558_160))
(assert (= temp10558_162 var1179826))
(assert (= temp10558_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10558_162)))
(assert (= temp10558_161 temp10558_163))
(assert (= var1191802 (bvsmod temp10558_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10558_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10558_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10558_165 #x0000000000000001))
(assert (= var1191803 temp10558_165))
(assert (= temp10558_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10558_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10558_167 #x0000000000000001))
(assert (= var1191823 temp10558_167))
(assert (= temp10558_168 #x0000000000000001))
(assert (= var1180714 temp10558_168))
(assert (= temp10558_169 #x0000000000000000))
(assert (= temp10558_170 temp10558_169))
(assert (= temp10558_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10558_170)))
(assert (= temp10558_172 #x0000000000000001))
(assert (= temp10558_173 temp10558_172))
(assert (= temp10558_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10558_173)))
(assert (= temp10558_175 #x0000000000000002))
(assert (= temp10558_176 temp10558_175))
(assert (= temp10558_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10558_176)))
(assert (= temp10558_178 #x0000000000000003))
(assert (= temp10558_179 temp10558_178))
(assert (= temp10558_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10558_179)))
(assert (= temp10558_181 #x0000000000000004))
(assert (= temp10558_182 temp10558_181))
(assert (= temp10558_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10558_182)))
(assert (= temp10558_184 #x0000000000000005))
(assert (= temp10558_185 temp10558_184))
(assert (= temp10558_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10558_185)))
(assert (= temp10558_187 #x0000000000000000))
(assert (= temp10558_188
   (ite (bvslt var1180714 temp10558_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10558_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10558_188)))
(assert (= var1191831 temp10558_189))
(assert (bvslt (ite (bvslt var1180714 temp10558_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10558_190 #x0000000000000001))
(assert (= var1180714 temp10558_190))
(assert (= temp10558_192 var1180714))
(assert (= temp10558_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10558_192)))
(assert (= temp10558_191 temp10558_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10558_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10558_194 #x0000000000000001))
(assert (= var1191836 temp10558_194))
(assert (= temp10558_195 #x0000000000000000))
(assert (= var1179826 temp10558_195))
(assert (= temp10558_197 var1179826))
(assert (= temp10558_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10558_197)))
(assert (= temp10558_196 temp10558_198))
(assert (= temp10558_199 #x0000000000000002))
(assert (= var1586025 temp10558_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10558_200 #x0000000000000001))
(assert (= var1191993 temp10558_200))
(assert (= temp10558_201 #x0000000000000001))
(assert (= var2700303 temp10558_201))
(assert (= temp10558_202 #x0000000000000001))
(assert (= var2962447 temp10558_202))
(assert (= temp10558_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10558_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10558_204 #x0000000000000001))
(assert (= var211058 temp10558_204))
(assert (= temp10558_205 #x0000000000000001))
(assert (= var211188 temp10558_205))
(assert (= var3879401 var211188))
(assert (= temp10558_206 #x0000000000000000))
(assert (= var3866802 temp10558_206))
(assert (= temp10558_207 #x0000000000000000))
(assert (= temp10558_208
   (ite (bvslt var3866802 temp10558_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10558_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10558_208)))
(assert (= var3879420 temp10558_209))
(assert (bvslt (ite (bvslt var3866802 temp10558_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10558_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10558_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10558_211 #x0000000000000000))
(assert (= var3879421 temp10558_211))
(assert (= temp10558_212 #x0000000000000001))
(assert (= var3867690 temp10558_212))
(assert (= temp10558_213 #x0000000000000000))
(assert (= temp10558_214
   (ite (bvslt var3867690 temp10558_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10558_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10558_214)))
(assert (= var3879423 temp10558_215))
(assert (bvslt (ite (bvslt var3867690 temp10558_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10558_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10558_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10558_217 #x0000000000000001))
(assert (= var3879424 temp10558_217))
(assert (= temp10558_218 #x0000000000000000))
(assert (= var4133117 temp10558_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10558_219 #x0000000000000002))
(assert (= var4339331 temp10558_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10558_220 #x0000000000000000))
(assert (= var4404892 temp10558_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4927888 var211201))
(assert (= var211388 var210913))
(assert (= temp10558_221 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp10558_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var5848909 var211389))
(assert (= temp10558_222 #x0000000000000001))
(assert (= var211058 temp10558_222))
(model-add temp10558_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10558_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10558_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10558_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






