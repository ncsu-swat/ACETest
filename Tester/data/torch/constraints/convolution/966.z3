(declare-fun temp1288_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1288_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1288_3 () (_ BitVec 64))
(declare-fun temp1288_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1288_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1288_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1288_7 () (_ BitVec 64))
(declare-fun temp1288_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1288_9 () (_ BitVec 64))
(declare-fun temp1288_10 () (_ BitVec 64))
(declare-fun temp1288_11 () (_ BitVec 64))
(declare-fun temp1288_12 () (_ BitVec 64))
(declare-fun temp1288_13 () (_ BitVec 64))
(declare-fun temp1288_14 () (_ BitVec 64))
(declare-fun temp1288_15 () (_ BitVec 64))
(declare-fun temp1288_16 () (_ BitVec 64))
(declare-fun temp1288_17 () (_ BitVec 64))
(declare-fun temp1288_18 () (_ BitVec 64))
(declare-fun temp1288_19 () (_ BitVec 64))
(declare-fun temp1288_20 () (_ BitVec 64))
(declare-fun temp1288_21 () (_ BitVec 64))
(declare-fun temp1288_22 () (_ BitVec 64))
(declare-fun temp1288_23 () (_ BitVec 64))
(declare-fun temp1288_24 () (_ BitVec 64))
(declare-fun temp1288_25 () (_ BitVec 64))
(declare-fun temp1288_26 () (_ BitVec 64))
(declare-fun temp1288_27 () (_ BitVec 64))
(declare-fun temp1288_28 () (_ BitVec 64))
(declare-fun temp1288_29 () (_ BitVec 64))
(declare-fun temp1288_30 () (_ BitVec 64))
(declare-fun temp1288_31 () (_ BitVec 64))
(declare-fun temp1288_32 () (_ BitVec 64))
(declare-fun temp1288_33 () (_ BitVec 64))
(declare-fun temp1288_34 () (_ BitVec 64))
(declare-fun temp1288_35 () (_ BitVec 64))
(declare-fun temp1288_36 () (_ BitVec 64))
(declare-fun temp1288_37 () (_ BitVec 64))
(declare-fun temp1288_38 () (_ BitVec 64))
(declare-fun temp1288_39 () (_ BitVec 64))
(declare-fun temp1288_40 () (_ BitVec 64))
(declare-fun temp1288_41 () (_ BitVec 64))
(declare-fun temp1288_42 () (_ BitVec 64))
(declare-fun temp1288_43 () (_ BitVec 64))
(declare-fun temp1288_44 () (_ BitVec 64))
(declare-fun temp1288_45 () (_ BitVec 64))
(declare-fun temp1288_46 () (_ BitVec 64))
(declare-fun temp1288_47 () (_ BitVec 64))
(declare-fun temp1288_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1288_49 () (_ BitVec 64))
(declare-fun temp1288_50 () (_ BitVec 64))
(declare-fun temp1288_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1288_52 () (_ BitVec 64))
(declare-fun temp1288_53 () (_ BitVec 64))
(declare-fun temp1288_54 () (_ BitVec 64))
(declare-fun temp1288_55 () (_ BitVec 64))
(declare-fun temp1288_56 () (_ BitVec 64))
(declare-fun temp1288_57 () (_ BitVec 64))
(declare-fun temp1288_58 () (_ BitVec 64))
(declare-fun temp1288_59 () (_ BitVec 64))
(declare-fun temp1288_60 () (_ BitVec 64))
(declare-fun temp1288_61 () (_ BitVec 64))
(declare-fun temp1288_62 () (_ BitVec 64))
(declare-fun temp1288_63 () (_ BitVec 64))
(declare-fun temp1288_64 () (_ BitVec 64))
(declare-fun temp1288_65 () (_ BitVec 64))
(declare-fun temp1288_66 () (_ BitVec 64))
(declare-fun temp1288_67 () (_ BitVec 64))
(declare-fun temp1288_68 () (_ BitVec 64))
(declare-fun temp1288_69 () (_ BitVec 64))
(declare-fun temp1288_70 () (_ BitVec 64))
(declare-fun temp1288_71 () (_ BitVec 64))
(declare-fun temp1288_72 () (_ BitVec 64))
(declare-fun temp1288_73 () (_ BitVec 64))
(declare-fun temp1288_74 () (_ BitVec 64))
(declare-fun temp1288_75 () (_ BitVec 64))
(declare-fun temp1288_76 () (_ BitVec 64))
(declare-fun temp1288_77 () (_ BitVec 64))
(declare-fun temp1288_78 () (_ BitVec 64))
(declare-fun temp1288_79 () (_ BitVec 64))
(declare-fun temp1288_80 () (_ BitVec 64))
(declare-fun temp1288_81 () (_ BitVec 64))
(declare-fun temp1288_82 () (_ BitVec 64))
(declare-fun temp1288_83 () (_ BitVec 64))
(declare-fun temp1288_84 () (_ BitVec 64))
(declare-fun temp1288_85 () (_ BitVec 64))
(declare-fun temp1288_86 () (_ BitVec 64))
(declare-fun temp1288_87 () (_ BitVec 64))
(declare-fun temp1288_88 () (_ BitVec 64))
(declare-fun temp1288_89 () (_ BitVec 64))
(declare-fun temp1288_90 () (_ BitVec 64))
(declare-fun temp1288_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1288_92 () (_ BitVec 64))
(declare-fun temp1288_93 () (_ BitVec 64))
(declare-fun temp1288_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1288_95 () (_ BitVec 64))
(declare-fun temp1288_96 () (_ BitVec 64))
(declare-fun temp1288_97 () (_ BitVec 64))
(declare-fun temp1288_98 () (_ BitVec 64))
(declare-fun temp1288_99 () (_ BitVec 64))
(declare-fun temp1288_100 () (_ BitVec 64))
(declare-fun temp1288_101 () (_ BitVec 64))
(declare-fun temp1288_102 () (_ BitVec 64))
(declare-fun temp1288_103 () (_ BitVec 64))
(declare-fun temp1288_104 () (_ BitVec 64))
(declare-fun temp1288_105 () (_ BitVec 64))
(declare-fun temp1288_106 () (_ BitVec 64))
(declare-fun temp1288_107 () (_ BitVec 64))
(declare-fun temp1288_108 () (_ BitVec 64))
(declare-fun temp1288_109 () (_ BitVec 64))
(declare-fun temp1288_110 () (_ BitVec 64))
(declare-fun temp1288_111 () (_ BitVec 64))
(declare-fun temp1288_112 () (_ BitVec 64))
(declare-fun temp1288_113 () (_ BitVec 64))
(declare-fun temp1288_114 () (_ BitVec 64))
(declare-fun temp1288_115 () (_ BitVec 64))
(declare-fun temp1288_116 () (_ BitVec 64))
(declare-fun temp1288_117 () (_ BitVec 64))
(declare-fun temp1288_118 () (_ BitVec 64))
(declare-fun temp1288_119 () (_ BitVec 64))
(declare-fun temp1288_120 () (_ BitVec 64))
(declare-fun temp1288_121 () (_ BitVec 64))
(declare-fun temp1288_122 () (_ BitVec 64))
(declare-fun temp1288_123 () (_ BitVec 64))
(declare-fun temp1288_124 () (_ BitVec 64))
(declare-fun temp1288_125 () (_ BitVec 64))
(declare-fun temp1288_126 () (_ BitVec 64))
(declare-fun temp1288_127 () (_ BitVec 64))
(declare-fun temp1288_128 () (_ BitVec 64))
(declare-fun temp1288_129 () (_ BitVec 64))
(declare-fun temp1288_130 () (_ BitVec 64))
(declare-fun temp1288_131 () (_ BitVec 64))
(declare-fun temp1288_132 () (_ BitVec 64))
(declare-fun temp1288_133 () (_ BitVec 64))
(declare-fun temp1288_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1288_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1288_136 () (_ BitVec 64))
(declare-fun temp1288_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1288_138 () (_ BitVec 64))
(declare-fun temp1288_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1288_140 () (_ BitVec 64))
(declare-fun temp1288_141 () (_ BitVec 64))
(declare-fun temp1288_142 () (_ BitVec 64))
(declare-fun temp1288_143 () (_ BitVec 64))
(declare-fun temp1288_144 () (_ BitVec 64))
(declare-fun temp1288_145 () (_ BitVec 64))
(declare-fun temp1288_146 () (_ BitVec 64))
(declare-fun temp1288_147 () (_ BitVec 64))
(declare-fun temp1288_148 () (_ BitVec 64))
(declare-fun temp1288_149 () (_ BitVec 64))
(declare-fun temp1288_150 () (_ BitVec 64))
(declare-fun temp1288_151 () (_ BitVec 64))
(declare-fun temp1288_152 () (_ BitVec 64))
(declare-fun temp1288_153 () (_ BitVec 64))
(declare-fun temp1288_154 () (_ BitVec 64))
(declare-fun temp1288_155 () (_ BitVec 64))
(declare-fun temp1288_157 () (_ BitVec 64))
(declare-fun temp1288_158 () (_ BitVec 64))
(declare-fun temp1288_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1288_159 () (_ BitVec 64))
(declare-fun temp1288_160 () (_ BitVec 64))
(declare-fun temp1288_162 () (_ BitVec 64))
(declare-fun temp1288_163 () (_ BitVec 64))
(declare-fun temp1288_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1288_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1288_165 () (_ BitVec 64))
(declare-fun temp1288_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1288_167 () (_ BitVec 64))
(declare-fun temp1288_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1288_169 () (_ BitVec 64))
(declare-fun temp1288_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1288_171 () (_ BitVec 64))
(declare-fun temp1288_172 () (_ BitVec 64))
(declare-fun temp1288_173 () (_ BitVec 64))
(declare-fun temp1288_174 () (_ BitVec 64))
(declare-fun temp1288_175 () (_ BitVec 64))
(declare-fun temp1288_176 () (_ BitVec 64))
(declare-fun temp1288_177 () (_ BitVec 64))
(declare-fun temp1288_178 () (_ BitVec 64))
(declare-fun temp1288_179 () (_ BitVec 64))
(declare-fun temp1288_180 () (_ BitVec 64))
(declare-fun temp1288_181 () (_ BitVec 64))
(declare-fun temp1288_182 () (_ BitVec 64))
(declare-fun temp1288_183 () (_ BitVec 64))
(declare-fun temp1288_184 () (_ BitVec 64))
(declare-fun temp1288_185 () (_ BitVec 64))
(declare-fun temp1288_186 () (_ BitVec 64))
(declare-fun temp1288_187 () (_ BitVec 64))
(declare-fun temp1288_188 () (_ BitVec 64))
(declare-fun temp1288_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1288_190 () (_ BitVec 64))
(declare-fun temp1288_192 () (_ BitVec 64))
(declare-fun temp1288_193 () (_ BitVec 64))
(declare-fun temp1288_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1288_194 () (_ BitVec 64))
(declare-fun temp1288_195 () (_ BitVec 64))
(declare-fun temp1288_197 () (_ BitVec 64))
(declare-fun temp1288_198 () (_ BitVec 64))
(declare-fun temp1288_196 () (_ BitVec 64))
(declare-fun temp1288_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1288_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1288_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1288_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1288_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1288_204 () (_ BitVec 64))
(declare-fun temp1288_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1288_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1288_207 () (_ BitVec 64))
(declare-fun temp1288_208 () (_ BitVec 64))
(declare-fun temp1288_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1288_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1288_211 () (_ BitVec 64))
(declare-fun temp1288_212 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1288_213 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp1288_214 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp1288_216 () (_ BitVec 64))
(declare-fun temp1288_215 () (_ BitVec 64))
(declare-fun temp1288_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp1288_218 () (_ BitVec 64))
(declare-fun temp1288_219 () (_ BitVec 64))
(declare-fun temp1288_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp1288_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp1288_222 () (_ BitVec 64))
(declare-fun temp1288_224 () (_ BitVec 64))
(declare-fun temp1288_223 () (_ BitVec 64))
(declare-fun temp1288_225 () (_ BitVec 64))
(assert (= temp1288_1 #x0000000000000001))
(assert (= var77203 temp1288_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1288_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1288_2)))
(assert (= temp1288_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1288_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1288_4 #x0000000000000000))
(assert (= var210941 temp1288_4))
(assert (= temp1288_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1288_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1288_6 #x0000000000000000))
(assert (= var210986 temp1288_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1288_7 #x0000000000000000))
(assert (= temp1288_8 temp1288_7))
(assert (= temp1288_9 (select ARGNAME_padding_NAMEEND_VAL temp1288_8)))
(assert (= temp1288_10 #x0000000000000001))
(assert (= temp1288_11 temp1288_10))
(assert (= temp1288_12 (select ARGNAME_padding_NAMEEND_VAL temp1288_11)))
(assert (= temp1288_13 #x0000000000000002))
(assert (= temp1288_14 temp1288_13))
(assert (= temp1288_15 (select ARGNAME_padding_NAMEEND_VAL temp1288_14)))
(assert (= temp1288_16 #x0000000000000003))
(assert (= temp1288_17 temp1288_16))
(assert (= temp1288_18 (select ARGNAME_padding_NAMEEND_VAL temp1288_17)))
(assert (= temp1288_19 #x0000000000000004))
(assert (= temp1288_20 temp1288_19))
(assert (= temp1288_21 (select ARGNAME_padding_NAMEEND_VAL temp1288_20)))
(assert (= temp1288_22 #x0000000000000005))
(assert (= temp1288_23 temp1288_22))
(assert (= temp1288_24 (select ARGNAME_padding_NAMEEND_VAL temp1288_23)))
(assert (= temp1288_25 #x0000000000000000))
(assert (= temp1288_26 #x0000000000000000))
(assert (= temp1288_27 temp1288_26))
(assert (= temp1288_28 (select ARGNAME_padding_NAMEEND_VAL temp1288_27)))
(assert (= temp1288_29 #x0000000000000000))
(assert (= temp1288_30 #x0000000000000001))
(assert (= temp1288_31 temp1288_30))
(assert (= temp1288_32 (select ARGNAME_padding_NAMEEND_VAL temp1288_31)))
(assert (= temp1288_33 #x0000000000000000))
(assert (= temp1288_34 #x0000000000000002))
(assert (= temp1288_35 temp1288_34))
(assert (= temp1288_36 (select ARGNAME_padding_NAMEEND_VAL temp1288_35)))
(assert (= temp1288_37 #x0000000000000000))
(assert (= temp1288_38 #x0000000000000003))
(assert (= temp1288_39 temp1288_38))
(assert (= temp1288_40 (select ARGNAME_padding_NAMEEND_VAL temp1288_39)))
(assert (= temp1288_41 #x0000000000000000))
(assert (= temp1288_42 #x0000000000000004))
(assert (= temp1288_43 temp1288_42))
(assert (= temp1288_44 (select ARGNAME_padding_NAMEEND_VAL temp1288_43)))
(assert (= temp1288_45 #x0000000000000000))
(assert (= temp1288_46 #x0000000000000005))
(assert (= temp1288_47 temp1288_46))
(assert (= temp1288_48 (select ARGNAME_padding_NAMEEND_VAL temp1288_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1288_28 temp1288_25)
             (bvslt temp1288_32 temp1288_29)
             (bvslt temp1288_36 temp1288_33)
             (bvslt temp1288_40 temp1288_37)
             (bvslt temp1288_44 temp1288_41)
             (bvslt temp1288_48 temp1288_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1288_49 #x0000000000000000))
(assert (= var1191714 temp1288_49))
(assert (= temp1288_50 #x0000000000000000))
(assert (= temp1288_51 temp1288_50))
(assert (= temp1288_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1288_51)))
(assert (= temp1288_53 #x0000000000000001))
(assert (= temp1288_54 temp1288_53))
(assert (= temp1288_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1288_54)))
(assert (= temp1288_56 #x0000000000000002))
(assert (= temp1288_57 temp1288_56))
(assert (= temp1288_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1288_57)))
(assert (= temp1288_59 #x0000000000000003))
(assert (= temp1288_60 temp1288_59))
(assert (= temp1288_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1288_60)))
(assert (= temp1288_62 #x0000000000000004))
(assert (= temp1288_63 temp1288_62))
(assert (= temp1288_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1288_63)))
(assert (= temp1288_65 #x0000000000000005))
(assert (= temp1288_66 temp1288_65))
(assert (= temp1288_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1288_66)))
(assert (= temp1288_68 #x0000000000000000))
(assert (= temp1288_69 #x0000000000000000))
(assert (= temp1288_70 temp1288_69))
(assert (= temp1288_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1288_70)))
(assert (= temp1288_72 #x0000000000000000))
(assert (= temp1288_73 #x0000000000000001))
(assert (= temp1288_74 temp1288_73))
(assert (= temp1288_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1288_74)))
(assert (= temp1288_76 #x0000000000000000))
(assert (= temp1288_77 #x0000000000000002))
(assert (= temp1288_78 temp1288_77))
(assert (= temp1288_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1288_78)))
(assert (= temp1288_80 #x0000000000000000))
(assert (= temp1288_81 #x0000000000000003))
(assert (= temp1288_82 temp1288_81))
(assert (= temp1288_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1288_82)))
(assert (= temp1288_84 #x0000000000000000))
(assert (= temp1288_85 #x0000000000000004))
(assert (= temp1288_86 temp1288_85))
(assert (= temp1288_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1288_86)))
(assert (= temp1288_88 #x0000000000000000))
(assert (= temp1288_89 #x0000000000000005))
(assert (= temp1288_90 temp1288_89))
(assert (= temp1288_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1288_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1288_71 temp1288_68)
             (bvslt temp1288_75 temp1288_72)
             (bvslt temp1288_79 temp1288_76)
             (bvslt temp1288_83 temp1288_80)
             (bvslt temp1288_87 temp1288_84)
             (bvslt temp1288_91 temp1288_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1288_92 #x0000000000000000))
(assert (= var1191725 temp1288_92))
(assert (= temp1288_93 #x0000000000000000))
(assert (= temp1288_94 temp1288_93))
(assert (= temp1288_95 (select ARGNAME_stride_NAMEEND_VAL temp1288_94)))
(assert (= temp1288_96 #x0000000000000001))
(assert (= temp1288_97 temp1288_96))
(assert (= temp1288_98 (select ARGNAME_stride_NAMEEND_VAL temp1288_97)))
(assert (= temp1288_99 #x0000000000000002))
(assert (= temp1288_100 temp1288_99))
(assert (= temp1288_101 (select ARGNAME_stride_NAMEEND_VAL temp1288_100)))
(assert (= temp1288_102 #x0000000000000003))
(assert (= temp1288_103 temp1288_102))
(assert (= temp1288_104 (select ARGNAME_stride_NAMEEND_VAL temp1288_103)))
(assert (= temp1288_105 #x0000000000000004))
(assert (= temp1288_106 temp1288_105))
(assert (= temp1288_107 (select ARGNAME_stride_NAMEEND_VAL temp1288_106)))
(assert (= temp1288_108 #x0000000000000005))
(assert (= temp1288_109 temp1288_108))
(assert (= temp1288_110 (select ARGNAME_stride_NAMEEND_VAL temp1288_109)))
(assert (= temp1288_111 #x0000000000000000))
(assert (= temp1288_112 #x0000000000000000))
(assert (= temp1288_113 temp1288_112))
(assert (= temp1288_114 (select ARGNAME_stride_NAMEEND_VAL temp1288_113)))
(assert (= temp1288_115 #x0000000000000000))
(assert (= temp1288_116 #x0000000000000001))
(assert (= temp1288_117 temp1288_116))
(assert (= temp1288_118 (select ARGNAME_stride_NAMEEND_VAL temp1288_117)))
(assert (= temp1288_119 #x0000000000000000))
(assert (= temp1288_120 #x0000000000000002))
(assert (= temp1288_121 temp1288_120))
(assert (= temp1288_122 (select ARGNAME_stride_NAMEEND_VAL temp1288_121)))
(assert (= temp1288_123 #x0000000000000000))
(assert (= temp1288_124 #x0000000000000003))
(assert (= temp1288_125 temp1288_124))
(assert (= temp1288_126 (select ARGNAME_stride_NAMEEND_VAL temp1288_125)))
(assert (= temp1288_127 #x0000000000000000))
(assert (= temp1288_128 #x0000000000000004))
(assert (= temp1288_129 temp1288_128))
(assert (= temp1288_130 (select ARGNAME_stride_NAMEEND_VAL temp1288_129)))
(assert (= temp1288_131 #x0000000000000000))
(assert (= temp1288_132 #x0000000000000005))
(assert (= temp1288_133 temp1288_132))
(assert (= temp1288_134 (select ARGNAME_stride_NAMEEND_VAL temp1288_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1288_114 temp1288_111)
             (bvsle temp1288_118 temp1288_115)
             (bvsle temp1288_122 temp1288_119)
             (bvsle temp1288_126 temp1288_123)
             (bvsle temp1288_130 temp1288_127)
             (bvsle temp1288_134 temp1288_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1288_135 #x0000000000000000))
(assert (= var1191735 temp1288_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1288_136 #x0000000000000001))
(assert (= var1191747 temp1288_136))
(assert (= temp1288_137 #x0000000000000000))
(assert (= var1179826 temp1288_137))
(assert (= temp1288_138 #x0000000000000000))
(assert (= temp1288_139 temp1288_138))
(assert (= temp1288_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1288_139)))
(assert (= temp1288_141 #x0000000000000001))
(assert (= temp1288_142 temp1288_141))
(assert (= temp1288_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1288_142)))
(assert (= temp1288_144 #x0000000000000002))
(assert (= temp1288_145 temp1288_144))
(assert (= temp1288_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1288_145)))
(assert (= temp1288_147 #x0000000000000003))
(assert (= temp1288_148 temp1288_147))
(assert (= temp1288_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1288_148)))
(assert (= temp1288_150 #x0000000000000004))
(assert (= temp1288_151 temp1288_150))
(assert (= temp1288_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1288_151)))
(assert (= temp1288_153 #x0000000000000005))
(assert (= temp1288_154 temp1288_153))
(assert (= temp1288_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1288_154)))
(assert (= temp1288_157 var1179826))
(assert (= temp1288_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1288_157)))
(assert (= temp1288_156 temp1288_158))
(assert (= var1191780
   (ite (bvslt temp1288_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1288_159 #x0000000000000000))
(assert (= var1191780 temp1288_159))
(assert (= temp1288_160 #x0000000000000000))
(assert (= var1179826 temp1288_160))
(assert (= temp1288_162 var1179826))
(assert (= temp1288_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1288_162)))
(assert (= temp1288_161 temp1288_163))
(assert (= var1191802 (bvsmod temp1288_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1288_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1288_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1288_165 #x0000000000000001))
(assert (= var1191803 temp1288_165))
(assert (= temp1288_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1288_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1288_167 #x0000000000000001))
(assert (= var1191823 temp1288_167))
(assert (= temp1288_168 #x0000000000000001))
(assert (= var1180714 temp1288_168))
(assert (= temp1288_169 #x0000000000000000))
(assert (= temp1288_170 temp1288_169))
(assert (= temp1288_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1288_170)))
(assert (= temp1288_172 #x0000000000000001))
(assert (= temp1288_173 temp1288_172))
(assert (= temp1288_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1288_173)))
(assert (= temp1288_175 #x0000000000000002))
(assert (= temp1288_176 temp1288_175))
(assert (= temp1288_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1288_176)))
(assert (= temp1288_178 #x0000000000000003))
(assert (= temp1288_179 temp1288_178))
(assert (= temp1288_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1288_179)))
(assert (= temp1288_181 #x0000000000000004))
(assert (= temp1288_182 temp1288_181))
(assert (= temp1288_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1288_182)))
(assert (= temp1288_184 #x0000000000000005))
(assert (= temp1288_185 temp1288_184))
(assert (= temp1288_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1288_185)))
(assert (= temp1288_187 #x0000000000000000))
(assert (= temp1288_188
   (ite (bvslt var1180714 temp1288_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1288_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1288_188)))
(assert (= var1191831 temp1288_189))
(assert (bvslt (ite (bvslt var1180714 temp1288_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1288_190 #x0000000000000001))
(assert (= var1180714 temp1288_190))
(assert (= temp1288_192 var1180714))
(assert (= temp1288_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1288_192)))
(assert (= temp1288_191 temp1288_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1288_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1288_194 #x0000000000000001))
(assert (= var1191836 temp1288_194))
(assert (= temp1288_195 #x0000000000000000))
(assert (= var1179826 temp1288_195))
(assert (= temp1288_197 var1179826))
(assert (= temp1288_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1288_197)))
(assert (= temp1288_196 temp1288_198))
(assert (= temp1288_199 #x0000000000000002))
(assert (= var1586025 temp1288_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1288_200 #x0000000000000001))
(assert (= var1191993 temp1288_200))
(assert (= temp1288_201 #x0000000000000001))
(assert (= var2700303 temp1288_201))
(assert (= temp1288_202 #x0000000000000001))
(assert (= var2962447 temp1288_202))
(assert (= temp1288_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1288_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1288_204 #x0000000000000001))
(assert (= var211058 temp1288_204))
(assert (= temp1288_205 #x0000000000000001))
(assert (= var211188 temp1288_205))
(assert (= var3879401 var211188))
(assert (= temp1288_206 #x0000000000000000))
(assert (= var3866802 temp1288_206))
(assert (= temp1288_207 #x0000000000000000))
(assert (= temp1288_208
   (ite (bvslt var3866802 temp1288_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1288_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1288_208)))
(assert (= var3879420 temp1288_209))
(assert (bvslt (ite (bvslt var3866802 temp1288_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1288_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1288_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1288_211 #x0000000000000001))
(assert (= var3879421 temp1288_211))
(assert (= temp1288_212 #x0000000000000000))
(assert (= var4133117 temp1288_212))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1288_213 #x0000000000000002))
(assert (= var4339331 temp1288_213))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1288_214 #x0000000000000000))
(assert (= var4404892 temp1288_214))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp1288_216 #xffffffffffffffff))
(assert (= temp1288_215 temp1288_216))
(assert (= temp1288_217 #x0000000000000001))
(assert (= var197674 temp1288_217))
(assert (= temp1288_218 #x0000000000000000))
(assert (= temp1288_219
   (ite (bvslt var197674 temp1288_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp1288_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp1288_219)))
(assert (= var211595 temp1288_220))
(assert (bvslt (ite (bvslt var197674 temp1288_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1288_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp1288_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp1288_222 #x0000000000000001))
(assert (= var211596 temp1288_222))
(assert (= temp1288_224 #xffffffffffffffff))
(assert (= temp1288_223 temp1288_224))
(assert (= temp1288_225 #x0000000000000001))
(assert (= var211058 temp1288_225))
(model-add temp1288_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1288_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1288_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1288_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




