(declare-fun temp10864_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10864_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10864_3 () (_ BitVec 64))
(declare-fun temp10864_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10864_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10864_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10864_7 () (_ BitVec 64))
(declare-fun temp10864_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10864_9 () (_ BitVec 64))
(declare-fun temp10864_10 () (_ BitVec 64))
(declare-fun temp10864_11 () (_ BitVec 64))
(declare-fun temp10864_12 () (_ BitVec 64))
(declare-fun temp10864_13 () (_ BitVec 64))
(declare-fun temp10864_14 () (_ BitVec 64))
(declare-fun temp10864_15 () (_ BitVec 64))
(declare-fun temp10864_16 () (_ BitVec 64))
(declare-fun temp10864_17 () (_ BitVec 64))
(declare-fun temp10864_18 () (_ BitVec 64))
(declare-fun temp10864_19 () (_ BitVec 64))
(declare-fun temp10864_20 () (_ BitVec 64))
(declare-fun temp10864_21 () (_ BitVec 64))
(declare-fun temp10864_22 () (_ BitVec 64))
(declare-fun temp10864_23 () (_ BitVec 64))
(declare-fun temp10864_24 () (_ BitVec 64))
(declare-fun temp10864_25 () (_ BitVec 64))
(declare-fun temp10864_26 () (_ BitVec 64))
(declare-fun temp10864_27 () (_ BitVec 64))
(declare-fun temp10864_28 () (_ BitVec 64))
(declare-fun temp10864_29 () (_ BitVec 64))
(declare-fun temp10864_30 () (_ BitVec 64))
(declare-fun temp10864_31 () (_ BitVec 64))
(declare-fun temp10864_32 () (_ BitVec 64))
(declare-fun temp10864_33 () (_ BitVec 64))
(declare-fun temp10864_34 () (_ BitVec 64))
(declare-fun temp10864_35 () (_ BitVec 64))
(declare-fun temp10864_36 () (_ BitVec 64))
(declare-fun temp10864_37 () (_ BitVec 64))
(declare-fun temp10864_38 () (_ BitVec 64))
(declare-fun temp10864_39 () (_ BitVec 64))
(declare-fun temp10864_40 () (_ BitVec 64))
(declare-fun temp10864_41 () (_ BitVec 64))
(declare-fun temp10864_42 () (_ BitVec 64))
(declare-fun temp10864_43 () (_ BitVec 64))
(declare-fun temp10864_44 () (_ BitVec 64))
(declare-fun temp10864_45 () (_ BitVec 64))
(declare-fun temp10864_46 () (_ BitVec 64))
(declare-fun temp10864_47 () (_ BitVec 64))
(declare-fun temp10864_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10864_49 () (_ BitVec 64))
(declare-fun temp10864_50 () (_ BitVec 64))
(declare-fun temp10864_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10864_52 () (_ BitVec 64))
(declare-fun temp10864_53 () (_ BitVec 64))
(declare-fun temp10864_54 () (_ BitVec 64))
(declare-fun temp10864_55 () (_ BitVec 64))
(declare-fun temp10864_56 () (_ BitVec 64))
(declare-fun temp10864_57 () (_ BitVec 64))
(declare-fun temp10864_58 () (_ BitVec 64))
(declare-fun temp10864_59 () (_ BitVec 64))
(declare-fun temp10864_60 () (_ BitVec 64))
(declare-fun temp10864_61 () (_ BitVec 64))
(declare-fun temp10864_62 () (_ BitVec 64))
(declare-fun temp10864_63 () (_ BitVec 64))
(declare-fun temp10864_64 () (_ BitVec 64))
(declare-fun temp10864_65 () (_ BitVec 64))
(declare-fun temp10864_66 () (_ BitVec 64))
(declare-fun temp10864_67 () (_ BitVec 64))
(declare-fun temp10864_68 () (_ BitVec 64))
(declare-fun temp10864_69 () (_ BitVec 64))
(declare-fun temp10864_70 () (_ BitVec 64))
(declare-fun temp10864_71 () (_ BitVec 64))
(declare-fun temp10864_72 () (_ BitVec 64))
(declare-fun temp10864_73 () (_ BitVec 64))
(declare-fun temp10864_74 () (_ BitVec 64))
(declare-fun temp10864_75 () (_ BitVec 64))
(declare-fun temp10864_76 () (_ BitVec 64))
(declare-fun temp10864_77 () (_ BitVec 64))
(declare-fun temp10864_78 () (_ BitVec 64))
(declare-fun temp10864_79 () (_ BitVec 64))
(declare-fun temp10864_80 () (_ BitVec 64))
(declare-fun temp10864_81 () (_ BitVec 64))
(declare-fun temp10864_82 () (_ BitVec 64))
(declare-fun temp10864_83 () (_ BitVec 64))
(declare-fun temp10864_84 () (_ BitVec 64))
(declare-fun temp10864_85 () (_ BitVec 64))
(declare-fun temp10864_86 () (_ BitVec 64))
(declare-fun temp10864_87 () (_ BitVec 64))
(declare-fun temp10864_88 () (_ BitVec 64))
(declare-fun temp10864_89 () (_ BitVec 64))
(declare-fun temp10864_90 () (_ BitVec 64))
(declare-fun temp10864_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10864_92 () (_ BitVec 64))
(declare-fun temp10864_93 () (_ BitVec 64))
(declare-fun temp10864_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10864_95 () (_ BitVec 64))
(declare-fun temp10864_96 () (_ BitVec 64))
(declare-fun temp10864_97 () (_ BitVec 64))
(declare-fun temp10864_98 () (_ BitVec 64))
(declare-fun temp10864_99 () (_ BitVec 64))
(declare-fun temp10864_100 () (_ BitVec 64))
(declare-fun temp10864_101 () (_ BitVec 64))
(declare-fun temp10864_102 () (_ BitVec 64))
(declare-fun temp10864_103 () (_ BitVec 64))
(declare-fun temp10864_104 () (_ BitVec 64))
(declare-fun temp10864_105 () (_ BitVec 64))
(declare-fun temp10864_106 () (_ BitVec 64))
(declare-fun temp10864_107 () (_ BitVec 64))
(declare-fun temp10864_108 () (_ BitVec 64))
(declare-fun temp10864_109 () (_ BitVec 64))
(declare-fun temp10864_110 () (_ BitVec 64))
(declare-fun temp10864_111 () (_ BitVec 64))
(declare-fun temp10864_112 () (_ BitVec 64))
(declare-fun temp10864_113 () (_ BitVec 64))
(declare-fun temp10864_114 () (_ BitVec 64))
(declare-fun temp10864_115 () (_ BitVec 64))
(declare-fun temp10864_116 () (_ BitVec 64))
(declare-fun temp10864_117 () (_ BitVec 64))
(declare-fun temp10864_118 () (_ BitVec 64))
(declare-fun temp10864_119 () (_ BitVec 64))
(declare-fun temp10864_120 () (_ BitVec 64))
(declare-fun temp10864_121 () (_ BitVec 64))
(declare-fun temp10864_122 () (_ BitVec 64))
(declare-fun temp10864_123 () (_ BitVec 64))
(declare-fun temp10864_124 () (_ BitVec 64))
(declare-fun temp10864_125 () (_ BitVec 64))
(declare-fun temp10864_126 () (_ BitVec 64))
(declare-fun temp10864_127 () (_ BitVec 64))
(declare-fun temp10864_128 () (_ BitVec 64))
(declare-fun temp10864_129 () (_ BitVec 64))
(declare-fun temp10864_130 () (_ BitVec 64))
(declare-fun temp10864_131 () (_ BitVec 64))
(declare-fun temp10864_132 () (_ BitVec 64))
(declare-fun temp10864_133 () (_ BitVec 64))
(declare-fun temp10864_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10864_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10864_136 () (_ BitVec 64))
(declare-fun temp10864_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10864_138 () (_ BitVec 64))
(declare-fun temp10864_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10864_140 () (_ BitVec 64))
(declare-fun temp10864_141 () (_ BitVec 64))
(declare-fun temp10864_142 () (_ BitVec 64))
(declare-fun temp10864_143 () (_ BitVec 64))
(declare-fun temp10864_144 () (_ BitVec 64))
(declare-fun temp10864_145 () (_ BitVec 64))
(declare-fun temp10864_146 () (_ BitVec 64))
(declare-fun temp10864_147 () (_ BitVec 64))
(declare-fun temp10864_148 () (_ BitVec 64))
(declare-fun temp10864_149 () (_ BitVec 64))
(declare-fun temp10864_150 () (_ BitVec 64))
(declare-fun temp10864_151 () (_ BitVec 64))
(declare-fun temp10864_152 () (_ BitVec 64))
(declare-fun temp10864_153 () (_ BitVec 64))
(declare-fun temp10864_154 () (_ BitVec 64))
(declare-fun temp10864_155 () (_ BitVec 64))
(declare-fun temp10864_157 () (_ BitVec 64))
(declare-fun temp10864_158 () (_ BitVec 64))
(declare-fun temp10864_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10864_159 () (_ BitVec 64))
(declare-fun temp10864_160 () (_ BitVec 64))
(declare-fun temp10864_162 () (_ BitVec 64))
(declare-fun temp10864_163 () (_ BitVec 64))
(declare-fun temp10864_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10864_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10864_165 () (_ BitVec 64))
(declare-fun temp10864_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10864_167 () (_ BitVec 64))
(declare-fun temp10864_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10864_169 () (_ BitVec 64))
(declare-fun temp10864_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10864_171 () (_ BitVec 64))
(declare-fun temp10864_172 () (_ BitVec 64))
(declare-fun temp10864_173 () (_ BitVec 64))
(declare-fun temp10864_174 () (_ BitVec 64))
(declare-fun temp10864_175 () (_ BitVec 64))
(declare-fun temp10864_176 () (_ BitVec 64))
(declare-fun temp10864_177 () (_ BitVec 64))
(declare-fun temp10864_178 () (_ BitVec 64))
(declare-fun temp10864_179 () (_ BitVec 64))
(declare-fun temp10864_180 () (_ BitVec 64))
(declare-fun temp10864_181 () (_ BitVec 64))
(declare-fun temp10864_182 () (_ BitVec 64))
(declare-fun temp10864_183 () (_ BitVec 64))
(declare-fun temp10864_184 () (_ BitVec 64))
(declare-fun temp10864_185 () (_ BitVec 64))
(declare-fun temp10864_186 () (_ BitVec 64))
(declare-fun temp10864_187 () (_ BitVec 64))
(declare-fun temp10864_188 () (_ BitVec 64))
(declare-fun temp10864_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10864_190 () (_ BitVec 64))
(declare-fun temp10864_192 () (_ BitVec 64))
(declare-fun temp10864_193 () (_ BitVec 64))
(declare-fun temp10864_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10864_194 () (_ BitVec 64))
(declare-fun temp10864_195 () (_ BitVec 64))
(declare-fun temp10864_197 () (_ BitVec 64))
(declare-fun temp10864_198 () (_ BitVec 64))
(declare-fun temp10864_196 () (_ BitVec 64))
(declare-fun temp10864_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10864_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10864_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10864_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10864_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10864_204 () (_ BitVec 64))
(declare-fun temp10864_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10864_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10864_207 () (_ BitVec 64))
(declare-fun temp10864_208 () (_ BitVec 64))
(declare-fun temp10864_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10864_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10864_211 () (_ BitVec 64))
(declare-fun temp10864_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10864_213 () (_ BitVec 64))
(declare-fun temp10864_214 () (_ BitVec 64))
(declare-fun temp10864_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10864_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10864_217 () (_ BitVec 64))
(declare-fun temp10864_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10864_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10864_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10864_221 () (_ BitVec 64))
(assert (= temp10864_1 #x0000000000000001))
(assert (= var77203 temp10864_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10864_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10864_2)))
(assert (= temp10864_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10864_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10864_4 #x0000000000000000))
(assert (= var210941 temp10864_4))
(assert (= temp10864_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10864_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10864_6 #x0000000000000000))
(assert (= var210986 temp10864_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10864_7 #x0000000000000000))
(assert (= temp10864_8 temp10864_7))
(assert (= temp10864_9 (select ARGNAME_padding_NAMEEND_VAL temp10864_8)))
(assert (= temp10864_10 #x0000000000000001))
(assert (= temp10864_11 temp10864_10))
(assert (= temp10864_12 (select ARGNAME_padding_NAMEEND_VAL temp10864_11)))
(assert (= temp10864_13 #x0000000000000002))
(assert (= temp10864_14 temp10864_13))
(assert (= temp10864_15 (select ARGNAME_padding_NAMEEND_VAL temp10864_14)))
(assert (= temp10864_16 #x0000000000000003))
(assert (= temp10864_17 temp10864_16))
(assert (= temp10864_18 (select ARGNAME_padding_NAMEEND_VAL temp10864_17)))
(assert (= temp10864_19 #x0000000000000004))
(assert (= temp10864_20 temp10864_19))
(assert (= temp10864_21 (select ARGNAME_padding_NAMEEND_VAL temp10864_20)))
(assert (= temp10864_22 #x0000000000000005))
(assert (= temp10864_23 temp10864_22))
(assert (= temp10864_24 (select ARGNAME_padding_NAMEEND_VAL temp10864_23)))
(assert (= temp10864_25 #x0000000000000000))
(assert (= temp10864_26 #x0000000000000000))
(assert (= temp10864_27 temp10864_26))
(assert (= temp10864_28 (select ARGNAME_padding_NAMEEND_VAL temp10864_27)))
(assert (= temp10864_29 #x0000000000000000))
(assert (= temp10864_30 #x0000000000000001))
(assert (= temp10864_31 temp10864_30))
(assert (= temp10864_32 (select ARGNAME_padding_NAMEEND_VAL temp10864_31)))
(assert (= temp10864_33 #x0000000000000000))
(assert (= temp10864_34 #x0000000000000002))
(assert (= temp10864_35 temp10864_34))
(assert (= temp10864_36 (select ARGNAME_padding_NAMEEND_VAL temp10864_35)))
(assert (= temp10864_37 #x0000000000000000))
(assert (= temp10864_38 #x0000000000000003))
(assert (= temp10864_39 temp10864_38))
(assert (= temp10864_40 (select ARGNAME_padding_NAMEEND_VAL temp10864_39)))
(assert (= temp10864_41 #x0000000000000000))
(assert (= temp10864_42 #x0000000000000004))
(assert (= temp10864_43 temp10864_42))
(assert (= temp10864_44 (select ARGNAME_padding_NAMEEND_VAL temp10864_43)))
(assert (= temp10864_45 #x0000000000000000))
(assert (= temp10864_46 #x0000000000000005))
(assert (= temp10864_47 temp10864_46))
(assert (= temp10864_48 (select ARGNAME_padding_NAMEEND_VAL temp10864_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10864_28 temp10864_25)
             (bvslt temp10864_32 temp10864_29)
             (bvslt temp10864_36 temp10864_33)
             (bvslt temp10864_40 temp10864_37)
             (bvslt temp10864_44 temp10864_41)
             (bvslt temp10864_48 temp10864_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10864_49 #x0000000000000000))
(assert (= var1191714 temp10864_49))
(assert (= temp10864_50 #x0000000000000000))
(assert (= temp10864_51 temp10864_50))
(assert (= temp10864_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10864_51)))
(assert (= temp10864_53 #x0000000000000001))
(assert (= temp10864_54 temp10864_53))
(assert (= temp10864_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10864_54)))
(assert (= temp10864_56 #x0000000000000002))
(assert (= temp10864_57 temp10864_56))
(assert (= temp10864_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10864_57)))
(assert (= temp10864_59 #x0000000000000003))
(assert (= temp10864_60 temp10864_59))
(assert (= temp10864_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10864_60)))
(assert (= temp10864_62 #x0000000000000004))
(assert (= temp10864_63 temp10864_62))
(assert (= temp10864_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10864_63)))
(assert (= temp10864_65 #x0000000000000005))
(assert (= temp10864_66 temp10864_65))
(assert (= temp10864_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10864_66)))
(assert (= temp10864_68 #x0000000000000000))
(assert (= temp10864_69 #x0000000000000000))
(assert (= temp10864_70 temp10864_69))
(assert (= temp10864_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10864_70)))
(assert (= temp10864_72 #x0000000000000000))
(assert (= temp10864_73 #x0000000000000001))
(assert (= temp10864_74 temp10864_73))
(assert (= temp10864_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10864_74)))
(assert (= temp10864_76 #x0000000000000000))
(assert (= temp10864_77 #x0000000000000002))
(assert (= temp10864_78 temp10864_77))
(assert (= temp10864_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10864_78)))
(assert (= temp10864_80 #x0000000000000000))
(assert (= temp10864_81 #x0000000000000003))
(assert (= temp10864_82 temp10864_81))
(assert (= temp10864_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10864_82)))
(assert (= temp10864_84 #x0000000000000000))
(assert (= temp10864_85 #x0000000000000004))
(assert (= temp10864_86 temp10864_85))
(assert (= temp10864_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10864_86)))
(assert (= temp10864_88 #x0000000000000000))
(assert (= temp10864_89 #x0000000000000005))
(assert (= temp10864_90 temp10864_89))
(assert (= temp10864_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10864_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10864_71 temp10864_68)
             (bvslt temp10864_75 temp10864_72)
             (bvslt temp10864_79 temp10864_76)
             (bvslt temp10864_83 temp10864_80)
             (bvslt temp10864_87 temp10864_84)
             (bvslt temp10864_91 temp10864_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10864_92 #x0000000000000000))
(assert (= var1191725 temp10864_92))
(assert (= temp10864_93 #x0000000000000000))
(assert (= temp10864_94 temp10864_93))
(assert (= temp10864_95 (select ARGNAME_stride_NAMEEND_VAL temp10864_94)))
(assert (= temp10864_96 #x0000000000000001))
(assert (= temp10864_97 temp10864_96))
(assert (= temp10864_98 (select ARGNAME_stride_NAMEEND_VAL temp10864_97)))
(assert (= temp10864_99 #x0000000000000002))
(assert (= temp10864_100 temp10864_99))
(assert (= temp10864_101 (select ARGNAME_stride_NAMEEND_VAL temp10864_100)))
(assert (= temp10864_102 #x0000000000000003))
(assert (= temp10864_103 temp10864_102))
(assert (= temp10864_104 (select ARGNAME_stride_NAMEEND_VAL temp10864_103)))
(assert (= temp10864_105 #x0000000000000004))
(assert (= temp10864_106 temp10864_105))
(assert (= temp10864_107 (select ARGNAME_stride_NAMEEND_VAL temp10864_106)))
(assert (= temp10864_108 #x0000000000000005))
(assert (= temp10864_109 temp10864_108))
(assert (= temp10864_110 (select ARGNAME_stride_NAMEEND_VAL temp10864_109)))
(assert (= temp10864_111 #x0000000000000000))
(assert (= temp10864_112 #x0000000000000000))
(assert (= temp10864_113 temp10864_112))
(assert (= temp10864_114 (select ARGNAME_stride_NAMEEND_VAL temp10864_113)))
(assert (= temp10864_115 #x0000000000000000))
(assert (= temp10864_116 #x0000000000000001))
(assert (= temp10864_117 temp10864_116))
(assert (= temp10864_118 (select ARGNAME_stride_NAMEEND_VAL temp10864_117)))
(assert (= temp10864_119 #x0000000000000000))
(assert (= temp10864_120 #x0000000000000002))
(assert (= temp10864_121 temp10864_120))
(assert (= temp10864_122 (select ARGNAME_stride_NAMEEND_VAL temp10864_121)))
(assert (= temp10864_123 #x0000000000000000))
(assert (= temp10864_124 #x0000000000000003))
(assert (= temp10864_125 temp10864_124))
(assert (= temp10864_126 (select ARGNAME_stride_NAMEEND_VAL temp10864_125)))
(assert (= temp10864_127 #x0000000000000000))
(assert (= temp10864_128 #x0000000000000004))
(assert (= temp10864_129 temp10864_128))
(assert (= temp10864_130 (select ARGNAME_stride_NAMEEND_VAL temp10864_129)))
(assert (= temp10864_131 #x0000000000000000))
(assert (= temp10864_132 #x0000000000000005))
(assert (= temp10864_133 temp10864_132))
(assert (= temp10864_134 (select ARGNAME_stride_NAMEEND_VAL temp10864_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10864_114 temp10864_111)
             (bvsle temp10864_118 temp10864_115)
             (bvsle temp10864_122 temp10864_119)
             (bvsle temp10864_126 temp10864_123)
             (bvsle temp10864_130 temp10864_127)
             (bvsle temp10864_134 temp10864_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10864_135 #x0000000000000000))
(assert (= var1191735 temp10864_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10864_136 #x0000000000000001))
(assert (= var1191747 temp10864_136))
(assert (= temp10864_137 #x0000000000000000))
(assert (= var1179826 temp10864_137))
(assert (= temp10864_138 #x0000000000000000))
(assert (= temp10864_139 temp10864_138))
(assert (= temp10864_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10864_139)))
(assert (= temp10864_141 #x0000000000000001))
(assert (= temp10864_142 temp10864_141))
(assert (= temp10864_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10864_142)))
(assert (= temp10864_144 #x0000000000000002))
(assert (= temp10864_145 temp10864_144))
(assert (= temp10864_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10864_145)))
(assert (= temp10864_147 #x0000000000000003))
(assert (= temp10864_148 temp10864_147))
(assert (= temp10864_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10864_148)))
(assert (= temp10864_150 #x0000000000000004))
(assert (= temp10864_151 temp10864_150))
(assert (= temp10864_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10864_151)))
(assert (= temp10864_153 #x0000000000000005))
(assert (= temp10864_154 temp10864_153))
(assert (= temp10864_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10864_154)))
(assert (= temp10864_157 var1179826))
(assert (= temp10864_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10864_157)))
(assert (= temp10864_156 temp10864_158))
(assert (= var1191780
   (ite (bvslt temp10864_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10864_159 #x0000000000000000))
(assert (= var1191780 temp10864_159))
(assert (= temp10864_160 #x0000000000000000))
(assert (= var1179826 temp10864_160))
(assert (= temp10864_162 var1179826))
(assert (= temp10864_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10864_162)))
(assert (= temp10864_161 temp10864_163))
(assert (= var1191802 (bvsmod temp10864_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10864_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10864_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10864_165 #x0000000000000001))
(assert (= var1191803 temp10864_165))
(assert (= temp10864_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10864_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10864_167 #x0000000000000001))
(assert (= var1191823 temp10864_167))
(assert (= temp10864_168 #x0000000000000001))
(assert (= var1180714 temp10864_168))
(assert (= temp10864_169 #x0000000000000000))
(assert (= temp10864_170 temp10864_169))
(assert (= temp10864_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10864_170)))
(assert (= temp10864_172 #x0000000000000001))
(assert (= temp10864_173 temp10864_172))
(assert (= temp10864_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10864_173)))
(assert (= temp10864_175 #x0000000000000002))
(assert (= temp10864_176 temp10864_175))
(assert (= temp10864_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10864_176)))
(assert (= temp10864_178 #x0000000000000003))
(assert (= temp10864_179 temp10864_178))
(assert (= temp10864_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10864_179)))
(assert (= temp10864_181 #x0000000000000004))
(assert (= temp10864_182 temp10864_181))
(assert (= temp10864_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10864_182)))
(assert (= temp10864_184 #x0000000000000005))
(assert (= temp10864_185 temp10864_184))
(assert (= temp10864_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10864_185)))
(assert (= temp10864_187 #x0000000000000000))
(assert (= temp10864_188
   (ite (bvslt var1180714 temp10864_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10864_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10864_188)))
(assert (= var1191831 temp10864_189))
(assert (bvslt (ite (bvslt var1180714 temp10864_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10864_190 #x0000000000000001))
(assert (= var1180714 temp10864_190))
(assert (= temp10864_192 var1180714))
(assert (= temp10864_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10864_192)))
(assert (= temp10864_191 temp10864_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10864_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10864_194 #x0000000000000001))
(assert (= var1191836 temp10864_194))
(assert (= temp10864_195 #x0000000000000000))
(assert (= var1179826 temp10864_195))
(assert (= temp10864_197 var1179826))
(assert (= temp10864_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10864_197)))
(assert (= temp10864_196 temp10864_198))
(assert (= temp10864_199 #x0000000000000002))
(assert (= var1586025 temp10864_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10864_200 #x0000000000000001))
(assert (= var1191993 temp10864_200))
(assert (= temp10864_201 #x0000000000000001))
(assert (= var2700303 temp10864_201))
(assert (= temp10864_202 #x0000000000000001))
(assert (= var2962447 temp10864_202))
(assert (= temp10864_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10864_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10864_204 #x0000000000000001))
(assert (= var211058 temp10864_204))
(assert (= temp10864_205 #x0000000000000001))
(assert (= var211188 temp10864_205))
(assert (= var3879401 var211188))
(assert (= temp10864_206 #x0000000000000000))
(assert (= var3866802 temp10864_206))
(assert (= temp10864_207 #x0000000000000000))
(assert (= temp10864_208
   (ite (bvslt var3866802 temp10864_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10864_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10864_208)))
(assert (= var3879420 temp10864_209))
(assert (bvslt (ite (bvslt var3866802 temp10864_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10864_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10864_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10864_211 #x0000000000000000))
(assert (= var3879421 temp10864_211))
(assert (= temp10864_212 #x0000000000000001))
(assert (= var3867690 temp10864_212))
(assert (= temp10864_213 #x0000000000000000))
(assert (= temp10864_214
   (ite (bvslt var3867690 temp10864_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10864_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10864_214)))
(assert (= var3879423 temp10864_215))
(assert (bvslt (ite (bvslt var3867690 temp10864_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10864_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10864_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10864_217 #x0000000000000001))
(assert (= var3879424 temp10864_217))
(assert (= temp10864_218 #x0000000000000000))
(assert (= var4133117 temp10864_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10864_219 #x0000000000000002))
(assert (= var4339331 temp10864_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10864_220 #x0000000000000000))
(assert (= var4404892 temp10864_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10864_221 #x0000000000000001))
(assert (= var211058 temp10864_221))
(model-add temp10864_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10864_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10864_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10864_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




