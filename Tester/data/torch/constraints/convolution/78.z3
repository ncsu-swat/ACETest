(declare-fun temp104_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp104_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp104_3 () (_ BitVec 64))
(declare-fun temp104_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp104_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp104_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp104_7 () (_ BitVec 64))
(declare-fun temp104_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp104_9 () (_ BitVec 64))
(declare-fun temp104_10 () (_ BitVec 64))
(declare-fun temp104_11 () (_ BitVec 64))
(declare-fun temp104_12 () (_ BitVec 64))
(declare-fun temp104_13 () (_ BitVec 64))
(declare-fun temp104_14 () (_ BitVec 64))
(declare-fun temp104_15 () (_ BitVec 64))
(declare-fun temp104_16 () (_ BitVec 64))
(declare-fun temp104_17 () (_ BitVec 64))
(declare-fun temp104_18 () (_ BitVec 64))
(declare-fun temp104_19 () (_ BitVec 64))
(declare-fun temp104_20 () (_ BitVec 64))
(declare-fun temp104_21 () (_ BitVec 64))
(declare-fun temp104_22 () (_ BitVec 64))
(declare-fun temp104_23 () (_ BitVec 64))
(declare-fun temp104_24 () (_ BitVec 64))
(declare-fun temp104_25 () (_ BitVec 64))
(declare-fun temp104_26 () (_ BitVec 64))
(declare-fun temp104_27 () (_ BitVec 64))
(declare-fun temp104_28 () (_ BitVec 64))
(declare-fun temp104_29 () (_ BitVec 64))
(declare-fun temp104_30 () (_ BitVec 64))
(declare-fun temp104_31 () (_ BitVec 64))
(declare-fun temp104_32 () (_ BitVec 64))
(declare-fun temp104_33 () (_ BitVec 64))
(declare-fun temp104_34 () (_ BitVec 64))
(declare-fun temp104_35 () (_ BitVec 64))
(declare-fun temp104_36 () (_ BitVec 64))
(declare-fun temp104_37 () (_ BitVec 64))
(declare-fun temp104_38 () (_ BitVec 64))
(declare-fun temp104_39 () (_ BitVec 64))
(declare-fun temp104_40 () (_ BitVec 64))
(declare-fun temp104_41 () (_ BitVec 64))
(declare-fun temp104_42 () (_ BitVec 64))
(declare-fun temp104_43 () (_ BitVec 64))
(declare-fun temp104_44 () (_ BitVec 64))
(declare-fun temp104_45 () (_ BitVec 64))
(declare-fun temp104_46 () (_ BitVec 64))
(declare-fun temp104_47 () (_ BitVec 64))
(declare-fun temp104_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp104_49 () (_ BitVec 64))
(declare-fun temp104_50 () (_ BitVec 64))
(declare-fun temp104_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp104_52 () (_ BitVec 64))
(declare-fun temp104_53 () (_ BitVec 64))
(declare-fun temp104_54 () (_ BitVec 64))
(declare-fun temp104_55 () (_ BitVec 64))
(declare-fun temp104_56 () (_ BitVec 64))
(declare-fun temp104_57 () (_ BitVec 64))
(declare-fun temp104_58 () (_ BitVec 64))
(declare-fun temp104_59 () (_ BitVec 64))
(declare-fun temp104_60 () (_ BitVec 64))
(declare-fun temp104_61 () (_ BitVec 64))
(declare-fun temp104_62 () (_ BitVec 64))
(declare-fun temp104_63 () (_ BitVec 64))
(declare-fun temp104_64 () (_ BitVec 64))
(declare-fun temp104_65 () (_ BitVec 64))
(declare-fun temp104_66 () (_ BitVec 64))
(declare-fun temp104_67 () (_ BitVec 64))
(declare-fun temp104_68 () (_ BitVec 64))
(declare-fun temp104_69 () (_ BitVec 64))
(declare-fun temp104_70 () (_ BitVec 64))
(declare-fun temp104_71 () (_ BitVec 64))
(declare-fun temp104_72 () (_ BitVec 64))
(declare-fun temp104_73 () (_ BitVec 64))
(declare-fun temp104_74 () (_ BitVec 64))
(declare-fun temp104_75 () (_ BitVec 64))
(declare-fun temp104_76 () (_ BitVec 64))
(declare-fun temp104_77 () (_ BitVec 64))
(declare-fun temp104_78 () (_ BitVec 64))
(declare-fun temp104_79 () (_ BitVec 64))
(declare-fun temp104_80 () (_ BitVec 64))
(declare-fun temp104_81 () (_ BitVec 64))
(declare-fun temp104_82 () (_ BitVec 64))
(declare-fun temp104_83 () (_ BitVec 64))
(declare-fun temp104_84 () (_ BitVec 64))
(declare-fun temp104_85 () (_ BitVec 64))
(declare-fun temp104_86 () (_ BitVec 64))
(declare-fun temp104_87 () (_ BitVec 64))
(declare-fun temp104_88 () (_ BitVec 64))
(declare-fun temp104_89 () (_ BitVec 64))
(declare-fun temp104_90 () (_ BitVec 64))
(declare-fun temp104_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp104_92 () (_ BitVec 64))
(declare-fun temp104_93 () (_ BitVec 64))
(declare-fun temp104_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp104_95 () (_ BitVec 64))
(declare-fun temp104_96 () (_ BitVec 64))
(declare-fun temp104_97 () (_ BitVec 64))
(declare-fun temp104_98 () (_ BitVec 64))
(declare-fun temp104_99 () (_ BitVec 64))
(declare-fun temp104_100 () (_ BitVec 64))
(declare-fun temp104_101 () (_ BitVec 64))
(declare-fun temp104_102 () (_ BitVec 64))
(declare-fun temp104_103 () (_ BitVec 64))
(declare-fun temp104_104 () (_ BitVec 64))
(declare-fun temp104_105 () (_ BitVec 64))
(declare-fun temp104_106 () (_ BitVec 64))
(declare-fun temp104_107 () (_ BitVec 64))
(declare-fun temp104_108 () (_ BitVec 64))
(declare-fun temp104_109 () (_ BitVec 64))
(declare-fun temp104_110 () (_ BitVec 64))
(declare-fun temp104_111 () (_ BitVec 64))
(declare-fun temp104_112 () (_ BitVec 64))
(declare-fun temp104_113 () (_ BitVec 64))
(declare-fun temp104_114 () (_ BitVec 64))
(declare-fun temp104_115 () (_ BitVec 64))
(declare-fun temp104_116 () (_ BitVec 64))
(declare-fun temp104_117 () (_ BitVec 64))
(declare-fun temp104_118 () (_ BitVec 64))
(declare-fun temp104_119 () (_ BitVec 64))
(declare-fun temp104_120 () (_ BitVec 64))
(declare-fun temp104_121 () (_ BitVec 64))
(declare-fun temp104_122 () (_ BitVec 64))
(declare-fun temp104_123 () (_ BitVec 64))
(declare-fun temp104_124 () (_ BitVec 64))
(declare-fun temp104_125 () (_ BitVec 64))
(declare-fun temp104_126 () (_ BitVec 64))
(declare-fun temp104_127 () (_ BitVec 64))
(declare-fun temp104_128 () (_ BitVec 64))
(declare-fun temp104_129 () (_ BitVec 64))
(declare-fun temp104_130 () (_ BitVec 64))
(declare-fun temp104_131 () (_ BitVec 64))
(declare-fun temp104_132 () (_ BitVec 64))
(declare-fun temp104_133 () (_ BitVec 64))
(declare-fun temp104_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp104_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp104_136 () (_ BitVec 64))
(declare-fun temp104_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp104_138 () (_ BitVec 64))
(declare-fun temp104_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp104_140 () (_ BitVec 64))
(declare-fun temp104_141 () (_ BitVec 64))
(declare-fun temp104_142 () (_ BitVec 64))
(declare-fun temp104_143 () (_ BitVec 64))
(declare-fun temp104_144 () (_ BitVec 64))
(declare-fun temp104_145 () (_ BitVec 64))
(declare-fun temp104_146 () (_ BitVec 64))
(declare-fun temp104_147 () (_ BitVec 64))
(declare-fun temp104_148 () (_ BitVec 64))
(declare-fun temp104_149 () (_ BitVec 64))
(declare-fun temp104_150 () (_ BitVec 64))
(declare-fun temp104_151 () (_ BitVec 64))
(declare-fun temp104_152 () (_ BitVec 64))
(declare-fun temp104_153 () (_ BitVec 64))
(declare-fun temp104_154 () (_ BitVec 64))
(declare-fun temp104_155 () (_ BitVec 64))
(declare-fun temp104_157 () (_ BitVec 64))
(declare-fun temp104_158 () (_ BitVec 64))
(declare-fun temp104_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp104_159 () (_ BitVec 64))
(declare-fun temp104_160 () (_ BitVec 64))
(declare-fun temp104_162 () (_ BitVec 64))
(declare-fun temp104_163 () (_ BitVec 64))
(declare-fun temp104_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp104_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp104_165 () (_ BitVec 64))
(declare-fun temp104_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp104_167 () (_ BitVec 64))
(declare-fun temp104_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp104_169 () (_ BitVec 64))
(declare-fun temp104_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp104_171 () (_ BitVec 64))
(declare-fun temp104_172 () (_ BitVec 64))
(declare-fun temp104_173 () (_ BitVec 64))
(declare-fun temp104_174 () (_ BitVec 64))
(declare-fun temp104_175 () (_ BitVec 64))
(declare-fun temp104_176 () (_ BitVec 64))
(declare-fun temp104_177 () (_ BitVec 64))
(declare-fun temp104_178 () (_ BitVec 64))
(declare-fun temp104_179 () (_ BitVec 64))
(declare-fun temp104_180 () (_ BitVec 64))
(declare-fun temp104_181 () (_ BitVec 64))
(declare-fun temp104_182 () (_ BitVec 64))
(declare-fun temp104_183 () (_ BitVec 64))
(declare-fun temp104_184 () (_ BitVec 64))
(declare-fun temp104_185 () (_ BitVec 64))
(declare-fun temp104_186 () (_ BitVec 64))
(declare-fun temp104_187 () (_ BitVec 64))
(declare-fun temp104_188 () (_ BitVec 64))
(declare-fun temp104_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp104_190 () (_ BitVec 64))
(declare-fun temp104_192 () (_ BitVec 64))
(declare-fun temp104_193 () (_ BitVec 64))
(declare-fun temp104_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp104_194 () (_ BitVec 64))
(declare-fun temp104_195 () (_ BitVec 64))
(declare-fun temp104_197 () (_ BitVec 64))
(declare-fun temp104_198 () (_ BitVec 64))
(declare-fun temp104_196 () (_ BitVec 64))
(declare-fun temp104_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp104_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp104_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp104_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp104_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp104_204 () (_ BitVec 64))
(declare-fun temp104_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp104_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp104_207 () (_ BitVec 64))
(declare-fun temp104_208 () (_ BitVec 64))
(declare-fun temp104_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp104_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp104_211 () (_ BitVec 64))
(declare-fun temp104_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp104_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp104_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp104_216 () (_ BitVec 64))
(declare-fun temp104_215 () (_ BitVec 64))
(declare-fun temp104_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp104_218 () (_ BitVec 64))
(declare-fun temp104_219 () (_ BitVec 64))
(declare-fun temp104_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp104_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp104_222 () (_ BitVec 64))
(declare-fun temp104_224 () (_ BitVec 64))
(declare-fun temp104_223 () (_ BitVec 64))
(declare-fun temp104_225 () (_ BitVec 64))
(assert (= temp104_1 #x0000000000000001))
(assert (= var77203 temp104_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp104_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp104_2)))
(assert (= temp104_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp104_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp104_4 #x0000000000000000))
(assert (= var210941 temp104_4))
(assert (= temp104_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp104_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp104_6 #x0000000000000000))
(assert (= var210986 temp104_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp104_7 #x0000000000000000))
(assert (= temp104_8 temp104_7))
(assert (= temp104_9 (select ARGNAME_padding_NAMEEND_VAL temp104_8)))
(assert (= temp104_10 #x0000000000000001))
(assert (= temp104_11 temp104_10))
(assert (= temp104_12 (select ARGNAME_padding_NAMEEND_VAL temp104_11)))
(assert (= temp104_13 #x0000000000000002))
(assert (= temp104_14 temp104_13))
(assert (= temp104_15 (select ARGNAME_padding_NAMEEND_VAL temp104_14)))
(assert (= temp104_16 #x0000000000000003))
(assert (= temp104_17 temp104_16))
(assert (= temp104_18 (select ARGNAME_padding_NAMEEND_VAL temp104_17)))
(assert (= temp104_19 #x0000000000000004))
(assert (= temp104_20 temp104_19))
(assert (= temp104_21 (select ARGNAME_padding_NAMEEND_VAL temp104_20)))
(assert (= temp104_22 #x0000000000000005))
(assert (= temp104_23 temp104_22))
(assert (= temp104_24 (select ARGNAME_padding_NAMEEND_VAL temp104_23)))
(assert (= temp104_25 #x0000000000000000))
(assert (= temp104_26 #x0000000000000000))
(assert (= temp104_27 temp104_26))
(assert (= temp104_28 (select ARGNAME_padding_NAMEEND_VAL temp104_27)))
(assert (= temp104_29 #x0000000000000000))
(assert (= temp104_30 #x0000000000000001))
(assert (= temp104_31 temp104_30))
(assert (= temp104_32 (select ARGNAME_padding_NAMEEND_VAL temp104_31)))
(assert (= temp104_33 #x0000000000000000))
(assert (= temp104_34 #x0000000000000002))
(assert (= temp104_35 temp104_34))
(assert (= temp104_36 (select ARGNAME_padding_NAMEEND_VAL temp104_35)))
(assert (= temp104_37 #x0000000000000000))
(assert (= temp104_38 #x0000000000000003))
(assert (= temp104_39 temp104_38))
(assert (= temp104_40 (select ARGNAME_padding_NAMEEND_VAL temp104_39)))
(assert (= temp104_41 #x0000000000000000))
(assert (= temp104_42 #x0000000000000004))
(assert (= temp104_43 temp104_42))
(assert (= temp104_44 (select ARGNAME_padding_NAMEEND_VAL temp104_43)))
(assert (= temp104_45 #x0000000000000000))
(assert (= temp104_46 #x0000000000000005))
(assert (= temp104_47 temp104_46))
(assert (= temp104_48 (select ARGNAME_padding_NAMEEND_VAL temp104_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp104_28 temp104_25)
             (bvslt temp104_32 temp104_29)
             (bvslt temp104_36 temp104_33)
             (bvslt temp104_40 temp104_37)
             (bvslt temp104_44 temp104_41)
             (bvslt temp104_48 temp104_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp104_49 #x0000000000000000))
(assert (= var1191714 temp104_49))
(assert (= temp104_50 #x0000000000000000))
(assert (= temp104_51 temp104_50))
(assert (= temp104_52 (select ARGNAME_output_padding_NAMEEND_VAL temp104_51)))
(assert (= temp104_53 #x0000000000000001))
(assert (= temp104_54 temp104_53))
(assert (= temp104_55 (select ARGNAME_output_padding_NAMEEND_VAL temp104_54)))
(assert (= temp104_56 #x0000000000000002))
(assert (= temp104_57 temp104_56))
(assert (= temp104_58 (select ARGNAME_output_padding_NAMEEND_VAL temp104_57)))
(assert (= temp104_59 #x0000000000000003))
(assert (= temp104_60 temp104_59))
(assert (= temp104_61 (select ARGNAME_output_padding_NAMEEND_VAL temp104_60)))
(assert (= temp104_62 #x0000000000000004))
(assert (= temp104_63 temp104_62))
(assert (= temp104_64 (select ARGNAME_output_padding_NAMEEND_VAL temp104_63)))
(assert (= temp104_65 #x0000000000000005))
(assert (= temp104_66 temp104_65))
(assert (= temp104_67 (select ARGNAME_output_padding_NAMEEND_VAL temp104_66)))
(assert (= temp104_68 #x0000000000000000))
(assert (= temp104_69 #x0000000000000000))
(assert (= temp104_70 temp104_69))
(assert (= temp104_71 (select ARGNAME_output_padding_NAMEEND_VAL temp104_70)))
(assert (= temp104_72 #x0000000000000000))
(assert (= temp104_73 #x0000000000000001))
(assert (= temp104_74 temp104_73))
(assert (= temp104_75 (select ARGNAME_output_padding_NAMEEND_VAL temp104_74)))
(assert (= temp104_76 #x0000000000000000))
(assert (= temp104_77 #x0000000000000002))
(assert (= temp104_78 temp104_77))
(assert (= temp104_79 (select ARGNAME_output_padding_NAMEEND_VAL temp104_78)))
(assert (= temp104_80 #x0000000000000000))
(assert (= temp104_81 #x0000000000000003))
(assert (= temp104_82 temp104_81))
(assert (= temp104_83 (select ARGNAME_output_padding_NAMEEND_VAL temp104_82)))
(assert (= temp104_84 #x0000000000000000))
(assert (= temp104_85 #x0000000000000004))
(assert (= temp104_86 temp104_85))
(assert (= temp104_87 (select ARGNAME_output_padding_NAMEEND_VAL temp104_86)))
(assert (= temp104_88 #x0000000000000000))
(assert (= temp104_89 #x0000000000000005))
(assert (= temp104_90 temp104_89))
(assert (= temp104_91 (select ARGNAME_output_padding_NAMEEND_VAL temp104_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp104_71 temp104_68)
             (bvslt temp104_75 temp104_72)
             (bvslt temp104_79 temp104_76)
             (bvslt temp104_83 temp104_80)
             (bvslt temp104_87 temp104_84)
             (bvslt temp104_91 temp104_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp104_92 #x0000000000000000))
(assert (= var1191725 temp104_92))
(assert (= temp104_93 #x0000000000000000))
(assert (= temp104_94 temp104_93))
(assert (= temp104_95 (select ARGNAME_stride_NAMEEND_VAL temp104_94)))
(assert (= temp104_96 #x0000000000000001))
(assert (= temp104_97 temp104_96))
(assert (= temp104_98 (select ARGNAME_stride_NAMEEND_VAL temp104_97)))
(assert (= temp104_99 #x0000000000000002))
(assert (= temp104_100 temp104_99))
(assert (= temp104_101 (select ARGNAME_stride_NAMEEND_VAL temp104_100)))
(assert (= temp104_102 #x0000000000000003))
(assert (= temp104_103 temp104_102))
(assert (= temp104_104 (select ARGNAME_stride_NAMEEND_VAL temp104_103)))
(assert (= temp104_105 #x0000000000000004))
(assert (= temp104_106 temp104_105))
(assert (= temp104_107 (select ARGNAME_stride_NAMEEND_VAL temp104_106)))
(assert (= temp104_108 #x0000000000000005))
(assert (= temp104_109 temp104_108))
(assert (= temp104_110 (select ARGNAME_stride_NAMEEND_VAL temp104_109)))
(assert (= temp104_111 #x0000000000000000))
(assert (= temp104_112 #x0000000000000000))
(assert (= temp104_113 temp104_112))
(assert (= temp104_114 (select ARGNAME_stride_NAMEEND_VAL temp104_113)))
(assert (= temp104_115 #x0000000000000000))
(assert (= temp104_116 #x0000000000000001))
(assert (= temp104_117 temp104_116))
(assert (= temp104_118 (select ARGNAME_stride_NAMEEND_VAL temp104_117)))
(assert (= temp104_119 #x0000000000000000))
(assert (= temp104_120 #x0000000000000002))
(assert (= temp104_121 temp104_120))
(assert (= temp104_122 (select ARGNAME_stride_NAMEEND_VAL temp104_121)))
(assert (= temp104_123 #x0000000000000000))
(assert (= temp104_124 #x0000000000000003))
(assert (= temp104_125 temp104_124))
(assert (= temp104_126 (select ARGNAME_stride_NAMEEND_VAL temp104_125)))
(assert (= temp104_127 #x0000000000000000))
(assert (= temp104_128 #x0000000000000004))
(assert (= temp104_129 temp104_128))
(assert (= temp104_130 (select ARGNAME_stride_NAMEEND_VAL temp104_129)))
(assert (= temp104_131 #x0000000000000000))
(assert (= temp104_132 #x0000000000000005))
(assert (= temp104_133 temp104_132))
(assert (= temp104_134 (select ARGNAME_stride_NAMEEND_VAL temp104_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp104_114 temp104_111)
             (bvsle temp104_118 temp104_115)
             (bvsle temp104_122 temp104_119)
             (bvsle temp104_126 temp104_123)
             (bvsle temp104_130 temp104_127)
             (bvsle temp104_134 temp104_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp104_135 #x0000000000000000))
(assert (= var1191735 temp104_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp104_136 #x0000000000000001))
(assert (= var1191747 temp104_136))
(assert (= temp104_137 #x0000000000000000))
(assert (= var1179826 temp104_137))
(assert (= temp104_138 #x0000000000000000))
(assert (= temp104_139 temp104_138))
(assert (= temp104_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp104_139)))
(assert (= temp104_141 #x0000000000000001))
(assert (= temp104_142 temp104_141))
(assert (= temp104_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp104_142)))
(assert (= temp104_144 #x0000000000000002))
(assert (= temp104_145 temp104_144))
(assert (= temp104_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp104_145)))
(assert (= temp104_147 #x0000000000000003))
(assert (= temp104_148 temp104_147))
(assert (= temp104_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp104_148)))
(assert (= temp104_150 #x0000000000000004))
(assert (= temp104_151 temp104_150))
(assert (= temp104_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp104_151)))
(assert (= temp104_153 #x0000000000000005))
(assert (= temp104_154 temp104_153))
(assert (= temp104_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp104_154)))
(assert (= temp104_157 var1179826))
(assert (= temp104_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp104_157)))
(assert (= temp104_156 temp104_158))
(assert (= var1191780
   (ite (bvslt temp104_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp104_159 #x0000000000000000))
(assert (= var1191780 temp104_159))
(assert (= temp104_160 #x0000000000000000))
(assert (= var1179826 temp104_160))
(assert (= temp104_162 var1179826))
(assert (= temp104_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp104_162)))
(assert (= temp104_161 temp104_163))
(assert (= var1191802 (bvsmod temp104_161 ARGNAME_groups_NAMEEND)))
(assert (= temp104_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp104_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp104_165 #x0000000000000001))
(assert (= var1191803 temp104_165))
(assert (= temp104_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp104_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp104_167 #x0000000000000001))
(assert (= var1191823 temp104_167))
(assert (= temp104_168 #x0000000000000001))
(assert (= var1180714 temp104_168))
(assert (= temp104_169 #x0000000000000000))
(assert (= temp104_170 temp104_169))
(assert (= temp104_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp104_170)))
(assert (= temp104_172 #x0000000000000001))
(assert (= temp104_173 temp104_172))
(assert (= temp104_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp104_173)))
(assert (= temp104_175 #x0000000000000002))
(assert (= temp104_176 temp104_175))
(assert (= temp104_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp104_176)))
(assert (= temp104_178 #x0000000000000003))
(assert (= temp104_179 temp104_178))
(assert (= temp104_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp104_179)))
(assert (= temp104_181 #x0000000000000004))
(assert (= temp104_182 temp104_181))
(assert (= temp104_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp104_182)))
(assert (= temp104_184 #x0000000000000005))
(assert (= temp104_185 temp104_184))
(assert (= temp104_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp104_185)))
(assert (= temp104_187 #x0000000000000000))
(assert (= temp104_188
   (ite (bvslt var1180714 temp104_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp104_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp104_188)))
(assert (= var1191831 temp104_189))
(assert (bvslt (ite (bvslt var1180714 temp104_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp104_190 #x0000000000000001))
(assert (= var1180714 temp104_190))
(assert (= temp104_192 var1180714))
(assert (= temp104_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp104_192)))
(assert (= temp104_191 temp104_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp104_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp104_194 #x0000000000000001))
(assert (= var1191836 temp104_194))
(assert (= temp104_195 #x0000000000000000))
(assert (= var1179826 temp104_195))
(assert (= temp104_197 var1179826))
(assert (= temp104_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp104_197)))
(assert (= temp104_196 temp104_198))
(assert (= temp104_199 #x0000000000000002))
(assert (= var1586025 temp104_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp104_200 #x0000000000000001))
(assert (= var1191993 temp104_200))
(assert (= temp104_201 #x0000000000000001))
(assert (= var2700303 temp104_201))
(assert (= temp104_202 #x0000000000000001))
(assert (= var2962447 temp104_202))
(assert (= temp104_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp104_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp104_204 #x0000000000000001))
(assert (= var211058 temp104_204))
(assert (= temp104_205 #x0000000000000001))
(assert (= var211188 temp104_205))
(assert (= var3879401 var211188))
(assert (= temp104_206 #x0000000000000000))
(assert (= var3866802 temp104_206))
(assert (= temp104_207 #x0000000000000000))
(assert (= temp104_208
   (ite (bvslt var3866802 temp104_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp104_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp104_208)))
(assert (= var3879420 temp104_209))
(assert (bvslt (ite (bvslt var3866802 temp104_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp104_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp104_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp104_211 #x0000000000000001))
(assert (= var3879421 temp104_211))
(assert (= temp104_212 #x0000000000000000))
(assert (= var4079423 temp104_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp104_213 #x0000000000000002))
(assert (= var4208259 temp104_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp104_214 #x0000000000000000))
(assert (= var4273820 temp104_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp104_216 #xffffffffffffffff))
(assert (= temp104_215 temp104_216))
(assert (= temp104_217 #x0000000000000001))
(assert (= var197674 temp104_217))
(assert (= temp104_218 #x0000000000000000))
(assert (= temp104_219
   (ite (bvslt var197674 temp104_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp104_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp104_219)))
(assert (= var211595 temp104_220))
(assert (bvslt (ite (bvslt var197674 temp104_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp104_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp104_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp104_222 #x0000000000000001))
(assert (= var211596 temp104_222))
(assert (= temp104_224 #xffffffffffffffff))
(assert (= temp104_223 temp104_224))
(assert (= temp104_225 #x0000000000000001))
(assert (= var211058 temp104_225))
(model-add temp104_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp104_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp104_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp104_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




