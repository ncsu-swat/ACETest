(declare-fun temp10608_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10608_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10608_3 () (_ BitVec 64))
(declare-fun temp10608_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10608_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10608_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10608_7 () (_ BitVec 64))
(declare-fun temp10608_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10608_9 () (_ BitVec 64))
(declare-fun temp10608_10 () (_ BitVec 64))
(declare-fun temp10608_11 () (_ BitVec 64))
(declare-fun temp10608_12 () (_ BitVec 64))
(declare-fun temp10608_13 () (_ BitVec 64))
(declare-fun temp10608_14 () (_ BitVec 64))
(declare-fun temp10608_15 () (_ BitVec 64))
(declare-fun temp10608_16 () (_ BitVec 64))
(declare-fun temp10608_17 () (_ BitVec 64))
(declare-fun temp10608_18 () (_ BitVec 64))
(declare-fun temp10608_19 () (_ BitVec 64))
(declare-fun temp10608_20 () (_ BitVec 64))
(declare-fun temp10608_21 () (_ BitVec 64))
(declare-fun temp10608_22 () (_ BitVec 64))
(declare-fun temp10608_23 () (_ BitVec 64))
(declare-fun temp10608_24 () (_ BitVec 64))
(declare-fun temp10608_25 () (_ BitVec 64))
(declare-fun temp10608_26 () (_ BitVec 64))
(declare-fun temp10608_27 () (_ BitVec 64))
(declare-fun temp10608_28 () (_ BitVec 64))
(declare-fun temp10608_29 () (_ BitVec 64))
(declare-fun temp10608_30 () (_ BitVec 64))
(declare-fun temp10608_31 () (_ BitVec 64))
(declare-fun temp10608_32 () (_ BitVec 64))
(declare-fun temp10608_33 () (_ BitVec 64))
(declare-fun temp10608_34 () (_ BitVec 64))
(declare-fun temp10608_35 () (_ BitVec 64))
(declare-fun temp10608_36 () (_ BitVec 64))
(declare-fun temp10608_37 () (_ BitVec 64))
(declare-fun temp10608_38 () (_ BitVec 64))
(declare-fun temp10608_39 () (_ BitVec 64))
(declare-fun temp10608_40 () (_ BitVec 64))
(declare-fun temp10608_41 () (_ BitVec 64))
(declare-fun temp10608_42 () (_ BitVec 64))
(declare-fun temp10608_43 () (_ BitVec 64))
(declare-fun temp10608_44 () (_ BitVec 64))
(declare-fun temp10608_45 () (_ BitVec 64))
(declare-fun temp10608_46 () (_ BitVec 64))
(declare-fun temp10608_47 () (_ BitVec 64))
(declare-fun temp10608_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10608_49 () (_ BitVec 64))
(declare-fun temp10608_50 () (_ BitVec 64))
(declare-fun temp10608_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10608_52 () (_ BitVec 64))
(declare-fun temp10608_53 () (_ BitVec 64))
(declare-fun temp10608_54 () (_ BitVec 64))
(declare-fun temp10608_55 () (_ BitVec 64))
(declare-fun temp10608_56 () (_ BitVec 64))
(declare-fun temp10608_57 () (_ BitVec 64))
(declare-fun temp10608_58 () (_ BitVec 64))
(declare-fun temp10608_59 () (_ BitVec 64))
(declare-fun temp10608_60 () (_ BitVec 64))
(declare-fun temp10608_61 () (_ BitVec 64))
(declare-fun temp10608_62 () (_ BitVec 64))
(declare-fun temp10608_63 () (_ BitVec 64))
(declare-fun temp10608_64 () (_ BitVec 64))
(declare-fun temp10608_65 () (_ BitVec 64))
(declare-fun temp10608_66 () (_ BitVec 64))
(declare-fun temp10608_67 () (_ BitVec 64))
(declare-fun temp10608_68 () (_ BitVec 64))
(declare-fun temp10608_69 () (_ BitVec 64))
(declare-fun temp10608_70 () (_ BitVec 64))
(declare-fun temp10608_71 () (_ BitVec 64))
(declare-fun temp10608_72 () (_ BitVec 64))
(declare-fun temp10608_73 () (_ BitVec 64))
(declare-fun temp10608_74 () (_ BitVec 64))
(declare-fun temp10608_75 () (_ BitVec 64))
(declare-fun temp10608_76 () (_ BitVec 64))
(declare-fun temp10608_77 () (_ BitVec 64))
(declare-fun temp10608_78 () (_ BitVec 64))
(declare-fun temp10608_79 () (_ BitVec 64))
(declare-fun temp10608_80 () (_ BitVec 64))
(declare-fun temp10608_81 () (_ BitVec 64))
(declare-fun temp10608_82 () (_ BitVec 64))
(declare-fun temp10608_83 () (_ BitVec 64))
(declare-fun temp10608_84 () (_ BitVec 64))
(declare-fun temp10608_85 () (_ BitVec 64))
(declare-fun temp10608_86 () (_ BitVec 64))
(declare-fun temp10608_87 () (_ BitVec 64))
(declare-fun temp10608_88 () (_ BitVec 64))
(declare-fun temp10608_89 () (_ BitVec 64))
(declare-fun temp10608_90 () (_ BitVec 64))
(declare-fun temp10608_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10608_92 () (_ BitVec 64))
(declare-fun temp10608_93 () (_ BitVec 64))
(declare-fun temp10608_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10608_95 () (_ BitVec 64))
(declare-fun temp10608_96 () (_ BitVec 64))
(declare-fun temp10608_97 () (_ BitVec 64))
(declare-fun temp10608_98 () (_ BitVec 64))
(declare-fun temp10608_99 () (_ BitVec 64))
(declare-fun temp10608_100 () (_ BitVec 64))
(declare-fun temp10608_101 () (_ BitVec 64))
(declare-fun temp10608_102 () (_ BitVec 64))
(declare-fun temp10608_103 () (_ BitVec 64))
(declare-fun temp10608_104 () (_ BitVec 64))
(declare-fun temp10608_105 () (_ BitVec 64))
(declare-fun temp10608_106 () (_ BitVec 64))
(declare-fun temp10608_107 () (_ BitVec 64))
(declare-fun temp10608_108 () (_ BitVec 64))
(declare-fun temp10608_109 () (_ BitVec 64))
(declare-fun temp10608_110 () (_ BitVec 64))
(declare-fun temp10608_111 () (_ BitVec 64))
(declare-fun temp10608_112 () (_ BitVec 64))
(declare-fun temp10608_113 () (_ BitVec 64))
(declare-fun temp10608_114 () (_ BitVec 64))
(declare-fun temp10608_115 () (_ BitVec 64))
(declare-fun temp10608_116 () (_ BitVec 64))
(declare-fun temp10608_117 () (_ BitVec 64))
(declare-fun temp10608_118 () (_ BitVec 64))
(declare-fun temp10608_119 () (_ BitVec 64))
(declare-fun temp10608_120 () (_ BitVec 64))
(declare-fun temp10608_121 () (_ BitVec 64))
(declare-fun temp10608_122 () (_ BitVec 64))
(declare-fun temp10608_123 () (_ BitVec 64))
(declare-fun temp10608_124 () (_ BitVec 64))
(declare-fun temp10608_125 () (_ BitVec 64))
(declare-fun temp10608_126 () (_ BitVec 64))
(declare-fun temp10608_127 () (_ BitVec 64))
(declare-fun temp10608_128 () (_ BitVec 64))
(declare-fun temp10608_129 () (_ BitVec 64))
(declare-fun temp10608_130 () (_ BitVec 64))
(declare-fun temp10608_131 () (_ BitVec 64))
(declare-fun temp10608_132 () (_ BitVec 64))
(declare-fun temp10608_133 () (_ BitVec 64))
(declare-fun temp10608_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10608_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10608_136 () (_ BitVec 64))
(declare-fun temp10608_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10608_138 () (_ BitVec 64))
(declare-fun temp10608_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10608_140 () (_ BitVec 64))
(declare-fun temp10608_141 () (_ BitVec 64))
(declare-fun temp10608_142 () (_ BitVec 64))
(declare-fun temp10608_143 () (_ BitVec 64))
(declare-fun temp10608_144 () (_ BitVec 64))
(declare-fun temp10608_145 () (_ BitVec 64))
(declare-fun temp10608_146 () (_ BitVec 64))
(declare-fun temp10608_147 () (_ BitVec 64))
(declare-fun temp10608_148 () (_ BitVec 64))
(declare-fun temp10608_149 () (_ BitVec 64))
(declare-fun temp10608_150 () (_ BitVec 64))
(declare-fun temp10608_151 () (_ BitVec 64))
(declare-fun temp10608_152 () (_ BitVec 64))
(declare-fun temp10608_153 () (_ BitVec 64))
(declare-fun temp10608_154 () (_ BitVec 64))
(declare-fun temp10608_155 () (_ BitVec 64))
(declare-fun temp10608_157 () (_ BitVec 64))
(declare-fun temp10608_158 () (_ BitVec 64))
(declare-fun temp10608_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10608_159 () (_ BitVec 64))
(declare-fun temp10608_160 () (_ BitVec 64))
(declare-fun temp10608_162 () (_ BitVec 64))
(declare-fun temp10608_163 () (_ BitVec 64))
(declare-fun temp10608_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10608_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10608_165 () (_ BitVec 64))
(declare-fun temp10608_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10608_167 () (_ BitVec 64))
(declare-fun temp10608_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10608_169 () (_ BitVec 64))
(declare-fun temp10608_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10608_171 () (_ BitVec 64))
(declare-fun temp10608_172 () (_ BitVec 64))
(declare-fun temp10608_173 () (_ BitVec 64))
(declare-fun temp10608_174 () (_ BitVec 64))
(declare-fun temp10608_175 () (_ BitVec 64))
(declare-fun temp10608_176 () (_ BitVec 64))
(declare-fun temp10608_177 () (_ BitVec 64))
(declare-fun temp10608_178 () (_ BitVec 64))
(declare-fun temp10608_179 () (_ BitVec 64))
(declare-fun temp10608_180 () (_ BitVec 64))
(declare-fun temp10608_181 () (_ BitVec 64))
(declare-fun temp10608_182 () (_ BitVec 64))
(declare-fun temp10608_183 () (_ BitVec 64))
(declare-fun temp10608_184 () (_ BitVec 64))
(declare-fun temp10608_185 () (_ BitVec 64))
(declare-fun temp10608_186 () (_ BitVec 64))
(declare-fun temp10608_187 () (_ BitVec 64))
(declare-fun temp10608_188 () (_ BitVec 64))
(declare-fun temp10608_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10608_190 () (_ BitVec 64))
(declare-fun temp10608_192 () (_ BitVec 64))
(declare-fun temp10608_193 () (_ BitVec 64))
(declare-fun temp10608_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10608_194 () (_ BitVec 64))
(declare-fun temp10608_195 () (_ BitVec 64))
(declare-fun temp10608_197 () (_ BitVec 64))
(declare-fun temp10608_198 () (_ BitVec 64))
(declare-fun temp10608_196 () (_ BitVec 64))
(declare-fun temp10608_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10608_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10608_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10608_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10608_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10608_204 () (_ BitVec 64))
(declare-fun temp10608_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10608_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10608_207 () (_ BitVec 64))
(declare-fun temp10608_208 () (_ BitVec 64))
(declare-fun temp10608_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10608_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10608_211 () (_ BitVec 64))
(declare-fun temp10608_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10608_213 () (_ BitVec 64))
(declare-fun temp10608_214 () (_ BitVec 64))
(declare-fun temp10608_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10608_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10608_217 () (_ BitVec 64))
(declare-fun temp10608_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10608_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10608_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10608_222 () (_ BitVec 64))
(declare-fun temp10608_221 () (_ BitVec 64))
(declare-fun temp10608_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10608_224 () (_ BitVec 64))
(declare-fun temp10608_225 () (_ BitVec 64))
(declare-fun temp10608_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10608_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10608_228 () (_ BitVec 64))
(declare-fun temp10608_230 () (_ BitVec 64))
(declare-fun temp10608_229 () (_ BitVec 64))
(declare-fun temp10608_231 () (_ BitVec 64))
(assert (= temp10608_1 #x0000000000000001))
(assert (= var77203 temp10608_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10608_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10608_2)))
(assert (= temp10608_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10608_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10608_4 #x0000000000000000))
(assert (= var210941 temp10608_4))
(assert (= temp10608_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10608_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10608_6 #x0000000000000000))
(assert (= var210986 temp10608_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10608_7 #x0000000000000000))
(assert (= temp10608_8 temp10608_7))
(assert (= temp10608_9 (select ARGNAME_padding_NAMEEND_VAL temp10608_8)))
(assert (= temp10608_10 #x0000000000000001))
(assert (= temp10608_11 temp10608_10))
(assert (= temp10608_12 (select ARGNAME_padding_NAMEEND_VAL temp10608_11)))
(assert (= temp10608_13 #x0000000000000002))
(assert (= temp10608_14 temp10608_13))
(assert (= temp10608_15 (select ARGNAME_padding_NAMEEND_VAL temp10608_14)))
(assert (= temp10608_16 #x0000000000000003))
(assert (= temp10608_17 temp10608_16))
(assert (= temp10608_18 (select ARGNAME_padding_NAMEEND_VAL temp10608_17)))
(assert (= temp10608_19 #x0000000000000004))
(assert (= temp10608_20 temp10608_19))
(assert (= temp10608_21 (select ARGNAME_padding_NAMEEND_VAL temp10608_20)))
(assert (= temp10608_22 #x0000000000000005))
(assert (= temp10608_23 temp10608_22))
(assert (= temp10608_24 (select ARGNAME_padding_NAMEEND_VAL temp10608_23)))
(assert (= temp10608_25 #x0000000000000000))
(assert (= temp10608_26 #x0000000000000000))
(assert (= temp10608_27 temp10608_26))
(assert (= temp10608_28 (select ARGNAME_padding_NAMEEND_VAL temp10608_27)))
(assert (= temp10608_29 #x0000000000000000))
(assert (= temp10608_30 #x0000000000000001))
(assert (= temp10608_31 temp10608_30))
(assert (= temp10608_32 (select ARGNAME_padding_NAMEEND_VAL temp10608_31)))
(assert (= temp10608_33 #x0000000000000000))
(assert (= temp10608_34 #x0000000000000002))
(assert (= temp10608_35 temp10608_34))
(assert (= temp10608_36 (select ARGNAME_padding_NAMEEND_VAL temp10608_35)))
(assert (= temp10608_37 #x0000000000000000))
(assert (= temp10608_38 #x0000000000000003))
(assert (= temp10608_39 temp10608_38))
(assert (= temp10608_40 (select ARGNAME_padding_NAMEEND_VAL temp10608_39)))
(assert (= temp10608_41 #x0000000000000000))
(assert (= temp10608_42 #x0000000000000004))
(assert (= temp10608_43 temp10608_42))
(assert (= temp10608_44 (select ARGNAME_padding_NAMEEND_VAL temp10608_43)))
(assert (= temp10608_45 #x0000000000000000))
(assert (= temp10608_46 #x0000000000000005))
(assert (= temp10608_47 temp10608_46))
(assert (= temp10608_48 (select ARGNAME_padding_NAMEEND_VAL temp10608_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10608_28 temp10608_25)
             (bvslt temp10608_32 temp10608_29)
             (bvslt temp10608_36 temp10608_33)
             (bvslt temp10608_40 temp10608_37)
             (bvslt temp10608_44 temp10608_41)
             (bvslt temp10608_48 temp10608_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10608_49 #x0000000000000000))
(assert (= var1191714 temp10608_49))
(assert (= temp10608_50 #x0000000000000000))
(assert (= temp10608_51 temp10608_50))
(assert (= temp10608_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10608_51)))
(assert (= temp10608_53 #x0000000000000001))
(assert (= temp10608_54 temp10608_53))
(assert (= temp10608_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10608_54)))
(assert (= temp10608_56 #x0000000000000002))
(assert (= temp10608_57 temp10608_56))
(assert (= temp10608_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10608_57)))
(assert (= temp10608_59 #x0000000000000003))
(assert (= temp10608_60 temp10608_59))
(assert (= temp10608_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10608_60)))
(assert (= temp10608_62 #x0000000000000004))
(assert (= temp10608_63 temp10608_62))
(assert (= temp10608_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10608_63)))
(assert (= temp10608_65 #x0000000000000005))
(assert (= temp10608_66 temp10608_65))
(assert (= temp10608_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10608_66)))
(assert (= temp10608_68 #x0000000000000000))
(assert (= temp10608_69 #x0000000000000000))
(assert (= temp10608_70 temp10608_69))
(assert (= temp10608_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10608_70)))
(assert (= temp10608_72 #x0000000000000000))
(assert (= temp10608_73 #x0000000000000001))
(assert (= temp10608_74 temp10608_73))
(assert (= temp10608_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10608_74)))
(assert (= temp10608_76 #x0000000000000000))
(assert (= temp10608_77 #x0000000000000002))
(assert (= temp10608_78 temp10608_77))
(assert (= temp10608_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10608_78)))
(assert (= temp10608_80 #x0000000000000000))
(assert (= temp10608_81 #x0000000000000003))
(assert (= temp10608_82 temp10608_81))
(assert (= temp10608_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10608_82)))
(assert (= temp10608_84 #x0000000000000000))
(assert (= temp10608_85 #x0000000000000004))
(assert (= temp10608_86 temp10608_85))
(assert (= temp10608_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10608_86)))
(assert (= temp10608_88 #x0000000000000000))
(assert (= temp10608_89 #x0000000000000005))
(assert (= temp10608_90 temp10608_89))
(assert (= temp10608_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10608_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10608_71 temp10608_68)
             (bvslt temp10608_75 temp10608_72)
             (bvslt temp10608_79 temp10608_76)
             (bvslt temp10608_83 temp10608_80)
             (bvslt temp10608_87 temp10608_84)
             (bvslt temp10608_91 temp10608_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10608_92 #x0000000000000000))
(assert (= var1191725 temp10608_92))
(assert (= temp10608_93 #x0000000000000000))
(assert (= temp10608_94 temp10608_93))
(assert (= temp10608_95 (select ARGNAME_stride_NAMEEND_VAL temp10608_94)))
(assert (= temp10608_96 #x0000000000000001))
(assert (= temp10608_97 temp10608_96))
(assert (= temp10608_98 (select ARGNAME_stride_NAMEEND_VAL temp10608_97)))
(assert (= temp10608_99 #x0000000000000002))
(assert (= temp10608_100 temp10608_99))
(assert (= temp10608_101 (select ARGNAME_stride_NAMEEND_VAL temp10608_100)))
(assert (= temp10608_102 #x0000000000000003))
(assert (= temp10608_103 temp10608_102))
(assert (= temp10608_104 (select ARGNAME_stride_NAMEEND_VAL temp10608_103)))
(assert (= temp10608_105 #x0000000000000004))
(assert (= temp10608_106 temp10608_105))
(assert (= temp10608_107 (select ARGNAME_stride_NAMEEND_VAL temp10608_106)))
(assert (= temp10608_108 #x0000000000000005))
(assert (= temp10608_109 temp10608_108))
(assert (= temp10608_110 (select ARGNAME_stride_NAMEEND_VAL temp10608_109)))
(assert (= temp10608_111 #x0000000000000000))
(assert (= temp10608_112 #x0000000000000000))
(assert (= temp10608_113 temp10608_112))
(assert (= temp10608_114 (select ARGNAME_stride_NAMEEND_VAL temp10608_113)))
(assert (= temp10608_115 #x0000000000000000))
(assert (= temp10608_116 #x0000000000000001))
(assert (= temp10608_117 temp10608_116))
(assert (= temp10608_118 (select ARGNAME_stride_NAMEEND_VAL temp10608_117)))
(assert (= temp10608_119 #x0000000000000000))
(assert (= temp10608_120 #x0000000000000002))
(assert (= temp10608_121 temp10608_120))
(assert (= temp10608_122 (select ARGNAME_stride_NAMEEND_VAL temp10608_121)))
(assert (= temp10608_123 #x0000000000000000))
(assert (= temp10608_124 #x0000000000000003))
(assert (= temp10608_125 temp10608_124))
(assert (= temp10608_126 (select ARGNAME_stride_NAMEEND_VAL temp10608_125)))
(assert (= temp10608_127 #x0000000000000000))
(assert (= temp10608_128 #x0000000000000004))
(assert (= temp10608_129 temp10608_128))
(assert (= temp10608_130 (select ARGNAME_stride_NAMEEND_VAL temp10608_129)))
(assert (= temp10608_131 #x0000000000000000))
(assert (= temp10608_132 #x0000000000000005))
(assert (= temp10608_133 temp10608_132))
(assert (= temp10608_134 (select ARGNAME_stride_NAMEEND_VAL temp10608_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10608_114 temp10608_111)
             (bvsle temp10608_118 temp10608_115)
             (bvsle temp10608_122 temp10608_119)
             (bvsle temp10608_126 temp10608_123)
             (bvsle temp10608_130 temp10608_127)
             (bvsle temp10608_134 temp10608_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10608_135 #x0000000000000000))
(assert (= var1191735 temp10608_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10608_136 #x0000000000000001))
(assert (= var1191747 temp10608_136))
(assert (= temp10608_137 #x0000000000000000))
(assert (= var1179826 temp10608_137))
(assert (= temp10608_138 #x0000000000000000))
(assert (= temp10608_139 temp10608_138))
(assert (= temp10608_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10608_139)))
(assert (= temp10608_141 #x0000000000000001))
(assert (= temp10608_142 temp10608_141))
(assert (= temp10608_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10608_142)))
(assert (= temp10608_144 #x0000000000000002))
(assert (= temp10608_145 temp10608_144))
(assert (= temp10608_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10608_145)))
(assert (= temp10608_147 #x0000000000000003))
(assert (= temp10608_148 temp10608_147))
(assert (= temp10608_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10608_148)))
(assert (= temp10608_150 #x0000000000000004))
(assert (= temp10608_151 temp10608_150))
(assert (= temp10608_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10608_151)))
(assert (= temp10608_153 #x0000000000000005))
(assert (= temp10608_154 temp10608_153))
(assert (= temp10608_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10608_154)))
(assert (= temp10608_157 var1179826))
(assert (= temp10608_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10608_157)))
(assert (= temp10608_156 temp10608_158))
(assert (= var1191780
   (ite (bvslt temp10608_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10608_159 #x0000000000000000))
(assert (= var1191780 temp10608_159))
(assert (= temp10608_160 #x0000000000000000))
(assert (= var1179826 temp10608_160))
(assert (= temp10608_162 var1179826))
(assert (= temp10608_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10608_162)))
(assert (= temp10608_161 temp10608_163))
(assert (= var1191802 (bvsmod temp10608_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10608_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10608_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10608_165 #x0000000000000001))
(assert (= var1191803 temp10608_165))
(assert (= temp10608_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10608_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10608_167 #x0000000000000001))
(assert (= var1191823 temp10608_167))
(assert (= temp10608_168 #x0000000000000001))
(assert (= var1180714 temp10608_168))
(assert (= temp10608_169 #x0000000000000000))
(assert (= temp10608_170 temp10608_169))
(assert (= temp10608_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10608_170)))
(assert (= temp10608_172 #x0000000000000001))
(assert (= temp10608_173 temp10608_172))
(assert (= temp10608_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10608_173)))
(assert (= temp10608_175 #x0000000000000002))
(assert (= temp10608_176 temp10608_175))
(assert (= temp10608_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10608_176)))
(assert (= temp10608_178 #x0000000000000003))
(assert (= temp10608_179 temp10608_178))
(assert (= temp10608_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10608_179)))
(assert (= temp10608_181 #x0000000000000004))
(assert (= temp10608_182 temp10608_181))
(assert (= temp10608_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10608_182)))
(assert (= temp10608_184 #x0000000000000005))
(assert (= temp10608_185 temp10608_184))
(assert (= temp10608_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10608_185)))
(assert (= temp10608_187 #x0000000000000000))
(assert (= temp10608_188
   (ite (bvslt var1180714 temp10608_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10608_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10608_188)))
(assert (= var1191831 temp10608_189))
(assert (bvslt (ite (bvslt var1180714 temp10608_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10608_190 #x0000000000000001))
(assert (= var1180714 temp10608_190))
(assert (= temp10608_192 var1180714))
(assert (= temp10608_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10608_192)))
(assert (= temp10608_191 temp10608_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10608_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10608_194 #x0000000000000001))
(assert (= var1191836 temp10608_194))
(assert (= temp10608_195 #x0000000000000000))
(assert (= var1179826 temp10608_195))
(assert (= temp10608_197 var1179826))
(assert (= temp10608_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10608_197)))
(assert (= temp10608_196 temp10608_198))
(assert (= temp10608_199 #x0000000000000002))
(assert (= var1586025 temp10608_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10608_200 #x0000000000000001))
(assert (= var1191993 temp10608_200))
(assert (= temp10608_201 #x0000000000000001))
(assert (= var2700303 temp10608_201))
(assert (= temp10608_202 #x0000000000000001))
(assert (= var2962447 temp10608_202))
(assert (= temp10608_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10608_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10608_204 #x0000000000000001))
(assert (= var211058 temp10608_204))
(assert (= temp10608_205 #x0000000000000001))
(assert (= var211188 temp10608_205))
(assert (= var3879401 var211188))
(assert (= temp10608_206 #x0000000000000000))
(assert (= var3866802 temp10608_206))
(assert (= temp10608_207 #x0000000000000000))
(assert (= temp10608_208
   (ite (bvslt var3866802 temp10608_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10608_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10608_208)))
(assert (= var3879420 temp10608_209))
(assert (bvslt (ite (bvslt var3866802 temp10608_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10608_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10608_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10608_211 #x0000000000000000))
(assert (= var3879421 temp10608_211))
(assert (= temp10608_212 #x0000000000000001))
(assert (= var3867690 temp10608_212))
(assert (= temp10608_213 #x0000000000000000))
(assert (= temp10608_214
   (ite (bvslt var3867690 temp10608_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10608_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10608_214)))
(assert (= var3879423 temp10608_215))
(assert (bvslt (ite (bvslt var3867690 temp10608_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10608_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10608_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10608_217 #x0000000000000001))
(assert (= var3879424 temp10608_217))
(assert (= temp10608_218 #x0000000000000000))
(assert (= var4133117 temp10608_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10608_219 #x0000000000000002))
(assert (= var4339331 temp10608_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10608_220 #x0000000000000000))
(assert (= var4404892 temp10608_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10608_222 #xffffffffffffffff))
(assert (= temp10608_221 temp10608_222))
(assert (= temp10608_223 #x0000000000000001))
(assert (= var197674 temp10608_223))
(assert (= temp10608_224 #x0000000000000000))
(assert (= temp10608_225
   (ite (bvslt var197674 temp10608_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10608_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10608_225)))
(assert (= var211595 temp10608_226))
(assert (bvslt (ite (bvslt var197674 temp10608_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10608_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10608_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10608_228 #x0000000000000001))
(assert (= var211596 temp10608_228))
(assert (= temp10608_230 #xffffffffffffffff))
(assert (= temp10608_229 temp10608_230))
(assert (= temp10608_231 #x0000000000000001))
(assert (= var211058 temp10608_231))
(model-add temp10608_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10608_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10608_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10608_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





