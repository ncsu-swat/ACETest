(declare-fun temp81_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp81_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp81_3 () (_ BitVec 64))
(declare-fun temp81_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp81_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp81_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp81_7 () (_ BitVec 64))
(declare-fun temp81_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp81_9 () (_ BitVec 64))
(declare-fun temp81_10 () (_ BitVec 64))
(declare-fun temp81_11 () (_ BitVec 64))
(declare-fun temp81_12 () (_ BitVec 64))
(declare-fun temp81_13 () (_ BitVec 64))
(declare-fun temp81_14 () (_ BitVec 64))
(declare-fun temp81_15 () (_ BitVec 64))
(declare-fun temp81_16 () (_ BitVec 64))
(declare-fun temp81_17 () (_ BitVec 64))
(declare-fun temp81_18 () (_ BitVec 64))
(declare-fun temp81_19 () (_ BitVec 64))
(declare-fun temp81_20 () (_ BitVec 64))
(declare-fun temp81_21 () (_ BitVec 64))
(declare-fun temp81_22 () (_ BitVec 64))
(declare-fun temp81_23 () (_ BitVec 64))
(declare-fun temp81_24 () (_ BitVec 64))
(declare-fun temp81_25 () (_ BitVec 64))
(declare-fun temp81_26 () (_ BitVec 64))
(declare-fun temp81_27 () (_ BitVec 64))
(declare-fun temp81_28 () (_ BitVec 64))
(declare-fun temp81_29 () (_ BitVec 64))
(declare-fun temp81_30 () (_ BitVec 64))
(declare-fun temp81_31 () (_ BitVec 64))
(declare-fun temp81_32 () (_ BitVec 64))
(declare-fun temp81_33 () (_ BitVec 64))
(declare-fun temp81_34 () (_ BitVec 64))
(declare-fun temp81_35 () (_ BitVec 64))
(declare-fun temp81_36 () (_ BitVec 64))
(declare-fun temp81_37 () (_ BitVec 64))
(declare-fun temp81_38 () (_ BitVec 64))
(declare-fun temp81_39 () (_ BitVec 64))
(declare-fun temp81_40 () (_ BitVec 64))
(declare-fun temp81_41 () (_ BitVec 64))
(declare-fun temp81_42 () (_ BitVec 64))
(declare-fun temp81_43 () (_ BitVec 64))
(declare-fun temp81_44 () (_ BitVec 64))
(declare-fun temp81_45 () (_ BitVec 64))
(declare-fun temp81_46 () (_ BitVec 64))
(declare-fun temp81_47 () (_ BitVec 64))
(declare-fun temp81_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp81_49 () (_ BitVec 64))
(declare-fun temp81_50 () (_ BitVec 64))
(declare-fun temp81_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp81_52 () (_ BitVec 64))
(declare-fun temp81_53 () (_ BitVec 64))
(declare-fun temp81_54 () (_ BitVec 64))
(declare-fun temp81_55 () (_ BitVec 64))
(declare-fun temp81_56 () (_ BitVec 64))
(declare-fun temp81_57 () (_ BitVec 64))
(declare-fun temp81_58 () (_ BitVec 64))
(declare-fun temp81_59 () (_ BitVec 64))
(declare-fun temp81_60 () (_ BitVec 64))
(declare-fun temp81_61 () (_ BitVec 64))
(declare-fun temp81_62 () (_ BitVec 64))
(declare-fun temp81_63 () (_ BitVec 64))
(declare-fun temp81_64 () (_ BitVec 64))
(declare-fun temp81_65 () (_ BitVec 64))
(declare-fun temp81_66 () (_ BitVec 64))
(declare-fun temp81_67 () (_ BitVec 64))
(declare-fun temp81_68 () (_ BitVec 64))
(declare-fun temp81_69 () (_ BitVec 64))
(declare-fun temp81_70 () (_ BitVec 64))
(declare-fun temp81_71 () (_ BitVec 64))
(declare-fun temp81_72 () (_ BitVec 64))
(declare-fun temp81_73 () (_ BitVec 64))
(declare-fun temp81_74 () (_ BitVec 64))
(declare-fun temp81_75 () (_ BitVec 64))
(declare-fun temp81_76 () (_ BitVec 64))
(declare-fun temp81_77 () (_ BitVec 64))
(declare-fun temp81_78 () (_ BitVec 64))
(declare-fun temp81_79 () (_ BitVec 64))
(declare-fun temp81_80 () (_ BitVec 64))
(declare-fun temp81_81 () (_ BitVec 64))
(declare-fun temp81_82 () (_ BitVec 64))
(declare-fun temp81_83 () (_ BitVec 64))
(declare-fun temp81_84 () (_ BitVec 64))
(declare-fun temp81_85 () (_ BitVec 64))
(declare-fun temp81_86 () (_ BitVec 64))
(declare-fun temp81_87 () (_ BitVec 64))
(declare-fun temp81_88 () (_ BitVec 64))
(declare-fun temp81_89 () (_ BitVec 64))
(declare-fun temp81_90 () (_ BitVec 64))
(declare-fun temp81_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp81_92 () (_ BitVec 64))
(declare-fun temp81_93 () (_ BitVec 64))
(declare-fun temp81_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp81_95 () (_ BitVec 64))
(declare-fun temp81_96 () (_ BitVec 64))
(declare-fun temp81_97 () (_ BitVec 64))
(declare-fun temp81_98 () (_ BitVec 64))
(declare-fun temp81_99 () (_ BitVec 64))
(declare-fun temp81_100 () (_ BitVec 64))
(declare-fun temp81_101 () (_ BitVec 64))
(declare-fun temp81_102 () (_ BitVec 64))
(declare-fun temp81_103 () (_ BitVec 64))
(declare-fun temp81_104 () (_ BitVec 64))
(declare-fun temp81_105 () (_ BitVec 64))
(declare-fun temp81_106 () (_ BitVec 64))
(declare-fun temp81_107 () (_ BitVec 64))
(declare-fun temp81_108 () (_ BitVec 64))
(declare-fun temp81_109 () (_ BitVec 64))
(declare-fun temp81_110 () (_ BitVec 64))
(declare-fun temp81_111 () (_ BitVec 64))
(declare-fun temp81_112 () (_ BitVec 64))
(declare-fun temp81_113 () (_ BitVec 64))
(declare-fun temp81_114 () (_ BitVec 64))
(declare-fun temp81_115 () (_ BitVec 64))
(declare-fun temp81_116 () (_ BitVec 64))
(declare-fun temp81_117 () (_ BitVec 64))
(declare-fun temp81_118 () (_ BitVec 64))
(declare-fun temp81_119 () (_ BitVec 64))
(declare-fun temp81_120 () (_ BitVec 64))
(declare-fun temp81_121 () (_ BitVec 64))
(declare-fun temp81_122 () (_ BitVec 64))
(declare-fun temp81_123 () (_ BitVec 64))
(declare-fun temp81_124 () (_ BitVec 64))
(declare-fun temp81_125 () (_ BitVec 64))
(declare-fun temp81_126 () (_ BitVec 64))
(declare-fun temp81_127 () (_ BitVec 64))
(declare-fun temp81_128 () (_ BitVec 64))
(declare-fun temp81_129 () (_ BitVec 64))
(declare-fun temp81_130 () (_ BitVec 64))
(declare-fun temp81_131 () (_ BitVec 64))
(declare-fun temp81_132 () (_ BitVec 64))
(declare-fun temp81_133 () (_ BitVec 64))
(declare-fun temp81_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp81_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp81_136 () (_ BitVec 64))
(declare-fun temp81_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp81_138 () (_ BitVec 64))
(declare-fun temp81_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp81_140 () (_ BitVec 64))
(declare-fun temp81_141 () (_ BitVec 64))
(declare-fun temp81_142 () (_ BitVec 64))
(declare-fun temp81_143 () (_ BitVec 64))
(declare-fun temp81_144 () (_ BitVec 64))
(declare-fun temp81_145 () (_ BitVec 64))
(declare-fun temp81_146 () (_ BitVec 64))
(declare-fun temp81_147 () (_ BitVec 64))
(declare-fun temp81_148 () (_ BitVec 64))
(declare-fun temp81_149 () (_ BitVec 64))
(declare-fun temp81_150 () (_ BitVec 64))
(declare-fun temp81_151 () (_ BitVec 64))
(declare-fun temp81_152 () (_ BitVec 64))
(declare-fun temp81_153 () (_ BitVec 64))
(declare-fun temp81_154 () (_ BitVec 64))
(declare-fun temp81_155 () (_ BitVec 64))
(declare-fun temp81_157 () (_ BitVec 64))
(declare-fun temp81_158 () (_ BitVec 64))
(declare-fun temp81_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp81_159 () (_ BitVec 64))
(declare-fun temp81_160 () (_ BitVec 64))
(declare-fun temp81_162 () (_ BitVec 64))
(declare-fun temp81_163 () (_ BitVec 64))
(declare-fun temp81_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp81_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp81_165 () (_ BitVec 64))
(declare-fun temp81_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp81_167 () (_ BitVec 64))
(declare-fun temp81_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp81_169 () (_ BitVec 64))
(declare-fun temp81_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp81_171 () (_ BitVec 64))
(declare-fun temp81_172 () (_ BitVec 64))
(declare-fun temp81_173 () (_ BitVec 64))
(declare-fun temp81_174 () (_ BitVec 64))
(declare-fun temp81_175 () (_ BitVec 64))
(declare-fun temp81_176 () (_ BitVec 64))
(declare-fun temp81_177 () (_ BitVec 64))
(declare-fun temp81_178 () (_ BitVec 64))
(declare-fun temp81_179 () (_ BitVec 64))
(declare-fun temp81_180 () (_ BitVec 64))
(declare-fun temp81_181 () (_ BitVec 64))
(declare-fun temp81_182 () (_ BitVec 64))
(declare-fun temp81_183 () (_ BitVec 64))
(declare-fun temp81_184 () (_ BitVec 64))
(declare-fun temp81_185 () (_ BitVec 64))
(declare-fun temp81_186 () (_ BitVec 64))
(declare-fun temp81_187 () (_ BitVec 64))
(declare-fun temp81_188 () (_ BitVec 64))
(declare-fun temp81_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp81_190 () (_ BitVec 64))
(declare-fun temp81_192 () (_ BitVec 64))
(declare-fun temp81_193 () (_ BitVec 64))
(declare-fun temp81_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp81_194 () (_ BitVec 64))
(declare-fun temp81_195 () (_ BitVec 64))
(declare-fun temp81_197 () (_ BitVec 64))
(declare-fun temp81_198 () (_ BitVec 64))
(declare-fun temp81_196 () (_ BitVec 64))
(declare-fun temp81_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp81_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp81_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp81_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp81_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp81_204 () (_ BitVec 64))
(declare-fun temp81_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp81_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp81_207 () (_ BitVec 64))
(declare-fun temp81_208 () (_ BitVec 64))
(declare-fun temp81_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp81_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp81_211 () (_ BitVec 64))
(declare-fun temp81_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp81_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp81_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp81_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp81_217 () (_ BitVec 64))
(declare-fun temp81_216 () (_ BitVec 64))
(declare-fun temp81_218 () (_ BitVec 64))
(declare-fun var6753770 () (_ BitVec 64))
(declare-fun temp81_220 () (_ BitVec 64))
(declare-fun temp81_219 () (_ BitVec 64))
(declare-fun temp81_221 () (_ BitVec 64))
(assert (= temp81_1 #x0000000000000001))
(assert (= var77203 temp81_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp81_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp81_2)))
(assert (= temp81_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp81_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp81_4 #x0000000000000000))
(assert (= var210941 temp81_4))
(assert (= temp81_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp81_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp81_6 #x0000000000000000))
(assert (= var210986 temp81_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp81_7 #x0000000000000000))
(assert (= temp81_8 temp81_7))
(assert (= temp81_9 (select ARGNAME_padding_NAMEEND_VAL temp81_8)))
(assert (= temp81_10 #x0000000000000001))
(assert (= temp81_11 temp81_10))
(assert (= temp81_12 (select ARGNAME_padding_NAMEEND_VAL temp81_11)))
(assert (= temp81_13 #x0000000000000002))
(assert (= temp81_14 temp81_13))
(assert (= temp81_15 (select ARGNAME_padding_NAMEEND_VAL temp81_14)))
(assert (= temp81_16 #x0000000000000003))
(assert (= temp81_17 temp81_16))
(assert (= temp81_18 (select ARGNAME_padding_NAMEEND_VAL temp81_17)))
(assert (= temp81_19 #x0000000000000004))
(assert (= temp81_20 temp81_19))
(assert (= temp81_21 (select ARGNAME_padding_NAMEEND_VAL temp81_20)))
(assert (= temp81_22 #x0000000000000005))
(assert (= temp81_23 temp81_22))
(assert (= temp81_24 (select ARGNAME_padding_NAMEEND_VAL temp81_23)))
(assert (= temp81_25 #x0000000000000000))
(assert (= temp81_26 #x0000000000000000))
(assert (= temp81_27 temp81_26))
(assert (= temp81_28 (select ARGNAME_padding_NAMEEND_VAL temp81_27)))
(assert (= temp81_29 #x0000000000000000))
(assert (= temp81_30 #x0000000000000001))
(assert (= temp81_31 temp81_30))
(assert (= temp81_32 (select ARGNAME_padding_NAMEEND_VAL temp81_31)))
(assert (= temp81_33 #x0000000000000000))
(assert (= temp81_34 #x0000000000000002))
(assert (= temp81_35 temp81_34))
(assert (= temp81_36 (select ARGNAME_padding_NAMEEND_VAL temp81_35)))
(assert (= temp81_37 #x0000000000000000))
(assert (= temp81_38 #x0000000000000003))
(assert (= temp81_39 temp81_38))
(assert (= temp81_40 (select ARGNAME_padding_NAMEEND_VAL temp81_39)))
(assert (= temp81_41 #x0000000000000000))
(assert (= temp81_42 #x0000000000000004))
(assert (= temp81_43 temp81_42))
(assert (= temp81_44 (select ARGNAME_padding_NAMEEND_VAL temp81_43)))
(assert (= temp81_45 #x0000000000000000))
(assert (= temp81_46 #x0000000000000005))
(assert (= temp81_47 temp81_46))
(assert (= temp81_48 (select ARGNAME_padding_NAMEEND_VAL temp81_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp81_28 temp81_25)
             (bvslt temp81_32 temp81_29)
             (bvslt temp81_36 temp81_33)
             (bvslt temp81_40 temp81_37)
             (bvslt temp81_44 temp81_41)
             (bvslt temp81_48 temp81_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp81_49 #x0000000000000000))
(assert (= var1191714 temp81_49))
(assert (= temp81_50 #x0000000000000000))
(assert (= temp81_51 temp81_50))
(assert (= temp81_52 (select ARGNAME_output_padding_NAMEEND_VAL temp81_51)))
(assert (= temp81_53 #x0000000000000001))
(assert (= temp81_54 temp81_53))
(assert (= temp81_55 (select ARGNAME_output_padding_NAMEEND_VAL temp81_54)))
(assert (= temp81_56 #x0000000000000002))
(assert (= temp81_57 temp81_56))
(assert (= temp81_58 (select ARGNAME_output_padding_NAMEEND_VAL temp81_57)))
(assert (= temp81_59 #x0000000000000003))
(assert (= temp81_60 temp81_59))
(assert (= temp81_61 (select ARGNAME_output_padding_NAMEEND_VAL temp81_60)))
(assert (= temp81_62 #x0000000000000004))
(assert (= temp81_63 temp81_62))
(assert (= temp81_64 (select ARGNAME_output_padding_NAMEEND_VAL temp81_63)))
(assert (= temp81_65 #x0000000000000005))
(assert (= temp81_66 temp81_65))
(assert (= temp81_67 (select ARGNAME_output_padding_NAMEEND_VAL temp81_66)))
(assert (= temp81_68 #x0000000000000000))
(assert (= temp81_69 #x0000000000000000))
(assert (= temp81_70 temp81_69))
(assert (= temp81_71 (select ARGNAME_output_padding_NAMEEND_VAL temp81_70)))
(assert (= temp81_72 #x0000000000000000))
(assert (= temp81_73 #x0000000000000001))
(assert (= temp81_74 temp81_73))
(assert (= temp81_75 (select ARGNAME_output_padding_NAMEEND_VAL temp81_74)))
(assert (= temp81_76 #x0000000000000000))
(assert (= temp81_77 #x0000000000000002))
(assert (= temp81_78 temp81_77))
(assert (= temp81_79 (select ARGNAME_output_padding_NAMEEND_VAL temp81_78)))
(assert (= temp81_80 #x0000000000000000))
(assert (= temp81_81 #x0000000000000003))
(assert (= temp81_82 temp81_81))
(assert (= temp81_83 (select ARGNAME_output_padding_NAMEEND_VAL temp81_82)))
(assert (= temp81_84 #x0000000000000000))
(assert (= temp81_85 #x0000000000000004))
(assert (= temp81_86 temp81_85))
(assert (= temp81_87 (select ARGNAME_output_padding_NAMEEND_VAL temp81_86)))
(assert (= temp81_88 #x0000000000000000))
(assert (= temp81_89 #x0000000000000005))
(assert (= temp81_90 temp81_89))
(assert (= temp81_91 (select ARGNAME_output_padding_NAMEEND_VAL temp81_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp81_71 temp81_68)
             (bvslt temp81_75 temp81_72)
             (bvslt temp81_79 temp81_76)
             (bvslt temp81_83 temp81_80)
             (bvslt temp81_87 temp81_84)
             (bvslt temp81_91 temp81_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp81_92 #x0000000000000000))
(assert (= var1191725 temp81_92))
(assert (= temp81_93 #x0000000000000000))
(assert (= temp81_94 temp81_93))
(assert (= temp81_95 (select ARGNAME_stride_NAMEEND_VAL temp81_94)))
(assert (= temp81_96 #x0000000000000001))
(assert (= temp81_97 temp81_96))
(assert (= temp81_98 (select ARGNAME_stride_NAMEEND_VAL temp81_97)))
(assert (= temp81_99 #x0000000000000002))
(assert (= temp81_100 temp81_99))
(assert (= temp81_101 (select ARGNAME_stride_NAMEEND_VAL temp81_100)))
(assert (= temp81_102 #x0000000000000003))
(assert (= temp81_103 temp81_102))
(assert (= temp81_104 (select ARGNAME_stride_NAMEEND_VAL temp81_103)))
(assert (= temp81_105 #x0000000000000004))
(assert (= temp81_106 temp81_105))
(assert (= temp81_107 (select ARGNAME_stride_NAMEEND_VAL temp81_106)))
(assert (= temp81_108 #x0000000000000005))
(assert (= temp81_109 temp81_108))
(assert (= temp81_110 (select ARGNAME_stride_NAMEEND_VAL temp81_109)))
(assert (= temp81_111 #x0000000000000000))
(assert (= temp81_112 #x0000000000000000))
(assert (= temp81_113 temp81_112))
(assert (= temp81_114 (select ARGNAME_stride_NAMEEND_VAL temp81_113)))
(assert (= temp81_115 #x0000000000000000))
(assert (= temp81_116 #x0000000000000001))
(assert (= temp81_117 temp81_116))
(assert (= temp81_118 (select ARGNAME_stride_NAMEEND_VAL temp81_117)))
(assert (= temp81_119 #x0000000000000000))
(assert (= temp81_120 #x0000000000000002))
(assert (= temp81_121 temp81_120))
(assert (= temp81_122 (select ARGNAME_stride_NAMEEND_VAL temp81_121)))
(assert (= temp81_123 #x0000000000000000))
(assert (= temp81_124 #x0000000000000003))
(assert (= temp81_125 temp81_124))
(assert (= temp81_126 (select ARGNAME_stride_NAMEEND_VAL temp81_125)))
(assert (= temp81_127 #x0000000000000000))
(assert (= temp81_128 #x0000000000000004))
(assert (= temp81_129 temp81_128))
(assert (= temp81_130 (select ARGNAME_stride_NAMEEND_VAL temp81_129)))
(assert (= temp81_131 #x0000000000000000))
(assert (= temp81_132 #x0000000000000005))
(assert (= temp81_133 temp81_132))
(assert (= temp81_134 (select ARGNAME_stride_NAMEEND_VAL temp81_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp81_114 temp81_111)
             (bvsle temp81_118 temp81_115)
             (bvsle temp81_122 temp81_119)
             (bvsle temp81_126 temp81_123)
             (bvsle temp81_130 temp81_127)
             (bvsle temp81_134 temp81_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp81_135 #x0000000000000000))
(assert (= var1191735 temp81_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp81_136 #x0000000000000001))
(assert (= var1191747 temp81_136))
(assert (= temp81_137 #x0000000000000000))
(assert (= var1179826 temp81_137))
(assert (= temp81_138 #x0000000000000000))
(assert (= temp81_139 temp81_138))
(assert (= temp81_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp81_139)))
(assert (= temp81_141 #x0000000000000001))
(assert (= temp81_142 temp81_141))
(assert (= temp81_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp81_142)))
(assert (= temp81_144 #x0000000000000002))
(assert (= temp81_145 temp81_144))
(assert (= temp81_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp81_145)))
(assert (= temp81_147 #x0000000000000003))
(assert (= temp81_148 temp81_147))
(assert (= temp81_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp81_148)))
(assert (= temp81_150 #x0000000000000004))
(assert (= temp81_151 temp81_150))
(assert (= temp81_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp81_151)))
(assert (= temp81_153 #x0000000000000005))
(assert (= temp81_154 temp81_153))
(assert (= temp81_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp81_154)))
(assert (= temp81_157 var1179826))
(assert (= temp81_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp81_157)))
(assert (= temp81_156 temp81_158))
(assert (= var1191780
   (ite (bvslt temp81_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp81_159 #x0000000000000000))
(assert (= var1191780 temp81_159))
(assert (= temp81_160 #x0000000000000000))
(assert (= var1179826 temp81_160))
(assert (= temp81_162 var1179826))
(assert (= temp81_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp81_162)))
(assert (= temp81_161 temp81_163))
(assert (= var1191802 (bvsmod temp81_161 ARGNAME_groups_NAMEEND)))
(assert (= temp81_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp81_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp81_165 #x0000000000000001))
(assert (= var1191803 temp81_165))
(assert (= temp81_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp81_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp81_167 #x0000000000000001))
(assert (= var1191823 temp81_167))
(assert (= temp81_168 #x0000000000000001))
(assert (= var1180714 temp81_168))
(assert (= temp81_169 #x0000000000000000))
(assert (= temp81_170 temp81_169))
(assert (= temp81_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp81_170)))
(assert (= temp81_172 #x0000000000000001))
(assert (= temp81_173 temp81_172))
(assert (= temp81_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp81_173)))
(assert (= temp81_175 #x0000000000000002))
(assert (= temp81_176 temp81_175))
(assert (= temp81_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp81_176)))
(assert (= temp81_178 #x0000000000000003))
(assert (= temp81_179 temp81_178))
(assert (= temp81_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp81_179)))
(assert (= temp81_181 #x0000000000000004))
(assert (= temp81_182 temp81_181))
(assert (= temp81_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp81_182)))
(assert (= temp81_184 #x0000000000000005))
(assert (= temp81_185 temp81_184))
(assert (= temp81_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp81_185)))
(assert (= temp81_187 #x0000000000000000))
(assert (= temp81_188
   (ite (bvslt var1180714 temp81_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp81_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp81_188)))
(assert (= var1191831 temp81_189))
(assert (bvslt (ite (bvslt var1180714 temp81_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp81_190 #x0000000000000001))
(assert (= var1180714 temp81_190))
(assert (= temp81_192 var1180714))
(assert (= temp81_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp81_192)))
(assert (= temp81_191 temp81_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp81_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp81_194 #x0000000000000001))
(assert (= var1191836 temp81_194))
(assert (= temp81_195 #x0000000000000000))
(assert (= var1179826 temp81_195))
(assert (= temp81_197 var1179826))
(assert (= temp81_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp81_197)))
(assert (= temp81_196 temp81_198))
(assert (= temp81_199 #x0000000000000002))
(assert (= var1586025 temp81_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp81_200 #x0000000000000001))
(assert (= var1191993 temp81_200))
(assert (= temp81_201 #x0000000000000001))
(assert (= var2700303 temp81_201))
(assert (= temp81_202 #x0000000000000001))
(assert (= var2962447 temp81_202))
(assert (= temp81_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp81_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp81_204 #x0000000000000001))
(assert (= var211058 temp81_204))
(assert (= temp81_205 #x0000000000000001))
(assert (= var211188 temp81_205))
(assert (= var3879401 var211188))
(assert (= temp81_206 #x0000000000000000))
(assert (= var3866802 temp81_206))
(assert (= temp81_207 #x0000000000000000))
(assert (= temp81_208
   (ite (bvslt var3866802 temp81_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp81_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp81_208)))
(assert (= var3879420 temp81_209))
(assert (bvslt (ite (bvslt var3866802 temp81_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp81_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp81_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp81_211 #x0000000000000001))
(assert (= var3879421 temp81_211))
(assert (= temp81_212 #x0000000000000000))
(assert (= var4079423 temp81_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp81_213 #x0000000000000002))
(assert (= var4208259 temp81_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp81_214 #x0000000000000000))
(assert (= var4273820 temp81_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211494 var210913))
(assert (= temp81_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp81_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp81_217 #x0000000000000001))
(assert (= temp81_216 temp81_217))
(assert (= temp81_218 #x0000000000000001))
(assert (= var6753770 temp81_218))
(assert (= temp81_220 #xffffffffffffffff))
(assert (= temp81_219 temp81_220))
(assert (= temp81_221 #x0000000000000001))
(assert (= var211058 temp81_221))
(model-add temp81_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp81_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp81_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp81_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



