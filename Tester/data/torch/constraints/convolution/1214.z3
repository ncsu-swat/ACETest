(declare-fun temp10349_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10349_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10349_3 () (_ BitVec 64))
(declare-fun temp10349_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10349_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10349_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10349_7 () (_ BitVec 64))
(declare-fun temp10349_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10349_9 () (_ BitVec 64))
(declare-fun temp10349_10 () (_ BitVec 64))
(declare-fun temp10349_11 () (_ BitVec 64))
(declare-fun temp10349_12 () (_ BitVec 64))
(declare-fun temp10349_13 () (_ BitVec 64))
(declare-fun temp10349_14 () (_ BitVec 64))
(declare-fun temp10349_15 () (_ BitVec 64))
(declare-fun temp10349_16 () (_ BitVec 64))
(declare-fun temp10349_17 () (_ BitVec 64))
(declare-fun temp10349_18 () (_ BitVec 64))
(declare-fun temp10349_19 () (_ BitVec 64))
(declare-fun temp10349_20 () (_ BitVec 64))
(declare-fun temp10349_21 () (_ BitVec 64))
(declare-fun temp10349_22 () (_ BitVec 64))
(declare-fun temp10349_23 () (_ BitVec 64))
(declare-fun temp10349_24 () (_ BitVec 64))
(declare-fun temp10349_25 () (_ BitVec 64))
(declare-fun temp10349_26 () (_ BitVec 64))
(declare-fun temp10349_27 () (_ BitVec 64))
(declare-fun temp10349_28 () (_ BitVec 64))
(declare-fun temp10349_29 () (_ BitVec 64))
(declare-fun temp10349_30 () (_ BitVec 64))
(declare-fun temp10349_31 () (_ BitVec 64))
(declare-fun temp10349_32 () (_ BitVec 64))
(declare-fun temp10349_33 () (_ BitVec 64))
(declare-fun temp10349_34 () (_ BitVec 64))
(declare-fun temp10349_35 () (_ BitVec 64))
(declare-fun temp10349_36 () (_ BitVec 64))
(declare-fun temp10349_37 () (_ BitVec 64))
(declare-fun temp10349_38 () (_ BitVec 64))
(declare-fun temp10349_39 () (_ BitVec 64))
(declare-fun temp10349_40 () (_ BitVec 64))
(declare-fun temp10349_41 () (_ BitVec 64))
(declare-fun temp10349_42 () (_ BitVec 64))
(declare-fun temp10349_43 () (_ BitVec 64))
(declare-fun temp10349_44 () (_ BitVec 64))
(declare-fun temp10349_45 () (_ BitVec 64))
(declare-fun temp10349_46 () (_ BitVec 64))
(declare-fun temp10349_47 () (_ BitVec 64))
(declare-fun temp10349_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10349_49 () (_ BitVec 64))
(declare-fun temp10349_50 () (_ BitVec 64))
(declare-fun temp10349_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10349_52 () (_ BitVec 64))
(declare-fun temp10349_53 () (_ BitVec 64))
(declare-fun temp10349_54 () (_ BitVec 64))
(declare-fun temp10349_55 () (_ BitVec 64))
(declare-fun temp10349_56 () (_ BitVec 64))
(declare-fun temp10349_57 () (_ BitVec 64))
(declare-fun temp10349_58 () (_ BitVec 64))
(declare-fun temp10349_59 () (_ BitVec 64))
(declare-fun temp10349_60 () (_ BitVec 64))
(declare-fun temp10349_61 () (_ BitVec 64))
(declare-fun temp10349_62 () (_ BitVec 64))
(declare-fun temp10349_63 () (_ BitVec 64))
(declare-fun temp10349_64 () (_ BitVec 64))
(declare-fun temp10349_65 () (_ BitVec 64))
(declare-fun temp10349_66 () (_ BitVec 64))
(declare-fun temp10349_67 () (_ BitVec 64))
(declare-fun temp10349_68 () (_ BitVec 64))
(declare-fun temp10349_69 () (_ BitVec 64))
(declare-fun temp10349_70 () (_ BitVec 64))
(declare-fun temp10349_71 () (_ BitVec 64))
(declare-fun temp10349_72 () (_ BitVec 64))
(declare-fun temp10349_73 () (_ BitVec 64))
(declare-fun temp10349_74 () (_ BitVec 64))
(declare-fun temp10349_75 () (_ BitVec 64))
(declare-fun temp10349_76 () (_ BitVec 64))
(declare-fun temp10349_77 () (_ BitVec 64))
(declare-fun temp10349_78 () (_ BitVec 64))
(declare-fun temp10349_79 () (_ BitVec 64))
(declare-fun temp10349_80 () (_ BitVec 64))
(declare-fun temp10349_81 () (_ BitVec 64))
(declare-fun temp10349_82 () (_ BitVec 64))
(declare-fun temp10349_83 () (_ BitVec 64))
(declare-fun temp10349_84 () (_ BitVec 64))
(declare-fun temp10349_85 () (_ BitVec 64))
(declare-fun temp10349_86 () (_ BitVec 64))
(declare-fun temp10349_87 () (_ BitVec 64))
(declare-fun temp10349_88 () (_ BitVec 64))
(declare-fun temp10349_89 () (_ BitVec 64))
(declare-fun temp10349_90 () (_ BitVec 64))
(declare-fun temp10349_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10349_92 () (_ BitVec 64))
(declare-fun temp10349_93 () (_ BitVec 64))
(declare-fun temp10349_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10349_95 () (_ BitVec 64))
(declare-fun temp10349_96 () (_ BitVec 64))
(declare-fun temp10349_97 () (_ BitVec 64))
(declare-fun temp10349_98 () (_ BitVec 64))
(declare-fun temp10349_99 () (_ BitVec 64))
(declare-fun temp10349_100 () (_ BitVec 64))
(declare-fun temp10349_101 () (_ BitVec 64))
(declare-fun temp10349_102 () (_ BitVec 64))
(declare-fun temp10349_103 () (_ BitVec 64))
(declare-fun temp10349_104 () (_ BitVec 64))
(declare-fun temp10349_105 () (_ BitVec 64))
(declare-fun temp10349_106 () (_ BitVec 64))
(declare-fun temp10349_107 () (_ BitVec 64))
(declare-fun temp10349_108 () (_ BitVec 64))
(declare-fun temp10349_109 () (_ BitVec 64))
(declare-fun temp10349_110 () (_ BitVec 64))
(declare-fun temp10349_111 () (_ BitVec 64))
(declare-fun temp10349_112 () (_ BitVec 64))
(declare-fun temp10349_113 () (_ BitVec 64))
(declare-fun temp10349_114 () (_ BitVec 64))
(declare-fun temp10349_115 () (_ BitVec 64))
(declare-fun temp10349_116 () (_ BitVec 64))
(declare-fun temp10349_117 () (_ BitVec 64))
(declare-fun temp10349_118 () (_ BitVec 64))
(declare-fun temp10349_119 () (_ BitVec 64))
(declare-fun temp10349_120 () (_ BitVec 64))
(declare-fun temp10349_121 () (_ BitVec 64))
(declare-fun temp10349_122 () (_ BitVec 64))
(declare-fun temp10349_123 () (_ BitVec 64))
(declare-fun temp10349_124 () (_ BitVec 64))
(declare-fun temp10349_125 () (_ BitVec 64))
(declare-fun temp10349_126 () (_ BitVec 64))
(declare-fun temp10349_127 () (_ BitVec 64))
(declare-fun temp10349_128 () (_ BitVec 64))
(declare-fun temp10349_129 () (_ BitVec 64))
(declare-fun temp10349_130 () (_ BitVec 64))
(declare-fun temp10349_131 () (_ BitVec 64))
(declare-fun temp10349_132 () (_ BitVec 64))
(declare-fun temp10349_133 () (_ BitVec 64))
(declare-fun temp10349_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10349_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10349_136 () (_ BitVec 64))
(declare-fun temp10349_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10349_138 () (_ BitVec 64))
(declare-fun temp10349_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10349_140 () (_ BitVec 64))
(declare-fun temp10349_141 () (_ BitVec 64))
(declare-fun temp10349_142 () (_ BitVec 64))
(declare-fun temp10349_143 () (_ BitVec 64))
(declare-fun temp10349_144 () (_ BitVec 64))
(declare-fun temp10349_145 () (_ BitVec 64))
(declare-fun temp10349_146 () (_ BitVec 64))
(declare-fun temp10349_147 () (_ BitVec 64))
(declare-fun temp10349_148 () (_ BitVec 64))
(declare-fun temp10349_149 () (_ BitVec 64))
(declare-fun temp10349_150 () (_ BitVec 64))
(declare-fun temp10349_151 () (_ BitVec 64))
(declare-fun temp10349_152 () (_ BitVec 64))
(declare-fun temp10349_153 () (_ BitVec 64))
(declare-fun temp10349_154 () (_ BitVec 64))
(declare-fun temp10349_155 () (_ BitVec 64))
(declare-fun temp10349_157 () (_ BitVec 64))
(declare-fun temp10349_158 () (_ BitVec 64))
(declare-fun temp10349_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10349_159 () (_ BitVec 64))
(declare-fun temp10349_160 () (_ BitVec 64))
(declare-fun temp10349_162 () (_ BitVec 64))
(declare-fun temp10349_163 () (_ BitVec 64))
(declare-fun temp10349_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10349_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10349_165 () (_ BitVec 64))
(declare-fun temp10349_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10349_167 () (_ BitVec 64))
(declare-fun temp10349_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10349_169 () (_ BitVec 64))
(declare-fun temp10349_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10349_171 () (_ BitVec 64))
(declare-fun temp10349_172 () (_ BitVec 64))
(declare-fun temp10349_173 () (_ BitVec 64))
(declare-fun temp10349_174 () (_ BitVec 64))
(declare-fun temp10349_175 () (_ BitVec 64))
(declare-fun temp10349_176 () (_ BitVec 64))
(declare-fun temp10349_177 () (_ BitVec 64))
(declare-fun temp10349_178 () (_ BitVec 64))
(declare-fun temp10349_179 () (_ BitVec 64))
(declare-fun temp10349_180 () (_ BitVec 64))
(declare-fun temp10349_181 () (_ BitVec 64))
(declare-fun temp10349_182 () (_ BitVec 64))
(declare-fun temp10349_183 () (_ BitVec 64))
(declare-fun temp10349_184 () (_ BitVec 64))
(declare-fun temp10349_185 () (_ BitVec 64))
(declare-fun temp10349_186 () (_ BitVec 64))
(declare-fun temp10349_187 () (_ BitVec 64))
(declare-fun temp10349_188 () (_ BitVec 64))
(declare-fun temp10349_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10349_190 () (_ BitVec 64))
(declare-fun temp10349_192 () (_ BitVec 64))
(declare-fun temp10349_193 () (_ BitVec 64))
(declare-fun temp10349_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10349_194 () (_ BitVec 64))
(declare-fun temp10349_195 () (_ BitVec 64))
(declare-fun temp10349_197 () (_ BitVec 64))
(declare-fun temp10349_198 () (_ BitVec 64))
(declare-fun temp10349_196 () (_ BitVec 64))
(declare-fun temp10349_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10349_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10349_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10349_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10349_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10349_204 () (_ BitVec 64))
(declare-fun temp10349_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10349_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10349_207 () (_ BitVec 64))
(declare-fun temp10349_208 () (_ BitVec 64))
(declare-fun temp10349_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10349_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10349_211 () (_ BitVec 64))
(declare-fun temp10349_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10349_213 () (_ BitVec 64))
(declare-fun temp10349_214 () (_ BitVec 64))
(declare-fun temp10349_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10349_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10349_217 () (_ BitVec 64))
(declare-fun temp10349_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10349_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10349_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun temp10349_221 () (_ BitVec 64))
(assert (= temp10349_1 #x0000000000000001))
(assert (= var77203 temp10349_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10349_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10349_2)))
(assert (= temp10349_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10349_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10349_4 #x0000000000000000))
(assert (= var210941 temp10349_4))
(assert (= temp10349_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10349_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10349_6 #x0000000000000000))
(assert (= var210986 temp10349_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10349_7 #x0000000000000000))
(assert (= temp10349_8 temp10349_7))
(assert (= temp10349_9 (select ARGNAME_padding_NAMEEND_VAL temp10349_8)))
(assert (= temp10349_10 #x0000000000000001))
(assert (= temp10349_11 temp10349_10))
(assert (= temp10349_12 (select ARGNAME_padding_NAMEEND_VAL temp10349_11)))
(assert (= temp10349_13 #x0000000000000002))
(assert (= temp10349_14 temp10349_13))
(assert (= temp10349_15 (select ARGNAME_padding_NAMEEND_VAL temp10349_14)))
(assert (= temp10349_16 #x0000000000000003))
(assert (= temp10349_17 temp10349_16))
(assert (= temp10349_18 (select ARGNAME_padding_NAMEEND_VAL temp10349_17)))
(assert (= temp10349_19 #x0000000000000004))
(assert (= temp10349_20 temp10349_19))
(assert (= temp10349_21 (select ARGNAME_padding_NAMEEND_VAL temp10349_20)))
(assert (= temp10349_22 #x0000000000000005))
(assert (= temp10349_23 temp10349_22))
(assert (= temp10349_24 (select ARGNAME_padding_NAMEEND_VAL temp10349_23)))
(assert (= temp10349_25 #x0000000000000000))
(assert (= temp10349_26 #x0000000000000000))
(assert (= temp10349_27 temp10349_26))
(assert (= temp10349_28 (select ARGNAME_padding_NAMEEND_VAL temp10349_27)))
(assert (= temp10349_29 #x0000000000000000))
(assert (= temp10349_30 #x0000000000000001))
(assert (= temp10349_31 temp10349_30))
(assert (= temp10349_32 (select ARGNAME_padding_NAMEEND_VAL temp10349_31)))
(assert (= temp10349_33 #x0000000000000000))
(assert (= temp10349_34 #x0000000000000002))
(assert (= temp10349_35 temp10349_34))
(assert (= temp10349_36 (select ARGNAME_padding_NAMEEND_VAL temp10349_35)))
(assert (= temp10349_37 #x0000000000000000))
(assert (= temp10349_38 #x0000000000000003))
(assert (= temp10349_39 temp10349_38))
(assert (= temp10349_40 (select ARGNAME_padding_NAMEEND_VAL temp10349_39)))
(assert (= temp10349_41 #x0000000000000000))
(assert (= temp10349_42 #x0000000000000004))
(assert (= temp10349_43 temp10349_42))
(assert (= temp10349_44 (select ARGNAME_padding_NAMEEND_VAL temp10349_43)))
(assert (= temp10349_45 #x0000000000000000))
(assert (= temp10349_46 #x0000000000000005))
(assert (= temp10349_47 temp10349_46))
(assert (= temp10349_48 (select ARGNAME_padding_NAMEEND_VAL temp10349_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10349_28 temp10349_25)
             (bvslt temp10349_32 temp10349_29)
             (bvslt temp10349_36 temp10349_33)
             (bvslt temp10349_40 temp10349_37)
             (bvslt temp10349_44 temp10349_41)
             (bvslt temp10349_48 temp10349_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10349_49 #x0000000000000000))
(assert (= var1191714 temp10349_49))
(assert (= temp10349_50 #x0000000000000000))
(assert (= temp10349_51 temp10349_50))
(assert (= temp10349_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10349_51)))
(assert (= temp10349_53 #x0000000000000001))
(assert (= temp10349_54 temp10349_53))
(assert (= temp10349_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10349_54)))
(assert (= temp10349_56 #x0000000000000002))
(assert (= temp10349_57 temp10349_56))
(assert (= temp10349_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10349_57)))
(assert (= temp10349_59 #x0000000000000003))
(assert (= temp10349_60 temp10349_59))
(assert (= temp10349_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10349_60)))
(assert (= temp10349_62 #x0000000000000004))
(assert (= temp10349_63 temp10349_62))
(assert (= temp10349_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10349_63)))
(assert (= temp10349_65 #x0000000000000005))
(assert (= temp10349_66 temp10349_65))
(assert (= temp10349_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10349_66)))
(assert (= temp10349_68 #x0000000000000000))
(assert (= temp10349_69 #x0000000000000000))
(assert (= temp10349_70 temp10349_69))
(assert (= temp10349_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10349_70)))
(assert (= temp10349_72 #x0000000000000000))
(assert (= temp10349_73 #x0000000000000001))
(assert (= temp10349_74 temp10349_73))
(assert (= temp10349_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10349_74)))
(assert (= temp10349_76 #x0000000000000000))
(assert (= temp10349_77 #x0000000000000002))
(assert (= temp10349_78 temp10349_77))
(assert (= temp10349_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10349_78)))
(assert (= temp10349_80 #x0000000000000000))
(assert (= temp10349_81 #x0000000000000003))
(assert (= temp10349_82 temp10349_81))
(assert (= temp10349_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10349_82)))
(assert (= temp10349_84 #x0000000000000000))
(assert (= temp10349_85 #x0000000000000004))
(assert (= temp10349_86 temp10349_85))
(assert (= temp10349_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10349_86)))
(assert (= temp10349_88 #x0000000000000000))
(assert (= temp10349_89 #x0000000000000005))
(assert (= temp10349_90 temp10349_89))
(assert (= temp10349_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10349_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10349_71 temp10349_68)
             (bvslt temp10349_75 temp10349_72)
             (bvslt temp10349_79 temp10349_76)
             (bvslt temp10349_83 temp10349_80)
             (bvslt temp10349_87 temp10349_84)
             (bvslt temp10349_91 temp10349_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10349_92 #x0000000000000000))
(assert (= var1191725 temp10349_92))
(assert (= temp10349_93 #x0000000000000000))
(assert (= temp10349_94 temp10349_93))
(assert (= temp10349_95 (select ARGNAME_stride_NAMEEND_VAL temp10349_94)))
(assert (= temp10349_96 #x0000000000000001))
(assert (= temp10349_97 temp10349_96))
(assert (= temp10349_98 (select ARGNAME_stride_NAMEEND_VAL temp10349_97)))
(assert (= temp10349_99 #x0000000000000002))
(assert (= temp10349_100 temp10349_99))
(assert (= temp10349_101 (select ARGNAME_stride_NAMEEND_VAL temp10349_100)))
(assert (= temp10349_102 #x0000000000000003))
(assert (= temp10349_103 temp10349_102))
(assert (= temp10349_104 (select ARGNAME_stride_NAMEEND_VAL temp10349_103)))
(assert (= temp10349_105 #x0000000000000004))
(assert (= temp10349_106 temp10349_105))
(assert (= temp10349_107 (select ARGNAME_stride_NAMEEND_VAL temp10349_106)))
(assert (= temp10349_108 #x0000000000000005))
(assert (= temp10349_109 temp10349_108))
(assert (= temp10349_110 (select ARGNAME_stride_NAMEEND_VAL temp10349_109)))
(assert (= temp10349_111 #x0000000000000000))
(assert (= temp10349_112 #x0000000000000000))
(assert (= temp10349_113 temp10349_112))
(assert (= temp10349_114 (select ARGNAME_stride_NAMEEND_VAL temp10349_113)))
(assert (= temp10349_115 #x0000000000000000))
(assert (= temp10349_116 #x0000000000000001))
(assert (= temp10349_117 temp10349_116))
(assert (= temp10349_118 (select ARGNAME_stride_NAMEEND_VAL temp10349_117)))
(assert (= temp10349_119 #x0000000000000000))
(assert (= temp10349_120 #x0000000000000002))
(assert (= temp10349_121 temp10349_120))
(assert (= temp10349_122 (select ARGNAME_stride_NAMEEND_VAL temp10349_121)))
(assert (= temp10349_123 #x0000000000000000))
(assert (= temp10349_124 #x0000000000000003))
(assert (= temp10349_125 temp10349_124))
(assert (= temp10349_126 (select ARGNAME_stride_NAMEEND_VAL temp10349_125)))
(assert (= temp10349_127 #x0000000000000000))
(assert (= temp10349_128 #x0000000000000004))
(assert (= temp10349_129 temp10349_128))
(assert (= temp10349_130 (select ARGNAME_stride_NAMEEND_VAL temp10349_129)))
(assert (= temp10349_131 #x0000000000000000))
(assert (= temp10349_132 #x0000000000000005))
(assert (= temp10349_133 temp10349_132))
(assert (= temp10349_134 (select ARGNAME_stride_NAMEEND_VAL temp10349_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10349_114 temp10349_111)
             (bvsle temp10349_118 temp10349_115)
             (bvsle temp10349_122 temp10349_119)
             (bvsle temp10349_126 temp10349_123)
             (bvsle temp10349_130 temp10349_127)
             (bvsle temp10349_134 temp10349_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10349_135 #x0000000000000000))
(assert (= var1191735 temp10349_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10349_136 #x0000000000000001))
(assert (= var1191747 temp10349_136))
(assert (= temp10349_137 #x0000000000000000))
(assert (= var1179826 temp10349_137))
(assert (= temp10349_138 #x0000000000000000))
(assert (= temp10349_139 temp10349_138))
(assert (= temp10349_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10349_139)))
(assert (= temp10349_141 #x0000000000000001))
(assert (= temp10349_142 temp10349_141))
(assert (= temp10349_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10349_142)))
(assert (= temp10349_144 #x0000000000000002))
(assert (= temp10349_145 temp10349_144))
(assert (= temp10349_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10349_145)))
(assert (= temp10349_147 #x0000000000000003))
(assert (= temp10349_148 temp10349_147))
(assert (= temp10349_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10349_148)))
(assert (= temp10349_150 #x0000000000000004))
(assert (= temp10349_151 temp10349_150))
(assert (= temp10349_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10349_151)))
(assert (= temp10349_153 #x0000000000000005))
(assert (= temp10349_154 temp10349_153))
(assert (= temp10349_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10349_154)))
(assert (= temp10349_157 var1179826))
(assert (= temp10349_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10349_157)))
(assert (= temp10349_156 temp10349_158))
(assert (= var1191780
   (ite (bvslt temp10349_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10349_159 #x0000000000000000))
(assert (= var1191780 temp10349_159))
(assert (= temp10349_160 #x0000000000000000))
(assert (= var1179826 temp10349_160))
(assert (= temp10349_162 var1179826))
(assert (= temp10349_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10349_162)))
(assert (= temp10349_161 temp10349_163))
(assert (= var1191802 (bvsmod temp10349_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10349_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10349_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10349_165 #x0000000000000001))
(assert (= var1191803 temp10349_165))
(assert (= temp10349_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10349_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10349_167 #x0000000000000001))
(assert (= var1191823 temp10349_167))
(assert (= temp10349_168 #x0000000000000001))
(assert (= var1180714 temp10349_168))
(assert (= temp10349_169 #x0000000000000000))
(assert (= temp10349_170 temp10349_169))
(assert (= temp10349_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10349_170)))
(assert (= temp10349_172 #x0000000000000001))
(assert (= temp10349_173 temp10349_172))
(assert (= temp10349_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10349_173)))
(assert (= temp10349_175 #x0000000000000002))
(assert (= temp10349_176 temp10349_175))
(assert (= temp10349_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10349_176)))
(assert (= temp10349_178 #x0000000000000003))
(assert (= temp10349_179 temp10349_178))
(assert (= temp10349_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10349_179)))
(assert (= temp10349_181 #x0000000000000004))
(assert (= temp10349_182 temp10349_181))
(assert (= temp10349_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10349_182)))
(assert (= temp10349_184 #x0000000000000005))
(assert (= temp10349_185 temp10349_184))
(assert (= temp10349_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10349_185)))
(assert (= temp10349_187 #x0000000000000000))
(assert (= temp10349_188
   (ite (bvslt var1180714 temp10349_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10349_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10349_188)))
(assert (= var1191831 temp10349_189))
(assert (bvslt (ite (bvslt var1180714 temp10349_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10349_190 #x0000000000000001))
(assert (= var1180714 temp10349_190))
(assert (= temp10349_192 var1180714))
(assert (= temp10349_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10349_192)))
(assert (= temp10349_191 temp10349_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10349_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10349_194 #x0000000000000001))
(assert (= var1191836 temp10349_194))
(assert (= temp10349_195 #x0000000000000000))
(assert (= var1179826 temp10349_195))
(assert (= temp10349_197 var1179826))
(assert (= temp10349_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10349_197)))
(assert (= temp10349_196 temp10349_198))
(assert (= temp10349_199 #x0000000000000002))
(assert (= var1586025 temp10349_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10349_200 #x0000000000000001))
(assert (= var1191993 temp10349_200))
(assert (= temp10349_201 #x0000000000000001))
(assert (= var2700303 temp10349_201))
(assert (= temp10349_202 #x0000000000000001))
(assert (= var2962447 temp10349_202))
(assert (= temp10349_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10349_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10349_204 #x0000000000000001))
(assert (= var211058 temp10349_204))
(assert (= temp10349_205 #x0000000000000001))
(assert (= var211188 temp10349_205))
(assert (= var3879401 var211188))
(assert (= temp10349_206 #x0000000000000000))
(assert (= var3866802 temp10349_206))
(assert (= temp10349_207 #x0000000000000000))
(assert (= temp10349_208
   (ite (bvslt var3866802 temp10349_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10349_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10349_208)))
(assert (= var3879420 temp10349_209))
(assert (bvslt (ite (bvslt var3866802 temp10349_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10349_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10349_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10349_211 #x0000000000000000))
(assert (= var3879421 temp10349_211))
(assert (= temp10349_212 #x0000000000000001))
(assert (= var3867690 temp10349_212))
(assert (= temp10349_213 #x0000000000000000))
(assert (= temp10349_214
   (ite (bvslt var3867690 temp10349_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10349_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10349_214)))
(assert (= var3879423 temp10349_215))
(assert (bvslt (ite (bvslt var3867690 temp10349_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10349_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10349_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10349_217 #x0000000000000001))
(assert (= var3879424 temp10349_217))
(assert (= temp10349_218 #x0000000000000000))
(assert (= var4079423 temp10349_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10349_219 #x0000000000000002))
(assert (= var4208259 temp10349_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10349_220 #x0000000000000000))
(assert (= var4273820 temp10349_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5124496 var211201))
(assert (= var5386640 var211201))
(assert (= temp10349_221 #x0000000000000001))
(assert (= var211058 temp10349_221))
(model-add temp10349_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10349_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10349_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10349_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




