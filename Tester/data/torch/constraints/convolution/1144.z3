(declare-fun temp10256_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10256_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10256_3 () (_ BitVec 64))
(declare-fun temp10256_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10256_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10256_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10256_7 () (_ BitVec 64))
(declare-fun temp10256_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10256_9 () (_ BitVec 64))
(declare-fun temp10256_10 () (_ BitVec 64))
(declare-fun temp10256_11 () (_ BitVec 64))
(declare-fun temp10256_12 () (_ BitVec 64))
(declare-fun temp10256_13 () (_ BitVec 64))
(declare-fun temp10256_14 () (_ BitVec 64))
(declare-fun temp10256_15 () (_ BitVec 64))
(declare-fun temp10256_16 () (_ BitVec 64))
(declare-fun temp10256_17 () (_ BitVec 64))
(declare-fun temp10256_18 () (_ BitVec 64))
(declare-fun temp10256_19 () (_ BitVec 64))
(declare-fun temp10256_20 () (_ BitVec 64))
(declare-fun temp10256_21 () (_ BitVec 64))
(declare-fun temp10256_22 () (_ BitVec 64))
(declare-fun temp10256_23 () (_ BitVec 64))
(declare-fun temp10256_24 () (_ BitVec 64))
(declare-fun temp10256_25 () (_ BitVec 64))
(declare-fun temp10256_26 () (_ BitVec 64))
(declare-fun temp10256_27 () (_ BitVec 64))
(declare-fun temp10256_28 () (_ BitVec 64))
(declare-fun temp10256_29 () (_ BitVec 64))
(declare-fun temp10256_30 () (_ BitVec 64))
(declare-fun temp10256_31 () (_ BitVec 64))
(declare-fun temp10256_32 () (_ BitVec 64))
(declare-fun temp10256_33 () (_ BitVec 64))
(declare-fun temp10256_34 () (_ BitVec 64))
(declare-fun temp10256_35 () (_ BitVec 64))
(declare-fun temp10256_36 () (_ BitVec 64))
(declare-fun temp10256_37 () (_ BitVec 64))
(declare-fun temp10256_38 () (_ BitVec 64))
(declare-fun temp10256_39 () (_ BitVec 64))
(declare-fun temp10256_40 () (_ BitVec 64))
(declare-fun temp10256_41 () (_ BitVec 64))
(declare-fun temp10256_42 () (_ BitVec 64))
(declare-fun temp10256_43 () (_ BitVec 64))
(declare-fun temp10256_44 () (_ BitVec 64))
(declare-fun temp10256_45 () (_ BitVec 64))
(declare-fun temp10256_46 () (_ BitVec 64))
(declare-fun temp10256_47 () (_ BitVec 64))
(declare-fun temp10256_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10256_49 () (_ BitVec 64))
(declare-fun temp10256_50 () (_ BitVec 64))
(declare-fun temp10256_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10256_52 () (_ BitVec 64))
(declare-fun temp10256_53 () (_ BitVec 64))
(declare-fun temp10256_54 () (_ BitVec 64))
(declare-fun temp10256_55 () (_ BitVec 64))
(declare-fun temp10256_56 () (_ BitVec 64))
(declare-fun temp10256_57 () (_ BitVec 64))
(declare-fun temp10256_58 () (_ BitVec 64))
(declare-fun temp10256_59 () (_ BitVec 64))
(declare-fun temp10256_60 () (_ BitVec 64))
(declare-fun temp10256_61 () (_ BitVec 64))
(declare-fun temp10256_62 () (_ BitVec 64))
(declare-fun temp10256_63 () (_ BitVec 64))
(declare-fun temp10256_64 () (_ BitVec 64))
(declare-fun temp10256_65 () (_ BitVec 64))
(declare-fun temp10256_66 () (_ BitVec 64))
(declare-fun temp10256_67 () (_ BitVec 64))
(declare-fun temp10256_68 () (_ BitVec 64))
(declare-fun temp10256_69 () (_ BitVec 64))
(declare-fun temp10256_70 () (_ BitVec 64))
(declare-fun temp10256_71 () (_ BitVec 64))
(declare-fun temp10256_72 () (_ BitVec 64))
(declare-fun temp10256_73 () (_ BitVec 64))
(declare-fun temp10256_74 () (_ BitVec 64))
(declare-fun temp10256_75 () (_ BitVec 64))
(declare-fun temp10256_76 () (_ BitVec 64))
(declare-fun temp10256_77 () (_ BitVec 64))
(declare-fun temp10256_78 () (_ BitVec 64))
(declare-fun temp10256_79 () (_ BitVec 64))
(declare-fun temp10256_80 () (_ BitVec 64))
(declare-fun temp10256_81 () (_ BitVec 64))
(declare-fun temp10256_82 () (_ BitVec 64))
(declare-fun temp10256_83 () (_ BitVec 64))
(declare-fun temp10256_84 () (_ BitVec 64))
(declare-fun temp10256_85 () (_ BitVec 64))
(declare-fun temp10256_86 () (_ BitVec 64))
(declare-fun temp10256_87 () (_ BitVec 64))
(declare-fun temp10256_88 () (_ BitVec 64))
(declare-fun temp10256_89 () (_ BitVec 64))
(declare-fun temp10256_90 () (_ BitVec 64))
(declare-fun temp10256_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10256_92 () (_ BitVec 64))
(declare-fun temp10256_93 () (_ BitVec 64))
(declare-fun temp10256_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10256_95 () (_ BitVec 64))
(declare-fun temp10256_96 () (_ BitVec 64))
(declare-fun temp10256_97 () (_ BitVec 64))
(declare-fun temp10256_98 () (_ BitVec 64))
(declare-fun temp10256_99 () (_ BitVec 64))
(declare-fun temp10256_100 () (_ BitVec 64))
(declare-fun temp10256_101 () (_ BitVec 64))
(declare-fun temp10256_102 () (_ BitVec 64))
(declare-fun temp10256_103 () (_ BitVec 64))
(declare-fun temp10256_104 () (_ BitVec 64))
(declare-fun temp10256_105 () (_ BitVec 64))
(declare-fun temp10256_106 () (_ BitVec 64))
(declare-fun temp10256_107 () (_ BitVec 64))
(declare-fun temp10256_108 () (_ BitVec 64))
(declare-fun temp10256_109 () (_ BitVec 64))
(declare-fun temp10256_110 () (_ BitVec 64))
(declare-fun temp10256_111 () (_ BitVec 64))
(declare-fun temp10256_112 () (_ BitVec 64))
(declare-fun temp10256_113 () (_ BitVec 64))
(declare-fun temp10256_114 () (_ BitVec 64))
(declare-fun temp10256_115 () (_ BitVec 64))
(declare-fun temp10256_116 () (_ BitVec 64))
(declare-fun temp10256_117 () (_ BitVec 64))
(declare-fun temp10256_118 () (_ BitVec 64))
(declare-fun temp10256_119 () (_ BitVec 64))
(declare-fun temp10256_120 () (_ BitVec 64))
(declare-fun temp10256_121 () (_ BitVec 64))
(declare-fun temp10256_122 () (_ BitVec 64))
(declare-fun temp10256_123 () (_ BitVec 64))
(declare-fun temp10256_124 () (_ BitVec 64))
(declare-fun temp10256_125 () (_ BitVec 64))
(declare-fun temp10256_126 () (_ BitVec 64))
(declare-fun temp10256_127 () (_ BitVec 64))
(declare-fun temp10256_128 () (_ BitVec 64))
(declare-fun temp10256_129 () (_ BitVec 64))
(declare-fun temp10256_130 () (_ BitVec 64))
(declare-fun temp10256_131 () (_ BitVec 64))
(declare-fun temp10256_132 () (_ BitVec 64))
(declare-fun temp10256_133 () (_ BitVec 64))
(declare-fun temp10256_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10256_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10256_136 () (_ BitVec 64))
(declare-fun temp10256_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10256_138 () (_ BitVec 64))
(declare-fun temp10256_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10256_140 () (_ BitVec 64))
(declare-fun temp10256_141 () (_ BitVec 64))
(declare-fun temp10256_142 () (_ BitVec 64))
(declare-fun temp10256_143 () (_ BitVec 64))
(declare-fun temp10256_144 () (_ BitVec 64))
(declare-fun temp10256_145 () (_ BitVec 64))
(declare-fun temp10256_146 () (_ BitVec 64))
(declare-fun temp10256_147 () (_ BitVec 64))
(declare-fun temp10256_148 () (_ BitVec 64))
(declare-fun temp10256_149 () (_ BitVec 64))
(declare-fun temp10256_150 () (_ BitVec 64))
(declare-fun temp10256_151 () (_ BitVec 64))
(declare-fun temp10256_152 () (_ BitVec 64))
(declare-fun temp10256_153 () (_ BitVec 64))
(declare-fun temp10256_154 () (_ BitVec 64))
(declare-fun temp10256_155 () (_ BitVec 64))
(declare-fun temp10256_157 () (_ BitVec 64))
(declare-fun temp10256_158 () (_ BitVec 64))
(declare-fun temp10256_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10256_159 () (_ BitVec 64))
(declare-fun temp10256_160 () (_ BitVec 64))
(declare-fun temp10256_162 () (_ BitVec 64))
(declare-fun temp10256_163 () (_ BitVec 64))
(declare-fun temp10256_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10256_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10256_165 () (_ BitVec 64))
(declare-fun temp10256_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10256_167 () (_ BitVec 64))
(declare-fun temp10256_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10256_169 () (_ BitVec 64))
(declare-fun temp10256_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10256_171 () (_ BitVec 64))
(declare-fun temp10256_172 () (_ BitVec 64))
(declare-fun temp10256_173 () (_ BitVec 64))
(declare-fun temp10256_174 () (_ BitVec 64))
(declare-fun temp10256_175 () (_ BitVec 64))
(declare-fun temp10256_176 () (_ BitVec 64))
(declare-fun temp10256_177 () (_ BitVec 64))
(declare-fun temp10256_178 () (_ BitVec 64))
(declare-fun temp10256_179 () (_ BitVec 64))
(declare-fun temp10256_180 () (_ BitVec 64))
(declare-fun temp10256_181 () (_ BitVec 64))
(declare-fun temp10256_182 () (_ BitVec 64))
(declare-fun temp10256_183 () (_ BitVec 64))
(declare-fun temp10256_184 () (_ BitVec 64))
(declare-fun temp10256_185 () (_ BitVec 64))
(declare-fun temp10256_186 () (_ BitVec 64))
(declare-fun temp10256_187 () (_ BitVec 64))
(declare-fun temp10256_188 () (_ BitVec 64))
(declare-fun temp10256_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10256_190 () (_ BitVec 64))
(declare-fun temp10256_192 () (_ BitVec 64))
(declare-fun temp10256_193 () (_ BitVec 64))
(declare-fun temp10256_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10256_194 () (_ BitVec 64))
(declare-fun temp10256_195 () (_ BitVec 64))
(declare-fun temp10256_197 () (_ BitVec 64))
(declare-fun temp10256_198 () (_ BitVec 64))
(declare-fun temp10256_196 () (_ BitVec 64))
(declare-fun temp10256_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10256_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10256_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10256_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10256_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10256_204 () (_ BitVec 64))
(declare-fun temp10256_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10256_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10256_207 () (_ BitVec 64))
(declare-fun temp10256_208 () (_ BitVec 64))
(declare-fun temp10256_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10256_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10256_211 () (_ BitVec 64))
(declare-fun temp10256_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10256_213 () (_ BitVec 64))
(declare-fun temp10256_214 () (_ BitVec 64))
(declare-fun temp10256_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10256_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10256_217 () (_ BitVec 64))
(declare-fun temp10256_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10256_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10256_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10256_221 () (_ BitVec 64))
(assert (= temp10256_1 #x0000000000000001))
(assert (= var77203 temp10256_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10256_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10256_2)))
(assert (= temp10256_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10256_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10256_4 #x0000000000000000))
(assert (= var210941 temp10256_4))
(assert (= temp10256_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10256_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10256_6 #x0000000000000000))
(assert (= var210986 temp10256_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10256_7 #x0000000000000000))
(assert (= temp10256_8 temp10256_7))
(assert (= temp10256_9 (select ARGNAME_padding_NAMEEND_VAL temp10256_8)))
(assert (= temp10256_10 #x0000000000000001))
(assert (= temp10256_11 temp10256_10))
(assert (= temp10256_12 (select ARGNAME_padding_NAMEEND_VAL temp10256_11)))
(assert (= temp10256_13 #x0000000000000002))
(assert (= temp10256_14 temp10256_13))
(assert (= temp10256_15 (select ARGNAME_padding_NAMEEND_VAL temp10256_14)))
(assert (= temp10256_16 #x0000000000000003))
(assert (= temp10256_17 temp10256_16))
(assert (= temp10256_18 (select ARGNAME_padding_NAMEEND_VAL temp10256_17)))
(assert (= temp10256_19 #x0000000000000004))
(assert (= temp10256_20 temp10256_19))
(assert (= temp10256_21 (select ARGNAME_padding_NAMEEND_VAL temp10256_20)))
(assert (= temp10256_22 #x0000000000000005))
(assert (= temp10256_23 temp10256_22))
(assert (= temp10256_24 (select ARGNAME_padding_NAMEEND_VAL temp10256_23)))
(assert (= temp10256_25 #x0000000000000000))
(assert (= temp10256_26 #x0000000000000000))
(assert (= temp10256_27 temp10256_26))
(assert (= temp10256_28 (select ARGNAME_padding_NAMEEND_VAL temp10256_27)))
(assert (= temp10256_29 #x0000000000000000))
(assert (= temp10256_30 #x0000000000000001))
(assert (= temp10256_31 temp10256_30))
(assert (= temp10256_32 (select ARGNAME_padding_NAMEEND_VAL temp10256_31)))
(assert (= temp10256_33 #x0000000000000000))
(assert (= temp10256_34 #x0000000000000002))
(assert (= temp10256_35 temp10256_34))
(assert (= temp10256_36 (select ARGNAME_padding_NAMEEND_VAL temp10256_35)))
(assert (= temp10256_37 #x0000000000000000))
(assert (= temp10256_38 #x0000000000000003))
(assert (= temp10256_39 temp10256_38))
(assert (= temp10256_40 (select ARGNAME_padding_NAMEEND_VAL temp10256_39)))
(assert (= temp10256_41 #x0000000000000000))
(assert (= temp10256_42 #x0000000000000004))
(assert (= temp10256_43 temp10256_42))
(assert (= temp10256_44 (select ARGNAME_padding_NAMEEND_VAL temp10256_43)))
(assert (= temp10256_45 #x0000000000000000))
(assert (= temp10256_46 #x0000000000000005))
(assert (= temp10256_47 temp10256_46))
(assert (= temp10256_48 (select ARGNAME_padding_NAMEEND_VAL temp10256_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10256_28 temp10256_25)
             (bvslt temp10256_32 temp10256_29)
             (bvslt temp10256_36 temp10256_33)
             (bvslt temp10256_40 temp10256_37)
             (bvslt temp10256_44 temp10256_41)
             (bvslt temp10256_48 temp10256_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10256_49 #x0000000000000000))
(assert (= var1191714 temp10256_49))
(assert (= temp10256_50 #x0000000000000000))
(assert (= temp10256_51 temp10256_50))
(assert (= temp10256_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10256_51)))
(assert (= temp10256_53 #x0000000000000001))
(assert (= temp10256_54 temp10256_53))
(assert (= temp10256_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10256_54)))
(assert (= temp10256_56 #x0000000000000002))
(assert (= temp10256_57 temp10256_56))
(assert (= temp10256_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10256_57)))
(assert (= temp10256_59 #x0000000000000003))
(assert (= temp10256_60 temp10256_59))
(assert (= temp10256_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10256_60)))
(assert (= temp10256_62 #x0000000000000004))
(assert (= temp10256_63 temp10256_62))
(assert (= temp10256_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10256_63)))
(assert (= temp10256_65 #x0000000000000005))
(assert (= temp10256_66 temp10256_65))
(assert (= temp10256_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10256_66)))
(assert (= temp10256_68 #x0000000000000000))
(assert (= temp10256_69 #x0000000000000000))
(assert (= temp10256_70 temp10256_69))
(assert (= temp10256_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10256_70)))
(assert (= temp10256_72 #x0000000000000000))
(assert (= temp10256_73 #x0000000000000001))
(assert (= temp10256_74 temp10256_73))
(assert (= temp10256_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10256_74)))
(assert (= temp10256_76 #x0000000000000000))
(assert (= temp10256_77 #x0000000000000002))
(assert (= temp10256_78 temp10256_77))
(assert (= temp10256_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10256_78)))
(assert (= temp10256_80 #x0000000000000000))
(assert (= temp10256_81 #x0000000000000003))
(assert (= temp10256_82 temp10256_81))
(assert (= temp10256_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10256_82)))
(assert (= temp10256_84 #x0000000000000000))
(assert (= temp10256_85 #x0000000000000004))
(assert (= temp10256_86 temp10256_85))
(assert (= temp10256_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10256_86)))
(assert (= temp10256_88 #x0000000000000000))
(assert (= temp10256_89 #x0000000000000005))
(assert (= temp10256_90 temp10256_89))
(assert (= temp10256_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10256_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10256_71 temp10256_68)
             (bvslt temp10256_75 temp10256_72)
             (bvslt temp10256_79 temp10256_76)
             (bvslt temp10256_83 temp10256_80)
             (bvslt temp10256_87 temp10256_84)
             (bvslt temp10256_91 temp10256_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10256_92 #x0000000000000000))
(assert (= var1191725 temp10256_92))
(assert (= temp10256_93 #x0000000000000000))
(assert (= temp10256_94 temp10256_93))
(assert (= temp10256_95 (select ARGNAME_stride_NAMEEND_VAL temp10256_94)))
(assert (= temp10256_96 #x0000000000000001))
(assert (= temp10256_97 temp10256_96))
(assert (= temp10256_98 (select ARGNAME_stride_NAMEEND_VAL temp10256_97)))
(assert (= temp10256_99 #x0000000000000002))
(assert (= temp10256_100 temp10256_99))
(assert (= temp10256_101 (select ARGNAME_stride_NAMEEND_VAL temp10256_100)))
(assert (= temp10256_102 #x0000000000000003))
(assert (= temp10256_103 temp10256_102))
(assert (= temp10256_104 (select ARGNAME_stride_NAMEEND_VAL temp10256_103)))
(assert (= temp10256_105 #x0000000000000004))
(assert (= temp10256_106 temp10256_105))
(assert (= temp10256_107 (select ARGNAME_stride_NAMEEND_VAL temp10256_106)))
(assert (= temp10256_108 #x0000000000000005))
(assert (= temp10256_109 temp10256_108))
(assert (= temp10256_110 (select ARGNAME_stride_NAMEEND_VAL temp10256_109)))
(assert (= temp10256_111 #x0000000000000000))
(assert (= temp10256_112 #x0000000000000000))
(assert (= temp10256_113 temp10256_112))
(assert (= temp10256_114 (select ARGNAME_stride_NAMEEND_VAL temp10256_113)))
(assert (= temp10256_115 #x0000000000000000))
(assert (= temp10256_116 #x0000000000000001))
(assert (= temp10256_117 temp10256_116))
(assert (= temp10256_118 (select ARGNAME_stride_NAMEEND_VAL temp10256_117)))
(assert (= temp10256_119 #x0000000000000000))
(assert (= temp10256_120 #x0000000000000002))
(assert (= temp10256_121 temp10256_120))
(assert (= temp10256_122 (select ARGNAME_stride_NAMEEND_VAL temp10256_121)))
(assert (= temp10256_123 #x0000000000000000))
(assert (= temp10256_124 #x0000000000000003))
(assert (= temp10256_125 temp10256_124))
(assert (= temp10256_126 (select ARGNAME_stride_NAMEEND_VAL temp10256_125)))
(assert (= temp10256_127 #x0000000000000000))
(assert (= temp10256_128 #x0000000000000004))
(assert (= temp10256_129 temp10256_128))
(assert (= temp10256_130 (select ARGNAME_stride_NAMEEND_VAL temp10256_129)))
(assert (= temp10256_131 #x0000000000000000))
(assert (= temp10256_132 #x0000000000000005))
(assert (= temp10256_133 temp10256_132))
(assert (= temp10256_134 (select ARGNAME_stride_NAMEEND_VAL temp10256_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10256_114 temp10256_111)
             (bvsle temp10256_118 temp10256_115)
             (bvsle temp10256_122 temp10256_119)
             (bvsle temp10256_126 temp10256_123)
             (bvsle temp10256_130 temp10256_127)
             (bvsle temp10256_134 temp10256_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10256_135 #x0000000000000000))
(assert (= var1191735 temp10256_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10256_136 #x0000000000000001))
(assert (= var1191747 temp10256_136))
(assert (= temp10256_137 #x0000000000000000))
(assert (= var1179826 temp10256_137))
(assert (= temp10256_138 #x0000000000000000))
(assert (= temp10256_139 temp10256_138))
(assert (= temp10256_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10256_139)))
(assert (= temp10256_141 #x0000000000000001))
(assert (= temp10256_142 temp10256_141))
(assert (= temp10256_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10256_142)))
(assert (= temp10256_144 #x0000000000000002))
(assert (= temp10256_145 temp10256_144))
(assert (= temp10256_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10256_145)))
(assert (= temp10256_147 #x0000000000000003))
(assert (= temp10256_148 temp10256_147))
(assert (= temp10256_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10256_148)))
(assert (= temp10256_150 #x0000000000000004))
(assert (= temp10256_151 temp10256_150))
(assert (= temp10256_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10256_151)))
(assert (= temp10256_153 #x0000000000000005))
(assert (= temp10256_154 temp10256_153))
(assert (= temp10256_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10256_154)))
(assert (= temp10256_157 var1179826))
(assert (= temp10256_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10256_157)))
(assert (= temp10256_156 temp10256_158))
(assert (= var1191780
   (ite (bvslt temp10256_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10256_159 #x0000000000000000))
(assert (= var1191780 temp10256_159))
(assert (= temp10256_160 #x0000000000000000))
(assert (= var1179826 temp10256_160))
(assert (= temp10256_162 var1179826))
(assert (= temp10256_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10256_162)))
(assert (= temp10256_161 temp10256_163))
(assert (= var1191802 (bvsmod temp10256_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10256_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10256_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10256_165 #x0000000000000001))
(assert (= var1191803 temp10256_165))
(assert (= temp10256_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10256_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10256_167 #x0000000000000001))
(assert (= var1191823 temp10256_167))
(assert (= temp10256_168 #x0000000000000001))
(assert (= var1180714 temp10256_168))
(assert (= temp10256_169 #x0000000000000000))
(assert (= temp10256_170 temp10256_169))
(assert (= temp10256_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10256_170)))
(assert (= temp10256_172 #x0000000000000001))
(assert (= temp10256_173 temp10256_172))
(assert (= temp10256_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10256_173)))
(assert (= temp10256_175 #x0000000000000002))
(assert (= temp10256_176 temp10256_175))
(assert (= temp10256_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10256_176)))
(assert (= temp10256_178 #x0000000000000003))
(assert (= temp10256_179 temp10256_178))
(assert (= temp10256_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10256_179)))
(assert (= temp10256_181 #x0000000000000004))
(assert (= temp10256_182 temp10256_181))
(assert (= temp10256_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10256_182)))
(assert (= temp10256_184 #x0000000000000005))
(assert (= temp10256_185 temp10256_184))
(assert (= temp10256_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10256_185)))
(assert (= temp10256_187 #x0000000000000000))
(assert (= temp10256_188
   (ite (bvslt var1180714 temp10256_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10256_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10256_188)))
(assert (= var1191831 temp10256_189))
(assert (bvslt (ite (bvslt var1180714 temp10256_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10256_190 #x0000000000000001))
(assert (= var1180714 temp10256_190))
(assert (= temp10256_192 var1180714))
(assert (= temp10256_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10256_192)))
(assert (= temp10256_191 temp10256_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10256_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10256_194 #x0000000000000001))
(assert (= var1191836 temp10256_194))
(assert (= temp10256_195 #x0000000000000000))
(assert (= var1179826 temp10256_195))
(assert (= temp10256_197 var1179826))
(assert (= temp10256_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10256_197)))
(assert (= temp10256_196 temp10256_198))
(assert (= temp10256_199 #x0000000000000002))
(assert (= var1586025 temp10256_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10256_200 #x0000000000000001))
(assert (= var1191993 temp10256_200))
(assert (= temp10256_201 #x0000000000000001))
(assert (= var2700303 temp10256_201))
(assert (= temp10256_202 #x0000000000000001))
(assert (= var2962447 temp10256_202))
(assert (= temp10256_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10256_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10256_204 #x0000000000000001))
(assert (= var211058 temp10256_204))
(assert (= temp10256_205 #x0000000000000001))
(assert (= var211188 temp10256_205))
(assert (= var3879401 var211188))
(assert (= temp10256_206 #x0000000000000000))
(assert (= var3866802 temp10256_206))
(assert (= temp10256_207 #x0000000000000000))
(assert (= temp10256_208
   (ite (bvslt var3866802 temp10256_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10256_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10256_208)))
(assert (= var3879420 temp10256_209))
(assert (bvslt (ite (bvslt var3866802 temp10256_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10256_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10256_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10256_211 #x0000000000000000))
(assert (= var3879421 temp10256_211))
(assert (= temp10256_212 #x0000000000000001))
(assert (= var3867690 temp10256_212))
(assert (= temp10256_213 #x0000000000000000))
(assert (= temp10256_214
   (ite (bvslt var3867690 temp10256_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10256_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10256_214)))
(assert (= var3879423 temp10256_215))
(assert (bvslt (ite (bvslt var3867690 temp10256_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10256_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10256_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10256_217 #x0000000000000001))
(assert (= var3879424 temp10256_217))
(assert (= temp10256_218 #x0000000000000000))
(assert (= var4079423 temp10256_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10256_219 #x0000000000000002))
(assert (= var4208259 temp10256_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10256_220 #x0000000000000000))
(assert (= var4273820 temp10256_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10256_221 #x0000000000000001))
(assert (= var211058 temp10256_221))
(model-add temp10256_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10256_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10256_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10256_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




