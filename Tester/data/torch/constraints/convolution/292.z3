(declare-fun temp389_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp389_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp389_3 () (_ BitVec 64))
(declare-fun temp389_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp389_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp389_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp389_7 () (_ BitVec 64))
(declare-fun temp389_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp389_9 () (_ BitVec 64))
(declare-fun temp389_10 () (_ BitVec 64))
(declare-fun temp389_11 () (_ BitVec 64))
(declare-fun temp389_12 () (_ BitVec 64))
(declare-fun temp389_13 () (_ BitVec 64))
(declare-fun temp389_14 () (_ BitVec 64))
(declare-fun temp389_15 () (_ BitVec 64))
(declare-fun temp389_16 () (_ BitVec 64))
(declare-fun temp389_17 () (_ BitVec 64))
(declare-fun temp389_18 () (_ BitVec 64))
(declare-fun temp389_19 () (_ BitVec 64))
(declare-fun temp389_20 () (_ BitVec 64))
(declare-fun temp389_21 () (_ BitVec 64))
(declare-fun temp389_22 () (_ BitVec 64))
(declare-fun temp389_23 () (_ BitVec 64))
(declare-fun temp389_24 () (_ BitVec 64))
(declare-fun temp389_25 () (_ BitVec 64))
(declare-fun temp389_26 () (_ BitVec 64))
(declare-fun temp389_27 () (_ BitVec 64))
(declare-fun temp389_28 () (_ BitVec 64))
(declare-fun temp389_29 () (_ BitVec 64))
(declare-fun temp389_30 () (_ BitVec 64))
(declare-fun temp389_31 () (_ BitVec 64))
(declare-fun temp389_32 () (_ BitVec 64))
(declare-fun temp389_33 () (_ BitVec 64))
(declare-fun temp389_34 () (_ BitVec 64))
(declare-fun temp389_35 () (_ BitVec 64))
(declare-fun temp389_36 () (_ BitVec 64))
(declare-fun temp389_37 () (_ BitVec 64))
(declare-fun temp389_38 () (_ BitVec 64))
(declare-fun temp389_39 () (_ BitVec 64))
(declare-fun temp389_40 () (_ BitVec 64))
(declare-fun temp389_41 () (_ BitVec 64))
(declare-fun temp389_42 () (_ BitVec 64))
(declare-fun temp389_43 () (_ BitVec 64))
(declare-fun temp389_44 () (_ BitVec 64))
(declare-fun temp389_45 () (_ BitVec 64))
(declare-fun temp389_46 () (_ BitVec 64))
(declare-fun temp389_47 () (_ BitVec 64))
(declare-fun temp389_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp389_49 () (_ BitVec 64))
(declare-fun temp389_50 () (_ BitVec 64))
(declare-fun temp389_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp389_52 () (_ BitVec 64))
(declare-fun temp389_53 () (_ BitVec 64))
(declare-fun temp389_54 () (_ BitVec 64))
(declare-fun temp389_55 () (_ BitVec 64))
(declare-fun temp389_56 () (_ BitVec 64))
(declare-fun temp389_57 () (_ BitVec 64))
(declare-fun temp389_58 () (_ BitVec 64))
(declare-fun temp389_59 () (_ BitVec 64))
(declare-fun temp389_60 () (_ BitVec 64))
(declare-fun temp389_61 () (_ BitVec 64))
(declare-fun temp389_62 () (_ BitVec 64))
(declare-fun temp389_63 () (_ BitVec 64))
(declare-fun temp389_64 () (_ BitVec 64))
(declare-fun temp389_65 () (_ BitVec 64))
(declare-fun temp389_66 () (_ BitVec 64))
(declare-fun temp389_67 () (_ BitVec 64))
(declare-fun temp389_68 () (_ BitVec 64))
(declare-fun temp389_69 () (_ BitVec 64))
(declare-fun temp389_70 () (_ BitVec 64))
(declare-fun temp389_71 () (_ BitVec 64))
(declare-fun temp389_72 () (_ BitVec 64))
(declare-fun temp389_73 () (_ BitVec 64))
(declare-fun temp389_74 () (_ BitVec 64))
(declare-fun temp389_75 () (_ BitVec 64))
(declare-fun temp389_76 () (_ BitVec 64))
(declare-fun temp389_77 () (_ BitVec 64))
(declare-fun temp389_78 () (_ BitVec 64))
(declare-fun temp389_79 () (_ BitVec 64))
(declare-fun temp389_80 () (_ BitVec 64))
(declare-fun temp389_81 () (_ BitVec 64))
(declare-fun temp389_82 () (_ BitVec 64))
(declare-fun temp389_83 () (_ BitVec 64))
(declare-fun temp389_84 () (_ BitVec 64))
(declare-fun temp389_85 () (_ BitVec 64))
(declare-fun temp389_86 () (_ BitVec 64))
(declare-fun temp389_87 () (_ BitVec 64))
(declare-fun temp389_88 () (_ BitVec 64))
(declare-fun temp389_89 () (_ BitVec 64))
(declare-fun temp389_90 () (_ BitVec 64))
(declare-fun temp389_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp389_92 () (_ BitVec 64))
(declare-fun temp389_93 () (_ BitVec 64))
(declare-fun temp389_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp389_95 () (_ BitVec 64))
(declare-fun temp389_96 () (_ BitVec 64))
(declare-fun temp389_97 () (_ BitVec 64))
(declare-fun temp389_98 () (_ BitVec 64))
(declare-fun temp389_99 () (_ BitVec 64))
(declare-fun temp389_100 () (_ BitVec 64))
(declare-fun temp389_101 () (_ BitVec 64))
(declare-fun temp389_102 () (_ BitVec 64))
(declare-fun temp389_103 () (_ BitVec 64))
(declare-fun temp389_104 () (_ BitVec 64))
(declare-fun temp389_105 () (_ BitVec 64))
(declare-fun temp389_106 () (_ BitVec 64))
(declare-fun temp389_107 () (_ BitVec 64))
(declare-fun temp389_108 () (_ BitVec 64))
(declare-fun temp389_109 () (_ BitVec 64))
(declare-fun temp389_110 () (_ BitVec 64))
(declare-fun temp389_111 () (_ BitVec 64))
(declare-fun temp389_112 () (_ BitVec 64))
(declare-fun temp389_113 () (_ BitVec 64))
(declare-fun temp389_114 () (_ BitVec 64))
(declare-fun temp389_115 () (_ BitVec 64))
(declare-fun temp389_116 () (_ BitVec 64))
(declare-fun temp389_117 () (_ BitVec 64))
(declare-fun temp389_118 () (_ BitVec 64))
(declare-fun temp389_119 () (_ BitVec 64))
(declare-fun temp389_120 () (_ BitVec 64))
(declare-fun temp389_121 () (_ BitVec 64))
(declare-fun temp389_122 () (_ BitVec 64))
(declare-fun temp389_123 () (_ BitVec 64))
(declare-fun temp389_124 () (_ BitVec 64))
(declare-fun temp389_125 () (_ BitVec 64))
(declare-fun temp389_126 () (_ BitVec 64))
(declare-fun temp389_127 () (_ BitVec 64))
(declare-fun temp389_128 () (_ BitVec 64))
(declare-fun temp389_129 () (_ BitVec 64))
(declare-fun temp389_130 () (_ BitVec 64))
(declare-fun temp389_131 () (_ BitVec 64))
(declare-fun temp389_132 () (_ BitVec 64))
(declare-fun temp389_133 () (_ BitVec 64))
(declare-fun temp389_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp389_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp389_136 () (_ BitVec 64))
(declare-fun temp389_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp389_138 () (_ BitVec 64))
(declare-fun temp389_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp389_140 () (_ BitVec 64))
(declare-fun temp389_141 () (_ BitVec 64))
(declare-fun temp389_142 () (_ BitVec 64))
(declare-fun temp389_143 () (_ BitVec 64))
(declare-fun temp389_144 () (_ BitVec 64))
(declare-fun temp389_145 () (_ BitVec 64))
(declare-fun temp389_146 () (_ BitVec 64))
(declare-fun temp389_147 () (_ BitVec 64))
(declare-fun temp389_148 () (_ BitVec 64))
(declare-fun temp389_149 () (_ BitVec 64))
(declare-fun temp389_150 () (_ BitVec 64))
(declare-fun temp389_151 () (_ BitVec 64))
(declare-fun temp389_152 () (_ BitVec 64))
(declare-fun temp389_153 () (_ BitVec 64))
(declare-fun temp389_154 () (_ BitVec 64))
(declare-fun temp389_155 () (_ BitVec 64))
(declare-fun temp389_157 () (_ BitVec 64))
(declare-fun temp389_158 () (_ BitVec 64))
(declare-fun temp389_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp389_159 () (_ BitVec 64))
(declare-fun temp389_160 () (_ BitVec 64))
(declare-fun temp389_162 () (_ BitVec 64))
(declare-fun temp389_163 () (_ BitVec 64))
(declare-fun temp389_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp389_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp389_165 () (_ BitVec 64))
(declare-fun temp389_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp389_167 () (_ BitVec 64))
(declare-fun temp389_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp389_169 () (_ BitVec 64))
(declare-fun temp389_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp389_171 () (_ BitVec 64))
(declare-fun temp389_172 () (_ BitVec 64))
(declare-fun temp389_173 () (_ BitVec 64))
(declare-fun temp389_174 () (_ BitVec 64))
(declare-fun temp389_175 () (_ BitVec 64))
(declare-fun temp389_176 () (_ BitVec 64))
(declare-fun temp389_177 () (_ BitVec 64))
(declare-fun temp389_178 () (_ BitVec 64))
(declare-fun temp389_179 () (_ BitVec 64))
(declare-fun temp389_180 () (_ BitVec 64))
(declare-fun temp389_181 () (_ BitVec 64))
(declare-fun temp389_182 () (_ BitVec 64))
(declare-fun temp389_183 () (_ BitVec 64))
(declare-fun temp389_184 () (_ BitVec 64))
(declare-fun temp389_185 () (_ BitVec 64))
(declare-fun temp389_186 () (_ BitVec 64))
(declare-fun temp389_187 () (_ BitVec 64))
(declare-fun temp389_188 () (_ BitVec 64))
(declare-fun temp389_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp389_190 () (_ BitVec 64))
(declare-fun temp389_192 () (_ BitVec 64))
(declare-fun temp389_193 () (_ BitVec 64))
(declare-fun temp389_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp389_194 () (_ BitVec 64))
(declare-fun temp389_195 () (_ BitVec 64))
(declare-fun temp389_197 () (_ BitVec 64))
(declare-fun temp389_198 () (_ BitVec 64))
(declare-fun temp389_196 () (_ BitVec 64))
(declare-fun temp389_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp389_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp389_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp389_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp389_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp389_204 () (_ BitVec 64))
(declare-fun temp389_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp389_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp389_207 () (_ BitVec 64))
(declare-fun temp389_208 () (_ BitVec 64))
(declare-fun temp389_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp389_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp389_211 () (_ BitVec 64))
(declare-fun temp389_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp389_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp389_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun temp389_215 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp389_216 () (_ BitVec 64))
(assert (= temp389_1 #x0000000000000001))
(assert (= var77203 temp389_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp389_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp389_2)))
(assert (= temp389_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp389_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_4 #x0000000000000000))
(assert (= var210941 temp389_4))
(assert (= temp389_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp389_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_6 #x0000000000000000))
(assert (= var210986 temp389_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp389_7 #x0000000000000000))
(assert (= temp389_8 temp389_7))
(assert (= temp389_9 (select ARGNAME_padding_NAMEEND_VAL temp389_8)))
(assert (= temp389_10 #x0000000000000001))
(assert (= temp389_11 temp389_10))
(assert (= temp389_12 (select ARGNAME_padding_NAMEEND_VAL temp389_11)))
(assert (= temp389_13 #x0000000000000002))
(assert (= temp389_14 temp389_13))
(assert (= temp389_15 (select ARGNAME_padding_NAMEEND_VAL temp389_14)))
(assert (= temp389_16 #x0000000000000003))
(assert (= temp389_17 temp389_16))
(assert (= temp389_18 (select ARGNAME_padding_NAMEEND_VAL temp389_17)))
(assert (= temp389_19 #x0000000000000004))
(assert (= temp389_20 temp389_19))
(assert (= temp389_21 (select ARGNAME_padding_NAMEEND_VAL temp389_20)))
(assert (= temp389_22 #x0000000000000005))
(assert (= temp389_23 temp389_22))
(assert (= temp389_24 (select ARGNAME_padding_NAMEEND_VAL temp389_23)))
(assert (= temp389_25 #x0000000000000000))
(assert (= temp389_26 #x0000000000000000))
(assert (= temp389_27 temp389_26))
(assert (= temp389_28 (select ARGNAME_padding_NAMEEND_VAL temp389_27)))
(assert (= temp389_29 #x0000000000000000))
(assert (= temp389_30 #x0000000000000001))
(assert (= temp389_31 temp389_30))
(assert (= temp389_32 (select ARGNAME_padding_NAMEEND_VAL temp389_31)))
(assert (= temp389_33 #x0000000000000000))
(assert (= temp389_34 #x0000000000000002))
(assert (= temp389_35 temp389_34))
(assert (= temp389_36 (select ARGNAME_padding_NAMEEND_VAL temp389_35)))
(assert (= temp389_37 #x0000000000000000))
(assert (= temp389_38 #x0000000000000003))
(assert (= temp389_39 temp389_38))
(assert (= temp389_40 (select ARGNAME_padding_NAMEEND_VAL temp389_39)))
(assert (= temp389_41 #x0000000000000000))
(assert (= temp389_42 #x0000000000000004))
(assert (= temp389_43 temp389_42))
(assert (= temp389_44 (select ARGNAME_padding_NAMEEND_VAL temp389_43)))
(assert (= temp389_45 #x0000000000000000))
(assert (= temp389_46 #x0000000000000005))
(assert (= temp389_47 temp389_46))
(assert (= temp389_48 (select ARGNAME_padding_NAMEEND_VAL temp389_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp389_28 temp389_25)
             (bvslt temp389_32 temp389_29)
             (bvslt temp389_36 temp389_33)
             (bvslt temp389_40 temp389_37)
             (bvslt temp389_44 temp389_41)
             (bvslt temp389_48 temp389_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_49 #x0000000000000000))
(assert (= var1191714 temp389_49))
(assert (= temp389_50 #x0000000000000000))
(assert (= temp389_51 temp389_50))
(assert (= temp389_52 (select ARGNAME_output_padding_NAMEEND_VAL temp389_51)))
(assert (= temp389_53 #x0000000000000001))
(assert (= temp389_54 temp389_53))
(assert (= temp389_55 (select ARGNAME_output_padding_NAMEEND_VAL temp389_54)))
(assert (= temp389_56 #x0000000000000002))
(assert (= temp389_57 temp389_56))
(assert (= temp389_58 (select ARGNAME_output_padding_NAMEEND_VAL temp389_57)))
(assert (= temp389_59 #x0000000000000003))
(assert (= temp389_60 temp389_59))
(assert (= temp389_61 (select ARGNAME_output_padding_NAMEEND_VAL temp389_60)))
(assert (= temp389_62 #x0000000000000004))
(assert (= temp389_63 temp389_62))
(assert (= temp389_64 (select ARGNAME_output_padding_NAMEEND_VAL temp389_63)))
(assert (= temp389_65 #x0000000000000005))
(assert (= temp389_66 temp389_65))
(assert (= temp389_67 (select ARGNAME_output_padding_NAMEEND_VAL temp389_66)))
(assert (= temp389_68 #x0000000000000000))
(assert (= temp389_69 #x0000000000000000))
(assert (= temp389_70 temp389_69))
(assert (= temp389_71 (select ARGNAME_output_padding_NAMEEND_VAL temp389_70)))
(assert (= temp389_72 #x0000000000000000))
(assert (= temp389_73 #x0000000000000001))
(assert (= temp389_74 temp389_73))
(assert (= temp389_75 (select ARGNAME_output_padding_NAMEEND_VAL temp389_74)))
(assert (= temp389_76 #x0000000000000000))
(assert (= temp389_77 #x0000000000000002))
(assert (= temp389_78 temp389_77))
(assert (= temp389_79 (select ARGNAME_output_padding_NAMEEND_VAL temp389_78)))
(assert (= temp389_80 #x0000000000000000))
(assert (= temp389_81 #x0000000000000003))
(assert (= temp389_82 temp389_81))
(assert (= temp389_83 (select ARGNAME_output_padding_NAMEEND_VAL temp389_82)))
(assert (= temp389_84 #x0000000000000000))
(assert (= temp389_85 #x0000000000000004))
(assert (= temp389_86 temp389_85))
(assert (= temp389_87 (select ARGNAME_output_padding_NAMEEND_VAL temp389_86)))
(assert (= temp389_88 #x0000000000000000))
(assert (= temp389_89 #x0000000000000005))
(assert (= temp389_90 temp389_89))
(assert (= temp389_91 (select ARGNAME_output_padding_NAMEEND_VAL temp389_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp389_71 temp389_68)
             (bvslt temp389_75 temp389_72)
             (bvslt temp389_79 temp389_76)
             (bvslt temp389_83 temp389_80)
             (bvslt temp389_87 temp389_84)
             (bvslt temp389_91 temp389_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_92 #x0000000000000000))
(assert (= var1191725 temp389_92))
(assert (= temp389_93 #x0000000000000000))
(assert (= temp389_94 temp389_93))
(assert (= temp389_95 (select ARGNAME_stride_NAMEEND_VAL temp389_94)))
(assert (= temp389_96 #x0000000000000001))
(assert (= temp389_97 temp389_96))
(assert (= temp389_98 (select ARGNAME_stride_NAMEEND_VAL temp389_97)))
(assert (= temp389_99 #x0000000000000002))
(assert (= temp389_100 temp389_99))
(assert (= temp389_101 (select ARGNAME_stride_NAMEEND_VAL temp389_100)))
(assert (= temp389_102 #x0000000000000003))
(assert (= temp389_103 temp389_102))
(assert (= temp389_104 (select ARGNAME_stride_NAMEEND_VAL temp389_103)))
(assert (= temp389_105 #x0000000000000004))
(assert (= temp389_106 temp389_105))
(assert (= temp389_107 (select ARGNAME_stride_NAMEEND_VAL temp389_106)))
(assert (= temp389_108 #x0000000000000005))
(assert (= temp389_109 temp389_108))
(assert (= temp389_110 (select ARGNAME_stride_NAMEEND_VAL temp389_109)))
(assert (= temp389_111 #x0000000000000000))
(assert (= temp389_112 #x0000000000000000))
(assert (= temp389_113 temp389_112))
(assert (= temp389_114 (select ARGNAME_stride_NAMEEND_VAL temp389_113)))
(assert (= temp389_115 #x0000000000000000))
(assert (= temp389_116 #x0000000000000001))
(assert (= temp389_117 temp389_116))
(assert (= temp389_118 (select ARGNAME_stride_NAMEEND_VAL temp389_117)))
(assert (= temp389_119 #x0000000000000000))
(assert (= temp389_120 #x0000000000000002))
(assert (= temp389_121 temp389_120))
(assert (= temp389_122 (select ARGNAME_stride_NAMEEND_VAL temp389_121)))
(assert (= temp389_123 #x0000000000000000))
(assert (= temp389_124 #x0000000000000003))
(assert (= temp389_125 temp389_124))
(assert (= temp389_126 (select ARGNAME_stride_NAMEEND_VAL temp389_125)))
(assert (= temp389_127 #x0000000000000000))
(assert (= temp389_128 #x0000000000000004))
(assert (= temp389_129 temp389_128))
(assert (= temp389_130 (select ARGNAME_stride_NAMEEND_VAL temp389_129)))
(assert (= temp389_131 #x0000000000000000))
(assert (= temp389_132 #x0000000000000005))
(assert (= temp389_133 temp389_132))
(assert (= temp389_134 (select ARGNAME_stride_NAMEEND_VAL temp389_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp389_114 temp389_111)
             (bvsle temp389_118 temp389_115)
             (bvsle temp389_122 temp389_119)
             (bvsle temp389_126 temp389_123)
             (bvsle temp389_130 temp389_127)
             (bvsle temp389_134 temp389_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_135 #x0000000000000000))
(assert (= var1191735 temp389_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_136 #x0000000000000001))
(assert (= var1191747 temp389_136))
(assert (= temp389_137 #x0000000000000000))
(assert (= var1179826 temp389_137))
(assert (= temp389_138 #x0000000000000000))
(assert (= temp389_139 temp389_138))
(assert (= temp389_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_139)))
(assert (= temp389_141 #x0000000000000001))
(assert (= temp389_142 temp389_141))
(assert (= temp389_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_142)))
(assert (= temp389_144 #x0000000000000002))
(assert (= temp389_145 temp389_144))
(assert (= temp389_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_145)))
(assert (= temp389_147 #x0000000000000003))
(assert (= temp389_148 temp389_147))
(assert (= temp389_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_148)))
(assert (= temp389_150 #x0000000000000004))
(assert (= temp389_151 temp389_150))
(assert (= temp389_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_151)))
(assert (= temp389_153 #x0000000000000005))
(assert (= temp389_154 temp389_153))
(assert (= temp389_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_154)))
(assert (= temp389_157 var1179826))
(assert (= temp389_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_157)))
(assert (= temp389_156 temp389_158))
(assert (= var1191780
   (ite (bvslt temp389_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_159 #x0000000000000000))
(assert (= var1191780 temp389_159))
(assert (= temp389_160 #x0000000000000000))
(assert (= var1179826 temp389_160))
(assert (= temp389_162 var1179826))
(assert (= temp389_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_162)))
(assert (= temp389_161 temp389_163))
(assert (= var1191802 (bvsmod temp389_161 ARGNAME_groups_NAMEEND)))
(assert (= temp389_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp389_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp389_165 #x0000000000000001))
(assert (= var1191803 temp389_165))
(assert (= temp389_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp389_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_167 #x0000000000000001))
(assert (= var1191823 temp389_167))
(assert (= temp389_168 #x0000000000000001))
(assert (= var1180714 temp389_168))
(assert (= temp389_169 #x0000000000000000))
(assert (= temp389_170 temp389_169))
(assert (= temp389_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp389_170)))
(assert (= temp389_172 #x0000000000000001))
(assert (= temp389_173 temp389_172))
(assert (= temp389_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp389_173)))
(assert (= temp389_175 #x0000000000000002))
(assert (= temp389_176 temp389_175))
(assert (= temp389_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp389_176)))
(assert (= temp389_178 #x0000000000000003))
(assert (= temp389_179 temp389_178))
(assert (= temp389_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp389_179)))
(assert (= temp389_181 #x0000000000000004))
(assert (= temp389_182 temp389_181))
(assert (= temp389_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp389_182)))
(assert (= temp389_184 #x0000000000000005))
(assert (= temp389_185 temp389_184))
(assert (= temp389_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp389_185)))
(assert (= temp389_187 #x0000000000000000))
(assert (= temp389_188
   (ite (bvslt var1180714 temp389_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp389_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp389_188)))
(assert (= var1191831 temp389_189))
(assert (bvslt (ite (bvslt var1180714 temp389_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp389_190 #x0000000000000001))
(assert (= var1180714 temp389_190))
(assert (= temp389_192 var1180714))
(assert (= temp389_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_192)))
(assert (= temp389_191 temp389_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp389_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp389_194 #x0000000000000001))
(assert (= var1191836 temp389_194))
(assert (= temp389_195 #x0000000000000000))
(assert (= var1179826 temp389_195))
(assert (= temp389_197 var1179826))
(assert (= temp389_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_197)))
(assert (= temp389_196 temp389_198))
(assert (= temp389_199 #x0000000000000002))
(assert (= var1586025 temp389_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp389_200 #x0000000000000001))
(assert (= var1191993 temp389_200))
(assert (= temp389_201 #x0000000000000001))
(assert (= var2700303 temp389_201))
(assert (= temp389_202 #x0000000000000001))
(assert (= var2962447 temp389_202))
(assert (= temp389_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp389_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_204 #x0000000000000001))
(assert (= var211058 temp389_204))
(assert (= temp389_205 #x0000000000000001))
(assert (= var211188 temp389_205))
(assert (= var3879401 var211188))
(assert (= temp389_206 #x0000000000000000))
(assert (= var3866802 temp389_206))
(assert (= temp389_207 #x0000000000000000))
(assert (= temp389_208
   (ite (bvslt var3866802 temp389_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp389_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp389_208)))
(assert (= var3879420 temp389_209))
(assert (bvslt (ite (bvslt var3866802 temp389_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp389_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp389_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp389_211 #x0000000000000001))
(assert (= var3879421 temp389_211))
(assert (= temp389_212 #x0000000000000000))
(assert (= var4079423 temp389_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp389_213 #x0000000000000002))
(assert (= var4208259 temp389_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_214 #x0000000000000000))
(assert (= var4273820 temp389_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5124496 var211201))
(assert (= var5386640 var211201))
(assert (= temp389_215 #x0000000000000000))
(assert (= var5714320 temp389_215))
(assert (= temp389_216 #x0000000000000001))
(assert (= var211058 temp389_216))
(model-add temp389_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp389_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp389_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp389_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



