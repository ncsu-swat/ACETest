(declare-fun temp1040_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1040_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1040_3 () (_ BitVec 64))
(declare-fun temp1040_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1040_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1040_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1040_7 () (_ BitVec 64))
(declare-fun temp1040_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1040_9 () (_ BitVec 64))
(declare-fun temp1040_10 () (_ BitVec 64))
(declare-fun temp1040_11 () (_ BitVec 64))
(declare-fun temp1040_12 () (_ BitVec 64))
(declare-fun temp1040_13 () (_ BitVec 64))
(declare-fun temp1040_14 () (_ BitVec 64))
(declare-fun temp1040_15 () (_ BitVec 64))
(declare-fun temp1040_16 () (_ BitVec 64))
(declare-fun temp1040_17 () (_ BitVec 64))
(declare-fun temp1040_18 () (_ BitVec 64))
(declare-fun temp1040_19 () (_ BitVec 64))
(declare-fun temp1040_20 () (_ BitVec 64))
(declare-fun temp1040_21 () (_ BitVec 64))
(declare-fun temp1040_22 () (_ BitVec 64))
(declare-fun temp1040_23 () (_ BitVec 64))
(declare-fun temp1040_24 () (_ BitVec 64))
(declare-fun temp1040_25 () (_ BitVec 64))
(declare-fun temp1040_26 () (_ BitVec 64))
(declare-fun temp1040_27 () (_ BitVec 64))
(declare-fun temp1040_28 () (_ BitVec 64))
(declare-fun temp1040_29 () (_ BitVec 64))
(declare-fun temp1040_30 () (_ BitVec 64))
(declare-fun temp1040_31 () (_ BitVec 64))
(declare-fun temp1040_32 () (_ BitVec 64))
(declare-fun temp1040_33 () (_ BitVec 64))
(declare-fun temp1040_34 () (_ BitVec 64))
(declare-fun temp1040_35 () (_ BitVec 64))
(declare-fun temp1040_36 () (_ BitVec 64))
(declare-fun temp1040_37 () (_ BitVec 64))
(declare-fun temp1040_38 () (_ BitVec 64))
(declare-fun temp1040_39 () (_ BitVec 64))
(declare-fun temp1040_40 () (_ BitVec 64))
(declare-fun temp1040_41 () (_ BitVec 64))
(declare-fun temp1040_42 () (_ BitVec 64))
(declare-fun temp1040_43 () (_ BitVec 64))
(declare-fun temp1040_44 () (_ BitVec 64))
(declare-fun temp1040_45 () (_ BitVec 64))
(declare-fun temp1040_46 () (_ BitVec 64))
(declare-fun temp1040_47 () (_ BitVec 64))
(declare-fun temp1040_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1040_49 () (_ BitVec 64))
(declare-fun temp1040_50 () (_ BitVec 64))
(declare-fun temp1040_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1040_52 () (_ BitVec 64))
(declare-fun temp1040_53 () (_ BitVec 64))
(declare-fun temp1040_54 () (_ BitVec 64))
(declare-fun temp1040_55 () (_ BitVec 64))
(declare-fun temp1040_56 () (_ BitVec 64))
(declare-fun temp1040_57 () (_ BitVec 64))
(declare-fun temp1040_58 () (_ BitVec 64))
(declare-fun temp1040_59 () (_ BitVec 64))
(declare-fun temp1040_60 () (_ BitVec 64))
(declare-fun temp1040_61 () (_ BitVec 64))
(declare-fun temp1040_62 () (_ BitVec 64))
(declare-fun temp1040_63 () (_ BitVec 64))
(declare-fun temp1040_64 () (_ BitVec 64))
(declare-fun temp1040_65 () (_ BitVec 64))
(declare-fun temp1040_66 () (_ BitVec 64))
(declare-fun temp1040_67 () (_ BitVec 64))
(declare-fun temp1040_68 () (_ BitVec 64))
(declare-fun temp1040_69 () (_ BitVec 64))
(declare-fun temp1040_70 () (_ BitVec 64))
(declare-fun temp1040_71 () (_ BitVec 64))
(declare-fun temp1040_72 () (_ BitVec 64))
(declare-fun temp1040_73 () (_ BitVec 64))
(declare-fun temp1040_74 () (_ BitVec 64))
(declare-fun temp1040_75 () (_ BitVec 64))
(declare-fun temp1040_76 () (_ BitVec 64))
(declare-fun temp1040_77 () (_ BitVec 64))
(declare-fun temp1040_78 () (_ BitVec 64))
(declare-fun temp1040_79 () (_ BitVec 64))
(declare-fun temp1040_80 () (_ BitVec 64))
(declare-fun temp1040_81 () (_ BitVec 64))
(declare-fun temp1040_82 () (_ BitVec 64))
(declare-fun temp1040_83 () (_ BitVec 64))
(declare-fun temp1040_84 () (_ BitVec 64))
(declare-fun temp1040_85 () (_ BitVec 64))
(declare-fun temp1040_86 () (_ BitVec 64))
(declare-fun temp1040_87 () (_ BitVec 64))
(declare-fun temp1040_88 () (_ BitVec 64))
(declare-fun temp1040_89 () (_ BitVec 64))
(declare-fun temp1040_90 () (_ BitVec 64))
(declare-fun temp1040_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1040_92 () (_ BitVec 64))
(declare-fun temp1040_93 () (_ BitVec 64))
(declare-fun temp1040_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1040_95 () (_ BitVec 64))
(declare-fun temp1040_96 () (_ BitVec 64))
(declare-fun temp1040_97 () (_ BitVec 64))
(declare-fun temp1040_98 () (_ BitVec 64))
(declare-fun temp1040_99 () (_ BitVec 64))
(declare-fun temp1040_100 () (_ BitVec 64))
(declare-fun temp1040_101 () (_ BitVec 64))
(declare-fun temp1040_102 () (_ BitVec 64))
(declare-fun temp1040_103 () (_ BitVec 64))
(declare-fun temp1040_104 () (_ BitVec 64))
(declare-fun temp1040_105 () (_ BitVec 64))
(declare-fun temp1040_106 () (_ BitVec 64))
(declare-fun temp1040_107 () (_ BitVec 64))
(declare-fun temp1040_108 () (_ BitVec 64))
(declare-fun temp1040_109 () (_ BitVec 64))
(declare-fun temp1040_110 () (_ BitVec 64))
(declare-fun temp1040_111 () (_ BitVec 64))
(declare-fun temp1040_112 () (_ BitVec 64))
(declare-fun temp1040_113 () (_ BitVec 64))
(declare-fun temp1040_114 () (_ BitVec 64))
(declare-fun temp1040_115 () (_ BitVec 64))
(declare-fun temp1040_116 () (_ BitVec 64))
(declare-fun temp1040_117 () (_ BitVec 64))
(declare-fun temp1040_118 () (_ BitVec 64))
(declare-fun temp1040_119 () (_ BitVec 64))
(declare-fun temp1040_120 () (_ BitVec 64))
(declare-fun temp1040_121 () (_ BitVec 64))
(declare-fun temp1040_122 () (_ BitVec 64))
(declare-fun temp1040_123 () (_ BitVec 64))
(declare-fun temp1040_124 () (_ BitVec 64))
(declare-fun temp1040_125 () (_ BitVec 64))
(declare-fun temp1040_126 () (_ BitVec 64))
(declare-fun temp1040_127 () (_ BitVec 64))
(declare-fun temp1040_128 () (_ BitVec 64))
(declare-fun temp1040_129 () (_ BitVec 64))
(declare-fun temp1040_130 () (_ BitVec 64))
(declare-fun temp1040_131 () (_ BitVec 64))
(declare-fun temp1040_132 () (_ BitVec 64))
(declare-fun temp1040_133 () (_ BitVec 64))
(declare-fun temp1040_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1040_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1040_136 () (_ BitVec 64))
(declare-fun temp1040_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1040_138 () (_ BitVec 64))
(declare-fun temp1040_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1040_140 () (_ BitVec 64))
(declare-fun temp1040_141 () (_ BitVec 64))
(declare-fun temp1040_142 () (_ BitVec 64))
(declare-fun temp1040_143 () (_ BitVec 64))
(declare-fun temp1040_144 () (_ BitVec 64))
(declare-fun temp1040_145 () (_ BitVec 64))
(declare-fun temp1040_146 () (_ BitVec 64))
(declare-fun temp1040_147 () (_ BitVec 64))
(declare-fun temp1040_148 () (_ BitVec 64))
(declare-fun temp1040_149 () (_ BitVec 64))
(declare-fun temp1040_150 () (_ BitVec 64))
(declare-fun temp1040_151 () (_ BitVec 64))
(declare-fun temp1040_152 () (_ BitVec 64))
(declare-fun temp1040_153 () (_ BitVec 64))
(declare-fun temp1040_154 () (_ BitVec 64))
(declare-fun temp1040_155 () (_ BitVec 64))
(declare-fun temp1040_157 () (_ BitVec 64))
(declare-fun temp1040_158 () (_ BitVec 64))
(declare-fun temp1040_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1040_159 () (_ BitVec 64))
(declare-fun temp1040_160 () (_ BitVec 64))
(declare-fun temp1040_162 () (_ BitVec 64))
(declare-fun temp1040_163 () (_ BitVec 64))
(declare-fun temp1040_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1040_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1040_165 () (_ BitVec 64))
(declare-fun temp1040_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1040_167 () (_ BitVec 64))
(declare-fun temp1040_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1040_169 () (_ BitVec 64))
(declare-fun temp1040_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1040_171 () (_ BitVec 64))
(declare-fun temp1040_172 () (_ BitVec 64))
(declare-fun temp1040_173 () (_ BitVec 64))
(declare-fun temp1040_174 () (_ BitVec 64))
(declare-fun temp1040_175 () (_ BitVec 64))
(declare-fun temp1040_176 () (_ BitVec 64))
(declare-fun temp1040_177 () (_ BitVec 64))
(declare-fun temp1040_178 () (_ BitVec 64))
(declare-fun temp1040_179 () (_ BitVec 64))
(declare-fun temp1040_180 () (_ BitVec 64))
(declare-fun temp1040_181 () (_ BitVec 64))
(declare-fun temp1040_182 () (_ BitVec 64))
(declare-fun temp1040_183 () (_ BitVec 64))
(declare-fun temp1040_184 () (_ BitVec 64))
(declare-fun temp1040_185 () (_ BitVec 64))
(declare-fun temp1040_186 () (_ BitVec 64))
(declare-fun temp1040_187 () (_ BitVec 64))
(declare-fun temp1040_188 () (_ BitVec 64))
(declare-fun temp1040_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1040_190 () (_ BitVec 64))
(declare-fun temp1040_192 () (_ BitVec 64))
(declare-fun temp1040_193 () (_ BitVec 64))
(declare-fun temp1040_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1040_194 () (_ BitVec 64))
(declare-fun temp1040_195 () (_ BitVec 64))
(declare-fun temp1040_197 () (_ BitVec 64))
(declare-fun temp1040_198 () (_ BitVec 64))
(declare-fun temp1040_196 () (_ BitVec 64))
(declare-fun temp1040_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1040_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1040_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1040_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1040_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1040_204 () (_ BitVec 64))
(declare-fun temp1040_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1040_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1040_207 () (_ BitVec 64))
(declare-fun temp1040_208 () (_ BitVec 64))
(declare-fun temp1040_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1040_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1040_211 () (_ BitVec 64))
(declare-fun temp1040_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1040_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1040_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp1040_215 () (_ BitVec 64))
(assert (= temp1040_1 #x0000000000000001))
(assert (= var77203 temp1040_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1040_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1040_2)))
(assert (= temp1040_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1040_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1040_4 #x0000000000000000))
(assert (= var210941 temp1040_4))
(assert (= temp1040_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1040_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1040_6 #x0000000000000000))
(assert (= var210986 temp1040_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1040_7 #x0000000000000000))
(assert (= temp1040_8 temp1040_7))
(assert (= temp1040_9 (select ARGNAME_padding_NAMEEND_VAL temp1040_8)))
(assert (= temp1040_10 #x0000000000000001))
(assert (= temp1040_11 temp1040_10))
(assert (= temp1040_12 (select ARGNAME_padding_NAMEEND_VAL temp1040_11)))
(assert (= temp1040_13 #x0000000000000002))
(assert (= temp1040_14 temp1040_13))
(assert (= temp1040_15 (select ARGNAME_padding_NAMEEND_VAL temp1040_14)))
(assert (= temp1040_16 #x0000000000000003))
(assert (= temp1040_17 temp1040_16))
(assert (= temp1040_18 (select ARGNAME_padding_NAMEEND_VAL temp1040_17)))
(assert (= temp1040_19 #x0000000000000004))
(assert (= temp1040_20 temp1040_19))
(assert (= temp1040_21 (select ARGNAME_padding_NAMEEND_VAL temp1040_20)))
(assert (= temp1040_22 #x0000000000000005))
(assert (= temp1040_23 temp1040_22))
(assert (= temp1040_24 (select ARGNAME_padding_NAMEEND_VAL temp1040_23)))
(assert (= temp1040_25 #x0000000000000000))
(assert (= temp1040_26 #x0000000000000000))
(assert (= temp1040_27 temp1040_26))
(assert (= temp1040_28 (select ARGNAME_padding_NAMEEND_VAL temp1040_27)))
(assert (= temp1040_29 #x0000000000000000))
(assert (= temp1040_30 #x0000000000000001))
(assert (= temp1040_31 temp1040_30))
(assert (= temp1040_32 (select ARGNAME_padding_NAMEEND_VAL temp1040_31)))
(assert (= temp1040_33 #x0000000000000000))
(assert (= temp1040_34 #x0000000000000002))
(assert (= temp1040_35 temp1040_34))
(assert (= temp1040_36 (select ARGNAME_padding_NAMEEND_VAL temp1040_35)))
(assert (= temp1040_37 #x0000000000000000))
(assert (= temp1040_38 #x0000000000000003))
(assert (= temp1040_39 temp1040_38))
(assert (= temp1040_40 (select ARGNAME_padding_NAMEEND_VAL temp1040_39)))
(assert (= temp1040_41 #x0000000000000000))
(assert (= temp1040_42 #x0000000000000004))
(assert (= temp1040_43 temp1040_42))
(assert (= temp1040_44 (select ARGNAME_padding_NAMEEND_VAL temp1040_43)))
(assert (= temp1040_45 #x0000000000000000))
(assert (= temp1040_46 #x0000000000000005))
(assert (= temp1040_47 temp1040_46))
(assert (= temp1040_48 (select ARGNAME_padding_NAMEEND_VAL temp1040_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1040_28 temp1040_25)
             (bvslt temp1040_32 temp1040_29)
             (bvslt temp1040_36 temp1040_33)
             (bvslt temp1040_40 temp1040_37)
             (bvslt temp1040_44 temp1040_41)
             (bvslt temp1040_48 temp1040_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1040_49 #x0000000000000000))
(assert (= var1191714 temp1040_49))
(assert (= temp1040_50 #x0000000000000000))
(assert (= temp1040_51 temp1040_50))
(assert (= temp1040_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1040_51)))
(assert (= temp1040_53 #x0000000000000001))
(assert (= temp1040_54 temp1040_53))
(assert (= temp1040_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1040_54)))
(assert (= temp1040_56 #x0000000000000002))
(assert (= temp1040_57 temp1040_56))
(assert (= temp1040_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1040_57)))
(assert (= temp1040_59 #x0000000000000003))
(assert (= temp1040_60 temp1040_59))
(assert (= temp1040_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1040_60)))
(assert (= temp1040_62 #x0000000000000004))
(assert (= temp1040_63 temp1040_62))
(assert (= temp1040_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1040_63)))
(assert (= temp1040_65 #x0000000000000005))
(assert (= temp1040_66 temp1040_65))
(assert (= temp1040_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1040_66)))
(assert (= temp1040_68 #x0000000000000000))
(assert (= temp1040_69 #x0000000000000000))
(assert (= temp1040_70 temp1040_69))
(assert (= temp1040_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1040_70)))
(assert (= temp1040_72 #x0000000000000000))
(assert (= temp1040_73 #x0000000000000001))
(assert (= temp1040_74 temp1040_73))
(assert (= temp1040_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1040_74)))
(assert (= temp1040_76 #x0000000000000000))
(assert (= temp1040_77 #x0000000000000002))
(assert (= temp1040_78 temp1040_77))
(assert (= temp1040_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1040_78)))
(assert (= temp1040_80 #x0000000000000000))
(assert (= temp1040_81 #x0000000000000003))
(assert (= temp1040_82 temp1040_81))
(assert (= temp1040_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1040_82)))
(assert (= temp1040_84 #x0000000000000000))
(assert (= temp1040_85 #x0000000000000004))
(assert (= temp1040_86 temp1040_85))
(assert (= temp1040_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1040_86)))
(assert (= temp1040_88 #x0000000000000000))
(assert (= temp1040_89 #x0000000000000005))
(assert (= temp1040_90 temp1040_89))
(assert (= temp1040_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1040_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1040_71 temp1040_68)
             (bvslt temp1040_75 temp1040_72)
             (bvslt temp1040_79 temp1040_76)
             (bvslt temp1040_83 temp1040_80)
             (bvslt temp1040_87 temp1040_84)
             (bvslt temp1040_91 temp1040_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1040_92 #x0000000000000000))
(assert (= var1191725 temp1040_92))
(assert (= temp1040_93 #x0000000000000000))
(assert (= temp1040_94 temp1040_93))
(assert (= temp1040_95 (select ARGNAME_stride_NAMEEND_VAL temp1040_94)))
(assert (= temp1040_96 #x0000000000000001))
(assert (= temp1040_97 temp1040_96))
(assert (= temp1040_98 (select ARGNAME_stride_NAMEEND_VAL temp1040_97)))
(assert (= temp1040_99 #x0000000000000002))
(assert (= temp1040_100 temp1040_99))
(assert (= temp1040_101 (select ARGNAME_stride_NAMEEND_VAL temp1040_100)))
(assert (= temp1040_102 #x0000000000000003))
(assert (= temp1040_103 temp1040_102))
(assert (= temp1040_104 (select ARGNAME_stride_NAMEEND_VAL temp1040_103)))
(assert (= temp1040_105 #x0000000000000004))
(assert (= temp1040_106 temp1040_105))
(assert (= temp1040_107 (select ARGNAME_stride_NAMEEND_VAL temp1040_106)))
(assert (= temp1040_108 #x0000000000000005))
(assert (= temp1040_109 temp1040_108))
(assert (= temp1040_110 (select ARGNAME_stride_NAMEEND_VAL temp1040_109)))
(assert (= temp1040_111 #x0000000000000000))
(assert (= temp1040_112 #x0000000000000000))
(assert (= temp1040_113 temp1040_112))
(assert (= temp1040_114 (select ARGNAME_stride_NAMEEND_VAL temp1040_113)))
(assert (= temp1040_115 #x0000000000000000))
(assert (= temp1040_116 #x0000000000000001))
(assert (= temp1040_117 temp1040_116))
(assert (= temp1040_118 (select ARGNAME_stride_NAMEEND_VAL temp1040_117)))
(assert (= temp1040_119 #x0000000000000000))
(assert (= temp1040_120 #x0000000000000002))
(assert (= temp1040_121 temp1040_120))
(assert (= temp1040_122 (select ARGNAME_stride_NAMEEND_VAL temp1040_121)))
(assert (= temp1040_123 #x0000000000000000))
(assert (= temp1040_124 #x0000000000000003))
(assert (= temp1040_125 temp1040_124))
(assert (= temp1040_126 (select ARGNAME_stride_NAMEEND_VAL temp1040_125)))
(assert (= temp1040_127 #x0000000000000000))
(assert (= temp1040_128 #x0000000000000004))
(assert (= temp1040_129 temp1040_128))
(assert (= temp1040_130 (select ARGNAME_stride_NAMEEND_VAL temp1040_129)))
(assert (= temp1040_131 #x0000000000000000))
(assert (= temp1040_132 #x0000000000000005))
(assert (= temp1040_133 temp1040_132))
(assert (= temp1040_134 (select ARGNAME_stride_NAMEEND_VAL temp1040_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1040_114 temp1040_111)
             (bvsle temp1040_118 temp1040_115)
             (bvsle temp1040_122 temp1040_119)
             (bvsle temp1040_126 temp1040_123)
             (bvsle temp1040_130 temp1040_127)
             (bvsle temp1040_134 temp1040_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1040_135 #x0000000000000000))
(assert (= var1191735 temp1040_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1040_136 #x0000000000000001))
(assert (= var1191747 temp1040_136))
(assert (= temp1040_137 #x0000000000000000))
(assert (= var1179826 temp1040_137))
(assert (= temp1040_138 #x0000000000000000))
(assert (= temp1040_139 temp1040_138))
(assert (= temp1040_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1040_139)))
(assert (= temp1040_141 #x0000000000000001))
(assert (= temp1040_142 temp1040_141))
(assert (= temp1040_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1040_142)))
(assert (= temp1040_144 #x0000000000000002))
(assert (= temp1040_145 temp1040_144))
(assert (= temp1040_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1040_145)))
(assert (= temp1040_147 #x0000000000000003))
(assert (= temp1040_148 temp1040_147))
(assert (= temp1040_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1040_148)))
(assert (= temp1040_150 #x0000000000000004))
(assert (= temp1040_151 temp1040_150))
(assert (= temp1040_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1040_151)))
(assert (= temp1040_153 #x0000000000000005))
(assert (= temp1040_154 temp1040_153))
(assert (= temp1040_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1040_154)))
(assert (= temp1040_157 var1179826))
(assert (= temp1040_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1040_157)))
(assert (= temp1040_156 temp1040_158))
(assert (= var1191780
   (ite (bvslt temp1040_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1040_159 #x0000000000000000))
(assert (= var1191780 temp1040_159))
(assert (= temp1040_160 #x0000000000000000))
(assert (= var1179826 temp1040_160))
(assert (= temp1040_162 var1179826))
(assert (= temp1040_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1040_162)))
(assert (= temp1040_161 temp1040_163))
(assert (= var1191802 (bvsmod temp1040_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1040_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1040_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1040_165 #x0000000000000001))
(assert (= var1191803 temp1040_165))
(assert (= temp1040_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1040_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1040_167 #x0000000000000001))
(assert (= var1191823 temp1040_167))
(assert (= temp1040_168 #x0000000000000001))
(assert (= var1180714 temp1040_168))
(assert (= temp1040_169 #x0000000000000000))
(assert (= temp1040_170 temp1040_169))
(assert (= temp1040_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1040_170)))
(assert (= temp1040_172 #x0000000000000001))
(assert (= temp1040_173 temp1040_172))
(assert (= temp1040_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1040_173)))
(assert (= temp1040_175 #x0000000000000002))
(assert (= temp1040_176 temp1040_175))
(assert (= temp1040_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1040_176)))
(assert (= temp1040_178 #x0000000000000003))
(assert (= temp1040_179 temp1040_178))
(assert (= temp1040_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1040_179)))
(assert (= temp1040_181 #x0000000000000004))
(assert (= temp1040_182 temp1040_181))
(assert (= temp1040_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1040_182)))
(assert (= temp1040_184 #x0000000000000005))
(assert (= temp1040_185 temp1040_184))
(assert (= temp1040_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1040_185)))
(assert (= temp1040_187 #x0000000000000000))
(assert (= temp1040_188
   (ite (bvslt var1180714 temp1040_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1040_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1040_188)))
(assert (= var1191831 temp1040_189))
(assert (bvslt (ite (bvslt var1180714 temp1040_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1040_190 #x0000000000000001))
(assert (= var1180714 temp1040_190))
(assert (= temp1040_192 var1180714))
(assert (= temp1040_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1040_192)))
(assert (= temp1040_191 temp1040_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1040_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1040_194 #x0000000000000001))
(assert (= var1191836 temp1040_194))
(assert (= temp1040_195 #x0000000000000000))
(assert (= var1179826 temp1040_195))
(assert (= temp1040_197 var1179826))
(assert (= temp1040_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1040_197)))
(assert (= temp1040_196 temp1040_198))
(assert (= temp1040_199 #x0000000000000002))
(assert (= var1586025 temp1040_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1040_200 #x0000000000000001))
(assert (= var1191993 temp1040_200))
(assert (= temp1040_201 #x0000000000000001))
(assert (= var2700303 temp1040_201))
(assert (= temp1040_202 #x0000000000000001))
(assert (= var2962447 temp1040_202))
(assert (= temp1040_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1040_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1040_204 #x0000000000000001))
(assert (= var211058 temp1040_204))
(assert (= temp1040_205 #x0000000000000001))
(assert (= var211188 temp1040_205))
(assert (= var3879401 var211188))
(assert (= temp1040_206 #x0000000000000000))
(assert (= var3866802 temp1040_206))
(assert (= temp1040_207 #x0000000000000000))
(assert (= temp1040_208
   (ite (bvslt var3866802 temp1040_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1040_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1040_208)))
(assert (= var3879420 temp1040_209))
(assert (bvslt (ite (bvslt var3866802 temp1040_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1040_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1040_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1040_211 #x0000000000000001))
(assert (= var3879421 temp1040_211))
(assert (= temp1040_212 #x0000000000000000))
(assert (= var4079423 temp1040_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1040_213 #x0000000000000002))
(assert (= var4208259 temp1040_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1040_214 #x0000000000000000))
(assert (= var4273820 temp1040_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp1040_215 #x0000000000000001))
(assert (= var211058 temp1040_215))
(model-add temp1040_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1040_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1040_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1040_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





