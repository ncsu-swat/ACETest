(declare-fun temp10980_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10980_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10980_3 () (_ BitVec 64))
(declare-fun temp10980_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10980_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10980_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10980_7 () (_ BitVec 64))
(declare-fun temp10980_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10980_9 () (_ BitVec 64))
(declare-fun temp10980_10 () (_ BitVec 64))
(declare-fun temp10980_11 () (_ BitVec 64))
(declare-fun temp10980_12 () (_ BitVec 64))
(declare-fun temp10980_13 () (_ BitVec 64))
(declare-fun temp10980_14 () (_ BitVec 64))
(declare-fun temp10980_15 () (_ BitVec 64))
(declare-fun temp10980_16 () (_ BitVec 64))
(declare-fun temp10980_17 () (_ BitVec 64))
(declare-fun temp10980_18 () (_ BitVec 64))
(declare-fun temp10980_19 () (_ BitVec 64))
(declare-fun temp10980_20 () (_ BitVec 64))
(declare-fun temp10980_21 () (_ BitVec 64))
(declare-fun temp10980_22 () (_ BitVec 64))
(declare-fun temp10980_23 () (_ BitVec 64))
(declare-fun temp10980_24 () (_ BitVec 64))
(declare-fun temp10980_25 () (_ BitVec 64))
(declare-fun temp10980_26 () (_ BitVec 64))
(declare-fun temp10980_27 () (_ BitVec 64))
(declare-fun temp10980_28 () (_ BitVec 64))
(declare-fun temp10980_29 () (_ BitVec 64))
(declare-fun temp10980_30 () (_ BitVec 64))
(declare-fun temp10980_31 () (_ BitVec 64))
(declare-fun temp10980_32 () (_ BitVec 64))
(declare-fun temp10980_33 () (_ BitVec 64))
(declare-fun temp10980_34 () (_ BitVec 64))
(declare-fun temp10980_35 () (_ BitVec 64))
(declare-fun temp10980_36 () (_ BitVec 64))
(declare-fun temp10980_37 () (_ BitVec 64))
(declare-fun temp10980_38 () (_ BitVec 64))
(declare-fun temp10980_39 () (_ BitVec 64))
(declare-fun temp10980_40 () (_ BitVec 64))
(declare-fun temp10980_41 () (_ BitVec 64))
(declare-fun temp10980_42 () (_ BitVec 64))
(declare-fun temp10980_43 () (_ BitVec 64))
(declare-fun temp10980_44 () (_ BitVec 64))
(declare-fun temp10980_45 () (_ BitVec 64))
(declare-fun temp10980_46 () (_ BitVec 64))
(declare-fun temp10980_47 () (_ BitVec 64))
(declare-fun temp10980_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10980_49 () (_ BitVec 64))
(declare-fun temp10980_50 () (_ BitVec 64))
(declare-fun temp10980_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10980_52 () (_ BitVec 64))
(declare-fun temp10980_53 () (_ BitVec 64))
(declare-fun temp10980_54 () (_ BitVec 64))
(declare-fun temp10980_55 () (_ BitVec 64))
(declare-fun temp10980_56 () (_ BitVec 64))
(declare-fun temp10980_57 () (_ BitVec 64))
(declare-fun temp10980_58 () (_ BitVec 64))
(declare-fun temp10980_59 () (_ BitVec 64))
(declare-fun temp10980_60 () (_ BitVec 64))
(declare-fun temp10980_61 () (_ BitVec 64))
(declare-fun temp10980_62 () (_ BitVec 64))
(declare-fun temp10980_63 () (_ BitVec 64))
(declare-fun temp10980_64 () (_ BitVec 64))
(declare-fun temp10980_65 () (_ BitVec 64))
(declare-fun temp10980_66 () (_ BitVec 64))
(declare-fun temp10980_67 () (_ BitVec 64))
(declare-fun temp10980_68 () (_ BitVec 64))
(declare-fun temp10980_69 () (_ BitVec 64))
(declare-fun temp10980_70 () (_ BitVec 64))
(declare-fun temp10980_71 () (_ BitVec 64))
(declare-fun temp10980_72 () (_ BitVec 64))
(declare-fun temp10980_73 () (_ BitVec 64))
(declare-fun temp10980_74 () (_ BitVec 64))
(declare-fun temp10980_75 () (_ BitVec 64))
(declare-fun temp10980_76 () (_ BitVec 64))
(declare-fun temp10980_77 () (_ BitVec 64))
(declare-fun temp10980_78 () (_ BitVec 64))
(declare-fun temp10980_79 () (_ BitVec 64))
(declare-fun temp10980_80 () (_ BitVec 64))
(declare-fun temp10980_81 () (_ BitVec 64))
(declare-fun temp10980_82 () (_ BitVec 64))
(declare-fun temp10980_83 () (_ BitVec 64))
(declare-fun temp10980_84 () (_ BitVec 64))
(declare-fun temp10980_85 () (_ BitVec 64))
(declare-fun temp10980_86 () (_ BitVec 64))
(declare-fun temp10980_87 () (_ BitVec 64))
(declare-fun temp10980_88 () (_ BitVec 64))
(declare-fun temp10980_89 () (_ BitVec 64))
(declare-fun temp10980_90 () (_ BitVec 64))
(declare-fun temp10980_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10980_92 () (_ BitVec 64))
(declare-fun temp10980_93 () (_ BitVec 64))
(declare-fun temp10980_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10980_95 () (_ BitVec 64))
(declare-fun temp10980_96 () (_ BitVec 64))
(declare-fun temp10980_97 () (_ BitVec 64))
(declare-fun temp10980_98 () (_ BitVec 64))
(declare-fun temp10980_99 () (_ BitVec 64))
(declare-fun temp10980_100 () (_ BitVec 64))
(declare-fun temp10980_101 () (_ BitVec 64))
(declare-fun temp10980_102 () (_ BitVec 64))
(declare-fun temp10980_103 () (_ BitVec 64))
(declare-fun temp10980_104 () (_ BitVec 64))
(declare-fun temp10980_105 () (_ BitVec 64))
(declare-fun temp10980_106 () (_ BitVec 64))
(declare-fun temp10980_107 () (_ BitVec 64))
(declare-fun temp10980_108 () (_ BitVec 64))
(declare-fun temp10980_109 () (_ BitVec 64))
(declare-fun temp10980_110 () (_ BitVec 64))
(declare-fun temp10980_111 () (_ BitVec 64))
(declare-fun temp10980_112 () (_ BitVec 64))
(declare-fun temp10980_113 () (_ BitVec 64))
(declare-fun temp10980_114 () (_ BitVec 64))
(declare-fun temp10980_115 () (_ BitVec 64))
(declare-fun temp10980_116 () (_ BitVec 64))
(declare-fun temp10980_117 () (_ BitVec 64))
(declare-fun temp10980_118 () (_ BitVec 64))
(declare-fun temp10980_119 () (_ BitVec 64))
(declare-fun temp10980_120 () (_ BitVec 64))
(declare-fun temp10980_121 () (_ BitVec 64))
(declare-fun temp10980_122 () (_ BitVec 64))
(declare-fun temp10980_123 () (_ BitVec 64))
(declare-fun temp10980_124 () (_ BitVec 64))
(declare-fun temp10980_125 () (_ BitVec 64))
(declare-fun temp10980_126 () (_ BitVec 64))
(declare-fun temp10980_127 () (_ BitVec 64))
(declare-fun temp10980_128 () (_ BitVec 64))
(declare-fun temp10980_129 () (_ BitVec 64))
(declare-fun temp10980_130 () (_ BitVec 64))
(declare-fun temp10980_131 () (_ BitVec 64))
(declare-fun temp10980_132 () (_ BitVec 64))
(declare-fun temp10980_133 () (_ BitVec 64))
(declare-fun temp10980_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10980_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10980_136 () (_ BitVec 64))
(declare-fun temp10980_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10980_138 () (_ BitVec 64))
(declare-fun temp10980_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10980_140 () (_ BitVec 64))
(declare-fun temp10980_141 () (_ BitVec 64))
(declare-fun temp10980_142 () (_ BitVec 64))
(declare-fun temp10980_143 () (_ BitVec 64))
(declare-fun temp10980_144 () (_ BitVec 64))
(declare-fun temp10980_145 () (_ BitVec 64))
(declare-fun temp10980_146 () (_ BitVec 64))
(declare-fun temp10980_147 () (_ BitVec 64))
(declare-fun temp10980_148 () (_ BitVec 64))
(declare-fun temp10980_149 () (_ BitVec 64))
(declare-fun temp10980_150 () (_ BitVec 64))
(declare-fun temp10980_151 () (_ BitVec 64))
(declare-fun temp10980_152 () (_ BitVec 64))
(declare-fun temp10980_153 () (_ BitVec 64))
(declare-fun temp10980_154 () (_ BitVec 64))
(declare-fun temp10980_155 () (_ BitVec 64))
(declare-fun temp10980_157 () (_ BitVec 64))
(declare-fun temp10980_158 () (_ BitVec 64))
(declare-fun temp10980_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10980_159 () (_ BitVec 64))
(declare-fun temp10980_160 () (_ BitVec 64))
(declare-fun temp10980_162 () (_ BitVec 64))
(declare-fun temp10980_163 () (_ BitVec 64))
(declare-fun temp10980_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10980_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10980_165 () (_ BitVec 64))
(declare-fun temp10980_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10980_167 () (_ BitVec 64))
(declare-fun temp10980_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10980_169 () (_ BitVec 64))
(declare-fun temp10980_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10980_171 () (_ BitVec 64))
(declare-fun temp10980_172 () (_ BitVec 64))
(declare-fun temp10980_173 () (_ BitVec 64))
(declare-fun temp10980_174 () (_ BitVec 64))
(declare-fun temp10980_175 () (_ BitVec 64))
(declare-fun temp10980_176 () (_ BitVec 64))
(declare-fun temp10980_177 () (_ BitVec 64))
(declare-fun temp10980_178 () (_ BitVec 64))
(declare-fun temp10980_179 () (_ BitVec 64))
(declare-fun temp10980_180 () (_ BitVec 64))
(declare-fun temp10980_181 () (_ BitVec 64))
(declare-fun temp10980_182 () (_ BitVec 64))
(declare-fun temp10980_183 () (_ BitVec 64))
(declare-fun temp10980_184 () (_ BitVec 64))
(declare-fun temp10980_185 () (_ BitVec 64))
(declare-fun temp10980_186 () (_ BitVec 64))
(declare-fun temp10980_187 () (_ BitVec 64))
(declare-fun temp10980_188 () (_ BitVec 64))
(declare-fun temp10980_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10980_190 () (_ BitVec 64))
(declare-fun temp10980_192 () (_ BitVec 64))
(declare-fun temp10980_193 () (_ BitVec 64))
(declare-fun temp10980_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10980_194 () (_ BitVec 64))
(declare-fun temp10980_195 () (_ BitVec 64))
(declare-fun temp10980_197 () (_ BitVec 64))
(declare-fun temp10980_198 () (_ BitVec 64))
(declare-fun temp10980_196 () (_ BitVec 64))
(declare-fun temp10980_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10980_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10980_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10980_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10980_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10980_204 () (_ BitVec 64))
(declare-fun temp10980_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10980_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10980_207 () (_ BitVec 64))
(declare-fun temp10980_208 () (_ BitVec 64))
(declare-fun temp10980_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10980_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10980_211 () (_ BitVec 64))
(declare-fun temp10980_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10980_213 () (_ BitVec 64))
(declare-fun temp10980_214 () (_ BitVec 64))
(declare-fun temp10980_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10980_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10980_217 () (_ BitVec 64))
(declare-fun temp10980_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10980_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10980_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10980_221 () (_ BitVec 64))
(declare-fun temp10980_222 () (_ BitVec 64))
(declare-fun var5059348 () (_ BitVec 64))
(declare-fun var5059315 () (_ BitVec 64))
(declare-fun var4927879 () (_ BitVec 64))
(declare-fun var4927875 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10980_223 () (_ BitVec 64))
(assert (= temp10980_1 #x0000000000000001))
(assert (= var77203 temp10980_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10980_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10980_2)))
(assert (= temp10980_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10980_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10980_4 #x0000000000000000))
(assert (= var210941 temp10980_4))
(assert (= temp10980_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10980_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10980_6 #x0000000000000000))
(assert (= var210986 temp10980_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10980_7 #x0000000000000000))
(assert (= temp10980_8 temp10980_7))
(assert (= temp10980_9 (select ARGNAME_padding_NAMEEND_VAL temp10980_8)))
(assert (= temp10980_10 #x0000000000000001))
(assert (= temp10980_11 temp10980_10))
(assert (= temp10980_12 (select ARGNAME_padding_NAMEEND_VAL temp10980_11)))
(assert (= temp10980_13 #x0000000000000002))
(assert (= temp10980_14 temp10980_13))
(assert (= temp10980_15 (select ARGNAME_padding_NAMEEND_VAL temp10980_14)))
(assert (= temp10980_16 #x0000000000000003))
(assert (= temp10980_17 temp10980_16))
(assert (= temp10980_18 (select ARGNAME_padding_NAMEEND_VAL temp10980_17)))
(assert (= temp10980_19 #x0000000000000004))
(assert (= temp10980_20 temp10980_19))
(assert (= temp10980_21 (select ARGNAME_padding_NAMEEND_VAL temp10980_20)))
(assert (= temp10980_22 #x0000000000000005))
(assert (= temp10980_23 temp10980_22))
(assert (= temp10980_24 (select ARGNAME_padding_NAMEEND_VAL temp10980_23)))
(assert (= temp10980_25 #x0000000000000000))
(assert (= temp10980_26 #x0000000000000000))
(assert (= temp10980_27 temp10980_26))
(assert (= temp10980_28 (select ARGNAME_padding_NAMEEND_VAL temp10980_27)))
(assert (= temp10980_29 #x0000000000000000))
(assert (= temp10980_30 #x0000000000000001))
(assert (= temp10980_31 temp10980_30))
(assert (= temp10980_32 (select ARGNAME_padding_NAMEEND_VAL temp10980_31)))
(assert (= temp10980_33 #x0000000000000000))
(assert (= temp10980_34 #x0000000000000002))
(assert (= temp10980_35 temp10980_34))
(assert (= temp10980_36 (select ARGNAME_padding_NAMEEND_VAL temp10980_35)))
(assert (= temp10980_37 #x0000000000000000))
(assert (= temp10980_38 #x0000000000000003))
(assert (= temp10980_39 temp10980_38))
(assert (= temp10980_40 (select ARGNAME_padding_NAMEEND_VAL temp10980_39)))
(assert (= temp10980_41 #x0000000000000000))
(assert (= temp10980_42 #x0000000000000004))
(assert (= temp10980_43 temp10980_42))
(assert (= temp10980_44 (select ARGNAME_padding_NAMEEND_VAL temp10980_43)))
(assert (= temp10980_45 #x0000000000000000))
(assert (= temp10980_46 #x0000000000000005))
(assert (= temp10980_47 temp10980_46))
(assert (= temp10980_48 (select ARGNAME_padding_NAMEEND_VAL temp10980_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10980_28 temp10980_25)
             (bvslt temp10980_32 temp10980_29)
             (bvslt temp10980_36 temp10980_33)
             (bvslt temp10980_40 temp10980_37)
             (bvslt temp10980_44 temp10980_41)
             (bvslt temp10980_48 temp10980_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10980_49 #x0000000000000000))
(assert (= var1191714 temp10980_49))
(assert (= temp10980_50 #x0000000000000000))
(assert (= temp10980_51 temp10980_50))
(assert (= temp10980_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10980_51)))
(assert (= temp10980_53 #x0000000000000001))
(assert (= temp10980_54 temp10980_53))
(assert (= temp10980_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10980_54)))
(assert (= temp10980_56 #x0000000000000002))
(assert (= temp10980_57 temp10980_56))
(assert (= temp10980_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10980_57)))
(assert (= temp10980_59 #x0000000000000003))
(assert (= temp10980_60 temp10980_59))
(assert (= temp10980_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10980_60)))
(assert (= temp10980_62 #x0000000000000004))
(assert (= temp10980_63 temp10980_62))
(assert (= temp10980_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10980_63)))
(assert (= temp10980_65 #x0000000000000005))
(assert (= temp10980_66 temp10980_65))
(assert (= temp10980_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10980_66)))
(assert (= temp10980_68 #x0000000000000000))
(assert (= temp10980_69 #x0000000000000000))
(assert (= temp10980_70 temp10980_69))
(assert (= temp10980_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10980_70)))
(assert (= temp10980_72 #x0000000000000000))
(assert (= temp10980_73 #x0000000000000001))
(assert (= temp10980_74 temp10980_73))
(assert (= temp10980_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10980_74)))
(assert (= temp10980_76 #x0000000000000000))
(assert (= temp10980_77 #x0000000000000002))
(assert (= temp10980_78 temp10980_77))
(assert (= temp10980_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10980_78)))
(assert (= temp10980_80 #x0000000000000000))
(assert (= temp10980_81 #x0000000000000003))
(assert (= temp10980_82 temp10980_81))
(assert (= temp10980_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10980_82)))
(assert (= temp10980_84 #x0000000000000000))
(assert (= temp10980_85 #x0000000000000004))
(assert (= temp10980_86 temp10980_85))
(assert (= temp10980_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10980_86)))
(assert (= temp10980_88 #x0000000000000000))
(assert (= temp10980_89 #x0000000000000005))
(assert (= temp10980_90 temp10980_89))
(assert (= temp10980_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10980_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10980_71 temp10980_68)
             (bvslt temp10980_75 temp10980_72)
             (bvslt temp10980_79 temp10980_76)
             (bvslt temp10980_83 temp10980_80)
             (bvslt temp10980_87 temp10980_84)
             (bvslt temp10980_91 temp10980_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10980_92 #x0000000000000000))
(assert (= var1191725 temp10980_92))
(assert (= temp10980_93 #x0000000000000000))
(assert (= temp10980_94 temp10980_93))
(assert (= temp10980_95 (select ARGNAME_stride_NAMEEND_VAL temp10980_94)))
(assert (= temp10980_96 #x0000000000000001))
(assert (= temp10980_97 temp10980_96))
(assert (= temp10980_98 (select ARGNAME_stride_NAMEEND_VAL temp10980_97)))
(assert (= temp10980_99 #x0000000000000002))
(assert (= temp10980_100 temp10980_99))
(assert (= temp10980_101 (select ARGNAME_stride_NAMEEND_VAL temp10980_100)))
(assert (= temp10980_102 #x0000000000000003))
(assert (= temp10980_103 temp10980_102))
(assert (= temp10980_104 (select ARGNAME_stride_NAMEEND_VAL temp10980_103)))
(assert (= temp10980_105 #x0000000000000004))
(assert (= temp10980_106 temp10980_105))
(assert (= temp10980_107 (select ARGNAME_stride_NAMEEND_VAL temp10980_106)))
(assert (= temp10980_108 #x0000000000000005))
(assert (= temp10980_109 temp10980_108))
(assert (= temp10980_110 (select ARGNAME_stride_NAMEEND_VAL temp10980_109)))
(assert (= temp10980_111 #x0000000000000000))
(assert (= temp10980_112 #x0000000000000000))
(assert (= temp10980_113 temp10980_112))
(assert (= temp10980_114 (select ARGNAME_stride_NAMEEND_VAL temp10980_113)))
(assert (= temp10980_115 #x0000000000000000))
(assert (= temp10980_116 #x0000000000000001))
(assert (= temp10980_117 temp10980_116))
(assert (= temp10980_118 (select ARGNAME_stride_NAMEEND_VAL temp10980_117)))
(assert (= temp10980_119 #x0000000000000000))
(assert (= temp10980_120 #x0000000000000002))
(assert (= temp10980_121 temp10980_120))
(assert (= temp10980_122 (select ARGNAME_stride_NAMEEND_VAL temp10980_121)))
(assert (= temp10980_123 #x0000000000000000))
(assert (= temp10980_124 #x0000000000000003))
(assert (= temp10980_125 temp10980_124))
(assert (= temp10980_126 (select ARGNAME_stride_NAMEEND_VAL temp10980_125)))
(assert (= temp10980_127 #x0000000000000000))
(assert (= temp10980_128 #x0000000000000004))
(assert (= temp10980_129 temp10980_128))
(assert (= temp10980_130 (select ARGNAME_stride_NAMEEND_VAL temp10980_129)))
(assert (= temp10980_131 #x0000000000000000))
(assert (= temp10980_132 #x0000000000000005))
(assert (= temp10980_133 temp10980_132))
(assert (= temp10980_134 (select ARGNAME_stride_NAMEEND_VAL temp10980_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10980_114 temp10980_111)
             (bvsle temp10980_118 temp10980_115)
             (bvsle temp10980_122 temp10980_119)
             (bvsle temp10980_126 temp10980_123)
             (bvsle temp10980_130 temp10980_127)
             (bvsle temp10980_134 temp10980_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10980_135 #x0000000000000000))
(assert (= var1191735 temp10980_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10980_136 #x0000000000000001))
(assert (= var1191747 temp10980_136))
(assert (= temp10980_137 #x0000000000000000))
(assert (= var1179826 temp10980_137))
(assert (= temp10980_138 #x0000000000000000))
(assert (= temp10980_139 temp10980_138))
(assert (= temp10980_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10980_139)))
(assert (= temp10980_141 #x0000000000000001))
(assert (= temp10980_142 temp10980_141))
(assert (= temp10980_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10980_142)))
(assert (= temp10980_144 #x0000000000000002))
(assert (= temp10980_145 temp10980_144))
(assert (= temp10980_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10980_145)))
(assert (= temp10980_147 #x0000000000000003))
(assert (= temp10980_148 temp10980_147))
(assert (= temp10980_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10980_148)))
(assert (= temp10980_150 #x0000000000000004))
(assert (= temp10980_151 temp10980_150))
(assert (= temp10980_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10980_151)))
(assert (= temp10980_153 #x0000000000000005))
(assert (= temp10980_154 temp10980_153))
(assert (= temp10980_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10980_154)))
(assert (= temp10980_157 var1179826))
(assert (= temp10980_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10980_157)))
(assert (= temp10980_156 temp10980_158))
(assert (= var1191780
   (ite (bvslt temp10980_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10980_159 #x0000000000000000))
(assert (= var1191780 temp10980_159))
(assert (= temp10980_160 #x0000000000000000))
(assert (= var1179826 temp10980_160))
(assert (= temp10980_162 var1179826))
(assert (= temp10980_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10980_162)))
(assert (= temp10980_161 temp10980_163))
(assert (= var1191802 (bvsmod temp10980_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10980_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10980_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10980_165 #x0000000000000001))
(assert (= var1191803 temp10980_165))
(assert (= temp10980_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10980_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10980_167 #x0000000000000001))
(assert (= var1191823 temp10980_167))
(assert (= temp10980_168 #x0000000000000001))
(assert (= var1180714 temp10980_168))
(assert (= temp10980_169 #x0000000000000000))
(assert (= temp10980_170 temp10980_169))
(assert (= temp10980_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10980_170)))
(assert (= temp10980_172 #x0000000000000001))
(assert (= temp10980_173 temp10980_172))
(assert (= temp10980_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10980_173)))
(assert (= temp10980_175 #x0000000000000002))
(assert (= temp10980_176 temp10980_175))
(assert (= temp10980_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10980_176)))
(assert (= temp10980_178 #x0000000000000003))
(assert (= temp10980_179 temp10980_178))
(assert (= temp10980_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10980_179)))
(assert (= temp10980_181 #x0000000000000004))
(assert (= temp10980_182 temp10980_181))
(assert (= temp10980_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10980_182)))
(assert (= temp10980_184 #x0000000000000005))
(assert (= temp10980_185 temp10980_184))
(assert (= temp10980_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10980_185)))
(assert (= temp10980_187 #x0000000000000000))
(assert (= temp10980_188
   (ite (bvslt var1180714 temp10980_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10980_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10980_188)))
(assert (= var1191831 temp10980_189))
(assert (bvslt (ite (bvslt var1180714 temp10980_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10980_190 #x0000000000000001))
(assert (= var1180714 temp10980_190))
(assert (= temp10980_192 var1180714))
(assert (= temp10980_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10980_192)))
(assert (= temp10980_191 temp10980_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10980_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10980_194 #x0000000000000001))
(assert (= var1191836 temp10980_194))
(assert (= temp10980_195 #x0000000000000000))
(assert (= var1179826 temp10980_195))
(assert (= temp10980_197 var1179826))
(assert (= temp10980_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10980_197)))
(assert (= temp10980_196 temp10980_198))
(assert (= temp10980_199 #x0000000000000002))
(assert (= var1586025 temp10980_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10980_200 #x0000000000000001))
(assert (= var1191993 temp10980_200))
(assert (= temp10980_201 #x0000000000000001))
(assert (= var2700303 temp10980_201))
(assert (= temp10980_202 #x0000000000000001))
(assert (= var2962447 temp10980_202))
(assert (= temp10980_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10980_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10980_204 #x0000000000000001))
(assert (= var211058 temp10980_204))
(assert (= temp10980_205 #x0000000000000001))
(assert (= var211188 temp10980_205))
(assert (= var3879401 var211188))
(assert (= temp10980_206 #x0000000000000000))
(assert (= var3866802 temp10980_206))
(assert (= temp10980_207 #x0000000000000000))
(assert (= temp10980_208
   (ite (bvslt var3866802 temp10980_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10980_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10980_208)))
(assert (= var3879420 temp10980_209))
(assert (bvslt (ite (bvslt var3866802 temp10980_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10980_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10980_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10980_211 #x0000000000000000))
(assert (= var3879421 temp10980_211))
(assert (= temp10980_212 #x0000000000000001))
(assert (= var3867690 temp10980_212))
(assert (= temp10980_213 #x0000000000000000))
(assert (= temp10980_214
   (ite (bvslt var3867690 temp10980_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10980_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10980_214)))
(assert (= var3879423 temp10980_215))
(assert (bvslt (ite (bvslt var3867690 temp10980_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10980_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10980_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10980_217 #x0000000000000001))
(assert (= var3879424 temp10980_217))
(assert (= temp10980_218 #x0000000000000000))
(assert (= var4133117 temp10980_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10980_219 #x0000000000000002))
(assert (= var4339331 temp10980_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10980_220 #x0000000000000000))
(assert (= var4404892 temp10980_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10980_221 #x0000000000000001))
(assert (= var211058 temp10980_221))
(assert (= temp10980_222 #x0000000000000000))
(assert (= var5059348 temp10980_222))
(assert (= var5059315 var5059348))
(assert (= var4927879 var5059315))
(assert (= var4927875 var4927879))
(assert (= var212669 var4927875))
(assert (= temp10980_223 #x0000000000000000))
(assert (= var212669 temp10980_223))
(model-add temp10980_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10980_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10980_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10980_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





