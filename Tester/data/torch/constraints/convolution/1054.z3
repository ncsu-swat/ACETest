(declare-fun temp10072_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10072_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10072_3 () (_ BitVec 64))
(declare-fun temp10072_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10072_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10072_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10072_7 () (_ BitVec 64))
(declare-fun temp10072_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10072_9 () (_ BitVec 64))
(declare-fun temp10072_10 () (_ BitVec 64))
(declare-fun temp10072_11 () (_ BitVec 64))
(declare-fun temp10072_12 () (_ BitVec 64))
(declare-fun temp10072_13 () (_ BitVec 64))
(declare-fun temp10072_14 () (_ BitVec 64))
(declare-fun temp10072_15 () (_ BitVec 64))
(declare-fun temp10072_16 () (_ BitVec 64))
(declare-fun temp10072_17 () (_ BitVec 64))
(declare-fun temp10072_18 () (_ BitVec 64))
(declare-fun temp10072_19 () (_ BitVec 64))
(declare-fun temp10072_20 () (_ BitVec 64))
(declare-fun temp10072_21 () (_ BitVec 64))
(declare-fun temp10072_22 () (_ BitVec 64))
(declare-fun temp10072_23 () (_ BitVec 64))
(declare-fun temp10072_24 () (_ BitVec 64))
(declare-fun temp10072_25 () (_ BitVec 64))
(declare-fun temp10072_26 () (_ BitVec 64))
(declare-fun temp10072_27 () (_ BitVec 64))
(declare-fun temp10072_28 () (_ BitVec 64))
(declare-fun temp10072_29 () (_ BitVec 64))
(declare-fun temp10072_30 () (_ BitVec 64))
(declare-fun temp10072_31 () (_ BitVec 64))
(declare-fun temp10072_32 () (_ BitVec 64))
(declare-fun temp10072_33 () (_ BitVec 64))
(declare-fun temp10072_34 () (_ BitVec 64))
(declare-fun temp10072_35 () (_ BitVec 64))
(declare-fun temp10072_36 () (_ BitVec 64))
(declare-fun temp10072_37 () (_ BitVec 64))
(declare-fun temp10072_38 () (_ BitVec 64))
(declare-fun temp10072_39 () (_ BitVec 64))
(declare-fun temp10072_40 () (_ BitVec 64))
(declare-fun temp10072_41 () (_ BitVec 64))
(declare-fun temp10072_42 () (_ BitVec 64))
(declare-fun temp10072_43 () (_ BitVec 64))
(declare-fun temp10072_44 () (_ BitVec 64))
(declare-fun temp10072_45 () (_ BitVec 64))
(declare-fun temp10072_46 () (_ BitVec 64))
(declare-fun temp10072_47 () (_ BitVec 64))
(declare-fun temp10072_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10072_49 () (_ BitVec 64))
(declare-fun temp10072_50 () (_ BitVec 64))
(declare-fun temp10072_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10072_52 () (_ BitVec 64))
(declare-fun temp10072_53 () (_ BitVec 64))
(declare-fun temp10072_54 () (_ BitVec 64))
(declare-fun temp10072_55 () (_ BitVec 64))
(declare-fun temp10072_56 () (_ BitVec 64))
(declare-fun temp10072_57 () (_ BitVec 64))
(declare-fun temp10072_58 () (_ BitVec 64))
(declare-fun temp10072_59 () (_ BitVec 64))
(declare-fun temp10072_60 () (_ BitVec 64))
(declare-fun temp10072_61 () (_ BitVec 64))
(declare-fun temp10072_62 () (_ BitVec 64))
(declare-fun temp10072_63 () (_ BitVec 64))
(declare-fun temp10072_64 () (_ BitVec 64))
(declare-fun temp10072_65 () (_ BitVec 64))
(declare-fun temp10072_66 () (_ BitVec 64))
(declare-fun temp10072_67 () (_ BitVec 64))
(declare-fun temp10072_68 () (_ BitVec 64))
(declare-fun temp10072_69 () (_ BitVec 64))
(declare-fun temp10072_70 () (_ BitVec 64))
(declare-fun temp10072_71 () (_ BitVec 64))
(declare-fun temp10072_72 () (_ BitVec 64))
(declare-fun temp10072_73 () (_ BitVec 64))
(declare-fun temp10072_74 () (_ BitVec 64))
(declare-fun temp10072_75 () (_ BitVec 64))
(declare-fun temp10072_76 () (_ BitVec 64))
(declare-fun temp10072_77 () (_ BitVec 64))
(declare-fun temp10072_78 () (_ BitVec 64))
(declare-fun temp10072_79 () (_ BitVec 64))
(declare-fun temp10072_80 () (_ BitVec 64))
(declare-fun temp10072_81 () (_ BitVec 64))
(declare-fun temp10072_82 () (_ BitVec 64))
(declare-fun temp10072_83 () (_ BitVec 64))
(declare-fun temp10072_84 () (_ BitVec 64))
(declare-fun temp10072_85 () (_ BitVec 64))
(declare-fun temp10072_86 () (_ BitVec 64))
(declare-fun temp10072_87 () (_ BitVec 64))
(declare-fun temp10072_88 () (_ BitVec 64))
(declare-fun temp10072_89 () (_ BitVec 64))
(declare-fun temp10072_90 () (_ BitVec 64))
(declare-fun temp10072_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10072_92 () (_ BitVec 64))
(declare-fun temp10072_93 () (_ BitVec 64))
(declare-fun temp10072_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10072_95 () (_ BitVec 64))
(declare-fun temp10072_96 () (_ BitVec 64))
(declare-fun temp10072_97 () (_ BitVec 64))
(declare-fun temp10072_98 () (_ BitVec 64))
(declare-fun temp10072_99 () (_ BitVec 64))
(declare-fun temp10072_100 () (_ BitVec 64))
(declare-fun temp10072_101 () (_ BitVec 64))
(declare-fun temp10072_102 () (_ BitVec 64))
(declare-fun temp10072_103 () (_ BitVec 64))
(declare-fun temp10072_104 () (_ BitVec 64))
(declare-fun temp10072_105 () (_ BitVec 64))
(declare-fun temp10072_106 () (_ BitVec 64))
(declare-fun temp10072_107 () (_ BitVec 64))
(declare-fun temp10072_108 () (_ BitVec 64))
(declare-fun temp10072_109 () (_ BitVec 64))
(declare-fun temp10072_110 () (_ BitVec 64))
(declare-fun temp10072_111 () (_ BitVec 64))
(declare-fun temp10072_112 () (_ BitVec 64))
(declare-fun temp10072_113 () (_ BitVec 64))
(declare-fun temp10072_114 () (_ BitVec 64))
(declare-fun temp10072_115 () (_ BitVec 64))
(declare-fun temp10072_116 () (_ BitVec 64))
(declare-fun temp10072_117 () (_ BitVec 64))
(declare-fun temp10072_118 () (_ BitVec 64))
(declare-fun temp10072_119 () (_ BitVec 64))
(declare-fun temp10072_120 () (_ BitVec 64))
(declare-fun temp10072_121 () (_ BitVec 64))
(declare-fun temp10072_122 () (_ BitVec 64))
(declare-fun temp10072_123 () (_ BitVec 64))
(declare-fun temp10072_124 () (_ BitVec 64))
(declare-fun temp10072_125 () (_ BitVec 64))
(declare-fun temp10072_126 () (_ BitVec 64))
(declare-fun temp10072_127 () (_ BitVec 64))
(declare-fun temp10072_128 () (_ BitVec 64))
(declare-fun temp10072_129 () (_ BitVec 64))
(declare-fun temp10072_130 () (_ BitVec 64))
(declare-fun temp10072_131 () (_ BitVec 64))
(declare-fun temp10072_132 () (_ BitVec 64))
(declare-fun temp10072_133 () (_ BitVec 64))
(declare-fun temp10072_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10072_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10072_136 () (_ BitVec 64))
(declare-fun temp10072_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10072_138 () (_ BitVec 64))
(declare-fun temp10072_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10072_140 () (_ BitVec 64))
(declare-fun temp10072_141 () (_ BitVec 64))
(declare-fun temp10072_142 () (_ BitVec 64))
(declare-fun temp10072_143 () (_ BitVec 64))
(declare-fun temp10072_144 () (_ BitVec 64))
(declare-fun temp10072_145 () (_ BitVec 64))
(declare-fun temp10072_146 () (_ BitVec 64))
(declare-fun temp10072_147 () (_ BitVec 64))
(declare-fun temp10072_148 () (_ BitVec 64))
(declare-fun temp10072_149 () (_ BitVec 64))
(declare-fun temp10072_150 () (_ BitVec 64))
(declare-fun temp10072_151 () (_ BitVec 64))
(declare-fun temp10072_152 () (_ BitVec 64))
(declare-fun temp10072_153 () (_ BitVec 64))
(declare-fun temp10072_154 () (_ BitVec 64))
(declare-fun temp10072_155 () (_ BitVec 64))
(declare-fun temp10072_157 () (_ BitVec 64))
(declare-fun temp10072_158 () (_ BitVec 64))
(declare-fun temp10072_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10072_159 () (_ BitVec 64))
(declare-fun temp10072_160 () (_ BitVec 64))
(declare-fun temp10072_162 () (_ BitVec 64))
(declare-fun temp10072_163 () (_ BitVec 64))
(declare-fun temp10072_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10072_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10072_165 () (_ BitVec 64))
(declare-fun temp10072_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10072_167 () (_ BitVec 64))
(declare-fun temp10072_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10072_169 () (_ BitVec 64))
(declare-fun temp10072_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10072_171 () (_ BitVec 64))
(declare-fun temp10072_172 () (_ BitVec 64))
(declare-fun temp10072_173 () (_ BitVec 64))
(declare-fun temp10072_174 () (_ BitVec 64))
(declare-fun temp10072_175 () (_ BitVec 64))
(declare-fun temp10072_176 () (_ BitVec 64))
(declare-fun temp10072_177 () (_ BitVec 64))
(declare-fun temp10072_178 () (_ BitVec 64))
(declare-fun temp10072_179 () (_ BitVec 64))
(declare-fun temp10072_180 () (_ BitVec 64))
(declare-fun temp10072_181 () (_ BitVec 64))
(declare-fun temp10072_182 () (_ BitVec 64))
(declare-fun temp10072_183 () (_ BitVec 64))
(declare-fun temp10072_184 () (_ BitVec 64))
(declare-fun temp10072_185 () (_ BitVec 64))
(declare-fun temp10072_186 () (_ BitVec 64))
(declare-fun temp10072_187 () (_ BitVec 64))
(declare-fun temp10072_188 () (_ BitVec 64))
(declare-fun temp10072_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10072_190 () (_ BitVec 64))
(declare-fun temp10072_192 () (_ BitVec 64))
(declare-fun temp10072_193 () (_ BitVec 64))
(declare-fun temp10072_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10072_194 () (_ BitVec 64))
(declare-fun temp10072_195 () (_ BitVec 64))
(declare-fun temp10072_197 () (_ BitVec 64))
(declare-fun temp10072_198 () (_ BitVec 64))
(declare-fun temp10072_196 () (_ BitVec 64))
(declare-fun temp10072_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10072_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10072_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10072_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10072_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10072_204 () (_ BitVec 64))
(declare-fun temp10072_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10072_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10072_207 () (_ BitVec 64))
(declare-fun temp10072_208 () (_ BitVec 64))
(declare-fun temp10072_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10072_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10072_211 () (_ BitVec 64))
(declare-fun temp10072_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10072_213 () (_ BitVec 64))
(declare-fun temp10072_214 () (_ BitVec 64))
(declare-fun temp10072_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10072_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10072_217 () (_ BitVec 64))
(declare-fun temp10072_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10072_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10072_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10072_222 () (_ BitVec 64))
(declare-fun temp10072_221 () (_ BitVec 64))
(declare-fun temp10072_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10072_224 () (_ BitVec 64))
(declare-fun temp10072_225 () (_ BitVec 64))
(declare-fun temp10072_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10072_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10072_228 () (_ BitVec 64))
(declare-fun temp10072_230 () (_ BitVec 64))
(declare-fun temp10072_229 () (_ BitVec 64))
(declare-fun temp10072_231 () (_ BitVec 64))
(assert (= temp10072_1 #x0000000000000001))
(assert (= var77203 temp10072_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10072_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10072_2)))
(assert (= temp10072_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10072_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10072_4 #x0000000000000000))
(assert (= var210941 temp10072_4))
(assert (= temp10072_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10072_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10072_6 #x0000000000000000))
(assert (= var210986 temp10072_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10072_7 #x0000000000000000))
(assert (= temp10072_8 temp10072_7))
(assert (= temp10072_9 (select ARGNAME_padding_NAMEEND_VAL temp10072_8)))
(assert (= temp10072_10 #x0000000000000001))
(assert (= temp10072_11 temp10072_10))
(assert (= temp10072_12 (select ARGNAME_padding_NAMEEND_VAL temp10072_11)))
(assert (= temp10072_13 #x0000000000000002))
(assert (= temp10072_14 temp10072_13))
(assert (= temp10072_15 (select ARGNAME_padding_NAMEEND_VAL temp10072_14)))
(assert (= temp10072_16 #x0000000000000003))
(assert (= temp10072_17 temp10072_16))
(assert (= temp10072_18 (select ARGNAME_padding_NAMEEND_VAL temp10072_17)))
(assert (= temp10072_19 #x0000000000000004))
(assert (= temp10072_20 temp10072_19))
(assert (= temp10072_21 (select ARGNAME_padding_NAMEEND_VAL temp10072_20)))
(assert (= temp10072_22 #x0000000000000005))
(assert (= temp10072_23 temp10072_22))
(assert (= temp10072_24 (select ARGNAME_padding_NAMEEND_VAL temp10072_23)))
(assert (= temp10072_25 #x0000000000000000))
(assert (= temp10072_26 #x0000000000000000))
(assert (= temp10072_27 temp10072_26))
(assert (= temp10072_28 (select ARGNAME_padding_NAMEEND_VAL temp10072_27)))
(assert (= temp10072_29 #x0000000000000000))
(assert (= temp10072_30 #x0000000000000001))
(assert (= temp10072_31 temp10072_30))
(assert (= temp10072_32 (select ARGNAME_padding_NAMEEND_VAL temp10072_31)))
(assert (= temp10072_33 #x0000000000000000))
(assert (= temp10072_34 #x0000000000000002))
(assert (= temp10072_35 temp10072_34))
(assert (= temp10072_36 (select ARGNAME_padding_NAMEEND_VAL temp10072_35)))
(assert (= temp10072_37 #x0000000000000000))
(assert (= temp10072_38 #x0000000000000003))
(assert (= temp10072_39 temp10072_38))
(assert (= temp10072_40 (select ARGNAME_padding_NAMEEND_VAL temp10072_39)))
(assert (= temp10072_41 #x0000000000000000))
(assert (= temp10072_42 #x0000000000000004))
(assert (= temp10072_43 temp10072_42))
(assert (= temp10072_44 (select ARGNAME_padding_NAMEEND_VAL temp10072_43)))
(assert (= temp10072_45 #x0000000000000000))
(assert (= temp10072_46 #x0000000000000005))
(assert (= temp10072_47 temp10072_46))
(assert (= temp10072_48 (select ARGNAME_padding_NAMEEND_VAL temp10072_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10072_28 temp10072_25)
             (bvslt temp10072_32 temp10072_29)
             (bvslt temp10072_36 temp10072_33)
             (bvslt temp10072_40 temp10072_37)
             (bvslt temp10072_44 temp10072_41)
             (bvslt temp10072_48 temp10072_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10072_49 #x0000000000000000))
(assert (= var1191714 temp10072_49))
(assert (= temp10072_50 #x0000000000000000))
(assert (= temp10072_51 temp10072_50))
(assert (= temp10072_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10072_51)))
(assert (= temp10072_53 #x0000000000000001))
(assert (= temp10072_54 temp10072_53))
(assert (= temp10072_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10072_54)))
(assert (= temp10072_56 #x0000000000000002))
(assert (= temp10072_57 temp10072_56))
(assert (= temp10072_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10072_57)))
(assert (= temp10072_59 #x0000000000000003))
(assert (= temp10072_60 temp10072_59))
(assert (= temp10072_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10072_60)))
(assert (= temp10072_62 #x0000000000000004))
(assert (= temp10072_63 temp10072_62))
(assert (= temp10072_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10072_63)))
(assert (= temp10072_65 #x0000000000000005))
(assert (= temp10072_66 temp10072_65))
(assert (= temp10072_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10072_66)))
(assert (= temp10072_68 #x0000000000000000))
(assert (= temp10072_69 #x0000000000000000))
(assert (= temp10072_70 temp10072_69))
(assert (= temp10072_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10072_70)))
(assert (= temp10072_72 #x0000000000000000))
(assert (= temp10072_73 #x0000000000000001))
(assert (= temp10072_74 temp10072_73))
(assert (= temp10072_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10072_74)))
(assert (= temp10072_76 #x0000000000000000))
(assert (= temp10072_77 #x0000000000000002))
(assert (= temp10072_78 temp10072_77))
(assert (= temp10072_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10072_78)))
(assert (= temp10072_80 #x0000000000000000))
(assert (= temp10072_81 #x0000000000000003))
(assert (= temp10072_82 temp10072_81))
(assert (= temp10072_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10072_82)))
(assert (= temp10072_84 #x0000000000000000))
(assert (= temp10072_85 #x0000000000000004))
(assert (= temp10072_86 temp10072_85))
(assert (= temp10072_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10072_86)))
(assert (= temp10072_88 #x0000000000000000))
(assert (= temp10072_89 #x0000000000000005))
(assert (= temp10072_90 temp10072_89))
(assert (= temp10072_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10072_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10072_71 temp10072_68)
             (bvslt temp10072_75 temp10072_72)
             (bvslt temp10072_79 temp10072_76)
             (bvslt temp10072_83 temp10072_80)
             (bvslt temp10072_87 temp10072_84)
             (bvslt temp10072_91 temp10072_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10072_92 #x0000000000000000))
(assert (= var1191725 temp10072_92))
(assert (= temp10072_93 #x0000000000000000))
(assert (= temp10072_94 temp10072_93))
(assert (= temp10072_95 (select ARGNAME_stride_NAMEEND_VAL temp10072_94)))
(assert (= temp10072_96 #x0000000000000001))
(assert (= temp10072_97 temp10072_96))
(assert (= temp10072_98 (select ARGNAME_stride_NAMEEND_VAL temp10072_97)))
(assert (= temp10072_99 #x0000000000000002))
(assert (= temp10072_100 temp10072_99))
(assert (= temp10072_101 (select ARGNAME_stride_NAMEEND_VAL temp10072_100)))
(assert (= temp10072_102 #x0000000000000003))
(assert (= temp10072_103 temp10072_102))
(assert (= temp10072_104 (select ARGNAME_stride_NAMEEND_VAL temp10072_103)))
(assert (= temp10072_105 #x0000000000000004))
(assert (= temp10072_106 temp10072_105))
(assert (= temp10072_107 (select ARGNAME_stride_NAMEEND_VAL temp10072_106)))
(assert (= temp10072_108 #x0000000000000005))
(assert (= temp10072_109 temp10072_108))
(assert (= temp10072_110 (select ARGNAME_stride_NAMEEND_VAL temp10072_109)))
(assert (= temp10072_111 #x0000000000000000))
(assert (= temp10072_112 #x0000000000000000))
(assert (= temp10072_113 temp10072_112))
(assert (= temp10072_114 (select ARGNAME_stride_NAMEEND_VAL temp10072_113)))
(assert (= temp10072_115 #x0000000000000000))
(assert (= temp10072_116 #x0000000000000001))
(assert (= temp10072_117 temp10072_116))
(assert (= temp10072_118 (select ARGNAME_stride_NAMEEND_VAL temp10072_117)))
(assert (= temp10072_119 #x0000000000000000))
(assert (= temp10072_120 #x0000000000000002))
(assert (= temp10072_121 temp10072_120))
(assert (= temp10072_122 (select ARGNAME_stride_NAMEEND_VAL temp10072_121)))
(assert (= temp10072_123 #x0000000000000000))
(assert (= temp10072_124 #x0000000000000003))
(assert (= temp10072_125 temp10072_124))
(assert (= temp10072_126 (select ARGNAME_stride_NAMEEND_VAL temp10072_125)))
(assert (= temp10072_127 #x0000000000000000))
(assert (= temp10072_128 #x0000000000000004))
(assert (= temp10072_129 temp10072_128))
(assert (= temp10072_130 (select ARGNAME_stride_NAMEEND_VAL temp10072_129)))
(assert (= temp10072_131 #x0000000000000000))
(assert (= temp10072_132 #x0000000000000005))
(assert (= temp10072_133 temp10072_132))
(assert (= temp10072_134 (select ARGNAME_stride_NAMEEND_VAL temp10072_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10072_114 temp10072_111)
             (bvsle temp10072_118 temp10072_115)
             (bvsle temp10072_122 temp10072_119)
             (bvsle temp10072_126 temp10072_123)
             (bvsle temp10072_130 temp10072_127)
             (bvsle temp10072_134 temp10072_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10072_135 #x0000000000000000))
(assert (= var1191735 temp10072_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10072_136 #x0000000000000001))
(assert (= var1191747 temp10072_136))
(assert (= temp10072_137 #x0000000000000000))
(assert (= var1179826 temp10072_137))
(assert (= temp10072_138 #x0000000000000000))
(assert (= temp10072_139 temp10072_138))
(assert (= temp10072_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10072_139)))
(assert (= temp10072_141 #x0000000000000001))
(assert (= temp10072_142 temp10072_141))
(assert (= temp10072_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10072_142)))
(assert (= temp10072_144 #x0000000000000002))
(assert (= temp10072_145 temp10072_144))
(assert (= temp10072_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10072_145)))
(assert (= temp10072_147 #x0000000000000003))
(assert (= temp10072_148 temp10072_147))
(assert (= temp10072_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10072_148)))
(assert (= temp10072_150 #x0000000000000004))
(assert (= temp10072_151 temp10072_150))
(assert (= temp10072_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10072_151)))
(assert (= temp10072_153 #x0000000000000005))
(assert (= temp10072_154 temp10072_153))
(assert (= temp10072_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10072_154)))
(assert (= temp10072_157 var1179826))
(assert (= temp10072_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10072_157)))
(assert (= temp10072_156 temp10072_158))
(assert (= var1191780
   (ite (bvslt temp10072_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10072_159 #x0000000000000000))
(assert (= var1191780 temp10072_159))
(assert (= temp10072_160 #x0000000000000000))
(assert (= var1179826 temp10072_160))
(assert (= temp10072_162 var1179826))
(assert (= temp10072_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10072_162)))
(assert (= temp10072_161 temp10072_163))
(assert (= var1191802 (bvsmod temp10072_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10072_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10072_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10072_165 #x0000000000000001))
(assert (= var1191803 temp10072_165))
(assert (= temp10072_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10072_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10072_167 #x0000000000000001))
(assert (= var1191823 temp10072_167))
(assert (= temp10072_168 #x0000000000000001))
(assert (= var1180714 temp10072_168))
(assert (= temp10072_169 #x0000000000000000))
(assert (= temp10072_170 temp10072_169))
(assert (= temp10072_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10072_170)))
(assert (= temp10072_172 #x0000000000000001))
(assert (= temp10072_173 temp10072_172))
(assert (= temp10072_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10072_173)))
(assert (= temp10072_175 #x0000000000000002))
(assert (= temp10072_176 temp10072_175))
(assert (= temp10072_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10072_176)))
(assert (= temp10072_178 #x0000000000000003))
(assert (= temp10072_179 temp10072_178))
(assert (= temp10072_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10072_179)))
(assert (= temp10072_181 #x0000000000000004))
(assert (= temp10072_182 temp10072_181))
(assert (= temp10072_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10072_182)))
(assert (= temp10072_184 #x0000000000000005))
(assert (= temp10072_185 temp10072_184))
(assert (= temp10072_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10072_185)))
(assert (= temp10072_187 #x0000000000000000))
(assert (= temp10072_188
   (ite (bvslt var1180714 temp10072_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10072_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10072_188)))
(assert (= var1191831 temp10072_189))
(assert (bvslt (ite (bvslt var1180714 temp10072_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10072_190 #x0000000000000001))
(assert (= var1180714 temp10072_190))
(assert (= temp10072_192 var1180714))
(assert (= temp10072_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10072_192)))
(assert (= temp10072_191 temp10072_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10072_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10072_194 #x0000000000000001))
(assert (= var1191836 temp10072_194))
(assert (= temp10072_195 #x0000000000000000))
(assert (= var1179826 temp10072_195))
(assert (= temp10072_197 var1179826))
(assert (= temp10072_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10072_197)))
(assert (= temp10072_196 temp10072_198))
(assert (= temp10072_199 #x0000000000000002))
(assert (= var1586025 temp10072_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10072_200 #x0000000000000001))
(assert (= var1191993 temp10072_200))
(assert (= temp10072_201 #x0000000000000001))
(assert (= var2700303 temp10072_201))
(assert (= temp10072_202 #x0000000000000001))
(assert (= var2962447 temp10072_202))
(assert (= temp10072_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10072_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10072_204 #x0000000000000001))
(assert (= var211058 temp10072_204))
(assert (= temp10072_205 #x0000000000000001))
(assert (= var211188 temp10072_205))
(assert (= var3879401 var211188))
(assert (= temp10072_206 #x0000000000000000))
(assert (= var3866802 temp10072_206))
(assert (= temp10072_207 #x0000000000000000))
(assert (= temp10072_208
   (ite (bvslt var3866802 temp10072_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10072_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10072_208)))
(assert (= var3879420 temp10072_209))
(assert (bvslt (ite (bvslt var3866802 temp10072_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10072_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10072_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10072_211 #x0000000000000000))
(assert (= var3879421 temp10072_211))
(assert (= temp10072_212 #x0000000000000001))
(assert (= var3867690 temp10072_212))
(assert (= temp10072_213 #x0000000000000000))
(assert (= temp10072_214
   (ite (bvslt var3867690 temp10072_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10072_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10072_214)))
(assert (= var3879423 temp10072_215))
(assert (bvslt (ite (bvslt var3867690 temp10072_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10072_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10072_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10072_217 #x0000000000000001))
(assert (= var3879424 temp10072_217))
(assert (= temp10072_218 #x0000000000000000))
(assert (= var4079423 temp10072_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10072_219 #x0000000000000002))
(assert (= var4208259 temp10072_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10072_220 #x0000000000000000))
(assert (= var4273820 temp10072_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10072_222 #xffffffffffffffff))
(assert (= temp10072_221 temp10072_222))
(assert (= temp10072_223 #x0000000000000001))
(assert (= var197674 temp10072_223))
(assert (= temp10072_224 #x0000000000000000))
(assert (= temp10072_225
   (ite (bvslt var197674 temp10072_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10072_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10072_225)))
(assert (= var211595 temp10072_226))
(assert (bvslt (ite (bvslt var197674 temp10072_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10072_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10072_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10072_228 #x0000000000000001))
(assert (= var211596 temp10072_228))
(assert (= temp10072_230 #xffffffffffffffff))
(assert (= temp10072_229 temp10072_230))
(assert (= temp10072_231 #x0000000000000001))
(assert (= var211058 temp10072_231))
(model-add temp10072_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10072_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10072_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10072_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



