(declare-fun temp242_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp242_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp242_3 () (_ BitVec 64))
(declare-fun temp242_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp242_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp242_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp242_7 () (_ BitVec 64))
(declare-fun temp242_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp242_9 () (_ BitVec 64))
(declare-fun temp242_10 () (_ BitVec 64))
(declare-fun temp242_11 () (_ BitVec 64))
(declare-fun temp242_12 () (_ BitVec 64))
(declare-fun temp242_13 () (_ BitVec 64))
(declare-fun temp242_14 () (_ BitVec 64))
(declare-fun temp242_15 () (_ BitVec 64))
(declare-fun temp242_16 () (_ BitVec 64))
(declare-fun temp242_17 () (_ BitVec 64))
(declare-fun temp242_18 () (_ BitVec 64))
(declare-fun temp242_19 () (_ BitVec 64))
(declare-fun temp242_20 () (_ BitVec 64))
(declare-fun temp242_21 () (_ BitVec 64))
(declare-fun temp242_22 () (_ BitVec 64))
(declare-fun temp242_23 () (_ BitVec 64))
(declare-fun temp242_24 () (_ BitVec 64))
(declare-fun temp242_25 () (_ BitVec 64))
(declare-fun temp242_26 () (_ BitVec 64))
(declare-fun temp242_27 () (_ BitVec 64))
(declare-fun temp242_28 () (_ BitVec 64))
(declare-fun temp242_29 () (_ BitVec 64))
(declare-fun temp242_30 () (_ BitVec 64))
(declare-fun temp242_31 () (_ BitVec 64))
(declare-fun temp242_32 () (_ BitVec 64))
(declare-fun temp242_33 () (_ BitVec 64))
(declare-fun temp242_34 () (_ BitVec 64))
(declare-fun temp242_35 () (_ BitVec 64))
(declare-fun temp242_36 () (_ BitVec 64))
(declare-fun temp242_37 () (_ BitVec 64))
(declare-fun temp242_38 () (_ BitVec 64))
(declare-fun temp242_39 () (_ BitVec 64))
(declare-fun temp242_40 () (_ BitVec 64))
(declare-fun temp242_41 () (_ BitVec 64))
(declare-fun temp242_42 () (_ BitVec 64))
(declare-fun temp242_43 () (_ BitVec 64))
(declare-fun temp242_44 () (_ BitVec 64))
(declare-fun temp242_45 () (_ BitVec 64))
(declare-fun temp242_46 () (_ BitVec 64))
(declare-fun temp242_47 () (_ BitVec 64))
(declare-fun temp242_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp242_49 () (_ BitVec 64))
(declare-fun temp242_50 () (_ BitVec 64))
(declare-fun temp242_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp242_52 () (_ BitVec 64))
(declare-fun temp242_53 () (_ BitVec 64))
(declare-fun temp242_54 () (_ BitVec 64))
(declare-fun temp242_55 () (_ BitVec 64))
(declare-fun temp242_56 () (_ BitVec 64))
(declare-fun temp242_57 () (_ BitVec 64))
(declare-fun temp242_58 () (_ BitVec 64))
(declare-fun temp242_59 () (_ BitVec 64))
(declare-fun temp242_60 () (_ BitVec 64))
(declare-fun temp242_61 () (_ BitVec 64))
(declare-fun temp242_62 () (_ BitVec 64))
(declare-fun temp242_63 () (_ BitVec 64))
(declare-fun temp242_64 () (_ BitVec 64))
(declare-fun temp242_65 () (_ BitVec 64))
(declare-fun temp242_66 () (_ BitVec 64))
(declare-fun temp242_67 () (_ BitVec 64))
(declare-fun temp242_68 () (_ BitVec 64))
(declare-fun temp242_69 () (_ BitVec 64))
(declare-fun temp242_70 () (_ BitVec 64))
(declare-fun temp242_71 () (_ BitVec 64))
(declare-fun temp242_72 () (_ BitVec 64))
(declare-fun temp242_73 () (_ BitVec 64))
(declare-fun temp242_74 () (_ BitVec 64))
(declare-fun temp242_75 () (_ BitVec 64))
(declare-fun temp242_76 () (_ BitVec 64))
(declare-fun temp242_77 () (_ BitVec 64))
(declare-fun temp242_78 () (_ BitVec 64))
(declare-fun temp242_79 () (_ BitVec 64))
(declare-fun temp242_80 () (_ BitVec 64))
(declare-fun temp242_81 () (_ BitVec 64))
(declare-fun temp242_82 () (_ BitVec 64))
(declare-fun temp242_83 () (_ BitVec 64))
(declare-fun temp242_84 () (_ BitVec 64))
(declare-fun temp242_85 () (_ BitVec 64))
(declare-fun temp242_86 () (_ BitVec 64))
(declare-fun temp242_87 () (_ BitVec 64))
(declare-fun temp242_88 () (_ BitVec 64))
(declare-fun temp242_89 () (_ BitVec 64))
(declare-fun temp242_90 () (_ BitVec 64))
(declare-fun temp242_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp242_92 () (_ BitVec 64))
(declare-fun temp242_93 () (_ BitVec 64))
(declare-fun temp242_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp242_95 () (_ BitVec 64))
(declare-fun temp242_96 () (_ BitVec 64))
(declare-fun temp242_97 () (_ BitVec 64))
(declare-fun temp242_98 () (_ BitVec 64))
(declare-fun temp242_99 () (_ BitVec 64))
(declare-fun temp242_100 () (_ BitVec 64))
(declare-fun temp242_101 () (_ BitVec 64))
(declare-fun temp242_102 () (_ BitVec 64))
(declare-fun temp242_103 () (_ BitVec 64))
(declare-fun temp242_104 () (_ BitVec 64))
(declare-fun temp242_105 () (_ BitVec 64))
(declare-fun temp242_106 () (_ BitVec 64))
(declare-fun temp242_107 () (_ BitVec 64))
(declare-fun temp242_108 () (_ BitVec 64))
(declare-fun temp242_109 () (_ BitVec 64))
(declare-fun temp242_110 () (_ BitVec 64))
(declare-fun temp242_111 () (_ BitVec 64))
(declare-fun temp242_112 () (_ BitVec 64))
(declare-fun temp242_113 () (_ BitVec 64))
(declare-fun temp242_114 () (_ BitVec 64))
(declare-fun temp242_115 () (_ BitVec 64))
(declare-fun temp242_116 () (_ BitVec 64))
(declare-fun temp242_117 () (_ BitVec 64))
(declare-fun temp242_118 () (_ BitVec 64))
(declare-fun temp242_119 () (_ BitVec 64))
(declare-fun temp242_120 () (_ BitVec 64))
(declare-fun temp242_121 () (_ BitVec 64))
(declare-fun temp242_122 () (_ BitVec 64))
(declare-fun temp242_123 () (_ BitVec 64))
(declare-fun temp242_124 () (_ BitVec 64))
(declare-fun temp242_125 () (_ BitVec 64))
(declare-fun temp242_126 () (_ BitVec 64))
(declare-fun temp242_127 () (_ BitVec 64))
(declare-fun temp242_128 () (_ BitVec 64))
(declare-fun temp242_129 () (_ BitVec 64))
(declare-fun temp242_130 () (_ BitVec 64))
(declare-fun temp242_131 () (_ BitVec 64))
(declare-fun temp242_132 () (_ BitVec 64))
(declare-fun temp242_133 () (_ BitVec 64))
(declare-fun temp242_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp242_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp242_136 () (_ BitVec 64))
(declare-fun temp242_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp242_138 () (_ BitVec 64))
(declare-fun temp242_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp242_140 () (_ BitVec 64))
(declare-fun temp242_141 () (_ BitVec 64))
(declare-fun temp242_142 () (_ BitVec 64))
(declare-fun temp242_143 () (_ BitVec 64))
(declare-fun temp242_144 () (_ BitVec 64))
(declare-fun temp242_145 () (_ BitVec 64))
(declare-fun temp242_146 () (_ BitVec 64))
(declare-fun temp242_147 () (_ BitVec 64))
(declare-fun temp242_148 () (_ BitVec 64))
(declare-fun temp242_149 () (_ BitVec 64))
(declare-fun temp242_150 () (_ BitVec 64))
(declare-fun temp242_151 () (_ BitVec 64))
(declare-fun temp242_152 () (_ BitVec 64))
(declare-fun temp242_153 () (_ BitVec 64))
(declare-fun temp242_154 () (_ BitVec 64))
(declare-fun temp242_155 () (_ BitVec 64))
(declare-fun temp242_157 () (_ BitVec 64))
(declare-fun temp242_158 () (_ BitVec 64))
(declare-fun temp242_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp242_159 () (_ BitVec 64))
(declare-fun temp242_160 () (_ BitVec 64))
(declare-fun temp242_162 () (_ BitVec 64))
(declare-fun temp242_163 () (_ BitVec 64))
(declare-fun temp242_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp242_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp242_165 () (_ BitVec 64))
(declare-fun temp242_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp242_167 () (_ BitVec 64))
(declare-fun temp242_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp242_169 () (_ BitVec 64))
(declare-fun temp242_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp242_171 () (_ BitVec 64))
(declare-fun temp242_172 () (_ BitVec 64))
(declare-fun temp242_173 () (_ BitVec 64))
(declare-fun temp242_174 () (_ BitVec 64))
(declare-fun temp242_175 () (_ BitVec 64))
(declare-fun temp242_176 () (_ BitVec 64))
(declare-fun temp242_177 () (_ BitVec 64))
(declare-fun temp242_178 () (_ BitVec 64))
(declare-fun temp242_179 () (_ BitVec 64))
(declare-fun temp242_180 () (_ BitVec 64))
(declare-fun temp242_181 () (_ BitVec 64))
(declare-fun temp242_182 () (_ BitVec 64))
(declare-fun temp242_183 () (_ BitVec 64))
(declare-fun temp242_184 () (_ BitVec 64))
(declare-fun temp242_185 () (_ BitVec 64))
(declare-fun temp242_186 () (_ BitVec 64))
(declare-fun temp242_187 () (_ BitVec 64))
(declare-fun temp242_188 () (_ BitVec 64))
(declare-fun temp242_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp242_190 () (_ BitVec 64))
(declare-fun temp242_192 () (_ BitVec 64))
(declare-fun temp242_193 () (_ BitVec 64))
(declare-fun temp242_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp242_194 () (_ BitVec 64))
(declare-fun temp242_195 () (_ BitVec 64))
(declare-fun temp242_197 () (_ BitVec 64))
(declare-fun temp242_198 () (_ BitVec 64))
(declare-fun temp242_196 () (_ BitVec 64))
(declare-fun temp242_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp242_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp242_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp242_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp242_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp242_204 () (_ BitVec 64))
(declare-fun temp242_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp242_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp242_207 () (_ BitVec 64))
(declare-fun temp242_208 () (_ BitVec 64))
(declare-fun temp242_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp242_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp242_211 () (_ BitVec 64))
(declare-fun temp242_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp242_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp242_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211962 () (_ BitVec 64))
(declare-fun temp242_215 () (_ BitVec 64))
(declare-fun var211963 () (_ BitVec 64))
(declare-fun temp242_216 () (_ BitVec 64))
(assert (= temp242_1 #x0000000000000001))
(assert (= var77203 temp242_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp242_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp242_2)))
(assert (= temp242_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp242_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp242_4 #x0000000000000000))
(assert (= var210941 temp242_4))
(assert (= temp242_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp242_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp242_6 #x0000000000000000))
(assert (= var210986 temp242_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp242_7 #x0000000000000000))
(assert (= temp242_8 temp242_7))
(assert (= temp242_9 (select ARGNAME_padding_NAMEEND_VAL temp242_8)))
(assert (= temp242_10 #x0000000000000001))
(assert (= temp242_11 temp242_10))
(assert (= temp242_12 (select ARGNAME_padding_NAMEEND_VAL temp242_11)))
(assert (= temp242_13 #x0000000000000002))
(assert (= temp242_14 temp242_13))
(assert (= temp242_15 (select ARGNAME_padding_NAMEEND_VAL temp242_14)))
(assert (= temp242_16 #x0000000000000003))
(assert (= temp242_17 temp242_16))
(assert (= temp242_18 (select ARGNAME_padding_NAMEEND_VAL temp242_17)))
(assert (= temp242_19 #x0000000000000004))
(assert (= temp242_20 temp242_19))
(assert (= temp242_21 (select ARGNAME_padding_NAMEEND_VAL temp242_20)))
(assert (= temp242_22 #x0000000000000005))
(assert (= temp242_23 temp242_22))
(assert (= temp242_24 (select ARGNAME_padding_NAMEEND_VAL temp242_23)))
(assert (= temp242_25 #x0000000000000000))
(assert (= temp242_26 #x0000000000000000))
(assert (= temp242_27 temp242_26))
(assert (= temp242_28 (select ARGNAME_padding_NAMEEND_VAL temp242_27)))
(assert (= temp242_29 #x0000000000000000))
(assert (= temp242_30 #x0000000000000001))
(assert (= temp242_31 temp242_30))
(assert (= temp242_32 (select ARGNAME_padding_NAMEEND_VAL temp242_31)))
(assert (= temp242_33 #x0000000000000000))
(assert (= temp242_34 #x0000000000000002))
(assert (= temp242_35 temp242_34))
(assert (= temp242_36 (select ARGNAME_padding_NAMEEND_VAL temp242_35)))
(assert (= temp242_37 #x0000000000000000))
(assert (= temp242_38 #x0000000000000003))
(assert (= temp242_39 temp242_38))
(assert (= temp242_40 (select ARGNAME_padding_NAMEEND_VAL temp242_39)))
(assert (= temp242_41 #x0000000000000000))
(assert (= temp242_42 #x0000000000000004))
(assert (= temp242_43 temp242_42))
(assert (= temp242_44 (select ARGNAME_padding_NAMEEND_VAL temp242_43)))
(assert (= temp242_45 #x0000000000000000))
(assert (= temp242_46 #x0000000000000005))
(assert (= temp242_47 temp242_46))
(assert (= temp242_48 (select ARGNAME_padding_NAMEEND_VAL temp242_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp242_28 temp242_25)
             (bvslt temp242_32 temp242_29)
             (bvslt temp242_36 temp242_33)
             (bvslt temp242_40 temp242_37)
             (bvslt temp242_44 temp242_41)
             (bvslt temp242_48 temp242_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp242_49 #x0000000000000000))
(assert (= var1191714 temp242_49))
(assert (= temp242_50 #x0000000000000000))
(assert (= temp242_51 temp242_50))
(assert (= temp242_52 (select ARGNAME_output_padding_NAMEEND_VAL temp242_51)))
(assert (= temp242_53 #x0000000000000001))
(assert (= temp242_54 temp242_53))
(assert (= temp242_55 (select ARGNAME_output_padding_NAMEEND_VAL temp242_54)))
(assert (= temp242_56 #x0000000000000002))
(assert (= temp242_57 temp242_56))
(assert (= temp242_58 (select ARGNAME_output_padding_NAMEEND_VAL temp242_57)))
(assert (= temp242_59 #x0000000000000003))
(assert (= temp242_60 temp242_59))
(assert (= temp242_61 (select ARGNAME_output_padding_NAMEEND_VAL temp242_60)))
(assert (= temp242_62 #x0000000000000004))
(assert (= temp242_63 temp242_62))
(assert (= temp242_64 (select ARGNAME_output_padding_NAMEEND_VAL temp242_63)))
(assert (= temp242_65 #x0000000000000005))
(assert (= temp242_66 temp242_65))
(assert (= temp242_67 (select ARGNAME_output_padding_NAMEEND_VAL temp242_66)))
(assert (= temp242_68 #x0000000000000000))
(assert (= temp242_69 #x0000000000000000))
(assert (= temp242_70 temp242_69))
(assert (= temp242_71 (select ARGNAME_output_padding_NAMEEND_VAL temp242_70)))
(assert (= temp242_72 #x0000000000000000))
(assert (= temp242_73 #x0000000000000001))
(assert (= temp242_74 temp242_73))
(assert (= temp242_75 (select ARGNAME_output_padding_NAMEEND_VAL temp242_74)))
(assert (= temp242_76 #x0000000000000000))
(assert (= temp242_77 #x0000000000000002))
(assert (= temp242_78 temp242_77))
(assert (= temp242_79 (select ARGNAME_output_padding_NAMEEND_VAL temp242_78)))
(assert (= temp242_80 #x0000000000000000))
(assert (= temp242_81 #x0000000000000003))
(assert (= temp242_82 temp242_81))
(assert (= temp242_83 (select ARGNAME_output_padding_NAMEEND_VAL temp242_82)))
(assert (= temp242_84 #x0000000000000000))
(assert (= temp242_85 #x0000000000000004))
(assert (= temp242_86 temp242_85))
(assert (= temp242_87 (select ARGNAME_output_padding_NAMEEND_VAL temp242_86)))
(assert (= temp242_88 #x0000000000000000))
(assert (= temp242_89 #x0000000000000005))
(assert (= temp242_90 temp242_89))
(assert (= temp242_91 (select ARGNAME_output_padding_NAMEEND_VAL temp242_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp242_71 temp242_68)
             (bvslt temp242_75 temp242_72)
             (bvslt temp242_79 temp242_76)
             (bvslt temp242_83 temp242_80)
             (bvslt temp242_87 temp242_84)
             (bvslt temp242_91 temp242_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp242_92 #x0000000000000000))
(assert (= var1191725 temp242_92))
(assert (= temp242_93 #x0000000000000000))
(assert (= temp242_94 temp242_93))
(assert (= temp242_95 (select ARGNAME_stride_NAMEEND_VAL temp242_94)))
(assert (= temp242_96 #x0000000000000001))
(assert (= temp242_97 temp242_96))
(assert (= temp242_98 (select ARGNAME_stride_NAMEEND_VAL temp242_97)))
(assert (= temp242_99 #x0000000000000002))
(assert (= temp242_100 temp242_99))
(assert (= temp242_101 (select ARGNAME_stride_NAMEEND_VAL temp242_100)))
(assert (= temp242_102 #x0000000000000003))
(assert (= temp242_103 temp242_102))
(assert (= temp242_104 (select ARGNAME_stride_NAMEEND_VAL temp242_103)))
(assert (= temp242_105 #x0000000000000004))
(assert (= temp242_106 temp242_105))
(assert (= temp242_107 (select ARGNAME_stride_NAMEEND_VAL temp242_106)))
(assert (= temp242_108 #x0000000000000005))
(assert (= temp242_109 temp242_108))
(assert (= temp242_110 (select ARGNAME_stride_NAMEEND_VAL temp242_109)))
(assert (= temp242_111 #x0000000000000000))
(assert (= temp242_112 #x0000000000000000))
(assert (= temp242_113 temp242_112))
(assert (= temp242_114 (select ARGNAME_stride_NAMEEND_VAL temp242_113)))
(assert (= temp242_115 #x0000000000000000))
(assert (= temp242_116 #x0000000000000001))
(assert (= temp242_117 temp242_116))
(assert (= temp242_118 (select ARGNAME_stride_NAMEEND_VAL temp242_117)))
(assert (= temp242_119 #x0000000000000000))
(assert (= temp242_120 #x0000000000000002))
(assert (= temp242_121 temp242_120))
(assert (= temp242_122 (select ARGNAME_stride_NAMEEND_VAL temp242_121)))
(assert (= temp242_123 #x0000000000000000))
(assert (= temp242_124 #x0000000000000003))
(assert (= temp242_125 temp242_124))
(assert (= temp242_126 (select ARGNAME_stride_NAMEEND_VAL temp242_125)))
(assert (= temp242_127 #x0000000000000000))
(assert (= temp242_128 #x0000000000000004))
(assert (= temp242_129 temp242_128))
(assert (= temp242_130 (select ARGNAME_stride_NAMEEND_VAL temp242_129)))
(assert (= temp242_131 #x0000000000000000))
(assert (= temp242_132 #x0000000000000005))
(assert (= temp242_133 temp242_132))
(assert (= temp242_134 (select ARGNAME_stride_NAMEEND_VAL temp242_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp242_114 temp242_111)
             (bvsle temp242_118 temp242_115)
             (bvsle temp242_122 temp242_119)
             (bvsle temp242_126 temp242_123)
             (bvsle temp242_130 temp242_127)
             (bvsle temp242_134 temp242_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp242_135 #x0000000000000000))
(assert (= var1191735 temp242_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp242_136 #x0000000000000001))
(assert (= var1191747 temp242_136))
(assert (= temp242_137 #x0000000000000000))
(assert (= var1179826 temp242_137))
(assert (= temp242_138 #x0000000000000000))
(assert (= temp242_139 temp242_138))
(assert (= temp242_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp242_139)))
(assert (= temp242_141 #x0000000000000001))
(assert (= temp242_142 temp242_141))
(assert (= temp242_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp242_142)))
(assert (= temp242_144 #x0000000000000002))
(assert (= temp242_145 temp242_144))
(assert (= temp242_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp242_145)))
(assert (= temp242_147 #x0000000000000003))
(assert (= temp242_148 temp242_147))
(assert (= temp242_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp242_148)))
(assert (= temp242_150 #x0000000000000004))
(assert (= temp242_151 temp242_150))
(assert (= temp242_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp242_151)))
(assert (= temp242_153 #x0000000000000005))
(assert (= temp242_154 temp242_153))
(assert (= temp242_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp242_154)))
(assert (= temp242_157 var1179826))
(assert (= temp242_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp242_157)))
(assert (= temp242_156 temp242_158))
(assert (= var1191780
   (ite (bvslt temp242_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp242_159 #x0000000000000000))
(assert (= var1191780 temp242_159))
(assert (= temp242_160 #x0000000000000000))
(assert (= var1179826 temp242_160))
(assert (= temp242_162 var1179826))
(assert (= temp242_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp242_162)))
(assert (= temp242_161 temp242_163))
(assert (= var1191802 (bvsmod temp242_161 ARGNAME_groups_NAMEEND)))
(assert (= temp242_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp242_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp242_165 #x0000000000000001))
(assert (= var1191803 temp242_165))
(assert (= temp242_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp242_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp242_167 #x0000000000000001))
(assert (= var1191823 temp242_167))
(assert (= temp242_168 #x0000000000000001))
(assert (= var1180714 temp242_168))
(assert (= temp242_169 #x0000000000000000))
(assert (= temp242_170 temp242_169))
(assert (= temp242_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp242_170)))
(assert (= temp242_172 #x0000000000000001))
(assert (= temp242_173 temp242_172))
(assert (= temp242_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp242_173)))
(assert (= temp242_175 #x0000000000000002))
(assert (= temp242_176 temp242_175))
(assert (= temp242_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp242_176)))
(assert (= temp242_178 #x0000000000000003))
(assert (= temp242_179 temp242_178))
(assert (= temp242_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp242_179)))
(assert (= temp242_181 #x0000000000000004))
(assert (= temp242_182 temp242_181))
(assert (= temp242_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp242_182)))
(assert (= temp242_184 #x0000000000000005))
(assert (= temp242_185 temp242_184))
(assert (= temp242_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp242_185)))
(assert (= temp242_187 #x0000000000000000))
(assert (= temp242_188
   (ite (bvslt var1180714 temp242_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp242_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp242_188)))
(assert (= var1191831 temp242_189))
(assert (bvslt (ite (bvslt var1180714 temp242_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp242_190 #x0000000000000001))
(assert (= var1180714 temp242_190))
(assert (= temp242_192 var1180714))
(assert (= temp242_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp242_192)))
(assert (= temp242_191 temp242_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp242_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp242_194 #x0000000000000001))
(assert (= var1191836 temp242_194))
(assert (= temp242_195 #x0000000000000000))
(assert (= var1179826 temp242_195))
(assert (= temp242_197 var1179826))
(assert (= temp242_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp242_197)))
(assert (= temp242_196 temp242_198))
(assert (= temp242_199 #x0000000000000002))
(assert (= var1586025 temp242_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp242_200 #x0000000000000001))
(assert (= var1191993 temp242_200))
(assert (= temp242_201 #x0000000000000001))
(assert (= var2700303 temp242_201))
(assert (= temp242_202 #x0000000000000001))
(assert (= var2962447 temp242_202))
(assert (= temp242_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp242_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp242_204 #x0000000000000001))
(assert (= var211058 temp242_204))
(assert (= temp242_205 #x0000000000000001))
(assert (= var211188 temp242_205))
(assert (= var3879401 var211188))
(assert (= temp242_206 #x0000000000000000))
(assert (= var3866802 temp242_206))
(assert (= temp242_207 #x0000000000000000))
(assert (= temp242_208
   (ite (bvslt var3866802 temp242_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp242_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp242_208)))
(assert (= var3879420 temp242_209))
(assert (bvslt (ite (bvslt var3866802 temp242_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp242_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp242_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp242_211 #x0000000000000001))
(assert (= var3879421 temp242_211))
(assert (= temp242_212 #x0000000000000000))
(assert (= var4079423 temp242_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp242_213 #x0000000000000002))
(assert (= var4208259 temp242_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp242_214 #x0000000000000000))
(assert (= var4273820 temp242_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211962 var210913))
(assert (= temp242_215 #x0000000000000000))
(assert (= var211963
   (ite (distinct var211962 temp242_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp242_216 #x0000000000000001))
(assert (= var211058 temp242_216))
(model-add temp242_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp242_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp242_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp242_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




