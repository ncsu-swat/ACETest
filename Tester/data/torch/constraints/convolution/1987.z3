(declare-fun temp11508_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11508_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11508_3 () (_ BitVec 64))
(declare-fun temp11508_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11508_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11508_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11508_7 () (_ BitVec 64))
(declare-fun temp11508_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11508_9 () (_ BitVec 64))
(declare-fun temp11508_10 () (_ BitVec 64))
(declare-fun temp11508_11 () (_ BitVec 64))
(declare-fun temp11508_12 () (_ BitVec 64))
(declare-fun temp11508_13 () (_ BitVec 64))
(declare-fun temp11508_14 () (_ BitVec 64))
(declare-fun temp11508_15 () (_ BitVec 64))
(declare-fun temp11508_16 () (_ BitVec 64))
(declare-fun temp11508_17 () (_ BitVec 64))
(declare-fun temp11508_18 () (_ BitVec 64))
(declare-fun temp11508_19 () (_ BitVec 64))
(declare-fun temp11508_20 () (_ BitVec 64))
(declare-fun temp11508_21 () (_ BitVec 64))
(declare-fun temp11508_22 () (_ BitVec 64))
(declare-fun temp11508_23 () (_ BitVec 64))
(declare-fun temp11508_24 () (_ BitVec 64))
(declare-fun temp11508_25 () (_ BitVec 64))
(declare-fun temp11508_26 () (_ BitVec 64))
(declare-fun temp11508_27 () (_ BitVec 64))
(declare-fun temp11508_28 () (_ BitVec 64))
(declare-fun temp11508_29 () (_ BitVec 64))
(declare-fun temp11508_30 () (_ BitVec 64))
(declare-fun temp11508_31 () (_ BitVec 64))
(declare-fun temp11508_32 () (_ BitVec 64))
(declare-fun temp11508_33 () (_ BitVec 64))
(declare-fun temp11508_34 () (_ BitVec 64))
(declare-fun temp11508_35 () (_ BitVec 64))
(declare-fun temp11508_36 () (_ BitVec 64))
(declare-fun temp11508_37 () (_ BitVec 64))
(declare-fun temp11508_38 () (_ BitVec 64))
(declare-fun temp11508_39 () (_ BitVec 64))
(declare-fun temp11508_40 () (_ BitVec 64))
(declare-fun temp11508_41 () (_ BitVec 64))
(declare-fun temp11508_42 () (_ BitVec 64))
(declare-fun temp11508_43 () (_ BitVec 64))
(declare-fun temp11508_44 () (_ BitVec 64))
(declare-fun temp11508_45 () (_ BitVec 64))
(declare-fun temp11508_46 () (_ BitVec 64))
(declare-fun temp11508_47 () (_ BitVec 64))
(declare-fun temp11508_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11508_49 () (_ BitVec 64))
(declare-fun temp11508_50 () (_ BitVec 64))
(declare-fun temp11508_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11508_52 () (_ BitVec 64))
(declare-fun temp11508_53 () (_ BitVec 64))
(declare-fun temp11508_54 () (_ BitVec 64))
(declare-fun temp11508_55 () (_ BitVec 64))
(declare-fun temp11508_56 () (_ BitVec 64))
(declare-fun temp11508_57 () (_ BitVec 64))
(declare-fun temp11508_58 () (_ BitVec 64))
(declare-fun temp11508_59 () (_ BitVec 64))
(declare-fun temp11508_60 () (_ BitVec 64))
(declare-fun temp11508_61 () (_ BitVec 64))
(declare-fun temp11508_62 () (_ BitVec 64))
(declare-fun temp11508_63 () (_ BitVec 64))
(declare-fun temp11508_64 () (_ BitVec 64))
(declare-fun temp11508_65 () (_ BitVec 64))
(declare-fun temp11508_66 () (_ BitVec 64))
(declare-fun temp11508_67 () (_ BitVec 64))
(declare-fun temp11508_68 () (_ BitVec 64))
(declare-fun temp11508_69 () (_ BitVec 64))
(declare-fun temp11508_70 () (_ BitVec 64))
(declare-fun temp11508_71 () (_ BitVec 64))
(declare-fun temp11508_72 () (_ BitVec 64))
(declare-fun temp11508_73 () (_ BitVec 64))
(declare-fun temp11508_74 () (_ BitVec 64))
(declare-fun temp11508_75 () (_ BitVec 64))
(declare-fun temp11508_76 () (_ BitVec 64))
(declare-fun temp11508_77 () (_ BitVec 64))
(declare-fun temp11508_78 () (_ BitVec 64))
(declare-fun temp11508_79 () (_ BitVec 64))
(declare-fun temp11508_80 () (_ BitVec 64))
(declare-fun temp11508_81 () (_ BitVec 64))
(declare-fun temp11508_82 () (_ BitVec 64))
(declare-fun temp11508_83 () (_ BitVec 64))
(declare-fun temp11508_84 () (_ BitVec 64))
(declare-fun temp11508_85 () (_ BitVec 64))
(declare-fun temp11508_86 () (_ BitVec 64))
(declare-fun temp11508_87 () (_ BitVec 64))
(declare-fun temp11508_88 () (_ BitVec 64))
(declare-fun temp11508_89 () (_ BitVec 64))
(declare-fun temp11508_90 () (_ BitVec 64))
(declare-fun temp11508_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11508_92 () (_ BitVec 64))
(declare-fun temp11508_93 () (_ BitVec 64))
(declare-fun temp11508_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11508_95 () (_ BitVec 64))
(declare-fun temp11508_96 () (_ BitVec 64))
(declare-fun temp11508_97 () (_ BitVec 64))
(declare-fun temp11508_98 () (_ BitVec 64))
(declare-fun temp11508_99 () (_ BitVec 64))
(declare-fun temp11508_100 () (_ BitVec 64))
(declare-fun temp11508_101 () (_ BitVec 64))
(declare-fun temp11508_102 () (_ BitVec 64))
(declare-fun temp11508_103 () (_ BitVec 64))
(declare-fun temp11508_104 () (_ BitVec 64))
(declare-fun temp11508_105 () (_ BitVec 64))
(declare-fun temp11508_106 () (_ BitVec 64))
(declare-fun temp11508_107 () (_ BitVec 64))
(declare-fun temp11508_108 () (_ BitVec 64))
(declare-fun temp11508_109 () (_ BitVec 64))
(declare-fun temp11508_110 () (_ BitVec 64))
(declare-fun temp11508_111 () (_ BitVec 64))
(declare-fun temp11508_112 () (_ BitVec 64))
(declare-fun temp11508_113 () (_ BitVec 64))
(declare-fun temp11508_114 () (_ BitVec 64))
(declare-fun temp11508_115 () (_ BitVec 64))
(declare-fun temp11508_116 () (_ BitVec 64))
(declare-fun temp11508_117 () (_ BitVec 64))
(declare-fun temp11508_118 () (_ BitVec 64))
(declare-fun temp11508_119 () (_ BitVec 64))
(declare-fun temp11508_120 () (_ BitVec 64))
(declare-fun temp11508_121 () (_ BitVec 64))
(declare-fun temp11508_122 () (_ BitVec 64))
(declare-fun temp11508_123 () (_ BitVec 64))
(declare-fun temp11508_124 () (_ BitVec 64))
(declare-fun temp11508_125 () (_ BitVec 64))
(declare-fun temp11508_126 () (_ BitVec 64))
(declare-fun temp11508_127 () (_ BitVec 64))
(declare-fun temp11508_128 () (_ BitVec 64))
(declare-fun temp11508_129 () (_ BitVec 64))
(declare-fun temp11508_130 () (_ BitVec 64))
(declare-fun temp11508_131 () (_ BitVec 64))
(declare-fun temp11508_132 () (_ BitVec 64))
(declare-fun temp11508_133 () (_ BitVec 64))
(declare-fun temp11508_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11508_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11508_136 () (_ BitVec 64))
(declare-fun temp11508_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11508_138 () (_ BitVec 64))
(declare-fun temp11508_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11508_140 () (_ BitVec 64))
(declare-fun temp11508_141 () (_ BitVec 64))
(declare-fun temp11508_142 () (_ BitVec 64))
(declare-fun temp11508_143 () (_ BitVec 64))
(declare-fun temp11508_144 () (_ BitVec 64))
(declare-fun temp11508_145 () (_ BitVec 64))
(declare-fun temp11508_146 () (_ BitVec 64))
(declare-fun temp11508_147 () (_ BitVec 64))
(declare-fun temp11508_148 () (_ BitVec 64))
(declare-fun temp11508_149 () (_ BitVec 64))
(declare-fun temp11508_150 () (_ BitVec 64))
(declare-fun temp11508_151 () (_ BitVec 64))
(declare-fun temp11508_152 () (_ BitVec 64))
(declare-fun temp11508_153 () (_ BitVec 64))
(declare-fun temp11508_154 () (_ BitVec 64))
(declare-fun temp11508_155 () (_ BitVec 64))
(declare-fun temp11508_157 () (_ BitVec 64))
(declare-fun temp11508_158 () (_ BitVec 64))
(declare-fun temp11508_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11508_159 () (_ BitVec 64))
(declare-fun temp11508_160 () (_ BitVec 64))
(declare-fun temp11508_162 () (_ BitVec 64))
(declare-fun temp11508_163 () (_ BitVec 64))
(declare-fun temp11508_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11508_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11508_165 () (_ BitVec 64))
(declare-fun temp11508_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11508_167 () (_ BitVec 64))
(declare-fun temp11508_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11508_169 () (_ BitVec 64))
(declare-fun temp11508_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11508_171 () (_ BitVec 64))
(declare-fun temp11508_172 () (_ BitVec 64))
(declare-fun temp11508_173 () (_ BitVec 64))
(declare-fun temp11508_174 () (_ BitVec 64))
(declare-fun temp11508_175 () (_ BitVec 64))
(declare-fun temp11508_176 () (_ BitVec 64))
(declare-fun temp11508_177 () (_ BitVec 64))
(declare-fun temp11508_178 () (_ BitVec 64))
(declare-fun temp11508_179 () (_ BitVec 64))
(declare-fun temp11508_180 () (_ BitVec 64))
(declare-fun temp11508_181 () (_ BitVec 64))
(declare-fun temp11508_182 () (_ BitVec 64))
(declare-fun temp11508_183 () (_ BitVec 64))
(declare-fun temp11508_184 () (_ BitVec 64))
(declare-fun temp11508_185 () (_ BitVec 64))
(declare-fun temp11508_186 () (_ BitVec 64))
(declare-fun temp11508_187 () (_ BitVec 64))
(declare-fun temp11508_188 () (_ BitVec 64))
(declare-fun temp11508_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11508_190 () (_ BitVec 64))
(declare-fun temp11508_192 () (_ BitVec 64))
(declare-fun temp11508_193 () (_ BitVec 64))
(declare-fun temp11508_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11508_194 () (_ BitVec 64))
(declare-fun temp11508_195 () (_ BitVec 64))
(declare-fun temp11508_197 () (_ BitVec 64))
(declare-fun temp11508_198 () (_ BitVec 64))
(declare-fun temp11508_196 () (_ BitVec 64))
(declare-fun temp11508_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11508_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11508_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11508_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11508_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11508_204 () (_ BitVec 64))
(declare-fun temp11508_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11508_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11508_207 () (_ BitVec 64))
(declare-fun temp11508_208 () (_ BitVec 64))
(declare-fun temp11508_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11508_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11508_211 () (_ BitVec 64))
(declare-fun temp11508_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11508_213 () (_ BitVec 64))
(declare-fun temp11508_214 () (_ BitVec 64))
(declare-fun temp11508_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11508_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11508_217 () (_ BitVec 64))
(declare-fun temp11508_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11508_219 () (_ BitVec 64))
(declare-fun var4404867 () (_ BitVec 64))
(declare-fun var4404869 () (_ BitVec 64))
(declare-fun var4470412 () (_ BitVec 64))
(declare-fun var4470413 () (_ BitVec 64))
(declare-fun var4470426 () (_ BitVec 64))
(declare-fun var4470428 () (_ BitVec 64))
(declare-fun temp11508_220 () (_ BitVec 64))
(declare-fun var4470453 () (_ BitVec 64))
(declare-fun var4470455 () (_ BitVec 64))
(declare-fun var4591443 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp11508_221 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp11508_222 () (_ BitVec 64))
(declare-fun temp11508_223 () (_ BitVec 64))
(declare-fun var7353108 () (_ BitVec 64))
(declare-fun var7353075 () (_ BitVec 64))
(declare-fun var7221639 () (_ BitVec 64))
(declare-fun var7221635 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp11508_224 () (_ BitVec 64))
(assert (= temp11508_1 #x0000000000000001))
(assert (= var77203 temp11508_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11508_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11508_2)))
(assert (= temp11508_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11508_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11508_4 #x0000000000000000))
(assert (= var210941 temp11508_4))
(assert (= temp11508_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11508_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11508_6 #x0000000000000000))
(assert (= var210986 temp11508_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11508_7 #x0000000000000000))
(assert (= temp11508_8 temp11508_7))
(assert (= temp11508_9 (select ARGNAME_padding_NAMEEND_VAL temp11508_8)))
(assert (= temp11508_10 #x0000000000000001))
(assert (= temp11508_11 temp11508_10))
(assert (= temp11508_12 (select ARGNAME_padding_NAMEEND_VAL temp11508_11)))
(assert (= temp11508_13 #x0000000000000002))
(assert (= temp11508_14 temp11508_13))
(assert (= temp11508_15 (select ARGNAME_padding_NAMEEND_VAL temp11508_14)))
(assert (= temp11508_16 #x0000000000000003))
(assert (= temp11508_17 temp11508_16))
(assert (= temp11508_18 (select ARGNAME_padding_NAMEEND_VAL temp11508_17)))
(assert (= temp11508_19 #x0000000000000004))
(assert (= temp11508_20 temp11508_19))
(assert (= temp11508_21 (select ARGNAME_padding_NAMEEND_VAL temp11508_20)))
(assert (= temp11508_22 #x0000000000000005))
(assert (= temp11508_23 temp11508_22))
(assert (= temp11508_24 (select ARGNAME_padding_NAMEEND_VAL temp11508_23)))
(assert (= temp11508_25 #x0000000000000000))
(assert (= temp11508_26 #x0000000000000000))
(assert (= temp11508_27 temp11508_26))
(assert (= temp11508_28 (select ARGNAME_padding_NAMEEND_VAL temp11508_27)))
(assert (= temp11508_29 #x0000000000000000))
(assert (= temp11508_30 #x0000000000000001))
(assert (= temp11508_31 temp11508_30))
(assert (= temp11508_32 (select ARGNAME_padding_NAMEEND_VAL temp11508_31)))
(assert (= temp11508_33 #x0000000000000000))
(assert (= temp11508_34 #x0000000000000002))
(assert (= temp11508_35 temp11508_34))
(assert (= temp11508_36 (select ARGNAME_padding_NAMEEND_VAL temp11508_35)))
(assert (= temp11508_37 #x0000000000000000))
(assert (= temp11508_38 #x0000000000000003))
(assert (= temp11508_39 temp11508_38))
(assert (= temp11508_40 (select ARGNAME_padding_NAMEEND_VAL temp11508_39)))
(assert (= temp11508_41 #x0000000000000000))
(assert (= temp11508_42 #x0000000000000004))
(assert (= temp11508_43 temp11508_42))
(assert (= temp11508_44 (select ARGNAME_padding_NAMEEND_VAL temp11508_43)))
(assert (= temp11508_45 #x0000000000000000))
(assert (= temp11508_46 #x0000000000000005))
(assert (= temp11508_47 temp11508_46))
(assert (= temp11508_48 (select ARGNAME_padding_NAMEEND_VAL temp11508_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11508_28 temp11508_25)
             (bvslt temp11508_32 temp11508_29)
             (bvslt temp11508_36 temp11508_33)
             (bvslt temp11508_40 temp11508_37)
             (bvslt temp11508_44 temp11508_41)
             (bvslt temp11508_48 temp11508_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11508_49 #x0000000000000000))
(assert (= var1191714 temp11508_49))
(assert (= temp11508_50 #x0000000000000000))
(assert (= temp11508_51 temp11508_50))
(assert (= temp11508_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11508_51)))
(assert (= temp11508_53 #x0000000000000001))
(assert (= temp11508_54 temp11508_53))
(assert (= temp11508_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11508_54)))
(assert (= temp11508_56 #x0000000000000002))
(assert (= temp11508_57 temp11508_56))
(assert (= temp11508_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11508_57)))
(assert (= temp11508_59 #x0000000000000003))
(assert (= temp11508_60 temp11508_59))
(assert (= temp11508_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11508_60)))
(assert (= temp11508_62 #x0000000000000004))
(assert (= temp11508_63 temp11508_62))
(assert (= temp11508_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11508_63)))
(assert (= temp11508_65 #x0000000000000005))
(assert (= temp11508_66 temp11508_65))
(assert (= temp11508_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11508_66)))
(assert (= temp11508_68 #x0000000000000000))
(assert (= temp11508_69 #x0000000000000000))
(assert (= temp11508_70 temp11508_69))
(assert (= temp11508_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11508_70)))
(assert (= temp11508_72 #x0000000000000000))
(assert (= temp11508_73 #x0000000000000001))
(assert (= temp11508_74 temp11508_73))
(assert (= temp11508_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11508_74)))
(assert (= temp11508_76 #x0000000000000000))
(assert (= temp11508_77 #x0000000000000002))
(assert (= temp11508_78 temp11508_77))
(assert (= temp11508_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11508_78)))
(assert (= temp11508_80 #x0000000000000000))
(assert (= temp11508_81 #x0000000000000003))
(assert (= temp11508_82 temp11508_81))
(assert (= temp11508_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11508_82)))
(assert (= temp11508_84 #x0000000000000000))
(assert (= temp11508_85 #x0000000000000004))
(assert (= temp11508_86 temp11508_85))
(assert (= temp11508_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11508_86)))
(assert (= temp11508_88 #x0000000000000000))
(assert (= temp11508_89 #x0000000000000005))
(assert (= temp11508_90 temp11508_89))
(assert (= temp11508_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11508_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11508_71 temp11508_68)
             (bvslt temp11508_75 temp11508_72)
             (bvslt temp11508_79 temp11508_76)
             (bvslt temp11508_83 temp11508_80)
             (bvslt temp11508_87 temp11508_84)
             (bvslt temp11508_91 temp11508_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11508_92 #x0000000000000000))
(assert (= var1191725 temp11508_92))
(assert (= temp11508_93 #x0000000000000000))
(assert (= temp11508_94 temp11508_93))
(assert (= temp11508_95 (select ARGNAME_stride_NAMEEND_VAL temp11508_94)))
(assert (= temp11508_96 #x0000000000000001))
(assert (= temp11508_97 temp11508_96))
(assert (= temp11508_98 (select ARGNAME_stride_NAMEEND_VAL temp11508_97)))
(assert (= temp11508_99 #x0000000000000002))
(assert (= temp11508_100 temp11508_99))
(assert (= temp11508_101 (select ARGNAME_stride_NAMEEND_VAL temp11508_100)))
(assert (= temp11508_102 #x0000000000000003))
(assert (= temp11508_103 temp11508_102))
(assert (= temp11508_104 (select ARGNAME_stride_NAMEEND_VAL temp11508_103)))
(assert (= temp11508_105 #x0000000000000004))
(assert (= temp11508_106 temp11508_105))
(assert (= temp11508_107 (select ARGNAME_stride_NAMEEND_VAL temp11508_106)))
(assert (= temp11508_108 #x0000000000000005))
(assert (= temp11508_109 temp11508_108))
(assert (= temp11508_110 (select ARGNAME_stride_NAMEEND_VAL temp11508_109)))
(assert (= temp11508_111 #x0000000000000000))
(assert (= temp11508_112 #x0000000000000000))
(assert (= temp11508_113 temp11508_112))
(assert (= temp11508_114 (select ARGNAME_stride_NAMEEND_VAL temp11508_113)))
(assert (= temp11508_115 #x0000000000000000))
(assert (= temp11508_116 #x0000000000000001))
(assert (= temp11508_117 temp11508_116))
(assert (= temp11508_118 (select ARGNAME_stride_NAMEEND_VAL temp11508_117)))
(assert (= temp11508_119 #x0000000000000000))
(assert (= temp11508_120 #x0000000000000002))
(assert (= temp11508_121 temp11508_120))
(assert (= temp11508_122 (select ARGNAME_stride_NAMEEND_VAL temp11508_121)))
(assert (= temp11508_123 #x0000000000000000))
(assert (= temp11508_124 #x0000000000000003))
(assert (= temp11508_125 temp11508_124))
(assert (= temp11508_126 (select ARGNAME_stride_NAMEEND_VAL temp11508_125)))
(assert (= temp11508_127 #x0000000000000000))
(assert (= temp11508_128 #x0000000000000004))
(assert (= temp11508_129 temp11508_128))
(assert (= temp11508_130 (select ARGNAME_stride_NAMEEND_VAL temp11508_129)))
(assert (= temp11508_131 #x0000000000000000))
(assert (= temp11508_132 #x0000000000000005))
(assert (= temp11508_133 temp11508_132))
(assert (= temp11508_134 (select ARGNAME_stride_NAMEEND_VAL temp11508_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11508_114 temp11508_111)
             (bvsle temp11508_118 temp11508_115)
             (bvsle temp11508_122 temp11508_119)
             (bvsle temp11508_126 temp11508_123)
             (bvsle temp11508_130 temp11508_127)
             (bvsle temp11508_134 temp11508_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11508_135 #x0000000000000000))
(assert (= var1191735 temp11508_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11508_136 #x0000000000000001))
(assert (= var1191747 temp11508_136))
(assert (= temp11508_137 #x0000000000000000))
(assert (= var1179826 temp11508_137))
(assert (= temp11508_138 #x0000000000000000))
(assert (= temp11508_139 temp11508_138))
(assert (= temp11508_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11508_139)))
(assert (= temp11508_141 #x0000000000000001))
(assert (= temp11508_142 temp11508_141))
(assert (= temp11508_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11508_142)))
(assert (= temp11508_144 #x0000000000000002))
(assert (= temp11508_145 temp11508_144))
(assert (= temp11508_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11508_145)))
(assert (= temp11508_147 #x0000000000000003))
(assert (= temp11508_148 temp11508_147))
(assert (= temp11508_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11508_148)))
(assert (= temp11508_150 #x0000000000000004))
(assert (= temp11508_151 temp11508_150))
(assert (= temp11508_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11508_151)))
(assert (= temp11508_153 #x0000000000000005))
(assert (= temp11508_154 temp11508_153))
(assert (= temp11508_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11508_154)))
(assert (= temp11508_157 var1179826))
(assert (= temp11508_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11508_157)))
(assert (= temp11508_156 temp11508_158))
(assert (= var1191780
   (ite (bvslt temp11508_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11508_159 #x0000000000000000))
(assert (= var1191780 temp11508_159))
(assert (= temp11508_160 #x0000000000000000))
(assert (= var1179826 temp11508_160))
(assert (= temp11508_162 var1179826))
(assert (= temp11508_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11508_162)))
(assert (= temp11508_161 temp11508_163))
(assert (= var1191802 (bvsmod temp11508_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11508_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11508_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11508_165 #x0000000000000001))
(assert (= var1191803 temp11508_165))
(assert (= temp11508_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11508_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11508_167 #x0000000000000001))
(assert (= var1191823 temp11508_167))
(assert (= temp11508_168 #x0000000000000001))
(assert (= var1180714 temp11508_168))
(assert (= temp11508_169 #x0000000000000000))
(assert (= temp11508_170 temp11508_169))
(assert (= temp11508_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11508_170)))
(assert (= temp11508_172 #x0000000000000001))
(assert (= temp11508_173 temp11508_172))
(assert (= temp11508_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11508_173)))
(assert (= temp11508_175 #x0000000000000002))
(assert (= temp11508_176 temp11508_175))
(assert (= temp11508_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11508_176)))
(assert (= temp11508_178 #x0000000000000003))
(assert (= temp11508_179 temp11508_178))
(assert (= temp11508_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11508_179)))
(assert (= temp11508_181 #x0000000000000004))
(assert (= temp11508_182 temp11508_181))
(assert (= temp11508_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11508_182)))
(assert (= temp11508_184 #x0000000000000005))
(assert (= temp11508_185 temp11508_184))
(assert (= temp11508_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11508_185)))
(assert (= temp11508_187 #x0000000000000000))
(assert (= temp11508_188
   (ite (bvslt var1180714 temp11508_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11508_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11508_188)))
(assert (= var1191831 temp11508_189))
(assert (bvslt (ite (bvslt var1180714 temp11508_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11508_190 #x0000000000000001))
(assert (= var1180714 temp11508_190))
(assert (= temp11508_192 var1180714))
(assert (= temp11508_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11508_192)))
(assert (= temp11508_191 temp11508_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11508_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11508_194 #x0000000000000001))
(assert (= var1191836 temp11508_194))
(assert (= temp11508_195 #x0000000000000000))
(assert (= var1179826 temp11508_195))
(assert (= temp11508_197 var1179826))
(assert (= temp11508_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11508_197)))
(assert (= temp11508_196 temp11508_198))
(assert (= temp11508_199 #x0000000000000002))
(assert (= var1586025 temp11508_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11508_200 #x0000000000000001))
(assert (= var1191993 temp11508_200))
(assert (= temp11508_201 #x0000000000000001))
(assert (= var2700303 temp11508_201))
(assert (= temp11508_202 #x0000000000000001))
(assert (= var2962447 temp11508_202))
(assert (= temp11508_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11508_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11508_204 #x0000000000000001))
(assert (= var211058 temp11508_204))
(assert (= temp11508_205 #x0000000000000001))
(assert (= var211188 temp11508_205))
(assert (= var3879401 var211188))
(assert (= temp11508_206 #x0000000000000000))
(assert (= var3866802 temp11508_206))
(assert (= temp11508_207 #x0000000000000000))
(assert (= temp11508_208
   (ite (bvslt var3866802 temp11508_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11508_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11508_208)))
(assert (= var3879420 temp11508_209))
(assert (bvslt (ite (bvslt var3866802 temp11508_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11508_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11508_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11508_211 #x0000000000000000))
(assert (= var3879421 temp11508_211))
(assert (= temp11508_212 #x0000000000000001))
(assert (= var3867690 temp11508_212))
(assert (= temp11508_213 #x0000000000000000))
(assert (= temp11508_214
   (ite (bvslt var3867690 temp11508_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11508_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11508_214)))
(assert (= var3879423 temp11508_215))
(assert (bvslt (ite (bvslt var3867690 temp11508_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11508_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11508_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11508_217 #x0000000000000001))
(assert (= var3879424 temp11508_217))
(assert (= temp11508_218 #x0000000000000000))
(assert (= var4133117 temp11508_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11508_219 #x0000000000000002))
(assert (= var4404867 temp11508_219))
(assert (= var4404869 (bvsub ARGNAME_weight_NAMEEND_DIM var4404867)))
(assert (= var4470412 var4404867))
(assert (= var4470413 var4404869))
(assert (= var4470426 (bvadd var4470413 var4470412)))
(assert (= var4470428
   (ite (bvsgt var4470426 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11508_220 #x0000000000000000))
(assert (= var4470428 temp11508_220))
(assert (= var4470453 var4470412))
(assert (= var4470455 var4470413))
(assert (= var4591443 var4470455))
(assert (= var5321104 var211201))
(assert (= var5583248 var211201))
(assert (= temp11508_221 #x0000000000000000))
(assert (= var5910928 temp11508_221))
(assert (= temp11508_222 #x0000000000000001))
(assert (= var211058 temp11508_222))
(assert (= temp11508_223 #x0000000000000000))
(assert (= var7353108 temp11508_223))
(assert (= var7353075 var7353108))
(assert (= var7221639 var7353075))
(assert (= var7221635 var7221639))
(assert (= var212669 var7221635))
(assert (= temp11508_224 #x0000000000000000))
(assert (= var212669 temp11508_224))
(model-add temp11508_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11508_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11508_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11508_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




