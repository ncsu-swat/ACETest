(declare-fun temp678_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp678_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp678_3 () (_ BitVec 64))
(declare-fun temp678_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp678_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp678_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp678_7 () (_ BitVec 64))
(declare-fun temp678_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp678_9 () (_ BitVec 64))
(declare-fun temp678_10 () (_ BitVec 64))
(declare-fun temp678_11 () (_ BitVec 64))
(declare-fun temp678_12 () (_ BitVec 64))
(declare-fun temp678_13 () (_ BitVec 64))
(declare-fun temp678_14 () (_ BitVec 64))
(declare-fun temp678_15 () (_ BitVec 64))
(declare-fun temp678_16 () (_ BitVec 64))
(declare-fun temp678_17 () (_ BitVec 64))
(declare-fun temp678_18 () (_ BitVec 64))
(declare-fun temp678_19 () (_ BitVec 64))
(declare-fun temp678_20 () (_ BitVec 64))
(declare-fun temp678_21 () (_ BitVec 64))
(declare-fun temp678_22 () (_ BitVec 64))
(declare-fun temp678_23 () (_ BitVec 64))
(declare-fun temp678_24 () (_ BitVec 64))
(declare-fun temp678_25 () (_ BitVec 64))
(declare-fun temp678_26 () (_ BitVec 64))
(declare-fun temp678_27 () (_ BitVec 64))
(declare-fun temp678_28 () (_ BitVec 64))
(declare-fun temp678_29 () (_ BitVec 64))
(declare-fun temp678_30 () (_ BitVec 64))
(declare-fun temp678_31 () (_ BitVec 64))
(declare-fun temp678_32 () (_ BitVec 64))
(declare-fun temp678_33 () (_ BitVec 64))
(declare-fun temp678_34 () (_ BitVec 64))
(declare-fun temp678_35 () (_ BitVec 64))
(declare-fun temp678_36 () (_ BitVec 64))
(declare-fun temp678_37 () (_ BitVec 64))
(declare-fun temp678_38 () (_ BitVec 64))
(declare-fun temp678_39 () (_ BitVec 64))
(declare-fun temp678_40 () (_ BitVec 64))
(declare-fun temp678_41 () (_ BitVec 64))
(declare-fun temp678_42 () (_ BitVec 64))
(declare-fun temp678_43 () (_ BitVec 64))
(declare-fun temp678_44 () (_ BitVec 64))
(declare-fun temp678_45 () (_ BitVec 64))
(declare-fun temp678_46 () (_ BitVec 64))
(declare-fun temp678_47 () (_ BitVec 64))
(declare-fun temp678_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp678_49 () (_ BitVec 64))
(declare-fun temp678_50 () (_ BitVec 64))
(declare-fun temp678_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp678_52 () (_ BitVec 64))
(declare-fun temp678_53 () (_ BitVec 64))
(declare-fun temp678_54 () (_ BitVec 64))
(declare-fun temp678_55 () (_ BitVec 64))
(declare-fun temp678_56 () (_ BitVec 64))
(declare-fun temp678_57 () (_ BitVec 64))
(declare-fun temp678_58 () (_ BitVec 64))
(declare-fun temp678_59 () (_ BitVec 64))
(declare-fun temp678_60 () (_ BitVec 64))
(declare-fun temp678_61 () (_ BitVec 64))
(declare-fun temp678_62 () (_ BitVec 64))
(declare-fun temp678_63 () (_ BitVec 64))
(declare-fun temp678_64 () (_ BitVec 64))
(declare-fun temp678_65 () (_ BitVec 64))
(declare-fun temp678_66 () (_ BitVec 64))
(declare-fun temp678_67 () (_ BitVec 64))
(declare-fun temp678_68 () (_ BitVec 64))
(declare-fun temp678_69 () (_ BitVec 64))
(declare-fun temp678_70 () (_ BitVec 64))
(declare-fun temp678_71 () (_ BitVec 64))
(declare-fun temp678_72 () (_ BitVec 64))
(declare-fun temp678_73 () (_ BitVec 64))
(declare-fun temp678_74 () (_ BitVec 64))
(declare-fun temp678_75 () (_ BitVec 64))
(declare-fun temp678_76 () (_ BitVec 64))
(declare-fun temp678_77 () (_ BitVec 64))
(declare-fun temp678_78 () (_ BitVec 64))
(declare-fun temp678_79 () (_ BitVec 64))
(declare-fun temp678_80 () (_ BitVec 64))
(declare-fun temp678_81 () (_ BitVec 64))
(declare-fun temp678_82 () (_ BitVec 64))
(declare-fun temp678_83 () (_ BitVec 64))
(declare-fun temp678_84 () (_ BitVec 64))
(declare-fun temp678_85 () (_ BitVec 64))
(declare-fun temp678_86 () (_ BitVec 64))
(declare-fun temp678_87 () (_ BitVec 64))
(declare-fun temp678_88 () (_ BitVec 64))
(declare-fun temp678_89 () (_ BitVec 64))
(declare-fun temp678_90 () (_ BitVec 64))
(declare-fun temp678_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp678_92 () (_ BitVec 64))
(declare-fun temp678_93 () (_ BitVec 64))
(declare-fun temp678_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp678_95 () (_ BitVec 64))
(declare-fun temp678_96 () (_ BitVec 64))
(declare-fun temp678_97 () (_ BitVec 64))
(declare-fun temp678_98 () (_ BitVec 64))
(declare-fun temp678_99 () (_ BitVec 64))
(declare-fun temp678_100 () (_ BitVec 64))
(declare-fun temp678_101 () (_ BitVec 64))
(declare-fun temp678_102 () (_ BitVec 64))
(declare-fun temp678_103 () (_ BitVec 64))
(declare-fun temp678_104 () (_ BitVec 64))
(declare-fun temp678_105 () (_ BitVec 64))
(declare-fun temp678_106 () (_ BitVec 64))
(declare-fun temp678_107 () (_ BitVec 64))
(declare-fun temp678_108 () (_ BitVec 64))
(declare-fun temp678_109 () (_ BitVec 64))
(declare-fun temp678_110 () (_ BitVec 64))
(declare-fun temp678_111 () (_ BitVec 64))
(declare-fun temp678_112 () (_ BitVec 64))
(declare-fun temp678_113 () (_ BitVec 64))
(declare-fun temp678_114 () (_ BitVec 64))
(declare-fun temp678_115 () (_ BitVec 64))
(declare-fun temp678_116 () (_ BitVec 64))
(declare-fun temp678_117 () (_ BitVec 64))
(declare-fun temp678_118 () (_ BitVec 64))
(declare-fun temp678_119 () (_ BitVec 64))
(declare-fun temp678_120 () (_ BitVec 64))
(declare-fun temp678_121 () (_ BitVec 64))
(declare-fun temp678_122 () (_ BitVec 64))
(declare-fun temp678_123 () (_ BitVec 64))
(declare-fun temp678_124 () (_ BitVec 64))
(declare-fun temp678_125 () (_ BitVec 64))
(declare-fun temp678_126 () (_ BitVec 64))
(declare-fun temp678_127 () (_ BitVec 64))
(declare-fun temp678_128 () (_ BitVec 64))
(declare-fun temp678_129 () (_ BitVec 64))
(declare-fun temp678_130 () (_ BitVec 64))
(declare-fun temp678_131 () (_ BitVec 64))
(declare-fun temp678_132 () (_ BitVec 64))
(declare-fun temp678_133 () (_ BitVec 64))
(declare-fun temp678_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp678_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp678_136 () (_ BitVec 64))
(declare-fun temp678_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp678_138 () (_ BitVec 64))
(declare-fun temp678_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp678_140 () (_ BitVec 64))
(declare-fun temp678_141 () (_ BitVec 64))
(declare-fun temp678_142 () (_ BitVec 64))
(declare-fun temp678_143 () (_ BitVec 64))
(declare-fun temp678_144 () (_ BitVec 64))
(declare-fun temp678_145 () (_ BitVec 64))
(declare-fun temp678_146 () (_ BitVec 64))
(declare-fun temp678_147 () (_ BitVec 64))
(declare-fun temp678_148 () (_ BitVec 64))
(declare-fun temp678_149 () (_ BitVec 64))
(declare-fun temp678_150 () (_ BitVec 64))
(declare-fun temp678_151 () (_ BitVec 64))
(declare-fun temp678_152 () (_ BitVec 64))
(declare-fun temp678_153 () (_ BitVec 64))
(declare-fun temp678_154 () (_ BitVec 64))
(declare-fun temp678_155 () (_ BitVec 64))
(declare-fun temp678_157 () (_ BitVec 64))
(declare-fun temp678_158 () (_ BitVec 64))
(declare-fun temp678_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp678_159 () (_ BitVec 64))
(declare-fun temp678_160 () (_ BitVec 64))
(declare-fun temp678_162 () (_ BitVec 64))
(declare-fun temp678_163 () (_ BitVec 64))
(declare-fun temp678_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp678_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp678_165 () (_ BitVec 64))
(declare-fun temp678_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp678_167 () (_ BitVec 64))
(declare-fun temp678_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp678_169 () (_ BitVec 64))
(declare-fun temp678_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp678_171 () (_ BitVec 64))
(declare-fun temp678_172 () (_ BitVec 64))
(declare-fun temp678_173 () (_ BitVec 64))
(declare-fun temp678_174 () (_ BitVec 64))
(declare-fun temp678_175 () (_ BitVec 64))
(declare-fun temp678_176 () (_ BitVec 64))
(declare-fun temp678_177 () (_ BitVec 64))
(declare-fun temp678_178 () (_ BitVec 64))
(declare-fun temp678_179 () (_ BitVec 64))
(declare-fun temp678_180 () (_ BitVec 64))
(declare-fun temp678_181 () (_ BitVec 64))
(declare-fun temp678_182 () (_ BitVec 64))
(declare-fun temp678_183 () (_ BitVec 64))
(declare-fun temp678_184 () (_ BitVec 64))
(declare-fun temp678_185 () (_ BitVec 64))
(declare-fun temp678_186 () (_ BitVec 64))
(declare-fun temp678_187 () (_ BitVec 64))
(declare-fun temp678_188 () (_ BitVec 64))
(declare-fun temp678_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp678_190 () (_ BitVec 64))
(declare-fun temp678_192 () (_ BitVec 64))
(declare-fun temp678_193 () (_ BitVec 64))
(declare-fun temp678_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp678_194 () (_ BitVec 64))
(declare-fun temp678_195 () (_ BitVec 64))
(declare-fun temp678_197 () (_ BitVec 64))
(declare-fun temp678_198 () (_ BitVec 64))
(declare-fun temp678_196 () (_ BitVec 64))
(declare-fun temp678_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp678_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp678_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp678_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp678_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp678_204 () (_ BitVec 64))
(declare-fun temp678_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp678_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp678_207 () (_ BitVec 64))
(declare-fun temp678_208 () (_ BitVec 64))
(declare-fun temp678_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp678_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp678_211 () (_ BitVec 64))
(declare-fun temp678_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp678_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp678_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp678_216 () (_ BitVec 64))
(declare-fun temp678_215 () (_ BitVec 64))
(declare-fun temp678_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp678_218 () (_ BitVec 64))
(declare-fun temp678_219 () (_ BitVec 64))
(declare-fun temp678_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp678_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp678_222 () (_ BitVec 64))
(declare-fun temp678_224 () (_ BitVec 64))
(declare-fun temp678_223 () (_ BitVec 64))
(declare-fun temp678_225 () (_ BitVec 64))
(assert (= temp678_1 #x0000000000000001))
(assert (= var77203 temp678_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp678_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp678_2)))
(assert (= temp678_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp678_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_4 #x0000000000000000))
(assert (= var210941 temp678_4))
(assert (= temp678_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp678_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_6 #x0000000000000000))
(assert (= var210986 temp678_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp678_7 #x0000000000000000))
(assert (= temp678_8 temp678_7))
(assert (= temp678_9 (select ARGNAME_padding_NAMEEND_VAL temp678_8)))
(assert (= temp678_10 #x0000000000000001))
(assert (= temp678_11 temp678_10))
(assert (= temp678_12 (select ARGNAME_padding_NAMEEND_VAL temp678_11)))
(assert (= temp678_13 #x0000000000000002))
(assert (= temp678_14 temp678_13))
(assert (= temp678_15 (select ARGNAME_padding_NAMEEND_VAL temp678_14)))
(assert (= temp678_16 #x0000000000000003))
(assert (= temp678_17 temp678_16))
(assert (= temp678_18 (select ARGNAME_padding_NAMEEND_VAL temp678_17)))
(assert (= temp678_19 #x0000000000000004))
(assert (= temp678_20 temp678_19))
(assert (= temp678_21 (select ARGNAME_padding_NAMEEND_VAL temp678_20)))
(assert (= temp678_22 #x0000000000000005))
(assert (= temp678_23 temp678_22))
(assert (= temp678_24 (select ARGNAME_padding_NAMEEND_VAL temp678_23)))
(assert (= temp678_25 #x0000000000000000))
(assert (= temp678_26 #x0000000000000000))
(assert (= temp678_27 temp678_26))
(assert (= temp678_28 (select ARGNAME_padding_NAMEEND_VAL temp678_27)))
(assert (= temp678_29 #x0000000000000000))
(assert (= temp678_30 #x0000000000000001))
(assert (= temp678_31 temp678_30))
(assert (= temp678_32 (select ARGNAME_padding_NAMEEND_VAL temp678_31)))
(assert (= temp678_33 #x0000000000000000))
(assert (= temp678_34 #x0000000000000002))
(assert (= temp678_35 temp678_34))
(assert (= temp678_36 (select ARGNAME_padding_NAMEEND_VAL temp678_35)))
(assert (= temp678_37 #x0000000000000000))
(assert (= temp678_38 #x0000000000000003))
(assert (= temp678_39 temp678_38))
(assert (= temp678_40 (select ARGNAME_padding_NAMEEND_VAL temp678_39)))
(assert (= temp678_41 #x0000000000000000))
(assert (= temp678_42 #x0000000000000004))
(assert (= temp678_43 temp678_42))
(assert (= temp678_44 (select ARGNAME_padding_NAMEEND_VAL temp678_43)))
(assert (= temp678_45 #x0000000000000000))
(assert (= temp678_46 #x0000000000000005))
(assert (= temp678_47 temp678_46))
(assert (= temp678_48 (select ARGNAME_padding_NAMEEND_VAL temp678_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp678_28 temp678_25)
             (bvslt temp678_32 temp678_29)
             (bvslt temp678_36 temp678_33)
             (bvslt temp678_40 temp678_37)
             (bvslt temp678_44 temp678_41)
             (bvslt temp678_48 temp678_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_49 #x0000000000000000))
(assert (= var1191714 temp678_49))
(assert (= temp678_50 #x0000000000000000))
(assert (= temp678_51 temp678_50))
(assert (= temp678_52 (select ARGNAME_output_padding_NAMEEND_VAL temp678_51)))
(assert (= temp678_53 #x0000000000000001))
(assert (= temp678_54 temp678_53))
(assert (= temp678_55 (select ARGNAME_output_padding_NAMEEND_VAL temp678_54)))
(assert (= temp678_56 #x0000000000000002))
(assert (= temp678_57 temp678_56))
(assert (= temp678_58 (select ARGNAME_output_padding_NAMEEND_VAL temp678_57)))
(assert (= temp678_59 #x0000000000000003))
(assert (= temp678_60 temp678_59))
(assert (= temp678_61 (select ARGNAME_output_padding_NAMEEND_VAL temp678_60)))
(assert (= temp678_62 #x0000000000000004))
(assert (= temp678_63 temp678_62))
(assert (= temp678_64 (select ARGNAME_output_padding_NAMEEND_VAL temp678_63)))
(assert (= temp678_65 #x0000000000000005))
(assert (= temp678_66 temp678_65))
(assert (= temp678_67 (select ARGNAME_output_padding_NAMEEND_VAL temp678_66)))
(assert (= temp678_68 #x0000000000000000))
(assert (= temp678_69 #x0000000000000000))
(assert (= temp678_70 temp678_69))
(assert (= temp678_71 (select ARGNAME_output_padding_NAMEEND_VAL temp678_70)))
(assert (= temp678_72 #x0000000000000000))
(assert (= temp678_73 #x0000000000000001))
(assert (= temp678_74 temp678_73))
(assert (= temp678_75 (select ARGNAME_output_padding_NAMEEND_VAL temp678_74)))
(assert (= temp678_76 #x0000000000000000))
(assert (= temp678_77 #x0000000000000002))
(assert (= temp678_78 temp678_77))
(assert (= temp678_79 (select ARGNAME_output_padding_NAMEEND_VAL temp678_78)))
(assert (= temp678_80 #x0000000000000000))
(assert (= temp678_81 #x0000000000000003))
(assert (= temp678_82 temp678_81))
(assert (= temp678_83 (select ARGNAME_output_padding_NAMEEND_VAL temp678_82)))
(assert (= temp678_84 #x0000000000000000))
(assert (= temp678_85 #x0000000000000004))
(assert (= temp678_86 temp678_85))
(assert (= temp678_87 (select ARGNAME_output_padding_NAMEEND_VAL temp678_86)))
(assert (= temp678_88 #x0000000000000000))
(assert (= temp678_89 #x0000000000000005))
(assert (= temp678_90 temp678_89))
(assert (= temp678_91 (select ARGNAME_output_padding_NAMEEND_VAL temp678_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp678_71 temp678_68)
             (bvslt temp678_75 temp678_72)
             (bvslt temp678_79 temp678_76)
             (bvslt temp678_83 temp678_80)
             (bvslt temp678_87 temp678_84)
             (bvslt temp678_91 temp678_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_92 #x0000000000000000))
(assert (= var1191725 temp678_92))
(assert (= temp678_93 #x0000000000000000))
(assert (= temp678_94 temp678_93))
(assert (= temp678_95 (select ARGNAME_stride_NAMEEND_VAL temp678_94)))
(assert (= temp678_96 #x0000000000000001))
(assert (= temp678_97 temp678_96))
(assert (= temp678_98 (select ARGNAME_stride_NAMEEND_VAL temp678_97)))
(assert (= temp678_99 #x0000000000000002))
(assert (= temp678_100 temp678_99))
(assert (= temp678_101 (select ARGNAME_stride_NAMEEND_VAL temp678_100)))
(assert (= temp678_102 #x0000000000000003))
(assert (= temp678_103 temp678_102))
(assert (= temp678_104 (select ARGNAME_stride_NAMEEND_VAL temp678_103)))
(assert (= temp678_105 #x0000000000000004))
(assert (= temp678_106 temp678_105))
(assert (= temp678_107 (select ARGNAME_stride_NAMEEND_VAL temp678_106)))
(assert (= temp678_108 #x0000000000000005))
(assert (= temp678_109 temp678_108))
(assert (= temp678_110 (select ARGNAME_stride_NAMEEND_VAL temp678_109)))
(assert (= temp678_111 #x0000000000000000))
(assert (= temp678_112 #x0000000000000000))
(assert (= temp678_113 temp678_112))
(assert (= temp678_114 (select ARGNAME_stride_NAMEEND_VAL temp678_113)))
(assert (= temp678_115 #x0000000000000000))
(assert (= temp678_116 #x0000000000000001))
(assert (= temp678_117 temp678_116))
(assert (= temp678_118 (select ARGNAME_stride_NAMEEND_VAL temp678_117)))
(assert (= temp678_119 #x0000000000000000))
(assert (= temp678_120 #x0000000000000002))
(assert (= temp678_121 temp678_120))
(assert (= temp678_122 (select ARGNAME_stride_NAMEEND_VAL temp678_121)))
(assert (= temp678_123 #x0000000000000000))
(assert (= temp678_124 #x0000000000000003))
(assert (= temp678_125 temp678_124))
(assert (= temp678_126 (select ARGNAME_stride_NAMEEND_VAL temp678_125)))
(assert (= temp678_127 #x0000000000000000))
(assert (= temp678_128 #x0000000000000004))
(assert (= temp678_129 temp678_128))
(assert (= temp678_130 (select ARGNAME_stride_NAMEEND_VAL temp678_129)))
(assert (= temp678_131 #x0000000000000000))
(assert (= temp678_132 #x0000000000000005))
(assert (= temp678_133 temp678_132))
(assert (= temp678_134 (select ARGNAME_stride_NAMEEND_VAL temp678_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp678_114 temp678_111)
             (bvsle temp678_118 temp678_115)
             (bvsle temp678_122 temp678_119)
             (bvsle temp678_126 temp678_123)
             (bvsle temp678_130 temp678_127)
             (bvsle temp678_134 temp678_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_135 #x0000000000000000))
(assert (= var1191735 temp678_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_136 #x0000000000000001))
(assert (= var1191747 temp678_136))
(assert (= temp678_137 #x0000000000000000))
(assert (= var1179826 temp678_137))
(assert (= temp678_138 #x0000000000000000))
(assert (= temp678_139 temp678_138))
(assert (= temp678_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_139)))
(assert (= temp678_141 #x0000000000000001))
(assert (= temp678_142 temp678_141))
(assert (= temp678_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_142)))
(assert (= temp678_144 #x0000000000000002))
(assert (= temp678_145 temp678_144))
(assert (= temp678_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_145)))
(assert (= temp678_147 #x0000000000000003))
(assert (= temp678_148 temp678_147))
(assert (= temp678_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_148)))
(assert (= temp678_150 #x0000000000000004))
(assert (= temp678_151 temp678_150))
(assert (= temp678_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_151)))
(assert (= temp678_153 #x0000000000000005))
(assert (= temp678_154 temp678_153))
(assert (= temp678_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_154)))
(assert (= temp678_157 var1179826))
(assert (= temp678_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_157)))
(assert (= temp678_156 temp678_158))
(assert (= var1191780
   (ite (bvslt temp678_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_159 #x0000000000000000))
(assert (= var1191780 temp678_159))
(assert (= temp678_160 #x0000000000000000))
(assert (= var1179826 temp678_160))
(assert (= temp678_162 var1179826))
(assert (= temp678_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_162)))
(assert (= temp678_161 temp678_163))
(assert (= var1191802 (bvsmod temp678_161 ARGNAME_groups_NAMEEND)))
(assert (= temp678_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp678_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp678_165 #x0000000000000001))
(assert (= var1191803 temp678_165))
(assert (= temp678_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp678_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_167 #x0000000000000001))
(assert (= var1191823 temp678_167))
(assert (= temp678_168 #x0000000000000001))
(assert (= var1180714 temp678_168))
(assert (= temp678_169 #x0000000000000000))
(assert (= temp678_170 temp678_169))
(assert (= temp678_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp678_170)))
(assert (= temp678_172 #x0000000000000001))
(assert (= temp678_173 temp678_172))
(assert (= temp678_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp678_173)))
(assert (= temp678_175 #x0000000000000002))
(assert (= temp678_176 temp678_175))
(assert (= temp678_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp678_176)))
(assert (= temp678_178 #x0000000000000003))
(assert (= temp678_179 temp678_178))
(assert (= temp678_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp678_179)))
(assert (= temp678_181 #x0000000000000004))
(assert (= temp678_182 temp678_181))
(assert (= temp678_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp678_182)))
(assert (= temp678_184 #x0000000000000005))
(assert (= temp678_185 temp678_184))
(assert (= temp678_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp678_185)))
(assert (= temp678_187 #x0000000000000000))
(assert (= temp678_188
   (ite (bvslt var1180714 temp678_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp678_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp678_188)))
(assert (= var1191831 temp678_189))
(assert (bvslt (ite (bvslt var1180714 temp678_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp678_190 #x0000000000000001))
(assert (= var1180714 temp678_190))
(assert (= temp678_192 var1180714))
(assert (= temp678_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_192)))
(assert (= temp678_191 temp678_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp678_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp678_194 #x0000000000000001))
(assert (= var1191836 temp678_194))
(assert (= temp678_195 #x0000000000000000))
(assert (= var1179826 temp678_195))
(assert (= temp678_197 var1179826))
(assert (= temp678_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp678_197)))
(assert (= temp678_196 temp678_198))
(assert (= temp678_199 #x0000000000000002))
(assert (= var1586025 temp678_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp678_200 #x0000000000000001))
(assert (= var1191993 temp678_200))
(assert (= temp678_201 #x0000000000000001))
(assert (= var2700303 temp678_201))
(assert (= temp678_202 #x0000000000000001))
(assert (= var2962447 temp678_202))
(assert (= temp678_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp678_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_204 #x0000000000000001))
(assert (= var211058 temp678_204))
(assert (= temp678_205 #x0000000000000001))
(assert (= var211188 temp678_205))
(assert (= var3879401 var211188))
(assert (= temp678_206 #x0000000000000000))
(assert (= var3866802 temp678_206))
(assert (= temp678_207 #x0000000000000000))
(assert (= temp678_208
   (ite (bvslt var3866802 temp678_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp678_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp678_208)))
(assert (= var3879420 temp678_209))
(assert (bvslt (ite (bvslt var3866802 temp678_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp678_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp678_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp678_211 #x0000000000000001))
(assert (= var3879421 temp678_211))
(assert (= temp678_212 #x0000000000000000))
(assert (= var4079423 temp678_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp678_213 #x0000000000000002))
(assert (= var4208259 temp678_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_214 #x0000000000000000))
(assert (= var4273820 temp678_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp678_216 #xffffffffffffffff))
(assert (= temp678_215 temp678_216))
(assert (= temp678_217 #x0000000000000001))
(assert (= var197674 temp678_217))
(assert (= temp678_218 #x0000000000000000))
(assert (= temp678_219
   (ite (bvslt var197674 temp678_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp678_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp678_219)))
(assert (= var211595 temp678_220))
(assert (bvslt (ite (bvslt var197674 temp678_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp678_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp678_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp678_222 #x0000000000000001))
(assert (= var211596 temp678_222))
(assert (= temp678_224 #xffffffffffffffff))
(assert (= temp678_223 temp678_224))
(assert (= temp678_225 #x0000000000000001))
(assert (= var211058 temp678_225))
(model-add temp678_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp678_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp678_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp678_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




