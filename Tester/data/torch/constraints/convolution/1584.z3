(declare-fun temp10906_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10906_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10906_3 () (_ BitVec 64))
(declare-fun temp10906_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10906_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10906_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10906_7 () (_ BitVec 64))
(declare-fun temp10906_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10906_9 () (_ BitVec 64))
(declare-fun temp10906_10 () (_ BitVec 64))
(declare-fun temp10906_11 () (_ BitVec 64))
(declare-fun temp10906_12 () (_ BitVec 64))
(declare-fun temp10906_13 () (_ BitVec 64))
(declare-fun temp10906_14 () (_ BitVec 64))
(declare-fun temp10906_15 () (_ BitVec 64))
(declare-fun temp10906_16 () (_ BitVec 64))
(declare-fun temp10906_17 () (_ BitVec 64))
(declare-fun temp10906_18 () (_ BitVec 64))
(declare-fun temp10906_19 () (_ BitVec 64))
(declare-fun temp10906_20 () (_ BitVec 64))
(declare-fun temp10906_21 () (_ BitVec 64))
(declare-fun temp10906_22 () (_ BitVec 64))
(declare-fun temp10906_23 () (_ BitVec 64))
(declare-fun temp10906_24 () (_ BitVec 64))
(declare-fun temp10906_25 () (_ BitVec 64))
(declare-fun temp10906_26 () (_ BitVec 64))
(declare-fun temp10906_27 () (_ BitVec 64))
(declare-fun temp10906_28 () (_ BitVec 64))
(declare-fun temp10906_29 () (_ BitVec 64))
(declare-fun temp10906_30 () (_ BitVec 64))
(declare-fun temp10906_31 () (_ BitVec 64))
(declare-fun temp10906_32 () (_ BitVec 64))
(declare-fun temp10906_33 () (_ BitVec 64))
(declare-fun temp10906_34 () (_ BitVec 64))
(declare-fun temp10906_35 () (_ BitVec 64))
(declare-fun temp10906_36 () (_ BitVec 64))
(declare-fun temp10906_37 () (_ BitVec 64))
(declare-fun temp10906_38 () (_ BitVec 64))
(declare-fun temp10906_39 () (_ BitVec 64))
(declare-fun temp10906_40 () (_ BitVec 64))
(declare-fun temp10906_41 () (_ BitVec 64))
(declare-fun temp10906_42 () (_ BitVec 64))
(declare-fun temp10906_43 () (_ BitVec 64))
(declare-fun temp10906_44 () (_ BitVec 64))
(declare-fun temp10906_45 () (_ BitVec 64))
(declare-fun temp10906_46 () (_ BitVec 64))
(declare-fun temp10906_47 () (_ BitVec 64))
(declare-fun temp10906_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10906_49 () (_ BitVec 64))
(declare-fun temp10906_50 () (_ BitVec 64))
(declare-fun temp10906_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10906_52 () (_ BitVec 64))
(declare-fun temp10906_53 () (_ BitVec 64))
(declare-fun temp10906_54 () (_ BitVec 64))
(declare-fun temp10906_55 () (_ BitVec 64))
(declare-fun temp10906_56 () (_ BitVec 64))
(declare-fun temp10906_57 () (_ BitVec 64))
(declare-fun temp10906_58 () (_ BitVec 64))
(declare-fun temp10906_59 () (_ BitVec 64))
(declare-fun temp10906_60 () (_ BitVec 64))
(declare-fun temp10906_61 () (_ BitVec 64))
(declare-fun temp10906_62 () (_ BitVec 64))
(declare-fun temp10906_63 () (_ BitVec 64))
(declare-fun temp10906_64 () (_ BitVec 64))
(declare-fun temp10906_65 () (_ BitVec 64))
(declare-fun temp10906_66 () (_ BitVec 64))
(declare-fun temp10906_67 () (_ BitVec 64))
(declare-fun temp10906_68 () (_ BitVec 64))
(declare-fun temp10906_69 () (_ BitVec 64))
(declare-fun temp10906_70 () (_ BitVec 64))
(declare-fun temp10906_71 () (_ BitVec 64))
(declare-fun temp10906_72 () (_ BitVec 64))
(declare-fun temp10906_73 () (_ BitVec 64))
(declare-fun temp10906_74 () (_ BitVec 64))
(declare-fun temp10906_75 () (_ BitVec 64))
(declare-fun temp10906_76 () (_ BitVec 64))
(declare-fun temp10906_77 () (_ BitVec 64))
(declare-fun temp10906_78 () (_ BitVec 64))
(declare-fun temp10906_79 () (_ BitVec 64))
(declare-fun temp10906_80 () (_ BitVec 64))
(declare-fun temp10906_81 () (_ BitVec 64))
(declare-fun temp10906_82 () (_ BitVec 64))
(declare-fun temp10906_83 () (_ BitVec 64))
(declare-fun temp10906_84 () (_ BitVec 64))
(declare-fun temp10906_85 () (_ BitVec 64))
(declare-fun temp10906_86 () (_ BitVec 64))
(declare-fun temp10906_87 () (_ BitVec 64))
(declare-fun temp10906_88 () (_ BitVec 64))
(declare-fun temp10906_89 () (_ BitVec 64))
(declare-fun temp10906_90 () (_ BitVec 64))
(declare-fun temp10906_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10906_92 () (_ BitVec 64))
(declare-fun temp10906_93 () (_ BitVec 64))
(declare-fun temp10906_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10906_95 () (_ BitVec 64))
(declare-fun temp10906_96 () (_ BitVec 64))
(declare-fun temp10906_97 () (_ BitVec 64))
(declare-fun temp10906_98 () (_ BitVec 64))
(declare-fun temp10906_99 () (_ BitVec 64))
(declare-fun temp10906_100 () (_ BitVec 64))
(declare-fun temp10906_101 () (_ BitVec 64))
(declare-fun temp10906_102 () (_ BitVec 64))
(declare-fun temp10906_103 () (_ BitVec 64))
(declare-fun temp10906_104 () (_ BitVec 64))
(declare-fun temp10906_105 () (_ BitVec 64))
(declare-fun temp10906_106 () (_ BitVec 64))
(declare-fun temp10906_107 () (_ BitVec 64))
(declare-fun temp10906_108 () (_ BitVec 64))
(declare-fun temp10906_109 () (_ BitVec 64))
(declare-fun temp10906_110 () (_ BitVec 64))
(declare-fun temp10906_111 () (_ BitVec 64))
(declare-fun temp10906_112 () (_ BitVec 64))
(declare-fun temp10906_113 () (_ BitVec 64))
(declare-fun temp10906_114 () (_ BitVec 64))
(declare-fun temp10906_115 () (_ BitVec 64))
(declare-fun temp10906_116 () (_ BitVec 64))
(declare-fun temp10906_117 () (_ BitVec 64))
(declare-fun temp10906_118 () (_ BitVec 64))
(declare-fun temp10906_119 () (_ BitVec 64))
(declare-fun temp10906_120 () (_ BitVec 64))
(declare-fun temp10906_121 () (_ BitVec 64))
(declare-fun temp10906_122 () (_ BitVec 64))
(declare-fun temp10906_123 () (_ BitVec 64))
(declare-fun temp10906_124 () (_ BitVec 64))
(declare-fun temp10906_125 () (_ BitVec 64))
(declare-fun temp10906_126 () (_ BitVec 64))
(declare-fun temp10906_127 () (_ BitVec 64))
(declare-fun temp10906_128 () (_ BitVec 64))
(declare-fun temp10906_129 () (_ BitVec 64))
(declare-fun temp10906_130 () (_ BitVec 64))
(declare-fun temp10906_131 () (_ BitVec 64))
(declare-fun temp10906_132 () (_ BitVec 64))
(declare-fun temp10906_133 () (_ BitVec 64))
(declare-fun temp10906_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10906_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10906_136 () (_ BitVec 64))
(declare-fun temp10906_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10906_138 () (_ BitVec 64))
(declare-fun temp10906_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10906_140 () (_ BitVec 64))
(declare-fun temp10906_141 () (_ BitVec 64))
(declare-fun temp10906_142 () (_ BitVec 64))
(declare-fun temp10906_143 () (_ BitVec 64))
(declare-fun temp10906_144 () (_ BitVec 64))
(declare-fun temp10906_145 () (_ BitVec 64))
(declare-fun temp10906_146 () (_ BitVec 64))
(declare-fun temp10906_147 () (_ BitVec 64))
(declare-fun temp10906_148 () (_ BitVec 64))
(declare-fun temp10906_149 () (_ BitVec 64))
(declare-fun temp10906_150 () (_ BitVec 64))
(declare-fun temp10906_151 () (_ BitVec 64))
(declare-fun temp10906_152 () (_ BitVec 64))
(declare-fun temp10906_153 () (_ BitVec 64))
(declare-fun temp10906_154 () (_ BitVec 64))
(declare-fun temp10906_155 () (_ BitVec 64))
(declare-fun temp10906_157 () (_ BitVec 64))
(declare-fun temp10906_158 () (_ BitVec 64))
(declare-fun temp10906_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10906_159 () (_ BitVec 64))
(declare-fun temp10906_160 () (_ BitVec 64))
(declare-fun temp10906_162 () (_ BitVec 64))
(declare-fun temp10906_163 () (_ BitVec 64))
(declare-fun temp10906_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10906_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10906_165 () (_ BitVec 64))
(declare-fun temp10906_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10906_167 () (_ BitVec 64))
(declare-fun temp10906_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10906_169 () (_ BitVec 64))
(declare-fun temp10906_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10906_171 () (_ BitVec 64))
(declare-fun temp10906_172 () (_ BitVec 64))
(declare-fun temp10906_173 () (_ BitVec 64))
(declare-fun temp10906_174 () (_ BitVec 64))
(declare-fun temp10906_175 () (_ BitVec 64))
(declare-fun temp10906_176 () (_ BitVec 64))
(declare-fun temp10906_177 () (_ BitVec 64))
(declare-fun temp10906_178 () (_ BitVec 64))
(declare-fun temp10906_179 () (_ BitVec 64))
(declare-fun temp10906_180 () (_ BitVec 64))
(declare-fun temp10906_181 () (_ BitVec 64))
(declare-fun temp10906_182 () (_ BitVec 64))
(declare-fun temp10906_183 () (_ BitVec 64))
(declare-fun temp10906_184 () (_ BitVec 64))
(declare-fun temp10906_185 () (_ BitVec 64))
(declare-fun temp10906_186 () (_ BitVec 64))
(declare-fun temp10906_187 () (_ BitVec 64))
(declare-fun temp10906_188 () (_ BitVec 64))
(declare-fun temp10906_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10906_190 () (_ BitVec 64))
(declare-fun temp10906_192 () (_ BitVec 64))
(declare-fun temp10906_193 () (_ BitVec 64))
(declare-fun temp10906_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10906_194 () (_ BitVec 64))
(declare-fun temp10906_195 () (_ BitVec 64))
(declare-fun temp10906_197 () (_ BitVec 64))
(declare-fun temp10906_198 () (_ BitVec 64))
(declare-fun temp10906_196 () (_ BitVec 64))
(declare-fun temp10906_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10906_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10906_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10906_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10906_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10906_204 () (_ BitVec 64))
(declare-fun temp10906_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10906_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10906_207 () (_ BitVec 64))
(declare-fun temp10906_208 () (_ BitVec 64))
(declare-fun temp10906_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10906_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10906_211 () (_ BitVec 64))
(declare-fun temp10906_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10906_213 () (_ BitVec 64))
(declare-fun temp10906_214 () (_ BitVec 64))
(declare-fun temp10906_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10906_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10906_217 () (_ BitVec 64))
(declare-fun temp10906_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10906_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10906_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5255568 () (_ BitVec 64))
(declare-fun var5517712 () (_ BitVec 64))
(declare-fun temp10906_221 () (_ BitVec 64))
(assert (= temp10906_1 #x0000000000000001))
(assert (= var77203 temp10906_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10906_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10906_2)))
(assert (= temp10906_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10906_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10906_4 #x0000000000000000))
(assert (= var210941 temp10906_4))
(assert (= temp10906_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10906_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10906_6 #x0000000000000000))
(assert (= var210986 temp10906_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10906_7 #x0000000000000000))
(assert (= temp10906_8 temp10906_7))
(assert (= temp10906_9 (select ARGNAME_padding_NAMEEND_VAL temp10906_8)))
(assert (= temp10906_10 #x0000000000000001))
(assert (= temp10906_11 temp10906_10))
(assert (= temp10906_12 (select ARGNAME_padding_NAMEEND_VAL temp10906_11)))
(assert (= temp10906_13 #x0000000000000002))
(assert (= temp10906_14 temp10906_13))
(assert (= temp10906_15 (select ARGNAME_padding_NAMEEND_VAL temp10906_14)))
(assert (= temp10906_16 #x0000000000000003))
(assert (= temp10906_17 temp10906_16))
(assert (= temp10906_18 (select ARGNAME_padding_NAMEEND_VAL temp10906_17)))
(assert (= temp10906_19 #x0000000000000004))
(assert (= temp10906_20 temp10906_19))
(assert (= temp10906_21 (select ARGNAME_padding_NAMEEND_VAL temp10906_20)))
(assert (= temp10906_22 #x0000000000000005))
(assert (= temp10906_23 temp10906_22))
(assert (= temp10906_24 (select ARGNAME_padding_NAMEEND_VAL temp10906_23)))
(assert (= temp10906_25 #x0000000000000000))
(assert (= temp10906_26 #x0000000000000000))
(assert (= temp10906_27 temp10906_26))
(assert (= temp10906_28 (select ARGNAME_padding_NAMEEND_VAL temp10906_27)))
(assert (= temp10906_29 #x0000000000000000))
(assert (= temp10906_30 #x0000000000000001))
(assert (= temp10906_31 temp10906_30))
(assert (= temp10906_32 (select ARGNAME_padding_NAMEEND_VAL temp10906_31)))
(assert (= temp10906_33 #x0000000000000000))
(assert (= temp10906_34 #x0000000000000002))
(assert (= temp10906_35 temp10906_34))
(assert (= temp10906_36 (select ARGNAME_padding_NAMEEND_VAL temp10906_35)))
(assert (= temp10906_37 #x0000000000000000))
(assert (= temp10906_38 #x0000000000000003))
(assert (= temp10906_39 temp10906_38))
(assert (= temp10906_40 (select ARGNAME_padding_NAMEEND_VAL temp10906_39)))
(assert (= temp10906_41 #x0000000000000000))
(assert (= temp10906_42 #x0000000000000004))
(assert (= temp10906_43 temp10906_42))
(assert (= temp10906_44 (select ARGNAME_padding_NAMEEND_VAL temp10906_43)))
(assert (= temp10906_45 #x0000000000000000))
(assert (= temp10906_46 #x0000000000000005))
(assert (= temp10906_47 temp10906_46))
(assert (= temp10906_48 (select ARGNAME_padding_NAMEEND_VAL temp10906_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10906_28 temp10906_25)
             (bvslt temp10906_32 temp10906_29)
             (bvslt temp10906_36 temp10906_33)
             (bvslt temp10906_40 temp10906_37)
             (bvslt temp10906_44 temp10906_41)
             (bvslt temp10906_48 temp10906_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10906_49 #x0000000000000000))
(assert (= var1191714 temp10906_49))
(assert (= temp10906_50 #x0000000000000000))
(assert (= temp10906_51 temp10906_50))
(assert (= temp10906_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10906_51)))
(assert (= temp10906_53 #x0000000000000001))
(assert (= temp10906_54 temp10906_53))
(assert (= temp10906_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10906_54)))
(assert (= temp10906_56 #x0000000000000002))
(assert (= temp10906_57 temp10906_56))
(assert (= temp10906_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10906_57)))
(assert (= temp10906_59 #x0000000000000003))
(assert (= temp10906_60 temp10906_59))
(assert (= temp10906_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10906_60)))
(assert (= temp10906_62 #x0000000000000004))
(assert (= temp10906_63 temp10906_62))
(assert (= temp10906_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10906_63)))
(assert (= temp10906_65 #x0000000000000005))
(assert (= temp10906_66 temp10906_65))
(assert (= temp10906_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10906_66)))
(assert (= temp10906_68 #x0000000000000000))
(assert (= temp10906_69 #x0000000000000000))
(assert (= temp10906_70 temp10906_69))
(assert (= temp10906_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10906_70)))
(assert (= temp10906_72 #x0000000000000000))
(assert (= temp10906_73 #x0000000000000001))
(assert (= temp10906_74 temp10906_73))
(assert (= temp10906_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10906_74)))
(assert (= temp10906_76 #x0000000000000000))
(assert (= temp10906_77 #x0000000000000002))
(assert (= temp10906_78 temp10906_77))
(assert (= temp10906_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10906_78)))
(assert (= temp10906_80 #x0000000000000000))
(assert (= temp10906_81 #x0000000000000003))
(assert (= temp10906_82 temp10906_81))
(assert (= temp10906_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10906_82)))
(assert (= temp10906_84 #x0000000000000000))
(assert (= temp10906_85 #x0000000000000004))
(assert (= temp10906_86 temp10906_85))
(assert (= temp10906_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10906_86)))
(assert (= temp10906_88 #x0000000000000000))
(assert (= temp10906_89 #x0000000000000005))
(assert (= temp10906_90 temp10906_89))
(assert (= temp10906_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10906_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10906_71 temp10906_68)
             (bvslt temp10906_75 temp10906_72)
             (bvslt temp10906_79 temp10906_76)
             (bvslt temp10906_83 temp10906_80)
             (bvslt temp10906_87 temp10906_84)
             (bvslt temp10906_91 temp10906_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10906_92 #x0000000000000000))
(assert (= var1191725 temp10906_92))
(assert (= temp10906_93 #x0000000000000000))
(assert (= temp10906_94 temp10906_93))
(assert (= temp10906_95 (select ARGNAME_stride_NAMEEND_VAL temp10906_94)))
(assert (= temp10906_96 #x0000000000000001))
(assert (= temp10906_97 temp10906_96))
(assert (= temp10906_98 (select ARGNAME_stride_NAMEEND_VAL temp10906_97)))
(assert (= temp10906_99 #x0000000000000002))
(assert (= temp10906_100 temp10906_99))
(assert (= temp10906_101 (select ARGNAME_stride_NAMEEND_VAL temp10906_100)))
(assert (= temp10906_102 #x0000000000000003))
(assert (= temp10906_103 temp10906_102))
(assert (= temp10906_104 (select ARGNAME_stride_NAMEEND_VAL temp10906_103)))
(assert (= temp10906_105 #x0000000000000004))
(assert (= temp10906_106 temp10906_105))
(assert (= temp10906_107 (select ARGNAME_stride_NAMEEND_VAL temp10906_106)))
(assert (= temp10906_108 #x0000000000000005))
(assert (= temp10906_109 temp10906_108))
(assert (= temp10906_110 (select ARGNAME_stride_NAMEEND_VAL temp10906_109)))
(assert (= temp10906_111 #x0000000000000000))
(assert (= temp10906_112 #x0000000000000000))
(assert (= temp10906_113 temp10906_112))
(assert (= temp10906_114 (select ARGNAME_stride_NAMEEND_VAL temp10906_113)))
(assert (= temp10906_115 #x0000000000000000))
(assert (= temp10906_116 #x0000000000000001))
(assert (= temp10906_117 temp10906_116))
(assert (= temp10906_118 (select ARGNAME_stride_NAMEEND_VAL temp10906_117)))
(assert (= temp10906_119 #x0000000000000000))
(assert (= temp10906_120 #x0000000000000002))
(assert (= temp10906_121 temp10906_120))
(assert (= temp10906_122 (select ARGNAME_stride_NAMEEND_VAL temp10906_121)))
(assert (= temp10906_123 #x0000000000000000))
(assert (= temp10906_124 #x0000000000000003))
(assert (= temp10906_125 temp10906_124))
(assert (= temp10906_126 (select ARGNAME_stride_NAMEEND_VAL temp10906_125)))
(assert (= temp10906_127 #x0000000000000000))
(assert (= temp10906_128 #x0000000000000004))
(assert (= temp10906_129 temp10906_128))
(assert (= temp10906_130 (select ARGNAME_stride_NAMEEND_VAL temp10906_129)))
(assert (= temp10906_131 #x0000000000000000))
(assert (= temp10906_132 #x0000000000000005))
(assert (= temp10906_133 temp10906_132))
(assert (= temp10906_134 (select ARGNAME_stride_NAMEEND_VAL temp10906_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10906_114 temp10906_111)
             (bvsle temp10906_118 temp10906_115)
             (bvsle temp10906_122 temp10906_119)
             (bvsle temp10906_126 temp10906_123)
             (bvsle temp10906_130 temp10906_127)
             (bvsle temp10906_134 temp10906_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10906_135 #x0000000000000000))
(assert (= var1191735 temp10906_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10906_136 #x0000000000000001))
(assert (= var1191747 temp10906_136))
(assert (= temp10906_137 #x0000000000000000))
(assert (= var1179826 temp10906_137))
(assert (= temp10906_138 #x0000000000000000))
(assert (= temp10906_139 temp10906_138))
(assert (= temp10906_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10906_139)))
(assert (= temp10906_141 #x0000000000000001))
(assert (= temp10906_142 temp10906_141))
(assert (= temp10906_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10906_142)))
(assert (= temp10906_144 #x0000000000000002))
(assert (= temp10906_145 temp10906_144))
(assert (= temp10906_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10906_145)))
(assert (= temp10906_147 #x0000000000000003))
(assert (= temp10906_148 temp10906_147))
(assert (= temp10906_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10906_148)))
(assert (= temp10906_150 #x0000000000000004))
(assert (= temp10906_151 temp10906_150))
(assert (= temp10906_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10906_151)))
(assert (= temp10906_153 #x0000000000000005))
(assert (= temp10906_154 temp10906_153))
(assert (= temp10906_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10906_154)))
(assert (= temp10906_157 var1179826))
(assert (= temp10906_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10906_157)))
(assert (= temp10906_156 temp10906_158))
(assert (= var1191780
   (ite (bvslt temp10906_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10906_159 #x0000000000000000))
(assert (= var1191780 temp10906_159))
(assert (= temp10906_160 #x0000000000000000))
(assert (= var1179826 temp10906_160))
(assert (= temp10906_162 var1179826))
(assert (= temp10906_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10906_162)))
(assert (= temp10906_161 temp10906_163))
(assert (= var1191802 (bvsmod temp10906_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10906_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10906_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10906_165 #x0000000000000001))
(assert (= var1191803 temp10906_165))
(assert (= temp10906_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10906_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10906_167 #x0000000000000001))
(assert (= var1191823 temp10906_167))
(assert (= temp10906_168 #x0000000000000001))
(assert (= var1180714 temp10906_168))
(assert (= temp10906_169 #x0000000000000000))
(assert (= temp10906_170 temp10906_169))
(assert (= temp10906_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10906_170)))
(assert (= temp10906_172 #x0000000000000001))
(assert (= temp10906_173 temp10906_172))
(assert (= temp10906_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10906_173)))
(assert (= temp10906_175 #x0000000000000002))
(assert (= temp10906_176 temp10906_175))
(assert (= temp10906_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10906_176)))
(assert (= temp10906_178 #x0000000000000003))
(assert (= temp10906_179 temp10906_178))
(assert (= temp10906_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10906_179)))
(assert (= temp10906_181 #x0000000000000004))
(assert (= temp10906_182 temp10906_181))
(assert (= temp10906_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10906_182)))
(assert (= temp10906_184 #x0000000000000005))
(assert (= temp10906_185 temp10906_184))
(assert (= temp10906_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10906_185)))
(assert (= temp10906_187 #x0000000000000000))
(assert (= temp10906_188
   (ite (bvslt var1180714 temp10906_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10906_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10906_188)))
(assert (= var1191831 temp10906_189))
(assert (bvslt (ite (bvslt var1180714 temp10906_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10906_190 #x0000000000000001))
(assert (= var1180714 temp10906_190))
(assert (= temp10906_192 var1180714))
(assert (= temp10906_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10906_192)))
(assert (= temp10906_191 temp10906_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10906_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10906_194 #x0000000000000001))
(assert (= var1191836 temp10906_194))
(assert (= temp10906_195 #x0000000000000000))
(assert (= var1179826 temp10906_195))
(assert (= temp10906_197 var1179826))
(assert (= temp10906_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10906_197)))
(assert (= temp10906_196 temp10906_198))
(assert (= temp10906_199 #x0000000000000002))
(assert (= var1586025 temp10906_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10906_200 #x0000000000000001))
(assert (= var1191993 temp10906_200))
(assert (= temp10906_201 #x0000000000000001))
(assert (= var2700303 temp10906_201))
(assert (= temp10906_202 #x0000000000000001))
(assert (= var2962447 temp10906_202))
(assert (= temp10906_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10906_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10906_204 #x0000000000000001))
(assert (= var211058 temp10906_204))
(assert (= temp10906_205 #x0000000000000001))
(assert (= var211188 temp10906_205))
(assert (= var3879401 var211188))
(assert (= temp10906_206 #x0000000000000000))
(assert (= var3866802 temp10906_206))
(assert (= temp10906_207 #x0000000000000000))
(assert (= temp10906_208
   (ite (bvslt var3866802 temp10906_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10906_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10906_208)))
(assert (= var3879420 temp10906_209))
(assert (bvslt (ite (bvslt var3866802 temp10906_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10906_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10906_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10906_211 #x0000000000000000))
(assert (= var3879421 temp10906_211))
(assert (= temp10906_212 #x0000000000000001))
(assert (= var3867690 temp10906_212))
(assert (= temp10906_213 #x0000000000000000))
(assert (= temp10906_214
   (ite (bvslt var3867690 temp10906_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10906_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10906_214)))
(assert (= var3879423 temp10906_215))
(assert (bvslt (ite (bvslt var3867690 temp10906_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10906_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10906_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10906_217 #x0000000000000001))
(assert (= var3879424 temp10906_217))
(assert (= temp10906_218 #x0000000000000000))
(assert (= var4133117 temp10906_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10906_219 #x0000000000000002))
(assert (= var4339331 temp10906_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10906_220 #x0000000000000000))
(assert (= var4404892 temp10906_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5255568 var211201))
(assert (= var5517712 var211201))
(assert (= temp10906_221 #x0000000000000001))
(assert (= var211058 temp10906_221))
(model-add temp10906_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10906_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10906_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10906_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




