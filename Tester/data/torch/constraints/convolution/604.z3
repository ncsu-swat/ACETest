(declare-fun temp805_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp805_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp805_3 () (_ BitVec 64))
(declare-fun temp805_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp805_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp805_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp805_7 () (_ BitVec 64))
(declare-fun temp805_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp805_9 () (_ BitVec 64))
(declare-fun temp805_10 () (_ BitVec 64))
(declare-fun temp805_11 () (_ BitVec 64))
(declare-fun temp805_12 () (_ BitVec 64))
(declare-fun temp805_13 () (_ BitVec 64))
(declare-fun temp805_14 () (_ BitVec 64))
(declare-fun temp805_15 () (_ BitVec 64))
(declare-fun temp805_16 () (_ BitVec 64))
(declare-fun temp805_17 () (_ BitVec 64))
(declare-fun temp805_18 () (_ BitVec 64))
(declare-fun temp805_19 () (_ BitVec 64))
(declare-fun temp805_20 () (_ BitVec 64))
(declare-fun temp805_21 () (_ BitVec 64))
(declare-fun temp805_22 () (_ BitVec 64))
(declare-fun temp805_23 () (_ BitVec 64))
(declare-fun temp805_24 () (_ BitVec 64))
(declare-fun temp805_25 () (_ BitVec 64))
(declare-fun temp805_26 () (_ BitVec 64))
(declare-fun temp805_27 () (_ BitVec 64))
(declare-fun temp805_28 () (_ BitVec 64))
(declare-fun temp805_29 () (_ BitVec 64))
(declare-fun temp805_30 () (_ BitVec 64))
(declare-fun temp805_31 () (_ BitVec 64))
(declare-fun temp805_32 () (_ BitVec 64))
(declare-fun temp805_33 () (_ BitVec 64))
(declare-fun temp805_34 () (_ BitVec 64))
(declare-fun temp805_35 () (_ BitVec 64))
(declare-fun temp805_36 () (_ BitVec 64))
(declare-fun temp805_37 () (_ BitVec 64))
(declare-fun temp805_38 () (_ BitVec 64))
(declare-fun temp805_39 () (_ BitVec 64))
(declare-fun temp805_40 () (_ BitVec 64))
(declare-fun temp805_41 () (_ BitVec 64))
(declare-fun temp805_42 () (_ BitVec 64))
(declare-fun temp805_43 () (_ BitVec 64))
(declare-fun temp805_44 () (_ BitVec 64))
(declare-fun temp805_45 () (_ BitVec 64))
(declare-fun temp805_46 () (_ BitVec 64))
(declare-fun temp805_47 () (_ BitVec 64))
(declare-fun temp805_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp805_49 () (_ BitVec 64))
(declare-fun temp805_50 () (_ BitVec 64))
(declare-fun temp805_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp805_52 () (_ BitVec 64))
(declare-fun temp805_53 () (_ BitVec 64))
(declare-fun temp805_54 () (_ BitVec 64))
(declare-fun temp805_55 () (_ BitVec 64))
(declare-fun temp805_56 () (_ BitVec 64))
(declare-fun temp805_57 () (_ BitVec 64))
(declare-fun temp805_58 () (_ BitVec 64))
(declare-fun temp805_59 () (_ BitVec 64))
(declare-fun temp805_60 () (_ BitVec 64))
(declare-fun temp805_61 () (_ BitVec 64))
(declare-fun temp805_62 () (_ BitVec 64))
(declare-fun temp805_63 () (_ BitVec 64))
(declare-fun temp805_64 () (_ BitVec 64))
(declare-fun temp805_65 () (_ BitVec 64))
(declare-fun temp805_66 () (_ BitVec 64))
(declare-fun temp805_67 () (_ BitVec 64))
(declare-fun temp805_68 () (_ BitVec 64))
(declare-fun temp805_69 () (_ BitVec 64))
(declare-fun temp805_70 () (_ BitVec 64))
(declare-fun temp805_71 () (_ BitVec 64))
(declare-fun temp805_72 () (_ BitVec 64))
(declare-fun temp805_73 () (_ BitVec 64))
(declare-fun temp805_74 () (_ BitVec 64))
(declare-fun temp805_75 () (_ BitVec 64))
(declare-fun temp805_76 () (_ BitVec 64))
(declare-fun temp805_77 () (_ BitVec 64))
(declare-fun temp805_78 () (_ BitVec 64))
(declare-fun temp805_79 () (_ BitVec 64))
(declare-fun temp805_80 () (_ BitVec 64))
(declare-fun temp805_81 () (_ BitVec 64))
(declare-fun temp805_82 () (_ BitVec 64))
(declare-fun temp805_83 () (_ BitVec 64))
(declare-fun temp805_84 () (_ BitVec 64))
(declare-fun temp805_85 () (_ BitVec 64))
(declare-fun temp805_86 () (_ BitVec 64))
(declare-fun temp805_87 () (_ BitVec 64))
(declare-fun temp805_88 () (_ BitVec 64))
(declare-fun temp805_89 () (_ BitVec 64))
(declare-fun temp805_90 () (_ BitVec 64))
(declare-fun temp805_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp805_92 () (_ BitVec 64))
(declare-fun temp805_93 () (_ BitVec 64))
(declare-fun temp805_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp805_95 () (_ BitVec 64))
(declare-fun temp805_96 () (_ BitVec 64))
(declare-fun temp805_97 () (_ BitVec 64))
(declare-fun temp805_98 () (_ BitVec 64))
(declare-fun temp805_99 () (_ BitVec 64))
(declare-fun temp805_100 () (_ BitVec 64))
(declare-fun temp805_101 () (_ BitVec 64))
(declare-fun temp805_102 () (_ BitVec 64))
(declare-fun temp805_103 () (_ BitVec 64))
(declare-fun temp805_104 () (_ BitVec 64))
(declare-fun temp805_105 () (_ BitVec 64))
(declare-fun temp805_106 () (_ BitVec 64))
(declare-fun temp805_107 () (_ BitVec 64))
(declare-fun temp805_108 () (_ BitVec 64))
(declare-fun temp805_109 () (_ BitVec 64))
(declare-fun temp805_110 () (_ BitVec 64))
(declare-fun temp805_111 () (_ BitVec 64))
(declare-fun temp805_112 () (_ BitVec 64))
(declare-fun temp805_113 () (_ BitVec 64))
(declare-fun temp805_114 () (_ BitVec 64))
(declare-fun temp805_115 () (_ BitVec 64))
(declare-fun temp805_116 () (_ BitVec 64))
(declare-fun temp805_117 () (_ BitVec 64))
(declare-fun temp805_118 () (_ BitVec 64))
(declare-fun temp805_119 () (_ BitVec 64))
(declare-fun temp805_120 () (_ BitVec 64))
(declare-fun temp805_121 () (_ BitVec 64))
(declare-fun temp805_122 () (_ BitVec 64))
(declare-fun temp805_123 () (_ BitVec 64))
(declare-fun temp805_124 () (_ BitVec 64))
(declare-fun temp805_125 () (_ BitVec 64))
(declare-fun temp805_126 () (_ BitVec 64))
(declare-fun temp805_127 () (_ BitVec 64))
(declare-fun temp805_128 () (_ BitVec 64))
(declare-fun temp805_129 () (_ BitVec 64))
(declare-fun temp805_130 () (_ BitVec 64))
(declare-fun temp805_131 () (_ BitVec 64))
(declare-fun temp805_132 () (_ BitVec 64))
(declare-fun temp805_133 () (_ BitVec 64))
(declare-fun temp805_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp805_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp805_136 () (_ BitVec 64))
(declare-fun temp805_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp805_138 () (_ BitVec 64))
(declare-fun temp805_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp805_140 () (_ BitVec 64))
(declare-fun temp805_141 () (_ BitVec 64))
(declare-fun temp805_142 () (_ BitVec 64))
(declare-fun temp805_143 () (_ BitVec 64))
(declare-fun temp805_144 () (_ BitVec 64))
(declare-fun temp805_145 () (_ BitVec 64))
(declare-fun temp805_146 () (_ BitVec 64))
(declare-fun temp805_147 () (_ BitVec 64))
(declare-fun temp805_148 () (_ BitVec 64))
(declare-fun temp805_149 () (_ BitVec 64))
(declare-fun temp805_150 () (_ BitVec 64))
(declare-fun temp805_151 () (_ BitVec 64))
(declare-fun temp805_152 () (_ BitVec 64))
(declare-fun temp805_153 () (_ BitVec 64))
(declare-fun temp805_154 () (_ BitVec 64))
(declare-fun temp805_155 () (_ BitVec 64))
(declare-fun temp805_157 () (_ BitVec 64))
(declare-fun temp805_158 () (_ BitVec 64))
(declare-fun temp805_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp805_159 () (_ BitVec 64))
(declare-fun temp805_160 () (_ BitVec 64))
(declare-fun temp805_162 () (_ BitVec 64))
(declare-fun temp805_163 () (_ BitVec 64))
(declare-fun temp805_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp805_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp805_165 () (_ BitVec 64))
(declare-fun temp805_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp805_167 () (_ BitVec 64))
(declare-fun temp805_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp805_169 () (_ BitVec 64))
(declare-fun temp805_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp805_171 () (_ BitVec 64))
(declare-fun temp805_172 () (_ BitVec 64))
(declare-fun temp805_173 () (_ BitVec 64))
(declare-fun temp805_174 () (_ BitVec 64))
(declare-fun temp805_175 () (_ BitVec 64))
(declare-fun temp805_176 () (_ BitVec 64))
(declare-fun temp805_177 () (_ BitVec 64))
(declare-fun temp805_178 () (_ BitVec 64))
(declare-fun temp805_179 () (_ BitVec 64))
(declare-fun temp805_180 () (_ BitVec 64))
(declare-fun temp805_181 () (_ BitVec 64))
(declare-fun temp805_182 () (_ BitVec 64))
(declare-fun temp805_183 () (_ BitVec 64))
(declare-fun temp805_184 () (_ BitVec 64))
(declare-fun temp805_185 () (_ BitVec 64))
(declare-fun temp805_186 () (_ BitVec 64))
(declare-fun temp805_187 () (_ BitVec 64))
(declare-fun temp805_188 () (_ BitVec 64))
(declare-fun temp805_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp805_190 () (_ BitVec 64))
(declare-fun temp805_192 () (_ BitVec 64))
(declare-fun temp805_193 () (_ BitVec 64))
(declare-fun temp805_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp805_194 () (_ BitVec 64))
(declare-fun temp805_195 () (_ BitVec 64))
(declare-fun temp805_197 () (_ BitVec 64))
(declare-fun temp805_198 () (_ BitVec 64))
(declare-fun temp805_196 () (_ BitVec 64))
(declare-fun temp805_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp805_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp805_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp805_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp805_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp805_204 () (_ BitVec 64))
(declare-fun temp805_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp805_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp805_207 () (_ BitVec 64))
(declare-fun temp805_208 () (_ BitVec 64))
(declare-fun temp805_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp805_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp805_211 () (_ BitVec 64))
(declare-fun temp805_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp805_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp805_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211820 () (_ BitVec 64))
(declare-fun temp805_215 () (_ BitVec 64))
(declare-fun var211821 () (_ BitVec 64))
(declare-fun temp805_216 () (_ BitVec 64))
(assert (= temp805_1 #x0000000000000001))
(assert (= var77203 temp805_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp805_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp805_2)))
(assert (= temp805_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp805_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp805_4 #x0000000000000000))
(assert (= var210941 temp805_4))
(assert (= temp805_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp805_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp805_6 #x0000000000000000))
(assert (= var210986 temp805_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp805_7 #x0000000000000000))
(assert (= temp805_8 temp805_7))
(assert (= temp805_9 (select ARGNAME_padding_NAMEEND_VAL temp805_8)))
(assert (= temp805_10 #x0000000000000001))
(assert (= temp805_11 temp805_10))
(assert (= temp805_12 (select ARGNAME_padding_NAMEEND_VAL temp805_11)))
(assert (= temp805_13 #x0000000000000002))
(assert (= temp805_14 temp805_13))
(assert (= temp805_15 (select ARGNAME_padding_NAMEEND_VAL temp805_14)))
(assert (= temp805_16 #x0000000000000003))
(assert (= temp805_17 temp805_16))
(assert (= temp805_18 (select ARGNAME_padding_NAMEEND_VAL temp805_17)))
(assert (= temp805_19 #x0000000000000004))
(assert (= temp805_20 temp805_19))
(assert (= temp805_21 (select ARGNAME_padding_NAMEEND_VAL temp805_20)))
(assert (= temp805_22 #x0000000000000005))
(assert (= temp805_23 temp805_22))
(assert (= temp805_24 (select ARGNAME_padding_NAMEEND_VAL temp805_23)))
(assert (= temp805_25 #x0000000000000000))
(assert (= temp805_26 #x0000000000000000))
(assert (= temp805_27 temp805_26))
(assert (= temp805_28 (select ARGNAME_padding_NAMEEND_VAL temp805_27)))
(assert (= temp805_29 #x0000000000000000))
(assert (= temp805_30 #x0000000000000001))
(assert (= temp805_31 temp805_30))
(assert (= temp805_32 (select ARGNAME_padding_NAMEEND_VAL temp805_31)))
(assert (= temp805_33 #x0000000000000000))
(assert (= temp805_34 #x0000000000000002))
(assert (= temp805_35 temp805_34))
(assert (= temp805_36 (select ARGNAME_padding_NAMEEND_VAL temp805_35)))
(assert (= temp805_37 #x0000000000000000))
(assert (= temp805_38 #x0000000000000003))
(assert (= temp805_39 temp805_38))
(assert (= temp805_40 (select ARGNAME_padding_NAMEEND_VAL temp805_39)))
(assert (= temp805_41 #x0000000000000000))
(assert (= temp805_42 #x0000000000000004))
(assert (= temp805_43 temp805_42))
(assert (= temp805_44 (select ARGNAME_padding_NAMEEND_VAL temp805_43)))
(assert (= temp805_45 #x0000000000000000))
(assert (= temp805_46 #x0000000000000005))
(assert (= temp805_47 temp805_46))
(assert (= temp805_48 (select ARGNAME_padding_NAMEEND_VAL temp805_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp805_28 temp805_25)
             (bvslt temp805_32 temp805_29)
             (bvslt temp805_36 temp805_33)
             (bvslt temp805_40 temp805_37)
             (bvslt temp805_44 temp805_41)
             (bvslt temp805_48 temp805_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp805_49 #x0000000000000000))
(assert (= var1191714 temp805_49))
(assert (= temp805_50 #x0000000000000000))
(assert (= temp805_51 temp805_50))
(assert (= temp805_52 (select ARGNAME_output_padding_NAMEEND_VAL temp805_51)))
(assert (= temp805_53 #x0000000000000001))
(assert (= temp805_54 temp805_53))
(assert (= temp805_55 (select ARGNAME_output_padding_NAMEEND_VAL temp805_54)))
(assert (= temp805_56 #x0000000000000002))
(assert (= temp805_57 temp805_56))
(assert (= temp805_58 (select ARGNAME_output_padding_NAMEEND_VAL temp805_57)))
(assert (= temp805_59 #x0000000000000003))
(assert (= temp805_60 temp805_59))
(assert (= temp805_61 (select ARGNAME_output_padding_NAMEEND_VAL temp805_60)))
(assert (= temp805_62 #x0000000000000004))
(assert (= temp805_63 temp805_62))
(assert (= temp805_64 (select ARGNAME_output_padding_NAMEEND_VAL temp805_63)))
(assert (= temp805_65 #x0000000000000005))
(assert (= temp805_66 temp805_65))
(assert (= temp805_67 (select ARGNAME_output_padding_NAMEEND_VAL temp805_66)))
(assert (= temp805_68 #x0000000000000000))
(assert (= temp805_69 #x0000000000000000))
(assert (= temp805_70 temp805_69))
(assert (= temp805_71 (select ARGNAME_output_padding_NAMEEND_VAL temp805_70)))
(assert (= temp805_72 #x0000000000000000))
(assert (= temp805_73 #x0000000000000001))
(assert (= temp805_74 temp805_73))
(assert (= temp805_75 (select ARGNAME_output_padding_NAMEEND_VAL temp805_74)))
(assert (= temp805_76 #x0000000000000000))
(assert (= temp805_77 #x0000000000000002))
(assert (= temp805_78 temp805_77))
(assert (= temp805_79 (select ARGNAME_output_padding_NAMEEND_VAL temp805_78)))
(assert (= temp805_80 #x0000000000000000))
(assert (= temp805_81 #x0000000000000003))
(assert (= temp805_82 temp805_81))
(assert (= temp805_83 (select ARGNAME_output_padding_NAMEEND_VAL temp805_82)))
(assert (= temp805_84 #x0000000000000000))
(assert (= temp805_85 #x0000000000000004))
(assert (= temp805_86 temp805_85))
(assert (= temp805_87 (select ARGNAME_output_padding_NAMEEND_VAL temp805_86)))
(assert (= temp805_88 #x0000000000000000))
(assert (= temp805_89 #x0000000000000005))
(assert (= temp805_90 temp805_89))
(assert (= temp805_91 (select ARGNAME_output_padding_NAMEEND_VAL temp805_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp805_71 temp805_68)
             (bvslt temp805_75 temp805_72)
             (bvslt temp805_79 temp805_76)
             (bvslt temp805_83 temp805_80)
             (bvslt temp805_87 temp805_84)
             (bvslt temp805_91 temp805_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp805_92 #x0000000000000000))
(assert (= var1191725 temp805_92))
(assert (= temp805_93 #x0000000000000000))
(assert (= temp805_94 temp805_93))
(assert (= temp805_95 (select ARGNAME_stride_NAMEEND_VAL temp805_94)))
(assert (= temp805_96 #x0000000000000001))
(assert (= temp805_97 temp805_96))
(assert (= temp805_98 (select ARGNAME_stride_NAMEEND_VAL temp805_97)))
(assert (= temp805_99 #x0000000000000002))
(assert (= temp805_100 temp805_99))
(assert (= temp805_101 (select ARGNAME_stride_NAMEEND_VAL temp805_100)))
(assert (= temp805_102 #x0000000000000003))
(assert (= temp805_103 temp805_102))
(assert (= temp805_104 (select ARGNAME_stride_NAMEEND_VAL temp805_103)))
(assert (= temp805_105 #x0000000000000004))
(assert (= temp805_106 temp805_105))
(assert (= temp805_107 (select ARGNAME_stride_NAMEEND_VAL temp805_106)))
(assert (= temp805_108 #x0000000000000005))
(assert (= temp805_109 temp805_108))
(assert (= temp805_110 (select ARGNAME_stride_NAMEEND_VAL temp805_109)))
(assert (= temp805_111 #x0000000000000000))
(assert (= temp805_112 #x0000000000000000))
(assert (= temp805_113 temp805_112))
(assert (= temp805_114 (select ARGNAME_stride_NAMEEND_VAL temp805_113)))
(assert (= temp805_115 #x0000000000000000))
(assert (= temp805_116 #x0000000000000001))
(assert (= temp805_117 temp805_116))
(assert (= temp805_118 (select ARGNAME_stride_NAMEEND_VAL temp805_117)))
(assert (= temp805_119 #x0000000000000000))
(assert (= temp805_120 #x0000000000000002))
(assert (= temp805_121 temp805_120))
(assert (= temp805_122 (select ARGNAME_stride_NAMEEND_VAL temp805_121)))
(assert (= temp805_123 #x0000000000000000))
(assert (= temp805_124 #x0000000000000003))
(assert (= temp805_125 temp805_124))
(assert (= temp805_126 (select ARGNAME_stride_NAMEEND_VAL temp805_125)))
(assert (= temp805_127 #x0000000000000000))
(assert (= temp805_128 #x0000000000000004))
(assert (= temp805_129 temp805_128))
(assert (= temp805_130 (select ARGNAME_stride_NAMEEND_VAL temp805_129)))
(assert (= temp805_131 #x0000000000000000))
(assert (= temp805_132 #x0000000000000005))
(assert (= temp805_133 temp805_132))
(assert (= temp805_134 (select ARGNAME_stride_NAMEEND_VAL temp805_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp805_114 temp805_111)
             (bvsle temp805_118 temp805_115)
             (bvsle temp805_122 temp805_119)
             (bvsle temp805_126 temp805_123)
             (bvsle temp805_130 temp805_127)
             (bvsle temp805_134 temp805_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp805_135 #x0000000000000000))
(assert (= var1191735 temp805_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp805_136 #x0000000000000001))
(assert (= var1191747 temp805_136))
(assert (= temp805_137 #x0000000000000000))
(assert (= var1179826 temp805_137))
(assert (= temp805_138 #x0000000000000000))
(assert (= temp805_139 temp805_138))
(assert (= temp805_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp805_139)))
(assert (= temp805_141 #x0000000000000001))
(assert (= temp805_142 temp805_141))
(assert (= temp805_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp805_142)))
(assert (= temp805_144 #x0000000000000002))
(assert (= temp805_145 temp805_144))
(assert (= temp805_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp805_145)))
(assert (= temp805_147 #x0000000000000003))
(assert (= temp805_148 temp805_147))
(assert (= temp805_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp805_148)))
(assert (= temp805_150 #x0000000000000004))
(assert (= temp805_151 temp805_150))
(assert (= temp805_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp805_151)))
(assert (= temp805_153 #x0000000000000005))
(assert (= temp805_154 temp805_153))
(assert (= temp805_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp805_154)))
(assert (= temp805_157 var1179826))
(assert (= temp805_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp805_157)))
(assert (= temp805_156 temp805_158))
(assert (= var1191780
   (ite (bvslt temp805_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp805_159 #x0000000000000000))
(assert (= var1191780 temp805_159))
(assert (= temp805_160 #x0000000000000000))
(assert (= var1179826 temp805_160))
(assert (= temp805_162 var1179826))
(assert (= temp805_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp805_162)))
(assert (= temp805_161 temp805_163))
(assert (= var1191802 (bvsmod temp805_161 ARGNAME_groups_NAMEEND)))
(assert (= temp805_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp805_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp805_165 #x0000000000000001))
(assert (= var1191803 temp805_165))
(assert (= temp805_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp805_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp805_167 #x0000000000000001))
(assert (= var1191823 temp805_167))
(assert (= temp805_168 #x0000000000000001))
(assert (= var1180714 temp805_168))
(assert (= temp805_169 #x0000000000000000))
(assert (= temp805_170 temp805_169))
(assert (= temp805_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp805_170)))
(assert (= temp805_172 #x0000000000000001))
(assert (= temp805_173 temp805_172))
(assert (= temp805_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp805_173)))
(assert (= temp805_175 #x0000000000000002))
(assert (= temp805_176 temp805_175))
(assert (= temp805_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp805_176)))
(assert (= temp805_178 #x0000000000000003))
(assert (= temp805_179 temp805_178))
(assert (= temp805_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp805_179)))
(assert (= temp805_181 #x0000000000000004))
(assert (= temp805_182 temp805_181))
(assert (= temp805_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp805_182)))
(assert (= temp805_184 #x0000000000000005))
(assert (= temp805_185 temp805_184))
(assert (= temp805_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp805_185)))
(assert (= temp805_187 #x0000000000000000))
(assert (= temp805_188
   (ite (bvslt var1180714 temp805_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp805_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp805_188)))
(assert (= var1191831 temp805_189))
(assert (bvslt (ite (bvslt var1180714 temp805_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp805_190 #x0000000000000001))
(assert (= var1180714 temp805_190))
(assert (= temp805_192 var1180714))
(assert (= temp805_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp805_192)))
(assert (= temp805_191 temp805_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp805_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp805_194 #x0000000000000001))
(assert (= var1191836 temp805_194))
(assert (= temp805_195 #x0000000000000000))
(assert (= var1179826 temp805_195))
(assert (= temp805_197 var1179826))
(assert (= temp805_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp805_197)))
(assert (= temp805_196 temp805_198))
(assert (= temp805_199 #x0000000000000002))
(assert (= var1586025 temp805_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp805_200 #x0000000000000001))
(assert (= var1191993 temp805_200))
(assert (= temp805_201 #x0000000000000001))
(assert (= var2700303 temp805_201))
(assert (= temp805_202 #x0000000000000001))
(assert (= var2962447 temp805_202))
(assert (= temp805_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp805_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp805_204 #x0000000000000001))
(assert (= var211058 temp805_204))
(assert (= temp805_205 #x0000000000000001))
(assert (= var211188 temp805_205))
(assert (= var3879401 var211188))
(assert (= temp805_206 #x0000000000000000))
(assert (= var3866802 temp805_206))
(assert (= temp805_207 #x0000000000000000))
(assert (= temp805_208
   (ite (bvslt var3866802 temp805_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp805_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp805_208)))
(assert (= var3879420 temp805_209))
(assert (bvslt (ite (bvslt var3866802 temp805_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp805_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp805_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp805_211 #x0000000000000001))
(assert (= var3879421 temp805_211))
(assert (= temp805_212 #x0000000000000000))
(assert (= var4079423 temp805_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp805_213 #x0000000000000002))
(assert (= var4208259 temp805_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp805_214 #x0000000000000000))
(assert (= var4273820 temp805_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211820 var210913))
(assert (= temp805_215 #x0000000000000000))
(assert (= var211821
   (ite (distinct var211820 temp805_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp805_216 #x0000000000000001))
(assert (= var211058 temp805_216))
(model-add temp805_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp805_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp805_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp805_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




