(declare-fun temp10556_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10556_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10556_3 () (_ BitVec 64))
(declare-fun temp10556_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10556_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10556_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10556_7 () (_ BitVec 64))
(declare-fun temp10556_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10556_9 () (_ BitVec 64))
(declare-fun temp10556_10 () (_ BitVec 64))
(declare-fun temp10556_11 () (_ BitVec 64))
(declare-fun temp10556_12 () (_ BitVec 64))
(declare-fun temp10556_13 () (_ BitVec 64))
(declare-fun temp10556_14 () (_ BitVec 64))
(declare-fun temp10556_15 () (_ BitVec 64))
(declare-fun temp10556_16 () (_ BitVec 64))
(declare-fun temp10556_17 () (_ BitVec 64))
(declare-fun temp10556_18 () (_ BitVec 64))
(declare-fun temp10556_19 () (_ BitVec 64))
(declare-fun temp10556_20 () (_ BitVec 64))
(declare-fun temp10556_21 () (_ BitVec 64))
(declare-fun temp10556_22 () (_ BitVec 64))
(declare-fun temp10556_23 () (_ BitVec 64))
(declare-fun temp10556_24 () (_ BitVec 64))
(declare-fun temp10556_25 () (_ BitVec 64))
(declare-fun temp10556_26 () (_ BitVec 64))
(declare-fun temp10556_27 () (_ BitVec 64))
(declare-fun temp10556_28 () (_ BitVec 64))
(declare-fun temp10556_29 () (_ BitVec 64))
(declare-fun temp10556_30 () (_ BitVec 64))
(declare-fun temp10556_31 () (_ BitVec 64))
(declare-fun temp10556_32 () (_ BitVec 64))
(declare-fun temp10556_33 () (_ BitVec 64))
(declare-fun temp10556_34 () (_ BitVec 64))
(declare-fun temp10556_35 () (_ BitVec 64))
(declare-fun temp10556_36 () (_ BitVec 64))
(declare-fun temp10556_37 () (_ BitVec 64))
(declare-fun temp10556_38 () (_ BitVec 64))
(declare-fun temp10556_39 () (_ BitVec 64))
(declare-fun temp10556_40 () (_ BitVec 64))
(declare-fun temp10556_41 () (_ BitVec 64))
(declare-fun temp10556_42 () (_ BitVec 64))
(declare-fun temp10556_43 () (_ BitVec 64))
(declare-fun temp10556_44 () (_ BitVec 64))
(declare-fun temp10556_45 () (_ BitVec 64))
(declare-fun temp10556_46 () (_ BitVec 64))
(declare-fun temp10556_47 () (_ BitVec 64))
(declare-fun temp10556_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10556_49 () (_ BitVec 64))
(declare-fun temp10556_50 () (_ BitVec 64))
(declare-fun temp10556_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10556_52 () (_ BitVec 64))
(declare-fun temp10556_53 () (_ BitVec 64))
(declare-fun temp10556_54 () (_ BitVec 64))
(declare-fun temp10556_55 () (_ BitVec 64))
(declare-fun temp10556_56 () (_ BitVec 64))
(declare-fun temp10556_57 () (_ BitVec 64))
(declare-fun temp10556_58 () (_ BitVec 64))
(declare-fun temp10556_59 () (_ BitVec 64))
(declare-fun temp10556_60 () (_ BitVec 64))
(declare-fun temp10556_61 () (_ BitVec 64))
(declare-fun temp10556_62 () (_ BitVec 64))
(declare-fun temp10556_63 () (_ BitVec 64))
(declare-fun temp10556_64 () (_ BitVec 64))
(declare-fun temp10556_65 () (_ BitVec 64))
(declare-fun temp10556_66 () (_ BitVec 64))
(declare-fun temp10556_67 () (_ BitVec 64))
(declare-fun temp10556_68 () (_ BitVec 64))
(declare-fun temp10556_69 () (_ BitVec 64))
(declare-fun temp10556_70 () (_ BitVec 64))
(declare-fun temp10556_71 () (_ BitVec 64))
(declare-fun temp10556_72 () (_ BitVec 64))
(declare-fun temp10556_73 () (_ BitVec 64))
(declare-fun temp10556_74 () (_ BitVec 64))
(declare-fun temp10556_75 () (_ BitVec 64))
(declare-fun temp10556_76 () (_ BitVec 64))
(declare-fun temp10556_77 () (_ BitVec 64))
(declare-fun temp10556_78 () (_ BitVec 64))
(declare-fun temp10556_79 () (_ BitVec 64))
(declare-fun temp10556_80 () (_ BitVec 64))
(declare-fun temp10556_81 () (_ BitVec 64))
(declare-fun temp10556_82 () (_ BitVec 64))
(declare-fun temp10556_83 () (_ BitVec 64))
(declare-fun temp10556_84 () (_ BitVec 64))
(declare-fun temp10556_85 () (_ BitVec 64))
(declare-fun temp10556_86 () (_ BitVec 64))
(declare-fun temp10556_87 () (_ BitVec 64))
(declare-fun temp10556_88 () (_ BitVec 64))
(declare-fun temp10556_89 () (_ BitVec 64))
(declare-fun temp10556_90 () (_ BitVec 64))
(declare-fun temp10556_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10556_92 () (_ BitVec 64))
(declare-fun temp10556_93 () (_ BitVec 64))
(declare-fun temp10556_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10556_95 () (_ BitVec 64))
(declare-fun temp10556_96 () (_ BitVec 64))
(declare-fun temp10556_97 () (_ BitVec 64))
(declare-fun temp10556_98 () (_ BitVec 64))
(declare-fun temp10556_99 () (_ BitVec 64))
(declare-fun temp10556_100 () (_ BitVec 64))
(declare-fun temp10556_101 () (_ BitVec 64))
(declare-fun temp10556_102 () (_ BitVec 64))
(declare-fun temp10556_103 () (_ BitVec 64))
(declare-fun temp10556_104 () (_ BitVec 64))
(declare-fun temp10556_105 () (_ BitVec 64))
(declare-fun temp10556_106 () (_ BitVec 64))
(declare-fun temp10556_107 () (_ BitVec 64))
(declare-fun temp10556_108 () (_ BitVec 64))
(declare-fun temp10556_109 () (_ BitVec 64))
(declare-fun temp10556_110 () (_ BitVec 64))
(declare-fun temp10556_111 () (_ BitVec 64))
(declare-fun temp10556_112 () (_ BitVec 64))
(declare-fun temp10556_113 () (_ BitVec 64))
(declare-fun temp10556_114 () (_ BitVec 64))
(declare-fun temp10556_115 () (_ BitVec 64))
(declare-fun temp10556_116 () (_ BitVec 64))
(declare-fun temp10556_117 () (_ BitVec 64))
(declare-fun temp10556_118 () (_ BitVec 64))
(declare-fun temp10556_119 () (_ BitVec 64))
(declare-fun temp10556_120 () (_ BitVec 64))
(declare-fun temp10556_121 () (_ BitVec 64))
(declare-fun temp10556_122 () (_ BitVec 64))
(declare-fun temp10556_123 () (_ BitVec 64))
(declare-fun temp10556_124 () (_ BitVec 64))
(declare-fun temp10556_125 () (_ BitVec 64))
(declare-fun temp10556_126 () (_ BitVec 64))
(declare-fun temp10556_127 () (_ BitVec 64))
(declare-fun temp10556_128 () (_ BitVec 64))
(declare-fun temp10556_129 () (_ BitVec 64))
(declare-fun temp10556_130 () (_ BitVec 64))
(declare-fun temp10556_131 () (_ BitVec 64))
(declare-fun temp10556_132 () (_ BitVec 64))
(declare-fun temp10556_133 () (_ BitVec 64))
(declare-fun temp10556_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10556_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10556_136 () (_ BitVec 64))
(declare-fun temp10556_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10556_138 () (_ BitVec 64))
(declare-fun temp10556_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10556_140 () (_ BitVec 64))
(declare-fun temp10556_141 () (_ BitVec 64))
(declare-fun temp10556_142 () (_ BitVec 64))
(declare-fun temp10556_143 () (_ BitVec 64))
(declare-fun temp10556_144 () (_ BitVec 64))
(declare-fun temp10556_145 () (_ BitVec 64))
(declare-fun temp10556_146 () (_ BitVec 64))
(declare-fun temp10556_147 () (_ BitVec 64))
(declare-fun temp10556_148 () (_ BitVec 64))
(declare-fun temp10556_149 () (_ BitVec 64))
(declare-fun temp10556_150 () (_ BitVec 64))
(declare-fun temp10556_151 () (_ BitVec 64))
(declare-fun temp10556_152 () (_ BitVec 64))
(declare-fun temp10556_153 () (_ BitVec 64))
(declare-fun temp10556_154 () (_ BitVec 64))
(declare-fun temp10556_155 () (_ BitVec 64))
(declare-fun temp10556_157 () (_ BitVec 64))
(declare-fun temp10556_158 () (_ BitVec 64))
(declare-fun temp10556_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10556_159 () (_ BitVec 64))
(declare-fun temp10556_160 () (_ BitVec 64))
(declare-fun temp10556_162 () (_ BitVec 64))
(declare-fun temp10556_163 () (_ BitVec 64))
(declare-fun temp10556_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10556_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10556_165 () (_ BitVec 64))
(declare-fun temp10556_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10556_167 () (_ BitVec 64))
(declare-fun temp10556_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10556_169 () (_ BitVec 64))
(declare-fun temp10556_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10556_171 () (_ BitVec 64))
(declare-fun temp10556_172 () (_ BitVec 64))
(declare-fun temp10556_173 () (_ BitVec 64))
(declare-fun temp10556_174 () (_ BitVec 64))
(declare-fun temp10556_175 () (_ BitVec 64))
(declare-fun temp10556_176 () (_ BitVec 64))
(declare-fun temp10556_177 () (_ BitVec 64))
(declare-fun temp10556_178 () (_ BitVec 64))
(declare-fun temp10556_179 () (_ BitVec 64))
(declare-fun temp10556_180 () (_ BitVec 64))
(declare-fun temp10556_181 () (_ BitVec 64))
(declare-fun temp10556_182 () (_ BitVec 64))
(declare-fun temp10556_183 () (_ BitVec 64))
(declare-fun temp10556_184 () (_ BitVec 64))
(declare-fun temp10556_185 () (_ BitVec 64))
(declare-fun temp10556_186 () (_ BitVec 64))
(declare-fun temp10556_187 () (_ BitVec 64))
(declare-fun temp10556_188 () (_ BitVec 64))
(declare-fun temp10556_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10556_190 () (_ BitVec 64))
(declare-fun temp10556_192 () (_ BitVec 64))
(declare-fun temp10556_193 () (_ BitVec 64))
(declare-fun temp10556_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10556_194 () (_ BitVec 64))
(declare-fun temp10556_195 () (_ BitVec 64))
(declare-fun temp10556_197 () (_ BitVec 64))
(declare-fun temp10556_198 () (_ BitVec 64))
(declare-fun temp10556_196 () (_ BitVec 64))
(declare-fun temp10556_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10556_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10556_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10556_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10556_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10556_204 () (_ BitVec 64))
(declare-fun temp10556_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10556_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10556_207 () (_ BitVec 64))
(declare-fun temp10556_208 () (_ BitVec 64))
(declare-fun temp10556_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10556_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10556_211 () (_ BitVec 64))
(declare-fun temp10556_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10556_213 () (_ BitVec 64))
(declare-fun temp10556_214 () (_ BitVec 64))
(declare-fun temp10556_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10556_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10556_217 () (_ BitVec 64))
(declare-fun temp10556_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10556_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10556_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp10556_221 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5848909 () (_ BitVec 64))
(declare-fun temp10556_222 () (_ BitVec 64))
(declare-fun temp10556_223 () (_ BitVec 64))
(declare-fun var6370068 () (_ BitVec 64))
(declare-fun var6370035 () (_ BitVec 64))
(declare-fun var6238599 () (_ BitVec 64))
(declare-fun var6238595 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10556_224 () (_ BitVec 64))
(assert (= temp10556_1 #x0000000000000001))
(assert (= var77203 temp10556_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10556_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10556_2)))
(assert (= temp10556_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10556_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10556_4 #x0000000000000000))
(assert (= var210941 temp10556_4))
(assert (= temp10556_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10556_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10556_6 #x0000000000000000))
(assert (= var210986 temp10556_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10556_7 #x0000000000000000))
(assert (= temp10556_8 temp10556_7))
(assert (= temp10556_9 (select ARGNAME_padding_NAMEEND_VAL temp10556_8)))
(assert (= temp10556_10 #x0000000000000001))
(assert (= temp10556_11 temp10556_10))
(assert (= temp10556_12 (select ARGNAME_padding_NAMEEND_VAL temp10556_11)))
(assert (= temp10556_13 #x0000000000000002))
(assert (= temp10556_14 temp10556_13))
(assert (= temp10556_15 (select ARGNAME_padding_NAMEEND_VAL temp10556_14)))
(assert (= temp10556_16 #x0000000000000003))
(assert (= temp10556_17 temp10556_16))
(assert (= temp10556_18 (select ARGNAME_padding_NAMEEND_VAL temp10556_17)))
(assert (= temp10556_19 #x0000000000000004))
(assert (= temp10556_20 temp10556_19))
(assert (= temp10556_21 (select ARGNAME_padding_NAMEEND_VAL temp10556_20)))
(assert (= temp10556_22 #x0000000000000005))
(assert (= temp10556_23 temp10556_22))
(assert (= temp10556_24 (select ARGNAME_padding_NAMEEND_VAL temp10556_23)))
(assert (= temp10556_25 #x0000000000000000))
(assert (= temp10556_26 #x0000000000000000))
(assert (= temp10556_27 temp10556_26))
(assert (= temp10556_28 (select ARGNAME_padding_NAMEEND_VAL temp10556_27)))
(assert (= temp10556_29 #x0000000000000000))
(assert (= temp10556_30 #x0000000000000001))
(assert (= temp10556_31 temp10556_30))
(assert (= temp10556_32 (select ARGNAME_padding_NAMEEND_VAL temp10556_31)))
(assert (= temp10556_33 #x0000000000000000))
(assert (= temp10556_34 #x0000000000000002))
(assert (= temp10556_35 temp10556_34))
(assert (= temp10556_36 (select ARGNAME_padding_NAMEEND_VAL temp10556_35)))
(assert (= temp10556_37 #x0000000000000000))
(assert (= temp10556_38 #x0000000000000003))
(assert (= temp10556_39 temp10556_38))
(assert (= temp10556_40 (select ARGNAME_padding_NAMEEND_VAL temp10556_39)))
(assert (= temp10556_41 #x0000000000000000))
(assert (= temp10556_42 #x0000000000000004))
(assert (= temp10556_43 temp10556_42))
(assert (= temp10556_44 (select ARGNAME_padding_NAMEEND_VAL temp10556_43)))
(assert (= temp10556_45 #x0000000000000000))
(assert (= temp10556_46 #x0000000000000005))
(assert (= temp10556_47 temp10556_46))
(assert (= temp10556_48 (select ARGNAME_padding_NAMEEND_VAL temp10556_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10556_28 temp10556_25)
             (bvslt temp10556_32 temp10556_29)
             (bvslt temp10556_36 temp10556_33)
             (bvslt temp10556_40 temp10556_37)
             (bvslt temp10556_44 temp10556_41)
             (bvslt temp10556_48 temp10556_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10556_49 #x0000000000000000))
(assert (= var1191714 temp10556_49))
(assert (= temp10556_50 #x0000000000000000))
(assert (= temp10556_51 temp10556_50))
(assert (= temp10556_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10556_51)))
(assert (= temp10556_53 #x0000000000000001))
(assert (= temp10556_54 temp10556_53))
(assert (= temp10556_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10556_54)))
(assert (= temp10556_56 #x0000000000000002))
(assert (= temp10556_57 temp10556_56))
(assert (= temp10556_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10556_57)))
(assert (= temp10556_59 #x0000000000000003))
(assert (= temp10556_60 temp10556_59))
(assert (= temp10556_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10556_60)))
(assert (= temp10556_62 #x0000000000000004))
(assert (= temp10556_63 temp10556_62))
(assert (= temp10556_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10556_63)))
(assert (= temp10556_65 #x0000000000000005))
(assert (= temp10556_66 temp10556_65))
(assert (= temp10556_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10556_66)))
(assert (= temp10556_68 #x0000000000000000))
(assert (= temp10556_69 #x0000000000000000))
(assert (= temp10556_70 temp10556_69))
(assert (= temp10556_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10556_70)))
(assert (= temp10556_72 #x0000000000000000))
(assert (= temp10556_73 #x0000000000000001))
(assert (= temp10556_74 temp10556_73))
(assert (= temp10556_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10556_74)))
(assert (= temp10556_76 #x0000000000000000))
(assert (= temp10556_77 #x0000000000000002))
(assert (= temp10556_78 temp10556_77))
(assert (= temp10556_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10556_78)))
(assert (= temp10556_80 #x0000000000000000))
(assert (= temp10556_81 #x0000000000000003))
(assert (= temp10556_82 temp10556_81))
(assert (= temp10556_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10556_82)))
(assert (= temp10556_84 #x0000000000000000))
(assert (= temp10556_85 #x0000000000000004))
(assert (= temp10556_86 temp10556_85))
(assert (= temp10556_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10556_86)))
(assert (= temp10556_88 #x0000000000000000))
(assert (= temp10556_89 #x0000000000000005))
(assert (= temp10556_90 temp10556_89))
(assert (= temp10556_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10556_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10556_71 temp10556_68)
             (bvslt temp10556_75 temp10556_72)
             (bvslt temp10556_79 temp10556_76)
             (bvslt temp10556_83 temp10556_80)
             (bvslt temp10556_87 temp10556_84)
             (bvslt temp10556_91 temp10556_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10556_92 #x0000000000000000))
(assert (= var1191725 temp10556_92))
(assert (= temp10556_93 #x0000000000000000))
(assert (= temp10556_94 temp10556_93))
(assert (= temp10556_95 (select ARGNAME_stride_NAMEEND_VAL temp10556_94)))
(assert (= temp10556_96 #x0000000000000001))
(assert (= temp10556_97 temp10556_96))
(assert (= temp10556_98 (select ARGNAME_stride_NAMEEND_VAL temp10556_97)))
(assert (= temp10556_99 #x0000000000000002))
(assert (= temp10556_100 temp10556_99))
(assert (= temp10556_101 (select ARGNAME_stride_NAMEEND_VAL temp10556_100)))
(assert (= temp10556_102 #x0000000000000003))
(assert (= temp10556_103 temp10556_102))
(assert (= temp10556_104 (select ARGNAME_stride_NAMEEND_VAL temp10556_103)))
(assert (= temp10556_105 #x0000000000000004))
(assert (= temp10556_106 temp10556_105))
(assert (= temp10556_107 (select ARGNAME_stride_NAMEEND_VAL temp10556_106)))
(assert (= temp10556_108 #x0000000000000005))
(assert (= temp10556_109 temp10556_108))
(assert (= temp10556_110 (select ARGNAME_stride_NAMEEND_VAL temp10556_109)))
(assert (= temp10556_111 #x0000000000000000))
(assert (= temp10556_112 #x0000000000000000))
(assert (= temp10556_113 temp10556_112))
(assert (= temp10556_114 (select ARGNAME_stride_NAMEEND_VAL temp10556_113)))
(assert (= temp10556_115 #x0000000000000000))
(assert (= temp10556_116 #x0000000000000001))
(assert (= temp10556_117 temp10556_116))
(assert (= temp10556_118 (select ARGNAME_stride_NAMEEND_VAL temp10556_117)))
(assert (= temp10556_119 #x0000000000000000))
(assert (= temp10556_120 #x0000000000000002))
(assert (= temp10556_121 temp10556_120))
(assert (= temp10556_122 (select ARGNAME_stride_NAMEEND_VAL temp10556_121)))
(assert (= temp10556_123 #x0000000000000000))
(assert (= temp10556_124 #x0000000000000003))
(assert (= temp10556_125 temp10556_124))
(assert (= temp10556_126 (select ARGNAME_stride_NAMEEND_VAL temp10556_125)))
(assert (= temp10556_127 #x0000000000000000))
(assert (= temp10556_128 #x0000000000000004))
(assert (= temp10556_129 temp10556_128))
(assert (= temp10556_130 (select ARGNAME_stride_NAMEEND_VAL temp10556_129)))
(assert (= temp10556_131 #x0000000000000000))
(assert (= temp10556_132 #x0000000000000005))
(assert (= temp10556_133 temp10556_132))
(assert (= temp10556_134 (select ARGNAME_stride_NAMEEND_VAL temp10556_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10556_114 temp10556_111)
             (bvsle temp10556_118 temp10556_115)
             (bvsle temp10556_122 temp10556_119)
             (bvsle temp10556_126 temp10556_123)
             (bvsle temp10556_130 temp10556_127)
             (bvsle temp10556_134 temp10556_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10556_135 #x0000000000000000))
(assert (= var1191735 temp10556_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10556_136 #x0000000000000001))
(assert (= var1191747 temp10556_136))
(assert (= temp10556_137 #x0000000000000000))
(assert (= var1179826 temp10556_137))
(assert (= temp10556_138 #x0000000000000000))
(assert (= temp10556_139 temp10556_138))
(assert (= temp10556_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10556_139)))
(assert (= temp10556_141 #x0000000000000001))
(assert (= temp10556_142 temp10556_141))
(assert (= temp10556_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10556_142)))
(assert (= temp10556_144 #x0000000000000002))
(assert (= temp10556_145 temp10556_144))
(assert (= temp10556_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10556_145)))
(assert (= temp10556_147 #x0000000000000003))
(assert (= temp10556_148 temp10556_147))
(assert (= temp10556_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10556_148)))
(assert (= temp10556_150 #x0000000000000004))
(assert (= temp10556_151 temp10556_150))
(assert (= temp10556_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10556_151)))
(assert (= temp10556_153 #x0000000000000005))
(assert (= temp10556_154 temp10556_153))
(assert (= temp10556_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10556_154)))
(assert (= temp10556_157 var1179826))
(assert (= temp10556_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10556_157)))
(assert (= temp10556_156 temp10556_158))
(assert (= var1191780
   (ite (bvslt temp10556_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10556_159 #x0000000000000000))
(assert (= var1191780 temp10556_159))
(assert (= temp10556_160 #x0000000000000000))
(assert (= var1179826 temp10556_160))
(assert (= temp10556_162 var1179826))
(assert (= temp10556_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10556_162)))
(assert (= temp10556_161 temp10556_163))
(assert (= var1191802 (bvsmod temp10556_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10556_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10556_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10556_165 #x0000000000000001))
(assert (= var1191803 temp10556_165))
(assert (= temp10556_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10556_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10556_167 #x0000000000000001))
(assert (= var1191823 temp10556_167))
(assert (= temp10556_168 #x0000000000000001))
(assert (= var1180714 temp10556_168))
(assert (= temp10556_169 #x0000000000000000))
(assert (= temp10556_170 temp10556_169))
(assert (= temp10556_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10556_170)))
(assert (= temp10556_172 #x0000000000000001))
(assert (= temp10556_173 temp10556_172))
(assert (= temp10556_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10556_173)))
(assert (= temp10556_175 #x0000000000000002))
(assert (= temp10556_176 temp10556_175))
(assert (= temp10556_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10556_176)))
(assert (= temp10556_178 #x0000000000000003))
(assert (= temp10556_179 temp10556_178))
(assert (= temp10556_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10556_179)))
(assert (= temp10556_181 #x0000000000000004))
(assert (= temp10556_182 temp10556_181))
(assert (= temp10556_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10556_182)))
(assert (= temp10556_184 #x0000000000000005))
(assert (= temp10556_185 temp10556_184))
(assert (= temp10556_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10556_185)))
(assert (= temp10556_187 #x0000000000000000))
(assert (= temp10556_188
   (ite (bvslt var1180714 temp10556_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10556_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10556_188)))
(assert (= var1191831 temp10556_189))
(assert (bvslt (ite (bvslt var1180714 temp10556_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10556_190 #x0000000000000001))
(assert (= var1180714 temp10556_190))
(assert (= temp10556_192 var1180714))
(assert (= temp10556_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10556_192)))
(assert (= temp10556_191 temp10556_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10556_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10556_194 #x0000000000000001))
(assert (= var1191836 temp10556_194))
(assert (= temp10556_195 #x0000000000000000))
(assert (= var1179826 temp10556_195))
(assert (= temp10556_197 var1179826))
(assert (= temp10556_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10556_197)))
(assert (= temp10556_196 temp10556_198))
(assert (= temp10556_199 #x0000000000000002))
(assert (= var1586025 temp10556_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10556_200 #x0000000000000001))
(assert (= var1191993 temp10556_200))
(assert (= temp10556_201 #x0000000000000001))
(assert (= var2700303 temp10556_201))
(assert (= temp10556_202 #x0000000000000001))
(assert (= var2962447 temp10556_202))
(assert (= temp10556_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10556_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10556_204 #x0000000000000001))
(assert (= var211058 temp10556_204))
(assert (= temp10556_205 #x0000000000000001))
(assert (= var211188 temp10556_205))
(assert (= var3879401 var211188))
(assert (= temp10556_206 #x0000000000000000))
(assert (= var3866802 temp10556_206))
(assert (= temp10556_207 #x0000000000000000))
(assert (= temp10556_208
   (ite (bvslt var3866802 temp10556_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10556_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10556_208)))
(assert (= var3879420 temp10556_209))
(assert (bvslt (ite (bvslt var3866802 temp10556_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10556_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10556_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10556_211 #x0000000000000000))
(assert (= var3879421 temp10556_211))
(assert (= temp10556_212 #x0000000000000001))
(assert (= var3867690 temp10556_212))
(assert (= temp10556_213 #x0000000000000000))
(assert (= temp10556_214
   (ite (bvslt var3867690 temp10556_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10556_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10556_214)))
(assert (= var3879423 temp10556_215))
(assert (bvslt (ite (bvslt var3867690 temp10556_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10556_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10556_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10556_217 #x0000000000000001))
(assert (= var3879424 temp10556_217))
(assert (= temp10556_218 #x0000000000000000))
(assert (= var4133117 temp10556_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10556_219 #x0000000000000002))
(assert (= var4339331 temp10556_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10556_220 #x0000000000000000))
(assert (= var4404892 temp10556_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4927888 var211201))
(assert (= var211388 var210913))
(assert (= temp10556_221 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp10556_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var5848909 var211389))
(assert (= temp10556_222 #x0000000000000001))
(assert (= var211058 temp10556_222))
(assert (= temp10556_223 #x0000000000000000))
(assert (= var6370068 temp10556_223))
(assert (= var6370035 var6370068))
(assert (= var6238599 var6370035))
(assert (= var6238595 var6238599))
(assert (= var212669 var6238595))
(assert (= temp10556_224 #x0000000000000000))
(assert (= var212669 temp10556_224))
(model-add temp10556_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10556_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10556_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10556_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




