(declare-fun temp1008_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1008_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1008_3 () (_ BitVec 64))
(declare-fun temp1008_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1008_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1008_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1008_7 () (_ BitVec 64))
(declare-fun temp1008_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1008_9 () (_ BitVec 64))
(declare-fun temp1008_10 () (_ BitVec 64))
(declare-fun temp1008_11 () (_ BitVec 64))
(declare-fun temp1008_12 () (_ BitVec 64))
(declare-fun temp1008_13 () (_ BitVec 64))
(declare-fun temp1008_14 () (_ BitVec 64))
(declare-fun temp1008_15 () (_ BitVec 64))
(declare-fun temp1008_16 () (_ BitVec 64))
(declare-fun temp1008_17 () (_ BitVec 64))
(declare-fun temp1008_18 () (_ BitVec 64))
(declare-fun temp1008_19 () (_ BitVec 64))
(declare-fun temp1008_20 () (_ BitVec 64))
(declare-fun temp1008_21 () (_ BitVec 64))
(declare-fun temp1008_22 () (_ BitVec 64))
(declare-fun temp1008_23 () (_ BitVec 64))
(declare-fun temp1008_24 () (_ BitVec 64))
(declare-fun temp1008_25 () (_ BitVec 64))
(declare-fun temp1008_26 () (_ BitVec 64))
(declare-fun temp1008_27 () (_ BitVec 64))
(declare-fun temp1008_28 () (_ BitVec 64))
(declare-fun temp1008_29 () (_ BitVec 64))
(declare-fun temp1008_30 () (_ BitVec 64))
(declare-fun temp1008_31 () (_ BitVec 64))
(declare-fun temp1008_32 () (_ BitVec 64))
(declare-fun temp1008_33 () (_ BitVec 64))
(declare-fun temp1008_34 () (_ BitVec 64))
(declare-fun temp1008_35 () (_ BitVec 64))
(declare-fun temp1008_36 () (_ BitVec 64))
(declare-fun temp1008_37 () (_ BitVec 64))
(declare-fun temp1008_38 () (_ BitVec 64))
(declare-fun temp1008_39 () (_ BitVec 64))
(declare-fun temp1008_40 () (_ BitVec 64))
(declare-fun temp1008_41 () (_ BitVec 64))
(declare-fun temp1008_42 () (_ BitVec 64))
(declare-fun temp1008_43 () (_ BitVec 64))
(declare-fun temp1008_44 () (_ BitVec 64))
(declare-fun temp1008_45 () (_ BitVec 64))
(declare-fun temp1008_46 () (_ BitVec 64))
(declare-fun temp1008_47 () (_ BitVec 64))
(declare-fun temp1008_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1008_49 () (_ BitVec 64))
(declare-fun temp1008_50 () (_ BitVec 64))
(declare-fun temp1008_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1008_52 () (_ BitVec 64))
(declare-fun temp1008_53 () (_ BitVec 64))
(declare-fun temp1008_54 () (_ BitVec 64))
(declare-fun temp1008_55 () (_ BitVec 64))
(declare-fun temp1008_56 () (_ BitVec 64))
(declare-fun temp1008_57 () (_ BitVec 64))
(declare-fun temp1008_58 () (_ BitVec 64))
(declare-fun temp1008_59 () (_ BitVec 64))
(declare-fun temp1008_60 () (_ BitVec 64))
(declare-fun temp1008_61 () (_ BitVec 64))
(declare-fun temp1008_62 () (_ BitVec 64))
(declare-fun temp1008_63 () (_ BitVec 64))
(declare-fun temp1008_64 () (_ BitVec 64))
(declare-fun temp1008_65 () (_ BitVec 64))
(declare-fun temp1008_66 () (_ BitVec 64))
(declare-fun temp1008_67 () (_ BitVec 64))
(declare-fun temp1008_68 () (_ BitVec 64))
(declare-fun temp1008_69 () (_ BitVec 64))
(declare-fun temp1008_70 () (_ BitVec 64))
(declare-fun temp1008_71 () (_ BitVec 64))
(declare-fun temp1008_72 () (_ BitVec 64))
(declare-fun temp1008_73 () (_ BitVec 64))
(declare-fun temp1008_74 () (_ BitVec 64))
(declare-fun temp1008_75 () (_ BitVec 64))
(declare-fun temp1008_76 () (_ BitVec 64))
(declare-fun temp1008_77 () (_ BitVec 64))
(declare-fun temp1008_78 () (_ BitVec 64))
(declare-fun temp1008_79 () (_ BitVec 64))
(declare-fun temp1008_80 () (_ BitVec 64))
(declare-fun temp1008_81 () (_ BitVec 64))
(declare-fun temp1008_82 () (_ BitVec 64))
(declare-fun temp1008_83 () (_ BitVec 64))
(declare-fun temp1008_84 () (_ BitVec 64))
(declare-fun temp1008_85 () (_ BitVec 64))
(declare-fun temp1008_86 () (_ BitVec 64))
(declare-fun temp1008_87 () (_ BitVec 64))
(declare-fun temp1008_88 () (_ BitVec 64))
(declare-fun temp1008_89 () (_ BitVec 64))
(declare-fun temp1008_90 () (_ BitVec 64))
(declare-fun temp1008_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1008_92 () (_ BitVec 64))
(declare-fun temp1008_93 () (_ BitVec 64))
(declare-fun temp1008_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1008_95 () (_ BitVec 64))
(declare-fun temp1008_96 () (_ BitVec 64))
(declare-fun temp1008_97 () (_ BitVec 64))
(declare-fun temp1008_98 () (_ BitVec 64))
(declare-fun temp1008_99 () (_ BitVec 64))
(declare-fun temp1008_100 () (_ BitVec 64))
(declare-fun temp1008_101 () (_ BitVec 64))
(declare-fun temp1008_102 () (_ BitVec 64))
(declare-fun temp1008_103 () (_ BitVec 64))
(declare-fun temp1008_104 () (_ BitVec 64))
(declare-fun temp1008_105 () (_ BitVec 64))
(declare-fun temp1008_106 () (_ BitVec 64))
(declare-fun temp1008_107 () (_ BitVec 64))
(declare-fun temp1008_108 () (_ BitVec 64))
(declare-fun temp1008_109 () (_ BitVec 64))
(declare-fun temp1008_110 () (_ BitVec 64))
(declare-fun temp1008_111 () (_ BitVec 64))
(declare-fun temp1008_112 () (_ BitVec 64))
(declare-fun temp1008_113 () (_ BitVec 64))
(declare-fun temp1008_114 () (_ BitVec 64))
(declare-fun temp1008_115 () (_ BitVec 64))
(declare-fun temp1008_116 () (_ BitVec 64))
(declare-fun temp1008_117 () (_ BitVec 64))
(declare-fun temp1008_118 () (_ BitVec 64))
(declare-fun temp1008_119 () (_ BitVec 64))
(declare-fun temp1008_120 () (_ BitVec 64))
(declare-fun temp1008_121 () (_ BitVec 64))
(declare-fun temp1008_122 () (_ BitVec 64))
(declare-fun temp1008_123 () (_ BitVec 64))
(declare-fun temp1008_124 () (_ BitVec 64))
(declare-fun temp1008_125 () (_ BitVec 64))
(declare-fun temp1008_126 () (_ BitVec 64))
(declare-fun temp1008_127 () (_ BitVec 64))
(declare-fun temp1008_128 () (_ BitVec 64))
(declare-fun temp1008_129 () (_ BitVec 64))
(declare-fun temp1008_130 () (_ BitVec 64))
(declare-fun temp1008_131 () (_ BitVec 64))
(declare-fun temp1008_132 () (_ BitVec 64))
(declare-fun temp1008_133 () (_ BitVec 64))
(declare-fun temp1008_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1008_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1008_136 () (_ BitVec 64))
(declare-fun temp1008_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1008_138 () (_ BitVec 64))
(declare-fun temp1008_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1008_140 () (_ BitVec 64))
(declare-fun temp1008_141 () (_ BitVec 64))
(declare-fun temp1008_142 () (_ BitVec 64))
(declare-fun temp1008_143 () (_ BitVec 64))
(declare-fun temp1008_144 () (_ BitVec 64))
(declare-fun temp1008_145 () (_ BitVec 64))
(declare-fun temp1008_146 () (_ BitVec 64))
(declare-fun temp1008_147 () (_ BitVec 64))
(declare-fun temp1008_148 () (_ BitVec 64))
(declare-fun temp1008_149 () (_ BitVec 64))
(declare-fun temp1008_150 () (_ BitVec 64))
(declare-fun temp1008_151 () (_ BitVec 64))
(declare-fun temp1008_152 () (_ BitVec 64))
(declare-fun temp1008_153 () (_ BitVec 64))
(declare-fun temp1008_154 () (_ BitVec 64))
(declare-fun temp1008_155 () (_ BitVec 64))
(declare-fun temp1008_157 () (_ BitVec 64))
(declare-fun temp1008_158 () (_ BitVec 64))
(declare-fun temp1008_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1008_159 () (_ BitVec 64))
(declare-fun temp1008_160 () (_ BitVec 64))
(declare-fun temp1008_162 () (_ BitVec 64))
(declare-fun temp1008_163 () (_ BitVec 64))
(declare-fun temp1008_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1008_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1008_165 () (_ BitVec 64))
(declare-fun temp1008_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1008_167 () (_ BitVec 64))
(declare-fun temp1008_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1008_169 () (_ BitVec 64))
(declare-fun temp1008_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1008_171 () (_ BitVec 64))
(declare-fun temp1008_172 () (_ BitVec 64))
(declare-fun temp1008_173 () (_ BitVec 64))
(declare-fun temp1008_174 () (_ BitVec 64))
(declare-fun temp1008_175 () (_ BitVec 64))
(declare-fun temp1008_176 () (_ BitVec 64))
(declare-fun temp1008_177 () (_ BitVec 64))
(declare-fun temp1008_178 () (_ BitVec 64))
(declare-fun temp1008_179 () (_ BitVec 64))
(declare-fun temp1008_180 () (_ BitVec 64))
(declare-fun temp1008_181 () (_ BitVec 64))
(declare-fun temp1008_182 () (_ BitVec 64))
(declare-fun temp1008_183 () (_ BitVec 64))
(declare-fun temp1008_184 () (_ BitVec 64))
(declare-fun temp1008_185 () (_ BitVec 64))
(declare-fun temp1008_186 () (_ BitVec 64))
(declare-fun temp1008_187 () (_ BitVec 64))
(declare-fun temp1008_188 () (_ BitVec 64))
(declare-fun temp1008_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1008_190 () (_ BitVec 64))
(declare-fun temp1008_192 () (_ BitVec 64))
(declare-fun temp1008_193 () (_ BitVec 64))
(declare-fun temp1008_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1008_194 () (_ BitVec 64))
(declare-fun temp1008_195 () (_ BitVec 64))
(declare-fun temp1008_197 () (_ BitVec 64))
(declare-fun temp1008_198 () (_ BitVec 64))
(declare-fun temp1008_196 () (_ BitVec 64))
(declare-fun temp1008_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1008_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1008_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1008_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1008_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1008_204 () (_ BitVec 64))
(declare-fun temp1008_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1008_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1008_207 () (_ BitVec 64))
(declare-fun temp1008_208 () (_ BitVec 64))
(declare-fun temp1008_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1008_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1008_211 () (_ BitVec 64))
(declare-fun temp1008_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1008_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1008_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp1008_215 () (_ BitVec 64))
(assert (= temp1008_1 #x0000000000000001))
(assert (= var77203 temp1008_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1008_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1008_2)))
(assert (= temp1008_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1008_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1008_4 #x0000000000000000))
(assert (= var210941 temp1008_4))
(assert (= temp1008_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1008_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1008_6 #x0000000000000000))
(assert (= var210986 temp1008_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1008_7 #x0000000000000000))
(assert (= temp1008_8 temp1008_7))
(assert (= temp1008_9 (select ARGNAME_padding_NAMEEND_VAL temp1008_8)))
(assert (= temp1008_10 #x0000000000000001))
(assert (= temp1008_11 temp1008_10))
(assert (= temp1008_12 (select ARGNAME_padding_NAMEEND_VAL temp1008_11)))
(assert (= temp1008_13 #x0000000000000002))
(assert (= temp1008_14 temp1008_13))
(assert (= temp1008_15 (select ARGNAME_padding_NAMEEND_VAL temp1008_14)))
(assert (= temp1008_16 #x0000000000000003))
(assert (= temp1008_17 temp1008_16))
(assert (= temp1008_18 (select ARGNAME_padding_NAMEEND_VAL temp1008_17)))
(assert (= temp1008_19 #x0000000000000004))
(assert (= temp1008_20 temp1008_19))
(assert (= temp1008_21 (select ARGNAME_padding_NAMEEND_VAL temp1008_20)))
(assert (= temp1008_22 #x0000000000000005))
(assert (= temp1008_23 temp1008_22))
(assert (= temp1008_24 (select ARGNAME_padding_NAMEEND_VAL temp1008_23)))
(assert (= temp1008_25 #x0000000000000000))
(assert (= temp1008_26 #x0000000000000000))
(assert (= temp1008_27 temp1008_26))
(assert (= temp1008_28 (select ARGNAME_padding_NAMEEND_VAL temp1008_27)))
(assert (= temp1008_29 #x0000000000000000))
(assert (= temp1008_30 #x0000000000000001))
(assert (= temp1008_31 temp1008_30))
(assert (= temp1008_32 (select ARGNAME_padding_NAMEEND_VAL temp1008_31)))
(assert (= temp1008_33 #x0000000000000000))
(assert (= temp1008_34 #x0000000000000002))
(assert (= temp1008_35 temp1008_34))
(assert (= temp1008_36 (select ARGNAME_padding_NAMEEND_VAL temp1008_35)))
(assert (= temp1008_37 #x0000000000000000))
(assert (= temp1008_38 #x0000000000000003))
(assert (= temp1008_39 temp1008_38))
(assert (= temp1008_40 (select ARGNAME_padding_NAMEEND_VAL temp1008_39)))
(assert (= temp1008_41 #x0000000000000000))
(assert (= temp1008_42 #x0000000000000004))
(assert (= temp1008_43 temp1008_42))
(assert (= temp1008_44 (select ARGNAME_padding_NAMEEND_VAL temp1008_43)))
(assert (= temp1008_45 #x0000000000000000))
(assert (= temp1008_46 #x0000000000000005))
(assert (= temp1008_47 temp1008_46))
(assert (= temp1008_48 (select ARGNAME_padding_NAMEEND_VAL temp1008_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1008_28 temp1008_25)
             (bvslt temp1008_32 temp1008_29)
             (bvslt temp1008_36 temp1008_33)
             (bvslt temp1008_40 temp1008_37)
             (bvslt temp1008_44 temp1008_41)
             (bvslt temp1008_48 temp1008_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1008_49 #x0000000000000000))
(assert (= var1191714 temp1008_49))
(assert (= temp1008_50 #x0000000000000000))
(assert (= temp1008_51 temp1008_50))
(assert (= temp1008_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1008_51)))
(assert (= temp1008_53 #x0000000000000001))
(assert (= temp1008_54 temp1008_53))
(assert (= temp1008_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1008_54)))
(assert (= temp1008_56 #x0000000000000002))
(assert (= temp1008_57 temp1008_56))
(assert (= temp1008_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1008_57)))
(assert (= temp1008_59 #x0000000000000003))
(assert (= temp1008_60 temp1008_59))
(assert (= temp1008_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1008_60)))
(assert (= temp1008_62 #x0000000000000004))
(assert (= temp1008_63 temp1008_62))
(assert (= temp1008_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1008_63)))
(assert (= temp1008_65 #x0000000000000005))
(assert (= temp1008_66 temp1008_65))
(assert (= temp1008_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1008_66)))
(assert (= temp1008_68 #x0000000000000000))
(assert (= temp1008_69 #x0000000000000000))
(assert (= temp1008_70 temp1008_69))
(assert (= temp1008_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1008_70)))
(assert (= temp1008_72 #x0000000000000000))
(assert (= temp1008_73 #x0000000000000001))
(assert (= temp1008_74 temp1008_73))
(assert (= temp1008_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1008_74)))
(assert (= temp1008_76 #x0000000000000000))
(assert (= temp1008_77 #x0000000000000002))
(assert (= temp1008_78 temp1008_77))
(assert (= temp1008_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1008_78)))
(assert (= temp1008_80 #x0000000000000000))
(assert (= temp1008_81 #x0000000000000003))
(assert (= temp1008_82 temp1008_81))
(assert (= temp1008_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1008_82)))
(assert (= temp1008_84 #x0000000000000000))
(assert (= temp1008_85 #x0000000000000004))
(assert (= temp1008_86 temp1008_85))
(assert (= temp1008_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1008_86)))
(assert (= temp1008_88 #x0000000000000000))
(assert (= temp1008_89 #x0000000000000005))
(assert (= temp1008_90 temp1008_89))
(assert (= temp1008_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1008_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1008_71 temp1008_68)
             (bvslt temp1008_75 temp1008_72)
             (bvslt temp1008_79 temp1008_76)
             (bvslt temp1008_83 temp1008_80)
             (bvslt temp1008_87 temp1008_84)
             (bvslt temp1008_91 temp1008_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1008_92 #x0000000000000000))
(assert (= var1191725 temp1008_92))
(assert (= temp1008_93 #x0000000000000000))
(assert (= temp1008_94 temp1008_93))
(assert (= temp1008_95 (select ARGNAME_stride_NAMEEND_VAL temp1008_94)))
(assert (= temp1008_96 #x0000000000000001))
(assert (= temp1008_97 temp1008_96))
(assert (= temp1008_98 (select ARGNAME_stride_NAMEEND_VAL temp1008_97)))
(assert (= temp1008_99 #x0000000000000002))
(assert (= temp1008_100 temp1008_99))
(assert (= temp1008_101 (select ARGNAME_stride_NAMEEND_VAL temp1008_100)))
(assert (= temp1008_102 #x0000000000000003))
(assert (= temp1008_103 temp1008_102))
(assert (= temp1008_104 (select ARGNAME_stride_NAMEEND_VAL temp1008_103)))
(assert (= temp1008_105 #x0000000000000004))
(assert (= temp1008_106 temp1008_105))
(assert (= temp1008_107 (select ARGNAME_stride_NAMEEND_VAL temp1008_106)))
(assert (= temp1008_108 #x0000000000000005))
(assert (= temp1008_109 temp1008_108))
(assert (= temp1008_110 (select ARGNAME_stride_NAMEEND_VAL temp1008_109)))
(assert (= temp1008_111 #x0000000000000000))
(assert (= temp1008_112 #x0000000000000000))
(assert (= temp1008_113 temp1008_112))
(assert (= temp1008_114 (select ARGNAME_stride_NAMEEND_VAL temp1008_113)))
(assert (= temp1008_115 #x0000000000000000))
(assert (= temp1008_116 #x0000000000000001))
(assert (= temp1008_117 temp1008_116))
(assert (= temp1008_118 (select ARGNAME_stride_NAMEEND_VAL temp1008_117)))
(assert (= temp1008_119 #x0000000000000000))
(assert (= temp1008_120 #x0000000000000002))
(assert (= temp1008_121 temp1008_120))
(assert (= temp1008_122 (select ARGNAME_stride_NAMEEND_VAL temp1008_121)))
(assert (= temp1008_123 #x0000000000000000))
(assert (= temp1008_124 #x0000000000000003))
(assert (= temp1008_125 temp1008_124))
(assert (= temp1008_126 (select ARGNAME_stride_NAMEEND_VAL temp1008_125)))
(assert (= temp1008_127 #x0000000000000000))
(assert (= temp1008_128 #x0000000000000004))
(assert (= temp1008_129 temp1008_128))
(assert (= temp1008_130 (select ARGNAME_stride_NAMEEND_VAL temp1008_129)))
(assert (= temp1008_131 #x0000000000000000))
(assert (= temp1008_132 #x0000000000000005))
(assert (= temp1008_133 temp1008_132))
(assert (= temp1008_134 (select ARGNAME_stride_NAMEEND_VAL temp1008_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1008_114 temp1008_111)
             (bvsle temp1008_118 temp1008_115)
             (bvsle temp1008_122 temp1008_119)
             (bvsle temp1008_126 temp1008_123)
             (bvsle temp1008_130 temp1008_127)
             (bvsle temp1008_134 temp1008_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1008_135 #x0000000000000000))
(assert (= var1191735 temp1008_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1008_136 #x0000000000000001))
(assert (= var1191747 temp1008_136))
(assert (= temp1008_137 #x0000000000000000))
(assert (= var1179826 temp1008_137))
(assert (= temp1008_138 #x0000000000000000))
(assert (= temp1008_139 temp1008_138))
(assert (= temp1008_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1008_139)))
(assert (= temp1008_141 #x0000000000000001))
(assert (= temp1008_142 temp1008_141))
(assert (= temp1008_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1008_142)))
(assert (= temp1008_144 #x0000000000000002))
(assert (= temp1008_145 temp1008_144))
(assert (= temp1008_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1008_145)))
(assert (= temp1008_147 #x0000000000000003))
(assert (= temp1008_148 temp1008_147))
(assert (= temp1008_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1008_148)))
(assert (= temp1008_150 #x0000000000000004))
(assert (= temp1008_151 temp1008_150))
(assert (= temp1008_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1008_151)))
(assert (= temp1008_153 #x0000000000000005))
(assert (= temp1008_154 temp1008_153))
(assert (= temp1008_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1008_154)))
(assert (= temp1008_157 var1179826))
(assert (= temp1008_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1008_157)))
(assert (= temp1008_156 temp1008_158))
(assert (= var1191780
   (ite (bvslt temp1008_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1008_159 #x0000000000000000))
(assert (= var1191780 temp1008_159))
(assert (= temp1008_160 #x0000000000000000))
(assert (= var1179826 temp1008_160))
(assert (= temp1008_162 var1179826))
(assert (= temp1008_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1008_162)))
(assert (= temp1008_161 temp1008_163))
(assert (= var1191802 (bvsmod temp1008_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1008_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1008_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1008_165 #x0000000000000001))
(assert (= var1191803 temp1008_165))
(assert (= temp1008_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1008_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1008_167 #x0000000000000001))
(assert (= var1191823 temp1008_167))
(assert (= temp1008_168 #x0000000000000001))
(assert (= var1180714 temp1008_168))
(assert (= temp1008_169 #x0000000000000000))
(assert (= temp1008_170 temp1008_169))
(assert (= temp1008_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1008_170)))
(assert (= temp1008_172 #x0000000000000001))
(assert (= temp1008_173 temp1008_172))
(assert (= temp1008_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1008_173)))
(assert (= temp1008_175 #x0000000000000002))
(assert (= temp1008_176 temp1008_175))
(assert (= temp1008_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1008_176)))
(assert (= temp1008_178 #x0000000000000003))
(assert (= temp1008_179 temp1008_178))
(assert (= temp1008_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1008_179)))
(assert (= temp1008_181 #x0000000000000004))
(assert (= temp1008_182 temp1008_181))
(assert (= temp1008_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1008_182)))
(assert (= temp1008_184 #x0000000000000005))
(assert (= temp1008_185 temp1008_184))
(assert (= temp1008_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1008_185)))
(assert (= temp1008_187 #x0000000000000000))
(assert (= temp1008_188
   (ite (bvslt var1180714 temp1008_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1008_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1008_188)))
(assert (= var1191831 temp1008_189))
(assert (bvslt (ite (bvslt var1180714 temp1008_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1008_190 #x0000000000000001))
(assert (= var1180714 temp1008_190))
(assert (= temp1008_192 var1180714))
(assert (= temp1008_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1008_192)))
(assert (= temp1008_191 temp1008_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1008_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1008_194 #x0000000000000001))
(assert (= var1191836 temp1008_194))
(assert (= temp1008_195 #x0000000000000000))
(assert (= var1179826 temp1008_195))
(assert (= temp1008_197 var1179826))
(assert (= temp1008_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1008_197)))
(assert (= temp1008_196 temp1008_198))
(assert (= temp1008_199 #x0000000000000002))
(assert (= var1586025 temp1008_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1008_200 #x0000000000000001))
(assert (= var1191993 temp1008_200))
(assert (= temp1008_201 #x0000000000000001))
(assert (= var2700303 temp1008_201))
(assert (= temp1008_202 #x0000000000000001))
(assert (= var2962447 temp1008_202))
(assert (= temp1008_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1008_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1008_204 #x0000000000000001))
(assert (= var211058 temp1008_204))
(assert (= temp1008_205 #x0000000000000001))
(assert (= var211188 temp1008_205))
(assert (= var3879401 var211188))
(assert (= temp1008_206 #x0000000000000000))
(assert (= var3866802 temp1008_206))
(assert (= temp1008_207 #x0000000000000000))
(assert (= temp1008_208
   (ite (bvslt var3866802 temp1008_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1008_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1008_208)))
(assert (= var3879420 temp1008_209))
(assert (bvslt (ite (bvslt var3866802 temp1008_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1008_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1008_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1008_211 #x0000000000000001))
(assert (= var3879421 temp1008_211))
(assert (= temp1008_212 #x0000000000000000))
(assert (= var4079423 temp1008_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1008_213 #x0000000000000002))
(assert (= var4208259 temp1008_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1008_214 #x0000000000000000))
(assert (= var4273820 temp1008_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp1008_215 #x0000000000000001))
(assert (= var211058 temp1008_215))
(model-add temp1008_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1008_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1008_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1008_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




