(declare-fun temp1037_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1037_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1037_3 () (_ BitVec 64))
(declare-fun temp1037_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1037_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1037_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1037_7 () (_ BitVec 64))
(declare-fun temp1037_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1037_9 () (_ BitVec 64))
(declare-fun temp1037_10 () (_ BitVec 64))
(declare-fun temp1037_11 () (_ BitVec 64))
(declare-fun temp1037_12 () (_ BitVec 64))
(declare-fun temp1037_13 () (_ BitVec 64))
(declare-fun temp1037_14 () (_ BitVec 64))
(declare-fun temp1037_15 () (_ BitVec 64))
(declare-fun temp1037_16 () (_ BitVec 64))
(declare-fun temp1037_17 () (_ BitVec 64))
(declare-fun temp1037_18 () (_ BitVec 64))
(declare-fun temp1037_19 () (_ BitVec 64))
(declare-fun temp1037_20 () (_ BitVec 64))
(declare-fun temp1037_21 () (_ BitVec 64))
(declare-fun temp1037_22 () (_ BitVec 64))
(declare-fun temp1037_23 () (_ BitVec 64))
(declare-fun temp1037_24 () (_ BitVec 64))
(declare-fun temp1037_25 () (_ BitVec 64))
(declare-fun temp1037_26 () (_ BitVec 64))
(declare-fun temp1037_27 () (_ BitVec 64))
(declare-fun temp1037_28 () (_ BitVec 64))
(declare-fun temp1037_29 () (_ BitVec 64))
(declare-fun temp1037_30 () (_ BitVec 64))
(declare-fun temp1037_31 () (_ BitVec 64))
(declare-fun temp1037_32 () (_ BitVec 64))
(declare-fun temp1037_33 () (_ BitVec 64))
(declare-fun temp1037_34 () (_ BitVec 64))
(declare-fun temp1037_35 () (_ BitVec 64))
(declare-fun temp1037_36 () (_ BitVec 64))
(declare-fun temp1037_37 () (_ BitVec 64))
(declare-fun temp1037_38 () (_ BitVec 64))
(declare-fun temp1037_39 () (_ BitVec 64))
(declare-fun temp1037_40 () (_ BitVec 64))
(declare-fun temp1037_41 () (_ BitVec 64))
(declare-fun temp1037_42 () (_ BitVec 64))
(declare-fun temp1037_43 () (_ BitVec 64))
(declare-fun temp1037_44 () (_ BitVec 64))
(declare-fun temp1037_45 () (_ BitVec 64))
(declare-fun temp1037_46 () (_ BitVec 64))
(declare-fun temp1037_47 () (_ BitVec 64))
(declare-fun temp1037_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1037_49 () (_ BitVec 64))
(declare-fun temp1037_50 () (_ BitVec 64))
(declare-fun temp1037_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1037_52 () (_ BitVec 64))
(declare-fun temp1037_53 () (_ BitVec 64))
(declare-fun temp1037_54 () (_ BitVec 64))
(declare-fun temp1037_55 () (_ BitVec 64))
(declare-fun temp1037_56 () (_ BitVec 64))
(declare-fun temp1037_57 () (_ BitVec 64))
(declare-fun temp1037_58 () (_ BitVec 64))
(declare-fun temp1037_59 () (_ BitVec 64))
(declare-fun temp1037_60 () (_ BitVec 64))
(declare-fun temp1037_61 () (_ BitVec 64))
(declare-fun temp1037_62 () (_ BitVec 64))
(declare-fun temp1037_63 () (_ BitVec 64))
(declare-fun temp1037_64 () (_ BitVec 64))
(declare-fun temp1037_65 () (_ BitVec 64))
(declare-fun temp1037_66 () (_ BitVec 64))
(declare-fun temp1037_67 () (_ BitVec 64))
(declare-fun temp1037_68 () (_ BitVec 64))
(declare-fun temp1037_69 () (_ BitVec 64))
(declare-fun temp1037_70 () (_ BitVec 64))
(declare-fun temp1037_71 () (_ BitVec 64))
(declare-fun temp1037_72 () (_ BitVec 64))
(declare-fun temp1037_73 () (_ BitVec 64))
(declare-fun temp1037_74 () (_ BitVec 64))
(declare-fun temp1037_75 () (_ BitVec 64))
(declare-fun temp1037_76 () (_ BitVec 64))
(declare-fun temp1037_77 () (_ BitVec 64))
(declare-fun temp1037_78 () (_ BitVec 64))
(declare-fun temp1037_79 () (_ BitVec 64))
(declare-fun temp1037_80 () (_ BitVec 64))
(declare-fun temp1037_81 () (_ BitVec 64))
(declare-fun temp1037_82 () (_ BitVec 64))
(declare-fun temp1037_83 () (_ BitVec 64))
(declare-fun temp1037_84 () (_ BitVec 64))
(declare-fun temp1037_85 () (_ BitVec 64))
(declare-fun temp1037_86 () (_ BitVec 64))
(declare-fun temp1037_87 () (_ BitVec 64))
(declare-fun temp1037_88 () (_ BitVec 64))
(declare-fun temp1037_89 () (_ BitVec 64))
(declare-fun temp1037_90 () (_ BitVec 64))
(declare-fun temp1037_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1037_92 () (_ BitVec 64))
(declare-fun temp1037_93 () (_ BitVec 64))
(declare-fun temp1037_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1037_95 () (_ BitVec 64))
(declare-fun temp1037_96 () (_ BitVec 64))
(declare-fun temp1037_97 () (_ BitVec 64))
(declare-fun temp1037_98 () (_ BitVec 64))
(declare-fun temp1037_99 () (_ BitVec 64))
(declare-fun temp1037_100 () (_ BitVec 64))
(declare-fun temp1037_101 () (_ BitVec 64))
(declare-fun temp1037_102 () (_ BitVec 64))
(declare-fun temp1037_103 () (_ BitVec 64))
(declare-fun temp1037_104 () (_ BitVec 64))
(declare-fun temp1037_105 () (_ BitVec 64))
(declare-fun temp1037_106 () (_ BitVec 64))
(declare-fun temp1037_107 () (_ BitVec 64))
(declare-fun temp1037_108 () (_ BitVec 64))
(declare-fun temp1037_109 () (_ BitVec 64))
(declare-fun temp1037_110 () (_ BitVec 64))
(declare-fun temp1037_111 () (_ BitVec 64))
(declare-fun temp1037_112 () (_ BitVec 64))
(declare-fun temp1037_113 () (_ BitVec 64))
(declare-fun temp1037_114 () (_ BitVec 64))
(declare-fun temp1037_115 () (_ BitVec 64))
(declare-fun temp1037_116 () (_ BitVec 64))
(declare-fun temp1037_117 () (_ BitVec 64))
(declare-fun temp1037_118 () (_ BitVec 64))
(declare-fun temp1037_119 () (_ BitVec 64))
(declare-fun temp1037_120 () (_ BitVec 64))
(declare-fun temp1037_121 () (_ BitVec 64))
(declare-fun temp1037_122 () (_ BitVec 64))
(declare-fun temp1037_123 () (_ BitVec 64))
(declare-fun temp1037_124 () (_ BitVec 64))
(declare-fun temp1037_125 () (_ BitVec 64))
(declare-fun temp1037_126 () (_ BitVec 64))
(declare-fun temp1037_127 () (_ BitVec 64))
(declare-fun temp1037_128 () (_ BitVec 64))
(declare-fun temp1037_129 () (_ BitVec 64))
(declare-fun temp1037_130 () (_ BitVec 64))
(declare-fun temp1037_131 () (_ BitVec 64))
(declare-fun temp1037_132 () (_ BitVec 64))
(declare-fun temp1037_133 () (_ BitVec 64))
(declare-fun temp1037_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1037_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1037_136 () (_ BitVec 64))
(declare-fun temp1037_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1037_138 () (_ BitVec 64))
(declare-fun temp1037_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1037_140 () (_ BitVec 64))
(declare-fun temp1037_141 () (_ BitVec 64))
(declare-fun temp1037_142 () (_ BitVec 64))
(declare-fun temp1037_143 () (_ BitVec 64))
(declare-fun temp1037_144 () (_ BitVec 64))
(declare-fun temp1037_145 () (_ BitVec 64))
(declare-fun temp1037_146 () (_ BitVec 64))
(declare-fun temp1037_147 () (_ BitVec 64))
(declare-fun temp1037_148 () (_ BitVec 64))
(declare-fun temp1037_149 () (_ BitVec 64))
(declare-fun temp1037_150 () (_ BitVec 64))
(declare-fun temp1037_151 () (_ BitVec 64))
(declare-fun temp1037_152 () (_ BitVec 64))
(declare-fun temp1037_153 () (_ BitVec 64))
(declare-fun temp1037_154 () (_ BitVec 64))
(declare-fun temp1037_155 () (_ BitVec 64))
(declare-fun temp1037_157 () (_ BitVec 64))
(declare-fun temp1037_158 () (_ BitVec 64))
(declare-fun temp1037_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1037_159 () (_ BitVec 64))
(declare-fun temp1037_160 () (_ BitVec 64))
(declare-fun temp1037_162 () (_ BitVec 64))
(declare-fun temp1037_163 () (_ BitVec 64))
(declare-fun temp1037_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1037_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1037_165 () (_ BitVec 64))
(declare-fun temp1037_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1037_167 () (_ BitVec 64))
(declare-fun temp1037_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1037_169 () (_ BitVec 64))
(declare-fun temp1037_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1037_171 () (_ BitVec 64))
(declare-fun temp1037_172 () (_ BitVec 64))
(declare-fun temp1037_173 () (_ BitVec 64))
(declare-fun temp1037_174 () (_ BitVec 64))
(declare-fun temp1037_175 () (_ BitVec 64))
(declare-fun temp1037_176 () (_ BitVec 64))
(declare-fun temp1037_177 () (_ BitVec 64))
(declare-fun temp1037_178 () (_ BitVec 64))
(declare-fun temp1037_179 () (_ BitVec 64))
(declare-fun temp1037_180 () (_ BitVec 64))
(declare-fun temp1037_181 () (_ BitVec 64))
(declare-fun temp1037_182 () (_ BitVec 64))
(declare-fun temp1037_183 () (_ BitVec 64))
(declare-fun temp1037_184 () (_ BitVec 64))
(declare-fun temp1037_185 () (_ BitVec 64))
(declare-fun temp1037_186 () (_ BitVec 64))
(declare-fun temp1037_187 () (_ BitVec 64))
(declare-fun temp1037_188 () (_ BitVec 64))
(declare-fun temp1037_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1037_190 () (_ BitVec 64))
(declare-fun temp1037_192 () (_ BitVec 64))
(declare-fun temp1037_193 () (_ BitVec 64))
(declare-fun temp1037_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1037_194 () (_ BitVec 64))
(declare-fun temp1037_195 () (_ BitVec 64))
(declare-fun temp1037_197 () (_ BitVec 64))
(declare-fun temp1037_198 () (_ BitVec 64))
(declare-fun temp1037_196 () (_ BitVec 64))
(declare-fun temp1037_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1037_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1037_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1037_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1037_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1037_204 () (_ BitVec 64))
(declare-fun temp1037_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1037_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1037_207 () (_ BitVec 64))
(declare-fun temp1037_208 () (_ BitVec 64))
(declare-fun temp1037_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1037_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1037_211 () (_ BitVec 64))
(declare-fun temp1037_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1037_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1037_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp1037_215 () (_ BitVec 64))
(assert (= temp1037_1 #x0000000000000001))
(assert (= var77203 temp1037_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1037_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1037_2)))
(assert (= temp1037_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1037_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1037_4 #x0000000000000000))
(assert (= var210941 temp1037_4))
(assert (= temp1037_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1037_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1037_6 #x0000000000000000))
(assert (= var210986 temp1037_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1037_7 #x0000000000000000))
(assert (= temp1037_8 temp1037_7))
(assert (= temp1037_9 (select ARGNAME_padding_NAMEEND_VAL temp1037_8)))
(assert (= temp1037_10 #x0000000000000001))
(assert (= temp1037_11 temp1037_10))
(assert (= temp1037_12 (select ARGNAME_padding_NAMEEND_VAL temp1037_11)))
(assert (= temp1037_13 #x0000000000000002))
(assert (= temp1037_14 temp1037_13))
(assert (= temp1037_15 (select ARGNAME_padding_NAMEEND_VAL temp1037_14)))
(assert (= temp1037_16 #x0000000000000003))
(assert (= temp1037_17 temp1037_16))
(assert (= temp1037_18 (select ARGNAME_padding_NAMEEND_VAL temp1037_17)))
(assert (= temp1037_19 #x0000000000000004))
(assert (= temp1037_20 temp1037_19))
(assert (= temp1037_21 (select ARGNAME_padding_NAMEEND_VAL temp1037_20)))
(assert (= temp1037_22 #x0000000000000005))
(assert (= temp1037_23 temp1037_22))
(assert (= temp1037_24 (select ARGNAME_padding_NAMEEND_VAL temp1037_23)))
(assert (= temp1037_25 #x0000000000000000))
(assert (= temp1037_26 #x0000000000000000))
(assert (= temp1037_27 temp1037_26))
(assert (= temp1037_28 (select ARGNAME_padding_NAMEEND_VAL temp1037_27)))
(assert (= temp1037_29 #x0000000000000000))
(assert (= temp1037_30 #x0000000000000001))
(assert (= temp1037_31 temp1037_30))
(assert (= temp1037_32 (select ARGNAME_padding_NAMEEND_VAL temp1037_31)))
(assert (= temp1037_33 #x0000000000000000))
(assert (= temp1037_34 #x0000000000000002))
(assert (= temp1037_35 temp1037_34))
(assert (= temp1037_36 (select ARGNAME_padding_NAMEEND_VAL temp1037_35)))
(assert (= temp1037_37 #x0000000000000000))
(assert (= temp1037_38 #x0000000000000003))
(assert (= temp1037_39 temp1037_38))
(assert (= temp1037_40 (select ARGNAME_padding_NAMEEND_VAL temp1037_39)))
(assert (= temp1037_41 #x0000000000000000))
(assert (= temp1037_42 #x0000000000000004))
(assert (= temp1037_43 temp1037_42))
(assert (= temp1037_44 (select ARGNAME_padding_NAMEEND_VAL temp1037_43)))
(assert (= temp1037_45 #x0000000000000000))
(assert (= temp1037_46 #x0000000000000005))
(assert (= temp1037_47 temp1037_46))
(assert (= temp1037_48 (select ARGNAME_padding_NAMEEND_VAL temp1037_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1037_28 temp1037_25)
             (bvslt temp1037_32 temp1037_29)
             (bvslt temp1037_36 temp1037_33)
             (bvslt temp1037_40 temp1037_37)
             (bvslt temp1037_44 temp1037_41)
             (bvslt temp1037_48 temp1037_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1037_49 #x0000000000000000))
(assert (= var1191714 temp1037_49))
(assert (= temp1037_50 #x0000000000000000))
(assert (= temp1037_51 temp1037_50))
(assert (= temp1037_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1037_51)))
(assert (= temp1037_53 #x0000000000000001))
(assert (= temp1037_54 temp1037_53))
(assert (= temp1037_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1037_54)))
(assert (= temp1037_56 #x0000000000000002))
(assert (= temp1037_57 temp1037_56))
(assert (= temp1037_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1037_57)))
(assert (= temp1037_59 #x0000000000000003))
(assert (= temp1037_60 temp1037_59))
(assert (= temp1037_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1037_60)))
(assert (= temp1037_62 #x0000000000000004))
(assert (= temp1037_63 temp1037_62))
(assert (= temp1037_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1037_63)))
(assert (= temp1037_65 #x0000000000000005))
(assert (= temp1037_66 temp1037_65))
(assert (= temp1037_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1037_66)))
(assert (= temp1037_68 #x0000000000000000))
(assert (= temp1037_69 #x0000000000000000))
(assert (= temp1037_70 temp1037_69))
(assert (= temp1037_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1037_70)))
(assert (= temp1037_72 #x0000000000000000))
(assert (= temp1037_73 #x0000000000000001))
(assert (= temp1037_74 temp1037_73))
(assert (= temp1037_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1037_74)))
(assert (= temp1037_76 #x0000000000000000))
(assert (= temp1037_77 #x0000000000000002))
(assert (= temp1037_78 temp1037_77))
(assert (= temp1037_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1037_78)))
(assert (= temp1037_80 #x0000000000000000))
(assert (= temp1037_81 #x0000000000000003))
(assert (= temp1037_82 temp1037_81))
(assert (= temp1037_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1037_82)))
(assert (= temp1037_84 #x0000000000000000))
(assert (= temp1037_85 #x0000000000000004))
(assert (= temp1037_86 temp1037_85))
(assert (= temp1037_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1037_86)))
(assert (= temp1037_88 #x0000000000000000))
(assert (= temp1037_89 #x0000000000000005))
(assert (= temp1037_90 temp1037_89))
(assert (= temp1037_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1037_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1037_71 temp1037_68)
             (bvslt temp1037_75 temp1037_72)
             (bvslt temp1037_79 temp1037_76)
             (bvslt temp1037_83 temp1037_80)
             (bvslt temp1037_87 temp1037_84)
             (bvslt temp1037_91 temp1037_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1037_92 #x0000000000000000))
(assert (= var1191725 temp1037_92))
(assert (= temp1037_93 #x0000000000000000))
(assert (= temp1037_94 temp1037_93))
(assert (= temp1037_95 (select ARGNAME_stride_NAMEEND_VAL temp1037_94)))
(assert (= temp1037_96 #x0000000000000001))
(assert (= temp1037_97 temp1037_96))
(assert (= temp1037_98 (select ARGNAME_stride_NAMEEND_VAL temp1037_97)))
(assert (= temp1037_99 #x0000000000000002))
(assert (= temp1037_100 temp1037_99))
(assert (= temp1037_101 (select ARGNAME_stride_NAMEEND_VAL temp1037_100)))
(assert (= temp1037_102 #x0000000000000003))
(assert (= temp1037_103 temp1037_102))
(assert (= temp1037_104 (select ARGNAME_stride_NAMEEND_VAL temp1037_103)))
(assert (= temp1037_105 #x0000000000000004))
(assert (= temp1037_106 temp1037_105))
(assert (= temp1037_107 (select ARGNAME_stride_NAMEEND_VAL temp1037_106)))
(assert (= temp1037_108 #x0000000000000005))
(assert (= temp1037_109 temp1037_108))
(assert (= temp1037_110 (select ARGNAME_stride_NAMEEND_VAL temp1037_109)))
(assert (= temp1037_111 #x0000000000000000))
(assert (= temp1037_112 #x0000000000000000))
(assert (= temp1037_113 temp1037_112))
(assert (= temp1037_114 (select ARGNAME_stride_NAMEEND_VAL temp1037_113)))
(assert (= temp1037_115 #x0000000000000000))
(assert (= temp1037_116 #x0000000000000001))
(assert (= temp1037_117 temp1037_116))
(assert (= temp1037_118 (select ARGNAME_stride_NAMEEND_VAL temp1037_117)))
(assert (= temp1037_119 #x0000000000000000))
(assert (= temp1037_120 #x0000000000000002))
(assert (= temp1037_121 temp1037_120))
(assert (= temp1037_122 (select ARGNAME_stride_NAMEEND_VAL temp1037_121)))
(assert (= temp1037_123 #x0000000000000000))
(assert (= temp1037_124 #x0000000000000003))
(assert (= temp1037_125 temp1037_124))
(assert (= temp1037_126 (select ARGNAME_stride_NAMEEND_VAL temp1037_125)))
(assert (= temp1037_127 #x0000000000000000))
(assert (= temp1037_128 #x0000000000000004))
(assert (= temp1037_129 temp1037_128))
(assert (= temp1037_130 (select ARGNAME_stride_NAMEEND_VAL temp1037_129)))
(assert (= temp1037_131 #x0000000000000000))
(assert (= temp1037_132 #x0000000000000005))
(assert (= temp1037_133 temp1037_132))
(assert (= temp1037_134 (select ARGNAME_stride_NAMEEND_VAL temp1037_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1037_114 temp1037_111)
             (bvsle temp1037_118 temp1037_115)
             (bvsle temp1037_122 temp1037_119)
             (bvsle temp1037_126 temp1037_123)
             (bvsle temp1037_130 temp1037_127)
             (bvsle temp1037_134 temp1037_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1037_135 #x0000000000000000))
(assert (= var1191735 temp1037_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1037_136 #x0000000000000001))
(assert (= var1191747 temp1037_136))
(assert (= temp1037_137 #x0000000000000000))
(assert (= var1179826 temp1037_137))
(assert (= temp1037_138 #x0000000000000000))
(assert (= temp1037_139 temp1037_138))
(assert (= temp1037_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1037_139)))
(assert (= temp1037_141 #x0000000000000001))
(assert (= temp1037_142 temp1037_141))
(assert (= temp1037_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1037_142)))
(assert (= temp1037_144 #x0000000000000002))
(assert (= temp1037_145 temp1037_144))
(assert (= temp1037_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1037_145)))
(assert (= temp1037_147 #x0000000000000003))
(assert (= temp1037_148 temp1037_147))
(assert (= temp1037_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1037_148)))
(assert (= temp1037_150 #x0000000000000004))
(assert (= temp1037_151 temp1037_150))
(assert (= temp1037_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1037_151)))
(assert (= temp1037_153 #x0000000000000005))
(assert (= temp1037_154 temp1037_153))
(assert (= temp1037_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1037_154)))
(assert (= temp1037_157 var1179826))
(assert (= temp1037_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1037_157)))
(assert (= temp1037_156 temp1037_158))
(assert (= var1191780
   (ite (bvslt temp1037_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1037_159 #x0000000000000000))
(assert (= var1191780 temp1037_159))
(assert (= temp1037_160 #x0000000000000000))
(assert (= var1179826 temp1037_160))
(assert (= temp1037_162 var1179826))
(assert (= temp1037_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1037_162)))
(assert (= temp1037_161 temp1037_163))
(assert (= var1191802 (bvsmod temp1037_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1037_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1037_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1037_165 #x0000000000000001))
(assert (= var1191803 temp1037_165))
(assert (= temp1037_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1037_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1037_167 #x0000000000000001))
(assert (= var1191823 temp1037_167))
(assert (= temp1037_168 #x0000000000000001))
(assert (= var1180714 temp1037_168))
(assert (= temp1037_169 #x0000000000000000))
(assert (= temp1037_170 temp1037_169))
(assert (= temp1037_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1037_170)))
(assert (= temp1037_172 #x0000000000000001))
(assert (= temp1037_173 temp1037_172))
(assert (= temp1037_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1037_173)))
(assert (= temp1037_175 #x0000000000000002))
(assert (= temp1037_176 temp1037_175))
(assert (= temp1037_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1037_176)))
(assert (= temp1037_178 #x0000000000000003))
(assert (= temp1037_179 temp1037_178))
(assert (= temp1037_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1037_179)))
(assert (= temp1037_181 #x0000000000000004))
(assert (= temp1037_182 temp1037_181))
(assert (= temp1037_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1037_182)))
(assert (= temp1037_184 #x0000000000000005))
(assert (= temp1037_185 temp1037_184))
(assert (= temp1037_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1037_185)))
(assert (= temp1037_187 #x0000000000000000))
(assert (= temp1037_188
   (ite (bvslt var1180714 temp1037_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1037_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1037_188)))
(assert (= var1191831 temp1037_189))
(assert (bvslt (ite (bvslt var1180714 temp1037_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1037_190 #x0000000000000001))
(assert (= var1180714 temp1037_190))
(assert (= temp1037_192 var1180714))
(assert (= temp1037_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1037_192)))
(assert (= temp1037_191 temp1037_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1037_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1037_194 #x0000000000000001))
(assert (= var1191836 temp1037_194))
(assert (= temp1037_195 #x0000000000000000))
(assert (= var1179826 temp1037_195))
(assert (= temp1037_197 var1179826))
(assert (= temp1037_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1037_197)))
(assert (= temp1037_196 temp1037_198))
(assert (= temp1037_199 #x0000000000000002))
(assert (= var1586025 temp1037_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1037_200 #x0000000000000001))
(assert (= var1191993 temp1037_200))
(assert (= temp1037_201 #x0000000000000001))
(assert (= var2700303 temp1037_201))
(assert (= temp1037_202 #x0000000000000001))
(assert (= var2962447 temp1037_202))
(assert (= temp1037_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1037_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1037_204 #x0000000000000001))
(assert (= var211058 temp1037_204))
(assert (= temp1037_205 #x0000000000000001))
(assert (= var211188 temp1037_205))
(assert (= var3879401 var211188))
(assert (= temp1037_206 #x0000000000000000))
(assert (= var3866802 temp1037_206))
(assert (= temp1037_207 #x0000000000000000))
(assert (= temp1037_208
   (ite (bvslt var3866802 temp1037_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1037_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1037_208)))
(assert (= var3879420 temp1037_209))
(assert (bvslt (ite (bvslt var3866802 temp1037_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1037_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1037_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1037_211 #x0000000000000001))
(assert (= var3879421 temp1037_211))
(assert (= temp1037_212 #x0000000000000000))
(assert (= var4079423 temp1037_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1037_213 #x0000000000000002))
(assert (= var4208259 temp1037_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1037_214 #x0000000000000000))
(assert (= var4273820 temp1037_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp1037_215 #x0000000000000001))
(assert (= var211058 temp1037_215))
(model-add temp1037_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1037_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1037_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1037_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






