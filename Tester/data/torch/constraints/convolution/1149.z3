(declare-fun temp10262_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10262_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10262_3 () (_ BitVec 64))
(declare-fun temp10262_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10262_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10262_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10262_7 () (_ BitVec 64))
(declare-fun temp10262_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10262_9 () (_ BitVec 64))
(declare-fun temp10262_10 () (_ BitVec 64))
(declare-fun temp10262_11 () (_ BitVec 64))
(declare-fun temp10262_12 () (_ BitVec 64))
(declare-fun temp10262_13 () (_ BitVec 64))
(declare-fun temp10262_14 () (_ BitVec 64))
(declare-fun temp10262_15 () (_ BitVec 64))
(declare-fun temp10262_16 () (_ BitVec 64))
(declare-fun temp10262_17 () (_ BitVec 64))
(declare-fun temp10262_18 () (_ BitVec 64))
(declare-fun temp10262_19 () (_ BitVec 64))
(declare-fun temp10262_20 () (_ BitVec 64))
(declare-fun temp10262_21 () (_ BitVec 64))
(declare-fun temp10262_22 () (_ BitVec 64))
(declare-fun temp10262_23 () (_ BitVec 64))
(declare-fun temp10262_24 () (_ BitVec 64))
(declare-fun temp10262_25 () (_ BitVec 64))
(declare-fun temp10262_26 () (_ BitVec 64))
(declare-fun temp10262_27 () (_ BitVec 64))
(declare-fun temp10262_28 () (_ BitVec 64))
(declare-fun temp10262_29 () (_ BitVec 64))
(declare-fun temp10262_30 () (_ BitVec 64))
(declare-fun temp10262_31 () (_ BitVec 64))
(declare-fun temp10262_32 () (_ BitVec 64))
(declare-fun temp10262_33 () (_ BitVec 64))
(declare-fun temp10262_34 () (_ BitVec 64))
(declare-fun temp10262_35 () (_ BitVec 64))
(declare-fun temp10262_36 () (_ BitVec 64))
(declare-fun temp10262_37 () (_ BitVec 64))
(declare-fun temp10262_38 () (_ BitVec 64))
(declare-fun temp10262_39 () (_ BitVec 64))
(declare-fun temp10262_40 () (_ BitVec 64))
(declare-fun temp10262_41 () (_ BitVec 64))
(declare-fun temp10262_42 () (_ BitVec 64))
(declare-fun temp10262_43 () (_ BitVec 64))
(declare-fun temp10262_44 () (_ BitVec 64))
(declare-fun temp10262_45 () (_ BitVec 64))
(declare-fun temp10262_46 () (_ BitVec 64))
(declare-fun temp10262_47 () (_ BitVec 64))
(declare-fun temp10262_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10262_49 () (_ BitVec 64))
(declare-fun temp10262_50 () (_ BitVec 64))
(declare-fun temp10262_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10262_52 () (_ BitVec 64))
(declare-fun temp10262_53 () (_ BitVec 64))
(declare-fun temp10262_54 () (_ BitVec 64))
(declare-fun temp10262_55 () (_ BitVec 64))
(declare-fun temp10262_56 () (_ BitVec 64))
(declare-fun temp10262_57 () (_ BitVec 64))
(declare-fun temp10262_58 () (_ BitVec 64))
(declare-fun temp10262_59 () (_ BitVec 64))
(declare-fun temp10262_60 () (_ BitVec 64))
(declare-fun temp10262_61 () (_ BitVec 64))
(declare-fun temp10262_62 () (_ BitVec 64))
(declare-fun temp10262_63 () (_ BitVec 64))
(declare-fun temp10262_64 () (_ BitVec 64))
(declare-fun temp10262_65 () (_ BitVec 64))
(declare-fun temp10262_66 () (_ BitVec 64))
(declare-fun temp10262_67 () (_ BitVec 64))
(declare-fun temp10262_68 () (_ BitVec 64))
(declare-fun temp10262_69 () (_ BitVec 64))
(declare-fun temp10262_70 () (_ BitVec 64))
(declare-fun temp10262_71 () (_ BitVec 64))
(declare-fun temp10262_72 () (_ BitVec 64))
(declare-fun temp10262_73 () (_ BitVec 64))
(declare-fun temp10262_74 () (_ BitVec 64))
(declare-fun temp10262_75 () (_ BitVec 64))
(declare-fun temp10262_76 () (_ BitVec 64))
(declare-fun temp10262_77 () (_ BitVec 64))
(declare-fun temp10262_78 () (_ BitVec 64))
(declare-fun temp10262_79 () (_ BitVec 64))
(declare-fun temp10262_80 () (_ BitVec 64))
(declare-fun temp10262_81 () (_ BitVec 64))
(declare-fun temp10262_82 () (_ BitVec 64))
(declare-fun temp10262_83 () (_ BitVec 64))
(declare-fun temp10262_84 () (_ BitVec 64))
(declare-fun temp10262_85 () (_ BitVec 64))
(declare-fun temp10262_86 () (_ BitVec 64))
(declare-fun temp10262_87 () (_ BitVec 64))
(declare-fun temp10262_88 () (_ BitVec 64))
(declare-fun temp10262_89 () (_ BitVec 64))
(declare-fun temp10262_90 () (_ BitVec 64))
(declare-fun temp10262_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10262_92 () (_ BitVec 64))
(declare-fun temp10262_93 () (_ BitVec 64))
(declare-fun temp10262_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10262_95 () (_ BitVec 64))
(declare-fun temp10262_96 () (_ BitVec 64))
(declare-fun temp10262_97 () (_ BitVec 64))
(declare-fun temp10262_98 () (_ BitVec 64))
(declare-fun temp10262_99 () (_ BitVec 64))
(declare-fun temp10262_100 () (_ BitVec 64))
(declare-fun temp10262_101 () (_ BitVec 64))
(declare-fun temp10262_102 () (_ BitVec 64))
(declare-fun temp10262_103 () (_ BitVec 64))
(declare-fun temp10262_104 () (_ BitVec 64))
(declare-fun temp10262_105 () (_ BitVec 64))
(declare-fun temp10262_106 () (_ BitVec 64))
(declare-fun temp10262_107 () (_ BitVec 64))
(declare-fun temp10262_108 () (_ BitVec 64))
(declare-fun temp10262_109 () (_ BitVec 64))
(declare-fun temp10262_110 () (_ BitVec 64))
(declare-fun temp10262_111 () (_ BitVec 64))
(declare-fun temp10262_112 () (_ BitVec 64))
(declare-fun temp10262_113 () (_ BitVec 64))
(declare-fun temp10262_114 () (_ BitVec 64))
(declare-fun temp10262_115 () (_ BitVec 64))
(declare-fun temp10262_116 () (_ BitVec 64))
(declare-fun temp10262_117 () (_ BitVec 64))
(declare-fun temp10262_118 () (_ BitVec 64))
(declare-fun temp10262_119 () (_ BitVec 64))
(declare-fun temp10262_120 () (_ BitVec 64))
(declare-fun temp10262_121 () (_ BitVec 64))
(declare-fun temp10262_122 () (_ BitVec 64))
(declare-fun temp10262_123 () (_ BitVec 64))
(declare-fun temp10262_124 () (_ BitVec 64))
(declare-fun temp10262_125 () (_ BitVec 64))
(declare-fun temp10262_126 () (_ BitVec 64))
(declare-fun temp10262_127 () (_ BitVec 64))
(declare-fun temp10262_128 () (_ BitVec 64))
(declare-fun temp10262_129 () (_ BitVec 64))
(declare-fun temp10262_130 () (_ BitVec 64))
(declare-fun temp10262_131 () (_ BitVec 64))
(declare-fun temp10262_132 () (_ BitVec 64))
(declare-fun temp10262_133 () (_ BitVec 64))
(declare-fun temp10262_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10262_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10262_136 () (_ BitVec 64))
(declare-fun temp10262_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10262_138 () (_ BitVec 64))
(declare-fun temp10262_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10262_140 () (_ BitVec 64))
(declare-fun temp10262_141 () (_ BitVec 64))
(declare-fun temp10262_142 () (_ BitVec 64))
(declare-fun temp10262_143 () (_ BitVec 64))
(declare-fun temp10262_144 () (_ BitVec 64))
(declare-fun temp10262_145 () (_ BitVec 64))
(declare-fun temp10262_146 () (_ BitVec 64))
(declare-fun temp10262_147 () (_ BitVec 64))
(declare-fun temp10262_148 () (_ BitVec 64))
(declare-fun temp10262_149 () (_ BitVec 64))
(declare-fun temp10262_150 () (_ BitVec 64))
(declare-fun temp10262_151 () (_ BitVec 64))
(declare-fun temp10262_152 () (_ BitVec 64))
(declare-fun temp10262_153 () (_ BitVec 64))
(declare-fun temp10262_154 () (_ BitVec 64))
(declare-fun temp10262_155 () (_ BitVec 64))
(declare-fun temp10262_157 () (_ BitVec 64))
(declare-fun temp10262_158 () (_ BitVec 64))
(declare-fun temp10262_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10262_159 () (_ BitVec 64))
(declare-fun temp10262_160 () (_ BitVec 64))
(declare-fun temp10262_162 () (_ BitVec 64))
(declare-fun temp10262_163 () (_ BitVec 64))
(declare-fun temp10262_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10262_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10262_165 () (_ BitVec 64))
(declare-fun temp10262_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10262_167 () (_ BitVec 64))
(declare-fun temp10262_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10262_169 () (_ BitVec 64))
(declare-fun temp10262_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10262_171 () (_ BitVec 64))
(declare-fun temp10262_172 () (_ BitVec 64))
(declare-fun temp10262_173 () (_ BitVec 64))
(declare-fun temp10262_174 () (_ BitVec 64))
(declare-fun temp10262_175 () (_ BitVec 64))
(declare-fun temp10262_176 () (_ BitVec 64))
(declare-fun temp10262_177 () (_ BitVec 64))
(declare-fun temp10262_178 () (_ BitVec 64))
(declare-fun temp10262_179 () (_ BitVec 64))
(declare-fun temp10262_180 () (_ BitVec 64))
(declare-fun temp10262_181 () (_ BitVec 64))
(declare-fun temp10262_182 () (_ BitVec 64))
(declare-fun temp10262_183 () (_ BitVec 64))
(declare-fun temp10262_184 () (_ BitVec 64))
(declare-fun temp10262_185 () (_ BitVec 64))
(declare-fun temp10262_186 () (_ BitVec 64))
(declare-fun temp10262_187 () (_ BitVec 64))
(declare-fun temp10262_188 () (_ BitVec 64))
(declare-fun temp10262_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10262_190 () (_ BitVec 64))
(declare-fun temp10262_192 () (_ BitVec 64))
(declare-fun temp10262_193 () (_ BitVec 64))
(declare-fun temp10262_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10262_194 () (_ BitVec 64))
(declare-fun temp10262_195 () (_ BitVec 64))
(declare-fun temp10262_197 () (_ BitVec 64))
(declare-fun temp10262_198 () (_ BitVec 64))
(declare-fun temp10262_196 () (_ BitVec 64))
(declare-fun temp10262_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10262_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10262_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10262_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10262_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10262_204 () (_ BitVec 64))
(declare-fun temp10262_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10262_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10262_207 () (_ BitVec 64))
(declare-fun temp10262_208 () (_ BitVec 64))
(declare-fun temp10262_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10262_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10262_211 () (_ BitVec 64))
(declare-fun temp10262_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10262_213 () (_ BitVec 64))
(declare-fun temp10262_214 () (_ BitVec 64))
(declare-fun temp10262_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10262_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10262_217 () (_ BitVec 64))
(declare-fun temp10262_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10262_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10262_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10262_221 () (_ BitVec 64))
(assert (= temp10262_1 #x0000000000000001))
(assert (= var77203 temp10262_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10262_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10262_2)))
(assert (= temp10262_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10262_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10262_4 #x0000000000000000))
(assert (= var210941 temp10262_4))
(assert (= temp10262_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10262_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10262_6 #x0000000000000000))
(assert (= var210986 temp10262_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10262_7 #x0000000000000000))
(assert (= temp10262_8 temp10262_7))
(assert (= temp10262_9 (select ARGNAME_padding_NAMEEND_VAL temp10262_8)))
(assert (= temp10262_10 #x0000000000000001))
(assert (= temp10262_11 temp10262_10))
(assert (= temp10262_12 (select ARGNAME_padding_NAMEEND_VAL temp10262_11)))
(assert (= temp10262_13 #x0000000000000002))
(assert (= temp10262_14 temp10262_13))
(assert (= temp10262_15 (select ARGNAME_padding_NAMEEND_VAL temp10262_14)))
(assert (= temp10262_16 #x0000000000000003))
(assert (= temp10262_17 temp10262_16))
(assert (= temp10262_18 (select ARGNAME_padding_NAMEEND_VAL temp10262_17)))
(assert (= temp10262_19 #x0000000000000004))
(assert (= temp10262_20 temp10262_19))
(assert (= temp10262_21 (select ARGNAME_padding_NAMEEND_VAL temp10262_20)))
(assert (= temp10262_22 #x0000000000000005))
(assert (= temp10262_23 temp10262_22))
(assert (= temp10262_24 (select ARGNAME_padding_NAMEEND_VAL temp10262_23)))
(assert (= temp10262_25 #x0000000000000000))
(assert (= temp10262_26 #x0000000000000000))
(assert (= temp10262_27 temp10262_26))
(assert (= temp10262_28 (select ARGNAME_padding_NAMEEND_VAL temp10262_27)))
(assert (= temp10262_29 #x0000000000000000))
(assert (= temp10262_30 #x0000000000000001))
(assert (= temp10262_31 temp10262_30))
(assert (= temp10262_32 (select ARGNAME_padding_NAMEEND_VAL temp10262_31)))
(assert (= temp10262_33 #x0000000000000000))
(assert (= temp10262_34 #x0000000000000002))
(assert (= temp10262_35 temp10262_34))
(assert (= temp10262_36 (select ARGNAME_padding_NAMEEND_VAL temp10262_35)))
(assert (= temp10262_37 #x0000000000000000))
(assert (= temp10262_38 #x0000000000000003))
(assert (= temp10262_39 temp10262_38))
(assert (= temp10262_40 (select ARGNAME_padding_NAMEEND_VAL temp10262_39)))
(assert (= temp10262_41 #x0000000000000000))
(assert (= temp10262_42 #x0000000000000004))
(assert (= temp10262_43 temp10262_42))
(assert (= temp10262_44 (select ARGNAME_padding_NAMEEND_VAL temp10262_43)))
(assert (= temp10262_45 #x0000000000000000))
(assert (= temp10262_46 #x0000000000000005))
(assert (= temp10262_47 temp10262_46))
(assert (= temp10262_48 (select ARGNAME_padding_NAMEEND_VAL temp10262_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10262_28 temp10262_25)
             (bvslt temp10262_32 temp10262_29)
             (bvslt temp10262_36 temp10262_33)
             (bvslt temp10262_40 temp10262_37)
             (bvslt temp10262_44 temp10262_41)
             (bvslt temp10262_48 temp10262_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10262_49 #x0000000000000000))
(assert (= var1191714 temp10262_49))
(assert (= temp10262_50 #x0000000000000000))
(assert (= temp10262_51 temp10262_50))
(assert (= temp10262_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10262_51)))
(assert (= temp10262_53 #x0000000000000001))
(assert (= temp10262_54 temp10262_53))
(assert (= temp10262_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10262_54)))
(assert (= temp10262_56 #x0000000000000002))
(assert (= temp10262_57 temp10262_56))
(assert (= temp10262_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10262_57)))
(assert (= temp10262_59 #x0000000000000003))
(assert (= temp10262_60 temp10262_59))
(assert (= temp10262_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10262_60)))
(assert (= temp10262_62 #x0000000000000004))
(assert (= temp10262_63 temp10262_62))
(assert (= temp10262_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10262_63)))
(assert (= temp10262_65 #x0000000000000005))
(assert (= temp10262_66 temp10262_65))
(assert (= temp10262_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10262_66)))
(assert (= temp10262_68 #x0000000000000000))
(assert (= temp10262_69 #x0000000000000000))
(assert (= temp10262_70 temp10262_69))
(assert (= temp10262_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10262_70)))
(assert (= temp10262_72 #x0000000000000000))
(assert (= temp10262_73 #x0000000000000001))
(assert (= temp10262_74 temp10262_73))
(assert (= temp10262_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10262_74)))
(assert (= temp10262_76 #x0000000000000000))
(assert (= temp10262_77 #x0000000000000002))
(assert (= temp10262_78 temp10262_77))
(assert (= temp10262_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10262_78)))
(assert (= temp10262_80 #x0000000000000000))
(assert (= temp10262_81 #x0000000000000003))
(assert (= temp10262_82 temp10262_81))
(assert (= temp10262_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10262_82)))
(assert (= temp10262_84 #x0000000000000000))
(assert (= temp10262_85 #x0000000000000004))
(assert (= temp10262_86 temp10262_85))
(assert (= temp10262_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10262_86)))
(assert (= temp10262_88 #x0000000000000000))
(assert (= temp10262_89 #x0000000000000005))
(assert (= temp10262_90 temp10262_89))
(assert (= temp10262_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10262_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10262_71 temp10262_68)
             (bvslt temp10262_75 temp10262_72)
             (bvslt temp10262_79 temp10262_76)
             (bvslt temp10262_83 temp10262_80)
             (bvslt temp10262_87 temp10262_84)
             (bvslt temp10262_91 temp10262_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10262_92 #x0000000000000000))
(assert (= var1191725 temp10262_92))
(assert (= temp10262_93 #x0000000000000000))
(assert (= temp10262_94 temp10262_93))
(assert (= temp10262_95 (select ARGNAME_stride_NAMEEND_VAL temp10262_94)))
(assert (= temp10262_96 #x0000000000000001))
(assert (= temp10262_97 temp10262_96))
(assert (= temp10262_98 (select ARGNAME_stride_NAMEEND_VAL temp10262_97)))
(assert (= temp10262_99 #x0000000000000002))
(assert (= temp10262_100 temp10262_99))
(assert (= temp10262_101 (select ARGNAME_stride_NAMEEND_VAL temp10262_100)))
(assert (= temp10262_102 #x0000000000000003))
(assert (= temp10262_103 temp10262_102))
(assert (= temp10262_104 (select ARGNAME_stride_NAMEEND_VAL temp10262_103)))
(assert (= temp10262_105 #x0000000000000004))
(assert (= temp10262_106 temp10262_105))
(assert (= temp10262_107 (select ARGNAME_stride_NAMEEND_VAL temp10262_106)))
(assert (= temp10262_108 #x0000000000000005))
(assert (= temp10262_109 temp10262_108))
(assert (= temp10262_110 (select ARGNAME_stride_NAMEEND_VAL temp10262_109)))
(assert (= temp10262_111 #x0000000000000000))
(assert (= temp10262_112 #x0000000000000000))
(assert (= temp10262_113 temp10262_112))
(assert (= temp10262_114 (select ARGNAME_stride_NAMEEND_VAL temp10262_113)))
(assert (= temp10262_115 #x0000000000000000))
(assert (= temp10262_116 #x0000000000000001))
(assert (= temp10262_117 temp10262_116))
(assert (= temp10262_118 (select ARGNAME_stride_NAMEEND_VAL temp10262_117)))
(assert (= temp10262_119 #x0000000000000000))
(assert (= temp10262_120 #x0000000000000002))
(assert (= temp10262_121 temp10262_120))
(assert (= temp10262_122 (select ARGNAME_stride_NAMEEND_VAL temp10262_121)))
(assert (= temp10262_123 #x0000000000000000))
(assert (= temp10262_124 #x0000000000000003))
(assert (= temp10262_125 temp10262_124))
(assert (= temp10262_126 (select ARGNAME_stride_NAMEEND_VAL temp10262_125)))
(assert (= temp10262_127 #x0000000000000000))
(assert (= temp10262_128 #x0000000000000004))
(assert (= temp10262_129 temp10262_128))
(assert (= temp10262_130 (select ARGNAME_stride_NAMEEND_VAL temp10262_129)))
(assert (= temp10262_131 #x0000000000000000))
(assert (= temp10262_132 #x0000000000000005))
(assert (= temp10262_133 temp10262_132))
(assert (= temp10262_134 (select ARGNAME_stride_NAMEEND_VAL temp10262_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10262_114 temp10262_111)
             (bvsle temp10262_118 temp10262_115)
             (bvsle temp10262_122 temp10262_119)
             (bvsle temp10262_126 temp10262_123)
             (bvsle temp10262_130 temp10262_127)
             (bvsle temp10262_134 temp10262_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10262_135 #x0000000000000000))
(assert (= var1191735 temp10262_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10262_136 #x0000000000000001))
(assert (= var1191747 temp10262_136))
(assert (= temp10262_137 #x0000000000000000))
(assert (= var1179826 temp10262_137))
(assert (= temp10262_138 #x0000000000000000))
(assert (= temp10262_139 temp10262_138))
(assert (= temp10262_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10262_139)))
(assert (= temp10262_141 #x0000000000000001))
(assert (= temp10262_142 temp10262_141))
(assert (= temp10262_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10262_142)))
(assert (= temp10262_144 #x0000000000000002))
(assert (= temp10262_145 temp10262_144))
(assert (= temp10262_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10262_145)))
(assert (= temp10262_147 #x0000000000000003))
(assert (= temp10262_148 temp10262_147))
(assert (= temp10262_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10262_148)))
(assert (= temp10262_150 #x0000000000000004))
(assert (= temp10262_151 temp10262_150))
(assert (= temp10262_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10262_151)))
(assert (= temp10262_153 #x0000000000000005))
(assert (= temp10262_154 temp10262_153))
(assert (= temp10262_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10262_154)))
(assert (= temp10262_157 var1179826))
(assert (= temp10262_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10262_157)))
(assert (= temp10262_156 temp10262_158))
(assert (= var1191780
   (ite (bvslt temp10262_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10262_159 #x0000000000000000))
(assert (= var1191780 temp10262_159))
(assert (= temp10262_160 #x0000000000000000))
(assert (= var1179826 temp10262_160))
(assert (= temp10262_162 var1179826))
(assert (= temp10262_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10262_162)))
(assert (= temp10262_161 temp10262_163))
(assert (= var1191802 (bvsmod temp10262_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10262_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10262_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10262_165 #x0000000000000001))
(assert (= var1191803 temp10262_165))
(assert (= temp10262_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10262_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10262_167 #x0000000000000001))
(assert (= var1191823 temp10262_167))
(assert (= temp10262_168 #x0000000000000001))
(assert (= var1180714 temp10262_168))
(assert (= temp10262_169 #x0000000000000000))
(assert (= temp10262_170 temp10262_169))
(assert (= temp10262_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10262_170)))
(assert (= temp10262_172 #x0000000000000001))
(assert (= temp10262_173 temp10262_172))
(assert (= temp10262_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10262_173)))
(assert (= temp10262_175 #x0000000000000002))
(assert (= temp10262_176 temp10262_175))
(assert (= temp10262_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10262_176)))
(assert (= temp10262_178 #x0000000000000003))
(assert (= temp10262_179 temp10262_178))
(assert (= temp10262_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10262_179)))
(assert (= temp10262_181 #x0000000000000004))
(assert (= temp10262_182 temp10262_181))
(assert (= temp10262_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10262_182)))
(assert (= temp10262_184 #x0000000000000005))
(assert (= temp10262_185 temp10262_184))
(assert (= temp10262_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10262_185)))
(assert (= temp10262_187 #x0000000000000000))
(assert (= temp10262_188
   (ite (bvslt var1180714 temp10262_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10262_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10262_188)))
(assert (= var1191831 temp10262_189))
(assert (bvslt (ite (bvslt var1180714 temp10262_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10262_190 #x0000000000000001))
(assert (= var1180714 temp10262_190))
(assert (= temp10262_192 var1180714))
(assert (= temp10262_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10262_192)))
(assert (= temp10262_191 temp10262_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10262_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10262_194 #x0000000000000001))
(assert (= var1191836 temp10262_194))
(assert (= temp10262_195 #x0000000000000000))
(assert (= var1179826 temp10262_195))
(assert (= temp10262_197 var1179826))
(assert (= temp10262_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10262_197)))
(assert (= temp10262_196 temp10262_198))
(assert (= temp10262_199 #x0000000000000002))
(assert (= var1586025 temp10262_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10262_200 #x0000000000000001))
(assert (= var1191993 temp10262_200))
(assert (= temp10262_201 #x0000000000000001))
(assert (= var2700303 temp10262_201))
(assert (= temp10262_202 #x0000000000000001))
(assert (= var2962447 temp10262_202))
(assert (= temp10262_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10262_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10262_204 #x0000000000000001))
(assert (= var211058 temp10262_204))
(assert (= temp10262_205 #x0000000000000001))
(assert (= var211188 temp10262_205))
(assert (= var3879401 var211188))
(assert (= temp10262_206 #x0000000000000000))
(assert (= var3866802 temp10262_206))
(assert (= temp10262_207 #x0000000000000000))
(assert (= temp10262_208
   (ite (bvslt var3866802 temp10262_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10262_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10262_208)))
(assert (= var3879420 temp10262_209))
(assert (bvslt (ite (bvslt var3866802 temp10262_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10262_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10262_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10262_211 #x0000000000000000))
(assert (= var3879421 temp10262_211))
(assert (= temp10262_212 #x0000000000000001))
(assert (= var3867690 temp10262_212))
(assert (= temp10262_213 #x0000000000000000))
(assert (= temp10262_214
   (ite (bvslt var3867690 temp10262_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10262_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10262_214)))
(assert (= var3879423 temp10262_215))
(assert (bvslt (ite (bvslt var3867690 temp10262_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10262_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10262_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10262_217 #x0000000000000001))
(assert (= var3879424 temp10262_217))
(assert (= temp10262_218 #x0000000000000000))
(assert (= var4079423 temp10262_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10262_219 #x0000000000000002))
(assert (= var4208259 temp10262_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10262_220 #x0000000000000000))
(assert (= var4273820 temp10262_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10262_221 #x0000000000000001))
(assert (= var211058 temp10262_221))
(model-add temp10262_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10262_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10262_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10262_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




