(declare-fun temp10569_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10569_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10569_3 () (_ BitVec 64))
(declare-fun temp10569_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10569_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10569_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10569_7 () (_ BitVec 64))
(declare-fun temp10569_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10569_9 () (_ BitVec 64))
(declare-fun temp10569_10 () (_ BitVec 64))
(declare-fun temp10569_11 () (_ BitVec 64))
(declare-fun temp10569_12 () (_ BitVec 64))
(declare-fun temp10569_13 () (_ BitVec 64))
(declare-fun temp10569_14 () (_ BitVec 64))
(declare-fun temp10569_15 () (_ BitVec 64))
(declare-fun temp10569_16 () (_ BitVec 64))
(declare-fun temp10569_17 () (_ BitVec 64))
(declare-fun temp10569_18 () (_ BitVec 64))
(declare-fun temp10569_19 () (_ BitVec 64))
(declare-fun temp10569_20 () (_ BitVec 64))
(declare-fun temp10569_21 () (_ BitVec 64))
(declare-fun temp10569_22 () (_ BitVec 64))
(declare-fun temp10569_23 () (_ BitVec 64))
(declare-fun temp10569_24 () (_ BitVec 64))
(declare-fun temp10569_25 () (_ BitVec 64))
(declare-fun temp10569_26 () (_ BitVec 64))
(declare-fun temp10569_27 () (_ BitVec 64))
(declare-fun temp10569_28 () (_ BitVec 64))
(declare-fun temp10569_29 () (_ BitVec 64))
(declare-fun temp10569_30 () (_ BitVec 64))
(declare-fun temp10569_31 () (_ BitVec 64))
(declare-fun temp10569_32 () (_ BitVec 64))
(declare-fun temp10569_33 () (_ BitVec 64))
(declare-fun temp10569_34 () (_ BitVec 64))
(declare-fun temp10569_35 () (_ BitVec 64))
(declare-fun temp10569_36 () (_ BitVec 64))
(declare-fun temp10569_37 () (_ BitVec 64))
(declare-fun temp10569_38 () (_ BitVec 64))
(declare-fun temp10569_39 () (_ BitVec 64))
(declare-fun temp10569_40 () (_ BitVec 64))
(declare-fun temp10569_41 () (_ BitVec 64))
(declare-fun temp10569_42 () (_ BitVec 64))
(declare-fun temp10569_43 () (_ BitVec 64))
(declare-fun temp10569_44 () (_ BitVec 64))
(declare-fun temp10569_45 () (_ BitVec 64))
(declare-fun temp10569_46 () (_ BitVec 64))
(declare-fun temp10569_47 () (_ BitVec 64))
(declare-fun temp10569_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10569_49 () (_ BitVec 64))
(declare-fun temp10569_50 () (_ BitVec 64))
(declare-fun temp10569_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10569_52 () (_ BitVec 64))
(declare-fun temp10569_53 () (_ BitVec 64))
(declare-fun temp10569_54 () (_ BitVec 64))
(declare-fun temp10569_55 () (_ BitVec 64))
(declare-fun temp10569_56 () (_ BitVec 64))
(declare-fun temp10569_57 () (_ BitVec 64))
(declare-fun temp10569_58 () (_ BitVec 64))
(declare-fun temp10569_59 () (_ BitVec 64))
(declare-fun temp10569_60 () (_ BitVec 64))
(declare-fun temp10569_61 () (_ BitVec 64))
(declare-fun temp10569_62 () (_ BitVec 64))
(declare-fun temp10569_63 () (_ BitVec 64))
(declare-fun temp10569_64 () (_ BitVec 64))
(declare-fun temp10569_65 () (_ BitVec 64))
(declare-fun temp10569_66 () (_ BitVec 64))
(declare-fun temp10569_67 () (_ BitVec 64))
(declare-fun temp10569_68 () (_ BitVec 64))
(declare-fun temp10569_69 () (_ BitVec 64))
(declare-fun temp10569_70 () (_ BitVec 64))
(declare-fun temp10569_71 () (_ BitVec 64))
(declare-fun temp10569_72 () (_ BitVec 64))
(declare-fun temp10569_73 () (_ BitVec 64))
(declare-fun temp10569_74 () (_ BitVec 64))
(declare-fun temp10569_75 () (_ BitVec 64))
(declare-fun temp10569_76 () (_ BitVec 64))
(declare-fun temp10569_77 () (_ BitVec 64))
(declare-fun temp10569_78 () (_ BitVec 64))
(declare-fun temp10569_79 () (_ BitVec 64))
(declare-fun temp10569_80 () (_ BitVec 64))
(declare-fun temp10569_81 () (_ BitVec 64))
(declare-fun temp10569_82 () (_ BitVec 64))
(declare-fun temp10569_83 () (_ BitVec 64))
(declare-fun temp10569_84 () (_ BitVec 64))
(declare-fun temp10569_85 () (_ BitVec 64))
(declare-fun temp10569_86 () (_ BitVec 64))
(declare-fun temp10569_87 () (_ BitVec 64))
(declare-fun temp10569_88 () (_ BitVec 64))
(declare-fun temp10569_89 () (_ BitVec 64))
(declare-fun temp10569_90 () (_ BitVec 64))
(declare-fun temp10569_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10569_92 () (_ BitVec 64))
(declare-fun temp10569_93 () (_ BitVec 64))
(declare-fun temp10569_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10569_95 () (_ BitVec 64))
(declare-fun temp10569_96 () (_ BitVec 64))
(declare-fun temp10569_97 () (_ BitVec 64))
(declare-fun temp10569_98 () (_ BitVec 64))
(declare-fun temp10569_99 () (_ BitVec 64))
(declare-fun temp10569_100 () (_ BitVec 64))
(declare-fun temp10569_101 () (_ BitVec 64))
(declare-fun temp10569_102 () (_ BitVec 64))
(declare-fun temp10569_103 () (_ BitVec 64))
(declare-fun temp10569_104 () (_ BitVec 64))
(declare-fun temp10569_105 () (_ BitVec 64))
(declare-fun temp10569_106 () (_ BitVec 64))
(declare-fun temp10569_107 () (_ BitVec 64))
(declare-fun temp10569_108 () (_ BitVec 64))
(declare-fun temp10569_109 () (_ BitVec 64))
(declare-fun temp10569_110 () (_ BitVec 64))
(declare-fun temp10569_111 () (_ BitVec 64))
(declare-fun temp10569_112 () (_ BitVec 64))
(declare-fun temp10569_113 () (_ BitVec 64))
(declare-fun temp10569_114 () (_ BitVec 64))
(declare-fun temp10569_115 () (_ BitVec 64))
(declare-fun temp10569_116 () (_ BitVec 64))
(declare-fun temp10569_117 () (_ BitVec 64))
(declare-fun temp10569_118 () (_ BitVec 64))
(declare-fun temp10569_119 () (_ BitVec 64))
(declare-fun temp10569_120 () (_ BitVec 64))
(declare-fun temp10569_121 () (_ BitVec 64))
(declare-fun temp10569_122 () (_ BitVec 64))
(declare-fun temp10569_123 () (_ BitVec 64))
(declare-fun temp10569_124 () (_ BitVec 64))
(declare-fun temp10569_125 () (_ BitVec 64))
(declare-fun temp10569_126 () (_ BitVec 64))
(declare-fun temp10569_127 () (_ BitVec 64))
(declare-fun temp10569_128 () (_ BitVec 64))
(declare-fun temp10569_129 () (_ BitVec 64))
(declare-fun temp10569_130 () (_ BitVec 64))
(declare-fun temp10569_131 () (_ BitVec 64))
(declare-fun temp10569_132 () (_ BitVec 64))
(declare-fun temp10569_133 () (_ BitVec 64))
(declare-fun temp10569_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10569_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10569_136 () (_ BitVec 64))
(declare-fun temp10569_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10569_138 () (_ BitVec 64))
(declare-fun temp10569_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10569_140 () (_ BitVec 64))
(declare-fun temp10569_141 () (_ BitVec 64))
(declare-fun temp10569_142 () (_ BitVec 64))
(declare-fun temp10569_143 () (_ BitVec 64))
(declare-fun temp10569_144 () (_ BitVec 64))
(declare-fun temp10569_145 () (_ BitVec 64))
(declare-fun temp10569_146 () (_ BitVec 64))
(declare-fun temp10569_147 () (_ BitVec 64))
(declare-fun temp10569_148 () (_ BitVec 64))
(declare-fun temp10569_149 () (_ BitVec 64))
(declare-fun temp10569_150 () (_ BitVec 64))
(declare-fun temp10569_151 () (_ BitVec 64))
(declare-fun temp10569_152 () (_ BitVec 64))
(declare-fun temp10569_153 () (_ BitVec 64))
(declare-fun temp10569_154 () (_ BitVec 64))
(declare-fun temp10569_155 () (_ BitVec 64))
(declare-fun temp10569_157 () (_ BitVec 64))
(declare-fun temp10569_158 () (_ BitVec 64))
(declare-fun temp10569_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10569_159 () (_ BitVec 64))
(declare-fun temp10569_160 () (_ BitVec 64))
(declare-fun temp10569_162 () (_ BitVec 64))
(declare-fun temp10569_163 () (_ BitVec 64))
(declare-fun temp10569_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10569_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10569_165 () (_ BitVec 64))
(declare-fun temp10569_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10569_167 () (_ BitVec 64))
(declare-fun temp10569_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10569_169 () (_ BitVec 64))
(declare-fun temp10569_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10569_171 () (_ BitVec 64))
(declare-fun temp10569_172 () (_ BitVec 64))
(declare-fun temp10569_173 () (_ BitVec 64))
(declare-fun temp10569_174 () (_ BitVec 64))
(declare-fun temp10569_175 () (_ BitVec 64))
(declare-fun temp10569_176 () (_ BitVec 64))
(declare-fun temp10569_177 () (_ BitVec 64))
(declare-fun temp10569_178 () (_ BitVec 64))
(declare-fun temp10569_179 () (_ BitVec 64))
(declare-fun temp10569_180 () (_ BitVec 64))
(declare-fun temp10569_181 () (_ BitVec 64))
(declare-fun temp10569_182 () (_ BitVec 64))
(declare-fun temp10569_183 () (_ BitVec 64))
(declare-fun temp10569_184 () (_ BitVec 64))
(declare-fun temp10569_185 () (_ BitVec 64))
(declare-fun temp10569_186 () (_ BitVec 64))
(declare-fun temp10569_187 () (_ BitVec 64))
(declare-fun temp10569_188 () (_ BitVec 64))
(declare-fun temp10569_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10569_190 () (_ BitVec 64))
(declare-fun temp10569_192 () (_ BitVec 64))
(declare-fun temp10569_193 () (_ BitVec 64))
(declare-fun temp10569_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10569_194 () (_ BitVec 64))
(declare-fun temp10569_195 () (_ BitVec 64))
(declare-fun temp10569_197 () (_ BitVec 64))
(declare-fun temp10569_198 () (_ BitVec 64))
(declare-fun temp10569_196 () (_ BitVec 64))
(declare-fun temp10569_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10569_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10569_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10569_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10569_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10569_204 () (_ BitVec 64))
(declare-fun temp10569_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10569_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10569_207 () (_ BitVec 64))
(declare-fun temp10569_208 () (_ BitVec 64))
(declare-fun temp10569_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10569_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10569_211 () (_ BitVec 64))
(declare-fun temp10569_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10569_213 () (_ BitVec 64))
(declare-fun temp10569_214 () (_ BitVec 64))
(declare-fun temp10569_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10569_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10569_217 () (_ BitVec 64))
(declare-fun temp10569_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10569_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10569_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp10569_221 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp10569_222 () (_ BitVec 64))
(assert (= temp10569_1 #x0000000000000001))
(assert (= var77203 temp10569_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10569_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10569_2)))
(assert (= temp10569_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10569_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10569_4 #x0000000000000000))
(assert (= var210941 temp10569_4))
(assert (= temp10569_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10569_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10569_6 #x0000000000000000))
(assert (= var210986 temp10569_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10569_7 #x0000000000000000))
(assert (= temp10569_8 temp10569_7))
(assert (= temp10569_9 (select ARGNAME_padding_NAMEEND_VAL temp10569_8)))
(assert (= temp10569_10 #x0000000000000001))
(assert (= temp10569_11 temp10569_10))
(assert (= temp10569_12 (select ARGNAME_padding_NAMEEND_VAL temp10569_11)))
(assert (= temp10569_13 #x0000000000000002))
(assert (= temp10569_14 temp10569_13))
(assert (= temp10569_15 (select ARGNAME_padding_NAMEEND_VAL temp10569_14)))
(assert (= temp10569_16 #x0000000000000003))
(assert (= temp10569_17 temp10569_16))
(assert (= temp10569_18 (select ARGNAME_padding_NAMEEND_VAL temp10569_17)))
(assert (= temp10569_19 #x0000000000000004))
(assert (= temp10569_20 temp10569_19))
(assert (= temp10569_21 (select ARGNAME_padding_NAMEEND_VAL temp10569_20)))
(assert (= temp10569_22 #x0000000000000005))
(assert (= temp10569_23 temp10569_22))
(assert (= temp10569_24 (select ARGNAME_padding_NAMEEND_VAL temp10569_23)))
(assert (= temp10569_25 #x0000000000000000))
(assert (= temp10569_26 #x0000000000000000))
(assert (= temp10569_27 temp10569_26))
(assert (= temp10569_28 (select ARGNAME_padding_NAMEEND_VAL temp10569_27)))
(assert (= temp10569_29 #x0000000000000000))
(assert (= temp10569_30 #x0000000000000001))
(assert (= temp10569_31 temp10569_30))
(assert (= temp10569_32 (select ARGNAME_padding_NAMEEND_VAL temp10569_31)))
(assert (= temp10569_33 #x0000000000000000))
(assert (= temp10569_34 #x0000000000000002))
(assert (= temp10569_35 temp10569_34))
(assert (= temp10569_36 (select ARGNAME_padding_NAMEEND_VAL temp10569_35)))
(assert (= temp10569_37 #x0000000000000000))
(assert (= temp10569_38 #x0000000000000003))
(assert (= temp10569_39 temp10569_38))
(assert (= temp10569_40 (select ARGNAME_padding_NAMEEND_VAL temp10569_39)))
(assert (= temp10569_41 #x0000000000000000))
(assert (= temp10569_42 #x0000000000000004))
(assert (= temp10569_43 temp10569_42))
(assert (= temp10569_44 (select ARGNAME_padding_NAMEEND_VAL temp10569_43)))
(assert (= temp10569_45 #x0000000000000000))
(assert (= temp10569_46 #x0000000000000005))
(assert (= temp10569_47 temp10569_46))
(assert (= temp10569_48 (select ARGNAME_padding_NAMEEND_VAL temp10569_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10569_28 temp10569_25)
             (bvslt temp10569_32 temp10569_29)
             (bvslt temp10569_36 temp10569_33)
             (bvslt temp10569_40 temp10569_37)
             (bvslt temp10569_44 temp10569_41)
             (bvslt temp10569_48 temp10569_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10569_49 #x0000000000000000))
(assert (= var1191714 temp10569_49))
(assert (= temp10569_50 #x0000000000000000))
(assert (= temp10569_51 temp10569_50))
(assert (= temp10569_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10569_51)))
(assert (= temp10569_53 #x0000000000000001))
(assert (= temp10569_54 temp10569_53))
(assert (= temp10569_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10569_54)))
(assert (= temp10569_56 #x0000000000000002))
(assert (= temp10569_57 temp10569_56))
(assert (= temp10569_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10569_57)))
(assert (= temp10569_59 #x0000000000000003))
(assert (= temp10569_60 temp10569_59))
(assert (= temp10569_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10569_60)))
(assert (= temp10569_62 #x0000000000000004))
(assert (= temp10569_63 temp10569_62))
(assert (= temp10569_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10569_63)))
(assert (= temp10569_65 #x0000000000000005))
(assert (= temp10569_66 temp10569_65))
(assert (= temp10569_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10569_66)))
(assert (= temp10569_68 #x0000000000000000))
(assert (= temp10569_69 #x0000000000000000))
(assert (= temp10569_70 temp10569_69))
(assert (= temp10569_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10569_70)))
(assert (= temp10569_72 #x0000000000000000))
(assert (= temp10569_73 #x0000000000000001))
(assert (= temp10569_74 temp10569_73))
(assert (= temp10569_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10569_74)))
(assert (= temp10569_76 #x0000000000000000))
(assert (= temp10569_77 #x0000000000000002))
(assert (= temp10569_78 temp10569_77))
(assert (= temp10569_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10569_78)))
(assert (= temp10569_80 #x0000000000000000))
(assert (= temp10569_81 #x0000000000000003))
(assert (= temp10569_82 temp10569_81))
(assert (= temp10569_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10569_82)))
(assert (= temp10569_84 #x0000000000000000))
(assert (= temp10569_85 #x0000000000000004))
(assert (= temp10569_86 temp10569_85))
(assert (= temp10569_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10569_86)))
(assert (= temp10569_88 #x0000000000000000))
(assert (= temp10569_89 #x0000000000000005))
(assert (= temp10569_90 temp10569_89))
(assert (= temp10569_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10569_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10569_71 temp10569_68)
             (bvslt temp10569_75 temp10569_72)
             (bvslt temp10569_79 temp10569_76)
             (bvslt temp10569_83 temp10569_80)
             (bvslt temp10569_87 temp10569_84)
             (bvslt temp10569_91 temp10569_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10569_92 #x0000000000000000))
(assert (= var1191725 temp10569_92))
(assert (= temp10569_93 #x0000000000000000))
(assert (= temp10569_94 temp10569_93))
(assert (= temp10569_95 (select ARGNAME_stride_NAMEEND_VAL temp10569_94)))
(assert (= temp10569_96 #x0000000000000001))
(assert (= temp10569_97 temp10569_96))
(assert (= temp10569_98 (select ARGNAME_stride_NAMEEND_VAL temp10569_97)))
(assert (= temp10569_99 #x0000000000000002))
(assert (= temp10569_100 temp10569_99))
(assert (= temp10569_101 (select ARGNAME_stride_NAMEEND_VAL temp10569_100)))
(assert (= temp10569_102 #x0000000000000003))
(assert (= temp10569_103 temp10569_102))
(assert (= temp10569_104 (select ARGNAME_stride_NAMEEND_VAL temp10569_103)))
(assert (= temp10569_105 #x0000000000000004))
(assert (= temp10569_106 temp10569_105))
(assert (= temp10569_107 (select ARGNAME_stride_NAMEEND_VAL temp10569_106)))
(assert (= temp10569_108 #x0000000000000005))
(assert (= temp10569_109 temp10569_108))
(assert (= temp10569_110 (select ARGNAME_stride_NAMEEND_VAL temp10569_109)))
(assert (= temp10569_111 #x0000000000000000))
(assert (= temp10569_112 #x0000000000000000))
(assert (= temp10569_113 temp10569_112))
(assert (= temp10569_114 (select ARGNAME_stride_NAMEEND_VAL temp10569_113)))
(assert (= temp10569_115 #x0000000000000000))
(assert (= temp10569_116 #x0000000000000001))
(assert (= temp10569_117 temp10569_116))
(assert (= temp10569_118 (select ARGNAME_stride_NAMEEND_VAL temp10569_117)))
(assert (= temp10569_119 #x0000000000000000))
(assert (= temp10569_120 #x0000000000000002))
(assert (= temp10569_121 temp10569_120))
(assert (= temp10569_122 (select ARGNAME_stride_NAMEEND_VAL temp10569_121)))
(assert (= temp10569_123 #x0000000000000000))
(assert (= temp10569_124 #x0000000000000003))
(assert (= temp10569_125 temp10569_124))
(assert (= temp10569_126 (select ARGNAME_stride_NAMEEND_VAL temp10569_125)))
(assert (= temp10569_127 #x0000000000000000))
(assert (= temp10569_128 #x0000000000000004))
(assert (= temp10569_129 temp10569_128))
(assert (= temp10569_130 (select ARGNAME_stride_NAMEEND_VAL temp10569_129)))
(assert (= temp10569_131 #x0000000000000000))
(assert (= temp10569_132 #x0000000000000005))
(assert (= temp10569_133 temp10569_132))
(assert (= temp10569_134 (select ARGNAME_stride_NAMEEND_VAL temp10569_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10569_114 temp10569_111)
             (bvsle temp10569_118 temp10569_115)
             (bvsle temp10569_122 temp10569_119)
             (bvsle temp10569_126 temp10569_123)
             (bvsle temp10569_130 temp10569_127)
             (bvsle temp10569_134 temp10569_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10569_135 #x0000000000000000))
(assert (= var1191735 temp10569_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10569_136 #x0000000000000001))
(assert (= var1191747 temp10569_136))
(assert (= temp10569_137 #x0000000000000000))
(assert (= var1179826 temp10569_137))
(assert (= temp10569_138 #x0000000000000000))
(assert (= temp10569_139 temp10569_138))
(assert (= temp10569_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10569_139)))
(assert (= temp10569_141 #x0000000000000001))
(assert (= temp10569_142 temp10569_141))
(assert (= temp10569_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10569_142)))
(assert (= temp10569_144 #x0000000000000002))
(assert (= temp10569_145 temp10569_144))
(assert (= temp10569_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10569_145)))
(assert (= temp10569_147 #x0000000000000003))
(assert (= temp10569_148 temp10569_147))
(assert (= temp10569_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10569_148)))
(assert (= temp10569_150 #x0000000000000004))
(assert (= temp10569_151 temp10569_150))
(assert (= temp10569_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10569_151)))
(assert (= temp10569_153 #x0000000000000005))
(assert (= temp10569_154 temp10569_153))
(assert (= temp10569_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10569_154)))
(assert (= temp10569_157 var1179826))
(assert (= temp10569_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10569_157)))
(assert (= temp10569_156 temp10569_158))
(assert (= var1191780
   (ite (bvslt temp10569_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10569_159 #x0000000000000000))
(assert (= var1191780 temp10569_159))
(assert (= temp10569_160 #x0000000000000000))
(assert (= var1179826 temp10569_160))
(assert (= temp10569_162 var1179826))
(assert (= temp10569_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10569_162)))
(assert (= temp10569_161 temp10569_163))
(assert (= var1191802 (bvsmod temp10569_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10569_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10569_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10569_165 #x0000000000000001))
(assert (= var1191803 temp10569_165))
(assert (= temp10569_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10569_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10569_167 #x0000000000000001))
(assert (= var1191823 temp10569_167))
(assert (= temp10569_168 #x0000000000000001))
(assert (= var1180714 temp10569_168))
(assert (= temp10569_169 #x0000000000000000))
(assert (= temp10569_170 temp10569_169))
(assert (= temp10569_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10569_170)))
(assert (= temp10569_172 #x0000000000000001))
(assert (= temp10569_173 temp10569_172))
(assert (= temp10569_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10569_173)))
(assert (= temp10569_175 #x0000000000000002))
(assert (= temp10569_176 temp10569_175))
(assert (= temp10569_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10569_176)))
(assert (= temp10569_178 #x0000000000000003))
(assert (= temp10569_179 temp10569_178))
(assert (= temp10569_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10569_179)))
(assert (= temp10569_181 #x0000000000000004))
(assert (= temp10569_182 temp10569_181))
(assert (= temp10569_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10569_182)))
(assert (= temp10569_184 #x0000000000000005))
(assert (= temp10569_185 temp10569_184))
(assert (= temp10569_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10569_185)))
(assert (= temp10569_187 #x0000000000000000))
(assert (= temp10569_188
   (ite (bvslt var1180714 temp10569_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10569_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10569_188)))
(assert (= var1191831 temp10569_189))
(assert (bvslt (ite (bvslt var1180714 temp10569_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10569_190 #x0000000000000001))
(assert (= var1180714 temp10569_190))
(assert (= temp10569_192 var1180714))
(assert (= temp10569_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10569_192)))
(assert (= temp10569_191 temp10569_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10569_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10569_194 #x0000000000000001))
(assert (= var1191836 temp10569_194))
(assert (= temp10569_195 #x0000000000000000))
(assert (= var1179826 temp10569_195))
(assert (= temp10569_197 var1179826))
(assert (= temp10569_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10569_197)))
(assert (= temp10569_196 temp10569_198))
(assert (= temp10569_199 #x0000000000000002))
(assert (= var1586025 temp10569_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10569_200 #x0000000000000001))
(assert (= var1191993 temp10569_200))
(assert (= temp10569_201 #x0000000000000001))
(assert (= var2700303 temp10569_201))
(assert (= temp10569_202 #x0000000000000001))
(assert (= var2962447 temp10569_202))
(assert (= temp10569_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10569_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10569_204 #x0000000000000001))
(assert (= var211058 temp10569_204))
(assert (= temp10569_205 #x0000000000000001))
(assert (= var211188 temp10569_205))
(assert (= var3879401 var211188))
(assert (= temp10569_206 #x0000000000000000))
(assert (= var3866802 temp10569_206))
(assert (= temp10569_207 #x0000000000000000))
(assert (= temp10569_208
   (ite (bvslt var3866802 temp10569_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10569_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10569_208)))
(assert (= var3879420 temp10569_209))
(assert (bvslt (ite (bvslt var3866802 temp10569_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10569_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10569_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10569_211 #x0000000000000000))
(assert (= var3879421 temp10569_211))
(assert (= temp10569_212 #x0000000000000001))
(assert (= var3867690 temp10569_212))
(assert (= temp10569_213 #x0000000000000000))
(assert (= temp10569_214
   (ite (bvslt var3867690 temp10569_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10569_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10569_214)))
(assert (= var3879423 temp10569_215))
(assert (bvslt (ite (bvslt var3867690 temp10569_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10569_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10569_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10569_217 #x0000000000000001))
(assert (= var3879424 temp10569_217))
(assert (= temp10569_218 #x0000000000000000))
(assert (= var4133117 temp10569_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10569_219 #x0000000000000002))
(assert (= var4339331 temp10569_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10569_220 #x0000000000000000))
(assert (= var4404892 temp10569_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5124496 var211201))
(assert (= var211494 var210913))
(assert (= temp10569_221 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp10569_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10569_222 #x0000000000000001))
(assert (= var211058 temp10569_222))
(model-add temp10569_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10569_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10569_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10569_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





