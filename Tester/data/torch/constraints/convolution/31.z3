(declare-fun temp41_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp41_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp41_3 () (_ BitVec 64))
(declare-fun temp41_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp41_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp41_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp41_7 () (_ BitVec 64))
(declare-fun temp41_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp41_9 () (_ BitVec 64))
(declare-fun temp41_10 () (_ BitVec 64))
(declare-fun temp41_11 () (_ BitVec 64))
(declare-fun temp41_12 () (_ BitVec 64))
(declare-fun temp41_13 () (_ BitVec 64))
(declare-fun temp41_14 () (_ BitVec 64))
(declare-fun temp41_15 () (_ BitVec 64))
(declare-fun temp41_16 () (_ BitVec 64))
(declare-fun temp41_17 () (_ BitVec 64))
(declare-fun temp41_18 () (_ BitVec 64))
(declare-fun temp41_19 () (_ BitVec 64))
(declare-fun temp41_20 () (_ BitVec 64))
(declare-fun temp41_21 () (_ BitVec 64))
(declare-fun temp41_22 () (_ BitVec 64))
(declare-fun temp41_23 () (_ BitVec 64))
(declare-fun temp41_24 () (_ BitVec 64))
(declare-fun temp41_25 () (_ BitVec 64))
(declare-fun temp41_26 () (_ BitVec 64))
(declare-fun temp41_27 () (_ BitVec 64))
(declare-fun temp41_28 () (_ BitVec 64))
(declare-fun temp41_29 () (_ BitVec 64))
(declare-fun temp41_30 () (_ BitVec 64))
(declare-fun temp41_31 () (_ BitVec 64))
(declare-fun temp41_32 () (_ BitVec 64))
(declare-fun temp41_33 () (_ BitVec 64))
(declare-fun temp41_34 () (_ BitVec 64))
(declare-fun temp41_35 () (_ BitVec 64))
(declare-fun temp41_36 () (_ BitVec 64))
(declare-fun temp41_37 () (_ BitVec 64))
(declare-fun temp41_38 () (_ BitVec 64))
(declare-fun temp41_39 () (_ BitVec 64))
(declare-fun temp41_40 () (_ BitVec 64))
(declare-fun temp41_41 () (_ BitVec 64))
(declare-fun temp41_42 () (_ BitVec 64))
(declare-fun temp41_43 () (_ BitVec 64))
(declare-fun temp41_44 () (_ BitVec 64))
(declare-fun temp41_45 () (_ BitVec 64))
(declare-fun temp41_46 () (_ BitVec 64))
(declare-fun temp41_47 () (_ BitVec 64))
(declare-fun temp41_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp41_49 () (_ BitVec 64))
(declare-fun temp41_50 () (_ BitVec 64))
(declare-fun temp41_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp41_52 () (_ BitVec 64))
(declare-fun temp41_53 () (_ BitVec 64))
(declare-fun temp41_54 () (_ BitVec 64))
(declare-fun temp41_55 () (_ BitVec 64))
(declare-fun temp41_56 () (_ BitVec 64))
(declare-fun temp41_57 () (_ BitVec 64))
(declare-fun temp41_58 () (_ BitVec 64))
(declare-fun temp41_59 () (_ BitVec 64))
(declare-fun temp41_60 () (_ BitVec 64))
(declare-fun temp41_61 () (_ BitVec 64))
(declare-fun temp41_62 () (_ BitVec 64))
(declare-fun temp41_63 () (_ BitVec 64))
(declare-fun temp41_64 () (_ BitVec 64))
(declare-fun temp41_65 () (_ BitVec 64))
(declare-fun temp41_66 () (_ BitVec 64))
(declare-fun temp41_67 () (_ BitVec 64))
(declare-fun temp41_68 () (_ BitVec 64))
(declare-fun temp41_69 () (_ BitVec 64))
(declare-fun temp41_70 () (_ BitVec 64))
(declare-fun temp41_71 () (_ BitVec 64))
(declare-fun temp41_72 () (_ BitVec 64))
(declare-fun temp41_73 () (_ BitVec 64))
(declare-fun temp41_74 () (_ BitVec 64))
(declare-fun temp41_75 () (_ BitVec 64))
(declare-fun temp41_76 () (_ BitVec 64))
(declare-fun temp41_77 () (_ BitVec 64))
(declare-fun temp41_78 () (_ BitVec 64))
(declare-fun temp41_79 () (_ BitVec 64))
(declare-fun temp41_80 () (_ BitVec 64))
(declare-fun temp41_81 () (_ BitVec 64))
(declare-fun temp41_82 () (_ BitVec 64))
(declare-fun temp41_83 () (_ BitVec 64))
(declare-fun temp41_84 () (_ BitVec 64))
(declare-fun temp41_85 () (_ BitVec 64))
(declare-fun temp41_86 () (_ BitVec 64))
(declare-fun temp41_87 () (_ BitVec 64))
(declare-fun temp41_88 () (_ BitVec 64))
(declare-fun temp41_89 () (_ BitVec 64))
(declare-fun temp41_90 () (_ BitVec 64))
(declare-fun temp41_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp41_92 () (_ BitVec 64))
(declare-fun temp41_93 () (_ BitVec 64))
(declare-fun temp41_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp41_95 () (_ BitVec 64))
(declare-fun temp41_96 () (_ BitVec 64))
(declare-fun temp41_97 () (_ BitVec 64))
(declare-fun temp41_98 () (_ BitVec 64))
(declare-fun temp41_99 () (_ BitVec 64))
(declare-fun temp41_100 () (_ BitVec 64))
(declare-fun temp41_101 () (_ BitVec 64))
(declare-fun temp41_102 () (_ BitVec 64))
(declare-fun temp41_103 () (_ BitVec 64))
(declare-fun temp41_104 () (_ BitVec 64))
(declare-fun temp41_105 () (_ BitVec 64))
(declare-fun temp41_106 () (_ BitVec 64))
(declare-fun temp41_107 () (_ BitVec 64))
(declare-fun temp41_108 () (_ BitVec 64))
(declare-fun temp41_109 () (_ BitVec 64))
(declare-fun temp41_110 () (_ BitVec 64))
(declare-fun temp41_111 () (_ BitVec 64))
(declare-fun temp41_112 () (_ BitVec 64))
(declare-fun temp41_113 () (_ BitVec 64))
(declare-fun temp41_114 () (_ BitVec 64))
(declare-fun temp41_115 () (_ BitVec 64))
(declare-fun temp41_116 () (_ BitVec 64))
(declare-fun temp41_117 () (_ BitVec 64))
(declare-fun temp41_118 () (_ BitVec 64))
(declare-fun temp41_119 () (_ BitVec 64))
(declare-fun temp41_120 () (_ BitVec 64))
(declare-fun temp41_121 () (_ BitVec 64))
(declare-fun temp41_122 () (_ BitVec 64))
(declare-fun temp41_123 () (_ BitVec 64))
(declare-fun temp41_124 () (_ BitVec 64))
(declare-fun temp41_125 () (_ BitVec 64))
(declare-fun temp41_126 () (_ BitVec 64))
(declare-fun temp41_127 () (_ BitVec 64))
(declare-fun temp41_128 () (_ BitVec 64))
(declare-fun temp41_129 () (_ BitVec 64))
(declare-fun temp41_130 () (_ BitVec 64))
(declare-fun temp41_131 () (_ BitVec 64))
(declare-fun temp41_132 () (_ BitVec 64))
(declare-fun temp41_133 () (_ BitVec 64))
(declare-fun temp41_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp41_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp41_136 () (_ BitVec 64))
(declare-fun temp41_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp41_138 () (_ BitVec 64))
(declare-fun temp41_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp41_140 () (_ BitVec 64))
(declare-fun temp41_141 () (_ BitVec 64))
(declare-fun temp41_142 () (_ BitVec 64))
(declare-fun temp41_143 () (_ BitVec 64))
(declare-fun temp41_144 () (_ BitVec 64))
(declare-fun temp41_145 () (_ BitVec 64))
(declare-fun temp41_146 () (_ BitVec 64))
(declare-fun temp41_147 () (_ BitVec 64))
(declare-fun temp41_148 () (_ BitVec 64))
(declare-fun temp41_149 () (_ BitVec 64))
(declare-fun temp41_150 () (_ BitVec 64))
(declare-fun temp41_151 () (_ BitVec 64))
(declare-fun temp41_152 () (_ BitVec 64))
(declare-fun temp41_153 () (_ BitVec 64))
(declare-fun temp41_154 () (_ BitVec 64))
(declare-fun temp41_155 () (_ BitVec 64))
(declare-fun temp41_157 () (_ BitVec 64))
(declare-fun temp41_158 () (_ BitVec 64))
(declare-fun temp41_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp41_159 () (_ BitVec 64))
(declare-fun temp41_160 () (_ BitVec 64))
(declare-fun temp41_162 () (_ BitVec 64))
(declare-fun temp41_163 () (_ BitVec 64))
(declare-fun temp41_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp41_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp41_165 () (_ BitVec 64))
(declare-fun temp41_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp41_167 () (_ BitVec 64))
(declare-fun temp41_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp41_169 () (_ BitVec 64))
(declare-fun temp41_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp41_171 () (_ BitVec 64))
(declare-fun temp41_172 () (_ BitVec 64))
(declare-fun temp41_173 () (_ BitVec 64))
(declare-fun temp41_174 () (_ BitVec 64))
(declare-fun temp41_175 () (_ BitVec 64))
(declare-fun temp41_176 () (_ BitVec 64))
(declare-fun temp41_177 () (_ BitVec 64))
(declare-fun temp41_178 () (_ BitVec 64))
(declare-fun temp41_179 () (_ BitVec 64))
(declare-fun temp41_180 () (_ BitVec 64))
(declare-fun temp41_181 () (_ BitVec 64))
(declare-fun temp41_182 () (_ BitVec 64))
(declare-fun temp41_183 () (_ BitVec 64))
(declare-fun temp41_184 () (_ BitVec 64))
(declare-fun temp41_185 () (_ BitVec 64))
(declare-fun temp41_186 () (_ BitVec 64))
(declare-fun temp41_187 () (_ BitVec 64))
(declare-fun temp41_188 () (_ BitVec 64))
(declare-fun temp41_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp41_190 () (_ BitVec 64))
(declare-fun temp41_192 () (_ BitVec 64))
(declare-fun temp41_193 () (_ BitVec 64))
(declare-fun temp41_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp41_194 () (_ BitVec 64))
(declare-fun temp41_195 () (_ BitVec 64))
(declare-fun temp41_197 () (_ BitVec 64))
(declare-fun temp41_198 () (_ BitVec 64))
(declare-fun temp41_196 () (_ BitVec 64))
(declare-fun temp41_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp41_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp41_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp41_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp41_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp41_204 () (_ BitVec 64))
(declare-fun temp41_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp41_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp41_207 () (_ BitVec 64))
(declare-fun temp41_208 () (_ BitVec 64))
(declare-fun temp41_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp41_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp41_211 () (_ BitVec 64))
(declare-fun temp41_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp41_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp41_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp41_215 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5717837 () (_ BitVec 64))
(declare-fun temp41_216 () (_ BitVec 64))
(assert (= temp41_1 #x0000000000000001))
(assert (= var77203 temp41_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp41_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp41_2)))
(assert (= temp41_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp41_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp41_4 #x0000000000000000))
(assert (= var210941 temp41_4))
(assert (= temp41_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp41_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp41_6 #x0000000000000000))
(assert (= var210986 temp41_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp41_7 #x0000000000000000))
(assert (= temp41_8 temp41_7))
(assert (= temp41_9 (select ARGNAME_padding_NAMEEND_VAL temp41_8)))
(assert (= temp41_10 #x0000000000000001))
(assert (= temp41_11 temp41_10))
(assert (= temp41_12 (select ARGNAME_padding_NAMEEND_VAL temp41_11)))
(assert (= temp41_13 #x0000000000000002))
(assert (= temp41_14 temp41_13))
(assert (= temp41_15 (select ARGNAME_padding_NAMEEND_VAL temp41_14)))
(assert (= temp41_16 #x0000000000000003))
(assert (= temp41_17 temp41_16))
(assert (= temp41_18 (select ARGNAME_padding_NAMEEND_VAL temp41_17)))
(assert (= temp41_19 #x0000000000000004))
(assert (= temp41_20 temp41_19))
(assert (= temp41_21 (select ARGNAME_padding_NAMEEND_VAL temp41_20)))
(assert (= temp41_22 #x0000000000000005))
(assert (= temp41_23 temp41_22))
(assert (= temp41_24 (select ARGNAME_padding_NAMEEND_VAL temp41_23)))
(assert (= temp41_25 #x0000000000000000))
(assert (= temp41_26 #x0000000000000000))
(assert (= temp41_27 temp41_26))
(assert (= temp41_28 (select ARGNAME_padding_NAMEEND_VAL temp41_27)))
(assert (= temp41_29 #x0000000000000000))
(assert (= temp41_30 #x0000000000000001))
(assert (= temp41_31 temp41_30))
(assert (= temp41_32 (select ARGNAME_padding_NAMEEND_VAL temp41_31)))
(assert (= temp41_33 #x0000000000000000))
(assert (= temp41_34 #x0000000000000002))
(assert (= temp41_35 temp41_34))
(assert (= temp41_36 (select ARGNAME_padding_NAMEEND_VAL temp41_35)))
(assert (= temp41_37 #x0000000000000000))
(assert (= temp41_38 #x0000000000000003))
(assert (= temp41_39 temp41_38))
(assert (= temp41_40 (select ARGNAME_padding_NAMEEND_VAL temp41_39)))
(assert (= temp41_41 #x0000000000000000))
(assert (= temp41_42 #x0000000000000004))
(assert (= temp41_43 temp41_42))
(assert (= temp41_44 (select ARGNAME_padding_NAMEEND_VAL temp41_43)))
(assert (= temp41_45 #x0000000000000000))
(assert (= temp41_46 #x0000000000000005))
(assert (= temp41_47 temp41_46))
(assert (= temp41_48 (select ARGNAME_padding_NAMEEND_VAL temp41_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp41_28 temp41_25)
             (bvslt temp41_32 temp41_29)
             (bvslt temp41_36 temp41_33)
             (bvslt temp41_40 temp41_37)
             (bvslt temp41_44 temp41_41)
             (bvslt temp41_48 temp41_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp41_49 #x0000000000000000))
(assert (= var1191714 temp41_49))
(assert (= temp41_50 #x0000000000000000))
(assert (= temp41_51 temp41_50))
(assert (= temp41_52 (select ARGNAME_output_padding_NAMEEND_VAL temp41_51)))
(assert (= temp41_53 #x0000000000000001))
(assert (= temp41_54 temp41_53))
(assert (= temp41_55 (select ARGNAME_output_padding_NAMEEND_VAL temp41_54)))
(assert (= temp41_56 #x0000000000000002))
(assert (= temp41_57 temp41_56))
(assert (= temp41_58 (select ARGNAME_output_padding_NAMEEND_VAL temp41_57)))
(assert (= temp41_59 #x0000000000000003))
(assert (= temp41_60 temp41_59))
(assert (= temp41_61 (select ARGNAME_output_padding_NAMEEND_VAL temp41_60)))
(assert (= temp41_62 #x0000000000000004))
(assert (= temp41_63 temp41_62))
(assert (= temp41_64 (select ARGNAME_output_padding_NAMEEND_VAL temp41_63)))
(assert (= temp41_65 #x0000000000000005))
(assert (= temp41_66 temp41_65))
(assert (= temp41_67 (select ARGNAME_output_padding_NAMEEND_VAL temp41_66)))
(assert (= temp41_68 #x0000000000000000))
(assert (= temp41_69 #x0000000000000000))
(assert (= temp41_70 temp41_69))
(assert (= temp41_71 (select ARGNAME_output_padding_NAMEEND_VAL temp41_70)))
(assert (= temp41_72 #x0000000000000000))
(assert (= temp41_73 #x0000000000000001))
(assert (= temp41_74 temp41_73))
(assert (= temp41_75 (select ARGNAME_output_padding_NAMEEND_VAL temp41_74)))
(assert (= temp41_76 #x0000000000000000))
(assert (= temp41_77 #x0000000000000002))
(assert (= temp41_78 temp41_77))
(assert (= temp41_79 (select ARGNAME_output_padding_NAMEEND_VAL temp41_78)))
(assert (= temp41_80 #x0000000000000000))
(assert (= temp41_81 #x0000000000000003))
(assert (= temp41_82 temp41_81))
(assert (= temp41_83 (select ARGNAME_output_padding_NAMEEND_VAL temp41_82)))
(assert (= temp41_84 #x0000000000000000))
(assert (= temp41_85 #x0000000000000004))
(assert (= temp41_86 temp41_85))
(assert (= temp41_87 (select ARGNAME_output_padding_NAMEEND_VAL temp41_86)))
(assert (= temp41_88 #x0000000000000000))
(assert (= temp41_89 #x0000000000000005))
(assert (= temp41_90 temp41_89))
(assert (= temp41_91 (select ARGNAME_output_padding_NAMEEND_VAL temp41_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp41_71 temp41_68)
             (bvslt temp41_75 temp41_72)
             (bvslt temp41_79 temp41_76)
             (bvslt temp41_83 temp41_80)
             (bvslt temp41_87 temp41_84)
             (bvslt temp41_91 temp41_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp41_92 #x0000000000000000))
(assert (= var1191725 temp41_92))
(assert (= temp41_93 #x0000000000000000))
(assert (= temp41_94 temp41_93))
(assert (= temp41_95 (select ARGNAME_stride_NAMEEND_VAL temp41_94)))
(assert (= temp41_96 #x0000000000000001))
(assert (= temp41_97 temp41_96))
(assert (= temp41_98 (select ARGNAME_stride_NAMEEND_VAL temp41_97)))
(assert (= temp41_99 #x0000000000000002))
(assert (= temp41_100 temp41_99))
(assert (= temp41_101 (select ARGNAME_stride_NAMEEND_VAL temp41_100)))
(assert (= temp41_102 #x0000000000000003))
(assert (= temp41_103 temp41_102))
(assert (= temp41_104 (select ARGNAME_stride_NAMEEND_VAL temp41_103)))
(assert (= temp41_105 #x0000000000000004))
(assert (= temp41_106 temp41_105))
(assert (= temp41_107 (select ARGNAME_stride_NAMEEND_VAL temp41_106)))
(assert (= temp41_108 #x0000000000000005))
(assert (= temp41_109 temp41_108))
(assert (= temp41_110 (select ARGNAME_stride_NAMEEND_VAL temp41_109)))
(assert (= temp41_111 #x0000000000000000))
(assert (= temp41_112 #x0000000000000000))
(assert (= temp41_113 temp41_112))
(assert (= temp41_114 (select ARGNAME_stride_NAMEEND_VAL temp41_113)))
(assert (= temp41_115 #x0000000000000000))
(assert (= temp41_116 #x0000000000000001))
(assert (= temp41_117 temp41_116))
(assert (= temp41_118 (select ARGNAME_stride_NAMEEND_VAL temp41_117)))
(assert (= temp41_119 #x0000000000000000))
(assert (= temp41_120 #x0000000000000002))
(assert (= temp41_121 temp41_120))
(assert (= temp41_122 (select ARGNAME_stride_NAMEEND_VAL temp41_121)))
(assert (= temp41_123 #x0000000000000000))
(assert (= temp41_124 #x0000000000000003))
(assert (= temp41_125 temp41_124))
(assert (= temp41_126 (select ARGNAME_stride_NAMEEND_VAL temp41_125)))
(assert (= temp41_127 #x0000000000000000))
(assert (= temp41_128 #x0000000000000004))
(assert (= temp41_129 temp41_128))
(assert (= temp41_130 (select ARGNAME_stride_NAMEEND_VAL temp41_129)))
(assert (= temp41_131 #x0000000000000000))
(assert (= temp41_132 #x0000000000000005))
(assert (= temp41_133 temp41_132))
(assert (= temp41_134 (select ARGNAME_stride_NAMEEND_VAL temp41_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp41_114 temp41_111)
             (bvsle temp41_118 temp41_115)
             (bvsle temp41_122 temp41_119)
             (bvsle temp41_126 temp41_123)
             (bvsle temp41_130 temp41_127)
             (bvsle temp41_134 temp41_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp41_135 #x0000000000000000))
(assert (= var1191735 temp41_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp41_136 #x0000000000000001))
(assert (= var1191747 temp41_136))
(assert (= temp41_137 #x0000000000000000))
(assert (= var1179826 temp41_137))
(assert (= temp41_138 #x0000000000000000))
(assert (= temp41_139 temp41_138))
(assert (= temp41_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp41_139)))
(assert (= temp41_141 #x0000000000000001))
(assert (= temp41_142 temp41_141))
(assert (= temp41_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp41_142)))
(assert (= temp41_144 #x0000000000000002))
(assert (= temp41_145 temp41_144))
(assert (= temp41_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp41_145)))
(assert (= temp41_147 #x0000000000000003))
(assert (= temp41_148 temp41_147))
(assert (= temp41_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp41_148)))
(assert (= temp41_150 #x0000000000000004))
(assert (= temp41_151 temp41_150))
(assert (= temp41_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp41_151)))
(assert (= temp41_153 #x0000000000000005))
(assert (= temp41_154 temp41_153))
(assert (= temp41_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp41_154)))
(assert (= temp41_157 var1179826))
(assert (= temp41_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp41_157)))
(assert (= temp41_156 temp41_158))
(assert (= var1191780
   (ite (bvslt temp41_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp41_159 #x0000000000000000))
(assert (= var1191780 temp41_159))
(assert (= temp41_160 #x0000000000000000))
(assert (= var1179826 temp41_160))
(assert (= temp41_162 var1179826))
(assert (= temp41_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp41_162)))
(assert (= temp41_161 temp41_163))
(assert (= var1191802 (bvsmod temp41_161 ARGNAME_groups_NAMEEND)))
(assert (= temp41_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp41_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp41_165 #x0000000000000001))
(assert (= var1191803 temp41_165))
(assert (= temp41_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp41_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp41_167 #x0000000000000001))
(assert (= var1191823 temp41_167))
(assert (= temp41_168 #x0000000000000001))
(assert (= var1180714 temp41_168))
(assert (= temp41_169 #x0000000000000000))
(assert (= temp41_170 temp41_169))
(assert (= temp41_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp41_170)))
(assert (= temp41_172 #x0000000000000001))
(assert (= temp41_173 temp41_172))
(assert (= temp41_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp41_173)))
(assert (= temp41_175 #x0000000000000002))
(assert (= temp41_176 temp41_175))
(assert (= temp41_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp41_176)))
(assert (= temp41_178 #x0000000000000003))
(assert (= temp41_179 temp41_178))
(assert (= temp41_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp41_179)))
(assert (= temp41_181 #x0000000000000004))
(assert (= temp41_182 temp41_181))
(assert (= temp41_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp41_182)))
(assert (= temp41_184 #x0000000000000005))
(assert (= temp41_185 temp41_184))
(assert (= temp41_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp41_185)))
(assert (= temp41_187 #x0000000000000000))
(assert (= temp41_188
   (ite (bvslt var1180714 temp41_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp41_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp41_188)))
(assert (= var1191831 temp41_189))
(assert (bvslt (ite (bvslt var1180714 temp41_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp41_190 #x0000000000000001))
(assert (= var1180714 temp41_190))
(assert (= temp41_192 var1180714))
(assert (= temp41_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp41_192)))
(assert (= temp41_191 temp41_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp41_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp41_194 #x0000000000000001))
(assert (= var1191836 temp41_194))
(assert (= temp41_195 #x0000000000000000))
(assert (= var1179826 temp41_195))
(assert (= temp41_197 var1179826))
(assert (= temp41_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp41_197)))
(assert (= temp41_196 temp41_198))
(assert (= temp41_199 #x0000000000000002))
(assert (= var1586025 temp41_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp41_200 #x0000000000000001))
(assert (= var1191993 temp41_200))
(assert (= temp41_201 #x0000000000000001))
(assert (= var2700303 temp41_201))
(assert (= temp41_202 #x0000000000000001))
(assert (= var2962447 temp41_202))
(assert (= temp41_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp41_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp41_204 #x0000000000000001))
(assert (= var211058 temp41_204))
(assert (= temp41_205 #x0000000000000001))
(assert (= var211188 temp41_205))
(assert (= var3879401 var211188))
(assert (= temp41_206 #x0000000000000000))
(assert (= var3866802 temp41_206))
(assert (= temp41_207 #x0000000000000000))
(assert (= temp41_208
   (ite (bvslt var3866802 temp41_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp41_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp41_208)))
(assert (= var3879420 temp41_209))
(assert (bvslt (ite (bvslt var3866802 temp41_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp41_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp41_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp41_211 #x0000000000000001))
(assert (= var3879421 temp41_211))
(assert (= temp41_212 #x0000000000000000))
(assert (= var4079423 temp41_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp41_213 #x0000000000000002))
(assert (= var4208259 temp41_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp41_214 #x0000000000000000))
(assert (= var4273820 temp41_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211388 var210913))
(assert (= temp41_215 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp41_215) #x0000000000000001 #x0000000000000000)))
(assert (= var5717837 var211389))
(assert (= temp41_216 #x0000000000000001))
(assert (= var211058 temp41_216))
(model-add temp41_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp41_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp41_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp41_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




