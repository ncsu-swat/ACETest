(declare-fun temp1301_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1301_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1301_3 () (_ BitVec 64))
(declare-fun temp1301_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1301_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1301_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1301_7 () (_ BitVec 64))
(declare-fun temp1301_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1301_9 () (_ BitVec 64))
(declare-fun temp1301_10 () (_ BitVec 64))
(declare-fun temp1301_11 () (_ BitVec 64))
(declare-fun temp1301_12 () (_ BitVec 64))
(declare-fun temp1301_13 () (_ BitVec 64))
(declare-fun temp1301_14 () (_ BitVec 64))
(declare-fun temp1301_15 () (_ BitVec 64))
(declare-fun temp1301_16 () (_ BitVec 64))
(declare-fun temp1301_17 () (_ BitVec 64))
(declare-fun temp1301_18 () (_ BitVec 64))
(declare-fun temp1301_19 () (_ BitVec 64))
(declare-fun temp1301_20 () (_ BitVec 64))
(declare-fun temp1301_21 () (_ BitVec 64))
(declare-fun temp1301_22 () (_ BitVec 64))
(declare-fun temp1301_23 () (_ BitVec 64))
(declare-fun temp1301_24 () (_ BitVec 64))
(declare-fun temp1301_25 () (_ BitVec 64))
(declare-fun temp1301_26 () (_ BitVec 64))
(declare-fun temp1301_27 () (_ BitVec 64))
(declare-fun temp1301_28 () (_ BitVec 64))
(declare-fun temp1301_29 () (_ BitVec 64))
(declare-fun temp1301_30 () (_ BitVec 64))
(declare-fun temp1301_31 () (_ BitVec 64))
(declare-fun temp1301_32 () (_ BitVec 64))
(declare-fun temp1301_33 () (_ BitVec 64))
(declare-fun temp1301_34 () (_ BitVec 64))
(declare-fun temp1301_35 () (_ BitVec 64))
(declare-fun temp1301_36 () (_ BitVec 64))
(declare-fun temp1301_37 () (_ BitVec 64))
(declare-fun temp1301_38 () (_ BitVec 64))
(declare-fun temp1301_39 () (_ BitVec 64))
(declare-fun temp1301_40 () (_ BitVec 64))
(declare-fun temp1301_41 () (_ BitVec 64))
(declare-fun temp1301_42 () (_ BitVec 64))
(declare-fun temp1301_43 () (_ BitVec 64))
(declare-fun temp1301_44 () (_ BitVec 64))
(declare-fun temp1301_45 () (_ BitVec 64))
(declare-fun temp1301_46 () (_ BitVec 64))
(declare-fun temp1301_47 () (_ BitVec 64))
(declare-fun temp1301_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1301_49 () (_ BitVec 64))
(declare-fun temp1301_50 () (_ BitVec 64))
(declare-fun temp1301_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1301_52 () (_ BitVec 64))
(declare-fun temp1301_53 () (_ BitVec 64))
(declare-fun temp1301_54 () (_ BitVec 64))
(declare-fun temp1301_55 () (_ BitVec 64))
(declare-fun temp1301_56 () (_ BitVec 64))
(declare-fun temp1301_57 () (_ BitVec 64))
(declare-fun temp1301_58 () (_ BitVec 64))
(declare-fun temp1301_59 () (_ BitVec 64))
(declare-fun temp1301_60 () (_ BitVec 64))
(declare-fun temp1301_61 () (_ BitVec 64))
(declare-fun temp1301_62 () (_ BitVec 64))
(declare-fun temp1301_63 () (_ BitVec 64))
(declare-fun temp1301_64 () (_ BitVec 64))
(declare-fun temp1301_65 () (_ BitVec 64))
(declare-fun temp1301_66 () (_ BitVec 64))
(declare-fun temp1301_67 () (_ BitVec 64))
(declare-fun temp1301_68 () (_ BitVec 64))
(declare-fun temp1301_69 () (_ BitVec 64))
(declare-fun temp1301_70 () (_ BitVec 64))
(declare-fun temp1301_71 () (_ BitVec 64))
(declare-fun temp1301_72 () (_ BitVec 64))
(declare-fun temp1301_73 () (_ BitVec 64))
(declare-fun temp1301_74 () (_ BitVec 64))
(declare-fun temp1301_75 () (_ BitVec 64))
(declare-fun temp1301_76 () (_ BitVec 64))
(declare-fun temp1301_77 () (_ BitVec 64))
(declare-fun temp1301_78 () (_ BitVec 64))
(declare-fun temp1301_79 () (_ BitVec 64))
(declare-fun temp1301_80 () (_ BitVec 64))
(declare-fun temp1301_81 () (_ BitVec 64))
(declare-fun temp1301_82 () (_ BitVec 64))
(declare-fun temp1301_83 () (_ BitVec 64))
(declare-fun temp1301_84 () (_ BitVec 64))
(declare-fun temp1301_85 () (_ BitVec 64))
(declare-fun temp1301_86 () (_ BitVec 64))
(declare-fun temp1301_87 () (_ BitVec 64))
(declare-fun temp1301_88 () (_ BitVec 64))
(declare-fun temp1301_89 () (_ BitVec 64))
(declare-fun temp1301_90 () (_ BitVec 64))
(declare-fun temp1301_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1301_92 () (_ BitVec 64))
(declare-fun temp1301_93 () (_ BitVec 64))
(declare-fun temp1301_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1301_95 () (_ BitVec 64))
(declare-fun temp1301_96 () (_ BitVec 64))
(declare-fun temp1301_97 () (_ BitVec 64))
(declare-fun temp1301_98 () (_ BitVec 64))
(declare-fun temp1301_99 () (_ BitVec 64))
(declare-fun temp1301_100 () (_ BitVec 64))
(declare-fun temp1301_101 () (_ BitVec 64))
(declare-fun temp1301_102 () (_ BitVec 64))
(declare-fun temp1301_103 () (_ BitVec 64))
(declare-fun temp1301_104 () (_ BitVec 64))
(declare-fun temp1301_105 () (_ BitVec 64))
(declare-fun temp1301_106 () (_ BitVec 64))
(declare-fun temp1301_107 () (_ BitVec 64))
(declare-fun temp1301_108 () (_ BitVec 64))
(declare-fun temp1301_109 () (_ BitVec 64))
(declare-fun temp1301_110 () (_ BitVec 64))
(declare-fun temp1301_111 () (_ BitVec 64))
(declare-fun temp1301_112 () (_ BitVec 64))
(declare-fun temp1301_113 () (_ BitVec 64))
(declare-fun temp1301_114 () (_ BitVec 64))
(declare-fun temp1301_115 () (_ BitVec 64))
(declare-fun temp1301_116 () (_ BitVec 64))
(declare-fun temp1301_117 () (_ BitVec 64))
(declare-fun temp1301_118 () (_ BitVec 64))
(declare-fun temp1301_119 () (_ BitVec 64))
(declare-fun temp1301_120 () (_ BitVec 64))
(declare-fun temp1301_121 () (_ BitVec 64))
(declare-fun temp1301_122 () (_ BitVec 64))
(declare-fun temp1301_123 () (_ BitVec 64))
(declare-fun temp1301_124 () (_ BitVec 64))
(declare-fun temp1301_125 () (_ BitVec 64))
(declare-fun temp1301_126 () (_ BitVec 64))
(declare-fun temp1301_127 () (_ BitVec 64))
(declare-fun temp1301_128 () (_ BitVec 64))
(declare-fun temp1301_129 () (_ BitVec 64))
(declare-fun temp1301_130 () (_ BitVec 64))
(declare-fun temp1301_131 () (_ BitVec 64))
(declare-fun temp1301_132 () (_ BitVec 64))
(declare-fun temp1301_133 () (_ BitVec 64))
(declare-fun temp1301_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1301_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1301_136 () (_ BitVec 64))
(declare-fun temp1301_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1301_138 () (_ BitVec 64))
(declare-fun temp1301_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1301_140 () (_ BitVec 64))
(declare-fun temp1301_141 () (_ BitVec 64))
(declare-fun temp1301_142 () (_ BitVec 64))
(declare-fun temp1301_143 () (_ BitVec 64))
(declare-fun temp1301_144 () (_ BitVec 64))
(declare-fun temp1301_145 () (_ BitVec 64))
(declare-fun temp1301_146 () (_ BitVec 64))
(declare-fun temp1301_147 () (_ BitVec 64))
(declare-fun temp1301_148 () (_ BitVec 64))
(declare-fun temp1301_149 () (_ BitVec 64))
(declare-fun temp1301_150 () (_ BitVec 64))
(declare-fun temp1301_151 () (_ BitVec 64))
(declare-fun temp1301_152 () (_ BitVec 64))
(declare-fun temp1301_153 () (_ BitVec 64))
(declare-fun temp1301_154 () (_ BitVec 64))
(declare-fun temp1301_155 () (_ BitVec 64))
(declare-fun temp1301_157 () (_ BitVec 64))
(declare-fun temp1301_158 () (_ BitVec 64))
(declare-fun temp1301_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1301_159 () (_ BitVec 64))
(declare-fun temp1301_160 () (_ BitVec 64))
(declare-fun temp1301_162 () (_ BitVec 64))
(declare-fun temp1301_163 () (_ BitVec 64))
(declare-fun temp1301_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1301_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1301_165 () (_ BitVec 64))
(declare-fun temp1301_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1301_167 () (_ BitVec 64))
(declare-fun temp1301_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1301_169 () (_ BitVec 64))
(declare-fun temp1301_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1301_171 () (_ BitVec 64))
(declare-fun temp1301_172 () (_ BitVec 64))
(declare-fun temp1301_173 () (_ BitVec 64))
(declare-fun temp1301_174 () (_ BitVec 64))
(declare-fun temp1301_175 () (_ BitVec 64))
(declare-fun temp1301_176 () (_ BitVec 64))
(declare-fun temp1301_177 () (_ BitVec 64))
(declare-fun temp1301_178 () (_ BitVec 64))
(declare-fun temp1301_179 () (_ BitVec 64))
(declare-fun temp1301_180 () (_ BitVec 64))
(declare-fun temp1301_181 () (_ BitVec 64))
(declare-fun temp1301_182 () (_ BitVec 64))
(declare-fun temp1301_183 () (_ BitVec 64))
(declare-fun temp1301_184 () (_ BitVec 64))
(declare-fun temp1301_185 () (_ BitVec 64))
(declare-fun temp1301_186 () (_ BitVec 64))
(declare-fun temp1301_187 () (_ BitVec 64))
(declare-fun temp1301_188 () (_ BitVec 64))
(declare-fun temp1301_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1301_190 () (_ BitVec 64))
(declare-fun temp1301_192 () (_ BitVec 64))
(declare-fun temp1301_193 () (_ BitVec 64))
(declare-fun temp1301_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1301_194 () (_ BitVec 64))
(declare-fun temp1301_195 () (_ BitVec 64))
(declare-fun temp1301_197 () (_ BitVec 64))
(declare-fun temp1301_198 () (_ BitVec 64))
(declare-fun temp1301_196 () (_ BitVec 64))
(declare-fun temp1301_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1301_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1301_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1301_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1301_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1301_204 () (_ BitVec 64))
(declare-fun temp1301_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1301_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1301_207 () (_ BitVec 64))
(declare-fun temp1301_208 () (_ BitVec 64))
(declare-fun temp1301_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1301_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1301_211 () (_ BitVec 64))
(declare-fun temp1301_212 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1301_213 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp1301_214 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp1301_216 () (_ BitVec 64))
(declare-fun temp1301_215 () (_ BitVec 64))
(declare-fun temp1301_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp1301_218 () (_ BitVec 64))
(declare-fun temp1301_219 () (_ BitVec 64))
(declare-fun temp1301_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp1301_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp1301_222 () (_ BitVec 64))
(declare-fun temp1301_224 () (_ BitVec 64))
(declare-fun temp1301_223 () (_ BitVec 64))
(declare-fun temp1301_225 () (_ BitVec 64))
(assert (= temp1301_1 #x0000000000000001))
(assert (= var77203 temp1301_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1301_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1301_2)))
(assert (= temp1301_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1301_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_4 #x0000000000000000))
(assert (= var210941 temp1301_4))
(assert (= temp1301_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1301_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_6 #x0000000000000000))
(assert (= var210986 temp1301_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1301_7 #x0000000000000000))
(assert (= temp1301_8 temp1301_7))
(assert (= temp1301_9 (select ARGNAME_padding_NAMEEND_VAL temp1301_8)))
(assert (= temp1301_10 #x0000000000000001))
(assert (= temp1301_11 temp1301_10))
(assert (= temp1301_12 (select ARGNAME_padding_NAMEEND_VAL temp1301_11)))
(assert (= temp1301_13 #x0000000000000002))
(assert (= temp1301_14 temp1301_13))
(assert (= temp1301_15 (select ARGNAME_padding_NAMEEND_VAL temp1301_14)))
(assert (= temp1301_16 #x0000000000000003))
(assert (= temp1301_17 temp1301_16))
(assert (= temp1301_18 (select ARGNAME_padding_NAMEEND_VAL temp1301_17)))
(assert (= temp1301_19 #x0000000000000004))
(assert (= temp1301_20 temp1301_19))
(assert (= temp1301_21 (select ARGNAME_padding_NAMEEND_VAL temp1301_20)))
(assert (= temp1301_22 #x0000000000000005))
(assert (= temp1301_23 temp1301_22))
(assert (= temp1301_24 (select ARGNAME_padding_NAMEEND_VAL temp1301_23)))
(assert (= temp1301_25 #x0000000000000000))
(assert (= temp1301_26 #x0000000000000000))
(assert (= temp1301_27 temp1301_26))
(assert (= temp1301_28 (select ARGNAME_padding_NAMEEND_VAL temp1301_27)))
(assert (= temp1301_29 #x0000000000000000))
(assert (= temp1301_30 #x0000000000000001))
(assert (= temp1301_31 temp1301_30))
(assert (= temp1301_32 (select ARGNAME_padding_NAMEEND_VAL temp1301_31)))
(assert (= temp1301_33 #x0000000000000000))
(assert (= temp1301_34 #x0000000000000002))
(assert (= temp1301_35 temp1301_34))
(assert (= temp1301_36 (select ARGNAME_padding_NAMEEND_VAL temp1301_35)))
(assert (= temp1301_37 #x0000000000000000))
(assert (= temp1301_38 #x0000000000000003))
(assert (= temp1301_39 temp1301_38))
(assert (= temp1301_40 (select ARGNAME_padding_NAMEEND_VAL temp1301_39)))
(assert (= temp1301_41 #x0000000000000000))
(assert (= temp1301_42 #x0000000000000004))
(assert (= temp1301_43 temp1301_42))
(assert (= temp1301_44 (select ARGNAME_padding_NAMEEND_VAL temp1301_43)))
(assert (= temp1301_45 #x0000000000000000))
(assert (= temp1301_46 #x0000000000000005))
(assert (= temp1301_47 temp1301_46))
(assert (= temp1301_48 (select ARGNAME_padding_NAMEEND_VAL temp1301_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1301_28 temp1301_25)
             (bvslt temp1301_32 temp1301_29)
             (bvslt temp1301_36 temp1301_33)
             (bvslt temp1301_40 temp1301_37)
             (bvslt temp1301_44 temp1301_41)
             (bvslt temp1301_48 temp1301_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_49 #x0000000000000000))
(assert (= var1191714 temp1301_49))
(assert (= temp1301_50 #x0000000000000000))
(assert (= temp1301_51 temp1301_50))
(assert (= temp1301_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1301_51)))
(assert (= temp1301_53 #x0000000000000001))
(assert (= temp1301_54 temp1301_53))
(assert (= temp1301_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1301_54)))
(assert (= temp1301_56 #x0000000000000002))
(assert (= temp1301_57 temp1301_56))
(assert (= temp1301_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1301_57)))
(assert (= temp1301_59 #x0000000000000003))
(assert (= temp1301_60 temp1301_59))
(assert (= temp1301_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1301_60)))
(assert (= temp1301_62 #x0000000000000004))
(assert (= temp1301_63 temp1301_62))
(assert (= temp1301_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1301_63)))
(assert (= temp1301_65 #x0000000000000005))
(assert (= temp1301_66 temp1301_65))
(assert (= temp1301_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1301_66)))
(assert (= temp1301_68 #x0000000000000000))
(assert (= temp1301_69 #x0000000000000000))
(assert (= temp1301_70 temp1301_69))
(assert (= temp1301_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1301_70)))
(assert (= temp1301_72 #x0000000000000000))
(assert (= temp1301_73 #x0000000000000001))
(assert (= temp1301_74 temp1301_73))
(assert (= temp1301_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1301_74)))
(assert (= temp1301_76 #x0000000000000000))
(assert (= temp1301_77 #x0000000000000002))
(assert (= temp1301_78 temp1301_77))
(assert (= temp1301_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1301_78)))
(assert (= temp1301_80 #x0000000000000000))
(assert (= temp1301_81 #x0000000000000003))
(assert (= temp1301_82 temp1301_81))
(assert (= temp1301_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1301_82)))
(assert (= temp1301_84 #x0000000000000000))
(assert (= temp1301_85 #x0000000000000004))
(assert (= temp1301_86 temp1301_85))
(assert (= temp1301_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1301_86)))
(assert (= temp1301_88 #x0000000000000000))
(assert (= temp1301_89 #x0000000000000005))
(assert (= temp1301_90 temp1301_89))
(assert (= temp1301_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1301_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1301_71 temp1301_68)
             (bvslt temp1301_75 temp1301_72)
             (bvslt temp1301_79 temp1301_76)
             (bvslt temp1301_83 temp1301_80)
             (bvslt temp1301_87 temp1301_84)
             (bvslt temp1301_91 temp1301_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_92 #x0000000000000000))
(assert (= var1191725 temp1301_92))
(assert (= temp1301_93 #x0000000000000000))
(assert (= temp1301_94 temp1301_93))
(assert (= temp1301_95 (select ARGNAME_stride_NAMEEND_VAL temp1301_94)))
(assert (= temp1301_96 #x0000000000000001))
(assert (= temp1301_97 temp1301_96))
(assert (= temp1301_98 (select ARGNAME_stride_NAMEEND_VAL temp1301_97)))
(assert (= temp1301_99 #x0000000000000002))
(assert (= temp1301_100 temp1301_99))
(assert (= temp1301_101 (select ARGNAME_stride_NAMEEND_VAL temp1301_100)))
(assert (= temp1301_102 #x0000000000000003))
(assert (= temp1301_103 temp1301_102))
(assert (= temp1301_104 (select ARGNAME_stride_NAMEEND_VAL temp1301_103)))
(assert (= temp1301_105 #x0000000000000004))
(assert (= temp1301_106 temp1301_105))
(assert (= temp1301_107 (select ARGNAME_stride_NAMEEND_VAL temp1301_106)))
(assert (= temp1301_108 #x0000000000000005))
(assert (= temp1301_109 temp1301_108))
(assert (= temp1301_110 (select ARGNAME_stride_NAMEEND_VAL temp1301_109)))
(assert (= temp1301_111 #x0000000000000000))
(assert (= temp1301_112 #x0000000000000000))
(assert (= temp1301_113 temp1301_112))
(assert (= temp1301_114 (select ARGNAME_stride_NAMEEND_VAL temp1301_113)))
(assert (= temp1301_115 #x0000000000000000))
(assert (= temp1301_116 #x0000000000000001))
(assert (= temp1301_117 temp1301_116))
(assert (= temp1301_118 (select ARGNAME_stride_NAMEEND_VAL temp1301_117)))
(assert (= temp1301_119 #x0000000000000000))
(assert (= temp1301_120 #x0000000000000002))
(assert (= temp1301_121 temp1301_120))
(assert (= temp1301_122 (select ARGNAME_stride_NAMEEND_VAL temp1301_121)))
(assert (= temp1301_123 #x0000000000000000))
(assert (= temp1301_124 #x0000000000000003))
(assert (= temp1301_125 temp1301_124))
(assert (= temp1301_126 (select ARGNAME_stride_NAMEEND_VAL temp1301_125)))
(assert (= temp1301_127 #x0000000000000000))
(assert (= temp1301_128 #x0000000000000004))
(assert (= temp1301_129 temp1301_128))
(assert (= temp1301_130 (select ARGNAME_stride_NAMEEND_VAL temp1301_129)))
(assert (= temp1301_131 #x0000000000000000))
(assert (= temp1301_132 #x0000000000000005))
(assert (= temp1301_133 temp1301_132))
(assert (= temp1301_134 (select ARGNAME_stride_NAMEEND_VAL temp1301_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1301_114 temp1301_111)
             (bvsle temp1301_118 temp1301_115)
             (bvsle temp1301_122 temp1301_119)
             (bvsle temp1301_126 temp1301_123)
             (bvsle temp1301_130 temp1301_127)
             (bvsle temp1301_134 temp1301_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_135 #x0000000000000000))
(assert (= var1191735 temp1301_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_136 #x0000000000000001))
(assert (= var1191747 temp1301_136))
(assert (= temp1301_137 #x0000000000000000))
(assert (= var1179826 temp1301_137))
(assert (= temp1301_138 #x0000000000000000))
(assert (= temp1301_139 temp1301_138))
(assert (= temp1301_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_139)))
(assert (= temp1301_141 #x0000000000000001))
(assert (= temp1301_142 temp1301_141))
(assert (= temp1301_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_142)))
(assert (= temp1301_144 #x0000000000000002))
(assert (= temp1301_145 temp1301_144))
(assert (= temp1301_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_145)))
(assert (= temp1301_147 #x0000000000000003))
(assert (= temp1301_148 temp1301_147))
(assert (= temp1301_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_148)))
(assert (= temp1301_150 #x0000000000000004))
(assert (= temp1301_151 temp1301_150))
(assert (= temp1301_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_151)))
(assert (= temp1301_153 #x0000000000000005))
(assert (= temp1301_154 temp1301_153))
(assert (= temp1301_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_154)))
(assert (= temp1301_157 var1179826))
(assert (= temp1301_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_157)))
(assert (= temp1301_156 temp1301_158))
(assert (= var1191780
   (ite (bvslt temp1301_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_159 #x0000000000000000))
(assert (= var1191780 temp1301_159))
(assert (= temp1301_160 #x0000000000000000))
(assert (= var1179826 temp1301_160))
(assert (= temp1301_162 var1179826))
(assert (= temp1301_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_162)))
(assert (= temp1301_161 temp1301_163))
(assert (= var1191802 (bvsmod temp1301_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1301_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1301_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1301_165 #x0000000000000001))
(assert (= var1191803 temp1301_165))
(assert (= temp1301_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1301_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_167 #x0000000000000001))
(assert (= var1191823 temp1301_167))
(assert (= temp1301_168 #x0000000000000001))
(assert (= var1180714 temp1301_168))
(assert (= temp1301_169 #x0000000000000000))
(assert (= temp1301_170 temp1301_169))
(assert (= temp1301_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1301_170)))
(assert (= temp1301_172 #x0000000000000001))
(assert (= temp1301_173 temp1301_172))
(assert (= temp1301_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1301_173)))
(assert (= temp1301_175 #x0000000000000002))
(assert (= temp1301_176 temp1301_175))
(assert (= temp1301_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1301_176)))
(assert (= temp1301_178 #x0000000000000003))
(assert (= temp1301_179 temp1301_178))
(assert (= temp1301_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1301_179)))
(assert (= temp1301_181 #x0000000000000004))
(assert (= temp1301_182 temp1301_181))
(assert (= temp1301_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1301_182)))
(assert (= temp1301_184 #x0000000000000005))
(assert (= temp1301_185 temp1301_184))
(assert (= temp1301_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1301_185)))
(assert (= temp1301_187 #x0000000000000000))
(assert (= temp1301_188
   (ite (bvslt var1180714 temp1301_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1301_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1301_188)))
(assert (= var1191831 temp1301_189))
(assert (bvslt (ite (bvslt var1180714 temp1301_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1301_190 #x0000000000000001))
(assert (= var1180714 temp1301_190))
(assert (= temp1301_192 var1180714))
(assert (= temp1301_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_192)))
(assert (= temp1301_191 temp1301_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1301_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1301_194 #x0000000000000001))
(assert (= var1191836 temp1301_194))
(assert (= temp1301_195 #x0000000000000000))
(assert (= var1179826 temp1301_195))
(assert (= temp1301_197 var1179826))
(assert (= temp1301_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_197)))
(assert (= temp1301_196 temp1301_198))
(assert (= temp1301_199 #x0000000000000002))
(assert (= var1586025 temp1301_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1301_200 #x0000000000000001))
(assert (= var1191993 temp1301_200))
(assert (= temp1301_201 #x0000000000000001))
(assert (= var2700303 temp1301_201))
(assert (= temp1301_202 #x0000000000000001))
(assert (= var2962447 temp1301_202))
(assert (= temp1301_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1301_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_204 #x0000000000000001))
(assert (= var211058 temp1301_204))
(assert (= temp1301_205 #x0000000000000001))
(assert (= var211188 temp1301_205))
(assert (= var3879401 var211188))
(assert (= temp1301_206 #x0000000000000000))
(assert (= var3866802 temp1301_206))
(assert (= temp1301_207 #x0000000000000000))
(assert (= temp1301_208
   (ite (bvslt var3866802 temp1301_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1301_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1301_208)))
(assert (= var3879420 temp1301_209))
(assert (bvslt (ite (bvslt var3866802 temp1301_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1301_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1301_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1301_211 #x0000000000000001))
(assert (= var3879421 temp1301_211))
(assert (= temp1301_212 #x0000000000000000))
(assert (= var4133117 temp1301_212))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1301_213 #x0000000000000002))
(assert (= var4339331 temp1301_213))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_214 #x0000000000000000))
(assert (= var4404892 temp1301_214))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp1301_216 #xffffffffffffffff))
(assert (= temp1301_215 temp1301_216))
(assert (= temp1301_217 #x0000000000000001))
(assert (= var197674 temp1301_217))
(assert (= temp1301_218 #x0000000000000000))
(assert (= temp1301_219
   (ite (bvslt var197674 temp1301_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp1301_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp1301_219)))
(assert (= var211595 temp1301_220))
(assert (bvslt (ite (bvslt var197674 temp1301_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1301_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp1301_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp1301_222 #x0000000000000001))
(assert (= var211596 temp1301_222))
(assert (= temp1301_224 #xffffffffffffffff))
(assert (= temp1301_223 temp1301_224))
(assert (= temp1301_225 #x0000000000000001))
(assert (= var211058 temp1301_225))
(model-add temp1301_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1301_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1301_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1301_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





