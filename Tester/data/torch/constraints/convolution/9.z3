(declare-fun temp12_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp12_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp12_3 () (_ BitVec 64))
(declare-fun temp12_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp12_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp12_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp12_7 () (_ BitVec 64))
(declare-fun temp12_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp12_9 () (_ BitVec 64))
(declare-fun temp12_10 () (_ BitVec 64))
(declare-fun temp12_11 () (_ BitVec 64))
(declare-fun temp12_12 () (_ BitVec 64))
(declare-fun temp12_13 () (_ BitVec 64))
(declare-fun temp12_14 () (_ BitVec 64))
(declare-fun temp12_15 () (_ BitVec 64))
(declare-fun temp12_16 () (_ BitVec 64))
(declare-fun temp12_17 () (_ BitVec 64))
(declare-fun temp12_18 () (_ BitVec 64))
(declare-fun temp12_19 () (_ BitVec 64))
(declare-fun temp12_20 () (_ BitVec 64))
(declare-fun temp12_21 () (_ BitVec 64))
(declare-fun temp12_22 () (_ BitVec 64))
(declare-fun temp12_23 () (_ BitVec 64))
(declare-fun temp12_24 () (_ BitVec 64))
(declare-fun temp12_25 () (_ BitVec 64))
(declare-fun temp12_26 () (_ BitVec 64))
(declare-fun temp12_27 () (_ BitVec 64))
(declare-fun temp12_28 () (_ BitVec 64))
(declare-fun temp12_29 () (_ BitVec 64))
(declare-fun temp12_30 () (_ BitVec 64))
(declare-fun temp12_31 () (_ BitVec 64))
(declare-fun temp12_32 () (_ BitVec 64))
(declare-fun temp12_33 () (_ BitVec 64))
(declare-fun temp12_34 () (_ BitVec 64))
(declare-fun temp12_35 () (_ BitVec 64))
(declare-fun temp12_36 () (_ BitVec 64))
(declare-fun temp12_37 () (_ BitVec 64))
(declare-fun temp12_38 () (_ BitVec 64))
(declare-fun temp12_39 () (_ BitVec 64))
(declare-fun temp12_40 () (_ BitVec 64))
(declare-fun temp12_41 () (_ BitVec 64))
(declare-fun temp12_42 () (_ BitVec 64))
(declare-fun temp12_43 () (_ BitVec 64))
(declare-fun temp12_44 () (_ BitVec 64))
(declare-fun temp12_45 () (_ BitVec 64))
(declare-fun temp12_46 () (_ BitVec 64))
(declare-fun temp12_47 () (_ BitVec 64))
(declare-fun temp12_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp12_49 () (_ BitVec 64))
(declare-fun temp12_50 () (_ BitVec 64))
(declare-fun temp12_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp12_52 () (_ BitVec 64))
(declare-fun temp12_53 () (_ BitVec 64))
(declare-fun temp12_54 () (_ BitVec 64))
(declare-fun temp12_55 () (_ BitVec 64))
(declare-fun temp12_56 () (_ BitVec 64))
(declare-fun temp12_57 () (_ BitVec 64))
(declare-fun temp12_58 () (_ BitVec 64))
(declare-fun temp12_59 () (_ BitVec 64))
(declare-fun temp12_60 () (_ BitVec 64))
(declare-fun temp12_61 () (_ BitVec 64))
(declare-fun temp12_62 () (_ BitVec 64))
(declare-fun temp12_63 () (_ BitVec 64))
(declare-fun temp12_64 () (_ BitVec 64))
(declare-fun temp12_65 () (_ BitVec 64))
(declare-fun temp12_66 () (_ BitVec 64))
(declare-fun temp12_67 () (_ BitVec 64))
(declare-fun temp12_68 () (_ BitVec 64))
(declare-fun temp12_69 () (_ BitVec 64))
(declare-fun temp12_70 () (_ BitVec 64))
(declare-fun temp12_71 () (_ BitVec 64))
(declare-fun temp12_72 () (_ BitVec 64))
(declare-fun temp12_73 () (_ BitVec 64))
(declare-fun temp12_74 () (_ BitVec 64))
(declare-fun temp12_75 () (_ BitVec 64))
(declare-fun temp12_76 () (_ BitVec 64))
(declare-fun temp12_77 () (_ BitVec 64))
(declare-fun temp12_78 () (_ BitVec 64))
(declare-fun temp12_79 () (_ BitVec 64))
(declare-fun temp12_80 () (_ BitVec 64))
(declare-fun temp12_81 () (_ BitVec 64))
(declare-fun temp12_82 () (_ BitVec 64))
(declare-fun temp12_83 () (_ BitVec 64))
(declare-fun temp12_84 () (_ BitVec 64))
(declare-fun temp12_85 () (_ BitVec 64))
(declare-fun temp12_86 () (_ BitVec 64))
(declare-fun temp12_87 () (_ BitVec 64))
(declare-fun temp12_88 () (_ BitVec 64))
(declare-fun temp12_89 () (_ BitVec 64))
(declare-fun temp12_90 () (_ BitVec 64))
(declare-fun temp12_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp12_92 () (_ BitVec 64))
(declare-fun temp12_93 () (_ BitVec 64))
(declare-fun temp12_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp12_95 () (_ BitVec 64))
(declare-fun temp12_96 () (_ BitVec 64))
(declare-fun temp12_97 () (_ BitVec 64))
(declare-fun temp12_98 () (_ BitVec 64))
(declare-fun temp12_99 () (_ BitVec 64))
(declare-fun temp12_100 () (_ BitVec 64))
(declare-fun temp12_101 () (_ BitVec 64))
(declare-fun temp12_102 () (_ BitVec 64))
(declare-fun temp12_103 () (_ BitVec 64))
(declare-fun temp12_104 () (_ BitVec 64))
(declare-fun temp12_105 () (_ BitVec 64))
(declare-fun temp12_106 () (_ BitVec 64))
(declare-fun temp12_107 () (_ BitVec 64))
(declare-fun temp12_108 () (_ BitVec 64))
(declare-fun temp12_109 () (_ BitVec 64))
(declare-fun temp12_110 () (_ BitVec 64))
(declare-fun temp12_111 () (_ BitVec 64))
(declare-fun temp12_112 () (_ BitVec 64))
(declare-fun temp12_113 () (_ BitVec 64))
(declare-fun temp12_114 () (_ BitVec 64))
(declare-fun temp12_115 () (_ BitVec 64))
(declare-fun temp12_116 () (_ BitVec 64))
(declare-fun temp12_117 () (_ BitVec 64))
(declare-fun temp12_118 () (_ BitVec 64))
(declare-fun temp12_119 () (_ BitVec 64))
(declare-fun temp12_120 () (_ BitVec 64))
(declare-fun temp12_121 () (_ BitVec 64))
(declare-fun temp12_122 () (_ BitVec 64))
(declare-fun temp12_123 () (_ BitVec 64))
(declare-fun temp12_124 () (_ BitVec 64))
(declare-fun temp12_125 () (_ BitVec 64))
(declare-fun temp12_126 () (_ BitVec 64))
(declare-fun temp12_127 () (_ BitVec 64))
(declare-fun temp12_128 () (_ BitVec 64))
(declare-fun temp12_129 () (_ BitVec 64))
(declare-fun temp12_130 () (_ BitVec 64))
(declare-fun temp12_131 () (_ BitVec 64))
(declare-fun temp12_132 () (_ BitVec 64))
(declare-fun temp12_133 () (_ BitVec 64))
(declare-fun temp12_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp12_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp12_136 () (_ BitVec 64))
(declare-fun temp12_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp12_138 () (_ BitVec 64))
(declare-fun temp12_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp12_140 () (_ BitVec 64))
(declare-fun temp12_141 () (_ BitVec 64))
(declare-fun temp12_142 () (_ BitVec 64))
(declare-fun temp12_143 () (_ BitVec 64))
(declare-fun temp12_144 () (_ BitVec 64))
(declare-fun temp12_145 () (_ BitVec 64))
(declare-fun temp12_146 () (_ BitVec 64))
(declare-fun temp12_147 () (_ BitVec 64))
(declare-fun temp12_148 () (_ BitVec 64))
(declare-fun temp12_149 () (_ BitVec 64))
(declare-fun temp12_150 () (_ BitVec 64))
(declare-fun temp12_151 () (_ BitVec 64))
(declare-fun temp12_152 () (_ BitVec 64))
(declare-fun temp12_153 () (_ BitVec 64))
(declare-fun temp12_154 () (_ BitVec 64))
(declare-fun temp12_155 () (_ BitVec 64))
(declare-fun temp12_157 () (_ BitVec 64))
(declare-fun temp12_158 () (_ BitVec 64))
(declare-fun temp12_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp12_159 () (_ BitVec 64))
(declare-fun temp12_160 () (_ BitVec 64))
(declare-fun temp12_162 () (_ BitVec 64))
(declare-fun temp12_163 () (_ BitVec 64))
(declare-fun temp12_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp12_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp12_165 () (_ BitVec 64))
(declare-fun temp12_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp12_167 () (_ BitVec 64))
(declare-fun temp12_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp12_169 () (_ BitVec 64))
(declare-fun temp12_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp12_171 () (_ BitVec 64))
(declare-fun temp12_172 () (_ BitVec 64))
(declare-fun temp12_173 () (_ BitVec 64))
(declare-fun temp12_174 () (_ BitVec 64))
(declare-fun temp12_175 () (_ BitVec 64))
(declare-fun temp12_176 () (_ BitVec 64))
(declare-fun temp12_177 () (_ BitVec 64))
(declare-fun temp12_178 () (_ BitVec 64))
(declare-fun temp12_179 () (_ BitVec 64))
(declare-fun temp12_180 () (_ BitVec 64))
(declare-fun temp12_181 () (_ BitVec 64))
(declare-fun temp12_182 () (_ BitVec 64))
(declare-fun temp12_183 () (_ BitVec 64))
(declare-fun temp12_184 () (_ BitVec 64))
(declare-fun temp12_185 () (_ BitVec 64))
(declare-fun temp12_186 () (_ BitVec 64))
(declare-fun temp12_187 () (_ BitVec 64))
(declare-fun temp12_188 () (_ BitVec 64))
(declare-fun temp12_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp12_190 () (_ BitVec 64))
(declare-fun temp12_192 () (_ BitVec 64))
(declare-fun temp12_193 () (_ BitVec 64))
(declare-fun temp12_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp12_194 () (_ BitVec 64))
(declare-fun temp12_195 () (_ BitVec 64))
(declare-fun temp12_197 () (_ BitVec 64))
(declare-fun temp12_198 () (_ BitVec 64))
(declare-fun temp12_196 () (_ BitVec 64))
(declare-fun temp12_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp12_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp12_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp12_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp12_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp12_204 () (_ BitVec 64))
(declare-fun temp12_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp12_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp12_207 () (_ BitVec 64))
(declare-fun temp12_208 () (_ BitVec 64))
(declare-fun temp12_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp12_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp12_211 () (_ BitVec 64))
(declare-fun temp12_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp12_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp12_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp12_215 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun temp12_216 () (_ BitVec 64))
(declare-fun temp12_217 () (_ BitVec 64))
(declare-fun var5845780 () (_ BitVec 64))
(declare-fun var5845747 () (_ BitVec 64))
(declare-fun var5714311 () (_ BitVec 64))
(declare-fun var5714307 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp12_218 () (_ BitVec 64))
(assert (= temp12_1 #x0000000000000001))
(assert (= var77203 temp12_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp12_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp12_2)))
(assert (= temp12_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp12_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp12_4 #x0000000000000000))
(assert (= var210941 temp12_4))
(assert (= temp12_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp12_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp12_6 #x0000000000000000))
(assert (= var210986 temp12_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp12_7 #x0000000000000000))
(assert (= temp12_8 temp12_7))
(assert (= temp12_9 (select ARGNAME_padding_NAMEEND_VAL temp12_8)))
(assert (= temp12_10 #x0000000000000001))
(assert (= temp12_11 temp12_10))
(assert (= temp12_12 (select ARGNAME_padding_NAMEEND_VAL temp12_11)))
(assert (= temp12_13 #x0000000000000002))
(assert (= temp12_14 temp12_13))
(assert (= temp12_15 (select ARGNAME_padding_NAMEEND_VAL temp12_14)))
(assert (= temp12_16 #x0000000000000003))
(assert (= temp12_17 temp12_16))
(assert (= temp12_18 (select ARGNAME_padding_NAMEEND_VAL temp12_17)))
(assert (= temp12_19 #x0000000000000004))
(assert (= temp12_20 temp12_19))
(assert (= temp12_21 (select ARGNAME_padding_NAMEEND_VAL temp12_20)))
(assert (= temp12_22 #x0000000000000005))
(assert (= temp12_23 temp12_22))
(assert (= temp12_24 (select ARGNAME_padding_NAMEEND_VAL temp12_23)))
(assert (= temp12_25 #x0000000000000000))
(assert (= temp12_26 #x0000000000000000))
(assert (= temp12_27 temp12_26))
(assert (= temp12_28 (select ARGNAME_padding_NAMEEND_VAL temp12_27)))
(assert (= temp12_29 #x0000000000000000))
(assert (= temp12_30 #x0000000000000001))
(assert (= temp12_31 temp12_30))
(assert (= temp12_32 (select ARGNAME_padding_NAMEEND_VAL temp12_31)))
(assert (= temp12_33 #x0000000000000000))
(assert (= temp12_34 #x0000000000000002))
(assert (= temp12_35 temp12_34))
(assert (= temp12_36 (select ARGNAME_padding_NAMEEND_VAL temp12_35)))
(assert (= temp12_37 #x0000000000000000))
(assert (= temp12_38 #x0000000000000003))
(assert (= temp12_39 temp12_38))
(assert (= temp12_40 (select ARGNAME_padding_NAMEEND_VAL temp12_39)))
(assert (= temp12_41 #x0000000000000000))
(assert (= temp12_42 #x0000000000000004))
(assert (= temp12_43 temp12_42))
(assert (= temp12_44 (select ARGNAME_padding_NAMEEND_VAL temp12_43)))
(assert (= temp12_45 #x0000000000000000))
(assert (= temp12_46 #x0000000000000005))
(assert (= temp12_47 temp12_46))
(assert (= temp12_48 (select ARGNAME_padding_NAMEEND_VAL temp12_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp12_28 temp12_25)
             (bvslt temp12_32 temp12_29)
             (bvslt temp12_36 temp12_33)
             (bvslt temp12_40 temp12_37)
             (bvslt temp12_44 temp12_41)
             (bvslt temp12_48 temp12_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp12_49 #x0000000000000000))
(assert (= var1191714 temp12_49))
(assert (= temp12_50 #x0000000000000000))
(assert (= temp12_51 temp12_50))
(assert (= temp12_52 (select ARGNAME_output_padding_NAMEEND_VAL temp12_51)))
(assert (= temp12_53 #x0000000000000001))
(assert (= temp12_54 temp12_53))
(assert (= temp12_55 (select ARGNAME_output_padding_NAMEEND_VAL temp12_54)))
(assert (= temp12_56 #x0000000000000002))
(assert (= temp12_57 temp12_56))
(assert (= temp12_58 (select ARGNAME_output_padding_NAMEEND_VAL temp12_57)))
(assert (= temp12_59 #x0000000000000003))
(assert (= temp12_60 temp12_59))
(assert (= temp12_61 (select ARGNAME_output_padding_NAMEEND_VAL temp12_60)))
(assert (= temp12_62 #x0000000000000004))
(assert (= temp12_63 temp12_62))
(assert (= temp12_64 (select ARGNAME_output_padding_NAMEEND_VAL temp12_63)))
(assert (= temp12_65 #x0000000000000005))
(assert (= temp12_66 temp12_65))
(assert (= temp12_67 (select ARGNAME_output_padding_NAMEEND_VAL temp12_66)))
(assert (= temp12_68 #x0000000000000000))
(assert (= temp12_69 #x0000000000000000))
(assert (= temp12_70 temp12_69))
(assert (= temp12_71 (select ARGNAME_output_padding_NAMEEND_VAL temp12_70)))
(assert (= temp12_72 #x0000000000000000))
(assert (= temp12_73 #x0000000000000001))
(assert (= temp12_74 temp12_73))
(assert (= temp12_75 (select ARGNAME_output_padding_NAMEEND_VAL temp12_74)))
(assert (= temp12_76 #x0000000000000000))
(assert (= temp12_77 #x0000000000000002))
(assert (= temp12_78 temp12_77))
(assert (= temp12_79 (select ARGNAME_output_padding_NAMEEND_VAL temp12_78)))
(assert (= temp12_80 #x0000000000000000))
(assert (= temp12_81 #x0000000000000003))
(assert (= temp12_82 temp12_81))
(assert (= temp12_83 (select ARGNAME_output_padding_NAMEEND_VAL temp12_82)))
(assert (= temp12_84 #x0000000000000000))
(assert (= temp12_85 #x0000000000000004))
(assert (= temp12_86 temp12_85))
(assert (= temp12_87 (select ARGNAME_output_padding_NAMEEND_VAL temp12_86)))
(assert (= temp12_88 #x0000000000000000))
(assert (= temp12_89 #x0000000000000005))
(assert (= temp12_90 temp12_89))
(assert (= temp12_91 (select ARGNAME_output_padding_NAMEEND_VAL temp12_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp12_71 temp12_68)
             (bvslt temp12_75 temp12_72)
             (bvslt temp12_79 temp12_76)
             (bvslt temp12_83 temp12_80)
             (bvslt temp12_87 temp12_84)
             (bvslt temp12_91 temp12_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp12_92 #x0000000000000000))
(assert (= var1191725 temp12_92))
(assert (= temp12_93 #x0000000000000000))
(assert (= temp12_94 temp12_93))
(assert (= temp12_95 (select ARGNAME_stride_NAMEEND_VAL temp12_94)))
(assert (= temp12_96 #x0000000000000001))
(assert (= temp12_97 temp12_96))
(assert (= temp12_98 (select ARGNAME_stride_NAMEEND_VAL temp12_97)))
(assert (= temp12_99 #x0000000000000002))
(assert (= temp12_100 temp12_99))
(assert (= temp12_101 (select ARGNAME_stride_NAMEEND_VAL temp12_100)))
(assert (= temp12_102 #x0000000000000003))
(assert (= temp12_103 temp12_102))
(assert (= temp12_104 (select ARGNAME_stride_NAMEEND_VAL temp12_103)))
(assert (= temp12_105 #x0000000000000004))
(assert (= temp12_106 temp12_105))
(assert (= temp12_107 (select ARGNAME_stride_NAMEEND_VAL temp12_106)))
(assert (= temp12_108 #x0000000000000005))
(assert (= temp12_109 temp12_108))
(assert (= temp12_110 (select ARGNAME_stride_NAMEEND_VAL temp12_109)))
(assert (= temp12_111 #x0000000000000000))
(assert (= temp12_112 #x0000000000000000))
(assert (= temp12_113 temp12_112))
(assert (= temp12_114 (select ARGNAME_stride_NAMEEND_VAL temp12_113)))
(assert (= temp12_115 #x0000000000000000))
(assert (= temp12_116 #x0000000000000001))
(assert (= temp12_117 temp12_116))
(assert (= temp12_118 (select ARGNAME_stride_NAMEEND_VAL temp12_117)))
(assert (= temp12_119 #x0000000000000000))
(assert (= temp12_120 #x0000000000000002))
(assert (= temp12_121 temp12_120))
(assert (= temp12_122 (select ARGNAME_stride_NAMEEND_VAL temp12_121)))
(assert (= temp12_123 #x0000000000000000))
(assert (= temp12_124 #x0000000000000003))
(assert (= temp12_125 temp12_124))
(assert (= temp12_126 (select ARGNAME_stride_NAMEEND_VAL temp12_125)))
(assert (= temp12_127 #x0000000000000000))
(assert (= temp12_128 #x0000000000000004))
(assert (= temp12_129 temp12_128))
(assert (= temp12_130 (select ARGNAME_stride_NAMEEND_VAL temp12_129)))
(assert (= temp12_131 #x0000000000000000))
(assert (= temp12_132 #x0000000000000005))
(assert (= temp12_133 temp12_132))
(assert (= temp12_134 (select ARGNAME_stride_NAMEEND_VAL temp12_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp12_114 temp12_111)
             (bvsle temp12_118 temp12_115)
             (bvsle temp12_122 temp12_119)
             (bvsle temp12_126 temp12_123)
             (bvsle temp12_130 temp12_127)
             (bvsle temp12_134 temp12_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp12_135 #x0000000000000000))
(assert (= var1191735 temp12_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp12_136 #x0000000000000001))
(assert (= var1191747 temp12_136))
(assert (= temp12_137 #x0000000000000000))
(assert (= var1179826 temp12_137))
(assert (= temp12_138 #x0000000000000000))
(assert (= temp12_139 temp12_138))
(assert (= temp12_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp12_139)))
(assert (= temp12_141 #x0000000000000001))
(assert (= temp12_142 temp12_141))
(assert (= temp12_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp12_142)))
(assert (= temp12_144 #x0000000000000002))
(assert (= temp12_145 temp12_144))
(assert (= temp12_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp12_145)))
(assert (= temp12_147 #x0000000000000003))
(assert (= temp12_148 temp12_147))
(assert (= temp12_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp12_148)))
(assert (= temp12_150 #x0000000000000004))
(assert (= temp12_151 temp12_150))
(assert (= temp12_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp12_151)))
(assert (= temp12_153 #x0000000000000005))
(assert (= temp12_154 temp12_153))
(assert (= temp12_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp12_154)))
(assert (= temp12_157 var1179826))
(assert (= temp12_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp12_157)))
(assert (= temp12_156 temp12_158))
(assert (= var1191780
   (ite (bvslt temp12_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp12_159 #x0000000000000000))
(assert (= var1191780 temp12_159))
(assert (= temp12_160 #x0000000000000000))
(assert (= var1179826 temp12_160))
(assert (= temp12_162 var1179826))
(assert (= temp12_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp12_162)))
(assert (= temp12_161 temp12_163))
(assert (= var1191802 (bvsmod temp12_161 ARGNAME_groups_NAMEEND)))
(assert (= temp12_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp12_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp12_165 #x0000000000000001))
(assert (= var1191803 temp12_165))
(assert (= temp12_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp12_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp12_167 #x0000000000000001))
(assert (= var1191823 temp12_167))
(assert (= temp12_168 #x0000000000000001))
(assert (= var1180714 temp12_168))
(assert (= temp12_169 #x0000000000000000))
(assert (= temp12_170 temp12_169))
(assert (= temp12_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp12_170)))
(assert (= temp12_172 #x0000000000000001))
(assert (= temp12_173 temp12_172))
(assert (= temp12_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp12_173)))
(assert (= temp12_175 #x0000000000000002))
(assert (= temp12_176 temp12_175))
(assert (= temp12_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp12_176)))
(assert (= temp12_178 #x0000000000000003))
(assert (= temp12_179 temp12_178))
(assert (= temp12_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp12_179)))
(assert (= temp12_181 #x0000000000000004))
(assert (= temp12_182 temp12_181))
(assert (= temp12_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp12_182)))
(assert (= temp12_184 #x0000000000000005))
(assert (= temp12_185 temp12_184))
(assert (= temp12_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp12_185)))
(assert (= temp12_187 #x0000000000000000))
(assert (= temp12_188
   (ite (bvslt var1180714 temp12_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp12_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp12_188)))
(assert (= var1191831 temp12_189))
(assert (bvslt (ite (bvslt var1180714 temp12_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp12_190 #x0000000000000001))
(assert (= var1180714 temp12_190))
(assert (= temp12_192 var1180714))
(assert (= temp12_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp12_192)))
(assert (= temp12_191 temp12_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp12_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp12_194 #x0000000000000001))
(assert (= var1191836 temp12_194))
(assert (= temp12_195 #x0000000000000000))
(assert (= var1179826 temp12_195))
(assert (= temp12_197 var1179826))
(assert (= temp12_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp12_197)))
(assert (= temp12_196 temp12_198))
(assert (= temp12_199 #x0000000000000002))
(assert (= var1586025 temp12_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp12_200 #x0000000000000001))
(assert (= var1191993 temp12_200))
(assert (= temp12_201 #x0000000000000001))
(assert (= var2700303 temp12_201))
(assert (= temp12_202 #x0000000000000001))
(assert (= var2962447 temp12_202))
(assert (= temp12_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp12_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp12_204 #x0000000000000001))
(assert (= var211058 temp12_204))
(assert (= temp12_205 #x0000000000000001))
(assert (= var211188 temp12_205))
(assert (= var3879401 var211188))
(assert (= temp12_206 #x0000000000000000))
(assert (= var3866802 temp12_206))
(assert (= temp12_207 #x0000000000000000))
(assert (= temp12_208
   (ite (bvslt var3866802 temp12_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp12_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp12_208)))
(assert (= var3879420 temp12_209))
(assert (bvslt (ite (bvslt var3866802 temp12_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp12_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp12_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp12_211 #x0000000000000001))
(assert (= var3879421 temp12_211))
(assert (= temp12_212 #x0000000000000000))
(assert (= var4079423 temp12_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp12_213 #x0000000000000002))
(assert (= var4208259 temp12_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp12_214 #x0000000000000000))
(assert (= var4273820 temp12_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp12_215 #x0000000000000000))
(assert (= var4469136 temp12_215))
(assert (= temp12_216 #x0000000000000001))
(assert (= var211058 temp12_216))
(assert (= temp12_217 #x0000000000000000))
(assert (= var5845780 temp12_217))
(assert (= var5845747 var5845780))
(assert (= var5714311 var5845747))
(assert (= var5714307 var5714311))
(assert (= var212669 var5714307))
(assert (= temp12_218 #x0000000000000000))
(assert (= var212669 temp12_218))
(model-add temp12_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp12_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp12_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp12_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






