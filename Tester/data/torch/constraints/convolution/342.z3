(declare-fun temp456_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp456_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp456_3 () (_ BitVec 64))
(declare-fun temp456_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp456_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp456_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp456_7 () (_ BitVec 64))
(declare-fun temp456_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp456_9 () (_ BitVec 64))
(declare-fun temp456_10 () (_ BitVec 64))
(declare-fun temp456_11 () (_ BitVec 64))
(declare-fun temp456_12 () (_ BitVec 64))
(declare-fun temp456_13 () (_ BitVec 64))
(declare-fun temp456_14 () (_ BitVec 64))
(declare-fun temp456_15 () (_ BitVec 64))
(declare-fun temp456_16 () (_ BitVec 64))
(declare-fun temp456_17 () (_ BitVec 64))
(declare-fun temp456_18 () (_ BitVec 64))
(declare-fun temp456_19 () (_ BitVec 64))
(declare-fun temp456_20 () (_ BitVec 64))
(declare-fun temp456_21 () (_ BitVec 64))
(declare-fun temp456_22 () (_ BitVec 64))
(declare-fun temp456_23 () (_ BitVec 64))
(declare-fun temp456_24 () (_ BitVec 64))
(declare-fun temp456_25 () (_ BitVec 64))
(declare-fun temp456_26 () (_ BitVec 64))
(declare-fun temp456_27 () (_ BitVec 64))
(declare-fun temp456_28 () (_ BitVec 64))
(declare-fun temp456_29 () (_ BitVec 64))
(declare-fun temp456_30 () (_ BitVec 64))
(declare-fun temp456_31 () (_ BitVec 64))
(declare-fun temp456_32 () (_ BitVec 64))
(declare-fun temp456_33 () (_ BitVec 64))
(declare-fun temp456_34 () (_ BitVec 64))
(declare-fun temp456_35 () (_ BitVec 64))
(declare-fun temp456_36 () (_ BitVec 64))
(declare-fun temp456_37 () (_ BitVec 64))
(declare-fun temp456_38 () (_ BitVec 64))
(declare-fun temp456_39 () (_ BitVec 64))
(declare-fun temp456_40 () (_ BitVec 64))
(declare-fun temp456_41 () (_ BitVec 64))
(declare-fun temp456_42 () (_ BitVec 64))
(declare-fun temp456_43 () (_ BitVec 64))
(declare-fun temp456_44 () (_ BitVec 64))
(declare-fun temp456_45 () (_ BitVec 64))
(declare-fun temp456_46 () (_ BitVec 64))
(declare-fun temp456_47 () (_ BitVec 64))
(declare-fun temp456_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp456_49 () (_ BitVec 64))
(declare-fun temp456_50 () (_ BitVec 64))
(declare-fun temp456_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp456_52 () (_ BitVec 64))
(declare-fun temp456_53 () (_ BitVec 64))
(declare-fun temp456_54 () (_ BitVec 64))
(declare-fun temp456_55 () (_ BitVec 64))
(declare-fun temp456_56 () (_ BitVec 64))
(declare-fun temp456_57 () (_ BitVec 64))
(declare-fun temp456_58 () (_ BitVec 64))
(declare-fun temp456_59 () (_ BitVec 64))
(declare-fun temp456_60 () (_ BitVec 64))
(declare-fun temp456_61 () (_ BitVec 64))
(declare-fun temp456_62 () (_ BitVec 64))
(declare-fun temp456_63 () (_ BitVec 64))
(declare-fun temp456_64 () (_ BitVec 64))
(declare-fun temp456_65 () (_ BitVec 64))
(declare-fun temp456_66 () (_ BitVec 64))
(declare-fun temp456_67 () (_ BitVec 64))
(declare-fun temp456_68 () (_ BitVec 64))
(declare-fun temp456_69 () (_ BitVec 64))
(declare-fun temp456_70 () (_ BitVec 64))
(declare-fun temp456_71 () (_ BitVec 64))
(declare-fun temp456_72 () (_ BitVec 64))
(declare-fun temp456_73 () (_ BitVec 64))
(declare-fun temp456_74 () (_ BitVec 64))
(declare-fun temp456_75 () (_ BitVec 64))
(declare-fun temp456_76 () (_ BitVec 64))
(declare-fun temp456_77 () (_ BitVec 64))
(declare-fun temp456_78 () (_ BitVec 64))
(declare-fun temp456_79 () (_ BitVec 64))
(declare-fun temp456_80 () (_ BitVec 64))
(declare-fun temp456_81 () (_ BitVec 64))
(declare-fun temp456_82 () (_ BitVec 64))
(declare-fun temp456_83 () (_ BitVec 64))
(declare-fun temp456_84 () (_ BitVec 64))
(declare-fun temp456_85 () (_ BitVec 64))
(declare-fun temp456_86 () (_ BitVec 64))
(declare-fun temp456_87 () (_ BitVec 64))
(declare-fun temp456_88 () (_ BitVec 64))
(declare-fun temp456_89 () (_ BitVec 64))
(declare-fun temp456_90 () (_ BitVec 64))
(declare-fun temp456_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp456_92 () (_ BitVec 64))
(declare-fun temp456_93 () (_ BitVec 64))
(declare-fun temp456_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp456_95 () (_ BitVec 64))
(declare-fun temp456_96 () (_ BitVec 64))
(declare-fun temp456_97 () (_ BitVec 64))
(declare-fun temp456_98 () (_ BitVec 64))
(declare-fun temp456_99 () (_ BitVec 64))
(declare-fun temp456_100 () (_ BitVec 64))
(declare-fun temp456_101 () (_ BitVec 64))
(declare-fun temp456_102 () (_ BitVec 64))
(declare-fun temp456_103 () (_ BitVec 64))
(declare-fun temp456_104 () (_ BitVec 64))
(declare-fun temp456_105 () (_ BitVec 64))
(declare-fun temp456_106 () (_ BitVec 64))
(declare-fun temp456_107 () (_ BitVec 64))
(declare-fun temp456_108 () (_ BitVec 64))
(declare-fun temp456_109 () (_ BitVec 64))
(declare-fun temp456_110 () (_ BitVec 64))
(declare-fun temp456_111 () (_ BitVec 64))
(declare-fun temp456_112 () (_ BitVec 64))
(declare-fun temp456_113 () (_ BitVec 64))
(declare-fun temp456_114 () (_ BitVec 64))
(declare-fun temp456_115 () (_ BitVec 64))
(declare-fun temp456_116 () (_ BitVec 64))
(declare-fun temp456_117 () (_ BitVec 64))
(declare-fun temp456_118 () (_ BitVec 64))
(declare-fun temp456_119 () (_ BitVec 64))
(declare-fun temp456_120 () (_ BitVec 64))
(declare-fun temp456_121 () (_ BitVec 64))
(declare-fun temp456_122 () (_ BitVec 64))
(declare-fun temp456_123 () (_ BitVec 64))
(declare-fun temp456_124 () (_ BitVec 64))
(declare-fun temp456_125 () (_ BitVec 64))
(declare-fun temp456_126 () (_ BitVec 64))
(declare-fun temp456_127 () (_ BitVec 64))
(declare-fun temp456_128 () (_ BitVec 64))
(declare-fun temp456_129 () (_ BitVec 64))
(declare-fun temp456_130 () (_ BitVec 64))
(declare-fun temp456_131 () (_ BitVec 64))
(declare-fun temp456_132 () (_ BitVec 64))
(declare-fun temp456_133 () (_ BitVec 64))
(declare-fun temp456_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp456_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp456_136 () (_ BitVec 64))
(declare-fun temp456_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp456_138 () (_ BitVec 64))
(declare-fun temp456_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp456_140 () (_ BitVec 64))
(declare-fun temp456_141 () (_ BitVec 64))
(declare-fun temp456_142 () (_ BitVec 64))
(declare-fun temp456_143 () (_ BitVec 64))
(declare-fun temp456_144 () (_ BitVec 64))
(declare-fun temp456_145 () (_ BitVec 64))
(declare-fun temp456_146 () (_ BitVec 64))
(declare-fun temp456_147 () (_ BitVec 64))
(declare-fun temp456_148 () (_ BitVec 64))
(declare-fun temp456_149 () (_ BitVec 64))
(declare-fun temp456_150 () (_ BitVec 64))
(declare-fun temp456_151 () (_ BitVec 64))
(declare-fun temp456_152 () (_ BitVec 64))
(declare-fun temp456_153 () (_ BitVec 64))
(declare-fun temp456_154 () (_ BitVec 64))
(declare-fun temp456_155 () (_ BitVec 64))
(declare-fun temp456_157 () (_ BitVec 64))
(declare-fun temp456_158 () (_ BitVec 64))
(declare-fun temp456_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp456_159 () (_ BitVec 64))
(declare-fun temp456_160 () (_ BitVec 64))
(declare-fun temp456_162 () (_ BitVec 64))
(declare-fun temp456_163 () (_ BitVec 64))
(declare-fun temp456_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp456_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp456_165 () (_ BitVec 64))
(declare-fun temp456_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp456_167 () (_ BitVec 64))
(declare-fun temp456_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp456_169 () (_ BitVec 64))
(declare-fun temp456_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp456_171 () (_ BitVec 64))
(declare-fun temp456_172 () (_ BitVec 64))
(declare-fun temp456_173 () (_ BitVec 64))
(declare-fun temp456_174 () (_ BitVec 64))
(declare-fun temp456_175 () (_ BitVec 64))
(declare-fun temp456_176 () (_ BitVec 64))
(declare-fun temp456_177 () (_ BitVec 64))
(declare-fun temp456_178 () (_ BitVec 64))
(declare-fun temp456_179 () (_ BitVec 64))
(declare-fun temp456_180 () (_ BitVec 64))
(declare-fun temp456_181 () (_ BitVec 64))
(declare-fun temp456_182 () (_ BitVec 64))
(declare-fun temp456_183 () (_ BitVec 64))
(declare-fun temp456_184 () (_ BitVec 64))
(declare-fun temp456_185 () (_ BitVec 64))
(declare-fun temp456_186 () (_ BitVec 64))
(declare-fun temp456_187 () (_ BitVec 64))
(declare-fun temp456_188 () (_ BitVec 64))
(declare-fun temp456_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp456_190 () (_ BitVec 64))
(declare-fun temp456_192 () (_ BitVec 64))
(declare-fun temp456_193 () (_ BitVec 64))
(declare-fun temp456_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp456_194 () (_ BitVec 64))
(declare-fun temp456_195 () (_ BitVec 64))
(declare-fun temp456_197 () (_ BitVec 64))
(declare-fun temp456_198 () (_ BitVec 64))
(declare-fun temp456_196 () (_ BitVec 64))
(declare-fun temp456_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp456_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp456_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp456_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp456_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp456_204 () (_ BitVec 64))
(declare-fun temp456_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp456_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp456_207 () (_ BitVec 64))
(declare-fun temp456_208 () (_ BitVec 64))
(declare-fun temp456_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp456_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp456_211 () (_ BitVec 64))
(declare-fun temp456_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp456_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp456_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp456_215 () (_ BitVec 64))
(assert (= temp456_1 #x0000000000000001))
(assert (= var77203 temp456_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp456_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp456_2)))
(assert (= temp456_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp456_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp456_4 #x0000000000000000))
(assert (= var210941 temp456_4))
(assert (= temp456_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp456_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp456_6 #x0000000000000000))
(assert (= var210986 temp456_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp456_7 #x0000000000000000))
(assert (= temp456_8 temp456_7))
(assert (= temp456_9 (select ARGNAME_padding_NAMEEND_VAL temp456_8)))
(assert (= temp456_10 #x0000000000000001))
(assert (= temp456_11 temp456_10))
(assert (= temp456_12 (select ARGNAME_padding_NAMEEND_VAL temp456_11)))
(assert (= temp456_13 #x0000000000000002))
(assert (= temp456_14 temp456_13))
(assert (= temp456_15 (select ARGNAME_padding_NAMEEND_VAL temp456_14)))
(assert (= temp456_16 #x0000000000000003))
(assert (= temp456_17 temp456_16))
(assert (= temp456_18 (select ARGNAME_padding_NAMEEND_VAL temp456_17)))
(assert (= temp456_19 #x0000000000000004))
(assert (= temp456_20 temp456_19))
(assert (= temp456_21 (select ARGNAME_padding_NAMEEND_VAL temp456_20)))
(assert (= temp456_22 #x0000000000000005))
(assert (= temp456_23 temp456_22))
(assert (= temp456_24 (select ARGNAME_padding_NAMEEND_VAL temp456_23)))
(assert (= temp456_25 #x0000000000000000))
(assert (= temp456_26 #x0000000000000000))
(assert (= temp456_27 temp456_26))
(assert (= temp456_28 (select ARGNAME_padding_NAMEEND_VAL temp456_27)))
(assert (= temp456_29 #x0000000000000000))
(assert (= temp456_30 #x0000000000000001))
(assert (= temp456_31 temp456_30))
(assert (= temp456_32 (select ARGNAME_padding_NAMEEND_VAL temp456_31)))
(assert (= temp456_33 #x0000000000000000))
(assert (= temp456_34 #x0000000000000002))
(assert (= temp456_35 temp456_34))
(assert (= temp456_36 (select ARGNAME_padding_NAMEEND_VAL temp456_35)))
(assert (= temp456_37 #x0000000000000000))
(assert (= temp456_38 #x0000000000000003))
(assert (= temp456_39 temp456_38))
(assert (= temp456_40 (select ARGNAME_padding_NAMEEND_VAL temp456_39)))
(assert (= temp456_41 #x0000000000000000))
(assert (= temp456_42 #x0000000000000004))
(assert (= temp456_43 temp456_42))
(assert (= temp456_44 (select ARGNAME_padding_NAMEEND_VAL temp456_43)))
(assert (= temp456_45 #x0000000000000000))
(assert (= temp456_46 #x0000000000000005))
(assert (= temp456_47 temp456_46))
(assert (= temp456_48 (select ARGNAME_padding_NAMEEND_VAL temp456_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp456_28 temp456_25)
             (bvslt temp456_32 temp456_29)
             (bvslt temp456_36 temp456_33)
             (bvslt temp456_40 temp456_37)
             (bvslt temp456_44 temp456_41)
             (bvslt temp456_48 temp456_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp456_49 #x0000000000000000))
(assert (= var1191714 temp456_49))
(assert (= temp456_50 #x0000000000000000))
(assert (= temp456_51 temp456_50))
(assert (= temp456_52 (select ARGNAME_output_padding_NAMEEND_VAL temp456_51)))
(assert (= temp456_53 #x0000000000000001))
(assert (= temp456_54 temp456_53))
(assert (= temp456_55 (select ARGNAME_output_padding_NAMEEND_VAL temp456_54)))
(assert (= temp456_56 #x0000000000000002))
(assert (= temp456_57 temp456_56))
(assert (= temp456_58 (select ARGNAME_output_padding_NAMEEND_VAL temp456_57)))
(assert (= temp456_59 #x0000000000000003))
(assert (= temp456_60 temp456_59))
(assert (= temp456_61 (select ARGNAME_output_padding_NAMEEND_VAL temp456_60)))
(assert (= temp456_62 #x0000000000000004))
(assert (= temp456_63 temp456_62))
(assert (= temp456_64 (select ARGNAME_output_padding_NAMEEND_VAL temp456_63)))
(assert (= temp456_65 #x0000000000000005))
(assert (= temp456_66 temp456_65))
(assert (= temp456_67 (select ARGNAME_output_padding_NAMEEND_VAL temp456_66)))
(assert (= temp456_68 #x0000000000000000))
(assert (= temp456_69 #x0000000000000000))
(assert (= temp456_70 temp456_69))
(assert (= temp456_71 (select ARGNAME_output_padding_NAMEEND_VAL temp456_70)))
(assert (= temp456_72 #x0000000000000000))
(assert (= temp456_73 #x0000000000000001))
(assert (= temp456_74 temp456_73))
(assert (= temp456_75 (select ARGNAME_output_padding_NAMEEND_VAL temp456_74)))
(assert (= temp456_76 #x0000000000000000))
(assert (= temp456_77 #x0000000000000002))
(assert (= temp456_78 temp456_77))
(assert (= temp456_79 (select ARGNAME_output_padding_NAMEEND_VAL temp456_78)))
(assert (= temp456_80 #x0000000000000000))
(assert (= temp456_81 #x0000000000000003))
(assert (= temp456_82 temp456_81))
(assert (= temp456_83 (select ARGNAME_output_padding_NAMEEND_VAL temp456_82)))
(assert (= temp456_84 #x0000000000000000))
(assert (= temp456_85 #x0000000000000004))
(assert (= temp456_86 temp456_85))
(assert (= temp456_87 (select ARGNAME_output_padding_NAMEEND_VAL temp456_86)))
(assert (= temp456_88 #x0000000000000000))
(assert (= temp456_89 #x0000000000000005))
(assert (= temp456_90 temp456_89))
(assert (= temp456_91 (select ARGNAME_output_padding_NAMEEND_VAL temp456_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp456_71 temp456_68)
             (bvslt temp456_75 temp456_72)
             (bvslt temp456_79 temp456_76)
             (bvslt temp456_83 temp456_80)
             (bvslt temp456_87 temp456_84)
             (bvslt temp456_91 temp456_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp456_92 #x0000000000000000))
(assert (= var1191725 temp456_92))
(assert (= temp456_93 #x0000000000000000))
(assert (= temp456_94 temp456_93))
(assert (= temp456_95 (select ARGNAME_stride_NAMEEND_VAL temp456_94)))
(assert (= temp456_96 #x0000000000000001))
(assert (= temp456_97 temp456_96))
(assert (= temp456_98 (select ARGNAME_stride_NAMEEND_VAL temp456_97)))
(assert (= temp456_99 #x0000000000000002))
(assert (= temp456_100 temp456_99))
(assert (= temp456_101 (select ARGNAME_stride_NAMEEND_VAL temp456_100)))
(assert (= temp456_102 #x0000000000000003))
(assert (= temp456_103 temp456_102))
(assert (= temp456_104 (select ARGNAME_stride_NAMEEND_VAL temp456_103)))
(assert (= temp456_105 #x0000000000000004))
(assert (= temp456_106 temp456_105))
(assert (= temp456_107 (select ARGNAME_stride_NAMEEND_VAL temp456_106)))
(assert (= temp456_108 #x0000000000000005))
(assert (= temp456_109 temp456_108))
(assert (= temp456_110 (select ARGNAME_stride_NAMEEND_VAL temp456_109)))
(assert (= temp456_111 #x0000000000000000))
(assert (= temp456_112 #x0000000000000000))
(assert (= temp456_113 temp456_112))
(assert (= temp456_114 (select ARGNAME_stride_NAMEEND_VAL temp456_113)))
(assert (= temp456_115 #x0000000000000000))
(assert (= temp456_116 #x0000000000000001))
(assert (= temp456_117 temp456_116))
(assert (= temp456_118 (select ARGNAME_stride_NAMEEND_VAL temp456_117)))
(assert (= temp456_119 #x0000000000000000))
(assert (= temp456_120 #x0000000000000002))
(assert (= temp456_121 temp456_120))
(assert (= temp456_122 (select ARGNAME_stride_NAMEEND_VAL temp456_121)))
(assert (= temp456_123 #x0000000000000000))
(assert (= temp456_124 #x0000000000000003))
(assert (= temp456_125 temp456_124))
(assert (= temp456_126 (select ARGNAME_stride_NAMEEND_VAL temp456_125)))
(assert (= temp456_127 #x0000000000000000))
(assert (= temp456_128 #x0000000000000004))
(assert (= temp456_129 temp456_128))
(assert (= temp456_130 (select ARGNAME_stride_NAMEEND_VAL temp456_129)))
(assert (= temp456_131 #x0000000000000000))
(assert (= temp456_132 #x0000000000000005))
(assert (= temp456_133 temp456_132))
(assert (= temp456_134 (select ARGNAME_stride_NAMEEND_VAL temp456_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp456_114 temp456_111)
             (bvsle temp456_118 temp456_115)
             (bvsle temp456_122 temp456_119)
             (bvsle temp456_126 temp456_123)
             (bvsle temp456_130 temp456_127)
             (bvsle temp456_134 temp456_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp456_135 #x0000000000000000))
(assert (= var1191735 temp456_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp456_136 #x0000000000000001))
(assert (= var1191747 temp456_136))
(assert (= temp456_137 #x0000000000000000))
(assert (= var1179826 temp456_137))
(assert (= temp456_138 #x0000000000000000))
(assert (= temp456_139 temp456_138))
(assert (= temp456_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp456_139)))
(assert (= temp456_141 #x0000000000000001))
(assert (= temp456_142 temp456_141))
(assert (= temp456_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp456_142)))
(assert (= temp456_144 #x0000000000000002))
(assert (= temp456_145 temp456_144))
(assert (= temp456_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp456_145)))
(assert (= temp456_147 #x0000000000000003))
(assert (= temp456_148 temp456_147))
(assert (= temp456_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp456_148)))
(assert (= temp456_150 #x0000000000000004))
(assert (= temp456_151 temp456_150))
(assert (= temp456_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp456_151)))
(assert (= temp456_153 #x0000000000000005))
(assert (= temp456_154 temp456_153))
(assert (= temp456_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp456_154)))
(assert (= temp456_157 var1179826))
(assert (= temp456_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp456_157)))
(assert (= temp456_156 temp456_158))
(assert (= var1191780
   (ite (bvslt temp456_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp456_159 #x0000000000000000))
(assert (= var1191780 temp456_159))
(assert (= temp456_160 #x0000000000000000))
(assert (= var1179826 temp456_160))
(assert (= temp456_162 var1179826))
(assert (= temp456_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp456_162)))
(assert (= temp456_161 temp456_163))
(assert (= var1191802 (bvsmod temp456_161 ARGNAME_groups_NAMEEND)))
(assert (= temp456_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp456_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp456_165 #x0000000000000001))
(assert (= var1191803 temp456_165))
(assert (= temp456_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp456_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp456_167 #x0000000000000001))
(assert (= var1191823 temp456_167))
(assert (= temp456_168 #x0000000000000001))
(assert (= var1180714 temp456_168))
(assert (= temp456_169 #x0000000000000000))
(assert (= temp456_170 temp456_169))
(assert (= temp456_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_170)))
(assert (= temp456_172 #x0000000000000001))
(assert (= temp456_173 temp456_172))
(assert (= temp456_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_173)))
(assert (= temp456_175 #x0000000000000002))
(assert (= temp456_176 temp456_175))
(assert (= temp456_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_176)))
(assert (= temp456_178 #x0000000000000003))
(assert (= temp456_179 temp456_178))
(assert (= temp456_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_179)))
(assert (= temp456_181 #x0000000000000004))
(assert (= temp456_182 temp456_181))
(assert (= temp456_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_182)))
(assert (= temp456_184 #x0000000000000005))
(assert (= temp456_185 temp456_184))
(assert (= temp456_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_185)))
(assert (= temp456_187 #x0000000000000000))
(assert (= temp456_188
   (ite (bvslt var1180714 temp456_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp456_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_188)))
(assert (= var1191831 temp456_189))
(assert (bvslt (ite (bvslt var1180714 temp456_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp456_190 #x0000000000000001))
(assert (= var1180714 temp456_190))
(assert (= temp456_192 var1180714))
(assert (= temp456_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp456_192)))
(assert (= temp456_191 temp456_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp456_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp456_194 #x0000000000000001))
(assert (= var1191836 temp456_194))
(assert (= temp456_195 #x0000000000000000))
(assert (= var1179826 temp456_195))
(assert (= temp456_197 var1179826))
(assert (= temp456_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp456_197)))
(assert (= temp456_196 temp456_198))
(assert (= temp456_199 #x0000000000000002))
(assert (= var1586025 temp456_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp456_200 #x0000000000000001))
(assert (= var1191993 temp456_200))
(assert (= temp456_201 #x0000000000000001))
(assert (= var2700303 temp456_201))
(assert (= temp456_202 #x0000000000000001))
(assert (= var2962447 temp456_202))
(assert (= temp456_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp456_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp456_204 #x0000000000000001))
(assert (= var211058 temp456_204))
(assert (= temp456_205 #x0000000000000001))
(assert (= var211188 temp456_205))
(assert (= var3879401 var211188))
(assert (= temp456_206 #x0000000000000000))
(assert (= var3866802 temp456_206))
(assert (= temp456_207 #x0000000000000000))
(assert (= temp456_208
   (ite (bvslt var3866802 temp456_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp456_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_208)))
(assert (= var3879420 temp456_209))
(assert (bvslt (ite (bvslt var3866802 temp456_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp456_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp456_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp456_211 #x0000000000000001))
(assert (= var3879421 temp456_211))
(assert (= temp456_212 #x0000000000000000))
(assert (= var4079423 temp456_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp456_213 #x0000000000000002))
(assert (= var4208259 temp456_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp456_214 #x0000000000000000))
(assert (= var4273820 temp456_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp456_215 #x0000000000000001))
(assert (= var211058 temp456_215))
(model-add temp456_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp456_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp456_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp456_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





