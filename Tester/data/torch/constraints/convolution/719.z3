(declare-fun temp958_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp958_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp958_3 () (_ BitVec 64))
(declare-fun temp958_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp958_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp958_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp958_7 () (_ BitVec 64))
(declare-fun temp958_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp958_9 () (_ BitVec 64))
(declare-fun temp958_10 () (_ BitVec 64))
(declare-fun temp958_11 () (_ BitVec 64))
(declare-fun temp958_12 () (_ BitVec 64))
(declare-fun temp958_13 () (_ BitVec 64))
(declare-fun temp958_14 () (_ BitVec 64))
(declare-fun temp958_15 () (_ BitVec 64))
(declare-fun temp958_16 () (_ BitVec 64))
(declare-fun temp958_17 () (_ BitVec 64))
(declare-fun temp958_18 () (_ BitVec 64))
(declare-fun temp958_19 () (_ BitVec 64))
(declare-fun temp958_20 () (_ BitVec 64))
(declare-fun temp958_21 () (_ BitVec 64))
(declare-fun temp958_22 () (_ BitVec 64))
(declare-fun temp958_23 () (_ BitVec 64))
(declare-fun temp958_24 () (_ BitVec 64))
(declare-fun temp958_25 () (_ BitVec 64))
(declare-fun temp958_26 () (_ BitVec 64))
(declare-fun temp958_27 () (_ BitVec 64))
(declare-fun temp958_28 () (_ BitVec 64))
(declare-fun temp958_29 () (_ BitVec 64))
(declare-fun temp958_30 () (_ BitVec 64))
(declare-fun temp958_31 () (_ BitVec 64))
(declare-fun temp958_32 () (_ BitVec 64))
(declare-fun temp958_33 () (_ BitVec 64))
(declare-fun temp958_34 () (_ BitVec 64))
(declare-fun temp958_35 () (_ BitVec 64))
(declare-fun temp958_36 () (_ BitVec 64))
(declare-fun temp958_37 () (_ BitVec 64))
(declare-fun temp958_38 () (_ BitVec 64))
(declare-fun temp958_39 () (_ BitVec 64))
(declare-fun temp958_40 () (_ BitVec 64))
(declare-fun temp958_41 () (_ BitVec 64))
(declare-fun temp958_42 () (_ BitVec 64))
(declare-fun temp958_43 () (_ BitVec 64))
(declare-fun temp958_44 () (_ BitVec 64))
(declare-fun temp958_45 () (_ BitVec 64))
(declare-fun temp958_46 () (_ BitVec 64))
(declare-fun temp958_47 () (_ BitVec 64))
(declare-fun temp958_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp958_49 () (_ BitVec 64))
(declare-fun temp958_50 () (_ BitVec 64))
(declare-fun temp958_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp958_52 () (_ BitVec 64))
(declare-fun temp958_53 () (_ BitVec 64))
(declare-fun temp958_54 () (_ BitVec 64))
(declare-fun temp958_55 () (_ BitVec 64))
(declare-fun temp958_56 () (_ BitVec 64))
(declare-fun temp958_57 () (_ BitVec 64))
(declare-fun temp958_58 () (_ BitVec 64))
(declare-fun temp958_59 () (_ BitVec 64))
(declare-fun temp958_60 () (_ BitVec 64))
(declare-fun temp958_61 () (_ BitVec 64))
(declare-fun temp958_62 () (_ BitVec 64))
(declare-fun temp958_63 () (_ BitVec 64))
(declare-fun temp958_64 () (_ BitVec 64))
(declare-fun temp958_65 () (_ BitVec 64))
(declare-fun temp958_66 () (_ BitVec 64))
(declare-fun temp958_67 () (_ BitVec 64))
(declare-fun temp958_68 () (_ BitVec 64))
(declare-fun temp958_69 () (_ BitVec 64))
(declare-fun temp958_70 () (_ BitVec 64))
(declare-fun temp958_71 () (_ BitVec 64))
(declare-fun temp958_72 () (_ BitVec 64))
(declare-fun temp958_73 () (_ BitVec 64))
(declare-fun temp958_74 () (_ BitVec 64))
(declare-fun temp958_75 () (_ BitVec 64))
(declare-fun temp958_76 () (_ BitVec 64))
(declare-fun temp958_77 () (_ BitVec 64))
(declare-fun temp958_78 () (_ BitVec 64))
(declare-fun temp958_79 () (_ BitVec 64))
(declare-fun temp958_80 () (_ BitVec 64))
(declare-fun temp958_81 () (_ BitVec 64))
(declare-fun temp958_82 () (_ BitVec 64))
(declare-fun temp958_83 () (_ BitVec 64))
(declare-fun temp958_84 () (_ BitVec 64))
(declare-fun temp958_85 () (_ BitVec 64))
(declare-fun temp958_86 () (_ BitVec 64))
(declare-fun temp958_87 () (_ BitVec 64))
(declare-fun temp958_88 () (_ BitVec 64))
(declare-fun temp958_89 () (_ BitVec 64))
(declare-fun temp958_90 () (_ BitVec 64))
(declare-fun temp958_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp958_92 () (_ BitVec 64))
(declare-fun temp958_93 () (_ BitVec 64))
(declare-fun temp958_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp958_95 () (_ BitVec 64))
(declare-fun temp958_96 () (_ BitVec 64))
(declare-fun temp958_97 () (_ BitVec 64))
(declare-fun temp958_98 () (_ BitVec 64))
(declare-fun temp958_99 () (_ BitVec 64))
(declare-fun temp958_100 () (_ BitVec 64))
(declare-fun temp958_101 () (_ BitVec 64))
(declare-fun temp958_102 () (_ BitVec 64))
(declare-fun temp958_103 () (_ BitVec 64))
(declare-fun temp958_104 () (_ BitVec 64))
(declare-fun temp958_105 () (_ BitVec 64))
(declare-fun temp958_106 () (_ BitVec 64))
(declare-fun temp958_107 () (_ BitVec 64))
(declare-fun temp958_108 () (_ BitVec 64))
(declare-fun temp958_109 () (_ BitVec 64))
(declare-fun temp958_110 () (_ BitVec 64))
(declare-fun temp958_111 () (_ BitVec 64))
(declare-fun temp958_112 () (_ BitVec 64))
(declare-fun temp958_113 () (_ BitVec 64))
(declare-fun temp958_114 () (_ BitVec 64))
(declare-fun temp958_115 () (_ BitVec 64))
(declare-fun temp958_116 () (_ BitVec 64))
(declare-fun temp958_117 () (_ BitVec 64))
(declare-fun temp958_118 () (_ BitVec 64))
(declare-fun temp958_119 () (_ BitVec 64))
(declare-fun temp958_120 () (_ BitVec 64))
(declare-fun temp958_121 () (_ BitVec 64))
(declare-fun temp958_122 () (_ BitVec 64))
(declare-fun temp958_123 () (_ BitVec 64))
(declare-fun temp958_124 () (_ BitVec 64))
(declare-fun temp958_125 () (_ BitVec 64))
(declare-fun temp958_126 () (_ BitVec 64))
(declare-fun temp958_127 () (_ BitVec 64))
(declare-fun temp958_128 () (_ BitVec 64))
(declare-fun temp958_129 () (_ BitVec 64))
(declare-fun temp958_130 () (_ BitVec 64))
(declare-fun temp958_131 () (_ BitVec 64))
(declare-fun temp958_132 () (_ BitVec 64))
(declare-fun temp958_133 () (_ BitVec 64))
(declare-fun temp958_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp958_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp958_136 () (_ BitVec 64))
(declare-fun temp958_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp958_138 () (_ BitVec 64))
(declare-fun temp958_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp958_140 () (_ BitVec 64))
(declare-fun temp958_141 () (_ BitVec 64))
(declare-fun temp958_142 () (_ BitVec 64))
(declare-fun temp958_143 () (_ BitVec 64))
(declare-fun temp958_144 () (_ BitVec 64))
(declare-fun temp958_145 () (_ BitVec 64))
(declare-fun temp958_146 () (_ BitVec 64))
(declare-fun temp958_147 () (_ BitVec 64))
(declare-fun temp958_148 () (_ BitVec 64))
(declare-fun temp958_149 () (_ BitVec 64))
(declare-fun temp958_150 () (_ BitVec 64))
(declare-fun temp958_151 () (_ BitVec 64))
(declare-fun temp958_152 () (_ BitVec 64))
(declare-fun temp958_153 () (_ BitVec 64))
(declare-fun temp958_154 () (_ BitVec 64))
(declare-fun temp958_155 () (_ BitVec 64))
(declare-fun temp958_157 () (_ BitVec 64))
(declare-fun temp958_158 () (_ BitVec 64))
(declare-fun temp958_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp958_159 () (_ BitVec 64))
(declare-fun temp958_160 () (_ BitVec 64))
(declare-fun temp958_162 () (_ BitVec 64))
(declare-fun temp958_163 () (_ BitVec 64))
(declare-fun temp958_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp958_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp958_165 () (_ BitVec 64))
(declare-fun temp958_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp958_167 () (_ BitVec 64))
(declare-fun temp958_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp958_169 () (_ BitVec 64))
(declare-fun temp958_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp958_171 () (_ BitVec 64))
(declare-fun temp958_172 () (_ BitVec 64))
(declare-fun temp958_173 () (_ BitVec 64))
(declare-fun temp958_174 () (_ BitVec 64))
(declare-fun temp958_175 () (_ BitVec 64))
(declare-fun temp958_176 () (_ BitVec 64))
(declare-fun temp958_177 () (_ BitVec 64))
(declare-fun temp958_178 () (_ BitVec 64))
(declare-fun temp958_179 () (_ BitVec 64))
(declare-fun temp958_180 () (_ BitVec 64))
(declare-fun temp958_181 () (_ BitVec 64))
(declare-fun temp958_182 () (_ BitVec 64))
(declare-fun temp958_183 () (_ BitVec 64))
(declare-fun temp958_184 () (_ BitVec 64))
(declare-fun temp958_185 () (_ BitVec 64))
(declare-fun temp958_186 () (_ BitVec 64))
(declare-fun temp958_187 () (_ BitVec 64))
(declare-fun temp958_188 () (_ BitVec 64))
(declare-fun temp958_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp958_190 () (_ BitVec 64))
(declare-fun temp958_192 () (_ BitVec 64))
(declare-fun temp958_193 () (_ BitVec 64))
(declare-fun temp958_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp958_194 () (_ BitVec 64))
(declare-fun temp958_195 () (_ BitVec 64))
(declare-fun temp958_197 () (_ BitVec 64))
(declare-fun temp958_198 () (_ BitVec 64))
(declare-fun temp958_196 () (_ BitVec 64))
(declare-fun temp958_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp958_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp958_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp958_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp958_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp958_204 () (_ BitVec 64))
(declare-fun temp958_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp958_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp958_207 () (_ BitVec 64))
(declare-fun temp958_208 () (_ BitVec 64))
(declare-fun temp958_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp958_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp958_211 () (_ BitVec 64))
(declare-fun temp958_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp958_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp958_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun var5845392 () (_ BitVec 64))
(declare-fun temp958_215 () (_ BitVec 64))
(assert (= temp958_1 #x0000000000000001))
(assert (= var77203 temp958_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp958_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp958_2)))
(assert (= temp958_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp958_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp958_4 #x0000000000000000))
(assert (= var210941 temp958_4))
(assert (= temp958_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp958_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp958_6 #x0000000000000000))
(assert (= var210986 temp958_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp958_7 #x0000000000000000))
(assert (= temp958_8 temp958_7))
(assert (= temp958_9 (select ARGNAME_padding_NAMEEND_VAL temp958_8)))
(assert (= temp958_10 #x0000000000000001))
(assert (= temp958_11 temp958_10))
(assert (= temp958_12 (select ARGNAME_padding_NAMEEND_VAL temp958_11)))
(assert (= temp958_13 #x0000000000000002))
(assert (= temp958_14 temp958_13))
(assert (= temp958_15 (select ARGNAME_padding_NAMEEND_VAL temp958_14)))
(assert (= temp958_16 #x0000000000000003))
(assert (= temp958_17 temp958_16))
(assert (= temp958_18 (select ARGNAME_padding_NAMEEND_VAL temp958_17)))
(assert (= temp958_19 #x0000000000000004))
(assert (= temp958_20 temp958_19))
(assert (= temp958_21 (select ARGNAME_padding_NAMEEND_VAL temp958_20)))
(assert (= temp958_22 #x0000000000000005))
(assert (= temp958_23 temp958_22))
(assert (= temp958_24 (select ARGNAME_padding_NAMEEND_VAL temp958_23)))
(assert (= temp958_25 #x0000000000000000))
(assert (= temp958_26 #x0000000000000000))
(assert (= temp958_27 temp958_26))
(assert (= temp958_28 (select ARGNAME_padding_NAMEEND_VAL temp958_27)))
(assert (= temp958_29 #x0000000000000000))
(assert (= temp958_30 #x0000000000000001))
(assert (= temp958_31 temp958_30))
(assert (= temp958_32 (select ARGNAME_padding_NAMEEND_VAL temp958_31)))
(assert (= temp958_33 #x0000000000000000))
(assert (= temp958_34 #x0000000000000002))
(assert (= temp958_35 temp958_34))
(assert (= temp958_36 (select ARGNAME_padding_NAMEEND_VAL temp958_35)))
(assert (= temp958_37 #x0000000000000000))
(assert (= temp958_38 #x0000000000000003))
(assert (= temp958_39 temp958_38))
(assert (= temp958_40 (select ARGNAME_padding_NAMEEND_VAL temp958_39)))
(assert (= temp958_41 #x0000000000000000))
(assert (= temp958_42 #x0000000000000004))
(assert (= temp958_43 temp958_42))
(assert (= temp958_44 (select ARGNAME_padding_NAMEEND_VAL temp958_43)))
(assert (= temp958_45 #x0000000000000000))
(assert (= temp958_46 #x0000000000000005))
(assert (= temp958_47 temp958_46))
(assert (= temp958_48 (select ARGNAME_padding_NAMEEND_VAL temp958_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp958_28 temp958_25)
             (bvslt temp958_32 temp958_29)
             (bvslt temp958_36 temp958_33)
             (bvslt temp958_40 temp958_37)
             (bvslt temp958_44 temp958_41)
             (bvslt temp958_48 temp958_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp958_49 #x0000000000000000))
(assert (= var1191714 temp958_49))
(assert (= temp958_50 #x0000000000000000))
(assert (= temp958_51 temp958_50))
(assert (= temp958_52 (select ARGNAME_output_padding_NAMEEND_VAL temp958_51)))
(assert (= temp958_53 #x0000000000000001))
(assert (= temp958_54 temp958_53))
(assert (= temp958_55 (select ARGNAME_output_padding_NAMEEND_VAL temp958_54)))
(assert (= temp958_56 #x0000000000000002))
(assert (= temp958_57 temp958_56))
(assert (= temp958_58 (select ARGNAME_output_padding_NAMEEND_VAL temp958_57)))
(assert (= temp958_59 #x0000000000000003))
(assert (= temp958_60 temp958_59))
(assert (= temp958_61 (select ARGNAME_output_padding_NAMEEND_VAL temp958_60)))
(assert (= temp958_62 #x0000000000000004))
(assert (= temp958_63 temp958_62))
(assert (= temp958_64 (select ARGNAME_output_padding_NAMEEND_VAL temp958_63)))
(assert (= temp958_65 #x0000000000000005))
(assert (= temp958_66 temp958_65))
(assert (= temp958_67 (select ARGNAME_output_padding_NAMEEND_VAL temp958_66)))
(assert (= temp958_68 #x0000000000000000))
(assert (= temp958_69 #x0000000000000000))
(assert (= temp958_70 temp958_69))
(assert (= temp958_71 (select ARGNAME_output_padding_NAMEEND_VAL temp958_70)))
(assert (= temp958_72 #x0000000000000000))
(assert (= temp958_73 #x0000000000000001))
(assert (= temp958_74 temp958_73))
(assert (= temp958_75 (select ARGNAME_output_padding_NAMEEND_VAL temp958_74)))
(assert (= temp958_76 #x0000000000000000))
(assert (= temp958_77 #x0000000000000002))
(assert (= temp958_78 temp958_77))
(assert (= temp958_79 (select ARGNAME_output_padding_NAMEEND_VAL temp958_78)))
(assert (= temp958_80 #x0000000000000000))
(assert (= temp958_81 #x0000000000000003))
(assert (= temp958_82 temp958_81))
(assert (= temp958_83 (select ARGNAME_output_padding_NAMEEND_VAL temp958_82)))
(assert (= temp958_84 #x0000000000000000))
(assert (= temp958_85 #x0000000000000004))
(assert (= temp958_86 temp958_85))
(assert (= temp958_87 (select ARGNAME_output_padding_NAMEEND_VAL temp958_86)))
(assert (= temp958_88 #x0000000000000000))
(assert (= temp958_89 #x0000000000000005))
(assert (= temp958_90 temp958_89))
(assert (= temp958_91 (select ARGNAME_output_padding_NAMEEND_VAL temp958_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp958_71 temp958_68)
             (bvslt temp958_75 temp958_72)
             (bvslt temp958_79 temp958_76)
             (bvslt temp958_83 temp958_80)
             (bvslt temp958_87 temp958_84)
             (bvslt temp958_91 temp958_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp958_92 #x0000000000000000))
(assert (= var1191725 temp958_92))
(assert (= temp958_93 #x0000000000000000))
(assert (= temp958_94 temp958_93))
(assert (= temp958_95 (select ARGNAME_stride_NAMEEND_VAL temp958_94)))
(assert (= temp958_96 #x0000000000000001))
(assert (= temp958_97 temp958_96))
(assert (= temp958_98 (select ARGNAME_stride_NAMEEND_VAL temp958_97)))
(assert (= temp958_99 #x0000000000000002))
(assert (= temp958_100 temp958_99))
(assert (= temp958_101 (select ARGNAME_stride_NAMEEND_VAL temp958_100)))
(assert (= temp958_102 #x0000000000000003))
(assert (= temp958_103 temp958_102))
(assert (= temp958_104 (select ARGNAME_stride_NAMEEND_VAL temp958_103)))
(assert (= temp958_105 #x0000000000000004))
(assert (= temp958_106 temp958_105))
(assert (= temp958_107 (select ARGNAME_stride_NAMEEND_VAL temp958_106)))
(assert (= temp958_108 #x0000000000000005))
(assert (= temp958_109 temp958_108))
(assert (= temp958_110 (select ARGNAME_stride_NAMEEND_VAL temp958_109)))
(assert (= temp958_111 #x0000000000000000))
(assert (= temp958_112 #x0000000000000000))
(assert (= temp958_113 temp958_112))
(assert (= temp958_114 (select ARGNAME_stride_NAMEEND_VAL temp958_113)))
(assert (= temp958_115 #x0000000000000000))
(assert (= temp958_116 #x0000000000000001))
(assert (= temp958_117 temp958_116))
(assert (= temp958_118 (select ARGNAME_stride_NAMEEND_VAL temp958_117)))
(assert (= temp958_119 #x0000000000000000))
(assert (= temp958_120 #x0000000000000002))
(assert (= temp958_121 temp958_120))
(assert (= temp958_122 (select ARGNAME_stride_NAMEEND_VAL temp958_121)))
(assert (= temp958_123 #x0000000000000000))
(assert (= temp958_124 #x0000000000000003))
(assert (= temp958_125 temp958_124))
(assert (= temp958_126 (select ARGNAME_stride_NAMEEND_VAL temp958_125)))
(assert (= temp958_127 #x0000000000000000))
(assert (= temp958_128 #x0000000000000004))
(assert (= temp958_129 temp958_128))
(assert (= temp958_130 (select ARGNAME_stride_NAMEEND_VAL temp958_129)))
(assert (= temp958_131 #x0000000000000000))
(assert (= temp958_132 #x0000000000000005))
(assert (= temp958_133 temp958_132))
(assert (= temp958_134 (select ARGNAME_stride_NAMEEND_VAL temp958_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp958_114 temp958_111)
             (bvsle temp958_118 temp958_115)
             (bvsle temp958_122 temp958_119)
             (bvsle temp958_126 temp958_123)
             (bvsle temp958_130 temp958_127)
             (bvsle temp958_134 temp958_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp958_135 #x0000000000000000))
(assert (= var1191735 temp958_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp958_136 #x0000000000000001))
(assert (= var1191747 temp958_136))
(assert (= temp958_137 #x0000000000000000))
(assert (= var1179826 temp958_137))
(assert (= temp958_138 #x0000000000000000))
(assert (= temp958_139 temp958_138))
(assert (= temp958_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp958_139)))
(assert (= temp958_141 #x0000000000000001))
(assert (= temp958_142 temp958_141))
(assert (= temp958_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp958_142)))
(assert (= temp958_144 #x0000000000000002))
(assert (= temp958_145 temp958_144))
(assert (= temp958_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp958_145)))
(assert (= temp958_147 #x0000000000000003))
(assert (= temp958_148 temp958_147))
(assert (= temp958_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp958_148)))
(assert (= temp958_150 #x0000000000000004))
(assert (= temp958_151 temp958_150))
(assert (= temp958_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp958_151)))
(assert (= temp958_153 #x0000000000000005))
(assert (= temp958_154 temp958_153))
(assert (= temp958_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp958_154)))
(assert (= temp958_157 var1179826))
(assert (= temp958_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp958_157)))
(assert (= temp958_156 temp958_158))
(assert (= var1191780
   (ite (bvslt temp958_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp958_159 #x0000000000000000))
(assert (= var1191780 temp958_159))
(assert (= temp958_160 #x0000000000000000))
(assert (= var1179826 temp958_160))
(assert (= temp958_162 var1179826))
(assert (= temp958_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp958_162)))
(assert (= temp958_161 temp958_163))
(assert (= var1191802 (bvsmod temp958_161 ARGNAME_groups_NAMEEND)))
(assert (= temp958_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp958_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp958_165 #x0000000000000001))
(assert (= var1191803 temp958_165))
(assert (= temp958_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp958_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp958_167 #x0000000000000001))
(assert (= var1191823 temp958_167))
(assert (= temp958_168 #x0000000000000001))
(assert (= var1180714 temp958_168))
(assert (= temp958_169 #x0000000000000000))
(assert (= temp958_170 temp958_169))
(assert (= temp958_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp958_170)))
(assert (= temp958_172 #x0000000000000001))
(assert (= temp958_173 temp958_172))
(assert (= temp958_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp958_173)))
(assert (= temp958_175 #x0000000000000002))
(assert (= temp958_176 temp958_175))
(assert (= temp958_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp958_176)))
(assert (= temp958_178 #x0000000000000003))
(assert (= temp958_179 temp958_178))
(assert (= temp958_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp958_179)))
(assert (= temp958_181 #x0000000000000004))
(assert (= temp958_182 temp958_181))
(assert (= temp958_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp958_182)))
(assert (= temp958_184 #x0000000000000005))
(assert (= temp958_185 temp958_184))
(assert (= temp958_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp958_185)))
(assert (= temp958_187 #x0000000000000000))
(assert (= temp958_188
   (ite (bvslt var1180714 temp958_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp958_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp958_188)))
(assert (= var1191831 temp958_189))
(assert (bvslt (ite (bvslt var1180714 temp958_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp958_190 #x0000000000000001))
(assert (= var1180714 temp958_190))
(assert (= temp958_192 var1180714))
(assert (= temp958_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp958_192)))
(assert (= temp958_191 temp958_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp958_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp958_194 #x0000000000000001))
(assert (= var1191836 temp958_194))
(assert (= temp958_195 #x0000000000000000))
(assert (= var1179826 temp958_195))
(assert (= temp958_197 var1179826))
(assert (= temp958_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp958_197)))
(assert (= temp958_196 temp958_198))
(assert (= temp958_199 #x0000000000000002))
(assert (= var1586025 temp958_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp958_200 #x0000000000000001))
(assert (= var1191993 temp958_200))
(assert (= temp958_201 #x0000000000000001))
(assert (= var2700303 temp958_201))
(assert (= temp958_202 #x0000000000000001))
(assert (= var2962447 temp958_202))
(assert (= temp958_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp958_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp958_204 #x0000000000000001))
(assert (= var211058 temp958_204))
(assert (= temp958_205 #x0000000000000001))
(assert (= var211188 temp958_205))
(assert (= var3879401 var211188))
(assert (= temp958_206 #x0000000000000000))
(assert (= var3866802 temp958_206))
(assert (= temp958_207 #x0000000000000000))
(assert (= temp958_208
   (ite (bvslt var3866802 temp958_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp958_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp958_208)))
(assert (= var3879420 temp958_209))
(assert (bvslt (ite (bvslt var3866802 temp958_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp958_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp958_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp958_211 #x0000000000000001))
(assert (= var3879421 temp958_211))
(assert (= temp958_212 #x0000000000000000))
(assert (= var4079423 temp958_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp958_213 #x0000000000000002))
(assert (= var4208259 temp958_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp958_214 #x0000000000000000))
(assert (= var4273820 temp958_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5583248 var211201))
(assert (= var5845392 var211201))
(assert (= temp958_215 #x0000000000000001))
(assert (= var211058 temp958_215))
(model-add temp958_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp958_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp958_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp958_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



