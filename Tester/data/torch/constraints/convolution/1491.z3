(declare-fun temp10782_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10782_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10782_3 () (_ BitVec 64))
(declare-fun temp10782_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10782_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10782_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10782_7 () (_ BitVec 64))
(declare-fun temp10782_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10782_9 () (_ BitVec 64))
(declare-fun temp10782_10 () (_ BitVec 64))
(declare-fun temp10782_11 () (_ BitVec 64))
(declare-fun temp10782_12 () (_ BitVec 64))
(declare-fun temp10782_13 () (_ BitVec 64))
(declare-fun temp10782_14 () (_ BitVec 64))
(declare-fun temp10782_15 () (_ BitVec 64))
(declare-fun temp10782_16 () (_ BitVec 64))
(declare-fun temp10782_17 () (_ BitVec 64))
(declare-fun temp10782_18 () (_ BitVec 64))
(declare-fun temp10782_19 () (_ BitVec 64))
(declare-fun temp10782_20 () (_ BitVec 64))
(declare-fun temp10782_21 () (_ BitVec 64))
(declare-fun temp10782_22 () (_ BitVec 64))
(declare-fun temp10782_23 () (_ BitVec 64))
(declare-fun temp10782_24 () (_ BitVec 64))
(declare-fun temp10782_25 () (_ BitVec 64))
(declare-fun temp10782_26 () (_ BitVec 64))
(declare-fun temp10782_27 () (_ BitVec 64))
(declare-fun temp10782_28 () (_ BitVec 64))
(declare-fun temp10782_29 () (_ BitVec 64))
(declare-fun temp10782_30 () (_ BitVec 64))
(declare-fun temp10782_31 () (_ BitVec 64))
(declare-fun temp10782_32 () (_ BitVec 64))
(declare-fun temp10782_33 () (_ BitVec 64))
(declare-fun temp10782_34 () (_ BitVec 64))
(declare-fun temp10782_35 () (_ BitVec 64))
(declare-fun temp10782_36 () (_ BitVec 64))
(declare-fun temp10782_37 () (_ BitVec 64))
(declare-fun temp10782_38 () (_ BitVec 64))
(declare-fun temp10782_39 () (_ BitVec 64))
(declare-fun temp10782_40 () (_ BitVec 64))
(declare-fun temp10782_41 () (_ BitVec 64))
(declare-fun temp10782_42 () (_ BitVec 64))
(declare-fun temp10782_43 () (_ BitVec 64))
(declare-fun temp10782_44 () (_ BitVec 64))
(declare-fun temp10782_45 () (_ BitVec 64))
(declare-fun temp10782_46 () (_ BitVec 64))
(declare-fun temp10782_47 () (_ BitVec 64))
(declare-fun temp10782_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10782_49 () (_ BitVec 64))
(declare-fun temp10782_50 () (_ BitVec 64))
(declare-fun temp10782_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10782_52 () (_ BitVec 64))
(declare-fun temp10782_53 () (_ BitVec 64))
(declare-fun temp10782_54 () (_ BitVec 64))
(declare-fun temp10782_55 () (_ BitVec 64))
(declare-fun temp10782_56 () (_ BitVec 64))
(declare-fun temp10782_57 () (_ BitVec 64))
(declare-fun temp10782_58 () (_ BitVec 64))
(declare-fun temp10782_59 () (_ BitVec 64))
(declare-fun temp10782_60 () (_ BitVec 64))
(declare-fun temp10782_61 () (_ BitVec 64))
(declare-fun temp10782_62 () (_ BitVec 64))
(declare-fun temp10782_63 () (_ BitVec 64))
(declare-fun temp10782_64 () (_ BitVec 64))
(declare-fun temp10782_65 () (_ BitVec 64))
(declare-fun temp10782_66 () (_ BitVec 64))
(declare-fun temp10782_67 () (_ BitVec 64))
(declare-fun temp10782_68 () (_ BitVec 64))
(declare-fun temp10782_69 () (_ BitVec 64))
(declare-fun temp10782_70 () (_ BitVec 64))
(declare-fun temp10782_71 () (_ BitVec 64))
(declare-fun temp10782_72 () (_ BitVec 64))
(declare-fun temp10782_73 () (_ BitVec 64))
(declare-fun temp10782_74 () (_ BitVec 64))
(declare-fun temp10782_75 () (_ BitVec 64))
(declare-fun temp10782_76 () (_ BitVec 64))
(declare-fun temp10782_77 () (_ BitVec 64))
(declare-fun temp10782_78 () (_ BitVec 64))
(declare-fun temp10782_79 () (_ BitVec 64))
(declare-fun temp10782_80 () (_ BitVec 64))
(declare-fun temp10782_81 () (_ BitVec 64))
(declare-fun temp10782_82 () (_ BitVec 64))
(declare-fun temp10782_83 () (_ BitVec 64))
(declare-fun temp10782_84 () (_ BitVec 64))
(declare-fun temp10782_85 () (_ BitVec 64))
(declare-fun temp10782_86 () (_ BitVec 64))
(declare-fun temp10782_87 () (_ BitVec 64))
(declare-fun temp10782_88 () (_ BitVec 64))
(declare-fun temp10782_89 () (_ BitVec 64))
(declare-fun temp10782_90 () (_ BitVec 64))
(declare-fun temp10782_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10782_92 () (_ BitVec 64))
(declare-fun temp10782_93 () (_ BitVec 64))
(declare-fun temp10782_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10782_95 () (_ BitVec 64))
(declare-fun temp10782_96 () (_ BitVec 64))
(declare-fun temp10782_97 () (_ BitVec 64))
(declare-fun temp10782_98 () (_ BitVec 64))
(declare-fun temp10782_99 () (_ BitVec 64))
(declare-fun temp10782_100 () (_ BitVec 64))
(declare-fun temp10782_101 () (_ BitVec 64))
(declare-fun temp10782_102 () (_ BitVec 64))
(declare-fun temp10782_103 () (_ BitVec 64))
(declare-fun temp10782_104 () (_ BitVec 64))
(declare-fun temp10782_105 () (_ BitVec 64))
(declare-fun temp10782_106 () (_ BitVec 64))
(declare-fun temp10782_107 () (_ BitVec 64))
(declare-fun temp10782_108 () (_ BitVec 64))
(declare-fun temp10782_109 () (_ BitVec 64))
(declare-fun temp10782_110 () (_ BitVec 64))
(declare-fun temp10782_111 () (_ BitVec 64))
(declare-fun temp10782_112 () (_ BitVec 64))
(declare-fun temp10782_113 () (_ BitVec 64))
(declare-fun temp10782_114 () (_ BitVec 64))
(declare-fun temp10782_115 () (_ BitVec 64))
(declare-fun temp10782_116 () (_ BitVec 64))
(declare-fun temp10782_117 () (_ BitVec 64))
(declare-fun temp10782_118 () (_ BitVec 64))
(declare-fun temp10782_119 () (_ BitVec 64))
(declare-fun temp10782_120 () (_ BitVec 64))
(declare-fun temp10782_121 () (_ BitVec 64))
(declare-fun temp10782_122 () (_ BitVec 64))
(declare-fun temp10782_123 () (_ BitVec 64))
(declare-fun temp10782_124 () (_ BitVec 64))
(declare-fun temp10782_125 () (_ BitVec 64))
(declare-fun temp10782_126 () (_ BitVec 64))
(declare-fun temp10782_127 () (_ BitVec 64))
(declare-fun temp10782_128 () (_ BitVec 64))
(declare-fun temp10782_129 () (_ BitVec 64))
(declare-fun temp10782_130 () (_ BitVec 64))
(declare-fun temp10782_131 () (_ BitVec 64))
(declare-fun temp10782_132 () (_ BitVec 64))
(declare-fun temp10782_133 () (_ BitVec 64))
(declare-fun temp10782_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10782_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10782_136 () (_ BitVec 64))
(declare-fun temp10782_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10782_138 () (_ BitVec 64))
(declare-fun temp10782_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10782_140 () (_ BitVec 64))
(declare-fun temp10782_141 () (_ BitVec 64))
(declare-fun temp10782_142 () (_ BitVec 64))
(declare-fun temp10782_143 () (_ BitVec 64))
(declare-fun temp10782_144 () (_ BitVec 64))
(declare-fun temp10782_145 () (_ BitVec 64))
(declare-fun temp10782_146 () (_ BitVec 64))
(declare-fun temp10782_147 () (_ BitVec 64))
(declare-fun temp10782_148 () (_ BitVec 64))
(declare-fun temp10782_149 () (_ BitVec 64))
(declare-fun temp10782_150 () (_ BitVec 64))
(declare-fun temp10782_151 () (_ BitVec 64))
(declare-fun temp10782_152 () (_ BitVec 64))
(declare-fun temp10782_153 () (_ BitVec 64))
(declare-fun temp10782_154 () (_ BitVec 64))
(declare-fun temp10782_155 () (_ BitVec 64))
(declare-fun temp10782_157 () (_ BitVec 64))
(declare-fun temp10782_158 () (_ BitVec 64))
(declare-fun temp10782_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10782_159 () (_ BitVec 64))
(declare-fun temp10782_160 () (_ BitVec 64))
(declare-fun temp10782_162 () (_ BitVec 64))
(declare-fun temp10782_163 () (_ BitVec 64))
(declare-fun temp10782_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10782_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10782_165 () (_ BitVec 64))
(declare-fun temp10782_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10782_167 () (_ BitVec 64))
(declare-fun temp10782_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10782_169 () (_ BitVec 64))
(declare-fun temp10782_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10782_171 () (_ BitVec 64))
(declare-fun temp10782_172 () (_ BitVec 64))
(declare-fun temp10782_173 () (_ BitVec 64))
(declare-fun temp10782_174 () (_ BitVec 64))
(declare-fun temp10782_175 () (_ BitVec 64))
(declare-fun temp10782_176 () (_ BitVec 64))
(declare-fun temp10782_177 () (_ BitVec 64))
(declare-fun temp10782_178 () (_ BitVec 64))
(declare-fun temp10782_179 () (_ BitVec 64))
(declare-fun temp10782_180 () (_ BitVec 64))
(declare-fun temp10782_181 () (_ BitVec 64))
(declare-fun temp10782_182 () (_ BitVec 64))
(declare-fun temp10782_183 () (_ BitVec 64))
(declare-fun temp10782_184 () (_ BitVec 64))
(declare-fun temp10782_185 () (_ BitVec 64))
(declare-fun temp10782_186 () (_ BitVec 64))
(declare-fun temp10782_187 () (_ BitVec 64))
(declare-fun temp10782_188 () (_ BitVec 64))
(declare-fun temp10782_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10782_190 () (_ BitVec 64))
(declare-fun temp10782_192 () (_ BitVec 64))
(declare-fun temp10782_193 () (_ BitVec 64))
(declare-fun temp10782_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10782_194 () (_ BitVec 64))
(declare-fun temp10782_195 () (_ BitVec 64))
(declare-fun temp10782_197 () (_ BitVec 64))
(declare-fun temp10782_198 () (_ BitVec 64))
(declare-fun temp10782_196 () (_ BitVec 64))
(declare-fun temp10782_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10782_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10782_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10782_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10782_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10782_204 () (_ BitVec 64))
(declare-fun temp10782_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10782_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10782_207 () (_ BitVec 64))
(declare-fun temp10782_208 () (_ BitVec 64))
(declare-fun temp10782_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10782_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10782_211 () (_ BitVec 64))
(declare-fun temp10782_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10782_213 () (_ BitVec 64))
(declare-fun temp10782_214 () (_ BitVec 64))
(declare-fun temp10782_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10782_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10782_217 () (_ BitVec 64))
(declare-fun temp10782_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10782_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10782_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5190032 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun temp10782_221 () (_ BitVec 64))
(declare-fun var5779856 () (_ BitVec 64))
(declare-fun temp10782_222 () (_ BitVec 64))
(assert (= temp10782_1 #x0000000000000001))
(assert (= var77203 temp10782_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10782_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10782_2)))
(assert (= temp10782_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10782_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10782_4 #x0000000000000000))
(assert (= var210941 temp10782_4))
(assert (= temp10782_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10782_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10782_6 #x0000000000000000))
(assert (= var210986 temp10782_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10782_7 #x0000000000000000))
(assert (= temp10782_8 temp10782_7))
(assert (= temp10782_9 (select ARGNAME_padding_NAMEEND_VAL temp10782_8)))
(assert (= temp10782_10 #x0000000000000001))
(assert (= temp10782_11 temp10782_10))
(assert (= temp10782_12 (select ARGNAME_padding_NAMEEND_VAL temp10782_11)))
(assert (= temp10782_13 #x0000000000000002))
(assert (= temp10782_14 temp10782_13))
(assert (= temp10782_15 (select ARGNAME_padding_NAMEEND_VAL temp10782_14)))
(assert (= temp10782_16 #x0000000000000003))
(assert (= temp10782_17 temp10782_16))
(assert (= temp10782_18 (select ARGNAME_padding_NAMEEND_VAL temp10782_17)))
(assert (= temp10782_19 #x0000000000000004))
(assert (= temp10782_20 temp10782_19))
(assert (= temp10782_21 (select ARGNAME_padding_NAMEEND_VAL temp10782_20)))
(assert (= temp10782_22 #x0000000000000005))
(assert (= temp10782_23 temp10782_22))
(assert (= temp10782_24 (select ARGNAME_padding_NAMEEND_VAL temp10782_23)))
(assert (= temp10782_25 #x0000000000000000))
(assert (= temp10782_26 #x0000000000000000))
(assert (= temp10782_27 temp10782_26))
(assert (= temp10782_28 (select ARGNAME_padding_NAMEEND_VAL temp10782_27)))
(assert (= temp10782_29 #x0000000000000000))
(assert (= temp10782_30 #x0000000000000001))
(assert (= temp10782_31 temp10782_30))
(assert (= temp10782_32 (select ARGNAME_padding_NAMEEND_VAL temp10782_31)))
(assert (= temp10782_33 #x0000000000000000))
(assert (= temp10782_34 #x0000000000000002))
(assert (= temp10782_35 temp10782_34))
(assert (= temp10782_36 (select ARGNAME_padding_NAMEEND_VAL temp10782_35)))
(assert (= temp10782_37 #x0000000000000000))
(assert (= temp10782_38 #x0000000000000003))
(assert (= temp10782_39 temp10782_38))
(assert (= temp10782_40 (select ARGNAME_padding_NAMEEND_VAL temp10782_39)))
(assert (= temp10782_41 #x0000000000000000))
(assert (= temp10782_42 #x0000000000000004))
(assert (= temp10782_43 temp10782_42))
(assert (= temp10782_44 (select ARGNAME_padding_NAMEEND_VAL temp10782_43)))
(assert (= temp10782_45 #x0000000000000000))
(assert (= temp10782_46 #x0000000000000005))
(assert (= temp10782_47 temp10782_46))
(assert (= temp10782_48 (select ARGNAME_padding_NAMEEND_VAL temp10782_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10782_28 temp10782_25)
             (bvslt temp10782_32 temp10782_29)
             (bvslt temp10782_36 temp10782_33)
             (bvslt temp10782_40 temp10782_37)
             (bvslt temp10782_44 temp10782_41)
             (bvslt temp10782_48 temp10782_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10782_49 #x0000000000000000))
(assert (= var1191714 temp10782_49))
(assert (= temp10782_50 #x0000000000000000))
(assert (= temp10782_51 temp10782_50))
(assert (= temp10782_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10782_51)))
(assert (= temp10782_53 #x0000000000000001))
(assert (= temp10782_54 temp10782_53))
(assert (= temp10782_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10782_54)))
(assert (= temp10782_56 #x0000000000000002))
(assert (= temp10782_57 temp10782_56))
(assert (= temp10782_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10782_57)))
(assert (= temp10782_59 #x0000000000000003))
(assert (= temp10782_60 temp10782_59))
(assert (= temp10782_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10782_60)))
(assert (= temp10782_62 #x0000000000000004))
(assert (= temp10782_63 temp10782_62))
(assert (= temp10782_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10782_63)))
(assert (= temp10782_65 #x0000000000000005))
(assert (= temp10782_66 temp10782_65))
(assert (= temp10782_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10782_66)))
(assert (= temp10782_68 #x0000000000000000))
(assert (= temp10782_69 #x0000000000000000))
(assert (= temp10782_70 temp10782_69))
(assert (= temp10782_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10782_70)))
(assert (= temp10782_72 #x0000000000000000))
(assert (= temp10782_73 #x0000000000000001))
(assert (= temp10782_74 temp10782_73))
(assert (= temp10782_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10782_74)))
(assert (= temp10782_76 #x0000000000000000))
(assert (= temp10782_77 #x0000000000000002))
(assert (= temp10782_78 temp10782_77))
(assert (= temp10782_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10782_78)))
(assert (= temp10782_80 #x0000000000000000))
(assert (= temp10782_81 #x0000000000000003))
(assert (= temp10782_82 temp10782_81))
(assert (= temp10782_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10782_82)))
(assert (= temp10782_84 #x0000000000000000))
(assert (= temp10782_85 #x0000000000000004))
(assert (= temp10782_86 temp10782_85))
(assert (= temp10782_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10782_86)))
(assert (= temp10782_88 #x0000000000000000))
(assert (= temp10782_89 #x0000000000000005))
(assert (= temp10782_90 temp10782_89))
(assert (= temp10782_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10782_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10782_71 temp10782_68)
             (bvslt temp10782_75 temp10782_72)
             (bvslt temp10782_79 temp10782_76)
             (bvslt temp10782_83 temp10782_80)
             (bvslt temp10782_87 temp10782_84)
             (bvslt temp10782_91 temp10782_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10782_92 #x0000000000000000))
(assert (= var1191725 temp10782_92))
(assert (= temp10782_93 #x0000000000000000))
(assert (= temp10782_94 temp10782_93))
(assert (= temp10782_95 (select ARGNAME_stride_NAMEEND_VAL temp10782_94)))
(assert (= temp10782_96 #x0000000000000001))
(assert (= temp10782_97 temp10782_96))
(assert (= temp10782_98 (select ARGNAME_stride_NAMEEND_VAL temp10782_97)))
(assert (= temp10782_99 #x0000000000000002))
(assert (= temp10782_100 temp10782_99))
(assert (= temp10782_101 (select ARGNAME_stride_NAMEEND_VAL temp10782_100)))
(assert (= temp10782_102 #x0000000000000003))
(assert (= temp10782_103 temp10782_102))
(assert (= temp10782_104 (select ARGNAME_stride_NAMEEND_VAL temp10782_103)))
(assert (= temp10782_105 #x0000000000000004))
(assert (= temp10782_106 temp10782_105))
(assert (= temp10782_107 (select ARGNAME_stride_NAMEEND_VAL temp10782_106)))
(assert (= temp10782_108 #x0000000000000005))
(assert (= temp10782_109 temp10782_108))
(assert (= temp10782_110 (select ARGNAME_stride_NAMEEND_VAL temp10782_109)))
(assert (= temp10782_111 #x0000000000000000))
(assert (= temp10782_112 #x0000000000000000))
(assert (= temp10782_113 temp10782_112))
(assert (= temp10782_114 (select ARGNAME_stride_NAMEEND_VAL temp10782_113)))
(assert (= temp10782_115 #x0000000000000000))
(assert (= temp10782_116 #x0000000000000001))
(assert (= temp10782_117 temp10782_116))
(assert (= temp10782_118 (select ARGNAME_stride_NAMEEND_VAL temp10782_117)))
(assert (= temp10782_119 #x0000000000000000))
(assert (= temp10782_120 #x0000000000000002))
(assert (= temp10782_121 temp10782_120))
(assert (= temp10782_122 (select ARGNAME_stride_NAMEEND_VAL temp10782_121)))
(assert (= temp10782_123 #x0000000000000000))
(assert (= temp10782_124 #x0000000000000003))
(assert (= temp10782_125 temp10782_124))
(assert (= temp10782_126 (select ARGNAME_stride_NAMEEND_VAL temp10782_125)))
(assert (= temp10782_127 #x0000000000000000))
(assert (= temp10782_128 #x0000000000000004))
(assert (= temp10782_129 temp10782_128))
(assert (= temp10782_130 (select ARGNAME_stride_NAMEEND_VAL temp10782_129)))
(assert (= temp10782_131 #x0000000000000000))
(assert (= temp10782_132 #x0000000000000005))
(assert (= temp10782_133 temp10782_132))
(assert (= temp10782_134 (select ARGNAME_stride_NAMEEND_VAL temp10782_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10782_114 temp10782_111)
             (bvsle temp10782_118 temp10782_115)
             (bvsle temp10782_122 temp10782_119)
             (bvsle temp10782_126 temp10782_123)
             (bvsle temp10782_130 temp10782_127)
             (bvsle temp10782_134 temp10782_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10782_135 #x0000000000000000))
(assert (= var1191735 temp10782_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10782_136 #x0000000000000001))
(assert (= var1191747 temp10782_136))
(assert (= temp10782_137 #x0000000000000000))
(assert (= var1179826 temp10782_137))
(assert (= temp10782_138 #x0000000000000000))
(assert (= temp10782_139 temp10782_138))
(assert (= temp10782_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10782_139)))
(assert (= temp10782_141 #x0000000000000001))
(assert (= temp10782_142 temp10782_141))
(assert (= temp10782_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10782_142)))
(assert (= temp10782_144 #x0000000000000002))
(assert (= temp10782_145 temp10782_144))
(assert (= temp10782_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10782_145)))
(assert (= temp10782_147 #x0000000000000003))
(assert (= temp10782_148 temp10782_147))
(assert (= temp10782_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10782_148)))
(assert (= temp10782_150 #x0000000000000004))
(assert (= temp10782_151 temp10782_150))
(assert (= temp10782_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10782_151)))
(assert (= temp10782_153 #x0000000000000005))
(assert (= temp10782_154 temp10782_153))
(assert (= temp10782_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10782_154)))
(assert (= temp10782_157 var1179826))
(assert (= temp10782_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10782_157)))
(assert (= temp10782_156 temp10782_158))
(assert (= var1191780
   (ite (bvslt temp10782_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10782_159 #x0000000000000000))
(assert (= var1191780 temp10782_159))
(assert (= temp10782_160 #x0000000000000000))
(assert (= var1179826 temp10782_160))
(assert (= temp10782_162 var1179826))
(assert (= temp10782_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10782_162)))
(assert (= temp10782_161 temp10782_163))
(assert (= var1191802 (bvsmod temp10782_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10782_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10782_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10782_165 #x0000000000000001))
(assert (= var1191803 temp10782_165))
(assert (= temp10782_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10782_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10782_167 #x0000000000000001))
(assert (= var1191823 temp10782_167))
(assert (= temp10782_168 #x0000000000000001))
(assert (= var1180714 temp10782_168))
(assert (= temp10782_169 #x0000000000000000))
(assert (= temp10782_170 temp10782_169))
(assert (= temp10782_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10782_170)))
(assert (= temp10782_172 #x0000000000000001))
(assert (= temp10782_173 temp10782_172))
(assert (= temp10782_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10782_173)))
(assert (= temp10782_175 #x0000000000000002))
(assert (= temp10782_176 temp10782_175))
(assert (= temp10782_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10782_176)))
(assert (= temp10782_178 #x0000000000000003))
(assert (= temp10782_179 temp10782_178))
(assert (= temp10782_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10782_179)))
(assert (= temp10782_181 #x0000000000000004))
(assert (= temp10782_182 temp10782_181))
(assert (= temp10782_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10782_182)))
(assert (= temp10782_184 #x0000000000000005))
(assert (= temp10782_185 temp10782_184))
(assert (= temp10782_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10782_185)))
(assert (= temp10782_187 #x0000000000000000))
(assert (= temp10782_188
   (ite (bvslt var1180714 temp10782_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10782_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10782_188)))
(assert (= var1191831 temp10782_189))
(assert (bvslt (ite (bvslt var1180714 temp10782_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10782_190 #x0000000000000001))
(assert (= var1180714 temp10782_190))
(assert (= temp10782_192 var1180714))
(assert (= temp10782_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10782_192)))
(assert (= temp10782_191 temp10782_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10782_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10782_194 #x0000000000000001))
(assert (= var1191836 temp10782_194))
(assert (= temp10782_195 #x0000000000000000))
(assert (= var1179826 temp10782_195))
(assert (= temp10782_197 var1179826))
(assert (= temp10782_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10782_197)))
(assert (= temp10782_196 temp10782_198))
(assert (= temp10782_199 #x0000000000000002))
(assert (= var1586025 temp10782_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10782_200 #x0000000000000001))
(assert (= var1191993 temp10782_200))
(assert (= temp10782_201 #x0000000000000001))
(assert (= var2700303 temp10782_201))
(assert (= temp10782_202 #x0000000000000001))
(assert (= var2962447 temp10782_202))
(assert (= temp10782_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10782_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10782_204 #x0000000000000001))
(assert (= var211058 temp10782_204))
(assert (= temp10782_205 #x0000000000000001))
(assert (= var211188 temp10782_205))
(assert (= var3879401 var211188))
(assert (= temp10782_206 #x0000000000000000))
(assert (= var3866802 temp10782_206))
(assert (= temp10782_207 #x0000000000000000))
(assert (= temp10782_208
   (ite (bvslt var3866802 temp10782_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10782_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10782_208)))
(assert (= var3879420 temp10782_209))
(assert (bvslt (ite (bvslt var3866802 temp10782_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10782_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10782_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10782_211 #x0000000000000000))
(assert (= var3879421 temp10782_211))
(assert (= temp10782_212 #x0000000000000001))
(assert (= var3867690 temp10782_212))
(assert (= temp10782_213 #x0000000000000000))
(assert (= temp10782_214
   (ite (bvslt var3867690 temp10782_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10782_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10782_214)))
(assert (= var3879423 temp10782_215))
(assert (bvslt (ite (bvslt var3867690 temp10782_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10782_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10782_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10782_217 #x0000000000000001))
(assert (= var3879424 temp10782_217))
(assert (= temp10782_218 #x0000000000000000))
(assert (= var4133117 temp10782_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10782_219 #x0000000000000002))
(assert (= var4339331 temp10782_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10782_220 #x0000000000000000))
(assert (= var4404892 temp10782_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5190032 var211201))
(assert (= var5452176 var211201))
(assert (= temp10782_221 #x0000000000000000))
(assert (= var5779856 temp10782_221))
(assert (= temp10782_222 #x0000000000000001))
(assert (= var211058 temp10782_222))
(model-add temp10782_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10782_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10782_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10782_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





