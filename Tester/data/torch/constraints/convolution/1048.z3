(declare-fun temp10064_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10064_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10064_3 () (_ BitVec 64))
(declare-fun temp10064_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10064_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10064_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10064_7 () (_ BitVec 64))
(declare-fun temp10064_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10064_9 () (_ BitVec 64))
(declare-fun temp10064_10 () (_ BitVec 64))
(declare-fun temp10064_11 () (_ BitVec 64))
(declare-fun temp10064_12 () (_ BitVec 64))
(declare-fun temp10064_13 () (_ BitVec 64))
(declare-fun temp10064_14 () (_ BitVec 64))
(declare-fun temp10064_15 () (_ BitVec 64))
(declare-fun temp10064_16 () (_ BitVec 64))
(declare-fun temp10064_17 () (_ BitVec 64))
(declare-fun temp10064_18 () (_ BitVec 64))
(declare-fun temp10064_19 () (_ BitVec 64))
(declare-fun temp10064_20 () (_ BitVec 64))
(declare-fun temp10064_21 () (_ BitVec 64))
(declare-fun temp10064_22 () (_ BitVec 64))
(declare-fun temp10064_23 () (_ BitVec 64))
(declare-fun temp10064_24 () (_ BitVec 64))
(declare-fun temp10064_25 () (_ BitVec 64))
(declare-fun temp10064_26 () (_ BitVec 64))
(declare-fun temp10064_27 () (_ BitVec 64))
(declare-fun temp10064_28 () (_ BitVec 64))
(declare-fun temp10064_29 () (_ BitVec 64))
(declare-fun temp10064_30 () (_ BitVec 64))
(declare-fun temp10064_31 () (_ BitVec 64))
(declare-fun temp10064_32 () (_ BitVec 64))
(declare-fun temp10064_33 () (_ BitVec 64))
(declare-fun temp10064_34 () (_ BitVec 64))
(declare-fun temp10064_35 () (_ BitVec 64))
(declare-fun temp10064_36 () (_ BitVec 64))
(declare-fun temp10064_37 () (_ BitVec 64))
(declare-fun temp10064_38 () (_ BitVec 64))
(declare-fun temp10064_39 () (_ BitVec 64))
(declare-fun temp10064_40 () (_ BitVec 64))
(declare-fun temp10064_41 () (_ BitVec 64))
(declare-fun temp10064_42 () (_ BitVec 64))
(declare-fun temp10064_43 () (_ BitVec 64))
(declare-fun temp10064_44 () (_ BitVec 64))
(declare-fun temp10064_45 () (_ BitVec 64))
(declare-fun temp10064_46 () (_ BitVec 64))
(declare-fun temp10064_47 () (_ BitVec 64))
(declare-fun temp10064_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10064_49 () (_ BitVec 64))
(declare-fun temp10064_50 () (_ BitVec 64))
(declare-fun temp10064_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10064_52 () (_ BitVec 64))
(declare-fun temp10064_53 () (_ BitVec 64))
(declare-fun temp10064_54 () (_ BitVec 64))
(declare-fun temp10064_55 () (_ BitVec 64))
(declare-fun temp10064_56 () (_ BitVec 64))
(declare-fun temp10064_57 () (_ BitVec 64))
(declare-fun temp10064_58 () (_ BitVec 64))
(declare-fun temp10064_59 () (_ BitVec 64))
(declare-fun temp10064_60 () (_ BitVec 64))
(declare-fun temp10064_61 () (_ BitVec 64))
(declare-fun temp10064_62 () (_ BitVec 64))
(declare-fun temp10064_63 () (_ BitVec 64))
(declare-fun temp10064_64 () (_ BitVec 64))
(declare-fun temp10064_65 () (_ BitVec 64))
(declare-fun temp10064_66 () (_ BitVec 64))
(declare-fun temp10064_67 () (_ BitVec 64))
(declare-fun temp10064_68 () (_ BitVec 64))
(declare-fun temp10064_69 () (_ BitVec 64))
(declare-fun temp10064_70 () (_ BitVec 64))
(declare-fun temp10064_71 () (_ BitVec 64))
(declare-fun temp10064_72 () (_ BitVec 64))
(declare-fun temp10064_73 () (_ BitVec 64))
(declare-fun temp10064_74 () (_ BitVec 64))
(declare-fun temp10064_75 () (_ BitVec 64))
(declare-fun temp10064_76 () (_ BitVec 64))
(declare-fun temp10064_77 () (_ BitVec 64))
(declare-fun temp10064_78 () (_ BitVec 64))
(declare-fun temp10064_79 () (_ BitVec 64))
(declare-fun temp10064_80 () (_ BitVec 64))
(declare-fun temp10064_81 () (_ BitVec 64))
(declare-fun temp10064_82 () (_ BitVec 64))
(declare-fun temp10064_83 () (_ BitVec 64))
(declare-fun temp10064_84 () (_ BitVec 64))
(declare-fun temp10064_85 () (_ BitVec 64))
(declare-fun temp10064_86 () (_ BitVec 64))
(declare-fun temp10064_87 () (_ BitVec 64))
(declare-fun temp10064_88 () (_ BitVec 64))
(declare-fun temp10064_89 () (_ BitVec 64))
(declare-fun temp10064_90 () (_ BitVec 64))
(declare-fun temp10064_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10064_92 () (_ BitVec 64))
(declare-fun temp10064_93 () (_ BitVec 64))
(declare-fun temp10064_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10064_95 () (_ BitVec 64))
(declare-fun temp10064_96 () (_ BitVec 64))
(declare-fun temp10064_97 () (_ BitVec 64))
(declare-fun temp10064_98 () (_ BitVec 64))
(declare-fun temp10064_99 () (_ BitVec 64))
(declare-fun temp10064_100 () (_ BitVec 64))
(declare-fun temp10064_101 () (_ BitVec 64))
(declare-fun temp10064_102 () (_ BitVec 64))
(declare-fun temp10064_103 () (_ BitVec 64))
(declare-fun temp10064_104 () (_ BitVec 64))
(declare-fun temp10064_105 () (_ BitVec 64))
(declare-fun temp10064_106 () (_ BitVec 64))
(declare-fun temp10064_107 () (_ BitVec 64))
(declare-fun temp10064_108 () (_ BitVec 64))
(declare-fun temp10064_109 () (_ BitVec 64))
(declare-fun temp10064_110 () (_ BitVec 64))
(declare-fun temp10064_111 () (_ BitVec 64))
(declare-fun temp10064_112 () (_ BitVec 64))
(declare-fun temp10064_113 () (_ BitVec 64))
(declare-fun temp10064_114 () (_ BitVec 64))
(declare-fun temp10064_115 () (_ BitVec 64))
(declare-fun temp10064_116 () (_ BitVec 64))
(declare-fun temp10064_117 () (_ BitVec 64))
(declare-fun temp10064_118 () (_ BitVec 64))
(declare-fun temp10064_119 () (_ BitVec 64))
(declare-fun temp10064_120 () (_ BitVec 64))
(declare-fun temp10064_121 () (_ BitVec 64))
(declare-fun temp10064_122 () (_ BitVec 64))
(declare-fun temp10064_123 () (_ BitVec 64))
(declare-fun temp10064_124 () (_ BitVec 64))
(declare-fun temp10064_125 () (_ BitVec 64))
(declare-fun temp10064_126 () (_ BitVec 64))
(declare-fun temp10064_127 () (_ BitVec 64))
(declare-fun temp10064_128 () (_ BitVec 64))
(declare-fun temp10064_129 () (_ BitVec 64))
(declare-fun temp10064_130 () (_ BitVec 64))
(declare-fun temp10064_131 () (_ BitVec 64))
(declare-fun temp10064_132 () (_ BitVec 64))
(declare-fun temp10064_133 () (_ BitVec 64))
(declare-fun temp10064_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10064_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10064_136 () (_ BitVec 64))
(declare-fun temp10064_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10064_138 () (_ BitVec 64))
(declare-fun temp10064_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10064_140 () (_ BitVec 64))
(declare-fun temp10064_141 () (_ BitVec 64))
(declare-fun temp10064_142 () (_ BitVec 64))
(declare-fun temp10064_143 () (_ BitVec 64))
(declare-fun temp10064_144 () (_ BitVec 64))
(declare-fun temp10064_145 () (_ BitVec 64))
(declare-fun temp10064_146 () (_ BitVec 64))
(declare-fun temp10064_147 () (_ BitVec 64))
(declare-fun temp10064_148 () (_ BitVec 64))
(declare-fun temp10064_149 () (_ BitVec 64))
(declare-fun temp10064_150 () (_ BitVec 64))
(declare-fun temp10064_151 () (_ BitVec 64))
(declare-fun temp10064_152 () (_ BitVec 64))
(declare-fun temp10064_153 () (_ BitVec 64))
(declare-fun temp10064_154 () (_ BitVec 64))
(declare-fun temp10064_155 () (_ BitVec 64))
(declare-fun temp10064_157 () (_ BitVec 64))
(declare-fun temp10064_158 () (_ BitVec 64))
(declare-fun temp10064_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10064_159 () (_ BitVec 64))
(declare-fun temp10064_160 () (_ BitVec 64))
(declare-fun temp10064_162 () (_ BitVec 64))
(declare-fun temp10064_163 () (_ BitVec 64))
(declare-fun temp10064_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10064_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10064_165 () (_ BitVec 64))
(declare-fun temp10064_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10064_167 () (_ BitVec 64))
(declare-fun temp10064_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10064_169 () (_ BitVec 64))
(declare-fun temp10064_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10064_171 () (_ BitVec 64))
(declare-fun temp10064_172 () (_ BitVec 64))
(declare-fun temp10064_173 () (_ BitVec 64))
(declare-fun temp10064_174 () (_ BitVec 64))
(declare-fun temp10064_175 () (_ BitVec 64))
(declare-fun temp10064_176 () (_ BitVec 64))
(declare-fun temp10064_177 () (_ BitVec 64))
(declare-fun temp10064_178 () (_ BitVec 64))
(declare-fun temp10064_179 () (_ BitVec 64))
(declare-fun temp10064_180 () (_ BitVec 64))
(declare-fun temp10064_181 () (_ BitVec 64))
(declare-fun temp10064_182 () (_ BitVec 64))
(declare-fun temp10064_183 () (_ BitVec 64))
(declare-fun temp10064_184 () (_ BitVec 64))
(declare-fun temp10064_185 () (_ BitVec 64))
(declare-fun temp10064_186 () (_ BitVec 64))
(declare-fun temp10064_187 () (_ BitVec 64))
(declare-fun temp10064_188 () (_ BitVec 64))
(declare-fun temp10064_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10064_190 () (_ BitVec 64))
(declare-fun temp10064_192 () (_ BitVec 64))
(declare-fun temp10064_193 () (_ BitVec 64))
(declare-fun temp10064_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10064_194 () (_ BitVec 64))
(declare-fun temp10064_195 () (_ BitVec 64))
(declare-fun temp10064_197 () (_ BitVec 64))
(declare-fun temp10064_198 () (_ BitVec 64))
(declare-fun temp10064_196 () (_ BitVec 64))
(declare-fun temp10064_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10064_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10064_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10064_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10064_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10064_204 () (_ BitVec 64))
(declare-fun temp10064_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10064_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10064_207 () (_ BitVec 64))
(declare-fun temp10064_208 () (_ BitVec 64))
(declare-fun temp10064_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10064_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10064_211 () (_ BitVec 64))
(declare-fun temp10064_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10064_213 () (_ BitVec 64))
(declare-fun temp10064_214 () (_ BitVec 64))
(declare-fun temp10064_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10064_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10064_217 () (_ BitVec 64))
(declare-fun temp10064_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10064_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10064_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10064_222 () (_ BitVec 64))
(declare-fun temp10064_221 () (_ BitVec 64))
(declare-fun temp10064_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10064_224 () (_ BitVec 64))
(declare-fun temp10064_225 () (_ BitVec 64))
(declare-fun temp10064_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10064_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10064_228 () (_ BitVec 64))
(declare-fun temp10064_230 () (_ BitVec 64))
(declare-fun temp10064_229 () (_ BitVec 64))
(declare-fun temp10064_231 () (_ BitVec 64))
(assert (= temp10064_1 #x0000000000000001))
(assert (= var77203 temp10064_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10064_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10064_2)))
(assert (= temp10064_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10064_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10064_4 #x0000000000000000))
(assert (= var210941 temp10064_4))
(assert (= temp10064_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10064_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10064_6 #x0000000000000000))
(assert (= var210986 temp10064_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10064_7 #x0000000000000000))
(assert (= temp10064_8 temp10064_7))
(assert (= temp10064_9 (select ARGNAME_padding_NAMEEND_VAL temp10064_8)))
(assert (= temp10064_10 #x0000000000000001))
(assert (= temp10064_11 temp10064_10))
(assert (= temp10064_12 (select ARGNAME_padding_NAMEEND_VAL temp10064_11)))
(assert (= temp10064_13 #x0000000000000002))
(assert (= temp10064_14 temp10064_13))
(assert (= temp10064_15 (select ARGNAME_padding_NAMEEND_VAL temp10064_14)))
(assert (= temp10064_16 #x0000000000000003))
(assert (= temp10064_17 temp10064_16))
(assert (= temp10064_18 (select ARGNAME_padding_NAMEEND_VAL temp10064_17)))
(assert (= temp10064_19 #x0000000000000004))
(assert (= temp10064_20 temp10064_19))
(assert (= temp10064_21 (select ARGNAME_padding_NAMEEND_VAL temp10064_20)))
(assert (= temp10064_22 #x0000000000000005))
(assert (= temp10064_23 temp10064_22))
(assert (= temp10064_24 (select ARGNAME_padding_NAMEEND_VAL temp10064_23)))
(assert (= temp10064_25 #x0000000000000000))
(assert (= temp10064_26 #x0000000000000000))
(assert (= temp10064_27 temp10064_26))
(assert (= temp10064_28 (select ARGNAME_padding_NAMEEND_VAL temp10064_27)))
(assert (= temp10064_29 #x0000000000000000))
(assert (= temp10064_30 #x0000000000000001))
(assert (= temp10064_31 temp10064_30))
(assert (= temp10064_32 (select ARGNAME_padding_NAMEEND_VAL temp10064_31)))
(assert (= temp10064_33 #x0000000000000000))
(assert (= temp10064_34 #x0000000000000002))
(assert (= temp10064_35 temp10064_34))
(assert (= temp10064_36 (select ARGNAME_padding_NAMEEND_VAL temp10064_35)))
(assert (= temp10064_37 #x0000000000000000))
(assert (= temp10064_38 #x0000000000000003))
(assert (= temp10064_39 temp10064_38))
(assert (= temp10064_40 (select ARGNAME_padding_NAMEEND_VAL temp10064_39)))
(assert (= temp10064_41 #x0000000000000000))
(assert (= temp10064_42 #x0000000000000004))
(assert (= temp10064_43 temp10064_42))
(assert (= temp10064_44 (select ARGNAME_padding_NAMEEND_VAL temp10064_43)))
(assert (= temp10064_45 #x0000000000000000))
(assert (= temp10064_46 #x0000000000000005))
(assert (= temp10064_47 temp10064_46))
(assert (= temp10064_48 (select ARGNAME_padding_NAMEEND_VAL temp10064_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10064_28 temp10064_25)
             (bvslt temp10064_32 temp10064_29)
             (bvslt temp10064_36 temp10064_33)
             (bvslt temp10064_40 temp10064_37)
             (bvslt temp10064_44 temp10064_41)
             (bvslt temp10064_48 temp10064_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10064_49 #x0000000000000000))
(assert (= var1191714 temp10064_49))
(assert (= temp10064_50 #x0000000000000000))
(assert (= temp10064_51 temp10064_50))
(assert (= temp10064_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10064_51)))
(assert (= temp10064_53 #x0000000000000001))
(assert (= temp10064_54 temp10064_53))
(assert (= temp10064_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10064_54)))
(assert (= temp10064_56 #x0000000000000002))
(assert (= temp10064_57 temp10064_56))
(assert (= temp10064_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10064_57)))
(assert (= temp10064_59 #x0000000000000003))
(assert (= temp10064_60 temp10064_59))
(assert (= temp10064_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10064_60)))
(assert (= temp10064_62 #x0000000000000004))
(assert (= temp10064_63 temp10064_62))
(assert (= temp10064_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10064_63)))
(assert (= temp10064_65 #x0000000000000005))
(assert (= temp10064_66 temp10064_65))
(assert (= temp10064_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10064_66)))
(assert (= temp10064_68 #x0000000000000000))
(assert (= temp10064_69 #x0000000000000000))
(assert (= temp10064_70 temp10064_69))
(assert (= temp10064_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10064_70)))
(assert (= temp10064_72 #x0000000000000000))
(assert (= temp10064_73 #x0000000000000001))
(assert (= temp10064_74 temp10064_73))
(assert (= temp10064_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10064_74)))
(assert (= temp10064_76 #x0000000000000000))
(assert (= temp10064_77 #x0000000000000002))
(assert (= temp10064_78 temp10064_77))
(assert (= temp10064_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10064_78)))
(assert (= temp10064_80 #x0000000000000000))
(assert (= temp10064_81 #x0000000000000003))
(assert (= temp10064_82 temp10064_81))
(assert (= temp10064_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10064_82)))
(assert (= temp10064_84 #x0000000000000000))
(assert (= temp10064_85 #x0000000000000004))
(assert (= temp10064_86 temp10064_85))
(assert (= temp10064_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10064_86)))
(assert (= temp10064_88 #x0000000000000000))
(assert (= temp10064_89 #x0000000000000005))
(assert (= temp10064_90 temp10064_89))
(assert (= temp10064_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10064_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10064_71 temp10064_68)
             (bvslt temp10064_75 temp10064_72)
             (bvslt temp10064_79 temp10064_76)
             (bvslt temp10064_83 temp10064_80)
             (bvslt temp10064_87 temp10064_84)
             (bvslt temp10064_91 temp10064_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10064_92 #x0000000000000000))
(assert (= var1191725 temp10064_92))
(assert (= temp10064_93 #x0000000000000000))
(assert (= temp10064_94 temp10064_93))
(assert (= temp10064_95 (select ARGNAME_stride_NAMEEND_VAL temp10064_94)))
(assert (= temp10064_96 #x0000000000000001))
(assert (= temp10064_97 temp10064_96))
(assert (= temp10064_98 (select ARGNAME_stride_NAMEEND_VAL temp10064_97)))
(assert (= temp10064_99 #x0000000000000002))
(assert (= temp10064_100 temp10064_99))
(assert (= temp10064_101 (select ARGNAME_stride_NAMEEND_VAL temp10064_100)))
(assert (= temp10064_102 #x0000000000000003))
(assert (= temp10064_103 temp10064_102))
(assert (= temp10064_104 (select ARGNAME_stride_NAMEEND_VAL temp10064_103)))
(assert (= temp10064_105 #x0000000000000004))
(assert (= temp10064_106 temp10064_105))
(assert (= temp10064_107 (select ARGNAME_stride_NAMEEND_VAL temp10064_106)))
(assert (= temp10064_108 #x0000000000000005))
(assert (= temp10064_109 temp10064_108))
(assert (= temp10064_110 (select ARGNAME_stride_NAMEEND_VAL temp10064_109)))
(assert (= temp10064_111 #x0000000000000000))
(assert (= temp10064_112 #x0000000000000000))
(assert (= temp10064_113 temp10064_112))
(assert (= temp10064_114 (select ARGNAME_stride_NAMEEND_VAL temp10064_113)))
(assert (= temp10064_115 #x0000000000000000))
(assert (= temp10064_116 #x0000000000000001))
(assert (= temp10064_117 temp10064_116))
(assert (= temp10064_118 (select ARGNAME_stride_NAMEEND_VAL temp10064_117)))
(assert (= temp10064_119 #x0000000000000000))
(assert (= temp10064_120 #x0000000000000002))
(assert (= temp10064_121 temp10064_120))
(assert (= temp10064_122 (select ARGNAME_stride_NAMEEND_VAL temp10064_121)))
(assert (= temp10064_123 #x0000000000000000))
(assert (= temp10064_124 #x0000000000000003))
(assert (= temp10064_125 temp10064_124))
(assert (= temp10064_126 (select ARGNAME_stride_NAMEEND_VAL temp10064_125)))
(assert (= temp10064_127 #x0000000000000000))
(assert (= temp10064_128 #x0000000000000004))
(assert (= temp10064_129 temp10064_128))
(assert (= temp10064_130 (select ARGNAME_stride_NAMEEND_VAL temp10064_129)))
(assert (= temp10064_131 #x0000000000000000))
(assert (= temp10064_132 #x0000000000000005))
(assert (= temp10064_133 temp10064_132))
(assert (= temp10064_134 (select ARGNAME_stride_NAMEEND_VAL temp10064_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10064_114 temp10064_111)
             (bvsle temp10064_118 temp10064_115)
             (bvsle temp10064_122 temp10064_119)
             (bvsle temp10064_126 temp10064_123)
             (bvsle temp10064_130 temp10064_127)
             (bvsle temp10064_134 temp10064_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10064_135 #x0000000000000000))
(assert (= var1191735 temp10064_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10064_136 #x0000000000000001))
(assert (= var1191747 temp10064_136))
(assert (= temp10064_137 #x0000000000000000))
(assert (= var1179826 temp10064_137))
(assert (= temp10064_138 #x0000000000000000))
(assert (= temp10064_139 temp10064_138))
(assert (= temp10064_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10064_139)))
(assert (= temp10064_141 #x0000000000000001))
(assert (= temp10064_142 temp10064_141))
(assert (= temp10064_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10064_142)))
(assert (= temp10064_144 #x0000000000000002))
(assert (= temp10064_145 temp10064_144))
(assert (= temp10064_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10064_145)))
(assert (= temp10064_147 #x0000000000000003))
(assert (= temp10064_148 temp10064_147))
(assert (= temp10064_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10064_148)))
(assert (= temp10064_150 #x0000000000000004))
(assert (= temp10064_151 temp10064_150))
(assert (= temp10064_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10064_151)))
(assert (= temp10064_153 #x0000000000000005))
(assert (= temp10064_154 temp10064_153))
(assert (= temp10064_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10064_154)))
(assert (= temp10064_157 var1179826))
(assert (= temp10064_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10064_157)))
(assert (= temp10064_156 temp10064_158))
(assert (= var1191780
   (ite (bvslt temp10064_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10064_159 #x0000000000000000))
(assert (= var1191780 temp10064_159))
(assert (= temp10064_160 #x0000000000000000))
(assert (= var1179826 temp10064_160))
(assert (= temp10064_162 var1179826))
(assert (= temp10064_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10064_162)))
(assert (= temp10064_161 temp10064_163))
(assert (= var1191802 (bvsmod temp10064_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10064_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10064_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10064_165 #x0000000000000001))
(assert (= var1191803 temp10064_165))
(assert (= temp10064_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10064_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10064_167 #x0000000000000001))
(assert (= var1191823 temp10064_167))
(assert (= temp10064_168 #x0000000000000001))
(assert (= var1180714 temp10064_168))
(assert (= temp10064_169 #x0000000000000000))
(assert (= temp10064_170 temp10064_169))
(assert (= temp10064_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10064_170)))
(assert (= temp10064_172 #x0000000000000001))
(assert (= temp10064_173 temp10064_172))
(assert (= temp10064_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10064_173)))
(assert (= temp10064_175 #x0000000000000002))
(assert (= temp10064_176 temp10064_175))
(assert (= temp10064_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10064_176)))
(assert (= temp10064_178 #x0000000000000003))
(assert (= temp10064_179 temp10064_178))
(assert (= temp10064_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10064_179)))
(assert (= temp10064_181 #x0000000000000004))
(assert (= temp10064_182 temp10064_181))
(assert (= temp10064_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10064_182)))
(assert (= temp10064_184 #x0000000000000005))
(assert (= temp10064_185 temp10064_184))
(assert (= temp10064_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10064_185)))
(assert (= temp10064_187 #x0000000000000000))
(assert (= temp10064_188
   (ite (bvslt var1180714 temp10064_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10064_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10064_188)))
(assert (= var1191831 temp10064_189))
(assert (bvslt (ite (bvslt var1180714 temp10064_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10064_190 #x0000000000000001))
(assert (= var1180714 temp10064_190))
(assert (= temp10064_192 var1180714))
(assert (= temp10064_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10064_192)))
(assert (= temp10064_191 temp10064_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10064_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10064_194 #x0000000000000001))
(assert (= var1191836 temp10064_194))
(assert (= temp10064_195 #x0000000000000000))
(assert (= var1179826 temp10064_195))
(assert (= temp10064_197 var1179826))
(assert (= temp10064_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10064_197)))
(assert (= temp10064_196 temp10064_198))
(assert (= temp10064_199 #x0000000000000002))
(assert (= var1586025 temp10064_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10064_200 #x0000000000000001))
(assert (= var1191993 temp10064_200))
(assert (= temp10064_201 #x0000000000000001))
(assert (= var2700303 temp10064_201))
(assert (= temp10064_202 #x0000000000000001))
(assert (= var2962447 temp10064_202))
(assert (= temp10064_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10064_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10064_204 #x0000000000000001))
(assert (= var211058 temp10064_204))
(assert (= temp10064_205 #x0000000000000001))
(assert (= var211188 temp10064_205))
(assert (= var3879401 var211188))
(assert (= temp10064_206 #x0000000000000000))
(assert (= var3866802 temp10064_206))
(assert (= temp10064_207 #x0000000000000000))
(assert (= temp10064_208
   (ite (bvslt var3866802 temp10064_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10064_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10064_208)))
(assert (= var3879420 temp10064_209))
(assert (bvslt (ite (bvslt var3866802 temp10064_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10064_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10064_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10064_211 #x0000000000000000))
(assert (= var3879421 temp10064_211))
(assert (= temp10064_212 #x0000000000000001))
(assert (= var3867690 temp10064_212))
(assert (= temp10064_213 #x0000000000000000))
(assert (= temp10064_214
   (ite (bvslt var3867690 temp10064_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10064_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10064_214)))
(assert (= var3879423 temp10064_215))
(assert (bvslt (ite (bvslt var3867690 temp10064_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10064_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10064_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10064_217 #x0000000000000001))
(assert (= var3879424 temp10064_217))
(assert (= temp10064_218 #x0000000000000000))
(assert (= var4079423 temp10064_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10064_219 #x0000000000000002))
(assert (= var4208259 temp10064_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10064_220 #x0000000000000000))
(assert (= var4273820 temp10064_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10064_222 #xffffffffffffffff))
(assert (= temp10064_221 temp10064_222))
(assert (= temp10064_223 #x0000000000000001))
(assert (= var197674 temp10064_223))
(assert (= temp10064_224 #x0000000000000000))
(assert (= temp10064_225
   (ite (bvslt var197674 temp10064_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10064_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10064_225)))
(assert (= var211595 temp10064_226))
(assert (bvslt (ite (bvslt var197674 temp10064_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10064_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10064_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10064_228 #x0000000000000001))
(assert (= var211596 temp10064_228))
(assert (= temp10064_230 #xffffffffffffffff))
(assert (= temp10064_229 temp10064_230))
(assert (= temp10064_231 #x0000000000000001))
(assert (= var211058 temp10064_231))
(model-add temp10064_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10064_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10064_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10064_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





