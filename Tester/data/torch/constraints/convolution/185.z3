(declare-fun temp246_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp246_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp246_3 () (_ BitVec 64))
(declare-fun temp246_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp246_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp246_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp246_7 () (_ BitVec 64))
(declare-fun temp246_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp246_9 () (_ BitVec 64))
(declare-fun temp246_10 () (_ BitVec 64))
(declare-fun temp246_11 () (_ BitVec 64))
(declare-fun temp246_12 () (_ BitVec 64))
(declare-fun temp246_13 () (_ BitVec 64))
(declare-fun temp246_14 () (_ BitVec 64))
(declare-fun temp246_15 () (_ BitVec 64))
(declare-fun temp246_16 () (_ BitVec 64))
(declare-fun temp246_17 () (_ BitVec 64))
(declare-fun temp246_18 () (_ BitVec 64))
(declare-fun temp246_19 () (_ BitVec 64))
(declare-fun temp246_20 () (_ BitVec 64))
(declare-fun temp246_21 () (_ BitVec 64))
(declare-fun temp246_22 () (_ BitVec 64))
(declare-fun temp246_23 () (_ BitVec 64))
(declare-fun temp246_24 () (_ BitVec 64))
(declare-fun temp246_25 () (_ BitVec 64))
(declare-fun temp246_26 () (_ BitVec 64))
(declare-fun temp246_27 () (_ BitVec 64))
(declare-fun temp246_28 () (_ BitVec 64))
(declare-fun temp246_29 () (_ BitVec 64))
(declare-fun temp246_30 () (_ BitVec 64))
(declare-fun temp246_31 () (_ BitVec 64))
(declare-fun temp246_32 () (_ BitVec 64))
(declare-fun temp246_33 () (_ BitVec 64))
(declare-fun temp246_34 () (_ BitVec 64))
(declare-fun temp246_35 () (_ BitVec 64))
(declare-fun temp246_36 () (_ BitVec 64))
(declare-fun temp246_37 () (_ BitVec 64))
(declare-fun temp246_38 () (_ BitVec 64))
(declare-fun temp246_39 () (_ BitVec 64))
(declare-fun temp246_40 () (_ BitVec 64))
(declare-fun temp246_41 () (_ BitVec 64))
(declare-fun temp246_42 () (_ BitVec 64))
(declare-fun temp246_43 () (_ BitVec 64))
(declare-fun temp246_44 () (_ BitVec 64))
(declare-fun temp246_45 () (_ BitVec 64))
(declare-fun temp246_46 () (_ BitVec 64))
(declare-fun temp246_47 () (_ BitVec 64))
(declare-fun temp246_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp246_49 () (_ BitVec 64))
(declare-fun temp246_50 () (_ BitVec 64))
(declare-fun temp246_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp246_52 () (_ BitVec 64))
(declare-fun temp246_53 () (_ BitVec 64))
(declare-fun temp246_54 () (_ BitVec 64))
(declare-fun temp246_55 () (_ BitVec 64))
(declare-fun temp246_56 () (_ BitVec 64))
(declare-fun temp246_57 () (_ BitVec 64))
(declare-fun temp246_58 () (_ BitVec 64))
(declare-fun temp246_59 () (_ BitVec 64))
(declare-fun temp246_60 () (_ BitVec 64))
(declare-fun temp246_61 () (_ BitVec 64))
(declare-fun temp246_62 () (_ BitVec 64))
(declare-fun temp246_63 () (_ BitVec 64))
(declare-fun temp246_64 () (_ BitVec 64))
(declare-fun temp246_65 () (_ BitVec 64))
(declare-fun temp246_66 () (_ BitVec 64))
(declare-fun temp246_67 () (_ BitVec 64))
(declare-fun temp246_68 () (_ BitVec 64))
(declare-fun temp246_69 () (_ BitVec 64))
(declare-fun temp246_70 () (_ BitVec 64))
(declare-fun temp246_71 () (_ BitVec 64))
(declare-fun temp246_72 () (_ BitVec 64))
(declare-fun temp246_73 () (_ BitVec 64))
(declare-fun temp246_74 () (_ BitVec 64))
(declare-fun temp246_75 () (_ BitVec 64))
(declare-fun temp246_76 () (_ BitVec 64))
(declare-fun temp246_77 () (_ BitVec 64))
(declare-fun temp246_78 () (_ BitVec 64))
(declare-fun temp246_79 () (_ BitVec 64))
(declare-fun temp246_80 () (_ BitVec 64))
(declare-fun temp246_81 () (_ BitVec 64))
(declare-fun temp246_82 () (_ BitVec 64))
(declare-fun temp246_83 () (_ BitVec 64))
(declare-fun temp246_84 () (_ BitVec 64))
(declare-fun temp246_85 () (_ BitVec 64))
(declare-fun temp246_86 () (_ BitVec 64))
(declare-fun temp246_87 () (_ BitVec 64))
(declare-fun temp246_88 () (_ BitVec 64))
(declare-fun temp246_89 () (_ BitVec 64))
(declare-fun temp246_90 () (_ BitVec 64))
(declare-fun temp246_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp246_92 () (_ BitVec 64))
(declare-fun temp246_93 () (_ BitVec 64))
(declare-fun temp246_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp246_95 () (_ BitVec 64))
(declare-fun temp246_96 () (_ BitVec 64))
(declare-fun temp246_97 () (_ BitVec 64))
(declare-fun temp246_98 () (_ BitVec 64))
(declare-fun temp246_99 () (_ BitVec 64))
(declare-fun temp246_100 () (_ BitVec 64))
(declare-fun temp246_101 () (_ BitVec 64))
(declare-fun temp246_102 () (_ BitVec 64))
(declare-fun temp246_103 () (_ BitVec 64))
(declare-fun temp246_104 () (_ BitVec 64))
(declare-fun temp246_105 () (_ BitVec 64))
(declare-fun temp246_106 () (_ BitVec 64))
(declare-fun temp246_107 () (_ BitVec 64))
(declare-fun temp246_108 () (_ BitVec 64))
(declare-fun temp246_109 () (_ BitVec 64))
(declare-fun temp246_110 () (_ BitVec 64))
(declare-fun temp246_111 () (_ BitVec 64))
(declare-fun temp246_112 () (_ BitVec 64))
(declare-fun temp246_113 () (_ BitVec 64))
(declare-fun temp246_114 () (_ BitVec 64))
(declare-fun temp246_115 () (_ BitVec 64))
(declare-fun temp246_116 () (_ BitVec 64))
(declare-fun temp246_117 () (_ BitVec 64))
(declare-fun temp246_118 () (_ BitVec 64))
(declare-fun temp246_119 () (_ BitVec 64))
(declare-fun temp246_120 () (_ BitVec 64))
(declare-fun temp246_121 () (_ BitVec 64))
(declare-fun temp246_122 () (_ BitVec 64))
(declare-fun temp246_123 () (_ BitVec 64))
(declare-fun temp246_124 () (_ BitVec 64))
(declare-fun temp246_125 () (_ BitVec 64))
(declare-fun temp246_126 () (_ BitVec 64))
(declare-fun temp246_127 () (_ BitVec 64))
(declare-fun temp246_128 () (_ BitVec 64))
(declare-fun temp246_129 () (_ BitVec 64))
(declare-fun temp246_130 () (_ BitVec 64))
(declare-fun temp246_131 () (_ BitVec 64))
(declare-fun temp246_132 () (_ BitVec 64))
(declare-fun temp246_133 () (_ BitVec 64))
(declare-fun temp246_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp246_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp246_136 () (_ BitVec 64))
(declare-fun temp246_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp246_138 () (_ BitVec 64))
(declare-fun temp246_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp246_140 () (_ BitVec 64))
(declare-fun temp246_141 () (_ BitVec 64))
(declare-fun temp246_142 () (_ BitVec 64))
(declare-fun temp246_143 () (_ BitVec 64))
(declare-fun temp246_144 () (_ BitVec 64))
(declare-fun temp246_145 () (_ BitVec 64))
(declare-fun temp246_146 () (_ BitVec 64))
(declare-fun temp246_147 () (_ BitVec 64))
(declare-fun temp246_148 () (_ BitVec 64))
(declare-fun temp246_149 () (_ BitVec 64))
(declare-fun temp246_150 () (_ BitVec 64))
(declare-fun temp246_151 () (_ BitVec 64))
(declare-fun temp246_152 () (_ BitVec 64))
(declare-fun temp246_153 () (_ BitVec 64))
(declare-fun temp246_154 () (_ BitVec 64))
(declare-fun temp246_155 () (_ BitVec 64))
(declare-fun temp246_157 () (_ BitVec 64))
(declare-fun temp246_158 () (_ BitVec 64))
(declare-fun temp246_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp246_159 () (_ BitVec 64))
(declare-fun temp246_160 () (_ BitVec 64))
(declare-fun temp246_162 () (_ BitVec 64))
(declare-fun temp246_163 () (_ BitVec 64))
(declare-fun temp246_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp246_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp246_165 () (_ BitVec 64))
(declare-fun temp246_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp246_167 () (_ BitVec 64))
(declare-fun temp246_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp246_169 () (_ BitVec 64))
(declare-fun temp246_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp246_171 () (_ BitVec 64))
(declare-fun temp246_172 () (_ BitVec 64))
(declare-fun temp246_173 () (_ BitVec 64))
(declare-fun temp246_174 () (_ BitVec 64))
(declare-fun temp246_175 () (_ BitVec 64))
(declare-fun temp246_176 () (_ BitVec 64))
(declare-fun temp246_177 () (_ BitVec 64))
(declare-fun temp246_178 () (_ BitVec 64))
(declare-fun temp246_179 () (_ BitVec 64))
(declare-fun temp246_180 () (_ BitVec 64))
(declare-fun temp246_181 () (_ BitVec 64))
(declare-fun temp246_182 () (_ BitVec 64))
(declare-fun temp246_183 () (_ BitVec 64))
(declare-fun temp246_184 () (_ BitVec 64))
(declare-fun temp246_185 () (_ BitVec 64))
(declare-fun temp246_186 () (_ BitVec 64))
(declare-fun temp246_187 () (_ BitVec 64))
(declare-fun temp246_188 () (_ BitVec 64))
(declare-fun temp246_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp246_190 () (_ BitVec 64))
(declare-fun temp246_192 () (_ BitVec 64))
(declare-fun temp246_193 () (_ BitVec 64))
(declare-fun temp246_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp246_194 () (_ BitVec 64))
(declare-fun temp246_195 () (_ BitVec 64))
(declare-fun temp246_197 () (_ BitVec 64))
(declare-fun temp246_198 () (_ BitVec 64))
(declare-fun temp246_196 () (_ BitVec 64))
(declare-fun temp246_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp246_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp246_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp246_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp246_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp246_204 () (_ BitVec 64))
(declare-fun temp246_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp246_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp246_207 () (_ BitVec 64))
(declare-fun temp246_208 () (_ BitVec 64))
(declare-fun temp246_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp246_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp246_211 () (_ BitVec 64))
(declare-fun temp246_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp246_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp246_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211962 () (_ BitVec 64))
(declare-fun temp246_215 () (_ BitVec 64))
(declare-fun var211963 () (_ BitVec 64))
(declare-fun temp246_216 () (_ BitVec 64))
(assert (= temp246_1 #x0000000000000001))
(assert (= var77203 temp246_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp246_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp246_2)))
(assert (= temp246_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp246_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp246_4 #x0000000000000000))
(assert (= var210941 temp246_4))
(assert (= temp246_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp246_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp246_6 #x0000000000000000))
(assert (= var210986 temp246_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp246_7 #x0000000000000000))
(assert (= temp246_8 temp246_7))
(assert (= temp246_9 (select ARGNAME_padding_NAMEEND_VAL temp246_8)))
(assert (= temp246_10 #x0000000000000001))
(assert (= temp246_11 temp246_10))
(assert (= temp246_12 (select ARGNAME_padding_NAMEEND_VAL temp246_11)))
(assert (= temp246_13 #x0000000000000002))
(assert (= temp246_14 temp246_13))
(assert (= temp246_15 (select ARGNAME_padding_NAMEEND_VAL temp246_14)))
(assert (= temp246_16 #x0000000000000003))
(assert (= temp246_17 temp246_16))
(assert (= temp246_18 (select ARGNAME_padding_NAMEEND_VAL temp246_17)))
(assert (= temp246_19 #x0000000000000004))
(assert (= temp246_20 temp246_19))
(assert (= temp246_21 (select ARGNAME_padding_NAMEEND_VAL temp246_20)))
(assert (= temp246_22 #x0000000000000005))
(assert (= temp246_23 temp246_22))
(assert (= temp246_24 (select ARGNAME_padding_NAMEEND_VAL temp246_23)))
(assert (= temp246_25 #x0000000000000000))
(assert (= temp246_26 #x0000000000000000))
(assert (= temp246_27 temp246_26))
(assert (= temp246_28 (select ARGNAME_padding_NAMEEND_VAL temp246_27)))
(assert (= temp246_29 #x0000000000000000))
(assert (= temp246_30 #x0000000000000001))
(assert (= temp246_31 temp246_30))
(assert (= temp246_32 (select ARGNAME_padding_NAMEEND_VAL temp246_31)))
(assert (= temp246_33 #x0000000000000000))
(assert (= temp246_34 #x0000000000000002))
(assert (= temp246_35 temp246_34))
(assert (= temp246_36 (select ARGNAME_padding_NAMEEND_VAL temp246_35)))
(assert (= temp246_37 #x0000000000000000))
(assert (= temp246_38 #x0000000000000003))
(assert (= temp246_39 temp246_38))
(assert (= temp246_40 (select ARGNAME_padding_NAMEEND_VAL temp246_39)))
(assert (= temp246_41 #x0000000000000000))
(assert (= temp246_42 #x0000000000000004))
(assert (= temp246_43 temp246_42))
(assert (= temp246_44 (select ARGNAME_padding_NAMEEND_VAL temp246_43)))
(assert (= temp246_45 #x0000000000000000))
(assert (= temp246_46 #x0000000000000005))
(assert (= temp246_47 temp246_46))
(assert (= temp246_48 (select ARGNAME_padding_NAMEEND_VAL temp246_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp246_28 temp246_25)
             (bvslt temp246_32 temp246_29)
             (bvslt temp246_36 temp246_33)
             (bvslt temp246_40 temp246_37)
             (bvslt temp246_44 temp246_41)
             (bvslt temp246_48 temp246_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp246_49 #x0000000000000000))
(assert (= var1191714 temp246_49))
(assert (= temp246_50 #x0000000000000000))
(assert (= temp246_51 temp246_50))
(assert (= temp246_52 (select ARGNAME_output_padding_NAMEEND_VAL temp246_51)))
(assert (= temp246_53 #x0000000000000001))
(assert (= temp246_54 temp246_53))
(assert (= temp246_55 (select ARGNAME_output_padding_NAMEEND_VAL temp246_54)))
(assert (= temp246_56 #x0000000000000002))
(assert (= temp246_57 temp246_56))
(assert (= temp246_58 (select ARGNAME_output_padding_NAMEEND_VAL temp246_57)))
(assert (= temp246_59 #x0000000000000003))
(assert (= temp246_60 temp246_59))
(assert (= temp246_61 (select ARGNAME_output_padding_NAMEEND_VAL temp246_60)))
(assert (= temp246_62 #x0000000000000004))
(assert (= temp246_63 temp246_62))
(assert (= temp246_64 (select ARGNAME_output_padding_NAMEEND_VAL temp246_63)))
(assert (= temp246_65 #x0000000000000005))
(assert (= temp246_66 temp246_65))
(assert (= temp246_67 (select ARGNAME_output_padding_NAMEEND_VAL temp246_66)))
(assert (= temp246_68 #x0000000000000000))
(assert (= temp246_69 #x0000000000000000))
(assert (= temp246_70 temp246_69))
(assert (= temp246_71 (select ARGNAME_output_padding_NAMEEND_VAL temp246_70)))
(assert (= temp246_72 #x0000000000000000))
(assert (= temp246_73 #x0000000000000001))
(assert (= temp246_74 temp246_73))
(assert (= temp246_75 (select ARGNAME_output_padding_NAMEEND_VAL temp246_74)))
(assert (= temp246_76 #x0000000000000000))
(assert (= temp246_77 #x0000000000000002))
(assert (= temp246_78 temp246_77))
(assert (= temp246_79 (select ARGNAME_output_padding_NAMEEND_VAL temp246_78)))
(assert (= temp246_80 #x0000000000000000))
(assert (= temp246_81 #x0000000000000003))
(assert (= temp246_82 temp246_81))
(assert (= temp246_83 (select ARGNAME_output_padding_NAMEEND_VAL temp246_82)))
(assert (= temp246_84 #x0000000000000000))
(assert (= temp246_85 #x0000000000000004))
(assert (= temp246_86 temp246_85))
(assert (= temp246_87 (select ARGNAME_output_padding_NAMEEND_VAL temp246_86)))
(assert (= temp246_88 #x0000000000000000))
(assert (= temp246_89 #x0000000000000005))
(assert (= temp246_90 temp246_89))
(assert (= temp246_91 (select ARGNAME_output_padding_NAMEEND_VAL temp246_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp246_71 temp246_68)
             (bvslt temp246_75 temp246_72)
             (bvslt temp246_79 temp246_76)
             (bvslt temp246_83 temp246_80)
             (bvslt temp246_87 temp246_84)
             (bvslt temp246_91 temp246_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp246_92 #x0000000000000000))
(assert (= var1191725 temp246_92))
(assert (= temp246_93 #x0000000000000000))
(assert (= temp246_94 temp246_93))
(assert (= temp246_95 (select ARGNAME_stride_NAMEEND_VAL temp246_94)))
(assert (= temp246_96 #x0000000000000001))
(assert (= temp246_97 temp246_96))
(assert (= temp246_98 (select ARGNAME_stride_NAMEEND_VAL temp246_97)))
(assert (= temp246_99 #x0000000000000002))
(assert (= temp246_100 temp246_99))
(assert (= temp246_101 (select ARGNAME_stride_NAMEEND_VAL temp246_100)))
(assert (= temp246_102 #x0000000000000003))
(assert (= temp246_103 temp246_102))
(assert (= temp246_104 (select ARGNAME_stride_NAMEEND_VAL temp246_103)))
(assert (= temp246_105 #x0000000000000004))
(assert (= temp246_106 temp246_105))
(assert (= temp246_107 (select ARGNAME_stride_NAMEEND_VAL temp246_106)))
(assert (= temp246_108 #x0000000000000005))
(assert (= temp246_109 temp246_108))
(assert (= temp246_110 (select ARGNAME_stride_NAMEEND_VAL temp246_109)))
(assert (= temp246_111 #x0000000000000000))
(assert (= temp246_112 #x0000000000000000))
(assert (= temp246_113 temp246_112))
(assert (= temp246_114 (select ARGNAME_stride_NAMEEND_VAL temp246_113)))
(assert (= temp246_115 #x0000000000000000))
(assert (= temp246_116 #x0000000000000001))
(assert (= temp246_117 temp246_116))
(assert (= temp246_118 (select ARGNAME_stride_NAMEEND_VAL temp246_117)))
(assert (= temp246_119 #x0000000000000000))
(assert (= temp246_120 #x0000000000000002))
(assert (= temp246_121 temp246_120))
(assert (= temp246_122 (select ARGNAME_stride_NAMEEND_VAL temp246_121)))
(assert (= temp246_123 #x0000000000000000))
(assert (= temp246_124 #x0000000000000003))
(assert (= temp246_125 temp246_124))
(assert (= temp246_126 (select ARGNAME_stride_NAMEEND_VAL temp246_125)))
(assert (= temp246_127 #x0000000000000000))
(assert (= temp246_128 #x0000000000000004))
(assert (= temp246_129 temp246_128))
(assert (= temp246_130 (select ARGNAME_stride_NAMEEND_VAL temp246_129)))
(assert (= temp246_131 #x0000000000000000))
(assert (= temp246_132 #x0000000000000005))
(assert (= temp246_133 temp246_132))
(assert (= temp246_134 (select ARGNAME_stride_NAMEEND_VAL temp246_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp246_114 temp246_111)
             (bvsle temp246_118 temp246_115)
             (bvsle temp246_122 temp246_119)
             (bvsle temp246_126 temp246_123)
             (bvsle temp246_130 temp246_127)
             (bvsle temp246_134 temp246_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp246_135 #x0000000000000000))
(assert (= var1191735 temp246_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp246_136 #x0000000000000001))
(assert (= var1191747 temp246_136))
(assert (= temp246_137 #x0000000000000000))
(assert (= var1179826 temp246_137))
(assert (= temp246_138 #x0000000000000000))
(assert (= temp246_139 temp246_138))
(assert (= temp246_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp246_139)))
(assert (= temp246_141 #x0000000000000001))
(assert (= temp246_142 temp246_141))
(assert (= temp246_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp246_142)))
(assert (= temp246_144 #x0000000000000002))
(assert (= temp246_145 temp246_144))
(assert (= temp246_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp246_145)))
(assert (= temp246_147 #x0000000000000003))
(assert (= temp246_148 temp246_147))
(assert (= temp246_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp246_148)))
(assert (= temp246_150 #x0000000000000004))
(assert (= temp246_151 temp246_150))
(assert (= temp246_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp246_151)))
(assert (= temp246_153 #x0000000000000005))
(assert (= temp246_154 temp246_153))
(assert (= temp246_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp246_154)))
(assert (= temp246_157 var1179826))
(assert (= temp246_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp246_157)))
(assert (= temp246_156 temp246_158))
(assert (= var1191780
   (ite (bvslt temp246_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp246_159 #x0000000000000000))
(assert (= var1191780 temp246_159))
(assert (= temp246_160 #x0000000000000000))
(assert (= var1179826 temp246_160))
(assert (= temp246_162 var1179826))
(assert (= temp246_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp246_162)))
(assert (= temp246_161 temp246_163))
(assert (= var1191802 (bvsmod temp246_161 ARGNAME_groups_NAMEEND)))
(assert (= temp246_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp246_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp246_165 #x0000000000000001))
(assert (= var1191803 temp246_165))
(assert (= temp246_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp246_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp246_167 #x0000000000000001))
(assert (= var1191823 temp246_167))
(assert (= temp246_168 #x0000000000000001))
(assert (= var1180714 temp246_168))
(assert (= temp246_169 #x0000000000000000))
(assert (= temp246_170 temp246_169))
(assert (= temp246_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp246_170)))
(assert (= temp246_172 #x0000000000000001))
(assert (= temp246_173 temp246_172))
(assert (= temp246_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp246_173)))
(assert (= temp246_175 #x0000000000000002))
(assert (= temp246_176 temp246_175))
(assert (= temp246_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp246_176)))
(assert (= temp246_178 #x0000000000000003))
(assert (= temp246_179 temp246_178))
(assert (= temp246_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp246_179)))
(assert (= temp246_181 #x0000000000000004))
(assert (= temp246_182 temp246_181))
(assert (= temp246_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp246_182)))
(assert (= temp246_184 #x0000000000000005))
(assert (= temp246_185 temp246_184))
(assert (= temp246_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp246_185)))
(assert (= temp246_187 #x0000000000000000))
(assert (= temp246_188
   (ite (bvslt var1180714 temp246_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp246_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp246_188)))
(assert (= var1191831 temp246_189))
(assert (bvslt (ite (bvslt var1180714 temp246_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp246_190 #x0000000000000001))
(assert (= var1180714 temp246_190))
(assert (= temp246_192 var1180714))
(assert (= temp246_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp246_192)))
(assert (= temp246_191 temp246_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp246_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp246_194 #x0000000000000001))
(assert (= var1191836 temp246_194))
(assert (= temp246_195 #x0000000000000000))
(assert (= var1179826 temp246_195))
(assert (= temp246_197 var1179826))
(assert (= temp246_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp246_197)))
(assert (= temp246_196 temp246_198))
(assert (= temp246_199 #x0000000000000002))
(assert (= var1586025 temp246_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp246_200 #x0000000000000001))
(assert (= var1191993 temp246_200))
(assert (= temp246_201 #x0000000000000001))
(assert (= var2700303 temp246_201))
(assert (= temp246_202 #x0000000000000001))
(assert (= var2962447 temp246_202))
(assert (= temp246_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp246_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp246_204 #x0000000000000001))
(assert (= var211058 temp246_204))
(assert (= temp246_205 #x0000000000000001))
(assert (= var211188 temp246_205))
(assert (= var3879401 var211188))
(assert (= temp246_206 #x0000000000000000))
(assert (= var3866802 temp246_206))
(assert (= temp246_207 #x0000000000000000))
(assert (= temp246_208
   (ite (bvslt var3866802 temp246_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp246_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp246_208)))
(assert (= var3879420 temp246_209))
(assert (bvslt (ite (bvslt var3866802 temp246_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp246_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp246_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp246_211 #x0000000000000001))
(assert (= var3879421 temp246_211))
(assert (= temp246_212 #x0000000000000000))
(assert (= var4079423 temp246_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp246_213 #x0000000000000002))
(assert (= var4208259 temp246_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp246_214 #x0000000000000000))
(assert (= var4273820 temp246_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211962 var210913))
(assert (= temp246_215 #x0000000000000000))
(assert (= var211963
   (ite (distinct var211962 temp246_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp246_216 #x0000000000000001))
(assert (= var211058 temp246_216))
(model-add temp246_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp246_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp246_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp246_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




