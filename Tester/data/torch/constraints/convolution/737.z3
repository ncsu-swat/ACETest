(declare-fun temp982_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp982_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp982_3 () (_ BitVec 64))
(declare-fun temp982_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp982_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp982_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp982_7 () (_ BitVec 64))
(declare-fun temp982_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp982_9 () (_ BitVec 64))
(declare-fun temp982_10 () (_ BitVec 64))
(declare-fun temp982_11 () (_ BitVec 64))
(declare-fun temp982_12 () (_ BitVec 64))
(declare-fun temp982_13 () (_ BitVec 64))
(declare-fun temp982_14 () (_ BitVec 64))
(declare-fun temp982_15 () (_ BitVec 64))
(declare-fun temp982_16 () (_ BitVec 64))
(declare-fun temp982_17 () (_ BitVec 64))
(declare-fun temp982_18 () (_ BitVec 64))
(declare-fun temp982_19 () (_ BitVec 64))
(declare-fun temp982_20 () (_ BitVec 64))
(declare-fun temp982_21 () (_ BitVec 64))
(declare-fun temp982_22 () (_ BitVec 64))
(declare-fun temp982_23 () (_ BitVec 64))
(declare-fun temp982_24 () (_ BitVec 64))
(declare-fun temp982_25 () (_ BitVec 64))
(declare-fun temp982_26 () (_ BitVec 64))
(declare-fun temp982_27 () (_ BitVec 64))
(declare-fun temp982_28 () (_ BitVec 64))
(declare-fun temp982_29 () (_ BitVec 64))
(declare-fun temp982_30 () (_ BitVec 64))
(declare-fun temp982_31 () (_ BitVec 64))
(declare-fun temp982_32 () (_ BitVec 64))
(declare-fun temp982_33 () (_ BitVec 64))
(declare-fun temp982_34 () (_ BitVec 64))
(declare-fun temp982_35 () (_ BitVec 64))
(declare-fun temp982_36 () (_ BitVec 64))
(declare-fun temp982_37 () (_ BitVec 64))
(declare-fun temp982_38 () (_ BitVec 64))
(declare-fun temp982_39 () (_ BitVec 64))
(declare-fun temp982_40 () (_ BitVec 64))
(declare-fun temp982_41 () (_ BitVec 64))
(declare-fun temp982_42 () (_ BitVec 64))
(declare-fun temp982_43 () (_ BitVec 64))
(declare-fun temp982_44 () (_ BitVec 64))
(declare-fun temp982_45 () (_ BitVec 64))
(declare-fun temp982_46 () (_ BitVec 64))
(declare-fun temp982_47 () (_ BitVec 64))
(declare-fun temp982_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp982_49 () (_ BitVec 64))
(declare-fun temp982_50 () (_ BitVec 64))
(declare-fun temp982_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp982_52 () (_ BitVec 64))
(declare-fun temp982_53 () (_ BitVec 64))
(declare-fun temp982_54 () (_ BitVec 64))
(declare-fun temp982_55 () (_ BitVec 64))
(declare-fun temp982_56 () (_ BitVec 64))
(declare-fun temp982_57 () (_ BitVec 64))
(declare-fun temp982_58 () (_ BitVec 64))
(declare-fun temp982_59 () (_ BitVec 64))
(declare-fun temp982_60 () (_ BitVec 64))
(declare-fun temp982_61 () (_ BitVec 64))
(declare-fun temp982_62 () (_ BitVec 64))
(declare-fun temp982_63 () (_ BitVec 64))
(declare-fun temp982_64 () (_ BitVec 64))
(declare-fun temp982_65 () (_ BitVec 64))
(declare-fun temp982_66 () (_ BitVec 64))
(declare-fun temp982_67 () (_ BitVec 64))
(declare-fun temp982_68 () (_ BitVec 64))
(declare-fun temp982_69 () (_ BitVec 64))
(declare-fun temp982_70 () (_ BitVec 64))
(declare-fun temp982_71 () (_ BitVec 64))
(declare-fun temp982_72 () (_ BitVec 64))
(declare-fun temp982_73 () (_ BitVec 64))
(declare-fun temp982_74 () (_ BitVec 64))
(declare-fun temp982_75 () (_ BitVec 64))
(declare-fun temp982_76 () (_ BitVec 64))
(declare-fun temp982_77 () (_ BitVec 64))
(declare-fun temp982_78 () (_ BitVec 64))
(declare-fun temp982_79 () (_ BitVec 64))
(declare-fun temp982_80 () (_ BitVec 64))
(declare-fun temp982_81 () (_ BitVec 64))
(declare-fun temp982_82 () (_ BitVec 64))
(declare-fun temp982_83 () (_ BitVec 64))
(declare-fun temp982_84 () (_ BitVec 64))
(declare-fun temp982_85 () (_ BitVec 64))
(declare-fun temp982_86 () (_ BitVec 64))
(declare-fun temp982_87 () (_ BitVec 64))
(declare-fun temp982_88 () (_ BitVec 64))
(declare-fun temp982_89 () (_ BitVec 64))
(declare-fun temp982_90 () (_ BitVec 64))
(declare-fun temp982_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp982_92 () (_ BitVec 64))
(declare-fun temp982_93 () (_ BitVec 64))
(declare-fun temp982_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp982_95 () (_ BitVec 64))
(declare-fun temp982_96 () (_ BitVec 64))
(declare-fun temp982_97 () (_ BitVec 64))
(declare-fun temp982_98 () (_ BitVec 64))
(declare-fun temp982_99 () (_ BitVec 64))
(declare-fun temp982_100 () (_ BitVec 64))
(declare-fun temp982_101 () (_ BitVec 64))
(declare-fun temp982_102 () (_ BitVec 64))
(declare-fun temp982_103 () (_ BitVec 64))
(declare-fun temp982_104 () (_ BitVec 64))
(declare-fun temp982_105 () (_ BitVec 64))
(declare-fun temp982_106 () (_ BitVec 64))
(declare-fun temp982_107 () (_ BitVec 64))
(declare-fun temp982_108 () (_ BitVec 64))
(declare-fun temp982_109 () (_ BitVec 64))
(declare-fun temp982_110 () (_ BitVec 64))
(declare-fun temp982_111 () (_ BitVec 64))
(declare-fun temp982_112 () (_ BitVec 64))
(declare-fun temp982_113 () (_ BitVec 64))
(declare-fun temp982_114 () (_ BitVec 64))
(declare-fun temp982_115 () (_ BitVec 64))
(declare-fun temp982_116 () (_ BitVec 64))
(declare-fun temp982_117 () (_ BitVec 64))
(declare-fun temp982_118 () (_ BitVec 64))
(declare-fun temp982_119 () (_ BitVec 64))
(declare-fun temp982_120 () (_ BitVec 64))
(declare-fun temp982_121 () (_ BitVec 64))
(declare-fun temp982_122 () (_ BitVec 64))
(declare-fun temp982_123 () (_ BitVec 64))
(declare-fun temp982_124 () (_ BitVec 64))
(declare-fun temp982_125 () (_ BitVec 64))
(declare-fun temp982_126 () (_ BitVec 64))
(declare-fun temp982_127 () (_ BitVec 64))
(declare-fun temp982_128 () (_ BitVec 64))
(declare-fun temp982_129 () (_ BitVec 64))
(declare-fun temp982_130 () (_ BitVec 64))
(declare-fun temp982_131 () (_ BitVec 64))
(declare-fun temp982_132 () (_ BitVec 64))
(declare-fun temp982_133 () (_ BitVec 64))
(declare-fun temp982_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp982_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp982_136 () (_ BitVec 64))
(declare-fun temp982_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp982_138 () (_ BitVec 64))
(declare-fun temp982_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp982_140 () (_ BitVec 64))
(declare-fun temp982_141 () (_ BitVec 64))
(declare-fun temp982_142 () (_ BitVec 64))
(declare-fun temp982_143 () (_ BitVec 64))
(declare-fun temp982_144 () (_ BitVec 64))
(declare-fun temp982_145 () (_ BitVec 64))
(declare-fun temp982_146 () (_ BitVec 64))
(declare-fun temp982_147 () (_ BitVec 64))
(declare-fun temp982_148 () (_ BitVec 64))
(declare-fun temp982_149 () (_ BitVec 64))
(declare-fun temp982_150 () (_ BitVec 64))
(declare-fun temp982_151 () (_ BitVec 64))
(declare-fun temp982_152 () (_ BitVec 64))
(declare-fun temp982_153 () (_ BitVec 64))
(declare-fun temp982_154 () (_ BitVec 64))
(declare-fun temp982_155 () (_ BitVec 64))
(declare-fun temp982_157 () (_ BitVec 64))
(declare-fun temp982_158 () (_ BitVec 64))
(declare-fun temp982_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp982_159 () (_ BitVec 64))
(declare-fun temp982_160 () (_ BitVec 64))
(declare-fun temp982_162 () (_ BitVec 64))
(declare-fun temp982_163 () (_ BitVec 64))
(declare-fun temp982_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp982_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp982_165 () (_ BitVec 64))
(declare-fun temp982_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp982_167 () (_ BitVec 64))
(declare-fun temp982_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp982_169 () (_ BitVec 64))
(declare-fun temp982_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp982_171 () (_ BitVec 64))
(declare-fun temp982_172 () (_ BitVec 64))
(declare-fun temp982_173 () (_ BitVec 64))
(declare-fun temp982_174 () (_ BitVec 64))
(declare-fun temp982_175 () (_ BitVec 64))
(declare-fun temp982_176 () (_ BitVec 64))
(declare-fun temp982_177 () (_ BitVec 64))
(declare-fun temp982_178 () (_ BitVec 64))
(declare-fun temp982_179 () (_ BitVec 64))
(declare-fun temp982_180 () (_ BitVec 64))
(declare-fun temp982_181 () (_ BitVec 64))
(declare-fun temp982_182 () (_ BitVec 64))
(declare-fun temp982_183 () (_ BitVec 64))
(declare-fun temp982_184 () (_ BitVec 64))
(declare-fun temp982_185 () (_ BitVec 64))
(declare-fun temp982_186 () (_ BitVec 64))
(declare-fun temp982_187 () (_ BitVec 64))
(declare-fun temp982_188 () (_ BitVec 64))
(declare-fun temp982_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp982_190 () (_ BitVec 64))
(declare-fun temp982_192 () (_ BitVec 64))
(declare-fun temp982_193 () (_ BitVec 64))
(declare-fun temp982_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp982_194 () (_ BitVec 64))
(declare-fun temp982_195 () (_ BitVec 64))
(declare-fun temp982_197 () (_ BitVec 64))
(declare-fun temp982_198 () (_ BitVec 64))
(declare-fun temp982_196 () (_ BitVec 64))
(declare-fun temp982_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp982_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp982_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp982_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp982_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp982_204 () (_ BitVec 64))
(declare-fun temp982_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp982_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp982_207 () (_ BitVec 64))
(declare-fun temp982_208 () (_ BitVec 64))
(declare-fun temp982_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp982_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp982_211 () (_ BitVec 64))
(declare-fun temp982_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp982_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp982_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun temp982_215 () (_ BitVec 64))
(assert (= temp982_1 #x0000000000000001))
(assert (= var77203 temp982_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp982_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp982_2)))
(assert (= temp982_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp982_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp982_4 #x0000000000000000))
(assert (= var210941 temp982_4))
(assert (= temp982_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp982_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp982_6 #x0000000000000000))
(assert (= var210986 temp982_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp982_7 #x0000000000000000))
(assert (= temp982_8 temp982_7))
(assert (= temp982_9 (select ARGNAME_padding_NAMEEND_VAL temp982_8)))
(assert (= temp982_10 #x0000000000000001))
(assert (= temp982_11 temp982_10))
(assert (= temp982_12 (select ARGNAME_padding_NAMEEND_VAL temp982_11)))
(assert (= temp982_13 #x0000000000000002))
(assert (= temp982_14 temp982_13))
(assert (= temp982_15 (select ARGNAME_padding_NAMEEND_VAL temp982_14)))
(assert (= temp982_16 #x0000000000000003))
(assert (= temp982_17 temp982_16))
(assert (= temp982_18 (select ARGNAME_padding_NAMEEND_VAL temp982_17)))
(assert (= temp982_19 #x0000000000000004))
(assert (= temp982_20 temp982_19))
(assert (= temp982_21 (select ARGNAME_padding_NAMEEND_VAL temp982_20)))
(assert (= temp982_22 #x0000000000000005))
(assert (= temp982_23 temp982_22))
(assert (= temp982_24 (select ARGNAME_padding_NAMEEND_VAL temp982_23)))
(assert (= temp982_25 #x0000000000000000))
(assert (= temp982_26 #x0000000000000000))
(assert (= temp982_27 temp982_26))
(assert (= temp982_28 (select ARGNAME_padding_NAMEEND_VAL temp982_27)))
(assert (= temp982_29 #x0000000000000000))
(assert (= temp982_30 #x0000000000000001))
(assert (= temp982_31 temp982_30))
(assert (= temp982_32 (select ARGNAME_padding_NAMEEND_VAL temp982_31)))
(assert (= temp982_33 #x0000000000000000))
(assert (= temp982_34 #x0000000000000002))
(assert (= temp982_35 temp982_34))
(assert (= temp982_36 (select ARGNAME_padding_NAMEEND_VAL temp982_35)))
(assert (= temp982_37 #x0000000000000000))
(assert (= temp982_38 #x0000000000000003))
(assert (= temp982_39 temp982_38))
(assert (= temp982_40 (select ARGNAME_padding_NAMEEND_VAL temp982_39)))
(assert (= temp982_41 #x0000000000000000))
(assert (= temp982_42 #x0000000000000004))
(assert (= temp982_43 temp982_42))
(assert (= temp982_44 (select ARGNAME_padding_NAMEEND_VAL temp982_43)))
(assert (= temp982_45 #x0000000000000000))
(assert (= temp982_46 #x0000000000000005))
(assert (= temp982_47 temp982_46))
(assert (= temp982_48 (select ARGNAME_padding_NAMEEND_VAL temp982_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp982_28 temp982_25)
             (bvslt temp982_32 temp982_29)
             (bvslt temp982_36 temp982_33)
             (bvslt temp982_40 temp982_37)
             (bvslt temp982_44 temp982_41)
             (bvslt temp982_48 temp982_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp982_49 #x0000000000000000))
(assert (= var1191714 temp982_49))
(assert (= temp982_50 #x0000000000000000))
(assert (= temp982_51 temp982_50))
(assert (= temp982_52 (select ARGNAME_output_padding_NAMEEND_VAL temp982_51)))
(assert (= temp982_53 #x0000000000000001))
(assert (= temp982_54 temp982_53))
(assert (= temp982_55 (select ARGNAME_output_padding_NAMEEND_VAL temp982_54)))
(assert (= temp982_56 #x0000000000000002))
(assert (= temp982_57 temp982_56))
(assert (= temp982_58 (select ARGNAME_output_padding_NAMEEND_VAL temp982_57)))
(assert (= temp982_59 #x0000000000000003))
(assert (= temp982_60 temp982_59))
(assert (= temp982_61 (select ARGNAME_output_padding_NAMEEND_VAL temp982_60)))
(assert (= temp982_62 #x0000000000000004))
(assert (= temp982_63 temp982_62))
(assert (= temp982_64 (select ARGNAME_output_padding_NAMEEND_VAL temp982_63)))
(assert (= temp982_65 #x0000000000000005))
(assert (= temp982_66 temp982_65))
(assert (= temp982_67 (select ARGNAME_output_padding_NAMEEND_VAL temp982_66)))
(assert (= temp982_68 #x0000000000000000))
(assert (= temp982_69 #x0000000000000000))
(assert (= temp982_70 temp982_69))
(assert (= temp982_71 (select ARGNAME_output_padding_NAMEEND_VAL temp982_70)))
(assert (= temp982_72 #x0000000000000000))
(assert (= temp982_73 #x0000000000000001))
(assert (= temp982_74 temp982_73))
(assert (= temp982_75 (select ARGNAME_output_padding_NAMEEND_VAL temp982_74)))
(assert (= temp982_76 #x0000000000000000))
(assert (= temp982_77 #x0000000000000002))
(assert (= temp982_78 temp982_77))
(assert (= temp982_79 (select ARGNAME_output_padding_NAMEEND_VAL temp982_78)))
(assert (= temp982_80 #x0000000000000000))
(assert (= temp982_81 #x0000000000000003))
(assert (= temp982_82 temp982_81))
(assert (= temp982_83 (select ARGNAME_output_padding_NAMEEND_VAL temp982_82)))
(assert (= temp982_84 #x0000000000000000))
(assert (= temp982_85 #x0000000000000004))
(assert (= temp982_86 temp982_85))
(assert (= temp982_87 (select ARGNAME_output_padding_NAMEEND_VAL temp982_86)))
(assert (= temp982_88 #x0000000000000000))
(assert (= temp982_89 #x0000000000000005))
(assert (= temp982_90 temp982_89))
(assert (= temp982_91 (select ARGNAME_output_padding_NAMEEND_VAL temp982_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp982_71 temp982_68)
             (bvslt temp982_75 temp982_72)
             (bvslt temp982_79 temp982_76)
             (bvslt temp982_83 temp982_80)
             (bvslt temp982_87 temp982_84)
             (bvslt temp982_91 temp982_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp982_92 #x0000000000000000))
(assert (= var1191725 temp982_92))
(assert (= temp982_93 #x0000000000000000))
(assert (= temp982_94 temp982_93))
(assert (= temp982_95 (select ARGNAME_stride_NAMEEND_VAL temp982_94)))
(assert (= temp982_96 #x0000000000000001))
(assert (= temp982_97 temp982_96))
(assert (= temp982_98 (select ARGNAME_stride_NAMEEND_VAL temp982_97)))
(assert (= temp982_99 #x0000000000000002))
(assert (= temp982_100 temp982_99))
(assert (= temp982_101 (select ARGNAME_stride_NAMEEND_VAL temp982_100)))
(assert (= temp982_102 #x0000000000000003))
(assert (= temp982_103 temp982_102))
(assert (= temp982_104 (select ARGNAME_stride_NAMEEND_VAL temp982_103)))
(assert (= temp982_105 #x0000000000000004))
(assert (= temp982_106 temp982_105))
(assert (= temp982_107 (select ARGNAME_stride_NAMEEND_VAL temp982_106)))
(assert (= temp982_108 #x0000000000000005))
(assert (= temp982_109 temp982_108))
(assert (= temp982_110 (select ARGNAME_stride_NAMEEND_VAL temp982_109)))
(assert (= temp982_111 #x0000000000000000))
(assert (= temp982_112 #x0000000000000000))
(assert (= temp982_113 temp982_112))
(assert (= temp982_114 (select ARGNAME_stride_NAMEEND_VAL temp982_113)))
(assert (= temp982_115 #x0000000000000000))
(assert (= temp982_116 #x0000000000000001))
(assert (= temp982_117 temp982_116))
(assert (= temp982_118 (select ARGNAME_stride_NAMEEND_VAL temp982_117)))
(assert (= temp982_119 #x0000000000000000))
(assert (= temp982_120 #x0000000000000002))
(assert (= temp982_121 temp982_120))
(assert (= temp982_122 (select ARGNAME_stride_NAMEEND_VAL temp982_121)))
(assert (= temp982_123 #x0000000000000000))
(assert (= temp982_124 #x0000000000000003))
(assert (= temp982_125 temp982_124))
(assert (= temp982_126 (select ARGNAME_stride_NAMEEND_VAL temp982_125)))
(assert (= temp982_127 #x0000000000000000))
(assert (= temp982_128 #x0000000000000004))
(assert (= temp982_129 temp982_128))
(assert (= temp982_130 (select ARGNAME_stride_NAMEEND_VAL temp982_129)))
(assert (= temp982_131 #x0000000000000000))
(assert (= temp982_132 #x0000000000000005))
(assert (= temp982_133 temp982_132))
(assert (= temp982_134 (select ARGNAME_stride_NAMEEND_VAL temp982_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp982_114 temp982_111)
             (bvsle temp982_118 temp982_115)
             (bvsle temp982_122 temp982_119)
             (bvsle temp982_126 temp982_123)
             (bvsle temp982_130 temp982_127)
             (bvsle temp982_134 temp982_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp982_135 #x0000000000000000))
(assert (= var1191735 temp982_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp982_136 #x0000000000000001))
(assert (= var1191747 temp982_136))
(assert (= temp982_137 #x0000000000000000))
(assert (= var1179826 temp982_137))
(assert (= temp982_138 #x0000000000000000))
(assert (= temp982_139 temp982_138))
(assert (= temp982_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp982_139)))
(assert (= temp982_141 #x0000000000000001))
(assert (= temp982_142 temp982_141))
(assert (= temp982_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp982_142)))
(assert (= temp982_144 #x0000000000000002))
(assert (= temp982_145 temp982_144))
(assert (= temp982_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp982_145)))
(assert (= temp982_147 #x0000000000000003))
(assert (= temp982_148 temp982_147))
(assert (= temp982_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp982_148)))
(assert (= temp982_150 #x0000000000000004))
(assert (= temp982_151 temp982_150))
(assert (= temp982_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp982_151)))
(assert (= temp982_153 #x0000000000000005))
(assert (= temp982_154 temp982_153))
(assert (= temp982_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp982_154)))
(assert (= temp982_157 var1179826))
(assert (= temp982_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp982_157)))
(assert (= temp982_156 temp982_158))
(assert (= var1191780
   (ite (bvslt temp982_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp982_159 #x0000000000000000))
(assert (= var1191780 temp982_159))
(assert (= temp982_160 #x0000000000000000))
(assert (= var1179826 temp982_160))
(assert (= temp982_162 var1179826))
(assert (= temp982_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp982_162)))
(assert (= temp982_161 temp982_163))
(assert (= var1191802 (bvsmod temp982_161 ARGNAME_groups_NAMEEND)))
(assert (= temp982_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp982_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp982_165 #x0000000000000001))
(assert (= var1191803 temp982_165))
(assert (= temp982_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp982_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp982_167 #x0000000000000001))
(assert (= var1191823 temp982_167))
(assert (= temp982_168 #x0000000000000001))
(assert (= var1180714 temp982_168))
(assert (= temp982_169 #x0000000000000000))
(assert (= temp982_170 temp982_169))
(assert (= temp982_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp982_170)))
(assert (= temp982_172 #x0000000000000001))
(assert (= temp982_173 temp982_172))
(assert (= temp982_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp982_173)))
(assert (= temp982_175 #x0000000000000002))
(assert (= temp982_176 temp982_175))
(assert (= temp982_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp982_176)))
(assert (= temp982_178 #x0000000000000003))
(assert (= temp982_179 temp982_178))
(assert (= temp982_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp982_179)))
(assert (= temp982_181 #x0000000000000004))
(assert (= temp982_182 temp982_181))
(assert (= temp982_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp982_182)))
(assert (= temp982_184 #x0000000000000005))
(assert (= temp982_185 temp982_184))
(assert (= temp982_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp982_185)))
(assert (= temp982_187 #x0000000000000000))
(assert (= temp982_188
   (ite (bvslt var1180714 temp982_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp982_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp982_188)))
(assert (= var1191831 temp982_189))
(assert (bvslt (ite (bvslt var1180714 temp982_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp982_190 #x0000000000000001))
(assert (= var1180714 temp982_190))
(assert (= temp982_192 var1180714))
(assert (= temp982_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp982_192)))
(assert (= temp982_191 temp982_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp982_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp982_194 #x0000000000000001))
(assert (= var1191836 temp982_194))
(assert (= temp982_195 #x0000000000000000))
(assert (= var1179826 temp982_195))
(assert (= temp982_197 var1179826))
(assert (= temp982_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp982_197)))
(assert (= temp982_196 temp982_198))
(assert (= temp982_199 #x0000000000000002))
(assert (= var1586025 temp982_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp982_200 #x0000000000000001))
(assert (= var1191993 temp982_200))
(assert (= temp982_201 #x0000000000000001))
(assert (= var2700303 temp982_201))
(assert (= temp982_202 #x0000000000000001))
(assert (= var2962447 temp982_202))
(assert (= temp982_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp982_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp982_204 #x0000000000000001))
(assert (= var211058 temp982_204))
(assert (= temp982_205 #x0000000000000001))
(assert (= var211188 temp982_205))
(assert (= var3879401 var211188))
(assert (= temp982_206 #x0000000000000000))
(assert (= var3866802 temp982_206))
(assert (= temp982_207 #x0000000000000000))
(assert (= temp982_208
   (ite (bvslt var3866802 temp982_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp982_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp982_208)))
(assert (= var3879420 temp982_209))
(assert (bvslt (ite (bvslt var3866802 temp982_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp982_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp982_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp982_211 #x0000000000000001))
(assert (= var3879421 temp982_211))
(assert (= temp982_212 #x0000000000000000))
(assert (= var4079423 temp982_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp982_213 #x0000000000000002))
(assert (= var4208259 temp982_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp982_214 #x0000000000000000))
(assert (= var4273820 temp982_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5124496 var211201))
(assert (= var5386640 var211201))
(assert (= temp982_215 #x0000000000000001))
(assert (= var211058 temp982_215))
(model-add temp982_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp982_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp982_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp982_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



