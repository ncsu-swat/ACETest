(declare-fun temp378_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp378_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp378_3 () (_ BitVec 64))
(declare-fun temp378_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp378_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp378_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp378_7 () (_ BitVec 64))
(declare-fun temp378_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp378_9 () (_ BitVec 64))
(declare-fun temp378_10 () (_ BitVec 64))
(declare-fun temp378_11 () (_ BitVec 64))
(declare-fun temp378_12 () (_ BitVec 64))
(declare-fun temp378_13 () (_ BitVec 64))
(declare-fun temp378_14 () (_ BitVec 64))
(declare-fun temp378_15 () (_ BitVec 64))
(declare-fun temp378_16 () (_ BitVec 64))
(declare-fun temp378_17 () (_ BitVec 64))
(declare-fun temp378_18 () (_ BitVec 64))
(declare-fun temp378_19 () (_ BitVec 64))
(declare-fun temp378_20 () (_ BitVec 64))
(declare-fun temp378_21 () (_ BitVec 64))
(declare-fun temp378_22 () (_ BitVec 64))
(declare-fun temp378_23 () (_ BitVec 64))
(declare-fun temp378_24 () (_ BitVec 64))
(declare-fun temp378_25 () (_ BitVec 64))
(declare-fun temp378_26 () (_ BitVec 64))
(declare-fun temp378_27 () (_ BitVec 64))
(declare-fun temp378_28 () (_ BitVec 64))
(declare-fun temp378_29 () (_ BitVec 64))
(declare-fun temp378_30 () (_ BitVec 64))
(declare-fun temp378_31 () (_ BitVec 64))
(declare-fun temp378_32 () (_ BitVec 64))
(declare-fun temp378_33 () (_ BitVec 64))
(declare-fun temp378_34 () (_ BitVec 64))
(declare-fun temp378_35 () (_ BitVec 64))
(declare-fun temp378_36 () (_ BitVec 64))
(declare-fun temp378_37 () (_ BitVec 64))
(declare-fun temp378_38 () (_ BitVec 64))
(declare-fun temp378_39 () (_ BitVec 64))
(declare-fun temp378_40 () (_ BitVec 64))
(declare-fun temp378_41 () (_ BitVec 64))
(declare-fun temp378_42 () (_ BitVec 64))
(declare-fun temp378_43 () (_ BitVec 64))
(declare-fun temp378_44 () (_ BitVec 64))
(declare-fun temp378_45 () (_ BitVec 64))
(declare-fun temp378_46 () (_ BitVec 64))
(declare-fun temp378_47 () (_ BitVec 64))
(declare-fun temp378_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp378_49 () (_ BitVec 64))
(declare-fun temp378_50 () (_ BitVec 64))
(declare-fun temp378_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp378_52 () (_ BitVec 64))
(declare-fun temp378_53 () (_ BitVec 64))
(declare-fun temp378_54 () (_ BitVec 64))
(declare-fun temp378_55 () (_ BitVec 64))
(declare-fun temp378_56 () (_ BitVec 64))
(declare-fun temp378_57 () (_ BitVec 64))
(declare-fun temp378_58 () (_ BitVec 64))
(declare-fun temp378_59 () (_ BitVec 64))
(declare-fun temp378_60 () (_ BitVec 64))
(declare-fun temp378_61 () (_ BitVec 64))
(declare-fun temp378_62 () (_ BitVec 64))
(declare-fun temp378_63 () (_ BitVec 64))
(declare-fun temp378_64 () (_ BitVec 64))
(declare-fun temp378_65 () (_ BitVec 64))
(declare-fun temp378_66 () (_ BitVec 64))
(declare-fun temp378_67 () (_ BitVec 64))
(declare-fun temp378_68 () (_ BitVec 64))
(declare-fun temp378_69 () (_ BitVec 64))
(declare-fun temp378_70 () (_ BitVec 64))
(declare-fun temp378_71 () (_ BitVec 64))
(declare-fun temp378_72 () (_ BitVec 64))
(declare-fun temp378_73 () (_ BitVec 64))
(declare-fun temp378_74 () (_ BitVec 64))
(declare-fun temp378_75 () (_ BitVec 64))
(declare-fun temp378_76 () (_ BitVec 64))
(declare-fun temp378_77 () (_ BitVec 64))
(declare-fun temp378_78 () (_ BitVec 64))
(declare-fun temp378_79 () (_ BitVec 64))
(declare-fun temp378_80 () (_ BitVec 64))
(declare-fun temp378_81 () (_ BitVec 64))
(declare-fun temp378_82 () (_ BitVec 64))
(declare-fun temp378_83 () (_ BitVec 64))
(declare-fun temp378_84 () (_ BitVec 64))
(declare-fun temp378_85 () (_ BitVec 64))
(declare-fun temp378_86 () (_ BitVec 64))
(declare-fun temp378_87 () (_ BitVec 64))
(declare-fun temp378_88 () (_ BitVec 64))
(declare-fun temp378_89 () (_ BitVec 64))
(declare-fun temp378_90 () (_ BitVec 64))
(declare-fun temp378_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp378_92 () (_ BitVec 64))
(declare-fun temp378_93 () (_ BitVec 64))
(declare-fun temp378_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp378_95 () (_ BitVec 64))
(declare-fun temp378_96 () (_ BitVec 64))
(declare-fun temp378_97 () (_ BitVec 64))
(declare-fun temp378_98 () (_ BitVec 64))
(declare-fun temp378_99 () (_ BitVec 64))
(declare-fun temp378_100 () (_ BitVec 64))
(declare-fun temp378_101 () (_ BitVec 64))
(declare-fun temp378_102 () (_ BitVec 64))
(declare-fun temp378_103 () (_ BitVec 64))
(declare-fun temp378_104 () (_ BitVec 64))
(declare-fun temp378_105 () (_ BitVec 64))
(declare-fun temp378_106 () (_ BitVec 64))
(declare-fun temp378_107 () (_ BitVec 64))
(declare-fun temp378_108 () (_ BitVec 64))
(declare-fun temp378_109 () (_ BitVec 64))
(declare-fun temp378_110 () (_ BitVec 64))
(declare-fun temp378_111 () (_ BitVec 64))
(declare-fun temp378_112 () (_ BitVec 64))
(declare-fun temp378_113 () (_ BitVec 64))
(declare-fun temp378_114 () (_ BitVec 64))
(declare-fun temp378_115 () (_ BitVec 64))
(declare-fun temp378_116 () (_ BitVec 64))
(declare-fun temp378_117 () (_ BitVec 64))
(declare-fun temp378_118 () (_ BitVec 64))
(declare-fun temp378_119 () (_ BitVec 64))
(declare-fun temp378_120 () (_ BitVec 64))
(declare-fun temp378_121 () (_ BitVec 64))
(declare-fun temp378_122 () (_ BitVec 64))
(declare-fun temp378_123 () (_ BitVec 64))
(declare-fun temp378_124 () (_ BitVec 64))
(declare-fun temp378_125 () (_ BitVec 64))
(declare-fun temp378_126 () (_ BitVec 64))
(declare-fun temp378_127 () (_ BitVec 64))
(declare-fun temp378_128 () (_ BitVec 64))
(declare-fun temp378_129 () (_ BitVec 64))
(declare-fun temp378_130 () (_ BitVec 64))
(declare-fun temp378_131 () (_ BitVec 64))
(declare-fun temp378_132 () (_ BitVec 64))
(declare-fun temp378_133 () (_ BitVec 64))
(declare-fun temp378_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp378_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp378_136 () (_ BitVec 64))
(declare-fun temp378_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp378_138 () (_ BitVec 64))
(declare-fun temp378_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp378_140 () (_ BitVec 64))
(declare-fun temp378_141 () (_ BitVec 64))
(declare-fun temp378_142 () (_ BitVec 64))
(declare-fun temp378_143 () (_ BitVec 64))
(declare-fun temp378_144 () (_ BitVec 64))
(declare-fun temp378_145 () (_ BitVec 64))
(declare-fun temp378_146 () (_ BitVec 64))
(declare-fun temp378_147 () (_ BitVec 64))
(declare-fun temp378_148 () (_ BitVec 64))
(declare-fun temp378_149 () (_ BitVec 64))
(declare-fun temp378_150 () (_ BitVec 64))
(declare-fun temp378_151 () (_ BitVec 64))
(declare-fun temp378_152 () (_ BitVec 64))
(declare-fun temp378_153 () (_ BitVec 64))
(declare-fun temp378_154 () (_ BitVec 64))
(declare-fun temp378_155 () (_ BitVec 64))
(declare-fun temp378_157 () (_ BitVec 64))
(declare-fun temp378_158 () (_ BitVec 64))
(declare-fun temp378_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp378_159 () (_ BitVec 64))
(declare-fun temp378_160 () (_ BitVec 64))
(declare-fun temp378_162 () (_ BitVec 64))
(declare-fun temp378_163 () (_ BitVec 64))
(declare-fun temp378_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp378_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp378_165 () (_ BitVec 64))
(declare-fun temp378_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp378_167 () (_ BitVec 64))
(declare-fun temp378_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp378_169 () (_ BitVec 64))
(declare-fun temp378_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp378_171 () (_ BitVec 64))
(declare-fun temp378_172 () (_ BitVec 64))
(declare-fun temp378_173 () (_ BitVec 64))
(declare-fun temp378_174 () (_ BitVec 64))
(declare-fun temp378_175 () (_ BitVec 64))
(declare-fun temp378_176 () (_ BitVec 64))
(declare-fun temp378_177 () (_ BitVec 64))
(declare-fun temp378_178 () (_ BitVec 64))
(declare-fun temp378_179 () (_ BitVec 64))
(declare-fun temp378_180 () (_ BitVec 64))
(declare-fun temp378_181 () (_ BitVec 64))
(declare-fun temp378_182 () (_ BitVec 64))
(declare-fun temp378_183 () (_ BitVec 64))
(declare-fun temp378_184 () (_ BitVec 64))
(declare-fun temp378_185 () (_ BitVec 64))
(declare-fun temp378_186 () (_ BitVec 64))
(declare-fun temp378_187 () (_ BitVec 64))
(declare-fun temp378_188 () (_ BitVec 64))
(declare-fun temp378_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp378_190 () (_ BitVec 64))
(declare-fun temp378_192 () (_ BitVec 64))
(declare-fun temp378_193 () (_ BitVec 64))
(declare-fun temp378_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp378_194 () (_ BitVec 64))
(declare-fun temp378_195 () (_ BitVec 64))
(declare-fun temp378_197 () (_ BitVec 64))
(declare-fun temp378_198 () (_ BitVec 64))
(declare-fun temp378_196 () (_ BitVec 64))
(declare-fun temp378_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp378_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp378_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp378_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp378_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp378_204 () (_ BitVec 64))
(declare-fun temp378_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp378_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp378_207 () (_ BitVec 64))
(declare-fun temp378_208 () (_ BitVec 64))
(declare-fun temp378_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp378_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp378_211 () (_ BitVec 64))
(declare-fun temp378_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp378_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp378_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp378_215 () (_ BitVec 64))
(assert (= temp378_1 #x0000000000000001))
(assert (= var77203 temp378_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp378_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp378_2)))
(assert (= temp378_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp378_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp378_4 #x0000000000000000))
(assert (= var210941 temp378_4))
(assert (= temp378_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp378_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp378_6 #x0000000000000000))
(assert (= var210986 temp378_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp378_7 #x0000000000000000))
(assert (= temp378_8 temp378_7))
(assert (= temp378_9 (select ARGNAME_padding_NAMEEND_VAL temp378_8)))
(assert (= temp378_10 #x0000000000000001))
(assert (= temp378_11 temp378_10))
(assert (= temp378_12 (select ARGNAME_padding_NAMEEND_VAL temp378_11)))
(assert (= temp378_13 #x0000000000000002))
(assert (= temp378_14 temp378_13))
(assert (= temp378_15 (select ARGNAME_padding_NAMEEND_VAL temp378_14)))
(assert (= temp378_16 #x0000000000000003))
(assert (= temp378_17 temp378_16))
(assert (= temp378_18 (select ARGNAME_padding_NAMEEND_VAL temp378_17)))
(assert (= temp378_19 #x0000000000000004))
(assert (= temp378_20 temp378_19))
(assert (= temp378_21 (select ARGNAME_padding_NAMEEND_VAL temp378_20)))
(assert (= temp378_22 #x0000000000000005))
(assert (= temp378_23 temp378_22))
(assert (= temp378_24 (select ARGNAME_padding_NAMEEND_VAL temp378_23)))
(assert (= temp378_25 #x0000000000000000))
(assert (= temp378_26 #x0000000000000000))
(assert (= temp378_27 temp378_26))
(assert (= temp378_28 (select ARGNAME_padding_NAMEEND_VAL temp378_27)))
(assert (= temp378_29 #x0000000000000000))
(assert (= temp378_30 #x0000000000000001))
(assert (= temp378_31 temp378_30))
(assert (= temp378_32 (select ARGNAME_padding_NAMEEND_VAL temp378_31)))
(assert (= temp378_33 #x0000000000000000))
(assert (= temp378_34 #x0000000000000002))
(assert (= temp378_35 temp378_34))
(assert (= temp378_36 (select ARGNAME_padding_NAMEEND_VAL temp378_35)))
(assert (= temp378_37 #x0000000000000000))
(assert (= temp378_38 #x0000000000000003))
(assert (= temp378_39 temp378_38))
(assert (= temp378_40 (select ARGNAME_padding_NAMEEND_VAL temp378_39)))
(assert (= temp378_41 #x0000000000000000))
(assert (= temp378_42 #x0000000000000004))
(assert (= temp378_43 temp378_42))
(assert (= temp378_44 (select ARGNAME_padding_NAMEEND_VAL temp378_43)))
(assert (= temp378_45 #x0000000000000000))
(assert (= temp378_46 #x0000000000000005))
(assert (= temp378_47 temp378_46))
(assert (= temp378_48 (select ARGNAME_padding_NAMEEND_VAL temp378_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp378_28 temp378_25)
             (bvslt temp378_32 temp378_29)
             (bvslt temp378_36 temp378_33)
             (bvslt temp378_40 temp378_37)
             (bvslt temp378_44 temp378_41)
             (bvslt temp378_48 temp378_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp378_49 #x0000000000000000))
(assert (= var1191714 temp378_49))
(assert (= temp378_50 #x0000000000000000))
(assert (= temp378_51 temp378_50))
(assert (= temp378_52 (select ARGNAME_output_padding_NAMEEND_VAL temp378_51)))
(assert (= temp378_53 #x0000000000000001))
(assert (= temp378_54 temp378_53))
(assert (= temp378_55 (select ARGNAME_output_padding_NAMEEND_VAL temp378_54)))
(assert (= temp378_56 #x0000000000000002))
(assert (= temp378_57 temp378_56))
(assert (= temp378_58 (select ARGNAME_output_padding_NAMEEND_VAL temp378_57)))
(assert (= temp378_59 #x0000000000000003))
(assert (= temp378_60 temp378_59))
(assert (= temp378_61 (select ARGNAME_output_padding_NAMEEND_VAL temp378_60)))
(assert (= temp378_62 #x0000000000000004))
(assert (= temp378_63 temp378_62))
(assert (= temp378_64 (select ARGNAME_output_padding_NAMEEND_VAL temp378_63)))
(assert (= temp378_65 #x0000000000000005))
(assert (= temp378_66 temp378_65))
(assert (= temp378_67 (select ARGNAME_output_padding_NAMEEND_VAL temp378_66)))
(assert (= temp378_68 #x0000000000000000))
(assert (= temp378_69 #x0000000000000000))
(assert (= temp378_70 temp378_69))
(assert (= temp378_71 (select ARGNAME_output_padding_NAMEEND_VAL temp378_70)))
(assert (= temp378_72 #x0000000000000000))
(assert (= temp378_73 #x0000000000000001))
(assert (= temp378_74 temp378_73))
(assert (= temp378_75 (select ARGNAME_output_padding_NAMEEND_VAL temp378_74)))
(assert (= temp378_76 #x0000000000000000))
(assert (= temp378_77 #x0000000000000002))
(assert (= temp378_78 temp378_77))
(assert (= temp378_79 (select ARGNAME_output_padding_NAMEEND_VAL temp378_78)))
(assert (= temp378_80 #x0000000000000000))
(assert (= temp378_81 #x0000000000000003))
(assert (= temp378_82 temp378_81))
(assert (= temp378_83 (select ARGNAME_output_padding_NAMEEND_VAL temp378_82)))
(assert (= temp378_84 #x0000000000000000))
(assert (= temp378_85 #x0000000000000004))
(assert (= temp378_86 temp378_85))
(assert (= temp378_87 (select ARGNAME_output_padding_NAMEEND_VAL temp378_86)))
(assert (= temp378_88 #x0000000000000000))
(assert (= temp378_89 #x0000000000000005))
(assert (= temp378_90 temp378_89))
(assert (= temp378_91 (select ARGNAME_output_padding_NAMEEND_VAL temp378_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp378_71 temp378_68)
             (bvslt temp378_75 temp378_72)
             (bvslt temp378_79 temp378_76)
             (bvslt temp378_83 temp378_80)
             (bvslt temp378_87 temp378_84)
             (bvslt temp378_91 temp378_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp378_92 #x0000000000000000))
(assert (= var1191725 temp378_92))
(assert (= temp378_93 #x0000000000000000))
(assert (= temp378_94 temp378_93))
(assert (= temp378_95 (select ARGNAME_stride_NAMEEND_VAL temp378_94)))
(assert (= temp378_96 #x0000000000000001))
(assert (= temp378_97 temp378_96))
(assert (= temp378_98 (select ARGNAME_stride_NAMEEND_VAL temp378_97)))
(assert (= temp378_99 #x0000000000000002))
(assert (= temp378_100 temp378_99))
(assert (= temp378_101 (select ARGNAME_stride_NAMEEND_VAL temp378_100)))
(assert (= temp378_102 #x0000000000000003))
(assert (= temp378_103 temp378_102))
(assert (= temp378_104 (select ARGNAME_stride_NAMEEND_VAL temp378_103)))
(assert (= temp378_105 #x0000000000000004))
(assert (= temp378_106 temp378_105))
(assert (= temp378_107 (select ARGNAME_stride_NAMEEND_VAL temp378_106)))
(assert (= temp378_108 #x0000000000000005))
(assert (= temp378_109 temp378_108))
(assert (= temp378_110 (select ARGNAME_stride_NAMEEND_VAL temp378_109)))
(assert (= temp378_111 #x0000000000000000))
(assert (= temp378_112 #x0000000000000000))
(assert (= temp378_113 temp378_112))
(assert (= temp378_114 (select ARGNAME_stride_NAMEEND_VAL temp378_113)))
(assert (= temp378_115 #x0000000000000000))
(assert (= temp378_116 #x0000000000000001))
(assert (= temp378_117 temp378_116))
(assert (= temp378_118 (select ARGNAME_stride_NAMEEND_VAL temp378_117)))
(assert (= temp378_119 #x0000000000000000))
(assert (= temp378_120 #x0000000000000002))
(assert (= temp378_121 temp378_120))
(assert (= temp378_122 (select ARGNAME_stride_NAMEEND_VAL temp378_121)))
(assert (= temp378_123 #x0000000000000000))
(assert (= temp378_124 #x0000000000000003))
(assert (= temp378_125 temp378_124))
(assert (= temp378_126 (select ARGNAME_stride_NAMEEND_VAL temp378_125)))
(assert (= temp378_127 #x0000000000000000))
(assert (= temp378_128 #x0000000000000004))
(assert (= temp378_129 temp378_128))
(assert (= temp378_130 (select ARGNAME_stride_NAMEEND_VAL temp378_129)))
(assert (= temp378_131 #x0000000000000000))
(assert (= temp378_132 #x0000000000000005))
(assert (= temp378_133 temp378_132))
(assert (= temp378_134 (select ARGNAME_stride_NAMEEND_VAL temp378_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp378_114 temp378_111)
             (bvsle temp378_118 temp378_115)
             (bvsle temp378_122 temp378_119)
             (bvsle temp378_126 temp378_123)
             (bvsle temp378_130 temp378_127)
             (bvsle temp378_134 temp378_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp378_135 #x0000000000000000))
(assert (= var1191735 temp378_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp378_136 #x0000000000000001))
(assert (= var1191747 temp378_136))
(assert (= temp378_137 #x0000000000000000))
(assert (= var1179826 temp378_137))
(assert (= temp378_138 #x0000000000000000))
(assert (= temp378_139 temp378_138))
(assert (= temp378_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp378_139)))
(assert (= temp378_141 #x0000000000000001))
(assert (= temp378_142 temp378_141))
(assert (= temp378_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp378_142)))
(assert (= temp378_144 #x0000000000000002))
(assert (= temp378_145 temp378_144))
(assert (= temp378_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp378_145)))
(assert (= temp378_147 #x0000000000000003))
(assert (= temp378_148 temp378_147))
(assert (= temp378_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp378_148)))
(assert (= temp378_150 #x0000000000000004))
(assert (= temp378_151 temp378_150))
(assert (= temp378_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp378_151)))
(assert (= temp378_153 #x0000000000000005))
(assert (= temp378_154 temp378_153))
(assert (= temp378_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp378_154)))
(assert (= temp378_157 var1179826))
(assert (= temp378_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp378_157)))
(assert (= temp378_156 temp378_158))
(assert (= var1191780
   (ite (bvslt temp378_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp378_159 #x0000000000000000))
(assert (= var1191780 temp378_159))
(assert (= temp378_160 #x0000000000000000))
(assert (= var1179826 temp378_160))
(assert (= temp378_162 var1179826))
(assert (= temp378_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp378_162)))
(assert (= temp378_161 temp378_163))
(assert (= var1191802 (bvsmod temp378_161 ARGNAME_groups_NAMEEND)))
(assert (= temp378_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp378_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp378_165 #x0000000000000001))
(assert (= var1191803 temp378_165))
(assert (= temp378_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp378_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp378_167 #x0000000000000001))
(assert (= var1191823 temp378_167))
(assert (= temp378_168 #x0000000000000001))
(assert (= var1180714 temp378_168))
(assert (= temp378_169 #x0000000000000000))
(assert (= temp378_170 temp378_169))
(assert (= temp378_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp378_170)))
(assert (= temp378_172 #x0000000000000001))
(assert (= temp378_173 temp378_172))
(assert (= temp378_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp378_173)))
(assert (= temp378_175 #x0000000000000002))
(assert (= temp378_176 temp378_175))
(assert (= temp378_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp378_176)))
(assert (= temp378_178 #x0000000000000003))
(assert (= temp378_179 temp378_178))
(assert (= temp378_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp378_179)))
(assert (= temp378_181 #x0000000000000004))
(assert (= temp378_182 temp378_181))
(assert (= temp378_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp378_182)))
(assert (= temp378_184 #x0000000000000005))
(assert (= temp378_185 temp378_184))
(assert (= temp378_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp378_185)))
(assert (= temp378_187 #x0000000000000000))
(assert (= temp378_188
   (ite (bvslt var1180714 temp378_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp378_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp378_188)))
(assert (= var1191831 temp378_189))
(assert (bvslt (ite (bvslt var1180714 temp378_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp378_190 #x0000000000000001))
(assert (= var1180714 temp378_190))
(assert (= temp378_192 var1180714))
(assert (= temp378_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp378_192)))
(assert (= temp378_191 temp378_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp378_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp378_194 #x0000000000000001))
(assert (= var1191836 temp378_194))
(assert (= temp378_195 #x0000000000000000))
(assert (= var1179826 temp378_195))
(assert (= temp378_197 var1179826))
(assert (= temp378_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp378_197)))
(assert (= temp378_196 temp378_198))
(assert (= temp378_199 #x0000000000000002))
(assert (= var1586025 temp378_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp378_200 #x0000000000000001))
(assert (= var1191993 temp378_200))
(assert (= temp378_201 #x0000000000000001))
(assert (= var2700303 temp378_201))
(assert (= temp378_202 #x0000000000000001))
(assert (= var2962447 temp378_202))
(assert (= temp378_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp378_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp378_204 #x0000000000000001))
(assert (= var211058 temp378_204))
(assert (= temp378_205 #x0000000000000001))
(assert (= var211188 temp378_205))
(assert (= var3879401 var211188))
(assert (= temp378_206 #x0000000000000000))
(assert (= var3866802 temp378_206))
(assert (= temp378_207 #x0000000000000000))
(assert (= temp378_208
   (ite (bvslt var3866802 temp378_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp378_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp378_208)))
(assert (= var3879420 temp378_209))
(assert (bvslt (ite (bvslt var3866802 temp378_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp378_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp378_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp378_211 #x0000000000000001))
(assert (= var3879421 temp378_211))
(assert (= temp378_212 #x0000000000000000))
(assert (= var4079423 temp378_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp378_213 #x0000000000000002))
(assert (= var4208259 temp378_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp378_214 #x0000000000000000))
(assert (= var4273820 temp378_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp378_215 #x0000000000000001))
(assert (= var211058 temp378_215))
(model-add temp378_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp378_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp378_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp378_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



