(declare-fun temp810_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp810_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp810_3 () (_ BitVec 64))
(declare-fun temp810_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp810_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp810_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp810_7 () (_ BitVec 64))
(declare-fun temp810_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp810_9 () (_ BitVec 64))
(declare-fun temp810_10 () (_ BitVec 64))
(declare-fun temp810_11 () (_ BitVec 64))
(declare-fun temp810_12 () (_ BitVec 64))
(declare-fun temp810_13 () (_ BitVec 64))
(declare-fun temp810_14 () (_ BitVec 64))
(declare-fun temp810_15 () (_ BitVec 64))
(declare-fun temp810_16 () (_ BitVec 64))
(declare-fun temp810_17 () (_ BitVec 64))
(declare-fun temp810_18 () (_ BitVec 64))
(declare-fun temp810_19 () (_ BitVec 64))
(declare-fun temp810_20 () (_ BitVec 64))
(declare-fun temp810_21 () (_ BitVec 64))
(declare-fun temp810_22 () (_ BitVec 64))
(declare-fun temp810_23 () (_ BitVec 64))
(declare-fun temp810_24 () (_ BitVec 64))
(declare-fun temp810_25 () (_ BitVec 64))
(declare-fun temp810_26 () (_ BitVec 64))
(declare-fun temp810_27 () (_ BitVec 64))
(declare-fun temp810_28 () (_ BitVec 64))
(declare-fun temp810_29 () (_ BitVec 64))
(declare-fun temp810_30 () (_ BitVec 64))
(declare-fun temp810_31 () (_ BitVec 64))
(declare-fun temp810_32 () (_ BitVec 64))
(declare-fun temp810_33 () (_ BitVec 64))
(declare-fun temp810_34 () (_ BitVec 64))
(declare-fun temp810_35 () (_ BitVec 64))
(declare-fun temp810_36 () (_ BitVec 64))
(declare-fun temp810_37 () (_ BitVec 64))
(declare-fun temp810_38 () (_ BitVec 64))
(declare-fun temp810_39 () (_ BitVec 64))
(declare-fun temp810_40 () (_ BitVec 64))
(declare-fun temp810_41 () (_ BitVec 64))
(declare-fun temp810_42 () (_ BitVec 64))
(declare-fun temp810_43 () (_ BitVec 64))
(declare-fun temp810_44 () (_ BitVec 64))
(declare-fun temp810_45 () (_ BitVec 64))
(declare-fun temp810_46 () (_ BitVec 64))
(declare-fun temp810_47 () (_ BitVec 64))
(declare-fun temp810_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp810_49 () (_ BitVec 64))
(declare-fun temp810_50 () (_ BitVec 64))
(declare-fun temp810_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp810_52 () (_ BitVec 64))
(declare-fun temp810_53 () (_ BitVec 64))
(declare-fun temp810_54 () (_ BitVec 64))
(declare-fun temp810_55 () (_ BitVec 64))
(declare-fun temp810_56 () (_ BitVec 64))
(declare-fun temp810_57 () (_ BitVec 64))
(declare-fun temp810_58 () (_ BitVec 64))
(declare-fun temp810_59 () (_ BitVec 64))
(declare-fun temp810_60 () (_ BitVec 64))
(declare-fun temp810_61 () (_ BitVec 64))
(declare-fun temp810_62 () (_ BitVec 64))
(declare-fun temp810_63 () (_ BitVec 64))
(declare-fun temp810_64 () (_ BitVec 64))
(declare-fun temp810_65 () (_ BitVec 64))
(declare-fun temp810_66 () (_ BitVec 64))
(declare-fun temp810_67 () (_ BitVec 64))
(declare-fun temp810_68 () (_ BitVec 64))
(declare-fun temp810_69 () (_ BitVec 64))
(declare-fun temp810_70 () (_ BitVec 64))
(declare-fun temp810_71 () (_ BitVec 64))
(declare-fun temp810_72 () (_ BitVec 64))
(declare-fun temp810_73 () (_ BitVec 64))
(declare-fun temp810_74 () (_ BitVec 64))
(declare-fun temp810_75 () (_ BitVec 64))
(declare-fun temp810_76 () (_ BitVec 64))
(declare-fun temp810_77 () (_ BitVec 64))
(declare-fun temp810_78 () (_ BitVec 64))
(declare-fun temp810_79 () (_ BitVec 64))
(declare-fun temp810_80 () (_ BitVec 64))
(declare-fun temp810_81 () (_ BitVec 64))
(declare-fun temp810_82 () (_ BitVec 64))
(declare-fun temp810_83 () (_ BitVec 64))
(declare-fun temp810_84 () (_ BitVec 64))
(declare-fun temp810_85 () (_ BitVec 64))
(declare-fun temp810_86 () (_ BitVec 64))
(declare-fun temp810_87 () (_ BitVec 64))
(declare-fun temp810_88 () (_ BitVec 64))
(declare-fun temp810_89 () (_ BitVec 64))
(declare-fun temp810_90 () (_ BitVec 64))
(declare-fun temp810_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp810_92 () (_ BitVec 64))
(declare-fun temp810_93 () (_ BitVec 64))
(declare-fun temp810_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp810_95 () (_ BitVec 64))
(declare-fun temp810_96 () (_ BitVec 64))
(declare-fun temp810_97 () (_ BitVec 64))
(declare-fun temp810_98 () (_ BitVec 64))
(declare-fun temp810_99 () (_ BitVec 64))
(declare-fun temp810_100 () (_ BitVec 64))
(declare-fun temp810_101 () (_ BitVec 64))
(declare-fun temp810_102 () (_ BitVec 64))
(declare-fun temp810_103 () (_ BitVec 64))
(declare-fun temp810_104 () (_ BitVec 64))
(declare-fun temp810_105 () (_ BitVec 64))
(declare-fun temp810_106 () (_ BitVec 64))
(declare-fun temp810_107 () (_ BitVec 64))
(declare-fun temp810_108 () (_ BitVec 64))
(declare-fun temp810_109 () (_ BitVec 64))
(declare-fun temp810_110 () (_ BitVec 64))
(declare-fun temp810_111 () (_ BitVec 64))
(declare-fun temp810_112 () (_ BitVec 64))
(declare-fun temp810_113 () (_ BitVec 64))
(declare-fun temp810_114 () (_ BitVec 64))
(declare-fun temp810_115 () (_ BitVec 64))
(declare-fun temp810_116 () (_ BitVec 64))
(declare-fun temp810_117 () (_ BitVec 64))
(declare-fun temp810_118 () (_ BitVec 64))
(declare-fun temp810_119 () (_ BitVec 64))
(declare-fun temp810_120 () (_ BitVec 64))
(declare-fun temp810_121 () (_ BitVec 64))
(declare-fun temp810_122 () (_ BitVec 64))
(declare-fun temp810_123 () (_ BitVec 64))
(declare-fun temp810_124 () (_ BitVec 64))
(declare-fun temp810_125 () (_ BitVec 64))
(declare-fun temp810_126 () (_ BitVec 64))
(declare-fun temp810_127 () (_ BitVec 64))
(declare-fun temp810_128 () (_ BitVec 64))
(declare-fun temp810_129 () (_ BitVec 64))
(declare-fun temp810_130 () (_ BitVec 64))
(declare-fun temp810_131 () (_ BitVec 64))
(declare-fun temp810_132 () (_ BitVec 64))
(declare-fun temp810_133 () (_ BitVec 64))
(declare-fun temp810_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp810_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp810_136 () (_ BitVec 64))
(declare-fun temp810_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp810_138 () (_ BitVec 64))
(declare-fun temp810_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp810_140 () (_ BitVec 64))
(declare-fun temp810_141 () (_ BitVec 64))
(declare-fun temp810_142 () (_ BitVec 64))
(declare-fun temp810_143 () (_ BitVec 64))
(declare-fun temp810_144 () (_ BitVec 64))
(declare-fun temp810_145 () (_ BitVec 64))
(declare-fun temp810_146 () (_ BitVec 64))
(declare-fun temp810_147 () (_ BitVec 64))
(declare-fun temp810_148 () (_ BitVec 64))
(declare-fun temp810_149 () (_ BitVec 64))
(declare-fun temp810_150 () (_ BitVec 64))
(declare-fun temp810_151 () (_ BitVec 64))
(declare-fun temp810_152 () (_ BitVec 64))
(declare-fun temp810_153 () (_ BitVec 64))
(declare-fun temp810_154 () (_ BitVec 64))
(declare-fun temp810_155 () (_ BitVec 64))
(declare-fun temp810_157 () (_ BitVec 64))
(declare-fun temp810_158 () (_ BitVec 64))
(declare-fun temp810_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp810_159 () (_ BitVec 64))
(declare-fun temp810_160 () (_ BitVec 64))
(declare-fun temp810_162 () (_ BitVec 64))
(declare-fun temp810_163 () (_ BitVec 64))
(declare-fun temp810_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp810_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp810_165 () (_ BitVec 64))
(declare-fun temp810_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp810_167 () (_ BitVec 64))
(declare-fun temp810_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp810_169 () (_ BitVec 64))
(declare-fun temp810_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp810_171 () (_ BitVec 64))
(declare-fun temp810_172 () (_ BitVec 64))
(declare-fun temp810_173 () (_ BitVec 64))
(declare-fun temp810_174 () (_ BitVec 64))
(declare-fun temp810_175 () (_ BitVec 64))
(declare-fun temp810_176 () (_ BitVec 64))
(declare-fun temp810_177 () (_ BitVec 64))
(declare-fun temp810_178 () (_ BitVec 64))
(declare-fun temp810_179 () (_ BitVec 64))
(declare-fun temp810_180 () (_ BitVec 64))
(declare-fun temp810_181 () (_ BitVec 64))
(declare-fun temp810_182 () (_ BitVec 64))
(declare-fun temp810_183 () (_ BitVec 64))
(declare-fun temp810_184 () (_ BitVec 64))
(declare-fun temp810_185 () (_ BitVec 64))
(declare-fun temp810_186 () (_ BitVec 64))
(declare-fun temp810_187 () (_ BitVec 64))
(declare-fun temp810_188 () (_ BitVec 64))
(declare-fun temp810_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp810_190 () (_ BitVec 64))
(declare-fun temp810_192 () (_ BitVec 64))
(declare-fun temp810_193 () (_ BitVec 64))
(declare-fun temp810_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp810_194 () (_ BitVec 64))
(declare-fun temp810_195 () (_ BitVec 64))
(declare-fun temp810_197 () (_ BitVec 64))
(declare-fun temp810_198 () (_ BitVec 64))
(declare-fun temp810_196 () (_ BitVec 64))
(declare-fun temp810_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp810_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp810_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp810_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp810_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp810_204 () (_ BitVec 64))
(declare-fun temp810_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp810_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp810_207 () (_ BitVec 64))
(declare-fun temp810_208 () (_ BitVec 64))
(declare-fun temp810_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp810_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp810_211 () (_ BitVec 64))
(declare-fun temp810_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp810_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp810_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211820 () (_ BitVec 64))
(declare-fun temp810_215 () (_ BitVec 64))
(declare-fun var211821 () (_ BitVec 64))
(declare-fun temp810_216 () (_ BitVec 64))
(assert (= temp810_1 #x0000000000000001))
(assert (= var77203 temp810_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp810_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp810_2)))
(assert (= temp810_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp810_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp810_4 #x0000000000000000))
(assert (= var210941 temp810_4))
(assert (= temp810_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp810_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp810_6 #x0000000000000000))
(assert (= var210986 temp810_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp810_7 #x0000000000000000))
(assert (= temp810_8 temp810_7))
(assert (= temp810_9 (select ARGNAME_padding_NAMEEND_VAL temp810_8)))
(assert (= temp810_10 #x0000000000000001))
(assert (= temp810_11 temp810_10))
(assert (= temp810_12 (select ARGNAME_padding_NAMEEND_VAL temp810_11)))
(assert (= temp810_13 #x0000000000000002))
(assert (= temp810_14 temp810_13))
(assert (= temp810_15 (select ARGNAME_padding_NAMEEND_VAL temp810_14)))
(assert (= temp810_16 #x0000000000000003))
(assert (= temp810_17 temp810_16))
(assert (= temp810_18 (select ARGNAME_padding_NAMEEND_VAL temp810_17)))
(assert (= temp810_19 #x0000000000000004))
(assert (= temp810_20 temp810_19))
(assert (= temp810_21 (select ARGNAME_padding_NAMEEND_VAL temp810_20)))
(assert (= temp810_22 #x0000000000000005))
(assert (= temp810_23 temp810_22))
(assert (= temp810_24 (select ARGNAME_padding_NAMEEND_VAL temp810_23)))
(assert (= temp810_25 #x0000000000000000))
(assert (= temp810_26 #x0000000000000000))
(assert (= temp810_27 temp810_26))
(assert (= temp810_28 (select ARGNAME_padding_NAMEEND_VAL temp810_27)))
(assert (= temp810_29 #x0000000000000000))
(assert (= temp810_30 #x0000000000000001))
(assert (= temp810_31 temp810_30))
(assert (= temp810_32 (select ARGNAME_padding_NAMEEND_VAL temp810_31)))
(assert (= temp810_33 #x0000000000000000))
(assert (= temp810_34 #x0000000000000002))
(assert (= temp810_35 temp810_34))
(assert (= temp810_36 (select ARGNAME_padding_NAMEEND_VAL temp810_35)))
(assert (= temp810_37 #x0000000000000000))
(assert (= temp810_38 #x0000000000000003))
(assert (= temp810_39 temp810_38))
(assert (= temp810_40 (select ARGNAME_padding_NAMEEND_VAL temp810_39)))
(assert (= temp810_41 #x0000000000000000))
(assert (= temp810_42 #x0000000000000004))
(assert (= temp810_43 temp810_42))
(assert (= temp810_44 (select ARGNAME_padding_NAMEEND_VAL temp810_43)))
(assert (= temp810_45 #x0000000000000000))
(assert (= temp810_46 #x0000000000000005))
(assert (= temp810_47 temp810_46))
(assert (= temp810_48 (select ARGNAME_padding_NAMEEND_VAL temp810_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp810_28 temp810_25)
             (bvslt temp810_32 temp810_29)
             (bvslt temp810_36 temp810_33)
             (bvslt temp810_40 temp810_37)
             (bvslt temp810_44 temp810_41)
             (bvslt temp810_48 temp810_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp810_49 #x0000000000000000))
(assert (= var1191714 temp810_49))
(assert (= temp810_50 #x0000000000000000))
(assert (= temp810_51 temp810_50))
(assert (= temp810_52 (select ARGNAME_output_padding_NAMEEND_VAL temp810_51)))
(assert (= temp810_53 #x0000000000000001))
(assert (= temp810_54 temp810_53))
(assert (= temp810_55 (select ARGNAME_output_padding_NAMEEND_VAL temp810_54)))
(assert (= temp810_56 #x0000000000000002))
(assert (= temp810_57 temp810_56))
(assert (= temp810_58 (select ARGNAME_output_padding_NAMEEND_VAL temp810_57)))
(assert (= temp810_59 #x0000000000000003))
(assert (= temp810_60 temp810_59))
(assert (= temp810_61 (select ARGNAME_output_padding_NAMEEND_VAL temp810_60)))
(assert (= temp810_62 #x0000000000000004))
(assert (= temp810_63 temp810_62))
(assert (= temp810_64 (select ARGNAME_output_padding_NAMEEND_VAL temp810_63)))
(assert (= temp810_65 #x0000000000000005))
(assert (= temp810_66 temp810_65))
(assert (= temp810_67 (select ARGNAME_output_padding_NAMEEND_VAL temp810_66)))
(assert (= temp810_68 #x0000000000000000))
(assert (= temp810_69 #x0000000000000000))
(assert (= temp810_70 temp810_69))
(assert (= temp810_71 (select ARGNAME_output_padding_NAMEEND_VAL temp810_70)))
(assert (= temp810_72 #x0000000000000000))
(assert (= temp810_73 #x0000000000000001))
(assert (= temp810_74 temp810_73))
(assert (= temp810_75 (select ARGNAME_output_padding_NAMEEND_VAL temp810_74)))
(assert (= temp810_76 #x0000000000000000))
(assert (= temp810_77 #x0000000000000002))
(assert (= temp810_78 temp810_77))
(assert (= temp810_79 (select ARGNAME_output_padding_NAMEEND_VAL temp810_78)))
(assert (= temp810_80 #x0000000000000000))
(assert (= temp810_81 #x0000000000000003))
(assert (= temp810_82 temp810_81))
(assert (= temp810_83 (select ARGNAME_output_padding_NAMEEND_VAL temp810_82)))
(assert (= temp810_84 #x0000000000000000))
(assert (= temp810_85 #x0000000000000004))
(assert (= temp810_86 temp810_85))
(assert (= temp810_87 (select ARGNAME_output_padding_NAMEEND_VAL temp810_86)))
(assert (= temp810_88 #x0000000000000000))
(assert (= temp810_89 #x0000000000000005))
(assert (= temp810_90 temp810_89))
(assert (= temp810_91 (select ARGNAME_output_padding_NAMEEND_VAL temp810_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp810_71 temp810_68)
             (bvslt temp810_75 temp810_72)
             (bvslt temp810_79 temp810_76)
             (bvslt temp810_83 temp810_80)
             (bvslt temp810_87 temp810_84)
             (bvslt temp810_91 temp810_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp810_92 #x0000000000000000))
(assert (= var1191725 temp810_92))
(assert (= temp810_93 #x0000000000000000))
(assert (= temp810_94 temp810_93))
(assert (= temp810_95 (select ARGNAME_stride_NAMEEND_VAL temp810_94)))
(assert (= temp810_96 #x0000000000000001))
(assert (= temp810_97 temp810_96))
(assert (= temp810_98 (select ARGNAME_stride_NAMEEND_VAL temp810_97)))
(assert (= temp810_99 #x0000000000000002))
(assert (= temp810_100 temp810_99))
(assert (= temp810_101 (select ARGNAME_stride_NAMEEND_VAL temp810_100)))
(assert (= temp810_102 #x0000000000000003))
(assert (= temp810_103 temp810_102))
(assert (= temp810_104 (select ARGNAME_stride_NAMEEND_VAL temp810_103)))
(assert (= temp810_105 #x0000000000000004))
(assert (= temp810_106 temp810_105))
(assert (= temp810_107 (select ARGNAME_stride_NAMEEND_VAL temp810_106)))
(assert (= temp810_108 #x0000000000000005))
(assert (= temp810_109 temp810_108))
(assert (= temp810_110 (select ARGNAME_stride_NAMEEND_VAL temp810_109)))
(assert (= temp810_111 #x0000000000000000))
(assert (= temp810_112 #x0000000000000000))
(assert (= temp810_113 temp810_112))
(assert (= temp810_114 (select ARGNAME_stride_NAMEEND_VAL temp810_113)))
(assert (= temp810_115 #x0000000000000000))
(assert (= temp810_116 #x0000000000000001))
(assert (= temp810_117 temp810_116))
(assert (= temp810_118 (select ARGNAME_stride_NAMEEND_VAL temp810_117)))
(assert (= temp810_119 #x0000000000000000))
(assert (= temp810_120 #x0000000000000002))
(assert (= temp810_121 temp810_120))
(assert (= temp810_122 (select ARGNAME_stride_NAMEEND_VAL temp810_121)))
(assert (= temp810_123 #x0000000000000000))
(assert (= temp810_124 #x0000000000000003))
(assert (= temp810_125 temp810_124))
(assert (= temp810_126 (select ARGNAME_stride_NAMEEND_VAL temp810_125)))
(assert (= temp810_127 #x0000000000000000))
(assert (= temp810_128 #x0000000000000004))
(assert (= temp810_129 temp810_128))
(assert (= temp810_130 (select ARGNAME_stride_NAMEEND_VAL temp810_129)))
(assert (= temp810_131 #x0000000000000000))
(assert (= temp810_132 #x0000000000000005))
(assert (= temp810_133 temp810_132))
(assert (= temp810_134 (select ARGNAME_stride_NAMEEND_VAL temp810_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp810_114 temp810_111)
             (bvsle temp810_118 temp810_115)
             (bvsle temp810_122 temp810_119)
             (bvsle temp810_126 temp810_123)
             (bvsle temp810_130 temp810_127)
             (bvsle temp810_134 temp810_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp810_135 #x0000000000000000))
(assert (= var1191735 temp810_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp810_136 #x0000000000000001))
(assert (= var1191747 temp810_136))
(assert (= temp810_137 #x0000000000000000))
(assert (= var1179826 temp810_137))
(assert (= temp810_138 #x0000000000000000))
(assert (= temp810_139 temp810_138))
(assert (= temp810_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp810_139)))
(assert (= temp810_141 #x0000000000000001))
(assert (= temp810_142 temp810_141))
(assert (= temp810_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp810_142)))
(assert (= temp810_144 #x0000000000000002))
(assert (= temp810_145 temp810_144))
(assert (= temp810_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp810_145)))
(assert (= temp810_147 #x0000000000000003))
(assert (= temp810_148 temp810_147))
(assert (= temp810_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp810_148)))
(assert (= temp810_150 #x0000000000000004))
(assert (= temp810_151 temp810_150))
(assert (= temp810_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp810_151)))
(assert (= temp810_153 #x0000000000000005))
(assert (= temp810_154 temp810_153))
(assert (= temp810_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp810_154)))
(assert (= temp810_157 var1179826))
(assert (= temp810_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp810_157)))
(assert (= temp810_156 temp810_158))
(assert (= var1191780
   (ite (bvslt temp810_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp810_159 #x0000000000000000))
(assert (= var1191780 temp810_159))
(assert (= temp810_160 #x0000000000000000))
(assert (= var1179826 temp810_160))
(assert (= temp810_162 var1179826))
(assert (= temp810_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp810_162)))
(assert (= temp810_161 temp810_163))
(assert (= var1191802 (bvsmod temp810_161 ARGNAME_groups_NAMEEND)))
(assert (= temp810_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp810_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp810_165 #x0000000000000001))
(assert (= var1191803 temp810_165))
(assert (= temp810_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp810_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp810_167 #x0000000000000001))
(assert (= var1191823 temp810_167))
(assert (= temp810_168 #x0000000000000001))
(assert (= var1180714 temp810_168))
(assert (= temp810_169 #x0000000000000000))
(assert (= temp810_170 temp810_169))
(assert (= temp810_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp810_170)))
(assert (= temp810_172 #x0000000000000001))
(assert (= temp810_173 temp810_172))
(assert (= temp810_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp810_173)))
(assert (= temp810_175 #x0000000000000002))
(assert (= temp810_176 temp810_175))
(assert (= temp810_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp810_176)))
(assert (= temp810_178 #x0000000000000003))
(assert (= temp810_179 temp810_178))
(assert (= temp810_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp810_179)))
(assert (= temp810_181 #x0000000000000004))
(assert (= temp810_182 temp810_181))
(assert (= temp810_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp810_182)))
(assert (= temp810_184 #x0000000000000005))
(assert (= temp810_185 temp810_184))
(assert (= temp810_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp810_185)))
(assert (= temp810_187 #x0000000000000000))
(assert (= temp810_188
   (ite (bvslt var1180714 temp810_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp810_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp810_188)))
(assert (= var1191831 temp810_189))
(assert (bvslt (ite (bvslt var1180714 temp810_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp810_190 #x0000000000000001))
(assert (= var1180714 temp810_190))
(assert (= temp810_192 var1180714))
(assert (= temp810_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp810_192)))
(assert (= temp810_191 temp810_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp810_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp810_194 #x0000000000000001))
(assert (= var1191836 temp810_194))
(assert (= temp810_195 #x0000000000000000))
(assert (= var1179826 temp810_195))
(assert (= temp810_197 var1179826))
(assert (= temp810_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp810_197)))
(assert (= temp810_196 temp810_198))
(assert (= temp810_199 #x0000000000000002))
(assert (= var1586025 temp810_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp810_200 #x0000000000000001))
(assert (= var1191993 temp810_200))
(assert (= temp810_201 #x0000000000000001))
(assert (= var2700303 temp810_201))
(assert (= temp810_202 #x0000000000000001))
(assert (= var2962447 temp810_202))
(assert (= temp810_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp810_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp810_204 #x0000000000000001))
(assert (= var211058 temp810_204))
(assert (= temp810_205 #x0000000000000001))
(assert (= var211188 temp810_205))
(assert (= var3879401 var211188))
(assert (= temp810_206 #x0000000000000000))
(assert (= var3866802 temp810_206))
(assert (= temp810_207 #x0000000000000000))
(assert (= temp810_208
   (ite (bvslt var3866802 temp810_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp810_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp810_208)))
(assert (= var3879420 temp810_209))
(assert (bvslt (ite (bvslt var3866802 temp810_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp810_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp810_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp810_211 #x0000000000000001))
(assert (= var3879421 temp810_211))
(assert (= temp810_212 #x0000000000000000))
(assert (= var4079423 temp810_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp810_213 #x0000000000000002))
(assert (= var4208259 temp810_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp810_214 #x0000000000000000))
(assert (= var4273820 temp810_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211820 var210913))
(assert (= temp810_215 #x0000000000000000))
(assert (= var211821
   (ite (distinct var211820 temp810_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp810_216 #x0000000000000001))
(assert (= var211058 temp810_216))
(model-add temp810_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp810_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp810_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp810_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




