(declare-fun temp1092_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1092_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1092_3 () (_ BitVec 64))
(declare-fun temp1092_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1092_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1092_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1092_7 () (_ BitVec 64))
(declare-fun temp1092_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1092_9 () (_ BitVec 64))
(declare-fun temp1092_10 () (_ BitVec 64))
(declare-fun temp1092_11 () (_ BitVec 64))
(declare-fun temp1092_12 () (_ BitVec 64))
(declare-fun temp1092_13 () (_ BitVec 64))
(declare-fun temp1092_14 () (_ BitVec 64))
(declare-fun temp1092_15 () (_ BitVec 64))
(declare-fun temp1092_16 () (_ BitVec 64))
(declare-fun temp1092_17 () (_ BitVec 64))
(declare-fun temp1092_18 () (_ BitVec 64))
(declare-fun temp1092_19 () (_ BitVec 64))
(declare-fun temp1092_20 () (_ BitVec 64))
(declare-fun temp1092_21 () (_ BitVec 64))
(declare-fun temp1092_22 () (_ BitVec 64))
(declare-fun temp1092_23 () (_ BitVec 64))
(declare-fun temp1092_24 () (_ BitVec 64))
(declare-fun temp1092_25 () (_ BitVec 64))
(declare-fun temp1092_26 () (_ BitVec 64))
(declare-fun temp1092_27 () (_ BitVec 64))
(declare-fun temp1092_28 () (_ BitVec 64))
(declare-fun temp1092_29 () (_ BitVec 64))
(declare-fun temp1092_30 () (_ BitVec 64))
(declare-fun temp1092_31 () (_ BitVec 64))
(declare-fun temp1092_32 () (_ BitVec 64))
(declare-fun temp1092_33 () (_ BitVec 64))
(declare-fun temp1092_34 () (_ BitVec 64))
(declare-fun temp1092_35 () (_ BitVec 64))
(declare-fun temp1092_36 () (_ BitVec 64))
(declare-fun temp1092_37 () (_ BitVec 64))
(declare-fun temp1092_38 () (_ BitVec 64))
(declare-fun temp1092_39 () (_ BitVec 64))
(declare-fun temp1092_40 () (_ BitVec 64))
(declare-fun temp1092_41 () (_ BitVec 64))
(declare-fun temp1092_42 () (_ BitVec 64))
(declare-fun temp1092_43 () (_ BitVec 64))
(declare-fun temp1092_44 () (_ BitVec 64))
(declare-fun temp1092_45 () (_ BitVec 64))
(declare-fun temp1092_46 () (_ BitVec 64))
(declare-fun temp1092_47 () (_ BitVec 64))
(declare-fun temp1092_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1092_49 () (_ BitVec 64))
(declare-fun temp1092_50 () (_ BitVec 64))
(declare-fun temp1092_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1092_52 () (_ BitVec 64))
(declare-fun temp1092_53 () (_ BitVec 64))
(declare-fun temp1092_54 () (_ BitVec 64))
(declare-fun temp1092_55 () (_ BitVec 64))
(declare-fun temp1092_56 () (_ BitVec 64))
(declare-fun temp1092_57 () (_ BitVec 64))
(declare-fun temp1092_58 () (_ BitVec 64))
(declare-fun temp1092_59 () (_ BitVec 64))
(declare-fun temp1092_60 () (_ BitVec 64))
(declare-fun temp1092_61 () (_ BitVec 64))
(declare-fun temp1092_62 () (_ BitVec 64))
(declare-fun temp1092_63 () (_ BitVec 64))
(declare-fun temp1092_64 () (_ BitVec 64))
(declare-fun temp1092_65 () (_ BitVec 64))
(declare-fun temp1092_66 () (_ BitVec 64))
(declare-fun temp1092_67 () (_ BitVec 64))
(declare-fun temp1092_68 () (_ BitVec 64))
(declare-fun temp1092_69 () (_ BitVec 64))
(declare-fun temp1092_70 () (_ BitVec 64))
(declare-fun temp1092_71 () (_ BitVec 64))
(declare-fun temp1092_72 () (_ BitVec 64))
(declare-fun temp1092_73 () (_ BitVec 64))
(declare-fun temp1092_74 () (_ BitVec 64))
(declare-fun temp1092_75 () (_ BitVec 64))
(declare-fun temp1092_76 () (_ BitVec 64))
(declare-fun temp1092_77 () (_ BitVec 64))
(declare-fun temp1092_78 () (_ BitVec 64))
(declare-fun temp1092_79 () (_ BitVec 64))
(declare-fun temp1092_80 () (_ BitVec 64))
(declare-fun temp1092_81 () (_ BitVec 64))
(declare-fun temp1092_82 () (_ BitVec 64))
(declare-fun temp1092_83 () (_ BitVec 64))
(declare-fun temp1092_84 () (_ BitVec 64))
(declare-fun temp1092_85 () (_ BitVec 64))
(declare-fun temp1092_86 () (_ BitVec 64))
(declare-fun temp1092_87 () (_ BitVec 64))
(declare-fun temp1092_88 () (_ BitVec 64))
(declare-fun temp1092_89 () (_ BitVec 64))
(declare-fun temp1092_90 () (_ BitVec 64))
(declare-fun temp1092_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1092_92 () (_ BitVec 64))
(declare-fun temp1092_93 () (_ BitVec 64))
(declare-fun temp1092_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1092_95 () (_ BitVec 64))
(declare-fun temp1092_96 () (_ BitVec 64))
(declare-fun temp1092_97 () (_ BitVec 64))
(declare-fun temp1092_98 () (_ BitVec 64))
(declare-fun temp1092_99 () (_ BitVec 64))
(declare-fun temp1092_100 () (_ BitVec 64))
(declare-fun temp1092_101 () (_ BitVec 64))
(declare-fun temp1092_102 () (_ BitVec 64))
(declare-fun temp1092_103 () (_ BitVec 64))
(declare-fun temp1092_104 () (_ BitVec 64))
(declare-fun temp1092_105 () (_ BitVec 64))
(declare-fun temp1092_106 () (_ BitVec 64))
(declare-fun temp1092_107 () (_ BitVec 64))
(declare-fun temp1092_108 () (_ BitVec 64))
(declare-fun temp1092_109 () (_ BitVec 64))
(declare-fun temp1092_110 () (_ BitVec 64))
(declare-fun temp1092_111 () (_ BitVec 64))
(declare-fun temp1092_112 () (_ BitVec 64))
(declare-fun temp1092_113 () (_ BitVec 64))
(declare-fun temp1092_114 () (_ BitVec 64))
(declare-fun temp1092_115 () (_ BitVec 64))
(declare-fun temp1092_116 () (_ BitVec 64))
(declare-fun temp1092_117 () (_ BitVec 64))
(declare-fun temp1092_118 () (_ BitVec 64))
(declare-fun temp1092_119 () (_ BitVec 64))
(declare-fun temp1092_120 () (_ BitVec 64))
(declare-fun temp1092_121 () (_ BitVec 64))
(declare-fun temp1092_122 () (_ BitVec 64))
(declare-fun temp1092_123 () (_ BitVec 64))
(declare-fun temp1092_124 () (_ BitVec 64))
(declare-fun temp1092_125 () (_ BitVec 64))
(declare-fun temp1092_126 () (_ BitVec 64))
(declare-fun temp1092_127 () (_ BitVec 64))
(declare-fun temp1092_128 () (_ BitVec 64))
(declare-fun temp1092_129 () (_ BitVec 64))
(declare-fun temp1092_130 () (_ BitVec 64))
(declare-fun temp1092_131 () (_ BitVec 64))
(declare-fun temp1092_132 () (_ BitVec 64))
(declare-fun temp1092_133 () (_ BitVec 64))
(declare-fun temp1092_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1092_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1092_136 () (_ BitVec 64))
(declare-fun temp1092_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1092_138 () (_ BitVec 64))
(declare-fun temp1092_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1092_140 () (_ BitVec 64))
(declare-fun temp1092_141 () (_ BitVec 64))
(declare-fun temp1092_142 () (_ BitVec 64))
(declare-fun temp1092_143 () (_ BitVec 64))
(declare-fun temp1092_144 () (_ BitVec 64))
(declare-fun temp1092_145 () (_ BitVec 64))
(declare-fun temp1092_146 () (_ BitVec 64))
(declare-fun temp1092_147 () (_ BitVec 64))
(declare-fun temp1092_148 () (_ BitVec 64))
(declare-fun temp1092_149 () (_ BitVec 64))
(declare-fun temp1092_150 () (_ BitVec 64))
(declare-fun temp1092_151 () (_ BitVec 64))
(declare-fun temp1092_152 () (_ BitVec 64))
(declare-fun temp1092_153 () (_ BitVec 64))
(declare-fun temp1092_154 () (_ BitVec 64))
(declare-fun temp1092_155 () (_ BitVec 64))
(declare-fun temp1092_157 () (_ BitVec 64))
(declare-fun temp1092_158 () (_ BitVec 64))
(declare-fun temp1092_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1092_159 () (_ BitVec 64))
(declare-fun temp1092_160 () (_ BitVec 64))
(declare-fun temp1092_162 () (_ BitVec 64))
(declare-fun temp1092_163 () (_ BitVec 64))
(declare-fun temp1092_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1092_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1092_165 () (_ BitVec 64))
(declare-fun temp1092_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1092_167 () (_ BitVec 64))
(declare-fun temp1092_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1092_169 () (_ BitVec 64))
(declare-fun temp1092_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1092_171 () (_ BitVec 64))
(declare-fun temp1092_172 () (_ BitVec 64))
(declare-fun temp1092_173 () (_ BitVec 64))
(declare-fun temp1092_174 () (_ BitVec 64))
(declare-fun temp1092_175 () (_ BitVec 64))
(declare-fun temp1092_176 () (_ BitVec 64))
(declare-fun temp1092_177 () (_ BitVec 64))
(declare-fun temp1092_178 () (_ BitVec 64))
(declare-fun temp1092_179 () (_ BitVec 64))
(declare-fun temp1092_180 () (_ BitVec 64))
(declare-fun temp1092_181 () (_ BitVec 64))
(declare-fun temp1092_182 () (_ BitVec 64))
(declare-fun temp1092_183 () (_ BitVec 64))
(declare-fun temp1092_184 () (_ BitVec 64))
(declare-fun temp1092_185 () (_ BitVec 64))
(declare-fun temp1092_186 () (_ BitVec 64))
(declare-fun temp1092_187 () (_ BitVec 64))
(declare-fun temp1092_188 () (_ BitVec 64))
(declare-fun temp1092_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1092_190 () (_ BitVec 64))
(declare-fun temp1092_192 () (_ BitVec 64))
(declare-fun temp1092_193 () (_ BitVec 64))
(declare-fun temp1092_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1092_194 () (_ BitVec 64))
(declare-fun temp1092_195 () (_ BitVec 64))
(declare-fun temp1092_197 () (_ BitVec 64))
(declare-fun temp1092_198 () (_ BitVec 64))
(declare-fun temp1092_196 () (_ BitVec 64))
(declare-fun temp1092_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1092_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1092_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1092_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1092_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1092_204 () (_ BitVec 64))
(declare-fun temp1092_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1092_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1092_207 () (_ BitVec 64))
(declare-fun temp1092_208 () (_ BitVec 64))
(declare-fun temp1092_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1092_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1092_211 () (_ BitVec 64))
(declare-fun temp1092_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1092_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1092_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp1092_215 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp1092_216 () (_ BitVec 64))
(declare-fun temp1092_217 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5060229 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun var5125773 () (_ BitVec 64))
(declare-fun temp1092_218 () (_ BitVec 64))
(declare-fun temp1092_219 () (_ BitVec 64))
(declare-fun var6173460 () (_ BitVec 64))
(declare-fun var6173427 () (_ BitVec 64))
(declare-fun var6041991 () (_ BitVec 64))
(declare-fun var6041987 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp1092_220 () (_ BitVec 64))
(assert (= temp1092_1 #x0000000000000001))
(assert (= var77203 temp1092_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1092_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1092_2)))
(assert (= temp1092_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1092_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1092_4 #x0000000000000000))
(assert (= var210941 temp1092_4))
(assert (= temp1092_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1092_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1092_6 #x0000000000000000))
(assert (= var210986 temp1092_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1092_7 #x0000000000000000))
(assert (= temp1092_8 temp1092_7))
(assert (= temp1092_9 (select ARGNAME_padding_NAMEEND_VAL temp1092_8)))
(assert (= temp1092_10 #x0000000000000001))
(assert (= temp1092_11 temp1092_10))
(assert (= temp1092_12 (select ARGNAME_padding_NAMEEND_VAL temp1092_11)))
(assert (= temp1092_13 #x0000000000000002))
(assert (= temp1092_14 temp1092_13))
(assert (= temp1092_15 (select ARGNAME_padding_NAMEEND_VAL temp1092_14)))
(assert (= temp1092_16 #x0000000000000003))
(assert (= temp1092_17 temp1092_16))
(assert (= temp1092_18 (select ARGNAME_padding_NAMEEND_VAL temp1092_17)))
(assert (= temp1092_19 #x0000000000000004))
(assert (= temp1092_20 temp1092_19))
(assert (= temp1092_21 (select ARGNAME_padding_NAMEEND_VAL temp1092_20)))
(assert (= temp1092_22 #x0000000000000005))
(assert (= temp1092_23 temp1092_22))
(assert (= temp1092_24 (select ARGNAME_padding_NAMEEND_VAL temp1092_23)))
(assert (= temp1092_25 #x0000000000000000))
(assert (= temp1092_26 #x0000000000000000))
(assert (= temp1092_27 temp1092_26))
(assert (= temp1092_28 (select ARGNAME_padding_NAMEEND_VAL temp1092_27)))
(assert (= temp1092_29 #x0000000000000000))
(assert (= temp1092_30 #x0000000000000001))
(assert (= temp1092_31 temp1092_30))
(assert (= temp1092_32 (select ARGNAME_padding_NAMEEND_VAL temp1092_31)))
(assert (= temp1092_33 #x0000000000000000))
(assert (= temp1092_34 #x0000000000000002))
(assert (= temp1092_35 temp1092_34))
(assert (= temp1092_36 (select ARGNAME_padding_NAMEEND_VAL temp1092_35)))
(assert (= temp1092_37 #x0000000000000000))
(assert (= temp1092_38 #x0000000000000003))
(assert (= temp1092_39 temp1092_38))
(assert (= temp1092_40 (select ARGNAME_padding_NAMEEND_VAL temp1092_39)))
(assert (= temp1092_41 #x0000000000000000))
(assert (= temp1092_42 #x0000000000000004))
(assert (= temp1092_43 temp1092_42))
(assert (= temp1092_44 (select ARGNAME_padding_NAMEEND_VAL temp1092_43)))
(assert (= temp1092_45 #x0000000000000000))
(assert (= temp1092_46 #x0000000000000005))
(assert (= temp1092_47 temp1092_46))
(assert (= temp1092_48 (select ARGNAME_padding_NAMEEND_VAL temp1092_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1092_28 temp1092_25)
             (bvslt temp1092_32 temp1092_29)
             (bvslt temp1092_36 temp1092_33)
             (bvslt temp1092_40 temp1092_37)
             (bvslt temp1092_44 temp1092_41)
             (bvslt temp1092_48 temp1092_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1092_49 #x0000000000000000))
(assert (= var1191714 temp1092_49))
(assert (= temp1092_50 #x0000000000000000))
(assert (= temp1092_51 temp1092_50))
(assert (= temp1092_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1092_51)))
(assert (= temp1092_53 #x0000000000000001))
(assert (= temp1092_54 temp1092_53))
(assert (= temp1092_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1092_54)))
(assert (= temp1092_56 #x0000000000000002))
(assert (= temp1092_57 temp1092_56))
(assert (= temp1092_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1092_57)))
(assert (= temp1092_59 #x0000000000000003))
(assert (= temp1092_60 temp1092_59))
(assert (= temp1092_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1092_60)))
(assert (= temp1092_62 #x0000000000000004))
(assert (= temp1092_63 temp1092_62))
(assert (= temp1092_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1092_63)))
(assert (= temp1092_65 #x0000000000000005))
(assert (= temp1092_66 temp1092_65))
(assert (= temp1092_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1092_66)))
(assert (= temp1092_68 #x0000000000000000))
(assert (= temp1092_69 #x0000000000000000))
(assert (= temp1092_70 temp1092_69))
(assert (= temp1092_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1092_70)))
(assert (= temp1092_72 #x0000000000000000))
(assert (= temp1092_73 #x0000000000000001))
(assert (= temp1092_74 temp1092_73))
(assert (= temp1092_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1092_74)))
(assert (= temp1092_76 #x0000000000000000))
(assert (= temp1092_77 #x0000000000000002))
(assert (= temp1092_78 temp1092_77))
(assert (= temp1092_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1092_78)))
(assert (= temp1092_80 #x0000000000000000))
(assert (= temp1092_81 #x0000000000000003))
(assert (= temp1092_82 temp1092_81))
(assert (= temp1092_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1092_82)))
(assert (= temp1092_84 #x0000000000000000))
(assert (= temp1092_85 #x0000000000000004))
(assert (= temp1092_86 temp1092_85))
(assert (= temp1092_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1092_86)))
(assert (= temp1092_88 #x0000000000000000))
(assert (= temp1092_89 #x0000000000000005))
(assert (= temp1092_90 temp1092_89))
(assert (= temp1092_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1092_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1092_71 temp1092_68)
             (bvslt temp1092_75 temp1092_72)
             (bvslt temp1092_79 temp1092_76)
             (bvslt temp1092_83 temp1092_80)
             (bvslt temp1092_87 temp1092_84)
             (bvslt temp1092_91 temp1092_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1092_92 #x0000000000000000))
(assert (= var1191725 temp1092_92))
(assert (= temp1092_93 #x0000000000000000))
(assert (= temp1092_94 temp1092_93))
(assert (= temp1092_95 (select ARGNAME_stride_NAMEEND_VAL temp1092_94)))
(assert (= temp1092_96 #x0000000000000001))
(assert (= temp1092_97 temp1092_96))
(assert (= temp1092_98 (select ARGNAME_stride_NAMEEND_VAL temp1092_97)))
(assert (= temp1092_99 #x0000000000000002))
(assert (= temp1092_100 temp1092_99))
(assert (= temp1092_101 (select ARGNAME_stride_NAMEEND_VAL temp1092_100)))
(assert (= temp1092_102 #x0000000000000003))
(assert (= temp1092_103 temp1092_102))
(assert (= temp1092_104 (select ARGNAME_stride_NAMEEND_VAL temp1092_103)))
(assert (= temp1092_105 #x0000000000000004))
(assert (= temp1092_106 temp1092_105))
(assert (= temp1092_107 (select ARGNAME_stride_NAMEEND_VAL temp1092_106)))
(assert (= temp1092_108 #x0000000000000005))
(assert (= temp1092_109 temp1092_108))
(assert (= temp1092_110 (select ARGNAME_stride_NAMEEND_VAL temp1092_109)))
(assert (= temp1092_111 #x0000000000000000))
(assert (= temp1092_112 #x0000000000000000))
(assert (= temp1092_113 temp1092_112))
(assert (= temp1092_114 (select ARGNAME_stride_NAMEEND_VAL temp1092_113)))
(assert (= temp1092_115 #x0000000000000000))
(assert (= temp1092_116 #x0000000000000001))
(assert (= temp1092_117 temp1092_116))
(assert (= temp1092_118 (select ARGNAME_stride_NAMEEND_VAL temp1092_117)))
(assert (= temp1092_119 #x0000000000000000))
(assert (= temp1092_120 #x0000000000000002))
(assert (= temp1092_121 temp1092_120))
(assert (= temp1092_122 (select ARGNAME_stride_NAMEEND_VAL temp1092_121)))
(assert (= temp1092_123 #x0000000000000000))
(assert (= temp1092_124 #x0000000000000003))
(assert (= temp1092_125 temp1092_124))
(assert (= temp1092_126 (select ARGNAME_stride_NAMEEND_VAL temp1092_125)))
(assert (= temp1092_127 #x0000000000000000))
(assert (= temp1092_128 #x0000000000000004))
(assert (= temp1092_129 temp1092_128))
(assert (= temp1092_130 (select ARGNAME_stride_NAMEEND_VAL temp1092_129)))
(assert (= temp1092_131 #x0000000000000000))
(assert (= temp1092_132 #x0000000000000005))
(assert (= temp1092_133 temp1092_132))
(assert (= temp1092_134 (select ARGNAME_stride_NAMEEND_VAL temp1092_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1092_114 temp1092_111)
             (bvsle temp1092_118 temp1092_115)
             (bvsle temp1092_122 temp1092_119)
             (bvsle temp1092_126 temp1092_123)
             (bvsle temp1092_130 temp1092_127)
             (bvsle temp1092_134 temp1092_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1092_135 #x0000000000000000))
(assert (= var1191735 temp1092_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1092_136 #x0000000000000001))
(assert (= var1191747 temp1092_136))
(assert (= temp1092_137 #x0000000000000000))
(assert (= var1179826 temp1092_137))
(assert (= temp1092_138 #x0000000000000000))
(assert (= temp1092_139 temp1092_138))
(assert (= temp1092_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1092_139)))
(assert (= temp1092_141 #x0000000000000001))
(assert (= temp1092_142 temp1092_141))
(assert (= temp1092_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1092_142)))
(assert (= temp1092_144 #x0000000000000002))
(assert (= temp1092_145 temp1092_144))
(assert (= temp1092_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1092_145)))
(assert (= temp1092_147 #x0000000000000003))
(assert (= temp1092_148 temp1092_147))
(assert (= temp1092_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1092_148)))
(assert (= temp1092_150 #x0000000000000004))
(assert (= temp1092_151 temp1092_150))
(assert (= temp1092_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1092_151)))
(assert (= temp1092_153 #x0000000000000005))
(assert (= temp1092_154 temp1092_153))
(assert (= temp1092_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1092_154)))
(assert (= temp1092_157 var1179826))
(assert (= temp1092_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1092_157)))
(assert (= temp1092_156 temp1092_158))
(assert (= var1191780
   (ite (bvslt temp1092_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1092_159 #x0000000000000000))
(assert (= var1191780 temp1092_159))
(assert (= temp1092_160 #x0000000000000000))
(assert (= var1179826 temp1092_160))
(assert (= temp1092_162 var1179826))
(assert (= temp1092_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1092_162)))
(assert (= temp1092_161 temp1092_163))
(assert (= var1191802 (bvsmod temp1092_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1092_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1092_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1092_165 #x0000000000000001))
(assert (= var1191803 temp1092_165))
(assert (= temp1092_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1092_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1092_167 #x0000000000000001))
(assert (= var1191823 temp1092_167))
(assert (= temp1092_168 #x0000000000000001))
(assert (= var1180714 temp1092_168))
(assert (= temp1092_169 #x0000000000000000))
(assert (= temp1092_170 temp1092_169))
(assert (= temp1092_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1092_170)))
(assert (= temp1092_172 #x0000000000000001))
(assert (= temp1092_173 temp1092_172))
(assert (= temp1092_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1092_173)))
(assert (= temp1092_175 #x0000000000000002))
(assert (= temp1092_176 temp1092_175))
(assert (= temp1092_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1092_176)))
(assert (= temp1092_178 #x0000000000000003))
(assert (= temp1092_179 temp1092_178))
(assert (= temp1092_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1092_179)))
(assert (= temp1092_181 #x0000000000000004))
(assert (= temp1092_182 temp1092_181))
(assert (= temp1092_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1092_182)))
(assert (= temp1092_184 #x0000000000000005))
(assert (= temp1092_185 temp1092_184))
(assert (= temp1092_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1092_185)))
(assert (= temp1092_187 #x0000000000000000))
(assert (= temp1092_188
   (ite (bvslt var1180714 temp1092_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1092_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1092_188)))
(assert (= var1191831 temp1092_189))
(assert (bvslt (ite (bvslt var1180714 temp1092_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1092_190 #x0000000000000001))
(assert (= var1180714 temp1092_190))
(assert (= temp1092_192 var1180714))
(assert (= temp1092_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1092_192)))
(assert (= temp1092_191 temp1092_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1092_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1092_194 #x0000000000000001))
(assert (= var1191836 temp1092_194))
(assert (= temp1092_195 #x0000000000000000))
(assert (= var1179826 temp1092_195))
(assert (= temp1092_197 var1179826))
(assert (= temp1092_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1092_197)))
(assert (= temp1092_196 temp1092_198))
(assert (= temp1092_199 #x0000000000000002))
(assert (= var1586025 temp1092_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1092_200 #x0000000000000001))
(assert (= var1191993 temp1092_200))
(assert (= temp1092_201 #x0000000000000001))
(assert (= var2700303 temp1092_201))
(assert (= temp1092_202 #x0000000000000001))
(assert (= var2962447 temp1092_202))
(assert (= temp1092_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1092_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1092_204 #x0000000000000001))
(assert (= var211058 temp1092_204))
(assert (= temp1092_205 #x0000000000000001))
(assert (= var211188 temp1092_205))
(assert (= var3879401 var211188))
(assert (= temp1092_206 #x0000000000000000))
(assert (= var3866802 temp1092_206))
(assert (= temp1092_207 #x0000000000000000))
(assert (= temp1092_208
   (ite (bvslt var3866802 temp1092_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1092_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1092_208)))
(assert (= var3879420 temp1092_209))
(assert (bvslt (ite (bvslt var3866802 temp1092_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1092_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1092_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1092_211 #x0000000000000001))
(assert (= var3879421 temp1092_211))
(assert (= temp1092_212 #x0000000000000000))
(assert (= var4079423 temp1092_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1092_213 #x0000000000000002))
(assert (= var4208259 temp1092_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1092_214 #x0000000000000000))
(assert (= var4273820 temp1092_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp1092_215 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp1092_215)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1092_216 #x0000000000000001))
(assert (= var212414 temp1092_216))
(assert (= temp1092_217 #x0000000000000002))
(assert (= var5060227 temp1092_217))
(assert (= var5060229 (bvsub ARGNAME_weight_NAMEEND_DIM var5060227)))
(assert (= var5125772 var5060227))
(assert (= var5125773 var5060229))
(assert (= temp1092_218 #x0000000000000001))
(assert (= var211058 temp1092_218))
(assert (= temp1092_219 #x0000000000000000))
(assert (= var6173460 temp1092_219))
(assert (= var6173427 var6173460))
(assert (= var6041991 var6173427))
(assert (= var6041987 var6041991))
(assert (= var212669 var6041987))
(assert (= temp1092_220 #x0000000000000000))
(assert (= var212669 temp1092_220))
(model-add temp1092_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1092_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1092_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1092_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





