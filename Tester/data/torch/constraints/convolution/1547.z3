(declare-fun temp10857_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10857_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10857_3 () (_ BitVec 64))
(declare-fun temp10857_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10857_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10857_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10857_7 () (_ BitVec 64))
(declare-fun temp10857_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10857_9 () (_ BitVec 64))
(declare-fun temp10857_10 () (_ BitVec 64))
(declare-fun temp10857_11 () (_ BitVec 64))
(declare-fun temp10857_12 () (_ BitVec 64))
(declare-fun temp10857_13 () (_ BitVec 64))
(declare-fun temp10857_14 () (_ BitVec 64))
(declare-fun temp10857_15 () (_ BitVec 64))
(declare-fun temp10857_16 () (_ BitVec 64))
(declare-fun temp10857_17 () (_ BitVec 64))
(declare-fun temp10857_18 () (_ BitVec 64))
(declare-fun temp10857_19 () (_ BitVec 64))
(declare-fun temp10857_20 () (_ BitVec 64))
(declare-fun temp10857_21 () (_ BitVec 64))
(declare-fun temp10857_22 () (_ BitVec 64))
(declare-fun temp10857_23 () (_ BitVec 64))
(declare-fun temp10857_24 () (_ BitVec 64))
(declare-fun temp10857_25 () (_ BitVec 64))
(declare-fun temp10857_26 () (_ BitVec 64))
(declare-fun temp10857_27 () (_ BitVec 64))
(declare-fun temp10857_28 () (_ BitVec 64))
(declare-fun temp10857_29 () (_ BitVec 64))
(declare-fun temp10857_30 () (_ BitVec 64))
(declare-fun temp10857_31 () (_ BitVec 64))
(declare-fun temp10857_32 () (_ BitVec 64))
(declare-fun temp10857_33 () (_ BitVec 64))
(declare-fun temp10857_34 () (_ BitVec 64))
(declare-fun temp10857_35 () (_ BitVec 64))
(declare-fun temp10857_36 () (_ BitVec 64))
(declare-fun temp10857_37 () (_ BitVec 64))
(declare-fun temp10857_38 () (_ BitVec 64))
(declare-fun temp10857_39 () (_ BitVec 64))
(declare-fun temp10857_40 () (_ BitVec 64))
(declare-fun temp10857_41 () (_ BitVec 64))
(declare-fun temp10857_42 () (_ BitVec 64))
(declare-fun temp10857_43 () (_ BitVec 64))
(declare-fun temp10857_44 () (_ BitVec 64))
(declare-fun temp10857_45 () (_ BitVec 64))
(declare-fun temp10857_46 () (_ BitVec 64))
(declare-fun temp10857_47 () (_ BitVec 64))
(declare-fun temp10857_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10857_49 () (_ BitVec 64))
(declare-fun temp10857_50 () (_ BitVec 64))
(declare-fun temp10857_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10857_52 () (_ BitVec 64))
(declare-fun temp10857_53 () (_ BitVec 64))
(declare-fun temp10857_54 () (_ BitVec 64))
(declare-fun temp10857_55 () (_ BitVec 64))
(declare-fun temp10857_56 () (_ BitVec 64))
(declare-fun temp10857_57 () (_ BitVec 64))
(declare-fun temp10857_58 () (_ BitVec 64))
(declare-fun temp10857_59 () (_ BitVec 64))
(declare-fun temp10857_60 () (_ BitVec 64))
(declare-fun temp10857_61 () (_ BitVec 64))
(declare-fun temp10857_62 () (_ BitVec 64))
(declare-fun temp10857_63 () (_ BitVec 64))
(declare-fun temp10857_64 () (_ BitVec 64))
(declare-fun temp10857_65 () (_ BitVec 64))
(declare-fun temp10857_66 () (_ BitVec 64))
(declare-fun temp10857_67 () (_ BitVec 64))
(declare-fun temp10857_68 () (_ BitVec 64))
(declare-fun temp10857_69 () (_ BitVec 64))
(declare-fun temp10857_70 () (_ BitVec 64))
(declare-fun temp10857_71 () (_ BitVec 64))
(declare-fun temp10857_72 () (_ BitVec 64))
(declare-fun temp10857_73 () (_ BitVec 64))
(declare-fun temp10857_74 () (_ BitVec 64))
(declare-fun temp10857_75 () (_ BitVec 64))
(declare-fun temp10857_76 () (_ BitVec 64))
(declare-fun temp10857_77 () (_ BitVec 64))
(declare-fun temp10857_78 () (_ BitVec 64))
(declare-fun temp10857_79 () (_ BitVec 64))
(declare-fun temp10857_80 () (_ BitVec 64))
(declare-fun temp10857_81 () (_ BitVec 64))
(declare-fun temp10857_82 () (_ BitVec 64))
(declare-fun temp10857_83 () (_ BitVec 64))
(declare-fun temp10857_84 () (_ BitVec 64))
(declare-fun temp10857_85 () (_ BitVec 64))
(declare-fun temp10857_86 () (_ BitVec 64))
(declare-fun temp10857_87 () (_ BitVec 64))
(declare-fun temp10857_88 () (_ BitVec 64))
(declare-fun temp10857_89 () (_ BitVec 64))
(declare-fun temp10857_90 () (_ BitVec 64))
(declare-fun temp10857_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10857_92 () (_ BitVec 64))
(declare-fun temp10857_93 () (_ BitVec 64))
(declare-fun temp10857_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10857_95 () (_ BitVec 64))
(declare-fun temp10857_96 () (_ BitVec 64))
(declare-fun temp10857_97 () (_ BitVec 64))
(declare-fun temp10857_98 () (_ BitVec 64))
(declare-fun temp10857_99 () (_ BitVec 64))
(declare-fun temp10857_100 () (_ BitVec 64))
(declare-fun temp10857_101 () (_ BitVec 64))
(declare-fun temp10857_102 () (_ BitVec 64))
(declare-fun temp10857_103 () (_ BitVec 64))
(declare-fun temp10857_104 () (_ BitVec 64))
(declare-fun temp10857_105 () (_ BitVec 64))
(declare-fun temp10857_106 () (_ BitVec 64))
(declare-fun temp10857_107 () (_ BitVec 64))
(declare-fun temp10857_108 () (_ BitVec 64))
(declare-fun temp10857_109 () (_ BitVec 64))
(declare-fun temp10857_110 () (_ BitVec 64))
(declare-fun temp10857_111 () (_ BitVec 64))
(declare-fun temp10857_112 () (_ BitVec 64))
(declare-fun temp10857_113 () (_ BitVec 64))
(declare-fun temp10857_114 () (_ BitVec 64))
(declare-fun temp10857_115 () (_ BitVec 64))
(declare-fun temp10857_116 () (_ BitVec 64))
(declare-fun temp10857_117 () (_ BitVec 64))
(declare-fun temp10857_118 () (_ BitVec 64))
(declare-fun temp10857_119 () (_ BitVec 64))
(declare-fun temp10857_120 () (_ BitVec 64))
(declare-fun temp10857_121 () (_ BitVec 64))
(declare-fun temp10857_122 () (_ BitVec 64))
(declare-fun temp10857_123 () (_ BitVec 64))
(declare-fun temp10857_124 () (_ BitVec 64))
(declare-fun temp10857_125 () (_ BitVec 64))
(declare-fun temp10857_126 () (_ BitVec 64))
(declare-fun temp10857_127 () (_ BitVec 64))
(declare-fun temp10857_128 () (_ BitVec 64))
(declare-fun temp10857_129 () (_ BitVec 64))
(declare-fun temp10857_130 () (_ BitVec 64))
(declare-fun temp10857_131 () (_ BitVec 64))
(declare-fun temp10857_132 () (_ BitVec 64))
(declare-fun temp10857_133 () (_ BitVec 64))
(declare-fun temp10857_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10857_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10857_136 () (_ BitVec 64))
(declare-fun temp10857_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10857_138 () (_ BitVec 64))
(declare-fun temp10857_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10857_140 () (_ BitVec 64))
(declare-fun temp10857_141 () (_ BitVec 64))
(declare-fun temp10857_142 () (_ BitVec 64))
(declare-fun temp10857_143 () (_ BitVec 64))
(declare-fun temp10857_144 () (_ BitVec 64))
(declare-fun temp10857_145 () (_ BitVec 64))
(declare-fun temp10857_146 () (_ BitVec 64))
(declare-fun temp10857_147 () (_ BitVec 64))
(declare-fun temp10857_148 () (_ BitVec 64))
(declare-fun temp10857_149 () (_ BitVec 64))
(declare-fun temp10857_150 () (_ BitVec 64))
(declare-fun temp10857_151 () (_ BitVec 64))
(declare-fun temp10857_152 () (_ BitVec 64))
(declare-fun temp10857_153 () (_ BitVec 64))
(declare-fun temp10857_154 () (_ BitVec 64))
(declare-fun temp10857_155 () (_ BitVec 64))
(declare-fun temp10857_157 () (_ BitVec 64))
(declare-fun temp10857_158 () (_ BitVec 64))
(declare-fun temp10857_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10857_159 () (_ BitVec 64))
(declare-fun temp10857_160 () (_ BitVec 64))
(declare-fun temp10857_162 () (_ BitVec 64))
(declare-fun temp10857_163 () (_ BitVec 64))
(declare-fun temp10857_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10857_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10857_165 () (_ BitVec 64))
(declare-fun temp10857_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10857_167 () (_ BitVec 64))
(declare-fun temp10857_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10857_169 () (_ BitVec 64))
(declare-fun temp10857_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10857_171 () (_ BitVec 64))
(declare-fun temp10857_172 () (_ BitVec 64))
(declare-fun temp10857_173 () (_ BitVec 64))
(declare-fun temp10857_174 () (_ BitVec 64))
(declare-fun temp10857_175 () (_ BitVec 64))
(declare-fun temp10857_176 () (_ BitVec 64))
(declare-fun temp10857_177 () (_ BitVec 64))
(declare-fun temp10857_178 () (_ BitVec 64))
(declare-fun temp10857_179 () (_ BitVec 64))
(declare-fun temp10857_180 () (_ BitVec 64))
(declare-fun temp10857_181 () (_ BitVec 64))
(declare-fun temp10857_182 () (_ BitVec 64))
(declare-fun temp10857_183 () (_ BitVec 64))
(declare-fun temp10857_184 () (_ BitVec 64))
(declare-fun temp10857_185 () (_ BitVec 64))
(declare-fun temp10857_186 () (_ BitVec 64))
(declare-fun temp10857_187 () (_ BitVec 64))
(declare-fun temp10857_188 () (_ BitVec 64))
(declare-fun temp10857_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10857_190 () (_ BitVec 64))
(declare-fun temp10857_192 () (_ BitVec 64))
(declare-fun temp10857_193 () (_ BitVec 64))
(declare-fun temp10857_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10857_194 () (_ BitVec 64))
(declare-fun temp10857_195 () (_ BitVec 64))
(declare-fun temp10857_197 () (_ BitVec 64))
(declare-fun temp10857_198 () (_ BitVec 64))
(declare-fun temp10857_196 () (_ BitVec 64))
(declare-fun temp10857_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10857_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10857_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10857_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10857_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10857_204 () (_ BitVec 64))
(declare-fun temp10857_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10857_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10857_207 () (_ BitVec 64))
(declare-fun temp10857_208 () (_ BitVec 64))
(declare-fun temp10857_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10857_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10857_211 () (_ BitVec 64))
(declare-fun temp10857_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10857_213 () (_ BitVec 64))
(declare-fun temp10857_214 () (_ BitVec 64))
(declare-fun temp10857_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10857_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10857_217 () (_ BitVec 64))
(declare-fun temp10857_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10857_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10857_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp10857_221 () (_ BitVec 64))
(assert (= temp10857_1 #x0000000000000001))
(assert (= var77203 temp10857_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10857_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10857_2)))
(assert (= temp10857_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10857_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10857_4 #x0000000000000000))
(assert (= var210941 temp10857_4))
(assert (= temp10857_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10857_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10857_6 #x0000000000000000))
(assert (= var210986 temp10857_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10857_7 #x0000000000000000))
(assert (= temp10857_8 temp10857_7))
(assert (= temp10857_9 (select ARGNAME_padding_NAMEEND_VAL temp10857_8)))
(assert (= temp10857_10 #x0000000000000001))
(assert (= temp10857_11 temp10857_10))
(assert (= temp10857_12 (select ARGNAME_padding_NAMEEND_VAL temp10857_11)))
(assert (= temp10857_13 #x0000000000000002))
(assert (= temp10857_14 temp10857_13))
(assert (= temp10857_15 (select ARGNAME_padding_NAMEEND_VAL temp10857_14)))
(assert (= temp10857_16 #x0000000000000003))
(assert (= temp10857_17 temp10857_16))
(assert (= temp10857_18 (select ARGNAME_padding_NAMEEND_VAL temp10857_17)))
(assert (= temp10857_19 #x0000000000000004))
(assert (= temp10857_20 temp10857_19))
(assert (= temp10857_21 (select ARGNAME_padding_NAMEEND_VAL temp10857_20)))
(assert (= temp10857_22 #x0000000000000005))
(assert (= temp10857_23 temp10857_22))
(assert (= temp10857_24 (select ARGNAME_padding_NAMEEND_VAL temp10857_23)))
(assert (= temp10857_25 #x0000000000000000))
(assert (= temp10857_26 #x0000000000000000))
(assert (= temp10857_27 temp10857_26))
(assert (= temp10857_28 (select ARGNAME_padding_NAMEEND_VAL temp10857_27)))
(assert (= temp10857_29 #x0000000000000000))
(assert (= temp10857_30 #x0000000000000001))
(assert (= temp10857_31 temp10857_30))
(assert (= temp10857_32 (select ARGNAME_padding_NAMEEND_VAL temp10857_31)))
(assert (= temp10857_33 #x0000000000000000))
(assert (= temp10857_34 #x0000000000000002))
(assert (= temp10857_35 temp10857_34))
(assert (= temp10857_36 (select ARGNAME_padding_NAMEEND_VAL temp10857_35)))
(assert (= temp10857_37 #x0000000000000000))
(assert (= temp10857_38 #x0000000000000003))
(assert (= temp10857_39 temp10857_38))
(assert (= temp10857_40 (select ARGNAME_padding_NAMEEND_VAL temp10857_39)))
(assert (= temp10857_41 #x0000000000000000))
(assert (= temp10857_42 #x0000000000000004))
(assert (= temp10857_43 temp10857_42))
(assert (= temp10857_44 (select ARGNAME_padding_NAMEEND_VAL temp10857_43)))
(assert (= temp10857_45 #x0000000000000000))
(assert (= temp10857_46 #x0000000000000005))
(assert (= temp10857_47 temp10857_46))
(assert (= temp10857_48 (select ARGNAME_padding_NAMEEND_VAL temp10857_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10857_28 temp10857_25)
             (bvslt temp10857_32 temp10857_29)
             (bvslt temp10857_36 temp10857_33)
             (bvslt temp10857_40 temp10857_37)
             (bvslt temp10857_44 temp10857_41)
             (bvslt temp10857_48 temp10857_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10857_49 #x0000000000000000))
(assert (= var1191714 temp10857_49))
(assert (= temp10857_50 #x0000000000000000))
(assert (= temp10857_51 temp10857_50))
(assert (= temp10857_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10857_51)))
(assert (= temp10857_53 #x0000000000000001))
(assert (= temp10857_54 temp10857_53))
(assert (= temp10857_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10857_54)))
(assert (= temp10857_56 #x0000000000000002))
(assert (= temp10857_57 temp10857_56))
(assert (= temp10857_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10857_57)))
(assert (= temp10857_59 #x0000000000000003))
(assert (= temp10857_60 temp10857_59))
(assert (= temp10857_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10857_60)))
(assert (= temp10857_62 #x0000000000000004))
(assert (= temp10857_63 temp10857_62))
(assert (= temp10857_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10857_63)))
(assert (= temp10857_65 #x0000000000000005))
(assert (= temp10857_66 temp10857_65))
(assert (= temp10857_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10857_66)))
(assert (= temp10857_68 #x0000000000000000))
(assert (= temp10857_69 #x0000000000000000))
(assert (= temp10857_70 temp10857_69))
(assert (= temp10857_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10857_70)))
(assert (= temp10857_72 #x0000000000000000))
(assert (= temp10857_73 #x0000000000000001))
(assert (= temp10857_74 temp10857_73))
(assert (= temp10857_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10857_74)))
(assert (= temp10857_76 #x0000000000000000))
(assert (= temp10857_77 #x0000000000000002))
(assert (= temp10857_78 temp10857_77))
(assert (= temp10857_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10857_78)))
(assert (= temp10857_80 #x0000000000000000))
(assert (= temp10857_81 #x0000000000000003))
(assert (= temp10857_82 temp10857_81))
(assert (= temp10857_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10857_82)))
(assert (= temp10857_84 #x0000000000000000))
(assert (= temp10857_85 #x0000000000000004))
(assert (= temp10857_86 temp10857_85))
(assert (= temp10857_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10857_86)))
(assert (= temp10857_88 #x0000000000000000))
(assert (= temp10857_89 #x0000000000000005))
(assert (= temp10857_90 temp10857_89))
(assert (= temp10857_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10857_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10857_71 temp10857_68)
             (bvslt temp10857_75 temp10857_72)
             (bvslt temp10857_79 temp10857_76)
             (bvslt temp10857_83 temp10857_80)
             (bvslt temp10857_87 temp10857_84)
             (bvslt temp10857_91 temp10857_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10857_92 #x0000000000000000))
(assert (= var1191725 temp10857_92))
(assert (= temp10857_93 #x0000000000000000))
(assert (= temp10857_94 temp10857_93))
(assert (= temp10857_95 (select ARGNAME_stride_NAMEEND_VAL temp10857_94)))
(assert (= temp10857_96 #x0000000000000001))
(assert (= temp10857_97 temp10857_96))
(assert (= temp10857_98 (select ARGNAME_stride_NAMEEND_VAL temp10857_97)))
(assert (= temp10857_99 #x0000000000000002))
(assert (= temp10857_100 temp10857_99))
(assert (= temp10857_101 (select ARGNAME_stride_NAMEEND_VAL temp10857_100)))
(assert (= temp10857_102 #x0000000000000003))
(assert (= temp10857_103 temp10857_102))
(assert (= temp10857_104 (select ARGNAME_stride_NAMEEND_VAL temp10857_103)))
(assert (= temp10857_105 #x0000000000000004))
(assert (= temp10857_106 temp10857_105))
(assert (= temp10857_107 (select ARGNAME_stride_NAMEEND_VAL temp10857_106)))
(assert (= temp10857_108 #x0000000000000005))
(assert (= temp10857_109 temp10857_108))
(assert (= temp10857_110 (select ARGNAME_stride_NAMEEND_VAL temp10857_109)))
(assert (= temp10857_111 #x0000000000000000))
(assert (= temp10857_112 #x0000000000000000))
(assert (= temp10857_113 temp10857_112))
(assert (= temp10857_114 (select ARGNAME_stride_NAMEEND_VAL temp10857_113)))
(assert (= temp10857_115 #x0000000000000000))
(assert (= temp10857_116 #x0000000000000001))
(assert (= temp10857_117 temp10857_116))
(assert (= temp10857_118 (select ARGNAME_stride_NAMEEND_VAL temp10857_117)))
(assert (= temp10857_119 #x0000000000000000))
(assert (= temp10857_120 #x0000000000000002))
(assert (= temp10857_121 temp10857_120))
(assert (= temp10857_122 (select ARGNAME_stride_NAMEEND_VAL temp10857_121)))
(assert (= temp10857_123 #x0000000000000000))
(assert (= temp10857_124 #x0000000000000003))
(assert (= temp10857_125 temp10857_124))
(assert (= temp10857_126 (select ARGNAME_stride_NAMEEND_VAL temp10857_125)))
(assert (= temp10857_127 #x0000000000000000))
(assert (= temp10857_128 #x0000000000000004))
(assert (= temp10857_129 temp10857_128))
(assert (= temp10857_130 (select ARGNAME_stride_NAMEEND_VAL temp10857_129)))
(assert (= temp10857_131 #x0000000000000000))
(assert (= temp10857_132 #x0000000000000005))
(assert (= temp10857_133 temp10857_132))
(assert (= temp10857_134 (select ARGNAME_stride_NAMEEND_VAL temp10857_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10857_114 temp10857_111)
             (bvsle temp10857_118 temp10857_115)
             (bvsle temp10857_122 temp10857_119)
             (bvsle temp10857_126 temp10857_123)
             (bvsle temp10857_130 temp10857_127)
             (bvsle temp10857_134 temp10857_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10857_135 #x0000000000000000))
(assert (= var1191735 temp10857_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10857_136 #x0000000000000001))
(assert (= var1191747 temp10857_136))
(assert (= temp10857_137 #x0000000000000000))
(assert (= var1179826 temp10857_137))
(assert (= temp10857_138 #x0000000000000000))
(assert (= temp10857_139 temp10857_138))
(assert (= temp10857_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10857_139)))
(assert (= temp10857_141 #x0000000000000001))
(assert (= temp10857_142 temp10857_141))
(assert (= temp10857_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10857_142)))
(assert (= temp10857_144 #x0000000000000002))
(assert (= temp10857_145 temp10857_144))
(assert (= temp10857_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10857_145)))
(assert (= temp10857_147 #x0000000000000003))
(assert (= temp10857_148 temp10857_147))
(assert (= temp10857_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10857_148)))
(assert (= temp10857_150 #x0000000000000004))
(assert (= temp10857_151 temp10857_150))
(assert (= temp10857_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10857_151)))
(assert (= temp10857_153 #x0000000000000005))
(assert (= temp10857_154 temp10857_153))
(assert (= temp10857_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10857_154)))
(assert (= temp10857_157 var1179826))
(assert (= temp10857_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10857_157)))
(assert (= temp10857_156 temp10857_158))
(assert (= var1191780
   (ite (bvslt temp10857_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10857_159 #x0000000000000000))
(assert (= var1191780 temp10857_159))
(assert (= temp10857_160 #x0000000000000000))
(assert (= var1179826 temp10857_160))
(assert (= temp10857_162 var1179826))
(assert (= temp10857_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10857_162)))
(assert (= temp10857_161 temp10857_163))
(assert (= var1191802 (bvsmod temp10857_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10857_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10857_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10857_165 #x0000000000000001))
(assert (= var1191803 temp10857_165))
(assert (= temp10857_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10857_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10857_167 #x0000000000000001))
(assert (= var1191823 temp10857_167))
(assert (= temp10857_168 #x0000000000000001))
(assert (= var1180714 temp10857_168))
(assert (= temp10857_169 #x0000000000000000))
(assert (= temp10857_170 temp10857_169))
(assert (= temp10857_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10857_170)))
(assert (= temp10857_172 #x0000000000000001))
(assert (= temp10857_173 temp10857_172))
(assert (= temp10857_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10857_173)))
(assert (= temp10857_175 #x0000000000000002))
(assert (= temp10857_176 temp10857_175))
(assert (= temp10857_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10857_176)))
(assert (= temp10857_178 #x0000000000000003))
(assert (= temp10857_179 temp10857_178))
(assert (= temp10857_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10857_179)))
(assert (= temp10857_181 #x0000000000000004))
(assert (= temp10857_182 temp10857_181))
(assert (= temp10857_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10857_182)))
(assert (= temp10857_184 #x0000000000000005))
(assert (= temp10857_185 temp10857_184))
(assert (= temp10857_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10857_185)))
(assert (= temp10857_187 #x0000000000000000))
(assert (= temp10857_188
   (ite (bvslt var1180714 temp10857_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10857_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10857_188)))
(assert (= var1191831 temp10857_189))
(assert (bvslt (ite (bvslt var1180714 temp10857_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10857_190 #x0000000000000001))
(assert (= var1180714 temp10857_190))
(assert (= temp10857_192 var1180714))
(assert (= temp10857_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10857_192)))
(assert (= temp10857_191 temp10857_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10857_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10857_194 #x0000000000000001))
(assert (= var1191836 temp10857_194))
(assert (= temp10857_195 #x0000000000000000))
(assert (= var1179826 temp10857_195))
(assert (= temp10857_197 var1179826))
(assert (= temp10857_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10857_197)))
(assert (= temp10857_196 temp10857_198))
(assert (= temp10857_199 #x0000000000000002))
(assert (= var1586025 temp10857_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10857_200 #x0000000000000001))
(assert (= var1191993 temp10857_200))
(assert (= temp10857_201 #x0000000000000001))
(assert (= var2700303 temp10857_201))
(assert (= temp10857_202 #x0000000000000001))
(assert (= var2962447 temp10857_202))
(assert (= temp10857_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10857_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10857_204 #x0000000000000001))
(assert (= var211058 temp10857_204))
(assert (= temp10857_205 #x0000000000000001))
(assert (= var211188 temp10857_205))
(assert (= var3879401 var211188))
(assert (= temp10857_206 #x0000000000000000))
(assert (= var3866802 temp10857_206))
(assert (= temp10857_207 #x0000000000000000))
(assert (= temp10857_208
   (ite (bvslt var3866802 temp10857_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10857_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10857_208)))
(assert (= var3879420 temp10857_209))
(assert (bvslt (ite (bvslt var3866802 temp10857_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10857_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10857_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10857_211 #x0000000000000000))
(assert (= var3879421 temp10857_211))
(assert (= temp10857_212 #x0000000000000001))
(assert (= var3867690 temp10857_212))
(assert (= temp10857_213 #x0000000000000000))
(assert (= temp10857_214
   (ite (bvslt var3867690 temp10857_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10857_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10857_214)))
(assert (= var3879423 temp10857_215))
(assert (bvslt (ite (bvslt var3867690 temp10857_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10857_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10857_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10857_217 #x0000000000000001))
(assert (= var3879424 temp10857_217))
(assert (= temp10857_218 #x0000000000000000))
(assert (= var4133117 temp10857_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10857_219 #x0000000000000002))
(assert (= var4339331 temp10857_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10857_220 #x0000000000000000))
(assert (= var4404892 temp10857_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5452176 var211201))
(assert (= var5714320 var211201))
(assert (= temp10857_221 #x0000000000000001))
(assert (= var211058 temp10857_221))
(model-add temp10857_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10857_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10857_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10857_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




