(declare-fun temp90_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp90_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp90_3 () (_ BitVec 64))
(declare-fun temp90_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp90_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp90_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp90_7 () (_ BitVec 64))
(declare-fun temp90_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp90_9 () (_ BitVec 64))
(declare-fun temp90_10 () (_ BitVec 64))
(declare-fun temp90_11 () (_ BitVec 64))
(declare-fun temp90_12 () (_ BitVec 64))
(declare-fun temp90_13 () (_ BitVec 64))
(declare-fun temp90_14 () (_ BitVec 64))
(declare-fun temp90_15 () (_ BitVec 64))
(declare-fun temp90_16 () (_ BitVec 64))
(declare-fun temp90_17 () (_ BitVec 64))
(declare-fun temp90_18 () (_ BitVec 64))
(declare-fun temp90_19 () (_ BitVec 64))
(declare-fun temp90_20 () (_ BitVec 64))
(declare-fun temp90_21 () (_ BitVec 64))
(declare-fun temp90_22 () (_ BitVec 64))
(declare-fun temp90_23 () (_ BitVec 64))
(declare-fun temp90_24 () (_ BitVec 64))
(declare-fun temp90_25 () (_ BitVec 64))
(declare-fun temp90_26 () (_ BitVec 64))
(declare-fun temp90_27 () (_ BitVec 64))
(declare-fun temp90_28 () (_ BitVec 64))
(declare-fun temp90_29 () (_ BitVec 64))
(declare-fun temp90_30 () (_ BitVec 64))
(declare-fun temp90_31 () (_ BitVec 64))
(declare-fun temp90_32 () (_ BitVec 64))
(declare-fun temp90_33 () (_ BitVec 64))
(declare-fun temp90_34 () (_ BitVec 64))
(declare-fun temp90_35 () (_ BitVec 64))
(declare-fun temp90_36 () (_ BitVec 64))
(declare-fun temp90_37 () (_ BitVec 64))
(declare-fun temp90_38 () (_ BitVec 64))
(declare-fun temp90_39 () (_ BitVec 64))
(declare-fun temp90_40 () (_ BitVec 64))
(declare-fun temp90_41 () (_ BitVec 64))
(declare-fun temp90_42 () (_ BitVec 64))
(declare-fun temp90_43 () (_ BitVec 64))
(declare-fun temp90_44 () (_ BitVec 64))
(declare-fun temp90_45 () (_ BitVec 64))
(declare-fun temp90_46 () (_ BitVec 64))
(declare-fun temp90_47 () (_ BitVec 64))
(declare-fun temp90_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp90_49 () (_ BitVec 64))
(declare-fun temp90_50 () (_ BitVec 64))
(declare-fun temp90_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp90_52 () (_ BitVec 64))
(declare-fun temp90_53 () (_ BitVec 64))
(declare-fun temp90_54 () (_ BitVec 64))
(declare-fun temp90_55 () (_ BitVec 64))
(declare-fun temp90_56 () (_ BitVec 64))
(declare-fun temp90_57 () (_ BitVec 64))
(declare-fun temp90_58 () (_ BitVec 64))
(declare-fun temp90_59 () (_ BitVec 64))
(declare-fun temp90_60 () (_ BitVec 64))
(declare-fun temp90_61 () (_ BitVec 64))
(declare-fun temp90_62 () (_ BitVec 64))
(declare-fun temp90_63 () (_ BitVec 64))
(declare-fun temp90_64 () (_ BitVec 64))
(declare-fun temp90_65 () (_ BitVec 64))
(declare-fun temp90_66 () (_ BitVec 64))
(declare-fun temp90_67 () (_ BitVec 64))
(declare-fun temp90_68 () (_ BitVec 64))
(declare-fun temp90_69 () (_ BitVec 64))
(declare-fun temp90_70 () (_ BitVec 64))
(declare-fun temp90_71 () (_ BitVec 64))
(declare-fun temp90_72 () (_ BitVec 64))
(declare-fun temp90_73 () (_ BitVec 64))
(declare-fun temp90_74 () (_ BitVec 64))
(declare-fun temp90_75 () (_ BitVec 64))
(declare-fun temp90_76 () (_ BitVec 64))
(declare-fun temp90_77 () (_ BitVec 64))
(declare-fun temp90_78 () (_ BitVec 64))
(declare-fun temp90_79 () (_ BitVec 64))
(declare-fun temp90_80 () (_ BitVec 64))
(declare-fun temp90_81 () (_ BitVec 64))
(declare-fun temp90_82 () (_ BitVec 64))
(declare-fun temp90_83 () (_ BitVec 64))
(declare-fun temp90_84 () (_ BitVec 64))
(declare-fun temp90_85 () (_ BitVec 64))
(declare-fun temp90_86 () (_ BitVec 64))
(declare-fun temp90_87 () (_ BitVec 64))
(declare-fun temp90_88 () (_ BitVec 64))
(declare-fun temp90_89 () (_ BitVec 64))
(declare-fun temp90_90 () (_ BitVec 64))
(declare-fun temp90_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp90_92 () (_ BitVec 64))
(declare-fun temp90_93 () (_ BitVec 64))
(declare-fun temp90_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp90_95 () (_ BitVec 64))
(declare-fun temp90_96 () (_ BitVec 64))
(declare-fun temp90_97 () (_ BitVec 64))
(declare-fun temp90_98 () (_ BitVec 64))
(declare-fun temp90_99 () (_ BitVec 64))
(declare-fun temp90_100 () (_ BitVec 64))
(declare-fun temp90_101 () (_ BitVec 64))
(declare-fun temp90_102 () (_ BitVec 64))
(declare-fun temp90_103 () (_ BitVec 64))
(declare-fun temp90_104 () (_ BitVec 64))
(declare-fun temp90_105 () (_ BitVec 64))
(declare-fun temp90_106 () (_ BitVec 64))
(declare-fun temp90_107 () (_ BitVec 64))
(declare-fun temp90_108 () (_ BitVec 64))
(declare-fun temp90_109 () (_ BitVec 64))
(declare-fun temp90_110 () (_ BitVec 64))
(declare-fun temp90_111 () (_ BitVec 64))
(declare-fun temp90_112 () (_ BitVec 64))
(declare-fun temp90_113 () (_ BitVec 64))
(declare-fun temp90_114 () (_ BitVec 64))
(declare-fun temp90_115 () (_ BitVec 64))
(declare-fun temp90_116 () (_ BitVec 64))
(declare-fun temp90_117 () (_ BitVec 64))
(declare-fun temp90_118 () (_ BitVec 64))
(declare-fun temp90_119 () (_ BitVec 64))
(declare-fun temp90_120 () (_ BitVec 64))
(declare-fun temp90_121 () (_ BitVec 64))
(declare-fun temp90_122 () (_ BitVec 64))
(declare-fun temp90_123 () (_ BitVec 64))
(declare-fun temp90_124 () (_ BitVec 64))
(declare-fun temp90_125 () (_ BitVec 64))
(declare-fun temp90_126 () (_ BitVec 64))
(declare-fun temp90_127 () (_ BitVec 64))
(declare-fun temp90_128 () (_ BitVec 64))
(declare-fun temp90_129 () (_ BitVec 64))
(declare-fun temp90_130 () (_ BitVec 64))
(declare-fun temp90_131 () (_ BitVec 64))
(declare-fun temp90_132 () (_ BitVec 64))
(declare-fun temp90_133 () (_ BitVec 64))
(declare-fun temp90_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp90_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp90_136 () (_ BitVec 64))
(declare-fun temp90_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp90_138 () (_ BitVec 64))
(declare-fun temp90_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp90_140 () (_ BitVec 64))
(declare-fun temp90_141 () (_ BitVec 64))
(declare-fun temp90_142 () (_ BitVec 64))
(declare-fun temp90_143 () (_ BitVec 64))
(declare-fun temp90_144 () (_ BitVec 64))
(declare-fun temp90_145 () (_ BitVec 64))
(declare-fun temp90_146 () (_ BitVec 64))
(declare-fun temp90_147 () (_ BitVec 64))
(declare-fun temp90_148 () (_ BitVec 64))
(declare-fun temp90_149 () (_ BitVec 64))
(declare-fun temp90_150 () (_ BitVec 64))
(declare-fun temp90_151 () (_ BitVec 64))
(declare-fun temp90_152 () (_ BitVec 64))
(declare-fun temp90_153 () (_ BitVec 64))
(declare-fun temp90_154 () (_ BitVec 64))
(declare-fun temp90_155 () (_ BitVec 64))
(declare-fun temp90_157 () (_ BitVec 64))
(declare-fun temp90_158 () (_ BitVec 64))
(declare-fun temp90_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp90_159 () (_ BitVec 64))
(declare-fun temp90_160 () (_ BitVec 64))
(declare-fun temp90_162 () (_ BitVec 64))
(declare-fun temp90_163 () (_ BitVec 64))
(declare-fun temp90_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp90_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp90_165 () (_ BitVec 64))
(declare-fun temp90_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp90_167 () (_ BitVec 64))
(declare-fun temp90_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp90_169 () (_ BitVec 64))
(declare-fun temp90_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp90_171 () (_ BitVec 64))
(declare-fun temp90_172 () (_ BitVec 64))
(declare-fun temp90_173 () (_ BitVec 64))
(declare-fun temp90_174 () (_ BitVec 64))
(declare-fun temp90_175 () (_ BitVec 64))
(declare-fun temp90_176 () (_ BitVec 64))
(declare-fun temp90_177 () (_ BitVec 64))
(declare-fun temp90_178 () (_ BitVec 64))
(declare-fun temp90_179 () (_ BitVec 64))
(declare-fun temp90_180 () (_ BitVec 64))
(declare-fun temp90_181 () (_ BitVec 64))
(declare-fun temp90_182 () (_ BitVec 64))
(declare-fun temp90_183 () (_ BitVec 64))
(declare-fun temp90_184 () (_ BitVec 64))
(declare-fun temp90_185 () (_ BitVec 64))
(declare-fun temp90_186 () (_ BitVec 64))
(declare-fun temp90_187 () (_ BitVec 64))
(declare-fun temp90_188 () (_ BitVec 64))
(declare-fun temp90_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp90_190 () (_ BitVec 64))
(declare-fun temp90_192 () (_ BitVec 64))
(declare-fun temp90_193 () (_ BitVec 64))
(declare-fun temp90_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp90_194 () (_ BitVec 64))
(declare-fun temp90_195 () (_ BitVec 64))
(declare-fun temp90_197 () (_ BitVec 64))
(declare-fun temp90_198 () (_ BitVec 64))
(declare-fun temp90_196 () (_ BitVec 64))
(declare-fun temp90_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp90_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp90_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp90_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp90_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp90_204 () (_ BitVec 64))
(declare-fun temp90_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp90_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp90_207 () (_ BitVec 64))
(declare-fun temp90_208 () (_ BitVec 64))
(declare-fun temp90_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp90_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp90_211 () (_ BitVec 64))
(declare-fun temp90_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp90_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp90_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp90_216 () (_ BitVec 64))
(declare-fun temp90_215 () (_ BitVec 64))
(declare-fun temp90_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp90_218 () (_ BitVec 64))
(declare-fun temp90_219 () (_ BitVec 64))
(declare-fun temp90_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp90_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp90_222 () (_ BitVec 64))
(declare-fun temp90_224 () (_ BitVec 64))
(declare-fun temp90_223 () (_ BitVec 64))
(declare-fun temp90_225 () (_ BitVec 64))
(assert (= temp90_1 #x0000000000000001))
(assert (= var77203 temp90_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp90_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp90_2)))
(assert (= temp90_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp90_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp90_4 #x0000000000000000))
(assert (= var210941 temp90_4))
(assert (= temp90_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp90_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp90_6 #x0000000000000000))
(assert (= var210986 temp90_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp90_7 #x0000000000000000))
(assert (= temp90_8 temp90_7))
(assert (= temp90_9 (select ARGNAME_padding_NAMEEND_VAL temp90_8)))
(assert (= temp90_10 #x0000000000000001))
(assert (= temp90_11 temp90_10))
(assert (= temp90_12 (select ARGNAME_padding_NAMEEND_VAL temp90_11)))
(assert (= temp90_13 #x0000000000000002))
(assert (= temp90_14 temp90_13))
(assert (= temp90_15 (select ARGNAME_padding_NAMEEND_VAL temp90_14)))
(assert (= temp90_16 #x0000000000000003))
(assert (= temp90_17 temp90_16))
(assert (= temp90_18 (select ARGNAME_padding_NAMEEND_VAL temp90_17)))
(assert (= temp90_19 #x0000000000000004))
(assert (= temp90_20 temp90_19))
(assert (= temp90_21 (select ARGNAME_padding_NAMEEND_VAL temp90_20)))
(assert (= temp90_22 #x0000000000000005))
(assert (= temp90_23 temp90_22))
(assert (= temp90_24 (select ARGNAME_padding_NAMEEND_VAL temp90_23)))
(assert (= temp90_25 #x0000000000000000))
(assert (= temp90_26 #x0000000000000000))
(assert (= temp90_27 temp90_26))
(assert (= temp90_28 (select ARGNAME_padding_NAMEEND_VAL temp90_27)))
(assert (= temp90_29 #x0000000000000000))
(assert (= temp90_30 #x0000000000000001))
(assert (= temp90_31 temp90_30))
(assert (= temp90_32 (select ARGNAME_padding_NAMEEND_VAL temp90_31)))
(assert (= temp90_33 #x0000000000000000))
(assert (= temp90_34 #x0000000000000002))
(assert (= temp90_35 temp90_34))
(assert (= temp90_36 (select ARGNAME_padding_NAMEEND_VAL temp90_35)))
(assert (= temp90_37 #x0000000000000000))
(assert (= temp90_38 #x0000000000000003))
(assert (= temp90_39 temp90_38))
(assert (= temp90_40 (select ARGNAME_padding_NAMEEND_VAL temp90_39)))
(assert (= temp90_41 #x0000000000000000))
(assert (= temp90_42 #x0000000000000004))
(assert (= temp90_43 temp90_42))
(assert (= temp90_44 (select ARGNAME_padding_NAMEEND_VAL temp90_43)))
(assert (= temp90_45 #x0000000000000000))
(assert (= temp90_46 #x0000000000000005))
(assert (= temp90_47 temp90_46))
(assert (= temp90_48 (select ARGNAME_padding_NAMEEND_VAL temp90_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp90_28 temp90_25)
             (bvslt temp90_32 temp90_29)
             (bvslt temp90_36 temp90_33)
             (bvslt temp90_40 temp90_37)
             (bvslt temp90_44 temp90_41)
             (bvslt temp90_48 temp90_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp90_49 #x0000000000000000))
(assert (= var1191714 temp90_49))
(assert (= temp90_50 #x0000000000000000))
(assert (= temp90_51 temp90_50))
(assert (= temp90_52 (select ARGNAME_output_padding_NAMEEND_VAL temp90_51)))
(assert (= temp90_53 #x0000000000000001))
(assert (= temp90_54 temp90_53))
(assert (= temp90_55 (select ARGNAME_output_padding_NAMEEND_VAL temp90_54)))
(assert (= temp90_56 #x0000000000000002))
(assert (= temp90_57 temp90_56))
(assert (= temp90_58 (select ARGNAME_output_padding_NAMEEND_VAL temp90_57)))
(assert (= temp90_59 #x0000000000000003))
(assert (= temp90_60 temp90_59))
(assert (= temp90_61 (select ARGNAME_output_padding_NAMEEND_VAL temp90_60)))
(assert (= temp90_62 #x0000000000000004))
(assert (= temp90_63 temp90_62))
(assert (= temp90_64 (select ARGNAME_output_padding_NAMEEND_VAL temp90_63)))
(assert (= temp90_65 #x0000000000000005))
(assert (= temp90_66 temp90_65))
(assert (= temp90_67 (select ARGNAME_output_padding_NAMEEND_VAL temp90_66)))
(assert (= temp90_68 #x0000000000000000))
(assert (= temp90_69 #x0000000000000000))
(assert (= temp90_70 temp90_69))
(assert (= temp90_71 (select ARGNAME_output_padding_NAMEEND_VAL temp90_70)))
(assert (= temp90_72 #x0000000000000000))
(assert (= temp90_73 #x0000000000000001))
(assert (= temp90_74 temp90_73))
(assert (= temp90_75 (select ARGNAME_output_padding_NAMEEND_VAL temp90_74)))
(assert (= temp90_76 #x0000000000000000))
(assert (= temp90_77 #x0000000000000002))
(assert (= temp90_78 temp90_77))
(assert (= temp90_79 (select ARGNAME_output_padding_NAMEEND_VAL temp90_78)))
(assert (= temp90_80 #x0000000000000000))
(assert (= temp90_81 #x0000000000000003))
(assert (= temp90_82 temp90_81))
(assert (= temp90_83 (select ARGNAME_output_padding_NAMEEND_VAL temp90_82)))
(assert (= temp90_84 #x0000000000000000))
(assert (= temp90_85 #x0000000000000004))
(assert (= temp90_86 temp90_85))
(assert (= temp90_87 (select ARGNAME_output_padding_NAMEEND_VAL temp90_86)))
(assert (= temp90_88 #x0000000000000000))
(assert (= temp90_89 #x0000000000000005))
(assert (= temp90_90 temp90_89))
(assert (= temp90_91 (select ARGNAME_output_padding_NAMEEND_VAL temp90_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp90_71 temp90_68)
             (bvslt temp90_75 temp90_72)
             (bvslt temp90_79 temp90_76)
             (bvslt temp90_83 temp90_80)
             (bvslt temp90_87 temp90_84)
             (bvslt temp90_91 temp90_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp90_92 #x0000000000000000))
(assert (= var1191725 temp90_92))
(assert (= temp90_93 #x0000000000000000))
(assert (= temp90_94 temp90_93))
(assert (= temp90_95 (select ARGNAME_stride_NAMEEND_VAL temp90_94)))
(assert (= temp90_96 #x0000000000000001))
(assert (= temp90_97 temp90_96))
(assert (= temp90_98 (select ARGNAME_stride_NAMEEND_VAL temp90_97)))
(assert (= temp90_99 #x0000000000000002))
(assert (= temp90_100 temp90_99))
(assert (= temp90_101 (select ARGNAME_stride_NAMEEND_VAL temp90_100)))
(assert (= temp90_102 #x0000000000000003))
(assert (= temp90_103 temp90_102))
(assert (= temp90_104 (select ARGNAME_stride_NAMEEND_VAL temp90_103)))
(assert (= temp90_105 #x0000000000000004))
(assert (= temp90_106 temp90_105))
(assert (= temp90_107 (select ARGNAME_stride_NAMEEND_VAL temp90_106)))
(assert (= temp90_108 #x0000000000000005))
(assert (= temp90_109 temp90_108))
(assert (= temp90_110 (select ARGNAME_stride_NAMEEND_VAL temp90_109)))
(assert (= temp90_111 #x0000000000000000))
(assert (= temp90_112 #x0000000000000000))
(assert (= temp90_113 temp90_112))
(assert (= temp90_114 (select ARGNAME_stride_NAMEEND_VAL temp90_113)))
(assert (= temp90_115 #x0000000000000000))
(assert (= temp90_116 #x0000000000000001))
(assert (= temp90_117 temp90_116))
(assert (= temp90_118 (select ARGNAME_stride_NAMEEND_VAL temp90_117)))
(assert (= temp90_119 #x0000000000000000))
(assert (= temp90_120 #x0000000000000002))
(assert (= temp90_121 temp90_120))
(assert (= temp90_122 (select ARGNAME_stride_NAMEEND_VAL temp90_121)))
(assert (= temp90_123 #x0000000000000000))
(assert (= temp90_124 #x0000000000000003))
(assert (= temp90_125 temp90_124))
(assert (= temp90_126 (select ARGNAME_stride_NAMEEND_VAL temp90_125)))
(assert (= temp90_127 #x0000000000000000))
(assert (= temp90_128 #x0000000000000004))
(assert (= temp90_129 temp90_128))
(assert (= temp90_130 (select ARGNAME_stride_NAMEEND_VAL temp90_129)))
(assert (= temp90_131 #x0000000000000000))
(assert (= temp90_132 #x0000000000000005))
(assert (= temp90_133 temp90_132))
(assert (= temp90_134 (select ARGNAME_stride_NAMEEND_VAL temp90_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp90_114 temp90_111)
             (bvsle temp90_118 temp90_115)
             (bvsle temp90_122 temp90_119)
             (bvsle temp90_126 temp90_123)
             (bvsle temp90_130 temp90_127)
             (bvsle temp90_134 temp90_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp90_135 #x0000000000000000))
(assert (= var1191735 temp90_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp90_136 #x0000000000000001))
(assert (= var1191747 temp90_136))
(assert (= temp90_137 #x0000000000000000))
(assert (= var1179826 temp90_137))
(assert (= temp90_138 #x0000000000000000))
(assert (= temp90_139 temp90_138))
(assert (= temp90_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp90_139)))
(assert (= temp90_141 #x0000000000000001))
(assert (= temp90_142 temp90_141))
(assert (= temp90_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp90_142)))
(assert (= temp90_144 #x0000000000000002))
(assert (= temp90_145 temp90_144))
(assert (= temp90_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp90_145)))
(assert (= temp90_147 #x0000000000000003))
(assert (= temp90_148 temp90_147))
(assert (= temp90_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp90_148)))
(assert (= temp90_150 #x0000000000000004))
(assert (= temp90_151 temp90_150))
(assert (= temp90_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp90_151)))
(assert (= temp90_153 #x0000000000000005))
(assert (= temp90_154 temp90_153))
(assert (= temp90_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp90_154)))
(assert (= temp90_157 var1179826))
(assert (= temp90_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp90_157)))
(assert (= temp90_156 temp90_158))
(assert (= var1191780
   (ite (bvslt temp90_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp90_159 #x0000000000000000))
(assert (= var1191780 temp90_159))
(assert (= temp90_160 #x0000000000000000))
(assert (= var1179826 temp90_160))
(assert (= temp90_162 var1179826))
(assert (= temp90_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp90_162)))
(assert (= temp90_161 temp90_163))
(assert (= var1191802 (bvsmod temp90_161 ARGNAME_groups_NAMEEND)))
(assert (= temp90_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp90_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp90_165 #x0000000000000001))
(assert (= var1191803 temp90_165))
(assert (= temp90_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp90_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp90_167 #x0000000000000001))
(assert (= var1191823 temp90_167))
(assert (= temp90_168 #x0000000000000001))
(assert (= var1180714 temp90_168))
(assert (= temp90_169 #x0000000000000000))
(assert (= temp90_170 temp90_169))
(assert (= temp90_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp90_170)))
(assert (= temp90_172 #x0000000000000001))
(assert (= temp90_173 temp90_172))
(assert (= temp90_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp90_173)))
(assert (= temp90_175 #x0000000000000002))
(assert (= temp90_176 temp90_175))
(assert (= temp90_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp90_176)))
(assert (= temp90_178 #x0000000000000003))
(assert (= temp90_179 temp90_178))
(assert (= temp90_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp90_179)))
(assert (= temp90_181 #x0000000000000004))
(assert (= temp90_182 temp90_181))
(assert (= temp90_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp90_182)))
(assert (= temp90_184 #x0000000000000005))
(assert (= temp90_185 temp90_184))
(assert (= temp90_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp90_185)))
(assert (= temp90_187 #x0000000000000000))
(assert (= temp90_188
   (ite (bvslt var1180714 temp90_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp90_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp90_188)))
(assert (= var1191831 temp90_189))
(assert (bvslt (ite (bvslt var1180714 temp90_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp90_190 #x0000000000000001))
(assert (= var1180714 temp90_190))
(assert (= temp90_192 var1180714))
(assert (= temp90_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp90_192)))
(assert (= temp90_191 temp90_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp90_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp90_194 #x0000000000000001))
(assert (= var1191836 temp90_194))
(assert (= temp90_195 #x0000000000000000))
(assert (= var1179826 temp90_195))
(assert (= temp90_197 var1179826))
(assert (= temp90_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp90_197)))
(assert (= temp90_196 temp90_198))
(assert (= temp90_199 #x0000000000000002))
(assert (= var1586025 temp90_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp90_200 #x0000000000000001))
(assert (= var1191993 temp90_200))
(assert (= temp90_201 #x0000000000000001))
(assert (= var2700303 temp90_201))
(assert (= temp90_202 #x0000000000000001))
(assert (= var2962447 temp90_202))
(assert (= temp90_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp90_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp90_204 #x0000000000000001))
(assert (= var211058 temp90_204))
(assert (= temp90_205 #x0000000000000001))
(assert (= var211188 temp90_205))
(assert (= var3879401 var211188))
(assert (= temp90_206 #x0000000000000000))
(assert (= var3866802 temp90_206))
(assert (= temp90_207 #x0000000000000000))
(assert (= temp90_208
   (ite (bvslt var3866802 temp90_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp90_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp90_208)))
(assert (= var3879420 temp90_209))
(assert (bvslt (ite (bvslt var3866802 temp90_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp90_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp90_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp90_211 #x0000000000000001))
(assert (= var3879421 temp90_211))
(assert (= temp90_212 #x0000000000000000))
(assert (= var4079423 temp90_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp90_213 #x0000000000000002))
(assert (= var4208259 temp90_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp90_214 #x0000000000000000))
(assert (= var4273820 temp90_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp90_216 #xffffffffffffffff))
(assert (= temp90_215 temp90_216))
(assert (= temp90_217 #x0000000000000001))
(assert (= var197674 temp90_217))
(assert (= temp90_218 #x0000000000000000))
(assert (= temp90_219
   (ite (bvslt var197674 temp90_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp90_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp90_219)))
(assert (= var211595 temp90_220))
(assert (bvslt (ite (bvslt var197674 temp90_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp90_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp90_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp90_222 #x0000000000000001))
(assert (= var211596 temp90_222))
(assert (= temp90_224 #xffffffffffffffff))
(assert (= temp90_223 temp90_224))
(assert (= temp90_225 #x0000000000000001))
(assert (= var211058 temp90_225))
(model-add temp90_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp90_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp90_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp90_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





