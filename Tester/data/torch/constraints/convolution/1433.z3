(declare-fun temp10641_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10641_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10641_3 () (_ BitVec 64))
(declare-fun temp10641_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10641_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10641_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10641_7 () (_ BitVec 64))
(declare-fun temp10641_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10641_9 () (_ BitVec 64))
(declare-fun temp10641_10 () (_ BitVec 64))
(declare-fun temp10641_11 () (_ BitVec 64))
(declare-fun temp10641_12 () (_ BitVec 64))
(declare-fun temp10641_13 () (_ BitVec 64))
(declare-fun temp10641_14 () (_ BitVec 64))
(declare-fun temp10641_15 () (_ BitVec 64))
(declare-fun temp10641_16 () (_ BitVec 64))
(declare-fun temp10641_17 () (_ BitVec 64))
(declare-fun temp10641_18 () (_ BitVec 64))
(declare-fun temp10641_19 () (_ BitVec 64))
(declare-fun temp10641_20 () (_ BitVec 64))
(declare-fun temp10641_21 () (_ BitVec 64))
(declare-fun temp10641_22 () (_ BitVec 64))
(declare-fun temp10641_23 () (_ BitVec 64))
(declare-fun temp10641_24 () (_ BitVec 64))
(declare-fun temp10641_25 () (_ BitVec 64))
(declare-fun temp10641_26 () (_ BitVec 64))
(declare-fun temp10641_27 () (_ BitVec 64))
(declare-fun temp10641_28 () (_ BitVec 64))
(declare-fun temp10641_29 () (_ BitVec 64))
(declare-fun temp10641_30 () (_ BitVec 64))
(declare-fun temp10641_31 () (_ BitVec 64))
(declare-fun temp10641_32 () (_ BitVec 64))
(declare-fun temp10641_33 () (_ BitVec 64))
(declare-fun temp10641_34 () (_ BitVec 64))
(declare-fun temp10641_35 () (_ BitVec 64))
(declare-fun temp10641_36 () (_ BitVec 64))
(declare-fun temp10641_37 () (_ BitVec 64))
(declare-fun temp10641_38 () (_ BitVec 64))
(declare-fun temp10641_39 () (_ BitVec 64))
(declare-fun temp10641_40 () (_ BitVec 64))
(declare-fun temp10641_41 () (_ BitVec 64))
(declare-fun temp10641_42 () (_ BitVec 64))
(declare-fun temp10641_43 () (_ BitVec 64))
(declare-fun temp10641_44 () (_ BitVec 64))
(declare-fun temp10641_45 () (_ BitVec 64))
(declare-fun temp10641_46 () (_ BitVec 64))
(declare-fun temp10641_47 () (_ BitVec 64))
(declare-fun temp10641_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10641_49 () (_ BitVec 64))
(declare-fun temp10641_50 () (_ BitVec 64))
(declare-fun temp10641_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10641_52 () (_ BitVec 64))
(declare-fun temp10641_53 () (_ BitVec 64))
(declare-fun temp10641_54 () (_ BitVec 64))
(declare-fun temp10641_55 () (_ BitVec 64))
(declare-fun temp10641_56 () (_ BitVec 64))
(declare-fun temp10641_57 () (_ BitVec 64))
(declare-fun temp10641_58 () (_ BitVec 64))
(declare-fun temp10641_59 () (_ BitVec 64))
(declare-fun temp10641_60 () (_ BitVec 64))
(declare-fun temp10641_61 () (_ BitVec 64))
(declare-fun temp10641_62 () (_ BitVec 64))
(declare-fun temp10641_63 () (_ BitVec 64))
(declare-fun temp10641_64 () (_ BitVec 64))
(declare-fun temp10641_65 () (_ BitVec 64))
(declare-fun temp10641_66 () (_ BitVec 64))
(declare-fun temp10641_67 () (_ BitVec 64))
(declare-fun temp10641_68 () (_ BitVec 64))
(declare-fun temp10641_69 () (_ BitVec 64))
(declare-fun temp10641_70 () (_ BitVec 64))
(declare-fun temp10641_71 () (_ BitVec 64))
(declare-fun temp10641_72 () (_ BitVec 64))
(declare-fun temp10641_73 () (_ BitVec 64))
(declare-fun temp10641_74 () (_ BitVec 64))
(declare-fun temp10641_75 () (_ BitVec 64))
(declare-fun temp10641_76 () (_ BitVec 64))
(declare-fun temp10641_77 () (_ BitVec 64))
(declare-fun temp10641_78 () (_ BitVec 64))
(declare-fun temp10641_79 () (_ BitVec 64))
(declare-fun temp10641_80 () (_ BitVec 64))
(declare-fun temp10641_81 () (_ BitVec 64))
(declare-fun temp10641_82 () (_ BitVec 64))
(declare-fun temp10641_83 () (_ BitVec 64))
(declare-fun temp10641_84 () (_ BitVec 64))
(declare-fun temp10641_85 () (_ BitVec 64))
(declare-fun temp10641_86 () (_ BitVec 64))
(declare-fun temp10641_87 () (_ BitVec 64))
(declare-fun temp10641_88 () (_ BitVec 64))
(declare-fun temp10641_89 () (_ BitVec 64))
(declare-fun temp10641_90 () (_ BitVec 64))
(declare-fun temp10641_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10641_92 () (_ BitVec 64))
(declare-fun temp10641_93 () (_ BitVec 64))
(declare-fun temp10641_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10641_95 () (_ BitVec 64))
(declare-fun temp10641_96 () (_ BitVec 64))
(declare-fun temp10641_97 () (_ BitVec 64))
(declare-fun temp10641_98 () (_ BitVec 64))
(declare-fun temp10641_99 () (_ BitVec 64))
(declare-fun temp10641_100 () (_ BitVec 64))
(declare-fun temp10641_101 () (_ BitVec 64))
(declare-fun temp10641_102 () (_ BitVec 64))
(declare-fun temp10641_103 () (_ BitVec 64))
(declare-fun temp10641_104 () (_ BitVec 64))
(declare-fun temp10641_105 () (_ BitVec 64))
(declare-fun temp10641_106 () (_ BitVec 64))
(declare-fun temp10641_107 () (_ BitVec 64))
(declare-fun temp10641_108 () (_ BitVec 64))
(declare-fun temp10641_109 () (_ BitVec 64))
(declare-fun temp10641_110 () (_ BitVec 64))
(declare-fun temp10641_111 () (_ BitVec 64))
(declare-fun temp10641_112 () (_ BitVec 64))
(declare-fun temp10641_113 () (_ BitVec 64))
(declare-fun temp10641_114 () (_ BitVec 64))
(declare-fun temp10641_115 () (_ BitVec 64))
(declare-fun temp10641_116 () (_ BitVec 64))
(declare-fun temp10641_117 () (_ BitVec 64))
(declare-fun temp10641_118 () (_ BitVec 64))
(declare-fun temp10641_119 () (_ BitVec 64))
(declare-fun temp10641_120 () (_ BitVec 64))
(declare-fun temp10641_121 () (_ BitVec 64))
(declare-fun temp10641_122 () (_ BitVec 64))
(declare-fun temp10641_123 () (_ BitVec 64))
(declare-fun temp10641_124 () (_ BitVec 64))
(declare-fun temp10641_125 () (_ BitVec 64))
(declare-fun temp10641_126 () (_ BitVec 64))
(declare-fun temp10641_127 () (_ BitVec 64))
(declare-fun temp10641_128 () (_ BitVec 64))
(declare-fun temp10641_129 () (_ BitVec 64))
(declare-fun temp10641_130 () (_ BitVec 64))
(declare-fun temp10641_131 () (_ BitVec 64))
(declare-fun temp10641_132 () (_ BitVec 64))
(declare-fun temp10641_133 () (_ BitVec 64))
(declare-fun temp10641_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10641_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10641_136 () (_ BitVec 64))
(declare-fun temp10641_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10641_138 () (_ BitVec 64))
(declare-fun temp10641_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10641_140 () (_ BitVec 64))
(declare-fun temp10641_141 () (_ BitVec 64))
(declare-fun temp10641_142 () (_ BitVec 64))
(declare-fun temp10641_143 () (_ BitVec 64))
(declare-fun temp10641_144 () (_ BitVec 64))
(declare-fun temp10641_145 () (_ BitVec 64))
(declare-fun temp10641_146 () (_ BitVec 64))
(declare-fun temp10641_147 () (_ BitVec 64))
(declare-fun temp10641_148 () (_ BitVec 64))
(declare-fun temp10641_149 () (_ BitVec 64))
(declare-fun temp10641_150 () (_ BitVec 64))
(declare-fun temp10641_151 () (_ BitVec 64))
(declare-fun temp10641_152 () (_ BitVec 64))
(declare-fun temp10641_153 () (_ BitVec 64))
(declare-fun temp10641_154 () (_ BitVec 64))
(declare-fun temp10641_155 () (_ BitVec 64))
(declare-fun temp10641_157 () (_ BitVec 64))
(declare-fun temp10641_158 () (_ BitVec 64))
(declare-fun temp10641_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10641_159 () (_ BitVec 64))
(declare-fun temp10641_160 () (_ BitVec 64))
(declare-fun temp10641_162 () (_ BitVec 64))
(declare-fun temp10641_163 () (_ BitVec 64))
(declare-fun temp10641_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10641_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10641_165 () (_ BitVec 64))
(declare-fun temp10641_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10641_167 () (_ BitVec 64))
(declare-fun temp10641_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10641_169 () (_ BitVec 64))
(declare-fun temp10641_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10641_171 () (_ BitVec 64))
(declare-fun temp10641_172 () (_ BitVec 64))
(declare-fun temp10641_173 () (_ BitVec 64))
(declare-fun temp10641_174 () (_ BitVec 64))
(declare-fun temp10641_175 () (_ BitVec 64))
(declare-fun temp10641_176 () (_ BitVec 64))
(declare-fun temp10641_177 () (_ BitVec 64))
(declare-fun temp10641_178 () (_ BitVec 64))
(declare-fun temp10641_179 () (_ BitVec 64))
(declare-fun temp10641_180 () (_ BitVec 64))
(declare-fun temp10641_181 () (_ BitVec 64))
(declare-fun temp10641_182 () (_ BitVec 64))
(declare-fun temp10641_183 () (_ BitVec 64))
(declare-fun temp10641_184 () (_ BitVec 64))
(declare-fun temp10641_185 () (_ BitVec 64))
(declare-fun temp10641_186 () (_ BitVec 64))
(declare-fun temp10641_187 () (_ BitVec 64))
(declare-fun temp10641_188 () (_ BitVec 64))
(declare-fun temp10641_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10641_190 () (_ BitVec 64))
(declare-fun temp10641_192 () (_ BitVec 64))
(declare-fun temp10641_193 () (_ BitVec 64))
(declare-fun temp10641_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10641_194 () (_ BitVec 64))
(declare-fun temp10641_195 () (_ BitVec 64))
(declare-fun temp10641_197 () (_ BitVec 64))
(declare-fun temp10641_198 () (_ BitVec 64))
(declare-fun temp10641_196 () (_ BitVec 64))
(declare-fun temp10641_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10641_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10641_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10641_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10641_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10641_204 () (_ BitVec 64))
(declare-fun temp10641_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10641_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10641_207 () (_ BitVec 64))
(declare-fun temp10641_208 () (_ BitVec 64))
(declare-fun temp10641_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10641_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10641_211 () (_ BitVec 64))
(declare-fun temp10641_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10641_213 () (_ BitVec 64))
(declare-fun temp10641_214 () (_ BitVec 64))
(declare-fun temp10641_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10641_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10641_217 () (_ BitVec 64))
(declare-fun temp10641_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10641_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10641_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10641_222 () (_ BitVec 64))
(declare-fun temp10641_221 () (_ BitVec 64))
(declare-fun temp10641_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10641_224 () (_ BitVec 64))
(declare-fun temp10641_225 () (_ BitVec 64))
(declare-fun temp10641_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10641_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10641_228 () (_ BitVec 64))
(declare-fun temp10641_230 () (_ BitVec 64))
(declare-fun temp10641_229 () (_ BitVec 64))
(declare-fun temp10641_231 () (_ BitVec 64))
(assert (= temp10641_1 #x0000000000000001))
(assert (= var77203 temp10641_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10641_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10641_2)))
(assert (= temp10641_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10641_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10641_4 #x0000000000000000))
(assert (= var210941 temp10641_4))
(assert (= temp10641_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10641_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10641_6 #x0000000000000000))
(assert (= var210986 temp10641_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10641_7 #x0000000000000000))
(assert (= temp10641_8 temp10641_7))
(assert (= temp10641_9 (select ARGNAME_padding_NAMEEND_VAL temp10641_8)))
(assert (= temp10641_10 #x0000000000000001))
(assert (= temp10641_11 temp10641_10))
(assert (= temp10641_12 (select ARGNAME_padding_NAMEEND_VAL temp10641_11)))
(assert (= temp10641_13 #x0000000000000002))
(assert (= temp10641_14 temp10641_13))
(assert (= temp10641_15 (select ARGNAME_padding_NAMEEND_VAL temp10641_14)))
(assert (= temp10641_16 #x0000000000000003))
(assert (= temp10641_17 temp10641_16))
(assert (= temp10641_18 (select ARGNAME_padding_NAMEEND_VAL temp10641_17)))
(assert (= temp10641_19 #x0000000000000004))
(assert (= temp10641_20 temp10641_19))
(assert (= temp10641_21 (select ARGNAME_padding_NAMEEND_VAL temp10641_20)))
(assert (= temp10641_22 #x0000000000000005))
(assert (= temp10641_23 temp10641_22))
(assert (= temp10641_24 (select ARGNAME_padding_NAMEEND_VAL temp10641_23)))
(assert (= temp10641_25 #x0000000000000000))
(assert (= temp10641_26 #x0000000000000000))
(assert (= temp10641_27 temp10641_26))
(assert (= temp10641_28 (select ARGNAME_padding_NAMEEND_VAL temp10641_27)))
(assert (= temp10641_29 #x0000000000000000))
(assert (= temp10641_30 #x0000000000000001))
(assert (= temp10641_31 temp10641_30))
(assert (= temp10641_32 (select ARGNAME_padding_NAMEEND_VAL temp10641_31)))
(assert (= temp10641_33 #x0000000000000000))
(assert (= temp10641_34 #x0000000000000002))
(assert (= temp10641_35 temp10641_34))
(assert (= temp10641_36 (select ARGNAME_padding_NAMEEND_VAL temp10641_35)))
(assert (= temp10641_37 #x0000000000000000))
(assert (= temp10641_38 #x0000000000000003))
(assert (= temp10641_39 temp10641_38))
(assert (= temp10641_40 (select ARGNAME_padding_NAMEEND_VAL temp10641_39)))
(assert (= temp10641_41 #x0000000000000000))
(assert (= temp10641_42 #x0000000000000004))
(assert (= temp10641_43 temp10641_42))
(assert (= temp10641_44 (select ARGNAME_padding_NAMEEND_VAL temp10641_43)))
(assert (= temp10641_45 #x0000000000000000))
(assert (= temp10641_46 #x0000000000000005))
(assert (= temp10641_47 temp10641_46))
(assert (= temp10641_48 (select ARGNAME_padding_NAMEEND_VAL temp10641_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10641_28 temp10641_25)
             (bvslt temp10641_32 temp10641_29)
             (bvslt temp10641_36 temp10641_33)
             (bvslt temp10641_40 temp10641_37)
             (bvslt temp10641_44 temp10641_41)
             (bvslt temp10641_48 temp10641_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10641_49 #x0000000000000000))
(assert (= var1191714 temp10641_49))
(assert (= temp10641_50 #x0000000000000000))
(assert (= temp10641_51 temp10641_50))
(assert (= temp10641_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10641_51)))
(assert (= temp10641_53 #x0000000000000001))
(assert (= temp10641_54 temp10641_53))
(assert (= temp10641_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10641_54)))
(assert (= temp10641_56 #x0000000000000002))
(assert (= temp10641_57 temp10641_56))
(assert (= temp10641_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10641_57)))
(assert (= temp10641_59 #x0000000000000003))
(assert (= temp10641_60 temp10641_59))
(assert (= temp10641_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10641_60)))
(assert (= temp10641_62 #x0000000000000004))
(assert (= temp10641_63 temp10641_62))
(assert (= temp10641_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10641_63)))
(assert (= temp10641_65 #x0000000000000005))
(assert (= temp10641_66 temp10641_65))
(assert (= temp10641_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10641_66)))
(assert (= temp10641_68 #x0000000000000000))
(assert (= temp10641_69 #x0000000000000000))
(assert (= temp10641_70 temp10641_69))
(assert (= temp10641_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10641_70)))
(assert (= temp10641_72 #x0000000000000000))
(assert (= temp10641_73 #x0000000000000001))
(assert (= temp10641_74 temp10641_73))
(assert (= temp10641_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10641_74)))
(assert (= temp10641_76 #x0000000000000000))
(assert (= temp10641_77 #x0000000000000002))
(assert (= temp10641_78 temp10641_77))
(assert (= temp10641_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10641_78)))
(assert (= temp10641_80 #x0000000000000000))
(assert (= temp10641_81 #x0000000000000003))
(assert (= temp10641_82 temp10641_81))
(assert (= temp10641_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10641_82)))
(assert (= temp10641_84 #x0000000000000000))
(assert (= temp10641_85 #x0000000000000004))
(assert (= temp10641_86 temp10641_85))
(assert (= temp10641_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10641_86)))
(assert (= temp10641_88 #x0000000000000000))
(assert (= temp10641_89 #x0000000000000005))
(assert (= temp10641_90 temp10641_89))
(assert (= temp10641_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10641_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10641_71 temp10641_68)
             (bvslt temp10641_75 temp10641_72)
             (bvslt temp10641_79 temp10641_76)
             (bvslt temp10641_83 temp10641_80)
             (bvslt temp10641_87 temp10641_84)
             (bvslt temp10641_91 temp10641_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10641_92 #x0000000000000000))
(assert (= var1191725 temp10641_92))
(assert (= temp10641_93 #x0000000000000000))
(assert (= temp10641_94 temp10641_93))
(assert (= temp10641_95 (select ARGNAME_stride_NAMEEND_VAL temp10641_94)))
(assert (= temp10641_96 #x0000000000000001))
(assert (= temp10641_97 temp10641_96))
(assert (= temp10641_98 (select ARGNAME_stride_NAMEEND_VAL temp10641_97)))
(assert (= temp10641_99 #x0000000000000002))
(assert (= temp10641_100 temp10641_99))
(assert (= temp10641_101 (select ARGNAME_stride_NAMEEND_VAL temp10641_100)))
(assert (= temp10641_102 #x0000000000000003))
(assert (= temp10641_103 temp10641_102))
(assert (= temp10641_104 (select ARGNAME_stride_NAMEEND_VAL temp10641_103)))
(assert (= temp10641_105 #x0000000000000004))
(assert (= temp10641_106 temp10641_105))
(assert (= temp10641_107 (select ARGNAME_stride_NAMEEND_VAL temp10641_106)))
(assert (= temp10641_108 #x0000000000000005))
(assert (= temp10641_109 temp10641_108))
(assert (= temp10641_110 (select ARGNAME_stride_NAMEEND_VAL temp10641_109)))
(assert (= temp10641_111 #x0000000000000000))
(assert (= temp10641_112 #x0000000000000000))
(assert (= temp10641_113 temp10641_112))
(assert (= temp10641_114 (select ARGNAME_stride_NAMEEND_VAL temp10641_113)))
(assert (= temp10641_115 #x0000000000000000))
(assert (= temp10641_116 #x0000000000000001))
(assert (= temp10641_117 temp10641_116))
(assert (= temp10641_118 (select ARGNAME_stride_NAMEEND_VAL temp10641_117)))
(assert (= temp10641_119 #x0000000000000000))
(assert (= temp10641_120 #x0000000000000002))
(assert (= temp10641_121 temp10641_120))
(assert (= temp10641_122 (select ARGNAME_stride_NAMEEND_VAL temp10641_121)))
(assert (= temp10641_123 #x0000000000000000))
(assert (= temp10641_124 #x0000000000000003))
(assert (= temp10641_125 temp10641_124))
(assert (= temp10641_126 (select ARGNAME_stride_NAMEEND_VAL temp10641_125)))
(assert (= temp10641_127 #x0000000000000000))
(assert (= temp10641_128 #x0000000000000004))
(assert (= temp10641_129 temp10641_128))
(assert (= temp10641_130 (select ARGNAME_stride_NAMEEND_VAL temp10641_129)))
(assert (= temp10641_131 #x0000000000000000))
(assert (= temp10641_132 #x0000000000000005))
(assert (= temp10641_133 temp10641_132))
(assert (= temp10641_134 (select ARGNAME_stride_NAMEEND_VAL temp10641_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10641_114 temp10641_111)
             (bvsle temp10641_118 temp10641_115)
             (bvsle temp10641_122 temp10641_119)
             (bvsle temp10641_126 temp10641_123)
             (bvsle temp10641_130 temp10641_127)
             (bvsle temp10641_134 temp10641_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10641_135 #x0000000000000000))
(assert (= var1191735 temp10641_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10641_136 #x0000000000000001))
(assert (= var1191747 temp10641_136))
(assert (= temp10641_137 #x0000000000000000))
(assert (= var1179826 temp10641_137))
(assert (= temp10641_138 #x0000000000000000))
(assert (= temp10641_139 temp10641_138))
(assert (= temp10641_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10641_139)))
(assert (= temp10641_141 #x0000000000000001))
(assert (= temp10641_142 temp10641_141))
(assert (= temp10641_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10641_142)))
(assert (= temp10641_144 #x0000000000000002))
(assert (= temp10641_145 temp10641_144))
(assert (= temp10641_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10641_145)))
(assert (= temp10641_147 #x0000000000000003))
(assert (= temp10641_148 temp10641_147))
(assert (= temp10641_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10641_148)))
(assert (= temp10641_150 #x0000000000000004))
(assert (= temp10641_151 temp10641_150))
(assert (= temp10641_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10641_151)))
(assert (= temp10641_153 #x0000000000000005))
(assert (= temp10641_154 temp10641_153))
(assert (= temp10641_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10641_154)))
(assert (= temp10641_157 var1179826))
(assert (= temp10641_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10641_157)))
(assert (= temp10641_156 temp10641_158))
(assert (= var1191780
   (ite (bvslt temp10641_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10641_159 #x0000000000000000))
(assert (= var1191780 temp10641_159))
(assert (= temp10641_160 #x0000000000000000))
(assert (= var1179826 temp10641_160))
(assert (= temp10641_162 var1179826))
(assert (= temp10641_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10641_162)))
(assert (= temp10641_161 temp10641_163))
(assert (= var1191802 (bvsmod temp10641_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10641_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10641_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10641_165 #x0000000000000001))
(assert (= var1191803 temp10641_165))
(assert (= temp10641_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10641_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10641_167 #x0000000000000001))
(assert (= var1191823 temp10641_167))
(assert (= temp10641_168 #x0000000000000001))
(assert (= var1180714 temp10641_168))
(assert (= temp10641_169 #x0000000000000000))
(assert (= temp10641_170 temp10641_169))
(assert (= temp10641_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10641_170)))
(assert (= temp10641_172 #x0000000000000001))
(assert (= temp10641_173 temp10641_172))
(assert (= temp10641_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10641_173)))
(assert (= temp10641_175 #x0000000000000002))
(assert (= temp10641_176 temp10641_175))
(assert (= temp10641_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10641_176)))
(assert (= temp10641_178 #x0000000000000003))
(assert (= temp10641_179 temp10641_178))
(assert (= temp10641_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10641_179)))
(assert (= temp10641_181 #x0000000000000004))
(assert (= temp10641_182 temp10641_181))
(assert (= temp10641_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10641_182)))
(assert (= temp10641_184 #x0000000000000005))
(assert (= temp10641_185 temp10641_184))
(assert (= temp10641_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10641_185)))
(assert (= temp10641_187 #x0000000000000000))
(assert (= temp10641_188
   (ite (bvslt var1180714 temp10641_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10641_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10641_188)))
(assert (= var1191831 temp10641_189))
(assert (bvslt (ite (bvslt var1180714 temp10641_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10641_190 #x0000000000000001))
(assert (= var1180714 temp10641_190))
(assert (= temp10641_192 var1180714))
(assert (= temp10641_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10641_192)))
(assert (= temp10641_191 temp10641_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10641_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10641_194 #x0000000000000001))
(assert (= var1191836 temp10641_194))
(assert (= temp10641_195 #x0000000000000000))
(assert (= var1179826 temp10641_195))
(assert (= temp10641_197 var1179826))
(assert (= temp10641_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10641_197)))
(assert (= temp10641_196 temp10641_198))
(assert (= temp10641_199 #x0000000000000002))
(assert (= var1586025 temp10641_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10641_200 #x0000000000000001))
(assert (= var1191993 temp10641_200))
(assert (= temp10641_201 #x0000000000000001))
(assert (= var2700303 temp10641_201))
(assert (= temp10641_202 #x0000000000000001))
(assert (= var2962447 temp10641_202))
(assert (= temp10641_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10641_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10641_204 #x0000000000000001))
(assert (= var211058 temp10641_204))
(assert (= temp10641_205 #x0000000000000001))
(assert (= var211188 temp10641_205))
(assert (= var3879401 var211188))
(assert (= temp10641_206 #x0000000000000000))
(assert (= var3866802 temp10641_206))
(assert (= temp10641_207 #x0000000000000000))
(assert (= temp10641_208
   (ite (bvslt var3866802 temp10641_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10641_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10641_208)))
(assert (= var3879420 temp10641_209))
(assert (bvslt (ite (bvslt var3866802 temp10641_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10641_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10641_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10641_211 #x0000000000000000))
(assert (= var3879421 temp10641_211))
(assert (= temp10641_212 #x0000000000000001))
(assert (= var3867690 temp10641_212))
(assert (= temp10641_213 #x0000000000000000))
(assert (= temp10641_214
   (ite (bvslt var3867690 temp10641_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10641_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10641_214)))
(assert (= var3879423 temp10641_215))
(assert (bvslt (ite (bvslt var3867690 temp10641_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10641_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10641_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10641_217 #x0000000000000001))
(assert (= var3879424 temp10641_217))
(assert (= temp10641_218 #x0000000000000000))
(assert (= var4133117 temp10641_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10641_219 #x0000000000000002))
(assert (= var4339331 temp10641_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10641_220 #x0000000000000000))
(assert (= var4404892 temp10641_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10641_222 #xffffffffffffffff))
(assert (= temp10641_221 temp10641_222))
(assert (= temp10641_223 #x0000000000000001))
(assert (= var197674 temp10641_223))
(assert (= temp10641_224 #x0000000000000000))
(assert (= temp10641_225
   (ite (bvslt var197674 temp10641_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10641_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10641_225)))
(assert (= var211595 temp10641_226))
(assert (bvslt (ite (bvslt var197674 temp10641_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10641_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10641_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10641_228 #x0000000000000001))
(assert (= var211596 temp10641_228))
(assert (= temp10641_230 #xffffffffffffffff))
(assert (= temp10641_229 temp10641_230))
(assert (= temp10641_231 #x0000000000000001))
(assert (= var211058 temp10641_231))
(model-add temp10641_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10641_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10641_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10641_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





