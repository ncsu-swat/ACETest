(declare-fun temp10_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10_3 () (_ BitVec 64))
(declare-fun temp10_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10_7 () (_ BitVec 64))
(declare-fun temp10_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10_9 () (_ BitVec 64))
(declare-fun temp10_10 () (_ BitVec 64))
(declare-fun temp10_11 () (_ BitVec 64))
(declare-fun temp10_12 () (_ BitVec 64))
(declare-fun temp10_13 () (_ BitVec 64))
(declare-fun temp10_14 () (_ BitVec 64))
(declare-fun temp10_15 () (_ BitVec 64))
(declare-fun temp10_16 () (_ BitVec 64))
(declare-fun temp10_17 () (_ BitVec 64))
(declare-fun temp10_18 () (_ BitVec 64))
(declare-fun temp10_19 () (_ BitVec 64))
(declare-fun temp10_20 () (_ BitVec 64))
(declare-fun temp10_21 () (_ BitVec 64))
(declare-fun temp10_22 () (_ BitVec 64))
(declare-fun temp10_23 () (_ BitVec 64))
(declare-fun temp10_24 () (_ BitVec 64))
(declare-fun temp10_25 () (_ BitVec 64))
(declare-fun temp10_26 () (_ BitVec 64))
(declare-fun temp10_27 () (_ BitVec 64))
(declare-fun temp10_28 () (_ BitVec 64))
(declare-fun temp10_29 () (_ BitVec 64))
(declare-fun temp10_30 () (_ BitVec 64))
(declare-fun temp10_31 () (_ BitVec 64))
(declare-fun temp10_32 () (_ BitVec 64))
(declare-fun temp10_33 () (_ BitVec 64))
(declare-fun temp10_34 () (_ BitVec 64))
(declare-fun temp10_35 () (_ BitVec 64))
(declare-fun temp10_36 () (_ BitVec 64))
(declare-fun temp10_37 () (_ BitVec 64))
(declare-fun temp10_38 () (_ BitVec 64))
(declare-fun temp10_39 () (_ BitVec 64))
(declare-fun temp10_40 () (_ BitVec 64))
(declare-fun temp10_41 () (_ BitVec 64))
(declare-fun temp10_42 () (_ BitVec 64))
(declare-fun temp10_43 () (_ BitVec 64))
(declare-fun temp10_44 () (_ BitVec 64))
(declare-fun temp10_45 () (_ BitVec 64))
(declare-fun temp10_46 () (_ BitVec 64))
(declare-fun temp10_47 () (_ BitVec 64))
(declare-fun temp10_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10_49 () (_ BitVec 64))
(declare-fun temp10_50 () (_ BitVec 64))
(declare-fun temp10_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10_52 () (_ BitVec 64))
(declare-fun temp10_53 () (_ BitVec 64))
(declare-fun temp10_54 () (_ BitVec 64))
(declare-fun temp10_55 () (_ BitVec 64))
(declare-fun temp10_56 () (_ BitVec 64))
(declare-fun temp10_57 () (_ BitVec 64))
(declare-fun temp10_58 () (_ BitVec 64))
(declare-fun temp10_59 () (_ BitVec 64))
(declare-fun temp10_60 () (_ BitVec 64))
(declare-fun temp10_61 () (_ BitVec 64))
(declare-fun temp10_62 () (_ BitVec 64))
(declare-fun temp10_63 () (_ BitVec 64))
(declare-fun temp10_64 () (_ BitVec 64))
(declare-fun temp10_65 () (_ BitVec 64))
(declare-fun temp10_66 () (_ BitVec 64))
(declare-fun temp10_67 () (_ BitVec 64))
(declare-fun temp10_68 () (_ BitVec 64))
(declare-fun temp10_69 () (_ BitVec 64))
(declare-fun temp10_70 () (_ BitVec 64))
(declare-fun temp10_71 () (_ BitVec 64))
(declare-fun temp10_72 () (_ BitVec 64))
(declare-fun temp10_73 () (_ BitVec 64))
(declare-fun temp10_74 () (_ BitVec 64))
(declare-fun temp10_75 () (_ BitVec 64))
(declare-fun temp10_76 () (_ BitVec 64))
(declare-fun temp10_77 () (_ BitVec 64))
(declare-fun temp10_78 () (_ BitVec 64))
(declare-fun temp10_79 () (_ BitVec 64))
(declare-fun temp10_80 () (_ BitVec 64))
(declare-fun temp10_81 () (_ BitVec 64))
(declare-fun temp10_82 () (_ BitVec 64))
(declare-fun temp10_83 () (_ BitVec 64))
(declare-fun temp10_84 () (_ BitVec 64))
(declare-fun temp10_85 () (_ BitVec 64))
(declare-fun temp10_86 () (_ BitVec 64))
(declare-fun temp10_87 () (_ BitVec 64))
(declare-fun temp10_88 () (_ BitVec 64))
(declare-fun temp10_89 () (_ BitVec 64))
(declare-fun temp10_90 () (_ BitVec 64))
(declare-fun temp10_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10_92 () (_ BitVec 64))
(declare-fun temp10_93 () (_ BitVec 64))
(declare-fun temp10_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10_95 () (_ BitVec 64))
(declare-fun temp10_96 () (_ BitVec 64))
(declare-fun temp10_97 () (_ BitVec 64))
(declare-fun temp10_98 () (_ BitVec 64))
(declare-fun temp10_99 () (_ BitVec 64))
(declare-fun temp10_100 () (_ BitVec 64))
(declare-fun temp10_101 () (_ BitVec 64))
(declare-fun temp10_102 () (_ BitVec 64))
(declare-fun temp10_103 () (_ BitVec 64))
(declare-fun temp10_104 () (_ BitVec 64))
(declare-fun temp10_105 () (_ BitVec 64))
(declare-fun temp10_106 () (_ BitVec 64))
(declare-fun temp10_107 () (_ BitVec 64))
(declare-fun temp10_108 () (_ BitVec 64))
(declare-fun temp10_109 () (_ BitVec 64))
(declare-fun temp10_110 () (_ BitVec 64))
(declare-fun temp10_111 () (_ BitVec 64))
(declare-fun temp10_112 () (_ BitVec 64))
(declare-fun temp10_113 () (_ BitVec 64))
(declare-fun temp10_114 () (_ BitVec 64))
(declare-fun temp10_115 () (_ BitVec 64))
(declare-fun temp10_116 () (_ BitVec 64))
(declare-fun temp10_117 () (_ BitVec 64))
(declare-fun temp10_118 () (_ BitVec 64))
(declare-fun temp10_119 () (_ BitVec 64))
(declare-fun temp10_120 () (_ BitVec 64))
(declare-fun temp10_121 () (_ BitVec 64))
(declare-fun temp10_122 () (_ BitVec 64))
(declare-fun temp10_123 () (_ BitVec 64))
(declare-fun temp10_124 () (_ BitVec 64))
(declare-fun temp10_125 () (_ BitVec 64))
(declare-fun temp10_126 () (_ BitVec 64))
(declare-fun temp10_127 () (_ BitVec 64))
(declare-fun temp10_128 () (_ BitVec 64))
(declare-fun temp10_129 () (_ BitVec 64))
(declare-fun temp10_130 () (_ BitVec 64))
(declare-fun temp10_131 () (_ BitVec 64))
(declare-fun temp10_132 () (_ BitVec 64))
(declare-fun temp10_133 () (_ BitVec 64))
(declare-fun temp10_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10_136 () (_ BitVec 64))
(declare-fun temp10_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10_138 () (_ BitVec 64))
(declare-fun temp10_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10_140 () (_ BitVec 64))
(declare-fun temp10_141 () (_ BitVec 64))
(declare-fun temp10_142 () (_ BitVec 64))
(declare-fun temp10_143 () (_ BitVec 64))
(declare-fun temp10_144 () (_ BitVec 64))
(declare-fun temp10_145 () (_ BitVec 64))
(declare-fun temp10_146 () (_ BitVec 64))
(declare-fun temp10_147 () (_ BitVec 64))
(declare-fun temp10_148 () (_ BitVec 64))
(declare-fun temp10_149 () (_ BitVec 64))
(declare-fun temp10_150 () (_ BitVec 64))
(declare-fun temp10_151 () (_ BitVec 64))
(declare-fun temp10_152 () (_ BitVec 64))
(declare-fun temp10_153 () (_ BitVec 64))
(declare-fun temp10_154 () (_ BitVec 64))
(declare-fun temp10_155 () (_ BitVec 64))
(declare-fun temp10_157 () (_ BitVec 64))
(declare-fun temp10_158 () (_ BitVec 64))
(declare-fun temp10_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10_159 () (_ BitVec 64))
(declare-fun temp10_160 () (_ BitVec 64))
(declare-fun temp10_162 () (_ BitVec 64))
(declare-fun temp10_163 () (_ BitVec 64))
(declare-fun temp10_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10_165 () (_ BitVec 64))
(declare-fun temp10_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10_167 () (_ BitVec 64))
(declare-fun temp10_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10_169 () (_ BitVec 64))
(declare-fun temp10_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10_171 () (_ BitVec 64))
(declare-fun temp10_172 () (_ BitVec 64))
(declare-fun temp10_173 () (_ BitVec 64))
(declare-fun temp10_174 () (_ BitVec 64))
(declare-fun temp10_175 () (_ BitVec 64))
(declare-fun temp10_176 () (_ BitVec 64))
(declare-fun temp10_177 () (_ BitVec 64))
(declare-fun temp10_178 () (_ BitVec 64))
(declare-fun temp10_179 () (_ BitVec 64))
(declare-fun temp10_180 () (_ BitVec 64))
(declare-fun temp10_181 () (_ BitVec 64))
(declare-fun temp10_182 () (_ BitVec 64))
(declare-fun temp10_183 () (_ BitVec 64))
(declare-fun temp10_184 () (_ BitVec 64))
(declare-fun temp10_185 () (_ BitVec 64))
(declare-fun temp10_186 () (_ BitVec 64))
(declare-fun temp10_187 () (_ BitVec 64))
(declare-fun temp10_188 () (_ BitVec 64))
(declare-fun temp10_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10_190 () (_ BitVec 64))
(declare-fun temp10_192 () (_ BitVec 64))
(declare-fun temp10_193 () (_ BitVec 64))
(declare-fun temp10_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10_194 () (_ BitVec 64))
(declare-fun temp10_195 () (_ BitVec 64))
(declare-fun temp10_197 () (_ BitVec 64))
(declare-fun temp10_198 () (_ BitVec 64))
(declare-fun temp10_196 () (_ BitVec 64))
(declare-fun temp10_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10_204 () (_ BitVec 64))
(declare-fun temp10_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10_207 () (_ BitVec 64))
(declare-fun temp10_208 () (_ BitVec 64))
(declare-fun temp10_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10_211 () (_ BitVec 64))
(declare-fun temp10_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10_215 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun temp10_216 () (_ BitVec 64))
(assert (= temp10_1 #x0000000000000001))
(assert (= var77203 temp10_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10_2)))
(assert (= temp10_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_4 #x0000000000000000))
(assert (= var210941 temp10_4))
(assert (= temp10_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_6 #x0000000000000000))
(assert (= var210986 temp10_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10_7 #x0000000000000000))
(assert (= temp10_8 temp10_7))
(assert (= temp10_9 (select ARGNAME_padding_NAMEEND_VAL temp10_8)))
(assert (= temp10_10 #x0000000000000001))
(assert (= temp10_11 temp10_10))
(assert (= temp10_12 (select ARGNAME_padding_NAMEEND_VAL temp10_11)))
(assert (= temp10_13 #x0000000000000002))
(assert (= temp10_14 temp10_13))
(assert (= temp10_15 (select ARGNAME_padding_NAMEEND_VAL temp10_14)))
(assert (= temp10_16 #x0000000000000003))
(assert (= temp10_17 temp10_16))
(assert (= temp10_18 (select ARGNAME_padding_NAMEEND_VAL temp10_17)))
(assert (= temp10_19 #x0000000000000004))
(assert (= temp10_20 temp10_19))
(assert (= temp10_21 (select ARGNAME_padding_NAMEEND_VAL temp10_20)))
(assert (= temp10_22 #x0000000000000005))
(assert (= temp10_23 temp10_22))
(assert (= temp10_24 (select ARGNAME_padding_NAMEEND_VAL temp10_23)))
(assert (= temp10_25 #x0000000000000000))
(assert (= temp10_26 #x0000000000000000))
(assert (= temp10_27 temp10_26))
(assert (= temp10_28 (select ARGNAME_padding_NAMEEND_VAL temp10_27)))
(assert (= temp10_29 #x0000000000000000))
(assert (= temp10_30 #x0000000000000001))
(assert (= temp10_31 temp10_30))
(assert (= temp10_32 (select ARGNAME_padding_NAMEEND_VAL temp10_31)))
(assert (= temp10_33 #x0000000000000000))
(assert (= temp10_34 #x0000000000000002))
(assert (= temp10_35 temp10_34))
(assert (= temp10_36 (select ARGNAME_padding_NAMEEND_VAL temp10_35)))
(assert (= temp10_37 #x0000000000000000))
(assert (= temp10_38 #x0000000000000003))
(assert (= temp10_39 temp10_38))
(assert (= temp10_40 (select ARGNAME_padding_NAMEEND_VAL temp10_39)))
(assert (= temp10_41 #x0000000000000000))
(assert (= temp10_42 #x0000000000000004))
(assert (= temp10_43 temp10_42))
(assert (= temp10_44 (select ARGNAME_padding_NAMEEND_VAL temp10_43)))
(assert (= temp10_45 #x0000000000000000))
(assert (= temp10_46 #x0000000000000005))
(assert (= temp10_47 temp10_46))
(assert (= temp10_48 (select ARGNAME_padding_NAMEEND_VAL temp10_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10_28 temp10_25)
             (bvslt temp10_32 temp10_29)
             (bvslt temp10_36 temp10_33)
             (bvslt temp10_40 temp10_37)
             (bvslt temp10_44 temp10_41)
             (bvslt temp10_48 temp10_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_49 #x0000000000000000))
(assert (= var1191714 temp10_49))
(assert (= temp10_50 #x0000000000000000))
(assert (= temp10_51 temp10_50))
(assert (= temp10_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10_51)))
(assert (= temp10_53 #x0000000000000001))
(assert (= temp10_54 temp10_53))
(assert (= temp10_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10_54)))
(assert (= temp10_56 #x0000000000000002))
(assert (= temp10_57 temp10_56))
(assert (= temp10_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10_57)))
(assert (= temp10_59 #x0000000000000003))
(assert (= temp10_60 temp10_59))
(assert (= temp10_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10_60)))
(assert (= temp10_62 #x0000000000000004))
(assert (= temp10_63 temp10_62))
(assert (= temp10_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10_63)))
(assert (= temp10_65 #x0000000000000005))
(assert (= temp10_66 temp10_65))
(assert (= temp10_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10_66)))
(assert (= temp10_68 #x0000000000000000))
(assert (= temp10_69 #x0000000000000000))
(assert (= temp10_70 temp10_69))
(assert (= temp10_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10_70)))
(assert (= temp10_72 #x0000000000000000))
(assert (= temp10_73 #x0000000000000001))
(assert (= temp10_74 temp10_73))
(assert (= temp10_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10_74)))
(assert (= temp10_76 #x0000000000000000))
(assert (= temp10_77 #x0000000000000002))
(assert (= temp10_78 temp10_77))
(assert (= temp10_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10_78)))
(assert (= temp10_80 #x0000000000000000))
(assert (= temp10_81 #x0000000000000003))
(assert (= temp10_82 temp10_81))
(assert (= temp10_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10_82)))
(assert (= temp10_84 #x0000000000000000))
(assert (= temp10_85 #x0000000000000004))
(assert (= temp10_86 temp10_85))
(assert (= temp10_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10_86)))
(assert (= temp10_88 #x0000000000000000))
(assert (= temp10_89 #x0000000000000005))
(assert (= temp10_90 temp10_89))
(assert (= temp10_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10_71 temp10_68)
             (bvslt temp10_75 temp10_72)
             (bvslt temp10_79 temp10_76)
             (bvslt temp10_83 temp10_80)
             (bvslt temp10_87 temp10_84)
             (bvslt temp10_91 temp10_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_92 #x0000000000000000))
(assert (= var1191725 temp10_92))
(assert (= temp10_93 #x0000000000000000))
(assert (= temp10_94 temp10_93))
(assert (= temp10_95 (select ARGNAME_stride_NAMEEND_VAL temp10_94)))
(assert (= temp10_96 #x0000000000000001))
(assert (= temp10_97 temp10_96))
(assert (= temp10_98 (select ARGNAME_stride_NAMEEND_VAL temp10_97)))
(assert (= temp10_99 #x0000000000000002))
(assert (= temp10_100 temp10_99))
(assert (= temp10_101 (select ARGNAME_stride_NAMEEND_VAL temp10_100)))
(assert (= temp10_102 #x0000000000000003))
(assert (= temp10_103 temp10_102))
(assert (= temp10_104 (select ARGNAME_stride_NAMEEND_VAL temp10_103)))
(assert (= temp10_105 #x0000000000000004))
(assert (= temp10_106 temp10_105))
(assert (= temp10_107 (select ARGNAME_stride_NAMEEND_VAL temp10_106)))
(assert (= temp10_108 #x0000000000000005))
(assert (= temp10_109 temp10_108))
(assert (= temp10_110 (select ARGNAME_stride_NAMEEND_VAL temp10_109)))
(assert (= temp10_111 #x0000000000000000))
(assert (= temp10_112 #x0000000000000000))
(assert (= temp10_113 temp10_112))
(assert (= temp10_114 (select ARGNAME_stride_NAMEEND_VAL temp10_113)))
(assert (= temp10_115 #x0000000000000000))
(assert (= temp10_116 #x0000000000000001))
(assert (= temp10_117 temp10_116))
(assert (= temp10_118 (select ARGNAME_stride_NAMEEND_VAL temp10_117)))
(assert (= temp10_119 #x0000000000000000))
(assert (= temp10_120 #x0000000000000002))
(assert (= temp10_121 temp10_120))
(assert (= temp10_122 (select ARGNAME_stride_NAMEEND_VAL temp10_121)))
(assert (= temp10_123 #x0000000000000000))
(assert (= temp10_124 #x0000000000000003))
(assert (= temp10_125 temp10_124))
(assert (= temp10_126 (select ARGNAME_stride_NAMEEND_VAL temp10_125)))
(assert (= temp10_127 #x0000000000000000))
(assert (= temp10_128 #x0000000000000004))
(assert (= temp10_129 temp10_128))
(assert (= temp10_130 (select ARGNAME_stride_NAMEEND_VAL temp10_129)))
(assert (= temp10_131 #x0000000000000000))
(assert (= temp10_132 #x0000000000000005))
(assert (= temp10_133 temp10_132))
(assert (= temp10_134 (select ARGNAME_stride_NAMEEND_VAL temp10_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10_114 temp10_111)
             (bvsle temp10_118 temp10_115)
             (bvsle temp10_122 temp10_119)
             (bvsle temp10_126 temp10_123)
             (bvsle temp10_130 temp10_127)
             (bvsle temp10_134 temp10_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_135 #x0000000000000000))
(assert (= var1191735 temp10_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_136 #x0000000000000001))
(assert (= var1191747 temp10_136))
(assert (= temp10_137 #x0000000000000000))
(assert (= var1179826 temp10_137))
(assert (= temp10_138 #x0000000000000000))
(assert (= temp10_139 temp10_138))
(assert (= temp10_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10_139)))
(assert (= temp10_141 #x0000000000000001))
(assert (= temp10_142 temp10_141))
(assert (= temp10_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10_142)))
(assert (= temp10_144 #x0000000000000002))
(assert (= temp10_145 temp10_144))
(assert (= temp10_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10_145)))
(assert (= temp10_147 #x0000000000000003))
(assert (= temp10_148 temp10_147))
(assert (= temp10_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10_148)))
(assert (= temp10_150 #x0000000000000004))
(assert (= temp10_151 temp10_150))
(assert (= temp10_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10_151)))
(assert (= temp10_153 #x0000000000000005))
(assert (= temp10_154 temp10_153))
(assert (= temp10_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10_154)))
(assert (= temp10_157 var1179826))
(assert (= temp10_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10_157)))
(assert (= temp10_156 temp10_158))
(assert (= var1191780
   (ite (bvslt temp10_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_159 #x0000000000000000))
(assert (= var1191780 temp10_159))
(assert (= temp10_160 #x0000000000000000))
(assert (= var1179826 temp10_160))
(assert (= temp10_162 var1179826))
(assert (= temp10_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10_162)))
(assert (= temp10_161 temp10_163))
(assert (= var1191802 (bvsmod temp10_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10_165 #x0000000000000001))
(assert (= var1191803 temp10_165))
(assert (= temp10_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_167 #x0000000000000001))
(assert (= var1191823 temp10_167))
(assert (= temp10_168 #x0000000000000001))
(assert (= var1180714 temp10_168))
(assert (= temp10_169 #x0000000000000000))
(assert (= temp10_170 temp10_169))
(assert (= temp10_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_170)))
(assert (= temp10_172 #x0000000000000001))
(assert (= temp10_173 temp10_172))
(assert (= temp10_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_173)))
(assert (= temp10_175 #x0000000000000002))
(assert (= temp10_176 temp10_175))
(assert (= temp10_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_176)))
(assert (= temp10_178 #x0000000000000003))
(assert (= temp10_179 temp10_178))
(assert (= temp10_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_179)))
(assert (= temp10_181 #x0000000000000004))
(assert (= temp10_182 temp10_181))
(assert (= temp10_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_182)))
(assert (= temp10_184 #x0000000000000005))
(assert (= temp10_185 temp10_184))
(assert (= temp10_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_185)))
(assert (= temp10_187 #x0000000000000000))
(assert (= temp10_188
   (ite (bvslt var1180714 temp10_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_188)))
(assert (= var1191831 temp10_189))
(assert (bvslt (ite (bvslt var1180714 temp10_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10_190 #x0000000000000001))
(assert (= var1180714 temp10_190))
(assert (= temp10_192 var1180714))
(assert (= temp10_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10_192)))
(assert (= temp10_191 temp10_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10_194 #x0000000000000001))
(assert (= var1191836 temp10_194))
(assert (= temp10_195 #x0000000000000000))
(assert (= var1179826 temp10_195))
(assert (= temp10_197 var1179826))
(assert (= temp10_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10_197)))
(assert (= temp10_196 temp10_198))
(assert (= temp10_199 #x0000000000000002))
(assert (= var1586025 temp10_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10_200 #x0000000000000001))
(assert (= var1191993 temp10_200))
(assert (= temp10_201 #x0000000000000001))
(assert (= var2700303 temp10_201))
(assert (= temp10_202 #x0000000000000001))
(assert (= var2962447 temp10_202))
(assert (= temp10_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_204 #x0000000000000001))
(assert (= var211058 temp10_204))
(assert (= temp10_205 #x0000000000000001))
(assert (= var211188 temp10_205))
(assert (= var3879401 var211188))
(assert (= temp10_206 #x0000000000000000))
(assert (= var3866802 temp10_206))
(assert (= temp10_207 #x0000000000000000))
(assert (= temp10_208
   (ite (bvslt var3866802 temp10_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_208)))
(assert (= var3879420 temp10_209))
(assert (bvslt (ite (bvslt var3866802 temp10_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10_211 #x0000000000000001))
(assert (= var3879421 temp10_211))
(assert (= temp10_212 #x0000000000000000))
(assert (= var4079423 temp10_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10_213 #x0000000000000002))
(assert (= var4208259 temp10_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_214 #x0000000000000000))
(assert (= var4273820 temp10_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10_215 #x0000000000000000))
(assert (= var4469136 temp10_215))
(assert (= temp10_216 #x0000000000000001))
(assert (= var211058 temp10_216))
(model-add temp10_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





