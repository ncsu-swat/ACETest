(declare-fun temp10816_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10816_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10816_3 () (_ BitVec 64))
(declare-fun temp10816_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10816_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10816_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10816_7 () (_ BitVec 64))
(declare-fun temp10816_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10816_9 () (_ BitVec 64))
(declare-fun temp10816_10 () (_ BitVec 64))
(declare-fun temp10816_11 () (_ BitVec 64))
(declare-fun temp10816_12 () (_ BitVec 64))
(declare-fun temp10816_13 () (_ BitVec 64))
(declare-fun temp10816_14 () (_ BitVec 64))
(declare-fun temp10816_15 () (_ BitVec 64))
(declare-fun temp10816_16 () (_ BitVec 64))
(declare-fun temp10816_17 () (_ BitVec 64))
(declare-fun temp10816_18 () (_ BitVec 64))
(declare-fun temp10816_19 () (_ BitVec 64))
(declare-fun temp10816_20 () (_ BitVec 64))
(declare-fun temp10816_21 () (_ BitVec 64))
(declare-fun temp10816_22 () (_ BitVec 64))
(declare-fun temp10816_23 () (_ BitVec 64))
(declare-fun temp10816_24 () (_ BitVec 64))
(declare-fun temp10816_25 () (_ BitVec 64))
(declare-fun temp10816_26 () (_ BitVec 64))
(declare-fun temp10816_27 () (_ BitVec 64))
(declare-fun temp10816_28 () (_ BitVec 64))
(declare-fun temp10816_29 () (_ BitVec 64))
(declare-fun temp10816_30 () (_ BitVec 64))
(declare-fun temp10816_31 () (_ BitVec 64))
(declare-fun temp10816_32 () (_ BitVec 64))
(declare-fun temp10816_33 () (_ BitVec 64))
(declare-fun temp10816_34 () (_ BitVec 64))
(declare-fun temp10816_35 () (_ BitVec 64))
(declare-fun temp10816_36 () (_ BitVec 64))
(declare-fun temp10816_37 () (_ BitVec 64))
(declare-fun temp10816_38 () (_ BitVec 64))
(declare-fun temp10816_39 () (_ BitVec 64))
(declare-fun temp10816_40 () (_ BitVec 64))
(declare-fun temp10816_41 () (_ BitVec 64))
(declare-fun temp10816_42 () (_ BitVec 64))
(declare-fun temp10816_43 () (_ BitVec 64))
(declare-fun temp10816_44 () (_ BitVec 64))
(declare-fun temp10816_45 () (_ BitVec 64))
(declare-fun temp10816_46 () (_ BitVec 64))
(declare-fun temp10816_47 () (_ BitVec 64))
(declare-fun temp10816_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10816_49 () (_ BitVec 64))
(declare-fun temp10816_50 () (_ BitVec 64))
(declare-fun temp10816_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10816_52 () (_ BitVec 64))
(declare-fun temp10816_53 () (_ BitVec 64))
(declare-fun temp10816_54 () (_ BitVec 64))
(declare-fun temp10816_55 () (_ BitVec 64))
(declare-fun temp10816_56 () (_ BitVec 64))
(declare-fun temp10816_57 () (_ BitVec 64))
(declare-fun temp10816_58 () (_ BitVec 64))
(declare-fun temp10816_59 () (_ BitVec 64))
(declare-fun temp10816_60 () (_ BitVec 64))
(declare-fun temp10816_61 () (_ BitVec 64))
(declare-fun temp10816_62 () (_ BitVec 64))
(declare-fun temp10816_63 () (_ BitVec 64))
(declare-fun temp10816_64 () (_ BitVec 64))
(declare-fun temp10816_65 () (_ BitVec 64))
(declare-fun temp10816_66 () (_ BitVec 64))
(declare-fun temp10816_67 () (_ BitVec 64))
(declare-fun temp10816_68 () (_ BitVec 64))
(declare-fun temp10816_69 () (_ BitVec 64))
(declare-fun temp10816_70 () (_ BitVec 64))
(declare-fun temp10816_71 () (_ BitVec 64))
(declare-fun temp10816_72 () (_ BitVec 64))
(declare-fun temp10816_73 () (_ BitVec 64))
(declare-fun temp10816_74 () (_ BitVec 64))
(declare-fun temp10816_75 () (_ BitVec 64))
(declare-fun temp10816_76 () (_ BitVec 64))
(declare-fun temp10816_77 () (_ BitVec 64))
(declare-fun temp10816_78 () (_ BitVec 64))
(declare-fun temp10816_79 () (_ BitVec 64))
(declare-fun temp10816_80 () (_ BitVec 64))
(declare-fun temp10816_81 () (_ BitVec 64))
(declare-fun temp10816_82 () (_ BitVec 64))
(declare-fun temp10816_83 () (_ BitVec 64))
(declare-fun temp10816_84 () (_ BitVec 64))
(declare-fun temp10816_85 () (_ BitVec 64))
(declare-fun temp10816_86 () (_ BitVec 64))
(declare-fun temp10816_87 () (_ BitVec 64))
(declare-fun temp10816_88 () (_ BitVec 64))
(declare-fun temp10816_89 () (_ BitVec 64))
(declare-fun temp10816_90 () (_ BitVec 64))
(declare-fun temp10816_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10816_92 () (_ BitVec 64))
(declare-fun temp10816_93 () (_ BitVec 64))
(declare-fun temp10816_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10816_95 () (_ BitVec 64))
(declare-fun temp10816_96 () (_ BitVec 64))
(declare-fun temp10816_97 () (_ BitVec 64))
(declare-fun temp10816_98 () (_ BitVec 64))
(declare-fun temp10816_99 () (_ BitVec 64))
(declare-fun temp10816_100 () (_ BitVec 64))
(declare-fun temp10816_101 () (_ BitVec 64))
(declare-fun temp10816_102 () (_ BitVec 64))
(declare-fun temp10816_103 () (_ BitVec 64))
(declare-fun temp10816_104 () (_ BitVec 64))
(declare-fun temp10816_105 () (_ BitVec 64))
(declare-fun temp10816_106 () (_ BitVec 64))
(declare-fun temp10816_107 () (_ BitVec 64))
(declare-fun temp10816_108 () (_ BitVec 64))
(declare-fun temp10816_109 () (_ BitVec 64))
(declare-fun temp10816_110 () (_ BitVec 64))
(declare-fun temp10816_111 () (_ BitVec 64))
(declare-fun temp10816_112 () (_ BitVec 64))
(declare-fun temp10816_113 () (_ BitVec 64))
(declare-fun temp10816_114 () (_ BitVec 64))
(declare-fun temp10816_115 () (_ BitVec 64))
(declare-fun temp10816_116 () (_ BitVec 64))
(declare-fun temp10816_117 () (_ BitVec 64))
(declare-fun temp10816_118 () (_ BitVec 64))
(declare-fun temp10816_119 () (_ BitVec 64))
(declare-fun temp10816_120 () (_ BitVec 64))
(declare-fun temp10816_121 () (_ BitVec 64))
(declare-fun temp10816_122 () (_ BitVec 64))
(declare-fun temp10816_123 () (_ BitVec 64))
(declare-fun temp10816_124 () (_ BitVec 64))
(declare-fun temp10816_125 () (_ BitVec 64))
(declare-fun temp10816_126 () (_ BitVec 64))
(declare-fun temp10816_127 () (_ BitVec 64))
(declare-fun temp10816_128 () (_ BitVec 64))
(declare-fun temp10816_129 () (_ BitVec 64))
(declare-fun temp10816_130 () (_ BitVec 64))
(declare-fun temp10816_131 () (_ BitVec 64))
(declare-fun temp10816_132 () (_ BitVec 64))
(declare-fun temp10816_133 () (_ BitVec 64))
(declare-fun temp10816_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10816_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10816_136 () (_ BitVec 64))
(declare-fun temp10816_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10816_138 () (_ BitVec 64))
(declare-fun temp10816_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10816_140 () (_ BitVec 64))
(declare-fun temp10816_141 () (_ BitVec 64))
(declare-fun temp10816_142 () (_ BitVec 64))
(declare-fun temp10816_143 () (_ BitVec 64))
(declare-fun temp10816_144 () (_ BitVec 64))
(declare-fun temp10816_145 () (_ BitVec 64))
(declare-fun temp10816_146 () (_ BitVec 64))
(declare-fun temp10816_147 () (_ BitVec 64))
(declare-fun temp10816_148 () (_ BitVec 64))
(declare-fun temp10816_149 () (_ BitVec 64))
(declare-fun temp10816_150 () (_ BitVec 64))
(declare-fun temp10816_151 () (_ BitVec 64))
(declare-fun temp10816_152 () (_ BitVec 64))
(declare-fun temp10816_153 () (_ BitVec 64))
(declare-fun temp10816_154 () (_ BitVec 64))
(declare-fun temp10816_155 () (_ BitVec 64))
(declare-fun temp10816_157 () (_ BitVec 64))
(declare-fun temp10816_158 () (_ BitVec 64))
(declare-fun temp10816_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10816_159 () (_ BitVec 64))
(declare-fun temp10816_160 () (_ BitVec 64))
(declare-fun temp10816_162 () (_ BitVec 64))
(declare-fun temp10816_163 () (_ BitVec 64))
(declare-fun temp10816_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10816_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10816_165 () (_ BitVec 64))
(declare-fun temp10816_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10816_167 () (_ BitVec 64))
(declare-fun temp10816_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10816_169 () (_ BitVec 64))
(declare-fun temp10816_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10816_171 () (_ BitVec 64))
(declare-fun temp10816_172 () (_ BitVec 64))
(declare-fun temp10816_173 () (_ BitVec 64))
(declare-fun temp10816_174 () (_ BitVec 64))
(declare-fun temp10816_175 () (_ BitVec 64))
(declare-fun temp10816_176 () (_ BitVec 64))
(declare-fun temp10816_177 () (_ BitVec 64))
(declare-fun temp10816_178 () (_ BitVec 64))
(declare-fun temp10816_179 () (_ BitVec 64))
(declare-fun temp10816_180 () (_ BitVec 64))
(declare-fun temp10816_181 () (_ BitVec 64))
(declare-fun temp10816_182 () (_ BitVec 64))
(declare-fun temp10816_183 () (_ BitVec 64))
(declare-fun temp10816_184 () (_ BitVec 64))
(declare-fun temp10816_185 () (_ BitVec 64))
(declare-fun temp10816_186 () (_ BitVec 64))
(declare-fun temp10816_187 () (_ BitVec 64))
(declare-fun temp10816_188 () (_ BitVec 64))
(declare-fun temp10816_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10816_190 () (_ BitVec 64))
(declare-fun temp10816_192 () (_ BitVec 64))
(declare-fun temp10816_193 () (_ BitVec 64))
(declare-fun temp10816_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10816_194 () (_ BitVec 64))
(declare-fun temp10816_195 () (_ BitVec 64))
(declare-fun temp10816_197 () (_ BitVec 64))
(declare-fun temp10816_198 () (_ BitVec 64))
(declare-fun temp10816_196 () (_ BitVec 64))
(declare-fun temp10816_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10816_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10816_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10816_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10816_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10816_204 () (_ BitVec 64))
(declare-fun temp10816_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10816_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10816_207 () (_ BitVec 64))
(declare-fun temp10816_208 () (_ BitVec 64))
(declare-fun temp10816_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10816_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10816_211 () (_ BitVec 64))
(declare-fun temp10816_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10816_213 () (_ BitVec 64))
(declare-fun temp10816_214 () (_ BitVec 64))
(declare-fun temp10816_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10816_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10816_217 () (_ BitVec 64))
(declare-fun temp10816_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10816_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10816_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10816_221 () (_ BitVec 64))
(assert (= temp10816_1 #x0000000000000001))
(assert (= var77203 temp10816_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10816_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10816_2)))
(assert (= temp10816_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10816_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10816_4 #x0000000000000000))
(assert (= var210941 temp10816_4))
(assert (= temp10816_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10816_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10816_6 #x0000000000000000))
(assert (= var210986 temp10816_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10816_7 #x0000000000000000))
(assert (= temp10816_8 temp10816_7))
(assert (= temp10816_9 (select ARGNAME_padding_NAMEEND_VAL temp10816_8)))
(assert (= temp10816_10 #x0000000000000001))
(assert (= temp10816_11 temp10816_10))
(assert (= temp10816_12 (select ARGNAME_padding_NAMEEND_VAL temp10816_11)))
(assert (= temp10816_13 #x0000000000000002))
(assert (= temp10816_14 temp10816_13))
(assert (= temp10816_15 (select ARGNAME_padding_NAMEEND_VAL temp10816_14)))
(assert (= temp10816_16 #x0000000000000003))
(assert (= temp10816_17 temp10816_16))
(assert (= temp10816_18 (select ARGNAME_padding_NAMEEND_VAL temp10816_17)))
(assert (= temp10816_19 #x0000000000000004))
(assert (= temp10816_20 temp10816_19))
(assert (= temp10816_21 (select ARGNAME_padding_NAMEEND_VAL temp10816_20)))
(assert (= temp10816_22 #x0000000000000005))
(assert (= temp10816_23 temp10816_22))
(assert (= temp10816_24 (select ARGNAME_padding_NAMEEND_VAL temp10816_23)))
(assert (= temp10816_25 #x0000000000000000))
(assert (= temp10816_26 #x0000000000000000))
(assert (= temp10816_27 temp10816_26))
(assert (= temp10816_28 (select ARGNAME_padding_NAMEEND_VAL temp10816_27)))
(assert (= temp10816_29 #x0000000000000000))
(assert (= temp10816_30 #x0000000000000001))
(assert (= temp10816_31 temp10816_30))
(assert (= temp10816_32 (select ARGNAME_padding_NAMEEND_VAL temp10816_31)))
(assert (= temp10816_33 #x0000000000000000))
(assert (= temp10816_34 #x0000000000000002))
(assert (= temp10816_35 temp10816_34))
(assert (= temp10816_36 (select ARGNAME_padding_NAMEEND_VAL temp10816_35)))
(assert (= temp10816_37 #x0000000000000000))
(assert (= temp10816_38 #x0000000000000003))
(assert (= temp10816_39 temp10816_38))
(assert (= temp10816_40 (select ARGNAME_padding_NAMEEND_VAL temp10816_39)))
(assert (= temp10816_41 #x0000000000000000))
(assert (= temp10816_42 #x0000000000000004))
(assert (= temp10816_43 temp10816_42))
(assert (= temp10816_44 (select ARGNAME_padding_NAMEEND_VAL temp10816_43)))
(assert (= temp10816_45 #x0000000000000000))
(assert (= temp10816_46 #x0000000000000005))
(assert (= temp10816_47 temp10816_46))
(assert (= temp10816_48 (select ARGNAME_padding_NAMEEND_VAL temp10816_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10816_28 temp10816_25)
             (bvslt temp10816_32 temp10816_29)
             (bvslt temp10816_36 temp10816_33)
             (bvslt temp10816_40 temp10816_37)
             (bvslt temp10816_44 temp10816_41)
             (bvslt temp10816_48 temp10816_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10816_49 #x0000000000000000))
(assert (= var1191714 temp10816_49))
(assert (= temp10816_50 #x0000000000000000))
(assert (= temp10816_51 temp10816_50))
(assert (= temp10816_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10816_51)))
(assert (= temp10816_53 #x0000000000000001))
(assert (= temp10816_54 temp10816_53))
(assert (= temp10816_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10816_54)))
(assert (= temp10816_56 #x0000000000000002))
(assert (= temp10816_57 temp10816_56))
(assert (= temp10816_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10816_57)))
(assert (= temp10816_59 #x0000000000000003))
(assert (= temp10816_60 temp10816_59))
(assert (= temp10816_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10816_60)))
(assert (= temp10816_62 #x0000000000000004))
(assert (= temp10816_63 temp10816_62))
(assert (= temp10816_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10816_63)))
(assert (= temp10816_65 #x0000000000000005))
(assert (= temp10816_66 temp10816_65))
(assert (= temp10816_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10816_66)))
(assert (= temp10816_68 #x0000000000000000))
(assert (= temp10816_69 #x0000000000000000))
(assert (= temp10816_70 temp10816_69))
(assert (= temp10816_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10816_70)))
(assert (= temp10816_72 #x0000000000000000))
(assert (= temp10816_73 #x0000000000000001))
(assert (= temp10816_74 temp10816_73))
(assert (= temp10816_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10816_74)))
(assert (= temp10816_76 #x0000000000000000))
(assert (= temp10816_77 #x0000000000000002))
(assert (= temp10816_78 temp10816_77))
(assert (= temp10816_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10816_78)))
(assert (= temp10816_80 #x0000000000000000))
(assert (= temp10816_81 #x0000000000000003))
(assert (= temp10816_82 temp10816_81))
(assert (= temp10816_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10816_82)))
(assert (= temp10816_84 #x0000000000000000))
(assert (= temp10816_85 #x0000000000000004))
(assert (= temp10816_86 temp10816_85))
(assert (= temp10816_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10816_86)))
(assert (= temp10816_88 #x0000000000000000))
(assert (= temp10816_89 #x0000000000000005))
(assert (= temp10816_90 temp10816_89))
(assert (= temp10816_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10816_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10816_71 temp10816_68)
             (bvslt temp10816_75 temp10816_72)
             (bvslt temp10816_79 temp10816_76)
             (bvslt temp10816_83 temp10816_80)
             (bvslt temp10816_87 temp10816_84)
             (bvslt temp10816_91 temp10816_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10816_92 #x0000000000000000))
(assert (= var1191725 temp10816_92))
(assert (= temp10816_93 #x0000000000000000))
(assert (= temp10816_94 temp10816_93))
(assert (= temp10816_95 (select ARGNAME_stride_NAMEEND_VAL temp10816_94)))
(assert (= temp10816_96 #x0000000000000001))
(assert (= temp10816_97 temp10816_96))
(assert (= temp10816_98 (select ARGNAME_stride_NAMEEND_VAL temp10816_97)))
(assert (= temp10816_99 #x0000000000000002))
(assert (= temp10816_100 temp10816_99))
(assert (= temp10816_101 (select ARGNAME_stride_NAMEEND_VAL temp10816_100)))
(assert (= temp10816_102 #x0000000000000003))
(assert (= temp10816_103 temp10816_102))
(assert (= temp10816_104 (select ARGNAME_stride_NAMEEND_VAL temp10816_103)))
(assert (= temp10816_105 #x0000000000000004))
(assert (= temp10816_106 temp10816_105))
(assert (= temp10816_107 (select ARGNAME_stride_NAMEEND_VAL temp10816_106)))
(assert (= temp10816_108 #x0000000000000005))
(assert (= temp10816_109 temp10816_108))
(assert (= temp10816_110 (select ARGNAME_stride_NAMEEND_VAL temp10816_109)))
(assert (= temp10816_111 #x0000000000000000))
(assert (= temp10816_112 #x0000000000000000))
(assert (= temp10816_113 temp10816_112))
(assert (= temp10816_114 (select ARGNAME_stride_NAMEEND_VAL temp10816_113)))
(assert (= temp10816_115 #x0000000000000000))
(assert (= temp10816_116 #x0000000000000001))
(assert (= temp10816_117 temp10816_116))
(assert (= temp10816_118 (select ARGNAME_stride_NAMEEND_VAL temp10816_117)))
(assert (= temp10816_119 #x0000000000000000))
(assert (= temp10816_120 #x0000000000000002))
(assert (= temp10816_121 temp10816_120))
(assert (= temp10816_122 (select ARGNAME_stride_NAMEEND_VAL temp10816_121)))
(assert (= temp10816_123 #x0000000000000000))
(assert (= temp10816_124 #x0000000000000003))
(assert (= temp10816_125 temp10816_124))
(assert (= temp10816_126 (select ARGNAME_stride_NAMEEND_VAL temp10816_125)))
(assert (= temp10816_127 #x0000000000000000))
(assert (= temp10816_128 #x0000000000000004))
(assert (= temp10816_129 temp10816_128))
(assert (= temp10816_130 (select ARGNAME_stride_NAMEEND_VAL temp10816_129)))
(assert (= temp10816_131 #x0000000000000000))
(assert (= temp10816_132 #x0000000000000005))
(assert (= temp10816_133 temp10816_132))
(assert (= temp10816_134 (select ARGNAME_stride_NAMEEND_VAL temp10816_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10816_114 temp10816_111)
             (bvsle temp10816_118 temp10816_115)
             (bvsle temp10816_122 temp10816_119)
             (bvsle temp10816_126 temp10816_123)
             (bvsle temp10816_130 temp10816_127)
             (bvsle temp10816_134 temp10816_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10816_135 #x0000000000000000))
(assert (= var1191735 temp10816_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10816_136 #x0000000000000001))
(assert (= var1191747 temp10816_136))
(assert (= temp10816_137 #x0000000000000000))
(assert (= var1179826 temp10816_137))
(assert (= temp10816_138 #x0000000000000000))
(assert (= temp10816_139 temp10816_138))
(assert (= temp10816_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10816_139)))
(assert (= temp10816_141 #x0000000000000001))
(assert (= temp10816_142 temp10816_141))
(assert (= temp10816_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10816_142)))
(assert (= temp10816_144 #x0000000000000002))
(assert (= temp10816_145 temp10816_144))
(assert (= temp10816_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10816_145)))
(assert (= temp10816_147 #x0000000000000003))
(assert (= temp10816_148 temp10816_147))
(assert (= temp10816_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10816_148)))
(assert (= temp10816_150 #x0000000000000004))
(assert (= temp10816_151 temp10816_150))
(assert (= temp10816_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10816_151)))
(assert (= temp10816_153 #x0000000000000005))
(assert (= temp10816_154 temp10816_153))
(assert (= temp10816_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10816_154)))
(assert (= temp10816_157 var1179826))
(assert (= temp10816_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10816_157)))
(assert (= temp10816_156 temp10816_158))
(assert (= var1191780
   (ite (bvslt temp10816_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10816_159 #x0000000000000000))
(assert (= var1191780 temp10816_159))
(assert (= temp10816_160 #x0000000000000000))
(assert (= var1179826 temp10816_160))
(assert (= temp10816_162 var1179826))
(assert (= temp10816_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10816_162)))
(assert (= temp10816_161 temp10816_163))
(assert (= var1191802 (bvsmod temp10816_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10816_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10816_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10816_165 #x0000000000000001))
(assert (= var1191803 temp10816_165))
(assert (= temp10816_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10816_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10816_167 #x0000000000000001))
(assert (= var1191823 temp10816_167))
(assert (= temp10816_168 #x0000000000000001))
(assert (= var1180714 temp10816_168))
(assert (= temp10816_169 #x0000000000000000))
(assert (= temp10816_170 temp10816_169))
(assert (= temp10816_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10816_170)))
(assert (= temp10816_172 #x0000000000000001))
(assert (= temp10816_173 temp10816_172))
(assert (= temp10816_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10816_173)))
(assert (= temp10816_175 #x0000000000000002))
(assert (= temp10816_176 temp10816_175))
(assert (= temp10816_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10816_176)))
(assert (= temp10816_178 #x0000000000000003))
(assert (= temp10816_179 temp10816_178))
(assert (= temp10816_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10816_179)))
(assert (= temp10816_181 #x0000000000000004))
(assert (= temp10816_182 temp10816_181))
(assert (= temp10816_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10816_182)))
(assert (= temp10816_184 #x0000000000000005))
(assert (= temp10816_185 temp10816_184))
(assert (= temp10816_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10816_185)))
(assert (= temp10816_187 #x0000000000000000))
(assert (= temp10816_188
   (ite (bvslt var1180714 temp10816_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10816_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10816_188)))
(assert (= var1191831 temp10816_189))
(assert (bvslt (ite (bvslt var1180714 temp10816_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10816_190 #x0000000000000001))
(assert (= var1180714 temp10816_190))
(assert (= temp10816_192 var1180714))
(assert (= temp10816_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10816_192)))
(assert (= temp10816_191 temp10816_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10816_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10816_194 #x0000000000000001))
(assert (= var1191836 temp10816_194))
(assert (= temp10816_195 #x0000000000000000))
(assert (= var1179826 temp10816_195))
(assert (= temp10816_197 var1179826))
(assert (= temp10816_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10816_197)))
(assert (= temp10816_196 temp10816_198))
(assert (= temp10816_199 #x0000000000000002))
(assert (= var1586025 temp10816_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10816_200 #x0000000000000001))
(assert (= var1191993 temp10816_200))
(assert (= temp10816_201 #x0000000000000001))
(assert (= var2700303 temp10816_201))
(assert (= temp10816_202 #x0000000000000001))
(assert (= var2962447 temp10816_202))
(assert (= temp10816_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10816_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10816_204 #x0000000000000001))
(assert (= var211058 temp10816_204))
(assert (= temp10816_205 #x0000000000000001))
(assert (= var211188 temp10816_205))
(assert (= var3879401 var211188))
(assert (= temp10816_206 #x0000000000000000))
(assert (= var3866802 temp10816_206))
(assert (= temp10816_207 #x0000000000000000))
(assert (= temp10816_208
   (ite (bvslt var3866802 temp10816_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10816_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10816_208)))
(assert (= var3879420 temp10816_209))
(assert (bvslt (ite (bvslt var3866802 temp10816_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10816_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10816_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10816_211 #x0000000000000000))
(assert (= var3879421 temp10816_211))
(assert (= temp10816_212 #x0000000000000001))
(assert (= var3867690 temp10816_212))
(assert (= temp10816_213 #x0000000000000000))
(assert (= temp10816_214
   (ite (bvslt var3867690 temp10816_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10816_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10816_214)))
(assert (= var3879423 temp10816_215))
(assert (bvslt (ite (bvslt var3867690 temp10816_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10816_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10816_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10816_217 #x0000000000000001))
(assert (= var3879424 temp10816_217))
(assert (= temp10816_218 #x0000000000000000))
(assert (= var4133117 temp10816_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10816_219 #x0000000000000002))
(assert (= var4339331 temp10816_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10816_220 #x0000000000000000))
(assert (= var4404892 temp10816_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10816_221 #x0000000000000001))
(assert (= var211058 temp10816_221))
(model-add temp10816_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10816_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10816_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10816_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





