(declare-fun temp10032_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10032_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10032_3 () (_ BitVec 64))
(declare-fun temp10032_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10032_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10032_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10032_7 () (_ BitVec 64))
(declare-fun temp10032_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10032_9 () (_ BitVec 64))
(declare-fun temp10032_10 () (_ BitVec 64))
(declare-fun temp10032_11 () (_ BitVec 64))
(declare-fun temp10032_12 () (_ BitVec 64))
(declare-fun temp10032_13 () (_ BitVec 64))
(declare-fun temp10032_14 () (_ BitVec 64))
(declare-fun temp10032_15 () (_ BitVec 64))
(declare-fun temp10032_16 () (_ BitVec 64))
(declare-fun temp10032_17 () (_ BitVec 64))
(declare-fun temp10032_18 () (_ BitVec 64))
(declare-fun temp10032_19 () (_ BitVec 64))
(declare-fun temp10032_20 () (_ BitVec 64))
(declare-fun temp10032_21 () (_ BitVec 64))
(declare-fun temp10032_22 () (_ BitVec 64))
(declare-fun temp10032_23 () (_ BitVec 64))
(declare-fun temp10032_24 () (_ BitVec 64))
(declare-fun temp10032_25 () (_ BitVec 64))
(declare-fun temp10032_26 () (_ BitVec 64))
(declare-fun temp10032_27 () (_ BitVec 64))
(declare-fun temp10032_28 () (_ BitVec 64))
(declare-fun temp10032_29 () (_ BitVec 64))
(declare-fun temp10032_30 () (_ BitVec 64))
(declare-fun temp10032_31 () (_ BitVec 64))
(declare-fun temp10032_32 () (_ BitVec 64))
(declare-fun temp10032_33 () (_ BitVec 64))
(declare-fun temp10032_34 () (_ BitVec 64))
(declare-fun temp10032_35 () (_ BitVec 64))
(declare-fun temp10032_36 () (_ BitVec 64))
(declare-fun temp10032_37 () (_ BitVec 64))
(declare-fun temp10032_38 () (_ BitVec 64))
(declare-fun temp10032_39 () (_ BitVec 64))
(declare-fun temp10032_40 () (_ BitVec 64))
(declare-fun temp10032_41 () (_ BitVec 64))
(declare-fun temp10032_42 () (_ BitVec 64))
(declare-fun temp10032_43 () (_ BitVec 64))
(declare-fun temp10032_44 () (_ BitVec 64))
(declare-fun temp10032_45 () (_ BitVec 64))
(declare-fun temp10032_46 () (_ BitVec 64))
(declare-fun temp10032_47 () (_ BitVec 64))
(declare-fun temp10032_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10032_49 () (_ BitVec 64))
(declare-fun temp10032_50 () (_ BitVec 64))
(declare-fun temp10032_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10032_52 () (_ BitVec 64))
(declare-fun temp10032_53 () (_ BitVec 64))
(declare-fun temp10032_54 () (_ BitVec 64))
(declare-fun temp10032_55 () (_ BitVec 64))
(declare-fun temp10032_56 () (_ BitVec 64))
(declare-fun temp10032_57 () (_ BitVec 64))
(declare-fun temp10032_58 () (_ BitVec 64))
(declare-fun temp10032_59 () (_ BitVec 64))
(declare-fun temp10032_60 () (_ BitVec 64))
(declare-fun temp10032_61 () (_ BitVec 64))
(declare-fun temp10032_62 () (_ BitVec 64))
(declare-fun temp10032_63 () (_ BitVec 64))
(declare-fun temp10032_64 () (_ BitVec 64))
(declare-fun temp10032_65 () (_ BitVec 64))
(declare-fun temp10032_66 () (_ BitVec 64))
(declare-fun temp10032_67 () (_ BitVec 64))
(declare-fun temp10032_68 () (_ BitVec 64))
(declare-fun temp10032_69 () (_ BitVec 64))
(declare-fun temp10032_70 () (_ BitVec 64))
(declare-fun temp10032_71 () (_ BitVec 64))
(declare-fun temp10032_72 () (_ BitVec 64))
(declare-fun temp10032_73 () (_ BitVec 64))
(declare-fun temp10032_74 () (_ BitVec 64))
(declare-fun temp10032_75 () (_ BitVec 64))
(declare-fun temp10032_76 () (_ BitVec 64))
(declare-fun temp10032_77 () (_ BitVec 64))
(declare-fun temp10032_78 () (_ BitVec 64))
(declare-fun temp10032_79 () (_ BitVec 64))
(declare-fun temp10032_80 () (_ BitVec 64))
(declare-fun temp10032_81 () (_ BitVec 64))
(declare-fun temp10032_82 () (_ BitVec 64))
(declare-fun temp10032_83 () (_ BitVec 64))
(declare-fun temp10032_84 () (_ BitVec 64))
(declare-fun temp10032_85 () (_ BitVec 64))
(declare-fun temp10032_86 () (_ BitVec 64))
(declare-fun temp10032_87 () (_ BitVec 64))
(declare-fun temp10032_88 () (_ BitVec 64))
(declare-fun temp10032_89 () (_ BitVec 64))
(declare-fun temp10032_90 () (_ BitVec 64))
(declare-fun temp10032_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10032_92 () (_ BitVec 64))
(declare-fun temp10032_93 () (_ BitVec 64))
(declare-fun temp10032_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10032_95 () (_ BitVec 64))
(declare-fun temp10032_96 () (_ BitVec 64))
(declare-fun temp10032_97 () (_ BitVec 64))
(declare-fun temp10032_98 () (_ BitVec 64))
(declare-fun temp10032_99 () (_ BitVec 64))
(declare-fun temp10032_100 () (_ BitVec 64))
(declare-fun temp10032_101 () (_ BitVec 64))
(declare-fun temp10032_102 () (_ BitVec 64))
(declare-fun temp10032_103 () (_ BitVec 64))
(declare-fun temp10032_104 () (_ BitVec 64))
(declare-fun temp10032_105 () (_ BitVec 64))
(declare-fun temp10032_106 () (_ BitVec 64))
(declare-fun temp10032_107 () (_ BitVec 64))
(declare-fun temp10032_108 () (_ BitVec 64))
(declare-fun temp10032_109 () (_ BitVec 64))
(declare-fun temp10032_110 () (_ BitVec 64))
(declare-fun temp10032_111 () (_ BitVec 64))
(declare-fun temp10032_112 () (_ BitVec 64))
(declare-fun temp10032_113 () (_ BitVec 64))
(declare-fun temp10032_114 () (_ BitVec 64))
(declare-fun temp10032_115 () (_ BitVec 64))
(declare-fun temp10032_116 () (_ BitVec 64))
(declare-fun temp10032_117 () (_ BitVec 64))
(declare-fun temp10032_118 () (_ BitVec 64))
(declare-fun temp10032_119 () (_ BitVec 64))
(declare-fun temp10032_120 () (_ BitVec 64))
(declare-fun temp10032_121 () (_ BitVec 64))
(declare-fun temp10032_122 () (_ BitVec 64))
(declare-fun temp10032_123 () (_ BitVec 64))
(declare-fun temp10032_124 () (_ BitVec 64))
(declare-fun temp10032_125 () (_ BitVec 64))
(declare-fun temp10032_126 () (_ BitVec 64))
(declare-fun temp10032_127 () (_ BitVec 64))
(declare-fun temp10032_128 () (_ BitVec 64))
(declare-fun temp10032_129 () (_ BitVec 64))
(declare-fun temp10032_130 () (_ BitVec 64))
(declare-fun temp10032_131 () (_ BitVec 64))
(declare-fun temp10032_132 () (_ BitVec 64))
(declare-fun temp10032_133 () (_ BitVec 64))
(declare-fun temp10032_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10032_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10032_136 () (_ BitVec 64))
(declare-fun temp10032_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10032_138 () (_ BitVec 64))
(declare-fun temp10032_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10032_140 () (_ BitVec 64))
(declare-fun temp10032_141 () (_ BitVec 64))
(declare-fun temp10032_142 () (_ BitVec 64))
(declare-fun temp10032_143 () (_ BitVec 64))
(declare-fun temp10032_144 () (_ BitVec 64))
(declare-fun temp10032_145 () (_ BitVec 64))
(declare-fun temp10032_146 () (_ BitVec 64))
(declare-fun temp10032_147 () (_ BitVec 64))
(declare-fun temp10032_148 () (_ BitVec 64))
(declare-fun temp10032_149 () (_ BitVec 64))
(declare-fun temp10032_150 () (_ BitVec 64))
(declare-fun temp10032_151 () (_ BitVec 64))
(declare-fun temp10032_152 () (_ BitVec 64))
(declare-fun temp10032_153 () (_ BitVec 64))
(declare-fun temp10032_154 () (_ BitVec 64))
(declare-fun temp10032_155 () (_ BitVec 64))
(declare-fun temp10032_157 () (_ BitVec 64))
(declare-fun temp10032_158 () (_ BitVec 64))
(declare-fun temp10032_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10032_159 () (_ BitVec 64))
(declare-fun temp10032_160 () (_ BitVec 64))
(declare-fun temp10032_162 () (_ BitVec 64))
(declare-fun temp10032_163 () (_ BitVec 64))
(declare-fun temp10032_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10032_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10032_165 () (_ BitVec 64))
(declare-fun temp10032_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10032_167 () (_ BitVec 64))
(declare-fun temp10032_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10032_169 () (_ BitVec 64))
(declare-fun temp10032_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10032_171 () (_ BitVec 64))
(declare-fun temp10032_172 () (_ BitVec 64))
(declare-fun temp10032_173 () (_ BitVec 64))
(declare-fun temp10032_174 () (_ BitVec 64))
(declare-fun temp10032_175 () (_ BitVec 64))
(declare-fun temp10032_176 () (_ BitVec 64))
(declare-fun temp10032_177 () (_ BitVec 64))
(declare-fun temp10032_178 () (_ BitVec 64))
(declare-fun temp10032_179 () (_ BitVec 64))
(declare-fun temp10032_180 () (_ BitVec 64))
(declare-fun temp10032_181 () (_ BitVec 64))
(declare-fun temp10032_182 () (_ BitVec 64))
(declare-fun temp10032_183 () (_ BitVec 64))
(declare-fun temp10032_184 () (_ BitVec 64))
(declare-fun temp10032_185 () (_ BitVec 64))
(declare-fun temp10032_186 () (_ BitVec 64))
(declare-fun temp10032_187 () (_ BitVec 64))
(declare-fun temp10032_188 () (_ BitVec 64))
(declare-fun temp10032_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10032_190 () (_ BitVec 64))
(declare-fun temp10032_192 () (_ BitVec 64))
(declare-fun temp10032_193 () (_ BitVec 64))
(declare-fun temp10032_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10032_194 () (_ BitVec 64))
(declare-fun temp10032_195 () (_ BitVec 64))
(declare-fun temp10032_197 () (_ BitVec 64))
(declare-fun temp10032_198 () (_ BitVec 64))
(declare-fun temp10032_196 () (_ BitVec 64))
(declare-fun temp10032_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10032_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10032_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10032_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10032_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10032_204 () (_ BitVec 64))
(declare-fun temp10032_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10032_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10032_207 () (_ BitVec 64))
(declare-fun temp10032_208 () (_ BitVec 64))
(declare-fun temp10032_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10032_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10032_211 () (_ BitVec 64))
(declare-fun temp10032_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10032_213 () (_ BitVec 64))
(declare-fun temp10032_214 () (_ BitVec 64))
(declare-fun temp10032_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10032_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10032_217 () (_ BitVec 64))
(declare-fun temp10032_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10032_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10032_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10032_222 () (_ BitVec 64))
(declare-fun temp10032_221 () (_ BitVec 64))
(declare-fun temp10032_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10032_224 () (_ BitVec 64))
(declare-fun temp10032_225 () (_ BitVec 64))
(declare-fun temp10032_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10032_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10032_228 () (_ BitVec 64))
(declare-fun temp10032_230 () (_ BitVec 64))
(declare-fun temp10032_229 () (_ BitVec 64))
(declare-fun temp10032_231 () (_ BitVec 64))
(assert (= temp10032_1 #x0000000000000001))
(assert (= var77203 temp10032_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10032_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10032_2)))
(assert (= temp10032_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10032_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10032_4 #x0000000000000000))
(assert (= var210941 temp10032_4))
(assert (= temp10032_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10032_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10032_6 #x0000000000000000))
(assert (= var210986 temp10032_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10032_7 #x0000000000000000))
(assert (= temp10032_8 temp10032_7))
(assert (= temp10032_9 (select ARGNAME_padding_NAMEEND_VAL temp10032_8)))
(assert (= temp10032_10 #x0000000000000001))
(assert (= temp10032_11 temp10032_10))
(assert (= temp10032_12 (select ARGNAME_padding_NAMEEND_VAL temp10032_11)))
(assert (= temp10032_13 #x0000000000000002))
(assert (= temp10032_14 temp10032_13))
(assert (= temp10032_15 (select ARGNAME_padding_NAMEEND_VAL temp10032_14)))
(assert (= temp10032_16 #x0000000000000003))
(assert (= temp10032_17 temp10032_16))
(assert (= temp10032_18 (select ARGNAME_padding_NAMEEND_VAL temp10032_17)))
(assert (= temp10032_19 #x0000000000000004))
(assert (= temp10032_20 temp10032_19))
(assert (= temp10032_21 (select ARGNAME_padding_NAMEEND_VAL temp10032_20)))
(assert (= temp10032_22 #x0000000000000005))
(assert (= temp10032_23 temp10032_22))
(assert (= temp10032_24 (select ARGNAME_padding_NAMEEND_VAL temp10032_23)))
(assert (= temp10032_25 #x0000000000000000))
(assert (= temp10032_26 #x0000000000000000))
(assert (= temp10032_27 temp10032_26))
(assert (= temp10032_28 (select ARGNAME_padding_NAMEEND_VAL temp10032_27)))
(assert (= temp10032_29 #x0000000000000000))
(assert (= temp10032_30 #x0000000000000001))
(assert (= temp10032_31 temp10032_30))
(assert (= temp10032_32 (select ARGNAME_padding_NAMEEND_VAL temp10032_31)))
(assert (= temp10032_33 #x0000000000000000))
(assert (= temp10032_34 #x0000000000000002))
(assert (= temp10032_35 temp10032_34))
(assert (= temp10032_36 (select ARGNAME_padding_NAMEEND_VAL temp10032_35)))
(assert (= temp10032_37 #x0000000000000000))
(assert (= temp10032_38 #x0000000000000003))
(assert (= temp10032_39 temp10032_38))
(assert (= temp10032_40 (select ARGNAME_padding_NAMEEND_VAL temp10032_39)))
(assert (= temp10032_41 #x0000000000000000))
(assert (= temp10032_42 #x0000000000000004))
(assert (= temp10032_43 temp10032_42))
(assert (= temp10032_44 (select ARGNAME_padding_NAMEEND_VAL temp10032_43)))
(assert (= temp10032_45 #x0000000000000000))
(assert (= temp10032_46 #x0000000000000005))
(assert (= temp10032_47 temp10032_46))
(assert (= temp10032_48 (select ARGNAME_padding_NAMEEND_VAL temp10032_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10032_28 temp10032_25)
             (bvslt temp10032_32 temp10032_29)
             (bvslt temp10032_36 temp10032_33)
             (bvslt temp10032_40 temp10032_37)
             (bvslt temp10032_44 temp10032_41)
             (bvslt temp10032_48 temp10032_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10032_49 #x0000000000000000))
(assert (= var1191714 temp10032_49))
(assert (= temp10032_50 #x0000000000000000))
(assert (= temp10032_51 temp10032_50))
(assert (= temp10032_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10032_51)))
(assert (= temp10032_53 #x0000000000000001))
(assert (= temp10032_54 temp10032_53))
(assert (= temp10032_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10032_54)))
(assert (= temp10032_56 #x0000000000000002))
(assert (= temp10032_57 temp10032_56))
(assert (= temp10032_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10032_57)))
(assert (= temp10032_59 #x0000000000000003))
(assert (= temp10032_60 temp10032_59))
(assert (= temp10032_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10032_60)))
(assert (= temp10032_62 #x0000000000000004))
(assert (= temp10032_63 temp10032_62))
(assert (= temp10032_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10032_63)))
(assert (= temp10032_65 #x0000000000000005))
(assert (= temp10032_66 temp10032_65))
(assert (= temp10032_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10032_66)))
(assert (= temp10032_68 #x0000000000000000))
(assert (= temp10032_69 #x0000000000000000))
(assert (= temp10032_70 temp10032_69))
(assert (= temp10032_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10032_70)))
(assert (= temp10032_72 #x0000000000000000))
(assert (= temp10032_73 #x0000000000000001))
(assert (= temp10032_74 temp10032_73))
(assert (= temp10032_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10032_74)))
(assert (= temp10032_76 #x0000000000000000))
(assert (= temp10032_77 #x0000000000000002))
(assert (= temp10032_78 temp10032_77))
(assert (= temp10032_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10032_78)))
(assert (= temp10032_80 #x0000000000000000))
(assert (= temp10032_81 #x0000000000000003))
(assert (= temp10032_82 temp10032_81))
(assert (= temp10032_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10032_82)))
(assert (= temp10032_84 #x0000000000000000))
(assert (= temp10032_85 #x0000000000000004))
(assert (= temp10032_86 temp10032_85))
(assert (= temp10032_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10032_86)))
(assert (= temp10032_88 #x0000000000000000))
(assert (= temp10032_89 #x0000000000000005))
(assert (= temp10032_90 temp10032_89))
(assert (= temp10032_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10032_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10032_71 temp10032_68)
             (bvslt temp10032_75 temp10032_72)
             (bvslt temp10032_79 temp10032_76)
             (bvslt temp10032_83 temp10032_80)
             (bvslt temp10032_87 temp10032_84)
             (bvslt temp10032_91 temp10032_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10032_92 #x0000000000000000))
(assert (= var1191725 temp10032_92))
(assert (= temp10032_93 #x0000000000000000))
(assert (= temp10032_94 temp10032_93))
(assert (= temp10032_95 (select ARGNAME_stride_NAMEEND_VAL temp10032_94)))
(assert (= temp10032_96 #x0000000000000001))
(assert (= temp10032_97 temp10032_96))
(assert (= temp10032_98 (select ARGNAME_stride_NAMEEND_VAL temp10032_97)))
(assert (= temp10032_99 #x0000000000000002))
(assert (= temp10032_100 temp10032_99))
(assert (= temp10032_101 (select ARGNAME_stride_NAMEEND_VAL temp10032_100)))
(assert (= temp10032_102 #x0000000000000003))
(assert (= temp10032_103 temp10032_102))
(assert (= temp10032_104 (select ARGNAME_stride_NAMEEND_VAL temp10032_103)))
(assert (= temp10032_105 #x0000000000000004))
(assert (= temp10032_106 temp10032_105))
(assert (= temp10032_107 (select ARGNAME_stride_NAMEEND_VAL temp10032_106)))
(assert (= temp10032_108 #x0000000000000005))
(assert (= temp10032_109 temp10032_108))
(assert (= temp10032_110 (select ARGNAME_stride_NAMEEND_VAL temp10032_109)))
(assert (= temp10032_111 #x0000000000000000))
(assert (= temp10032_112 #x0000000000000000))
(assert (= temp10032_113 temp10032_112))
(assert (= temp10032_114 (select ARGNAME_stride_NAMEEND_VAL temp10032_113)))
(assert (= temp10032_115 #x0000000000000000))
(assert (= temp10032_116 #x0000000000000001))
(assert (= temp10032_117 temp10032_116))
(assert (= temp10032_118 (select ARGNAME_stride_NAMEEND_VAL temp10032_117)))
(assert (= temp10032_119 #x0000000000000000))
(assert (= temp10032_120 #x0000000000000002))
(assert (= temp10032_121 temp10032_120))
(assert (= temp10032_122 (select ARGNAME_stride_NAMEEND_VAL temp10032_121)))
(assert (= temp10032_123 #x0000000000000000))
(assert (= temp10032_124 #x0000000000000003))
(assert (= temp10032_125 temp10032_124))
(assert (= temp10032_126 (select ARGNAME_stride_NAMEEND_VAL temp10032_125)))
(assert (= temp10032_127 #x0000000000000000))
(assert (= temp10032_128 #x0000000000000004))
(assert (= temp10032_129 temp10032_128))
(assert (= temp10032_130 (select ARGNAME_stride_NAMEEND_VAL temp10032_129)))
(assert (= temp10032_131 #x0000000000000000))
(assert (= temp10032_132 #x0000000000000005))
(assert (= temp10032_133 temp10032_132))
(assert (= temp10032_134 (select ARGNAME_stride_NAMEEND_VAL temp10032_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10032_114 temp10032_111)
             (bvsle temp10032_118 temp10032_115)
             (bvsle temp10032_122 temp10032_119)
             (bvsle temp10032_126 temp10032_123)
             (bvsle temp10032_130 temp10032_127)
             (bvsle temp10032_134 temp10032_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10032_135 #x0000000000000000))
(assert (= var1191735 temp10032_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10032_136 #x0000000000000001))
(assert (= var1191747 temp10032_136))
(assert (= temp10032_137 #x0000000000000000))
(assert (= var1179826 temp10032_137))
(assert (= temp10032_138 #x0000000000000000))
(assert (= temp10032_139 temp10032_138))
(assert (= temp10032_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10032_139)))
(assert (= temp10032_141 #x0000000000000001))
(assert (= temp10032_142 temp10032_141))
(assert (= temp10032_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10032_142)))
(assert (= temp10032_144 #x0000000000000002))
(assert (= temp10032_145 temp10032_144))
(assert (= temp10032_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10032_145)))
(assert (= temp10032_147 #x0000000000000003))
(assert (= temp10032_148 temp10032_147))
(assert (= temp10032_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10032_148)))
(assert (= temp10032_150 #x0000000000000004))
(assert (= temp10032_151 temp10032_150))
(assert (= temp10032_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10032_151)))
(assert (= temp10032_153 #x0000000000000005))
(assert (= temp10032_154 temp10032_153))
(assert (= temp10032_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10032_154)))
(assert (= temp10032_157 var1179826))
(assert (= temp10032_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10032_157)))
(assert (= temp10032_156 temp10032_158))
(assert (= var1191780
   (ite (bvslt temp10032_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10032_159 #x0000000000000000))
(assert (= var1191780 temp10032_159))
(assert (= temp10032_160 #x0000000000000000))
(assert (= var1179826 temp10032_160))
(assert (= temp10032_162 var1179826))
(assert (= temp10032_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10032_162)))
(assert (= temp10032_161 temp10032_163))
(assert (= var1191802 (bvsmod temp10032_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10032_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10032_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10032_165 #x0000000000000001))
(assert (= var1191803 temp10032_165))
(assert (= temp10032_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10032_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10032_167 #x0000000000000001))
(assert (= var1191823 temp10032_167))
(assert (= temp10032_168 #x0000000000000001))
(assert (= var1180714 temp10032_168))
(assert (= temp10032_169 #x0000000000000000))
(assert (= temp10032_170 temp10032_169))
(assert (= temp10032_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10032_170)))
(assert (= temp10032_172 #x0000000000000001))
(assert (= temp10032_173 temp10032_172))
(assert (= temp10032_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10032_173)))
(assert (= temp10032_175 #x0000000000000002))
(assert (= temp10032_176 temp10032_175))
(assert (= temp10032_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10032_176)))
(assert (= temp10032_178 #x0000000000000003))
(assert (= temp10032_179 temp10032_178))
(assert (= temp10032_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10032_179)))
(assert (= temp10032_181 #x0000000000000004))
(assert (= temp10032_182 temp10032_181))
(assert (= temp10032_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10032_182)))
(assert (= temp10032_184 #x0000000000000005))
(assert (= temp10032_185 temp10032_184))
(assert (= temp10032_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10032_185)))
(assert (= temp10032_187 #x0000000000000000))
(assert (= temp10032_188
   (ite (bvslt var1180714 temp10032_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10032_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10032_188)))
(assert (= var1191831 temp10032_189))
(assert (bvslt (ite (bvslt var1180714 temp10032_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10032_190 #x0000000000000001))
(assert (= var1180714 temp10032_190))
(assert (= temp10032_192 var1180714))
(assert (= temp10032_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10032_192)))
(assert (= temp10032_191 temp10032_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10032_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10032_194 #x0000000000000001))
(assert (= var1191836 temp10032_194))
(assert (= temp10032_195 #x0000000000000000))
(assert (= var1179826 temp10032_195))
(assert (= temp10032_197 var1179826))
(assert (= temp10032_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10032_197)))
(assert (= temp10032_196 temp10032_198))
(assert (= temp10032_199 #x0000000000000002))
(assert (= var1586025 temp10032_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10032_200 #x0000000000000001))
(assert (= var1191993 temp10032_200))
(assert (= temp10032_201 #x0000000000000001))
(assert (= var2700303 temp10032_201))
(assert (= temp10032_202 #x0000000000000001))
(assert (= var2962447 temp10032_202))
(assert (= temp10032_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10032_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10032_204 #x0000000000000001))
(assert (= var211058 temp10032_204))
(assert (= temp10032_205 #x0000000000000001))
(assert (= var211188 temp10032_205))
(assert (= var3879401 var211188))
(assert (= temp10032_206 #x0000000000000000))
(assert (= var3866802 temp10032_206))
(assert (= temp10032_207 #x0000000000000000))
(assert (= temp10032_208
   (ite (bvslt var3866802 temp10032_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10032_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10032_208)))
(assert (= var3879420 temp10032_209))
(assert (bvslt (ite (bvslt var3866802 temp10032_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10032_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10032_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10032_211 #x0000000000000000))
(assert (= var3879421 temp10032_211))
(assert (= temp10032_212 #x0000000000000001))
(assert (= var3867690 temp10032_212))
(assert (= temp10032_213 #x0000000000000000))
(assert (= temp10032_214
   (ite (bvslt var3867690 temp10032_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10032_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10032_214)))
(assert (= var3879423 temp10032_215))
(assert (bvslt (ite (bvslt var3867690 temp10032_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10032_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10032_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10032_217 #x0000000000000001))
(assert (= var3879424 temp10032_217))
(assert (= temp10032_218 #x0000000000000000))
(assert (= var4079423 temp10032_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10032_219 #x0000000000000002))
(assert (= var4208259 temp10032_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10032_220 #x0000000000000000))
(assert (= var4273820 temp10032_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10032_222 #xffffffffffffffff))
(assert (= temp10032_221 temp10032_222))
(assert (= temp10032_223 #x0000000000000001))
(assert (= var197674 temp10032_223))
(assert (= temp10032_224 #x0000000000000000))
(assert (= temp10032_225
   (ite (bvslt var197674 temp10032_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10032_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10032_225)))
(assert (= var211595 temp10032_226))
(assert (bvslt (ite (bvslt var197674 temp10032_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10032_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10032_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10032_228 #x0000000000000001))
(assert (= var211596 temp10032_228))
(assert (= temp10032_230 #xffffffffffffffff))
(assert (= temp10032_229 temp10032_230))
(assert (= temp10032_231 #x0000000000000001))
(assert (= var211058 temp10032_231))
(model-add temp10032_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10032_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10032_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10032_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





