(declare-fun temp10078_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10078_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10078_3 () (_ BitVec 64))
(declare-fun temp10078_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10078_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10078_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10078_7 () (_ BitVec 64))
(declare-fun temp10078_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10078_9 () (_ BitVec 64))
(declare-fun temp10078_10 () (_ BitVec 64))
(declare-fun temp10078_11 () (_ BitVec 64))
(declare-fun temp10078_12 () (_ BitVec 64))
(declare-fun temp10078_13 () (_ BitVec 64))
(declare-fun temp10078_14 () (_ BitVec 64))
(declare-fun temp10078_15 () (_ BitVec 64))
(declare-fun temp10078_16 () (_ BitVec 64))
(declare-fun temp10078_17 () (_ BitVec 64))
(declare-fun temp10078_18 () (_ BitVec 64))
(declare-fun temp10078_19 () (_ BitVec 64))
(declare-fun temp10078_20 () (_ BitVec 64))
(declare-fun temp10078_21 () (_ BitVec 64))
(declare-fun temp10078_22 () (_ BitVec 64))
(declare-fun temp10078_23 () (_ BitVec 64))
(declare-fun temp10078_24 () (_ BitVec 64))
(declare-fun temp10078_25 () (_ BitVec 64))
(declare-fun temp10078_26 () (_ BitVec 64))
(declare-fun temp10078_27 () (_ BitVec 64))
(declare-fun temp10078_28 () (_ BitVec 64))
(declare-fun temp10078_29 () (_ BitVec 64))
(declare-fun temp10078_30 () (_ BitVec 64))
(declare-fun temp10078_31 () (_ BitVec 64))
(declare-fun temp10078_32 () (_ BitVec 64))
(declare-fun temp10078_33 () (_ BitVec 64))
(declare-fun temp10078_34 () (_ BitVec 64))
(declare-fun temp10078_35 () (_ BitVec 64))
(declare-fun temp10078_36 () (_ BitVec 64))
(declare-fun temp10078_37 () (_ BitVec 64))
(declare-fun temp10078_38 () (_ BitVec 64))
(declare-fun temp10078_39 () (_ BitVec 64))
(declare-fun temp10078_40 () (_ BitVec 64))
(declare-fun temp10078_41 () (_ BitVec 64))
(declare-fun temp10078_42 () (_ BitVec 64))
(declare-fun temp10078_43 () (_ BitVec 64))
(declare-fun temp10078_44 () (_ BitVec 64))
(declare-fun temp10078_45 () (_ BitVec 64))
(declare-fun temp10078_46 () (_ BitVec 64))
(declare-fun temp10078_47 () (_ BitVec 64))
(declare-fun temp10078_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10078_49 () (_ BitVec 64))
(declare-fun temp10078_50 () (_ BitVec 64))
(declare-fun temp10078_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10078_52 () (_ BitVec 64))
(declare-fun temp10078_53 () (_ BitVec 64))
(declare-fun temp10078_54 () (_ BitVec 64))
(declare-fun temp10078_55 () (_ BitVec 64))
(declare-fun temp10078_56 () (_ BitVec 64))
(declare-fun temp10078_57 () (_ BitVec 64))
(declare-fun temp10078_58 () (_ BitVec 64))
(declare-fun temp10078_59 () (_ BitVec 64))
(declare-fun temp10078_60 () (_ BitVec 64))
(declare-fun temp10078_61 () (_ BitVec 64))
(declare-fun temp10078_62 () (_ BitVec 64))
(declare-fun temp10078_63 () (_ BitVec 64))
(declare-fun temp10078_64 () (_ BitVec 64))
(declare-fun temp10078_65 () (_ BitVec 64))
(declare-fun temp10078_66 () (_ BitVec 64))
(declare-fun temp10078_67 () (_ BitVec 64))
(declare-fun temp10078_68 () (_ BitVec 64))
(declare-fun temp10078_69 () (_ BitVec 64))
(declare-fun temp10078_70 () (_ BitVec 64))
(declare-fun temp10078_71 () (_ BitVec 64))
(declare-fun temp10078_72 () (_ BitVec 64))
(declare-fun temp10078_73 () (_ BitVec 64))
(declare-fun temp10078_74 () (_ BitVec 64))
(declare-fun temp10078_75 () (_ BitVec 64))
(declare-fun temp10078_76 () (_ BitVec 64))
(declare-fun temp10078_77 () (_ BitVec 64))
(declare-fun temp10078_78 () (_ BitVec 64))
(declare-fun temp10078_79 () (_ BitVec 64))
(declare-fun temp10078_80 () (_ BitVec 64))
(declare-fun temp10078_81 () (_ BitVec 64))
(declare-fun temp10078_82 () (_ BitVec 64))
(declare-fun temp10078_83 () (_ BitVec 64))
(declare-fun temp10078_84 () (_ BitVec 64))
(declare-fun temp10078_85 () (_ BitVec 64))
(declare-fun temp10078_86 () (_ BitVec 64))
(declare-fun temp10078_87 () (_ BitVec 64))
(declare-fun temp10078_88 () (_ BitVec 64))
(declare-fun temp10078_89 () (_ BitVec 64))
(declare-fun temp10078_90 () (_ BitVec 64))
(declare-fun temp10078_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10078_92 () (_ BitVec 64))
(declare-fun temp10078_93 () (_ BitVec 64))
(declare-fun temp10078_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10078_95 () (_ BitVec 64))
(declare-fun temp10078_96 () (_ BitVec 64))
(declare-fun temp10078_97 () (_ BitVec 64))
(declare-fun temp10078_98 () (_ BitVec 64))
(declare-fun temp10078_99 () (_ BitVec 64))
(declare-fun temp10078_100 () (_ BitVec 64))
(declare-fun temp10078_101 () (_ BitVec 64))
(declare-fun temp10078_102 () (_ BitVec 64))
(declare-fun temp10078_103 () (_ BitVec 64))
(declare-fun temp10078_104 () (_ BitVec 64))
(declare-fun temp10078_105 () (_ BitVec 64))
(declare-fun temp10078_106 () (_ BitVec 64))
(declare-fun temp10078_107 () (_ BitVec 64))
(declare-fun temp10078_108 () (_ BitVec 64))
(declare-fun temp10078_109 () (_ BitVec 64))
(declare-fun temp10078_110 () (_ BitVec 64))
(declare-fun temp10078_111 () (_ BitVec 64))
(declare-fun temp10078_112 () (_ BitVec 64))
(declare-fun temp10078_113 () (_ BitVec 64))
(declare-fun temp10078_114 () (_ BitVec 64))
(declare-fun temp10078_115 () (_ BitVec 64))
(declare-fun temp10078_116 () (_ BitVec 64))
(declare-fun temp10078_117 () (_ BitVec 64))
(declare-fun temp10078_118 () (_ BitVec 64))
(declare-fun temp10078_119 () (_ BitVec 64))
(declare-fun temp10078_120 () (_ BitVec 64))
(declare-fun temp10078_121 () (_ BitVec 64))
(declare-fun temp10078_122 () (_ BitVec 64))
(declare-fun temp10078_123 () (_ BitVec 64))
(declare-fun temp10078_124 () (_ BitVec 64))
(declare-fun temp10078_125 () (_ BitVec 64))
(declare-fun temp10078_126 () (_ BitVec 64))
(declare-fun temp10078_127 () (_ BitVec 64))
(declare-fun temp10078_128 () (_ BitVec 64))
(declare-fun temp10078_129 () (_ BitVec 64))
(declare-fun temp10078_130 () (_ BitVec 64))
(declare-fun temp10078_131 () (_ BitVec 64))
(declare-fun temp10078_132 () (_ BitVec 64))
(declare-fun temp10078_133 () (_ BitVec 64))
(declare-fun temp10078_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10078_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10078_136 () (_ BitVec 64))
(declare-fun temp10078_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10078_138 () (_ BitVec 64))
(declare-fun temp10078_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10078_140 () (_ BitVec 64))
(declare-fun temp10078_141 () (_ BitVec 64))
(declare-fun temp10078_142 () (_ BitVec 64))
(declare-fun temp10078_143 () (_ BitVec 64))
(declare-fun temp10078_144 () (_ BitVec 64))
(declare-fun temp10078_145 () (_ BitVec 64))
(declare-fun temp10078_146 () (_ BitVec 64))
(declare-fun temp10078_147 () (_ BitVec 64))
(declare-fun temp10078_148 () (_ BitVec 64))
(declare-fun temp10078_149 () (_ BitVec 64))
(declare-fun temp10078_150 () (_ BitVec 64))
(declare-fun temp10078_151 () (_ BitVec 64))
(declare-fun temp10078_152 () (_ BitVec 64))
(declare-fun temp10078_153 () (_ BitVec 64))
(declare-fun temp10078_154 () (_ BitVec 64))
(declare-fun temp10078_155 () (_ BitVec 64))
(declare-fun temp10078_157 () (_ BitVec 64))
(declare-fun temp10078_158 () (_ BitVec 64))
(declare-fun temp10078_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10078_159 () (_ BitVec 64))
(declare-fun temp10078_160 () (_ BitVec 64))
(declare-fun temp10078_162 () (_ BitVec 64))
(declare-fun temp10078_163 () (_ BitVec 64))
(declare-fun temp10078_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10078_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10078_165 () (_ BitVec 64))
(declare-fun temp10078_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10078_167 () (_ BitVec 64))
(declare-fun temp10078_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10078_169 () (_ BitVec 64))
(declare-fun temp10078_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10078_171 () (_ BitVec 64))
(declare-fun temp10078_172 () (_ BitVec 64))
(declare-fun temp10078_173 () (_ BitVec 64))
(declare-fun temp10078_174 () (_ BitVec 64))
(declare-fun temp10078_175 () (_ BitVec 64))
(declare-fun temp10078_176 () (_ BitVec 64))
(declare-fun temp10078_177 () (_ BitVec 64))
(declare-fun temp10078_178 () (_ BitVec 64))
(declare-fun temp10078_179 () (_ BitVec 64))
(declare-fun temp10078_180 () (_ BitVec 64))
(declare-fun temp10078_181 () (_ BitVec 64))
(declare-fun temp10078_182 () (_ BitVec 64))
(declare-fun temp10078_183 () (_ BitVec 64))
(declare-fun temp10078_184 () (_ BitVec 64))
(declare-fun temp10078_185 () (_ BitVec 64))
(declare-fun temp10078_186 () (_ BitVec 64))
(declare-fun temp10078_187 () (_ BitVec 64))
(declare-fun temp10078_188 () (_ BitVec 64))
(declare-fun temp10078_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10078_190 () (_ BitVec 64))
(declare-fun temp10078_192 () (_ BitVec 64))
(declare-fun temp10078_193 () (_ BitVec 64))
(declare-fun temp10078_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10078_194 () (_ BitVec 64))
(declare-fun temp10078_195 () (_ BitVec 64))
(declare-fun temp10078_197 () (_ BitVec 64))
(declare-fun temp10078_198 () (_ BitVec 64))
(declare-fun temp10078_196 () (_ BitVec 64))
(declare-fun temp10078_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10078_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10078_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10078_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10078_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10078_204 () (_ BitVec 64))
(declare-fun temp10078_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10078_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10078_207 () (_ BitVec 64))
(declare-fun temp10078_208 () (_ BitVec 64))
(declare-fun temp10078_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10078_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10078_211 () (_ BitVec 64))
(declare-fun temp10078_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10078_213 () (_ BitVec 64))
(declare-fun temp10078_214 () (_ BitVec 64))
(declare-fun temp10078_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10078_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10078_217 () (_ BitVec 64))
(declare-fun temp10078_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10078_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10078_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10078_222 () (_ BitVec 64))
(declare-fun temp10078_221 () (_ BitVec 64))
(declare-fun temp10078_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10078_224 () (_ BitVec 64))
(declare-fun temp10078_225 () (_ BitVec 64))
(declare-fun temp10078_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10078_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10078_228 () (_ BitVec 64))
(declare-fun temp10078_230 () (_ BitVec 64))
(declare-fun temp10078_229 () (_ BitVec 64))
(declare-fun temp10078_231 () (_ BitVec 64))
(assert (= temp10078_1 #x0000000000000001))
(assert (= var77203 temp10078_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10078_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10078_2)))
(assert (= temp10078_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10078_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10078_4 #x0000000000000000))
(assert (= var210941 temp10078_4))
(assert (= temp10078_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10078_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10078_6 #x0000000000000000))
(assert (= var210986 temp10078_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10078_7 #x0000000000000000))
(assert (= temp10078_8 temp10078_7))
(assert (= temp10078_9 (select ARGNAME_padding_NAMEEND_VAL temp10078_8)))
(assert (= temp10078_10 #x0000000000000001))
(assert (= temp10078_11 temp10078_10))
(assert (= temp10078_12 (select ARGNAME_padding_NAMEEND_VAL temp10078_11)))
(assert (= temp10078_13 #x0000000000000002))
(assert (= temp10078_14 temp10078_13))
(assert (= temp10078_15 (select ARGNAME_padding_NAMEEND_VAL temp10078_14)))
(assert (= temp10078_16 #x0000000000000003))
(assert (= temp10078_17 temp10078_16))
(assert (= temp10078_18 (select ARGNAME_padding_NAMEEND_VAL temp10078_17)))
(assert (= temp10078_19 #x0000000000000004))
(assert (= temp10078_20 temp10078_19))
(assert (= temp10078_21 (select ARGNAME_padding_NAMEEND_VAL temp10078_20)))
(assert (= temp10078_22 #x0000000000000005))
(assert (= temp10078_23 temp10078_22))
(assert (= temp10078_24 (select ARGNAME_padding_NAMEEND_VAL temp10078_23)))
(assert (= temp10078_25 #x0000000000000000))
(assert (= temp10078_26 #x0000000000000000))
(assert (= temp10078_27 temp10078_26))
(assert (= temp10078_28 (select ARGNAME_padding_NAMEEND_VAL temp10078_27)))
(assert (= temp10078_29 #x0000000000000000))
(assert (= temp10078_30 #x0000000000000001))
(assert (= temp10078_31 temp10078_30))
(assert (= temp10078_32 (select ARGNAME_padding_NAMEEND_VAL temp10078_31)))
(assert (= temp10078_33 #x0000000000000000))
(assert (= temp10078_34 #x0000000000000002))
(assert (= temp10078_35 temp10078_34))
(assert (= temp10078_36 (select ARGNAME_padding_NAMEEND_VAL temp10078_35)))
(assert (= temp10078_37 #x0000000000000000))
(assert (= temp10078_38 #x0000000000000003))
(assert (= temp10078_39 temp10078_38))
(assert (= temp10078_40 (select ARGNAME_padding_NAMEEND_VAL temp10078_39)))
(assert (= temp10078_41 #x0000000000000000))
(assert (= temp10078_42 #x0000000000000004))
(assert (= temp10078_43 temp10078_42))
(assert (= temp10078_44 (select ARGNAME_padding_NAMEEND_VAL temp10078_43)))
(assert (= temp10078_45 #x0000000000000000))
(assert (= temp10078_46 #x0000000000000005))
(assert (= temp10078_47 temp10078_46))
(assert (= temp10078_48 (select ARGNAME_padding_NAMEEND_VAL temp10078_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10078_28 temp10078_25)
             (bvslt temp10078_32 temp10078_29)
             (bvslt temp10078_36 temp10078_33)
             (bvslt temp10078_40 temp10078_37)
             (bvslt temp10078_44 temp10078_41)
             (bvslt temp10078_48 temp10078_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10078_49 #x0000000000000000))
(assert (= var1191714 temp10078_49))
(assert (= temp10078_50 #x0000000000000000))
(assert (= temp10078_51 temp10078_50))
(assert (= temp10078_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10078_51)))
(assert (= temp10078_53 #x0000000000000001))
(assert (= temp10078_54 temp10078_53))
(assert (= temp10078_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10078_54)))
(assert (= temp10078_56 #x0000000000000002))
(assert (= temp10078_57 temp10078_56))
(assert (= temp10078_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10078_57)))
(assert (= temp10078_59 #x0000000000000003))
(assert (= temp10078_60 temp10078_59))
(assert (= temp10078_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10078_60)))
(assert (= temp10078_62 #x0000000000000004))
(assert (= temp10078_63 temp10078_62))
(assert (= temp10078_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10078_63)))
(assert (= temp10078_65 #x0000000000000005))
(assert (= temp10078_66 temp10078_65))
(assert (= temp10078_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10078_66)))
(assert (= temp10078_68 #x0000000000000000))
(assert (= temp10078_69 #x0000000000000000))
(assert (= temp10078_70 temp10078_69))
(assert (= temp10078_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10078_70)))
(assert (= temp10078_72 #x0000000000000000))
(assert (= temp10078_73 #x0000000000000001))
(assert (= temp10078_74 temp10078_73))
(assert (= temp10078_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10078_74)))
(assert (= temp10078_76 #x0000000000000000))
(assert (= temp10078_77 #x0000000000000002))
(assert (= temp10078_78 temp10078_77))
(assert (= temp10078_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10078_78)))
(assert (= temp10078_80 #x0000000000000000))
(assert (= temp10078_81 #x0000000000000003))
(assert (= temp10078_82 temp10078_81))
(assert (= temp10078_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10078_82)))
(assert (= temp10078_84 #x0000000000000000))
(assert (= temp10078_85 #x0000000000000004))
(assert (= temp10078_86 temp10078_85))
(assert (= temp10078_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10078_86)))
(assert (= temp10078_88 #x0000000000000000))
(assert (= temp10078_89 #x0000000000000005))
(assert (= temp10078_90 temp10078_89))
(assert (= temp10078_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10078_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10078_71 temp10078_68)
             (bvslt temp10078_75 temp10078_72)
             (bvslt temp10078_79 temp10078_76)
             (bvslt temp10078_83 temp10078_80)
             (bvslt temp10078_87 temp10078_84)
             (bvslt temp10078_91 temp10078_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10078_92 #x0000000000000000))
(assert (= var1191725 temp10078_92))
(assert (= temp10078_93 #x0000000000000000))
(assert (= temp10078_94 temp10078_93))
(assert (= temp10078_95 (select ARGNAME_stride_NAMEEND_VAL temp10078_94)))
(assert (= temp10078_96 #x0000000000000001))
(assert (= temp10078_97 temp10078_96))
(assert (= temp10078_98 (select ARGNAME_stride_NAMEEND_VAL temp10078_97)))
(assert (= temp10078_99 #x0000000000000002))
(assert (= temp10078_100 temp10078_99))
(assert (= temp10078_101 (select ARGNAME_stride_NAMEEND_VAL temp10078_100)))
(assert (= temp10078_102 #x0000000000000003))
(assert (= temp10078_103 temp10078_102))
(assert (= temp10078_104 (select ARGNAME_stride_NAMEEND_VAL temp10078_103)))
(assert (= temp10078_105 #x0000000000000004))
(assert (= temp10078_106 temp10078_105))
(assert (= temp10078_107 (select ARGNAME_stride_NAMEEND_VAL temp10078_106)))
(assert (= temp10078_108 #x0000000000000005))
(assert (= temp10078_109 temp10078_108))
(assert (= temp10078_110 (select ARGNAME_stride_NAMEEND_VAL temp10078_109)))
(assert (= temp10078_111 #x0000000000000000))
(assert (= temp10078_112 #x0000000000000000))
(assert (= temp10078_113 temp10078_112))
(assert (= temp10078_114 (select ARGNAME_stride_NAMEEND_VAL temp10078_113)))
(assert (= temp10078_115 #x0000000000000000))
(assert (= temp10078_116 #x0000000000000001))
(assert (= temp10078_117 temp10078_116))
(assert (= temp10078_118 (select ARGNAME_stride_NAMEEND_VAL temp10078_117)))
(assert (= temp10078_119 #x0000000000000000))
(assert (= temp10078_120 #x0000000000000002))
(assert (= temp10078_121 temp10078_120))
(assert (= temp10078_122 (select ARGNAME_stride_NAMEEND_VAL temp10078_121)))
(assert (= temp10078_123 #x0000000000000000))
(assert (= temp10078_124 #x0000000000000003))
(assert (= temp10078_125 temp10078_124))
(assert (= temp10078_126 (select ARGNAME_stride_NAMEEND_VAL temp10078_125)))
(assert (= temp10078_127 #x0000000000000000))
(assert (= temp10078_128 #x0000000000000004))
(assert (= temp10078_129 temp10078_128))
(assert (= temp10078_130 (select ARGNAME_stride_NAMEEND_VAL temp10078_129)))
(assert (= temp10078_131 #x0000000000000000))
(assert (= temp10078_132 #x0000000000000005))
(assert (= temp10078_133 temp10078_132))
(assert (= temp10078_134 (select ARGNAME_stride_NAMEEND_VAL temp10078_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10078_114 temp10078_111)
             (bvsle temp10078_118 temp10078_115)
             (bvsle temp10078_122 temp10078_119)
             (bvsle temp10078_126 temp10078_123)
             (bvsle temp10078_130 temp10078_127)
             (bvsle temp10078_134 temp10078_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10078_135 #x0000000000000000))
(assert (= var1191735 temp10078_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10078_136 #x0000000000000001))
(assert (= var1191747 temp10078_136))
(assert (= temp10078_137 #x0000000000000000))
(assert (= var1179826 temp10078_137))
(assert (= temp10078_138 #x0000000000000000))
(assert (= temp10078_139 temp10078_138))
(assert (= temp10078_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10078_139)))
(assert (= temp10078_141 #x0000000000000001))
(assert (= temp10078_142 temp10078_141))
(assert (= temp10078_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10078_142)))
(assert (= temp10078_144 #x0000000000000002))
(assert (= temp10078_145 temp10078_144))
(assert (= temp10078_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10078_145)))
(assert (= temp10078_147 #x0000000000000003))
(assert (= temp10078_148 temp10078_147))
(assert (= temp10078_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10078_148)))
(assert (= temp10078_150 #x0000000000000004))
(assert (= temp10078_151 temp10078_150))
(assert (= temp10078_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10078_151)))
(assert (= temp10078_153 #x0000000000000005))
(assert (= temp10078_154 temp10078_153))
(assert (= temp10078_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10078_154)))
(assert (= temp10078_157 var1179826))
(assert (= temp10078_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10078_157)))
(assert (= temp10078_156 temp10078_158))
(assert (= var1191780
   (ite (bvslt temp10078_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10078_159 #x0000000000000000))
(assert (= var1191780 temp10078_159))
(assert (= temp10078_160 #x0000000000000000))
(assert (= var1179826 temp10078_160))
(assert (= temp10078_162 var1179826))
(assert (= temp10078_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10078_162)))
(assert (= temp10078_161 temp10078_163))
(assert (= var1191802 (bvsmod temp10078_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10078_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10078_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10078_165 #x0000000000000001))
(assert (= var1191803 temp10078_165))
(assert (= temp10078_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10078_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10078_167 #x0000000000000001))
(assert (= var1191823 temp10078_167))
(assert (= temp10078_168 #x0000000000000001))
(assert (= var1180714 temp10078_168))
(assert (= temp10078_169 #x0000000000000000))
(assert (= temp10078_170 temp10078_169))
(assert (= temp10078_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10078_170)))
(assert (= temp10078_172 #x0000000000000001))
(assert (= temp10078_173 temp10078_172))
(assert (= temp10078_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10078_173)))
(assert (= temp10078_175 #x0000000000000002))
(assert (= temp10078_176 temp10078_175))
(assert (= temp10078_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10078_176)))
(assert (= temp10078_178 #x0000000000000003))
(assert (= temp10078_179 temp10078_178))
(assert (= temp10078_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10078_179)))
(assert (= temp10078_181 #x0000000000000004))
(assert (= temp10078_182 temp10078_181))
(assert (= temp10078_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10078_182)))
(assert (= temp10078_184 #x0000000000000005))
(assert (= temp10078_185 temp10078_184))
(assert (= temp10078_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10078_185)))
(assert (= temp10078_187 #x0000000000000000))
(assert (= temp10078_188
   (ite (bvslt var1180714 temp10078_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10078_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10078_188)))
(assert (= var1191831 temp10078_189))
(assert (bvslt (ite (bvslt var1180714 temp10078_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10078_190 #x0000000000000001))
(assert (= var1180714 temp10078_190))
(assert (= temp10078_192 var1180714))
(assert (= temp10078_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10078_192)))
(assert (= temp10078_191 temp10078_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10078_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10078_194 #x0000000000000001))
(assert (= var1191836 temp10078_194))
(assert (= temp10078_195 #x0000000000000000))
(assert (= var1179826 temp10078_195))
(assert (= temp10078_197 var1179826))
(assert (= temp10078_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10078_197)))
(assert (= temp10078_196 temp10078_198))
(assert (= temp10078_199 #x0000000000000002))
(assert (= var1586025 temp10078_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10078_200 #x0000000000000001))
(assert (= var1191993 temp10078_200))
(assert (= temp10078_201 #x0000000000000001))
(assert (= var2700303 temp10078_201))
(assert (= temp10078_202 #x0000000000000001))
(assert (= var2962447 temp10078_202))
(assert (= temp10078_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10078_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10078_204 #x0000000000000001))
(assert (= var211058 temp10078_204))
(assert (= temp10078_205 #x0000000000000001))
(assert (= var211188 temp10078_205))
(assert (= var3879401 var211188))
(assert (= temp10078_206 #x0000000000000000))
(assert (= var3866802 temp10078_206))
(assert (= temp10078_207 #x0000000000000000))
(assert (= temp10078_208
   (ite (bvslt var3866802 temp10078_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10078_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10078_208)))
(assert (= var3879420 temp10078_209))
(assert (bvslt (ite (bvslt var3866802 temp10078_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10078_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10078_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10078_211 #x0000000000000000))
(assert (= var3879421 temp10078_211))
(assert (= temp10078_212 #x0000000000000001))
(assert (= var3867690 temp10078_212))
(assert (= temp10078_213 #x0000000000000000))
(assert (= temp10078_214
   (ite (bvslt var3867690 temp10078_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10078_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10078_214)))
(assert (= var3879423 temp10078_215))
(assert (bvslt (ite (bvslt var3867690 temp10078_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10078_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10078_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10078_217 #x0000000000000001))
(assert (= var3879424 temp10078_217))
(assert (= temp10078_218 #x0000000000000000))
(assert (= var4079423 temp10078_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10078_219 #x0000000000000002))
(assert (= var4208259 temp10078_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10078_220 #x0000000000000000))
(assert (= var4273820 temp10078_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10078_222 #xffffffffffffffff))
(assert (= temp10078_221 temp10078_222))
(assert (= temp10078_223 #x0000000000000001))
(assert (= var197674 temp10078_223))
(assert (= temp10078_224 #x0000000000000000))
(assert (= temp10078_225
   (ite (bvslt var197674 temp10078_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10078_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10078_225)))
(assert (= var211595 temp10078_226))
(assert (bvslt (ite (bvslt var197674 temp10078_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10078_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10078_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10078_228 #x0000000000000001))
(assert (= var211596 temp10078_228))
(assert (= temp10078_230 #xffffffffffffffff))
(assert (= temp10078_229 temp10078_230))
(assert (= temp10078_231 #x0000000000000001))
(assert (= var211058 temp10078_231))
(model-add temp10078_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10078_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10078_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10078_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





