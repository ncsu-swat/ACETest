(declare-fun temp141_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp141_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp141_3 () (_ BitVec 64))
(declare-fun temp141_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp141_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp141_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp141_7 () (_ BitVec 64))
(declare-fun temp141_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp141_9 () (_ BitVec 64))
(declare-fun temp141_10 () (_ BitVec 64))
(declare-fun temp141_11 () (_ BitVec 64))
(declare-fun temp141_12 () (_ BitVec 64))
(declare-fun temp141_13 () (_ BitVec 64))
(declare-fun temp141_14 () (_ BitVec 64))
(declare-fun temp141_15 () (_ BitVec 64))
(declare-fun temp141_16 () (_ BitVec 64))
(declare-fun temp141_17 () (_ BitVec 64))
(declare-fun temp141_18 () (_ BitVec 64))
(declare-fun temp141_19 () (_ BitVec 64))
(declare-fun temp141_20 () (_ BitVec 64))
(declare-fun temp141_21 () (_ BitVec 64))
(declare-fun temp141_22 () (_ BitVec 64))
(declare-fun temp141_23 () (_ BitVec 64))
(declare-fun temp141_24 () (_ BitVec 64))
(declare-fun temp141_25 () (_ BitVec 64))
(declare-fun temp141_26 () (_ BitVec 64))
(declare-fun temp141_27 () (_ BitVec 64))
(declare-fun temp141_28 () (_ BitVec 64))
(declare-fun temp141_29 () (_ BitVec 64))
(declare-fun temp141_30 () (_ BitVec 64))
(declare-fun temp141_31 () (_ BitVec 64))
(declare-fun temp141_32 () (_ BitVec 64))
(declare-fun temp141_33 () (_ BitVec 64))
(declare-fun temp141_34 () (_ BitVec 64))
(declare-fun temp141_35 () (_ BitVec 64))
(declare-fun temp141_36 () (_ BitVec 64))
(declare-fun temp141_37 () (_ BitVec 64))
(declare-fun temp141_38 () (_ BitVec 64))
(declare-fun temp141_39 () (_ BitVec 64))
(declare-fun temp141_40 () (_ BitVec 64))
(declare-fun temp141_41 () (_ BitVec 64))
(declare-fun temp141_42 () (_ BitVec 64))
(declare-fun temp141_43 () (_ BitVec 64))
(declare-fun temp141_44 () (_ BitVec 64))
(declare-fun temp141_45 () (_ BitVec 64))
(declare-fun temp141_46 () (_ BitVec 64))
(declare-fun temp141_47 () (_ BitVec 64))
(declare-fun temp141_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp141_49 () (_ BitVec 64))
(declare-fun temp141_50 () (_ BitVec 64))
(declare-fun temp141_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp141_52 () (_ BitVec 64))
(declare-fun temp141_53 () (_ BitVec 64))
(declare-fun temp141_54 () (_ BitVec 64))
(declare-fun temp141_55 () (_ BitVec 64))
(declare-fun temp141_56 () (_ BitVec 64))
(declare-fun temp141_57 () (_ BitVec 64))
(declare-fun temp141_58 () (_ BitVec 64))
(declare-fun temp141_59 () (_ BitVec 64))
(declare-fun temp141_60 () (_ BitVec 64))
(declare-fun temp141_61 () (_ BitVec 64))
(declare-fun temp141_62 () (_ BitVec 64))
(declare-fun temp141_63 () (_ BitVec 64))
(declare-fun temp141_64 () (_ BitVec 64))
(declare-fun temp141_65 () (_ BitVec 64))
(declare-fun temp141_66 () (_ BitVec 64))
(declare-fun temp141_67 () (_ BitVec 64))
(declare-fun temp141_68 () (_ BitVec 64))
(declare-fun temp141_69 () (_ BitVec 64))
(declare-fun temp141_70 () (_ BitVec 64))
(declare-fun temp141_71 () (_ BitVec 64))
(declare-fun temp141_72 () (_ BitVec 64))
(declare-fun temp141_73 () (_ BitVec 64))
(declare-fun temp141_74 () (_ BitVec 64))
(declare-fun temp141_75 () (_ BitVec 64))
(declare-fun temp141_76 () (_ BitVec 64))
(declare-fun temp141_77 () (_ BitVec 64))
(declare-fun temp141_78 () (_ BitVec 64))
(declare-fun temp141_79 () (_ BitVec 64))
(declare-fun temp141_80 () (_ BitVec 64))
(declare-fun temp141_81 () (_ BitVec 64))
(declare-fun temp141_82 () (_ BitVec 64))
(declare-fun temp141_83 () (_ BitVec 64))
(declare-fun temp141_84 () (_ BitVec 64))
(declare-fun temp141_85 () (_ BitVec 64))
(declare-fun temp141_86 () (_ BitVec 64))
(declare-fun temp141_87 () (_ BitVec 64))
(declare-fun temp141_88 () (_ BitVec 64))
(declare-fun temp141_89 () (_ BitVec 64))
(declare-fun temp141_90 () (_ BitVec 64))
(declare-fun temp141_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp141_92 () (_ BitVec 64))
(declare-fun temp141_93 () (_ BitVec 64))
(declare-fun temp141_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp141_95 () (_ BitVec 64))
(declare-fun temp141_96 () (_ BitVec 64))
(declare-fun temp141_97 () (_ BitVec 64))
(declare-fun temp141_98 () (_ BitVec 64))
(declare-fun temp141_99 () (_ BitVec 64))
(declare-fun temp141_100 () (_ BitVec 64))
(declare-fun temp141_101 () (_ BitVec 64))
(declare-fun temp141_102 () (_ BitVec 64))
(declare-fun temp141_103 () (_ BitVec 64))
(declare-fun temp141_104 () (_ BitVec 64))
(declare-fun temp141_105 () (_ BitVec 64))
(declare-fun temp141_106 () (_ BitVec 64))
(declare-fun temp141_107 () (_ BitVec 64))
(declare-fun temp141_108 () (_ BitVec 64))
(declare-fun temp141_109 () (_ BitVec 64))
(declare-fun temp141_110 () (_ BitVec 64))
(declare-fun temp141_111 () (_ BitVec 64))
(declare-fun temp141_112 () (_ BitVec 64))
(declare-fun temp141_113 () (_ BitVec 64))
(declare-fun temp141_114 () (_ BitVec 64))
(declare-fun temp141_115 () (_ BitVec 64))
(declare-fun temp141_116 () (_ BitVec 64))
(declare-fun temp141_117 () (_ BitVec 64))
(declare-fun temp141_118 () (_ BitVec 64))
(declare-fun temp141_119 () (_ BitVec 64))
(declare-fun temp141_120 () (_ BitVec 64))
(declare-fun temp141_121 () (_ BitVec 64))
(declare-fun temp141_122 () (_ BitVec 64))
(declare-fun temp141_123 () (_ BitVec 64))
(declare-fun temp141_124 () (_ BitVec 64))
(declare-fun temp141_125 () (_ BitVec 64))
(declare-fun temp141_126 () (_ BitVec 64))
(declare-fun temp141_127 () (_ BitVec 64))
(declare-fun temp141_128 () (_ BitVec 64))
(declare-fun temp141_129 () (_ BitVec 64))
(declare-fun temp141_130 () (_ BitVec 64))
(declare-fun temp141_131 () (_ BitVec 64))
(declare-fun temp141_132 () (_ BitVec 64))
(declare-fun temp141_133 () (_ BitVec 64))
(declare-fun temp141_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp141_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp141_136 () (_ BitVec 64))
(declare-fun temp141_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp141_138 () (_ BitVec 64))
(declare-fun temp141_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp141_140 () (_ BitVec 64))
(declare-fun temp141_141 () (_ BitVec 64))
(declare-fun temp141_142 () (_ BitVec 64))
(declare-fun temp141_143 () (_ BitVec 64))
(declare-fun temp141_144 () (_ BitVec 64))
(declare-fun temp141_145 () (_ BitVec 64))
(declare-fun temp141_146 () (_ BitVec 64))
(declare-fun temp141_147 () (_ BitVec 64))
(declare-fun temp141_148 () (_ BitVec 64))
(declare-fun temp141_149 () (_ BitVec 64))
(declare-fun temp141_150 () (_ BitVec 64))
(declare-fun temp141_151 () (_ BitVec 64))
(declare-fun temp141_152 () (_ BitVec 64))
(declare-fun temp141_153 () (_ BitVec 64))
(declare-fun temp141_154 () (_ BitVec 64))
(declare-fun temp141_155 () (_ BitVec 64))
(declare-fun temp141_157 () (_ BitVec 64))
(declare-fun temp141_158 () (_ BitVec 64))
(declare-fun temp141_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp141_159 () (_ BitVec 64))
(declare-fun temp141_160 () (_ BitVec 64))
(declare-fun temp141_162 () (_ BitVec 64))
(declare-fun temp141_163 () (_ BitVec 64))
(declare-fun temp141_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp141_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp141_165 () (_ BitVec 64))
(declare-fun temp141_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp141_167 () (_ BitVec 64))
(declare-fun temp141_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp141_169 () (_ BitVec 64))
(declare-fun temp141_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp141_171 () (_ BitVec 64))
(declare-fun temp141_172 () (_ BitVec 64))
(declare-fun temp141_173 () (_ BitVec 64))
(declare-fun temp141_174 () (_ BitVec 64))
(declare-fun temp141_175 () (_ BitVec 64))
(declare-fun temp141_176 () (_ BitVec 64))
(declare-fun temp141_177 () (_ BitVec 64))
(declare-fun temp141_178 () (_ BitVec 64))
(declare-fun temp141_179 () (_ BitVec 64))
(declare-fun temp141_180 () (_ BitVec 64))
(declare-fun temp141_181 () (_ BitVec 64))
(declare-fun temp141_182 () (_ BitVec 64))
(declare-fun temp141_183 () (_ BitVec 64))
(declare-fun temp141_184 () (_ BitVec 64))
(declare-fun temp141_185 () (_ BitVec 64))
(declare-fun temp141_186 () (_ BitVec 64))
(declare-fun temp141_187 () (_ BitVec 64))
(declare-fun temp141_188 () (_ BitVec 64))
(declare-fun temp141_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp141_190 () (_ BitVec 64))
(declare-fun temp141_192 () (_ BitVec 64))
(declare-fun temp141_193 () (_ BitVec 64))
(declare-fun temp141_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp141_194 () (_ BitVec 64))
(declare-fun temp141_195 () (_ BitVec 64))
(declare-fun temp141_197 () (_ BitVec 64))
(declare-fun temp141_198 () (_ BitVec 64))
(declare-fun temp141_196 () (_ BitVec 64))
(declare-fun temp141_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp141_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp141_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp141_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp141_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp141_204 () (_ BitVec 64))
(declare-fun temp141_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp141_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp141_207 () (_ BitVec 64))
(declare-fun temp141_208 () (_ BitVec 64))
(declare-fun temp141_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp141_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp141_211 () (_ BitVec 64))
(declare-fun temp141_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp141_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp141_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp141_216 () (_ BitVec 64))
(declare-fun temp141_215 () (_ BitVec 64))
(declare-fun temp141_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp141_218 () (_ BitVec 64))
(declare-fun temp141_219 () (_ BitVec 64))
(declare-fun temp141_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp141_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp141_222 () (_ BitVec 64))
(declare-fun temp141_224 () (_ BitVec 64))
(declare-fun temp141_223 () (_ BitVec 64))
(declare-fun temp141_225 () (_ BitVec 64))
(assert (= temp141_1 #x0000000000000001))
(assert (= var77203 temp141_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp141_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp141_2)))
(assert (= temp141_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp141_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp141_4 #x0000000000000000))
(assert (= var210941 temp141_4))
(assert (= temp141_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp141_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp141_6 #x0000000000000000))
(assert (= var210986 temp141_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp141_7 #x0000000000000000))
(assert (= temp141_8 temp141_7))
(assert (= temp141_9 (select ARGNAME_padding_NAMEEND_VAL temp141_8)))
(assert (= temp141_10 #x0000000000000001))
(assert (= temp141_11 temp141_10))
(assert (= temp141_12 (select ARGNAME_padding_NAMEEND_VAL temp141_11)))
(assert (= temp141_13 #x0000000000000002))
(assert (= temp141_14 temp141_13))
(assert (= temp141_15 (select ARGNAME_padding_NAMEEND_VAL temp141_14)))
(assert (= temp141_16 #x0000000000000003))
(assert (= temp141_17 temp141_16))
(assert (= temp141_18 (select ARGNAME_padding_NAMEEND_VAL temp141_17)))
(assert (= temp141_19 #x0000000000000004))
(assert (= temp141_20 temp141_19))
(assert (= temp141_21 (select ARGNAME_padding_NAMEEND_VAL temp141_20)))
(assert (= temp141_22 #x0000000000000005))
(assert (= temp141_23 temp141_22))
(assert (= temp141_24 (select ARGNAME_padding_NAMEEND_VAL temp141_23)))
(assert (= temp141_25 #x0000000000000000))
(assert (= temp141_26 #x0000000000000000))
(assert (= temp141_27 temp141_26))
(assert (= temp141_28 (select ARGNAME_padding_NAMEEND_VAL temp141_27)))
(assert (= temp141_29 #x0000000000000000))
(assert (= temp141_30 #x0000000000000001))
(assert (= temp141_31 temp141_30))
(assert (= temp141_32 (select ARGNAME_padding_NAMEEND_VAL temp141_31)))
(assert (= temp141_33 #x0000000000000000))
(assert (= temp141_34 #x0000000000000002))
(assert (= temp141_35 temp141_34))
(assert (= temp141_36 (select ARGNAME_padding_NAMEEND_VAL temp141_35)))
(assert (= temp141_37 #x0000000000000000))
(assert (= temp141_38 #x0000000000000003))
(assert (= temp141_39 temp141_38))
(assert (= temp141_40 (select ARGNAME_padding_NAMEEND_VAL temp141_39)))
(assert (= temp141_41 #x0000000000000000))
(assert (= temp141_42 #x0000000000000004))
(assert (= temp141_43 temp141_42))
(assert (= temp141_44 (select ARGNAME_padding_NAMEEND_VAL temp141_43)))
(assert (= temp141_45 #x0000000000000000))
(assert (= temp141_46 #x0000000000000005))
(assert (= temp141_47 temp141_46))
(assert (= temp141_48 (select ARGNAME_padding_NAMEEND_VAL temp141_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp141_28 temp141_25)
             (bvslt temp141_32 temp141_29)
             (bvslt temp141_36 temp141_33)
             (bvslt temp141_40 temp141_37)
             (bvslt temp141_44 temp141_41)
             (bvslt temp141_48 temp141_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp141_49 #x0000000000000000))
(assert (= var1191714 temp141_49))
(assert (= temp141_50 #x0000000000000000))
(assert (= temp141_51 temp141_50))
(assert (= temp141_52 (select ARGNAME_output_padding_NAMEEND_VAL temp141_51)))
(assert (= temp141_53 #x0000000000000001))
(assert (= temp141_54 temp141_53))
(assert (= temp141_55 (select ARGNAME_output_padding_NAMEEND_VAL temp141_54)))
(assert (= temp141_56 #x0000000000000002))
(assert (= temp141_57 temp141_56))
(assert (= temp141_58 (select ARGNAME_output_padding_NAMEEND_VAL temp141_57)))
(assert (= temp141_59 #x0000000000000003))
(assert (= temp141_60 temp141_59))
(assert (= temp141_61 (select ARGNAME_output_padding_NAMEEND_VAL temp141_60)))
(assert (= temp141_62 #x0000000000000004))
(assert (= temp141_63 temp141_62))
(assert (= temp141_64 (select ARGNAME_output_padding_NAMEEND_VAL temp141_63)))
(assert (= temp141_65 #x0000000000000005))
(assert (= temp141_66 temp141_65))
(assert (= temp141_67 (select ARGNAME_output_padding_NAMEEND_VAL temp141_66)))
(assert (= temp141_68 #x0000000000000000))
(assert (= temp141_69 #x0000000000000000))
(assert (= temp141_70 temp141_69))
(assert (= temp141_71 (select ARGNAME_output_padding_NAMEEND_VAL temp141_70)))
(assert (= temp141_72 #x0000000000000000))
(assert (= temp141_73 #x0000000000000001))
(assert (= temp141_74 temp141_73))
(assert (= temp141_75 (select ARGNAME_output_padding_NAMEEND_VAL temp141_74)))
(assert (= temp141_76 #x0000000000000000))
(assert (= temp141_77 #x0000000000000002))
(assert (= temp141_78 temp141_77))
(assert (= temp141_79 (select ARGNAME_output_padding_NAMEEND_VAL temp141_78)))
(assert (= temp141_80 #x0000000000000000))
(assert (= temp141_81 #x0000000000000003))
(assert (= temp141_82 temp141_81))
(assert (= temp141_83 (select ARGNAME_output_padding_NAMEEND_VAL temp141_82)))
(assert (= temp141_84 #x0000000000000000))
(assert (= temp141_85 #x0000000000000004))
(assert (= temp141_86 temp141_85))
(assert (= temp141_87 (select ARGNAME_output_padding_NAMEEND_VAL temp141_86)))
(assert (= temp141_88 #x0000000000000000))
(assert (= temp141_89 #x0000000000000005))
(assert (= temp141_90 temp141_89))
(assert (= temp141_91 (select ARGNAME_output_padding_NAMEEND_VAL temp141_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp141_71 temp141_68)
             (bvslt temp141_75 temp141_72)
             (bvslt temp141_79 temp141_76)
             (bvslt temp141_83 temp141_80)
             (bvslt temp141_87 temp141_84)
             (bvslt temp141_91 temp141_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp141_92 #x0000000000000000))
(assert (= var1191725 temp141_92))
(assert (= temp141_93 #x0000000000000000))
(assert (= temp141_94 temp141_93))
(assert (= temp141_95 (select ARGNAME_stride_NAMEEND_VAL temp141_94)))
(assert (= temp141_96 #x0000000000000001))
(assert (= temp141_97 temp141_96))
(assert (= temp141_98 (select ARGNAME_stride_NAMEEND_VAL temp141_97)))
(assert (= temp141_99 #x0000000000000002))
(assert (= temp141_100 temp141_99))
(assert (= temp141_101 (select ARGNAME_stride_NAMEEND_VAL temp141_100)))
(assert (= temp141_102 #x0000000000000003))
(assert (= temp141_103 temp141_102))
(assert (= temp141_104 (select ARGNAME_stride_NAMEEND_VAL temp141_103)))
(assert (= temp141_105 #x0000000000000004))
(assert (= temp141_106 temp141_105))
(assert (= temp141_107 (select ARGNAME_stride_NAMEEND_VAL temp141_106)))
(assert (= temp141_108 #x0000000000000005))
(assert (= temp141_109 temp141_108))
(assert (= temp141_110 (select ARGNAME_stride_NAMEEND_VAL temp141_109)))
(assert (= temp141_111 #x0000000000000000))
(assert (= temp141_112 #x0000000000000000))
(assert (= temp141_113 temp141_112))
(assert (= temp141_114 (select ARGNAME_stride_NAMEEND_VAL temp141_113)))
(assert (= temp141_115 #x0000000000000000))
(assert (= temp141_116 #x0000000000000001))
(assert (= temp141_117 temp141_116))
(assert (= temp141_118 (select ARGNAME_stride_NAMEEND_VAL temp141_117)))
(assert (= temp141_119 #x0000000000000000))
(assert (= temp141_120 #x0000000000000002))
(assert (= temp141_121 temp141_120))
(assert (= temp141_122 (select ARGNAME_stride_NAMEEND_VAL temp141_121)))
(assert (= temp141_123 #x0000000000000000))
(assert (= temp141_124 #x0000000000000003))
(assert (= temp141_125 temp141_124))
(assert (= temp141_126 (select ARGNAME_stride_NAMEEND_VAL temp141_125)))
(assert (= temp141_127 #x0000000000000000))
(assert (= temp141_128 #x0000000000000004))
(assert (= temp141_129 temp141_128))
(assert (= temp141_130 (select ARGNAME_stride_NAMEEND_VAL temp141_129)))
(assert (= temp141_131 #x0000000000000000))
(assert (= temp141_132 #x0000000000000005))
(assert (= temp141_133 temp141_132))
(assert (= temp141_134 (select ARGNAME_stride_NAMEEND_VAL temp141_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp141_114 temp141_111)
             (bvsle temp141_118 temp141_115)
             (bvsle temp141_122 temp141_119)
             (bvsle temp141_126 temp141_123)
             (bvsle temp141_130 temp141_127)
             (bvsle temp141_134 temp141_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp141_135 #x0000000000000000))
(assert (= var1191735 temp141_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp141_136 #x0000000000000001))
(assert (= var1191747 temp141_136))
(assert (= temp141_137 #x0000000000000000))
(assert (= var1179826 temp141_137))
(assert (= temp141_138 #x0000000000000000))
(assert (= temp141_139 temp141_138))
(assert (= temp141_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp141_139)))
(assert (= temp141_141 #x0000000000000001))
(assert (= temp141_142 temp141_141))
(assert (= temp141_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp141_142)))
(assert (= temp141_144 #x0000000000000002))
(assert (= temp141_145 temp141_144))
(assert (= temp141_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp141_145)))
(assert (= temp141_147 #x0000000000000003))
(assert (= temp141_148 temp141_147))
(assert (= temp141_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp141_148)))
(assert (= temp141_150 #x0000000000000004))
(assert (= temp141_151 temp141_150))
(assert (= temp141_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp141_151)))
(assert (= temp141_153 #x0000000000000005))
(assert (= temp141_154 temp141_153))
(assert (= temp141_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp141_154)))
(assert (= temp141_157 var1179826))
(assert (= temp141_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp141_157)))
(assert (= temp141_156 temp141_158))
(assert (= var1191780
   (ite (bvslt temp141_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp141_159 #x0000000000000000))
(assert (= var1191780 temp141_159))
(assert (= temp141_160 #x0000000000000000))
(assert (= var1179826 temp141_160))
(assert (= temp141_162 var1179826))
(assert (= temp141_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp141_162)))
(assert (= temp141_161 temp141_163))
(assert (= var1191802 (bvsmod temp141_161 ARGNAME_groups_NAMEEND)))
(assert (= temp141_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp141_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp141_165 #x0000000000000001))
(assert (= var1191803 temp141_165))
(assert (= temp141_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp141_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp141_167 #x0000000000000001))
(assert (= var1191823 temp141_167))
(assert (= temp141_168 #x0000000000000001))
(assert (= var1180714 temp141_168))
(assert (= temp141_169 #x0000000000000000))
(assert (= temp141_170 temp141_169))
(assert (= temp141_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp141_170)))
(assert (= temp141_172 #x0000000000000001))
(assert (= temp141_173 temp141_172))
(assert (= temp141_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp141_173)))
(assert (= temp141_175 #x0000000000000002))
(assert (= temp141_176 temp141_175))
(assert (= temp141_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp141_176)))
(assert (= temp141_178 #x0000000000000003))
(assert (= temp141_179 temp141_178))
(assert (= temp141_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp141_179)))
(assert (= temp141_181 #x0000000000000004))
(assert (= temp141_182 temp141_181))
(assert (= temp141_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp141_182)))
(assert (= temp141_184 #x0000000000000005))
(assert (= temp141_185 temp141_184))
(assert (= temp141_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp141_185)))
(assert (= temp141_187 #x0000000000000000))
(assert (= temp141_188
   (ite (bvslt var1180714 temp141_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp141_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp141_188)))
(assert (= var1191831 temp141_189))
(assert (bvslt (ite (bvslt var1180714 temp141_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp141_190 #x0000000000000001))
(assert (= var1180714 temp141_190))
(assert (= temp141_192 var1180714))
(assert (= temp141_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp141_192)))
(assert (= temp141_191 temp141_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp141_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp141_194 #x0000000000000001))
(assert (= var1191836 temp141_194))
(assert (= temp141_195 #x0000000000000000))
(assert (= var1179826 temp141_195))
(assert (= temp141_197 var1179826))
(assert (= temp141_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp141_197)))
(assert (= temp141_196 temp141_198))
(assert (= temp141_199 #x0000000000000002))
(assert (= var1586025 temp141_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp141_200 #x0000000000000001))
(assert (= var1191993 temp141_200))
(assert (= temp141_201 #x0000000000000001))
(assert (= var2700303 temp141_201))
(assert (= temp141_202 #x0000000000000001))
(assert (= var2962447 temp141_202))
(assert (= temp141_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp141_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp141_204 #x0000000000000001))
(assert (= var211058 temp141_204))
(assert (= temp141_205 #x0000000000000001))
(assert (= var211188 temp141_205))
(assert (= var3879401 var211188))
(assert (= temp141_206 #x0000000000000000))
(assert (= var3866802 temp141_206))
(assert (= temp141_207 #x0000000000000000))
(assert (= temp141_208
   (ite (bvslt var3866802 temp141_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp141_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp141_208)))
(assert (= var3879420 temp141_209))
(assert (bvslt (ite (bvslt var3866802 temp141_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp141_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp141_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp141_211 #x0000000000000001))
(assert (= var3879421 temp141_211))
(assert (= temp141_212 #x0000000000000000))
(assert (= var4079423 temp141_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp141_213 #x0000000000000002))
(assert (= var4208259 temp141_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp141_214 #x0000000000000000))
(assert (= var4273820 temp141_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp141_216 #xffffffffffffffff))
(assert (= temp141_215 temp141_216))
(assert (= temp141_217 #x0000000000000001))
(assert (= var197674 temp141_217))
(assert (= temp141_218 #x0000000000000000))
(assert (= temp141_219
   (ite (bvslt var197674 temp141_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp141_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp141_219)))
(assert (= var211595 temp141_220))
(assert (bvslt (ite (bvslt var197674 temp141_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp141_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp141_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp141_222 #x0000000000000001))
(assert (= var211596 temp141_222))
(assert (= temp141_224 #xffffffffffffffff))
(assert (= temp141_223 temp141_224))
(assert (= temp141_225 #x0000000000000001))
(assert (= var211058 temp141_225))
(model-add temp141_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp141_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp141_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp141_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





