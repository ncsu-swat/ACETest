(declare-fun temp10957_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10957_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10957_3 () (_ BitVec 64))
(declare-fun temp10957_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10957_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10957_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10957_7 () (_ BitVec 64))
(declare-fun temp10957_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10957_9 () (_ BitVec 64))
(declare-fun temp10957_10 () (_ BitVec 64))
(declare-fun temp10957_11 () (_ BitVec 64))
(declare-fun temp10957_12 () (_ BitVec 64))
(declare-fun temp10957_13 () (_ BitVec 64))
(declare-fun temp10957_14 () (_ BitVec 64))
(declare-fun temp10957_15 () (_ BitVec 64))
(declare-fun temp10957_16 () (_ BitVec 64))
(declare-fun temp10957_17 () (_ BitVec 64))
(declare-fun temp10957_18 () (_ BitVec 64))
(declare-fun temp10957_19 () (_ BitVec 64))
(declare-fun temp10957_20 () (_ BitVec 64))
(declare-fun temp10957_21 () (_ BitVec 64))
(declare-fun temp10957_22 () (_ BitVec 64))
(declare-fun temp10957_23 () (_ BitVec 64))
(declare-fun temp10957_24 () (_ BitVec 64))
(declare-fun temp10957_25 () (_ BitVec 64))
(declare-fun temp10957_26 () (_ BitVec 64))
(declare-fun temp10957_27 () (_ BitVec 64))
(declare-fun temp10957_28 () (_ BitVec 64))
(declare-fun temp10957_29 () (_ BitVec 64))
(declare-fun temp10957_30 () (_ BitVec 64))
(declare-fun temp10957_31 () (_ BitVec 64))
(declare-fun temp10957_32 () (_ BitVec 64))
(declare-fun temp10957_33 () (_ BitVec 64))
(declare-fun temp10957_34 () (_ BitVec 64))
(declare-fun temp10957_35 () (_ BitVec 64))
(declare-fun temp10957_36 () (_ BitVec 64))
(declare-fun temp10957_37 () (_ BitVec 64))
(declare-fun temp10957_38 () (_ BitVec 64))
(declare-fun temp10957_39 () (_ BitVec 64))
(declare-fun temp10957_40 () (_ BitVec 64))
(declare-fun temp10957_41 () (_ BitVec 64))
(declare-fun temp10957_42 () (_ BitVec 64))
(declare-fun temp10957_43 () (_ BitVec 64))
(declare-fun temp10957_44 () (_ BitVec 64))
(declare-fun temp10957_45 () (_ BitVec 64))
(declare-fun temp10957_46 () (_ BitVec 64))
(declare-fun temp10957_47 () (_ BitVec 64))
(declare-fun temp10957_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10957_49 () (_ BitVec 64))
(declare-fun temp10957_50 () (_ BitVec 64))
(declare-fun temp10957_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10957_52 () (_ BitVec 64))
(declare-fun temp10957_53 () (_ BitVec 64))
(declare-fun temp10957_54 () (_ BitVec 64))
(declare-fun temp10957_55 () (_ BitVec 64))
(declare-fun temp10957_56 () (_ BitVec 64))
(declare-fun temp10957_57 () (_ BitVec 64))
(declare-fun temp10957_58 () (_ BitVec 64))
(declare-fun temp10957_59 () (_ BitVec 64))
(declare-fun temp10957_60 () (_ BitVec 64))
(declare-fun temp10957_61 () (_ BitVec 64))
(declare-fun temp10957_62 () (_ BitVec 64))
(declare-fun temp10957_63 () (_ BitVec 64))
(declare-fun temp10957_64 () (_ BitVec 64))
(declare-fun temp10957_65 () (_ BitVec 64))
(declare-fun temp10957_66 () (_ BitVec 64))
(declare-fun temp10957_67 () (_ BitVec 64))
(declare-fun temp10957_68 () (_ BitVec 64))
(declare-fun temp10957_69 () (_ BitVec 64))
(declare-fun temp10957_70 () (_ BitVec 64))
(declare-fun temp10957_71 () (_ BitVec 64))
(declare-fun temp10957_72 () (_ BitVec 64))
(declare-fun temp10957_73 () (_ BitVec 64))
(declare-fun temp10957_74 () (_ BitVec 64))
(declare-fun temp10957_75 () (_ BitVec 64))
(declare-fun temp10957_76 () (_ BitVec 64))
(declare-fun temp10957_77 () (_ BitVec 64))
(declare-fun temp10957_78 () (_ BitVec 64))
(declare-fun temp10957_79 () (_ BitVec 64))
(declare-fun temp10957_80 () (_ BitVec 64))
(declare-fun temp10957_81 () (_ BitVec 64))
(declare-fun temp10957_82 () (_ BitVec 64))
(declare-fun temp10957_83 () (_ BitVec 64))
(declare-fun temp10957_84 () (_ BitVec 64))
(declare-fun temp10957_85 () (_ BitVec 64))
(declare-fun temp10957_86 () (_ BitVec 64))
(declare-fun temp10957_87 () (_ BitVec 64))
(declare-fun temp10957_88 () (_ BitVec 64))
(declare-fun temp10957_89 () (_ BitVec 64))
(declare-fun temp10957_90 () (_ BitVec 64))
(declare-fun temp10957_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10957_92 () (_ BitVec 64))
(declare-fun temp10957_93 () (_ BitVec 64))
(declare-fun temp10957_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10957_95 () (_ BitVec 64))
(declare-fun temp10957_96 () (_ BitVec 64))
(declare-fun temp10957_97 () (_ BitVec 64))
(declare-fun temp10957_98 () (_ BitVec 64))
(declare-fun temp10957_99 () (_ BitVec 64))
(declare-fun temp10957_100 () (_ BitVec 64))
(declare-fun temp10957_101 () (_ BitVec 64))
(declare-fun temp10957_102 () (_ BitVec 64))
(declare-fun temp10957_103 () (_ BitVec 64))
(declare-fun temp10957_104 () (_ BitVec 64))
(declare-fun temp10957_105 () (_ BitVec 64))
(declare-fun temp10957_106 () (_ BitVec 64))
(declare-fun temp10957_107 () (_ BitVec 64))
(declare-fun temp10957_108 () (_ BitVec 64))
(declare-fun temp10957_109 () (_ BitVec 64))
(declare-fun temp10957_110 () (_ BitVec 64))
(declare-fun temp10957_111 () (_ BitVec 64))
(declare-fun temp10957_112 () (_ BitVec 64))
(declare-fun temp10957_113 () (_ BitVec 64))
(declare-fun temp10957_114 () (_ BitVec 64))
(declare-fun temp10957_115 () (_ BitVec 64))
(declare-fun temp10957_116 () (_ BitVec 64))
(declare-fun temp10957_117 () (_ BitVec 64))
(declare-fun temp10957_118 () (_ BitVec 64))
(declare-fun temp10957_119 () (_ BitVec 64))
(declare-fun temp10957_120 () (_ BitVec 64))
(declare-fun temp10957_121 () (_ BitVec 64))
(declare-fun temp10957_122 () (_ BitVec 64))
(declare-fun temp10957_123 () (_ BitVec 64))
(declare-fun temp10957_124 () (_ BitVec 64))
(declare-fun temp10957_125 () (_ BitVec 64))
(declare-fun temp10957_126 () (_ BitVec 64))
(declare-fun temp10957_127 () (_ BitVec 64))
(declare-fun temp10957_128 () (_ BitVec 64))
(declare-fun temp10957_129 () (_ BitVec 64))
(declare-fun temp10957_130 () (_ BitVec 64))
(declare-fun temp10957_131 () (_ BitVec 64))
(declare-fun temp10957_132 () (_ BitVec 64))
(declare-fun temp10957_133 () (_ BitVec 64))
(declare-fun temp10957_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10957_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10957_136 () (_ BitVec 64))
(declare-fun temp10957_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10957_138 () (_ BitVec 64))
(declare-fun temp10957_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10957_140 () (_ BitVec 64))
(declare-fun temp10957_141 () (_ BitVec 64))
(declare-fun temp10957_142 () (_ BitVec 64))
(declare-fun temp10957_143 () (_ BitVec 64))
(declare-fun temp10957_144 () (_ BitVec 64))
(declare-fun temp10957_145 () (_ BitVec 64))
(declare-fun temp10957_146 () (_ BitVec 64))
(declare-fun temp10957_147 () (_ BitVec 64))
(declare-fun temp10957_148 () (_ BitVec 64))
(declare-fun temp10957_149 () (_ BitVec 64))
(declare-fun temp10957_150 () (_ BitVec 64))
(declare-fun temp10957_151 () (_ BitVec 64))
(declare-fun temp10957_152 () (_ BitVec 64))
(declare-fun temp10957_153 () (_ BitVec 64))
(declare-fun temp10957_154 () (_ BitVec 64))
(declare-fun temp10957_155 () (_ BitVec 64))
(declare-fun temp10957_157 () (_ BitVec 64))
(declare-fun temp10957_158 () (_ BitVec 64))
(declare-fun temp10957_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10957_159 () (_ BitVec 64))
(declare-fun temp10957_160 () (_ BitVec 64))
(declare-fun temp10957_162 () (_ BitVec 64))
(declare-fun temp10957_163 () (_ BitVec 64))
(declare-fun temp10957_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10957_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10957_165 () (_ BitVec 64))
(declare-fun temp10957_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10957_167 () (_ BitVec 64))
(declare-fun temp10957_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10957_169 () (_ BitVec 64))
(declare-fun temp10957_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10957_171 () (_ BitVec 64))
(declare-fun temp10957_172 () (_ BitVec 64))
(declare-fun temp10957_173 () (_ BitVec 64))
(declare-fun temp10957_174 () (_ BitVec 64))
(declare-fun temp10957_175 () (_ BitVec 64))
(declare-fun temp10957_176 () (_ BitVec 64))
(declare-fun temp10957_177 () (_ BitVec 64))
(declare-fun temp10957_178 () (_ BitVec 64))
(declare-fun temp10957_179 () (_ BitVec 64))
(declare-fun temp10957_180 () (_ BitVec 64))
(declare-fun temp10957_181 () (_ BitVec 64))
(declare-fun temp10957_182 () (_ BitVec 64))
(declare-fun temp10957_183 () (_ BitVec 64))
(declare-fun temp10957_184 () (_ BitVec 64))
(declare-fun temp10957_185 () (_ BitVec 64))
(declare-fun temp10957_186 () (_ BitVec 64))
(declare-fun temp10957_187 () (_ BitVec 64))
(declare-fun temp10957_188 () (_ BitVec 64))
(declare-fun temp10957_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10957_190 () (_ BitVec 64))
(declare-fun temp10957_192 () (_ BitVec 64))
(declare-fun temp10957_193 () (_ BitVec 64))
(declare-fun temp10957_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10957_194 () (_ BitVec 64))
(declare-fun temp10957_195 () (_ BitVec 64))
(declare-fun temp10957_197 () (_ BitVec 64))
(declare-fun temp10957_198 () (_ BitVec 64))
(declare-fun temp10957_196 () (_ BitVec 64))
(declare-fun temp10957_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10957_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10957_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10957_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10957_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10957_204 () (_ BitVec 64))
(declare-fun temp10957_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10957_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10957_207 () (_ BitVec 64))
(declare-fun temp10957_208 () (_ BitVec 64))
(declare-fun temp10957_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10957_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10957_211 () (_ BitVec 64))
(declare-fun temp10957_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10957_213 () (_ BitVec 64))
(declare-fun temp10957_214 () (_ BitVec 64))
(declare-fun temp10957_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10957_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10957_217 () (_ BitVec 64))
(declare-fun temp10957_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10957_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10957_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5058960 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun temp10957_221 () (_ BitVec 64))
(assert (= temp10957_1 #x0000000000000001))
(assert (= var77203 temp10957_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10957_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10957_2)))
(assert (= temp10957_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10957_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10957_4 #x0000000000000000))
(assert (= var210941 temp10957_4))
(assert (= temp10957_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10957_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10957_6 #x0000000000000000))
(assert (= var210986 temp10957_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10957_7 #x0000000000000000))
(assert (= temp10957_8 temp10957_7))
(assert (= temp10957_9 (select ARGNAME_padding_NAMEEND_VAL temp10957_8)))
(assert (= temp10957_10 #x0000000000000001))
(assert (= temp10957_11 temp10957_10))
(assert (= temp10957_12 (select ARGNAME_padding_NAMEEND_VAL temp10957_11)))
(assert (= temp10957_13 #x0000000000000002))
(assert (= temp10957_14 temp10957_13))
(assert (= temp10957_15 (select ARGNAME_padding_NAMEEND_VAL temp10957_14)))
(assert (= temp10957_16 #x0000000000000003))
(assert (= temp10957_17 temp10957_16))
(assert (= temp10957_18 (select ARGNAME_padding_NAMEEND_VAL temp10957_17)))
(assert (= temp10957_19 #x0000000000000004))
(assert (= temp10957_20 temp10957_19))
(assert (= temp10957_21 (select ARGNAME_padding_NAMEEND_VAL temp10957_20)))
(assert (= temp10957_22 #x0000000000000005))
(assert (= temp10957_23 temp10957_22))
(assert (= temp10957_24 (select ARGNAME_padding_NAMEEND_VAL temp10957_23)))
(assert (= temp10957_25 #x0000000000000000))
(assert (= temp10957_26 #x0000000000000000))
(assert (= temp10957_27 temp10957_26))
(assert (= temp10957_28 (select ARGNAME_padding_NAMEEND_VAL temp10957_27)))
(assert (= temp10957_29 #x0000000000000000))
(assert (= temp10957_30 #x0000000000000001))
(assert (= temp10957_31 temp10957_30))
(assert (= temp10957_32 (select ARGNAME_padding_NAMEEND_VAL temp10957_31)))
(assert (= temp10957_33 #x0000000000000000))
(assert (= temp10957_34 #x0000000000000002))
(assert (= temp10957_35 temp10957_34))
(assert (= temp10957_36 (select ARGNAME_padding_NAMEEND_VAL temp10957_35)))
(assert (= temp10957_37 #x0000000000000000))
(assert (= temp10957_38 #x0000000000000003))
(assert (= temp10957_39 temp10957_38))
(assert (= temp10957_40 (select ARGNAME_padding_NAMEEND_VAL temp10957_39)))
(assert (= temp10957_41 #x0000000000000000))
(assert (= temp10957_42 #x0000000000000004))
(assert (= temp10957_43 temp10957_42))
(assert (= temp10957_44 (select ARGNAME_padding_NAMEEND_VAL temp10957_43)))
(assert (= temp10957_45 #x0000000000000000))
(assert (= temp10957_46 #x0000000000000005))
(assert (= temp10957_47 temp10957_46))
(assert (= temp10957_48 (select ARGNAME_padding_NAMEEND_VAL temp10957_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10957_28 temp10957_25)
             (bvslt temp10957_32 temp10957_29)
             (bvslt temp10957_36 temp10957_33)
             (bvslt temp10957_40 temp10957_37)
             (bvslt temp10957_44 temp10957_41)
             (bvslt temp10957_48 temp10957_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10957_49 #x0000000000000000))
(assert (= var1191714 temp10957_49))
(assert (= temp10957_50 #x0000000000000000))
(assert (= temp10957_51 temp10957_50))
(assert (= temp10957_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10957_51)))
(assert (= temp10957_53 #x0000000000000001))
(assert (= temp10957_54 temp10957_53))
(assert (= temp10957_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10957_54)))
(assert (= temp10957_56 #x0000000000000002))
(assert (= temp10957_57 temp10957_56))
(assert (= temp10957_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10957_57)))
(assert (= temp10957_59 #x0000000000000003))
(assert (= temp10957_60 temp10957_59))
(assert (= temp10957_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10957_60)))
(assert (= temp10957_62 #x0000000000000004))
(assert (= temp10957_63 temp10957_62))
(assert (= temp10957_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10957_63)))
(assert (= temp10957_65 #x0000000000000005))
(assert (= temp10957_66 temp10957_65))
(assert (= temp10957_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10957_66)))
(assert (= temp10957_68 #x0000000000000000))
(assert (= temp10957_69 #x0000000000000000))
(assert (= temp10957_70 temp10957_69))
(assert (= temp10957_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10957_70)))
(assert (= temp10957_72 #x0000000000000000))
(assert (= temp10957_73 #x0000000000000001))
(assert (= temp10957_74 temp10957_73))
(assert (= temp10957_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10957_74)))
(assert (= temp10957_76 #x0000000000000000))
(assert (= temp10957_77 #x0000000000000002))
(assert (= temp10957_78 temp10957_77))
(assert (= temp10957_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10957_78)))
(assert (= temp10957_80 #x0000000000000000))
(assert (= temp10957_81 #x0000000000000003))
(assert (= temp10957_82 temp10957_81))
(assert (= temp10957_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10957_82)))
(assert (= temp10957_84 #x0000000000000000))
(assert (= temp10957_85 #x0000000000000004))
(assert (= temp10957_86 temp10957_85))
(assert (= temp10957_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10957_86)))
(assert (= temp10957_88 #x0000000000000000))
(assert (= temp10957_89 #x0000000000000005))
(assert (= temp10957_90 temp10957_89))
(assert (= temp10957_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10957_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10957_71 temp10957_68)
             (bvslt temp10957_75 temp10957_72)
             (bvslt temp10957_79 temp10957_76)
             (bvslt temp10957_83 temp10957_80)
             (bvslt temp10957_87 temp10957_84)
             (bvslt temp10957_91 temp10957_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10957_92 #x0000000000000000))
(assert (= var1191725 temp10957_92))
(assert (= temp10957_93 #x0000000000000000))
(assert (= temp10957_94 temp10957_93))
(assert (= temp10957_95 (select ARGNAME_stride_NAMEEND_VAL temp10957_94)))
(assert (= temp10957_96 #x0000000000000001))
(assert (= temp10957_97 temp10957_96))
(assert (= temp10957_98 (select ARGNAME_stride_NAMEEND_VAL temp10957_97)))
(assert (= temp10957_99 #x0000000000000002))
(assert (= temp10957_100 temp10957_99))
(assert (= temp10957_101 (select ARGNAME_stride_NAMEEND_VAL temp10957_100)))
(assert (= temp10957_102 #x0000000000000003))
(assert (= temp10957_103 temp10957_102))
(assert (= temp10957_104 (select ARGNAME_stride_NAMEEND_VAL temp10957_103)))
(assert (= temp10957_105 #x0000000000000004))
(assert (= temp10957_106 temp10957_105))
(assert (= temp10957_107 (select ARGNAME_stride_NAMEEND_VAL temp10957_106)))
(assert (= temp10957_108 #x0000000000000005))
(assert (= temp10957_109 temp10957_108))
(assert (= temp10957_110 (select ARGNAME_stride_NAMEEND_VAL temp10957_109)))
(assert (= temp10957_111 #x0000000000000000))
(assert (= temp10957_112 #x0000000000000000))
(assert (= temp10957_113 temp10957_112))
(assert (= temp10957_114 (select ARGNAME_stride_NAMEEND_VAL temp10957_113)))
(assert (= temp10957_115 #x0000000000000000))
(assert (= temp10957_116 #x0000000000000001))
(assert (= temp10957_117 temp10957_116))
(assert (= temp10957_118 (select ARGNAME_stride_NAMEEND_VAL temp10957_117)))
(assert (= temp10957_119 #x0000000000000000))
(assert (= temp10957_120 #x0000000000000002))
(assert (= temp10957_121 temp10957_120))
(assert (= temp10957_122 (select ARGNAME_stride_NAMEEND_VAL temp10957_121)))
(assert (= temp10957_123 #x0000000000000000))
(assert (= temp10957_124 #x0000000000000003))
(assert (= temp10957_125 temp10957_124))
(assert (= temp10957_126 (select ARGNAME_stride_NAMEEND_VAL temp10957_125)))
(assert (= temp10957_127 #x0000000000000000))
(assert (= temp10957_128 #x0000000000000004))
(assert (= temp10957_129 temp10957_128))
(assert (= temp10957_130 (select ARGNAME_stride_NAMEEND_VAL temp10957_129)))
(assert (= temp10957_131 #x0000000000000000))
(assert (= temp10957_132 #x0000000000000005))
(assert (= temp10957_133 temp10957_132))
(assert (= temp10957_134 (select ARGNAME_stride_NAMEEND_VAL temp10957_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10957_114 temp10957_111)
             (bvsle temp10957_118 temp10957_115)
             (bvsle temp10957_122 temp10957_119)
             (bvsle temp10957_126 temp10957_123)
             (bvsle temp10957_130 temp10957_127)
             (bvsle temp10957_134 temp10957_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10957_135 #x0000000000000000))
(assert (= var1191735 temp10957_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10957_136 #x0000000000000001))
(assert (= var1191747 temp10957_136))
(assert (= temp10957_137 #x0000000000000000))
(assert (= var1179826 temp10957_137))
(assert (= temp10957_138 #x0000000000000000))
(assert (= temp10957_139 temp10957_138))
(assert (= temp10957_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10957_139)))
(assert (= temp10957_141 #x0000000000000001))
(assert (= temp10957_142 temp10957_141))
(assert (= temp10957_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10957_142)))
(assert (= temp10957_144 #x0000000000000002))
(assert (= temp10957_145 temp10957_144))
(assert (= temp10957_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10957_145)))
(assert (= temp10957_147 #x0000000000000003))
(assert (= temp10957_148 temp10957_147))
(assert (= temp10957_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10957_148)))
(assert (= temp10957_150 #x0000000000000004))
(assert (= temp10957_151 temp10957_150))
(assert (= temp10957_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10957_151)))
(assert (= temp10957_153 #x0000000000000005))
(assert (= temp10957_154 temp10957_153))
(assert (= temp10957_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10957_154)))
(assert (= temp10957_157 var1179826))
(assert (= temp10957_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10957_157)))
(assert (= temp10957_156 temp10957_158))
(assert (= var1191780
   (ite (bvslt temp10957_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10957_159 #x0000000000000000))
(assert (= var1191780 temp10957_159))
(assert (= temp10957_160 #x0000000000000000))
(assert (= var1179826 temp10957_160))
(assert (= temp10957_162 var1179826))
(assert (= temp10957_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10957_162)))
(assert (= temp10957_161 temp10957_163))
(assert (= var1191802 (bvsmod temp10957_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10957_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10957_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10957_165 #x0000000000000001))
(assert (= var1191803 temp10957_165))
(assert (= temp10957_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10957_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10957_167 #x0000000000000001))
(assert (= var1191823 temp10957_167))
(assert (= temp10957_168 #x0000000000000001))
(assert (= var1180714 temp10957_168))
(assert (= temp10957_169 #x0000000000000000))
(assert (= temp10957_170 temp10957_169))
(assert (= temp10957_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10957_170)))
(assert (= temp10957_172 #x0000000000000001))
(assert (= temp10957_173 temp10957_172))
(assert (= temp10957_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10957_173)))
(assert (= temp10957_175 #x0000000000000002))
(assert (= temp10957_176 temp10957_175))
(assert (= temp10957_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10957_176)))
(assert (= temp10957_178 #x0000000000000003))
(assert (= temp10957_179 temp10957_178))
(assert (= temp10957_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10957_179)))
(assert (= temp10957_181 #x0000000000000004))
(assert (= temp10957_182 temp10957_181))
(assert (= temp10957_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10957_182)))
(assert (= temp10957_184 #x0000000000000005))
(assert (= temp10957_185 temp10957_184))
(assert (= temp10957_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10957_185)))
(assert (= temp10957_187 #x0000000000000000))
(assert (= temp10957_188
   (ite (bvslt var1180714 temp10957_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10957_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10957_188)))
(assert (= var1191831 temp10957_189))
(assert (bvslt (ite (bvslt var1180714 temp10957_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10957_190 #x0000000000000001))
(assert (= var1180714 temp10957_190))
(assert (= temp10957_192 var1180714))
(assert (= temp10957_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10957_192)))
(assert (= temp10957_191 temp10957_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10957_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10957_194 #x0000000000000001))
(assert (= var1191836 temp10957_194))
(assert (= temp10957_195 #x0000000000000000))
(assert (= var1179826 temp10957_195))
(assert (= temp10957_197 var1179826))
(assert (= temp10957_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10957_197)))
(assert (= temp10957_196 temp10957_198))
(assert (= temp10957_199 #x0000000000000002))
(assert (= var1586025 temp10957_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10957_200 #x0000000000000001))
(assert (= var1191993 temp10957_200))
(assert (= temp10957_201 #x0000000000000001))
(assert (= var2700303 temp10957_201))
(assert (= temp10957_202 #x0000000000000001))
(assert (= var2962447 temp10957_202))
(assert (= temp10957_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10957_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10957_204 #x0000000000000001))
(assert (= var211058 temp10957_204))
(assert (= temp10957_205 #x0000000000000001))
(assert (= var211188 temp10957_205))
(assert (= var3879401 var211188))
(assert (= temp10957_206 #x0000000000000000))
(assert (= var3866802 temp10957_206))
(assert (= temp10957_207 #x0000000000000000))
(assert (= temp10957_208
   (ite (bvslt var3866802 temp10957_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10957_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10957_208)))
(assert (= var3879420 temp10957_209))
(assert (bvslt (ite (bvslt var3866802 temp10957_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10957_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10957_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10957_211 #x0000000000000000))
(assert (= var3879421 temp10957_211))
(assert (= temp10957_212 #x0000000000000001))
(assert (= var3867690 temp10957_212))
(assert (= temp10957_213 #x0000000000000000))
(assert (= temp10957_214
   (ite (bvslt var3867690 temp10957_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10957_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10957_214)))
(assert (= var3879423 temp10957_215))
(assert (bvslt (ite (bvslt var3867690 temp10957_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10957_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10957_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10957_217 #x0000000000000001))
(assert (= var3879424 temp10957_217))
(assert (= temp10957_218 #x0000000000000000))
(assert (= var4133117 temp10957_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10957_219 #x0000000000000002))
(assert (= var4339331 temp10957_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10957_220 #x0000000000000000))
(assert (= var4404892 temp10957_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5058960 var211201))
(assert (= var5321104 var211201))
(assert (= temp10957_221 #x0000000000000001))
(assert (= var211058 temp10957_221))
(model-add temp10957_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10957_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10957_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10957_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



