(declare-fun temp10580_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10580_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10580_3 () (_ BitVec 64))
(declare-fun temp10580_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10580_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10580_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10580_7 () (_ BitVec 64))
(declare-fun temp10580_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10580_9 () (_ BitVec 64))
(declare-fun temp10580_10 () (_ BitVec 64))
(declare-fun temp10580_11 () (_ BitVec 64))
(declare-fun temp10580_12 () (_ BitVec 64))
(declare-fun temp10580_13 () (_ BitVec 64))
(declare-fun temp10580_14 () (_ BitVec 64))
(declare-fun temp10580_15 () (_ BitVec 64))
(declare-fun temp10580_16 () (_ BitVec 64))
(declare-fun temp10580_17 () (_ BitVec 64))
(declare-fun temp10580_18 () (_ BitVec 64))
(declare-fun temp10580_19 () (_ BitVec 64))
(declare-fun temp10580_20 () (_ BitVec 64))
(declare-fun temp10580_21 () (_ BitVec 64))
(declare-fun temp10580_22 () (_ BitVec 64))
(declare-fun temp10580_23 () (_ BitVec 64))
(declare-fun temp10580_24 () (_ BitVec 64))
(declare-fun temp10580_25 () (_ BitVec 64))
(declare-fun temp10580_26 () (_ BitVec 64))
(declare-fun temp10580_27 () (_ BitVec 64))
(declare-fun temp10580_28 () (_ BitVec 64))
(declare-fun temp10580_29 () (_ BitVec 64))
(declare-fun temp10580_30 () (_ BitVec 64))
(declare-fun temp10580_31 () (_ BitVec 64))
(declare-fun temp10580_32 () (_ BitVec 64))
(declare-fun temp10580_33 () (_ BitVec 64))
(declare-fun temp10580_34 () (_ BitVec 64))
(declare-fun temp10580_35 () (_ BitVec 64))
(declare-fun temp10580_36 () (_ BitVec 64))
(declare-fun temp10580_37 () (_ BitVec 64))
(declare-fun temp10580_38 () (_ BitVec 64))
(declare-fun temp10580_39 () (_ BitVec 64))
(declare-fun temp10580_40 () (_ BitVec 64))
(declare-fun temp10580_41 () (_ BitVec 64))
(declare-fun temp10580_42 () (_ BitVec 64))
(declare-fun temp10580_43 () (_ BitVec 64))
(declare-fun temp10580_44 () (_ BitVec 64))
(declare-fun temp10580_45 () (_ BitVec 64))
(declare-fun temp10580_46 () (_ BitVec 64))
(declare-fun temp10580_47 () (_ BitVec 64))
(declare-fun temp10580_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10580_49 () (_ BitVec 64))
(declare-fun temp10580_50 () (_ BitVec 64))
(declare-fun temp10580_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10580_52 () (_ BitVec 64))
(declare-fun temp10580_53 () (_ BitVec 64))
(declare-fun temp10580_54 () (_ BitVec 64))
(declare-fun temp10580_55 () (_ BitVec 64))
(declare-fun temp10580_56 () (_ BitVec 64))
(declare-fun temp10580_57 () (_ BitVec 64))
(declare-fun temp10580_58 () (_ BitVec 64))
(declare-fun temp10580_59 () (_ BitVec 64))
(declare-fun temp10580_60 () (_ BitVec 64))
(declare-fun temp10580_61 () (_ BitVec 64))
(declare-fun temp10580_62 () (_ BitVec 64))
(declare-fun temp10580_63 () (_ BitVec 64))
(declare-fun temp10580_64 () (_ BitVec 64))
(declare-fun temp10580_65 () (_ BitVec 64))
(declare-fun temp10580_66 () (_ BitVec 64))
(declare-fun temp10580_67 () (_ BitVec 64))
(declare-fun temp10580_68 () (_ BitVec 64))
(declare-fun temp10580_69 () (_ BitVec 64))
(declare-fun temp10580_70 () (_ BitVec 64))
(declare-fun temp10580_71 () (_ BitVec 64))
(declare-fun temp10580_72 () (_ BitVec 64))
(declare-fun temp10580_73 () (_ BitVec 64))
(declare-fun temp10580_74 () (_ BitVec 64))
(declare-fun temp10580_75 () (_ BitVec 64))
(declare-fun temp10580_76 () (_ BitVec 64))
(declare-fun temp10580_77 () (_ BitVec 64))
(declare-fun temp10580_78 () (_ BitVec 64))
(declare-fun temp10580_79 () (_ BitVec 64))
(declare-fun temp10580_80 () (_ BitVec 64))
(declare-fun temp10580_81 () (_ BitVec 64))
(declare-fun temp10580_82 () (_ BitVec 64))
(declare-fun temp10580_83 () (_ BitVec 64))
(declare-fun temp10580_84 () (_ BitVec 64))
(declare-fun temp10580_85 () (_ BitVec 64))
(declare-fun temp10580_86 () (_ BitVec 64))
(declare-fun temp10580_87 () (_ BitVec 64))
(declare-fun temp10580_88 () (_ BitVec 64))
(declare-fun temp10580_89 () (_ BitVec 64))
(declare-fun temp10580_90 () (_ BitVec 64))
(declare-fun temp10580_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10580_92 () (_ BitVec 64))
(declare-fun temp10580_93 () (_ BitVec 64))
(declare-fun temp10580_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10580_95 () (_ BitVec 64))
(declare-fun temp10580_96 () (_ BitVec 64))
(declare-fun temp10580_97 () (_ BitVec 64))
(declare-fun temp10580_98 () (_ BitVec 64))
(declare-fun temp10580_99 () (_ BitVec 64))
(declare-fun temp10580_100 () (_ BitVec 64))
(declare-fun temp10580_101 () (_ BitVec 64))
(declare-fun temp10580_102 () (_ BitVec 64))
(declare-fun temp10580_103 () (_ BitVec 64))
(declare-fun temp10580_104 () (_ BitVec 64))
(declare-fun temp10580_105 () (_ BitVec 64))
(declare-fun temp10580_106 () (_ BitVec 64))
(declare-fun temp10580_107 () (_ BitVec 64))
(declare-fun temp10580_108 () (_ BitVec 64))
(declare-fun temp10580_109 () (_ BitVec 64))
(declare-fun temp10580_110 () (_ BitVec 64))
(declare-fun temp10580_111 () (_ BitVec 64))
(declare-fun temp10580_112 () (_ BitVec 64))
(declare-fun temp10580_113 () (_ BitVec 64))
(declare-fun temp10580_114 () (_ BitVec 64))
(declare-fun temp10580_115 () (_ BitVec 64))
(declare-fun temp10580_116 () (_ BitVec 64))
(declare-fun temp10580_117 () (_ BitVec 64))
(declare-fun temp10580_118 () (_ BitVec 64))
(declare-fun temp10580_119 () (_ BitVec 64))
(declare-fun temp10580_120 () (_ BitVec 64))
(declare-fun temp10580_121 () (_ BitVec 64))
(declare-fun temp10580_122 () (_ BitVec 64))
(declare-fun temp10580_123 () (_ BitVec 64))
(declare-fun temp10580_124 () (_ BitVec 64))
(declare-fun temp10580_125 () (_ BitVec 64))
(declare-fun temp10580_126 () (_ BitVec 64))
(declare-fun temp10580_127 () (_ BitVec 64))
(declare-fun temp10580_128 () (_ BitVec 64))
(declare-fun temp10580_129 () (_ BitVec 64))
(declare-fun temp10580_130 () (_ BitVec 64))
(declare-fun temp10580_131 () (_ BitVec 64))
(declare-fun temp10580_132 () (_ BitVec 64))
(declare-fun temp10580_133 () (_ BitVec 64))
(declare-fun temp10580_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10580_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10580_136 () (_ BitVec 64))
(declare-fun temp10580_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10580_138 () (_ BitVec 64))
(declare-fun temp10580_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10580_140 () (_ BitVec 64))
(declare-fun temp10580_141 () (_ BitVec 64))
(declare-fun temp10580_142 () (_ BitVec 64))
(declare-fun temp10580_143 () (_ BitVec 64))
(declare-fun temp10580_144 () (_ BitVec 64))
(declare-fun temp10580_145 () (_ BitVec 64))
(declare-fun temp10580_146 () (_ BitVec 64))
(declare-fun temp10580_147 () (_ BitVec 64))
(declare-fun temp10580_148 () (_ BitVec 64))
(declare-fun temp10580_149 () (_ BitVec 64))
(declare-fun temp10580_150 () (_ BitVec 64))
(declare-fun temp10580_151 () (_ BitVec 64))
(declare-fun temp10580_152 () (_ BitVec 64))
(declare-fun temp10580_153 () (_ BitVec 64))
(declare-fun temp10580_154 () (_ BitVec 64))
(declare-fun temp10580_155 () (_ BitVec 64))
(declare-fun temp10580_157 () (_ BitVec 64))
(declare-fun temp10580_158 () (_ BitVec 64))
(declare-fun temp10580_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10580_159 () (_ BitVec 64))
(declare-fun temp10580_160 () (_ BitVec 64))
(declare-fun temp10580_162 () (_ BitVec 64))
(declare-fun temp10580_163 () (_ BitVec 64))
(declare-fun temp10580_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10580_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10580_165 () (_ BitVec 64))
(declare-fun temp10580_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10580_167 () (_ BitVec 64))
(declare-fun temp10580_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10580_169 () (_ BitVec 64))
(declare-fun temp10580_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10580_171 () (_ BitVec 64))
(declare-fun temp10580_172 () (_ BitVec 64))
(declare-fun temp10580_173 () (_ BitVec 64))
(declare-fun temp10580_174 () (_ BitVec 64))
(declare-fun temp10580_175 () (_ BitVec 64))
(declare-fun temp10580_176 () (_ BitVec 64))
(declare-fun temp10580_177 () (_ BitVec 64))
(declare-fun temp10580_178 () (_ BitVec 64))
(declare-fun temp10580_179 () (_ BitVec 64))
(declare-fun temp10580_180 () (_ BitVec 64))
(declare-fun temp10580_181 () (_ BitVec 64))
(declare-fun temp10580_182 () (_ BitVec 64))
(declare-fun temp10580_183 () (_ BitVec 64))
(declare-fun temp10580_184 () (_ BitVec 64))
(declare-fun temp10580_185 () (_ BitVec 64))
(declare-fun temp10580_186 () (_ BitVec 64))
(declare-fun temp10580_187 () (_ BitVec 64))
(declare-fun temp10580_188 () (_ BitVec 64))
(declare-fun temp10580_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10580_190 () (_ BitVec 64))
(declare-fun temp10580_192 () (_ BitVec 64))
(declare-fun temp10580_193 () (_ BitVec 64))
(declare-fun temp10580_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10580_194 () (_ BitVec 64))
(declare-fun temp10580_195 () (_ BitVec 64))
(declare-fun temp10580_197 () (_ BitVec 64))
(declare-fun temp10580_198 () (_ BitVec 64))
(declare-fun temp10580_196 () (_ BitVec 64))
(declare-fun temp10580_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10580_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10580_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10580_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10580_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10580_204 () (_ BitVec 64))
(declare-fun temp10580_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10580_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10580_207 () (_ BitVec 64))
(declare-fun temp10580_208 () (_ BitVec 64))
(declare-fun temp10580_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10580_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10580_211 () (_ BitVec 64))
(declare-fun temp10580_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10580_213 () (_ BitVec 64))
(declare-fun temp10580_214 () (_ BitVec 64))
(declare-fun temp10580_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10580_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10580_217 () (_ BitVec 64))
(declare-fun temp10580_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10580_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10580_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp10580_221 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp10580_223 () (_ BitVec 64))
(declare-fun temp10580_222 () (_ BitVec 64))
(declare-fun temp10580_224 () (_ BitVec 64))
(declare-fun var7081450 () (_ BitVec 64))
(declare-fun temp10580_226 () (_ BitVec 64))
(declare-fun temp10580_225 () (_ BitVec 64))
(declare-fun temp10580_227 () (_ BitVec 64))
(declare-fun temp10580_228 () (_ BitVec 64))
(declare-fun var7811860 () (_ BitVec 64))
(declare-fun var7811827 () (_ BitVec 64))
(declare-fun var7680391 () (_ BitVec 64))
(declare-fun var7680387 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10580_229 () (_ BitVec 64))
(assert (= temp10580_1 #x0000000000000001))
(assert (= var77203 temp10580_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10580_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10580_2)))
(assert (= temp10580_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10580_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10580_4 #x0000000000000000))
(assert (= var210941 temp10580_4))
(assert (= temp10580_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10580_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10580_6 #x0000000000000000))
(assert (= var210986 temp10580_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10580_7 #x0000000000000000))
(assert (= temp10580_8 temp10580_7))
(assert (= temp10580_9 (select ARGNAME_padding_NAMEEND_VAL temp10580_8)))
(assert (= temp10580_10 #x0000000000000001))
(assert (= temp10580_11 temp10580_10))
(assert (= temp10580_12 (select ARGNAME_padding_NAMEEND_VAL temp10580_11)))
(assert (= temp10580_13 #x0000000000000002))
(assert (= temp10580_14 temp10580_13))
(assert (= temp10580_15 (select ARGNAME_padding_NAMEEND_VAL temp10580_14)))
(assert (= temp10580_16 #x0000000000000003))
(assert (= temp10580_17 temp10580_16))
(assert (= temp10580_18 (select ARGNAME_padding_NAMEEND_VAL temp10580_17)))
(assert (= temp10580_19 #x0000000000000004))
(assert (= temp10580_20 temp10580_19))
(assert (= temp10580_21 (select ARGNAME_padding_NAMEEND_VAL temp10580_20)))
(assert (= temp10580_22 #x0000000000000005))
(assert (= temp10580_23 temp10580_22))
(assert (= temp10580_24 (select ARGNAME_padding_NAMEEND_VAL temp10580_23)))
(assert (= temp10580_25 #x0000000000000000))
(assert (= temp10580_26 #x0000000000000000))
(assert (= temp10580_27 temp10580_26))
(assert (= temp10580_28 (select ARGNAME_padding_NAMEEND_VAL temp10580_27)))
(assert (= temp10580_29 #x0000000000000000))
(assert (= temp10580_30 #x0000000000000001))
(assert (= temp10580_31 temp10580_30))
(assert (= temp10580_32 (select ARGNAME_padding_NAMEEND_VAL temp10580_31)))
(assert (= temp10580_33 #x0000000000000000))
(assert (= temp10580_34 #x0000000000000002))
(assert (= temp10580_35 temp10580_34))
(assert (= temp10580_36 (select ARGNAME_padding_NAMEEND_VAL temp10580_35)))
(assert (= temp10580_37 #x0000000000000000))
(assert (= temp10580_38 #x0000000000000003))
(assert (= temp10580_39 temp10580_38))
(assert (= temp10580_40 (select ARGNAME_padding_NAMEEND_VAL temp10580_39)))
(assert (= temp10580_41 #x0000000000000000))
(assert (= temp10580_42 #x0000000000000004))
(assert (= temp10580_43 temp10580_42))
(assert (= temp10580_44 (select ARGNAME_padding_NAMEEND_VAL temp10580_43)))
(assert (= temp10580_45 #x0000000000000000))
(assert (= temp10580_46 #x0000000000000005))
(assert (= temp10580_47 temp10580_46))
(assert (= temp10580_48 (select ARGNAME_padding_NAMEEND_VAL temp10580_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10580_28 temp10580_25)
             (bvslt temp10580_32 temp10580_29)
             (bvslt temp10580_36 temp10580_33)
             (bvslt temp10580_40 temp10580_37)
             (bvslt temp10580_44 temp10580_41)
             (bvslt temp10580_48 temp10580_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10580_49 #x0000000000000000))
(assert (= var1191714 temp10580_49))
(assert (= temp10580_50 #x0000000000000000))
(assert (= temp10580_51 temp10580_50))
(assert (= temp10580_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10580_51)))
(assert (= temp10580_53 #x0000000000000001))
(assert (= temp10580_54 temp10580_53))
(assert (= temp10580_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10580_54)))
(assert (= temp10580_56 #x0000000000000002))
(assert (= temp10580_57 temp10580_56))
(assert (= temp10580_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10580_57)))
(assert (= temp10580_59 #x0000000000000003))
(assert (= temp10580_60 temp10580_59))
(assert (= temp10580_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10580_60)))
(assert (= temp10580_62 #x0000000000000004))
(assert (= temp10580_63 temp10580_62))
(assert (= temp10580_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10580_63)))
(assert (= temp10580_65 #x0000000000000005))
(assert (= temp10580_66 temp10580_65))
(assert (= temp10580_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10580_66)))
(assert (= temp10580_68 #x0000000000000000))
(assert (= temp10580_69 #x0000000000000000))
(assert (= temp10580_70 temp10580_69))
(assert (= temp10580_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10580_70)))
(assert (= temp10580_72 #x0000000000000000))
(assert (= temp10580_73 #x0000000000000001))
(assert (= temp10580_74 temp10580_73))
(assert (= temp10580_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10580_74)))
(assert (= temp10580_76 #x0000000000000000))
(assert (= temp10580_77 #x0000000000000002))
(assert (= temp10580_78 temp10580_77))
(assert (= temp10580_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10580_78)))
(assert (= temp10580_80 #x0000000000000000))
(assert (= temp10580_81 #x0000000000000003))
(assert (= temp10580_82 temp10580_81))
(assert (= temp10580_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10580_82)))
(assert (= temp10580_84 #x0000000000000000))
(assert (= temp10580_85 #x0000000000000004))
(assert (= temp10580_86 temp10580_85))
(assert (= temp10580_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10580_86)))
(assert (= temp10580_88 #x0000000000000000))
(assert (= temp10580_89 #x0000000000000005))
(assert (= temp10580_90 temp10580_89))
(assert (= temp10580_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10580_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10580_71 temp10580_68)
             (bvslt temp10580_75 temp10580_72)
             (bvslt temp10580_79 temp10580_76)
             (bvslt temp10580_83 temp10580_80)
             (bvslt temp10580_87 temp10580_84)
             (bvslt temp10580_91 temp10580_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10580_92 #x0000000000000000))
(assert (= var1191725 temp10580_92))
(assert (= temp10580_93 #x0000000000000000))
(assert (= temp10580_94 temp10580_93))
(assert (= temp10580_95 (select ARGNAME_stride_NAMEEND_VAL temp10580_94)))
(assert (= temp10580_96 #x0000000000000001))
(assert (= temp10580_97 temp10580_96))
(assert (= temp10580_98 (select ARGNAME_stride_NAMEEND_VAL temp10580_97)))
(assert (= temp10580_99 #x0000000000000002))
(assert (= temp10580_100 temp10580_99))
(assert (= temp10580_101 (select ARGNAME_stride_NAMEEND_VAL temp10580_100)))
(assert (= temp10580_102 #x0000000000000003))
(assert (= temp10580_103 temp10580_102))
(assert (= temp10580_104 (select ARGNAME_stride_NAMEEND_VAL temp10580_103)))
(assert (= temp10580_105 #x0000000000000004))
(assert (= temp10580_106 temp10580_105))
(assert (= temp10580_107 (select ARGNAME_stride_NAMEEND_VAL temp10580_106)))
(assert (= temp10580_108 #x0000000000000005))
(assert (= temp10580_109 temp10580_108))
(assert (= temp10580_110 (select ARGNAME_stride_NAMEEND_VAL temp10580_109)))
(assert (= temp10580_111 #x0000000000000000))
(assert (= temp10580_112 #x0000000000000000))
(assert (= temp10580_113 temp10580_112))
(assert (= temp10580_114 (select ARGNAME_stride_NAMEEND_VAL temp10580_113)))
(assert (= temp10580_115 #x0000000000000000))
(assert (= temp10580_116 #x0000000000000001))
(assert (= temp10580_117 temp10580_116))
(assert (= temp10580_118 (select ARGNAME_stride_NAMEEND_VAL temp10580_117)))
(assert (= temp10580_119 #x0000000000000000))
(assert (= temp10580_120 #x0000000000000002))
(assert (= temp10580_121 temp10580_120))
(assert (= temp10580_122 (select ARGNAME_stride_NAMEEND_VAL temp10580_121)))
(assert (= temp10580_123 #x0000000000000000))
(assert (= temp10580_124 #x0000000000000003))
(assert (= temp10580_125 temp10580_124))
(assert (= temp10580_126 (select ARGNAME_stride_NAMEEND_VAL temp10580_125)))
(assert (= temp10580_127 #x0000000000000000))
(assert (= temp10580_128 #x0000000000000004))
(assert (= temp10580_129 temp10580_128))
(assert (= temp10580_130 (select ARGNAME_stride_NAMEEND_VAL temp10580_129)))
(assert (= temp10580_131 #x0000000000000000))
(assert (= temp10580_132 #x0000000000000005))
(assert (= temp10580_133 temp10580_132))
(assert (= temp10580_134 (select ARGNAME_stride_NAMEEND_VAL temp10580_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10580_114 temp10580_111)
             (bvsle temp10580_118 temp10580_115)
             (bvsle temp10580_122 temp10580_119)
             (bvsle temp10580_126 temp10580_123)
             (bvsle temp10580_130 temp10580_127)
             (bvsle temp10580_134 temp10580_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10580_135 #x0000000000000000))
(assert (= var1191735 temp10580_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10580_136 #x0000000000000001))
(assert (= var1191747 temp10580_136))
(assert (= temp10580_137 #x0000000000000000))
(assert (= var1179826 temp10580_137))
(assert (= temp10580_138 #x0000000000000000))
(assert (= temp10580_139 temp10580_138))
(assert (= temp10580_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10580_139)))
(assert (= temp10580_141 #x0000000000000001))
(assert (= temp10580_142 temp10580_141))
(assert (= temp10580_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10580_142)))
(assert (= temp10580_144 #x0000000000000002))
(assert (= temp10580_145 temp10580_144))
(assert (= temp10580_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10580_145)))
(assert (= temp10580_147 #x0000000000000003))
(assert (= temp10580_148 temp10580_147))
(assert (= temp10580_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10580_148)))
(assert (= temp10580_150 #x0000000000000004))
(assert (= temp10580_151 temp10580_150))
(assert (= temp10580_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10580_151)))
(assert (= temp10580_153 #x0000000000000005))
(assert (= temp10580_154 temp10580_153))
(assert (= temp10580_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10580_154)))
(assert (= temp10580_157 var1179826))
(assert (= temp10580_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10580_157)))
(assert (= temp10580_156 temp10580_158))
(assert (= var1191780
   (ite (bvslt temp10580_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10580_159 #x0000000000000000))
(assert (= var1191780 temp10580_159))
(assert (= temp10580_160 #x0000000000000000))
(assert (= var1179826 temp10580_160))
(assert (= temp10580_162 var1179826))
(assert (= temp10580_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10580_162)))
(assert (= temp10580_161 temp10580_163))
(assert (= var1191802 (bvsmod temp10580_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10580_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10580_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10580_165 #x0000000000000001))
(assert (= var1191803 temp10580_165))
(assert (= temp10580_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10580_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10580_167 #x0000000000000001))
(assert (= var1191823 temp10580_167))
(assert (= temp10580_168 #x0000000000000001))
(assert (= var1180714 temp10580_168))
(assert (= temp10580_169 #x0000000000000000))
(assert (= temp10580_170 temp10580_169))
(assert (= temp10580_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10580_170)))
(assert (= temp10580_172 #x0000000000000001))
(assert (= temp10580_173 temp10580_172))
(assert (= temp10580_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10580_173)))
(assert (= temp10580_175 #x0000000000000002))
(assert (= temp10580_176 temp10580_175))
(assert (= temp10580_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10580_176)))
(assert (= temp10580_178 #x0000000000000003))
(assert (= temp10580_179 temp10580_178))
(assert (= temp10580_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10580_179)))
(assert (= temp10580_181 #x0000000000000004))
(assert (= temp10580_182 temp10580_181))
(assert (= temp10580_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10580_182)))
(assert (= temp10580_184 #x0000000000000005))
(assert (= temp10580_185 temp10580_184))
(assert (= temp10580_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10580_185)))
(assert (= temp10580_187 #x0000000000000000))
(assert (= temp10580_188
   (ite (bvslt var1180714 temp10580_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10580_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10580_188)))
(assert (= var1191831 temp10580_189))
(assert (bvslt (ite (bvslt var1180714 temp10580_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10580_190 #x0000000000000001))
(assert (= var1180714 temp10580_190))
(assert (= temp10580_192 var1180714))
(assert (= temp10580_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10580_192)))
(assert (= temp10580_191 temp10580_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10580_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10580_194 #x0000000000000001))
(assert (= var1191836 temp10580_194))
(assert (= temp10580_195 #x0000000000000000))
(assert (= var1179826 temp10580_195))
(assert (= temp10580_197 var1179826))
(assert (= temp10580_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10580_197)))
(assert (= temp10580_196 temp10580_198))
(assert (= temp10580_199 #x0000000000000002))
(assert (= var1586025 temp10580_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10580_200 #x0000000000000001))
(assert (= var1191993 temp10580_200))
(assert (= temp10580_201 #x0000000000000001))
(assert (= var2700303 temp10580_201))
(assert (= temp10580_202 #x0000000000000001))
(assert (= var2962447 temp10580_202))
(assert (= temp10580_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10580_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10580_204 #x0000000000000001))
(assert (= var211058 temp10580_204))
(assert (= temp10580_205 #x0000000000000001))
(assert (= var211188 temp10580_205))
(assert (= var3879401 var211188))
(assert (= temp10580_206 #x0000000000000000))
(assert (= var3866802 temp10580_206))
(assert (= temp10580_207 #x0000000000000000))
(assert (= temp10580_208
   (ite (bvslt var3866802 temp10580_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10580_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10580_208)))
(assert (= var3879420 temp10580_209))
(assert (bvslt (ite (bvslt var3866802 temp10580_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10580_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10580_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10580_211 #x0000000000000000))
(assert (= var3879421 temp10580_211))
(assert (= temp10580_212 #x0000000000000001))
(assert (= var3867690 temp10580_212))
(assert (= temp10580_213 #x0000000000000000))
(assert (= temp10580_214
   (ite (bvslt var3867690 temp10580_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10580_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10580_214)))
(assert (= var3879423 temp10580_215))
(assert (bvslt (ite (bvslt var3867690 temp10580_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10580_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10580_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10580_217 #x0000000000000001))
(assert (= var3879424 temp10580_217))
(assert (= temp10580_218 #x0000000000000000))
(assert (= var4133117 temp10580_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10580_219 #x0000000000000002))
(assert (= var4339331 temp10580_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10580_220 #x0000000000000000))
(assert (= var4404892 temp10580_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5124496 var211201))
(assert (= var211494 var210913))
(assert (= temp10580_221 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp10580_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10580_223 #x0000000000000001))
(assert (= temp10580_222 temp10580_223))
(assert (= temp10580_224 #x0000000000000001))
(assert (= var7081450 temp10580_224))
(assert (= temp10580_226 #xffffffffffffffff))
(assert (= temp10580_225 temp10580_226))
(assert (= temp10580_227 #x0000000000000001))
(assert (= var211058 temp10580_227))
(assert (= temp10580_228 #x0000000000000000))
(assert (= var7811860 temp10580_228))
(assert (= var7811827 var7811860))
(assert (= var7680391 var7811827))
(assert (= var7680387 var7680391))
(assert (= var212669 var7680387))
(assert (= temp10580_229 #x0000000000000000))
(assert (= var212669 temp10580_229))
(model-add temp10580_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10580_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10580_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10580_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





