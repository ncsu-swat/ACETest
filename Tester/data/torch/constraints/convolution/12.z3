(declare-fun temp16_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp16_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp16_3 () (_ BitVec 64))
(declare-fun temp16_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp16_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp16_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp16_7 () (_ BitVec 64))
(declare-fun temp16_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp16_9 () (_ BitVec 64))
(declare-fun temp16_10 () (_ BitVec 64))
(declare-fun temp16_11 () (_ BitVec 64))
(declare-fun temp16_12 () (_ BitVec 64))
(declare-fun temp16_13 () (_ BitVec 64))
(declare-fun temp16_14 () (_ BitVec 64))
(declare-fun temp16_15 () (_ BitVec 64))
(declare-fun temp16_16 () (_ BitVec 64))
(declare-fun temp16_17 () (_ BitVec 64))
(declare-fun temp16_18 () (_ BitVec 64))
(declare-fun temp16_19 () (_ BitVec 64))
(declare-fun temp16_20 () (_ BitVec 64))
(declare-fun temp16_21 () (_ BitVec 64))
(declare-fun temp16_22 () (_ BitVec 64))
(declare-fun temp16_23 () (_ BitVec 64))
(declare-fun temp16_24 () (_ BitVec 64))
(declare-fun temp16_25 () (_ BitVec 64))
(declare-fun temp16_26 () (_ BitVec 64))
(declare-fun temp16_27 () (_ BitVec 64))
(declare-fun temp16_28 () (_ BitVec 64))
(declare-fun temp16_29 () (_ BitVec 64))
(declare-fun temp16_30 () (_ BitVec 64))
(declare-fun temp16_31 () (_ BitVec 64))
(declare-fun temp16_32 () (_ BitVec 64))
(declare-fun temp16_33 () (_ BitVec 64))
(declare-fun temp16_34 () (_ BitVec 64))
(declare-fun temp16_35 () (_ BitVec 64))
(declare-fun temp16_36 () (_ BitVec 64))
(declare-fun temp16_37 () (_ BitVec 64))
(declare-fun temp16_38 () (_ BitVec 64))
(declare-fun temp16_39 () (_ BitVec 64))
(declare-fun temp16_40 () (_ BitVec 64))
(declare-fun temp16_41 () (_ BitVec 64))
(declare-fun temp16_42 () (_ BitVec 64))
(declare-fun temp16_43 () (_ BitVec 64))
(declare-fun temp16_44 () (_ BitVec 64))
(declare-fun temp16_45 () (_ BitVec 64))
(declare-fun temp16_46 () (_ BitVec 64))
(declare-fun temp16_47 () (_ BitVec 64))
(declare-fun temp16_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp16_49 () (_ BitVec 64))
(declare-fun temp16_50 () (_ BitVec 64))
(declare-fun temp16_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp16_52 () (_ BitVec 64))
(declare-fun temp16_53 () (_ BitVec 64))
(declare-fun temp16_54 () (_ BitVec 64))
(declare-fun temp16_55 () (_ BitVec 64))
(declare-fun temp16_56 () (_ BitVec 64))
(declare-fun temp16_57 () (_ BitVec 64))
(declare-fun temp16_58 () (_ BitVec 64))
(declare-fun temp16_59 () (_ BitVec 64))
(declare-fun temp16_60 () (_ BitVec 64))
(declare-fun temp16_61 () (_ BitVec 64))
(declare-fun temp16_62 () (_ BitVec 64))
(declare-fun temp16_63 () (_ BitVec 64))
(declare-fun temp16_64 () (_ BitVec 64))
(declare-fun temp16_65 () (_ BitVec 64))
(declare-fun temp16_66 () (_ BitVec 64))
(declare-fun temp16_67 () (_ BitVec 64))
(declare-fun temp16_68 () (_ BitVec 64))
(declare-fun temp16_69 () (_ BitVec 64))
(declare-fun temp16_70 () (_ BitVec 64))
(declare-fun temp16_71 () (_ BitVec 64))
(declare-fun temp16_72 () (_ BitVec 64))
(declare-fun temp16_73 () (_ BitVec 64))
(declare-fun temp16_74 () (_ BitVec 64))
(declare-fun temp16_75 () (_ BitVec 64))
(declare-fun temp16_76 () (_ BitVec 64))
(declare-fun temp16_77 () (_ BitVec 64))
(declare-fun temp16_78 () (_ BitVec 64))
(declare-fun temp16_79 () (_ BitVec 64))
(declare-fun temp16_80 () (_ BitVec 64))
(declare-fun temp16_81 () (_ BitVec 64))
(declare-fun temp16_82 () (_ BitVec 64))
(declare-fun temp16_83 () (_ BitVec 64))
(declare-fun temp16_84 () (_ BitVec 64))
(declare-fun temp16_85 () (_ BitVec 64))
(declare-fun temp16_86 () (_ BitVec 64))
(declare-fun temp16_87 () (_ BitVec 64))
(declare-fun temp16_88 () (_ BitVec 64))
(declare-fun temp16_89 () (_ BitVec 64))
(declare-fun temp16_90 () (_ BitVec 64))
(declare-fun temp16_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp16_92 () (_ BitVec 64))
(declare-fun temp16_93 () (_ BitVec 64))
(declare-fun temp16_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp16_95 () (_ BitVec 64))
(declare-fun temp16_96 () (_ BitVec 64))
(declare-fun temp16_97 () (_ BitVec 64))
(declare-fun temp16_98 () (_ BitVec 64))
(declare-fun temp16_99 () (_ BitVec 64))
(declare-fun temp16_100 () (_ BitVec 64))
(declare-fun temp16_101 () (_ BitVec 64))
(declare-fun temp16_102 () (_ BitVec 64))
(declare-fun temp16_103 () (_ BitVec 64))
(declare-fun temp16_104 () (_ BitVec 64))
(declare-fun temp16_105 () (_ BitVec 64))
(declare-fun temp16_106 () (_ BitVec 64))
(declare-fun temp16_107 () (_ BitVec 64))
(declare-fun temp16_108 () (_ BitVec 64))
(declare-fun temp16_109 () (_ BitVec 64))
(declare-fun temp16_110 () (_ BitVec 64))
(declare-fun temp16_111 () (_ BitVec 64))
(declare-fun temp16_112 () (_ BitVec 64))
(declare-fun temp16_113 () (_ BitVec 64))
(declare-fun temp16_114 () (_ BitVec 64))
(declare-fun temp16_115 () (_ BitVec 64))
(declare-fun temp16_116 () (_ BitVec 64))
(declare-fun temp16_117 () (_ BitVec 64))
(declare-fun temp16_118 () (_ BitVec 64))
(declare-fun temp16_119 () (_ BitVec 64))
(declare-fun temp16_120 () (_ BitVec 64))
(declare-fun temp16_121 () (_ BitVec 64))
(declare-fun temp16_122 () (_ BitVec 64))
(declare-fun temp16_123 () (_ BitVec 64))
(declare-fun temp16_124 () (_ BitVec 64))
(declare-fun temp16_125 () (_ BitVec 64))
(declare-fun temp16_126 () (_ BitVec 64))
(declare-fun temp16_127 () (_ BitVec 64))
(declare-fun temp16_128 () (_ BitVec 64))
(declare-fun temp16_129 () (_ BitVec 64))
(declare-fun temp16_130 () (_ BitVec 64))
(declare-fun temp16_131 () (_ BitVec 64))
(declare-fun temp16_132 () (_ BitVec 64))
(declare-fun temp16_133 () (_ BitVec 64))
(declare-fun temp16_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp16_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp16_136 () (_ BitVec 64))
(declare-fun temp16_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp16_138 () (_ BitVec 64))
(declare-fun temp16_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp16_140 () (_ BitVec 64))
(declare-fun temp16_141 () (_ BitVec 64))
(declare-fun temp16_142 () (_ BitVec 64))
(declare-fun temp16_143 () (_ BitVec 64))
(declare-fun temp16_144 () (_ BitVec 64))
(declare-fun temp16_145 () (_ BitVec 64))
(declare-fun temp16_146 () (_ BitVec 64))
(declare-fun temp16_147 () (_ BitVec 64))
(declare-fun temp16_148 () (_ BitVec 64))
(declare-fun temp16_149 () (_ BitVec 64))
(declare-fun temp16_150 () (_ BitVec 64))
(declare-fun temp16_151 () (_ BitVec 64))
(declare-fun temp16_152 () (_ BitVec 64))
(declare-fun temp16_153 () (_ BitVec 64))
(declare-fun temp16_154 () (_ BitVec 64))
(declare-fun temp16_155 () (_ BitVec 64))
(declare-fun temp16_157 () (_ BitVec 64))
(declare-fun temp16_158 () (_ BitVec 64))
(declare-fun temp16_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp16_159 () (_ BitVec 64))
(declare-fun temp16_160 () (_ BitVec 64))
(declare-fun temp16_162 () (_ BitVec 64))
(declare-fun temp16_163 () (_ BitVec 64))
(declare-fun temp16_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp16_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp16_165 () (_ BitVec 64))
(declare-fun temp16_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp16_167 () (_ BitVec 64))
(declare-fun temp16_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp16_169 () (_ BitVec 64))
(declare-fun temp16_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp16_171 () (_ BitVec 64))
(declare-fun temp16_172 () (_ BitVec 64))
(declare-fun temp16_173 () (_ BitVec 64))
(declare-fun temp16_174 () (_ BitVec 64))
(declare-fun temp16_175 () (_ BitVec 64))
(declare-fun temp16_176 () (_ BitVec 64))
(declare-fun temp16_177 () (_ BitVec 64))
(declare-fun temp16_178 () (_ BitVec 64))
(declare-fun temp16_179 () (_ BitVec 64))
(declare-fun temp16_180 () (_ BitVec 64))
(declare-fun temp16_181 () (_ BitVec 64))
(declare-fun temp16_182 () (_ BitVec 64))
(declare-fun temp16_183 () (_ BitVec 64))
(declare-fun temp16_184 () (_ BitVec 64))
(declare-fun temp16_185 () (_ BitVec 64))
(declare-fun temp16_186 () (_ BitVec 64))
(declare-fun temp16_187 () (_ BitVec 64))
(declare-fun temp16_188 () (_ BitVec 64))
(declare-fun temp16_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp16_190 () (_ BitVec 64))
(declare-fun temp16_192 () (_ BitVec 64))
(declare-fun temp16_193 () (_ BitVec 64))
(declare-fun temp16_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp16_194 () (_ BitVec 64))
(declare-fun temp16_195 () (_ BitVec 64))
(declare-fun temp16_197 () (_ BitVec 64))
(declare-fun temp16_198 () (_ BitVec 64))
(declare-fun temp16_196 () (_ BitVec 64))
(declare-fun temp16_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp16_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp16_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp16_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp16_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp16_204 () (_ BitVec 64))
(declare-fun temp16_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp16_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp16_207 () (_ BitVec 64))
(declare-fun temp16_208 () (_ BitVec 64))
(declare-fun temp16_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp16_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp16_211 () (_ BitVec 64))
(declare-fun temp16_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp16_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp16_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp16_215 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun temp16_216 () (_ BitVec 64))
(assert (= temp16_1 #x0000000000000001))
(assert (= var77203 temp16_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp16_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp16_2)))
(assert (= temp16_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp16_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_4 #x0000000000000000))
(assert (= var210941 temp16_4))
(assert (= temp16_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp16_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_6 #x0000000000000000))
(assert (= var210986 temp16_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp16_7 #x0000000000000000))
(assert (= temp16_8 temp16_7))
(assert (= temp16_9 (select ARGNAME_padding_NAMEEND_VAL temp16_8)))
(assert (= temp16_10 #x0000000000000001))
(assert (= temp16_11 temp16_10))
(assert (= temp16_12 (select ARGNAME_padding_NAMEEND_VAL temp16_11)))
(assert (= temp16_13 #x0000000000000002))
(assert (= temp16_14 temp16_13))
(assert (= temp16_15 (select ARGNAME_padding_NAMEEND_VAL temp16_14)))
(assert (= temp16_16 #x0000000000000003))
(assert (= temp16_17 temp16_16))
(assert (= temp16_18 (select ARGNAME_padding_NAMEEND_VAL temp16_17)))
(assert (= temp16_19 #x0000000000000004))
(assert (= temp16_20 temp16_19))
(assert (= temp16_21 (select ARGNAME_padding_NAMEEND_VAL temp16_20)))
(assert (= temp16_22 #x0000000000000005))
(assert (= temp16_23 temp16_22))
(assert (= temp16_24 (select ARGNAME_padding_NAMEEND_VAL temp16_23)))
(assert (= temp16_25 #x0000000000000000))
(assert (= temp16_26 #x0000000000000000))
(assert (= temp16_27 temp16_26))
(assert (= temp16_28 (select ARGNAME_padding_NAMEEND_VAL temp16_27)))
(assert (= temp16_29 #x0000000000000000))
(assert (= temp16_30 #x0000000000000001))
(assert (= temp16_31 temp16_30))
(assert (= temp16_32 (select ARGNAME_padding_NAMEEND_VAL temp16_31)))
(assert (= temp16_33 #x0000000000000000))
(assert (= temp16_34 #x0000000000000002))
(assert (= temp16_35 temp16_34))
(assert (= temp16_36 (select ARGNAME_padding_NAMEEND_VAL temp16_35)))
(assert (= temp16_37 #x0000000000000000))
(assert (= temp16_38 #x0000000000000003))
(assert (= temp16_39 temp16_38))
(assert (= temp16_40 (select ARGNAME_padding_NAMEEND_VAL temp16_39)))
(assert (= temp16_41 #x0000000000000000))
(assert (= temp16_42 #x0000000000000004))
(assert (= temp16_43 temp16_42))
(assert (= temp16_44 (select ARGNAME_padding_NAMEEND_VAL temp16_43)))
(assert (= temp16_45 #x0000000000000000))
(assert (= temp16_46 #x0000000000000005))
(assert (= temp16_47 temp16_46))
(assert (= temp16_48 (select ARGNAME_padding_NAMEEND_VAL temp16_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp16_28 temp16_25)
             (bvslt temp16_32 temp16_29)
             (bvslt temp16_36 temp16_33)
             (bvslt temp16_40 temp16_37)
             (bvslt temp16_44 temp16_41)
             (bvslt temp16_48 temp16_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_49 #x0000000000000000))
(assert (= var1191714 temp16_49))
(assert (= temp16_50 #x0000000000000000))
(assert (= temp16_51 temp16_50))
(assert (= temp16_52 (select ARGNAME_output_padding_NAMEEND_VAL temp16_51)))
(assert (= temp16_53 #x0000000000000001))
(assert (= temp16_54 temp16_53))
(assert (= temp16_55 (select ARGNAME_output_padding_NAMEEND_VAL temp16_54)))
(assert (= temp16_56 #x0000000000000002))
(assert (= temp16_57 temp16_56))
(assert (= temp16_58 (select ARGNAME_output_padding_NAMEEND_VAL temp16_57)))
(assert (= temp16_59 #x0000000000000003))
(assert (= temp16_60 temp16_59))
(assert (= temp16_61 (select ARGNAME_output_padding_NAMEEND_VAL temp16_60)))
(assert (= temp16_62 #x0000000000000004))
(assert (= temp16_63 temp16_62))
(assert (= temp16_64 (select ARGNAME_output_padding_NAMEEND_VAL temp16_63)))
(assert (= temp16_65 #x0000000000000005))
(assert (= temp16_66 temp16_65))
(assert (= temp16_67 (select ARGNAME_output_padding_NAMEEND_VAL temp16_66)))
(assert (= temp16_68 #x0000000000000000))
(assert (= temp16_69 #x0000000000000000))
(assert (= temp16_70 temp16_69))
(assert (= temp16_71 (select ARGNAME_output_padding_NAMEEND_VAL temp16_70)))
(assert (= temp16_72 #x0000000000000000))
(assert (= temp16_73 #x0000000000000001))
(assert (= temp16_74 temp16_73))
(assert (= temp16_75 (select ARGNAME_output_padding_NAMEEND_VAL temp16_74)))
(assert (= temp16_76 #x0000000000000000))
(assert (= temp16_77 #x0000000000000002))
(assert (= temp16_78 temp16_77))
(assert (= temp16_79 (select ARGNAME_output_padding_NAMEEND_VAL temp16_78)))
(assert (= temp16_80 #x0000000000000000))
(assert (= temp16_81 #x0000000000000003))
(assert (= temp16_82 temp16_81))
(assert (= temp16_83 (select ARGNAME_output_padding_NAMEEND_VAL temp16_82)))
(assert (= temp16_84 #x0000000000000000))
(assert (= temp16_85 #x0000000000000004))
(assert (= temp16_86 temp16_85))
(assert (= temp16_87 (select ARGNAME_output_padding_NAMEEND_VAL temp16_86)))
(assert (= temp16_88 #x0000000000000000))
(assert (= temp16_89 #x0000000000000005))
(assert (= temp16_90 temp16_89))
(assert (= temp16_91 (select ARGNAME_output_padding_NAMEEND_VAL temp16_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp16_71 temp16_68)
             (bvslt temp16_75 temp16_72)
             (bvslt temp16_79 temp16_76)
             (bvslt temp16_83 temp16_80)
             (bvslt temp16_87 temp16_84)
             (bvslt temp16_91 temp16_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_92 #x0000000000000000))
(assert (= var1191725 temp16_92))
(assert (= temp16_93 #x0000000000000000))
(assert (= temp16_94 temp16_93))
(assert (= temp16_95 (select ARGNAME_stride_NAMEEND_VAL temp16_94)))
(assert (= temp16_96 #x0000000000000001))
(assert (= temp16_97 temp16_96))
(assert (= temp16_98 (select ARGNAME_stride_NAMEEND_VAL temp16_97)))
(assert (= temp16_99 #x0000000000000002))
(assert (= temp16_100 temp16_99))
(assert (= temp16_101 (select ARGNAME_stride_NAMEEND_VAL temp16_100)))
(assert (= temp16_102 #x0000000000000003))
(assert (= temp16_103 temp16_102))
(assert (= temp16_104 (select ARGNAME_stride_NAMEEND_VAL temp16_103)))
(assert (= temp16_105 #x0000000000000004))
(assert (= temp16_106 temp16_105))
(assert (= temp16_107 (select ARGNAME_stride_NAMEEND_VAL temp16_106)))
(assert (= temp16_108 #x0000000000000005))
(assert (= temp16_109 temp16_108))
(assert (= temp16_110 (select ARGNAME_stride_NAMEEND_VAL temp16_109)))
(assert (= temp16_111 #x0000000000000000))
(assert (= temp16_112 #x0000000000000000))
(assert (= temp16_113 temp16_112))
(assert (= temp16_114 (select ARGNAME_stride_NAMEEND_VAL temp16_113)))
(assert (= temp16_115 #x0000000000000000))
(assert (= temp16_116 #x0000000000000001))
(assert (= temp16_117 temp16_116))
(assert (= temp16_118 (select ARGNAME_stride_NAMEEND_VAL temp16_117)))
(assert (= temp16_119 #x0000000000000000))
(assert (= temp16_120 #x0000000000000002))
(assert (= temp16_121 temp16_120))
(assert (= temp16_122 (select ARGNAME_stride_NAMEEND_VAL temp16_121)))
(assert (= temp16_123 #x0000000000000000))
(assert (= temp16_124 #x0000000000000003))
(assert (= temp16_125 temp16_124))
(assert (= temp16_126 (select ARGNAME_stride_NAMEEND_VAL temp16_125)))
(assert (= temp16_127 #x0000000000000000))
(assert (= temp16_128 #x0000000000000004))
(assert (= temp16_129 temp16_128))
(assert (= temp16_130 (select ARGNAME_stride_NAMEEND_VAL temp16_129)))
(assert (= temp16_131 #x0000000000000000))
(assert (= temp16_132 #x0000000000000005))
(assert (= temp16_133 temp16_132))
(assert (= temp16_134 (select ARGNAME_stride_NAMEEND_VAL temp16_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp16_114 temp16_111)
             (bvsle temp16_118 temp16_115)
             (bvsle temp16_122 temp16_119)
             (bvsle temp16_126 temp16_123)
             (bvsle temp16_130 temp16_127)
             (bvsle temp16_134 temp16_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_135 #x0000000000000000))
(assert (= var1191735 temp16_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_136 #x0000000000000001))
(assert (= var1191747 temp16_136))
(assert (= temp16_137 #x0000000000000000))
(assert (= var1179826 temp16_137))
(assert (= temp16_138 #x0000000000000000))
(assert (= temp16_139 temp16_138))
(assert (= temp16_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp16_139)))
(assert (= temp16_141 #x0000000000000001))
(assert (= temp16_142 temp16_141))
(assert (= temp16_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp16_142)))
(assert (= temp16_144 #x0000000000000002))
(assert (= temp16_145 temp16_144))
(assert (= temp16_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp16_145)))
(assert (= temp16_147 #x0000000000000003))
(assert (= temp16_148 temp16_147))
(assert (= temp16_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp16_148)))
(assert (= temp16_150 #x0000000000000004))
(assert (= temp16_151 temp16_150))
(assert (= temp16_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp16_151)))
(assert (= temp16_153 #x0000000000000005))
(assert (= temp16_154 temp16_153))
(assert (= temp16_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp16_154)))
(assert (= temp16_157 var1179826))
(assert (= temp16_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp16_157)))
(assert (= temp16_156 temp16_158))
(assert (= var1191780
   (ite (bvslt temp16_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_159 #x0000000000000000))
(assert (= var1191780 temp16_159))
(assert (= temp16_160 #x0000000000000000))
(assert (= var1179826 temp16_160))
(assert (= temp16_162 var1179826))
(assert (= temp16_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp16_162)))
(assert (= temp16_161 temp16_163))
(assert (= var1191802 (bvsmod temp16_161 ARGNAME_groups_NAMEEND)))
(assert (= temp16_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp16_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp16_165 #x0000000000000001))
(assert (= var1191803 temp16_165))
(assert (= temp16_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp16_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_167 #x0000000000000001))
(assert (= var1191823 temp16_167))
(assert (= temp16_168 #x0000000000000001))
(assert (= var1180714 temp16_168))
(assert (= temp16_169 #x0000000000000000))
(assert (= temp16_170 temp16_169))
(assert (= temp16_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp16_170)))
(assert (= temp16_172 #x0000000000000001))
(assert (= temp16_173 temp16_172))
(assert (= temp16_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp16_173)))
(assert (= temp16_175 #x0000000000000002))
(assert (= temp16_176 temp16_175))
(assert (= temp16_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp16_176)))
(assert (= temp16_178 #x0000000000000003))
(assert (= temp16_179 temp16_178))
(assert (= temp16_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp16_179)))
(assert (= temp16_181 #x0000000000000004))
(assert (= temp16_182 temp16_181))
(assert (= temp16_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp16_182)))
(assert (= temp16_184 #x0000000000000005))
(assert (= temp16_185 temp16_184))
(assert (= temp16_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp16_185)))
(assert (= temp16_187 #x0000000000000000))
(assert (= temp16_188
   (ite (bvslt var1180714 temp16_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp16_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp16_188)))
(assert (= var1191831 temp16_189))
(assert (bvslt (ite (bvslt var1180714 temp16_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp16_190 #x0000000000000001))
(assert (= var1180714 temp16_190))
(assert (= temp16_192 var1180714))
(assert (= temp16_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp16_192)))
(assert (= temp16_191 temp16_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp16_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp16_194 #x0000000000000001))
(assert (= var1191836 temp16_194))
(assert (= temp16_195 #x0000000000000000))
(assert (= var1179826 temp16_195))
(assert (= temp16_197 var1179826))
(assert (= temp16_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp16_197)))
(assert (= temp16_196 temp16_198))
(assert (= temp16_199 #x0000000000000002))
(assert (= var1586025 temp16_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp16_200 #x0000000000000001))
(assert (= var1191993 temp16_200))
(assert (= temp16_201 #x0000000000000001))
(assert (= var2700303 temp16_201))
(assert (= temp16_202 #x0000000000000001))
(assert (= var2962447 temp16_202))
(assert (= temp16_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp16_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_204 #x0000000000000001))
(assert (= var211058 temp16_204))
(assert (= temp16_205 #x0000000000000001))
(assert (= var211188 temp16_205))
(assert (= var3879401 var211188))
(assert (= temp16_206 #x0000000000000000))
(assert (= var3866802 temp16_206))
(assert (= temp16_207 #x0000000000000000))
(assert (= temp16_208
   (ite (bvslt var3866802 temp16_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp16_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp16_208)))
(assert (= var3879420 temp16_209))
(assert (bvslt (ite (bvslt var3866802 temp16_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp16_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp16_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp16_211 #x0000000000000001))
(assert (= var3879421 temp16_211))
(assert (= temp16_212 #x0000000000000000))
(assert (= var4079423 temp16_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp16_213 #x0000000000000002))
(assert (= var4208259 temp16_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_214 #x0000000000000000))
(assert (= var4273820 temp16_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp16_215 #x0000000000000000))
(assert (= var4469136 temp16_215))
(assert (= temp16_216 #x0000000000000001))
(assert (= var211058 temp16_216))
(model-add temp16_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp16_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp16_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp16_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




