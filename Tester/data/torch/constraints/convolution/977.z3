(declare-fun temp1302_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1302_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1302_3 () (_ BitVec 64))
(declare-fun temp1302_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1302_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1302_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1302_7 () (_ BitVec 64))
(declare-fun temp1302_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1302_9 () (_ BitVec 64))
(declare-fun temp1302_10 () (_ BitVec 64))
(declare-fun temp1302_11 () (_ BitVec 64))
(declare-fun temp1302_12 () (_ BitVec 64))
(declare-fun temp1302_13 () (_ BitVec 64))
(declare-fun temp1302_14 () (_ BitVec 64))
(declare-fun temp1302_15 () (_ BitVec 64))
(declare-fun temp1302_16 () (_ BitVec 64))
(declare-fun temp1302_17 () (_ BitVec 64))
(declare-fun temp1302_18 () (_ BitVec 64))
(declare-fun temp1302_19 () (_ BitVec 64))
(declare-fun temp1302_20 () (_ BitVec 64))
(declare-fun temp1302_21 () (_ BitVec 64))
(declare-fun temp1302_22 () (_ BitVec 64))
(declare-fun temp1302_23 () (_ BitVec 64))
(declare-fun temp1302_24 () (_ BitVec 64))
(declare-fun temp1302_25 () (_ BitVec 64))
(declare-fun temp1302_26 () (_ BitVec 64))
(declare-fun temp1302_27 () (_ BitVec 64))
(declare-fun temp1302_28 () (_ BitVec 64))
(declare-fun temp1302_29 () (_ BitVec 64))
(declare-fun temp1302_30 () (_ BitVec 64))
(declare-fun temp1302_31 () (_ BitVec 64))
(declare-fun temp1302_32 () (_ BitVec 64))
(declare-fun temp1302_33 () (_ BitVec 64))
(declare-fun temp1302_34 () (_ BitVec 64))
(declare-fun temp1302_35 () (_ BitVec 64))
(declare-fun temp1302_36 () (_ BitVec 64))
(declare-fun temp1302_37 () (_ BitVec 64))
(declare-fun temp1302_38 () (_ BitVec 64))
(declare-fun temp1302_39 () (_ BitVec 64))
(declare-fun temp1302_40 () (_ BitVec 64))
(declare-fun temp1302_41 () (_ BitVec 64))
(declare-fun temp1302_42 () (_ BitVec 64))
(declare-fun temp1302_43 () (_ BitVec 64))
(declare-fun temp1302_44 () (_ BitVec 64))
(declare-fun temp1302_45 () (_ BitVec 64))
(declare-fun temp1302_46 () (_ BitVec 64))
(declare-fun temp1302_47 () (_ BitVec 64))
(declare-fun temp1302_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1302_49 () (_ BitVec 64))
(declare-fun temp1302_50 () (_ BitVec 64))
(declare-fun temp1302_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1302_52 () (_ BitVec 64))
(declare-fun temp1302_53 () (_ BitVec 64))
(declare-fun temp1302_54 () (_ BitVec 64))
(declare-fun temp1302_55 () (_ BitVec 64))
(declare-fun temp1302_56 () (_ BitVec 64))
(declare-fun temp1302_57 () (_ BitVec 64))
(declare-fun temp1302_58 () (_ BitVec 64))
(declare-fun temp1302_59 () (_ BitVec 64))
(declare-fun temp1302_60 () (_ BitVec 64))
(declare-fun temp1302_61 () (_ BitVec 64))
(declare-fun temp1302_62 () (_ BitVec 64))
(declare-fun temp1302_63 () (_ BitVec 64))
(declare-fun temp1302_64 () (_ BitVec 64))
(declare-fun temp1302_65 () (_ BitVec 64))
(declare-fun temp1302_66 () (_ BitVec 64))
(declare-fun temp1302_67 () (_ BitVec 64))
(declare-fun temp1302_68 () (_ BitVec 64))
(declare-fun temp1302_69 () (_ BitVec 64))
(declare-fun temp1302_70 () (_ BitVec 64))
(declare-fun temp1302_71 () (_ BitVec 64))
(declare-fun temp1302_72 () (_ BitVec 64))
(declare-fun temp1302_73 () (_ BitVec 64))
(declare-fun temp1302_74 () (_ BitVec 64))
(declare-fun temp1302_75 () (_ BitVec 64))
(declare-fun temp1302_76 () (_ BitVec 64))
(declare-fun temp1302_77 () (_ BitVec 64))
(declare-fun temp1302_78 () (_ BitVec 64))
(declare-fun temp1302_79 () (_ BitVec 64))
(declare-fun temp1302_80 () (_ BitVec 64))
(declare-fun temp1302_81 () (_ BitVec 64))
(declare-fun temp1302_82 () (_ BitVec 64))
(declare-fun temp1302_83 () (_ BitVec 64))
(declare-fun temp1302_84 () (_ BitVec 64))
(declare-fun temp1302_85 () (_ BitVec 64))
(declare-fun temp1302_86 () (_ BitVec 64))
(declare-fun temp1302_87 () (_ BitVec 64))
(declare-fun temp1302_88 () (_ BitVec 64))
(declare-fun temp1302_89 () (_ BitVec 64))
(declare-fun temp1302_90 () (_ BitVec 64))
(declare-fun temp1302_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1302_92 () (_ BitVec 64))
(declare-fun temp1302_93 () (_ BitVec 64))
(declare-fun temp1302_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1302_95 () (_ BitVec 64))
(declare-fun temp1302_96 () (_ BitVec 64))
(declare-fun temp1302_97 () (_ BitVec 64))
(declare-fun temp1302_98 () (_ BitVec 64))
(declare-fun temp1302_99 () (_ BitVec 64))
(declare-fun temp1302_100 () (_ BitVec 64))
(declare-fun temp1302_101 () (_ BitVec 64))
(declare-fun temp1302_102 () (_ BitVec 64))
(declare-fun temp1302_103 () (_ BitVec 64))
(declare-fun temp1302_104 () (_ BitVec 64))
(declare-fun temp1302_105 () (_ BitVec 64))
(declare-fun temp1302_106 () (_ BitVec 64))
(declare-fun temp1302_107 () (_ BitVec 64))
(declare-fun temp1302_108 () (_ BitVec 64))
(declare-fun temp1302_109 () (_ BitVec 64))
(declare-fun temp1302_110 () (_ BitVec 64))
(declare-fun temp1302_111 () (_ BitVec 64))
(declare-fun temp1302_112 () (_ BitVec 64))
(declare-fun temp1302_113 () (_ BitVec 64))
(declare-fun temp1302_114 () (_ BitVec 64))
(declare-fun temp1302_115 () (_ BitVec 64))
(declare-fun temp1302_116 () (_ BitVec 64))
(declare-fun temp1302_117 () (_ BitVec 64))
(declare-fun temp1302_118 () (_ BitVec 64))
(declare-fun temp1302_119 () (_ BitVec 64))
(declare-fun temp1302_120 () (_ BitVec 64))
(declare-fun temp1302_121 () (_ BitVec 64))
(declare-fun temp1302_122 () (_ BitVec 64))
(declare-fun temp1302_123 () (_ BitVec 64))
(declare-fun temp1302_124 () (_ BitVec 64))
(declare-fun temp1302_125 () (_ BitVec 64))
(declare-fun temp1302_126 () (_ BitVec 64))
(declare-fun temp1302_127 () (_ BitVec 64))
(declare-fun temp1302_128 () (_ BitVec 64))
(declare-fun temp1302_129 () (_ BitVec 64))
(declare-fun temp1302_130 () (_ BitVec 64))
(declare-fun temp1302_131 () (_ BitVec 64))
(declare-fun temp1302_132 () (_ BitVec 64))
(declare-fun temp1302_133 () (_ BitVec 64))
(declare-fun temp1302_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1302_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1302_136 () (_ BitVec 64))
(declare-fun temp1302_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1302_138 () (_ BitVec 64))
(declare-fun temp1302_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1302_140 () (_ BitVec 64))
(declare-fun temp1302_141 () (_ BitVec 64))
(declare-fun temp1302_142 () (_ BitVec 64))
(declare-fun temp1302_143 () (_ BitVec 64))
(declare-fun temp1302_144 () (_ BitVec 64))
(declare-fun temp1302_145 () (_ BitVec 64))
(declare-fun temp1302_146 () (_ BitVec 64))
(declare-fun temp1302_147 () (_ BitVec 64))
(declare-fun temp1302_148 () (_ BitVec 64))
(declare-fun temp1302_149 () (_ BitVec 64))
(declare-fun temp1302_150 () (_ BitVec 64))
(declare-fun temp1302_151 () (_ BitVec 64))
(declare-fun temp1302_152 () (_ BitVec 64))
(declare-fun temp1302_153 () (_ BitVec 64))
(declare-fun temp1302_154 () (_ BitVec 64))
(declare-fun temp1302_155 () (_ BitVec 64))
(declare-fun temp1302_157 () (_ BitVec 64))
(declare-fun temp1302_158 () (_ BitVec 64))
(declare-fun temp1302_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1302_159 () (_ BitVec 64))
(declare-fun temp1302_160 () (_ BitVec 64))
(declare-fun temp1302_162 () (_ BitVec 64))
(declare-fun temp1302_163 () (_ BitVec 64))
(declare-fun temp1302_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1302_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1302_165 () (_ BitVec 64))
(declare-fun temp1302_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1302_167 () (_ BitVec 64))
(declare-fun temp1302_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1302_169 () (_ BitVec 64))
(declare-fun temp1302_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1302_171 () (_ BitVec 64))
(declare-fun temp1302_172 () (_ BitVec 64))
(declare-fun temp1302_173 () (_ BitVec 64))
(declare-fun temp1302_174 () (_ BitVec 64))
(declare-fun temp1302_175 () (_ BitVec 64))
(declare-fun temp1302_176 () (_ BitVec 64))
(declare-fun temp1302_177 () (_ BitVec 64))
(declare-fun temp1302_178 () (_ BitVec 64))
(declare-fun temp1302_179 () (_ BitVec 64))
(declare-fun temp1302_180 () (_ BitVec 64))
(declare-fun temp1302_181 () (_ BitVec 64))
(declare-fun temp1302_182 () (_ BitVec 64))
(declare-fun temp1302_183 () (_ BitVec 64))
(declare-fun temp1302_184 () (_ BitVec 64))
(declare-fun temp1302_185 () (_ BitVec 64))
(declare-fun temp1302_186 () (_ BitVec 64))
(declare-fun temp1302_187 () (_ BitVec 64))
(declare-fun temp1302_188 () (_ BitVec 64))
(declare-fun temp1302_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1302_190 () (_ BitVec 64))
(declare-fun temp1302_192 () (_ BitVec 64))
(declare-fun temp1302_193 () (_ BitVec 64))
(declare-fun temp1302_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1302_194 () (_ BitVec 64))
(declare-fun temp1302_195 () (_ BitVec 64))
(declare-fun temp1302_197 () (_ BitVec 64))
(declare-fun temp1302_198 () (_ BitVec 64))
(declare-fun temp1302_196 () (_ BitVec 64))
(declare-fun temp1302_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1302_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1302_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1302_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1302_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1302_204 () (_ BitVec 64))
(declare-fun temp1302_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1302_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1302_207 () (_ BitVec 64))
(declare-fun temp1302_208 () (_ BitVec 64))
(declare-fun temp1302_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1302_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1302_211 () (_ BitVec 64))
(declare-fun temp1302_212 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1302_213 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp1302_214 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp1302_216 () (_ BitVec 64))
(declare-fun temp1302_215 () (_ BitVec 64))
(declare-fun temp1302_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp1302_218 () (_ BitVec 64))
(declare-fun temp1302_219 () (_ BitVec 64))
(declare-fun temp1302_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp1302_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp1302_222 () (_ BitVec 64))
(declare-fun temp1302_224 () (_ BitVec 64))
(declare-fun temp1302_223 () (_ BitVec 64))
(declare-fun temp1302_225 () (_ BitVec 64))
(assert (= temp1302_1 #x0000000000000001))
(assert (= var77203 temp1302_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1302_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1302_2)))
(assert (= temp1302_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1302_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1302_4 #x0000000000000000))
(assert (= var210941 temp1302_4))
(assert (= temp1302_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1302_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1302_6 #x0000000000000000))
(assert (= var210986 temp1302_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1302_7 #x0000000000000000))
(assert (= temp1302_8 temp1302_7))
(assert (= temp1302_9 (select ARGNAME_padding_NAMEEND_VAL temp1302_8)))
(assert (= temp1302_10 #x0000000000000001))
(assert (= temp1302_11 temp1302_10))
(assert (= temp1302_12 (select ARGNAME_padding_NAMEEND_VAL temp1302_11)))
(assert (= temp1302_13 #x0000000000000002))
(assert (= temp1302_14 temp1302_13))
(assert (= temp1302_15 (select ARGNAME_padding_NAMEEND_VAL temp1302_14)))
(assert (= temp1302_16 #x0000000000000003))
(assert (= temp1302_17 temp1302_16))
(assert (= temp1302_18 (select ARGNAME_padding_NAMEEND_VAL temp1302_17)))
(assert (= temp1302_19 #x0000000000000004))
(assert (= temp1302_20 temp1302_19))
(assert (= temp1302_21 (select ARGNAME_padding_NAMEEND_VAL temp1302_20)))
(assert (= temp1302_22 #x0000000000000005))
(assert (= temp1302_23 temp1302_22))
(assert (= temp1302_24 (select ARGNAME_padding_NAMEEND_VAL temp1302_23)))
(assert (= temp1302_25 #x0000000000000000))
(assert (= temp1302_26 #x0000000000000000))
(assert (= temp1302_27 temp1302_26))
(assert (= temp1302_28 (select ARGNAME_padding_NAMEEND_VAL temp1302_27)))
(assert (= temp1302_29 #x0000000000000000))
(assert (= temp1302_30 #x0000000000000001))
(assert (= temp1302_31 temp1302_30))
(assert (= temp1302_32 (select ARGNAME_padding_NAMEEND_VAL temp1302_31)))
(assert (= temp1302_33 #x0000000000000000))
(assert (= temp1302_34 #x0000000000000002))
(assert (= temp1302_35 temp1302_34))
(assert (= temp1302_36 (select ARGNAME_padding_NAMEEND_VAL temp1302_35)))
(assert (= temp1302_37 #x0000000000000000))
(assert (= temp1302_38 #x0000000000000003))
(assert (= temp1302_39 temp1302_38))
(assert (= temp1302_40 (select ARGNAME_padding_NAMEEND_VAL temp1302_39)))
(assert (= temp1302_41 #x0000000000000000))
(assert (= temp1302_42 #x0000000000000004))
(assert (= temp1302_43 temp1302_42))
(assert (= temp1302_44 (select ARGNAME_padding_NAMEEND_VAL temp1302_43)))
(assert (= temp1302_45 #x0000000000000000))
(assert (= temp1302_46 #x0000000000000005))
(assert (= temp1302_47 temp1302_46))
(assert (= temp1302_48 (select ARGNAME_padding_NAMEEND_VAL temp1302_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1302_28 temp1302_25)
             (bvslt temp1302_32 temp1302_29)
             (bvslt temp1302_36 temp1302_33)
             (bvslt temp1302_40 temp1302_37)
             (bvslt temp1302_44 temp1302_41)
             (bvslt temp1302_48 temp1302_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1302_49 #x0000000000000000))
(assert (= var1191714 temp1302_49))
(assert (= temp1302_50 #x0000000000000000))
(assert (= temp1302_51 temp1302_50))
(assert (= temp1302_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1302_51)))
(assert (= temp1302_53 #x0000000000000001))
(assert (= temp1302_54 temp1302_53))
(assert (= temp1302_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1302_54)))
(assert (= temp1302_56 #x0000000000000002))
(assert (= temp1302_57 temp1302_56))
(assert (= temp1302_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1302_57)))
(assert (= temp1302_59 #x0000000000000003))
(assert (= temp1302_60 temp1302_59))
(assert (= temp1302_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1302_60)))
(assert (= temp1302_62 #x0000000000000004))
(assert (= temp1302_63 temp1302_62))
(assert (= temp1302_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1302_63)))
(assert (= temp1302_65 #x0000000000000005))
(assert (= temp1302_66 temp1302_65))
(assert (= temp1302_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1302_66)))
(assert (= temp1302_68 #x0000000000000000))
(assert (= temp1302_69 #x0000000000000000))
(assert (= temp1302_70 temp1302_69))
(assert (= temp1302_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1302_70)))
(assert (= temp1302_72 #x0000000000000000))
(assert (= temp1302_73 #x0000000000000001))
(assert (= temp1302_74 temp1302_73))
(assert (= temp1302_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1302_74)))
(assert (= temp1302_76 #x0000000000000000))
(assert (= temp1302_77 #x0000000000000002))
(assert (= temp1302_78 temp1302_77))
(assert (= temp1302_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1302_78)))
(assert (= temp1302_80 #x0000000000000000))
(assert (= temp1302_81 #x0000000000000003))
(assert (= temp1302_82 temp1302_81))
(assert (= temp1302_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1302_82)))
(assert (= temp1302_84 #x0000000000000000))
(assert (= temp1302_85 #x0000000000000004))
(assert (= temp1302_86 temp1302_85))
(assert (= temp1302_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1302_86)))
(assert (= temp1302_88 #x0000000000000000))
(assert (= temp1302_89 #x0000000000000005))
(assert (= temp1302_90 temp1302_89))
(assert (= temp1302_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1302_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1302_71 temp1302_68)
             (bvslt temp1302_75 temp1302_72)
             (bvslt temp1302_79 temp1302_76)
             (bvslt temp1302_83 temp1302_80)
             (bvslt temp1302_87 temp1302_84)
             (bvslt temp1302_91 temp1302_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1302_92 #x0000000000000000))
(assert (= var1191725 temp1302_92))
(assert (= temp1302_93 #x0000000000000000))
(assert (= temp1302_94 temp1302_93))
(assert (= temp1302_95 (select ARGNAME_stride_NAMEEND_VAL temp1302_94)))
(assert (= temp1302_96 #x0000000000000001))
(assert (= temp1302_97 temp1302_96))
(assert (= temp1302_98 (select ARGNAME_stride_NAMEEND_VAL temp1302_97)))
(assert (= temp1302_99 #x0000000000000002))
(assert (= temp1302_100 temp1302_99))
(assert (= temp1302_101 (select ARGNAME_stride_NAMEEND_VAL temp1302_100)))
(assert (= temp1302_102 #x0000000000000003))
(assert (= temp1302_103 temp1302_102))
(assert (= temp1302_104 (select ARGNAME_stride_NAMEEND_VAL temp1302_103)))
(assert (= temp1302_105 #x0000000000000004))
(assert (= temp1302_106 temp1302_105))
(assert (= temp1302_107 (select ARGNAME_stride_NAMEEND_VAL temp1302_106)))
(assert (= temp1302_108 #x0000000000000005))
(assert (= temp1302_109 temp1302_108))
(assert (= temp1302_110 (select ARGNAME_stride_NAMEEND_VAL temp1302_109)))
(assert (= temp1302_111 #x0000000000000000))
(assert (= temp1302_112 #x0000000000000000))
(assert (= temp1302_113 temp1302_112))
(assert (= temp1302_114 (select ARGNAME_stride_NAMEEND_VAL temp1302_113)))
(assert (= temp1302_115 #x0000000000000000))
(assert (= temp1302_116 #x0000000000000001))
(assert (= temp1302_117 temp1302_116))
(assert (= temp1302_118 (select ARGNAME_stride_NAMEEND_VAL temp1302_117)))
(assert (= temp1302_119 #x0000000000000000))
(assert (= temp1302_120 #x0000000000000002))
(assert (= temp1302_121 temp1302_120))
(assert (= temp1302_122 (select ARGNAME_stride_NAMEEND_VAL temp1302_121)))
(assert (= temp1302_123 #x0000000000000000))
(assert (= temp1302_124 #x0000000000000003))
(assert (= temp1302_125 temp1302_124))
(assert (= temp1302_126 (select ARGNAME_stride_NAMEEND_VAL temp1302_125)))
(assert (= temp1302_127 #x0000000000000000))
(assert (= temp1302_128 #x0000000000000004))
(assert (= temp1302_129 temp1302_128))
(assert (= temp1302_130 (select ARGNAME_stride_NAMEEND_VAL temp1302_129)))
(assert (= temp1302_131 #x0000000000000000))
(assert (= temp1302_132 #x0000000000000005))
(assert (= temp1302_133 temp1302_132))
(assert (= temp1302_134 (select ARGNAME_stride_NAMEEND_VAL temp1302_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1302_114 temp1302_111)
             (bvsle temp1302_118 temp1302_115)
             (bvsle temp1302_122 temp1302_119)
             (bvsle temp1302_126 temp1302_123)
             (bvsle temp1302_130 temp1302_127)
             (bvsle temp1302_134 temp1302_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1302_135 #x0000000000000000))
(assert (= var1191735 temp1302_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1302_136 #x0000000000000001))
(assert (= var1191747 temp1302_136))
(assert (= temp1302_137 #x0000000000000000))
(assert (= var1179826 temp1302_137))
(assert (= temp1302_138 #x0000000000000000))
(assert (= temp1302_139 temp1302_138))
(assert (= temp1302_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1302_139)))
(assert (= temp1302_141 #x0000000000000001))
(assert (= temp1302_142 temp1302_141))
(assert (= temp1302_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1302_142)))
(assert (= temp1302_144 #x0000000000000002))
(assert (= temp1302_145 temp1302_144))
(assert (= temp1302_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1302_145)))
(assert (= temp1302_147 #x0000000000000003))
(assert (= temp1302_148 temp1302_147))
(assert (= temp1302_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1302_148)))
(assert (= temp1302_150 #x0000000000000004))
(assert (= temp1302_151 temp1302_150))
(assert (= temp1302_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1302_151)))
(assert (= temp1302_153 #x0000000000000005))
(assert (= temp1302_154 temp1302_153))
(assert (= temp1302_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1302_154)))
(assert (= temp1302_157 var1179826))
(assert (= temp1302_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1302_157)))
(assert (= temp1302_156 temp1302_158))
(assert (= var1191780
   (ite (bvslt temp1302_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1302_159 #x0000000000000000))
(assert (= var1191780 temp1302_159))
(assert (= temp1302_160 #x0000000000000000))
(assert (= var1179826 temp1302_160))
(assert (= temp1302_162 var1179826))
(assert (= temp1302_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1302_162)))
(assert (= temp1302_161 temp1302_163))
(assert (= var1191802 (bvsmod temp1302_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1302_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1302_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1302_165 #x0000000000000001))
(assert (= var1191803 temp1302_165))
(assert (= temp1302_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1302_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1302_167 #x0000000000000001))
(assert (= var1191823 temp1302_167))
(assert (= temp1302_168 #x0000000000000001))
(assert (= var1180714 temp1302_168))
(assert (= temp1302_169 #x0000000000000000))
(assert (= temp1302_170 temp1302_169))
(assert (= temp1302_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1302_170)))
(assert (= temp1302_172 #x0000000000000001))
(assert (= temp1302_173 temp1302_172))
(assert (= temp1302_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1302_173)))
(assert (= temp1302_175 #x0000000000000002))
(assert (= temp1302_176 temp1302_175))
(assert (= temp1302_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1302_176)))
(assert (= temp1302_178 #x0000000000000003))
(assert (= temp1302_179 temp1302_178))
(assert (= temp1302_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1302_179)))
(assert (= temp1302_181 #x0000000000000004))
(assert (= temp1302_182 temp1302_181))
(assert (= temp1302_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1302_182)))
(assert (= temp1302_184 #x0000000000000005))
(assert (= temp1302_185 temp1302_184))
(assert (= temp1302_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1302_185)))
(assert (= temp1302_187 #x0000000000000000))
(assert (= temp1302_188
   (ite (bvslt var1180714 temp1302_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1302_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1302_188)))
(assert (= var1191831 temp1302_189))
(assert (bvslt (ite (bvslt var1180714 temp1302_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1302_190 #x0000000000000001))
(assert (= var1180714 temp1302_190))
(assert (= temp1302_192 var1180714))
(assert (= temp1302_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1302_192)))
(assert (= temp1302_191 temp1302_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1302_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1302_194 #x0000000000000001))
(assert (= var1191836 temp1302_194))
(assert (= temp1302_195 #x0000000000000000))
(assert (= var1179826 temp1302_195))
(assert (= temp1302_197 var1179826))
(assert (= temp1302_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1302_197)))
(assert (= temp1302_196 temp1302_198))
(assert (= temp1302_199 #x0000000000000002))
(assert (= var1586025 temp1302_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1302_200 #x0000000000000001))
(assert (= var1191993 temp1302_200))
(assert (= temp1302_201 #x0000000000000001))
(assert (= var2700303 temp1302_201))
(assert (= temp1302_202 #x0000000000000001))
(assert (= var2962447 temp1302_202))
(assert (= temp1302_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1302_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1302_204 #x0000000000000001))
(assert (= var211058 temp1302_204))
(assert (= temp1302_205 #x0000000000000001))
(assert (= var211188 temp1302_205))
(assert (= var3879401 var211188))
(assert (= temp1302_206 #x0000000000000000))
(assert (= var3866802 temp1302_206))
(assert (= temp1302_207 #x0000000000000000))
(assert (= temp1302_208
   (ite (bvslt var3866802 temp1302_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1302_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1302_208)))
(assert (= var3879420 temp1302_209))
(assert (bvslt (ite (bvslt var3866802 temp1302_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1302_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1302_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1302_211 #x0000000000000001))
(assert (= var3879421 temp1302_211))
(assert (= temp1302_212 #x0000000000000000))
(assert (= var4133117 temp1302_212))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1302_213 #x0000000000000002))
(assert (= var4339331 temp1302_213))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1302_214 #x0000000000000000))
(assert (= var4404892 temp1302_214))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp1302_216 #xffffffffffffffff))
(assert (= temp1302_215 temp1302_216))
(assert (= temp1302_217 #x0000000000000001))
(assert (= var197674 temp1302_217))
(assert (= temp1302_218 #x0000000000000000))
(assert (= temp1302_219
   (ite (bvslt var197674 temp1302_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp1302_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp1302_219)))
(assert (= var211595 temp1302_220))
(assert (bvslt (ite (bvslt var197674 temp1302_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1302_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp1302_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp1302_222 #x0000000000000001))
(assert (= var211596 temp1302_222))
(assert (= temp1302_224 #xffffffffffffffff))
(assert (= temp1302_223 temp1302_224))
(assert (= temp1302_225 #x0000000000000001))
(assert (= var211058 temp1302_225))
(model-add temp1302_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1302_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1302_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1302_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






