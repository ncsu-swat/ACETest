(declare-fun temp10065_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10065_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10065_3 () (_ BitVec 64))
(declare-fun temp10065_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10065_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10065_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10065_7 () (_ BitVec 64))
(declare-fun temp10065_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10065_9 () (_ BitVec 64))
(declare-fun temp10065_10 () (_ BitVec 64))
(declare-fun temp10065_11 () (_ BitVec 64))
(declare-fun temp10065_12 () (_ BitVec 64))
(declare-fun temp10065_13 () (_ BitVec 64))
(declare-fun temp10065_14 () (_ BitVec 64))
(declare-fun temp10065_15 () (_ BitVec 64))
(declare-fun temp10065_16 () (_ BitVec 64))
(declare-fun temp10065_17 () (_ BitVec 64))
(declare-fun temp10065_18 () (_ BitVec 64))
(declare-fun temp10065_19 () (_ BitVec 64))
(declare-fun temp10065_20 () (_ BitVec 64))
(declare-fun temp10065_21 () (_ BitVec 64))
(declare-fun temp10065_22 () (_ BitVec 64))
(declare-fun temp10065_23 () (_ BitVec 64))
(declare-fun temp10065_24 () (_ BitVec 64))
(declare-fun temp10065_25 () (_ BitVec 64))
(declare-fun temp10065_26 () (_ BitVec 64))
(declare-fun temp10065_27 () (_ BitVec 64))
(declare-fun temp10065_28 () (_ BitVec 64))
(declare-fun temp10065_29 () (_ BitVec 64))
(declare-fun temp10065_30 () (_ BitVec 64))
(declare-fun temp10065_31 () (_ BitVec 64))
(declare-fun temp10065_32 () (_ BitVec 64))
(declare-fun temp10065_33 () (_ BitVec 64))
(declare-fun temp10065_34 () (_ BitVec 64))
(declare-fun temp10065_35 () (_ BitVec 64))
(declare-fun temp10065_36 () (_ BitVec 64))
(declare-fun temp10065_37 () (_ BitVec 64))
(declare-fun temp10065_38 () (_ BitVec 64))
(declare-fun temp10065_39 () (_ BitVec 64))
(declare-fun temp10065_40 () (_ BitVec 64))
(declare-fun temp10065_41 () (_ BitVec 64))
(declare-fun temp10065_42 () (_ BitVec 64))
(declare-fun temp10065_43 () (_ BitVec 64))
(declare-fun temp10065_44 () (_ BitVec 64))
(declare-fun temp10065_45 () (_ BitVec 64))
(declare-fun temp10065_46 () (_ BitVec 64))
(declare-fun temp10065_47 () (_ BitVec 64))
(declare-fun temp10065_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10065_49 () (_ BitVec 64))
(declare-fun temp10065_50 () (_ BitVec 64))
(declare-fun temp10065_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10065_52 () (_ BitVec 64))
(declare-fun temp10065_53 () (_ BitVec 64))
(declare-fun temp10065_54 () (_ BitVec 64))
(declare-fun temp10065_55 () (_ BitVec 64))
(declare-fun temp10065_56 () (_ BitVec 64))
(declare-fun temp10065_57 () (_ BitVec 64))
(declare-fun temp10065_58 () (_ BitVec 64))
(declare-fun temp10065_59 () (_ BitVec 64))
(declare-fun temp10065_60 () (_ BitVec 64))
(declare-fun temp10065_61 () (_ BitVec 64))
(declare-fun temp10065_62 () (_ BitVec 64))
(declare-fun temp10065_63 () (_ BitVec 64))
(declare-fun temp10065_64 () (_ BitVec 64))
(declare-fun temp10065_65 () (_ BitVec 64))
(declare-fun temp10065_66 () (_ BitVec 64))
(declare-fun temp10065_67 () (_ BitVec 64))
(declare-fun temp10065_68 () (_ BitVec 64))
(declare-fun temp10065_69 () (_ BitVec 64))
(declare-fun temp10065_70 () (_ BitVec 64))
(declare-fun temp10065_71 () (_ BitVec 64))
(declare-fun temp10065_72 () (_ BitVec 64))
(declare-fun temp10065_73 () (_ BitVec 64))
(declare-fun temp10065_74 () (_ BitVec 64))
(declare-fun temp10065_75 () (_ BitVec 64))
(declare-fun temp10065_76 () (_ BitVec 64))
(declare-fun temp10065_77 () (_ BitVec 64))
(declare-fun temp10065_78 () (_ BitVec 64))
(declare-fun temp10065_79 () (_ BitVec 64))
(declare-fun temp10065_80 () (_ BitVec 64))
(declare-fun temp10065_81 () (_ BitVec 64))
(declare-fun temp10065_82 () (_ BitVec 64))
(declare-fun temp10065_83 () (_ BitVec 64))
(declare-fun temp10065_84 () (_ BitVec 64))
(declare-fun temp10065_85 () (_ BitVec 64))
(declare-fun temp10065_86 () (_ BitVec 64))
(declare-fun temp10065_87 () (_ BitVec 64))
(declare-fun temp10065_88 () (_ BitVec 64))
(declare-fun temp10065_89 () (_ BitVec 64))
(declare-fun temp10065_90 () (_ BitVec 64))
(declare-fun temp10065_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10065_92 () (_ BitVec 64))
(declare-fun temp10065_93 () (_ BitVec 64))
(declare-fun temp10065_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10065_95 () (_ BitVec 64))
(declare-fun temp10065_96 () (_ BitVec 64))
(declare-fun temp10065_97 () (_ BitVec 64))
(declare-fun temp10065_98 () (_ BitVec 64))
(declare-fun temp10065_99 () (_ BitVec 64))
(declare-fun temp10065_100 () (_ BitVec 64))
(declare-fun temp10065_101 () (_ BitVec 64))
(declare-fun temp10065_102 () (_ BitVec 64))
(declare-fun temp10065_103 () (_ BitVec 64))
(declare-fun temp10065_104 () (_ BitVec 64))
(declare-fun temp10065_105 () (_ BitVec 64))
(declare-fun temp10065_106 () (_ BitVec 64))
(declare-fun temp10065_107 () (_ BitVec 64))
(declare-fun temp10065_108 () (_ BitVec 64))
(declare-fun temp10065_109 () (_ BitVec 64))
(declare-fun temp10065_110 () (_ BitVec 64))
(declare-fun temp10065_111 () (_ BitVec 64))
(declare-fun temp10065_112 () (_ BitVec 64))
(declare-fun temp10065_113 () (_ BitVec 64))
(declare-fun temp10065_114 () (_ BitVec 64))
(declare-fun temp10065_115 () (_ BitVec 64))
(declare-fun temp10065_116 () (_ BitVec 64))
(declare-fun temp10065_117 () (_ BitVec 64))
(declare-fun temp10065_118 () (_ BitVec 64))
(declare-fun temp10065_119 () (_ BitVec 64))
(declare-fun temp10065_120 () (_ BitVec 64))
(declare-fun temp10065_121 () (_ BitVec 64))
(declare-fun temp10065_122 () (_ BitVec 64))
(declare-fun temp10065_123 () (_ BitVec 64))
(declare-fun temp10065_124 () (_ BitVec 64))
(declare-fun temp10065_125 () (_ BitVec 64))
(declare-fun temp10065_126 () (_ BitVec 64))
(declare-fun temp10065_127 () (_ BitVec 64))
(declare-fun temp10065_128 () (_ BitVec 64))
(declare-fun temp10065_129 () (_ BitVec 64))
(declare-fun temp10065_130 () (_ BitVec 64))
(declare-fun temp10065_131 () (_ BitVec 64))
(declare-fun temp10065_132 () (_ BitVec 64))
(declare-fun temp10065_133 () (_ BitVec 64))
(declare-fun temp10065_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10065_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10065_136 () (_ BitVec 64))
(declare-fun temp10065_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10065_138 () (_ BitVec 64))
(declare-fun temp10065_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10065_140 () (_ BitVec 64))
(declare-fun temp10065_141 () (_ BitVec 64))
(declare-fun temp10065_142 () (_ BitVec 64))
(declare-fun temp10065_143 () (_ BitVec 64))
(declare-fun temp10065_144 () (_ BitVec 64))
(declare-fun temp10065_145 () (_ BitVec 64))
(declare-fun temp10065_146 () (_ BitVec 64))
(declare-fun temp10065_147 () (_ BitVec 64))
(declare-fun temp10065_148 () (_ BitVec 64))
(declare-fun temp10065_149 () (_ BitVec 64))
(declare-fun temp10065_150 () (_ BitVec 64))
(declare-fun temp10065_151 () (_ BitVec 64))
(declare-fun temp10065_152 () (_ BitVec 64))
(declare-fun temp10065_153 () (_ BitVec 64))
(declare-fun temp10065_154 () (_ BitVec 64))
(declare-fun temp10065_155 () (_ BitVec 64))
(declare-fun temp10065_157 () (_ BitVec 64))
(declare-fun temp10065_158 () (_ BitVec 64))
(declare-fun temp10065_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10065_159 () (_ BitVec 64))
(declare-fun temp10065_160 () (_ BitVec 64))
(declare-fun temp10065_162 () (_ BitVec 64))
(declare-fun temp10065_163 () (_ BitVec 64))
(declare-fun temp10065_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10065_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10065_165 () (_ BitVec 64))
(declare-fun temp10065_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10065_167 () (_ BitVec 64))
(declare-fun temp10065_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10065_169 () (_ BitVec 64))
(declare-fun temp10065_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10065_171 () (_ BitVec 64))
(declare-fun temp10065_172 () (_ BitVec 64))
(declare-fun temp10065_173 () (_ BitVec 64))
(declare-fun temp10065_174 () (_ BitVec 64))
(declare-fun temp10065_175 () (_ BitVec 64))
(declare-fun temp10065_176 () (_ BitVec 64))
(declare-fun temp10065_177 () (_ BitVec 64))
(declare-fun temp10065_178 () (_ BitVec 64))
(declare-fun temp10065_179 () (_ BitVec 64))
(declare-fun temp10065_180 () (_ BitVec 64))
(declare-fun temp10065_181 () (_ BitVec 64))
(declare-fun temp10065_182 () (_ BitVec 64))
(declare-fun temp10065_183 () (_ BitVec 64))
(declare-fun temp10065_184 () (_ BitVec 64))
(declare-fun temp10065_185 () (_ BitVec 64))
(declare-fun temp10065_186 () (_ BitVec 64))
(declare-fun temp10065_187 () (_ BitVec 64))
(declare-fun temp10065_188 () (_ BitVec 64))
(declare-fun temp10065_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10065_190 () (_ BitVec 64))
(declare-fun temp10065_192 () (_ BitVec 64))
(declare-fun temp10065_193 () (_ BitVec 64))
(declare-fun temp10065_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10065_194 () (_ BitVec 64))
(declare-fun temp10065_195 () (_ BitVec 64))
(declare-fun temp10065_197 () (_ BitVec 64))
(declare-fun temp10065_198 () (_ BitVec 64))
(declare-fun temp10065_196 () (_ BitVec 64))
(declare-fun temp10065_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10065_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10065_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10065_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10065_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10065_204 () (_ BitVec 64))
(declare-fun temp10065_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10065_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10065_207 () (_ BitVec 64))
(declare-fun temp10065_208 () (_ BitVec 64))
(declare-fun temp10065_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10065_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10065_211 () (_ BitVec 64))
(declare-fun temp10065_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10065_213 () (_ BitVec 64))
(declare-fun temp10065_214 () (_ BitVec 64))
(declare-fun temp10065_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10065_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10065_217 () (_ BitVec 64))
(declare-fun temp10065_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10065_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10065_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10065_222 () (_ BitVec 64))
(declare-fun temp10065_221 () (_ BitVec 64))
(declare-fun temp10065_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10065_224 () (_ BitVec 64))
(declare-fun temp10065_225 () (_ BitVec 64))
(declare-fun temp10065_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10065_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10065_228 () (_ BitVec 64))
(declare-fun temp10065_230 () (_ BitVec 64))
(declare-fun temp10065_229 () (_ BitVec 64))
(declare-fun temp10065_231 () (_ BitVec 64))
(assert (= temp10065_1 #x0000000000000001))
(assert (= var77203 temp10065_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10065_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10065_2)))
(assert (= temp10065_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10065_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10065_4 #x0000000000000000))
(assert (= var210941 temp10065_4))
(assert (= temp10065_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10065_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10065_6 #x0000000000000000))
(assert (= var210986 temp10065_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10065_7 #x0000000000000000))
(assert (= temp10065_8 temp10065_7))
(assert (= temp10065_9 (select ARGNAME_padding_NAMEEND_VAL temp10065_8)))
(assert (= temp10065_10 #x0000000000000001))
(assert (= temp10065_11 temp10065_10))
(assert (= temp10065_12 (select ARGNAME_padding_NAMEEND_VAL temp10065_11)))
(assert (= temp10065_13 #x0000000000000002))
(assert (= temp10065_14 temp10065_13))
(assert (= temp10065_15 (select ARGNAME_padding_NAMEEND_VAL temp10065_14)))
(assert (= temp10065_16 #x0000000000000003))
(assert (= temp10065_17 temp10065_16))
(assert (= temp10065_18 (select ARGNAME_padding_NAMEEND_VAL temp10065_17)))
(assert (= temp10065_19 #x0000000000000004))
(assert (= temp10065_20 temp10065_19))
(assert (= temp10065_21 (select ARGNAME_padding_NAMEEND_VAL temp10065_20)))
(assert (= temp10065_22 #x0000000000000005))
(assert (= temp10065_23 temp10065_22))
(assert (= temp10065_24 (select ARGNAME_padding_NAMEEND_VAL temp10065_23)))
(assert (= temp10065_25 #x0000000000000000))
(assert (= temp10065_26 #x0000000000000000))
(assert (= temp10065_27 temp10065_26))
(assert (= temp10065_28 (select ARGNAME_padding_NAMEEND_VAL temp10065_27)))
(assert (= temp10065_29 #x0000000000000000))
(assert (= temp10065_30 #x0000000000000001))
(assert (= temp10065_31 temp10065_30))
(assert (= temp10065_32 (select ARGNAME_padding_NAMEEND_VAL temp10065_31)))
(assert (= temp10065_33 #x0000000000000000))
(assert (= temp10065_34 #x0000000000000002))
(assert (= temp10065_35 temp10065_34))
(assert (= temp10065_36 (select ARGNAME_padding_NAMEEND_VAL temp10065_35)))
(assert (= temp10065_37 #x0000000000000000))
(assert (= temp10065_38 #x0000000000000003))
(assert (= temp10065_39 temp10065_38))
(assert (= temp10065_40 (select ARGNAME_padding_NAMEEND_VAL temp10065_39)))
(assert (= temp10065_41 #x0000000000000000))
(assert (= temp10065_42 #x0000000000000004))
(assert (= temp10065_43 temp10065_42))
(assert (= temp10065_44 (select ARGNAME_padding_NAMEEND_VAL temp10065_43)))
(assert (= temp10065_45 #x0000000000000000))
(assert (= temp10065_46 #x0000000000000005))
(assert (= temp10065_47 temp10065_46))
(assert (= temp10065_48 (select ARGNAME_padding_NAMEEND_VAL temp10065_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10065_28 temp10065_25)
             (bvslt temp10065_32 temp10065_29)
             (bvslt temp10065_36 temp10065_33)
             (bvslt temp10065_40 temp10065_37)
             (bvslt temp10065_44 temp10065_41)
             (bvslt temp10065_48 temp10065_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10065_49 #x0000000000000000))
(assert (= var1191714 temp10065_49))
(assert (= temp10065_50 #x0000000000000000))
(assert (= temp10065_51 temp10065_50))
(assert (= temp10065_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10065_51)))
(assert (= temp10065_53 #x0000000000000001))
(assert (= temp10065_54 temp10065_53))
(assert (= temp10065_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10065_54)))
(assert (= temp10065_56 #x0000000000000002))
(assert (= temp10065_57 temp10065_56))
(assert (= temp10065_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10065_57)))
(assert (= temp10065_59 #x0000000000000003))
(assert (= temp10065_60 temp10065_59))
(assert (= temp10065_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10065_60)))
(assert (= temp10065_62 #x0000000000000004))
(assert (= temp10065_63 temp10065_62))
(assert (= temp10065_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10065_63)))
(assert (= temp10065_65 #x0000000000000005))
(assert (= temp10065_66 temp10065_65))
(assert (= temp10065_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10065_66)))
(assert (= temp10065_68 #x0000000000000000))
(assert (= temp10065_69 #x0000000000000000))
(assert (= temp10065_70 temp10065_69))
(assert (= temp10065_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10065_70)))
(assert (= temp10065_72 #x0000000000000000))
(assert (= temp10065_73 #x0000000000000001))
(assert (= temp10065_74 temp10065_73))
(assert (= temp10065_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10065_74)))
(assert (= temp10065_76 #x0000000000000000))
(assert (= temp10065_77 #x0000000000000002))
(assert (= temp10065_78 temp10065_77))
(assert (= temp10065_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10065_78)))
(assert (= temp10065_80 #x0000000000000000))
(assert (= temp10065_81 #x0000000000000003))
(assert (= temp10065_82 temp10065_81))
(assert (= temp10065_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10065_82)))
(assert (= temp10065_84 #x0000000000000000))
(assert (= temp10065_85 #x0000000000000004))
(assert (= temp10065_86 temp10065_85))
(assert (= temp10065_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10065_86)))
(assert (= temp10065_88 #x0000000000000000))
(assert (= temp10065_89 #x0000000000000005))
(assert (= temp10065_90 temp10065_89))
(assert (= temp10065_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10065_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10065_71 temp10065_68)
             (bvslt temp10065_75 temp10065_72)
             (bvslt temp10065_79 temp10065_76)
             (bvslt temp10065_83 temp10065_80)
             (bvslt temp10065_87 temp10065_84)
             (bvslt temp10065_91 temp10065_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10065_92 #x0000000000000000))
(assert (= var1191725 temp10065_92))
(assert (= temp10065_93 #x0000000000000000))
(assert (= temp10065_94 temp10065_93))
(assert (= temp10065_95 (select ARGNAME_stride_NAMEEND_VAL temp10065_94)))
(assert (= temp10065_96 #x0000000000000001))
(assert (= temp10065_97 temp10065_96))
(assert (= temp10065_98 (select ARGNAME_stride_NAMEEND_VAL temp10065_97)))
(assert (= temp10065_99 #x0000000000000002))
(assert (= temp10065_100 temp10065_99))
(assert (= temp10065_101 (select ARGNAME_stride_NAMEEND_VAL temp10065_100)))
(assert (= temp10065_102 #x0000000000000003))
(assert (= temp10065_103 temp10065_102))
(assert (= temp10065_104 (select ARGNAME_stride_NAMEEND_VAL temp10065_103)))
(assert (= temp10065_105 #x0000000000000004))
(assert (= temp10065_106 temp10065_105))
(assert (= temp10065_107 (select ARGNAME_stride_NAMEEND_VAL temp10065_106)))
(assert (= temp10065_108 #x0000000000000005))
(assert (= temp10065_109 temp10065_108))
(assert (= temp10065_110 (select ARGNAME_stride_NAMEEND_VAL temp10065_109)))
(assert (= temp10065_111 #x0000000000000000))
(assert (= temp10065_112 #x0000000000000000))
(assert (= temp10065_113 temp10065_112))
(assert (= temp10065_114 (select ARGNAME_stride_NAMEEND_VAL temp10065_113)))
(assert (= temp10065_115 #x0000000000000000))
(assert (= temp10065_116 #x0000000000000001))
(assert (= temp10065_117 temp10065_116))
(assert (= temp10065_118 (select ARGNAME_stride_NAMEEND_VAL temp10065_117)))
(assert (= temp10065_119 #x0000000000000000))
(assert (= temp10065_120 #x0000000000000002))
(assert (= temp10065_121 temp10065_120))
(assert (= temp10065_122 (select ARGNAME_stride_NAMEEND_VAL temp10065_121)))
(assert (= temp10065_123 #x0000000000000000))
(assert (= temp10065_124 #x0000000000000003))
(assert (= temp10065_125 temp10065_124))
(assert (= temp10065_126 (select ARGNAME_stride_NAMEEND_VAL temp10065_125)))
(assert (= temp10065_127 #x0000000000000000))
(assert (= temp10065_128 #x0000000000000004))
(assert (= temp10065_129 temp10065_128))
(assert (= temp10065_130 (select ARGNAME_stride_NAMEEND_VAL temp10065_129)))
(assert (= temp10065_131 #x0000000000000000))
(assert (= temp10065_132 #x0000000000000005))
(assert (= temp10065_133 temp10065_132))
(assert (= temp10065_134 (select ARGNAME_stride_NAMEEND_VAL temp10065_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10065_114 temp10065_111)
             (bvsle temp10065_118 temp10065_115)
             (bvsle temp10065_122 temp10065_119)
             (bvsle temp10065_126 temp10065_123)
             (bvsle temp10065_130 temp10065_127)
             (bvsle temp10065_134 temp10065_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10065_135 #x0000000000000000))
(assert (= var1191735 temp10065_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10065_136 #x0000000000000001))
(assert (= var1191747 temp10065_136))
(assert (= temp10065_137 #x0000000000000000))
(assert (= var1179826 temp10065_137))
(assert (= temp10065_138 #x0000000000000000))
(assert (= temp10065_139 temp10065_138))
(assert (= temp10065_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10065_139)))
(assert (= temp10065_141 #x0000000000000001))
(assert (= temp10065_142 temp10065_141))
(assert (= temp10065_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10065_142)))
(assert (= temp10065_144 #x0000000000000002))
(assert (= temp10065_145 temp10065_144))
(assert (= temp10065_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10065_145)))
(assert (= temp10065_147 #x0000000000000003))
(assert (= temp10065_148 temp10065_147))
(assert (= temp10065_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10065_148)))
(assert (= temp10065_150 #x0000000000000004))
(assert (= temp10065_151 temp10065_150))
(assert (= temp10065_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10065_151)))
(assert (= temp10065_153 #x0000000000000005))
(assert (= temp10065_154 temp10065_153))
(assert (= temp10065_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10065_154)))
(assert (= temp10065_157 var1179826))
(assert (= temp10065_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10065_157)))
(assert (= temp10065_156 temp10065_158))
(assert (= var1191780
   (ite (bvslt temp10065_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10065_159 #x0000000000000000))
(assert (= var1191780 temp10065_159))
(assert (= temp10065_160 #x0000000000000000))
(assert (= var1179826 temp10065_160))
(assert (= temp10065_162 var1179826))
(assert (= temp10065_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10065_162)))
(assert (= temp10065_161 temp10065_163))
(assert (= var1191802 (bvsmod temp10065_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10065_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10065_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10065_165 #x0000000000000001))
(assert (= var1191803 temp10065_165))
(assert (= temp10065_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10065_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10065_167 #x0000000000000001))
(assert (= var1191823 temp10065_167))
(assert (= temp10065_168 #x0000000000000001))
(assert (= var1180714 temp10065_168))
(assert (= temp10065_169 #x0000000000000000))
(assert (= temp10065_170 temp10065_169))
(assert (= temp10065_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10065_170)))
(assert (= temp10065_172 #x0000000000000001))
(assert (= temp10065_173 temp10065_172))
(assert (= temp10065_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10065_173)))
(assert (= temp10065_175 #x0000000000000002))
(assert (= temp10065_176 temp10065_175))
(assert (= temp10065_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10065_176)))
(assert (= temp10065_178 #x0000000000000003))
(assert (= temp10065_179 temp10065_178))
(assert (= temp10065_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10065_179)))
(assert (= temp10065_181 #x0000000000000004))
(assert (= temp10065_182 temp10065_181))
(assert (= temp10065_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10065_182)))
(assert (= temp10065_184 #x0000000000000005))
(assert (= temp10065_185 temp10065_184))
(assert (= temp10065_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10065_185)))
(assert (= temp10065_187 #x0000000000000000))
(assert (= temp10065_188
   (ite (bvslt var1180714 temp10065_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10065_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10065_188)))
(assert (= var1191831 temp10065_189))
(assert (bvslt (ite (bvslt var1180714 temp10065_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10065_190 #x0000000000000001))
(assert (= var1180714 temp10065_190))
(assert (= temp10065_192 var1180714))
(assert (= temp10065_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10065_192)))
(assert (= temp10065_191 temp10065_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10065_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10065_194 #x0000000000000001))
(assert (= var1191836 temp10065_194))
(assert (= temp10065_195 #x0000000000000000))
(assert (= var1179826 temp10065_195))
(assert (= temp10065_197 var1179826))
(assert (= temp10065_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10065_197)))
(assert (= temp10065_196 temp10065_198))
(assert (= temp10065_199 #x0000000000000002))
(assert (= var1586025 temp10065_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10065_200 #x0000000000000001))
(assert (= var1191993 temp10065_200))
(assert (= temp10065_201 #x0000000000000001))
(assert (= var2700303 temp10065_201))
(assert (= temp10065_202 #x0000000000000001))
(assert (= var2962447 temp10065_202))
(assert (= temp10065_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10065_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10065_204 #x0000000000000001))
(assert (= var211058 temp10065_204))
(assert (= temp10065_205 #x0000000000000001))
(assert (= var211188 temp10065_205))
(assert (= var3879401 var211188))
(assert (= temp10065_206 #x0000000000000000))
(assert (= var3866802 temp10065_206))
(assert (= temp10065_207 #x0000000000000000))
(assert (= temp10065_208
   (ite (bvslt var3866802 temp10065_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10065_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10065_208)))
(assert (= var3879420 temp10065_209))
(assert (bvslt (ite (bvslt var3866802 temp10065_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10065_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10065_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10065_211 #x0000000000000000))
(assert (= var3879421 temp10065_211))
(assert (= temp10065_212 #x0000000000000001))
(assert (= var3867690 temp10065_212))
(assert (= temp10065_213 #x0000000000000000))
(assert (= temp10065_214
   (ite (bvslt var3867690 temp10065_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10065_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10065_214)))
(assert (= var3879423 temp10065_215))
(assert (bvslt (ite (bvslt var3867690 temp10065_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10065_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10065_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10065_217 #x0000000000000001))
(assert (= var3879424 temp10065_217))
(assert (= temp10065_218 #x0000000000000000))
(assert (= var4079423 temp10065_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10065_219 #x0000000000000002))
(assert (= var4208259 temp10065_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10065_220 #x0000000000000000))
(assert (= var4273820 temp10065_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10065_222 #xffffffffffffffff))
(assert (= temp10065_221 temp10065_222))
(assert (= temp10065_223 #x0000000000000001))
(assert (= var197674 temp10065_223))
(assert (= temp10065_224 #x0000000000000000))
(assert (= temp10065_225
   (ite (bvslt var197674 temp10065_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10065_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10065_225)))
(assert (= var211595 temp10065_226))
(assert (bvslt (ite (bvslt var197674 temp10065_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10065_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10065_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10065_228 #x0000000000000001))
(assert (= var211596 temp10065_228))
(assert (= temp10065_230 #xffffffffffffffff))
(assert (= temp10065_229 temp10065_230))
(assert (= temp10065_231 #x0000000000000001))
(assert (= var211058 temp10065_231))
(model-add temp10065_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10065_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10065_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10065_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






