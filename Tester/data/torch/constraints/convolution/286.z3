(declare-fun temp381_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp381_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp381_3 () (_ BitVec 64))
(declare-fun temp381_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp381_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp381_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp381_7 () (_ BitVec 64))
(declare-fun temp381_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp381_9 () (_ BitVec 64))
(declare-fun temp381_10 () (_ BitVec 64))
(declare-fun temp381_11 () (_ BitVec 64))
(declare-fun temp381_12 () (_ BitVec 64))
(declare-fun temp381_13 () (_ BitVec 64))
(declare-fun temp381_14 () (_ BitVec 64))
(declare-fun temp381_15 () (_ BitVec 64))
(declare-fun temp381_16 () (_ BitVec 64))
(declare-fun temp381_17 () (_ BitVec 64))
(declare-fun temp381_18 () (_ BitVec 64))
(declare-fun temp381_19 () (_ BitVec 64))
(declare-fun temp381_20 () (_ BitVec 64))
(declare-fun temp381_21 () (_ BitVec 64))
(declare-fun temp381_22 () (_ BitVec 64))
(declare-fun temp381_23 () (_ BitVec 64))
(declare-fun temp381_24 () (_ BitVec 64))
(declare-fun temp381_25 () (_ BitVec 64))
(declare-fun temp381_26 () (_ BitVec 64))
(declare-fun temp381_27 () (_ BitVec 64))
(declare-fun temp381_28 () (_ BitVec 64))
(declare-fun temp381_29 () (_ BitVec 64))
(declare-fun temp381_30 () (_ BitVec 64))
(declare-fun temp381_31 () (_ BitVec 64))
(declare-fun temp381_32 () (_ BitVec 64))
(declare-fun temp381_33 () (_ BitVec 64))
(declare-fun temp381_34 () (_ BitVec 64))
(declare-fun temp381_35 () (_ BitVec 64))
(declare-fun temp381_36 () (_ BitVec 64))
(declare-fun temp381_37 () (_ BitVec 64))
(declare-fun temp381_38 () (_ BitVec 64))
(declare-fun temp381_39 () (_ BitVec 64))
(declare-fun temp381_40 () (_ BitVec 64))
(declare-fun temp381_41 () (_ BitVec 64))
(declare-fun temp381_42 () (_ BitVec 64))
(declare-fun temp381_43 () (_ BitVec 64))
(declare-fun temp381_44 () (_ BitVec 64))
(declare-fun temp381_45 () (_ BitVec 64))
(declare-fun temp381_46 () (_ BitVec 64))
(declare-fun temp381_47 () (_ BitVec 64))
(declare-fun temp381_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp381_49 () (_ BitVec 64))
(declare-fun temp381_50 () (_ BitVec 64))
(declare-fun temp381_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp381_52 () (_ BitVec 64))
(declare-fun temp381_53 () (_ BitVec 64))
(declare-fun temp381_54 () (_ BitVec 64))
(declare-fun temp381_55 () (_ BitVec 64))
(declare-fun temp381_56 () (_ BitVec 64))
(declare-fun temp381_57 () (_ BitVec 64))
(declare-fun temp381_58 () (_ BitVec 64))
(declare-fun temp381_59 () (_ BitVec 64))
(declare-fun temp381_60 () (_ BitVec 64))
(declare-fun temp381_61 () (_ BitVec 64))
(declare-fun temp381_62 () (_ BitVec 64))
(declare-fun temp381_63 () (_ BitVec 64))
(declare-fun temp381_64 () (_ BitVec 64))
(declare-fun temp381_65 () (_ BitVec 64))
(declare-fun temp381_66 () (_ BitVec 64))
(declare-fun temp381_67 () (_ BitVec 64))
(declare-fun temp381_68 () (_ BitVec 64))
(declare-fun temp381_69 () (_ BitVec 64))
(declare-fun temp381_70 () (_ BitVec 64))
(declare-fun temp381_71 () (_ BitVec 64))
(declare-fun temp381_72 () (_ BitVec 64))
(declare-fun temp381_73 () (_ BitVec 64))
(declare-fun temp381_74 () (_ BitVec 64))
(declare-fun temp381_75 () (_ BitVec 64))
(declare-fun temp381_76 () (_ BitVec 64))
(declare-fun temp381_77 () (_ BitVec 64))
(declare-fun temp381_78 () (_ BitVec 64))
(declare-fun temp381_79 () (_ BitVec 64))
(declare-fun temp381_80 () (_ BitVec 64))
(declare-fun temp381_81 () (_ BitVec 64))
(declare-fun temp381_82 () (_ BitVec 64))
(declare-fun temp381_83 () (_ BitVec 64))
(declare-fun temp381_84 () (_ BitVec 64))
(declare-fun temp381_85 () (_ BitVec 64))
(declare-fun temp381_86 () (_ BitVec 64))
(declare-fun temp381_87 () (_ BitVec 64))
(declare-fun temp381_88 () (_ BitVec 64))
(declare-fun temp381_89 () (_ BitVec 64))
(declare-fun temp381_90 () (_ BitVec 64))
(declare-fun temp381_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp381_92 () (_ BitVec 64))
(declare-fun temp381_93 () (_ BitVec 64))
(declare-fun temp381_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp381_95 () (_ BitVec 64))
(declare-fun temp381_96 () (_ BitVec 64))
(declare-fun temp381_97 () (_ BitVec 64))
(declare-fun temp381_98 () (_ BitVec 64))
(declare-fun temp381_99 () (_ BitVec 64))
(declare-fun temp381_100 () (_ BitVec 64))
(declare-fun temp381_101 () (_ BitVec 64))
(declare-fun temp381_102 () (_ BitVec 64))
(declare-fun temp381_103 () (_ BitVec 64))
(declare-fun temp381_104 () (_ BitVec 64))
(declare-fun temp381_105 () (_ BitVec 64))
(declare-fun temp381_106 () (_ BitVec 64))
(declare-fun temp381_107 () (_ BitVec 64))
(declare-fun temp381_108 () (_ BitVec 64))
(declare-fun temp381_109 () (_ BitVec 64))
(declare-fun temp381_110 () (_ BitVec 64))
(declare-fun temp381_111 () (_ BitVec 64))
(declare-fun temp381_112 () (_ BitVec 64))
(declare-fun temp381_113 () (_ BitVec 64))
(declare-fun temp381_114 () (_ BitVec 64))
(declare-fun temp381_115 () (_ BitVec 64))
(declare-fun temp381_116 () (_ BitVec 64))
(declare-fun temp381_117 () (_ BitVec 64))
(declare-fun temp381_118 () (_ BitVec 64))
(declare-fun temp381_119 () (_ BitVec 64))
(declare-fun temp381_120 () (_ BitVec 64))
(declare-fun temp381_121 () (_ BitVec 64))
(declare-fun temp381_122 () (_ BitVec 64))
(declare-fun temp381_123 () (_ BitVec 64))
(declare-fun temp381_124 () (_ BitVec 64))
(declare-fun temp381_125 () (_ BitVec 64))
(declare-fun temp381_126 () (_ BitVec 64))
(declare-fun temp381_127 () (_ BitVec 64))
(declare-fun temp381_128 () (_ BitVec 64))
(declare-fun temp381_129 () (_ BitVec 64))
(declare-fun temp381_130 () (_ BitVec 64))
(declare-fun temp381_131 () (_ BitVec 64))
(declare-fun temp381_132 () (_ BitVec 64))
(declare-fun temp381_133 () (_ BitVec 64))
(declare-fun temp381_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp381_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp381_136 () (_ BitVec 64))
(declare-fun temp381_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp381_138 () (_ BitVec 64))
(declare-fun temp381_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp381_140 () (_ BitVec 64))
(declare-fun temp381_141 () (_ BitVec 64))
(declare-fun temp381_142 () (_ BitVec 64))
(declare-fun temp381_143 () (_ BitVec 64))
(declare-fun temp381_144 () (_ BitVec 64))
(declare-fun temp381_145 () (_ BitVec 64))
(declare-fun temp381_146 () (_ BitVec 64))
(declare-fun temp381_147 () (_ BitVec 64))
(declare-fun temp381_148 () (_ BitVec 64))
(declare-fun temp381_149 () (_ BitVec 64))
(declare-fun temp381_150 () (_ BitVec 64))
(declare-fun temp381_151 () (_ BitVec 64))
(declare-fun temp381_152 () (_ BitVec 64))
(declare-fun temp381_153 () (_ BitVec 64))
(declare-fun temp381_154 () (_ BitVec 64))
(declare-fun temp381_155 () (_ BitVec 64))
(declare-fun temp381_157 () (_ BitVec 64))
(declare-fun temp381_158 () (_ BitVec 64))
(declare-fun temp381_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp381_159 () (_ BitVec 64))
(declare-fun temp381_160 () (_ BitVec 64))
(declare-fun temp381_162 () (_ BitVec 64))
(declare-fun temp381_163 () (_ BitVec 64))
(declare-fun temp381_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp381_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp381_165 () (_ BitVec 64))
(declare-fun temp381_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp381_167 () (_ BitVec 64))
(declare-fun temp381_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp381_169 () (_ BitVec 64))
(declare-fun temp381_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp381_171 () (_ BitVec 64))
(declare-fun temp381_172 () (_ BitVec 64))
(declare-fun temp381_173 () (_ BitVec 64))
(declare-fun temp381_174 () (_ BitVec 64))
(declare-fun temp381_175 () (_ BitVec 64))
(declare-fun temp381_176 () (_ BitVec 64))
(declare-fun temp381_177 () (_ BitVec 64))
(declare-fun temp381_178 () (_ BitVec 64))
(declare-fun temp381_179 () (_ BitVec 64))
(declare-fun temp381_180 () (_ BitVec 64))
(declare-fun temp381_181 () (_ BitVec 64))
(declare-fun temp381_182 () (_ BitVec 64))
(declare-fun temp381_183 () (_ BitVec 64))
(declare-fun temp381_184 () (_ BitVec 64))
(declare-fun temp381_185 () (_ BitVec 64))
(declare-fun temp381_186 () (_ BitVec 64))
(declare-fun temp381_187 () (_ BitVec 64))
(declare-fun temp381_188 () (_ BitVec 64))
(declare-fun temp381_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp381_190 () (_ BitVec 64))
(declare-fun temp381_192 () (_ BitVec 64))
(declare-fun temp381_193 () (_ BitVec 64))
(declare-fun temp381_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp381_194 () (_ BitVec 64))
(declare-fun temp381_195 () (_ BitVec 64))
(declare-fun temp381_197 () (_ BitVec 64))
(declare-fun temp381_198 () (_ BitVec 64))
(declare-fun temp381_196 () (_ BitVec 64))
(declare-fun temp381_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp381_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp381_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp381_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp381_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp381_204 () (_ BitVec 64))
(declare-fun temp381_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp381_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp381_207 () (_ BitVec 64))
(declare-fun temp381_208 () (_ BitVec 64))
(declare-fun temp381_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp381_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp381_211 () (_ BitVec 64))
(declare-fun temp381_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp381_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp381_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp381_215 () (_ BitVec 64))
(assert (= temp381_1 #x0000000000000001))
(assert (= var77203 temp381_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp381_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp381_2)))
(assert (= temp381_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp381_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp381_4 #x0000000000000000))
(assert (= var210941 temp381_4))
(assert (= temp381_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp381_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp381_6 #x0000000000000000))
(assert (= var210986 temp381_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp381_7 #x0000000000000000))
(assert (= temp381_8 temp381_7))
(assert (= temp381_9 (select ARGNAME_padding_NAMEEND_VAL temp381_8)))
(assert (= temp381_10 #x0000000000000001))
(assert (= temp381_11 temp381_10))
(assert (= temp381_12 (select ARGNAME_padding_NAMEEND_VAL temp381_11)))
(assert (= temp381_13 #x0000000000000002))
(assert (= temp381_14 temp381_13))
(assert (= temp381_15 (select ARGNAME_padding_NAMEEND_VAL temp381_14)))
(assert (= temp381_16 #x0000000000000003))
(assert (= temp381_17 temp381_16))
(assert (= temp381_18 (select ARGNAME_padding_NAMEEND_VAL temp381_17)))
(assert (= temp381_19 #x0000000000000004))
(assert (= temp381_20 temp381_19))
(assert (= temp381_21 (select ARGNAME_padding_NAMEEND_VAL temp381_20)))
(assert (= temp381_22 #x0000000000000005))
(assert (= temp381_23 temp381_22))
(assert (= temp381_24 (select ARGNAME_padding_NAMEEND_VAL temp381_23)))
(assert (= temp381_25 #x0000000000000000))
(assert (= temp381_26 #x0000000000000000))
(assert (= temp381_27 temp381_26))
(assert (= temp381_28 (select ARGNAME_padding_NAMEEND_VAL temp381_27)))
(assert (= temp381_29 #x0000000000000000))
(assert (= temp381_30 #x0000000000000001))
(assert (= temp381_31 temp381_30))
(assert (= temp381_32 (select ARGNAME_padding_NAMEEND_VAL temp381_31)))
(assert (= temp381_33 #x0000000000000000))
(assert (= temp381_34 #x0000000000000002))
(assert (= temp381_35 temp381_34))
(assert (= temp381_36 (select ARGNAME_padding_NAMEEND_VAL temp381_35)))
(assert (= temp381_37 #x0000000000000000))
(assert (= temp381_38 #x0000000000000003))
(assert (= temp381_39 temp381_38))
(assert (= temp381_40 (select ARGNAME_padding_NAMEEND_VAL temp381_39)))
(assert (= temp381_41 #x0000000000000000))
(assert (= temp381_42 #x0000000000000004))
(assert (= temp381_43 temp381_42))
(assert (= temp381_44 (select ARGNAME_padding_NAMEEND_VAL temp381_43)))
(assert (= temp381_45 #x0000000000000000))
(assert (= temp381_46 #x0000000000000005))
(assert (= temp381_47 temp381_46))
(assert (= temp381_48 (select ARGNAME_padding_NAMEEND_VAL temp381_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp381_28 temp381_25)
             (bvslt temp381_32 temp381_29)
             (bvslt temp381_36 temp381_33)
             (bvslt temp381_40 temp381_37)
             (bvslt temp381_44 temp381_41)
             (bvslt temp381_48 temp381_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp381_49 #x0000000000000000))
(assert (= var1191714 temp381_49))
(assert (= temp381_50 #x0000000000000000))
(assert (= temp381_51 temp381_50))
(assert (= temp381_52 (select ARGNAME_output_padding_NAMEEND_VAL temp381_51)))
(assert (= temp381_53 #x0000000000000001))
(assert (= temp381_54 temp381_53))
(assert (= temp381_55 (select ARGNAME_output_padding_NAMEEND_VAL temp381_54)))
(assert (= temp381_56 #x0000000000000002))
(assert (= temp381_57 temp381_56))
(assert (= temp381_58 (select ARGNAME_output_padding_NAMEEND_VAL temp381_57)))
(assert (= temp381_59 #x0000000000000003))
(assert (= temp381_60 temp381_59))
(assert (= temp381_61 (select ARGNAME_output_padding_NAMEEND_VAL temp381_60)))
(assert (= temp381_62 #x0000000000000004))
(assert (= temp381_63 temp381_62))
(assert (= temp381_64 (select ARGNAME_output_padding_NAMEEND_VAL temp381_63)))
(assert (= temp381_65 #x0000000000000005))
(assert (= temp381_66 temp381_65))
(assert (= temp381_67 (select ARGNAME_output_padding_NAMEEND_VAL temp381_66)))
(assert (= temp381_68 #x0000000000000000))
(assert (= temp381_69 #x0000000000000000))
(assert (= temp381_70 temp381_69))
(assert (= temp381_71 (select ARGNAME_output_padding_NAMEEND_VAL temp381_70)))
(assert (= temp381_72 #x0000000000000000))
(assert (= temp381_73 #x0000000000000001))
(assert (= temp381_74 temp381_73))
(assert (= temp381_75 (select ARGNAME_output_padding_NAMEEND_VAL temp381_74)))
(assert (= temp381_76 #x0000000000000000))
(assert (= temp381_77 #x0000000000000002))
(assert (= temp381_78 temp381_77))
(assert (= temp381_79 (select ARGNAME_output_padding_NAMEEND_VAL temp381_78)))
(assert (= temp381_80 #x0000000000000000))
(assert (= temp381_81 #x0000000000000003))
(assert (= temp381_82 temp381_81))
(assert (= temp381_83 (select ARGNAME_output_padding_NAMEEND_VAL temp381_82)))
(assert (= temp381_84 #x0000000000000000))
(assert (= temp381_85 #x0000000000000004))
(assert (= temp381_86 temp381_85))
(assert (= temp381_87 (select ARGNAME_output_padding_NAMEEND_VAL temp381_86)))
(assert (= temp381_88 #x0000000000000000))
(assert (= temp381_89 #x0000000000000005))
(assert (= temp381_90 temp381_89))
(assert (= temp381_91 (select ARGNAME_output_padding_NAMEEND_VAL temp381_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp381_71 temp381_68)
             (bvslt temp381_75 temp381_72)
             (bvslt temp381_79 temp381_76)
             (bvslt temp381_83 temp381_80)
             (bvslt temp381_87 temp381_84)
             (bvslt temp381_91 temp381_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp381_92 #x0000000000000000))
(assert (= var1191725 temp381_92))
(assert (= temp381_93 #x0000000000000000))
(assert (= temp381_94 temp381_93))
(assert (= temp381_95 (select ARGNAME_stride_NAMEEND_VAL temp381_94)))
(assert (= temp381_96 #x0000000000000001))
(assert (= temp381_97 temp381_96))
(assert (= temp381_98 (select ARGNAME_stride_NAMEEND_VAL temp381_97)))
(assert (= temp381_99 #x0000000000000002))
(assert (= temp381_100 temp381_99))
(assert (= temp381_101 (select ARGNAME_stride_NAMEEND_VAL temp381_100)))
(assert (= temp381_102 #x0000000000000003))
(assert (= temp381_103 temp381_102))
(assert (= temp381_104 (select ARGNAME_stride_NAMEEND_VAL temp381_103)))
(assert (= temp381_105 #x0000000000000004))
(assert (= temp381_106 temp381_105))
(assert (= temp381_107 (select ARGNAME_stride_NAMEEND_VAL temp381_106)))
(assert (= temp381_108 #x0000000000000005))
(assert (= temp381_109 temp381_108))
(assert (= temp381_110 (select ARGNAME_stride_NAMEEND_VAL temp381_109)))
(assert (= temp381_111 #x0000000000000000))
(assert (= temp381_112 #x0000000000000000))
(assert (= temp381_113 temp381_112))
(assert (= temp381_114 (select ARGNAME_stride_NAMEEND_VAL temp381_113)))
(assert (= temp381_115 #x0000000000000000))
(assert (= temp381_116 #x0000000000000001))
(assert (= temp381_117 temp381_116))
(assert (= temp381_118 (select ARGNAME_stride_NAMEEND_VAL temp381_117)))
(assert (= temp381_119 #x0000000000000000))
(assert (= temp381_120 #x0000000000000002))
(assert (= temp381_121 temp381_120))
(assert (= temp381_122 (select ARGNAME_stride_NAMEEND_VAL temp381_121)))
(assert (= temp381_123 #x0000000000000000))
(assert (= temp381_124 #x0000000000000003))
(assert (= temp381_125 temp381_124))
(assert (= temp381_126 (select ARGNAME_stride_NAMEEND_VAL temp381_125)))
(assert (= temp381_127 #x0000000000000000))
(assert (= temp381_128 #x0000000000000004))
(assert (= temp381_129 temp381_128))
(assert (= temp381_130 (select ARGNAME_stride_NAMEEND_VAL temp381_129)))
(assert (= temp381_131 #x0000000000000000))
(assert (= temp381_132 #x0000000000000005))
(assert (= temp381_133 temp381_132))
(assert (= temp381_134 (select ARGNAME_stride_NAMEEND_VAL temp381_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp381_114 temp381_111)
             (bvsle temp381_118 temp381_115)
             (bvsle temp381_122 temp381_119)
             (bvsle temp381_126 temp381_123)
             (bvsle temp381_130 temp381_127)
             (bvsle temp381_134 temp381_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp381_135 #x0000000000000000))
(assert (= var1191735 temp381_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp381_136 #x0000000000000001))
(assert (= var1191747 temp381_136))
(assert (= temp381_137 #x0000000000000000))
(assert (= var1179826 temp381_137))
(assert (= temp381_138 #x0000000000000000))
(assert (= temp381_139 temp381_138))
(assert (= temp381_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp381_139)))
(assert (= temp381_141 #x0000000000000001))
(assert (= temp381_142 temp381_141))
(assert (= temp381_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp381_142)))
(assert (= temp381_144 #x0000000000000002))
(assert (= temp381_145 temp381_144))
(assert (= temp381_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp381_145)))
(assert (= temp381_147 #x0000000000000003))
(assert (= temp381_148 temp381_147))
(assert (= temp381_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp381_148)))
(assert (= temp381_150 #x0000000000000004))
(assert (= temp381_151 temp381_150))
(assert (= temp381_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp381_151)))
(assert (= temp381_153 #x0000000000000005))
(assert (= temp381_154 temp381_153))
(assert (= temp381_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp381_154)))
(assert (= temp381_157 var1179826))
(assert (= temp381_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp381_157)))
(assert (= temp381_156 temp381_158))
(assert (= var1191780
   (ite (bvslt temp381_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp381_159 #x0000000000000000))
(assert (= var1191780 temp381_159))
(assert (= temp381_160 #x0000000000000000))
(assert (= var1179826 temp381_160))
(assert (= temp381_162 var1179826))
(assert (= temp381_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp381_162)))
(assert (= temp381_161 temp381_163))
(assert (= var1191802 (bvsmod temp381_161 ARGNAME_groups_NAMEEND)))
(assert (= temp381_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp381_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp381_165 #x0000000000000001))
(assert (= var1191803 temp381_165))
(assert (= temp381_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp381_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp381_167 #x0000000000000001))
(assert (= var1191823 temp381_167))
(assert (= temp381_168 #x0000000000000001))
(assert (= var1180714 temp381_168))
(assert (= temp381_169 #x0000000000000000))
(assert (= temp381_170 temp381_169))
(assert (= temp381_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp381_170)))
(assert (= temp381_172 #x0000000000000001))
(assert (= temp381_173 temp381_172))
(assert (= temp381_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp381_173)))
(assert (= temp381_175 #x0000000000000002))
(assert (= temp381_176 temp381_175))
(assert (= temp381_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp381_176)))
(assert (= temp381_178 #x0000000000000003))
(assert (= temp381_179 temp381_178))
(assert (= temp381_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp381_179)))
(assert (= temp381_181 #x0000000000000004))
(assert (= temp381_182 temp381_181))
(assert (= temp381_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp381_182)))
(assert (= temp381_184 #x0000000000000005))
(assert (= temp381_185 temp381_184))
(assert (= temp381_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp381_185)))
(assert (= temp381_187 #x0000000000000000))
(assert (= temp381_188
   (ite (bvslt var1180714 temp381_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp381_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp381_188)))
(assert (= var1191831 temp381_189))
(assert (bvslt (ite (bvslt var1180714 temp381_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp381_190 #x0000000000000001))
(assert (= var1180714 temp381_190))
(assert (= temp381_192 var1180714))
(assert (= temp381_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp381_192)))
(assert (= temp381_191 temp381_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp381_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp381_194 #x0000000000000001))
(assert (= var1191836 temp381_194))
(assert (= temp381_195 #x0000000000000000))
(assert (= var1179826 temp381_195))
(assert (= temp381_197 var1179826))
(assert (= temp381_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp381_197)))
(assert (= temp381_196 temp381_198))
(assert (= temp381_199 #x0000000000000002))
(assert (= var1586025 temp381_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp381_200 #x0000000000000001))
(assert (= var1191993 temp381_200))
(assert (= temp381_201 #x0000000000000001))
(assert (= var2700303 temp381_201))
(assert (= temp381_202 #x0000000000000001))
(assert (= var2962447 temp381_202))
(assert (= temp381_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp381_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp381_204 #x0000000000000001))
(assert (= var211058 temp381_204))
(assert (= temp381_205 #x0000000000000001))
(assert (= var211188 temp381_205))
(assert (= var3879401 var211188))
(assert (= temp381_206 #x0000000000000000))
(assert (= var3866802 temp381_206))
(assert (= temp381_207 #x0000000000000000))
(assert (= temp381_208
   (ite (bvslt var3866802 temp381_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp381_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp381_208)))
(assert (= var3879420 temp381_209))
(assert (bvslt (ite (bvslt var3866802 temp381_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp381_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp381_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp381_211 #x0000000000000001))
(assert (= var3879421 temp381_211))
(assert (= temp381_212 #x0000000000000000))
(assert (= var4079423 temp381_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp381_213 #x0000000000000002))
(assert (= var4208259 temp381_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp381_214 #x0000000000000000))
(assert (= var4273820 temp381_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp381_215 #x0000000000000001))
(assert (= var211058 temp381_215))
(model-add temp381_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp381_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp381_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp381_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





