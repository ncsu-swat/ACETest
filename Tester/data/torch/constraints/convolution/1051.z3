(declare-fun temp10068_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10068_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10068_3 () (_ BitVec 64))
(declare-fun temp10068_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10068_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10068_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10068_7 () (_ BitVec 64))
(declare-fun temp10068_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10068_9 () (_ BitVec 64))
(declare-fun temp10068_10 () (_ BitVec 64))
(declare-fun temp10068_11 () (_ BitVec 64))
(declare-fun temp10068_12 () (_ BitVec 64))
(declare-fun temp10068_13 () (_ BitVec 64))
(declare-fun temp10068_14 () (_ BitVec 64))
(declare-fun temp10068_15 () (_ BitVec 64))
(declare-fun temp10068_16 () (_ BitVec 64))
(declare-fun temp10068_17 () (_ BitVec 64))
(declare-fun temp10068_18 () (_ BitVec 64))
(declare-fun temp10068_19 () (_ BitVec 64))
(declare-fun temp10068_20 () (_ BitVec 64))
(declare-fun temp10068_21 () (_ BitVec 64))
(declare-fun temp10068_22 () (_ BitVec 64))
(declare-fun temp10068_23 () (_ BitVec 64))
(declare-fun temp10068_24 () (_ BitVec 64))
(declare-fun temp10068_25 () (_ BitVec 64))
(declare-fun temp10068_26 () (_ BitVec 64))
(declare-fun temp10068_27 () (_ BitVec 64))
(declare-fun temp10068_28 () (_ BitVec 64))
(declare-fun temp10068_29 () (_ BitVec 64))
(declare-fun temp10068_30 () (_ BitVec 64))
(declare-fun temp10068_31 () (_ BitVec 64))
(declare-fun temp10068_32 () (_ BitVec 64))
(declare-fun temp10068_33 () (_ BitVec 64))
(declare-fun temp10068_34 () (_ BitVec 64))
(declare-fun temp10068_35 () (_ BitVec 64))
(declare-fun temp10068_36 () (_ BitVec 64))
(declare-fun temp10068_37 () (_ BitVec 64))
(declare-fun temp10068_38 () (_ BitVec 64))
(declare-fun temp10068_39 () (_ BitVec 64))
(declare-fun temp10068_40 () (_ BitVec 64))
(declare-fun temp10068_41 () (_ BitVec 64))
(declare-fun temp10068_42 () (_ BitVec 64))
(declare-fun temp10068_43 () (_ BitVec 64))
(declare-fun temp10068_44 () (_ BitVec 64))
(declare-fun temp10068_45 () (_ BitVec 64))
(declare-fun temp10068_46 () (_ BitVec 64))
(declare-fun temp10068_47 () (_ BitVec 64))
(declare-fun temp10068_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10068_49 () (_ BitVec 64))
(declare-fun temp10068_50 () (_ BitVec 64))
(declare-fun temp10068_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10068_52 () (_ BitVec 64))
(declare-fun temp10068_53 () (_ BitVec 64))
(declare-fun temp10068_54 () (_ BitVec 64))
(declare-fun temp10068_55 () (_ BitVec 64))
(declare-fun temp10068_56 () (_ BitVec 64))
(declare-fun temp10068_57 () (_ BitVec 64))
(declare-fun temp10068_58 () (_ BitVec 64))
(declare-fun temp10068_59 () (_ BitVec 64))
(declare-fun temp10068_60 () (_ BitVec 64))
(declare-fun temp10068_61 () (_ BitVec 64))
(declare-fun temp10068_62 () (_ BitVec 64))
(declare-fun temp10068_63 () (_ BitVec 64))
(declare-fun temp10068_64 () (_ BitVec 64))
(declare-fun temp10068_65 () (_ BitVec 64))
(declare-fun temp10068_66 () (_ BitVec 64))
(declare-fun temp10068_67 () (_ BitVec 64))
(declare-fun temp10068_68 () (_ BitVec 64))
(declare-fun temp10068_69 () (_ BitVec 64))
(declare-fun temp10068_70 () (_ BitVec 64))
(declare-fun temp10068_71 () (_ BitVec 64))
(declare-fun temp10068_72 () (_ BitVec 64))
(declare-fun temp10068_73 () (_ BitVec 64))
(declare-fun temp10068_74 () (_ BitVec 64))
(declare-fun temp10068_75 () (_ BitVec 64))
(declare-fun temp10068_76 () (_ BitVec 64))
(declare-fun temp10068_77 () (_ BitVec 64))
(declare-fun temp10068_78 () (_ BitVec 64))
(declare-fun temp10068_79 () (_ BitVec 64))
(declare-fun temp10068_80 () (_ BitVec 64))
(declare-fun temp10068_81 () (_ BitVec 64))
(declare-fun temp10068_82 () (_ BitVec 64))
(declare-fun temp10068_83 () (_ BitVec 64))
(declare-fun temp10068_84 () (_ BitVec 64))
(declare-fun temp10068_85 () (_ BitVec 64))
(declare-fun temp10068_86 () (_ BitVec 64))
(declare-fun temp10068_87 () (_ BitVec 64))
(declare-fun temp10068_88 () (_ BitVec 64))
(declare-fun temp10068_89 () (_ BitVec 64))
(declare-fun temp10068_90 () (_ BitVec 64))
(declare-fun temp10068_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10068_92 () (_ BitVec 64))
(declare-fun temp10068_93 () (_ BitVec 64))
(declare-fun temp10068_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10068_95 () (_ BitVec 64))
(declare-fun temp10068_96 () (_ BitVec 64))
(declare-fun temp10068_97 () (_ BitVec 64))
(declare-fun temp10068_98 () (_ BitVec 64))
(declare-fun temp10068_99 () (_ BitVec 64))
(declare-fun temp10068_100 () (_ BitVec 64))
(declare-fun temp10068_101 () (_ BitVec 64))
(declare-fun temp10068_102 () (_ BitVec 64))
(declare-fun temp10068_103 () (_ BitVec 64))
(declare-fun temp10068_104 () (_ BitVec 64))
(declare-fun temp10068_105 () (_ BitVec 64))
(declare-fun temp10068_106 () (_ BitVec 64))
(declare-fun temp10068_107 () (_ BitVec 64))
(declare-fun temp10068_108 () (_ BitVec 64))
(declare-fun temp10068_109 () (_ BitVec 64))
(declare-fun temp10068_110 () (_ BitVec 64))
(declare-fun temp10068_111 () (_ BitVec 64))
(declare-fun temp10068_112 () (_ BitVec 64))
(declare-fun temp10068_113 () (_ BitVec 64))
(declare-fun temp10068_114 () (_ BitVec 64))
(declare-fun temp10068_115 () (_ BitVec 64))
(declare-fun temp10068_116 () (_ BitVec 64))
(declare-fun temp10068_117 () (_ BitVec 64))
(declare-fun temp10068_118 () (_ BitVec 64))
(declare-fun temp10068_119 () (_ BitVec 64))
(declare-fun temp10068_120 () (_ BitVec 64))
(declare-fun temp10068_121 () (_ BitVec 64))
(declare-fun temp10068_122 () (_ BitVec 64))
(declare-fun temp10068_123 () (_ BitVec 64))
(declare-fun temp10068_124 () (_ BitVec 64))
(declare-fun temp10068_125 () (_ BitVec 64))
(declare-fun temp10068_126 () (_ BitVec 64))
(declare-fun temp10068_127 () (_ BitVec 64))
(declare-fun temp10068_128 () (_ BitVec 64))
(declare-fun temp10068_129 () (_ BitVec 64))
(declare-fun temp10068_130 () (_ BitVec 64))
(declare-fun temp10068_131 () (_ BitVec 64))
(declare-fun temp10068_132 () (_ BitVec 64))
(declare-fun temp10068_133 () (_ BitVec 64))
(declare-fun temp10068_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10068_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10068_136 () (_ BitVec 64))
(declare-fun temp10068_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10068_138 () (_ BitVec 64))
(declare-fun temp10068_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10068_140 () (_ BitVec 64))
(declare-fun temp10068_141 () (_ BitVec 64))
(declare-fun temp10068_142 () (_ BitVec 64))
(declare-fun temp10068_143 () (_ BitVec 64))
(declare-fun temp10068_144 () (_ BitVec 64))
(declare-fun temp10068_145 () (_ BitVec 64))
(declare-fun temp10068_146 () (_ BitVec 64))
(declare-fun temp10068_147 () (_ BitVec 64))
(declare-fun temp10068_148 () (_ BitVec 64))
(declare-fun temp10068_149 () (_ BitVec 64))
(declare-fun temp10068_150 () (_ BitVec 64))
(declare-fun temp10068_151 () (_ BitVec 64))
(declare-fun temp10068_152 () (_ BitVec 64))
(declare-fun temp10068_153 () (_ BitVec 64))
(declare-fun temp10068_154 () (_ BitVec 64))
(declare-fun temp10068_155 () (_ BitVec 64))
(declare-fun temp10068_157 () (_ BitVec 64))
(declare-fun temp10068_158 () (_ BitVec 64))
(declare-fun temp10068_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10068_159 () (_ BitVec 64))
(declare-fun temp10068_160 () (_ BitVec 64))
(declare-fun temp10068_162 () (_ BitVec 64))
(declare-fun temp10068_163 () (_ BitVec 64))
(declare-fun temp10068_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10068_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10068_165 () (_ BitVec 64))
(declare-fun temp10068_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10068_167 () (_ BitVec 64))
(declare-fun temp10068_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10068_169 () (_ BitVec 64))
(declare-fun temp10068_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10068_171 () (_ BitVec 64))
(declare-fun temp10068_172 () (_ BitVec 64))
(declare-fun temp10068_173 () (_ BitVec 64))
(declare-fun temp10068_174 () (_ BitVec 64))
(declare-fun temp10068_175 () (_ BitVec 64))
(declare-fun temp10068_176 () (_ BitVec 64))
(declare-fun temp10068_177 () (_ BitVec 64))
(declare-fun temp10068_178 () (_ BitVec 64))
(declare-fun temp10068_179 () (_ BitVec 64))
(declare-fun temp10068_180 () (_ BitVec 64))
(declare-fun temp10068_181 () (_ BitVec 64))
(declare-fun temp10068_182 () (_ BitVec 64))
(declare-fun temp10068_183 () (_ BitVec 64))
(declare-fun temp10068_184 () (_ BitVec 64))
(declare-fun temp10068_185 () (_ BitVec 64))
(declare-fun temp10068_186 () (_ BitVec 64))
(declare-fun temp10068_187 () (_ BitVec 64))
(declare-fun temp10068_188 () (_ BitVec 64))
(declare-fun temp10068_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10068_190 () (_ BitVec 64))
(declare-fun temp10068_192 () (_ BitVec 64))
(declare-fun temp10068_193 () (_ BitVec 64))
(declare-fun temp10068_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10068_194 () (_ BitVec 64))
(declare-fun temp10068_195 () (_ BitVec 64))
(declare-fun temp10068_197 () (_ BitVec 64))
(declare-fun temp10068_198 () (_ BitVec 64))
(declare-fun temp10068_196 () (_ BitVec 64))
(declare-fun temp10068_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10068_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10068_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10068_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10068_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10068_204 () (_ BitVec 64))
(declare-fun temp10068_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10068_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10068_207 () (_ BitVec 64))
(declare-fun temp10068_208 () (_ BitVec 64))
(declare-fun temp10068_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10068_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10068_211 () (_ BitVec 64))
(declare-fun temp10068_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10068_213 () (_ BitVec 64))
(declare-fun temp10068_214 () (_ BitVec 64))
(declare-fun temp10068_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10068_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10068_217 () (_ BitVec 64))
(declare-fun temp10068_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10068_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10068_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10068_222 () (_ BitVec 64))
(declare-fun temp10068_221 () (_ BitVec 64))
(declare-fun temp10068_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10068_224 () (_ BitVec 64))
(declare-fun temp10068_225 () (_ BitVec 64))
(declare-fun temp10068_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10068_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10068_228 () (_ BitVec 64))
(declare-fun temp10068_230 () (_ BitVec 64))
(declare-fun temp10068_229 () (_ BitVec 64))
(declare-fun temp10068_231 () (_ BitVec 64))
(declare-fun temp10068_232 () (_ BitVec 64))
(declare-fun var5452564 () (_ BitVec 64))
(declare-fun var5452531 () (_ BitVec 64))
(declare-fun var5321095 () (_ BitVec 64))
(declare-fun var5321091 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10068_233 () (_ BitVec 64))
(assert (= temp10068_1 #x0000000000000001))
(assert (= var77203 temp10068_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10068_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10068_2)))
(assert (= temp10068_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10068_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10068_4 #x0000000000000000))
(assert (= var210941 temp10068_4))
(assert (= temp10068_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10068_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10068_6 #x0000000000000000))
(assert (= var210986 temp10068_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10068_7 #x0000000000000000))
(assert (= temp10068_8 temp10068_7))
(assert (= temp10068_9 (select ARGNAME_padding_NAMEEND_VAL temp10068_8)))
(assert (= temp10068_10 #x0000000000000001))
(assert (= temp10068_11 temp10068_10))
(assert (= temp10068_12 (select ARGNAME_padding_NAMEEND_VAL temp10068_11)))
(assert (= temp10068_13 #x0000000000000002))
(assert (= temp10068_14 temp10068_13))
(assert (= temp10068_15 (select ARGNAME_padding_NAMEEND_VAL temp10068_14)))
(assert (= temp10068_16 #x0000000000000003))
(assert (= temp10068_17 temp10068_16))
(assert (= temp10068_18 (select ARGNAME_padding_NAMEEND_VAL temp10068_17)))
(assert (= temp10068_19 #x0000000000000004))
(assert (= temp10068_20 temp10068_19))
(assert (= temp10068_21 (select ARGNAME_padding_NAMEEND_VAL temp10068_20)))
(assert (= temp10068_22 #x0000000000000005))
(assert (= temp10068_23 temp10068_22))
(assert (= temp10068_24 (select ARGNAME_padding_NAMEEND_VAL temp10068_23)))
(assert (= temp10068_25 #x0000000000000000))
(assert (= temp10068_26 #x0000000000000000))
(assert (= temp10068_27 temp10068_26))
(assert (= temp10068_28 (select ARGNAME_padding_NAMEEND_VAL temp10068_27)))
(assert (= temp10068_29 #x0000000000000000))
(assert (= temp10068_30 #x0000000000000001))
(assert (= temp10068_31 temp10068_30))
(assert (= temp10068_32 (select ARGNAME_padding_NAMEEND_VAL temp10068_31)))
(assert (= temp10068_33 #x0000000000000000))
(assert (= temp10068_34 #x0000000000000002))
(assert (= temp10068_35 temp10068_34))
(assert (= temp10068_36 (select ARGNAME_padding_NAMEEND_VAL temp10068_35)))
(assert (= temp10068_37 #x0000000000000000))
(assert (= temp10068_38 #x0000000000000003))
(assert (= temp10068_39 temp10068_38))
(assert (= temp10068_40 (select ARGNAME_padding_NAMEEND_VAL temp10068_39)))
(assert (= temp10068_41 #x0000000000000000))
(assert (= temp10068_42 #x0000000000000004))
(assert (= temp10068_43 temp10068_42))
(assert (= temp10068_44 (select ARGNAME_padding_NAMEEND_VAL temp10068_43)))
(assert (= temp10068_45 #x0000000000000000))
(assert (= temp10068_46 #x0000000000000005))
(assert (= temp10068_47 temp10068_46))
(assert (= temp10068_48 (select ARGNAME_padding_NAMEEND_VAL temp10068_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10068_28 temp10068_25)
             (bvslt temp10068_32 temp10068_29)
             (bvslt temp10068_36 temp10068_33)
             (bvslt temp10068_40 temp10068_37)
             (bvslt temp10068_44 temp10068_41)
             (bvslt temp10068_48 temp10068_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10068_49 #x0000000000000000))
(assert (= var1191714 temp10068_49))
(assert (= temp10068_50 #x0000000000000000))
(assert (= temp10068_51 temp10068_50))
(assert (= temp10068_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10068_51)))
(assert (= temp10068_53 #x0000000000000001))
(assert (= temp10068_54 temp10068_53))
(assert (= temp10068_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10068_54)))
(assert (= temp10068_56 #x0000000000000002))
(assert (= temp10068_57 temp10068_56))
(assert (= temp10068_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10068_57)))
(assert (= temp10068_59 #x0000000000000003))
(assert (= temp10068_60 temp10068_59))
(assert (= temp10068_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10068_60)))
(assert (= temp10068_62 #x0000000000000004))
(assert (= temp10068_63 temp10068_62))
(assert (= temp10068_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10068_63)))
(assert (= temp10068_65 #x0000000000000005))
(assert (= temp10068_66 temp10068_65))
(assert (= temp10068_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10068_66)))
(assert (= temp10068_68 #x0000000000000000))
(assert (= temp10068_69 #x0000000000000000))
(assert (= temp10068_70 temp10068_69))
(assert (= temp10068_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10068_70)))
(assert (= temp10068_72 #x0000000000000000))
(assert (= temp10068_73 #x0000000000000001))
(assert (= temp10068_74 temp10068_73))
(assert (= temp10068_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10068_74)))
(assert (= temp10068_76 #x0000000000000000))
(assert (= temp10068_77 #x0000000000000002))
(assert (= temp10068_78 temp10068_77))
(assert (= temp10068_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10068_78)))
(assert (= temp10068_80 #x0000000000000000))
(assert (= temp10068_81 #x0000000000000003))
(assert (= temp10068_82 temp10068_81))
(assert (= temp10068_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10068_82)))
(assert (= temp10068_84 #x0000000000000000))
(assert (= temp10068_85 #x0000000000000004))
(assert (= temp10068_86 temp10068_85))
(assert (= temp10068_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10068_86)))
(assert (= temp10068_88 #x0000000000000000))
(assert (= temp10068_89 #x0000000000000005))
(assert (= temp10068_90 temp10068_89))
(assert (= temp10068_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10068_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10068_71 temp10068_68)
             (bvslt temp10068_75 temp10068_72)
             (bvslt temp10068_79 temp10068_76)
             (bvslt temp10068_83 temp10068_80)
             (bvslt temp10068_87 temp10068_84)
             (bvslt temp10068_91 temp10068_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10068_92 #x0000000000000000))
(assert (= var1191725 temp10068_92))
(assert (= temp10068_93 #x0000000000000000))
(assert (= temp10068_94 temp10068_93))
(assert (= temp10068_95 (select ARGNAME_stride_NAMEEND_VAL temp10068_94)))
(assert (= temp10068_96 #x0000000000000001))
(assert (= temp10068_97 temp10068_96))
(assert (= temp10068_98 (select ARGNAME_stride_NAMEEND_VAL temp10068_97)))
(assert (= temp10068_99 #x0000000000000002))
(assert (= temp10068_100 temp10068_99))
(assert (= temp10068_101 (select ARGNAME_stride_NAMEEND_VAL temp10068_100)))
(assert (= temp10068_102 #x0000000000000003))
(assert (= temp10068_103 temp10068_102))
(assert (= temp10068_104 (select ARGNAME_stride_NAMEEND_VAL temp10068_103)))
(assert (= temp10068_105 #x0000000000000004))
(assert (= temp10068_106 temp10068_105))
(assert (= temp10068_107 (select ARGNAME_stride_NAMEEND_VAL temp10068_106)))
(assert (= temp10068_108 #x0000000000000005))
(assert (= temp10068_109 temp10068_108))
(assert (= temp10068_110 (select ARGNAME_stride_NAMEEND_VAL temp10068_109)))
(assert (= temp10068_111 #x0000000000000000))
(assert (= temp10068_112 #x0000000000000000))
(assert (= temp10068_113 temp10068_112))
(assert (= temp10068_114 (select ARGNAME_stride_NAMEEND_VAL temp10068_113)))
(assert (= temp10068_115 #x0000000000000000))
(assert (= temp10068_116 #x0000000000000001))
(assert (= temp10068_117 temp10068_116))
(assert (= temp10068_118 (select ARGNAME_stride_NAMEEND_VAL temp10068_117)))
(assert (= temp10068_119 #x0000000000000000))
(assert (= temp10068_120 #x0000000000000002))
(assert (= temp10068_121 temp10068_120))
(assert (= temp10068_122 (select ARGNAME_stride_NAMEEND_VAL temp10068_121)))
(assert (= temp10068_123 #x0000000000000000))
(assert (= temp10068_124 #x0000000000000003))
(assert (= temp10068_125 temp10068_124))
(assert (= temp10068_126 (select ARGNAME_stride_NAMEEND_VAL temp10068_125)))
(assert (= temp10068_127 #x0000000000000000))
(assert (= temp10068_128 #x0000000000000004))
(assert (= temp10068_129 temp10068_128))
(assert (= temp10068_130 (select ARGNAME_stride_NAMEEND_VAL temp10068_129)))
(assert (= temp10068_131 #x0000000000000000))
(assert (= temp10068_132 #x0000000000000005))
(assert (= temp10068_133 temp10068_132))
(assert (= temp10068_134 (select ARGNAME_stride_NAMEEND_VAL temp10068_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10068_114 temp10068_111)
             (bvsle temp10068_118 temp10068_115)
             (bvsle temp10068_122 temp10068_119)
             (bvsle temp10068_126 temp10068_123)
             (bvsle temp10068_130 temp10068_127)
             (bvsle temp10068_134 temp10068_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10068_135 #x0000000000000000))
(assert (= var1191735 temp10068_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10068_136 #x0000000000000001))
(assert (= var1191747 temp10068_136))
(assert (= temp10068_137 #x0000000000000000))
(assert (= var1179826 temp10068_137))
(assert (= temp10068_138 #x0000000000000000))
(assert (= temp10068_139 temp10068_138))
(assert (= temp10068_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10068_139)))
(assert (= temp10068_141 #x0000000000000001))
(assert (= temp10068_142 temp10068_141))
(assert (= temp10068_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10068_142)))
(assert (= temp10068_144 #x0000000000000002))
(assert (= temp10068_145 temp10068_144))
(assert (= temp10068_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10068_145)))
(assert (= temp10068_147 #x0000000000000003))
(assert (= temp10068_148 temp10068_147))
(assert (= temp10068_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10068_148)))
(assert (= temp10068_150 #x0000000000000004))
(assert (= temp10068_151 temp10068_150))
(assert (= temp10068_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10068_151)))
(assert (= temp10068_153 #x0000000000000005))
(assert (= temp10068_154 temp10068_153))
(assert (= temp10068_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10068_154)))
(assert (= temp10068_157 var1179826))
(assert (= temp10068_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10068_157)))
(assert (= temp10068_156 temp10068_158))
(assert (= var1191780
   (ite (bvslt temp10068_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10068_159 #x0000000000000000))
(assert (= var1191780 temp10068_159))
(assert (= temp10068_160 #x0000000000000000))
(assert (= var1179826 temp10068_160))
(assert (= temp10068_162 var1179826))
(assert (= temp10068_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10068_162)))
(assert (= temp10068_161 temp10068_163))
(assert (= var1191802 (bvsmod temp10068_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10068_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10068_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10068_165 #x0000000000000001))
(assert (= var1191803 temp10068_165))
(assert (= temp10068_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10068_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10068_167 #x0000000000000001))
(assert (= var1191823 temp10068_167))
(assert (= temp10068_168 #x0000000000000001))
(assert (= var1180714 temp10068_168))
(assert (= temp10068_169 #x0000000000000000))
(assert (= temp10068_170 temp10068_169))
(assert (= temp10068_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10068_170)))
(assert (= temp10068_172 #x0000000000000001))
(assert (= temp10068_173 temp10068_172))
(assert (= temp10068_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10068_173)))
(assert (= temp10068_175 #x0000000000000002))
(assert (= temp10068_176 temp10068_175))
(assert (= temp10068_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10068_176)))
(assert (= temp10068_178 #x0000000000000003))
(assert (= temp10068_179 temp10068_178))
(assert (= temp10068_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10068_179)))
(assert (= temp10068_181 #x0000000000000004))
(assert (= temp10068_182 temp10068_181))
(assert (= temp10068_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10068_182)))
(assert (= temp10068_184 #x0000000000000005))
(assert (= temp10068_185 temp10068_184))
(assert (= temp10068_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10068_185)))
(assert (= temp10068_187 #x0000000000000000))
(assert (= temp10068_188
   (ite (bvslt var1180714 temp10068_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10068_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10068_188)))
(assert (= var1191831 temp10068_189))
(assert (bvslt (ite (bvslt var1180714 temp10068_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10068_190 #x0000000000000001))
(assert (= var1180714 temp10068_190))
(assert (= temp10068_192 var1180714))
(assert (= temp10068_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10068_192)))
(assert (= temp10068_191 temp10068_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10068_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10068_194 #x0000000000000001))
(assert (= var1191836 temp10068_194))
(assert (= temp10068_195 #x0000000000000000))
(assert (= var1179826 temp10068_195))
(assert (= temp10068_197 var1179826))
(assert (= temp10068_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10068_197)))
(assert (= temp10068_196 temp10068_198))
(assert (= temp10068_199 #x0000000000000002))
(assert (= var1586025 temp10068_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10068_200 #x0000000000000001))
(assert (= var1191993 temp10068_200))
(assert (= temp10068_201 #x0000000000000001))
(assert (= var2700303 temp10068_201))
(assert (= temp10068_202 #x0000000000000001))
(assert (= var2962447 temp10068_202))
(assert (= temp10068_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10068_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10068_204 #x0000000000000001))
(assert (= var211058 temp10068_204))
(assert (= temp10068_205 #x0000000000000001))
(assert (= var211188 temp10068_205))
(assert (= var3879401 var211188))
(assert (= temp10068_206 #x0000000000000000))
(assert (= var3866802 temp10068_206))
(assert (= temp10068_207 #x0000000000000000))
(assert (= temp10068_208
   (ite (bvslt var3866802 temp10068_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10068_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10068_208)))
(assert (= var3879420 temp10068_209))
(assert (bvslt (ite (bvslt var3866802 temp10068_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10068_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10068_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10068_211 #x0000000000000000))
(assert (= var3879421 temp10068_211))
(assert (= temp10068_212 #x0000000000000001))
(assert (= var3867690 temp10068_212))
(assert (= temp10068_213 #x0000000000000000))
(assert (= temp10068_214
   (ite (bvslt var3867690 temp10068_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10068_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10068_214)))
(assert (= var3879423 temp10068_215))
(assert (bvslt (ite (bvslt var3867690 temp10068_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10068_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10068_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10068_217 #x0000000000000001))
(assert (= var3879424 temp10068_217))
(assert (= temp10068_218 #x0000000000000000))
(assert (= var4079423 temp10068_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10068_219 #x0000000000000002))
(assert (= var4208259 temp10068_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10068_220 #x0000000000000000))
(assert (= var4273820 temp10068_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10068_222 #xffffffffffffffff))
(assert (= temp10068_221 temp10068_222))
(assert (= temp10068_223 #x0000000000000001))
(assert (= var197674 temp10068_223))
(assert (= temp10068_224 #x0000000000000000))
(assert (= temp10068_225
   (ite (bvslt var197674 temp10068_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10068_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10068_225)))
(assert (= var211595 temp10068_226))
(assert (bvslt (ite (bvslt var197674 temp10068_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10068_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10068_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10068_228 #x0000000000000001))
(assert (= var211596 temp10068_228))
(assert (= temp10068_230 #xffffffffffffffff))
(assert (= temp10068_229 temp10068_230))
(assert (= temp10068_231 #x0000000000000001))
(assert (= var211058 temp10068_231))
(assert (= temp10068_232 #x0000000000000000))
(assert (= var5452564 temp10068_232))
(assert (= var5452531 var5452564))
(assert (= var5321095 var5452531))
(assert (= var5321091 var5321095))
(assert (= var212669 var5321091))
(assert (= temp10068_233 #x0000000000000000))
(assert (= var212669 temp10068_233))
(model-add temp10068_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10068_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10068_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10068_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




