(declare-fun temp808_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp808_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp808_3 () (_ BitVec 64))
(declare-fun temp808_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp808_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp808_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp808_7 () (_ BitVec 64))
(declare-fun temp808_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp808_9 () (_ BitVec 64))
(declare-fun temp808_10 () (_ BitVec 64))
(declare-fun temp808_11 () (_ BitVec 64))
(declare-fun temp808_12 () (_ BitVec 64))
(declare-fun temp808_13 () (_ BitVec 64))
(declare-fun temp808_14 () (_ BitVec 64))
(declare-fun temp808_15 () (_ BitVec 64))
(declare-fun temp808_16 () (_ BitVec 64))
(declare-fun temp808_17 () (_ BitVec 64))
(declare-fun temp808_18 () (_ BitVec 64))
(declare-fun temp808_19 () (_ BitVec 64))
(declare-fun temp808_20 () (_ BitVec 64))
(declare-fun temp808_21 () (_ BitVec 64))
(declare-fun temp808_22 () (_ BitVec 64))
(declare-fun temp808_23 () (_ BitVec 64))
(declare-fun temp808_24 () (_ BitVec 64))
(declare-fun temp808_25 () (_ BitVec 64))
(declare-fun temp808_26 () (_ BitVec 64))
(declare-fun temp808_27 () (_ BitVec 64))
(declare-fun temp808_28 () (_ BitVec 64))
(declare-fun temp808_29 () (_ BitVec 64))
(declare-fun temp808_30 () (_ BitVec 64))
(declare-fun temp808_31 () (_ BitVec 64))
(declare-fun temp808_32 () (_ BitVec 64))
(declare-fun temp808_33 () (_ BitVec 64))
(declare-fun temp808_34 () (_ BitVec 64))
(declare-fun temp808_35 () (_ BitVec 64))
(declare-fun temp808_36 () (_ BitVec 64))
(declare-fun temp808_37 () (_ BitVec 64))
(declare-fun temp808_38 () (_ BitVec 64))
(declare-fun temp808_39 () (_ BitVec 64))
(declare-fun temp808_40 () (_ BitVec 64))
(declare-fun temp808_41 () (_ BitVec 64))
(declare-fun temp808_42 () (_ BitVec 64))
(declare-fun temp808_43 () (_ BitVec 64))
(declare-fun temp808_44 () (_ BitVec 64))
(declare-fun temp808_45 () (_ BitVec 64))
(declare-fun temp808_46 () (_ BitVec 64))
(declare-fun temp808_47 () (_ BitVec 64))
(declare-fun temp808_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp808_49 () (_ BitVec 64))
(declare-fun temp808_50 () (_ BitVec 64))
(declare-fun temp808_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp808_52 () (_ BitVec 64))
(declare-fun temp808_53 () (_ BitVec 64))
(declare-fun temp808_54 () (_ BitVec 64))
(declare-fun temp808_55 () (_ BitVec 64))
(declare-fun temp808_56 () (_ BitVec 64))
(declare-fun temp808_57 () (_ BitVec 64))
(declare-fun temp808_58 () (_ BitVec 64))
(declare-fun temp808_59 () (_ BitVec 64))
(declare-fun temp808_60 () (_ BitVec 64))
(declare-fun temp808_61 () (_ BitVec 64))
(declare-fun temp808_62 () (_ BitVec 64))
(declare-fun temp808_63 () (_ BitVec 64))
(declare-fun temp808_64 () (_ BitVec 64))
(declare-fun temp808_65 () (_ BitVec 64))
(declare-fun temp808_66 () (_ BitVec 64))
(declare-fun temp808_67 () (_ BitVec 64))
(declare-fun temp808_68 () (_ BitVec 64))
(declare-fun temp808_69 () (_ BitVec 64))
(declare-fun temp808_70 () (_ BitVec 64))
(declare-fun temp808_71 () (_ BitVec 64))
(declare-fun temp808_72 () (_ BitVec 64))
(declare-fun temp808_73 () (_ BitVec 64))
(declare-fun temp808_74 () (_ BitVec 64))
(declare-fun temp808_75 () (_ BitVec 64))
(declare-fun temp808_76 () (_ BitVec 64))
(declare-fun temp808_77 () (_ BitVec 64))
(declare-fun temp808_78 () (_ BitVec 64))
(declare-fun temp808_79 () (_ BitVec 64))
(declare-fun temp808_80 () (_ BitVec 64))
(declare-fun temp808_81 () (_ BitVec 64))
(declare-fun temp808_82 () (_ BitVec 64))
(declare-fun temp808_83 () (_ BitVec 64))
(declare-fun temp808_84 () (_ BitVec 64))
(declare-fun temp808_85 () (_ BitVec 64))
(declare-fun temp808_86 () (_ BitVec 64))
(declare-fun temp808_87 () (_ BitVec 64))
(declare-fun temp808_88 () (_ BitVec 64))
(declare-fun temp808_89 () (_ BitVec 64))
(declare-fun temp808_90 () (_ BitVec 64))
(declare-fun temp808_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp808_92 () (_ BitVec 64))
(declare-fun temp808_93 () (_ BitVec 64))
(declare-fun temp808_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp808_95 () (_ BitVec 64))
(declare-fun temp808_96 () (_ BitVec 64))
(declare-fun temp808_97 () (_ BitVec 64))
(declare-fun temp808_98 () (_ BitVec 64))
(declare-fun temp808_99 () (_ BitVec 64))
(declare-fun temp808_100 () (_ BitVec 64))
(declare-fun temp808_101 () (_ BitVec 64))
(declare-fun temp808_102 () (_ BitVec 64))
(declare-fun temp808_103 () (_ BitVec 64))
(declare-fun temp808_104 () (_ BitVec 64))
(declare-fun temp808_105 () (_ BitVec 64))
(declare-fun temp808_106 () (_ BitVec 64))
(declare-fun temp808_107 () (_ BitVec 64))
(declare-fun temp808_108 () (_ BitVec 64))
(declare-fun temp808_109 () (_ BitVec 64))
(declare-fun temp808_110 () (_ BitVec 64))
(declare-fun temp808_111 () (_ BitVec 64))
(declare-fun temp808_112 () (_ BitVec 64))
(declare-fun temp808_113 () (_ BitVec 64))
(declare-fun temp808_114 () (_ BitVec 64))
(declare-fun temp808_115 () (_ BitVec 64))
(declare-fun temp808_116 () (_ BitVec 64))
(declare-fun temp808_117 () (_ BitVec 64))
(declare-fun temp808_118 () (_ BitVec 64))
(declare-fun temp808_119 () (_ BitVec 64))
(declare-fun temp808_120 () (_ BitVec 64))
(declare-fun temp808_121 () (_ BitVec 64))
(declare-fun temp808_122 () (_ BitVec 64))
(declare-fun temp808_123 () (_ BitVec 64))
(declare-fun temp808_124 () (_ BitVec 64))
(declare-fun temp808_125 () (_ BitVec 64))
(declare-fun temp808_126 () (_ BitVec 64))
(declare-fun temp808_127 () (_ BitVec 64))
(declare-fun temp808_128 () (_ BitVec 64))
(declare-fun temp808_129 () (_ BitVec 64))
(declare-fun temp808_130 () (_ BitVec 64))
(declare-fun temp808_131 () (_ BitVec 64))
(declare-fun temp808_132 () (_ BitVec 64))
(declare-fun temp808_133 () (_ BitVec 64))
(declare-fun temp808_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp808_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp808_136 () (_ BitVec 64))
(declare-fun temp808_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp808_138 () (_ BitVec 64))
(declare-fun temp808_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp808_140 () (_ BitVec 64))
(declare-fun temp808_141 () (_ BitVec 64))
(declare-fun temp808_142 () (_ BitVec 64))
(declare-fun temp808_143 () (_ BitVec 64))
(declare-fun temp808_144 () (_ BitVec 64))
(declare-fun temp808_145 () (_ BitVec 64))
(declare-fun temp808_146 () (_ BitVec 64))
(declare-fun temp808_147 () (_ BitVec 64))
(declare-fun temp808_148 () (_ BitVec 64))
(declare-fun temp808_149 () (_ BitVec 64))
(declare-fun temp808_150 () (_ BitVec 64))
(declare-fun temp808_151 () (_ BitVec 64))
(declare-fun temp808_152 () (_ BitVec 64))
(declare-fun temp808_153 () (_ BitVec 64))
(declare-fun temp808_154 () (_ BitVec 64))
(declare-fun temp808_155 () (_ BitVec 64))
(declare-fun temp808_157 () (_ BitVec 64))
(declare-fun temp808_158 () (_ BitVec 64))
(declare-fun temp808_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp808_159 () (_ BitVec 64))
(declare-fun temp808_160 () (_ BitVec 64))
(declare-fun temp808_162 () (_ BitVec 64))
(declare-fun temp808_163 () (_ BitVec 64))
(declare-fun temp808_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp808_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp808_165 () (_ BitVec 64))
(declare-fun temp808_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp808_167 () (_ BitVec 64))
(declare-fun temp808_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp808_169 () (_ BitVec 64))
(declare-fun temp808_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp808_171 () (_ BitVec 64))
(declare-fun temp808_172 () (_ BitVec 64))
(declare-fun temp808_173 () (_ BitVec 64))
(declare-fun temp808_174 () (_ BitVec 64))
(declare-fun temp808_175 () (_ BitVec 64))
(declare-fun temp808_176 () (_ BitVec 64))
(declare-fun temp808_177 () (_ BitVec 64))
(declare-fun temp808_178 () (_ BitVec 64))
(declare-fun temp808_179 () (_ BitVec 64))
(declare-fun temp808_180 () (_ BitVec 64))
(declare-fun temp808_181 () (_ BitVec 64))
(declare-fun temp808_182 () (_ BitVec 64))
(declare-fun temp808_183 () (_ BitVec 64))
(declare-fun temp808_184 () (_ BitVec 64))
(declare-fun temp808_185 () (_ BitVec 64))
(declare-fun temp808_186 () (_ BitVec 64))
(declare-fun temp808_187 () (_ BitVec 64))
(declare-fun temp808_188 () (_ BitVec 64))
(declare-fun temp808_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp808_190 () (_ BitVec 64))
(declare-fun temp808_192 () (_ BitVec 64))
(declare-fun temp808_193 () (_ BitVec 64))
(declare-fun temp808_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp808_194 () (_ BitVec 64))
(declare-fun temp808_195 () (_ BitVec 64))
(declare-fun temp808_197 () (_ BitVec 64))
(declare-fun temp808_198 () (_ BitVec 64))
(declare-fun temp808_196 () (_ BitVec 64))
(declare-fun temp808_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp808_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp808_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp808_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp808_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp808_204 () (_ BitVec 64))
(declare-fun temp808_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp808_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp808_207 () (_ BitVec 64))
(declare-fun temp808_208 () (_ BitVec 64))
(declare-fun temp808_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp808_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp808_211 () (_ BitVec 64))
(declare-fun temp808_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp808_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp808_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211820 () (_ BitVec 64))
(declare-fun temp808_215 () (_ BitVec 64))
(declare-fun var211821 () (_ BitVec 64))
(declare-fun temp808_216 () (_ BitVec 64))
(assert (= temp808_1 #x0000000000000001))
(assert (= var77203 temp808_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp808_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp808_2)))
(assert (= temp808_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp808_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_4 #x0000000000000000))
(assert (= var210941 temp808_4))
(assert (= temp808_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp808_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_6 #x0000000000000000))
(assert (= var210986 temp808_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp808_7 #x0000000000000000))
(assert (= temp808_8 temp808_7))
(assert (= temp808_9 (select ARGNAME_padding_NAMEEND_VAL temp808_8)))
(assert (= temp808_10 #x0000000000000001))
(assert (= temp808_11 temp808_10))
(assert (= temp808_12 (select ARGNAME_padding_NAMEEND_VAL temp808_11)))
(assert (= temp808_13 #x0000000000000002))
(assert (= temp808_14 temp808_13))
(assert (= temp808_15 (select ARGNAME_padding_NAMEEND_VAL temp808_14)))
(assert (= temp808_16 #x0000000000000003))
(assert (= temp808_17 temp808_16))
(assert (= temp808_18 (select ARGNAME_padding_NAMEEND_VAL temp808_17)))
(assert (= temp808_19 #x0000000000000004))
(assert (= temp808_20 temp808_19))
(assert (= temp808_21 (select ARGNAME_padding_NAMEEND_VAL temp808_20)))
(assert (= temp808_22 #x0000000000000005))
(assert (= temp808_23 temp808_22))
(assert (= temp808_24 (select ARGNAME_padding_NAMEEND_VAL temp808_23)))
(assert (= temp808_25 #x0000000000000000))
(assert (= temp808_26 #x0000000000000000))
(assert (= temp808_27 temp808_26))
(assert (= temp808_28 (select ARGNAME_padding_NAMEEND_VAL temp808_27)))
(assert (= temp808_29 #x0000000000000000))
(assert (= temp808_30 #x0000000000000001))
(assert (= temp808_31 temp808_30))
(assert (= temp808_32 (select ARGNAME_padding_NAMEEND_VAL temp808_31)))
(assert (= temp808_33 #x0000000000000000))
(assert (= temp808_34 #x0000000000000002))
(assert (= temp808_35 temp808_34))
(assert (= temp808_36 (select ARGNAME_padding_NAMEEND_VAL temp808_35)))
(assert (= temp808_37 #x0000000000000000))
(assert (= temp808_38 #x0000000000000003))
(assert (= temp808_39 temp808_38))
(assert (= temp808_40 (select ARGNAME_padding_NAMEEND_VAL temp808_39)))
(assert (= temp808_41 #x0000000000000000))
(assert (= temp808_42 #x0000000000000004))
(assert (= temp808_43 temp808_42))
(assert (= temp808_44 (select ARGNAME_padding_NAMEEND_VAL temp808_43)))
(assert (= temp808_45 #x0000000000000000))
(assert (= temp808_46 #x0000000000000005))
(assert (= temp808_47 temp808_46))
(assert (= temp808_48 (select ARGNAME_padding_NAMEEND_VAL temp808_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp808_28 temp808_25)
             (bvslt temp808_32 temp808_29)
             (bvslt temp808_36 temp808_33)
             (bvslt temp808_40 temp808_37)
             (bvslt temp808_44 temp808_41)
             (bvslt temp808_48 temp808_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_49 #x0000000000000000))
(assert (= var1191714 temp808_49))
(assert (= temp808_50 #x0000000000000000))
(assert (= temp808_51 temp808_50))
(assert (= temp808_52 (select ARGNAME_output_padding_NAMEEND_VAL temp808_51)))
(assert (= temp808_53 #x0000000000000001))
(assert (= temp808_54 temp808_53))
(assert (= temp808_55 (select ARGNAME_output_padding_NAMEEND_VAL temp808_54)))
(assert (= temp808_56 #x0000000000000002))
(assert (= temp808_57 temp808_56))
(assert (= temp808_58 (select ARGNAME_output_padding_NAMEEND_VAL temp808_57)))
(assert (= temp808_59 #x0000000000000003))
(assert (= temp808_60 temp808_59))
(assert (= temp808_61 (select ARGNAME_output_padding_NAMEEND_VAL temp808_60)))
(assert (= temp808_62 #x0000000000000004))
(assert (= temp808_63 temp808_62))
(assert (= temp808_64 (select ARGNAME_output_padding_NAMEEND_VAL temp808_63)))
(assert (= temp808_65 #x0000000000000005))
(assert (= temp808_66 temp808_65))
(assert (= temp808_67 (select ARGNAME_output_padding_NAMEEND_VAL temp808_66)))
(assert (= temp808_68 #x0000000000000000))
(assert (= temp808_69 #x0000000000000000))
(assert (= temp808_70 temp808_69))
(assert (= temp808_71 (select ARGNAME_output_padding_NAMEEND_VAL temp808_70)))
(assert (= temp808_72 #x0000000000000000))
(assert (= temp808_73 #x0000000000000001))
(assert (= temp808_74 temp808_73))
(assert (= temp808_75 (select ARGNAME_output_padding_NAMEEND_VAL temp808_74)))
(assert (= temp808_76 #x0000000000000000))
(assert (= temp808_77 #x0000000000000002))
(assert (= temp808_78 temp808_77))
(assert (= temp808_79 (select ARGNAME_output_padding_NAMEEND_VAL temp808_78)))
(assert (= temp808_80 #x0000000000000000))
(assert (= temp808_81 #x0000000000000003))
(assert (= temp808_82 temp808_81))
(assert (= temp808_83 (select ARGNAME_output_padding_NAMEEND_VAL temp808_82)))
(assert (= temp808_84 #x0000000000000000))
(assert (= temp808_85 #x0000000000000004))
(assert (= temp808_86 temp808_85))
(assert (= temp808_87 (select ARGNAME_output_padding_NAMEEND_VAL temp808_86)))
(assert (= temp808_88 #x0000000000000000))
(assert (= temp808_89 #x0000000000000005))
(assert (= temp808_90 temp808_89))
(assert (= temp808_91 (select ARGNAME_output_padding_NAMEEND_VAL temp808_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp808_71 temp808_68)
             (bvslt temp808_75 temp808_72)
             (bvslt temp808_79 temp808_76)
             (bvslt temp808_83 temp808_80)
             (bvslt temp808_87 temp808_84)
             (bvslt temp808_91 temp808_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_92 #x0000000000000000))
(assert (= var1191725 temp808_92))
(assert (= temp808_93 #x0000000000000000))
(assert (= temp808_94 temp808_93))
(assert (= temp808_95 (select ARGNAME_stride_NAMEEND_VAL temp808_94)))
(assert (= temp808_96 #x0000000000000001))
(assert (= temp808_97 temp808_96))
(assert (= temp808_98 (select ARGNAME_stride_NAMEEND_VAL temp808_97)))
(assert (= temp808_99 #x0000000000000002))
(assert (= temp808_100 temp808_99))
(assert (= temp808_101 (select ARGNAME_stride_NAMEEND_VAL temp808_100)))
(assert (= temp808_102 #x0000000000000003))
(assert (= temp808_103 temp808_102))
(assert (= temp808_104 (select ARGNAME_stride_NAMEEND_VAL temp808_103)))
(assert (= temp808_105 #x0000000000000004))
(assert (= temp808_106 temp808_105))
(assert (= temp808_107 (select ARGNAME_stride_NAMEEND_VAL temp808_106)))
(assert (= temp808_108 #x0000000000000005))
(assert (= temp808_109 temp808_108))
(assert (= temp808_110 (select ARGNAME_stride_NAMEEND_VAL temp808_109)))
(assert (= temp808_111 #x0000000000000000))
(assert (= temp808_112 #x0000000000000000))
(assert (= temp808_113 temp808_112))
(assert (= temp808_114 (select ARGNAME_stride_NAMEEND_VAL temp808_113)))
(assert (= temp808_115 #x0000000000000000))
(assert (= temp808_116 #x0000000000000001))
(assert (= temp808_117 temp808_116))
(assert (= temp808_118 (select ARGNAME_stride_NAMEEND_VAL temp808_117)))
(assert (= temp808_119 #x0000000000000000))
(assert (= temp808_120 #x0000000000000002))
(assert (= temp808_121 temp808_120))
(assert (= temp808_122 (select ARGNAME_stride_NAMEEND_VAL temp808_121)))
(assert (= temp808_123 #x0000000000000000))
(assert (= temp808_124 #x0000000000000003))
(assert (= temp808_125 temp808_124))
(assert (= temp808_126 (select ARGNAME_stride_NAMEEND_VAL temp808_125)))
(assert (= temp808_127 #x0000000000000000))
(assert (= temp808_128 #x0000000000000004))
(assert (= temp808_129 temp808_128))
(assert (= temp808_130 (select ARGNAME_stride_NAMEEND_VAL temp808_129)))
(assert (= temp808_131 #x0000000000000000))
(assert (= temp808_132 #x0000000000000005))
(assert (= temp808_133 temp808_132))
(assert (= temp808_134 (select ARGNAME_stride_NAMEEND_VAL temp808_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp808_114 temp808_111)
             (bvsle temp808_118 temp808_115)
             (bvsle temp808_122 temp808_119)
             (bvsle temp808_126 temp808_123)
             (bvsle temp808_130 temp808_127)
             (bvsle temp808_134 temp808_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_135 #x0000000000000000))
(assert (= var1191735 temp808_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_136 #x0000000000000001))
(assert (= var1191747 temp808_136))
(assert (= temp808_137 #x0000000000000000))
(assert (= var1179826 temp808_137))
(assert (= temp808_138 #x0000000000000000))
(assert (= temp808_139 temp808_138))
(assert (= temp808_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp808_139)))
(assert (= temp808_141 #x0000000000000001))
(assert (= temp808_142 temp808_141))
(assert (= temp808_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp808_142)))
(assert (= temp808_144 #x0000000000000002))
(assert (= temp808_145 temp808_144))
(assert (= temp808_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp808_145)))
(assert (= temp808_147 #x0000000000000003))
(assert (= temp808_148 temp808_147))
(assert (= temp808_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp808_148)))
(assert (= temp808_150 #x0000000000000004))
(assert (= temp808_151 temp808_150))
(assert (= temp808_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp808_151)))
(assert (= temp808_153 #x0000000000000005))
(assert (= temp808_154 temp808_153))
(assert (= temp808_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp808_154)))
(assert (= temp808_157 var1179826))
(assert (= temp808_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp808_157)))
(assert (= temp808_156 temp808_158))
(assert (= var1191780
   (ite (bvslt temp808_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_159 #x0000000000000000))
(assert (= var1191780 temp808_159))
(assert (= temp808_160 #x0000000000000000))
(assert (= var1179826 temp808_160))
(assert (= temp808_162 var1179826))
(assert (= temp808_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp808_162)))
(assert (= temp808_161 temp808_163))
(assert (= var1191802 (bvsmod temp808_161 ARGNAME_groups_NAMEEND)))
(assert (= temp808_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp808_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp808_165 #x0000000000000001))
(assert (= var1191803 temp808_165))
(assert (= temp808_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp808_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_167 #x0000000000000001))
(assert (= var1191823 temp808_167))
(assert (= temp808_168 #x0000000000000001))
(assert (= var1180714 temp808_168))
(assert (= temp808_169 #x0000000000000000))
(assert (= temp808_170 temp808_169))
(assert (= temp808_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp808_170)))
(assert (= temp808_172 #x0000000000000001))
(assert (= temp808_173 temp808_172))
(assert (= temp808_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp808_173)))
(assert (= temp808_175 #x0000000000000002))
(assert (= temp808_176 temp808_175))
(assert (= temp808_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp808_176)))
(assert (= temp808_178 #x0000000000000003))
(assert (= temp808_179 temp808_178))
(assert (= temp808_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp808_179)))
(assert (= temp808_181 #x0000000000000004))
(assert (= temp808_182 temp808_181))
(assert (= temp808_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp808_182)))
(assert (= temp808_184 #x0000000000000005))
(assert (= temp808_185 temp808_184))
(assert (= temp808_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp808_185)))
(assert (= temp808_187 #x0000000000000000))
(assert (= temp808_188
   (ite (bvslt var1180714 temp808_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp808_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp808_188)))
(assert (= var1191831 temp808_189))
(assert (bvslt (ite (bvslt var1180714 temp808_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp808_190 #x0000000000000001))
(assert (= var1180714 temp808_190))
(assert (= temp808_192 var1180714))
(assert (= temp808_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp808_192)))
(assert (= temp808_191 temp808_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp808_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp808_194 #x0000000000000001))
(assert (= var1191836 temp808_194))
(assert (= temp808_195 #x0000000000000000))
(assert (= var1179826 temp808_195))
(assert (= temp808_197 var1179826))
(assert (= temp808_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp808_197)))
(assert (= temp808_196 temp808_198))
(assert (= temp808_199 #x0000000000000002))
(assert (= var1586025 temp808_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp808_200 #x0000000000000001))
(assert (= var1191993 temp808_200))
(assert (= temp808_201 #x0000000000000001))
(assert (= var2700303 temp808_201))
(assert (= temp808_202 #x0000000000000001))
(assert (= var2962447 temp808_202))
(assert (= temp808_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp808_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_204 #x0000000000000001))
(assert (= var211058 temp808_204))
(assert (= temp808_205 #x0000000000000001))
(assert (= var211188 temp808_205))
(assert (= var3879401 var211188))
(assert (= temp808_206 #x0000000000000000))
(assert (= var3866802 temp808_206))
(assert (= temp808_207 #x0000000000000000))
(assert (= temp808_208
   (ite (bvslt var3866802 temp808_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp808_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp808_208)))
(assert (= var3879420 temp808_209))
(assert (bvslt (ite (bvslt var3866802 temp808_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp808_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp808_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp808_211 #x0000000000000001))
(assert (= var3879421 temp808_211))
(assert (= temp808_212 #x0000000000000000))
(assert (= var4079423 temp808_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp808_213 #x0000000000000002))
(assert (= var4208259 temp808_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_214 #x0000000000000000))
(assert (= var4273820 temp808_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211820 var210913))
(assert (= temp808_215 #x0000000000000000))
(assert (= var211821
   (ite (distinct var211820 temp808_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp808_216 #x0000000000000001))
(assert (= var211058 temp808_216))
(model-add temp808_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp808_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp808_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp808_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






