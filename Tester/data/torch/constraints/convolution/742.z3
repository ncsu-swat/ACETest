(declare-fun temp989_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp989_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp989_3 () (_ BitVec 64))
(declare-fun temp989_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp989_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp989_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp989_7 () (_ BitVec 64))
(declare-fun temp989_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp989_9 () (_ BitVec 64))
(declare-fun temp989_10 () (_ BitVec 64))
(declare-fun temp989_11 () (_ BitVec 64))
(declare-fun temp989_12 () (_ BitVec 64))
(declare-fun temp989_13 () (_ BitVec 64))
(declare-fun temp989_14 () (_ BitVec 64))
(declare-fun temp989_15 () (_ BitVec 64))
(declare-fun temp989_16 () (_ BitVec 64))
(declare-fun temp989_17 () (_ BitVec 64))
(declare-fun temp989_18 () (_ BitVec 64))
(declare-fun temp989_19 () (_ BitVec 64))
(declare-fun temp989_20 () (_ BitVec 64))
(declare-fun temp989_21 () (_ BitVec 64))
(declare-fun temp989_22 () (_ BitVec 64))
(declare-fun temp989_23 () (_ BitVec 64))
(declare-fun temp989_24 () (_ BitVec 64))
(declare-fun temp989_25 () (_ BitVec 64))
(declare-fun temp989_26 () (_ BitVec 64))
(declare-fun temp989_27 () (_ BitVec 64))
(declare-fun temp989_28 () (_ BitVec 64))
(declare-fun temp989_29 () (_ BitVec 64))
(declare-fun temp989_30 () (_ BitVec 64))
(declare-fun temp989_31 () (_ BitVec 64))
(declare-fun temp989_32 () (_ BitVec 64))
(declare-fun temp989_33 () (_ BitVec 64))
(declare-fun temp989_34 () (_ BitVec 64))
(declare-fun temp989_35 () (_ BitVec 64))
(declare-fun temp989_36 () (_ BitVec 64))
(declare-fun temp989_37 () (_ BitVec 64))
(declare-fun temp989_38 () (_ BitVec 64))
(declare-fun temp989_39 () (_ BitVec 64))
(declare-fun temp989_40 () (_ BitVec 64))
(declare-fun temp989_41 () (_ BitVec 64))
(declare-fun temp989_42 () (_ BitVec 64))
(declare-fun temp989_43 () (_ BitVec 64))
(declare-fun temp989_44 () (_ BitVec 64))
(declare-fun temp989_45 () (_ BitVec 64))
(declare-fun temp989_46 () (_ BitVec 64))
(declare-fun temp989_47 () (_ BitVec 64))
(declare-fun temp989_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp989_49 () (_ BitVec 64))
(declare-fun temp989_50 () (_ BitVec 64))
(declare-fun temp989_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp989_52 () (_ BitVec 64))
(declare-fun temp989_53 () (_ BitVec 64))
(declare-fun temp989_54 () (_ BitVec 64))
(declare-fun temp989_55 () (_ BitVec 64))
(declare-fun temp989_56 () (_ BitVec 64))
(declare-fun temp989_57 () (_ BitVec 64))
(declare-fun temp989_58 () (_ BitVec 64))
(declare-fun temp989_59 () (_ BitVec 64))
(declare-fun temp989_60 () (_ BitVec 64))
(declare-fun temp989_61 () (_ BitVec 64))
(declare-fun temp989_62 () (_ BitVec 64))
(declare-fun temp989_63 () (_ BitVec 64))
(declare-fun temp989_64 () (_ BitVec 64))
(declare-fun temp989_65 () (_ BitVec 64))
(declare-fun temp989_66 () (_ BitVec 64))
(declare-fun temp989_67 () (_ BitVec 64))
(declare-fun temp989_68 () (_ BitVec 64))
(declare-fun temp989_69 () (_ BitVec 64))
(declare-fun temp989_70 () (_ BitVec 64))
(declare-fun temp989_71 () (_ BitVec 64))
(declare-fun temp989_72 () (_ BitVec 64))
(declare-fun temp989_73 () (_ BitVec 64))
(declare-fun temp989_74 () (_ BitVec 64))
(declare-fun temp989_75 () (_ BitVec 64))
(declare-fun temp989_76 () (_ BitVec 64))
(declare-fun temp989_77 () (_ BitVec 64))
(declare-fun temp989_78 () (_ BitVec 64))
(declare-fun temp989_79 () (_ BitVec 64))
(declare-fun temp989_80 () (_ BitVec 64))
(declare-fun temp989_81 () (_ BitVec 64))
(declare-fun temp989_82 () (_ BitVec 64))
(declare-fun temp989_83 () (_ BitVec 64))
(declare-fun temp989_84 () (_ BitVec 64))
(declare-fun temp989_85 () (_ BitVec 64))
(declare-fun temp989_86 () (_ BitVec 64))
(declare-fun temp989_87 () (_ BitVec 64))
(declare-fun temp989_88 () (_ BitVec 64))
(declare-fun temp989_89 () (_ BitVec 64))
(declare-fun temp989_90 () (_ BitVec 64))
(declare-fun temp989_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp989_92 () (_ BitVec 64))
(declare-fun temp989_93 () (_ BitVec 64))
(declare-fun temp989_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp989_95 () (_ BitVec 64))
(declare-fun temp989_96 () (_ BitVec 64))
(declare-fun temp989_97 () (_ BitVec 64))
(declare-fun temp989_98 () (_ BitVec 64))
(declare-fun temp989_99 () (_ BitVec 64))
(declare-fun temp989_100 () (_ BitVec 64))
(declare-fun temp989_101 () (_ BitVec 64))
(declare-fun temp989_102 () (_ BitVec 64))
(declare-fun temp989_103 () (_ BitVec 64))
(declare-fun temp989_104 () (_ BitVec 64))
(declare-fun temp989_105 () (_ BitVec 64))
(declare-fun temp989_106 () (_ BitVec 64))
(declare-fun temp989_107 () (_ BitVec 64))
(declare-fun temp989_108 () (_ BitVec 64))
(declare-fun temp989_109 () (_ BitVec 64))
(declare-fun temp989_110 () (_ BitVec 64))
(declare-fun temp989_111 () (_ BitVec 64))
(declare-fun temp989_112 () (_ BitVec 64))
(declare-fun temp989_113 () (_ BitVec 64))
(declare-fun temp989_114 () (_ BitVec 64))
(declare-fun temp989_115 () (_ BitVec 64))
(declare-fun temp989_116 () (_ BitVec 64))
(declare-fun temp989_117 () (_ BitVec 64))
(declare-fun temp989_118 () (_ BitVec 64))
(declare-fun temp989_119 () (_ BitVec 64))
(declare-fun temp989_120 () (_ BitVec 64))
(declare-fun temp989_121 () (_ BitVec 64))
(declare-fun temp989_122 () (_ BitVec 64))
(declare-fun temp989_123 () (_ BitVec 64))
(declare-fun temp989_124 () (_ BitVec 64))
(declare-fun temp989_125 () (_ BitVec 64))
(declare-fun temp989_126 () (_ BitVec 64))
(declare-fun temp989_127 () (_ BitVec 64))
(declare-fun temp989_128 () (_ BitVec 64))
(declare-fun temp989_129 () (_ BitVec 64))
(declare-fun temp989_130 () (_ BitVec 64))
(declare-fun temp989_131 () (_ BitVec 64))
(declare-fun temp989_132 () (_ BitVec 64))
(declare-fun temp989_133 () (_ BitVec 64))
(declare-fun temp989_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp989_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp989_136 () (_ BitVec 64))
(declare-fun temp989_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp989_138 () (_ BitVec 64))
(declare-fun temp989_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp989_140 () (_ BitVec 64))
(declare-fun temp989_141 () (_ BitVec 64))
(declare-fun temp989_142 () (_ BitVec 64))
(declare-fun temp989_143 () (_ BitVec 64))
(declare-fun temp989_144 () (_ BitVec 64))
(declare-fun temp989_145 () (_ BitVec 64))
(declare-fun temp989_146 () (_ BitVec 64))
(declare-fun temp989_147 () (_ BitVec 64))
(declare-fun temp989_148 () (_ BitVec 64))
(declare-fun temp989_149 () (_ BitVec 64))
(declare-fun temp989_150 () (_ BitVec 64))
(declare-fun temp989_151 () (_ BitVec 64))
(declare-fun temp989_152 () (_ BitVec 64))
(declare-fun temp989_153 () (_ BitVec 64))
(declare-fun temp989_154 () (_ BitVec 64))
(declare-fun temp989_155 () (_ BitVec 64))
(declare-fun temp989_157 () (_ BitVec 64))
(declare-fun temp989_158 () (_ BitVec 64))
(declare-fun temp989_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp989_159 () (_ BitVec 64))
(declare-fun temp989_160 () (_ BitVec 64))
(declare-fun temp989_162 () (_ BitVec 64))
(declare-fun temp989_163 () (_ BitVec 64))
(declare-fun temp989_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp989_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp989_165 () (_ BitVec 64))
(declare-fun temp989_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp989_167 () (_ BitVec 64))
(declare-fun temp989_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp989_169 () (_ BitVec 64))
(declare-fun temp989_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp989_171 () (_ BitVec 64))
(declare-fun temp989_172 () (_ BitVec 64))
(declare-fun temp989_173 () (_ BitVec 64))
(declare-fun temp989_174 () (_ BitVec 64))
(declare-fun temp989_175 () (_ BitVec 64))
(declare-fun temp989_176 () (_ BitVec 64))
(declare-fun temp989_177 () (_ BitVec 64))
(declare-fun temp989_178 () (_ BitVec 64))
(declare-fun temp989_179 () (_ BitVec 64))
(declare-fun temp989_180 () (_ BitVec 64))
(declare-fun temp989_181 () (_ BitVec 64))
(declare-fun temp989_182 () (_ BitVec 64))
(declare-fun temp989_183 () (_ BitVec 64))
(declare-fun temp989_184 () (_ BitVec 64))
(declare-fun temp989_185 () (_ BitVec 64))
(declare-fun temp989_186 () (_ BitVec 64))
(declare-fun temp989_187 () (_ BitVec 64))
(declare-fun temp989_188 () (_ BitVec 64))
(declare-fun temp989_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp989_190 () (_ BitVec 64))
(declare-fun temp989_192 () (_ BitVec 64))
(declare-fun temp989_193 () (_ BitVec 64))
(declare-fun temp989_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp989_194 () (_ BitVec 64))
(declare-fun temp989_195 () (_ BitVec 64))
(declare-fun temp989_197 () (_ BitVec 64))
(declare-fun temp989_198 () (_ BitVec 64))
(declare-fun temp989_196 () (_ BitVec 64))
(declare-fun temp989_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp989_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp989_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp989_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp989_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp989_204 () (_ BitVec 64))
(declare-fun temp989_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp989_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp989_207 () (_ BitVec 64))
(declare-fun temp989_208 () (_ BitVec 64))
(declare-fun temp989_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp989_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp989_211 () (_ BitVec 64))
(declare-fun temp989_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp989_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp989_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp989_215 () (_ BitVec 64))
(assert (= temp989_1 #x0000000000000001))
(assert (= var77203 temp989_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp989_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp989_2)))
(assert (= temp989_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp989_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp989_4 #x0000000000000000))
(assert (= var210941 temp989_4))
(assert (= temp989_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp989_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp989_6 #x0000000000000000))
(assert (= var210986 temp989_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp989_7 #x0000000000000000))
(assert (= temp989_8 temp989_7))
(assert (= temp989_9 (select ARGNAME_padding_NAMEEND_VAL temp989_8)))
(assert (= temp989_10 #x0000000000000001))
(assert (= temp989_11 temp989_10))
(assert (= temp989_12 (select ARGNAME_padding_NAMEEND_VAL temp989_11)))
(assert (= temp989_13 #x0000000000000002))
(assert (= temp989_14 temp989_13))
(assert (= temp989_15 (select ARGNAME_padding_NAMEEND_VAL temp989_14)))
(assert (= temp989_16 #x0000000000000003))
(assert (= temp989_17 temp989_16))
(assert (= temp989_18 (select ARGNAME_padding_NAMEEND_VAL temp989_17)))
(assert (= temp989_19 #x0000000000000004))
(assert (= temp989_20 temp989_19))
(assert (= temp989_21 (select ARGNAME_padding_NAMEEND_VAL temp989_20)))
(assert (= temp989_22 #x0000000000000005))
(assert (= temp989_23 temp989_22))
(assert (= temp989_24 (select ARGNAME_padding_NAMEEND_VAL temp989_23)))
(assert (= temp989_25 #x0000000000000000))
(assert (= temp989_26 #x0000000000000000))
(assert (= temp989_27 temp989_26))
(assert (= temp989_28 (select ARGNAME_padding_NAMEEND_VAL temp989_27)))
(assert (= temp989_29 #x0000000000000000))
(assert (= temp989_30 #x0000000000000001))
(assert (= temp989_31 temp989_30))
(assert (= temp989_32 (select ARGNAME_padding_NAMEEND_VAL temp989_31)))
(assert (= temp989_33 #x0000000000000000))
(assert (= temp989_34 #x0000000000000002))
(assert (= temp989_35 temp989_34))
(assert (= temp989_36 (select ARGNAME_padding_NAMEEND_VAL temp989_35)))
(assert (= temp989_37 #x0000000000000000))
(assert (= temp989_38 #x0000000000000003))
(assert (= temp989_39 temp989_38))
(assert (= temp989_40 (select ARGNAME_padding_NAMEEND_VAL temp989_39)))
(assert (= temp989_41 #x0000000000000000))
(assert (= temp989_42 #x0000000000000004))
(assert (= temp989_43 temp989_42))
(assert (= temp989_44 (select ARGNAME_padding_NAMEEND_VAL temp989_43)))
(assert (= temp989_45 #x0000000000000000))
(assert (= temp989_46 #x0000000000000005))
(assert (= temp989_47 temp989_46))
(assert (= temp989_48 (select ARGNAME_padding_NAMEEND_VAL temp989_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp989_28 temp989_25)
             (bvslt temp989_32 temp989_29)
             (bvslt temp989_36 temp989_33)
             (bvslt temp989_40 temp989_37)
             (bvslt temp989_44 temp989_41)
             (bvslt temp989_48 temp989_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp989_49 #x0000000000000000))
(assert (= var1191714 temp989_49))
(assert (= temp989_50 #x0000000000000000))
(assert (= temp989_51 temp989_50))
(assert (= temp989_52 (select ARGNAME_output_padding_NAMEEND_VAL temp989_51)))
(assert (= temp989_53 #x0000000000000001))
(assert (= temp989_54 temp989_53))
(assert (= temp989_55 (select ARGNAME_output_padding_NAMEEND_VAL temp989_54)))
(assert (= temp989_56 #x0000000000000002))
(assert (= temp989_57 temp989_56))
(assert (= temp989_58 (select ARGNAME_output_padding_NAMEEND_VAL temp989_57)))
(assert (= temp989_59 #x0000000000000003))
(assert (= temp989_60 temp989_59))
(assert (= temp989_61 (select ARGNAME_output_padding_NAMEEND_VAL temp989_60)))
(assert (= temp989_62 #x0000000000000004))
(assert (= temp989_63 temp989_62))
(assert (= temp989_64 (select ARGNAME_output_padding_NAMEEND_VAL temp989_63)))
(assert (= temp989_65 #x0000000000000005))
(assert (= temp989_66 temp989_65))
(assert (= temp989_67 (select ARGNAME_output_padding_NAMEEND_VAL temp989_66)))
(assert (= temp989_68 #x0000000000000000))
(assert (= temp989_69 #x0000000000000000))
(assert (= temp989_70 temp989_69))
(assert (= temp989_71 (select ARGNAME_output_padding_NAMEEND_VAL temp989_70)))
(assert (= temp989_72 #x0000000000000000))
(assert (= temp989_73 #x0000000000000001))
(assert (= temp989_74 temp989_73))
(assert (= temp989_75 (select ARGNAME_output_padding_NAMEEND_VAL temp989_74)))
(assert (= temp989_76 #x0000000000000000))
(assert (= temp989_77 #x0000000000000002))
(assert (= temp989_78 temp989_77))
(assert (= temp989_79 (select ARGNAME_output_padding_NAMEEND_VAL temp989_78)))
(assert (= temp989_80 #x0000000000000000))
(assert (= temp989_81 #x0000000000000003))
(assert (= temp989_82 temp989_81))
(assert (= temp989_83 (select ARGNAME_output_padding_NAMEEND_VAL temp989_82)))
(assert (= temp989_84 #x0000000000000000))
(assert (= temp989_85 #x0000000000000004))
(assert (= temp989_86 temp989_85))
(assert (= temp989_87 (select ARGNAME_output_padding_NAMEEND_VAL temp989_86)))
(assert (= temp989_88 #x0000000000000000))
(assert (= temp989_89 #x0000000000000005))
(assert (= temp989_90 temp989_89))
(assert (= temp989_91 (select ARGNAME_output_padding_NAMEEND_VAL temp989_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp989_71 temp989_68)
             (bvslt temp989_75 temp989_72)
             (bvslt temp989_79 temp989_76)
             (bvslt temp989_83 temp989_80)
             (bvslt temp989_87 temp989_84)
             (bvslt temp989_91 temp989_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp989_92 #x0000000000000000))
(assert (= var1191725 temp989_92))
(assert (= temp989_93 #x0000000000000000))
(assert (= temp989_94 temp989_93))
(assert (= temp989_95 (select ARGNAME_stride_NAMEEND_VAL temp989_94)))
(assert (= temp989_96 #x0000000000000001))
(assert (= temp989_97 temp989_96))
(assert (= temp989_98 (select ARGNAME_stride_NAMEEND_VAL temp989_97)))
(assert (= temp989_99 #x0000000000000002))
(assert (= temp989_100 temp989_99))
(assert (= temp989_101 (select ARGNAME_stride_NAMEEND_VAL temp989_100)))
(assert (= temp989_102 #x0000000000000003))
(assert (= temp989_103 temp989_102))
(assert (= temp989_104 (select ARGNAME_stride_NAMEEND_VAL temp989_103)))
(assert (= temp989_105 #x0000000000000004))
(assert (= temp989_106 temp989_105))
(assert (= temp989_107 (select ARGNAME_stride_NAMEEND_VAL temp989_106)))
(assert (= temp989_108 #x0000000000000005))
(assert (= temp989_109 temp989_108))
(assert (= temp989_110 (select ARGNAME_stride_NAMEEND_VAL temp989_109)))
(assert (= temp989_111 #x0000000000000000))
(assert (= temp989_112 #x0000000000000000))
(assert (= temp989_113 temp989_112))
(assert (= temp989_114 (select ARGNAME_stride_NAMEEND_VAL temp989_113)))
(assert (= temp989_115 #x0000000000000000))
(assert (= temp989_116 #x0000000000000001))
(assert (= temp989_117 temp989_116))
(assert (= temp989_118 (select ARGNAME_stride_NAMEEND_VAL temp989_117)))
(assert (= temp989_119 #x0000000000000000))
(assert (= temp989_120 #x0000000000000002))
(assert (= temp989_121 temp989_120))
(assert (= temp989_122 (select ARGNAME_stride_NAMEEND_VAL temp989_121)))
(assert (= temp989_123 #x0000000000000000))
(assert (= temp989_124 #x0000000000000003))
(assert (= temp989_125 temp989_124))
(assert (= temp989_126 (select ARGNAME_stride_NAMEEND_VAL temp989_125)))
(assert (= temp989_127 #x0000000000000000))
(assert (= temp989_128 #x0000000000000004))
(assert (= temp989_129 temp989_128))
(assert (= temp989_130 (select ARGNAME_stride_NAMEEND_VAL temp989_129)))
(assert (= temp989_131 #x0000000000000000))
(assert (= temp989_132 #x0000000000000005))
(assert (= temp989_133 temp989_132))
(assert (= temp989_134 (select ARGNAME_stride_NAMEEND_VAL temp989_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp989_114 temp989_111)
             (bvsle temp989_118 temp989_115)
             (bvsle temp989_122 temp989_119)
             (bvsle temp989_126 temp989_123)
             (bvsle temp989_130 temp989_127)
             (bvsle temp989_134 temp989_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp989_135 #x0000000000000000))
(assert (= var1191735 temp989_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp989_136 #x0000000000000001))
(assert (= var1191747 temp989_136))
(assert (= temp989_137 #x0000000000000000))
(assert (= var1179826 temp989_137))
(assert (= temp989_138 #x0000000000000000))
(assert (= temp989_139 temp989_138))
(assert (= temp989_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp989_139)))
(assert (= temp989_141 #x0000000000000001))
(assert (= temp989_142 temp989_141))
(assert (= temp989_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp989_142)))
(assert (= temp989_144 #x0000000000000002))
(assert (= temp989_145 temp989_144))
(assert (= temp989_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp989_145)))
(assert (= temp989_147 #x0000000000000003))
(assert (= temp989_148 temp989_147))
(assert (= temp989_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp989_148)))
(assert (= temp989_150 #x0000000000000004))
(assert (= temp989_151 temp989_150))
(assert (= temp989_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp989_151)))
(assert (= temp989_153 #x0000000000000005))
(assert (= temp989_154 temp989_153))
(assert (= temp989_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp989_154)))
(assert (= temp989_157 var1179826))
(assert (= temp989_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp989_157)))
(assert (= temp989_156 temp989_158))
(assert (= var1191780
   (ite (bvslt temp989_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp989_159 #x0000000000000000))
(assert (= var1191780 temp989_159))
(assert (= temp989_160 #x0000000000000000))
(assert (= var1179826 temp989_160))
(assert (= temp989_162 var1179826))
(assert (= temp989_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp989_162)))
(assert (= temp989_161 temp989_163))
(assert (= var1191802 (bvsmod temp989_161 ARGNAME_groups_NAMEEND)))
(assert (= temp989_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp989_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp989_165 #x0000000000000001))
(assert (= var1191803 temp989_165))
(assert (= temp989_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp989_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp989_167 #x0000000000000001))
(assert (= var1191823 temp989_167))
(assert (= temp989_168 #x0000000000000001))
(assert (= var1180714 temp989_168))
(assert (= temp989_169 #x0000000000000000))
(assert (= temp989_170 temp989_169))
(assert (= temp989_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp989_170)))
(assert (= temp989_172 #x0000000000000001))
(assert (= temp989_173 temp989_172))
(assert (= temp989_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp989_173)))
(assert (= temp989_175 #x0000000000000002))
(assert (= temp989_176 temp989_175))
(assert (= temp989_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp989_176)))
(assert (= temp989_178 #x0000000000000003))
(assert (= temp989_179 temp989_178))
(assert (= temp989_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp989_179)))
(assert (= temp989_181 #x0000000000000004))
(assert (= temp989_182 temp989_181))
(assert (= temp989_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp989_182)))
(assert (= temp989_184 #x0000000000000005))
(assert (= temp989_185 temp989_184))
(assert (= temp989_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp989_185)))
(assert (= temp989_187 #x0000000000000000))
(assert (= temp989_188
   (ite (bvslt var1180714 temp989_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp989_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp989_188)))
(assert (= var1191831 temp989_189))
(assert (bvslt (ite (bvslt var1180714 temp989_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp989_190 #x0000000000000001))
(assert (= var1180714 temp989_190))
(assert (= temp989_192 var1180714))
(assert (= temp989_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp989_192)))
(assert (= temp989_191 temp989_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp989_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp989_194 #x0000000000000001))
(assert (= var1191836 temp989_194))
(assert (= temp989_195 #x0000000000000000))
(assert (= var1179826 temp989_195))
(assert (= temp989_197 var1179826))
(assert (= temp989_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp989_197)))
(assert (= temp989_196 temp989_198))
(assert (= temp989_199 #x0000000000000002))
(assert (= var1586025 temp989_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp989_200 #x0000000000000001))
(assert (= var1191993 temp989_200))
(assert (= temp989_201 #x0000000000000001))
(assert (= var2700303 temp989_201))
(assert (= temp989_202 #x0000000000000001))
(assert (= var2962447 temp989_202))
(assert (= temp989_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp989_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp989_204 #x0000000000000001))
(assert (= var211058 temp989_204))
(assert (= temp989_205 #x0000000000000001))
(assert (= var211188 temp989_205))
(assert (= var3879401 var211188))
(assert (= temp989_206 #x0000000000000000))
(assert (= var3866802 temp989_206))
(assert (= temp989_207 #x0000000000000000))
(assert (= temp989_208
   (ite (bvslt var3866802 temp989_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp989_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp989_208)))
(assert (= var3879420 temp989_209))
(assert (bvslt (ite (bvslt var3866802 temp989_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp989_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp989_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp989_211 #x0000000000000001))
(assert (= var3879421 temp989_211))
(assert (= temp989_212 #x0000000000000000))
(assert (= var4079423 temp989_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp989_213 #x0000000000000002))
(assert (= var4208259 temp989_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp989_214 #x0000000000000000))
(assert (= var4273820 temp989_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp989_215 #x0000000000000001))
(assert (= var211058 temp989_215))
(model-add temp989_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp989_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp989_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp989_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





