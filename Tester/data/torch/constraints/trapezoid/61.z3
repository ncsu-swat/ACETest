(declare-fun temp135_1 () (_ BitVec 64))
(declare-fun temp135_2 () (_ BitVec 64))
(declare-fun temp135_3 () (_ BitVec 64))
(declare-fun ARGNAME_y_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp135_4 () (_ BitVec 64))
(declare-fun temp135_5 () (_ BitVec 64))
(declare-fun temp135_6 () (_ BitVec 64))
(declare-fun temp135_7 () (_ BitVec 64))
(declare-fun temp135_8 () (_ BitVec 64))
(declare-fun temp135_9 () (_ BitVec 64))
(declare-fun temp135_10 () (_ BitVec 64))
(declare-fun temp135_11 () (_ BitVec 64))
(declare-fun temp135_12 () (_ BitVec 64))
(declare-fun temp135_13 () (_ BitVec 64))
(declare-fun temp135_14 () (_ BitVec 64))
(declare-fun temp135_15 () (_ BitVec 64))
(declare-fun temp135_16 () (_ BitVec 64))
(declare-fun temp135_17 () (_ BitVec 64))
(declare-fun temp135_18 () (_ BitVec 64))
(declare-fun temp135_19 () (_ BitVec 64))
(declare-fun temp135_20 () (_ BitVec 64))
(declare-fun var66228 () (_ BitVec 64))
(declare-fun ARGNAME_y_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp135_21 () (_ BitVec 64))
(declare-fun var66232 () (_ BitVec 64))
(declare-fun temp135_22 () (_ BitVec 64))
(declare-fun temp135_23 () (_ BitVec 64))
(declare-fun var66235 () (_ BitVec 64))
(declare-fun k!0 () (_ BitVec 64))
(declare-fun k!1 () Bool)
(declare-fun temp135_24 () (_ BitVec 64))
(declare-fun ARGNAME_x_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var66276 () (_ BitVec 64))
(declare-fun temp135_25 () (_ BitVec 64))
(declare-fun temp135_26 () (_ BitVec 64))
(declare-fun var65762 () (_ BitVec 64))
(declare-fun temp135_27 () (_ BitVec 64))
(declare-fun temp135_28 () (_ BitVec 64))
(declare-fun ARGNAME_x_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp135_29 () (_ BitVec 64))
(declare-fun temp135_30 () (_ BitVec 64))
(declare-fun temp135_31 () (_ BitVec 64))
(declare-fun temp135_32 () (_ BitVec 64))
(declare-fun temp135_33 () (_ BitVec 64))
(declare-fun temp135_34 () (_ BitVec 64))
(declare-fun temp135_35 () (_ BitVec 64))
(declare-fun temp135_36 () (_ BitVec 64))
(declare-fun temp135_37 () (_ BitVec 64))
(declare-fun temp135_38 () (_ BitVec 64))
(declare-fun temp135_39 () (_ BitVec 64))
(declare-fun temp135_40 () (_ BitVec 64))
(declare-fun temp135_41 () (_ BitVec 64))
(declare-fun temp135_42 () (_ BitVec 64))
(declare-fun temp135_43 () (_ BitVec 64))
(declare-fun temp135_44 () (_ BitVec 64))
(declare-fun temp135_45 () (_ BitVec 64))
(declare-fun temp135_46 () (_ BitVec 64))
(declare-fun temp135_47 () (_ BitVec 64))
(declare-fun var66279 () (_ BitVec 64))
(declare-fun temp135_48 () (_ BitVec 64))
(declare-fun temp135_49 () (_ BitVec 64))
(declare-fun temp135_50 () (_ BitVec 64))
(declare-fun var66280 () (_ BitVec 64))
(declare-fun var66281 () (_ BitVec 64))
(declare-fun temp135_51 () (_ BitVec 64))
(declare-fun temp135_53 () (_ BitVec 64))
(declare-fun temp135_52 () (_ BitVec 64))
(declare-fun temp135_54 () (_ BitVec 64))
(declare-fun var526834 () (_ BitVec 64))
(declare-fun var526836 () (_ BitVec 64))
(declare-fun var592572 () (_ BitVec 64))
(declare-fun var658116 () (_ BitVec 64))
(declare-fun temp135_55 () (_ BitVec 64))
(declare-fun var920184 () (_ BitVec 64))
(declare-fun temp135_56 () (_ BitVec 64))
(declare-fun temp135_57 () (_ BitVec 64))
(declare-fun temp135_58 () (_ BitVec 64))
(declare-fun temp135_59 () (_ BitVec 64))
(declare-fun var66309 () (_ BitVec 64))
(declare-fun temp135_61 () (_ BitVec 64))
(declare-fun temp135_60 () (_ BitVec 64))
(declare-fun temp135_63 () (_ BitVec 64))
(declare-fun temp135_62 () (_ BitVec 64))
(declare-fun temp135_64 () (_ BitVec 64))
(declare-fun var2032934 () (_ BitVec 64))
(declare-fun temp135_65 () (_ BitVec 64))
(declare-fun var2032982 () (_ BitVec 64))
(declare-fun temp135_66 () (_ BitVec 64))
(declare-fun temp135_68 () (_ BitVec 64))
(declare-fun temp135_67 () (_ BitVec 64))
(declare-fun temp135_69 () (_ BitVec 64))
(declare-fun var2426150 () (_ BitVec 64))
(declare-fun temp135_70 () (_ BitVec 64))
(declare-fun var2426184 () (_ BitVec 64))
(declare-fun temp135_71 () (_ BitVec 64))
(declare-fun var2426198 () (_ BitVec 64))
(declare-fun temp135_72 () (_ BitVec 64))
(declare-fun temp135_73 () (_ BitVec 64))
(assert (= temp135_1 #x0000000000000000))
(assert (= temp135_2 temp135_1))
(assert (= temp135_3 (select ARGNAME_y_NAMEEND_DIMSIZE temp135_2)))
(assert (= temp135_4 #x0000000000000001))
(assert (= temp135_5 temp135_4))
(assert (= temp135_6 (select ARGNAME_y_NAMEEND_DIMSIZE temp135_5)))
(assert (= temp135_7 #x0000000000000002))
(assert (= temp135_8 temp135_7))
(assert (= temp135_9 (select ARGNAME_y_NAMEEND_DIMSIZE temp135_8)))
(assert (= temp135_10 #x0000000000000003))
(assert (= temp135_11 temp135_10))
(assert (= temp135_12 (select ARGNAME_y_NAMEEND_DIMSIZE temp135_11)))
(assert (= temp135_13 #x0000000000000004))
(assert (= temp135_14 temp135_13))
(assert (= temp135_15 (select ARGNAME_y_NAMEEND_DIMSIZE temp135_14)))
(assert (= temp135_16 #x0000000000000005))
(assert (= temp135_17 temp135_16))
(assert (= temp135_18 (select ARGNAME_y_NAMEEND_DIMSIZE temp135_17)))
(assert (= temp135_19 #x0000000000000000))
(assert (= temp135_20
   (ite (bvslt var66228 temp135_19)
        (bvadd ARGNAME_y_NAMEEND_DIM var66228)
        var66228)))
(assert (= temp135_21 (select ARGNAME_y_NAMEEND_DIMSIZE temp135_20)))
(assert (= var66232 temp135_21))
(assert (bvslt (ite (bvslt var66228 temp135_19)
            (bvadd ARGNAME_y_NAMEEND_DIM var66228)
            var66228)
       ARGNAME_y_NAMEEND_DIM))
(assert (= temp135_22 #x0000000000000000))
(assert (= var66235 (ite (= var66232 temp135_22) #x0000000000000001 #x0000000000000000)))
(assert (= temp135_23 #x0000000000000000))
(assert (= var66235 temp135_23))
(assert (= temp135_24 #x0000000000000001))
(assert (= var66276
   (ite (= ARGNAME_x_NAMEEND_DIM temp135_24)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp135_25 #x0000000000000001))
(assert (= var66276 temp135_25))
(assert (= temp135_26 #x0000000000000000))
(assert (= var65762 temp135_26))
(assert (= temp135_27 #x0000000000000000))
(assert (= temp135_28 temp135_27))
(assert (= temp135_29 (select ARGNAME_x_NAMEEND_DIMSIZE temp135_28)))
(assert (= temp135_30 #x0000000000000001))
(assert (= temp135_31 temp135_30))
(assert (= temp135_32 (select ARGNAME_x_NAMEEND_DIMSIZE temp135_31)))
(assert (= temp135_33 #x0000000000000002))
(assert (= temp135_34 temp135_33))
(assert (= temp135_35 (select ARGNAME_x_NAMEEND_DIMSIZE temp135_34)))
(assert (= temp135_36 #x0000000000000003))
(assert (= temp135_37 temp135_36))
(assert (= temp135_38 (select ARGNAME_x_NAMEEND_DIMSIZE temp135_37)))
(assert (= temp135_39 #x0000000000000004))
(assert (= temp135_40 temp135_39))
(assert (= temp135_41 (select ARGNAME_x_NAMEEND_DIMSIZE temp135_40)))
(assert (= temp135_42 #x0000000000000005))
(assert (= temp135_43 temp135_42))
(assert (= temp135_44 (select ARGNAME_x_NAMEEND_DIMSIZE temp135_43)))
(assert (= temp135_45 #x0000000000000000))
(assert (= temp135_46
   (ite (bvslt var65762 temp135_45)
        (bvadd ARGNAME_x_NAMEEND_DIM var65762)
        var65762)))
(assert (= temp135_47 (select ARGNAME_x_NAMEEND_DIMSIZE temp135_46)))
(assert (= var66279 temp135_47))
(assert (bvslt (ite (bvslt var65762 temp135_45)
            (bvadd ARGNAME_x_NAMEEND_DIM var65762)
            var65762)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp135_48 #x0000000000000000))
(assert (= temp135_49
   (ite (bvslt var66228 temp135_48)
        (bvadd ARGNAME_y_NAMEEND_DIM var66228)
        var66228)))
(assert (= temp135_50 (select ARGNAME_y_NAMEEND_DIMSIZE temp135_49)))
(assert (= var66280 temp135_50))
(assert (bvslt (ite (bvslt var66228 temp135_48)
            (bvadd ARGNAME_y_NAMEEND_DIM var66228)
            var66228)
       ARGNAME_y_NAMEEND_DIM))
(assert (= var66281 (ite (= var66279 var66280) #x0000000000000001 #x0000000000000000)))
(assert (= temp135_51 #x0000000000000001))
(assert (= var66281 temp135_51))
(assert (= temp135_53 #x0000000000000001))
(assert (= temp135_52 temp135_53))
(assert (= temp135_54 #x0000000000000005))
(assert (= var526834 temp135_54))
(assert (= var526836 var526834))
(assert (= var592572 var526836))
(assert (= var658116 var592572))
(assert (= temp135_55 #x0000000000000000))
(assert (= var920184 temp135_55))
(assert (= temp135_56 #x0000000000000000))
(assert (= var65762 temp135_56))
(assert (= temp135_57 #x0000000000000000))
(assert (= temp135_58
   (ite (bvslt var65762 temp135_57)
        (bvadd ARGNAME_x_NAMEEND_DIM var65762)
        var65762)))
(assert (= temp135_59 (select ARGNAME_x_NAMEEND_DIMSIZE temp135_58)))
(assert (= var66309 temp135_59))
(assert (bvslt (ite (bvslt var65762 temp135_57)
            (bvadd ARGNAME_x_NAMEEND_DIM var65762)
            var65762)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp135_61 #x0000000000000000))
(assert (= temp135_60 temp135_61))
(assert (= temp135_63 #xffffffffffffffff))
(assert (= temp135_62 temp135_63))
(assert (= temp135_64 #x0000000000000001))
(assert (= var2032934 temp135_64))
(assert (= temp135_65 #x0000000000000000))
(assert (= var2032982 temp135_65))
(assert (= temp135_66 #x0000000000000000))
(assert (= var2032982 temp135_66))
(assert (= temp135_68 #x0000000000000001))
(assert (= temp135_67 temp135_68))
(assert (= temp135_69 #x0000000000000001))
(assert (= var2426150 temp135_69))
(assert (= temp135_70 #x0000000000000000))
(assert (= var2426184 temp135_70))
(assert (= temp135_71 #x0000000000000000))
(assert (= var2426198 temp135_71))
(assert (= temp135_72 #x0000000000000000))
(assert (= var2426198 temp135_72))
(assert (= temp135_73 #x0000000000000000))
(assert (= var2426184 temp135_73))
(model-add temp135_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp135_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp135_3
           ()
           (_ BitVec 64)
           (select ARGNAME_y_NAMEEND_DIMSIZE #x0000000000000000))
(model-add temp135_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp135_5 () (_ BitVec 64) #x0000000000000001)
(model-add temp135_6
           ()
           (_ BitVec 64)
           (select ARGNAME_y_NAMEEND_DIMSIZE #x0000000000000001))
(model-add temp135_7 () (_ BitVec 64) #x0000000000000002)
(model-add temp135_8 () (_ BitVec 64) #x0000000000000002)
(model-add temp135_9
           ()
           (_ BitVec 64)
           (select ARGNAME_y_NAMEEND_DIMSIZE #x0000000000000002))
(model-add temp135_10 () (_ BitVec 64) #x0000000000000003)
(model-add temp135_11 () (_ BitVec 64) #x0000000000000003)
(model-add temp135_12
           ()
           (_ BitVec 64)
           (select ARGNAME_y_NAMEEND_DIMSIZE #x0000000000000003))
(model-add temp135_13 () (_ BitVec 64) #x0000000000000004)
(model-add temp135_14 () (_ BitVec 64) #x0000000000000004)
(model-add temp135_15
           ()
           (_ BitVec 64)
           (select ARGNAME_y_NAMEEND_DIMSIZE #x0000000000000004))
(model-add temp135_16 () (_ BitVec 64) #x0000000000000005)
(model-add temp135_17 () (_ BitVec 64) #x0000000000000005)
(model-add temp135_18
           ()
           (_ BitVec 64)
           (select ARGNAME_y_NAMEEND_DIMSIZE #x0000000000000005))
(model-add temp135_19 () (_ BitVec 64) #x0000000000000000)
(model-add temp135_20
           ()
           (_ BitVec 64)
           (ite (bvsle #x0000000000000000 var66228)
                var66228
                (bvadd ARGNAME_y_NAMEEND_DIM var66228)))
(model-add temp135_21
           ()
           (_ BitVec 64)
           (select ARGNAME_y_NAMEEND_DIMSIZE
                   (ite (bvsle #x0000000000000000 var66228)
                        var66228
                        (bvadd ARGNAME_y_NAMEEND_DIM var66228))))
(model-add var66232
           ()
           (_ BitVec 64)
           (select ARGNAME_y_NAMEEND_DIMSIZE
                   (ite (bvsle #x0000000000000000 var66228)
                        var66228
                        (bvadd ARGNAME_y_NAMEEND_DIM var66228))))
(model-add temp135_22 () (_ BitVec 64) #x0000000000000000)
(model-add temp135_23 () (_ BitVec 64) #x0000000000000000)
(model-add var66235 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_y_NAMEEND_DIMSIZE
           ()
           (Array (_ BitVec 64) (_ BitVec 64))
           ((as const (Array (_ BitVec 64) (_ BitVec 64))) k!0))
(model-del k!1)
(model-add k!0
           ()
           (_ BitVec 64)
           (ite k!1 #x0000000000000000 (bvnot #x0000000000000000)))




