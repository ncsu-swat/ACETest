(declare-fun temp84_1 () (_ BitVec 64))
(declare-fun var985537 () (_ BitVec 64))
(declare-fun var985545 () (_ BitVec 64))
(declare-fun temp84_2 () (_ BitVec 64))
(declare-fun var66507 () (_ BitVec 64))
(declare-fun temp84_3 () (_ BitVec 64))
(declare-fun var1247681 () (_ BitVec 64))
(declare-fun var1247689 () (_ BitVec 64))
(declare-fun temp84_4 () (_ BitVec 64))
(declare-fun var1640897 () (_ BitVec 64))
(declare-fun var1640905 () (_ BitVec 64))
(declare-fun temp84_5 () (_ BitVec 64))
(declare-fun var2230721 () (_ BitVec 64))
(declare-fun var2230729 () (_ BitVec 64))
(declare-fun temp84_6 () (_ BitVec 64))
(declare-fun var2820545 () (_ BitVec 64))
(declare-fun var2820553 () (_ BitVec 64))
(declare-fun temp84_7 () (_ BitVec 64))
(declare-fun var3410369 () (_ BitVec 64))
(declare-fun var3410377 () (_ BitVec 64))
(declare-fun temp84_8 () (_ BitVec 64))
(declare-fun var69034 () (_ BitVec 64))
(declare-fun temp84_9 () (_ BitVec 64))
(declare-fun temp84_11 () (_ BitVec 64))
(declare-fun temp84_10 () (_ BitVec 64))
(declare-fun temp84_12 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var69376 () (_ BitVec 64))
(declare-fun temp84_13 () (_ BitVec 64))
(declare-fun temp84_14 () (_ BitVec 64))
(declare-fun ARGNAME_training_NAMEEND () (_ BitVec 64))
(declare-fun var69399 () (_ BitVec 64))
(declare-fun temp84_16 () (_ BitVec 64))
(declare-fun temp84_15 () (_ BitVec 64))
(assert (= temp84_1 #x0000000000000002))
(assert (= var985537 temp84_1))
(assert (= var985545 var985537))
(assert (= temp84_2 #x0000000000000001))
(assert (= var66507 temp84_2))
(assert (= temp84_3 #x0000000000000002))
(assert (= var1247681 temp84_3))
(assert (= var1247689 var1247681))
(assert (= temp84_4 #x0000000000000002))
(assert (= var1640897 temp84_4))
(assert (= var1640905 var1640897))
(assert (= temp84_5 #x0000000000000002))
(assert (= var2230721 temp84_5))
(assert (= var2230729 var2230721))
(assert (= temp84_6 #x0000000000000002))
(assert (= var2820545 temp84_6))
(assert (= var2820553 var2820545))
(assert (= temp84_7 #x0000000000000002))
(assert (= var3410369 temp84_7))
(assert (= var3410377 var3410369))
(assert (= temp84_8 #x0000000000000000))
(assert (= var69034 temp84_8))
(assert (= temp84_9 #x0000000000000000))
(assert (= var69034 temp84_9))
(assert (= temp84_11 #x0000000000000000))
(assert (= temp84_10 temp84_11))
(assert (= temp84_12 #x0000000000000006))
(assert (= var69376
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp84_12)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp84_13 #x0000000000000001))
(assert (= var69376 temp84_13))
(assert (= temp84_14 #x0000000000000001))
(assert (= var69399 (bvxor ARGNAME_training_NAMEEND temp84_14)))
(assert (= temp84_16 #x0000000000000002))
(assert (= temp84_15 temp84_16))
(model-add temp84_1 () (_ BitVec 64) #x0000000000000002)
(model-add var985537 () (_ BitVec 64) #x0000000000000002)
(model-add var985545 () (_ BitVec 64) #x0000000000000002)
(model-add temp84_2 () (_ BitVec 64) #x0000000000000001)
(model-add var66507 () (_ BitVec 64) #x0000000000000001)
(model-add temp84_3 () (_ BitVec 64) #x0000000000000002)
(model-add var1247681 () (_ BitVec 64) #x0000000000000002)
(model-add var1247689 () (_ BitVec 64) #x0000000000000002)
(model-add temp84_4 () (_ BitVec 64) #x0000000000000002)
(model-add var1640897 () (_ BitVec 64) #x0000000000000002)
(model-add var1640905 () (_ BitVec 64) #x0000000000000002)
(model-add temp84_5 () (_ BitVec 64) #x0000000000000002)
(model-add var2230721 () (_ BitVec 64) #x0000000000000002)
(model-add var2230729 () (_ BitVec 64) #x0000000000000002)
(model-add temp84_6 () (_ BitVec 64) #x0000000000000002)
(model-add var2820545 () (_ BitVec 64) #x0000000000000002)
(model-add var2820553 () (_ BitVec 64) #x0000000000000002)
(model-add temp84_7 () (_ BitVec 64) #x0000000000000002)
(model-add var3410369 () (_ BitVec 64) #x0000000000000002)
(model-add var3410377 () (_ BitVec 64) #x0000000000000002)
(model-add temp84_8 () (_ BitVec 64) #x0000000000000000)
(model-add var69034 () (_ BitVec 64) #x0000000000000000)
(model-add temp84_9 () (_ BitVec 64) #x0000000000000000)













