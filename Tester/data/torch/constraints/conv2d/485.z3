(declare-fun temp645_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp645_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp645_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp645_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp645_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp645_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp645_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp645_8 () (_ BitVec 64))
(declare-fun temp645_10 () (_ BitVec 64))
(declare-fun temp645_9 () (_ BitVec 64))
(declare-fun temp645_12 () (_ BitVec 64))
(declare-fun temp645_11 () (_ BitVec 64))
(declare-fun temp645_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp645_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp645_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp645_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp645_17 () (_ BitVec 64))
(declare-fun temp645_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp645_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp645_20 () (_ BitVec 64))
(declare-fun temp645_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp645_22 () (_ BitVec 64))
(declare-fun temp645_23 () (_ BitVec 64))
(declare-fun temp645_24 () (_ BitVec 64))
(declare-fun temp645_25 () (_ BitVec 64))
(declare-fun temp645_26 () (_ BitVec 64))
(declare-fun temp645_27 () (_ BitVec 64))
(declare-fun temp645_28 () (_ BitVec 64))
(declare-fun temp645_29 () (_ BitVec 64))
(declare-fun temp645_30 () (_ BitVec 64))
(declare-fun temp645_31 () (_ BitVec 64))
(declare-fun temp645_32 () (_ BitVec 64))
(declare-fun temp645_33 () (_ BitVec 64))
(declare-fun temp645_34 () (_ BitVec 64))
(declare-fun temp645_35 () (_ BitVec 64))
(declare-fun temp645_36 () (_ BitVec 64))
(declare-fun temp645_37 () (_ BitVec 64))
(declare-fun temp645_38 () (_ BitVec 64))
(declare-fun temp645_39 () (_ BitVec 64))
(declare-fun temp645_40 () (_ BitVec 64))
(declare-fun temp645_41 () (_ BitVec 64))
(declare-fun temp645_42 () (_ BitVec 64))
(declare-fun temp645_43 () (_ BitVec 64))
(declare-fun temp645_44 () (_ BitVec 64))
(declare-fun temp645_45 () (_ BitVec 64))
(declare-fun temp645_46 () (_ BitVec 64))
(declare-fun temp645_47 () (_ BitVec 64))
(declare-fun temp645_48 () (_ BitVec 64))
(declare-fun temp645_49 () (_ BitVec 64))
(declare-fun temp645_50 () (_ BitVec 64))
(declare-fun temp645_51 () (_ BitVec 64))
(declare-fun temp645_52 () (_ BitVec 64))
(declare-fun temp645_53 () (_ BitVec 64))
(declare-fun temp645_54 () (_ BitVec 64))
(declare-fun temp645_55 () (_ BitVec 64))
(declare-fun temp645_56 () (_ BitVec 64))
(declare-fun temp645_57 () (_ BitVec 64))
(declare-fun temp645_58 () (_ BitVec 64))
(declare-fun temp645_59 () (_ BitVec 64))
(declare-fun temp645_60 () (_ BitVec 64))
(declare-fun temp645_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp645_62 () (_ BitVec 64))
(declare-fun temp645_63 () (_ BitVec 64))
(declare-fun temp645_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp645_65 () (_ BitVec 64))
(declare-fun temp645_66 () (_ BitVec 64))
(declare-fun temp645_67 () (_ BitVec 64))
(declare-fun temp645_68 () (_ BitVec 64))
(declare-fun temp645_69 () (_ BitVec 64))
(declare-fun temp645_70 () (_ BitVec 64))
(declare-fun temp645_71 () (_ BitVec 64))
(declare-fun temp645_72 () (_ BitVec 64))
(declare-fun temp645_73 () (_ BitVec 64))
(declare-fun temp645_74 () (_ BitVec 64))
(declare-fun temp645_75 () (_ BitVec 64))
(declare-fun temp645_76 () (_ BitVec 64))
(declare-fun temp645_77 () (_ BitVec 64))
(declare-fun temp645_78 () (_ BitVec 64))
(declare-fun temp645_79 () (_ BitVec 64))
(declare-fun temp645_80 () (_ BitVec 64))
(declare-fun temp645_81 () (_ BitVec 64))
(declare-fun temp645_82 () (_ BitVec 64))
(declare-fun temp645_83 () (_ BitVec 64))
(declare-fun temp645_84 () (_ BitVec 64))
(declare-fun temp645_85 () (_ BitVec 64))
(declare-fun temp645_86 () (_ BitVec 64))
(declare-fun temp645_87 () (_ BitVec 64))
(declare-fun temp645_88 () (_ BitVec 64))
(declare-fun temp645_89 () (_ BitVec 64))
(declare-fun temp645_90 () (_ BitVec 64))
(declare-fun temp645_91 () (_ BitVec 64))
(declare-fun temp645_92 () (_ BitVec 64))
(declare-fun temp645_93 () (_ BitVec 64))
(declare-fun temp645_94 () (_ BitVec 64))
(declare-fun temp645_95 () (_ BitVec 64))
(declare-fun temp645_96 () (_ BitVec 64))
(declare-fun temp645_97 () (_ BitVec 64))
(declare-fun temp645_98 () (_ BitVec 64))
(declare-fun temp645_99 () (_ BitVec 64))
(declare-fun temp645_100 () (_ BitVec 64))
(declare-fun temp645_101 () (_ BitVec 64))
(declare-fun temp645_102 () (_ BitVec 64))
(declare-fun temp645_103 () (_ BitVec 64))
(declare-fun temp645_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp645_105 () (_ BitVec 64))
(declare-fun temp645_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp645_107 () (_ BitVec 64))
(declare-fun temp645_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp645_109 () (_ BitVec 64))
(declare-fun temp645_110 () (_ BitVec 64))
(declare-fun temp645_111 () (_ BitVec 64))
(declare-fun temp645_112 () (_ BitVec 64))
(declare-fun temp645_113 () (_ BitVec 64))
(declare-fun temp645_114 () (_ BitVec 64))
(declare-fun temp645_115 () (_ BitVec 64))
(declare-fun temp645_116 () (_ BitVec 64))
(declare-fun temp645_117 () (_ BitVec 64))
(declare-fun temp645_118 () (_ BitVec 64))
(declare-fun temp645_119 () (_ BitVec 64))
(declare-fun temp645_120 () (_ BitVec 64))
(declare-fun temp645_121 () (_ BitVec 64))
(declare-fun temp645_122 () (_ BitVec 64))
(declare-fun temp645_123 () (_ BitVec 64))
(declare-fun temp645_124 () (_ BitVec 64))
(declare-fun temp645_126 () (_ BitVec 64))
(declare-fun temp645_127 () (_ BitVec 64))
(declare-fun temp645_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp645_128 () (_ BitVec 64))
(declare-fun temp645_129 () (_ BitVec 64))
(declare-fun temp645_131 () (_ BitVec 64))
(declare-fun temp645_132 () (_ BitVec 64))
(declare-fun temp645_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp645_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp645_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp645_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp645_136 () (_ BitVec 64))
(declare-fun temp645_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp645_139 () (_ BitVec 64))
(declare-fun temp645_140 () (_ BitVec 64))
(declare-fun temp645_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp645_141 () (_ BitVec 64))
(declare-fun temp645_143 () (_ BitVec 64))
(declare-fun temp645_144 () (_ BitVec 64))
(declare-fun temp645_142 () (_ BitVec 64))
(declare-fun temp645_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp645_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp645_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp645_148 () (_ BitVec 64))
(declare-fun temp645_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp645_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp645_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var1522214 () (_ BitVec 64))
(declare-fun temp645_152 () (_ BitVec 64))
(declare-fun var1522215 () (_ BitVec 64))
(declare-fun temp645_154 () (_ BitVec 64))
(declare-fun temp645_153 () (_ BitVec 64))
(declare-fun temp645_155 () (_ BitVec 64))
(declare-fun var6229482 () (_ BitVec 64))
(declare-fun temp645_157 () (_ BitVec 64))
(declare-fun temp645_156 () (_ BitVec 64))
(declare-fun temp645_158 () (_ BitVec 64))
(assert (= temp645_1 #x0000000000000002))
(assert (= var989741 temp645_1))
(assert (= temp645_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp645_2)))
(assert (= temp645_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp645_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp645_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp645_4)))
(assert (= temp645_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp645_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp645_6 #x0000000000000000))
(assert (= var989776 temp645_6))
(assert (= temp645_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp645_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp645_8 #x0000000000000001))
(assert (= var989810 temp645_8))
(assert (= temp645_10 #x0000000000000000))
(assert (= temp645_9 temp645_10))
(assert (= temp645_12 #x0000000000000002))
(assert (= temp645_11 temp645_12))
(assert (= temp645_13 #x0000000000000000))
(assert (= var1387902 temp645_13))
(assert (= temp645_14 #x0000000000000001))
(assert (= var1387923 temp645_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp645_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp645_15)))
(assert (= temp645_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp645_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp645_17 #x0000000000000000))
(assert (= var1521661 temp645_17))
(assert (= temp645_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp645_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp645_19 #x0000000000000000))
(assert (= var1521706 temp645_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp645_20 #x0000000000000000))
(assert (= temp645_21 temp645_20))
(assert (= temp645_22 (select ARGNAME_padding_NAMEEND_VAL temp645_21)))
(assert (= temp645_23 #x0000000000000001))
(assert (= temp645_24 temp645_23))
(assert (= temp645_25 (select ARGNAME_padding_NAMEEND_VAL temp645_24)))
(assert (= temp645_26 #x0000000000000002))
(assert (= temp645_27 temp645_26))
(assert (= temp645_28 (select ARGNAME_padding_NAMEEND_VAL temp645_27)))
(assert (= temp645_29 #x0000000000000003))
(assert (= temp645_30 temp645_29))
(assert (= temp645_31 (select ARGNAME_padding_NAMEEND_VAL temp645_30)))
(assert (= temp645_32 #x0000000000000004))
(assert (= temp645_33 temp645_32))
(assert (= temp645_34 (select ARGNAME_padding_NAMEEND_VAL temp645_33)))
(assert (= temp645_35 #x0000000000000005))
(assert (= temp645_36 temp645_35))
(assert (= temp645_37 (select ARGNAME_padding_NAMEEND_VAL temp645_36)))
(assert (= temp645_38 #x0000000000000000))
(assert (= temp645_39 #x0000000000000000))
(assert (= temp645_40 temp645_39))
(assert (= temp645_41 (select ARGNAME_padding_NAMEEND_VAL temp645_40)))
(assert (= temp645_42 #x0000000000000000))
(assert (= temp645_43 #x0000000000000001))
(assert (= temp645_44 temp645_43))
(assert (= temp645_45 (select ARGNAME_padding_NAMEEND_VAL temp645_44)))
(assert (= temp645_46 #x0000000000000000))
(assert (= temp645_47 #x0000000000000002))
(assert (= temp645_48 temp645_47))
(assert (= temp645_49 (select ARGNAME_padding_NAMEEND_VAL temp645_48)))
(assert (= temp645_50 #x0000000000000000))
(assert (= temp645_51 #x0000000000000003))
(assert (= temp645_52 temp645_51))
(assert (= temp645_53 (select ARGNAME_padding_NAMEEND_VAL temp645_52)))
(assert (= temp645_54 #x0000000000000000))
(assert (= temp645_55 #x0000000000000004))
(assert (= temp645_56 temp645_55))
(assert (= temp645_57 (select ARGNAME_padding_NAMEEND_VAL temp645_56)))
(assert (= temp645_58 #x0000000000000000))
(assert (= temp645_59 #x0000000000000005))
(assert (= temp645_60 temp645_59))
(assert (= temp645_61 (select ARGNAME_padding_NAMEEND_VAL temp645_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp645_41 temp645_38)
             (bvslt temp645_45 temp645_42)
             (bvslt temp645_49 temp645_46)
             (bvslt temp645_53 temp645_50)
             (bvslt temp645_57 temp645_54)
             (bvslt temp645_61 temp645_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp645_62 #x0000000000000000))
(assert (= var2240290 temp645_62))
(assert (= temp645_63 #x0000000000000000))
(assert (= temp645_64 temp645_63))
(assert (= temp645_65 (select ARGNAME_stride_NAMEEND_VAL temp645_64)))
(assert (= temp645_66 #x0000000000000001))
(assert (= temp645_67 temp645_66))
(assert (= temp645_68 (select ARGNAME_stride_NAMEEND_VAL temp645_67)))
(assert (= temp645_69 #x0000000000000002))
(assert (= temp645_70 temp645_69))
(assert (= temp645_71 (select ARGNAME_stride_NAMEEND_VAL temp645_70)))
(assert (= temp645_72 #x0000000000000003))
(assert (= temp645_73 temp645_72))
(assert (= temp645_74 (select ARGNAME_stride_NAMEEND_VAL temp645_73)))
(assert (= temp645_75 #x0000000000000004))
(assert (= temp645_76 temp645_75))
(assert (= temp645_77 (select ARGNAME_stride_NAMEEND_VAL temp645_76)))
(assert (= temp645_78 #x0000000000000005))
(assert (= temp645_79 temp645_78))
(assert (= temp645_80 (select ARGNAME_stride_NAMEEND_VAL temp645_79)))
(assert (= temp645_81 #x0000000000000000))
(assert (= temp645_82 #x0000000000000000))
(assert (= temp645_83 temp645_82))
(assert (= temp645_84 (select ARGNAME_stride_NAMEEND_VAL temp645_83)))
(assert (= temp645_85 #x0000000000000000))
(assert (= temp645_86 #x0000000000000001))
(assert (= temp645_87 temp645_86))
(assert (= temp645_88 (select ARGNAME_stride_NAMEEND_VAL temp645_87)))
(assert (= temp645_89 #x0000000000000000))
(assert (= temp645_90 #x0000000000000002))
(assert (= temp645_91 temp645_90))
(assert (= temp645_92 (select ARGNAME_stride_NAMEEND_VAL temp645_91)))
(assert (= temp645_93 #x0000000000000000))
(assert (= temp645_94 #x0000000000000003))
(assert (= temp645_95 temp645_94))
(assert (= temp645_96 (select ARGNAME_stride_NAMEEND_VAL temp645_95)))
(assert (= temp645_97 #x0000000000000000))
(assert (= temp645_98 #x0000000000000004))
(assert (= temp645_99 temp645_98))
(assert (= temp645_100 (select ARGNAME_stride_NAMEEND_VAL temp645_99)))
(assert (= temp645_101 #x0000000000000000))
(assert (= temp645_102 #x0000000000000005))
(assert (= temp645_103 temp645_102))
(assert (= temp645_104 (select ARGNAME_stride_NAMEEND_VAL temp645_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp645_84 temp645_81)
             (bvsle temp645_88 temp645_85)
             (bvsle temp645_92 temp645_89)
             (bvsle temp645_96 temp645_93)
             (bvsle temp645_100 temp645_97)
             (bvsle temp645_104 temp645_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp645_105 #x0000000000000000))
(assert (= var2240311 temp645_105))
(assert (= temp645_106 #x0000000000000000))
(assert (= var2228402 temp645_106))
(assert (= temp645_107 #x0000000000000000))
(assert (= temp645_108 temp645_107))
(assert (= temp645_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp645_108)))
(assert (= temp645_110 #x0000000000000001))
(assert (= temp645_111 temp645_110))
(assert (= temp645_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp645_111)))
(assert (= temp645_113 #x0000000000000002))
(assert (= temp645_114 temp645_113))
(assert (= temp645_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp645_114)))
(assert (= temp645_116 #x0000000000000003))
(assert (= temp645_117 temp645_116))
(assert (= temp645_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp645_117)))
(assert (= temp645_119 #x0000000000000004))
(assert (= temp645_120 temp645_119))
(assert (= temp645_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp645_120)))
(assert (= temp645_122 #x0000000000000005))
(assert (= temp645_123 temp645_122))
(assert (= temp645_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp645_123)))
(assert (= temp645_126 var2228402))
(assert (= temp645_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp645_126)))
(assert (= temp645_125 temp645_127))
(assert (= var2240356
   (ite (bvslt temp645_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp645_128 #x0000000000000000))
(assert (= var2240356 temp645_128))
(assert (= temp645_129 #x0000000000000000))
(assert (= var2228402 temp645_129))
(assert (= temp645_131 var2228402))
(assert (= temp645_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp645_131)))
(assert (= temp645_130 temp645_132))
(assert (= var2240378 (bvsmod temp645_130 ARGNAME_groups_NAMEEND)))
(assert (= temp645_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp645_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp645_134 #x0000000000000001))
(assert (= var2240379 temp645_134))
(assert (= var2240398 var2240288))
(assert (= temp645_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp645_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp645_136 #x0000000000000001))
(assert (= var2240399 temp645_136))
(assert (= temp645_137 #x0000000000000001))
(assert (= var2229290 temp645_137))
(assert (= temp645_139 var2229290))
(assert (= temp645_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp645_139)))
(assert (= temp645_138 temp645_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp645_138)))
(assert (= temp645_141 #x0000000000000000))
(assert (= var2228402 temp645_141))
(assert (= temp645_143 var2228402))
(assert (= temp645_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp645_143)))
(assert (= temp645_142 temp645_144))
(assert (= temp645_145 #x0000000000000002))
(assert (= var2503529 temp645_145))
(assert (= temp645_146 #x0000000000000001))
(assert (= var2240569 temp645_146))
(assert (= temp645_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp645_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp645_148 #x0000000000000001))
(assert (= var1521778 temp645_148))
(assert (= temp645_149 #x0000000000000001))
(assert (= var1521908 temp645_149))
(assert (= var4010473 var1521908))
(assert (= temp645_150 #x0000000000000000))
(assert (= var4210495 temp645_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp645_151 #x0000000000000002))
(assert (= var4339331 temp645_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4796816 var1521921))
(assert (= var1522214 var1521633))
(assert (= temp645_152 #x0000000000000000))
(assert (= var1522215
   (ite (distinct var1522214 temp645_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp645_154 #x0000000000000001))
(assert (= temp645_153 temp645_154))
(assert (= temp645_155 #x0000000000000001))
(assert (= var6229482 temp645_155))
(assert (= temp645_157 #xffffffffffffffff))
(assert (= temp645_156 temp645_157))
(assert (= temp645_158 #x0000000000000001))
(assert (= var1521778 temp645_158))
(model-add temp645_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp645_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp645_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp645_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp645_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp645_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






