(declare-fun temp10108_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp10108_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp10108_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp10108_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp10108_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp10108_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp10108_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp10108_8 () (_ BitVec 64))
(declare-fun temp10108_10 () (_ BitVec 64))
(declare-fun temp10108_9 () (_ BitVec 64))
(declare-fun temp10108_12 () (_ BitVec 64))
(declare-fun temp10108_11 () (_ BitVec 64))
(declare-fun temp10108_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp10108_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp10108_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp10108_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp10108_17 () (_ BitVec 64))
(declare-fun temp10108_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp10108_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp10108_20 () (_ BitVec 64))
(declare-fun temp10108_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10108_22 () (_ BitVec 64))
(declare-fun temp10108_23 () (_ BitVec 64))
(declare-fun temp10108_24 () (_ BitVec 64))
(declare-fun temp10108_25 () (_ BitVec 64))
(declare-fun temp10108_26 () (_ BitVec 64))
(declare-fun temp10108_27 () (_ BitVec 64))
(declare-fun temp10108_28 () (_ BitVec 64))
(declare-fun temp10108_29 () (_ BitVec 64))
(declare-fun temp10108_30 () (_ BitVec 64))
(declare-fun temp10108_31 () (_ BitVec 64))
(declare-fun temp10108_32 () (_ BitVec 64))
(declare-fun temp10108_33 () (_ BitVec 64))
(declare-fun temp10108_34 () (_ BitVec 64))
(declare-fun temp10108_35 () (_ BitVec 64))
(declare-fun temp10108_36 () (_ BitVec 64))
(declare-fun temp10108_37 () (_ BitVec 64))
(declare-fun temp10108_38 () (_ BitVec 64))
(declare-fun temp10108_39 () (_ BitVec 64))
(declare-fun temp10108_40 () (_ BitVec 64))
(declare-fun temp10108_41 () (_ BitVec 64))
(declare-fun temp10108_42 () (_ BitVec 64))
(declare-fun temp10108_43 () (_ BitVec 64))
(declare-fun temp10108_44 () (_ BitVec 64))
(declare-fun temp10108_45 () (_ BitVec 64))
(declare-fun temp10108_46 () (_ BitVec 64))
(declare-fun temp10108_47 () (_ BitVec 64))
(declare-fun temp10108_48 () (_ BitVec 64))
(declare-fun temp10108_49 () (_ BitVec 64))
(declare-fun temp10108_50 () (_ BitVec 64))
(declare-fun temp10108_51 () (_ BitVec 64))
(declare-fun temp10108_52 () (_ BitVec 64))
(declare-fun temp10108_53 () (_ BitVec 64))
(declare-fun temp10108_54 () (_ BitVec 64))
(declare-fun temp10108_55 () (_ BitVec 64))
(declare-fun temp10108_56 () (_ BitVec 64))
(declare-fun temp10108_57 () (_ BitVec 64))
(declare-fun temp10108_58 () (_ BitVec 64))
(declare-fun temp10108_59 () (_ BitVec 64))
(declare-fun temp10108_60 () (_ BitVec 64))
(declare-fun temp10108_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp10108_62 () (_ BitVec 64))
(declare-fun temp10108_63 () (_ BitVec 64))
(declare-fun temp10108_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10108_65 () (_ BitVec 64))
(declare-fun temp10108_66 () (_ BitVec 64))
(declare-fun temp10108_67 () (_ BitVec 64))
(declare-fun temp10108_68 () (_ BitVec 64))
(declare-fun temp10108_69 () (_ BitVec 64))
(declare-fun temp10108_70 () (_ BitVec 64))
(declare-fun temp10108_71 () (_ BitVec 64))
(declare-fun temp10108_72 () (_ BitVec 64))
(declare-fun temp10108_73 () (_ BitVec 64))
(declare-fun temp10108_74 () (_ BitVec 64))
(declare-fun temp10108_75 () (_ BitVec 64))
(declare-fun temp10108_76 () (_ BitVec 64))
(declare-fun temp10108_77 () (_ BitVec 64))
(declare-fun temp10108_78 () (_ BitVec 64))
(declare-fun temp10108_79 () (_ BitVec 64))
(declare-fun temp10108_80 () (_ BitVec 64))
(declare-fun temp10108_81 () (_ BitVec 64))
(declare-fun temp10108_82 () (_ BitVec 64))
(declare-fun temp10108_83 () (_ BitVec 64))
(declare-fun temp10108_84 () (_ BitVec 64))
(declare-fun temp10108_85 () (_ BitVec 64))
(declare-fun temp10108_86 () (_ BitVec 64))
(declare-fun temp10108_87 () (_ BitVec 64))
(declare-fun temp10108_88 () (_ BitVec 64))
(declare-fun temp10108_89 () (_ BitVec 64))
(declare-fun temp10108_90 () (_ BitVec 64))
(declare-fun temp10108_91 () (_ BitVec 64))
(declare-fun temp10108_92 () (_ BitVec 64))
(declare-fun temp10108_93 () (_ BitVec 64))
(declare-fun temp10108_94 () (_ BitVec 64))
(declare-fun temp10108_95 () (_ BitVec 64))
(declare-fun temp10108_96 () (_ BitVec 64))
(declare-fun temp10108_97 () (_ BitVec 64))
(declare-fun temp10108_98 () (_ BitVec 64))
(declare-fun temp10108_99 () (_ BitVec 64))
(declare-fun temp10108_100 () (_ BitVec 64))
(declare-fun temp10108_101 () (_ BitVec 64))
(declare-fun temp10108_102 () (_ BitVec 64))
(declare-fun temp10108_103 () (_ BitVec 64))
(declare-fun temp10108_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp10108_105 () (_ BitVec 64))
(declare-fun temp10108_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp10108_107 () (_ BitVec 64))
(declare-fun temp10108_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10108_109 () (_ BitVec 64))
(declare-fun temp10108_110 () (_ BitVec 64))
(declare-fun temp10108_111 () (_ BitVec 64))
(declare-fun temp10108_112 () (_ BitVec 64))
(declare-fun temp10108_113 () (_ BitVec 64))
(declare-fun temp10108_114 () (_ BitVec 64))
(declare-fun temp10108_115 () (_ BitVec 64))
(declare-fun temp10108_116 () (_ BitVec 64))
(declare-fun temp10108_117 () (_ BitVec 64))
(declare-fun temp10108_118 () (_ BitVec 64))
(declare-fun temp10108_119 () (_ BitVec 64))
(declare-fun temp10108_120 () (_ BitVec 64))
(declare-fun temp10108_121 () (_ BitVec 64))
(declare-fun temp10108_122 () (_ BitVec 64))
(declare-fun temp10108_123 () (_ BitVec 64))
(declare-fun temp10108_124 () (_ BitVec 64))
(declare-fun temp10108_126 () (_ BitVec 64))
(declare-fun temp10108_127 () (_ BitVec 64))
(declare-fun temp10108_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp10108_128 () (_ BitVec 64))
(declare-fun temp10108_129 () (_ BitVec 64))
(declare-fun temp10108_131 () (_ BitVec 64))
(declare-fun temp10108_132 () (_ BitVec 64))
(declare-fun temp10108_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp10108_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp10108_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp10108_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp10108_136 () (_ BitVec 64))
(declare-fun temp10108_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp10108_139 () (_ BitVec 64))
(declare-fun temp10108_140 () (_ BitVec 64))
(declare-fun temp10108_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp10108_141 () (_ BitVec 64))
(declare-fun temp10108_143 () (_ BitVec 64))
(declare-fun temp10108_144 () (_ BitVec 64))
(declare-fun temp10108_142 () (_ BitVec 64))
(declare-fun temp10108_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp10108_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp10108_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp10108_148 () (_ BitVec 64))
(declare-fun temp10108_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp10108_150 () (_ BitVec 64))
(declare-fun var4010640 () (_ BitVec 64))
(declare-fun var4010467 () (_ BitVec 64))
(declare-fun var1521917 () (_ BitVec 64))
(declare-fun var4275993 () (_ BitVec 64))
(declare-fun temp10108_151 () (_ BitVec 64))
(declare-fun temp10108_152 () (_ BitVec 64))
(declare-fun temp10108_153 () (_ BitVec 64))
(declare-fun var4470403 () (_ BitVec 64))
(declare-fun var4470405 () (_ BitVec 64))
(declare-fun var4535948 () (_ BitVec 64))
(declare-fun var4535949 () (_ BitVec 64))
(declare-fun temp10108_154 () (_ BitVec 64))
(declare-fun var1522108 () (_ BitVec 64))
(declare-fun temp10108_155 () (_ BitVec 64))
(declare-fun var1522109 () (_ BitVec 64))
(declare-fun var5848909 () (_ BitVec 64))
(declare-fun temp10108_156 () (_ BitVec 64))
(assert (= temp10108_1 #x0000000000000002))
(assert (= var989741 temp10108_1))
(assert (= temp10108_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp10108_2)))
(assert (= temp10108_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp10108_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp10108_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp10108_4)))
(assert (= temp10108_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp10108_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp10108_6 #x0000000000000000))
(assert (= var989776 temp10108_6))
(assert (= temp10108_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp10108_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp10108_8 #x0000000000000001))
(assert (= var989810 temp10108_8))
(assert (= temp10108_10 #x0000000000000000))
(assert (= temp10108_9 temp10108_10))
(assert (= temp10108_12 #x0000000000000002))
(assert (= temp10108_11 temp10108_12))
(assert (= temp10108_13 #x0000000000000000))
(assert (= var1387902 temp10108_13))
(assert (= temp10108_14 #x0000000000000001))
(assert (= var1387923 temp10108_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp10108_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp10108_15)))
(assert (= temp10108_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10108_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10108_17 #x0000000000000000))
(assert (= var1521661 temp10108_17))
(assert (= temp10108_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp10108_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10108_19 #x0000000000000000))
(assert (= var1521706 temp10108_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp10108_20 #x0000000000000000))
(assert (= temp10108_21 temp10108_20))
(assert (= temp10108_22 (select ARGNAME_padding_NAMEEND_VAL temp10108_21)))
(assert (= temp10108_23 #x0000000000000001))
(assert (= temp10108_24 temp10108_23))
(assert (= temp10108_25 (select ARGNAME_padding_NAMEEND_VAL temp10108_24)))
(assert (= temp10108_26 #x0000000000000002))
(assert (= temp10108_27 temp10108_26))
(assert (= temp10108_28 (select ARGNAME_padding_NAMEEND_VAL temp10108_27)))
(assert (= temp10108_29 #x0000000000000003))
(assert (= temp10108_30 temp10108_29))
(assert (= temp10108_31 (select ARGNAME_padding_NAMEEND_VAL temp10108_30)))
(assert (= temp10108_32 #x0000000000000004))
(assert (= temp10108_33 temp10108_32))
(assert (= temp10108_34 (select ARGNAME_padding_NAMEEND_VAL temp10108_33)))
(assert (= temp10108_35 #x0000000000000005))
(assert (= temp10108_36 temp10108_35))
(assert (= temp10108_37 (select ARGNAME_padding_NAMEEND_VAL temp10108_36)))
(assert (= temp10108_38 #x0000000000000000))
(assert (= temp10108_39 #x0000000000000000))
(assert (= temp10108_40 temp10108_39))
(assert (= temp10108_41 (select ARGNAME_padding_NAMEEND_VAL temp10108_40)))
(assert (= temp10108_42 #x0000000000000000))
(assert (= temp10108_43 #x0000000000000001))
(assert (= temp10108_44 temp10108_43))
(assert (= temp10108_45 (select ARGNAME_padding_NAMEEND_VAL temp10108_44)))
(assert (= temp10108_46 #x0000000000000000))
(assert (= temp10108_47 #x0000000000000002))
(assert (= temp10108_48 temp10108_47))
(assert (= temp10108_49 (select ARGNAME_padding_NAMEEND_VAL temp10108_48)))
(assert (= temp10108_50 #x0000000000000000))
(assert (= temp10108_51 #x0000000000000003))
(assert (= temp10108_52 temp10108_51))
(assert (= temp10108_53 (select ARGNAME_padding_NAMEEND_VAL temp10108_52)))
(assert (= temp10108_54 #x0000000000000000))
(assert (= temp10108_55 #x0000000000000004))
(assert (= temp10108_56 temp10108_55))
(assert (= temp10108_57 (select ARGNAME_padding_NAMEEND_VAL temp10108_56)))
(assert (= temp10108_58 #x0000000000000000))
(assert (= temp10108_59 #x0000000000000005))
(assert (= temp10108_60 temp10108_59))
(assert (= temp10108_61 (select ARGNAME_padding_NAMEEND_VAL temp10108_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp10108_41 temp10108_38)
             (bvslt temp10108_45 temp10108_42)
             (bvslt temp10108_49 temp10108_46)
             (bvslt temp10108_53 temp10108_50)
             (bvslt temp10108_57 temp10108_54)
             (bvslt temp10108_61 temp10108_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10108_62 #x0000000000000000))
(assert (= var2240290 temp10108_62))
(assert (= temp10108_63 #x0000000000000000))
(assert (= temp10108_64 temp10108_63))
(assert (= temp10108_65 (select ARGNAME_stride_NAMEEND_VAL temp10108_64)))
(assert (= temp10108_66 #x0000000000000001))
(assert (= temp10108_67 temp10108_66))
(assert (= temp10108_68 (select ARGNAME_stride_NAMEEND_VAL temp10108_67)))
(assert (= temp10108_69 #x0000000000000002))
(assert (= temp10108_70 temp10108_69))
(assert (= temp10108_71 (select ARGNAME_stride_NAMEEND_VAL temp10108_70)))
(assert (= temp10108_72 #x0000000000000003))
(assert (= temp10108_73 temp10108_72))
(assert (= temp10108_74 (select ARGNAME_stride_NAMEEND_VAL temp10108_73)))
(assert (= temp10108_75 #x0000000000000004))
(assert (= temp10108_76 temp10108_75))
(assert (= temp10108_77 (select ARGNAME_stride_NAMEEND_VAL temp10108_76)))
(assert (= temp10108_78 #x0000000000000005))
(assert (= temp10108_79 temp10108_78))
(assert (= temp10108_80 (select ARGNAME_stride_NAMEEND_VAL temp10108_79)))
(assert (= temp10108_81 #x0000000000000000))
(assert (= temp10108_82 #x0000000000000000))
(assert (= temp10108_83 temp10108_82))
(assert (= temp10108_84 (select ARGNAME_stride_NAMEEND_VAL temp10108_83)))
(assert (= temp10108_85 #x0000000000000000))
(assert (= temp10108_86 #x0000000000000001))
(assert (= temp10108_87 temp10108_86))
(assert (= temp10108_88 (select ARGNAME_stride_NAMEEND_VAL temp10108_87)))
(assert (= temp10108_89 #x0000000000000000))
(assert (= temp10108_90 #x0000000000000002))
(assert (= temp10108_91 temp10108_90))
(assert (= temp10108_92 (select ARGNAME_stride_NAMEEND_VAL temp10108_91)))
(assert (= temp10108_93 #x0000000000000000))
(assert (= temp10108_94 #x0000000000000003))
(assert (= temp10108_95 temp10108_94))
(assert (= temp10108_96 (select ARGNAME_stride_NAMEEND_VAL temp10108_95)))
(assert (= temp10108_97 #x0000000000000000))
(assert (= temp10108_98 #x0000000000000004))
(assert (= temp10108_99 temp10108_98))
(assert (= temp10108_100 (select ARGNAME_stride_NAMEEND_VAL temp10108_99)))
(assert (= temp10108_101 #x0000000000000000))
(assert (= temp10108_102 #x0000000000000005))
(assert (= temp10108_103 temp10108_102))
(assert (= temp10108_104 (select ARGNAME_stride_NAMEEND_VAL temp10108_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp10108_84 temp10108_81)
             (bvsle temp10108_88 temp10108_85)
             (bvsle temp10108_92 temp10108_89)
             (bvsle temp10108_96 temp10108_93)
             (bvsle temp10108_100 temp10108_97)
             (bvsle temp10108_104 temp10108_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10108_105 #x0000000000000000))
(assert (= var2240311 temp10108_105))
(assert (= temp10108_106 #x0000000000000000))
(assert (= var2228402 temp10108_106))
(assert (= temp10108_107 #x0000000000000000))
(assert (= temp10108_108 temp10108_107))
(assert (= temp10108_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10108_108)))
(assert (= temp10108_110 #x0000000000000001))
(assert (= temp10108_111 temp10108_110))
(assert (= temp10108_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10108_111)))
(assert (= temp10108_113 #x0000000000000002))
(assert (= temp10108_114 temp10108_113))
(assert (= temp10108_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10108_114)))
(assert (= temp10108_116 #x0000000000000003))
(assert (= temp10108_117 temp10108_116))
(assert (= temp10108_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10108_117)))
(assert (= temp10108_119 #x0000000000000004))
(assert (= temp10108_120 temp10108_119))
(assert (= temp10108_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10108_120)))
(assert (= temp10108_122 #x0000000000000005))
(assert (= temp10108_123 temp10108_122))
(assert (= temp10108_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10108_123)))
(assert (= temp10108_126 var2228402))
(assert (= temp10108_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10108_126)))
(assert (= temp10108_125 temp10108_127))
(assert (= var2240356
   (ite (bvslt temp10108_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10108_128 #x0000000000000000))
(assert (= var2240356 temp10108_128))
(assert (= temp10108_129 #x0000000000000000))
(assert (= var2228402 temp10108_129))
(assert (= temp10108_131 var2228402))
(assert (= temp10108_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10108_131)))
(assert (= temp10108_130 temp10108_132))
(assert (= var2240378 (bvsmod temp10108_130 ARGNAME_groups_NAMEEND)))
(assert (= temp10108_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp10108_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp10108_134 #x0000000000000001))
(assert (= var2240379 temp10108_134))
(assert (= var2240398 var2240288))
(assert (= temp10108_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp10108_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp10108_136 #x0000000000000001))
(assert (= var2240399 temp10108_136))
(assert (= temp10108_137 #x0000000000000001))
(assert (= var2229290 temp10108_137))
(assert (= temp10108_139 var2229290))
(assert (= temp10108_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10108_139)))
(assert (= temp10108_138 temp10108_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp10108_138)))
(assert (= temp10108_141 #x0000000000000000))
(assert (= var2228402 temp10108_141))
(assert (= temp10108_143 var2228402))
(assert (= temp10108_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10108_143)))
(assert (= temp10108_142 temp10108_144))
(assert (= temp10108_145 #x0000000000000002))
(assert (= var2503529 temp10108_145))
(assert (= temp10108_146 #x0000000000000001))
(assert (= var2240569 temp10108_146))
(assert (= temp10108_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10108_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10108_148 #x0000000000000001))
(assert (= var1521778 temp10108_148))
(assert (= temp10108_149 #x0000000000000001))
(assert (= var1521908 temp10108_149))
(assert (= var4010473 var1521908))
(assert (= temp10108_150 #x0000000000000002))
(assert (= var4010640 temp10108_150))
(assert (= var4010467 var4010640))
(assert (= var1521917 var4010467))
(assert (= var4275993 var1521917))
(assert (= temp10108_151 #x0000000000000002))
(assert (= temp10108_152 #x0000000000000003))
(assert (or false (= var4275993 temp10108_151) (= var4275993 temp10108_152)))
(assert (= temp10108_153 #x0000000000000002))
(assert (= var4470403 temp10108_153))
(assert (= var4470405 (bvsub ARGNAME_weight_NAMEEND_DIM var4470403)))
(assert (= var4535948 var4470403))
(assert (= var4535949 var4470405))
(assert (= temp10108_154 #x0000000000000002))
(assert (or false (= var1521917 temp10108_154)))
(assert (= var1522108 var1521633))
(assert (= temp10108_155 #x0000000000000000))
(assert (= var1522109
   (ite (distinct var1522108 temp10108_155)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var5848909 var1522109))
(assert (= temp10108_156 #x0000000000000001))
(assert (= var1521778 temp10108_156))
(model-add temp10108_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp10108_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp10108_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp10108_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp10108_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp10108_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)





