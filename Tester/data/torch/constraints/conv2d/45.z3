(declare-fun temp59_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp59_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp59_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp59_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp59_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp59_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp59_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp59_8 () (_ BitVec 64))
(declare-fun temp59_10 () (_ BitVec 64))
(declare-fun temp59_9 () (_ BitVec 64))
(declare-fun temp59_12 () (_ BitVec 64))
(declare-fun temp59_11 () (_ BitVec 64))
(declare-fun temp59_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp59_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp59_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp59_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp59_17 () (_ BitVec 64))
(declare-fun temp59_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp59_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp59_20 () (_ BitVec 64))
(declare-fun temp59_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp59_22 () (_ BitVec 64))
(declare-fun temp59_23 () (_ BitVec 64))
(declare-fun temp59_24 () (_ BitVec 64))
(declare-fun temp59_25 () (_ BitVec 64))
(declare-fun temp59_26 () (_ BitVec 64))
(declare-fun temp59_27 () (_ BitVec 64))
(declare-fun temp59_28 () (_ BitVec 64))
(declare-fun temp59_29 () (_ BitVec 64))
(declare-fun temp59_30 () (_ BitVec 64))
(declare-fun temp59_31 () (_ BitVec 64))
(declare-fun temp59_32 () (_ BitVec 64))
(declare-fun temp59_33 () (_ BitVec 64))
(declare-fun temp59_34 () (_ BitVec 64))
(declare-fun temp59_35 () (_ BitVec 64))
(declare-fun temp59_36 () (_ BitVec 64))
(declare-fun temp59_37 () (_ BitVec 64))
(declare-fun temp59_38 () (_ BitVec 64))
(declare-fun temp59_39 () (_ BitVec 64))
(declare-fun temp59_40 () (_ BitVec 64))
(declare-fun temp59_41 () (_ BitVec 64))
(declare-fun temp59_42 () (_ BitVec 64))
(declare-fun temp59_43 () (_ BitVec 64))
(declare-fun temp59_44 () (_ BitVec 64))
(declare-fun temp59_45 () (_ BitVec 64))
(declare-fun temp59_46 () (_ BitVec 64))
(declare-fun temp59_47 () (_ BitVec 64))
(declare-fun temp59_48 () (_ BitVec 64))
(declare-fun temp59_49 () (_ BitVec 64))
(declare-fun temp59_50 () (_ BitVec 64))
(declare-fun temp59_51 () (_ BitVec 64))
(declare-fun temp59_52 () (_ BitVec 64))
(declare-fun temp59_53 () (_ BitVec 64))
(declare-fun temp59_54 () (_ BitVec 64))
(declare-fun temp59_55 () (_ BitVec 64))
(declare-fun temp59_56 () (_ BitVec 64))
(declare-fun temp59_57 () (_ BitVec 64))
(declare-fun temp59_58 () (_ BitVec 64))
(declare-fun temp59_59 () (_ BitVec 64))
(declare-fun temp59_60 () (_ BitVec 64))
(declare-fun temp59_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp59_62 () (_ BitVec 64))
(declare-fun temp59_63 () (_ BitVec 64))
(declare-fun temp59_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp59_65 () (_ BitVec 64))
(declare-fun temp59_66 () (_ BitVec 64))
(declare-fun temp59_67 () (_ BitVec 64))
(declare-fun temp59_68 () (_ BitVec 64))
(declare-fun temp59_69 () (_ BitVec 64))
(declare-fun temp59_70 () (_ BitVec 64))
(declare-fun temp59_71 () (_ BitVec 64))
(declare-fun temp59_72 () (_ BitVec 64))
(declare-fun temp59_73 () (_ BitVec 64))
(declare-fun temp59_74 () (_ BitVec 64))
(declare-fun temp59_75 () (_ BitVec 64))
(declare-fun temp59_76 () (_ BitVec 64))
(declare-fun temp59_77 () (_ BitVec 64))
(declare-fun temp59_78 () (_ BitVec 64))
(declare-fun temp59_79 () (_ BitVec 64))
(declare-fun temp59_80 () (_ BitVec 64))
(declare-fun temp59_81 () (_ BitVec 64))
(declare-fun temp59_82 () (_ BitVec 64))
(declare-fun temp59_83 () (_ BitVec 64))
(declare-fun temp59_84 () (_ BitVec 64))
(declare-fun temp59_85 () (_ BitVec 64))
(declare-fun temp59_86 () (_ BitVec 64))
(declare-fun temp59_87 () (_ BitVec 64))
(declare-fun temp59_88 () (_ BitVec 64))
(declare-fun temp59_89 () (_ BitVec 64))
(declare-fun temp59_90 () (_ BitVec 64))
(declare-fun temp59_91 () (_ BitVec 64))
(declare-fun temp59_92 () (_ BitVec 64))
(declare-fun temp59_93 () (_ BitVec 64))
(declare-fun temp59_94 () (_ BitVec 64))
(declare-fun temp59_95 () (_ BitVec 64))
(declare-fun temp59_96 () (_ BitVec 64))
(declare-fun temp59_97 () (_ BitVec 64))
(declare-fun temp59_98 () (_ BitVec 64))
(declare-fun temp59_99 () (_ BitVec 64))
(declare-fun temp59_100 () (_ BitVec 64))
(declare-fun temp59_101 () (_ BitVec 64))
(declare-fun temp59_102 () (_ BitVec 64))
(declare-fun temp59_103 () (_ BitVec 64))
(declare-fun temp59_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp59_105 () (_ BitVec 64))
(declare-fun temp59_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp59_107 () (_ BitVec 64))
(declare-fun temp59_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp59_109 () (_ BitVec 64))
(declare-fun temp59_110 () (_ BitVec 64))
(declare-fun temp59_111 () (_ BitVec 64))
(declare-fun temp59_112 () (_ BitVec 64))
(declare-fun temp59_113 () (_ BitVec 64))
(declare-fun temp59_114 () (_ BitVec 64))
(declare-fun temp59_115 () (_ BitVec 64))
(declare-fun temp59_116 () (_ BitVec 64))
(declare-fun temp59_117 () (_ BitVec 64))
(declare-fun temp59_118 () (_ BitVec 64))
(declare-fun temp59_119 () (_ BitVec 64))
(declare-fun temp59_120 () (_ BitVec 64))
(declare-fun temp59_121 () (_ BitVec 64))
(declare-fun temp59_122 () (_ BitVec 64))
(declare-fun temp59_123 () (_ BitVec 64))
(declare-fun temp59_124 () (_ BitVec 64))
(declare-fun temp59_126 () (_ BitVec 64))
(declare-fun temp59_127 () (_ BitVec 64))
(declare-fun temp59_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp59_128 () (_ BitVec 64))
(declare-fun temp59_129 () (_ BitVec 64))
(declare-fun temp59_131 () (_ BitVec 64))
(declare-fun temp59_132 () (_ BitVec 64))
(declare-fun temp59_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp59_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp59_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp59_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp59_136 () (_ BitVec 64))
(declare-fun temp59_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp59_139 () (_ BitVec 64))
(declare-fun temp59_140 () (_ BitVec 64))
(declare-fun temp59_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp59_141 () (_ BitVec 64))
(declare-fun temp59_143 () (_ BitVec 64))
(declare-fun temp59_144 () (_ BitVec 64))
(declare-fun temp59_142 () (_ BitVec 64))
(declare-fun temp59_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp59_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp59_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp59_148 () (_ BitVec 64))
(declare-fun temp59_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp59_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp59_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var1522214 () (_ BitVec 64))
(declare-fun temp59_152 () (_ BitVec 64))
(declare-fun var1522215 () (_ BitVec 64))
(declare-fun temp59_153 () (_ BitVec 64))
(assert (= temp59_1 #x0000000000000002))
(assert (= var989741 temp59_1))
(assert (= temp59_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp59_2)))
(assert (= temp59_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp59_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp59_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp59_4)))
(assert (= temp59_5 #x0000000000000000))
(assert (= var989775 (ite (= var989774 temp59_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp59_6 #x0000000000000000))
(assert (= var989776 temp59_6))
(assert (= temp59_7 #x0000000000000000))
(assert (= var989810 (ite (= var989773 temp59_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp59_8 #x0000000000000001))
(assert (= var989810 temp59_8))
(assert (= temp59_10 #x0000000000000000))
(assert (= temp59_9 temp59_10))
(assert (= temp59_12 #x0000000000000002))
(assert (= temp59_11 temp59_12))
(assert (= temp59_13 #x0000000000000000))
(assert (= var1387902 temp59_13))
(assert (= temp59_14 #x0000000000000001))
(assert (= var1387923 temp59_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp59_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp59_15)))
(assert (= temp59_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp59_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp59_17 #x0000000000000000))
(assert (= var1521661 temp59_17))
(assert (= temp59_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp59_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp59_19 #x0000000000000000))
(assert (= var1521706 temp59_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp59_20 #x0000000000000000))
(assert (= temp59_21 temp59_20))
(assert (= temp59_22 (select ARGNAME_padding_NAMEEND_VAL temp59_21)))
(assert (= temp59_23 #x0000000000000001))
(assert (= temp59_24 temp59_23))
(assert (= temp59_25 (select ARGNAME_padding_NAMEEND_VAL temp59_24)))
(assert (= temp59_26 #x0000000000000002))
(assert (= temp59_27 temp59_26))
(assert (= temp59_28 (select ARGNAME_padding_NAMEEND_VAL temp59_27)))
(assert (= temp59_29 #x0000000000000003))
(assert (= temp59_30 temp59_29))
(assert (= temp59_31 (select ARGNAME_padding_NAMEEND_VAL temp59_30)))
(assert (= temp59_32 #x0000000000000004))
(assert (= temp59_33 temp59_32))
(assert (= temp59_34 (select ARGNAME_padding_NAMEEND_VAL temp59_33)))
(assert (= temp59_35 #x0000000000000005))
(assert (= temp59_36 temp59_35))
(assert (= temp59_37 (select ARGNAME_padding_NAMEEND_VAL temp59_36)))
(assert (= temp59_38 #x0000000000000000))
(assert (= temp59_39 #x0000000000000000))
(assert (= temp59_40 temp59_39))
(assert (= temp59_41 (select ARGNAME_padding_NAMEEND_VAL temp59_40)))
(assert (= temp59_42 #x0000000000000000))
(assert (= temp59_43 #x0000000000000001))
(assert (= temp59_44 temp59_43))
(assert (= temp59_45 (select ARGNAME_padding_NAMEEND_VAL temp59_44)))
(assert (= temp59_46 #x0000000000000000))
(assert (= temp59_47 #x0000000000000002))
(assert (= temp59_48 temp59_47))
(assert (= temp59_49 (select ARGNAME_padding_NAMEEND_VAL temp59_48)))
(assert (= temp59_50 #x0000000000000000))
(assert (= temp59_51 #x0000000000000003))
(assert (= temp59_52 temp59_51))
(assert (= temp59_53 (select ARGNAME_padding_NAMEEND_VAL temp59_52)))
(assert (= temp59_54 #x0000000000000000))
(assert (= temp59_55 #x0000000000000004))
(assert (= temp59_56 temp59_55))
(assert (= temp59_57 (select ARGNAME_padding_NAMEEND_VAL temp59_56)))
(assert (= temp59_58 #x0000000000000000))
(assert (= temp59_59 #x0000000000000005))
(assert (= temp59_60 temp59_59))
(assert (= temp59_61 (select ARGNAME_padding_NAMEEND_VAL temp59_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp59_41 temp59_38)
             (bvslt temp59_45 temp59_42)
             (bvslt temp59_49 temp59_46)
             (bvslt temp59_53 temp59_50)
             (bvslt temp59_57 temp59_54)
             (bvslt temp59_61 temp59_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp59_62 #x0000000000000000))
(assert (= var2240290 temp59_62))
(assert (= temp59_63 #x0000000000000000))
(assert (= temp59_64 temp59_63))
(assert (= temp59_65 (select ARGNAME_stride_NAMEEND_VAL temp59_64)))
(assert (= temp59_66 #x0000000000000001))
(assert (= temp59_67 temp59_66))
(assert (= temp59_68 (select ARGNAME_stride_NAMEEND_VAL temp59_67)))
(assert (= temp59_69 #x0000000000000002))
(assert (= temp59_70 temp59_69))
(assert (= temp59_71 (select ARGNAME_stride_NAMEEND_VAL temp59_70)))
(assert (= temp59_72 #x0000000000000003))
(assert (= temp59_73 temp59_72))
(assert (= temp59_74 (select ARGNAME_stride_NAMEEND_VAL temp59_73)))
(assert (= temp59_75 #x0000000000000004))
(assert (= temp59_76 temp59_75))
(assert (= temp59_77 (select ARGNAME_stride_NAMEEND_VAL temp59_76)))
(assert (= temp59_78 #x0000000000000005))
(assert (= temp59_79 temp59_78))
(assert (= temp59_80 (select ARGNAME_stride_NAMEEND_VAL temp59_79)))
(assert (= temp59_81 #x0000000000000000))
(assert (= temp59_82 #x0000000000000000))
(assert (= temp59_83 temp59_82))
(assert (= temp59_84 (select ARGNAME_stride_NAMEEND_VAL temp59_83)))
(assert (= temp59_85 #x0000000000000000))
(assert (= temp59_86 #x0000000000000001))
(assert (= temp59_87 temp59_86))
(assert (= temp59_88 (select ARGNAME_stride_NAMEEND_VAL temp59_87)))
(assert (= temp59_89 #x0000000000000000))
(assert (= temp59_90 #x0000000000000002))
(assert (= temp59_91 temp59_90))
(assert (= temp59_92 (select ARGNAME_stride_NAMEEND_VAL temp59_91)))
(assert (= temp59_93 #x0000000000000000))
(assert (= temp59_94 #x0000000000000003))
(assert (= temp59_95 temp59_94))
(assert (= temp59_96 (select ARGNAME_stride_NAMEEND_VAL temp59_95)))
(assert (= temp59_97 #x0000000000000000))
(assert (= temp59_98 #x0000000000000004))
(assert (= temp59_99 temp59_98))
(assert (= temp59_100 (select ARGNAME_stride_NAMEEND_VAL temp59_99)))
(assert (= temp59_101 #x0000000000000000))
(assert (= temp59_102 #x0000000000000005))
(assert (= temp59_103 temp59_102))
(assert (= temp59_104 (select ARGNAME_stride_NAMEEND_VAL temp59_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp59_84 temp59_81)
             (bvsle temp59_88 temp59_85)
             (bvsle temp59_92 temp59_89)
             (bvsle temp59_96 temp59_93)
             (bvsle temp59_100 temp59_97)
             (bvsle temp59_104 temp59_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp59_105 #x0000000000000000))
(assert (= var2240311 temp59_105))
(assert (= temp59_106 #x0000000000000000))
(assert (= var2228402 temp59_106))
(assert (= temp59_107 #x0000000000000000))
(assert (= temp59_108 temp59_107))
(assert (= temp59_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp59_108)))
(assert (= temp59_110 #x0000000000000001))
(assert (= temp59_111 temp59_110))
(assert (= temp59_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp59_111)))
(assert (= temp59_113 #x0000000000000002))
(assert (= temp59_114 temp59_113))
(assert (= temp59_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp59_114)))
(assert (= temp59_116 #x0000000000000003))
(assert (= temp59_117 temp59_116))
(assert (= temp59_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp59_117)))
(assert (= temp59_119 #x0000000000000004))
(assert (= temp59_120 temp59_119))
(assert (= temp59_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp59_120)))
(assert (= temp59_122 #x0000000000000005))
(assert (= temp59_123 temp59_122))
(assert (= temp59_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp59_123)))
(assert (= temp59_126 var2228402))
(assert (= temp59_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp59_126)))
(assert (= temp59_125 temp59_127))
(assert (= var2240356
   (ite (bvslt temp59_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp59_128 #x0000000000000000))
(assert (= var2240356 temp59_128))
(assert (= temp59_129 #x0000000000000000))
(assert (= var2228402 temp59_129))
(assert (= temp59_131 var2228402))
(assert (= temp59_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp59_131)))
(assert (= temp59_130 temp59_132))
(assert (= var2240378 (bvsmod temp59_130 ARGNAME_groups_NAMEEND)))
(assert (= temp59_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp59_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp59_134 #x0000000000000001))
(assert (= var2240379 temp59_134))
(assert (= var2240398 var2240288))
(assert (= temp59_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp59_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp59_136 #x0000000000000001))
(assert (= var2240399 temp59_136))
(assert (= temp59_137 #x0000000000000001))
(assert (= var2229290 temp59_137))
(assert (= temp59_139 var2229290))
(assert (= temp59_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp59_139)))
(assert (= temp59_138 temp59_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp59_138)))
(assert (= temp59_141 #x0000000000000000))
(assert (= var2228402 temp59_141))
(assert (= temp59_143 var2228402))
(assert (= temp59_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp59_143)))
(assert (= temp59_142 temp59_144))
(assert (= temp59_145 #x0000000000000002))
(assert (= var2503529 temp59_145))
(assert (= temp59_146 #x0000000000000001))
(assert (= var2240569 temp59_146))
(assert (= temp59_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp59_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp59_148 #x0000000000000001))
(assert (= var1521778 temp59_148))
(assert (= temp59_149 #x0000000000000001))
(assert (= var1521908 temp59_149))
(assert (= var4010473 var1521908))
(assert (= temp59_150 #x0000000000000000))
(assert (= var4210495 temp59_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp59_151 #x0000000000000002))
(assert (= var4339331 temp59_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4993424 var1521921))
(assert (= var1522214 var1521633))
(assert (= temp59_152 #x0000000000000000))
(assert (= var1522215
   (ite (distinct var1522214 temp59_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp59_153 #x0000000000000001))
(assert (= var1521778 temp59_153))
(model-add temp59_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp59_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp59_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp59_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp59_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp59_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






