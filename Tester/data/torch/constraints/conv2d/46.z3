(declare-fun temp60_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp60_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp60_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp60_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp60_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp60_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp60_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp60_8 () (_ BitVec 64))
(declare-fun temp60_10 () (_ BitVec 64))
(declare-fun temp60_9 () (_ BitVec 64))
(declare-fun temp60_12 () (_ BitVec 64))
(declare-fun temp60_11 () (_ BitVec 64))
(declare-fun temp60_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp60_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp60_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp60_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp60_17 () (_ BitVec 64))
(declare-fun temp60_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp60_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp60_20 () (_ BitVec 64))
(declare-fun temp60_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp60_22 () (_ BitVec 64))
(declare-fun temp60_23 () (_ BitVec 64))
(declare-fun temp60_24 () (_ BitVec 64))
(declare-fun temp60_25 () (_ BitVec 64))
(declare-fun temp60_26 () (_ BitVec 64))
(declare-fun temp60_27 () (_ BitVec 64))
(declare-fun temp60_28 () (_ BitVec 64))
(declare-fun temp60_29 () (_ BitVec 64))
(declare-fun temp60_30 () (_ BitVec 64))
(declare-fun temp60_31 () (_ BitVec 64))
(declare-fun temp60_32 () (_ BitVec 64))
(declare-fun temp60_33 () (_ BitVec 64))
(declare-fun temp60_34 () (_ BitVec 64))
(declare-fun temp60_35 () (_ BitVec 64))
(declare-fun temp60_36 () (_ BitVec 64))
(declare-fun temp60_37 () (_ BitVec 64))
(declare-fun temp60_38 () (_ BitVec 64))
(declare-fun temp60_39 () (_ BitVec 64))
(declare-fun temp60_40 () (_ BitVec 64))
(declare-fun temp60_41 () (_ BitVec 64))
(declare-fun temp60_42 () (_ BitVec 64))
(declare-fun temp60_43 () (_ BitVec 64))
(declare-fun temp60_44 () (_ BitVec 64))
(declare-fun temp60_45 () (_ BitVec 64))
(declare-fun temp60_46 () (_ BitVec 64))
(declare-fun temp60_47 () (_ BitVec 64))
(declare-fun temp60_48 () (_ BitVec 64))
(declare-fun temp60_49 () (_ BitVec 64))
(declare-fun temp60_50 () (_ BitVec 64))
(declare-fun temp60_51 () (_ BitVec 64))
(declare-fun temp60_52 () (_ BitVec 64))
(declare-fun temp60_53 () (_ BitVec 64))
(declare-fun temp60_54 () (_ BitVec 64))
(declare-fun temp60_55 () (_ BitVec 64))
(declare-fun temp60_56 () (_ BitVec 64))
(declare-fun temp60_57 () (_ BitVec 64))
(declare-fun temp60_58 () (_ BitVec 64))
(declare-fun temp60_59 () (_ BitVec 64))
(declare-fun temp60_60 () (_ BitVec 64))
(declare-fun temp60_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp60_62 () (_ BitVec 64))
(declare-fun temp60_63 () (_ BitVec 64))
(declare-fun temp60_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp60_65 () (_ BitVec 64))
(declare-fun temp60_66 () (_ BitVec 64))
(declare-fun temp60_67 () (_ BitVec 64))
(declare-fun temp60_68 () (_ BitVec 64))
(declare-fun temp60_69 () (_ BitVec 64))
(declare-fun temp60_70 () (_ BitVec 64))
(declare-fun temp60_71 () (_ BitVec 64))
(declare-fun temp60_72 () (_ BitVec 64))
(declare-fun temp60_73 () (_ BitVec 64))
(declare-fun temp60_74 () (_ BitVec 64))
(declare-fun temp60_75 () (_ BitVec 64))
(declare-fun temp60_76 () (_ BitVec 64))
(declare-fun temp60_77 () (_ BitVec 64))
(declare-fun temp60_78 () (_ BitVec 64))
(declare-fun temp60_79 () (_ BitVec 64))
(declare-fun temp60_80 () (_ BitVec 64))
(declare-fun temp60_81 () (_ BitVec 64))
(declare-fun temp60_82 () (_ BitVec 64))
(declare-fun temp60_83 () (_ BitVec 64))
(declare-fun temp60_84 () (_ BitVec 64))
(declare-fun temp60_85 () (_ BitVec 64))
(declare-fun temp60_86 () (_ BitVec 64))
(declare-fun temp60_87 () (_ BitVec 64))
(declare-fun temp60_88 () (_ BitVec 64))
(declare-fun temp60_89 () (_ BitVec 64))
(declare-fun temp60_90 () (_ BitVec 64))
(declare-fun temp60_91 () (_ BitVec 64))
(declare-fun temp60_92 () (_ BitVec 64))
(declare-fun temp60_93 () (_ BitVec 64))
(declare-fun temp60_94 () (_ BitVec 64))
(declare-fun temp60_95 () (_ BitVec 64))
(declare-fun temp60_96 () (_ BitVec 64))
(declare-fun temp60_97 () (_ BitVec 64))
(declare-fun temp60_98 () (_ BitVec 64))
(declare-fun temp60_99 () (_ BitVec 64))
(declare-fun temp60_100 () (_ BitVec 64))
(declare-fun temp60_101 () (_ BitVec 64))
(declare-fun temp60_102 () (_ BitVec 64))
(declare-fun temp60_103 () (_ BitVec 64))
(declare-fun temp60_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp60_105 () (_ BitVec 64))
(declare-fun temp60_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp60_107 () (_ BitVec 64))
(declare-fun temp60_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp60_109 () (_ BitVec 64))
(declare-fun temp60_110 () (_ BitVec 64))
(declare-fun temp60_111 () (_ BitVec 64))
(declare-fun temp60_112 () (_ BitVec 64))
(declare-fun temp60_113 () (_ BitVec 64))
(declare-fun temp60_114 () (_ BitVec 64))
(declare-fun temp60_115 () (_ BitVec 64))
(declare-fun temp60_116 () (_ BitVec 64))
(declare-fun temp60_117 () (_ BitVec 64))
(declare-fun temp60_118 () (_ BitVec 64))
(declare-fun temp60_119 () (_ BitVec 64))
(declare-fun temp60_120 () (_ BitVec 64))
(declare-fun temp60_121 () (_ BitVec 64))
(declare-fun temp60_122 () (_ BitVec 64))
(declare-fun temp60_123 () (_ BitVec 64))
(declare-fun temp60_124 () (_ BitVec 64))
(declare-fun temp60_126 () (_ BitVec 64))
(declare-fun temp60_127 () (_ BitVec 64))
(declare-fun temp60_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp60_128 () (_ BitVec 64))
(declare-fun temp60_129 () (_ BitVec 64))
(declare-fun temp60_131 () (_ BitVec 64))
(declare-fun temp60_132 () (_ BitVec 64))
(declare-fun temp60_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp60_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp60_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp60_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp60_136 () (_ BitVec 64))
(declare-fun temp60_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp60_139 () (_ BitVec 64))
(declare-fun temp60_140 () (_ BitVec 64))
(declare-fun temp60_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp60_141 () (_ BitVec 64))
(declare-fun temp60_143 () (_ BitVec 64))
(declare-fun temp60_144 () (_ BitVec 64))
(declare-fun temp60_142 () (_ BitVec 64))
(declare-fun temp60_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp60_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp60_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp60_148 () (_ BitVec 64))
(declare-fun temp60_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp60_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp60_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var1522214 () (_ BitVec 64))
(declare-fun temp60_152 () (_ BitVec 64))
(declare-fun var1522215 () (_ BitVec 64))
(declare-fun temp60_153 () (_ BitVec 64))
(assert (= temp60_1 #x0000000000000002))
(assert (= var989741 temp60_1))
(assert (= temp60_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp60_2)))
(assert (= temp60_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp60_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp60_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp60_4)))
(assert (= temp60_5 #x0000000000000000))
(assert (= var989775 (ite (= var989774 temp60_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp60_6 #x0000000000000000))
(assert (= var989776 temp60_6))
(assert (= temp60_7 #x0000000000000000))
(assert (= var989810 (ite (= var989773 temp60_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp60_8 #x0000000000000001))
(assert (= var989810 temp60_8))
(assert (= temp60_10 #x0000000000000000))
(assert (= temp60_9 temp60_10))
(assert (= temp60_12 #x0000000000000002))
(assert (= temp60_11 temp60_12))
(assert (= temp60_13 #x0000000000000000))
(assert (= var1387902 temp60_13))
(assert (= temp60_14 #x0000000000000001))
(assert (= var1387923 temp60_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp60_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp60_15)))
(assert (= temp60_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp60_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_17 #x0000000000000000))
(assert (= var1521661 temp60_17))
(assert (= temp60_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp60_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_19 #x0000000000000000))
(assert (= var1521706 temp60_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp60_20 #x0000000000000000))
(assert (= temp60_21 temp60_20))
(assert (= temp60_22 (select ARGNAME_padding_NAMEEND_VAL temp60_21)))
(assert (= temp60_23 #x0000000000000001))
(assert (= temp60_24 temp60_23))
(assert (= temp60_25 (select ARGNAME_padding_NAMEEND_VAL temp60_24)))
(assert (= temp60_26 #x0000000000000002))
(assert (= temp60_27 temp60_26))
(assert (= temp60_28 (select ARGNAME_padding_NAMEEND_VAL temp60_27)))
(assert (= temp60_29 #x0000000000000003))
(assert (= temp60_30 temp60_29))
(assert (= temp60_31 (select ARGNAME_padding_NAMEEND_VAL temp60_30)))
(assert (= temp60_32 #x0000000000000004))
(assert (= temp60_33 temp60_32))
(assert (= temp60_34 (select ARGNAME_padding_NAMEEND_VAL temp60_33)))
(assert (= temp60_35 #x0000000000000005))
(assert (= temp60_36 temp60_35))
(assert (= temp60_37 (select ARGNAME_padding_NAMEEND_VAL temp60_36)))
(assert (= temp60_38 #x0000000000000000))
(assert (= temp60_39 #x0000000000000000))
(assert (= temp60_40 temp60_39))
(assert (= temp60_41 (select ARGNAME_padding_NAMEEND_VAL temp60_40)))
(assert (= temp60_42 #x0000000000000000))
(assert (= temp60_43 #x0000000000000001))
(assert (= temp60_44 temp60_43))
(assert (= temp60_45 (select ARGNAME_padding_NAMEEND_VAL temp60_44)))
(assert (= temp60_46 #x0000000000000000))
(assert (= temp60_47 #x0000000000000002))
(assert (= temp60_48 temp60_47))
(assert (= temp60_49 (select ARGNAME_padding_NAMEEND_VAL temp60_48)))
(assert (= temp60_50 #x0000000000000000))
(assert (= temp60_51 #x0000000000000003))
(assert (= temp60_52 temp60_51))
(assert (= temp60_53 (select ARGNAME_padding_NAMEEND_VAL temp60_52)))
(assert (= temp60_54 #x0000000000000000))
(assert (= temp60_55 #x0000000000000004))
(assert (= temp60_56 temp60_55))
(assert (= temp60_57 (select ARGNAME_padding_NAMEEND_VAL temp60_56)))
(assert (= temp60_58 #x0000000000000000))
(assert (= temp60_59 #x0000000000000005))
(assert (= temp60_60 temp60_59))
(assert (= temp60_61 (select ARGNAME_padding_NAMEEND_VAL temp60_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp60_41 temp60_38)
             (bvslt temp60_45 temp60_42)
             (bvslt temp60_49 temp60_46)
             (bvslt temp60_53 temp60_50)
             (bvslt temp60_57 temp60_54)
             (bvslt temp60_61 temp60_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_62 #x0000000000000000))
(assert (= var2240290 temp60_62))
(assert (= temp60_63 #x0000000000000000))
(assert (= temp60_64 temp60_63))
(assert (= temp60_65 (select ARGNAME_stride_NAMEEND_VAL temp60_64)))
(assert (= temp60_66 #x0000000000000001))
(assert (= temp60_67 temp60_66))
(assert (= temp60_68 (select ARGNAME_stride_NAMEEND_VAL temp60_67)))
(assert (= temp60_69 #x0000000000000002))
(assert (= temp60_70 temp60_69))
(assert (= temp60_71 (select ARGNAME_stride_NAMEEND_VAL temp60_70)))
(assert (= temp60_72 #x0000000000000003))
(assert (= temp60_73 temp60_72))
(assert (= temp60_74 (select ARGNAME_stride_NAMEEND_VAL temp60_73)))
(assert (= temp60_75 #x0000000000000004))
(assert (= temp60_76 temp60_75))
(assert (= temp60_77 (select ARGNAME_stride_NAMEEND_VAL temp60_76)))
(assert (= temp60_78 #x0000000000000005))
(assert (= temp60_79 temp60_78))
(assert (= temp60_80 (select ARGNAME_stride_NAMEEND_VAL temp60_79)))
(assert (= temp60_81 #x0000000000000000))
(assert (= temp60_82 #x0000000000000000))
(assert (= temp60_83 temp60_82))
(assert (= temp60_84 (select ARGNAME_stride_NAMEEND_VAL temp60_83)))
(assert (= temp60_85 #x0000000000000000))
(assert (= temp60_86 #x0000000000000001))
(assert (= temp60_87 temp60_86))
(assert (= temp60_88 (select ARGNAME_stride_NAMEEND_VAL temp60_87)))
(assert (= temp60_89 #x0000000000000000))
(assert (= temp60_90 #x0000000000000002))
(assert (= temp60_91 temp60_90))
(assert (= temp60_92 (select ARGNAME_stride_NAMEEND_VAL temp60_91)))
(assert (= temp60_93 #x0000000000000000))
(assert (= temp60_94 #x0000000000000003))
(assert (= temp60_95 temp60_94))
(assert (= temp60_96 (select ARGNAME_stride_NAMEEND_VAL temp60_95)))
(assert (= temp60_97 #x0000000000000000))
(assert (= temp60_98 #x0000000000000004))
(assert (= temp60_99 temp60_98))
(assert (= temp60_100 (select ARGNAME_stride_NAMEEND_VAL temp60_99)))
(assert (= temp60_101 #x0000000000000000))
(assert (= temp60_102 #x0000000000000005))
(assert (= temp60_103 temp60_102))
(assert (= temp60_104 (select ARGNAME_stride_NAMEEND_VAL temp60_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp60_84 temp60_81)
             (bvsle temp60_88 temp60_85)
             (bvsle temp60_92 temp60_89)
             (bvsle temp60_96 temp60_93)
             (bvsle temp60_100 temp60_97)
             (bvsle temp60_104 temp60_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_105 #x0000000000000000))
(assert (= var2240311 temp60_105))
(assert (= temp60_106 #x0000000000000000))
(assert (= var2228402 temp60_106))
(assert (= temp60_107 #x0000000000000000))
(assert (= temp60_108 temp60_107))
(assert (= temp60_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_108)))
(assert (= temp60_110 #x0000000000000001))
(assert (= temp60_111 temp60_110))
(assert (= temp60_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_111)))
(assert (= temp60_113 #x0000000000000002))
(assert (= temp60_114 temp60_113))
(assert (= temp60_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_114)))
(assert (= temp60_116 #x0000000000000003))
(assert (= temp60_117 temp60_116))
(assert (= temp60_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_117)))
(assert (= temp60_119 #x0000000000000004))
(assert (= temp60_120 temp60_119))
(assert (= temp60_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_120)))
(assert (= temp60_122 #x0000000000000005))
(assert (= temp60_123 temp60_122))
(assert (= temp60_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_123)))
(assert (= temp60_126 var2228402))
(assert (= temp60_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_126)))
(assert (= temp60_125 temp60_127))
(assert (= var2240356
   (ite (bvslt temp60_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_128 #x0000000000000000))
(assert (= var2240356 temp60_128))
(assert (= temp60_129 #x0000000000000000))
(assert (= var2228402 temp60_129))
(assert (= temp60_131 var2228402))
(assert (= temp60_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_131)))
(assert (= temp60_130 temp60_132))
(assert (= var2240378 (bvsmod temp60_130 ARGNAME_groups_NAMEEND)))
(assert (= temp60_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp60_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp60_134 #x0000000000000001))
(assert (= var2240379 temp60_134))
(assert (= var2240398 var2240288))
(assert (= temp60_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp60_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp60_136 #x0000000000000001))
(assert (= var2240399 temp60_136))
(assert (= temp60_137 #x0000000000000001))
(assert (= var2229290 temp60_137))
(assert (= temp60_139 var2229290))
(assert (= temp60_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_139)))
(assert (= temp60_138 temp60_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp60_138)))
(assert (= temp60_141 #x0000000000000000))
(assert (= var2228402 temp60_141))
(assert (= temp60_143 var2228402))
(assert (= temp60_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_143)))
(assert (= temp60_142 temp60_144))
(assert (= temp60_145 #x0000000000000002))
(assert (= var2503529 temp60_145))
(assert (= temp60_146 #x0000000000000001))
(assert (= var2240569 temp60_146))
(assert (= temp60_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp60_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_148 #x0000000000000001))
(assert (= var1521778 temp60_148))
(assert (= temp60_149 #x0000000000000001))
(assert (= var1521908 temp60_149))
(assert (= var4010473 var1521908))
(assert (= temp60_150 #x0000000000000000))
(assert (= var4210495 temp60_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp60_151 #x0000000000000002))
(assert (= var4339331 temp60_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4993424 var1521921))
(assert (= var1522214 var1521633))
(assert (= temp60_152 #x0000000000000000))
(assert (= var1522215
   (ite (distinct var1522214 temp60_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp60_153 #x0000000000000001))
(assert (= var1521778 temp60_153))
(model-add temp60_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp60_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp60_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp60_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp60_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp60_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






