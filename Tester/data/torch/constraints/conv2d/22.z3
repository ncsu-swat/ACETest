(declare-fun temp28_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp28_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp28_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp28_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp28_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp28_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp28_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp28_8 () (_ BitVec 64))
(declare-fun temp28_10 () (_ BitVec 64))
(declare-fun temp28_9 () (_ BitVec 64))
(declare-fun temp28_12 () (_ BitVec 64))
(declare-fun temp28_11 () (_ BitVec 64))
(declare-fun temp28_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp28_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp28_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp28_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp28_17 () (_ BitVec 64))
(declare-fun temp28_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp28_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp28_20 () (_ BitVec 64))
(declare-fun temp28_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp28_22 () (_ BitVec 64))
(declare-fun temp28_23 () (_ BitVec 64))
(declare-fun temp28_24 () (_ BitVec 64))
(declare-fun temp28_25 () (_ BitVec 64))
(declare-fun temp28_26 () (_ BitVec 64))
(declare-fun temp28_27 () (_ BitVec 64))
(declare-fun temp28_28 () (_ BitVec 64))
(declare-fun temp28_29 () (_ BitVec 64))
(declare-fun temp28_30 () (_ BitVec 64))
(declare-fun temp28_31 () (_ BitVec 64))
(declare-fun temp28_32 () (_ BitVec 64))
(declare-fun temp28_33 () (_ BitVec 64))
(declare-fun temp28_34 () (_ BitVec 64))
(declare-fun temp28_35 () (_ BitVec 64))
(declare-fun temp28_36 () (_ BitVec 64))
(declare-fun temp28_37 () (_ BitVec 64))
(declare-fun temp28_38 () (_ BitVec 64))
(declare-fun temp28_39 () (_ BitVec 64))
(declare-fun temp28_40 () (_ BitVec 64))
(declare-fun temp28_41 () (_ BitVec 64))
(declare-fun temp28_42 () (_ BitVec 64))
(declare-fun temp28_43 () (_ BitVec 64))
(declare-fun temp28_44 () (_ BitVec 64))
(declare-fun temp28_45 () (_ BitVec 64))
(declare-fun temp28_46 () (_ BitVec 64))
(declare-fun temp28_47 () (_ BitVec 64))
(declare-fun temp28_48 () (_ BitVec 64))
(declare-fun temp28_49 () (_ BitVec 64))
(declare-fun temp28_50 () (_ BitVec 64))
(declare-fun temp28_51 () (_ BitVec 64))
(declare-fun temp28_52 () (_ BitVec 64))
(declare-fun temp28_53 () (_ BitVec 64))
(declare-fun temp28_54 () (_ BitVec 64))
(declare-fun temp28_55 () (_ BitVec 64))
(declare-fun temp28_56 () (_ BitVec 64))
(declare-fun temp28_57 () (_ BitVec 64))
(declare-fun temp28_58 () (_ BitVec 64))
(declare-fun temp28_59 () (_ BitVec 64))
(declare-fun temp28_60 () (_ BitVec 64))
(declare-fun temp28_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp28_62 () (_ BitVec 64))
(declare-fun temp28_63 () (_ BitVec 64))
(declare-fun temp28_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp28_65 () (_ BitVec 64))
(declare-fun temp28_66 () (_ BitVec 64))
(declare-fun temp28_67 () (_ BitVec 64))
(declare-fun temp28_68 () (_ BitVec 64))
(declare-fun temp28_69 () (_ BitVec 64))
(declare-fun temp28_70 () (_ BitVec 64))
(declare-fun temp28_71 () (_ BitVec 64))
(declare-fun temp28_72 () (_ BitVec 64))
(declare-fun temp28_73 () (_ BitVec 64))
(declare-fun temp28_74 () (_ BitVec 64))
(declare-fun temp28_75 () (_ BitVec 64))
(declare-fun temp28_76 () (_ BitVec 64))
(declare-fun temp28_77 () (_ BitVec 64))
(declare-fun temp28_78 () (_ BitVec 64))
(declare-fun temp28_79 () (_ BitVec 64))
(declare-fun temp28_80 () (_ BitVec 64))
(declare-fun temp28_81 () (_ BitVec 64))
(declare-fun temp28_82 () (_ BitVec 64))
(declare-fun temp28_83 () (_ BitVec 64))
(declare-fun temp28_84 () (_ BitVec 64))
(declare-fun temp28_85 () (_ BitVec 64))
(declare-fun temp28_86 () (_ BitVec 64))
(declare-fun temp28_87 () (_ BitVec 64))
(declare-fun temp28_88 () (_ BitVec 64))
(declare-fun temp28_89 () (_ BitVec 64))
(declare-fun temp28_90 () (_ BitVec 64))
(declare-fun temp28_91 () (_ BitVec 64))
(declare-fun temp28_92 () (_ BitVec 64))
(declare-fun temp28_93 () (_ BitVec 64))
(declare-fun temp28_94 () (_ BitVec 64))
(declare-fun temp28_95 () (_ BitVec 64))
(declare-fun temp28_96 () (_ BitVec 64))
(declare-fun temp28_97 () (_ BitVec 64))
(declare-fun temp28_98 () (_ BitVec 64))
(declare-fun temp28_99 () (_ BitVec 64))
(declare-fun temp28_100 () (_ BitVec 64))
(declare-fun temp28_101 () (_ BitVec 64))
(declare-fun temp28_102 () (_ BitVec 64))
(declare-fun temp28_103 () (_ BitVec 64))
(declare-fun temp28_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp28_105 () (_ BitVec 64))
(declare-fun temp28_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp28_107 () (_ BitVec 64))
(declare-fun temp28_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp28_109 () (_ BitVec 64))
(declare-fun temp28_110 () (_ BitVec 64))
(declare-fun temp28_111 () (_ BitVec 64))
(declare-fun temp28_112 () (_ BitVec 64))
(declare-fun temp28_113 () (_ BitVec 64))
(declare-fun temp28_114 () (_ BitVec 64))
(declare-fun temp28_115 () (_ BitVec 64))
(declare-fun temp28_116 () (_ BitVec 64))
(declare-fun temp28_117 () (_ BitVec 64))
(declare-fun temp28_118 () (_ BitVec 64))
(declare-fun temp28_119 () (_ BitVec 64))
(declare-fun temp28_120 () (_ BitVec 64))
(declare-fun temp28_121 () (_ BitVec 64))
(declare-fun temp28_122 () (_ BitVec 64))
(declare-fun temp28_123 () (_ BitVec 64))
(declare-fun temp28_124 () (_ BitVec 64))
(declare-fun temp28_126 () (_ BitVec 64))
(declare-fun temp28_127 () (_ BitVec 64))
(declare-fun temp28_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp28_128 () (_ BitVec 64))
(declare-fun temp28_129 () (_ BitVec 64))
(declare-fun temp28_131 () (_ BitVec 64))
(declare-fun temp28_132 () (_ BitVec 64))
(declare-fun temp28_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp28_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp28_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp28_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp28_136 () (_ BitVec 64))
(declare-fun temp28_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp28_139 () (_ BitVec 64))
(declare-fun temp28_140 () (_ BitVec 64))
(declare-fun temp28_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp28_141 () (_ BitVec 64))
(declare-fun temp28_143 () (_ BitVec 64))
(declare-fun temp28_144 () (_ BitVec 64))
(declare-fun temp28_142 () (_ BitVec 64))
(declare-fun temp28_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp28_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp28_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp28_148 () (_ BitVec 64))
(declare-fun temp28_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp28_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp28_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var1522108 () (_ BitVec 64))
(declare-fun temp28_152 () (_ BitVec 64))
(declare-fun var1522109 () (_ BitVec 64))
(declare-fun var5717837 () (_ BitVec 64))
(declare-fun temp28_153 () (_ BitVec 64))
(assert (= temp28_1 #x0000000000000002))
(assert (= var989741 temp28_1))
(assert (= temp28_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp28_2)))
(assert (= temp28_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp28_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp28_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp28_4)))
(assert (= temp28_5 #x0000000000000000))
(assert (= var989775 (ite (= var989774 temp28_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp28_6 #x0000000000000000))
(assert (= var989776 temp28_6))
(assert (= temp28_7 #x0000000000000000))
(assert (= var989810 (ite (= var989773 temp28_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp28_8 #x0000000000000001))
(assert (= var989810 temp28_8))
(assert (= temp28_10 #x0000000000000000))
(assert (= temp28_9 temp28_10))
(assert (= temp28_12 #x0000000000000002))
(assert (= temp28_11 temp28_12))
(assert (= temp28_13 #x0000000000000000))
(assert (= var1387902 temp28_13))
(assert (= temp28_14 #x0000000000000001))
(assert (= var1387923 temp28_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp28_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp28_15)))
(assert (= temp28_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp28_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp28_17 #x0000000000000000))
(assert (= var1521661 temp28_17))
(assert (= temp28_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp28_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp28_19 #x0000000000000000))
(assert (= var1521706 temp28_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp28_20 #x0000000000000000))
(assert (= temp28_21 temp28_20))
(assert (= temp28_22 (select ARGNAME_padding_NAMEEND_VAL temp28_21)))
(assert (= temp28_23 #x0000000000000001))
(assert (= temp28_24 temp28_23))
(assert (= temp28_25 (select ARGNAME_padding_NAMEEND_VAL temp28_24)))
(assert (= temp28_26 #x0000000000000002))
(assert (= temp28_27 temp28_26))
(assert (= temp28_28 (select ARGNAME_padding_NAMEEND_VAL temp28_27)))
(assert (= temp28_29 #x0000000000000003))
(assert (= temp28_30 temp28_29))
(assert (= temp28_31 (select ARGNAME_padding_NAMEEND_VAL temp28_30)))
(assert (= temp28_32 #x0000000000000004))
(assert (= temp28_33 temp28_32))
(assert (= temp28_34 (select ARGNAME_padding_NAMEEND_VAL temp28_33)))
(assert (= temp28_35 #x0000000000000005))
(assert (= temp28_36 temp28_35))
(assert (= temp28_37 (select ARGNAME_padding_NAMEEND_VAL temp28_36)))
(assert (= temp28_38 #x0000000000000000))
(assert (= temp28_39 #x0000000000000000))
(assert (= temp28_40 temp28_39))
(assert (= temp28_41 (select ARGNAME_padding_NAMEEND_VAL temp28_40)))
(assert (= temp28_42 #x0000000000000000))
(assert (= temp28_43 #x0000000000000001))
(assert (= temp28_44 temp28_43))
(assert (= temp28_45 (select ARGNAME_padding_NAMEEND_VAL temp28_44)))
(assert (= temp28_46 #x0000000000000000))
(assert (= temp28_47 #x0000000000000002))
(assert (= temp28_48 temp28_47))
(assert (= temp28_49 (select ARGNAME_padding_NAMEEND_VAL temp28_48)))
(assert (= temp28_50 #x0000000000000000))
(assert (= temp28_51 #x0000000000000003))
(assert (= temp28_52 temp28_51))
(assert (= temp28_53 (select ARGNAME_padding_NAMEEND_VAL temp28_52)))
(assert (= temp28_54 #x0000000000000000))
(assert (= temp28_55 #x0000000000000004))
(assert (= temp28_56 temp28_55))
(assert (= temp28_57 (select ARGNAME_padding_NAMEEND_VAL temp28_56)))
(assert (= temp28_58 #x0000000000000000))
(assert (= temp28_59 #x0000000000000005))
(assert (= temp28_60 temp28_59))
(assert (= temp28_61 (select ARGNAME_padding_NAMEEND_VAL temp28_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp28_41 temp28_38)
             (bvslt temp28_45 temp28_42)
             (bvslt temp28_49 temp28_46)
             (bvslt temp28_53 temp28_50)
             (bvslt temp28_57 temp28_54)
             (bvslt temp28_61 temp28_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp28_62 #x0000000000000000))
(assert (= var2240290 temp28_62))
(assert (= temp28_63 #x0000000000000000))
(assert (= temp28_64 temp28_63))
(assert (= temp28_65 (select ARGNAME_stride_NAMEEND_VAL temp28_64)))
(assert (= temp28_66 #x0000000000000001))
(assert (= temp28_67 temp28_66))
(assert (= temp28_68 (select ARGNAME_stride_NAMEEND_VAL temp28_67)))
(assert (= temp28_69 #x0000000000000002))
(assert (= temp28_70 temp28_69))
(assert (= temp28_71 (select ARGNAME_stride_NAMEEND_VAL temp28_70)))
(assert (= temp28_72 #x0000000000000003))
(assert (= temp28_73 temp28_72))
(assert (= temp28_74 (select ARGNAME_stride_NAMEEND_VAL temp28_73)))
(assert (= temp28_75 #x0000000000000004))
(assert (= temp28_76 temp28_75))
(assert (= temp28_77 (select ARGNAME_stride_NAMEEND_VAL temp28_76)))
(assert (= temp28_78 #x0000000000000005))
(assert (= temp28_79 temp28_78))
(assert (= temp28_80 (select ARGNAME_stride_NAMEEND_VAL temp28_79)))
(assert (= temp28_81 #x0000000000000000))
(assert (= temp28_82 #x0000000000000000))
(assert (= temp28_83 temp28_82))
(assert (= temp28_84 (select ARGNAME_stride_NAMEEND_VAL temp28_83)))
(assert (= temp28_85 #x0000000000000000))
(assert (= temp28_86 #x0000000000000001))
(assert (= temp28_87 temp28_86))
(assert (= temp28_88 (select ARGNAME_stride_NAMEEND_VAL temp28_87)))
(assert (= temp28_89 #x0000000000000000))
(assert (= temp28_90 #x0000000000000002))
(assert (= temp28_91 temp28_90))
(assert (= temp28_92 (select ARGNAME_stride_NAMEEND_VAL temp28_91)))
(assert (= temp28_93 #x0000000000000000))
(assert (= temp28_94 #x0000000000000003))
(assert (= temp28_95 temp28_94))
(assert (= temp28_96 (select ARGNAME_stride_NAMEEND_VAL temp28_95)))
(assert (= temp28_97 #x0000000000000000))
(assert (= temp28_98 #x0000000000000004))
(assert (= temp28_99 temp28_98))
(assert (= temp28_100 (select ARGNAME_stride_NAMEEND_VAL temp28_99)))
(assert (= temp28_101 #x0000000000000000))
(assert (= temp28_102 #x0000000000000005))
(assert (= temp28_103 temp28_102))
(assert (= temp28_104 (select ARGNAME_stride_NAMEEND_VAL temp28_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp28_84 temp28_81)
             (bvsle temp28_88 temp28_85)
             (bvsle temp28_92 temp28_89)
             (bvsle temp28_96 temp28_93)
             (bvsle temp28_100 temp28_97)
             (bvsle temp28_104 temp28_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp28_105 #x0000000000000000))
(assert (= var2240311 temp28_105))
(assert (= temp28_106 #x0000000000000000))
(assert (= var2228402 temp28_106))
(assert (= temp28_107 #x0000000000000000))
(assert (= temp28_108 temp28_107))
(assert (= temp28_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp28_108)))
(assert (= temp28_110 #x0000000000000001))
(assert (= temp28_111 temp28_110))
(assert (= temp28_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp28_111)))
(assert (= temp28_113 #x0000000000000002))
(assert (= temp28_114 temp28_113))
(assert (= temp28_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp28_114)))
(assert (= temp28_116 #x0000000000000003))
(assert (= temp28_117 temp28_116))
(assert (= temp28_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp28_117)))
(assert (= temp28_119 #x0000000000000004))
(assert (= temp28_120 temp28_119))
(assert (= temp28_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp28_120)))
(assert (= temp28_122 #x0000000000000005))
(assert (= temp28_123 temp28_122))
(assert (= temp28_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp28_123)))
(assert (= temp28_126 var2228402))
(assert (= temp28_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp28_126)))
(assert (= temp28_125 temp28_127))
(assert (= var2240356
   (ite (bvslt temp28_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp28_128 #x0000000000000000))
(assert (= var2240356 temp28_128))
(assert (= temp28_129 #x0000000000000000))
(assert (= var2228402 temp28_129))
(assert (= temp28_131 var2228402))
(assert (= temp28_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp28_131)))
(assert (= temp28_130 temp28_132))
(assert (= var2240378 (bvsmod temp28_130 ARGNAME_groups_NAMEEND)))
(assert (= temp28_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp28_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp28_134 #x0000000000000001))
(assert (= var2240379 temp28_134))
(assert (= var2240398 var2240288))
(assert (= temp28_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp28_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp28_136 #x0000000000000001))
(assert (= var2240399 temp28_136))
(assert (= temp28_137 #x0000000000000001))
(assert (= var2229290 temp28_137))
(assert (= temp28_139 var2229290))
(assert (= temp28_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp28_139)))
(assert (= temp28_138 temp28_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp28_138)))
(assert (= temp28_141 #x0000000000000000))
(assert (= var2228402 temp28_141))
(assert (= temp28_143 var2228402))
(assert (= temp28_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp28_143)))
(assert (= temp28_142 temp28_144))
(assert (= temp28_145 #x0000000000000002))
(assert (= var2503529 temp28_145))
(assert (= temp28_146 #x0000000000000001))
(assert (= var2240569 temp28_146))
(assert (= temp28_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp28_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp28_148 #x0000000000000001))
(assert (= var1521778 temp28_148))
(assert (= temp28_149 #x0000000000000001))
(assert (= var1521908 temp28_149))
(assert (= var4010473 var1521908))
(assert (= temp28_150 #x0000000000000000))
(assert (= var4210495 temp28_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp28_151 #x0000000000000002))
(assert (= var4339331 temp28_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4993424 var1521921))
(assert (= var1522108 var1521633))
(assert (= temp28_152 #x0000000000000000))
(assert (= var1522109
   (ite (distinct var1522108 temp28_152) #x0000000000000001 #x0000000000000000)))
(assert (= var5717837 var1522109))
(assert (= temp28_153 #x0000000000000001))
(assert (= var1521778 temp28_153))
(model-add temp28_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp28_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp28_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp28_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp28_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp28_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






