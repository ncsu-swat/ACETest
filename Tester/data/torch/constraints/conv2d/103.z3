(declare-fun temp135_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp135_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp135_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp135_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp135_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp135_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp135_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp135_8 () (_ BitVec 64))
(declare-fun temp135_10 () (_ BitVec 64))
(declare-fun temp135_9 () (_ BitVec 64))
(declare-fun temp135_12 () (_ BitVec 64))
(declare-fun temp135_11 () (_ BitVec 64))
(declare-fun temp135_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp135_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp135_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp135_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp135_17 () (_ BitVec 64))
(declare-fun temp135_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp135_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp135_20 () (_ BitVec 64))
(declare-fun temp135_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp135_22 () (_ BitVec 64))
(declare-fun temp135_23 () (_ BitVec 64))
(declare-fun temp135_24 () (_ BitVec 64))
(declare-fun temp135_25 () (_ BitVec 64))
(declare-fun temp135_26 () (_ BitVec 64))
(declare-fun temp135_27 () (_ BitVec 64))
(declare-fun temp135_28 () (_ BitVec 64))
(declare-fun temp135_29 () (_ BitVec 64))
(declare-fun temp135_30 () (_ BitVec 64))
(declare-fun temp135_31 () (_ BitVec 64))
(declare-fun temp135_32 () (_ BitVec 64))
(declare-fun temp135_33 () (_ BitVec 64))
(declare-fun temp135_34 () (_ BitVec 64))
(declare-fun temp135_35 () (_ BitVec 64))
(declare-fun temp135_36 () (_ BitVec 64))
(declare-fun temp135_37 () (_ BitVec 64))
(declare-fun temp135_38 () (_ BitVec 64))
(declare-fun temp135_39 () (_ BitVec 64))
(declare-fun temp135_40 () (_ BitVec 64))
(declare-fun temp135_41 () (_ BitVec 64))
(declare-fun temp135_42 () (_ BitVec 64))
(declare-fun temp135_43 () (_ BitVec 64))
(declare-fun temp135_44 () (_ BitVec 64))
(declare-fun temp135_45 () (_ BitVec 64))
(declare-fun temp135_46 () (_ BitVec 64))
(declare-fun temp135_47 () (_ BitVec 64))
(declare-fun temp135_48 () (_ BitVec 64))
(declare-fun temp135_49 () (_ BitVec 64))
(declare-fun temp135_50 () (_ BitVec 64))
(declare-fun temp135_51 () (_ BitVec 64))
(declare-fun temp135_52 () (_ BitVec 64))
(declare-fun temp135_53 () (_ BitVec 64))
(declare-fun temp135_54 () (_ BitVec 64))
(declare-fun temp135_55 () (_ BitVec 64))
(declare-fun temp135_56 () (_ BitVec 64))
(declare-fun temp135_57 () (_ BitVec 64))
(declare-fun temp135_58 () (_ BitVec 64))
(declare-fun temp135_59 () (_ BitVec 64))
(declare-fun temp135_60 () (_ BitVec 64))
(declare-fun temp135_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp135_62 () (_ BitVec 64))
(declare-fun temp135_63 () (_ BitVec 64))
(declare-fun temp135_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp135_65 () (_ BitVec 64))
(declare-fun temp135_66 () (_ BitVec 64))
(declare-fun temp135_67 () (_ BitVec 64))
(declare-fun temp135_68 () (_ BitVec 64))
(declare-fun temp135_69 () (_ BitVec 64))
(declare-fun temp135_70 () (_ BitVec 64))
(declare-fun temp135_71 () (_ BitVec 64))
(declare-fun temp135_72 () (_ BitVec 64))
(declare-fun temp135_73 () (_ BitVec 64))
(declare-fun temp135_74 () (_ BitVec 64))
(declare-fun temp135_75 () (_ BitVec 64))
(declare-fun temp135_76 () (_ BitVec 64))
(declare-fun temp135_77 () (_ BitVec 64))
(declare-fun temp135_78 () (_ BitVec 64))
(declare-fun temp135_79 () (_ BitVec 64))
(declare-fun temp135_80 () (_ BitVec 64))
(declare-fun temp135_81 () (_ BitVec 64))
(declare-fun temp135_82 () (_ BitVec 64))
(declare-fun temp135_83 () (_ BitVec 64))
(declare-fun temp135_84 () (_ BitVec 64))
(declare-fun temp135_85 () (_ BitVec 64))
(declare-fun temp135_86 () (_ BitVec 64))
(declare-fun temp135_87 () (_ BitVec 64))
(declare-fun temp135_88 () (_ BitVec 64))
(declare-fun temp135_89 () (_ BitVec 64))
(declare-fun temp135_90 () (_ BitVec 64))
(declare-fun temp135_91 () (_ BitVec 64))
(declare-fun temp135_92 () (_ BitVec 64))
(declare-fun temp135_93 () (_ BitVec 64))
(declare-fun temp135_94 () (_ BitVec 64))
(declare-fun temp135_95 () (_ BitVec 64))
(declare-fun temp135_96 () (_ BitVec 64))
(declare-fun temp135_97 () (_ BitVec 64))
(declare-fun temp135_98 () (_ BitVec 64))
(declare-fun temp135_99 () (_ BitVec 64))
(declare-fun temp135_100 () (_ BitVec 64))
(declare-fun temp135_101 () (_ BitVec 64))
(declare-fun temp135_102 () (_ BitVec 64))
(declare-fun temp135_103 () (_ BitVec 64))
(declare-fun temp135_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp135_105 () (_ BitVec 64))
(declare-fun temp135_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp135_107 () (_ BitVec 64))
(declare-fun temp135_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp135_109 () (_ BitVec 64))
(declare-fun temp135_110 () (_ BitVec 64))
(declare-fun temp135_111 () (_ BitVec 64))
(declare-fun temp135_112 () (_ BitVec 64))
(declare-fun temp135_113 () (_ BitVec 64))
(declare-fun temp135_114 () (_ BitVec 64))
(declare-fun temp135_115 () (_ BitVec 64))
(declare-fun temp135_116 () (_ BitVec 64))
(declare-fun temp135_117 () (_ BitVec 64))
(declare-fun temp135_118 () (_ BitVec 64))
(declare-fun temp135_119 () (_ BitVec 64))
(declare-fun temp135_120 () (_ BitVec 64))
(declare-fun temp135_121 () (_ BitVec 64))
(declare-fun temp135_122 () (_ BitVec 64))
(declare-fun temp135_123 () (_ BitVec 64))
(declare-fun temp135_124 () (_ BitVec 64))
(declare-fun temp135_126 () (_ BitVec 64))
(declare-fun temp135_127 () (_ BitVec 64))
(declare-fun temp135_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp135_128 () (_ BitVec 64))
(declare-fun temp135_129 () (_ BitVec 64))
(declare-fun temp135_131 () (_ BitVec 64))
(declare-fun temp135_132 () (_ BitVec 64))
(declare-fun temp135_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp135_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp135_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp135_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp135_136 () (_ BitVec 64))
(declare-fun temp135_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp135_139 () (_ BitVec 64))
(declare-fun temp135_140 () (_ BitVec 64))
(declare-fun temp135_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp135_141 () (_ BitVec 64))
(declare-fun temp135_143 () (_ BitVec 64))
(declare-fun temp135_144 () (_ BitVec 64))
(declare-fun temp135_142 () (_ BitVec 64))
(declare-fun temp135_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp135_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp135_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp135_148 () (_ BitVec 64))
(declare-fun temp135_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp135_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp135_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp135_153 () (_ BitVec 64))
(declare-fun temp135_152 () (_ BitVec 64))
(declare-fun temp135_155 () (_ BitVec 64))
(declare-fun temp135_154 () (_ BitVec 64))
(declare-fun temp135_156 () (_ BitVec 64))
(assert (= temp135_1 #x0000000000000002))
(assert (= var989741 temp135_1))
(assert (= temp135_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp135_2)))
(assert (= temp135_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp135_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp135_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp135_4)))
(assert (= temp135_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp135_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp135_6 #x0000000000000000))
(assert (= var989776 temp135_6))
(assert (= temp135_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp135_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp135_8 #x0000000000000001))
(assert (= var989810 temp135_8))
(assert (= temp135_10 #x0000000000000000))
(assert (= temp135_9 temp135_10))
(assert (= temp135_12 #x0000000000000002))
(assert (= temp135_11 temp135_12))
(assert (= temp135_13 #x0000000000000000))
(assert (= var1387902 temp135_13))
(assert (= temp135_14 #x0000000000000001))
(assert (= var1387923 temp135_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp135_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp135_15)))
(assert (= temp135_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp135_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp135_17 #x0000000000000000))
(assert (= var1521661 temp135_17))
(assert (= temp135_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp135_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp135_19 #x0000000000000000))
(assert (= var1521706 temp135_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp135_20 #x0000000000000000))
(assert (= temp135_21 temp135_20))
(assert (= temp135_22 (select ARGNAME_padding_NAMEEND_VAL temp135_21)))
(assert (= temp135_23 #x0000000000000001))
(assert (= temp135_24 temp135_23))
(assert (= temp135_25 (select ARGNAME_padding_NAMEEND_VAL temp135_24)))
(assert (= temp135_26 #x0000000000000002))
(assert (= temp135_27 temp135_26))
(assert (= temp135_28 (select ARGNAME_padding_NAMEEND_VAL temp135_27)))
(assert (= temp135_29 #x0000000000000003))
(assert (= temp135_30 temp135_29))
(assert (= temp135_31 (select ARGNAME_padding_NAMEEND_VAL temp135_30)))
(assert (= temp135_32 #x0000000000000004))
(assert (= temp135_33 temp135_32))
(assert (= temp135_34 (select ARGNAME_padding_NAMEEND_VAL temp135_33)))
(assert (= temp135_35 #x0000000000000005))
(assert (= temp135_36 temp135_35))
(assert (= temp135_37 (select ARGNAME_padding_NAMEEND_VAL temp135_36)))
(assert (= temp135_38 #x0000000000000000))
(assert (= temp135_39 #x0000000000000000))
(assert (= temp135_40 temp135_39))
(assert (= temp135_41 (select ARGNAME_padding_NAMEEND_VAL temp135_40)))
(assert (= temp135_42 #x0000000000000000))
(assert (= temp135_43 #x0000000000000001))
(assert (= temp135_44 temp135_43))
(assert (= temp135_45 (select ARGNAME_padding_NAMEEND_VAL temp135_44)))
(assert (= temp135_46 #x0000000000000000))
(assert (= temp135_47 #x0000000000000002))
(assert (= temp135_48 temp135_47))
(assert (= temp135_49 (select ARGNAME_padding_NAMEEND_VAL temp135_48)))
(assert (= temp135_50 #x0000000000000000))
(assert (= temp135_51 #x0000000000000003))
(assert (= temp135_52 temp135_51))
(assert (= temp135_53 (select ARGNAME_padding_NAMEEND_VAL temp135_52)))
(assert (= temp135_54 #x0000000000000000))
(assert (= temp135_55 #x0000000000000004))
(assert (= temp135_56 temp135_55))
(assert (= temp135_57 (select ARGNAME_padding_NAMEEND_VAL temp135_56)))
(assert (= temp135_58 #x0000000000000000))
(assert (= temp135_59 #x0000000000000005))
(assert (= temp135_60 temp135_59))
(assert (= temp135_61 (select ARGNAME_padding_NAMEEND_VAL temp135_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp135_41 temp135_38)
             (bvslt temp135_45 temp135_42)
             (bvslt temp135_49 temp135_46)
             (bvslt temp135_53 temp135_50)
             (bvslt temp135_57 temp135_54)
             (bvslt temp135_61 temp135_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp135_62 #x0000000000000000))
(assert (= var2240290 temp135_62))
(assert (= temp135_63 #x0000000000000000))
(assert (= temp135_64 temp135_63))
(assert (= temp135_65 (select ARGNAME_stride_NAMEEND_VAL temp135_64)))
(assert (= temp135_66 #x0000000000000001))
(assert (= temp135_67 temp135_66))
(assert (= temp135_68 (select ARGNAME_stride_NAMEEND_VAL temp135_67)))
(assert (= temp135_69 #x0000000000000002))
(assert (= temp135_70 temp135_69))
(assert (= temp135_71 (select ARGNAME_stride_NAMEEND_VAL temp135_70)))
(assert (= temp135_72 #x0000000000000003))
(assert (= temp135_73 temp135_72))
(assert (= temp135_74 (select ARGNAME_stride_NAMEEND_VAL temp135_73)))
(assert (= temp135_75 #x0000000000000004))
(assert (= temp135_76 temp135_75))
(assert (= temp135_77 (select ARGNAME_stride_NAMEEND_VAL temp135_76)))
(assert (= temp135_78 #x0000000000000005))
(assert (= temp135_79 temp135_78))
(assert (= temp135_80 (select ARGNAME_stride_NAMEEND_VAL temp135_79)))
(assert (= temp135_81 #x0000000000000000))
(assert (= temp135_82 #x0000000000000000))
(assert (= temp135_83 temp135_82))
(assert (= temp135_84 (select ARGNAME_stride_NAMEEND_VAL temp135_83)))
(assert (= temp135_85 #x0000000000000000))
(assert (= temp135_86 #x0000000000000001))
(assert (= temp135_87 temp135_86))
(assert (= temp135_88 (select ARGNAME_stride_NAMEEND_VAL temp135_87)))
(assert (= temp135_89 #x0000000000000000))
(assert (= temp135_90 #x0000000000000002))
(assert (= temp135_91 temp135_90))
(assert (= temp135_92 (select ARGNAME_stride_NAMEEND_VAL temp135_91)))
(assert (= temp135_93 #x0000000000000000))
(assert (= temp135_94 #x0000000000000003))
(assert (= temp135_95 temp135_94))
(assert (= temp135_96 (select ARGNAME_stride_NAMEEND_VAL temp135_95)))
(assert (= temp135_97 #x0000000000000000))
(assert (= temp135_98 #x0000000000000004))
(assert (= temp135_99 temp135_98))
(assert (= temp135_100 (select ARGNAME_stride_NAMEEND_VAL temp135_99)))
(assert (= temp135_101 #x0000000000000000))
(assert (= temp135_102 #x0000000000000005))
(assert (= temp135_103 temp135_102))
(assert (= temp135_104 (select ARGNAME_stride_NAMEEND_VAL temp135_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp135_84 temp135_81)
             (bvsle temp135_88 temp135_85)
             (bvsle temp135_92 temp135_89)
             (bvsle temp135_96 temp135_93)
             (bvsle temp135_100 temp135_97)
             (bvsle temp135_104 temp135_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp135_105 #x0000000000000000))
(assert (= var2240311 temp135_105))
(assert (= temp135_106 #x0000000000000000))
(assert (= var2228402 temp135_106))
(assert (= temp135_107 #x0000000000000000))
(assert (= temp135_108 temp135_107))
(assert (= temp135_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp135_108)))
(assert (= temp135_110 #x0000000000000001))
(assert (= temp135_111 temp135_110))
(assert (= temp135_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp135_111)))
(assert (= temp135_113 #x0000000000000002))
(assert (= temp135_114 temp135_113))
(assert (= temp135_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp135_114)))
(assert (= temp135_116 #x0000000000000003))
(assert (= temp135_117 temp135_116))
(assert (= temp135_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp135_117)))
(assert (= temp135_119 #x0000000000000004))
(assert (= temp135_120 temp135_119))
(assert (= temp135_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp135_120)))
(assert (= temp135_122 #x0000000000000005))
(assert (= temp135_123 temp135_122))
(assert (= temp135_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp135_123)))
(assert (= temp135_126 var2228402))
(assert (= temp135_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp135_126)))
(assert (= temp135_125 temp135_127))
(assert (= var2240356
   (ite (bvslt temp135_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp135_128 #x0000000000000000))
(assert (= var2240356 temp135_128))
(assert (= temp135_129 #x0000000000000000))
(assert (= var2228402 temp135_129))
(assert (= temp135_131 var2228402))
(assert (= temp135_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp135_131)))
(assert (= temp135_130 temp135_132))
(assert (= var2240378 (bvsmod temp135_130 ARGNAME_groups_NAMEEND)))
(assert (= temp135_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp135_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp135_134 #x0000000000000001))
(assert (= var2240379 temp135_134))
(assert (= var2240398 var2240288))
(assert (= temp135_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp135_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp135_136 #x0000000000000001))
(assert (= var2240399 temp135_136))
(assert (= temp135_137 #x0000000000000001))
(assert (= var2229290 temp135_137))
(assert (= temp135_139 var2229290))
(assert (= temp135_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp135_139)))
(assert (= temp135_138 temp135_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp135_138)))
(assert (= temp135_141 #x0000000000000000))
(assert (= var2228402 temp135_141))
(assert (= temp135_143 var2228402))
(assert (= temp135_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp135_143)))
(assert (= temp135_142 temp135_144))
(assert (= temp135_145 #x0000000000000002))
(assert (= var2503529 temp135_145))
(assert (= temp135_146 #x0000000000000001))
(assert (= var2240569 temp135_146))
(assert (= temp135_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp135_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp135_148 #x0000000000000001))
(assert (= var1521778 temp135_148))
(assert (= temp135_149 #x0000000000000001))
(assert (= var1521908 temp135_149))
(assert (= var4010473 var1521908))
(assert (= temp135_150 #x0000000000000000))
(assert (= var4210495 temp135_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp135_151 #x0000000000000002))
(assert (= var4339331 temp135_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp135_153 #xffffffffffffffff))
(assert (= temp135_152 temp135_153))
(assert (= temp135_155 #xffffffffffffffff))
(assert (= temp135_154 temp135_155))
(assert (= temp135_156 #x0000000000000001))
(assert (= var1521778 temp135_156))
(model-add temp135_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp135_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp135_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp135_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp135_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp135_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






