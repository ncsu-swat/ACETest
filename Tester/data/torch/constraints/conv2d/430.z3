(declare-fun temp572_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp572_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp572_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp572_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp572_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp572_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp572_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp572_8 () (_ BitVec 64))
(declare-fun temp572_10 () (_ BitVec 64))
(declare-fun temp572_9 () (_ BitVec 64))
(declare-fun temp572_12 () (_ BitVec 64))
(declare-fun temp572_11 () (_ BitVec 64))
(declare-fun temp572_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp572_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp572_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp572_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp572_17 () (_ BitVec 64))
(declare-fun temp572_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp572_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp572_20 () (_ BitVec 64))
(declare-fun temp572_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp572_22 () (_ BitVec 64))
(declare-fun temp572_23 () (_ BitVec 64))
(declare-fun temp572_24 () (_ BitVec 64))
(declare-fun temp572_25 () (_ BitVec 64))
(declare-fun temp572_26 () (_ BitVec 64))
(declare-fun temp572_27 () (_ BitVec 64))
(declare-fun temp572_28 () (_ BitVec 64))
(declare-fun temp572_29 () (_ BitVec 64))
(declare-fun temp572_30 () (_ BitVec 64))
(declare-fun temp572_31 () (_ BitVec 64))
(declare-fun temp572_32 () (_ BitVec 64))
(declare-fun temp572_33 () (_ BitVec 64))
(declare-fun temp572_34 () (_ BitVec 64))
(declare-fun temp572_35 () (_ BitVec 64))
(declare-fun temp572_36 () (_ BitVec 64))
(declare-fun temp572_37 () (_ BitVec 64))
(declare-fun temp572_38 () (_ BitVec 64))
(declare-fun temp572_39 () (_ BitVec 64))
(declare-fun temp572_40 () (_ BitVec 64))
(declare-fun temp572_41 () (_ BitVec 64))
(declare-fun temp572_42 () (_ BitVec 64))
(declare-fun temp572_43 () (_ BitVec 64))
(declare-fun temp572_44 () (_ BitVec 64))
(declare-fun temp572_45 () (_ BitVec 64))
(declare-fun temp572_46 () (_ BitVec 64))
(declare-fun temp572_47 () (_ BitVec 64))
(declare-fun temp572_48 () (_ BitVec 64))
(declare-fun temp572_49 () (_ BitVec 64))
(declare-fun temp572_50 () (_ BitVec 64))
(declare-fun temp572_51 () (_ BitVec 64))
(declare-fun temp572_52 () (_ BitVec 64))
(declare-fun temp572_53 () (_ BitVec 64))
(declare-fun temp572_54 () (_ BitVec 64))
(declare-fun temp572_55 () (_ BitVec 64))
(declare-fun temp572_56 () (_ BitVec 64))
(declare-fun temp572_57 () (_ BitVec 64))
(declare-fun temp572_58 () (_ BitVec 64))
(declare-fun temp572_59 () (_ BitVec 64))
(declare-fun temp572_60 () (_ BitVec 64))
(declare-fun temp572_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp572_62 () (_ BitVec 64))
(declare-fun temp572_63 () (_ BitVec 64))
(declare-fun temp572_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp572_65 () (_ BitVec 64))
(declare-fun temp572_66 () (_ BitVec 64))
(declare-fun temp572_67 () (_ BitVec 64))
(declare-fun temp572_68 () (_ BitVec 64))
(declare-fun temp572_69 () (_ BitVec 64))
(declare-fun temp572_70 () (_ BitVec 64))
(declare-fun temp572_71 () (_ BitVec 64))
(declare-fun temp572_72 () (_ BitVec 64))
(declare-fun temp572_73 () (_ BitVec 64))
(declare-fun temp572_74 () (_ BitVec 64))
(declare-fun temp572_75 () (_ BitVec 64))
(declare-fun temp572_76 () (_ BitVec 64))
(declare-fun temp572_77 () (_ BitVec 64))
(declare-fun temp572_78 () (_ BitVec 64))
(declare-fun temp572_79 () (_ BitVec 64))
(declare-fun temp572_80 () (_ BitVec 64))
(declare-fun temp572_81 () (_ BitVec 64))
(declare-fun temp572_82 () (_ BitVec 64))
(declare-fun temp572_83 () (_ BitVec 64))
(declare-fun temp572_84 () (_ BitVec 64))
(declare-fun temp572_85 () (_ BitVec 64))
(declare-fun temp572_86 () (_ BitVec 64))
(declare-fun temp572_87 () (_ BitVec 64))
(declare-fun temp572_88 () (_ BitVec 64))
(declare-fun temp572_89 () (_ BitVec 64))
(declare-fun temp572_90 () (_ BitVec 64))
(declare-fun temp572_91 () (_ BitVec 64))
(declare-fun temp572_92 () (_ BitVec 64))
(declare-fun temp572_93 () (_ BitVec 64))
(declare-fun temp572_94 () (_ BitVec 64))
(declare-fun temp572_95 () (_ BitVec 64))
(declare-fun temp572_96 () (_ BitVec 64))
(declare-fun temp572_97 () (_ BitVec 64))
(declare-fun temp572_98 () (_ BitVec 64))
(declare-fun temp572_99 () (_ BitVec 64))
(declare-fun temp572_100 () (_ BitVec 64))
(declare-fun temp572_101 () (_ BitVec 64))
(declare-fun temp572_102 () (_ BitVec 64))
(declare-fun temp572_103 () (_ BitVec 64))
(declare-fun temp572_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp572_105 () (_ BitVec 64))
(declare-fun temp572_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp572_107 () (_ BitVec 64))
(declare-fun temp572_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp572_109 () (_ BitVec 64))
(declare-fun temp572_110 () (_ BitVec 64))
(declare-fun temp572_111 () (_ BitVec 64))
(declare-fun temp572_112 () (_ BitVec 64))
(declare-fun temp572_113 () (_ BitVec 64))
(declare-fun temp572_114 () (_ BitVec 64))
(declare-fun temp572_115 () (_ BitVec 64))
(declare-fun temp572_116 () (_ BitVec 64))
(declare-fun temp572_117 () (_ BitVec 64))
(declare-fun temp572_118 () (_ BitVec 64))
(declare-fun temp572_119 () (_ BitVec 64))
(declare-fun temp572_120 () (_ BitVec 64))
(declare-fun temp572_121 () (_ BitVec 64))
(declare-fun temp572_122 () (_ BitVec 64))
(declare-fun temp572_123 () (_ BitVec 64))
(declare-fun temp572_124 () (_ BitVec 64))
(declare-fun temp572_126 () (_ BitVec 64))
(declare-fun temp572_127 () (_ BitVec 64))
(declare-fun temp572_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp572_128 () (_ BitVec 64))
(declare-fun temp572_129 () (_ BitVec 64))
(declare-fun temp572_131 () (_ BitVec 64))
(declare-fun temp572_132 () (_ BitVec 64))
(declare-fun temp572_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp572_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp572_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp572_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp572_136 () (_ BitVec 64))
(declare-fun temp572_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp572_139 () (_ BitVec 64))
(declare-fun temp572_140 () (_ BitVec 64))
(declare-fun temp572_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp572_141 () (_ BitVec 64))
(declare-fun temp572_143 () (_ BitVec 64))
(declare-fun temp572_144 () (_ BitVec 64))
(declare-fun temp572_142 () (_ BitVec 64))
(declare-fun temp572_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp572_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp572_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp572_148 () (_ BitVec 64))
(declare-fun temp572_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp572_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp572_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp572_152 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun temp572_153 () (_ BitVec 64))
(assert (= temp572_1 #x0000000000000002))
(assert (= var989741 temp572_1))
(assert (= temp572_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp572_2)))
(assert (= temp572_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp572_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp572_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp572_4)))
(assert (= temp572_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp572_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp572_6 #x0000000000000000))
(assert (= var989776 temp572_6))
(assert (= temp572_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp572_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp572_8 #x0000000000000001))
(assert (= var989810 temp572_8))
(assert (= temp572_10 #x0000000000000000))
(assert (= temp572_9 temp572_10))
(assert (= temp572_12 #x0000000000000002))
(assert (= temp572_11 temp572_12))
(assert (= temp572_13 #x0000000000000000))
(assert (= var1387902 temp572_13))
(assert (= temp572_14 #x0000000000000001))
(assert (= var1387923 temp572_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp572_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp572_15)))
(assert (= temp572_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp572_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp572_17 #x0000000000000000))
(assert (= var1521661 temp572_17))
(assert (= temp572_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp572_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp572_19 #x0000000000000000))
(assert (= var1521706 temp572_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp572_20 #x0000000000000000))
(assert (= temp572_21 temp572_20))
(assert (= temp572_22 (select ARGNAME_padding_NAMEEND_VAL temp572_21)))
(assert (= temp572_23 #x0000000000000001))
(assert (= temp572_24 temp572_23))
(assert (= temp572_25 (select ARGNAME_padding_NAMEEND_VAL temp572_24)))
(assert (= temp572_26 #x0000000000000002))
(assert (= temp572_27 temp572_26))
(assert (= temp572_28 (select ARGNAME_padding_NAMEEND_VAL temp572_27)))
(assert (= temp572_29 #x0000000000000003))
(assert (= temp572_30 temp572_29))
(assert (= temp572_31 (select ARGNAME_padding_NAMEEND_VAL temp572_30)))
(assert (= temp572_32 #x0000000000000004))
(assert (= temp572_33 temp572_32))
(assert (= temp572_34 (select ARGNAME_padding_NAMEEND_VAL temp572_33)))
(assert (= temp572_35 #x0000000000000005))
(assert (= temp572_36 temp572_35))
(assert (= temp572_37 (select ARGNAME_padding_NAMEEND_VAL temp572_36)))
(assert (= temp572_38 #x0000000000000000))
(assert (= temp572_39 #x0000000000000000))
(assert (= temp572_40 temp572_39))
(assert (= temp572_41 (select ARGNAME_padding_NAMEEND_VAL temp572_40)))
(assert (= temp572_42 #x0000000000000000))
(assert (= temp572_43 #x0000000000000001))
(assert (= temp572_44 temp572_43))
(assert (= temp572_45 (select ARGNAME_padding_NAMEEND_VAL temp572_44)))
(assert (= temp572_46 #x0000000000000000))
(assert (= temp572_47 #x0000000000000002))
(assert (= temp572_48 temp572_47))
(assert (= temp572_49 (select ARGNAME_padding_NAMEEND_VAL temp572_48)))
(assert (= temp572_50 #x0000000000000000))
(assert (= temp572_51 #x0000000000000003))
(assert (= temp572_52 temp572_51))
(assert (= temp572_53 (select ARGNAME_padding_NAMEEND_VAL temp572_52)))
(assert (= temp572_54 #x0000000000000000))
(assert (= temp572_55 #x0000000000000004))
(assert (= temp572_56 temp572_55))
(assert (= temp572_57 (select ARGNAME_padding_NAMEEND_VAL temp572_56)))
(assert (= temp572_58 #x0000000000000000))
(assert (= temp572_59 #x0000000000000005))
(assert (= temp572_60 temp572_59))
(assert (= temp572_61 (select ARGNAME_padding_NAMEEND_VAL temp572_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp572_41 temp572_38)
             (bvslt temp572_45 temp572_42)
             (bvslt temp572_49 temp572_46)
             (bvslt temp572_53 temp572_50)
             (bvslt temp572_57 temp572_54)
             (bvslt temp572_61 temp572_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp572_62 #x0000000000000000))
(assert (= var2240290 temp572_62))
(assert (= temp572_63 #x0000000000000000))
(assert (= temp572_64 temp572_63))
(assert (= temp572_65 (select ARGNAME_stride_NAMEEND_VAL temp572_64)))
(assert (= temp572_66 #x0000000000000001))
(assert (= temp572_67 temp572_66))
(assert (= temp572_68 (select ARGNAME_stride_NAMEEND_VAL temp572_67)))
(assert (= temp572_69 #x0000000000000002))
(assert (= temp572_70 temp572_69))
(assert (= temp572_71 (select ARGNAME_stride_NAMEEND_VAL temp572_70)))
(assert (= temp572_72 #x0000000000000003))
(assert (= temp572_73 temp572_72))
(assert (= temp572_74 (select ARGNAME_stride_NAMEEND_VAL temp572_73)))
(assert (= temp572_75 #x0000000000000004))
(assert (= temp572_76 temp572_75))
(assert (= temp572_77 (select ARGNAME_stride_NAMEEND_VAL temp572_76)))
(assert (= temp572_78 #x0000000000000005))
(assert (= temp572_79 temp572_78))
(assert (= temp572_80 (select ARGNAME_stride_NAMEEND_VAL temp572_79)))
(assert (= temp572_81 #x0000000000000000))
(assert (= temp572_82 #x0000000000000000))
(assert (= temp572_83 temp572_82))
(assert (= temp572_84 (select ARGNAME_stride_NAMEEND_VAL temp572_83)))
(assert (= temp572_85 #x0000000000000000))
(assert (= temp572_86 #x0000000000000001))
(assert (= temp572_87 temp572_86))
(assert (= temp572_88 (select ARGNAME_stride_NAMEEND_VAL temp572_87)))
(assert (= temp572_89 #x0000000000000000))
(assert (= temp572_90 #x0000000000000002))
(assert (= temp572_91 temp572_90))
(assert (= temp572_92 (select ARGNAME_stride_NAMEEND_VAL temp572_91)))
(assert (= temp572_93 #x0000000000000000))
(assert (= temp572_94 #x0000000000000003))
(assert (= temp572_95 temp572_94))
(assert (= temp572_96 (select ARGNAME_stride_NAMEEND_VAL temp572_95)))
(assert (= temp572_97 #x0000000000000000))
(assert (= temp572_98 #x0000000000000004))
(assert (= temp572_99 temp572_98))
(assert (= temp572_100 (select ARGNAME_stride_NAMEEND_VAL temp572_99)))
(assert (= temp572_101 #x0000000000000000))
(assert (= temp572_102 #x0000000000000005))
(assert (= temp572_103 temp572_102))
(assert (= temp572_104 (select ARGNAME_stride_NAMEEND_VAL temp572_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp572_84 temp572_81)
             (bvsle temp572_88 temp572_85)
             (bvsle temp572_92 temp572_89)
             (bvsle temp572_96 temp572_93)
             (bvsle temp572_100 temp572_97)
             (bvsle temp572_104 temp572_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp572_105 #x0000000000000000))
(assert (= var2240311 temp572_105))
(assert (= temp572_106 #x0000000000000000))
(assert (= var2228402 temp572_106))
(assert (= temp572_107 #x0000000000000000))
(assert (= temp572_108 temp572_107))
(assert (= temp572_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp572_108)))
(assert (= temp572_110 #x0000000000000001))
(assert (= temp572_111 temp572_110))
(assert (= temp572_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp572_111)))
(assert (= temp572_113 #x0000000000000002))
(assert (= temp572_114 temp572_113))
(assert (= temp572_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp572_114)))
(assert (= temp572_116 #x0000000000000003))
(assert (= temp572_117 temp572_116))
(assert (= temp572_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp572_117)))
(assert (= temp572_119 #x0000000000000004))
(assert (= temp572_120 temp572_119))
(assert (= temp572_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp572_120)))
(assert (= temp572_122 #x0000000000000005))
(assert (= temp572_123 temp572_122))
(assert (= temp572_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp572_123)))
(assert (= temp572_126 var2228402))
(assert (= temp572_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp572_126)))
(assert (= temp572_125 temp572_127))
(assert (= var2240356
   (ite (bvslt temp572_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp572_128 #x0000000000000000))
(assert (= var2240356 temp572_128))
(assert (= temp572_129 #x0000000000000000))
(assert (= var2228402 temp572_129))
(assert (= temp572_131 var2228402))
(assert (= temp572_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp572_131)))
(assert (= temp572_130 temp572_132))
(assert (= var2240378 (bvsmod temp572_130 ARGNAME_groups_NAMEEND)))
(assert (= temp572_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp572_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp572_134 #x0000000000000001))
(assert (= var2240379 temp572_134))
(assert (= var2240398 var2240288))
(assert (= temp572_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp572_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp572_136 #x0000000000000001))
(assert (= var2240399 temp572_136))
(assert (= temp572_137 #x0000000000000001))
(assert (= var2229290 temp572_137))
(assert (= temp572_139 var2229290))
(assert (= temp572_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp572_139)))
(assert (= temp572_138 temp572_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp572_138)))
(assert (= temp572_141 #x0000000000000000))
(assert (= var2228402 temp572_141))
(assert (= temp572_143 var2228402))
(assert (= temp572_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp572_143)))
(assert (= temp572_142 temp572_144))
(assert (= temp572_145 #x0000000000000002))
(assert (= var2503529 temp572_145))
(assert (= temp572_146 #x0000000000000001))
(assert (= var2240569 temp572_146))
(assert (= temp572_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp572_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp572_148 #x0000000000000001))
(assert (= var1521778 temp572_148))
(assert (= temp572_149 #x0000000000000001))
(assert (= var1521908 temp572_149))
(assert (= var4010473 var1521908))
(assert (= temp572_150 #x0000000000000000))
(assert (= var4210495 temp572_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp572_151 #x0000000000000002))
(assert (= var4339331 temp572_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp572_152 #x0000000000000000))
(assert (= var4469136 temp572_152))
(assert (= temp572_153 #x0000000000000001))
(assert (= var1521778 temp572_153))
(model-add temp572_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp572_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp572_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp572_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp572_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp572_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






