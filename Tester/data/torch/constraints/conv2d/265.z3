(declare-fun temp351_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp351_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp351_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp351_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp351_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp351_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp351_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp351_8 () (_ BitVec 64))
(declare-fun temp351_10 () (_ BitVec 64))
(declare-fun temp351_9 () (_ BitVec 64))
(declare-fun temp351_12 () (_ BitVec 64))
(declare-fun temp351_11 () (_ BitVec 64))
(declare-fun temp351_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp351_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp351_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp351_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp351_17 () (_ BitVec 64))
(declare-fun temp351_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp351_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp351_20 () (_ BitVec 64))
(declare-fun temp351_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp351_22 () (_ BitVec 64))
(declare-fun temp351_23 () (_ BitVec 64))
(declare-fun temp351_24 () (_ BitVec 64))
(declare-fun temp351_25 () (_ BitVec 64))
(declare-fun temp351_26 () (_ BitVec 64))
(declare-fun temp351_27 () (_ BitVec 64))
(declare-fun temp351_28 () (_ BitVec 64))
(declare-fun temp351_29 () (_ BitVec 64))
(declare-fun temp351_30 () (_ BitVec 64))
(declare-fun temp351_31 () (_ BitVec 64))
(declare-fun temp351_32 () (_ BitVec 64))
(declare-fun temp351_33 () (_ BitVec 64))
(declare-fun temp351_34 () (_ BitVec 64))
(declare-fun temp351_35 () (_ BitVec 64))
(declare-fun temp351_36 () (_ BitVec 64))
(declare-fun temp351_37 () (_ BitVec 64))
(declare-fun temp351_38 () (_ BitVec 64))
(declare-fun temp351_39 () (_ BitVec 64))
(declare-fun temp351_40 () (_ BitVec 64))
(declare-fun temp351_41 () (_ BitVec 64))
(declare-fun temp351_42 () (_ BitVec 64))
(declare-fun temp351_43 () (_ BitVec 64))
(declare-fun temp351_44 () (_ BitVec 64))
(declare-fun temp351_45 () (_ BitVec 64))
(declare-fun temp351_46 () (_ BitVec 64))
(declare-fun temp351_47 () (_ BitVec 64))
(declare-fun temp351_48 () (_ BitVec 64))
(declare-fun temp351_49 () (_ BitVec 64))
(declare-fun temp351_50 () (_ BitVec 64))
(declare-fun temp351_51 () (_ BitVec 64))
(declare-fun temp351_52 () (_ BitVec 64))
(declare-fun temp351_53 () (_ BitVec 64))
(declare-fun temp351_54 () (_ BitVec 64))
(declare-fun temp351_55 () (_ BitVec 64))
(declare-fun temp351_56 () (_ BitVec 64))
(declare-fun temp351_57 () (_ BitVec 64))
(declare-fun temp351_58 () (_ BitVec 64))
(declare-fun temp351_59 () (_ BitVec 64))
(declare-fun temp351_60 () (_ BitVec 64))
(declare-fun temp351_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp351_62 () (_ BitVec 64))
(declare-fun temp351_63 () (_ BitVec 64))
(declare-fun temp351_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp351_65 () (_ BitVec 64))
(declare-fun temp351_66 () (_ BitVec 64))
(declare-fun temp351_67 () (_ BitVec 64))
(declare-fun temp351_68 () (_ BitVec 64))
(declare-fun temp351_69 () (_ BitVec 64))
(declare-fun temp351_70 () (_ BitVec 64))
(declare-fun temp351_71 () (_ BitVec 64))
(declare-fun temp351_72 () (_ BitVec 64))
(declare-fun temp351_73 () (_ BitVec 64))
(declare-fun temp351_74 () (_ BitVec 64))
(declare-fun temp351_75 () (_ BitVec 64))
(declare-fun temp351_76 () (_ BitVec 64))
(declare-fun temp351_77 () (_ BitVec 64))
(declare-fun temp351_78 () (_ BitVec 64))
(declare-fun temp351_79 () (_ BitVec 64))
(declare-fun temp351_80 () (_ BitVec 64))
(declare-fun temp351_81 () (_ BitVec 64))
(declare-fun temp351_82 () (_ BitVec 64))
(declare-fun temp351_83 () (_ BitVec 64))
(declare-fun temp351_84 () (_ BitVec 64))
(declare-fun temp351_85 () (_ BitVec 64))
(declare-fun temp351_86 () (_ BitVec 64))
(declare-fun temp351_87 () (_ BitVec 64))
(declare-fun temp351_88 () (_ BitVec 64))
(declare-fun temp351_89 () (_ BitVec 64))
(declare-fun temp351_90 () (_ BitVec 64))
(declare-fun temp351_91 () (_ BitVec 64))
(declare-fun temp351_92 () (_ BitVec 64))
(declare-fun temp351_93 () (_ BitVec 64))
(declare-fun temp351_94 () (_ BitVec 64))
(declare-fun temp351_95 () (_ BitVec 64))
(declare-fun temp351_96 () (_ BitVec 64))
(declare-fun temp351_97 () (_ BitVec 64))
(declare-fun temp351_98 () (_ BitVec 64))
(declare-fun temp351_99 () (_ BitVec 64))
(declare-fun temp351_100 () (_ BitVec 64))
(declare-fun temp351_101 () (_ BitVec 64))
(declare-fun temp351_102 () (_ BitVec 64))
(declare-fun temp351_103 () (_ BitVec 64))
(declare-fun temp351_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp351_105 () (_ BitVec 64))
(declare-fun temp351_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp351_107 () (_ BitVec 64))
(declare-fun temp351_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp351_109 () (_ BitVec 64))
(declare-fun temp351_110 () (_ BitVec 64))
(declare-fun temp351_111 () (_ BitVec 64))
(declare-fun temp351_112 () (_ BitVec 64))
(declare-fun temp351_113 () (_ BitVec 64))
(declare-fun temp351_114 () (_ BitVec 64))
(declare-fun temp351_115 () (_ BitVec 64))
(declare-fun temp351_116 () (_ BitVec 64))
(declare-fun temp351_117 () (_ BitVec 64))
(declare-fun temp351_118 () (_ BitVec 64))
(declare-fun temp351_119 () (_ BitVec 64))
(declare-fun temp351_120 () (_ BitVec 64))
(declare-fun temp351_121 () (_ BitVec 64))
(declare-fun temp351_122 () (_ BitVec 64))
(declare-fun temp351_123 () (_ BitVec 64))
(declare-fun temp351_124 () (_ BitVec 64))
(declare-fun temp351_126 () (_ BitVec 64))
(declare-fun temp351_127 () (_ BitVec 64))
(declare-fun temp351_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp351_128 () (_ BitVec 64))
(declare-fun temp351_129 () (_ BitVec 64))
(declare-fun temp351_131 () (_ BitVec 64))
(declare-fun temp351_132 () (_ BitVec 64))
(declare-fun temp351_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp351_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp351_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp351_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp351_136 () (_ BitVec 64))
(declare-fun temp351_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp351_139 () (_ BitVec 64))
(declare-fun temp351_140 () (_ BitVec 64))
(declare-fun temp351_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp351_141 () (_ BitVec 64))
(declare-fun temp351_143 () (_ BitVec 64))
(declare-fun temp351_144 () (_ BitVec 64))
(declare-fun temp351_142 () (_ BitVec 64))
(declare-fun temp351_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp351_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp351_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp351_148 () (_ BitVec 64))
(declare-fun temp351_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp351_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp351_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp351_152 () (_ BitVec 64))
(assert (= temp351_1 #x0000000000000002))
(assert (= var989741 temp351_1))
(assert (= temp351_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp351_2)))
(assert (= temp351_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp351_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp351_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp351_4)))
(assert (= temp351_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp351_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp351_6 #x0000000000000000))
(assert (= var989776 temp351_6))
(assert (= temp351_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp351_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp351_8 #x0000000000000001))
(assert (= var989810 temp351_8))
(assert (= temp351_10 #x0000000000000000))
(assert (= temp351_9 temp351_10))
(assert (= temp351_12 #x0000000000000002))
(assert (= temp351_11 temp351_12))
(assert (= temp351_13 #x0000000000000000))
(assert (= var1387902 temp351_13))
(assert (= temp351_14 #x0000000000000001))
(assert (= var1387923 temp351_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp351_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp351_15)))
(assert (= temp351_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp351_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp351_17 #x0000000000000000))
(assert (= var1521661 temp351_17))
(assert (= temp351_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp351_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp351_19 #x0000000000000000))
(assert (= var1521706 temp351_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp351_20 #x0000000000000000))
(assert (= temp351_21 temp351_20))
(assert (= temp351_22 (select ARGNAME_padding_NAMEEND_VAL temp351_21)))
(assert (= temp351_23 #x0000000000000001))
(assert (= temp351_24 temp351_23))
(assert (= temp351_25 (select ARGNAME_padding_NAMEEND_VAL temp351_24)))
(assert (= temp351_26 #x0000000000000002))
(assert (= temp351_27 temp351_26))
(assert (= temp351_28 (select ARGNAME_padding_NAMEEND_VAL temp351_27)))
(assert (= temp351_29 #x0000000000000003))
(assert (= temp351_30 temp351_29))
(assert (= temp351_31 (select ARGNAME_padding_NAMEEND_VAL temp351_30)))
(assert (= temp351_32 #x0000000000000004))
(assert (= temp351_33 temp351_32))
(assert (= temp351_34 (select ARGNAME_padding_NAMEEND_VAL temp351_33)))
(assert (= temp351_35 #x0000000000000005))
(assert (= temp351_36 temp351_35))
(assert (= temp351_37 (select ARGNAME_padding_NAMEEND_VAL temp351_36)))
(assert (= temp351_38 #x0000000000000000))
(assert (= temp351_39 #x0000000000000000))
(assert (= temp351_40 temp351_39))
(assert (= temp351_41 (select ARGNAME_padding_NAMEEND_VAL temp351_40)))
(assert (= temp351_42 #x0000000000000000))
(assert (= temp351_43 #x0000000000000001))
(assert (= temp351_44 temp351_43))
(assert (= temp351_45 (select ARGNAME_padding_NAMEEND_VAL temp351_44)))
(assert (= temp351_46 #x0000000000000000))
(assert (= temp351_47 #x0000000000000002))
(assert (= temp351_48 temp351_47))
(assert (= temp351_49 (select ARGNAME_padding_NAMEEND_VAL temp351_48)))
(assert (= temp351_50 #x0000000000000000))
(assert (= temp351_51 #x0000000000000003))
(assert (= temp351_52 temp351_51))
(assert (= temp351_53 (select ARGNAME_padding_NAMEEND_VAL temp351_52)))
(assert (= temp351_54 #x0000000000000000))
(assert (= temp351_55 #x0000000000000004))
(assert (= temp351_56 temp351_55))
(assert (= temp351_57 (select ARGNAME_padding_NAMEEND_VAL temp351_56)))
(assert (= temp351_58 #x0000000000000000))
(assert (= temp351_59 #x0000000000000005))
(assert (= temp351_60 temp351_59))
(assert (= temp351_61 (select ARGNAME_padding_NAMEEND_VAL temp351_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp351_41 temp351_38)
             (bvslt temp351_45 temp351_42)
             (bvslt temp351_49 temp351_46)
             (bvslt temp351_53 temp351_50)
             (bvslt temp351_57 temp351_54)
             (bvslt temp351_61 temp351_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp351_62 #x0000000000000000))
(assert (= var2240290 temp351_62))
(assert (= temp351_63 #x0000000000000000))
(assert (= temp351_64 temp351_63))
(assert (= temp351_65 (select ARGNAME_stride_NAMEEND_VAL temp351_64)))
(assert (= temp351_66 #x0000000000000001))
(assert (= temp351_67 temp351_66))
(assert (= temp351_68 (select ARGNAME_stride_NAMEEND_VAL temp351_67)))
(assert (= temp351_69 #x0000000000000002))
(assert (= temp351_70 temp351_69))
(assert (= temp351_71 (select ARGNAME_stride_NAMEEND_VAL temp351_70)))
(assert (= temp351_72 #x0000000000000003))
(assert (= temp351_73 temp351_72))
(assert (= temp351_74 (select ARGNAME_stride_NAMEEND_VAL temp351_73)))
(assert (= temp351_75 #x0000000000000004))
(assert (= temp351_76 temp351_75))
(assert (= temp351_77 (select ARGNAME_stride_NAMEEND_VAL temp351_76)))
(assert (= temp351_78 #x0000000000000005))
(assert (= temp351_79 temp351_78))
(assert (= temp351_80 (select ARGNAME_stride_NAMEEND_VAL temp351_79)))
(assert (= temp351_81 #x0000000000000000))
(assert (= temp351_82 #x0000000000000000))
(assert (= temp351_83 temp351_82))
(assert (= temp351_84 (select ARGNAME_stride_NAMEEND_VAL temp351_83)))
(assert (= temp351_85 #x0000000000000000))
(assert (= temp351_86 #x0000000000000001))
(assert (= temp351_87 temp351_86))
(assert (= temp351_88 (select ARGNAME_stride_NAMEEND_VAL temp351_87)))
(assert (= temp351_89 #x0000000000000000))
(assert (= temp351_90 #x0000000000000002))
(assert (= temp351_91 temp351_90))
(assert (= temp351_92 (select ARGNAME_stride_NAMEEND_VAL temp351_91)))
(assert (= temp351_93 #x0000000000000000))
(assert (= temp351_94 #x0000000000000003))
(assert (= temp351_95 temp351_94))
(assert (= temp351_96 (select ARGNAME_stride_NAMEEND_VAL temp351_95)))
(assert (= temp351_97 #x0000000000000000))
(assert (= temp351_98 #x0000000000000004))
(assert (= temp351_99 temp351_98))
(assert (= temp351_100 (select ARGNAME_stride_NAMEEND_VAL temp351_99)))
(assert (= temp351_101 #x0000000000000000))
(assert (= temp351_102 #x0000000000000005))
(assert (= temp351_103 temp351_102))
(assert (= temp351_104 (select ARGNAME_stride_NAMEEND_VAL temp351_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp351_84 temp351_81)
             (bvsle temp351_88 temp351_85)
             (bvsle temp351_92 temp351_89)
             (bvsle temp351_96 temp351_93)
             (bvsle temp351_100 temp351_97)
             (bvsle temp351_104 temp351_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp351_105 #x0000000000000000))
(assert (= var2240311 temp351_105))
(assert (= temp351_106 #x0000000000000000))
(assert (= var2228402 temp351_106))
(assert (= temp351_107 #x0000000000000000))
(assert (= temp351_108 temp351_107))
(assert (= temp351_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp351_108)))
(assert (= temp351_110 #x0000000000000001))
(assert (= temp351_111 temp351_110))
(assert (= temp351_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp351_111)))
(assert (= temp351_113 #x0000000000000002))
(assert (= temp351_114 temp351_113))
(assert (= temp351_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp351_114)))
(assert (= temp351_116 #x0000000000000003))
(assert (= temp351_117 temp351_116))
(assert (= temp351_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp351_117)))
(assert (= temp351_119 #x0000000000000004))
(assert (= temp351_120 temp351_119))
(assert (= temp351_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp351_120)))
(assert (= temp351_122 #x0000000000000005))
(assert (= temp351_123 temp351_122))
(assert (= temp351_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp351_123)))
(assert (= temp351_126 var2228402))
(assert (= temp351_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp351_126)))
(assert (= temp351_125 temp351_127))
(assert (= var2240356
   (ite (bvslt temp351_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp351_128 #x0000000000000000))
(assert (= var2240356 temp351_128))
(assert (= temp351_129 #x0000000000000000))
(assert (= var2228402 temp351_129))
(assert (= temp351_131 var2228402))
(assert (= temp351_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp351_131)))
(assert (= temp351_130 temp351_132))
(assert (= var2240378 (bvsmod temp351_130 ARGNAME_groups_NAMEEND)))
(assert (= temp351_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp351_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp351_134 #x0000000000000001))
(assert (= var2240379 temp351_134))
(assert (= var2240398 var2240288))
(assert (= temp351_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp351_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp351_136 #x0000000000000001))
(assert (= var2240399 temp351_136))
(assert (= temp351_137 #x0000000000000001))
(assert (= var2229290 temp351_137))
(assert (= temp351_139 var2229290))
(assert (= temp351_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp351_139)))
(assert (= temp351_138 temp351_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp351_138)))
(assert (= temp351_141 #x0000000000000000))
(assert (= var2228402 temp351_141))
(assert (= temp351_143 var2228402))
(assert (= temp351_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp351_143)))
(assert (= temp351_142 temp351_144))
(assert (= temp351_145 #x0000000000000002))
(assert (= var2503529 temp351_145))
(assert (= temp351_146 #x0000000000000001))
(assert (= var2240569 temp351_146))
(assert (= temp351_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp351_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp351_148 #x0000000000000001))
(assert (= var1521778 temp351_148))
(assert (= temp351_149 #x0000000000000001))
(assert (= var1521908 temp351_149))
(assert (= var4010473 var1521908))
(assert (= temp351_150 #x0000000000000000))
(assert (= var4210495 temp351_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp351_151 #x0000000000000002))
(assert (= var4339331 temp351_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var5321104 var1521921))
(assert (= var5583248 var1521921))
(assert (= temp351_152 #x0000000000000001))
(assert (= var1521778 temp351_152))
(model-add temp351_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp351_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp351_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp351_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp351_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp351_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






