(declare-fun temp1011_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp1011_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp1011_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp1011_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp1011_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp1011_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp1011_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp1011_8 () (_ BitVec 64))
(declare-fun temp1011_10 () (_ BitVec 64))
(declare-fun temp1011_9 () (_ BitVec 64))
(declare-fun temp1011_12 () (_ BitVec 64))
(declare-fun temp1011_11 () (_ BitVec 64))
(declare-fun temp1011_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp1011_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp1011_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp1011_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp1011_17 () (_ BitVec 64))
(declare-fun temp1011_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp1011_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp1011_20 () (_ BitVec 64))
(declare-fun temp1011_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1011_22 () (_ BitVec 64))
(declare-fun temp1011_23 () (_ BitVec 64))
(declare-fun temp1011_24 () (_ BitVec 64))
(declare-fun temp1011_25 () (_ BitVec 64))
(declare-fun temp1011_26 () (_ BitVec 64))
(declare-fun temp1011_27 () (_ BitVec 64))
(declare-fun temp1011_28 () (_ BitVec 64))
(declare-fun temp1011_29 () (_ BitVec 64))
(declare-fun temp1011_30 () (_ BitVec 64))
(declare-fun temp1011_31 () (_ BitVec 64))
(declare-fun temp1011_32 () (_ BitVec 64))
(declare-fun temp1011_33 () (_ BitVec 64))
(declare-fun temp1011_34 () (_ BitVec 64))
(declare-fun temp1011_35 () (_ BitVec 64))
(declare-fun temp1011_36 () (_ BitVec 64))
(declare-fun temp1011_37 () (_ BitVec 64))
(declare-fun temp1011_38 () (_ BitVec 64))
(declare-fun temp1011_39 () (_ BitVec 64))
(declare-fun temp1011_40 () (_ BitVec 64))
(declare-fun temp1011_41 () (_ BitVec 64))
(declare-fun temp1011_42 () (_ BitVec 64))
(declare-fun temp1011_43 () (_ BitVec 64))
(declare-fun temp1011_44 () (_ BitVec 64))
(declare-fun temp1011_45 () (_ BitVec 64))
(declare-fun temp1011_46 () (_ BitVec 64))
(declare-fun temp1011_47 () (_ BitVec 64))
(declare-fun temp1011_48 () (_ BitVec 64))
(declare-fun temp1011_49 () (_ BitVec 64))
(declare-fun temp1011_50 () (_ BitVec 64))
(declare-fun temp1011_51 () (_ BitVec 64))
(declare-fun temp1011_52 () (_ BitVec 64))
(declare-fun temp1011_53 () (_ BitVec 64))
(declare-fun temp1011_54 () (_ BitVec 64))
(declare-fun temp1011_55 () (_ BitVec 64))
(declare-fun temp1011_56 () (_ BitVec 64))
(declare-fun temp1011_57 () (_ BitVec 64))
(declare-fun temp1011_58 () (_ BitVec 64))
(declare-fun temp1011_59 () (_ BitVec 64))
(declare-fun temp1011_60 () (_ BitVec 64))
(declare-fun temp1011_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp1011_62 () (_ BitVec 64))
(declare-fun temp1011_63 () (_ BitVec 64))
(declare-fun temp1011_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1011_65 () (_ BitVec 64))
(declare-fun temp1011_66 () (_ BitVec 64))
(declare-fun temp1011_67 () (_ BitVec 64))
(declare-fun temp1011_68 () (_ BitVec 64))
(declare-fun temp1011_69 () (_ BitVec 64))
(declare-fun temp1011_70 () (_ BitVec 64))
(declare-fun temp1011_71 () (_ BitVec 64))
(declare-fun temp1011_72 () (_ BitVec 64))
(declare-fun temp1011_73 () (_ BitVec 64))
(declare-fun temp1011_74 () (_ BitVec 64))
(declare-fun temp1011_75 () (_ BitVec 64))
(declare-fun temp1011_76 () (_ BitVec 64))
(declare-fun temp1011_77 () (_ BitVec 64))
(declare-fun temp1011_78 () (_ BitVec 64))
(declare-fun temp1011_79 () (_ BitVec 64))
(declare-fun temp1011_80 () (_ BitVec 64))
(declare-fun temp1011_81 () (_ BitVec 64))
(declare-fun temp1011_82 () (_ BitVec 64))
(declare-fun temp1011_83 () (_ BitVec 64))
(declare-fun temp1011_84 () (_ BitVec 64))
(declare-fun temp1011_85 () (_ BitVec 64))
(declare-fun temp1011_86 () (_ BitVec 64))
(declare-fun temp1011_87 () (_ BitVec 64))
(declare-fun temp1011_88 () (_ BitVec 64))
(declare-fun temp1011_89 () (_ BitVec 64))
(declare-fun temp1011_90 () (_ BitVec 64))
(declare-fun temp1011_91 () (_ BitVec 64))
(declare-fun temp1011_92 () (_ BitVec 64))
(declare-fun temp1011_93 () (_ BitVec 64))
(declare-fun temp1011_94 () (_ BitVec 64))
(declare-fun temp1011_95 () (_ BitVec 64))
(declare-fun temp1011_96 () (_ BitVec 64))
(declare-fun temp1011_97 () (_ BitVec 64))
(declare-fun temp1011_98 () (_ BitVec 64))
(declare-fun temp1011_99 () (_ BitVec 64))
(declare-fun temp1011_100 () (_ BitVec 64))
(declare-fun temp1011_101 () (_ BitVec 64))
(declare-fun temp1011_102 () (_ BitVec 64))
(declare-fun temp1011_103 () (_ BitVec 64))
(declare-fun temp1011_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp1011_105 () (_ BitVec 64))
(declare-fun temp1011_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp1011_107 () (_ BitVec 64))
(declare-fun temp1011_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1011_109 () (_ BitVec 64))
(declare-fun temp1011_110 () (_ BitVec 64))
(declare-fun temp1011_111 () (_ BitVec 64))
(declare-fun temp1011_112 () (_ BitVec 64))
(declare-fun temp1011_113 () (_ BitVec 64))
(declare-fun temp1011_114 () (_ BitVec 64))
(declare-fun temp1011_115 () (_ BitVec 64))
(declare-fun temp1011_116 () (_ BitVec 64))
(declare-fun temp1011_117 () (_ BitVec 64))
(declare-fun temp1011_118 () (_ BitVec 64))
(declare-fun temp1011_119 () (_ BitVec 64))
(declare-fun temp1011_120 () (_ BitVec 64))
(declare-fun temp1011_121 () (_ BitVec 64))
(declare-fun temp1011_122 () (_ BitVec 64))
(declare-fun temp1011_123 () (_ BitVec 64))
(declare-fun temp1011_124 () (_ BitVec 64))
(declare-fun temp1011_126 () (_ BitVec 64))
(declare-fun temp1011_127 () (_ BitVec 64))
(declare-fun temp1011_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp1011_128 () (_ BitVec 64))
(declare-fun temp1011_129 () (_ BitVec 64))
(declare-fun temp1011_131 () (_ BitVec 64))
(declare-fun temp1011_132 () (_ BitVec 64))
(declare-fun temp1011_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp1011_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp1011_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp1011_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp1011_136 () (_ BitVec 64))
(declare-fun temp1011_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp1011_139 () (_ BitVec 64))
(declare-fun temp1011_140 () (_ BitVec 64))
(declare-fun temp1011_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp1011_141 () (_ BitVec 64))
(declare-fun temp1011_143 () (_ BitVec 64))
(declare-fun temp1011_144 () (_ BitVec 64))
(declare-fun temp1011_142 () (_ BitVec 64))
(declare-fun temp1011_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp1011_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp1011_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp1011_148 () (_ BitVec 64))
(declare-fun temp1011_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp1011_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp1011_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp1011_152 () (_ BitVec 64))
(assert (= temp1011_1 #x0000000000000002))
(assert (= var989741 temp1011_1))
(assert (= temp1011_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp1011_2)))
(assert (= temp1011_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp1011_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp1011_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp1011_4)))
(assert (= temp1011_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp1011_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp1011_6 #x0000000000000000))
(assert (= var989776 temp1011_6))
(assert (= temp1011_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp1011_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1011_8 #x0000000000000001))
(assert (= var989810 temp1011_8))
(assert (= temp1011_10 #x0000000000000000))
(assert (= temp1011_9 temp1011_10))
(assert (= temp1011_12 #x0000000000000002))
(assert (= temp1011_11 temp1011_12))
(assert (= temp1011_13 #x0000000000000000))
(assert (= var1387902 temp1011_13))
(assert (= temp1011_14 #x0000000000000001))
(assert (= var1387923 temp1011_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp1011_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp1011_15)))
(assert (= temp1011_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1011_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1011_17 #x0000000000000000))
(assert (= var1521661 temp1011_17))
(assert (= temp1011_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp1011_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1011_19 #x0000000000000000))
(assert (= var1521706 temp1011_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp1011_20 #x0000000000000000))
(assert (= temp1011_21 temp1011_20))
(assert (= temp1011_22 (select ARGNAME_padding_NAMEEND_VAL temp1011_21)))
(assert (= temp1011_23 #x0000000000000001))
(assert (= temp1011_24 temp1011_23))
(assert (= temp1011_25 (select ARGNAME_padding_NAMEEND_VAL temp1011_24)))
(assert (= temp1011_26 #x0000000000000002))
(assert (= temp1011_27 temp1011_26))
(assert (= temp1011_28 (select ARGNAME_padding_NAMEEND_VAL temp1011_27)))
(assert (= temp1011_29 #x0000000000000003))
(assert (= temp1011_30 temp1011_29))
(assert (= temp1011_31 (select ARGNAME_padding_NAMEEND_VAL temp1011_30)))
(assert (= temp1011_32 #x0000000000000004))
(assert (= temp1011_33 temp1011_32))
(assert (= temp1011_34 (select ARGNAME_padding_NAMEEND_VAL temp1011_33)))
(assert (= temp1011_35 #x0000000000000005))
(assert (= temp1011_36 temp1011_35))
(assert (= temp1011_37 (select ARGNAME_padding_NAMEEND_VAL temp1011_36)))
(assert (= temp1011_38 #x0000000000000000))
(assert (= temp1011_39 #x0000000000000000))
(assert (= temp1011_40 temp1011_39))
(assert (= temp1011_41 (select ARGNAME_padding_NAMEEND_VAL temp1011_40)))
(assert (= temp1011_42 #x0000000000000000))
(assert (= temp1011_43 #x0000000000000001))
(assert (= temp1011_44 temp1011_43))
(assert (= temp1011_45 (select ARGNAME_padding_NAMEEND_VAL temp1011_44)))
(assert (= temp1011_46 #x0000000000000000))
(assert (= temp1011_47 #x0000000000000002))
(assert (= temp1011_48 temp1011_47))
(assert (= temp1011_49 (select ARGNAME_padding_NAMEEND_VAL temp1011_48)))
(assert (= temp1011_50 #x0000000000000000))
(assert (= temp1011_51 #x0000000000000003))
(assert (= temp1011_52 temp1011_51))
(assert (= temp1011_53 (select ARGNAME_padding_NAMEEND_VAL temp1011_52)))
(assert (= temp1011_54 #x0000000000000000))
(assert (= temp1011_55 #x0000000000000004))
(assert (= temp1011_56 temp1011_55))
(assert (= temp1011_57 (select ARGNAME_padding_NAMEEND_VAL temp1011_56)))
(assert (= temp1011_58 #x0000000000000000))
(assert (= temp1011_59 #x0000000000000005))
(assert (= temp1011_60 temp1011_59))
(assert (= temp1011_61 (select ARGNAME_padding_NAMEEND_VAL temp1011_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp1011_41 temp1011_38)
             (bvslt temp1011_45 temp1011_42)
             (bvslt temp1011_49 temp1011_46)
             (bvslt temp1011_53 temp1011_50)
             (bvslt temp1011_57 temp1011_54)
             (bvslt temp1011_61 temp1011_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1011_62 #x0000000000000000))
(assert (= var2240290 temp1011_62))
(assert (= temp1011_63 #x0000000000000000))
(assert (= temp1011_64 temp1011_63))
(assert (= temp1011_65 (select ARGNAME_stride_NAMEEND_VAL temp1011_64)))
(assert (= temp1011_66 #x0000000000000001))
(assert (= temp1011_67 temp1011_66))
(assert (= temp1011_68 (select ARGNAME_stride_NAMEEND_VAL temp1011_67)))
(assert (= temp1011_69 #x0000000000000002))
(assert (= temp1011_70 temp1011_69))
(assert (= temp1011_71 (select ARGNAME_stride_NAMEEND_VAL temp1011_70)))
(assert (= temp1011_72 #x0000000000000003))
(assert (= temp1011_73 temp1011_72))
(assert (= temp1011_74 (select ARGNAME_stride_NAMEEND_VAL temp1011_73)))
(assert (= temp1011_75 #x0000000000000004))
(assert (= temp1011_76 temp1011_75))
(assert (= temp1011_77 (select ARGNAME_stride_NAMEEND_VAL temp1011_76)))
(assert (= temp1011_78 #x0000000000000005))
(assert (= temp1011_79 temp1011_78))
(assert (= temp1011_80 (select ARGNAME_stride_NAMEEND_VAL temp1011_79)))
(assert (= temp1011_81 #x0000000000000000))
(assert (= temp1011_82 #x0000000000000000))
(assert (= temp1011_83 temp1011_82))
(assert (= temp1011_84 (select ARGNAME_stride_NAMEEND_VAL temp1011_83)))
(assert (= temp1011_85 #x0000000000000000))
(assert (= temp1011_86 #x0000000000000001))
(assert (= temp1011_87 temp1011_86))
(assert (= temp1011_88 (select ARGNAME_stride_NAMEEND_VAL temp1011_87)))
(assert (= temp1011_89 #x0000000000000000))
(assert (= temp1011_90 #x0000000000000002))
(assert (= temp1011_91 temp1011_90))
(assert (= temp1011_92 (select ARGNAME_stride_NAMEEND_VAL temp1011_91)))
(assert (= temp1011_93 #x0000000000000000))
(assert (= temp1011_94 #x0000000000000003))
(assert (= temp1011_95 temp1011_94))
(assert (= temp1011_96 (select ARGNAME_stride_NAMEEND_VAL temp1011_95)))
(assert (= temp1011_97 #x0000000000000000))
(assert (= temp1011_98 #x0000000000000004))
(assert (= temp1011_99 temp1011_98))
(assert (= temp1011_100 (select ARGNAME_stride_NAMEEND_VAL temp1011_99)))
(assert (= temp1011_101 #x0000000000000000))
(assert (= temp1011_102 #x0000000000000005))
(assert (= temp1011_103 temp1011_102))
(assert (= temp1011_104 (select ARGNAME_stride_NAMEEND_VAL temp1011_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp1011_84 temp1011_81)
             (bvsle temp1011_88 temp1011_85)
             (bvsle temp1011_92 temp1011_89)
             (bvsle temp1011_96 temp1011_93)
             (bvsle temp1011_100 temp1011_97)
             (bvsle temp1011_104 temp1011_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1011_105 #x0000000000000000))
(assert (= var2240311 temp1011_105))
(assert (= temp1011_106 #x0000000000000000))
(assert (= var2228402 temp1011_106))
(assert (= temp1011_107 #x0000000000000000))
(assert (= temp1011_108 temp1011_107))
(assert (= temp1011_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1011_108)))
(assert (= temp1011_110 #x0000000000000001))
(assert (= temp1011_111 temp1011_110))
(assert (= temp1011_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1011_111)))
(assert (= temp1011_113 #x0000000000000002))
(assert (= temp1011_114 temp1011_113))
(assert (= temp1011_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1011_114)))
(assert (= temp1011_116 #x0000000000000003))
(assert (= temp1011_117 temp1011_116))
(assert (= temp1011_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1011_117)))
(assert (= temp1011_119 #x0000000000000004))
(assert (= temp1011_120 temp1011_119))
(assert (= temp1011_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1011_120)))
(assert (= temp1011_122 #x0000000000000005))
(assert (= temp1011_123 temp1011_122))
(assert (= temp1011_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1011_123)))
(assert (= temp1011_126 var2228402))
(assert (= temp1011_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1011_126)))
(assert (= temp1011_125 temp1011_127))
(assert (= var2240356
   (ite (bvslt temp1011_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1011_128 #x0000000000000000))
(assert (= var2240356 temp1011_128))
(assert (= temp1011_129 #x0000000000000000))
(assert (= var2228402 temp1011_129))
(assert (= temp1011_131 var2228402))
(assert (= temp1011_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1011_131)))
(assert (= temp1011_130 temp1011_132))
(assert (= var2240378 (bvsmod temp1011_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1011_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp1011_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1011_134 #x0000000000000001))
(assert (= var2240379 temp1011_134))
(assert (= var2240398 var2240288))
(assert (= temp1011_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp1011_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1011_136 #x0000000000000001))
(assert (= var2240399 temp1011_136))
(assert (= temp1011_137 #x0000000000000001))
(assert (= var2229290 temp1011_137))
(assert (= temp1011_139 var2229290))
(assert (= temp1011_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1011_139)))
(assert (= temp1011_138 temp1011_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp1011_138)))
(assert (= temp1011_141 #x0000000000000000))
(assert (= var2228402 temp1011_141))
(assert (= temp1011_143 var2228402))
(assert (= temp1011_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1011_143)))
(assert (= temp1011_142 temp1011_144))
(assert (= temp1011_145 #x0000000000000002))
(assert (= var2503529 temp1011_145))
(assert (= temp1011_146 #x0000000000000001))
(assert (= var2240569 temp1011_146))
(assert (= temp1011_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1011_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1011_148 #x0000000000000001))
(assert (= var1521778 temp1011_148))
(assert (= temp1011_149 #x0000000000000001))
(assert (= var1521908 temp1011_149))
(assert (= var4010473 var1521908))
(assert (= temp1011_150 #x0000000000000000))
(assert (= var4210495 temp1011_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp1011_151 #x0000000000000002))
(assert (= var4339331 temp1011_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp1011_152 #x0000000000000001))
(assert (= var1521778 temp1011_152))
(model-add temp1011_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp1011_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp1011_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1011_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp1011_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1011_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






