(declare-fun temp406_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp406_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp406_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp406_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp406_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp406_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp406_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp406_8 () (_ BitVec 64))
(declare-fun temp406_10 () (_ BitVec 64))
(declare-fun temp406_9 () (_ BitVec 64))
(declare-fun temp406_12 () (_ BitVec 64))
(declare-fun temp406_11 () (_ BitVec 64))
(declare-fun temp406_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp406_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp406_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp406_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp406_17 () (_ BitVec 64))
(declare-fun temp406_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp406_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp406_20 () (_ BitVec 64))
(declare-fun temp406_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp406_22 () (_ BitVec 64))
(declare-fun temp406_23 () (_ BitVec 64))
(declare-fun temp406_24 () (_ BitVec 64))
(declare-fun temp406_25 () (_ BitVec 64))
(declare-fun temp406_26 () (_ BitVec 64))
(declare-fun temp406_27 () (_ BitVec 64))
(declare-fun temp406_28 () (_ BitVec 64))
(declare-fun temp406_29 () (_ BitVec 64))
(declare-fun temp406_30 () (_ BitVec 64))
(declare-fun temp406_31 () (_ BitVec 64))
(declare-fun temp406_32 () (_ BitVec 64))
(declare-fun temp406_33 () (_ BitVec 64))
(declare-fun temp406_34 () (_ BitVec 64))
(declare-fun temp406_35 () (_ BitVec 64))
(declare-fun temp406_36 () (_ BitVec 64))
(declare-fun temp406_37 () (_ BitVec 64))
(declare-fun temp406_38 () (_ BitVec 64))
(declare-fun temp406_39 () (_ BitVec 64))
(declare-fun temp406_40 () (_ BitVec 64))
(declare-fun temp406_41 () (_ BitVec 64))
(declare-fun temp406_42 () (_ BitVec 64))
(declare-fun temp406_43 () (_ BitVec 64))
(declare-fun temp406_44 () (_ BitVec 64))
(declare-fun temp406_45 () (_ BitVec 64))
(declare-fun temp406_46 () (_ BitVec 64))
(declare-fun temp406_47 () (_ BitVec 64))
(declare-fun temp406_48 () (_ BitVec 64))
(declare-fun temp406_49 () (_ BitVec 64))
(declare-fun temp406_50 () (_ BitVec 64))
(declare-fun temp406_51 () (_ BitVec 64))
(declare-fun temp406_52 () (_ BitVec 64))
(declare-fun temp406_53 () (_ BitVec 64))
(declare-fun temp406_54 () (_ BitVec 64))
(declare-fun temp406_55 () (_ BitVec 64))
(declare-fun temp406_56 () (_ BitVec 64))
(declare-fun temp406_57 () (_ BitVec 64))
(declare-fun temp406_58 () (_ BitVec 64))
(declare-fun temp406_59 () (_ BitVec 64))
(declare-fun temp406_60 () (_ BitVec 64))
(declare-fun temp406_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp406_62 () (_ BitVec 64))
(declare-fun temp406_63 () (_ BitVec 64))
(declare-fun temp406_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp406_65 () (_ BitVec 64))
(declare-fun temp406_66 () (_ BitVec 64))
(declare-fun temp406_67 () (_ BitVec 64))
(declare-fun temp406_68 () (_ BitVec 64))
(declare-fun temp406_69 () (_ BitVec 64))
(declare-fun temp406_70 () (_ BitVec 64))
(declare-fun temp406_71 () (_ BitVec 64))
(declare-fun temp406_72 () (_ BitVec 64))
(declare-fun temp406_73 () (_ BitVec 64))
(declare-fun temp406_74 () (_ BitVec 64))
(declare-fun temp406_75 () (_ BitVec 64))
(declare-fun temp406_76 () (_ BitVec 64))
(declare-fun temp406_77 () (_ BitVec 64))
(declare-fun temp406_78 () (_ BitVec 64))
(declare-fun temp406_79 () (_ BitVec 64))
(declare-fun temp406_80 () (_ BitVec 64))
(declare-fun temp406_81 () (_ BitVec 64))
(declare-fun temp406_82 () (_ BitVec 64))
(declare-fun temp406_83 () (_ BitVec 64))
(declare-fun temp406_84 () (_ BitVec 64))
(declare-fun temp406_85 () (_ BitVec 64))
(declare-fun temp406_86 () (_ BitVec 64))
(declare-fun temp406_87 () (_ BitVec 64))
(declare-fun temp406_88 () (_ BitVec 64))
(declare-fun temp406_89 () (_ BitVec 64))
(declare-fun temp406_90 () (_ BitVec 64))
(declare-fun temp406_91 () (_ BitVec 64))
(declare-fun temp406_92 () (_ BitVec 64))
(declare-fun temp406_93 () (_ BitVec 64))
(declare-fun temp406_94 () (_ BitVec 64))
(declare-fun temp406_95 () (_ BitVec 64))
(declare-fun temp406_96 () (_ BitVec 64))
(declare-fun temp406_97 () (_ BitVec 64))
(declare-fun temp406_98 () (_ BitVec 64))
(declare-fun temp406_99 () (_ BitVec 64))
(declare-fun temp406_100 () (_ BitVec 64))
(declare-fun temp406_101 () (_ BitVec 64))
(declare-fun temp406_102 () (_ BitVec 64))
(declare-fun temp406_103 () (_ BitVec 64))
(declare-fun temp406_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp406_105 () (_ BitVec 64))
(declare-fun temp406_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp406_107 () (_ BitVec 64))
(declare-fun temp406_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp406_109 () (_ BitVec 64))
(declare-fun temp406_110 () (_ BitVec 64))
(declare-fun temp406_111 () (_ BitVec 64))
(declare-fun temp406_112 () (_ BitVec 64))
(declare-fun temp406_113 () (_ BitVec 64))
(declare-fun temp406_114 () (_ BitVec 64))
(declare-fun temp406_115 () (_ BitVec 64))
(declare-fun temp406_116 () (_ BitVec 64))
(declare-fun temp406_117 () (_ BitVec 64))
(declare-fun temp406_118 () (_ BitVec 64))
(declare-fun temp406_119 () (_ BitVec 64))
(declare-fun temp406_120 () (_ BitVec 64))
(declare-fun temp406_121 () (_ BitVec 64))
(declare-fun temp406_122 () (_ BitVec 64))
(declare-fun temp406_123 () (_ BitVec 64))
(declare-fun temp406_124 () (_ BitVec 64))
(declare-fun temp406_126 () (_ BitVec 64))
(declare-fun temp406_127 () (_ BitVec 64))
(declare-fun temp406_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp406_128 () (_ BitVec 64))
(declare-fun temp406_129 () (_ BitVec 64))
(declare-fun temp406_131 () (_ BitVec 64))
(declare-fun temp406_132 () (_ BitVec 64))
(declare-fun temp406_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp406_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp406_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp406_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp406_136 () (_ BitVec 64))
(declare-fun temp406_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp406_139 () (_ BitVec 64))
(declare-fun temp406_140 () (_ BitVec 64))
(declare-fun temp406_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp406_141 () (_ BitVec 64))
(declare-fun temp406_143 () (_ BitVec 64))
(declare-fun temp406_144 () (_ BitVec 64))
(declare-fun temp406_142 () (_ BitVec 64))
(declare-fun temp406_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp406_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp406_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp406_148 () (_ BitVec 64))
(declare-fun temp406_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp406_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp406_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp406_152 () (_ BitVec 64))
(assert (= temp406_1 #x0000000000000002))
(assert (= var989741 temp406_1))
(assert (= temp406_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp406_2)))
(assert (= temp406_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp406_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp406_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp406_4)))
(assert (= temp406_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp406_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp406_6 #x0000000000000000))
(assert (= var989776 temp406_6))
(assert (= temp406_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp406_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp406_8 #x0000000000000001))
(assert (= var989810 temp406_8))
(assert (= temp406_10 #x0000000000000000))
(assert (= temp406_9 temp406_10))
(assert (= temp406_12 #x0000000000000002))
(assert (= temp406_11 temp406_12))
(assert (= temp406_13 #x0000000000000000))
(assert (= var1387902 temp406_13))
(assert (= temp406_14 #x0000000000000001))
(assert (= var1387923 temp406_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp406_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp406_15)))
(assert (= temp406_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp406_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp406_17 #x0000000000000000))
(assert (= var1521661 temp406_17))
(assert (= temp406_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp406_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp406_19 #x0000000000000000))
(assert (= var1521706 temp406_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp406_20 #x0000000000000000))
(assert (= temp406_21 temp406_20))
(assert (= temp406_22 (select ARGNAME_padding_NAMEEND_VAL temp406_21)))
(assert (= temp406_23 #x0000000000000001))
(assert (= temp406_24 temp406_23))
(assert (= temp406_25 (select ARGNAME_padding_NAMEEND_VAL temp406_24)))
(assert (= temp406_26 #x0000000000000002))
(assert (= temp406_27 temp406_26))
(assert (= temp406_28 (select ARGNAME_padding_NAMEEND_VAL temp406_27)))
(assert (= temp406_29 #x0000000000000003))
(assert (= temp406_30 temp406_29))
(assert (= temp406_31 (select ARGNAME_padding_NAMEEND_VAL temp406_30)))
(assert (= temp406_32 #x0000000000000004))
(assert (= temp406_33 temp406_32))
(assert (= temp406_34 (select ARGNAME_padding_NAMEEND_VAL temp406_33)))
(assert (= temp406_35 #x0000000000000005))
(assert (= temp406_36 temp406_35))
(assert (= temp406_37 (select ARGNAME_padding_NAMEEND_VAL temp406_36)))
(assert (= temp406_38 #x0000000000000000))
(assert (= temp406_39 #x0000000000000000))
(assert (= temp406_40 temp406_39))
(assert (= temp406_41 (select ARGNAME_padding_NAMEEND_VAL temp406_40)))
(assert (= temp406_42 #x0000000000000000))
(assert (= temp406_43 #x0000000000000001))
(assert (= temp406_44 temp406_43))
(assert (= temp406_45 (select ARGNAME_padding_NAMEEND_VAL temp406_44)))
(assert (= temp406_46 #x0000000000000000))
(assert (= temp406_47 #x0000000000000002))
(assert (= temp406_48 temp406_47))
(assert (= temp406_49 (select ARGNAME_padding_NAMEEND_VAL temp406_48)))
(assert (= temp406_50 #x0000000000000000))
(assert (= temp406_51 #x0000000000000003))
(assert (= temp406_52 temp406_51))
(assert (= temp406_53 (select ARGNAME_padding_NAMEEND_VAL temp406_52)))
(assert (= temp406_54 #x0000000000000000))
(assert (= temp406_55 #x0000000000000004))
(assert (= temp406_56 temp406_55))
(assert (= temp406_57 (select ARGNAME_padding_NAMEEND_VAL temp406_56)))
(assert (= temp406_58 #x0000000000000000))
(assert (= temp406_59 #x0000000000000005))
(assert (= temp406_60 temp406_59))
(assert (= temp406_61 (select ARGNAME_padding_NAMEEND_VAL temp406_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp406_41 temp406_38)
             (bvslt temp406_45 temp406_42)
             (bvslt temp406_49 temp406_46)
             (bvslt temp406_53 temp406_50)
             (bvslt temp406_57 temp406_54)
             (bvslt temp406_61 temp406_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp406_62 #x0000000000000000))
(assert (= var2240290 temp406_62))
(assert (= temp406_63 #x0000000000000000))
(assert (= temp406_64 temp406_63))
(assert (= temp406_65 (select ARGNAME_stride_NAMEEND_VAL temp406_64)))
(assert (= temp406_66 #x0000000000000001))
(assert (= temp406_67 temp406_66))
(assert (= temp406_68 (select ARGNAME_stride_NAMEEND_VAL temp406_67)))
(assert (= temp406_69 #x0000000000000002))
(assert (= temp406_70 temp406_69))
(assert (= temp406_71 (select ARGNAME_stride_NAMEEND_VAL temp406_70)))
(assert (= temp406_72 #x0000000000000003))
(assert (= temp406_73 temp406_72))
(assert (= temp406_74 (select ARGNAME_stride_NAMEEND_VAL temp406_73)))
(assert (= temp406_75 #x0000000000000004))
(assert (= temp406_76 temp406_75))
(assert (= temp406_77 (select ARGNAME_stride_NAMEEND_VAL temp406_76)))
(assert (= temp406_78 #x0000000000000005))
(assert (= temp406_79 temp406_78))
(assert (= temp406_80 (select ARGNAME_stride_NAMEEND_VAL temp406_79)))
(assert (= temp406_81 #x0000000000000000))
(assert (= temp406_82 #x0000000000000000))
(assert (= temp406_83 temp406_82))
(assert (= temp406_84 (select ARGNAME_stride_NAMEEND_VAL temp406_83)))
(assert (= temp406_85 #x0000000000000000))
(assert (= temp406_86 #x0000000000000001))
(assert (= temp406_87 temp406_86))
(assert (= temp406_88 (select ARGNAME_stride_NAMEEND_VAL temp406_87)))
(assert (= temp406_89 #x0000000000000000))
(assert (= temp406_90 #x0000000000000002))
(assert (= temp406_91 temp406_90))
(assert (= temp406_92 (select ARGNAME_stride_NAMEEND_VAL temp406_91)))
(assert (= temp406_93 #x0000000000000000))
(assert (= temp406_94 #x0000000000000003))
(assert (= temp406_95 temp406_94))
(assert (= temp406_96 (select ARGNAME_stride_NAMEEND_VAL temp406_95)))
(assert (= temp406_97 #x0000000000000000))
(assert (= temp406_98 #x0000000000000004))
(assert (= temp406_99 temp406_98))
(assert (= temp406_100 (select ARGNAME_stride_NAMEEND_VAL temp406_99)))
(assert (= temp406_101 #x0000000000000000))
(assert (= temp406_102 #x0000000000000005))
(assert (= temp406_103 temp406_102))
(assert (= temp406_104 (select ARGNAME_stride_NAMEEND_VAL temp406_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp406_84 temp406_81)
             (bvsle temp406_88 temp406_85)
             (bvsle temp406_92 temp406_89)
             (bvsle temp406_96 temp406_93)
             (bvsle temp406_100 temp406_97)
             (bvsle temp406_104 temp406_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp406_105 #x0000000000000000))
(assert (= var2240311 temp406_105))
(assert (= temp406_106 #x0000000000000000))
(assert (= var2228402 temp406_106))
(assert (= temp406_107 #x0000000000000000))
(assert (= temp406_108 temp406_107))
(assert (= temp406_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp406_108)))
(assert (= temp406_110 #x0000000000000001))
(assert (= temp406_111 temp406_110))
(assert (= temp406_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp406_111)))
(assert (= temp406_113 #x0000000000000002))
(assert (= temp406_114 temp406_113))
(assert (= temp406_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp406_114)))
(assert (= temp406_116 #x0000000000000003))
(assert (= temp406_117 temp406_116))
(assert (= temp406_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp406_117)))
(assert (= temp406_119 #x0000000000000004))
(assert (= temp406_120 temp406_119))
(assert (= temp406_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp406_120)))
(assert (= temp406_122 #x0000000000000005))
(assert (= temp406_123 temp406_122))
(assert (= temp406_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp406_123)))
(assert (= temp406_126 var2228402))
(assert (= temp406_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp406_126)))
(assert (= temp406_125 temp406_127))
(assert (= var2240356
   (ite (bvslt temp406_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp406_128 #x0000000000000000))
(assert (= var2240356 temp406_128))
(assert (= temp406_129 #x0000000000000000))
(assert (= var2228402 temp406_129))
(assert (= temp406_131 var2228402))
(assert (= temp406_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp406_131)))
(assert (= temp406_130 temp406_132))
(assert (= var2240378 (bvsmod temp406_130 ARGNAME_groups_NAMEEND)))
(assert (= temp406_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp406_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp406_134 #x0000000000000001))
(assert (= var2240379 temp406_134))
(assert (= var2240398 var2240288))
(assert (= temp406_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp406_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp406_136 #x0000000000000001))
(assert (= var2240399 temp406_136))
(assert (= temp406_137 #x0000000000000001))
(assert (= var2229290 temp406_137))
(assert (= temp406_139 var2229290))
(assert (= temp406_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp406_139)))
(assert (= temp406_138 temp406_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp406_138)))
(assert (= temp406_141 #x0000000000000000))
(assert (= var2228402 temp406_141))
(assert (= temp406_143 var2228402))
(assert (= temp406_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp406_143)))
(assert (= temp406_142 temp406_144))
(assert (= temp406_145 #x0000000000000002))
(assert (= var2503529 temp406_145))
(assert (= temp406_146 #x0000000000000001))
(assert (= var2240569 temp406_146))
(assert (= temp406_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp406_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp406_148 #x0000000000000001))
(assert (= var1521778 temp406_148))
(assert (= temp406_149 #x0000000000000001))
(assert (= var1521908 temp406_149))
(assert (= var4010473 var1521908))
(assert (= temp406_150 #x0000000000000000))
(assert (= var4210495 temp406_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp406_151 #x0000000000000002))
(assert (= var4339331 temp406_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp406_152 #x0000000000000001))
(assert (= var1521778 temp406_152))
(model-add temp406_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp406_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp406_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp406_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp406_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp406_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






