(declare-fun temp668_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp668_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp668_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp668_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp668_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp668_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp668_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp668_8 () (_ BitVec 64))
(declare-fun temp668_10 () (_ BitVec 64))
(declare-fun temp668_9 () (_ BitVec 64))
(declare-fun temp668_12 () (_ BitVec 64))
(declare-fun temp668_11 () (_ BitVec 64))
(declare-fun temp668_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp668_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp668_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp668_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp668_17 () (_ BitVec 64))
(declare-fun temp668_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp668_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp668_20 () (_ BitVec 64))
(declare-fun temp668_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp668_22 () (_ BitVec 64))
(declare-fun temp668_23 () (_ BitVec 64))
(declare-fun temp668_24 () (_ BitVec 64))
(declare-fun temp668_25 () (_ BitVec 64))
(declare-fun temp668_26 () (_ BitVec 64))
(declare-fun temp668_27 () (_ BitVec 64))
(declare-fun temp668_28 () (_ BitVec 64))
(declare-fun temp668_29 () (_ BitVec 64))
(declare-fun temp668_30 () (_ BitVec 64))
(declare-fun temp668_31 () (_ BitVec 64))
(declare-fun temp668_32 () (_ BitVec 64))
(declare-fun temp668_33 () (_ BitVec 64))
(declare-fun temp668_34 () (_ BitVec 64))
(declare-fun temp668_35 () (_ BitVec 64))
(declare-fun temp668_36 () (_ BitVec 64))
(declare-fun temp668_37 () (_ BitVec 64))
(declare-fun temp668_38 () (_ BitVec 64))
(declare-fun temp668_39 () (_ BitVec 64))
(declare-fun temp668_40 () (_ BitVec 64))
(declare-fun temp668_41 () (_ BitVec 64))
(declare-fun temp668_42 () (_ BitVec 64))
(declare-fun temp668_43 () (_ BitVec 64))
(declare-fun temp668_44 () (_ BitVec 64))
(declare-fun temp668_45 () (_ BitVec 64))
(declare-fun temp668_46 () (_ BitVec 64))
(declare-fun temp668_47 () (_ BitVec 64))
(declare-fun temp668_48 () (_ BitVec 64))
(declare-fun temp668_49 () (_ BitVec 64))
(declare-fun temp668_50 () (_ BitVec 64))
(declare-fun temp668_51 () (_ BitVec 64))
(declare-fun temp668_52 () (_ BitVec 64))
(declare-fun temp668_53 () (_ BitVec 64))
(declare-fun temp668_54 () (_ BitVec 64))
(declare-fun temp668_55 () (_ BitVec 64))
(declare-fun temp668_56 () (_ BitVec 64))
(declare-fun temp668_57 () (_ BitVec 64))
(declare-fun temp668_58 () (_ BitVec 64))
(declare-fun temp668_59 () (_ BitVec 64))
(declare-fun temp668_60 () (_ BitVec 64))
(declare-fun temp668_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp668_62 () (_ BitVec 64))
(declare-fun temp668_63 () (_ BitVec 64))
(declare-fun temp668_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp668_65 () (_ BitVec 64))
(declare-fun temp668_66 () (_ BitVec 64))
(declare-fun temp668_67 () (_ BitVec 64))
(declare-fun temp668_68 () (_ BitVec 64))
(declare-fun temp668_69 () (_ BitVec 64))
(declare-fun temp668_70 () (_ BitVec 64))
(declare-fun temp668_71 () (_ BitVec 64))
(declare-fun temp668_72 () (_ BitVec 64))
(declare-fun temp668_73 () (_ BitVec 64))
(declare-fun temp668_74 () (_ BitVec 64))
(declare-fun temp668_75 () (_ BitVec 64))
(declare-fun temp668_76 () (_ BitVec 64))
(declare-fun temp668_77 () (_ BitVec 64))
(declare-fun temp668_78 () (_ BitVec 64))
(declare-fun temp668_79 () (_ BitVec 64))
(declare-fun temp668_80 () (_ BitVec 64))
(declare-fun temp668_81 () (_ BitVec 64))
(declare-fun temp668_82 () (_ BitVec 64))
(declare-fun temp668_83 () (_ BitVec 64))
(declare-fun temp668_84 () (_ BitVec 64))
(declare-fun temp668_85 () (_ BitVec 64))
(declare-fun temp668_86 () (_ BitVec 64))
(declare-fun temp668_87 () (_ BitVec 64))
(declare-fun temp668_88 () (_ BitVec 64))
(declare-fun temp668_89 () (_ BitVec 64))
(declare-fun temp668_90 () (_ BitVec 64))
(declare-fun temp668_91 () (_ BitVec 64))
(declare-fun temp668_92 () (_ BitVec 64))
(declare-fun temp668_93 () (_ BitVec 64))
(declare-fun temp668_94 () (_ BitVec 64))
(declare-fun temp668_95 () (_ BitVec 64))
(declare-fun temp668_96 () (_ BitVec 64))
(declare-fun temp668_97 () (_ BitVec 64))
(declare-fun temp668_98 () (_ BitVec 64))
(declare-fun temp668_99 () (_ BitVec 64))
(declare-fun temp668_100 () (_ BitVec 64))
(declare-fun temp668_101 () (_ BitVec 64))
(declare-fun temp668_102 () (_ BitVec 64))
(declare-fun temp668_103 () (_ BitVec 64))
(declare-fun temp668_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp668_105 () (_ BitVec 64))
(declare-fun temp668_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp668_107 () (_ BitVec 64))
(declare-fun temp668_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp668_109 () (_ BitVec 64))
(declare-fun temp668_110 () (_ BitVec 64))
(declare-fun temp668_111 () (_ BitVec 64))
(declare-fun temp668_112 () (_ BitVec 64))
(declare-fun temp668_113 () (_ BitVec 64))
(declare-fun temp668_114 () (_ BitVec 64))
(declare-fun temp668_115 () (_ BitVec 64))
(declare-fun temp668_116 () (_ BitVec 64))
(declare-fun temp668_117 () (_ BitVec 64))
(declare-fun temp668_118 () (_ BitVec 64))
(declare-fun temp668_119 () (_ BitVec 64))
(declare-fun temp668_120 () (_ BitVec 64))
(declare-fun temp668_121 () (_ BitVec 64))
(declare-fun temp668_122 () (_ BitVec 64))
(declare-fun temp668_123 () (_ BitVec 64))
(declare-fun temp668_124 () (_ BitVec 64))
(declare-fun temp668_126 () (_ BitVec 64))
(declare-fun temp668_127 () (_ BitVec 64))
(declare-fun temp668_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp668_128 () (_ BitVec 64))
(declare-fun temp668_129 () (_ BitVec 64))
(declare-fun temp668_131 () (_ BitVec 64))
(declare-fun temp668_132 () (_ BitVec 64))
(declare-fun temp668_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp668_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp668_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp668_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp668_136 () (_ BitVec 64))
(declare-fun temp668_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp668_139 () (_ BitVec 64))
(declare-fun temp668_140 () (_ BitVec 64))
(declare-fun temp668_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp668_141 () (_ BitVec 64))
(declare-fun temp668_143 () (_ BitVec 64))
(declare-fun temp668_144 () (_ BitVec 64))
(declare-fun temp668_142 () (_ BitVec 64))
(declare-fun temp668_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp668_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp668_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp668_148 () (_ BitVec 64))
(declare-fun temp668_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp668_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp668_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp668_153 () (_ BitVec 64))
(declare-fun temp668_152 () (_ BitVec 64))
(declare-fun temp668_155 () (_ BitVec 64))
(declare-fun temp668_154 () (_ BitVec 64))
(declare-fun temp668_156 () (_ BitVec 64))
(assert (= temp668_1 #x0000000000000002))
(assert (= var989741 temp668_1))
(assert (= temp668_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp668_2)))
(assert (= temp668_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp668_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp668_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp668_4)))
(assert (= temp668_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp668_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp668_6 #x0000000000000000))
(assert (= var989776 temp668_6))
(assert (= temp668_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp668_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp668_8 #x0000000000000001))
(assert (= var989810 temp668_8))
(assert (= temp668_10 #x0000000000000000))
(assert (= temp668_9 temp668_10))
(assert (= temp668_12 #x0000000000000002))
(assert (= temp668_11 temp668_12))
(assert (= temp668_13 #x0000000000000000))
(assert (= var1387902 temp668_13))
(assert (= temp668_14 #x0000000000000001))
(assert (= var1387923 temp668_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp668_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp668_15)))
(assert (= temp668_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp668_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_17 #x0000000000000000))
(assert (= var1521661 temp668_17))
(assert (= temp668_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp668_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_19 #x0000000000000000))
(assert (= var1521706 temp668_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp668_20 #x0000000000000000))
(assert (= temp668_21 temp668_20))
(assert (= temp668_22 (select ARGNAME_padding_NAMEEND_VAL temp668_21)))
(assert (= temp668_23 #x0000000000000001))
(assert (= temp668_24 temp668_23))
(assert (= temp668_25 (select ARGNAME_padding_NAMEEND_VAL temp668_24)))
(assert (= temp668_26 #x0000000000000002))
(assert (= temp668_27 temp668_26))
(assert (= temp668_28 (select ARGNAME_padding_NAMEEND_VAL temp668_27)))
(assert (= temp668_29 #x0000000000000003))
(assert (= temp668_30 temp668_29))
(assert (= temp668_31 (select ARGNAME_padding_NAMEEND_VAL temp668_30)))
(assert (= temp668_32 #x0000000000000004))
(assert (= temp668_33 temp668_32))
(assert (= temp668_34 (select ARGNAME_padding_NAMEEND_VAL temp668_33)))
(assert (= temp668_35 #x0000000000000005))
(assert (= temp668_36 temp668_35))
(assert (= temp668_37 (select ARGNAME_padding_NAMEEND_VAL temp668_36)))
(assert (= temp668_38 #x0000000000000000))
(assert (= temp668_39 #x0000000000000000))
(assert (= temp668_40 temp668_39))
(assert (= temp668_41 (select ARGNAME_padding_NAMEEND_VAL temp668_40)))
(assert (= temp668_42 #x0000000000000000))
(assert (= temp668_43 #x0000000000000001))
(assert (= temp668_44 temp668_43))
(assert (= temp668_45 (select ARGNAME_padding_NAMEEND_VAL temp668_44)))
(assert (= temp668_46 #x0000000000000000))
(assert (= temp668_47 #x0000000000000002))
(assert (= temp668_48 temp668_47))
(assert (= temp668_49 (select ARGNAME_padding_NAMEEND_VAL temp668_48)))
(assert (= temp668_50 #x0000000000000000))
(assert (= temp668_51 #x0000000000000003))
(assert (= temp668_52 temp668_51))
(assert (= temp668_53 (select ARGNAME_padding_NAMEEND_VAL temp668_52)))
(assert (= temp668_54 #x0000000000000000))
(assert (= temp668_55 #x0000000000000004))
(assert (= temp668_56 temp668_55))
(assert (= temp668_57 (select ARGNAME_padding_NAMEEND_VAL temp668_56)))
(assert (= temp668_58 #x0000000000000000))
(assert (= temp668_59 #x0000000000000005))
(assert (= temp668_60 temp668_59))
(assert (= temp668_61 (select ARGNAME_padding_NAMEEND_VAL temp668_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp668_41 temp668_38)
             (bvslt temp668_45 temp668_42)
             (bvslt temp668_49 temp668_46)
             (bvslt temp668_53 temp668_50)
             (bvslt temp668_57 temp668_54)
             (bvslt temp668_61 temp668_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_62 #x0000000000000000))
(assert (= var2240290 temp668_62))
(assert (= temp668_63 #x0000000000000000))
(assert (= temp668_64 temp668_63))
(assert (= temp668_65 (select ARGNAME_stride_NAMEEND_VAL temp668_64)))
(assert (= temp668_66 #x0000000000000001))
(assert (= temp668_67 temp668_66))
(assert (= temp668_68 (select ARGNAME_stride_NAMEEND_VAL temp668_67)))
(assert (= temp668_69 #x0000000000000002))
(assert (= temp668_70 temp668_69))
(assert (= temp668_71 (select ARGNAME_stride_NAMEEND_VAL temp668_70)))
(assert (= temp668_72 #x0000000000000003))
(assert (= temp668_73 temp668_72))
(assert (= temp668_74 (select ARGNAME_stride_NAMEEND_VAL temp668_73)))
(assert (= temp668_75 #x0000000000000004))
(assert (= temp668_76 temp668_75))
(assert (= temp668_77 (select ARGNAME_stride_NAMEEND_VAL temp668_76)))
(assert (= temp668_78 #x0000000000000005))
(assert (= temp668_79 temp668_78))
(assert (= temp668_80 (select ARGNAME_stride_NAMEEND_VAL temp668_79)))
(assert (= temp668_81 #x0000000000000000))
(assert (= temp668_82 #x0000000000000000))
(assert (= temp668_83 temp668_82))
(assert (= temp668_84 (select ARGNAME_stride_NAMEEND_VAL temp668_83)))
(assert (= temp668_85 #x0000000000000000))
(assert (= temp668_86 #x0000000000000001))
(assert (= temp668_87 temp668_86))
(assert (= temp668_88 (select ARGNAME_stride_NAMEEND_VAL temp668_87)))
(assert (= temp668_89 #x0000000000000000))
(assert (= temp668_90 #x0000000000000002))
(assert (= temp668_91 temp668_90))
(assert (= temp668_92 (select ARGNAME_stride_NAMEEND_VAL temp668_91)))
(assert (= temp668_93 #x0000000000000000))
(assert (= temp668_94 #x0000000000000003))
(assert (= temp668_95 temp668_94))
(assert (= temp668_96 (select ARGNAME_stride_NAMEEND_VAL temp668_95)))
(assert (= temp668_97 #x0000000000000000))
(assert (= temp668_98 #x0000000000000004))
(assert (= temp668_99 temp668_98))
(assert (= temp668_100 (select ARGNAME_stride_NAMEEND_VAL temp668_99)))
(assert (= temp668_101 #x0000000000000000))
(assert (= temp668_102 #x0000000000000005))
(assert (= temp668_103 temp668_102))
(assert (= temp668_104 (select ARGNAME_stride_NAMEEND_VAL temp668_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp668_84 temp668_81)
             (bvsle temp668_88 temp668_85)
             (bvsle temp668_92 temp668_89)
             (bvsle temp668_96 temp668_93)
             (bvsle temp668_100 temp668_97)
             (bvsle temp668_104 temp668_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_105 #x0000000000000000))
(assert (= var2240311 temp668_105))
(assert (= temp668_106 #x0000000000000000))
(assert (= var2228402 temp668_106))
(assert (= temp668_107 #x0000000000000000))
(assert (= temp668_108 temp668_107))
(assert (= temp668_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp668_108)))
(assert (= temp668_110 #x0000000000000001))
(assert (= temp668_111 temp668_110))
(assert (= temp668_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp668_111)))
(assert (= temp668_113 #x0000000000000002))
(assert (= temp668_114 temp668_113))
(assert (= temp668_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp668_114)))
(assert (= temp668_116 #x0000000000000003))
(assert (= temp668_117 temp668_116))
(assert (= temp668_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp668_117)))
(assert (= temp668_119 #x0000000000000004))
(assert (= temp668_120 temp668_119))
(assert (= temp668_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp668_120)))
(assert (= temp668_122 #x0000000000000005))
(assert (= temp668_123 temp668_122))
(assert (= temp668_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp668_123)))
(assert (= temp668_126 var2228402))
(assert (= temp668_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp668_126)))
(assert (= temp668_125 temp668_127))
(assert (= var2240356
   (ite (bvslt temp668_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_128 #x0000000000000000))
(assert (= var2240356 temp668_128))
(assert (= temp668_129 #x0000000000000000))
(assert (= var2228402 temp668_129))
(assert (= temp668_131 var2228402))
(assert (= temp668_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp668_131)))
(assert (= temp668_130 temp668_132))
(assert (= var2240378 (bvsmod temp668_130 ARGNAME_groups_NAMEEND)))
(assert (= temp668_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp668_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp668_134 #x0000000000000001))
(assert (= var2240379 temp668_134))
(assert (= var2240398 var2240288))
(assert (= temp668_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp668_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp668_136 #x0000000000000001))
(assert (= var2240399 temp668_136))
(assert (= temp668_137 #x0000000000000001))
(assert (= var2229290 temp668_137))
(assert (= temp668_139 var2229290))
(assert (= temp668_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp668_139)))
(assert (= temp668_138 temp668_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp668_138)))
(assert (= temp668_141 #x0000000000000000))
(assert (= var2228402 temp668_141))
(assert (= temp668_143 var2228402))
(assert (= temp668_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp668_143)))
(assert (= temp668_142 temp668_144))
(assert (= temp668_145 #x0000000000000002))
(assert (= var2503529 temp668_145))
(assert (= temp668_146 #x0000000000000001))
(assert (= var2240569 temp668_146))
(assert (= temp668_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp668_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_148 #x0000000000000001))
(assert (= var1521778 temp668_148))
(assert (= temp668_149 #x0000000000000001))
(assert (= var1521908 temp668_149))
(assert (= var4010473 var1521908))
(assert (= temp668_150 #x0000000000000000))
(assert (= var4210495 temp668_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp668_151 #x0000000000000002))
(assert (= var4339331 temp668_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp668_153 #xffffffffffffffff))
(assert (= temp668_152 temp668_153))
(assert (= temp668_155 #xffffffffffffffff))
(assert (= temp668_154 temp668_155))
(assert (= temp668_156 #x0000000000000001))
(assert (= var1521778 temp668_156))
(model-add temp668_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp668_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp668_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp668_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp668_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp668_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






