(declare-fun temp842_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp842_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp842_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp842_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp842_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp842_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp842_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp842_8 () (_ BitVec 64))
(declare-fun temp842_10 () (_ BitVec 64))
(declare-fun temp842_9 () (_ BitVec 64))
(declare-fun temp842_12 () (_ BitVec 64))
(declare-fun temp842_11 () (_ BitVec 64))
(declare-fun temp842_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp842_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp842_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp842_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp842_17 () (_ BitVec 64))
(declare-fun temp842_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp842_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp842_20 () (_ BitVec 64))
(declare-fun temp842_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp842_22 () (_ BitVec 64))
(declare-fun temp842_23 () (_ BitVec 64))
(declare-fun temp842_24 () (_ BitVec 64))
(declare-fun temp842_25 () (_ BitVec 64))
(declare-fun temp842_26 () (_ BitVec 64))
(declare-fun temp842_27 () (_ BitVec 64))
(declare-fun temp842_28 () (_ BitVec 64))
(declare-fun temp842_29 () (_ BitVec 64))
(declare-fun temp842_30 () (_ BitVec 64))
(declare-fun temp842_31 () (_ BitVec 64))
(declare-fun temp842_32 () (_ BitVec 64))
(declare-fun temp842_33 () (_ BitVec 64))
(declare-fun temp842_34 () (_ BitVec 64))
(declare-fun temp842_35 () (_ BitVec 64))
(declare-fun temp842_36 () (_ BitVec 64))
(declare-fun temp842_37 () (_ BitVec 64))
(declare-fun temp842_38 () (_ BitVec 64))
(declare-fun temp842_39 () (_ BitVec 64))
(declare-fun temp842_40 () (_ BitVec 64))
(declare-fun temp842_41 () (_ BitVec 64))
(declare-fun temp842_42 () (_ BitVec 64))
(declare-fun temp842_43 () (_ BitVec 64))
(declare-fun temp842_44 () (_ BitVec 64))
(declare-fun temp842_45 () (_ BitVec 64))
(declare-fun temp842_46 () (_ BitVec 64))
(declare-fun temp842_47 () (_ BitVec 64))
(declare-fun temp842_48 () (_ BitVec 64))
(declare-fun temp842_49 () (_ BitVec 64))
(declare-fun temp842_50 () (_ BitVec 64))
(declare-fun temp842_51 () (_ BitVec 64))
(declare-fun temp842_52 () (_ BitVec 64))
(declare-fun temp842_53 () (_ BitVec 64))
(declare-fun temp842_54 () (_ BitVec 64))
(declare-fun temp842_55 () (_ BitVec 64))
(declare-fun temp842_56 () (_ BitVec 64))
(declare-fun temp842_57 () (_ BitVec 64))
(declare-fun temp842_58 () (_ BitVec 64))
(declare-fun temp842_59 () (_ BitVec 64))
(declare-fun temp842_60 () (_ BitVec 64))
(declare-fun temp842_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp842_62 () (_ BitVec 64))
(declare-fun temp842_63 () (_ BitVec 64))
(declare-fun temp842_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp842_65 () (_ BitVec 64))
(declare-fun temp842_66 () (_ BitVec 64))
(declare-fun temp842_67 () (_ BitVec 64))
(declare-fun temp842_68 () (_ BitVec 64))
(declare-fun temp842_69 () (_ BitVec 64))
(declare-fun temp842_70 () (_ BitVec 64))
(declare-fun temp842_71 () (_ BitVec 64))
(declare-fun temp842_72 () (_ BitVec 64))
(declare-fun temp842_73 () (_ BitVec 64))
(declare-fun temp842_74 () (_ BitVec 64))
(declare-fun temp842_75 () (_ BitVec 64))
(declare-fun temp842_76 () (_ BitVec 64))
(declare-fun temp842_77 () (_ BitVec 64))
(declare-fun temp842_78 () (_ BitVec 64))
(declare-fun temp842_79 () (_ BitVec 64))
(declare-fun temp842_80 () (_ BitVec 64))
(declare-fun temp842_81 () (_ BitVec 64))
(declare-fun temp842_82 () (_ BitVec 64))
(declare-fun temp842_83 () (_ BitVec 64))
(declare-fun temp842_84 () (_ BitVec 64))
(declare-fun temp842_85 () (_ BitVec 64))
(declare-fun temp842_86 () (_ BitVec 64))
(declare-fun temp842_87 () (_ BitVec 64))
(declare-fun temp842_88 () (_ BitVec 64))
(declare-fun temp842_89 () (_ BitVec 64))
(declare-fun temp842_90 () (_ BitVec 64))
(declare-fun temp842_91 () (_ BitVec 64))
(declare-fun temp842_92 () (_ BitVec 64))
(declare-fun temp842_93 () (_ BitVec 64))
(declare-fun temp842_94 () (_ BitVec 64))
(declare-fun temp842_95 () (_ BitVec 64))
(declare-fun temp842_96 () (_ BitVec 64))
(declare-fun temp842_97 () (_ BitVec 64))
(declare-fun temp842_98 () (_ BitVec 64))
(declare-fun temp842_99 () (_ BitVec 64))
(declare-fun temp842_100 () (_ BitVec 64))
(declare-fun temp842_101 () (_ BitVec 64))
(declare-fun temp842_102 () (_ BitVec 64))
(declare-fun temp842_103 () (_ BitVec 64))
(declare-fun temp842_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp842_105 () (_ BitVec 64))
(declare-fun temp842_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp842_107 () (_ BitVec 64))
(declare-fun temp842_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp842_109 () (_ BitVec 64))
(declare-fun temp842_110 () (_ BitVec 64))
(declare-fun temp842_111 () (_ BitVec 64))
(declare-fun temp842_112 () (_ BitVec 64))
(declare-fun temp842_113 () (_ BitVec 64))
(declare-fun temp842_114 () (_ BitVec 64))
(declare-fun temp842_115 () (_ BitVec 64))
(declare-fun temp842_116 () (_ BitVec 64))
(declare-fun temp842_117 () (_ BitVec 64))
(declare-fun temp842_118 () (_ BitVec 64))
(declare-fun temp842_119 () (_ BitVec 64))
(declare-fun temp842_120 () (_ BitVec 64))
(declare-fun temp842_121 () (_ BitVec 64))
(declare-fun temp842_122 () (_ BitVec 64))
(declare-fun temp842_123 () (_ BitVec 64))
(declare-fun temp842_124 () (_ BitVec 64))
(declare-fun temp842_126 () (_ BitVec 64))
(declare-fun temp842_127 () (_ BitVec 64))
(declare-fun temp842_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp842_128 () (_ BitVec 64))
(declare-fun temp842_129 () (_ BitVec 64))
(declare-fun temp842_131 () (_ BitVec 64))
(declare-fun temp842_132 () (_ BitVec 64))
(declare-fun temp842_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp842_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp842_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp842_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp842_136 () (_ BitVec 64))
(declare-fun temp842_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp842_139 () (_ BitVec 64))
(declare-fun temp842_140 () (_ BitVec 64))
(declare-fun temp842_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp842_141 () (_ BitVec 64))
(declare-fun temp842_143 () (_ BitVec 64))
(declare-fun temp842_144 () (_ BitVec 64))
(declare-fun temp842_142 () (_ BitVec 64))
(declare-fun temp842_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp842_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp842_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp842_148 () (_ BitVec 64))
(declare-fun temp842_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp842_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp842_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp842_152 () (_ BitVec 64))
(assert (= temp842_1 #x0000000000000002))
(assert (= var989741 temp842_1))
(assert (= temp842_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp842_2)))
(assert (= temp842_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp842_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp842_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp842_4)))
(assert (= temp842_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp842_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp842_6 #x0000000000000000))
(assert (= var989776 temp842_6))
(assert (= temp842_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp842_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp842_8 #x0000000000000001))
(assert (= var989810 temp842_8))
(assert (= temp842_10 #x0000000000000000))
(assert (= temp842_9 temp842_10))
(assert (= temp842_12 #x0000000000000002))
(assert (= temp842_11 temp842_12))
(assert (= temp842_13 #x0000000000000000))
(assert (= var1387902 temp842_13))
(assert (= temp842_14 #x0000000000000001))
(assert (= var1387923 temp842_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp842_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp842_15)))
(assert (= temp842_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp842_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_17 #x0000000000000000))
(assert (= var1521661 temp842_17))
(assert (= temp842_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp842_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_19 #x0000000000000000))
(assert (= var1521706 temp842_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp842_20 #x0000000000000000))
(assert (= temp842_21 temp842_20))
(assert (= temp842_22 (select ARGNAME_padding_NAMEEND_VAL temp842_21)))
(assert (= temp842_23 #x0000000000000001))
(assert (= temp842_24 temp842_23))
(assert (= temp842_25 (select ARGNAME_padding_NAMEEND_VAL temp842_24)))
(assert (= temp842_26 #x0000000000000002))
(assert (= temp842_27 temp842_26))
(assert (= temp842_28 (select ARGNAME_padding_NAMEEND_VAL temp842_27)))
(assert (= temp842_29 #x0000000000000003))
(assert (= temp842_30 temp842_29))
(assert (= temp842_31 (select ARGNAME_padding_NAMEEND_VAL temp842_30)))
(assert (= temp842_32 #x0000000000000004))
(assert (= temp842_33 temp842_32))
(assert (= temp842_34 (select ARGNAME_padding_NAMEEND_VAL temp842_33)))
(assert (= temp842_35 #x0000000000000005))
(assert (= temp842_36 temp842_35))
(assert (= temp842_37 (select ARGNAME_padding_NAMEEND_VAL temp842_36)))
(assert (= temp842_38 #x0000000000000000))
(assert (= temp842_39 #x0000000000000000))
(assert (= temp842_40 temp842_39))
(assert (= temp842_41 (select ARGNAME_padding_NAMEEND_VAL temp842_40)))
(assert (= temp842_42 #x0000000000000000))
(assert (= temp842_43 #x0000000000000001))
(assert (= temp842_44 temp842_43))
(assert (= temp842_45 (select ARGNAME_padding_NAMEEND_VAL temp842_44)))
(assert (= temp842_46 #x0000000000000000))
(assert (= temp842_47 #x0000000000000002))
(assert (= temp842_48 temp842_47))
(assert (= temp842_49 (select ARGNAME_padding_NAMEEND_VAL temp842_48)))
(assert (= temp842_50 #x0000000000000000))
(assert (= temp842_51 #x0000000000000003))
(assert (= temp842_52 temp842_51))
(assert (= temp842_53 (select ARGNAME_padding_NAMEEND_VAL temp842_52)))
(assert (= temp842_54 #x0000000000000000))
(assert (= temp842_55 #x0000000000000004))
(assert (= temp842_56 temp842_55))
(assert (= temp842_57 (select ARGNAME_padding_NAMEEND_VAL temp842_56)))
(assert (= temp842_58 #x0000000000000000))
(assert (= temp842_59 #x0000000000000005))
(assert (= temp842_60 temp842_59))
(assert (= temp842_61 (select ARGNAME_padding_NAMEEND_VAL temp842_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp842_41 temp842_38)
             (bvslt temp842_45 temp842_42)
             (bvslt temp842_49 temp842_46)
             (bvslt temp842_53 temp842_50)
             (bvslt temp842_57 temp842_54)
             (bvslt temp842_61 temp842_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_62 #x0000000000000000))
(assert (= var2240290 temp842_62))
(assert (= temp842_63 #x0000000000000000))
(assert (= temp842_64 temp842_63))
(assert (= temp842_65 (select ARGNAME_stride_NAMEEND_VAL temp842_64)))
(assert (= temp842_66 #x0000000000000001))
(assert (= temp842_67 temp842_66))
(assert (= temp842_68 (select ARGNAME_stride_NAMEEND_VAL temp842_67)))
(assert (= temp842_69 #x0000000000000002))
(assert (= temp842_70 temp842_69))
(assert (= temp842_71 (select ARGNAME_stride_NAMEEND_VAL temp842_70)))
(assert (= temp842_72 #x0000000000000003))
(assert (= temp842_73 temp842_72))
(assert (= temp842_74 (select ARGNAME_stride_NAMEEND_VAL temp842_73)))
(assert (= temp842_75 #x0000000000000004))
(assert (= temp842_76 temp842_75))
(assert (= temp842_77 (select ARGNAME_stride_NAMEEND_VAL temp842_76)))
(assert (= temp842_78 #x0000000000000005))
(assert (= temp842_79 temp842_78))
(assert (= temp842_80 (select ARGNAME_stride_NAMEEND_VAL temp842_79)))
(assert (= temp842_81 #x0000000000000000))
(assert (= temp842_82 #x0000000000000000))
(assert (= temp842_83 temp842_82))
(assert (= temp842_84 (select ARGNAME_stride_NAMEEND_VAL temp842_83)))
(assert (= temp842_85 #x0000000000000000))
(assert (= temp842_86 #x0000000000000001))
(assert (= temp842_87 temp842_86))
(assert (= temp842_88 (select ARGNAME_stride_NAMEEND_VAL temp842_87)))
(assert (= temp842_89 #x0000000000000000))
(assert (= temp842_90 #x0000000000000002))
(assert (= temp842_91 temp842_90))
(assert (= temp842_92 (select ARGNAME_stride_NAMEEND_VAL temp842_91)))
(assert (= temp842_93 #x0000000000000000))
(assert (= temp842_94 #x0000000000000003))
(assert (= temp842_95 temp842_94))
(assert (= temp842_96 (select ARGNAME_stride_NAMEEND_VAL temp842_95)))
(assert (= temp842_97 #x0000000000000000))
(assert (= temp842_98 #x0000000000000004))
(assert (= temp842_99 temp842_98))
(assert (= temp842_100 (select ARGNAME_stride_NAMEEND_VAL temp842_99)))
(assert (= temp842_101 #x0000000000000000))
(assert (= temp842_102 #x0000000000000005))
(assert (= temp842_103 temp842_102))
(assert (= temp842_104 (select ARGNAME_stride_NAMEEND_VAL temp842_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp842_84 temp842_81)
             (bvsle temp842_88 temp842_85)
             (bvsle temp842_92 temp842_89)
             (bvsle temp842_96 temp842_93)
             (bvsle temp842_100 temp842_97)
             (bvsle temp842_104 temp842_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_105 #x0000000000000000))
(assert (= var2240311 temp842_105))
(assert (= temp842_106 #x0000000000000000))
(assert (= var2228402 temp842_106))
(assert (= temp842_107 #x0000000000000000))
(assert (= temp842_108 temp842_107))
(assert (= temp842_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_108)))
(assert (= temp842_110 #x0000000000000001))
(assert (= temp842_111 temp842_110))
(assert (= temp842_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_111)))
(assert (= temp842_113 #x0000000000000002))
(assert (= temp842_114 temp842_113))
(assert (= temp842_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_114)))
(assert (= temp842_116 #x0000000000000003))
(assert (= temp842_117 temp842_116))
(assert (= temp842_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_117)))
(assert (= temp842_119 #x0000000000000004))
(assert (= temp842_120 temp842_119))
(assert (= temp842_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_120)))
(assert (= temp842_122 #x0000000000000005))
(assert (= temp842_123 temp842_122))
(assert (= temp842_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_123)))
(assert (= temp842_126 var2228402))
(assert (= temp842_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_126)))
(assert (= temp842_125 temp842_127))
(assert (= var2240356
   (ite (bvslt temp842_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_128 #x0000000000000000))
(assert (= var2240356 temp842_128))
(assert (= temp842_129 #x0000000000000000))
(assert (= var2228402 temp842_129))
(assert (= temp842_131 var2228402))
(assert (= temp842_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_131)))
(assert (= temp842_130 temp842_132))
(assert (= var2240378 (bvsmod temp842_130 ARGNAME_groups_NAMEEND)))
(assert (= temp842_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp842_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp842_134 #x0000000000000001))
(assert (= var2240379 temp842_134))
(assert (= var2240398 var2240288))
(assert (= temp842_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp842_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp842_136 #x0000000000000001))
(assert (= var2240399 temp842_136))
(assert (= temp842_137 #x0000000000000001))
(assert (= var2229290 temp842_137))
(assert (= temp842_139 var2229290))
(assert (= temp842_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_139)))
(assert (= temp842_138 temp842_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp842_138)))
(assert (= temp842_141 #x0000000000000000))
(assert (= var2228402 temp842_141))
(assert (= temp842_143 var2228402))
(assert (= temp842_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_143)))
(assert (= temp842_142 temp842_144))
(assert (= temp842_145 #x0000000000000002))
(assert (= var2503529 temp842_145))
(assert (= temp842_146 #x0000000000000001))
(assert (= var2240569 temp842_146))
(assert (= temp842_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp842_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_148 #x0000000000000001))
(assert (= var1521778 temp842_148))
(assert (= temp842_149 #x0000000000000001))
(assert (= var1521908 temp842_149))
(assert (= var4010473 var1521908))
(assert (= temp842_150 #x0000000000000000))
(assert (= var4210495 temp842_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp842_151 #x0000000000000002))
(assert (= var4339331 temp842_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp842_152 #x0000000000000001))
(assert (= var1521778 temp842_152))
(model-add temp842_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp842_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp842_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp842_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp842_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp842_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






