(declare-fun temp85_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp85_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp85_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp85_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp85_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp85_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp85_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp85_8 () (_ BitVec 64))
(declare-fun temp85_10 () (_ BitVec 64))
(declare-fun temp85_9 () (_ BitVec 64))
(declare-fun temp85_12 () (_ BitVec 64))
(declare-fun temp85_11 () (_ BitVec 64))
(declare-fun temp85_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp85_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp85_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp85_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp85_17 () (_ BitVec 64))
(declare-fun temp85_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp85_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp85_20 () (_ BitVec 64))
(declare-fun temp85_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp85_22 () (_ BitVec 64))
(declare-fun temp85_23 () (_ BitVec 64))
(declare-fun temp85_24 () (_ BitVec 64))
(declare-fun temp85_25 () (_ BitVec 64))
(declare-fun temp85_26 () (_ BitVec 64))
(declare-fun temp85_27 () (_ BitVec 64))
(declare-fun temp85_28 () (_ BitVec 64))
(declare-fun temp85_29 () (_ BitVec 64))
(declare-fun temp85_30 () (_ BitVec 64))
(declare-fun temp85_31 () (_ BitVec 64))
(declare-fun temp85_32 () (_ BitVec 64))
(declare-fun temp85_33 () (_ BitVec 64))
(declare-fun temp85_34 () (_ BitVec 64))
(declare-fun temp85_35 () (_ BitVec 64))
(declare-fun temp85_36 () (_ BitVec 64))
(declare-fun temp85_37 () (_ BitVec 64))
(declare-fun temp85_38 () (_ BitVec 64))
(declare-fun temp85_39 () (_ BitVec 64))
(declare-fun temp85_40 () (_ BitVec 64))
(declare-fun temp85_41 () (_ BitVec 64))
(declare-fun temp85_42 () (_ BitVec 64))
(declare-fun temp85_43 () (_ BitVec 64))
(declare-fun temp85_44 () (_ BitVec 64))
(declare-fun temp85_45 () (_ BitVec 64))
(declare-fun temp85_46 () (_ BitVec 64))
(declare-fun temp85_47 () (_ BitVec 64))
(declare-fun temp85_48 () (_ BitVec 64))
(declare-fun temp85_49 () (_ BitVec 64))
(declare-fun temp85_50 () (_ BitVec 64))
(declare-fun temp85_51 () (_ BitVec 64))
(declare-fun temp85_52 () (_ BitVec 64))
(declare-fun temp85_53 () (_ BitVec 64))
(declare-fun temp85_54 () (_ BitVec 64))
(declare-fun temp85_55 () (_ BitVec 64))
(declare-fun temp85_56 () (_ BitVec 64))
(declare-fun temp85_57 () (_ BitVec 64))
(declare-fun temp85_58 () (_ BitVec 64))
(declare-fun temp85_59 () (_ BitVec 64))
(declare-fun temp85_60 () (_ BitVec 64))
(declare-fun temp85_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp85_62 () (_ BitVec 64))
(declare-fun temp85_63 () (_ BitVec 64))
(declare-fun temp85_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp85_65 () (_ BitVec 64))
(declare-fun temp85_66 () (_ BitVec 64))
(declare-fun temp85_67 () (_ BitVec 64))
(declare-fun temp85_68 () (_ BitVec 64))
(declare-fun temp85_69 () (_ BitVec 64))
(declare-fun temp85_70 () (_ BitVec 64))
(declare-fun temp85_71 () (_ BitVec 64))
(declare-fun temp85_72 () (_ BitVec 64))
(declare-fun temp85_73 () (_ BitVec 64))
(declare-fun temp85_74 () (_ BitVec 64))
(declare-fun temp85_75 () (_ BitVec 64))
(declare-fun temp85_76 () (_ BitVec 64))
(declare-fun temp85_77 () (_ BitVec 64))
(declare-fun temp85_78 () (_ BitVec 64))
(declare-fun temp85_79 () (_ BitVec 64))
(declare-fun temp85_80 () (_ BitVec 64))
(declare-fun temp85_81 () (_ BitVec 64))
(declare-fun temp85_82 () (_ BitVec 64))
(declare-fun temp85_83 () (_ BitVec 64))
(declare-fun temp85_84 () (_ BitVec 64))
(declare-fun temp85_85 () (_ BitVec 64))
(declare-fun temp85_86 () (_ BitVec 64))
(declare-fun temp85_87 () (_ BitVec 64))
(declare-fun temp85_88 () (_ BitVec 64))
(declare-fun temp85_89 () (_ BitVec 64))
(declare-fun temp85_90 () (_ BitVec 64))
(declare-fun temp85_91 () (_ BitVec 64))
(declare-fun temp85_92 () (_ BitVec 64))
(declare-fun temp85_93 () (_ BitVec 64))
(declare-fun temp85_94 () (_ BitVec 64))
(declare-fun temp85_95 () (_ BitVec 64))
(declare-fun temp85_96 () (_ BitVec 64))
(declare-fun temp85_97 () (_ BitVec 64))
(declare-fun temp85_98 () (_ BitVec 64))
(declare-fun temp85_99 () (_ BitVec 64))
(declare-fun temp85_100 () (_ BitVec 64))
(declare-fun temp85_101 () (_ BitVec 64))
(declare-fun temp85_102 () (_ BitVec 64))
(declare-fun temp85_103 () (_ BitVec 64))
(declare-fun temp85_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp85_105 () (_ BitVec 64))
(declare-fun temp85_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp85_107 () (_ BitVec 64))
(declare-fun temp85_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp85_109 () (_ BitVec 64))
(declare-fun temp85_110 () (_ BitVec 64))
(declare-fun temp85_111 () (_ BitVec 64))
(declare-fun temp85_112 () (_ BitVec 64))
(declare-fun temp85_113 () (_ BitVec 64))
(declare-fun temp85_114 () (_ BitVec 64))
(declare-fun temp85_115 () (_ BitVec 64))
(declare-fun temp85_116 () (_ BitVec 64))
(declare-fun temp85_117 () (_ BitVec 64))
(declare-fun temp85_118 () (_ BitVec 64))
(declare-fun temp85_119 () (_ BitVec 64))
(declare-fun temp85_120 () (_ BitVec 64))
(declare-fun temp85_121 () (_ BitVec 64))
(declare-fun temp85_122 () (_ BitVec 64))
(declare-fun temp85_123 () (_ BitVec 64))
(declare-fun temp85_124 () (_ BitVec 64))
(declare-fun temp85_126 () (_ BitVec 64))
(declare-fun temp85_127 () (_ BitVec 64))
(declare-fun temp85_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp85_128 () (_ BitVec 64))
(declare-fun temp85_129 () (_ BitVec 64))
(declare-fun temp85_131 () (_ BitVec 64))
(declare-fun temp85_132 () (_ BitVec 64))
(declare-fun temp85_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp85_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp85_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp85_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp85_136 () (_ BitVec 64))
(declare-fun temp85_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp85_139 () (_ BitVec 64))
(declare-fun temp85_140 () (_ BitVec 64))
(declare-fun temp85_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp85_141 () (_ BitVec 64))
(declare-fun temp85_143 () (_ BitVec 64))
(declare-fun temp85_144 () (_ BitVec 64))
(declare-fun temp85_142 () (_ BitVec 64))
(declare-fun temp85_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp85_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp85_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp85_148 () (_ BitVec 64))
(declare-fun temp85_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp85_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp85_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var1522214 () (_ BitVec 64))
(declare-fun temp85_152 () (_ BitVec 64))
(declare-fun var1522215 () (_ BitVec 64))
(declare-fun temp85_154 () (_ BitVec 64))
(declare-fun temp85_153 () (_ BitVec 64))
(declare-fun temp85_155 () (_ BitVec 64))
(declare-fun var6229482 () (_ BitVec 64))
(declare-fun temp85_157 () (_ BitVec 64))
(declare-fun temp85_156 () (_ BitVec 64))
(declare-fun temp85_158 () (_ BitVec 64))
(assert (= temp85_1 #x0000000000000002))
(assert (= var989741 temp85_1))
(assert (= temp85_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp85_2)))
(assert (= temp85_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp85_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp85_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp85_4)))
(assert (= temp85_5 #x0000000000000000))
(assert (= var989775 (ite (= var989774 temp85_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp85_6 #x0000000000000000))
(assert (= var989776 temp85_6))
(assert (= temp85_7 #x0000000000000000))
(assert (= var989810 (ite (= var989773 temp85_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp85_8 #x0000000000000001))
(assert (= var989810 temp85_8))
(assert (= temp85_10 #x0000000000000000))
(assert (= temp85_9 temp85_10))
(assert (= temp85_12 #x0000000000000002))
(assert (= temp85_11 temp85_12))
(assert (= temp85_13 #x0000000000000000))
(assert (= var1387902 temp85_13))
(assert (= temp85_14 #x0000000000000001))
(assert (= var1387923 temp85_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp85_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp85_15)))
(assert (= temp85_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp85_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp85_17 #x0000000000000000))
(assert (= var1521661 temp85_17))
(assert (= temp85_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp85_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp85_19 #x0000000000000000))
(assert (= var1521706 temp85_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp85_20 #x0000000000000000))
(assert (= temp85_21 temp85_20))
(assert (= temp85_22 (select ARGNAME_padding_NAMEEND_VAL temp85_21)))
(assert (= temp85_23 #x0000000000000001))
(assert (= temp85_24 temp85_23))
(assert (= temp85_25 (select ARGNAME_padding_NAMEEND_VAL temp85_24)))
(assert (= temp85_26 #x0000000000000002))
(assert (= temp85_27 temp85_26))
(assert (= temp85_28 (select ARGNAME_padding_NAMEEND_VAL temp85_27)))
(assert (= temp85_29 #x0000000000000003))
(assert (= temp85_30 temp85_29))
(assert (= temp85_31 (select ARGNAME_padding_NAMEEND_VAL temp85_30)))
(assert (= temp85_32 #x0000000000000004))
(assert (= temp85_33 temp85_32))
(assert (= temp85_34 (select ARGNAME_padding_NAMEEND_VAL temp85_33)))
(assert (= temp85_35 #x0000000000000005))
(assert (= temp85_36 temp85_35))
(assert (= temp85_37 (select ARGNAME_padding_NAMEEND_VAL temp85_36)))
(assert (= temp85_38 #x0000000000000000))
(assert (= temp85_39 #x0000000000000000))
(assert (= temp85_40 temp85_39))
(assert (= temp85_41 (select ARGNAME_padding_NAMEEND_VAL temp85_40)))
(assert (= temp85_42 #x0000000000000000))
(assert (= temp85_43 #x0000000000000001))
(assert (= temp85_44 temp85_43))
(assert (= temp85_45 (select ARGNAME_padding_NAMEEND_VAL temp85_44)))
(assert (= temp85_46 #x0000000000000000))
(assert (= temp85_47 #x0000000000000002))
(assert (= temp85_48 temp85_47))
(assert (= temp85_49 (select ARGNAME_padding_NAMEEND_VAL temp85_48)))
(assert (= temp85_50 #x0000000000000000))
(assert (= temp85_51 #x0000000000000003))
(assert (= temp85_52 temp85_51))
(assert (= temp85_53 (select ARGNAME_padding_NAMEEND_VAL temp85_52)))
(assert (= temp85_54 #x0000000000000000))
(assert (= temp85_55 #x0000000000000004))
(assert (= temp85_56 temp85_55))
(assert (= temp85_57 (select ARGNAME_padding_NAMEEND_VAL temp85_56)))
(assert (= temp85_58 #x0000000000000000))
(assert (= temp85_59 #x0000000000000005))
(assert (= temp85_60 temp85_59))
(assert (= temp85_61 (select ARGNAME_padding_NAMEEND_VAL temp85_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp85_41 temp85_38)
             (bvslt temp85_45 temp85_42)
             (bvslt temp85_49 temp85_46)
             (bvslt temp85_53 temp85_50)
             (bvslt temp85_57 temp85_54)
             (bvslt temp85_61 temp85_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp85_62 #x0000000000000000))
(assert (= var2240290 temp85_62))
(assert (= temp85_63 #x0000000000000000))
(assert (= temp85_64 temp85_63))
(assert (= temp85_65 (select ARGNAME_stride_NAMEEND_VAL temp85_64)))
(assert (= temp85_66 #x0000000000000001))
(assert (= temp85_67 temp85_66))
(assert (= temp85_68 (select ARGNAME_stride_NAMEEND_VAL temp85_67)))
(assert (= temp85_69 #x0000000000000002))
(assert (= temp85_70 temp85_69))
(assert (= temp85_71 (select ARGNAME_stride_NAMEEND_VAL temp85_70)))
(assert (= temp85_72 #x0000000000000003))
(assert (= temp85_73 temp85_72))
(assert (= temp85_74 (select ARGNAME_stride_NAMEEND_VAL temp85_73)))
(assert (= temp85_75 #x0000000000000004))
(assert (= temp85_76 temp85_75))
(assert (= temp85_77 (select ARGNAME_stride_NAMEEND_VAL temp85_76)))
(assert (= temp85_78 #x0000000000000005))
(assert (= temp85_79 temp85_78))
(assert (= temp85_80 (select ARGNAME_stride_NAMEEND_VAL temp85_79)))
(assert (= temp85_81 #x0000000000000000))
(assert (= temp85_82 #x0000000000000000))
(assert (= temp85_83 temp85_82))
(assert (= temp85_84 (select ARGNAME_stride_NAMEEND_VAL temp85_83)))
(assert (= temp85_85 #x0000000000000000))
(assert (= temp85_86 #x0000000000000001))
(assert (= temp85_87 temp85_86))
(assert (= temp85_88 (select ARGNAME_stride_NAMEEND_VAL temp85_87)))
(assert (= temp85_89 #x0000000000000000))
(assert (= temp85_90 #x0000000000000002))
(assert (= temp85_91 temp85_90))
(assert (= temp85_92 (select ARGNAME_stride_NAMEEND_VAL temp85_91)))
(assert (= temp85_93 #x0000000000000000))
(assert (= temp85_94 #x0000000000000003))
(assert (= temp85_95 temp85_94))
(assert (= temp85_96 (select ARGNAME_stride_NAMEEND_VAL temp85_95)))
(assert (= temp85_97 #x0000000000000000))
(assert (= temp85_98 #x0000000000000004))
(assert (= temp85_99 temp85_98))
(assert (= temp85_100 (select ARGNAME_stride_NAMEEND_VAL temp85_99)))
(assert (= temp85_101 #x0000000000000000))
(assert (= temp85_102 #x0000000000000005))
(assert (= temp85_103 temp85_102))
(assert (= temp85_104 (select ARGNAME_stride_NAMEEND_VAL temp85_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp85_84 temp85_81)
             (bvsle temp85_88 temp85_85)
             (bvsle temp85_92 temp85_89)
             (bvsle temp85_96 temp85_93)
             (bvsle temp85_100 temp85_97)
             (bvsle temp85_104 temp85_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp85_105 #x0000000000000000))
(assert (= var2240311 temp85_105))
(assert (= temp85_106 #x0000000000000000))
(assert (= var2228402 temp85_106))
(assert (= temp85_107 #x0000000000000000))
(assert (= temp85_108 temp85_107))
(assert (= temp85_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp85_108)))
(assert (= temp85_110 #x0000000000000001))
(assert (= temp85_111 temp85_110))
(assert (= temp85_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp85_111)))
(assert (= temp85_113 #x0000000000000002))
(assert (= temp85_114 temp85_113))
(assert (= temp85_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp85_114)))
(assert (= temp85_116 #x0000000000000003))
(assert (= temp85_117 temp85_116))
(assert (= temp85_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp85_117)))
(assert (= temp85_119 #x0000000000000004))
(assert (= temp85_120 temp85_119))
(assert (= temp85_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp85_120)))
(assert (= temp85_122 #x0000000000000005))
(assert (= temp85_123 temp85_122))
(assert (= temp85_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp85_123)))
(assert (= temp85_126 var2228402))
(assert (= temp85_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp85_126)))
(assert (= temp85_125 temp85_127))
(assert (= var2240356
   (ite (bvslt temp85_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp85_128 #x0000000000000000))
(assert (= var2240356 temp85_128))
(assert (= temp85_129 #x0000000000000000))
(assert (= var2228402 temp85_129))
(assert (= temp85_131 var2228402))
(assert (= temp85_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp85_131)))
(assert (= temp85_130 temp85_132))
(assert (= var2240378 (bvsmod temp85_130 ARGNAME_groups_NAMEEND)))
(assert (= temp85_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp85_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp85_134 #x0000000000000001))
(assert (= var2240379 temp85_134))
(assert (= var2240398 var2240288))
(assert (= temp85_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp85_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp85_136 #x0000000000000001))
(assert (= var2240399 temp85_136))
(assert (= temp85_137 #x0000000000000001))
(assert (= var2229290 temp85_137))
(assert (= temp85_139 var2229290))
(assert (= temp85_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp85_139)))
(assert (= temp85_138 temp85_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp85_138)))
(assert (= temp85_141 #x0000000000000000))
(assert (= var2228402 temp85_141))
(assert (= temp85_143 var2228402))
(assert (= temp85_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp85_143)))
(assert (= temp85_142 temp85_144))
(assert (= temp85_145 #x0000000000000002))
(assert (= var2503529 temp85_145))
(assert (= temp85_146 #x0000000000000001))
(assert (= var2240569 temp85_146))
(assert (= temp85_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp85_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp85_148 #x0000000000000001))
(assert (= var1521778 temp85_148))
(assert (= temp85_149 #x0000000000000001))
(assert (= var1521908 temp85_149))
(assert (= var4010473 var1521908))
(assert (= temp85_150 #x0000000000000000))
(assert (= var4210495 temp85_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp85_151 #x0000000000000002))
(assert (= var4339331 temp85_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4796816 var1521921))
(assert (= var1522214 var1521633))
(assert (= temp85_152 #x0000000000000000))
(assert (= var1522215
   (ite (distinct var1522214 temp85_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp85_154 #x0000000000000001))
(assert (= temp85_153 temp85_154))
(assert (= temp85_155 #x0000000000000001))
(assert (= var6229482 temp85_155))
(assert (= temp85_157 #xffffffffffffffff))
(assert (= temp85_156 temp85_157))
(assert (= temp85_158 #x0000000000000001))
(assert (= var1521778 temp85_158))
(model-add temp85_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp85_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp85_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp85_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp85_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp85_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






