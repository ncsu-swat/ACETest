(declare-fun temp138_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp138_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp138_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp138_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp138_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp138_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp138_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp138_8 () (_ BitVec 64))
(declare-fun temp138_10 () (_ BitVec 64))
(declare-fun temp138_9 () (_ BitVec 64))
(declare-fun temp138_12 () (_ BitVec 64))
(declare-fun temp138_11 () (_ BitVec 64))
(declare-fun temp138_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp138_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp138_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp138_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp138_17 () (_ BitVec 64))
(declare-fun temp138_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp138_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp138_20 () (_ BitVec 64))
(declare-fun temp138_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp138_22 () (_ BitVec 64))
(declare-fun temp138_23 () (_ BitVec 64))
(declare-fun temp138_24 () (_ BitVec 64))
(declare-fun temp138_25 () (_ BitVec 64))
(declare-fun temp138_26 () (_ BitVec 64))
(declare-fun temp138_27 () (_ BitVec 64))
(declare-fun temp138_28 () (_ BitVec 64))
(declare-fun temp138_29 () (_ BitVec 64))
(declare-fun temp138_30 () (_ BitVec 64))
(declare-fun temp138_31 () (_ BitVec 64))
(declare-fun temp138_32 () (_ BitVec 64))
(declare-fun temp138_33 () (_ BitVec 64))
(declare-fun temp138_34 () (_ BitVec 64))
(declare-fun temp138_35 () (_ BitVec 64))
(declare-fun temp138_36 () (_ BitVec 64))
(declare-fun temp138_37 () (_ BitVec 64))
(declare-fun temp138_38 () (_ BitVec 64))
(declare-fun temp138_39 () (_ BitVec 64))
(declare-fun temp138_40 () (_ BitVec 64))
(declare-fun temp138_41 () (_ BitVec 64))
(declare-fun temp138_42 () (_ BitVec 64))
(declare-fun temp138_43 () (_ BitVec 64))
(declare-fun temp138_44 () (_ BitVec 64))
(declare-fun temp138_45 () (_ BitVec 64))
(declare-fun temp138_46 () (_ BitVec 64))
(declare-fun temp138_47 () (_ BitVec 64))
(declare-fun temp138_48 () (_ BitVec 64))
(declare-fun temp138_49 () (_ BitVec 64))
(declare-fun temp138_50 () (_ BitVec 64))
(declare-fun temp138_51 () (_ BitVec 64))
(declare-fun temp138_52 () (_ BitVec 64))
(declare-fun temp138_53 () (_ BitVec 64))
(declare-fun temp138_54 () (_ BitVec 64))
(declare-fun temp138_55 () (_ BitVec 64))
(declare-fun temp138_56 () (_ BitVec 64))
(declare-fun temp138_57 () (_ BitVec 64))
(declare-fun temp138_58 () (_ BitVec 64))
(declare-fun temp138_59 () (_ BitVec 64))
(declare-fun temp138_60 () (_ BitVec 64))
(declare-fun temp138_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp138_62 () (_ BitVec 64))
(declare-fun temp138_63 () (_ BitVec 64))
(declare-fun temp138_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp138_65 () (_ BitVec 64))
(declare-fun temp138_66 () (_ BitVec 64))
(declare-fun temp138_67 () (_ BitVec 64))
(declare-fun temp138_68 () (_ BitVec 64))
(declare-fun temp138_69 () (_ BitVec 64))
(declare-fun temp138_70 () (_ BitVec 64))
(declare-fun temp138_71 () (_ BitVec 64))
(declare-fun temp138_72 () (_ BitVec 64))
(declare-fun temp138_73 () (_ BitVec 64))
(declare-fun temp138_74 () (_ BitVec 64))
(declare-fun temp138_75 () (_ BitVec 64))
(declare-fun temp138_76 () (_ BitVec 64))
(declare-fun temp138_77 () (_ BitVec 64))
(declare-fun temp138_78 () (_ BitVec 64))
(declare-fun temp138_79 () (_ BitVec 64))
(declare-fun temp138_80 () (_ BitVec 64))
(declare-fun temp138_81 () (_ BitVec 64))
(declare-fun temp138_82 () (_ BitVec 64))
(declare-fun temp138_83 () (_ BitVec 64))
(declare-fun temp138_84 () (_ BitVec 64))
(declare-fun temp138_85 () (_ BitVec 64))
(declare-fun temp138_86 () (_ BitVec 64))
(declare-fun temp138_87 () (_ BitVec 64))
(declare-fun temp138_88 () (_ BitVec 64))
(declare-fun temp138_89 () (_ BitVec 64))
(declare-fun temp138_90 () (_ BitVec 64))
(declare-fun temp138_91 () (_ BitVec 64))
(declare-fun temp138_92 () (_ BitVec 64))
(declare-fun temp138_93 () (_ BitVec 64))
(declare-fun temp138_94 () (_ BitVec 64))
(declare-fun temp138_95 () (_ BitVec 64))
(declare-fun temp138_96 () (_ BitVec 64))
(declare-fun temp138_97 () (_ BitVec 64))
(declare-fun temp138_98 () (_ BitVec 64))
(declare-fun temp138_99 () (_ BitVec 64))
(declare-fun temp138_100 () (_ BitVec 64))
(declare-fun temp138_101 () (_ BitVec 64))
(declare-fun temp138_102 () (_ BitVec 64))
(declare-fun temp138_103 () (_ BitVec 64))
(declare-fun temp138_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp138_105 () (_ BitVec 64))
(declare-fun temp138_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp138_107 () (_ BitVec 64))
(declare-fun temp138_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp138_109 () (_ BitVec 64))
(declare-fun temp138_110 () (_ BitVec 64))
(declare-fun temp138_111 () (_ BitVec 64))
(declare-fun temp138_112 () (_ BitVec 64))
(declare-fun temp138_113 () (_ BitVec 64))
(declare-fun temp138_114 () (_ BitVec 64))
(declare-fun temp138_115 () (_ BitVec 64))
(declare-fun temp138_116 () (_ BitVec 64))
(declare-fun temp138_117 () (_ BitVec 64))
(declare-fun temp138_118 () (_ BitVec 64))
(declare-fun temp138_119 () (_ BitVec 64))
(declare-fun temp138_120 () (_ BitVec 64))
(declare-fun temp138_121 () (_ BitVec 64))
(declare-fun temp138_122 () (_ BitVec 64))
(declare-fun temp138_123 () (_ BitVec 64))
(declare-fun temp138_124 () (_ BitVec 64))
(declare-fun temp138_126 () (_ BitVec 64))
(declare-fun temp138_127 () (_ BitVec 64))
(declare-fun temp138_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp138_128 () (_ BitVec 64))
(declare-fun temp138_129 () (_ BitVec 64))
(declare-fun temp138_131 () (_ BitVec 64))
(declare-fun temp138_132 () (_ BitVec 64))
(declare-fun temp138_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp138_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp138_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp138_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp138_136 () (_ BitVec 64))
(declare-fun temp138_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp138_139 () (_ BitVec 64))
(declare-fun temp138_140 () (_ BitVec 64))
(declare-fun temp138_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp138_141 () (_ BitVec 64))
(declare-fun temp138_143 () (_ BitVec 64))
(declare-fun temp138_144 () (_ BitVec 64))
(declare-fun temp138_142 () (_ BitVec 64))
(declare-fun temp138_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp138_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp138_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp138_148 () (_ BitVec 64))
(declare-fun temp138_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp138_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp138_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp138_153 () (_ BitVec 64))
(declare-fun temp138_152 () (_ BitVec 64))
(declare-fun temp138_155 () (_ BitVec 64))
(declare-fun temp138_154 () (_ BitVec 64))
(declare-fun temp138_156 () (_ BitVec 64))
(assert (= temp138_1 #x0000000000000002))
(assert (= var989741 temp138_1))
(assert (= temp138_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp138_2)))
(assert (= temp138_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp138_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp138_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp138_4)))
(assert (= temp138_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp138_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp138_6 #x0000000000000000))
(assert (= var989776 temp138_6))
(assert (= temp138_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp138_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp138_8 #x0000000000000001))
(assert (= var989810 temp138_8))
(assert (= temp138_10 #x0000000000000000))
(assert (= temp138_9 temp138_10))
(assert (= temp138_12 #x0000000000000002))
(assert (= temp138_11 temp138_12))
(assert (= temp138_13 #x0000000000000000))
(assert (= var1387902 temp138_13))
(assert (= temp138_14 #x0000000000000001))
(assert (= var1387923 temp138_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp138_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp138_15)))
(assert (= temp138_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp138_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_17 #x0000000000000000))
(assert (= var1521661 temp138_17))
(assert (= temp138_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp138_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_19 #x0000000000000000))
(assert (= var1521706 temp138_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp138_20 #x0000000000000000))
(assert (= temp138_21 temp138_20))
(assert (= temp138_22 (select ARGNAME_padding_NAMEEND_VAL temp138_21)))
(assert (= temp138_23 #x0000000000000001))
(assert (= temp138_24 temp138_23))
(assert (= temp138_25 (select ARGNAME_padding_NAMEEND_VAL temp138_24)))
(assert (= temp138_26 #x0000000000000002))
(assert (= temp138_27 temp138_26))
(assert (= temp138_28 (select ARGNAME_padding_NAMEEND_VAL temp138_27)))
(assert (= temp138_29 #x0000000000000003))
(assert (= temp138_30 temp138_29))
(assert (= temp138_31 (select ARGNAME_padding_NAMEEND_VAL temp138_30)))
(assert (= temp138_32 #x0000000000000004))
(assert (= temp138_33 temp138_32))
(assert (= temp138_34 (select ARGNAME_padding_NAMEEND_VAL temp138_33)))
(assert (= temp138_35 #x0000000000000005))
(assert (= temp138_36 temp138_35))
(assert (= temp138_37 (select ARGNAME_padding_NAMEEND_VAL temp138_36)))
(assert (= temp138_38 #x0000000000000000))
(assert (= temp138_39 #x0000000000000000))
(assert (= temp138_40 temp138_39))
(assert (= temp138_41 (select ARGNAME_padding_NAMEEND_VAL temp138_40)))
(assert (= temp138_42 #x0000000000000000))
(assert (= temp138_43 #x0000000000000001))
(assert (= temp138_44 temp138_43))
(assert (= temp138_45 (select ARGNAME_padding_NAMEEND_VAL temp138_44)))
(assert (= temp138_46 #x0000000000000000))
(assert (= temp138_47 #x0000000000000002))
(assert (= temp138_48 temp138_47))
(assert (= temp138_49 (select ARGNAME_padding_NAMEEND_VAL temp138_48)))
(assert (= temp138_50 #x0000000000000000))
(assert (= temp138_51 #x0000000000000003))
(assert (= temp138_52 temp138_51))
(assert (= temp138_53 (select ARGNAME_padding_NAMEEND_VAL temp138_52)))
(assert (= temp138_54 #x0000000000000000))
(assert (= temp138_55 #x0000000000000004))
(assert (= temp138_56 temp138_55))
(assert (= temp138_57 (select ARGNAME_padding_NAMEEND_VAL temp138_56)))
(assert (= temp138_58 #x0000000000000000))
(assert (= temp138_59 #x0000000000000005))
(assert (= temp138_60 temp138_59))
(assert (= temp138_61 (select ARGNAME_padding_NAMEEND_VAL temp138_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp138_41 temp138_38)
             (bvslt temp138_45 temp138_42)
             (bvslt temp138_49 temp138_46)
             (bvslt temp138_53 temp138_50)
             (bvslt temp138_57 temp138_54)
             (bvslt temp138_61 temp138_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_62 #x0000000000000000))
(assert (= var2240290 temp138_62))
(assert (= temp138_63 #x0000000000000000))
(assert (= temp138_64 temp138_63))
(assert (= temp138_65 (select ARGNAME_stride_NAMEEND_VAL temp138_64)))
(assert (= temp138_66 #x0000000000000001))
(assert (= temp138_67 temp138_66))
(assert (= temp138_68 (select ARGNAME_stride_NAMEEND_VAL temp138_67)))
(assert (= temp138_69 #x0000000000000002))
(assert (= temp138_70 temp138_69))
(assert (= temp138_71 (select ARGNAME_stride_NAMEEND_VAL temp138_70)))
(assert (= temp138_72 #x0000000000000003))
(assert (= temp138_73 temp138_72))
(assert (= temp138_74 (select ARGNAME_stride_NAMEEND_VAL temp138_73)))
(assert (= temp138_75 #x0000000000000004))
(assert (= temp138_76 temp138_75))
(assert (= temp138_77 (select ARGNAME_stride_NAMEEND_VAL temp138_76)))
(assert (= temp138_78 #x0000000000000005))
(assert (= temp138_79 temp138_78))
(assert (= temp138_80 (select ARGNAME_stride_NAMEEND_VAL temp138_79)))
(assert (= temp138_81 #x0000000000000000))
(assert (= temp138_82 #x0000000000000000))
(assert (= temp138_83 temp138_82))
(assert (= temp138_84 (select ARGNAME_stride_NAMEEND_VAL temp138_83)))
(assert (= temp138_85 #x0000000000000000))
(assert (= temp138_86 #x0000000000000001))
(assert (= temp138_87 temp138_86))
(assert (= temp138_88 (select ARGNAME_stride_NAMEEND_VAL temp138_87)))
(assert (= temp138_89 #x0000000000000000))
(assert (= temp138_90 #x0000000000000002))
(assert (= temp138_91 temp138_90))
(assert (= temp138_92 (select ARGNAME_stride_NAMEEND_VAL temp138_91)))
(assert (= temp138_93 #x0000000000000000))
(assert (= temp138_94 #x0000000000000003))
(assert (= temp138_95 temp138_94))
(assert (= temp138_96 (select ARGNAME_stride_NAMEEND_VAL temp138_95)))
(assert (= temp138_97 #x0000000000000000))
(assert (= temp138_98 #x0000000000000004))
(assert (= temp138_99 temp138_98))
(assert (= temp138_100 (select ARGNAME_stride_NAMEEND_VAL temp138_99)))
(assert (= temp138_101 #x0000000000000000))
(assert (= temp138_102 #x0000000000000005))
(assert (= temp138_103 temp138_102))
(assert (= temp138_104 (select ARGNAME_stride_NAMEEND_VAL temp138_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp138_84 temp138_81)
             (bvsle temp138_88 temp138_85)
             (bvsle temp138_92 temp138_89)
             (bvsle temp138_96 temp138_93)
             (bvsle temp138_100 temp138_97)
             (bvsle temp138_104 temp138_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_105 #x0000000000000000))
(assert (= var2240311 temp138_105))
(assert (= temp138_106 #x0000000000000000))
(assert (= var2228402 temp138_106))
(assert (= temp138_107 #x0000000000000000))
(assert (= temp138_108 temp138_107))
(assert (= temp138_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_108)))
(assert (= temp138_110 #x0000000000000001))
(assert (= temp138_111 temp138_110))
(assert (= temp138_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_111)))
(assert (= temp138_113 #x0000000000000002))
(assert (= temp138_114 temp138_113))
(assert (= temp138_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_114)))
(assert (= temp138_116 #x0000000000000003))
(assert (= temp138_117 temp138_116))
(assert (= temp138_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_117)))
(assert (= temp138_119 #x0000000000000004))
(assert (= temp138_120 temp138_119))
(assert (= temp138_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_120)))
(assert (= temp138_122 #x0000000000000005))
(assert (= temp138_123 temp138_122))
(assert (= temp138_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_123)))
(assert (= temp138_126 var2228402))
(assert (= temp138_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_126)))
(assert (= temp138_125 temp138_127))
(assert (= var2240356
   (ite (bvslt temp138_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_128 #x0000000000000000))
(assert (= var2240356 temp138_128))
(assert (= temp138_129 #x0000000000000000))
(assert (= var2228402 temp138_129))
(assert (= temp138_131 var2228402))
(assert (= temp138_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_131)))
(assert (= temp138_130 temp138_132))
(assert (= var2240378 (bvsmod temp138_130 ARGNAME_groups_NAMEEND)))
(assert (= temp138_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp138_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp138_134 #x0000000000000001))
(assert (= var2240379 temp138_134))
(assert (= var2240398 var2240288))
(assert (= temp138_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp138_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp138_136 #x0000000000000001))
(assert (= var2240399 temp138_136))
(assert (= temp138_137 #x0000000000000001))
(assert (= var2229290 temp138_137))
(assert (= temp138_139 var2229290))
(assert (= temp138_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_139)))
(assert (= temp138_138 temp138_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp138_138)))
(assert (= temp138_141 #x0000000000000000))
(assert (= var2228402 temp138_141))
(assert (= temp138_143 var2228402))
(assert (= temp138_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_143)))
(assert (= temp138_142 temp138_144))
(assert (= temp138_145 #x0000000000000002))
(assert (= var2503529 temp138_145))
(assert (= temp138_146 #x0000000000000001))
(assert (= var2240569 temp138_146))
(assert (= temp138_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp138_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_148 #x0000000000000001))
(assert (= var1521778 temp138_148))
(assert (= temp138_149 #x0000000000000001))
(assert (= var1521908 temp138_149))
(assert (= var4010473 var1521908))
(assert (= temp138_150 #x0000000000000000))
(assert (= var4210495 temp138_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp138_151 #x0000000000000002))
(assert (= var4339331 temp138_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp138_153 #xffffffffffffffff))
(assert (= temp138_152 temp138_153))
(assert (= temp138_155 #xffffffffffffffff))
(assert (= temp138_154 temp138_155))
(assert (= temp138_156 #x0000000000000001))
(assert (= var1521778 temp138_156))
(model-add temp138_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp138_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp138_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp138_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp138_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp138_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






