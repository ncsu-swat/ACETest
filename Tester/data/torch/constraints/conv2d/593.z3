(declare-fun temp789_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp789_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp789_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp789_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp789_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp789_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp789_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp789_8 () (_ BitVec 64))
(declare-fun temp789_10 () (_ BitVec 64))
(declare-fun temp789_9 () (_ BitVec 64))
(declare-fun temp789_12 () (_ BitVec 64))
(declare-fun temp789_11 () (_ BitVec 64))
(declare-fun temp789_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp789_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp789_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp789_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp789_17 () (_ BitVec 64))
(declare-fun temp789_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp789_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp789_20 () (_ BitVec 64))
(declare-fun temp789_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp789_22 () (_ BitVec 64))
(declare-fun temp789_23 () (_ BitVec 64))
(declare-fun temp789_24 () (_ BitVec 64))
(declare-fun temp789_25 () (_ BitVec 64))
(declare-fun temp789_26 () (_ BitVec 64))
(declare-fun temp789_27 () (_ BitVec 64))
(declare-fun temp789_28 () (_ BitVec 64))
(declare-fun temp789_29 () (_ BitVec 64))
(declare-fun temp789_30 () (_ BitVec 64))
(declare-fun temp789_31 () (_ BitVec 64))
(declare-fun temp789_32 () (_ BitVec 64))
(declare-fun temp789_33 () (_ BitVec 64))
(declare-fun temp789_34 () (_ BitVec 64))
(declare-fun temp789_35 () (_ BitVec 64))
(declare-fun temp789_36 () (_ BitVec 64))
(declare-fun temp789_37 () (_ BitVec 64))
(declare-fun temp789_38 () (_ BitVec 64))
(declare-fun temp789_39 () (_ BitVec 64))
(declare-fun temp789_40 () (_ BitVec 64))
(declare-fun temp789_41 () (_ BitVec 64))
(declare-fun temp789_42 () (_ BitVec 64))
(declare-fun temp789_43 () (_ BitVec 64))
(declare-fun temp789_44 () (_ BitVec 64))
(declare-fun temp789_45 () (_ BitVec 64))
(declare-fun temp789_46 () (_ BitVec 64))
(declare-fun temp789_47 () (_ BitVec 64))
(declare-fun temp789_48 () (_ BitVec 64))
(declare-fun temp789_49 () (_ BitVec 64))
(declare-fun temp789_50 () (_ BitVec 64))
(declare-fun temp789_51 () (_ BitVec 64))
(declare-fun temp789_52 () (_ BitVec 64))
(declare-fun temp789_53 () (_ BitVec 64))
(declare-fun temp789_54 () (_ BitVec 64))
(declare-fun temp789_55 () (_ BitVec 64))
(declare-fun temp789_56 () (_ BitVec 64))
(declare-fun temp789_57 () (_ BitVec 64))
(declare-fun temp789_58 () (_ BitVec 64))
(declare-fun temp789_59 () (_ BitVec 64))
(declare-fun temp789_60 () (_ BitVec 64))
(declare-fun temp789_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp789_62 () (_ BitVec 64))
(declare-fun temp789_63 () (_ BitVec 64))
(declare-fun temp789_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp789_65 () (_ BitVec 64))
(declare-fun temp789_66 () (_ BitVec 64))
(declare-fun temp789_67 () (_ BitVec 64))
(declare-fun temp789_68 () (_ BitVec 64))
(declare-fun temp789_69 () (_ BitVec 64))
(declare-fun temp789_70 () (_ BitVec 64))
(declare-fun temp789_71 () (_ BitVec 64))
(declare-fun temp789_72 () (_ BitVec 64))
(declare-fun temp789_73 () (_ BitVec 64))
(declare-fun temp789_74 () (_ BitVec 64))
(declare-fun temp789_75 () (_ BitVec 64))
(declare-fun temp789_76 () (_ BitVec 64))
(declare-fun temp789_77 () (_ BitVec 64))
(declare-fun temp789_78 () (_ BitVec 64))
(declare-fun temp789_79 () (_ BitVec 64))
(declare-fun temp789_80 () (_ BitVec 64))
(declare-fun temp789_81 () (_ BitVec 64))
(declare-fun temp789_82 () (_ BitVec 64))
(declare-fun temp789_83 () (_ BitVec 64))
(declare-fun temp789_84 () (_ BitVec 64))
(declare-fun temp789_85 () (_ BitVec 64))
(declare-fun temp789_86 () (_ BitVec 64))
(declare-fun temp789_87 () (_ BitVec 64))
(declare-fun temp789_88 () (_ BitVec 64))
(declare-fun temp789_89 () (_ BitVec 64))
(declare-fun temp789_90 () (_ BitVec 64))
(declare-fun temp789_91 () (_ BitVec 64))
(declare-fun temp789_92 () (_ BitVec 64))
(declare-fun temp789_93 () (_ BitVec 64))
(declare-fun temp789_94 () (_ BitVec 64))
(declare-fun temp789_95 () (_ BitVec 64))
(declare-fun temp789_96 () (_ BitVec 64))
(declare-fun temp789_97 () (_ BitVec 64))
(declare-fun temp789_98 () (_ BitVec 64))
(declare-fun temp789_99 () (_ BitVec 64))
(declare-fun temp789_100 () (_ BitVec 64))
(declare-fun temp789_101 () (_ BitVec 64))
(declare-fun temp789_102 () (_ BitVec 64))
(declare-fun temp789_103 () (_ BitVec 64))
(declare-fun temp789_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp789_105 () (_ BitVec 64))
(declare-fun temp789_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp789_107 () (_ BitVec 64))
(declare-fun temp789_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp789_109 () (_ BitVec 64))
(declare-fun temp789_110 () (_ BitVec 64))
(declare-fun temp789_111 () (_ BitVec 64))
(declare-fun temp789_112 () (_ BitVec 64))
(declare-fun temp789_113 () (_ BitVec 64))
(declare-fun temp789_114 () (_ BitVec 64))
(declare-fun temp789_115 () (_ BitVec 64))
(declare-fun temp789_116 () (_ BitVec 64))
(declare-fun temp789_117 () (_ BitVec 64))
(declare-fun temp789_118 () (_ BitVec 64))
(declare-fun temp789_119 () (_ BitVec 64))
(declare-fun temp789_120 () (_ BitVec 64))
(declare-fun temp789_121 () (_ BitVec 64))
(declare-fun temp789_122 () (_ BitVec 64))
(declare-fun temp789_123 () (_ BitVec 64))
(declare-fun temp789_124 () (_ BitVec 64))
(declare-fun temp789_126 () (_ BitVec 64))
(declare-fun temp789_127 () (_ BitVec 64))
(declare-fun temp789_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp789_128 () (_ BitVec 64))
(declare-fun temp789_129 () (_ BitVec 64))
(declare-fun temp789_131 () (_ BitVec 64))
(declare-fun temp789_132 () (_ BitVec 64))
(declare-fun temp789_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp789_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp789_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp789_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp789_136 () (_ BitVec 64))
(declare-fun temp789_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp789_139 () (_ BitVec 64))
(declare-fun temp789_140 () (_ BitVec 64))
(declare-fun temp789_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp789_141 () (_ BitVec 64))
(declare-fun temp789_143 () (_ BitVec 64))
(declare-fun temp789_144 () (_ BitVec 64))
(declare-fun temp789_142 () (_ BitVec 64))
(declare-fun temp789_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp789_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp789_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp789_148 () (_ BitVec 64))
(declare-fun temp789_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp789_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp789_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var1522540 () (_ BitVec 64))
(declare-fun temp789_152 () (_ BitVec 64))
(declare-fun var1522541 () (_ BitVec 64))
(declare-fun temp789_153 () (_ BitVec 64))
(assert (= temp789_1 #x0000000000000002))
(assert (= var989741 temp789_1))
(assert (= temp789_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp789_2)))
(assert (= temp789_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp789_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp789_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp789_4)))
(assert (= temp789_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp789_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp789_6 #x0000000000000000))
(assert (= var989776 temp789_6))
(assert (= temp789_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp789_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp789_8 #x0000000000000001))
(assert (= var989810 temp789_8))
(assert (= temp789_10 #x0000000000000000))
(assert (= temp789_9 temp789_10))
(assert (= temp789_12 #x0000000000000002))
(assert (= temp789_11 temp789_12))
(assert (= temp789_13 #x0000000000000000))
(assert (= var1387902 temp789_13))
(assert (= temp789_14 #x0000000000000001))
(assert (= var1387923 temp789_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp789_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp789_15)))
(assert (= temp789_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp789_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp789_17 #x0000000000000000))
(assert (= var1521661 temp789_17))
(assert (= temp789_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp789_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp789_19 #x0000000000000000))
(assert (= var1521706 temp789_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp789_20 #x0000000000000000))
(assert (= temp789_21 temp789_20))
(assert (= temp789_22 (select ARGNAME_padding_NAMEEND_VAL temp789_21)))
(assert (= temp789_23 #x0000000000000001))
(assert (= temp789_24 temp789_23))
(assert (= temp789_25 (select ARGNAME_padding_NAMEEND_VAL temp789_24)))
(assert (= temp789_26 #x0000000000000002))
(assert (= temp789_27 temp789_26))
(assert (= temp789_28 (select ARGNAME_padding_NAMEEND_VAL temp789_27)))
(assert (= temp789_29 #x0000000000000003))
(assert (= temp789_30 temp789_29))
(assert (= temp789_31 (select ARGNAME_padding_NAMEEND_VAL temp789_30)))
(assert (= temp789_32 #x0000000000000004))
(assert (= temp789_33 temp789_32))
(assert (= temp789_34 (select ARGNAME_padding_NAMEEND_VAL temp789_33)))
(assert (= temp789_35 #x0000000000000005))
(assert (= temp789_36 temp789_35))
(assert (= temp789_37 (select ARGNAME_padding_NAMEEND_VAL temp789_36)))
(assert (= temp789_38 #x0000000000000000))
(assert (= temp789_39 #x0000000000000000))
(assert (= temp789_40 temp789_39))
(assert (= temp789_41 (select ARGNAME_padding_NAMEEND_VAL temp789_40)))
(assert (= temp789_42 #x0000000000000000))
(assert (= temp789_43 #x0000000000000001))
(assert (= temp789_44 temp789_43))
(assert (= temp789_45 (select ARGNAME_padding_NAMEEND_VAL temp789_44)))
(assert (= temp789_46 #x0000000000000000))
(assert (= temp789_47 #x0000000000000002))
(assert (= temp789_48 temp789_47))
(assert (= temp789_49 (select ARGNAME_padding_NAMEEND_VAL temp789_48)))
(assert (= temp789_50 #x0000000000000000))
(assert (= temp789_51 #x0000000000000003))
(assert (= temp789_52 temp789_51))
(assert (= temp789_53 (select ARGNAME_padding_NAMEEND_VAL temp789_52)))
(assert (= temp789_54 #x0000000000000000))
(assert (= temp789_55 #x0000000000000004))
(assert (= temp789_56 temp789_55))
(assert (= temp789_57 (select ARGNAME_padding_NAMEEND_VAL temp789_56)))
(assert (= temp789_58 #x0000000000000000))
(assert (= temp789_59 #x0000000000000005))
(assert (= temp789_60 temp789_59))
(assert (= temp789_61 (select ARGNAME_padding_NAMEEND_VAL temp789_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp789_41 temp789_38)
             (bvslt temp789_45 temp789_42)
             (bvslt temp789_49 temp789_46)
             (bvslt temp789_53 temp789_50)
             (bvslt temp789_57 temp789_54)
             (bvslt temp789_61 temp789_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp789_62 #x0000000000000000))
(assert (= var2240290 temp789_62))
(assert (= temp789_63 #x0000000000000000))
(assert (= temp789_64 temp789_63))
(assert (= temp789_65 (select ARGNAME_stride_NAMEEND_VAL temp789_64)))
(assert (= temp789_66 #x0000000000000001))
(assert (= temp789_67 temp789_66))
(assert (= temp789_68 (select ARGNAME_stride_NAMEEND_VAL temp789_67)))
(assert (= temp789_69 #x0000000000000002))
(assert (= temp789_70 temp789_69))
(assert (= temp789_71 (select ARGNAME_stride_NAMEEND_VAL temp789_70)))
(assert (= temp789_72 #x0000000000000003))
(assert (= temp789_73 temp789_72))
(assert (= temp789_74 (select ARGNAME_stride_NAMEEND_VAL temp789_73)))
(assert (= temp789_75 #x0000000000000004))
(assert (= temp789_76 temp789_75))
(assert (= temp789_77 (select ARGNAME_stride_NAMEEND_VAL temp789_76)))
(assert (= temp789_78 #x0000000000000005))
(assert (= temp789_79 temp789_78))
(assert (= temp789_80 (select ARGNAME_stride_NAMEEND_VAL temp789_79)))
(assert (= temp789_81 #x0000000000000000))
(assert (= temp789_82 #x0000000000000000))
(assert (= temp789_83 temp789_82))
(assert (= temp789_84 (select ARGNAME_stride_NAMEEND_VAL temp789_83)))
(assert (= temp789_85 #x0000000000000000))
(assert (= temp789_86 #x0000000000000001))
(assert (= temp789_87 temp789_86))
(assert (= temp789_88 (select ARGNAME_stride_NAMEEND_VAL temp789_87)))
(assert (= temp789_89 #x0000000000000000))
(assert (= temp789_90 #x0000000000000002))
(assert (= temp789_91 temp789_90))
(assert (= temp789_92 (select ARGNAME_stride_NAMEEND_VAL temp789_91)))
(assert (= temp789_93 #x0000000000000000))
(assert (= temp789_94 #x0000000000000003))
(assert (= temp789_95 temp789_94))
(assert (= temp789_96 (select ARGNAME_stride_NAMEEND_VAL temp789_95)))
(assert (= temp789_97 #x0000000000000000))
(assert (= temp789_98 #x0000000000000004))
(assert (= temp789_99 temp789_98))
(assert (= temp789_100 (select ARGNAME_stride_NAMEEND_VAL temp789_99)))
(assert (= temp789_101 #x0000000000000000))
(assert (= temp789_102 #x0000000000000005))
(assert (= temp789_103 temp789_102))
(assert (= temp789_104 (select ARGNAME_stride_NAMEEND_VAL temp789_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp789_84 temp789_81)
             (bvsle temp789_88 temp789_85)
             (bvsle temp789_92 temp789_89)
             (bvsle temp789_96 temp789_93)
             (bvsle temp789_100 temp789_97)
             (bvsle temp789_104 temp789_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp789_105 #x0000000000000000))
(assert (= var2240311 temp789_105))
(assert (= temp789_106 #x0000000000000000))
(assert (= var2228402 temp789_106))
(assert (= temp789_107 #x0000000000000000))
(assert (= temp789_108 temp789_107))
(assert (= temp789_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp789_108)))
(assert (= temp789_110 #x0000000000000001))
(assert (= temp789_111 temp789_110))
(assert (= temp789_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp789_111)))
(assert (= temp789_113 #x0000000000000002))
(assert (= temp789_114 temp789_113))
(assert (= temp789_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp789_114)))
(assert (= temp789_116 #x0000000000000003))
(assert (= temp789_117 temp789_116))
(assert (= temp789_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp789_117)))
(assert (= temp789_119 #x0000000000000004))
(assert (= temp789_120 temp789_119))
(assert (= temp789_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp789_120)))
(assert (= temp789_122 #x0000000000000005))
(assert (= temp789_123 temp789_122))
(assert (= temp789_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp789_123)))
(assert (= temp789_126 var2228402))
(assert (= temp789_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp789_126)))
(assert (= temp789_125 temp789_127))
(assert (= var2240356
   (ite (bvslt temp789_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp789_128 #x0000000000000000))
(assert (= var2240356 temp789_128))
(assert (= temp789_129 #x0000000000000000))
(assert (= var2228402 temp789_129))
(assert (= temp789_131 var2228402))
(assert (= temp789_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp789_131)))
(assert (= temp789_130 temp789_132))
(assert (= var2240378 (bvsmod temp789_130 ARGNAME_groups_NAMEEND)))
(assert (= temp789_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp789_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp789_134 #x0000000000000001))
(assert (= var2240379 temp789_134))
(assert (= var2240398 var2240288))
(assert (= temp789_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp789_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp789_136 #x0000000000000001))
(assert (= var2240399 temp789_136))
(assert (= temp789_137 #x0000000000000001))
(assert (= var2229290 temp789_137))
(assert (= temp789_139 var2229290))
(assert (= temp789_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp789_139)))
(assert (= temp789_138 temp789_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp789_138)))
(assert (= temp789_141 #x0000000000000000))
(assert (= var2228402 temp789_141))
(assert (= temp789_143 var2228402))
(assert (= temp789_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp789_143)))
(assert (= temp789_142 temp789_144))
(assert (= temp789_145 #x0000000000000002))
(assert (= var2503529 temp789_145))
(assert (= temp789_146 #x0000000000000001))
(assert (= var2240569 temp789_146))
(assert (= temp789_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp789_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp789_148 #x0000000000000001))
(assert (= var1521778 temp789_148))
(assert (= temp789_149 #x0000000000000001))
(assert (= var1521908 temp789_149))
(assert (= var4010473 var1521908))
(assert (= temp789_150 #x0000000000000000))
(assert (= var4210495 temp789_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp789_151 #x0000000000000002))
(assert (= var4339331 temp789_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4796816 var1521921))
(assert (= var1522540 var1521633))
(assert (= temp789_152 #x0000000000000000))
(assert (= var1522541
   (ite (distinct var1522540 temp789_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp789_153 #x0000000000000001))
(assert (= var1521778 temp789_153))
(model-add temp789_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp789_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp789_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp789_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp789_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp789_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






