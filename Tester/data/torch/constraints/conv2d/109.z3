(declare-fun temp143_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp143_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp143_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp143_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp143_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp143_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp143_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp143_8 () (_ BitVec 64))
(declare-fun temp143_10 () (_ BitVec 64))
(declare-fun temp143_9 () (_ BitVec 64))
(declare-fun temp143_12 () (_ BitVec 64))
(declare-fun temp143_11 () (_ BitVec 64))
(declare-fun temp143_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp143_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp143_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp143_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp143_17 () (_ BitVec 64))
(declare-fun temp143_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp143_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp143_20 () (_ BitVec 64))
(declare-fun temp143_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp143_22 () (_ BitVec 64))
(declare-fun temp143_23 () (_ BitVec 64))
(declare-fun temp143_24 () (_ BitVec 64))
(declare-fun temp143_25 () (_ BitVec 64))
(declare-fun temp143_26 () (_ BitVec 64))
(declare-fun temp143_27 () (_ BitVec 64))
(declare-fun temp143_28 () (_ BitVec 64))
(declare-fun temp143_29 () (_ BitVec 64))
(declare-fun temp143_30 () (_ BitVec 64))
(declare-fun temp143_31 () (_ BitVec 64))
(declare-fun temp143_32 () (_ BitVec 64))
(declare-fun temp143_33 () (_ BitVec 64))
(declare-fun temp143_34 () (_ BitVec 64))
(declare-fun temp143_35 () (_ BitVec 64))
(declare-fun temp143_36 () (_ BitVec 64))
(declare-fun temp143_37 () (_ BitVec 64))
(declare-fun temp143_38 () (_ BitVec 64))
(declare-fun temp143_39 () (_ BitVec 64))
(declare-fun temp143_40 () (_ BitVec 64))
(declare-fun temp143_41 () (_ BitVec 64))
(declare-fun temp143_42 () (_ BitVec 64))
(declare-fun temp143_43 () (_ BitVec 64))
(declare-fun temp143_44 () (_ BitVec 64))
(declare-fun temp143_45 () (_ BitVec 64))
(declare-fun temp143_46 () (_ BitVec 64))
(declare-fun temp143_47 () (_ BitVec 64))
(declare-fun temp143_48 () (_ BitVec 64))
(declare-fun temp143_49 () (_ BitVec 64))
(declare-fun temp143_50 () (_ BitVec 64))
(declare-fun temp143_51 () (_ BitVec 64))
(declare-fun temp143_52 () (_ BitVec 64))
(declare-fun temp143_53 () (_ BitVec 64))
(declare-fun temp143_54 () (_ BitVec 64))
(declare-fun temp143_55 () (_ BitVec 64))
(declare-fun temp143_56 () (_ BitVec 64))
(declare-fun temp143_57 () (_ BitVec 64))
(declare-fun temp143_58 () (_ BitVec 64))
(declare-fun temp143_59 () (_ BitVec 64))
(declare-fun temp143_60 () (_ BitVec 64))
(declare-fun temp143_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp143_62 () (_ BitVec 64))
(declare-fun temp143_63 () (_ BitVec 64))
(declare-fun temp143_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp143_65 () (_ BitVec 64))
(declare-fun temp143_66 () (_ BitVec 64))
(declare-fun temp143_67 () (_ BitVec 64))
(declare-fun temp143_68 () (_ BitVec 64))
(declare-fun temp143_69 () (_ BitVec 64))
(declare-fun temp143_70 () (_ BitVec 64))
(declare-fun temp143_71 () (_ BitVec 64))
(declare-fun temp143_72 () (_ BitVec 64))
(declare-fun temp143_73 () (_ BitVec 64))
(declare-fun temp143_74 () (_ BitVec 64))
(declare-fun temp143_75 () (_ BitVec 64))
(declare-fun temp143_76 () (_ BitVec 64))
(declare-fun temp143_77 () (_ BitVec 64))
(declare-fun temp143_78 () (_ BitVec 64))
(declare-fun temp143_79 () (_ BitVec 64))
(declare-fun temp143_80 () (_ BitVec 64))
(declare-fun temp143_81 () (_ BitVec 64))
(declare-fun temp143_82 () (_ BitVec 64))
(declare-fun temp143_83 () (_ BitVec 64))
(declare-fun temp143_84 () (_ BitVec 64))
(declare-fun temp143_85 () (_ BitVec 64))
(declare-fun temp143_86 () (_ BitVec 64))
(declare-fun temp143_87 () (_ BitVec 64))
(declare-fun temp143_88 () (_ BitVec 64))
(declare-fun temp143_89 () (_ BitVec 64))
(declare-fun temp143_90 () (_ BitVec 64))
(declare-fun temp143_91 () (_ BitVec 64))
(declare-fun temp143_92 () (_ BitVec 64))
(declare-fun temp143_93 () (_ BitVec 64))
(declare-fun temp143_94 () (_ BitVec 64))
(declare-fun temp143_95 () (_ BitVec 64))
(declare-fun temp143_96 () (_ BitVec 64))
(declare-fun temp143_97 () (_ BitVec 64))
(declare-fun temp143_98 () (_ BitVec 64))
(declare-fun temp143_99 () (_ BitVec 64))
(declare-fun temp143_100 () (_ BitVec 64))
(declare-fun temp143_101 () (_ BitVec 64))
(declare-fun temp143_102 () (_ BitVec 64))
(declare-fun temp143_103 () (_ BitVec 64))
(declare-fun temp143_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp143_105 () (_ BitVec 64))
(declare-fun temp143_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp143_107 () (_ BitVec 64))
(declare-fun temp143_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp143_109 () (_ BitVec 64))
(declare-fun temp143_110 () (_ BitVec 64))
(declare-fun temp143_111 () (_ BitVec 64))
(declare-fun temp143_112 () (_ BitVec 64))
(declare-fun temp143_113 () (_ BitVec 64))
(declare-fun temp143_114 () (_ BitVec 64))
(declare-fun temp143_115 () (_ BitVec 64))
(declare-fun temp143_116 () (_ BitVec 64))
(declare-fun temp143_117 () (_ BitVec 64))
(declare-fun temp143_118 () (_ BitVec 64))
(declare-fun temp143_119 () (_ BitVec 64))
(declare-fun temp143_120 () (_ BitVec 64))
(declare-fun temp143_121 () (_ BitVec 64))
(declare-fun temp143_122 () (_ BitVec 64))
(declare-fun temp143_123 () (_ BitVec 64))
(declare-fun temp143_124 () (_ BitVec 64))
(declare-fun temp143_126 () (_ BitVec 64))
(declare-fun temp143_127 () (_ BitVec 64))
(declare-fun temp143_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp143_128 () (_ BitVec 64))
(declare-fun temp143_129 () (_ BitVec 64))
(declare-fun temp143_131 () (_ BitVec 64))
(declare-fun temp143_132 () (_ BitVec 64))
(declare-fun temp143_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp143_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp143_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp143_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp143_136 () (_ BitVec 64))
(declare-fun temp143_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp143_139 () (_ BitVec 64))
(declare-fun temp143_140 () (_ BitVec 64))
(declare-fun temp143_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp143_141 () (_ BitVec 64))
(declare-fun temp143_143 () (_ BitVec 64))
(declare-fun temp143_144 () (_ BitVec 64))
(declare-fun temp143_142 () (_ BitVec 64))
(declare-fun temp143_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp143_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp143_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp143_148 () (_ BitVec 64))
(declare-fun temp143_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp143_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp143_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp143_153 () (_ BitVec 64))
(declare-fun temp143_152 () (_ BitVec 64))
(declare-fun temp143_155 () (_ BitVec 64))
(declare-fun temp143_154 () (_ BitVec 64))
(declare-fun temp143_156 () (_ BitVec 64))
(assert (= temp143_1 #x0000000000000002))
(assert (= var989741 temp143_1))
(assert (= temp143_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp143_2)))
(assert (= temp143_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp143_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp143_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp143_4)))
(assert (= temp143_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp143_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp143_6 #x0000000000000000))
(assert (= var989776 temp143_6))
(assert (= temp143_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp143_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp143_8 #x0000000000000001))
(assert (= var989810 temp143_8))
(assert (= temp143_10 #x0000000000000000))
(assert (= temp143_9 temp143_10))
(assert (= temp143_12 #x0000000000000002))
(assert (= temp143_11 temp143_12))
(assert (= temp143_13 #x0000000000000000))
(assert (= var1387902 temp143_13))
(assert (= temp143_14 #x0000000000000001))
(assert (= var1387923 temp143_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp143_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp143_15)))
(assert (= temp143_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp143_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp143_17 #x0000000000000000))
(assert (= var1521661 temp143_17))
(assert (= temp143_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp143_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp143_19 #x0000000000000000))
(assert (= var1521706 temp143_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp143_20 #x0000000000000000))
(assert (= temp143_21 temp143_20))
(assert (= temp143_22 (select ARGNAME_padding_NAMEEND_VAL temp143_21)))
(assert (= temp143_23 #x0000000000000001))
(assert (= temp143_24 temp143_23))
(assert (= temp143_25 (select ARGNAME_padding_NAMEEND_VAL temp143_24)))
(assert (= temp143_26 #x0000000000000002))
(assert (= temp143_27 temp143_26))
(assert (= temp143_28 (select ARGNAME_padding_NAMEEND_VAL temp143_27)))
(assert (= temp143_29 #x0000000000000003))
(assert (= temp143_30 temp143_29))
(assert (= temp143_31 (select ARGNAME_padding_NAMEEND_VAL temp143_30)))
(assert (= temp143_32 #x0000000000000004))
(assert (= temp143_33 temp143_32))
(assert (= temp143_34 (select ARGNAME_padding_NAMEEND_VAL temp143_33)))
(assert (= temp143_35 #x0000000000000005))
(assert (= temp143_36 temp143_35))
(assert (= temp143_37 (select ARGNAME_padding_NAMEEND_VAL temp143_36)))
(assert (= temp143_38 #x0000000000000000))
(assert (= temp143_39 #x0000000000000000))
(assert (= temp143_40 temp143_39))
(assert (= temp143_41 (select ARGNAME_padding_NAMEEND_VAL temp143_40)))
(assert (= temp143_42 #x0000000000000000))
(assert (= temp143_43 #x0000000000000001))
(assert (= temp143_44 temp143_43))
(assert (= temp143_45 (select ARGNAME_padding_NAMEEND_VAL temp143_44)))
(assert (= temp143_46 #x0000000000000000))
(assert (= temp143_47 #x0000000000000002))
(assert (= temp143_48 temp143_47))
(assert (= temp143_49 (select ARGNAME_padding_NAMEEND_VAL temp143_48)))
(assert (= temp143_50 #x0000000000000000))
(assert (= temp143_51 #x0000000000000003))
(assert (= temp143_52 temp143_51))
(assert (= temp143_53 (select ARGNAME_padding_NAMEEND_VAL temp143_52)))
(assert (= temp143_54 #x0000000000000000))
(assert (= temp143_55 #x0000000000000004))
(assert (= temp143_56 temp143_55))
(assert (= temp143_57 (select ARGNAME_padding_NAMEEND_VAL temp143_56)))
(assert (= temp143_58 #x0000000000000000))
(assert (= temp143_59 #x0000000000000005))
(assert (= temp143_60 temp143_59))
(assert (= temp143_61 (select ARGNAME_padding_NAMEEND_VAL temp143_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp143_41 temp143_38)
             (bvslt temp143_45 temp143_42)
             (bvslt temp143_49 temp143_46)
             (bvslt temp143_53 temp143_50)
             (bvslt temp143_57 temp143_54)
             (bvslt temp143_61 temp143_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp143_62 #x0000000000000000))
(assert (= var2240290 temp143_62))
(assert (= temp143_63 #x0000000000000000))
(assert (= temp143_64 temp143_63))
(assert (= temp143_65 (select ARGNAME_stride_NAMEEND_VAL temp143_64)))
(assert (= temp143_66 #x0000000000000001))
(assert (= temp143_67 temp143_66))
(assert (= temp143_68 (select ARGNAME_stride_NAMEEND_VAL temp143_67)))
(assert (= temp143_69 #x0000000000000002))
(assert (= temp143_70 temp143_69))
(assert (= temp143_71 (select ARGNAME_stride_NAMEEND_VAL temp143_70)))
(assert (= temp143_72 #x0000000000000003))
(assert (= temp143_73 temp143_72))
(assert (= temp143_74 (select ARGNAME_stride_NAMEEND_VAL temp143_73)))
(assert (= temp143_75 #x0000000000000004))
(assert (= temp143_76 temp143_75))
(assert (= temp143_77 (select ARGNAME_stride_NAMEEND_VAL temp143_76)))
(assert (= temp143_78 #x0000000000000005))
(assert (= temp143_79 temp143_78))
(assert (= temp143_80 (select ARGNAME_stride_NAMEEND_VAL temp143_79)))
(assert (= temp143_81 #x0000000000000000))
(assert (= temp143_82 #x0000000000000000))
(assert (= temp143_83 temp143_82))
(assert (= temp143_84 (select ARGNAME_stride_NAMEEND_VAL temp143_83)))
(assert (= temp143_85 #x0000000000000000))
(assert (= temp143_86 #x0000000000000001))
(assert (= temp143_87 temp143_86))
(assert (= temp143_88 (select ARGNAME_stride_NAMEEND_VAL temp143_87)))
(assert (= temp143_89 #x0000000000000000))
(assert (= temp143_90 #x0000000000000002))
(assert (= temp143_91 temp143_90))
(assert (= temp143_92 (select ARGNAME_stride_NAMEEND_VAL temp143_91)))
(assert (= temp143_93 #x0000000000000000))
(assert (= temp143_94 #x0000000000000003))
(assert (= temp143_95 temp143_94))
(assert (= temp143_96 (select ARGNAME_stride_NAMEEND_VAL temp143_95)))
(assert (= temp143_97 #x0000000000000000))
(assert (= temp143_98 #x0000000000000004))
(assert (= temp143_99 temp143_98))
(assert (= temp143_100 (select ARGNAME_stride_NAMEEND_VAL temp143_99)))
(assert (= temp143_101 #x0000000000000000))
(assert (= temp143_102 #x0000000000000005))
(assert (= temp143_103 temp143_102))
(assert (= temp143_104 (select ARGNAME_stride_NAMEEND_VAL temp143_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp143_84 temp143_81)
             (bvsle temp143_88 temp143_85)
             (bvsle temp143_92 temp143_89)
             (bvsle temp143_96 temp143_93)
             (bvsle temp143_100 temp143_97)
             (bvsle temp143_104 temp143_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp143_105 #x0000000000000000))
(assert (= var2240311 temp143_105))
(assert (= temp143_106 #x0000000000000000))
(assert (= var2228402 temp143_106))
(assert (= temp143_107 #x0000000000000000))
(assert (= temp143_108 temp143_107))
(assert (= temp143_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp143_108)))
(assert (= temp143_110 #x0000000000000001))
(assert (= temp143_111 temp143_110))
(assert (= temp143_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp143_111)))
(assert (= temp143_113 #x0000000000000002))
(assert (= temp143_114 temp143_113))
(assert (= temp143_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp143_114)))
(assert (= temp143_116 #x0000000000000003))
(assert (= temp143_117 temp143_116))
(assert (= temp143_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp143_117)))
(assert (= temp143_119 #x0000000000000004))
(assert (= temp143_120 temp143_119))
(assert (= temp143_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp143_120)))
(assert (= temp143_122 #x0000000000000005))
(assert (= temp143_123 temp143_122))
(assert (= temp143_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp143_123)))
(assert (= temp143_126 var2228402))
(assert (= temp143_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp143_126)))
(assert (= temp143_125 temp143_127))
(assert (= var2240356
   (ite (bvslt temp143_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp143_128 #x0000000000000000))
(assert (= var2240356 temp143_128))
(assert (= temp143_129 #x0000000000000000))
(assert (= var2228402 temp143_129))
(assert (= temp143_131 var2228402))
(assert (= temp143_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp143_131)))
(assert (= temp143_130 temp143_132))
(assert (= var2240378 (bvsmod temp143_130 ARGNAME_groups_NAMEEND)))
(assert (= temp143_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp143_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp143_134 #x0000000000000001))
(assert (= var2240379 temp143_134))
(assert (= var2240398 var2240288))
(assert (= temp143_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp143_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp143_136 #x0000000000000001))
(assert (= var2240399 temp143_136))
(assert (= temp143_137 #x0000000000000001))
(assert (= var2229290 temp143_137))
(assert (= temp143_139 var2229290))
(assert (= temp143_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp143_139)))
(assert (= temp143_138 temp143_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp143_138)))
(assert (= temp143_141 #x0000000000000000))
(assert (= var2228402 temp143_141))
(assert (= temp143_143 var2228402))
(assert (= temp143_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp143_143)))
(assert (= temp143_142 temp143_144))
(assert (= temp143_145 #x0000000000000002))
(assert (= var2503529 temp143_145))
(assert (= temp143_146 #x0000000000000001))
(assert (= var2240569 temp143_146))
(assert (= temp143_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp143_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp143_148 #x0000000000000001))
(assert (= var1521778 temp143_148))
(assert (= temp143_149 #x0000000000000001))
(assert (= var1521908 temp143_149))
(assert (= var4010473 var1521908))
(assert (= temp143_150 #x0000000000000000))
(assert (= var4210495 temp143_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp143_151 #x0000000000000002))
(assert (= var4339331 temp143_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp143_153 #xffffffffffffffff))
(assert (= temp143_152 temp143_153))
(assert (= temp143_155 #xffffffffffffffff))
(assert (= temp143_154 temp143_155))
(assert (= temp143_156 #x0000000000000001))
(assert (= var1521778 temp143_156))
(model-add temp143_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp143_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp143_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp143_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp143_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp143_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






