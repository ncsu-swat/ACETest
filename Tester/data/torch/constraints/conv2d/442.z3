(declare-fun temp588_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp588_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp588_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp588_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp588_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp588_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp588_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp588_8 () (_ BitVec 64))
(declare-fun temp588_10 () (_ BitVec 64))
(declare-fun temp588_9 () (_ BitVec 64))
(declare-fun temp588_12 () (_ BitVec 64))
(declare-fun temp588_11 () (_ BitVec 64))
(declare-fun temp588_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp588_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp588_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp588_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp588_17 () (_ BitVec 64))
(declare-fun temp588_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp588_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp588_20 () (_ BitVec 64))
(declare-fun temp588_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp588_22 () (_ BitVec 64))
(declare-fun temp588_23 () (_ BitVec 64))
(declare-fun temp588_24 () (_ BitVec 64))
(declare-fun temp588_25 () (_ BitVec 64))
(declare-fun temp588_26 () (_ BitVec 64))
(declare-fun temp588_27 () (_ BitVec 64))
(declare-fun temp588_28 () (_ BitVec 64))
(declare-fun temp588_29 () (_ BitVec 64))
(declare-fun temp588_30 () (_ BitVec 64))
(declare-fun temp588_31 () (_ BitVec 64))
(declare-fun temp588_32 () (_ BitVec 64))
(declare-fun temp588_33 () (_ BitVec 64))
(declare-fun temp588_34 () (_ BitVec 64))
(declare-fun temp588_35 () (_ BitVec 64))
(declare-fun temp588_36 () (_ BitVec 64))
(declare-fun temp588_37 () (_ BitVec 64))
(declare-fun temp588_38 () (_ BitVec 64))
(declare-fun temp588_39 () (_ BitVec 64))
(declare-fun temp588_40 () (_ BitVec 64))
(declare-fun temp588_41 () (_ BitVec 64))
(declare-fun temp588_42 () (_ BitVec 64))
(declare-fun temp588_43 () (_ BitVec 64))
(declare-fun temp588_44 () (_ BitVec 64))
(declare-fun temp588_45 () (_ BitVec 64))
(declare-fun temp588_46 () (_ BitVec 64))
(declare-fun temp588_47 () (_ BitVec 64))
(declare-fun temp588_48 () (_ BitVec 64))
(declare-fun temp588_49 () (_ BitVec 64))
(declare-fun temp588_50 () (_ BitVec 64))
(declare-fun temp588_51 () (_ BitVec 64))
(declare-fun temp588_52 () (_ BitVec 64))
(declare-fun temp588_53 () (_ BitVec 64))
(declare-fun temp588_54 () (_ BitVec 64))
(declare-fun temp588_55 () (_ BitVec 64))
(declare-fun temp588_56 () (_ BitVec 64))
(declare-fun temp588_57 () (_ BitVec 64))
(declare-fun temp588_58 () (_ BitVec 64))
(declare-fun temp588_59 () (_ BitVec 64))
(declare-fun temp588_60 () (_ BitVec 64))
(declare-fun temp588_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp588_62 () (_ BitVec 64))
(declare-fun temp588_63 () (_ BitVec 64))
(declare-fun temp588_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp588_65 () (_ BitVec 64))
(declare-fun temp588_66 () (_ BitVec 64))
(declare-fun temp588_67 () (_ BitVec 64))
(declare-fun temp588_68 () (_ BitVec 64))
(declare-fun temp588_69 () (_ BitVec 64))
(declare-fun temp588_70 () (_ BitVec 64))
(declare-fun temp588_71 () (_ BitVec 64))
(declare-fun temp588_72 () (_ BitVec 64))
(declare-fun temp588_73 () (_ BitVec 64))
(declare-fun temp588_74 () (_ BitVec 64))
(declare-fun temp588_75 () (_ BitVec 64))
(declare-fun temp588_76 () (_ BitVec 64))
(declare-fun temp588_77 () (_ BitVec 64))
(declare-fun temp588_78 () (_ BitVec 64))
(declare-fun temp588_79 () (_ BitVec 64))
(declare-fun temp588_80 () (_ BitVec 64))
(declare-fun temp588_81 () (_ BitVec 64))
(declare-fun temp588_82 () (_ BitVec 64))
(declare-fun temp588_83 () (_ BitVec 64))
(declare-fun temp588_84 () (_ BitVec 64))
(declare-fun temp588_85 () (_ BitVec 64))
(declare-fun temp588_86 () (_ BitVec 64))
(declare-fun temp588_87 () (_ BitVec 64))
(declare-fun temp588_88 () (_ BitVec 64))
(declare-fun temp588_89 () (_ BitVec 64))
(declare-fun temp588_90 () (_ BitVec 64))
(declare-fun temp588_91 () (_ BitVec 64))
(declare-fun temp588_92 () (_ BitVec 64))
(declare-fun temp588_93 () (_ BitVec 64))
(declare-fun temp588_94 () (_ BitVec 64))
(declare-fun temp588_95 () (_ BitVec 64))
(declare-fun temp588_96 () (_ BitVec 64))
(declare-fun temp588_97 () (_ BitVec 64))
(declare-fun temp588_98 () (_ BitVec 64))
(declare-fun temp588_99 () (_ BitVec 64))
(declare-fun temp588_100 () (_ BitVec 64))
(declare-fun temp588_101 () (_ BitVec 64))
(declare-fun temp588_102 () (_ BitVec 64))
(declare-fun temp588_103 () (_ BitVec 64))
(declare-fun temp588_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp588_105 () (_ BitVec 64))
(declare-fun temp588_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp588_107 () (_ BitVec 64))
(declare-fun temp588_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp588_109 () (_ BitVec 64))
(declare-fun temp588_110 () (_ BitVec 64))
(declare-fun temp588_111 () (_ BitVec 64))
(declare-fun temp588_112 () (_ BitVec 64))
(declare-fun temp588_113 () (_ BitVec 64))
(declare-fun temp588_114 () (_ BitVec 64))
(declare-fun temp588_115 () (_ BitVec 64))
(declare-fun temp588_116 () (_ BitVec 64))
(declare-fun temp588_117 () (_ BitVec 64))
(declare-fun temp588_118 () (_ BitVec 64))
(declare-fun temp588_119 () (_ BitVec 64))
(declare-fun temp588_120 () (_ BitVec 64))
(declare-fun temp588_121 () (_ BitVec 64))
(declare-fun temp588_122 () (_ BitVec 64))
(declare-fun temp588_123 () (_ BitVec 64))
(declare-fun temp588_124 () (_ BitVec 64))
(declare-fun temp588_126 () (_ BitVec 64))
(declare-fun temp588_127 () (_ BitVec 64))
(declare-fun temp588_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp588_128 () (_ BitVec 64))
(declare-fun temp588_129 () (_ BitVec 64))
(declare-fun temp588_131 () (_ BitVec 64))
(declare-fun temp588_132 () (_ BitVec 64))
(declare-fun temp588_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp588_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp588_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp588_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp588_136 () (_ BitVec 64))
(declare-fun temp588_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp588_139 () (_ BitVec 64))
(declare-fun temp588_140 () (_ BitVec 64))
(declare-fun temp588_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp588_141 () (_ BitVec 64))
(declare-fun temp588_143 () (_ BitVec 64))
(declare-fun temp588_144 () (_ BitVec 64))
(declare-fun temp588_142 () (_ BitVec 64))
(declare-fun temp588_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp588_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp588_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp588_148 () (_ BitVec 64))
(declare-fun temp588_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp588_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp588_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var1522108 () (_ BitVec 64))
(declare-fun temp588_152 () (_ BitVec 64))
(declare-fun var1522109 () (_ BitVec 64))
(declare-fun var5717837 () (_ BitVec 64))
(declare-fun temp588_153 () (_ BitVec 64))
(assert (= temp588_1 #x0000000000000002))
(assert (= var989741 temp588_1))
(assert (= temp588_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp588_2)))
(assert (= temp588_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp588_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp588_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp588_4)))
(assert (= temp588_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp588_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp588_6 #x0000000000000000))
(assert (= var989776 temp588_6))
(assert (= temp588_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp588_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp588_8 #x0000000000000001))
(assert (= var989810 temp588_8))
(assert (= temp588_10 #x0000000000000000))
(assert (= temp588_9 temp588_10))
(assert (= temp588_12 #x0000000000000002))
(assert (= temp588_11 temp588_12))
(assert (= temp588_13 #x0000000000000000))
(assert (= var1387902 temp588_13))
(assert (= temp588_14 #x0000000000000001))
(assert (= var1387923 temp588_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp588_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp588_15)))
(assert (= temp588_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp588_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp588_17 #x0000000000000000))
(assert (= var1521661 temp588_17))
(assert (= temp588_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp588_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp588_19 #x0000000000000000))
(assert (= var1521706 temp588_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp588_20 #x0000000000000000))
(assert (= temp588_21 temp588_20))
(assert (= temp588_22 (select ARGNAME_padding_NAMEEND_VAL temp588_21)))
(assert (= temp588_23 #x0000000000000001))
(assert (= temp588_24 temp588_23))
(assert (= temp588_25 (select ARGNAME_padding_NAMEEND_VAL temp588_24)))
(assert (= temp588_26 #x0000000000000002))
(assert (= temp588_27 temp588_26))
(assert (= temp588_28 (select ARGNAME_padding_NAMEEND_VAL temp588_27)))
(assert (= temp588_29 #x0000000000000003))
(assert (= temp588_30 temp588_29))
(assert (= temp588_31 (select ARGNAME_padding_NAMEEND_VAL temp588_30)))
(assert (= temp588_32 #x0000000000000004))
(assert (= temp588_33 temp588_32))
(assert (= temp588_34 (select ARGNAME_padding_NAMEEND_VAL temp588_33)))
(assert (= temp588_35 #x0000000000000005))
(assert (= temp588_36 temp588_35))
(assert (= temp588_37 (select ARGNAME_padding_NAMEEND_VAL temp588_36)))
(assert (= temp588_38 #x0000000000000000))
(assert (= temp588_39 #x0000000000000000))
(assert (= temp588_40 temp588_39))
(assert (= temp588_41 (select ARGNAME_padding_NAMEEND_VAL temp588_40)))
(assert (= temp588_42 #x0000000000000000))
(assert (= temp588_43 #x0000000000000001))
(assert (= temp588_44 temp588_43))
(assert (= temp588_45 (select ARGNAME_padding_NAMEEND_VAL temp588_44)))
(assert (= temp588_46 #x0000000000000000))
(assert (= temp588_47 #x0000000000000002))
(assert (= temp588_48 temp588_47))
(assert (= temp588_49 (select ARGNAME_padding_NAMEEND_VAL temp588_48)))
(assert (= temp588_50 #x0000000000000000))
(assert (= temp588_51 #x0000000000000003))
(assert (= temp588_52 temp588_51))
(assert (= temp588_53 (select ARGNAME_padding_NAMEEND_VAL temp588_52)))
(assert (= temp588_54 #x0000000000000000))
(assert (= temp588_55 #x0000000000000004))
(assert (= temp588_56 temp588_55))
(assert (= temp588_57 (select ARGNAME_padding_NAMEEND_VAL temp588_56)))
(assert (= temp588_58 #x0000000000000000))
(assert (= temp588_59 #x0000000000000005))
(assert (= temp588_60 temp588_59))
(assert (= temp588_61 (select ARGNAME_padding_NAMEEND_VAL temp588_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp588_41 temp588_38)
             (bvslt temp588_45 temp588_42)
             (bvslt temp588_49 temp588_46)
             (bvslt temp588_53 temp588_50)
             (bvslt temp588_57 temp588_54)
             (bvslt temp588_61 temp588_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp588_62 #x0000000000000000))
(assert (= var2240290 temp588_62))
(assert (= temp588_63 #x0000000000000000))
(assert (= temp588_64 temp588_63))
(assert (= temp588_65 (select ARGNAME_stride_NAMEEND_VAL temp588_64)))
(assert (= temp588_66 #x0000000000000001))
(assert (= temp588_67 temp588_66))
(assert (= temp588_68 (select ARGNAME_stride_NAMEEND_VAL temp588_67)))
(assert (= temp588_69 #x0000000000000002))
(assert (= temp588_70 temp588_69))
(assert (= temp588_71 (select ARGNAME_stride_NAMEEND_VAL temp588_70)))
(assert (= temp588_72 #x0000000000000003))
(assert (= temp588_73 temp588_72))
(assert (= temp588_74 (select ARGNAME_stride_NAMEEND_VAL temp588_73)))
(assert (= temp588_75 #x0000000000000004))
(assert (= temp588_76 temp588_75))
(assert (= temp588_77 (select ARGNAME_stride_NAMEEND_VAL temp588_76)))
(assert (= temp588_78 #x0000000000000005))
(assert (= temp588_79 temp588_78))
(assert (= temp588_80 (select ARGNAME_stride_NAMEEND_VAL temp588_79)))
(assert (= temp588_81 #x0000000000000000))
(assert (= temp588_82 #x0000000000000000))
(assert (= temp588_83 temp588_82))
(assert (= temp588_84 (select ARGNAME_stride_NAMEEND_VAL temp588_83)))
(assert (= temp588_85 #x0000000000000000))
(assert (= temp588_86 #x0000000000000001))
(assert (= temp588_87 temp588_86))
(assert (= temp588_88 (select ARGNAME_stride_NAMEEND_VAL temp588_87)))
(assert (= temp588_89 #x0000000000000000))
(assert (= temp588_90 #x0000000000000002))
(assert (= temp588_91 temp588_90))
(assert (= temp588_92 (select ARGNAME_stride_NAMEEND_VAL temp588_91)))
(assert (= temp588_93 #x0000000000000000))
(assert (= temp588_94 #x0000000000000003))
(assert (= temp588_95 temp588_94))
(assert (= temp588_96 (select ARGNAME_stride_NAMEEND_VAL temp588_95)))
(assert (= temp588_97 #x0000000000000000))
(assert (= temp588_98 #x0000000000000004))
(assert (= temp588_99 temp588_98))
(assert (= temp588_100 (select ARGNAME_stride_NAMEEND_VAL temp588_99)))
(assert (= temp588_101 #x0000000000000000))
(assert (= temp588_102 #x0000000000000005))
(assert (= temp588_103 temp588_102))
(assert (= temp588_104 (select ARGNAME_stride_NAMEEND_VAL temp588_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp588_84 temp588_81)
             (bvsle temp588_88 temp588_85)
             (bvsle temp588_92 temp588_89)
             (bvsle temp588_96 temp588_93)
             (bvsle temp588_100 temp588_97)
             (bvsle temp588_104 temp588_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp588_105 #x0000000000000000))
(assert (= var2240311 temp588_105))
(assert (= temp588_106 #x0000000000000000))
(assert (= var2228402 temp588_106))
(assert (= temp588_107 #x0000000000000000))
(assert (= temp588_108 temp588_107))
(assert (= temp588_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp588_108)))
(assert (= temp588_110 #x0000000000000001))
(assert (= temp588_111 temp588_110))
(assert (= temp588_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp588_111)))
(assert (= temp588_113 #x0000000000000002))
(assert (= temp588_114 temp588_113))
(assert (= temp588_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp588_114)))
(assert (= temp588_116 #x0000000000000003))
(assert (= temp588_117 temp588_116))
(assert (= temp588_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp588_117)))
(assert (= temp588_119 #x0000000000000004))
(assert (= temp588_120 temp588_119))
(assert (= temp588_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp588_120)))
(assert (= temp588_122 #x0000000000000005))
(assert (= temp588_123 temp588_122))
(assert (= temp588_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp588_123)))
(assert (= temp588_126 var2228402))
(assert (= temp588_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp588_126)))
(assert (= temp588_125 temp588_127))
(assert (= var2240356
   (ite (bvslt temp588_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp588_128 #x0000000000000000))
(assert (= var2240356 temp588_128))
(assert (= temp588_129 #x0000000000000000))
(assert (= var2228402 temp588_129))
(assert (= temp588_131 var2228402))
(assert (= temp588_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp588_131)))
(assert (= temp588_130 temp588_132))
(assert (= var2240378 (bvsmod temp588_130 ARGNAME_groups_NAMEEND)))
(assert (= temp588_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp588_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp588_134 #x0000000000000001))
(assert (= var2240379 temp588_134))
(assert (= var2240398 var2240288))
(assert (= temp588_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp588_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp588_136 #x0000000000000001))
(assert (= var2240399 temp588_136))
(assert (= temp588_137 #x0000000000000001))
(assert (= var2229290 temp588_137))
(assert (= temp588_139 var2229290))
(assert (= temp588_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp588_139)))
(assert (= temp588_138 temp588_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp588_138)))
(assert (= temp588_141 #x0000000000000000))
(assert (= var2228402 temp588_141))
(assert (= temp588_143 var2228402))
(assert (= temp588_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp588_143)))
(assert (= temp588_142 temp588_144))
(assert (= temp588_145 #x0000000000000002))
(assert (= var2503529 temp588_145))
(assert (= temp588_146 #x0000000000000001))
(assert (= var2240569 temp588_146))
(assert (= temp588_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp588_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp588_148 #x0000000000000001))
(assert (= var1521778 temp588_148))
(assert (= temp588_149 #x0000000000000001))
(assert (= var1521908 temp588_149))
(assert (= var4010473 var1521908))
(assert (= temp588_150 #x0000000000000000))
(assert (= var4210495 temp588_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp588_151 #x0000000000000002))
(assert (= var4339331 temp588_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4993424 var1521921))
(assert (= var1522108 var1521633))
(assert (= temp588_152 #x0000000000000000))
(assert (= var1522109
   (ite (distinct var1522108 temp588_152) #x0000000000000001 #x0000000000000000)))
(assert (= var5717837 var1522109))
(assert (= temp588_153 #x0000000000000001))
(assert (= var1521778 temp588_153))
(model-add temp588_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp588_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp588_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp588_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp588_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp588_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






