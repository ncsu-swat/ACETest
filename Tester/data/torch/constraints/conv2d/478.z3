(declare-fun temp636_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp636_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp636_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp636_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp636_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp636_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp636_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp636_8 () (_ BitVec 64))
(declare-fun temp636_10 () (_ BitVec 64))
(declare-fun temp636_9 () (_ BitVec 64))
(declare-fun temp636_12 () (_ BitVec 64))
(declare-fun temp636_11 () (_ BitVec 64))
(declare-fun temp636_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp636_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp636_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp636_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp636_17 () (_ BitVec 64))
(declare-fun temp636_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp636_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp636_20 () (_ BitVec 64))
(declare-fun temp636_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp636_22 () (_ BitVec 64))
(declare-fun temp636_23 () (_ BitVec 64))
(declare-fun temp636_24 () (_ BitVec 64))
(declare-fun temp636_25 () (_ BitVec 64))
(declare-fun temp636_26 () (_ BitVec 64))
(declare-fun temp636_27 () (_ BitVec 64))
(declare-fun temp636_28 () (_ BitVec 64))
(declare-fun temp636_29 () (_ BitVec 64))
(declare-fun temp636_30 () (_ BitVec 64))
(declare-fun temp636_31 () (_ BitVec 64))
(declare-fun temp636_32 () (_ BitVec 64))
(declare-fun temp636_33 () (_ BitVec 64))
(declare-fun temp636_34 () (_ BitVec 64))
(declare-fun temp636_35 () (_ BitVec 64))
(declare-fun temp636_36 () (_ BitVec 64))
(declare-fun temp636_37 () (_ BitVec 64))
(declare-fun temp636_38 () (_ BitVec 64))
(declare-fun temp636_39 () (_ BitVec 64))
(declare-fun temp636_40 () (_ BitVec 64))
(declare-fun temp636_41 () (_ BitVec 64))
(declare-fun temp636_42 () (_ BitVec 64))
(declare-fun temp636_43 () (_ BitVec 64))
(declare-fun temp636_44 () (_ BitVec 64))
(declare-fun temp636_45 () (_ BitVec 64))
(declare-fun temp636_46 () (_ BitVec 64))
(declare-fun temp636_47 () (_ BitVec 64))
(declare-fun temp636_48 () (_ BitVec 64))
(declare-fun temp636_49 () (_ BitVec 64))
(declare-fun temp636_50 () (_ BitVec 64))
(declare-fun temp636_51 () (_ BitVec 64))
(declare-fun temp636_52 () (_ BitVec 64))
(declare-fun temp636_53 () (_ BitVec 64))
(declare-fun temp636_54 () (_ BitVec 64))
(declare-fun temp636_55 () (_ BitVec 64))
(declare-fun temp636_56 () (_ BitVec 64))
(declare-fun temp636_57 () (_ BitVec 64))
(declare-fun temp636_58 () (_ BitVec 64))
(declare-fun temp636_59 () (_ BitVec 64))
(declare-fun temp636_60 () (_ BitVec 64))
(declare-fun temp636_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp636_62 () (_ BitVec 64))
(declare-fun temp636_63 () (_ BitVec 64))
(declare-fun temp636_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp636_65 () (_ BitVec 64))
(declare-fun temp636_66 () (_ BitVec 64))
(declare-fun temp636_67 () (_ BitVec 64))
(declare-fun temp636_68 () (_ BitVec 64))
(declare-fun temp636_69 () (_ BitVec 64))
(declare-fun temp636_70 () (_ BitVec 64))
(declare-fun temp636_71 () (_ BitVec 64))
(declare-fun temp636_72 () (_ BitVec 64))
(declare-fun temp636_73 () (_ BitVec 64))
(declare-fun temp636_74 () (_ BitVec 64))
(declare-fun temp636_75 () (_ BitVec 64))
(declare-fun temp636_76 () (_ BitVec 64))
(declare-fun temp636_77 () (_ BitVec 64))
(declare-fun temp636_78 () (_ BitVec 64))
(declare-fun temp636_79 () (_ BitVec 64))
(declare-fun temp636_80 () (_ BitVec 64))
(declare-fun temp636_81 () (_ BitVec 64))
(declare-fun temp636_82 () (_ BitVec 64))
(declare-fun temp636_83 () (_ BitVec 64))
(declare-fun temp636_84 () (_ BitVec 64))
(declare-fun temp636_85 () (_ BitVec 64))
(declare-fun temp636_86 () (_ BitVec 64))
(declare-fun temp636_87 () (_ BitVec 64))
(declare-fun temp636_88 () (_ BitVec 64))
(declare-fun temp636_89 () (_ BitVec 64))
(declare-fun temp636_90 () (_ BitVec 64))
(declare-fun temp636_91 () (_ BitVec 64))
(declare-fun temp636_92 () (_ BitVec 64))
(declare-fun temp636_93 () (_ BitVec 64))
(declare-fun temp636_94 () (_ BitVec 64))
(declare-fun temp636_95 () (_ BitVec 64))
(declare-fun temp636_96 () (_ BitVec 64))
(declare-fun temp636_97 () (_ BitVec 64))
(declare-fun temp636_98 () (_ BitVec 64))
(declare-fun temp636_99 () (_ BitVec 64))
(declare-fun temp636_100 () (_ BitVec 64))
(declare-fun temp636_101 () (_ BitVec 64))
(declare-fun temp636_102 () (_ BitVec 64))
(declare-fun temp636_103 () (_ BitVec 64))
(declare-fun temp636_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp636_105 () (_ BitVec 64))
(declare-fun temp636_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp636_107 () (_ BitVec 64))
(declare-fun temp636_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp636_109 () (_ BitVec 64))
(declare-fun temp636_110 () (_ BitVec 64))
(declare-fun temp636_111 () (_ BitVec 64))
(declare-fun temp636_112 () (_ BitVec 64))
(declare-fun temp636_113 () (_ BitVec 64))
(declare-fun temp636_114 () (_ BitVec 64))
(declare-fun temp636_115 () (_ BitVec 64))
(declare-fun temp636_116 () (_ BitVec 64))
(declare-fun temp636_117 () (_ BitVec 64))
(declare-fun temp636_118 () (_ BitVec 64))
(declare-fun temp636_119 () (_ BitVec 64))
(declare-fun temp636_120 () (_ BitVec 64))
(declare-fun temp636_121 () (_ BitVec 64))
(declare-fun temp636_122 () (_ BitVec 64))
(declare-fun temp636_123 () (_ BitVec 64))
(declare-fun temp636_124 () (_ BitVec 64))
(declare-fun temp636_126 () (_ BitVec 64))
(declare-fun temp636_127 () (_ BitVec 64))
(declare-fun temp636_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp636_128 () (_ BitVec 64))
(declare-fun temp636_129 () (_ BitVec 64))
(declare-fun temp636_131 () (_ BitVec 64))
(declare-fun temp636_132 () (_ BitVec 64))
(declare-fun temp636_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp636_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp636_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp636_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp636_136 () (_ BitVec 64))
(declare-fun temp636_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp636_139 () (_ BitVec 64))
(declare-fun temp636_140 () (_ BitVec 64))
(declare-fun temp636_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp636_141 () (_ BitVec 64))
(declare-fun temp636_143 () (_ BitVec 64))
(declare-fun temp636_144 () (_ BitVec 64))
(declare-fun temp636_142 () (_ BitVec 64))
(declare-fun temp636_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp636_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp636_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp636_148 () (_ BitVec 64))
(declare-fun temp636_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp636_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp636_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var1522214 () (_ BitVec 64))
(declare-fun temp636_152 () (_ BitVec 64))
(declare-fun var1522215 () (_ BitVec 64))
(declare-fun temp636_153 () (_ BitVec 64))
(assert (= temp636_1 #x0000000000000002))
(assert (= var989741 temp636_1))
(assert (= temp636_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp636_2)))
(assert (= temp636_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp636_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp636_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp636_4)))
(assert (= temp636_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp636_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp636_6 #x0000000000000000))
(assert (= var989776 temp636_6))
(assert (= temp636_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp636_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp636_8 #x0000000000000001))
(assert (= var989810 temp636_8))
(assert (= temp636_10 #x0000000000000000))
(assert (= temp636_9 temp636_10))
(assert (= temp636_12 #x0000000000000002))
(assert (= temp636_11 temp636_12))
(assert (= temp636_13 #x0000000000000000))
(assert (= var1387902 temp636_13))
(assert (= temp636_14 #x0000000000000001))
(assert (= var1387923 temp636_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp636_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp636_15)))
(assert (= temp636_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp636_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp636_17 #x0000000000000000))
(assert (= var1521661 temp636_17))
(assert (= temp636_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp636_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp636_19 #x0000000000000000))
(assert (= var1521706 temp636_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp636_20 #x0000000000000000))
(assert (= temp636_21 temp636_20))
(assert (= temp636_22 (select ARGNAME_padding_NAMEEND_VAL temp636_21)))
(assert (= temp636_23 #x0000000000000001))
(assert (= temp636_24 temp636_23))
(assert (= temp636_25 (select ARGNAME_padding_NAMEEND_VAL temp636_24)))
(assert (= temp636_26 #x0000000000000002))
(assert (= temp636_27 temp636_26))
(assert (= temp636_28 (select ARGNAME_padding_NAMEEND_VAL temp636_27)))
(assert (= temp636_29 #x0000000000000003))
(assert (= temp636_30 temp636_29))
(assert (= temp636_31 (select ARGNAME_padding_NAMEEND_VAL temp636_30)))
(assert (= temp636_32 #x0000000000000004))
(assert (= temp636_33 temp636_32))
(assert (= temp636_34 (select ARGNAME_padding_NAMEEND_VAL temp636_33)))
(assert (= temp636_35 #x0000000000000005))
(assert (= temp636_36 temp636_35))
(assert (= temp636_37 (select ARGNAME_padding_NAMEEND_VAL temp636_36)))
(assert (= temp636_38 #x0000000000000000))
(assert (= temp636_39 #x0000000000000000))
(assert (= temp636_40 temp636_39))
(assert (= temp636_41 (select ARGNAME_padding_NAMEEND_VAL temp636_40)))
(assert (= temp636_42 #x0000000000000000))
(assert (= temp636_43 #x0000000000000001))
(assert (= temp636_44 temp636_43))
(assert (= temp636_45 (select ARGNAME_padding_NAMEEND_VAL temp636_44)))
(assert (= temp636_46 #x0000000000000000))
(assert (= temp636_47 #x0000000000000002))
(assert (= temp636_48 temp636_47))
(assert (= temp636_49 (select ARGNAME_padding_NAMEEND_VAL temp636_48)))
(assert (= temp636_50 #x0000000000000000))
(assert (= temp636_51 #x0000000000000003))
(assert (= temp636_52 temp636_51))
(assert (= temp636_53 (select ARGNAME_padding_NAMEEND_VAL temp636_52)))
(assert (= temp636_54 #x0000000000000000))
(assert (= temp636_55 #x0000000000000004))
(assert (= temp636_56 temp636_55))
(assert (= temp636_57 (select ARGNAME_padding_NAMEEND_VAL temp636_56)))
(assert (= temp636_58 #x0000000000000000))
(assert (= temp636_59 #x0000000000000005))
(assert (= temp636_60 temp636_59))
(assert (= temp636_61 (select ARGNAME_padding_NAMEEND_VAL temp636_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp636_41 temp636_38)
             (bvslt temp636_45 temp636_42)
             (bvslt temp636_49 temp636_46)
             (bvslt temp636_53 temp636_50)
             (bvslt temp636_57 temp636_54)
             (bvslt temp636_61 temp636_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp636_62 #x0000000000000000))
(assert (= var2240290 temp636_62))
(assert (= temp636_63 #x0000000000000000))
(assert (= temp636_64 temp636_63))
(assert (= temp636_65 (select ARGNAME_stride_NAMEEND_VAL temp636_64)))
(assert (= temp636_66 #x0000000000000001))
(assert (= temp636_67 temp636_66))
(assert (= temp636_68 (select ARGNAME_stride_NAMEEND_VAL temp636_67)))
(assert (= temp636_69 #x0000000000000002))
(assert (= temp636_70 temp636_69))
(assert (= temp636_71 (select ARGNAME_stride_NAMEEND_VAL temp636_70)))
(assert (= temp636_72 #x0000000000000003))
(assert (= temp636_73 temp636_72))
(assert (= temp636_74 (select ARGNAME_stride_NAMEEND_VAL temp636_73)))
(assert (= temp636_75 #x0000000000000004))
(assert (= temp636_76 temp636_75))
(assert (= temp636_77 (select ARGNAME_stride_NAMEEND_VAL temp636_76)))
(assert (= temp636_78 #x0000000000000005))
(assert (= temp636_79 temp636_78))
(assert (= temp636_80 (select ARGNAME_stride_NAMEEND_VAL temp636_79)))
(assert (= temp636_81 #x0000000000000000))
(assert (= temp636_82 #x0000000000000000))
(assert (= temp636_83 temp636_82))
(assert (= temp636_84 (select ARGNAME_stride_NAMEEND_VAL temp636_83)))
(assert (= temp636_85 #x0000000000000000))
(assert (= temp636_86 #x0000000000000001))
(assert (= temp636_87 temp636_86))
(assert (= temp636_88 (select ARGNAME_stride_NAMEEND_VAL temp636_87)))
(assert (= temp636_89 #x0000000000000000))
(assert (= temp636_90 #x0000000000000002))
(assert (= temp636_91 temp636_90))
(assert (= temp636_92 (select ARGNAME_stride_NAMEEND_VAL temp636_91)))
(assert (= temp636_93 #x0000000000000000))
(assert (= temp636_94 #x0000000000000003))
(assert (= temp636_95 temp636_94))
(assert (= temp636_96 (select ARGNAME_stride_NAMEEND_VAL temp636_95)))
(assert (= temp636_97 #x0000000000000000))
(assert (= temp636_98 #x0000000000000004))
(assert (= temp636_99 temp636_98))
(assert (= temp636_100 (select ARGNAME_stride_NAMEEND_VAL temp636_99)))
(assert (= temp636_101 #x0000000000000000))
(assert (= temp636_102 #x0000000000000005))
(assert (= temp636_103 temp636_102))
(assert (= temp636_104 (select ARGNAME_stride_NAMEEND_VAL temp636_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp636_84 temp636_81)
             (bvsle temp636_88 temp636_85)
             (bvsle temp636_92 temp636_89)
             (bvsle temp636_96 temp636_93)
             (bvsle temp636_100 temp636_97)
             (bvsle temp636_104 temp636_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp636_105 #x0000000000000000))
(assert (= var2240311 temp636_105))
(assert (= temp636_106 #x0000000000000000))
(assert (= var2228402 temp636_106))
(assert (= temp636_107 #x0000000000000000))
(assert (= temp636_108 temp636_107))
(assert (= temp636_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp636_108)))
(assert (= temp636_110 #x0000000000000001))
(assert (= temp636_111 temp636_110))
(assert (= temp636_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp636_111)))
(assert (= temp636_113 #x0000000000000002))
(assert (= temp636_114 temp636_113))
(assert (= temp636_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp636_114)))
(assert (= temp636_116 #x0000000000000003))
(assert (= temp636_117 temp636_116))
(assert (= temp636_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp636_117)))
(assert (= temp636_119 #x0000000000000004))
(assert (= temp636_120 temp636_119))
(assert (= temp636_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp636_120)))
(assert (= temp636_122 #x0000000000000005))
(assert (= temp636_123 temp636_122))
(assert (= temp636_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp636_123)))
(assert (= temp636_126 var2228402))
(assert (= temp636_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp636_126)))
(assert (= temp636_125 temp636_127))
(assert (= var2240356
   (ite (bvslt temp636_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp636_128 #x0000000000000000))
(assert (= var2240356 temp636_128))
(assert (= temp636_129 #x0000000000000000))
(assert (= var2228402 temp636_129))
(assert (= temp636_131 var2228402))
(assert (= temp636_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp636_131)))
(assert (= temp636_130 temp636_132))
(assert (= var2240378 (bvsmod temp636_130 ARGNAME_groups_NAMEEND)))
(assert (= temp636_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp636_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp636_134 #x0000000000000001))
(assert (= var2240379 temp636_134))
(assert (= var2240398 var2240288))
(assert (= temp636_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp636_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp636_136 #x0000000000000001))
(assert (= var2240399 temp636_136))
(assert (= temp636_137 #x0000000000000001))
(assert (= var2229290 temp636_137))
(assert (= temp636_139 var2229290))
(assert (= temp636_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp636_139)))
(assert (= temp636_138 temp636_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp636_138)))
(assert (= temp636_141 #x0000000000000000))
(assert (= var2228402 temp636_141))
(assert (= temp636_143 var2228402))
(assert (= temp636_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp636_143)))
(assert (= temp636_142 temp636_144))
(assert (= temp636_145 #x0000000000000002))
(assert (= var2503529 temp636_145))
(assert (= temp636_146 #x0000000000000001))
(assert (= var2240569 temp636_146))
(assert (= temp636_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp636_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp636_148 #x0000000000000001))
(assert (= var1521778 temp636_148))
(assert (= temp636_149 #x0000000000000001))
(assert (= var1521908 temp636_149))
(assert (= var4010473 var1521908))
(assert (= temp636_150 #x0000000000000000))
(assert (= var4210495 temp636_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp636_151 #x0000000000000002))
(assert (= var4339331 temp636_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4796816 var1521921))
(assert (= var1522214 var1521633))
(assert (= temp636_152 #x0000000000000000))
(assert (= var1522215
   (ite (distinct var1522214 temp636_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp636_153 #x0000000000000001))
(assert (= var1521778 temp636_153))
(model-add temp636_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp636_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp636_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp636_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp636_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp636_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






