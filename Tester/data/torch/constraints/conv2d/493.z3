(declare-fun temp655_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp655_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp655_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp655_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp655_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp655_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp655_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp655_8 () (_ BitVec 64))
(declare-fun temp655_10 () (_ BitVec 64))
(declare-fun temp655_9 () (_ BitVec 64))
(declare-fun temp655_12 () (_ BitVec 64))
(declare-fun temp655_11 () (_ BitVec 64))
(declare-fun temp655_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp655_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp655_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp655_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp655_17 () (_ BitVec 64))
(declare-fun temp655_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp655_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp655_20 () (_ BitVec 64))
(declare-fun temp655_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp655_22 () (_ BitVec 64))
(declare-fun temp655_23 () (_ BitVec 64))
(declare-fun temp655_24 () (_ BitVec 64))
(declare-fun temp655_25 () (_ BitVec 64))
(declare-fun temp655_26 () (_ BitVec 64))
(declare-fun temp655_27 () (_ BitVec 64))
(declare-fun temp655_28 () (_ BitVec 64))
(declare-fun temp655_29 () (_ BitVec 64))
(declare-fun temp655_30 () (_ BitVec 64))
(declare-fun temp655_31 () (_ BitVec 64))
(declare-fun temp655_32 () (_ BitVec 64))
(declare-fun temp655_33 () (_ BitVec 64))
(declare-fun temp655_34 () (_ BitVec 64))
(declare-fun temp655_35 () (_ BitVec 64))
(declare-fun temp655_36 () (_ BitVec 64))
(declare-fun temp655_37 () (_ BitVec 64))
(declare-fun temp655_38 () (_ BitVec 64))
(declare-fun temp655_39 () (_ BitVec 64))
(declare-fun temp655_40 () (_ BitVec 64))
(declare-fun temp655_41 () (_ BitVec 64))
(declare-fun temp655_42 () (_ BitVec 64))
(declare-fun temp655_43 () (_ BitVec 64))
(declare-fun temp655_44 () (_ BitVec 64))
(declare-fun temp655_45 () (_ BitVec 64))
(declare-fun temp655_46 () (_ BitVec 64))
(declare-fun temp655_47 () (_ BitVec 64))
(declare-fun temp655_48 () (_ BitVec 64))
(declare-fun temp655_49 () (_ BitVec 64))
(declare-fun temp655_50 () (_ BitVec 64))
(declare-fun temp655_51 () (_ BitVec 64))
(declare-fun temp655_52 () (_ BitVec 64))
(declare-fun temp655_53 () (_ BitVec 64))
(declare-fun temp655_54 () (_ BitVec 64))
(declare-fun temp655_55 () (_ BitVec 64))
(declare-fun temp655_56 () (_ BitVec 64))
(declare-fun temp655_57 () (_ BitVec 64))
(declare-fun temp655_58 () (_ BitVec 64))
(declare-fun temp655_59 () (_ BitVec 64))
(declare-fun temp655_60 () (_ BitVec 64))
(declare-fun temp655_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp655_62 () (_ BitVec 64))
(declare-fun temp655_63 () (_ BitVec 64))
(declare-fun temp655_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp655_65 () (_ BitVec 64))
(declare-fun temp655_66 () (_ BitVec 64))
(declare-fun temp655_67 () (_ BitVec 64))
(declare-fun temp655_68 () (_ BitVec 64))
(declare-fun temp655_69 () (_ BitVec 64))
(declare-fun temp655_70 () (_ BitVec 64))
(declare-fun temp655_71 () (_ BitVec 64))
(declare-fun temp655_72 () (_ BitVec 64))
(declare-fun temp655_73 () (_ BitVec 64))
(declare-fun temp655_74 () (_ BitVec 64))
(declare-fun temp655_75 () (_ BitVec 64))
(declare-fun temp655_76 () (_ BitVec 64))
(declare-fun temp655_77 () (_ BitVec 64))
(declare-fun temp655_78 () (_ BitVec 64))
(declare-fun temp655_79 () (_ BitVec 64))
(declare-fun temp655_80 () (_ BitVec 64))
(declare-fun temp655_81 () (_ BitVec 64))
(declare-fun temp655_82 () (_ BitVec 64))
(declare-fun temp655_83 () (_ BitVec 64))
(declare-fun temp655_84 () (_ BitVec 64))
(declare-fun temp655_85 () (_ BitVec 64))
(declare-fun temp655_86 () (_ BitVec 64))
(declare-fun temp655_87 () (_ BitVec 64))
(declare-fun temp655_88 () (_ BitVec 64))
(declare-fun temp655_89 () (_ BitVec 64))
(declare-fun temp655_90 () (_ BitVec 64))
(declare-fun temp655_91 () (_ BitVec 64))
(declare-fun temp655_92 () (_ BitVec 64))
(declare-fun temp655_93 () (_ BitVec 64))
(declare-fun temp655_94 () (_ BitVec 64))
(declare-fun temp655_95 () (_ BitVec 64))
(declare-fun temp655_96 () (_ BitVec 64))
(declare-fun temp655_97 () (_ BitVec 64))
(declare-fun temp655_98 () (_ BitVec 64))
(declare-fun temp655_99 () (_ BitVec 64))
(declare-fun temp655_100 () (_ BitVec 64))
(declare-fun temp655_101 () (_ BitVec 64))
(declare-fun temp655_102 () (_ BitVec 64))
(declare-fun temp655_103 () (_ BitVec 64))
(declare-fun temp655_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp655_105 () (_ BitVec 64))
(declare-fun temp655_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp655_107 () (_ BitVec 64))
(declare-fun temp655_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp655_109 () (_ BitVec 64))
(declare-fun temp655_110 () (_ BitVec 64))
(declare-fun temp655_111 () (_ BitVec 64))
(declare-fun temp655_112 () (_ BitVec 64))
(declare-fun temp655_113 () (_ BitVec 64))
(declare-fun temp655_114 () (_ BitVec 64))
(declare-fun temp655_115 () (_ BitVec 64))
(declare-fun temp655_116 () (_ BitVec 64))
(declare-fun temp655_117 () (_ BitVec 64))
(declare-fun temp655_118 () (_ BitVec 64))
(declare-fun temp655_119 () (_ BitVec 64))
(declare-fun temp655_120 () (_ BitVec 64))
(declare-fun temp655_121 () (_ BitVec 64))
(declare-fun temp655_122 () (_ BitVec 64))
(declare-fun temp655_123 () (_ BitVec 64))
(declare-fun temp655_124 () (_ BitVec 64))
(declare-fun temp655_126 () (_ BitVec 64))
(declare-fun temp655_127 () (_ BitVec 64))
(declare-fun temp655_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp655_128 () (_ BitVec 64))
(declare-fun temp655_129 () (_ BitVec 64))
(declare-fun temp655_131 () (_ BitVec 64))
(declare-fun temp655_132 () (_ BitVec 64))
(declare-fun temp655_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp655_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp655_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp655_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp655_136 () (_ BitVec 64))
(declare-fun temp655_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp655_139 () (_ BitVec 64))
(declare-fun temp655_140 () (_ BitVec 64))
(declare-fun temp655_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp655_141 () (_ BitVec 64))
(declare-fun temp655_143 () (_ BitVec 64))
(declare-fun temp655_144 () (_ BitVec 64))
(declare-fun temp655_142 () (_ BitVec 64))
(declare-fun temp655_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp655_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp655_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp655_148 () (_ BitVec 64))
(declare-fun temp655_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp655_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp655_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp655_153 () (_ BitVec 64))
(declare-fun temp655_152 () (_ BitVec 64))
(declare-fun temp655_155 () (_ BitVec 64))
(declare-fun temp655_154 () (_ BitVec 64))
(declare-fun temp655_156 () (_ BitVec 64))
(assert (= temp655_1 #x0000000000000002))
(assert (= var989741 temp655_1))
(assert (= temp655_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp655_2)))
(assert (= temp655_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp655_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp655_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp655_4)))
(assert (= temp655_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp655_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp655_6 #x0000000000000000))
(assert (= var989776 temp655_6))
(assert (= temp655_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp655_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp655_8 #x0000000000000001))
(assert (= var989810 temp655_8))
(assert (= temp655_10 #x0000000000000000))
(assert (= temp655_9 temp655_10))
(assert (= temp655_12 #x0000000000000002))
(assert (= temp655_11 temp655_12))
(assert (= temp655_13 #x0000000000000000))
(assert (= var1387902 temp655_13))
(assert (= temp655_14 #x0000000000000001))
(assert (= var1387923 temp655_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp655_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp655_15)))
(assert (= temp655_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp655_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp655_17 #x0000000000000000))
(assert (= var1521661 temp655_17))
(assert (= temp655_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp655_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp655_19 #x0000000000000000))
(assert (= var1521706 temp655_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp655_20 #x0000000000000000))
(assert (= temp655_21 temp655_20))
(assert (= temp655_22 (select ARGNAME_padding_NAMEEND_VAL temp655_21)))
(assert (= temp655_23 #x0000000000000001))
(assert (= temp655_24 temp655_23))
(assert (= temp655_25 (select ARGNAME_padding_NAMEEND_VAL temp655_24)))
(assert (= temp655_26 #x0000000000000002))
(assert (= temp655_27 temp655_26))
(assert (= temp655_28 (select ARGNAME_padding_NAMEEND_VAL temp655_27)))
(assert (= temp655_29 #x0000000000000003))
(assert (= temp655_30 temp655_29))
(assert (= temp655_31 (select ARGNAME_padding_NAMEEND_VAL temp655_30)))
(assert (= temp655_32 #x0000000000000004))
(assert (= temp655_33 temp655_32))
(assert (= temp655_34 (select ARGNAME_padding_NAMEEND_VAL temp655_33)))
(assert (= temp655_35 #x0000000000000005))
(assert (= temp655_36 temp655_35))
(assert (= temp655_37 (select ARGNAME_padding_NAMEEND_VAL temp655_36)))
(assert (= temp655_38 #x0000000000000000))
(assert (= temp655_39 #x0000000000000000))
(assert (= temp655_40 temp655_39))
(assert (= temp655_41 (select ARGNAME_padding_NAMEEND_VAL temp655_40)))
(assert (= temp655_42 #x0000000000000000))
(assert (= temp655_43 #x0000000000000001))
(assert (= temp655_44 temp655_43))
(assert (= temp655_45 (select ARGNAME_padding_NAMEEND_VAL temp655_44)))
(assert (= temp655_46 #x0000000000000000))
(assert (= temp655_47 #x0000000000000002))
(assert (= temp655_48 temp655_47))
(assert (= temp655_49 (select ARGNAME_padding_NAMEEND_VAL temp655_48)))
(assert (= temp655_50 #x0000000000000000))
(assert (= temp655_51 #x0000000000000003))
(assert (= temp655_52 temp655_51))
(assert (= temp655_53 (select ARGNAME_padding_NAMEEND_VAL temp655_52)))
(assert (= temp655_54 #x0000000000000000))
(assert (= temp655_55 #x0000000000000004))
(assert (= temp655_56 temp655_55))
(assert (= temp655_57 (select ARGNAME_padding_NAMEEND_VAL temp655_56)))
(assert (= temp655_58 #x0000000000000000))
(assert (= temp655_59 #x0000000000000005))
(assert (= temp655_60 temp655_59))
(assert (= temp655_61 (select ARGNAME_padding_NAMEEND_VAL temp655_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp655_41 temp655_38)
             (bvslt temp655_45 temp655_42)
             (bvslt temp655_49 temp655_46)
             (bvslt temp655_53 temp655_50)
             (bvslt temp655_57 temp655_54)
             (bvslt temp655_61 temp655_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp655_62 #x0000000000000000))
(assert (= var2240290 temp655_62))
(assert (= temp655_63 #x0000000000000000))
(assert (= temp655_64 temp655_63))
(assert (= temp655_65 (select ARGNAME_stride_NAMEEND_VAL temp655_64)))
(assert (= temp655_66 #x0000000000000001))
(assert (= temp655_67 temp655_66))
(assert (= temp655_68 (select ARGNAME_stride_NAMEEND_VAL temp655_67)))
(assert (= temp655_69 #x0000000000000002))
(assert (= temp655_70 temp655_69))
(assert (= temp655_71 (select ARGNAME_stride_NAMEEND_VAL temp655_70)))
(assert (= temp655_72 #x0000000000000003))
(assert (= temp655_73 temp655_72))
(assert (= temp655_74 (select ARGNAME_stride_NAMEEND_VAL temp655_73)))
(assert (= temp655_75 #x0000000000000004))
(assert (= temp655_76 temp655_75))
(assert (= temp655_77 (select ARGNAME_stride_NAMEEND_VAL temp655_76)))
(assert (= temp655_78 #x0000000000000005))
(assert (= temp655_79 temp655_78))
(assert (= temp655_80 (select ARGNAME_stride_NAMEEND_VAL temp655_79)))
(assert (= temp655_81 #x0000000000000000))
(assert (= temp655_82 #x0000000000000000))
(assert (= temp655_83 temp655_82))
(assert (= temp655_84 (select ARGNAME_stride_NAMEEND_VAL temp655_83)))
(assert (= temp655_85 #x0000000000000000))
(assert (= temp655_86 #x0000000000000001))
(assert (= temp655_87 temp655_86))
(assert (= temp655_88 (select ARGNAME_stride_NAMEEND_VAL temp655_87)))
(assert (= temp655_89 #x0000000000000000))
(assert (= temp655_90 #x0000000000000002))
(assert (= temp655_91 temp655_90))
(assert (= temp655_92 (select ARGNAME_stride_NAMEEND_VAL temp655_91)))
(assert (= temp655_93 #x0000000000000000))
(assert (= temp655_94 #x0000000000000003))
(assert (= temp655_95 temp655_94))
(assert (= temp655_96 (select ARGNAME_stride_NAMEEND_VAL temp655_95)))
(assert (= temp655_97 #x0000000000000000))
(assert (= temp655_98 #x0000000000000004))
(assert (= temp655_99 temp655_98))
(assert (= temp655_100 (select ARGNAME_stride_NAMEEND_VAL temp655_99)))
(assert (= temp655_101 #x0000000000000000))
(assert (= temp655_102 #x0000000000000005))
(assert (= temp655_103 temp655_102))
(assert (= temp655_104 (select ARGNAME_stride_NAMEEND_VAL temp655_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp655_84 temp655_81)
             (bvsle temp655_88 temp655_85)
             (bvsle temp655_92 temp655_89)
             (bvsle temp655_96 temp655_93)
             (bvsle temp655_100 temp655_97)
             (bvsle temp655_104 temp655_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp655_105 #x0000000000000000))
(assert (= var2240311 temp655_105))
(assert (= temp655_106 #x0000000000000000))
(assert (= var2228402 temp655_106))
(assert (= temp655_107 #x0000000000000000))
(assert (= temp655_108 temp655_107))
(assert (= temp655_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp655_108)))
(assert (= temp655_110 #x0000000000000001))
(assert (= temp655_111 temp655_110))
(assert (= temp655_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp655_111)))
(assert (= temp655_113 #x0000000000000002))
(assert (= temp655_114 temp655_113))
(assert (= temp655_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp655_114)))
(assert (= temp655_116 #x0000000000000003))
(assert (= temp655_117 temp655_116))
(assert (= temp655_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp655_117)))
(assert (= temp655_119 #x0000000000000004))
(assert (= temp655_120 temp655_119))
(assert (= temp655_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp655_120)))
(assert (= temp655_122 #x0000000000000005))
(assert (= temp655_123 temp655_122))
(assert (= temp655_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp655_123)))
(assert (= temp655_126 var2228402))
(assert (= temp655_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp655_126)))
(assert (= temp655_125 temp655_127))
(assert (= var2240356
   (ite (bvslt temp655_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp655_128 #x0000000000000000))
(assert (= var2240356 temp655_128))
(assert (= temp655_129 #x0000000000000000))
(assert (= var2228402 temp655_129))
(assert (= temp655_131 var2228402))
(assert (= temp655_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp655_131)))
(assert (= temp655_130 temp655_132))
(assert (= var2240378 (bvsmod temp655_130 ARGNAME_groups_NAMEEND)))
(assert (= temp655_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp655_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp655_134 #x0000000000000001))
(assert (= var2240379 temp655_134))
(assert (= var2240398 var2240288))
(assert (= temp655_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp655_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp655_136 #x0000000000000001))
(assert (= var2240399 temp655_136))
(assert (= temp655_137 #x0000000000000001))
(assert (= var2229290 temp655_137))
(assert (= temp655_139 var2229290))
(assert (= temp655_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp655_139)))
(assert (= temp655_138 temp655_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp655_138)))
(assert (= temp655_141 #x0000000000000000))
(assert (= var2228402 temp655_141))
(assert (= temp655_143 var2228402))
(assert (= temp655_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp655_143)))
(assert (= temp655_142 temp655_144))
(assert (= temp655_145 #x0000000000000002))
(assert (= var2503529 temp655_145))
(assert (= temp655_146 #x0000000000000001))
(assert (= var2240569 temp655_146))
(assert (= temp655_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp655_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp655_148 #x0000000000000001))
(assert (= var1521778 temp655_148))
(assert (= temp655_149 #x0000000000000001))
(assert (= var1521908 temp655_149))
(assert (= var4010473 var1521908))
(assert (= temp655_150 #x0000000000000000))
(assert (= var4210495 temp655_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp655_151 #x0000000000000002))
(assert (= var4339331 temp655_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp655_153 #xffffffffffffffff))
(assert (= temp655_152 temp655_153))
(assert (= temp655_155 #xffffffffffffffff))
(assert (= temp655_154 temp655_155))
(assert (= temp655_156 #x0000000000000001))
(assert (= var1521778 temp655_156))
(model-add temp655_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp655_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp655_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp655_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp655_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp655_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)





