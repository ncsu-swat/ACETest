(declare-fun temp1028_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp1028_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp1028_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp1028_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp1028_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp1028_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp1028_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp1028_8 () (_ BitVec 64))
(declare-fun temp1028_10 () (_ BitVec 64))
(declare-fun temp1028_9 () (_ BitVec 64))
(declare-fun temp1028_12 () (_ BitVec 64))
(declare-fun temp1028_11 () (_ BitVec 64))
(declare-fun temp1028_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp1028_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp1028_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp1028_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp1028_17 () (_ BitVec 64))
(declare-fun temp1028_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp1028_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp1028_20 () (_ BitVec 64))
(declare-fun temp1028_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1028_22 () (_ BitVec 64))
(declare-fun temp1028_23 () (_ BitVec 64))
(declare-fun temp1028_24 () (_ BitVec 64))
(declare-fun temp1028_25 () (_ BitVec 64))
(declare-fun temp1028_26 () (_ BitVec 64))
(declare-fun temp1028_27 () (_ BitVec 64))
(declare-fun temp1028_28 () (_ BitVec 64))
(declare-fun temp1028_29 () (_ BitVec 64))
(declare-fun temp1028_30 () (_ BitVec 64))
(declare-fun temp1028_31 () (_ BitVec 64))
(declare-fun temp1028_32 () (_ BitVec 64))
(declare-fun temp1028_33 () (_ BitVec 64))
(declare-fun temp1028_34 () (_ BitVec 64))
(declare-fun temp1028_35 () (_ BitVec 64))
(declare-fun temp1028_36 () (_ BitVec 64))
(declare-fun temp1028_37 () (_ BitVec 64))
(declare-fun temp1028_38 () (_ BitVec 64))
(declare-fun temp1028_39 () (_ BitVec 64))
(declare-fun temp1028_40 () (_ BitVec 64))
(declare-fun temp1028_41 () (_ BitVec 64))
(declare-fun temp1028_42 () (_ BitVec 64))
(declare-fun temp1028_43 () (_ BitVec 64))
(declare-fun temp1028_44 () (_ BitVec 64))
(declare-fun temp1028_45 () (_ BitVec 64))
(declare-fun temp1028_46 () (_ BitVec 64))
(declare-fun temp1028_47 () (_ BitVec 64))
(declare-fun temp1028_48 () (_ BitVec 64))
(declare-fun temp1028_49 () (_ BitVec 64))
(declare-fun temp1028_50 () (_ BitVec 64))
(declare-fun temp1028_51 () (_ BitVec 64))
(declare-fun temp1028_52 () (_ BitVec 64))
(declare-fun temp1028_53 () (_ BitVec 64))
(declare-fun temp1028_54 () (_ BitVec 64))
(declare-fun temp1028_55 () (_ BitVec 64))
(declare-fun temp1028_56 () (_ BitVec 64))
(declare-fun temp1028_57 () (_ BitVec 64))
(declare-fun temp1028_58 () (_ BitVec 64))
(declare-fun temp1028_59 () (_ BitVec 64))
(declare-fun temp1028_60 () (_ BitVec 64))
(declare-fun temp1028_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp1028_62 () (_ BitVec 64))
(declare-fun temp1028_63 () (_ BitVec 64))
(declare-fun temp1028_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1028_65 () (_ BitVec 64))
(declare-fun temp1028_66 () (_ BitVec 64))
(declare-fun temp1028_67 () (_ BitVec 64))
(declare-fun temp1028_68 () (_ BitVec 64))
(declare-fun temp1028_69 () (_ BitVec 64))
(declare-fun temp1028_70 () (_ BitVec 64))
(declare-fun temp1028_71 () (_ BitVec 64))
(declare-fun temp1028_72 () (_ BitVec 64))
(declare-fun temp1028_73 () (_ BitVec 64))
(declare-fun temp1028_74 () (_ BitVec 64))
(declare-fun temp1028_75 () (_ BitVec 64))
(declare-fun temp1028_76 () (_ BitVec 64))
(declare-fun temp1028_77 () (_ BitVec 64))
(declare-fun temp1028_78 () (_ BitVec 64))
(declare-fun temp1028_79 () (_ BitVec 64))
(declare-fun temp1028_80 () (_ BitVec 64))
(declare-fun temp1028_81 () (_ BitVec 64))
(declare-fun temp1028_82 () (_ BitVec 64))
(declare-fun temp1028_83 () (_ BitVec 64))
(declare-fun temp1028_84 () (_ BitVec 64))
(declare-fun temp1028_85 () (_ BitVec 64))
(declare-fun temp1028_86 () (_ BitVec 64))
(declare-fun temp1028_87 () (_ BitVec 64))
(declare-fun temp1028_88 () (_ BitVec 64))
(declare-fun temp1028_89 () (_ BitVec 64))
(declare-fun temp1028_90 () (_ BitVec 64))
(declare-fun temp1028_91 () (_ BitVec 64))
(declare-fun temp1028_92 () (_ BitVec 64))
(declare-fun temp1028_93 () (_ BitVec 64))
(declare-fun temp1028_94 () (_ BitVec 64))
(declare-fun temp1028_95 () (_ BitVec 64))
(declare-fun temp1028_96 () (_ BitVec 64))
(declare-fun temp1028_97 () (_ BitVec 64))
(declare-fun temp1028_98 () (_ BitVec 64))
(declare-fun temp1028_99 () (_ BitVec 64))
(declare-fun temp1028_100 () (_ BitVec 64))
(declare-fun temp1028_101 () (_ BitVec 64))
(declare-fun temp1028_102 () (_ BitVec 64))
(declare-fun temp1028_103 () (_ BitVec 64))
(declare-fun temp1028_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp1028_105 () (_ BitVec 64))
(declare-fun temp1028_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp1028_107 () (_ BitVec 64))
(declare-fun temp1028_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1028_109 () (_ BitVec 64))
(declare-fun temp1028_110 () (_ BitVec 64))
(declare-fun temp1028_111 () (_ BitVec 64))
(declare-fun temp1028_112 () (_ BitVec 64))
(declare-fun temp1028_113 () (_ BitVec 64))
(declare-fun temp1028_114 () (_ BitVec 64))
(declare-fun temp1028_115 () (_ BitVec 64))
(declare-fun temp1028_116 () (_ BitVec 64))
(declare-fun temp1028_117 () (_ BitVec 64))
(declare-fun temp1028_118 () (_ BitVec 64))
(declare-fun temp1028_119 () (_ BitVec 64))
(declare-fun temp1028_120 () (_ BitVec 64))
(declare-fun temp1028_121 () (_ BitVec 64))
(declare-fun temp1028_122 () (_ BitVec 64))
(declare-fun temp1028_123 () (_ BitVec 64))
(declare-fun temp1028_124 () (_ BitVec 64))
(declare-fun temp1028_126 () (_ BitVec 64))
(declare-fun temp1028_127 () (_ BitVec 64))
(declare-fun temp1028_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp1028_128 () (_ BitVec 64))
(declare-fun temp1028_129 () (_ BitVec 64))
(declare-fun temp1028_131 () (_ BitVec 64))
(declare-fun temp1028_132 () (_ BitVec 64))
(declare-fun temp1028_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp1028_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp1028_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp1028_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp1028_136 () (_ BitVec 64))
(declare-fun temp1028_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp1028_139 () (_ BitVec 64))
(declare-fun temp1028_140 () (_ BitVec 64))
(declare-fun temp1028_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp1028_141 () (_ BitVec 64))
(declare-fun temp1028_143 () (_ BitVec 64))
(declare-fun temp1028_144 () (_ BitVec 64))
(declare-fun temp1028_142 () (_ BitVec 64))
(declare-fun temp1028_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp1028_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp1028_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp1028_148 () (_ BitVec 64))
(declare-fun temp1028_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp1028_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp1028_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp1028_152 () (_ BitVec 64))
(declare-fun var1523134 () (_ BitVec 64))
(declare-fun temp1028_153 () (_ BitVec 64))
(declare-fun temp1028_154 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun temp1028_155 () (_ BitVec 64))
(assert (= temp1028_1 #x0000000000000002))
(assert (= var989741 temp1028_1))
(assert (= temp1028_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp1028_2)))
(assert (= temp1028_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp1028_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp1028_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp1028_4)))
(assert (= temp1028_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp1028_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp1028_6 #x0000000000000000))
(assert (= var989776 temp1028_6))
(assert (= temp1028_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp1028_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1028_8 #x0000000000000001))
(assert (= var989810 temp1028_8))
(assert (= temp1028_10 #x0000000000000000))
(assert (= temp1028_9 temp1028_10))
(assert (= temp1028_12 #x0000000000000002))
(assert (= temp1028_11 temp1028_12))
(assert (= temp1028_13 #x0000000000000000))
(assert (= var1387902 temp1028_13))
(assert (= temp1028_14 #x0000000000000001))
(assert (= var1387923 temp1028_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp1028_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp1028_15)))
(assert (= temp1028_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1028_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1028_17 #x0000000000000000))
(assert (= var1521661 temp1028_17))
(assert (= temp1028_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp1028_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1028_19 #x0000000000000000))
(assert (= var1521706 temp1028_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp1028_20 #x0000000000000000))
(assert (= temp1028_21 temp1028_20))
(assert (= temp1028_22 (select ARGNAME_padding_NAMEEND_VAL temp1028_21)))
(assert (= temp1028_23 #x0000000000000001))
(assert (= temp1028_24 temp1028_23))
(assert (= temp1028_25 (select ARGNAME_padding_NAMEEND_VAL temp1028_24)))
(assert (= temp1028_26 #x0000000000000002))
(assert (= temp1028_27 temp1028_26))
(assert (= temp1028_28 (select ARGNAME_padding_NAMEEND_VAL temp1028_27)))
(assert (= temp1028_29 #x0000000000000003))
(assert (= temp1028_30 temp1028_29))
(assert (= temp1028_31 (select ARGNAME_padding_NAMEEND_VAL temp1028_30)))
(assert (= temp1028_32 #x0000000000000004))
(assert (= temp1028_33 temp1028_32))
(assert (= temp1028_34 (select ARGNAME_padding_NAMEEND_VAL temp1028_33)))
(assert (= temp1028_35 #x0000000000000005))
(assert (= temp1028_36 temp1028_35))
(assert (= temp1028_37 (select ARGNAME_padding_NAMEEND_VAL temp1028_36)))
(assert (= temp1028_38 #x0000000000000000))
(assert (= temp1028_39 #x0000000000000000))
(assert (= temp1028_40 temp1028_39))
(assert (= temp1028_41 (select ARGNAME_padding_NAMEEND_VAL temp1028_40)))
(assert (= temp1028_42 #x0000000000000000))
(assert (= temp1028_43 #x0000000000000001))
(assert (= temp1028_44 temp1028_43))
(assert (= temp1028_45 (select ARGNAME_padding_NAMEEND_VAL temp1028_44)))
(assert (= temp1028_46 #x0000000000000000))
(assert (= temp1028_47 #x0000000000000002))
(assert (= temp1028_48 temp1028_47))
(assert (= temp1028_49 (select ARGNAME_padding_NAMEEND_VAL temp1028_48)))
(assert (= temp1028_50 #x0000000000000000))
(assert (= temp1028_51 #x0000000000000003))
(assert (= temp1028_52 temp1028_51))
(assert (= temp1028_53 (select ARGNAME_padding_NAMEEND_VAL temp1028_52)))
(assert (= temp1028_54 #x0000000000000000))
(assert (= temp1028_55 #x0000000000000004))
(assert (= temp1028_56 temp1028_55))
(assert (= temp1028_57 (select ARGNAME_padding_NAMEEND_VAL temp1028_56)))
(assert (= temp1028_58 #x0000000000000000))
(assert (= temp1028_59 #x0000000000000005))
(assert (= temp1028_60 temp1028_59))
(assert (= temp1028_61 (select ARGNAME_padding_NAMEEND_VAL temp1028_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp1028_41 temp1028_38)
             (bvslt temp1028_45 temp1028_42)
             (bvslt temp1028_49 temp1028_46)
             (bvslt temp1028_53 temp1028_50)
             (bvslt temp1028_57 temp1028_54)
             (bvslt temp1028_61 temp1028_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1028_62 #x0000000000000000))
(assert (= var2240290 temp1028_62))
(assert (= temp1028_63 #x0000000000000000))
(assert (= temp1028_64 temp1028_63))
(assert (= temp1028_65 (select ARGNAME_stride_NAMEEND_VAL temp1028_64)))
(assert (= temp1028_66 #x0000000000000001))
(assert (= temp1028_67 temp1028_66))
(assert (= temp1028_68 (select ARGNAME_stride_NAMEEND_VAL temp1028_67)))
(assert (= temp1028_69 #x0000000000000002))
(assert (= temp1028_70 temp1028_69))
(assert (= temp1028_71 (select ARGNAME_stride_NAMEEND_VAL temp1028_70)))
(assert (= temp1028_72 #x0000000000000003))
(assert (= temp1028_73 temp1028_72))
(assert (= temp1028_74 (select ARGNAME_stride_NAMEEND_VAL temp1028_73)))
(assert (= temp1028_75 #x0000000000000004))
(assert (= temp1028_76 temp1028_75))
(assert (= temp1028_77 (select ARGNAME_stride_NAMEEND_VAL temp1028_76)))
(assert (= temp1028_78 #x0000000000000005))
(assert (= temp1028_79 temp1028_78))
(assert (= temp1028_80 (select ARGNAME_stride_NAMEEND_VAL temp1028_79)))
(assert (= temp1028_81 #x0000000000000000))
(assert (= temp1028_82 #x0000000000000000))
(assert (= temp1028_83 temp1028_82))
(assert (= temp1028_84 (select ARGNAME_stride_NAMEEND_VAL temp1028_83)))
(assert (= temp1028_85 #x0000000000000000))
(assert (= temp1028_86 #x0000000000000001))
(assert (= temp1028_87 temp1028_86))
(assert (= temp1028_88 (select ARGNAME_stride_NAMEEND_VAL temp1028_87)))
(assert (= temp1028_89 #x0000000000000000))
(assert (= temp1028_90 #x0000000000000002))
(assert (= temp1028_91 temp1028_90))
(assert (= temp1028_92 (select ARGNAME_stride_NAMEEND_VAL temp1028_91)))
(assert (= temp1028_93 #x0000000000000000))
(assert (= temp1028_94 #x0000000000000003))
(assert (= temp1028_95 temp1028_94))
(assert (= temp1028_96 (select ARGNAME_stride_NAMEEND_VAL temp1028_95)))
(assert (= temp1028_97 #x0000000000000000))
(assert (= temp1028_98 #x0000000000000004))
(assert (= temp1028_99 temp1028_98))
(assert (= temp1028_100 (select ARGNAME_stride_NAMEEND_VAL temp1028_99)))
(assert (= temp1028_101 #x0000000000000000))
(assert (= temp1028_102 #x0000000000000005))
(assert (= temp1028_103 temp1028_102))
(assert (= temp1028_104 (select ARGNAME_stride_NAMEEND_VAL temp1028_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp1028_84 temp1028_81)
             (bvsle temp1028_88 temp1028_85)
             (bvsle temp1028_92 temp1028_89)
             (bvsle temp1028_96 temp1028_93)
             (bvsle temp1028_100 temp1028_97)
             (bvsle temp1028_104 temp1028_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1028_105 #x0000000000000000))
(assert (= var2240311 temp1028_105))
(assert (= temp1028_106 #x0000000000000000))
(assert (= var2228402 temp1028_106))
(assert (= temp1028_107 #x0000000000000000))
(assert (= temp1028_108 temp1028_107))
(assert (= temp1028_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1028_108)))
(assert (= temp1028_110 #x0000000000000001))
(assert (= temp1028_111 temp1028_110))
(assert (= temp1028_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1028_111)))
(assert (= temp1028_113 #x0000000000000002))
(assert (= temp1028_114 temp1028_113))
(assert (= temp1028_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1028_114)))
(assert (= temp1028_116 #x0000000000000003))
(assert (= temp1028_117 temp1028_116))
(assert (= temp1028_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1028_117)))
(assert (= temp1028_119 #x0000000000000004))
(assert (= temp1028_120 temp1028_119))
(assert (= temp1028_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1028_120)))
(assert (= temp1028_122 #x0000000000000005))
(assert (= temp1028_123 temp1028_122))
(assert (= temp1028_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1028_123)))
(assert (= temp1028_126 var2228402))
(assert (= temp1028_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1028_126)))
(assert (= temp1028_125 temp1028_127))
(assert (= var2240356
   (ite (bvslt temp1028_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1028_128 #x0000000000000000))
(assert (= var2240356 temp1028_128))
(assert (= temp1028_129 #x0000000000000000))
(assert (= var2228402 temp1028_129))
(assert (= temp1028_131 var2228402))
(assert (= temp1028_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1028_131)))
(assert (= temp1028_130 temp1028_132))
(assert (= var2240378 (bvsmod temp1028_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1028_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp1028_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1028_134 #x0000000000000001))
(assert (= var2240379 temp1028_134))
(assert (= var2240398 var2240288))
(assert (= temp1028_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp1028_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1028_136 #x0000000000000001))
(assert (= var2240399 temp1028_136))
(assert (= temp1028_137 #x0000000000000001))
(assert (= var2229290 temp1028_137))
(assert (= temp1028_139 var2229290))
(assert (= temp1028_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1028_139)))
(assert (= temp1028_138 temp1028_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp1028_138)))
(assert (= temp1028_141 #x0000000000000000))
(assert (= var2228402 temp1028_141))
(assert (= temp1028_143 var2228402))
(assert (= temp1028_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1028_143)))
(assert (= temp1028_142 temp1028_144))
(assert (= temp1028_145 #x0000000000000002))
(assert (= var2503529 temp1028_145))
(assert (= temp1028_146 #x0000000000000001))
(assert (= var2240569 temp1028_146))
(assert (= temp1028_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1028_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1028_148 #x0000000000000001))
(assert (= var1521778 temp1028_148))
(assert (= temp1028_149 #x0000000000000001))
(assert (= var1521908 temp1028_149))
(assert (= var4010473 var1521908))
(assert (= temp1028_150 #x0000000000000000))
(assert (= var4210495 temp1028_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp1028_151 #x0000000000000002))
(assert (= var4339331 temp1028_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4469136 var1521921))
(assert (= var4731280 var1521921))
(assert (= temp1028_152 #x0000000000000001))
(assert (= var1523134
   (ite (= ARGNAME_groups_NAMEEND temp1028_152)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1028_153 #x0000000000000001))
(assert (= var1523134 temp1028_153))
(assert (= temp1028_154 #x0000000000000002))
(assert (= var5060227 temp1028_154))
(assert (= temp1028_155 #x0000000000000001))
(assert (= var1521778 temp1028_155))
(model-add temp1028_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp1028_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp1028_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1028_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp1028_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1028_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






