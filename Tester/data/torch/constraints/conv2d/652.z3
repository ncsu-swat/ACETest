(declare-fun temp868_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp868_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp868_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp868_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp868_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp868_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp868_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp868_8 () (_ BitVec 64))
(declare-fun temp868_10 () (_ BitVec 64))
(declare-fun temp868_9 () (_ BitVec 64))
(declare-fun temp868_12 () (_ BitVec 64))
(declare-fun temp868_11 () (_ BitVec 64))
(declare-fun temp868_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp868_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp868_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp868_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp868_17 () (_ BitVec 64))
(declare-fun temp868_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp868_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp868_20 () (_ BitVec 64))
(declare-fun temp868_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp868_22 () (_ BitVec 64))
(declare-fun temp868_23 () (_ BitVec 64))
(declare-fun temp868_24 () (_ BitVec 64))
(declare-fun temp868_25 () (_ BitVec 64))
(declare-fun temp868_26 () (_ BitVec 64))
(declare-fun temp868_27 () (_ BitVec 64))
(declare-fun temp868_28 () (_ BitVec 64))
(declare-fun temp868_29 () (_ BitVec 64))
(declare-fun temp868_30 () (_ BitVec 64))
(declare-fun temp868_31 () (_ BitVec 64))
(declare-fun temp868_32 () (_ BitVec 64))
(declare-fun temp868_33 () (_ BitVec 64))
(declare-fun temp868_34 () (_ BitVec 64))
(declare-fun temp868_35 () (_ BitVec 64))
(declare-fun temp868_36 () (_ BitVec 64))
(declare-fun temp868_37 () (_ BitVec 64))
(declare-fun temp868_38 () (_ BitVec 64))
(declare-fun temp868_39 () (_ BitVec 64))
(declare-fun temp868_40 () (_ BitVec 64))
(declare-fun temp868_41 () (_ BitVec 64))
(declare-fun temp868_42 () (_ BitVec 64))
(declare-fun temp868_43 () (_ BitVec 64))
(declare-fun temp868_44 () (_ BitVec 64))
(declare-fun temp868_45 () (_ BitVec 64))
(declare-fun temp868_46 () (_ BitVec 64))
(declare-fun temp868_47 () (_ BitVec 64))
(declare-fun temp868_48 () (_ BitVec 64))
(declare-fun temp868_49 () (_ BitVec 64))
(declare-fun temp868_50 () (_ BitVec 64))
(declare-fun temp868_51 () (_ BitVec 64))
(declare-fun temp868_52 () (_ BitVec 64))
(declare-fun temp868_53 () (_ BitVec 64))
(declare-fun temp868_54 () (_ BitVec 64))
(declare-fun temp868_55 () (_ BitVec 64))
(declare-fun temp868_56 () (_ BitVec 64))
(declare-fun temp868_57 () (_ BitVec 64))
(declare-fun temp868_58 () (_ BitVec 64))
(declare-fun temp868_59 () (_ BitVec 64))
(declare-fun temp868_60 () (_ BitVec 64))
(declare-fun temp868_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp868_62 () (_ BitVec 64))
(declare-fun temp868_63 () (_ BitVec 64))
(declare-fun temp868_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp868_65 () (_ BitVec 64))
(declare-fun temp868_66 () (_ BitVec 64))
(declare-fun temp868_67 () (_ BitVec 64))
(declare-fun temp868_68 () (_ BitVec 64))
(declare-fun temp868_69 () (_ BitVec 64))
(declare-fun temp868_70 () (_ BitVec 64))
(declare-fun temp868_71 () (_ BitVec 64))
(declare-fun temp868_72 () (_ BitVec 64))
(declare-fun temp868_73 () (_ BitVec 64))
(declare-fun temp868_74 () (_ BitVec 64))
(declare-fun temp868_75 () (_ BitVec 64))
(declare-fun temp868_76 () (_ BitVec 64))
(declare-fun temp868_77 () (_ BitVec 64))
(declare-fun temp868_78 () (_ BitVec 64))
(declare-fun temp868_79 () (_ BitVec 64))
(declare-fun temp868_80 () (_ BitVec 64))
(declare-fun temp868_81 () (_ BitVec 64))
(declare-fun temp868_82 () (_ BitVec 64))
(declare-fun temp868_83 () (_ BitVec 64))
(declare-fun temp868_84 () (_ BitVec 64))
(declare-fun temp868_85 () (_ BitVec 64))
(declare-fun temp868_86 () (_ BitVec 64))
(declare-fun temp868_87 () (_ BitVec 64))
(declare-fun temp868_88 () (_ BitVec 64))
(declare-fun temp868_89 () (_ BitVec 64))
(declare-fun temp868_90 () (_ BitVec 64))
(declare-fun temp868_91 () (_ BitVec 64))
(declare-fun temp868_92 () (_ BitVec 64))
(declare-fun temp868_93 () (_ BitVec 64))
(declare-fun temp868_94 () (_ BitVec 64))
(declare-fun temp868_95 () (_ BitVec 64))
(declare-fun temp868_96 () (_ BitVec 64))
(declare-fun temp868_97 () (_ BitVec 64))
(declare-fun temp868_98 () (_ BitVec 64))
(declare-fun temp868_99 () (_ BitVec 64))
(declare-fun temp868_100 () (_ BitVec 64))
(declare-fun temp868_101 () (_ BitVec 64))
(declare-fun temp868_102 () (_ BitVec 64))
(declare-fun temp868_103 () (_ BitVec 64))
(declare-fun temp868_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp868_105 () (_ BitVec 64))
(declare-fun temp868_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp868_107 () (_ BitVec 64))
(declare-fun temp868_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp868_109 () (_ BitVec 64))
(declare-fun temp868_110 () (_ BitVec 64))
(declare-fun temp868_111 () (_ BitVec 64))
(declare-fun temp868_112 () (_ BitVec 64))
(declare-fun temp868_113 () (_ BitVec 64))
(declare-fun temp868_114 () (_ BitVec 64))
(declare-fun temp868_115 () (_ BitVec 64))
(declare-fun temp868_116 () (_ BitVec 64))
(declare-fun temp868_117 () (_ BitVec 64))
(declare-fun temp868_118 () (_ BitVec 64))
(declare-fun temp868_119 () (_ BitVec 64))
(declare-fun temp868_120 () (_ BitVec 64))
(declare-fun temp868_121 () (_ BitVec 64))
(declare-fun temp868_122 () (_ BitVec 64))
(declare-fun temp868_123 () (_ BitVec 64))
(declare-fun temp868_124 () (_ BitVec 64))
(declare-fun temp868_126 () (_ BitVec 64))
(declare-fun temp868_127 () (_ BitVec 64))
(declare-fun temp868_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp868_128 () (_ BitVec 64))
(declare-fun temp868_129 () (_ BitVec 64))
(declare-fun temp868_131 () (_ BitVec 64))
(declare-fun temp868_132 () (_ BitVec 64))
(declare-fun temp868_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp868_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp868_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp868_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp868_136 () (_ BitVec 64))
(declare-fun temp868_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp868_139 () (_ BitVec 64))
(declare-fun temp868_140 () (_ BitVec 64))
(declare-fun temp868_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp868_141 () (_ BitVec 64))
(declare-fun temp868_143 () (_ BitVec 64))
(declare-fun temp868_144 () (_ BitVec 64))
(declare-fun temp868_142 () (_ BitVec 64))
(declare-fun temp868_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp868_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp868_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp868_148 () (_ BitVec 64))
(declare-fun temp868_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp868_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp868_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp868_152 () (_ BitVec 64))
(assert (= temp868_1 #x0000000000000002))
(assert (= var989741 temp868_1))
(assert (= temp868_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp868_2)))
(assert (= temp868_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp868_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp868_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp868_4)))
(assert (= temp868_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp868_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp868_6 #x0000000000000000))
(assert (= var989776 temp868_6))
(assert (= temp868_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp868_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp868_8 #x0000000000000001))
(assert (= var989810 temp868_8))
(assert (= temp868_10 #x0000000000000000))
(assert (= temp868_9 temp868_10))
(assert (= temp868_12 #x0000000000000002))
(assert (= temp868_11 temp868_12))
(assert (= temp868_13 #x0000000000000000))
(assert (= var1387902 temp868_13))
(assert (= temp868_14 #x0000000000000001))
(assert (= var1387923 temp868_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp868_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp868_15)))
(assert (= temp868_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp868_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_17 #x0000000000000000))
(assert (= var1521661 temp868_17))
(assert (= temp868_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp868_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_19 #x0000000000000000))
(assert (= var1521706 temp868_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp868_20 #x0000000000000000))
(assert (= temp868_21 temp868_20))
(assert (= temp868_22 (select ARGNAME_padding_NAMEEND_VAL temp868_21)))
(assert (= temp868_23 #x0000000000000001))
(assert (= temp868_24 temp868_23))
(assert (= temp868_25 (select ARGNAME_padding_NAMEEND_VAL temp868_24)))
(assert (= temp868_26 #x0000000000000002))
(assert (= temp868_27 temp868_26))
(assert (= temp868_28 (select ARGNAME_padding_NAMEEND_VAL temp868_27)))
(assert (= temp868_29 #x0000000000000003))
(assert (= temp868_30 temp868_29))
(assert (= temp868_31 (select ARGNAME_padding_NAMEEND_VAL temp868_30)))
(assert (= temp868_32 #x0000000000000004))
(assert (= temp868_33 temp868_32))
(assert (= temp868_34 (select ARGNAME_padding_NAMEEND_VAL temp868_33)))
(assert (= temp868_35 #x0000000000000005))
(assert (= temp868_36 temp868_35))
(assert (= temp868_37 (select ARGNAME_padding_NAMEEND_VAL temp868_36)))
(assert (= temp868_38 #x0000000000000000))
(assert (= temp868_39 #x0000000000000000))
(assert (= temp868_40 temp868_39))
(assert (= temp868_41 (select ARGNAME_padding_NAMEEND_VAL temp868_40)))
(assert (= temp868_42 #x0000000000000000))
(assert (= temp868_43 #x0000000000000001))
(assert (= temp868_44 temp868_43))
(assert (= temp868_45 (select ARGNAME_padding_NAMEEND_VAL temp868_44)))
(assert (= temp868_46 #x0000000000000000))
(assert (= temp868_47 #x0000000000000002))
(assert (= temp868_48 temp868_47))
(assert (= temp868_49 (select ARGNAME_padding_NAMEEND_VAL temp868_48)))
(assert (= temp868_50 #x0000000000000000))
(assert (= temp868_51 #x0000000000000003))
(assert (= temp868_52 temp868_51))
(assert (= temp868_53 (select ARGNAME_padding_NAMEEND_VAL temp868_52)))
(assert (= temp868_54 #x0000000000000000))
(assert (= temp868_55 #x0000000000000004))
(assert (= temp868_56 temp868_55))
(assert (= temp868_57 (select ARGNAME_padding_NAMEEND_VAL temp868_56)))
(assert (= temp868_58 #x0000000000000000))
(assert (= temp868_59 #x0000000000000005))
(assert (= temp868_60 temp868_59))
(assert (= temp868_61 (select ARGNAME_padding_NAMEEND_VAL temp868_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp868_41 temp868_38)
             (bvslt temp868_45 temp868_42)
             (bvslt temp868_49 temp868_46)
             (bvslt temp868_53 temp868_50)
             (bvslt temp868_57 temp868_54)
             (bvslt temp868_61 temp868_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_62 #x0000000000000000))
(assert (= var2240290 temp868_62))
(assert (= temp868_63 #x0000000000000000))
(assert (= temp868_64 temp868_63))
(assert (= temp868_65 (select ARGNAME_stride_NAMEEND_VAL temp868_64)))
(assert (= temp868_66 #x0000000000000001))
(assert (= temp868_67 temp868_66))
(assert (= temp868_68 (select ARGNAME_stride_NAMEEND_VAL temp868_67)))
(assert (= temp868_69 #x0000000000000002))
(assert (= temp868_70 temp868_69))
(assert (= temp868_71 (select ARGNAME_stride_NAMEEND_VAL temp868_70)))
(assert (= temp868_72 #x0000000000000003))
(assert (= temp868_73 temp868_72))
(assert (= temp868_74 (select ARGNAME_stride_NAMEEND_VAL temp868_73)))
(assert (= temp868_75 #x0000000000000004))
(assert (= temp868_76 temp868_75))
(assert (= temp868_77 (select ARGNAME_stride_NAMEEND_VAL temp868_76)))
(assert (= temp868_78 #x0000000000000005))
(assert (= temp868_79 temp868_78))
(assert (= temp868_80 (select ARGNAME_stride_NAMEEND_VAL temp868_79)))
(assert (= temp868_81 #x0000000000000000))
(assert (= temp868_82 #x0000000000000000))
(assert (= temp868_83 temp868_82))
(assert (= temp868_84 (select ARGNAME_stride_NAMEEND_VAL temp868_83)))
(assert (= temp868_85 #x0000000000000000))
(assert (= temp868_86 #x0000000000000001))
(assert (= temp868_87 temp868_86))
(assert (= temp868_88 (select ARGNAME_stride_NAMEEND_VAL temp868_87)))
(assert (= temp868_89 #x0000000000000000))
(assert (= temp868_90 #x0000000000000002))
(assert (= temp868_91 temp868_90))
(assert (= temp868_92 (select ARGNAME_stride_NAMEEND_VAL temp868_91)))
(assert (= temp868_93 #x0000000000000000))
(assert (= temp868_94 #x0000000000000003))
(assert (= temp868_95 temp868_94))
(assert (= temp868_96 (select ARGNAME_stride_NAMEEND_VAL temp868_95)))
(assert (= temp868_97 #x0000000000000000))
(assert (= temp868_98 #x0000000000000004))
(assert (= temp868_99 temp868_98))
(assert (= temp868_100 (select ARGNAME_stride_NAMEEND_VAL temp868_99)))
(assert (= temp868_101 #x0000000000000000))
(assert (= temp868_102 #x0000000000000005))
(assert (= temp868_103 temp868_102))
(assert (= temp868_104 (select ARGNAME_stride_NAMEEND_VAL temp868_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp868_84 temp868_81)
             (bvsle temp868_88 temp868_85)
             (bvsle temp868_92 temp868_89)
             (bvsle temp868_96 temp868_93)
             (bvsle temp868_100 temp868_97)
             (bvsle temp868_104 temp868_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_105 #x0000000000000000))
(assert (= var2240311 temp868_105))
(assert (= temp868_106 #x0000000000000000))
(assert (= var2228402 temp868_106))
(assert (= temp868_107 #x0000000000000000))
(assert (= temp868_108 temp868_107))
(assert (= temp868_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_108)))
(assert (= temp868_110 #x0000000000000001))
(assert (= temp868_111 temp868_110))
(assert (= temp868_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_111)))
(assert (= temp868_113 #x0000000000000002))
(assert (= temp868_114 temp868_113))
(assert (= temp868_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_114)))
(assert (= temp868_116 #x0000000000000003))
(assert (= temp868_117 temp868_116))
(assert (= temp868_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_117)))
(assert (= temp868_119 #x0000000000000004))
(assert (= temp868_120 temp868_119))
(assert (= temp868_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_120)))
(assert (= temp868_122 #x0000000000000005))
(assert (= temp868_123 temp868_122))
(assert (= temp868_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_123)))
(assert (= temp868_126 var2228402))
(assert (= temp868_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_126)))
(assert (= temp868_125 temp868_127))
(assert (= var2240356
   (ite (bvslt temp868_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_128 #x0000000000000000))
(assert (= var2240356 temp868_128))
(assert (= temp868_129 #x0000000000000000))
(assert (= var2228402 temp868_129))
(assert (= temp868_131 var2228402))
(assert (= temp868_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_131)))
(assert (= temp868_130 temp868_132))
(assert (= var2240378 (bvsmod temp868_130 ARGNAME_groups_NAMEEND)))
(assert (= temp868_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp868_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp868_134 #x0000000000000001))
(assert (= var2240379 temp868_134))
(assert (= var2240398 var2240288))
(assert (= temp868_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp868_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp868_136 #x0000000000000001))
(assert (= var2240399 temp868_136))
(assert (= temp868_137 #x0000000000000001))
(assert (= var2229290 temp868_137))
(assert (= temp868_139 var2229290))
(assert (= temp868_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_139)))
(assert (= temp868_138 temp868_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp868_138)))
(assert (= temp868_141 #x0000000000000000))
(assert (= var2228402 temp868_141))
(assert (= temp868_143 var2228402))
(assert (= temp868_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_143)))
(assert (= temp868_142 temp868_144))
(assert (= temp868_145 #x0000000000000002))
(assert (= var2503529 temp868_145))
(assert (= temp868_146 #x0000000000000001))
(assert (= var2240569 temp868_146))
(assert (= temp868_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp868_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_148 #x0000000000000001))
(assert (= var1521778 temp868_148))
(assert (= temp868_149 #x0000000000000001))
(assert (= var1521908 temp868_149))
(assert (= var4010473 var1521908))
(assert (= temp868_150 #x0000000000000000))
(assert (= var4210495 temp868_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp868_151 #x0000000000000002))
(assert (= var4339331 temp868_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp868_152 #x0000000000000001))
(assert (= var1521778 temp868_152))
(model-add temp868_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp868_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp868_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp868_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp868_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp868_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






