(declare-fun temp866_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp866_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp866_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp866_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp866_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp866_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp866_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp866_8 () (_ BitVec 64))
(declare-fun temp866_10 () (_ BitVec 64))
(declare-fun temp866_9 () (_ BitVec 64))
(declare-fun temp866_12 () (_ BitVec 64))
(declare-fun temp866_11 () (_ BitVec 64))
(declare-fun temp866_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp866_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp866_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp866_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp866_17 () (_ BitVec 64))
(declare-fun temp866_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp866_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp866_20 () (_ BitVec 64))
(declare-fun temp866_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp866_22 () (_ BitVec 64))
(declare-fun temp866_23 () (_ BitVec 64))
(declare-fun temp866_24 () (_ BitVec 64))
(declare-fun temp866_25 () (_ BitVec 64))
(declare-fun temp866_26 () (_ BitVec 64))
(declare-fun temp866_27 () (_ BitVec 64))
(declare-fun temp866_28 () (_ BitVec 64))
(declare-fun temp866_29 () (_ BitVec 64))
(declare-fun temp866_30 () (_ BitVec 64))
(declare-fun temp866_31 () (_ BitVec 64))
(declare-fun temp866_32 () (_ BitVec 64))
(declare-fun temp866_33 () (_ BitVec 64))
(declare-fun temp866_34 () (_ BitVec 64))
(declare-fun temp866_35 () (_ BitVec 64))
(declare-fun temp866_36 () (_ BitVec 64))
(declare-fun temp866_37 () (_ BitVec 64))
(declare-fun temp866_38 () (_ BitVec 64))
(declare-fun temp866_39 () (_ BitVec 64))
(declare-fun temp866_40 () (_ BitVec 64))
(declare-fun temp866_41 () (_ BitVec 64))
(declare-fun temp866_42 () (_ BitVec 64))
(declare-fun temp866_43 () (_ BitVec 64))
(declare-fun temp866_44 () (_ BitVec 64))
(declare-fun temp866_45 () (_ BitVec 64))
(declare-fun temp866_46 () (_ BitVec 64))
(declare-fun temp866_47 () (_ BitVec 64))
(declare-fun temp866_48 () (_ BitVec 64))
(declare-fun temp866_49 () (_ BitVec 64))
(declare-fun temp866_50 () (_ BitVec 64))
(declare-fun temp866_51 () (_ BitVec 64))
(declare-fun temp866_52 () (_ BitVec 64))
(declare-fun temp866_53 () (_ BitVec 64))
(declare-fun temp866_54 () (_ BitVec 64))
(declare-fun temp866_55 () (_ BitVec 64))
(declare-fun temp866_56 () (_ BitVec 64))
(declare-fun temp866_57 () (_ BitVec 64))
(declare-fun temp866_58 () (_ BitVec 64))
(declare-fun temp866_59 () (_ BitVec 64))
(declare-fun temp866_60 () (_ BitVec 64))
(declare-fun temp866_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp866_62 () (_ BitVec 64))
(declare-fun temp866_63 () (_ BitVec 64))
(declare-fun temp866_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp866_65 () (_ BitVec 64))
(declare-fun temp866_66 () (_ BitVec 64))
(declare-fun temp866_67 () (_ BitVec 64))
(declare-fun temp866_68 () (_ BitVec 64))
(declare-fun temp866_69 () (_ BitVec 64))
(declare-fun temp866_70 () (_ BitVec 64))
(declare-fun temp866_71 () (_ BitVec 64))
(declare-fun temp866_72 () (_ BitVec 64))
(declare-fun temp866_73 () (_ BitVec 64))
(declare-fun temp866_74 () (_ BitVec 64))
(declare-fun temp866_75 () (_ BitVec 64))
(declare-fun temp866_76 () (_ BitVec 64))
(declare-fun temp866_77 () (_ BitVec 64))
(declare-fun temp866_78 () (_ BitVec 64))
(declare-fun temp866_79 () (_ BitVec 64))
(declare-fun temp866_80 () (_ BitVec 64))
(declare-fun temp866_81 () (_ BitVec 64))
(declare-fun temp866_82 () (_ BitVec 64))
(declare-fun temp866_83 () (_ BitVec 64))
(declare-fun temp866_84 () (_ BitVec 64))
(declare-fun temp866_85 () (_ BitVec 64))
(declare-fun temp866_86 () (_ BitVec 64))
(declare-fun temp866_87 () (_ BitVec 64))
(declare-fun temp866_88 () (_ BitVec 64))
(declare-fun temp866_89 () (_ BitVec 64))
(declare-fun temp866_90 () (_ BitVec 64))
(declare-fun temp866_91 () (_ BitVec 64))
(declare-fun temp866_92 () (_ BitVec 64))
(declare-fun temp866_93 () (_ BitVec 64))
(declare-fun temp866_94 () (_ BitVec 64))
(declare-fun temp866_95 () (_ BitVec 64))
(declare-fun temp866_96 () (_ BitVec 64))
(declare-fun temp866_97 () (_ BitVec 64))
(declare-fun temp866_98 () (_ BitVec 64))
(declare-fun temp866_99 () (_ BitVec 64))
(declare-fun temp866_100 () (_ BitVec 64))
(declare-fun temp866_101 () (_ BitVec 64))
(declare-fun temp866_102 () (_ BitVec 64))
(declare-fun temp866_103 () (_ BitVec 64))
(declare-fun temp866_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp866_105 () (_ BitVec 64))
(declare-fun temp866_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp866_107 () (_ BitVec 64))
(declare-fun temp866_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp866_109 () (_ BitVec 64))
(declare-fun temp866_110 () (_ BitVec 64))
(declare-fun temp866_111 () (_ BitVec 64))
(declare-fun temp866_112 () (_ BitVec 64))
(declare-fun temp866_113 () (_ BitVec 64))
(declare-fun temp866_114 () (_ BitVec 64))
(declare-fun temp866_115 () (_ BitVec 64))
(declare-fun temp866_116 () (_ BitVec 64))
(declare-fun temp866_117 () (_ BitVec 64))
(declare-fun temp866_118 () (_ BitVec 64))
(declare-fun temp866_119 () (_ BitVec 64))
(declare-fun temp866_120 () (_ BitVec 64))
(declare-fun temp866_121 () (_ BitVec 64))
(declare-fun temp866_122 () (_ BitVec 64))
(declare-fun temp866_123 () (_ BitVec 64))
(declare-fun temp866_124 () (_ BitVec 64))
(declare-fun temp866_126 () (_ BitVec 64))
(declare-fun temp866_127 () (_ BitVec 64))
(declare-fun temp866_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp866_128 () (_ BitVec 64))
(declare-fun temp866_129 () (_ BitVec 64))
(declare-fun temp866_131 () (_ BitVec 64))
(declare-fun temp866_132 () (_ BitVec 64))
(declare-fun temp866_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp866_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp866_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp866_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp866_136 () (_ BitVec 64))
(declare-fun temp866_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp866_139 () (_ BitVec 64))
(declare-fun temp866_140 () (_ BitVec 64))
(declare-fun temp866_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp866_141 () (_ BitVec 64))
(declare-fun temp866_143 () (_ BitVec 64))
(declare-fun temp866_144 () (_ BitVec 64))
(declare-fun temp866_142 () (_ BitVec 64))
(declare-fun temp866_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp866_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp866_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp866_148 () (_ BitVec 64))
(declare-fun temp866_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp866_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp866_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp866_152 () (_ BitVec 64))
(assert (= temp866_1 #x0000000000000002))
(assert (= var989741 temp866_1))
(assert (= temp866_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp866_2)))
(assert (= temp866_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp866_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp866_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp866_4)))
(assert (= temp866_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp866_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp866_6 #x0000000000000000))
(assert (= var989776 temp866_6))
(assert (= temp866_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp866_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp866_8 #x0000000000000001))
(assert (= var989810 temp866_8))
(assert (= temp866_10 #x0000000000000000))
(assert (= temp866_9 temp866_10))
(assert (= temp866_12 #x0000000000000002))
(assert (= temp866_11 temp866_12))
(assert (= temp866_13 #x0000000000000000))
(assert (= var1387902 temp866_13))
(assert (= temp866_14 #x0000000000000001))
(assert (= var1387923 temp866_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp866_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp866_15)))
(assert (= temp866_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp866_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_17 #x0000000000000000))
(assert (= var1521661 temp866_17))
(assert (= temp866_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp866_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_19 #x0000000000000000))
(assert (= var1521706 temp866_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp866_20 #x0000000000000000))
(assert (= temp866_21 temp866_20))
(assert (= temp866_22 (select ARGNAME_padding_NAMEEND_VAL temp866_21)))
(assert (= temp866_23 #x0000000000000001))
(assert (= temp866_24 temp866_23))
(assert (= temp866_25 (select ARGNAME_padding_NAMEEND_VAL temp866_24)))
(assert (= temp866_26 #x0000000000000002))
(assert (= temp866_27 temp866_26))
(assert (= temp866_28 (select ARGNAME_padding_NAMEEND_VAL temp866_27)))
(assert (= temp866_29 #x0000000000000003))
(assert (= temp866_30 temp866_29))
(assert (= temp866_31 (select ARGNAME_padding_NAMEEND_VAL temp866_30)))
(assert (= temp866_32 #x0000000000000004))
(assert (= temp866_33 temp866_32))
(assert (= temp866_34 (select ARGNAME_padding_NAMEEND_VAL temp866_33)))
(assert (= temp866_35 #x0000000000000005))
(assert (= temp866_36 temp866_35))
(assert (= temp866_37 (select ARGNAME_padding_NAMEEND_VAL temp866_36)))
(assert (= temp866_38 #x0000000000000000))
(assert (= temp866_39 #x0000000000000000))
(assert (= temp866_40 temp866_39))
(assert (= temp866_41 (select ARGNAME_padding_NAMEEND_VAL temp866_40)))
(assert (= temp866_42 #x0000000000000000))
(assert (= temp866_43 #x0000000000000001))
(assert (= temp866_44 temp866_43))
(assert (= temp866_45 (select ARGNAME_padding_NAMEEND_VAL temp866_44)))
(assert (= temp866_46 #x0000000000000000))
(assert (= temp866_47 #x0000000000000002))
(assert (= temp866_48 temp866_47))
(assert (= temp866_49 (select ARGNAME_padding_NAMEEND_VAL temp866_48)))
(assert (= temp866_50 #x0000000000000000))
(assert (= temp866_51 #x0000000000000003))
(assert (= temp866_52 temp866_51))
(assert (= temp866_53 (select ARGNAME_padding_NAMEEND_VAL temp866_52)))
(assert (= temp866_54 #x0000000000000000))
(assert (= temp866_55 #x0000000000000004))
(assert (= temp866_56 temp866_55))
(assert (= temp866_57 (select ARGNAME_padding_NAMEEND_VAL temp866_56)))
(assert (= temp866_58 #x0000000000000000))
(assert (= temp866_59 #x0000000000000005))
(assert (= temp866_60 temp866_59))
(assert (= temp866_61 (select ARGNAME_padding_NAMEEND_VAL temp866_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp866_41 temp866_38)
             (bvslt temp866_45 temp866_42)
             (bvslt temp866_49 temp866_46)
             (bvslt temp866_53 temp866_50)
             (bvslt temp866_57 temp866_54)
             (bvslt temp866_61 temp866_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_62 #x0000000000000000))
(assert (= var2240290 temp866_62))
(assert (= temp866_63 #x0000000000000000))
(assert (= temp866_64 temp866_63))
(assert (= temp866_65 (select ARGNAME_stride_NAMEEND_VAL temp866_64)))
(assert (= temp866_66 #x0000000000000001))
(assert (= temp866_67 temp866_66))
(assert (= temp866_68 (select ARGNAME_stride_NAMEEND_VAL temp866_67)))
(assert (= temp866_69 #x0000000000000002))
(assert (= temp866_70 temp866_69))
(assert (= temp866_71 (select ARGNAME_stride_NAMEEND_VAL temp866_70)))
(assert (= temp866_72 #x0000000000000003))
(assert (= temp866_73 temp866_72))
(assert (= temp866_74 (select ARGNAME_stride_NAMEEND_VAL temp866_73)))
(assert (= temp866_75 #x0000000000000004))
(assert (= temp866_76 temp866_75))
(assert (= temp866_77 (select ARGNAME_stride_NAMEEND_VAL temp866_76)))
(assert (= temp866_78 #x0000000000000005))
(assert (= temp866_79 temp866_78))
(assert (= temp866_80 (select ARGNAME_stride_NAMEEND_VAL temp866_79)))
(assert (= temp866_81 #x0000000000000000))
(assert (= temp866_82 #x0000000000000000))
(assert (= temp866_83 temp866_82))
(assert (= temp866_84 (select ARGNAME_stride_NAMEEND_VAL temp866_83)))
(assert (= temp866_85 #x0000000000000000))
(assert (= temp866_86 #x0000000000000001))
(assert (= temp866_87 temp866_86))
(assert (= temp866_88 (select ARGNAME_stride_NAMEEND_VAL temp866_87)))
(assert (= temp866_89 #x0000000000000000))
(assert (= temp866_90 #x0000000000000002))
(assert (= temp866_91 temp866_90))
(assert (= temp866_92 (select ARGNAME_stride_NAMEEND_VAL temp866_91)))
(assert (= temp866_93 #x0000000000000000))
(assert (= temp866_94 #x0000000000000003))
(assert (= temp866_95 temp866_94))
(assert (= temp866_96 (select ARGNAME_stride_NAMEEND_VAL temp866_95)))
(assert (= temp866_97 #x0000000000000000))
(assert (= temp866_98 #x0000000000000004))
(assert (= temp866_99 temp866_98))
(assert (= temp866_100 (select ARGNAME_stride_NAMEEND_VAL temp866_99)))
(assert (= temp866_101 #x0000000000000000))
(assert (= temp866_102 #x0000000000000005))
(assert (= temp866_103 temp866_102))
(assert (= temp866_104 (select ARGNAME_stride_NAMEEND_VAL temp866_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp866_84 temp866_81)
             (bvsle temp866_88 temp866_85)
             (bvsle temp866_92 temp866_89)
             (bvsle temp866_96 temp866_93)
             (bvsle temp866_100 temp866_97)
             (bvsle temp866_104 temp866_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_105 #x0000000000000000))
(assert (= var2240311 temp866_105))
(assert (= temp866_106 #x0000000000000000))
(assert (= var2228402 temp866_106))
(assert (= temp866_107 #x0000000000000000))
(assert (= temp866_108 temp866_107))
(assert (= temp866_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_108)))
(assert (= temp866_110 #x0000000000000001))
(assert (= temp866_111 temp866_110))
(assert (= temp866_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_111)))
(assert (= temp866_113 #x0000000000000002))
(assert (= temp866_114 temp866_113))
(assert (= temp866_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_114)))
(assert (= temp866_116 #x0000000000000003))
(assert (= temp866_117 temp866_116))
(assert (= temp866_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_117)))
(assert (= temp866_119 #x0000000000000004))
(assert (= temp866_120 temp866_119))
(assert (= temp866_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_120)))
(assert (= temp866_122 #x0000000000000005))
(assert (= temp866_123 temp866_122))
(assert (= temp866_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_123)))
(assert (= temp866_126 var2228402))
(assert (= temp866_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_126)))
(assert (= temp866_125 temp866_127))
(assert (= var2240356
   (ite (bvslt temp866_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_128 #x0000000000000000))
(assert (= var2240356 temp866_128))
(assert (= temp866_129 #x0000000000000000))
(assert (= var2228402 temp866_129))
(assert (= temp866_131 var2228402))
(assert (= temp866_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_131)))
(assert (= temp866_130 temp866_132))
(assert (= var2240378 (bvsmod temp866_130 ARGNAME_groups_NAMEEND)))
(assert (= temp866_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp866_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp866_134 #x0000000000000001))
(assert (= var2240379 temp866_134))
(assert (= var2240398 var2240288))
(assert (= temp866_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp866_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp866_136 #x0000000000000001))
(assert (= var2240399 temp866_136))
(assert (= temp866_137 #x0000000000000001))
(assert (= var2229290 temp866_137))
(assert (= temp866_139 var2229290))
(assert (= temp866_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_139)))
(assert (= temp866_138 temp866_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp866_138)))
(assert (= temp866_141 #x0000000000000000))
(assert (= var2228402 temp866_141))
(assert (= temp866_143 var2228402))
(assert (= temp866_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp866_143)))
(assert (= temp866_142 temp866_144))
(assert (= temp866_145 #x0000000000000002))
(assert (= var2503529 temp866_145))
(assert (= temp866_146 #x0000000000000001))
(assert (= var2240569 temp866_146))
(assert (= temp866_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp866_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_148 #x0000000000000001))
(assert (= var1521778 temp866_148))
(assert (= temp866_149 #x0000000000000001))
(assert (= var1521908 temp866_149))
(assert (= var4010473 var1521908))
(assert (= temp866_150 #x0000000000000000))
(assert (= var4210495 temp866_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp866_151 #x0000000000000002))
(assert (= var4339331 temp866_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp866_152 #x0000000000000001))
(assert (= var1521778 temp866_152))
(model-add temp866_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp866_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp866_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp866_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp866_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp866_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






