(declare-fun temp285_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp285_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp285_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp285_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp285_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp285_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp285_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp285_8 () (_ BitVec 64))
(declare-fun temp285_10 () (_ BitVec 64))
(declare-fun temp285_9 () (_ BitVec 64))
(declare-fun temp285_12 () (_ BitVec 64))
(declare-fun temp285_11 () (_ BitVec 64))
(declare-fun temp285_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp285_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp285_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp285_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp285_17 () (_ BitVec 64))
(declare-fun temp285_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp285_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp285_20 () (_ BitVec 64))
(declare-fun temp285_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp285_22 () (_ BitVec 64))
(declare-fun temp285_23 () (_ BitVec 64))
(declare-fun temp285_24 () (_ BitVec 64))
(declare-fun temp285_25 () (_ BitVec 64))
(declare-fun temp285_26 () (_ BitVec 64))
(declare-fun temp285_27 () (_ BitVec 64))
(declare-fun temp285_28 () (_ BitVec 64))
(declare-fun temp285_29 () (_ BitVec 64))
(declare-fun temp285_30 () (_ BitVec 64))
(declare-fun temp285_31 () (_ BitVec 64))
(declare-fun temp285_32 () (_ BitVec 64))
(declare-fun temp285_33 () (_ BitVec 64))
(declare-fun temp285_34 () (_ BitVec 64))
(declare-fun temp285_35 () (_ BitVec 64))
(declare-fun temp285_36 () (_ BitVec 64))
(declare-fun temp285_37 () (_ BitVec 64))
(declare-fun temp285_38 () (_ BitVec 64))
(declare-fun temp285_39 () (_ BitVec 64))
(declare-fun temp285_40 () (_ BitVec 64))
(declare-fun temp285_41 () (_ BitVec 64))
(declare-fun temp285_42 () (_ BitVec 64))
(declare-fun temp285_43 () (_ BitVec 64))
(declare-fun temp285_44 () (_ BitVec 64))
(declare-fun temp285_45 () (_ BitVec 64))
(declare-fun temp285_46 () (_ BitVec 64))
(declare-fun temp285_47 () (_ BitVec 64))
(declare-fun temp285_48 () (_ BitVec 64))
(declare-fun temp285_49 () (_ BitVec 64))
(declare-fun temp285_50 () (_ BitVec 64))
(declare-fun temp285_51 () (_ BitVec 64))
(declare-fun temp285_52 () (_ BitVec 64))
(declare-fun temp285_53 () (_ BitVec 64))
(declare-fun temp285_54 () (_ BitVec 64))
(declare-fun temp285_55 () (_ BitVec 64))
(declare-fun temp285_56 () (_ BitVec 64))
(declare-fun temp285_57 () (_ BitVec 64))
(declare-fun temp285_58 () (_ BitVec 64))
(declare-fun temp285_59 () (_ BitVec 64))
(declare-fun temp285_60 () (_ BitVec 64))
(declare-fun temp285_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp285_62 () (_ BitVec 64))
(declare-fun temp285_63 () (_ BitVec 64))
(declare-fun temp285_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp285_65 () (_ BitVec 64))
(declare-fun temp285_66 () (_ BitVec 64))
(declare-fun temp285_67 () (_ BitVec 64))
(declare-fun temp285_68 () (_ BitVec 64))
(declare-fun temp285_69 () (_ BitVec 64))
(declare-fun temp285_70 () (_ BitVec 64))
(declare-fun temp285_71 () (_ BitVec 64))
(declare-fun temp285_72 () (_ BitVec 64))
(declare-fun temp285_73 () (_ BitVec 64))
(declare-fun temp285_74 () (_ BitVec 64))
(declare-fun temp285_75 () (_ BitVec 64))
(declare-fun temp285_76 () (_ BitVec 64))
(declare-fun temp285_77 () (_ BitVec 64))
(declare-fun temp285_78 () (_ BitVec 64))
(declare-fun temp285_79 () (_ BitVec 64))
(declare-fun temp285_80 () (_ BitVec 64))
(declare-fun temp285_81 () (_ BitVec 64))
(declare-fun temp285_82 () (_ BitVec 64))
(declare-fun temp285_83 () (_ BitVec 64))
(declare-fun temp285_84 () (_ BitVec 64))
(declare-fun temp285_85 () (_ BitVec 64))
(declare-fun temp285_86 () (_ BitVec 64))
(declare-fun temp285_87 () (_ BitVec 64))
(declare-fun temp285_88 () (_ BitVec 64))
(declare-fun temp285_89 () (_ BitVec 64))
(declare-fun temp285_90 () (_ BitVec 64))
(declare-fun temp285_91 () (_ BitVec 64))
(declare-fun temp285_92 () (_ BitVec 64))
(declare-fun temp285_93 () (_ BitVec 64))
(declare-fun temp285_94 () (_ BitVec 64))
(declare-fun temp285_95 () (_ BitVec 64))
(declare-fun temp285_96 () (_ BitVec 64))
(declare-fun temp285_97 () (_ BitVec 64))
(declare-fun temp285_98 () (_ BitVec 64))
(declare-fun temp285_99 () (_ BitVec 64))
(declare-fun temp285_100 () (_ BitVec 64))
(declare-fun temp285_101 () (_ BitVec 64))
(declare-fun temp285_102 () (_ BitVec 64))
(declare-fun temp285_103 () (_ BitVec 64))
(declare-fun temp285_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp285_105 () (_ BitVec 64))
(declare-fun temp285_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp285_107 () (_ BitVec 64))
(declare-fun temp285_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp285_109 () (_ BitVec 64))
(declare-fun temp285_110 () (_ BitVec 64))
(declare-fun temp285_111 () (_ BitVec 64))
(declare-fun temp285_112 () (_ BitVec 64))
(declare-fun temp285_113 () (_ BitVec 64))
(declare-fun temp285_114 () (_ BitVec 64))
(declare-fun temp285_115 () (_ BitVec 64))
(declare-fun temp285_116 () (_ BitVec 64))
(declare-fun temp285_117 () (_ BitVec 64))
(declare-fun temp285_118 () (_ BitVec 64))
(declare-fun temp285_119 () (_ BitVec 64))
(declare-fun temp285_120 () (_ BitVec 64))
(declare-fun temp285_121 () (_ BitVec 64))
(declare-fun temp285_122 () (_ BitVec 64))
(declare-fun temp285_123 () (_ BitVec 64))
(declare-fun temp285_124 () (_ BitVec 64))
(declare-fun temp285_126 () (_ BitVec 64))
(declare-fun temp285_127 () (_ BitVec 64))
(declare-fun temp285_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp285_128 () (_ BitVec 64))
(declare-fun temp285_129 () (_ BitVec 64))
(declare-fun temp285_131 () (_ BitVec 64))
(declare-fun temp285_132 () (_ BitVec 64))
(declare-fun temp285_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp285_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp285_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp285_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp285_136 () (_ BitVec 64))
(declare-fun temp285_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp285_139 () (_ BitVec 64))
(declare-fun temp285_140 () (_ BitVec 64))
(declare-fun temp285_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp285_141 () (_ BitVec 64))
(declare-fun temp285_143 () (_ BitVec 64))
(declare-fun temp285_144 () (_ BitVec 64))
(declare-fun temp285_142 () (_ BitVec 64))
(declare-fun temp285_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp285_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp285_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp285_148 () (_ BitVec 64))
(declare-fun temp285_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp285_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp285_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp285_152 () (_ BitVec 64))
(assert (= temp285_1 #x0000000000000002))
(assert (= var989741 temp285_1))
(assert (= temp285_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp285_2)))
(assert (= temp285_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp285_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp285_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp285_4)))
(assert (= temp285_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp285_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp285_6 #x0000000000000000))
(assert (= var989776 temp285_6))
(assert (= temp285_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp285_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp285_8 #x0000000000000001))
(assert (= var989810 temp285_8))
(assert (= temp285_10 #x0000000000000000))
(assert (= temp285_9 temp285_10))
(assert (= temp285_12 #x0000000000000002))
(assert (= temp285_11 temp285_12))
(assert (= temp285_13 #x0000000000000000))
(assert (= var1387902 temp285_13))
(assert (= temp285_14 #x0000000000000001))
(assert (= var1387923 temp285_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp285_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp285_15)))
(assert (= temp285_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp285_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_17 #x0000000000000000))
(assert (= var1521661 temp285_17))
(assert (= temp285_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp285_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_19 #x0000000000000000))
(assert (= var1521706 temp285_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp285_20 #x0000000000000000))
(assert (= temp285_21 temp285_20))
(assert (= temp285_22 (select ARGNAME_padding_NAMEEND_VAL temp285_21)))
(assert (= temp285_23 #x0000000000000001))
(assert (= temp285_24 temp285_23))
(assert (= temp285_25 (select ARGNAME_padding_NAMEEND_VAL temp285_24)))
(assert (= temp285_26 #x0000000000000002))
(assert (= temp285_27 temp285_26))
(assert (= temp285_28 (select ARGNAME_padding_NAMEEND_VAL temp285_27)))
(assert (= temp285_29 #x0000000000000003))
(assert (= temp285_30 temp285_29))
(assert (= temp285_31 (select ARGNAME_padding_NAMEEND_VAL temp285_30)))
(assert (= temp285_32 #x0000000000000004))
(assert (= temp285_33 temp285_32))
(assert (= temp285_34 (select ARGNAME_padding_NAMEEND_VAL temp285_33)))
(assert (= temp285_35 #x0000000000000005))
(assert (= temp285_36 temp285_35))
(assert (= temp285_37 (select ARGNAME_padding_NAMEEND_VAL temp285_36)))
(assert (= temp285_38 #x0000000000000000))
(assert (= temp285_39 #x0000000000000000))
(assert (= temp285_40 temp285_39))
(assert (= temp285_41 (select ARGNAME_padding_NAMEEND_VAL temp285_40)))
(assert (= temp285_42 #x0000000000000000))
(assert (= temp285_43 #x0000000000000001))
(assert (= temp285_44 temp285_43))
(assert (= temp285_45 (select ARGNAME_padding_NAMEEND_VAL temp285_44)))
(assert (= temp285_46 #x0000000000000000))
(assert (= temp285_47 #x0000000000000002))
(assert (= temp285_48 temp285_47))
(assert (= temp285_49 (select ARGNAME_padding_NAMEEND_VAL temp285_48)))
(assert (= temp285_50 #x0000000000000000))
(assert (= temp285_51 #x0000000000000003))
(assert (= temp285_52 temp285_51))
(assert (= temp285_53 (select ARGNAME_padding_NAMEEND_VAL temp285_52)))
(assert (= temp285_54 #x0000000000000000))
(assert (= temp285_55 #x0000000000000004))
(assert (= temp285_56 temp285_55))
(assert (= temp285_57 (select ARGNAME_padding_NAMEEND_VAL temp285_56)))
(assert (= temp285_58 #x0000000000000000))
(assert (= temp285_59 #x0000000000000005))
(assert (= temp285_60 temp285_59))
(assert (= temp285_61 (select ARGNAME_padding_NAMEEND_VAL temp285_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp285_41 temp285_38)
             (bvslt temp285_45 temp285_42)
             (bvslt temp285_49 temp285_46)
             (bvslt temp285_53 temp285_50)
             (bvslt temp285_57 temp285_54)
             (bvslt temp285_61 temp285_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_62 #x0000000000000000))
(assert (= var2240290 temp285_62))
(assert (= temp285_63 #x0000000000000000))
(assert (= temp285_64 temp285_63))
(assert (= temp285_65 (select ARGNAME_stride_NAMEEND_VAL temp285_64)))
(assert (= temp285_66 #x0000000000000001))
(assert (= temp285_67 temp285_66))
(assert (= temp285_68 (select ARGNAME_stride_NAMEEND_VAL temp285_67)))
(assert (= temp285_69 #x0000000000000002))
(assert (= temp285_70 temp285_69))
(assert (= temp285_71 (select ARGNAME_stride_NAMEEND_VAL temp285_70)))
(assert (= temp285_72 #x0000000000000003))
(assert (= temp285_73 temp285_72))
(assert (= temp285_74 (select ARGNAME_stride_NAMEEND_VAL temp285_73)))
(assert (= temp285_75 #x0000000000000004))
(assert (= temp285_76 temp285_75))
(assert (= temp285_77 (select ARGNAME_stride_NAMEEND_VAL temp285_76)))
(assert (= temp285_78 #x0000000000000005))
(assert (= temp285_79 temp285_78))
(assert (= temp285_80 (select ARGNAME_stride_NAMEEND_VAL temp285_79)))
(assert (= temp285_81 #x0000000000000000))
(assert (= temp285_82 #x0000000000000000))
(assert (= temp285_83 temp285_82))
(assert (= temp285_84 (select ARGNAME_stride_NAMEEND_VAL temp285_83)))
(assert (= temp285_85 #x0000000000000000))
(assert (= temp285_86 #x0000000000000001))
(assert (= temp285_87 temp285_86))
(assert (= temp285_88 (select ARGNAME_stride_NAMEEND_VAL temp285_87)))
(assert (= temp285_89 #x0000000000000000))
(assert (= temp285_90 #x0000000000000002))
(assert (= temp285_91 temp285_90))
(assert (= temp285_92 (select ARGNAME_stride_NAMEEND_VAL temp285_91)))
(assert (= temp285_93 #x0000000000000000))
(assert (= temp285_94 #x0000000000000003))
(assert (= temp285_95 temp285_94))
(assert (= temp285_96 (select ARGNAME_stride_NAMEEND_VAL temp285_95)))
(assert (= temp285_97 #x0000000000000000))
(assert (= temp285_98 #x0000000000000004))
(assert (= temp285_99 temp285_98))
(assert (= temp285_100 (select ARGNAME_stride_NAMEEND_VAL temp285_99)))
(assert (= temp285_101 #x0000000000000000))
(assert (= temp285_102 #x0000000000000005))
(assert (= temp285_103 temp285_102))
(assert (= temp285_104 (select ARGNAME_stride_NAMEEND_VAL temp285_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp285_84 temp285_81)
             (bvsle temp285_88 temp285_85)
             (bvsle temp285_92 temp285_89)
             (bvsle temp285_96 temp285_93)
             (bvsle temp285_100 temp285_97)
             (bvsle temp285_104 temp285_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_105 #x0000000000000000))
(assert (= var2240311 temp285_105))
(assert (= temp285_106 #x0000000000000000))
(assert (= var2228402 temp285_106))
(assert (= temp285_107 #x0000000000000000))
(assert (= temp285_108 temp285_107))
(assert (= temp285_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_108)))
(assert (= temp285_110 #x0000000000000001))
(assert (= temp285_111 temp285_110))
(assert (= temp285_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_111)))
(assert (= temp285_113 #x0000000000000002))
(assert (= temp285_114 temp285_113))
(assert (= temp285_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_114)))
(assert (= temp285_116 #x0000000000000003))
(assert (= temp285_117 temp285_116))
(assert (= temp285_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_117)))
(assert (= temp285_119 #x0000000000000004))
(assert (= temp285_120 temp285_119))
(assert (= temp285_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_120)))
(assert (= temp285_122 #x0000000000000005))
(assert (= temp285_123 temp285_122))
(assert (= temp285_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_123)))
(assert (= temp285_126 var2228402))
(assert (= temp285_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_126)))
(assert (= temp285_125 temp285_127))
(assert (= var2240356
   (ite (bvslt temp285_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_128 #x0000000000000000))
(assert (= var2240356 temp285_128))
(assert (= temp285_129 #x0000000000000000))
(assert (= var2228402 temp285_129))
(assert (= temp285_131 var2228402))
(assert (= temp285_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_131)))
(assert (= temp285_130 temp285_132))
(assert (= var2240378 (bvsmod temp285_130 ARGNAME_groups_NAMEEND)))
(assert (= temp285_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp285_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp285_134 #x0000000000000001))
(assert (= var2240379 temp285_134))
(assert (= var2240398 var2240288))
(assert (= temp285_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp285_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp285_136 #x0000000000000001))
(assert (= var2240399 temp285_136))
(assert (= temp285_137 #x0000000000000001))
(assert (= var2229290 temp285_137))
(assert (= temp285_139 var2229290))
(assert (= temp285_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_139)))
(assert (= temp285_138 temp285_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp285_138)))
(assert (= temp285_141 #x0000000000000000))
(assert (= var2228402 temp285_141))
(assert (= temp285_143 var2228402))
(assert (= temp285_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_143)))
(assert (= temp285_142 temp285_144))
(assert (= temp285_145 #x0000000000000002))
(assert (= var2503529 temp285_145))
(assert (= temp285_146 #x0000000000000001))
(assert (= var2240569 temp285_146))
(assert (= temp285_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp285_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_148 #x0000000000000001))
(assert (= var1521778 temp285_148))
(assert (= temp285_149 #x0000000000000001))
(assert (= var1521908 temp285_149))
(assert (= var4010473 var1521908))
(assert (= temp285_150 #x0000000000000000))
(assert (= var4210495 temp285_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp285_151 #x0000000000000002))
(assert (= var4339331 temp285_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp285_152 #x0000000000000001))
(assert (= var1521778 temp285_152))
(model-add temp285_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp285_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp285_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp285_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp285_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp285_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






