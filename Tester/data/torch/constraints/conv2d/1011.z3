(declare-fun temp10118_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp10118_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp10118_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp10118_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp10118_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp10118_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp10118_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp10118_8 () (_ BitVec 64))
(declare-fun temp10118_10 () (_ BitVec 64))
(declare-fun temp10118_9 () (_ BitVec 64))
(declare-fun temp10118_12 () (_ BitVec 64))
(declare-fun temp10118_11 () (_ BitVec 64))
(declare-fun temp10118_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp10118_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp10118_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp10118_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp10118_17 () (_ BitVec 64))
(declare-fun temp10118_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp10118_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp10118_20 () (_ BitVec 64))
(declare-fun temp10118_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10118_22 () (_ BitVec 64))
(declare-fun temp10118_23 () (_ BitVec 64))
(declare-fun temp10118_24 () (_ BitVec 64))
(declare-fun temp10118_25 () (_ BitVec 64))
(declare-fun temp10118_26 () (_ BitVec 64))
(declare-fun temp10118_27 () (_ BitVec 64))
(declare-fun temp10118_28 () (_ BitVec 64))
(declare-fun temp10118_29 () (_ BitVec 64))
(declare-fun temp10118_30 () (_ BitVec 64))
(declare-fun temp10118_31 () (_ BitVec 64))
(declare-fun temp10118_32 () (_ BitVec 64))
(declare-fun temp10118_33 () (_ BitVec 64))
(declare-fun temp10118_34 () (_ BitVec 64))
(declare-fun temp10118_35 () (_ BitVec 64))
(declare-fun temp10118_36 () (_ BitVec 64))
(declare-fun temp10118_37 () (_ BitVec 64))
(declare-fun temp10118_38 () (_ BitVec 64))
(declare-fun temp10118_39 () (_ BitVec 64))
(declare-fun temp10118_40 () (_ BitVec 64))
(declare-fun temp10118_41 () (_ BitVec 64))
(declare-fun temp10118_42 () (_ BitVec 64))
(declare-fun temp10118_43 () (_ BitVec 64))
(declare-fun temp10118_44 () (_ BitVec 64))
(declare-fun temp10118_45 () (_ BitVec 64))
(declare-fun temp10118_46 () (_ BitVec 64))
(declare-fun temp10118_47 () (_ BitVec 64))
(declare-fun temp10118_48 () (_ BitVec 64))
(declare-fun temp10118_49 () (_ BitVec 64))
(declare-fun temp10118_50 () (_ BitVec 64))
(declare-fun temp10118_51 () (_ BitVec 64))
(declare-fun temp10118_52 () (_ BitVec 64))
(declare-fun temp10118_53 () (_ BitVec 64))
(declare-fun temp10118_54 () (_ BitVec 64))
(declare-fun temp10118_55 () (_ BitVec 64))
(declare-fun temp10118_56 () (_ BitVec 64))
(declare-fun temp10118_57 () (_ BitVec 64))
(declare-fun temp10118_58 () (_ BitVec 64))
(declare-fun temp10118_59 () (_ BitVec 64))
(declare-fun temp10118_60 () (_ BitVec 64))
(declare-fun temp10118_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp10118_62 () (_ BitVec 64))
(declare-fun temp10118_63 () (_ BitVec 64))
(declare-fun temp10118_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10118_65 () (_ BitVec 64))
(declare-fun temp10118_66 () (_ BitVec 64))
(declare-fun temp10118_67 () (_ BitVec 64))
(declare-fun temp10118_68 () (_ BitVec 64))
(declare-fun temp10118_69 () (_ BitVec 64))
(declare-fun temp10118_70 () (_ BitVec 64))
(declare-fun temp10118_71 () (_ BitVec 64))
(declare-fun temp10118_72 () (_ BitVec 64))
(declare-fun temp10118_73 () (_ BitVec 64))
(declare-fun temp10118_74 () (_ BitVec 64))
(declare-fun temp10118_75 () (_ BitVec 64))
(declare-fun temp10118_76 () (_ BitVec 64))
(declare-fun temp10118_77 () (_ BitVec 64))
(declare-fun temp10118_78 () (_ BitVec 64))
(declare-fun temp10118_79 () (_ BitVec 64))
(declare-fun temp10118_80 () (_ BitVec 64))
(declare-fun temp10118_81 () (_ BitVec 64))
(declare-fun temp10118_82 () (_ BitVec 64))
(declare-fun temp10118_83 () (_ BitVec 64))
(declare-fun temp10118_84 () (_ BitVec 64))
(declare-fun temp10118_85 () (_ BitVec 64))
(declare-fun temp10118_86 () (_ BitVec 64))
(declare-fun temp10118_87 () (_ BitVec 64))
(declare-fun temp10118_88 () (_ BitVec 64))
(declare-fun temp10118_89 () (_ BitVec 64))
(declare-fun temp10118_90 () (_ BitVec 64))
(declare-fun temp10118_91 () (_ BitVec 64))
(declare-fun temp10118_92 () (_ BitVec 64))
(declare-fun temp10118_93 () (_ BitVec 64))
(declare-fun temp10118_94 () (_ BitVec 64))
(declare-fun temp10118_95 () (_ BitVec 64))
(declare-fun temp10118_96 () (_ BitVec 64))
(declare-fun temp10118_97 () (_ BitVec 64))
(declare-fun temp10118_98 () (_ BitVec 64))
(declare-fun temp10118_99 () (_ BitVec 64))
(declare-fun temp10118_100 () (_ BitVec 64))
(declare-fun temp10118_101 () (_ BitVec 64))
(declare-fun temp10118_102 () (_ BitVec 64))
(declare-fun temp10118_103 () (_ BitVec 64))
(declare-fun temp10118_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp10118_105 () (_ BitVec 64))
(declare-fun temp10118_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp10118_107 () (_ BitVec 64))
(declare-fun temp10118_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10118_109 () (_ BitVec 64))
(declare-fun temp10118_110 () (_ BitVec 64))
(declare-fun temp10118_111 () (_ BitVec 64))
(declare-fun temp10118_112 () (_ BitVec 64))
(declare-fun temp10118_113 () (_ BitVec 64))
(declare-fun temp10118_114 () (_ BitVec 64))
(declare-fun temp10118_115 () (_ BitVec 64))
(declare-fun temp10118_116 () (_ BitVec 64))
(declare-fun temp10118_117 () (_ BitVec 64))
(declare-fun temp10118_118 () (_ BitVec 64))
(declare-fun temp10118_119 () (_ BitVec 64))
(declare-fun temp10118_120 () (_ BitVec 64))
(declare-fun temp10118_121 () (_ BitVec 64))
(declare-fun temp10118_122 () (_ BitVec 64))
(declare-fun temp10118_123 () (_ BitVec 64))
(declare-fun temp10118_124 () (_ BitVec 64))
(declare-fun temp10118_126 () (_ BitVec 64))
(declare-fun temp10118_127 () (_ BitVec 64))
(declare-fun temp10118_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp10118_128 () (_ BitVec 64))
(declare-fun temp10118_129 () (_ BitVec 64))
(declare-fun temp10118_131 () (_ BitVec 64))
(declare-fun temp10118_132 () (_ BitVec 64))
(declare-fun temp10118_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp10118_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp10118_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp10118_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp10118_136 () (_ BitVec 64))
(declare-fun temp10118_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp10118_139 () (_ BitVec 64))
(declare-fun temp10118_140 () (_ BitVec 64))
(declare-fun temp10118_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp10118_141 () (_ BitVec 64))
(declare-fun temp10118_143 () (_ BitVec 64))
(declare-fun temp10118_144 () (_ BitVec 64))
(declare-fun temp10118_142 () (_ BitVec 64))
(declare-fun temp10118_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp10118_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp10118_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp10118_148 () (_ BitVec 64))
(declare-fun temp10118_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp10118_150 () (_ BitVec 64))
(declare-fun var4010640 () (_ BitVec 64))
(declare-fun var4010467 () (_ BitVec 64))
(declare-fun var1521917 () (_ BitVec 64))
(declare-fun var4275993 () (_ BitVec 64))
(declare-fun temp10118_151 () (_ BitVec 64))
(declare-fun temp10118_152 () (_ BitVec 64))
(declare-fun temp10118_153 () (_ BitVec 64))
(declare-fun var4470403 () (_ BitVec 64))
(declare-fun var4470405 () (_ BitVec 64))
(declare-fun var4535948 () (_ BitVec 64))
(declare-fun var4535949 () (_ BitVec 64))
(declare-fun temp10118_154 () (_ BitVec 64))
(declare-fun var1522108 () (_ BitVec 64))
(declare-fun temp10118_155 () (_ BitVec 64))
(declare-fun var1522109 () (_ BitVec 64))
(declare-fun var5848909 () (_ BitVec 64))
(declare-fun temp10118_157 () (_ BitVec 64))
(declare-fun temp10118_156 () (_ BitVec 64))
(declare-fun temp10118_158 () (_ BitVec 64))
(declare-fun var6426090 () (_ BitVec 64))
(declare-fun temp10118_160 () (_ BitVec 64))
(declare-fun temp10118_159 () (_ BitVec 64))
(declare-fun temp10118_161 () (_ BitVec 64))
(assert (= temp10118_1 #x0000000000000002))
(assert (= var989741 temp10118_1))
(assert (= temp10118_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp10118_2)))
(assert (= temp10118_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp10118_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp10118_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp10118_4)))
(assert (= temp10118_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp10118_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp10118_6 #x0000000000000000))
(assert (= var989776 temp10118_6))
(assert (= temp10118_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp10118_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp10118_8 #x0000000000000001))
(assert (= var989810 temp10118_8))
(assert (= temp10118_10 #x0000000000000000))
(assert (= temp10118_9 temp10118_10))
(assert (= temp10118_12 #x0000000000000002))
(assert (= temp10118_11 temp10118_12))
(assert (= temp10118_13 #x0000000000000000))
(assert (= var1387902 temp10118_13))
(assert (= temp10118_14 #x0000000000000001))
(assert (= var1387923 temp10118_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp10118_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp10118_15)))
(assert (= temp10118_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10118_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10118_17 #x0000000000000000))
(assert (= var1521661 temp10118_17))
(assert (= temp10118_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp10118_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10118_19 #x0000000000000000))
(assert (= var1521706 temp10118_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp10118_20 #x0000000000000000))
(assert (= temp10118_21 temp10118_20))
(assert (= temp10118_22 (select ARGNAME_padding_NAMEEND_VAL temp10118_21)))
(assert (= temp10118_23 #x0000000000000001))
(assert (= temp10118_24 temp10118_23))
(assert (= temp10118_25 (select ARGNAME_padding_NAMEEND_VAL temp10118_24)))
(assert (= temp10118_26 #x0000000000000002))
(assert (= temp10118_27 temp10118_26))
(assert (= temp10118_28 (select ARGNAME_padding_NAMEEND_VAL temp10118_27)))
(assert (= temp10118_29 #x0000000000000003))
(assert (= temp10118_30 temp10118_29))
(assert (= temp10118_31 (select ARGNAME_padding_NAMEEND_VAL temp10118_30)))
(assert (= temp10118_32 #x0000000000000004))
(assert (= temp10118_33 temp10118_32))
(assert (= temp10118_34 (select ARGNAME_padding_NAMEEND_VAL temp10118_33)))
(assert (= temp10118_35 #x0000000000000005))
(assert (= temp10118_36 temp10118_35))
(assert (= temp10118_37 (select ARGNAME_padding_NAMEEND_VAL temp10118_36)))
(assert (= temp10118_38 #x0000000000000000))
(assert (= temp10118_39 #x0000000000000000))
(assert (= temp10118_40 temp10118_39))
(assert (= temp10118_41 (select ARGNAME_padding_NAMEEND_VAL temp10118_40)))
(assert (= temp10118_42 #x0000000000000000))
(assert (= temp10118_43 #x0000000000000001))
(assert (= temp10118_44 temp10118_43))
(assert (= temp10118_45 (select ARGNAME_padding_NAMEEND_VAL temp10118_44)))
(assert (= temp10118_46 #x0000000000000000))
(assert (= temp10118_47 #x0000000000000002))
(assert (= temp10118_48 temp10118_47))
(assert (= temp10118_49 (select ARGNAME_padding_NAMEEND_VAL temp10118_48)))
(assert (= temp10118_50 #x0000000000000000))
(assert (= temp10118_51 #x0000000000000003))
(assert (= temp10118_52 temp10118_51))
(assert (= temp10118_53 (select ARGNAME_padding_NAMEEND_VAL temp10118_52)))
(assert (= temp10118_54 #x0000000000000000))
(assert (= temp10118_55 #x0000000000000004))
(assert (= temp10118_56 temp10118_55))
(assert (= temp10118_57 (select ARGNAME_padding_NAMEEND_VAL temp10118_56)))
(assert (= temp10118_58 #x0000000000000000))
(assert (= temp10118_59 #x0000000000000005))
(assert (= temp10118_60 temp10118_59))
(assert (= temp10118_61 (select ARGNAME_padding_NAMEEND_VAL temp10118_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp10118_41 temp10118_38)
             (bvslt temp10118_45 temp10118_42)
             (bvslt temp10118_49 temp10118_46)
             (bvslt temp10118_53 temp10118_50)
             (bvslt temp10118_57 temp10118_54)
             (bvslt temp10118_61 temp10118_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10118_62 #x0000000000000000))
(assert (= var2240290 temp10118_62))
(assert (= temp10118_63 #x0000000000000000))
(assert (= temp10118_64 temp10118_63))
(assert (= temp10118_65 (select ARGNAME_stride_NAMEEND_VAL temp10118_64)))
(assert (= temp10118_66 #x0000000000000001))
(assert (= temp10118_67 temp10118_66))
(assert (= temp10118_68 (select ARGNAME_stride_NAMEEND_VAL temp10118_67)))
(assert (= temp10118_69 #x0000000000000002))
(assert (= temp10118_70 temp10118_69))
(assert (= temp10118_71 (select ARGNAME_stride_NAMEEND_VAL temp10118_70)))
(assert (= temp10118_72 #x0000000000000003))
(assert (= temp10118_73 temp10118_72))
(assert (= temp10118_74 (select ARGNAME_stride_NAMEEND_VAL temp10118_73)))
(assert (= temp10118_75 #x0000000000000004))
(assert (= temp10118_76 temp10118_75))
(assert (= temp10118_77 (select ARGNAME_stride_NAMEEND_VAL temp10118_76)))
(assert (= temp10118_78 #x0000000000000005))
(assert (= temp10118_79 temp10118_78))
(assert (= temp10118_80 (select ARGNAME_stride_NAMEEND_VAL temp10118_79)))
(assert (= temp10118_81 #x0000000000000000))
(assert (= temp10118_82 #x0000000000000000))
(assert (= temp10118_83 temp10118_82))
(assert (= temp10118_84 (select ARGNAME_stride_NAMEEND_VAL temp10118_83)))
(assert (= temp10118_85 #x0000000000000000))
(assert (= temp10118_86 #x0000000000000001))
(assert (= temp10118_87 temp10118_86))
(assert (= temp10118_88 (select ARGNAME_stride_NAMEEND_VAL temp10118_87)))
(assert (= temp10118_89 #x0000000000000000))
(assert (= temp10118_90 #x0000000000000002))
(assert (= temp10118_91 temp10118_90))
(assert (= temp10118_92 (select ARGNAME_stride_NAMEEND_VAL temp10118_91)))
(assert (= temp10118_93 #x0000000000000000))
(assert (= temp10118_94 #x0000000000000003))
(assert (= temp10118_95 temp10118_94))
(assert (= temp10118_96 (select ARGNAME_stride_NAMEEND_VAL temp10118_95)))
(assert (= temp10118_97 #x0000000000000000))
(assert (= temp10118_98 #x0000000000000004))
(assert (= temp10118_99 temp10118_98))
(assert (= temp10118_100 (select ARGNAME_stride_NAMEEND_VAL temp10118_99)))
(assert (= temp10118_101 #x0000000000000000))
(assert (= temp10118_102 #x0000000000000005))
(assert (= temp10118_103 temp10118_102))
(assert (= temp10118_104 (select ARGNAME_stride_NAMEEND_VAL temp10118_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp10118_84 temp10118_81)
             (bvsle temp10118_88 temp10118_85)
             (bvsle temp10118_92 temp10118_89)
             (bvsle temp10118_96 temp10118_93)
             (bvsle temp10118_100 temp10118_97)
             (bvsle temp10118_104 temp10118_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10118_105 #x0000000000000000))
(assert (= var2240311 temp10118_105))
(assert (= temp10118_106 #x0000000000000000))
(assert (= var2228402 temp10118_106))
(assert (= temp10118_107 #x0000000000000000))
(assert (= temp10118_108 temp10118_107))
(assert (= temp10118_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10118_108)))
(assert (= temp10118_110 #x0000000000000001))
(assert (= temp10118_111 temp10118_110))
(assert (= temp10118_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10118_111)))
(assert (= temp10118_113 #x0000000000000002))
(assert (= temp10118_114 temp10118_113))
(assert (= temp10118_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10118_114)))
(assert (= temp10118_116 #x0000000000000003))
(assert (= temp10118_117 temp10118_116))
(assert (= temp10118_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10118_117)))
(assert (= temp10118_119 #x0000000000000004))
(assert (= temp10118_120 temp10118_119))
(assert (= temp10118_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10118_120)))
(assert (= temp10118_122 #x0000000000000005))
(assert (= temp10118_123 temp10118_122))
(assert (= temp10118_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10118_123)))
(assert (= temp10118_126 var2228402))
(assert (= temp10118_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10118_126)))
(assert (= temp10118_125 temp10118_127))
(assert (= var2240356
   (ite (bvslt temp10118_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10118_128 #x0000000000000000))
(assert (= var2240356 temp10118_128))
(assert (= temp10118_129 #x0000000000000000))
(assert (= var2228402 temp10118_129))
(assert (= temp10118_131 var2228402))
(assert (= temp10118_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10118_131)))
(assert (= temp10118_130 temp10118_132))
(assert (= var2240378 (bvsmod temp10118_130 ARGNAME_groups_NAMEEND)))
(assert (= temp10118_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp10118_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp10118_134 #x0000000000000001))
(assert (= var2240379 temp10118_134))
(assert (= var2240398 var2240288))
(assert (= temp10118_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp10118_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp10118_136 #x0000000000000001))
(assert (= var2240399 temp10118_136))
(assert (= temp10118_137 #x0000000000000001))
(assert (= var2229290 temp10118_137))
(assert (= temp10118_139 var2229290))
(assert (= temp10118_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10118_139)))
(assert (= temp10118_138 temp10118_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp10118_138)))
(assert (= temp10118_141 #x0000000000000000))
(assert (= var2228402 temp10118_141))
(assert (= temp10118_143 var2228402))
(assert (= temp10118_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10118_143)))
(assert (= temp10118_142 temp10118_144))
(assert (= temp10118_145 #x0000000000000002))
(assert (= var2503529 temp10118_145))
(assert (= temp10118_146 #x0000000000000001))
(assert (= var2240569 temp10118_146))
(assert (= temp10118_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10118_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10118_148 #x0000000000000001))
(assert (= var1521778 temp10118_148))
(assert (= temp10118_149 #x0000000000000001))
(assert (= var1521908 temp10118_149))
(assert (= var4010473 var1521908))
(assert (= temp10118_150 #x0000000000000002))
(assert (= var4010640 temp10118_150))
(assert (= var4010467 var4010640))
(assert (= var1521917 var4010467))
(assert (= var4275993 var1521917))
(assert (= temp10118_151 #x0000000000000002))
(assert (= temp10118_152 #x0000000000000003))
(assert (or false (= var4275993 temp10118_151) (= var4275993 temp10118_152)))
(assert (= temp10118_153 #x0000000000000002))
(assert (= var4470403 temp10118_153))
(assert (= var4470405 (bvsub ARGNAME_weight_NAMEEND_DIM var4470403)))
(assert (= var4535948 var4470403))
(assert (= var4535949 var4470405))
(assert (= temp10118_154 #x0000000000000002))
(assert (or false (= var1521917 temp10118_154)))
(assert (= var1522108 var1521633))
(assert (= temp10118_155 #x0000000000000000))
(assert (= var1522109
   (ite (distinct var1522108 temp10118_155)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var5848909 var1522109))
(assert (= temp10118_157 #x0000000000000001))
(assert (= temp10118_156 temp10118_157))
(assert (= temp10118_158 #x0000000000000001))
(assert (= var6426090 temp10118_158))
(assert (= temp10118_160 #xffffffffffffffff))
(assert (= temp10118_159 temp10118_160))
(assert (= temp10118_161 #x0000000000000001))
(assert (= var1521778 temp10118_161))
(model-add temp10118_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp10118_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp10118_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp10118_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp10118_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp10118_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






