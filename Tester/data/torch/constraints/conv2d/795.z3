(declare-fun temp1059_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp1059_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp1059_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp1059_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp1059_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp1059_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp1059_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp1059_8 () (_ BitVec 64))
(declare-fun temp1059_10 () (_ BitVec 64))
(declare-fun temp1059_9 () (_ BitVec 64))
(declare-fun temp1059_12 () (_ BitVec 64))
(declare-fun temp1059_11 () (_ BitVec 64))
(declare-fun temp1059_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp1059_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp1059_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp1059_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp1059_17 () (_ BitVec 64))
(declare-fun temp1059_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp1059_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp1059_20 () (_ BitVec 64))
(declare-fun temp1059_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1059_22 () (_ BitVec 64))
(declare-fun temp1059_23 () (_ BitVec 64))
(declare-fun temp1059_24 () (_ BitVec 64))
(declare-fun temp1059_25 () (_ BitVec 64))
(declare-fun temp1059_26 () (_ BitVec 64))
(declare-fun temp1059_27 () (_ BitVec 64))
(declare-fun temp1059_28 () (_ BitVec 64))
(declare-fun temp1059_29 () (_ BitVec 64))
(declare-fun temp1059_30 () (_ BitVec 64))
(declare-fun temp1059_31 () (_ BitVec 64))
(declare-fun temp1059_32 () (_ BitVec 64))
(declare-fun temp1059_33 () (_ BitVec 64))
(declare-fun temp1059_34 () (_ BitVec 64))
(declare-fun temp1059_35 () (_ BitVec 64))
(declare-fun temp1059_36 () (_ BitVec 64))
(declare-fun temp1059_37 () (_ BitVec 64))
(declare-fun temp1059_38 () (_ BitVec 64))
(declare-fun temp1059_39 () (_ BitVec 64))
(declare-fun temp1059_40 () (_ BitVec 64))
(declare-fun temp1059_41 () (_ BitVec 64))
(declare-fun temp1059_42 () (_ BitVec 64))
(declare-fun temp1059_43 () (_ BitVec 64))
(declare-fun temp1059_44 () (_ BitVec 64))
(declare-fun temp1059_45 () (_ BitVec 64))
(declare-fun temp1059_46 () (_ BitVec 64))
(declare-fun temp1059_47 () (_ BitVec 64))
(declare-fun temp1059_48 () (_ BitVec 64))
(declare-fun temp1059_49 () (_ BitVec 64))
(declare-fun temp1059_50 () (_ BitVec 64))
(declare-fun temp1059_51 () (_ BitVec 64))
(declare-fun temp1059_52 () (_ BitVec 64))
(declare-fun temp1059_53 () (_ BitVec 64))
(declare-fun temp1059_54 () (_ BitVec 64))
(declare-fun temp1059_55 () (_ BitVec 64))
(declare-fun temp1059_56 () (_ BitVec 64))
(declare-fun temp1059_57 () (_ BitVec 64))
(declare-fun temp1059_58 () (_ BitVec 64))
(declare-fun temp1059_59 () (_ BitVec 64))
(declare-fun temp1059_60 () (_ BitVec 64))
(declare-fun temp1059_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp1059_62 () (_ BitVec 64))
(declare-fun temp1059_63 () (_ BitVec 64))
(declare-fun temp1059_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1059_65 () (_ BitVec 64))
(declare-fun temp1059_66 () (_ BitVec 64))
(declare-fun temp1059_67 () (_ BitVec 64))
(declare-fun temp1059_68 () (_ BitVec 64))
(declare-fun temp1059_69 () (_ BitVec 64))
(declare-fun temp1059_70 () (_ BitVec 64))
(declare-fun temp1059_71 () (_ BitVec 64))
(declare-fun temp1059_72 () (_ BitVec 64))
(declare-fun temp1059_73 () (_ BitVec 64))
(declare-fun temp1059_74 () (_ BitVec 64))
(declare-fun temp1059_75 () (_ BitVec 64))
(declare-fun temp1059_76 () (_ BitVec 64))
(declare-fun temp1059_77 () (_ BitVec 64))
(declare-fun temp1059_78 () (_ BitVec 64))
(declare-fun temp1059_79 () (_ BitVec 64))
(declare-fun temp1059_80 () (_ BitVec 64))
(declare-fun temp1059_81 () (_ BitVec 64))
(declare-fun temp1059_82 () (_ BitVec 64))
(declare-fun temp1059_83 () (_ BitVec 64))
(declare-fun temp1059_84 () (_ BitVec 64))
(declare-fun temp1059_85 () (_ BitVec 64))
(declare-fun temp1059_86 () (_ BitVec 64))
(declare-fun temp1059_87 () (_ BitVec 64))
(declare-fun temp1059_88 () (_ BitVec 64))
(declare-fun temp1059_89 () (_ BitVec 64))
(declare-fun temp1059_90 () (_ BitVec 64))
(declare-fun temp1059_91 () (_ BitVec 64))
(declare-fun temp1059_92 () (_ BitVec 64))
(declare-fun temp1059_93 () (_ BitVec 64))
(declare-fun temp1059_94 () (_ BitVec 64))
(declare-fun temp1059_95 () (_ BitVec 64))
(declare-fun temp1059_96 () (_ BitVec 64))
(declare-fun temp1059_97 () (_ BitVec 64))
(declare-fun temp1059_98 () (_ BitVec 64))
(declare-fun temp1059_99 () (_ BitVec 64))
(declare-fun temp1059_100 () (_ BitVec 64))
(declare-fun temp1059_101 () (_ BitVec 64))
(declare-fun temp1059_102 () (_ BitVec 64))
(declare-fun temp1059_103 () (_ BitVec 64))
(declare-fun temp1059_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp1059_105 () (_ BitVec 64))
(declare-fun temp1059_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp1059_107 () (_ BitVec 64))
(declare-fun temp1059_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1059_109 () (_ BitVec 64))
(declare-fun temp1059_110 () (_ BitVec 64))
(declare-fun temp1059_111 () (_ BitVec 64))
(declare-fun temp1059_112 () (_ BitVec 64))
(declare-fun temp1059_113 () (_ BitVec 64))
(declare-fun temp1059_114 () (_ BitVec 64))
(declare-fun temp1059_115 () (_ BitVec 64))
(declare-fun temp1059_116 () (_ BitVec 64))
(declare-fun temp1059_117 () (_ BitVec 64))
(declare-fun temp1059_118 () (_ BitVec 64))
(declare-fun temp1059_119 () (_ BitVec 64))
(declare-fun temp1059_120 () (_ BitVec 64))
(declare-fun temp1059_121 () (_ BitVec 64))
(declare-fun temp1059_122 () (_ BitVec 64))
(declare-fun temp1059_123 () (_ BitVec 64))
(declare-fun temp1059_124 () (_ BitVec 64))
(declare-fun temp1059_126 () (_ BitVec 64))
(declare-fun temp1059_127 () (_ BitVec 64))
(declare-fun temp1059_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp1059_128 () (_ BitVec 64))
(declare-fun temp1059_129 () (_ BitVec 64))
(declare-fun temp1059_131 () (_ BitVec 64))
(declare-fun temp1059_132 () (_ BitVec 64))
(declare-fun temp1059_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp1059_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp1059_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp1059_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp1059_136 () (_ BitVec 64))
(declare-fun temp1059_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp1059_139 () (_ BitVec 64))
(declare-fun temp1059_140 () (_ BitVec 64))
(declare-fun temp1059_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp1059_141 () (_ BitVec 64))
(declare-fun temp1059_143 () (_ BitVec 64))
(declare-fun temp1059_144 () (_ BitVec 64))
(declare-fun temp1059_142 () (_ BitVec 64))
(declare-fun temp1059_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp1059_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp1059_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp1059_148 () (_ BitVec 64))
(declare-fun temp1059_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp1059_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp1059_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp1059_152 () (_ BitVec 64))
(declare-fun var1523134 () (_ BitVec 64))
(declare-fun temp1059_153 () (_ BitVec 64))
(declare-fun temp1059_154 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun temp1059_155 () (_ BitVec 64))
(assert (= temp1059_1 #x0000000000000002))
(assert (= var989741 temp1059_1))
(assert (= temp1059_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp1059_2)))
(assert (= temp1059_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp1059_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp1059_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp1059_4)))
(assert (= temp1059_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp1059_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp1059_6 #x0000000000000000))
(assert (= var989776 temp1059_6))
(assert (= temp1059_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp1059_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1059_8 #x0000000000000001))
(assert (= var989810 temp1059_8))
(assert (= temp1059_10 #x0000000000000000))
(assert (= temp1059_9 temp1059_10))
(assert (= temp1059_12 #x0000000000000002))
(assert (= temp1059_11 temp1059_12))
(assert (= temp1059_13 #x0000000000000000))
(assert (= var1387902 temp1059_13))
(assert (= temp1059_14 #x0000000000000001))
(assert (= var1387923 temp1059_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp1059_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp1059_15)))
(assert (= temp1059_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1059_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1059_17 #x0000000000000000))
(assert (= var1521661 temp1059_17))
(assert (= temp1059_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp1059_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1059_19 #x0000000000000000))
(assert (= var1521706 temp1059_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp1059_20 #x0000000000000000))
(assert (= temp1059_21 temp1059_20))
(assert (= temp1059_22 (select ARGNAME_padding_NAMEEND_VAL temp1059_21)))
(assert (= temp1059_23 #x0000000000000001))
(assert (= temp1059_24 temp1059_23))
(assert (= temp1059_25 (select ARGNAME_padding_NAMEEND_VAL temp1059_24)))
(assert (= temp1059_26 #x0000000000000002))
(assert (= temp1059_27 temp1059_26))
(assert (= temp1059_28 (select ARGNAME_padding_NAMEEND_VAL temp1059_27)))
(assert (= temp1059_29 #x0000000000000003))
(assert (= temp1059_30 temp1059_29))
(assert (= temp1059_31 (select ARGNAME_padding_NAMEEND_VAL temp1059_30)))
(assert (= temp1059_32 #x0000000000000004))
(assert (= temp1059_33 temp1059_32))
(assert (= temp1059_34 (select ARGNAME_padding_NAMEEND_VAL temp1059_33)))
(assert (= temp1059_35 #x0000000000000005))
(assert (= temp1059_36 temp1059_35))
(assert (= temp1059_37 (select ARGNAME_padding_NAMEEND_VAL temp1059_36)))
(assert (= temp1059_38 #x0000000000000000))
(assert (= temp1059_39 #x0000000000000000))
(assert (= temp1059_40 temp1059_39))
(assert (= temp1059_41 (select ARGNAME_padding_NAMEEND_VAL temp1059_40)))
(assert (= temp1059_42 #x0000000000000000))
(assert (= temp1059_43 #x0000000000000001))
(assert (= temp1059_44 temp1059_43))
(assert (= temp1059_45 (select ARGNAME_padding_NAMEEND_VAL temp1059_44)))
(assert (= temp1059_46 #x0000000000000000))
(assert (= temp1059_47 #x0000000000000002))
(assert (= temp1059_48 temp1059_47))
(assert (= temp1059_49 (select ARGNAME_padding_NAMEEND_VAL temp1059_48)))
(assert (= temp1059_50 #x0000000000000000))
(assert (= temp1059_51 #x0000000000000003))
(assert (= temp1059_52 temp1059_51))
(assert (= temp1059_53 (select ARGNAME_padding_NAMEEND_VAL temp1059_52)))
(assert (= temp1059_54 #x0000000000000000))
(assert (= temp1059_55 #x0000000000000004))
(assert (= temp1059_56 temp1059_55))
(assert (= temp1059_57 (select ARGNAME_padding_NAMEEND_VAL temp1059_56)))
(assert (= temp1059_58 #x0000000000000000))
(assert (= temp1059_59 #x0000000000000005))
(assert (= temp1059_60 temp1059_59))
(assert (= temp1059_61 (select ARGNAME_padding_NAMEEND_VAL temp1059_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp1059_41 temp1059_38)
             (bvslt temp1059_45 temp1059_42)
             (bvslt temp1059_49 temp1059_46)
             (bvslt temp1059_53 temp1059_50)
             (bvslt temp1059_57 temp1059_54)
             (bvslt temp1059_61 temp1059_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1059_62 #x0000000000000000))
(assert (= var2240290 temp1059_62))
(assert (= temp1059_63 #x0000000000000000))
(assert (= temp1059_64 temp1059_63))
(assert (= temp1059_65 (select ARGNAME_stride_NAMEEND_VAL temp1059_64)))
(assert (= temp1059_66 #x0000000000000001))
(assert (= temp1059_67 temp1059_66))
(assert (= temp1059_68 (select ARGNAME_stride_NAMEEND_VAL temp1059_67)))
(assert (= temp1059_69 #x0000000000000002))
(assert (= temp1059_70 temp1059_69))
(assert (= temp1059_71 (select ARGNAME_stride_NAMEEND_VAL temp1059_70)))
(assert (= temp1059_72 #x0000000000000003))
(assert (= temp1059_73 temp1059_72))
(assert (= temp1059_74 (select ARGNAME_stride_NAMEEND_VAL temp1059_73)))
(assert (= temp1059_75 #x0000000000000004))
(assert (= temp1059_76 temp1059_75))
(assert (= temp1059_77 (select ARGNAME_stride_NAMEEND_VAL temp1059_76)))
(assert (= temp1059_78 #x0000000000000005))
(assert (= temp1059_79 temp1059_78))
(assert (= temp1059_80 (select ARGNAME_stride_NAMEEND_VAL temp1059_79)))
(assert (= temp1059_81 #x0000000000000000))
(assert (= temp1059_82 #x0000000000000000))
(assert (= temp1059_83 temp1059_82))
(assert (= temp1059_84 (select ARGNAME_stride_NAMEEND_VAL temp1059_83)))
(assert (= temp1059_85 #x0000000000000000))
(assert (= temp1059_86 #x0000000000000001))
(assert (= temp1059_87 temp1059_86))
(assert (= temp1059_88 (select ARGNAME_stride_NAMEEND_VAL temp1059_87)))
(assert (= temp1059_89 #x0000000000000000))
(assert (= temp1059_90 #x0000000000000002))
(assert (= temp1059_91 temp1059_90))
(assert (= temp1059_92 (select ARGNAME_stride_NAMEEND_VAL temp1059_91)))
(assert (= temp1059_93 #x0000000000000000))
(assert (= temp1059_94 #x0000000000000003))
(assert (= temp1059_95 temp1059_94))
(assert (= temp1059_96 (select ARGNAME_stride_NAMEEND_VAL temp1059_95)))
(assert (= temp1059_97 #x0000000000000000))
(assert (= temp1059_98 #x0000000000000004))
(assert (= temp1059_99 temp1059_98))
(assert (= temp1059_100 (select ARGNAME_stride_NAMEEND_VAL temp1059_99)))
(assert (= temp1059_101 #x0000000000000000))
(assert (= temp1059_102 #x0000000000000005))
(assert (= temp1059_103 temp1059_102))
(assert (= temp1059_104 (select ARGNAME_stride_NAMEEND_VAL temp1059_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp1059_84 temp1059_81)
             (bvsle temp1059_88 temp1059_85)
             (bvsle temp1059_92 temp1059_89)
             (bvsle temp1059_96 temp1059_93)
             (bvsle temp1059_100 temp1059_97)
             (bvsle temp1059_104 temp1059_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1059_105 #x0000000000000000))
(assert (= var2240311 temp1059_105))
(assert (= temp1059_106 #x0000000000000000))
(assert (= var2228402 temp1059_106))
(assert (= temp1059_107 #x0000000000000000))
(assert (= temp1059_108 temp1059_107))
(assert (= temp1059_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1059_108)))
(assert (= temp1059_110 #x0000000000000001))
(assert (= temp1059_111 temp1059_110))
(assert (= temp1059_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1059_111)))
(assert (= temp1059_113 #x0000000000000002))
(assert (= temp1059_114 temp1059_113))
(assert (= temp1059_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1059_114)))
(assert (= temp1059_116 #x0000000000000003))
(assert (= temp1059_117 temp1059_116))
(assert (= temp1059_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1059_117)))
(assert (= temp1059_119 #x0000000000000004))
(assert (= temp1059_120 temp1059_119))
(assert (= temp1059_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1059_120)))
(assert (= temp1059_122 #x0000000000000005))
(assert (= temp1059_123 temp1059_122))
(assert (= temp1059_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1059_123)))
(assert (= temp1059_126 var2228402))
(assert (= temp1059_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1059_126)))
(assert (= temp1059_125 temp1059_127))
(assert (= var2240356
   (ite (bvslt temp1059_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1059_128 #x0000000000000000))
(assert (= var2240356 temp1059_128))
(assert (= temp1059_129 #x0000000000000000))
(assert (= var2228402 temp1059_129))
(assert (= temp1059_131 var2228402))
(assert (= temp1059_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1059_131)))
(assert (= temp1059_130 temp1059_132))
(assert (= var2240378 (bvsmod temp1059_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1059_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp1059_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1059_134 #x0000000000000001))
(assert (= var2240379 temp1059_134))
(assert (= var2240398 var2240288))
(assert (= temp1059_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp1059_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1059_136 #x0000000000000001))
(assert (= var2240399 temp1059_136))
(assert (= temp1059_137 #x0000000000000001))
(assert (= var2229290 temp1059_137))
(assert (= temp1059_139 var2229290))
(assert (= temp1059_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1059_139)))
(assert (= temp1059_138 temp1059_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp1059_138)))
(assert (= temp1059_141 #x0000000000000000))
(assert (= var2228402 temp1059_141))
(assert (= temp1059_143 var2228402))
(assert (= temp1059_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1059_143)))
(assert (= temp1059_142 temp1059_144))
(assert (= temp1059_145 #x0000000000000002))
(assert (= var2503529 temp1059_145))
(assert (= temp1059_146 #x0000000000000001))
(assert (= var2240569 temp1059_146))
(assert (= temp1059_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1059_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1059_148 #x0000000000000001))
(assert (= var1521778 temp1059_148))
(assert (= temp1059_149 #x0000000000000001))
(assert (= var1521908 temp1059_149))
(assert (= var4010473 var1521908))
(assert (= temp1059_150 #x0000000000000000))
(assert (= var4210495 temp1059_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp1059_151 #x0000000000000002))
(assert (= var4339331 temp1059_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4469136 var1521921))
(assert (= var4731280 var1521921))
(assert (= temp1059_152 #x0000000000000001))
(assert (= var1523134
   (ite (= ARGNAME_groups_NAMEEND temp1059_152)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1059_153 #x0000000000000001))
(assert (= var1523134 temp1059_153))
(assert (= temp1059_154 #x0000000000000002))
(assert (= var5060227 temp1059_154))
(assert (= temp1059_155 #x0000000000000001))
(assert (= var1521778 temp1059_155))
(model-add temp1059_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp1059_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp1059_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1059_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp1059_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1059_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






