(declare-fun temp780_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp780_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp780_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp780_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp780_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp780_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp780_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp780_8 () (_ BitVec 64))
(declare-fun temp780_10 () (_ BitVec 64))
(declare-fun temp780_9 () (_ BitVec 64))
(declare-fun temp780_12 () (_ BitVec 64))
(declare-fun temp780_11 () (_ BitVec 64))
(declare-fun temp780_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp780_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp780_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp780_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp780_17 () (_ BitVec 64))
(declare-fun temp780_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp780_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp780_20 () (_ BitVec 64))
(declare-fun temp780_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp780_22 () (_ BitVec 64))
(declare-fun temp780_23 () (_ BitVec 64))
(declare-fun temp780_24 () (_ BitVec 64))
(declare-fun temp780_25 () (_ BitVec 64))
(declare-fun temp780_26 () (_ BitVec 64))
(declare-fun temp780_27 () (_ BitVec 64))
(declare-fun temp780_28 () (_ BitVec 64))
(declare-fun temp780_29 () (_ BitVec 64))
(declare-fun temp780_30 () (_ BitVec 64))
(declare-fun temp780_31 () (_ BitVec 64))
(declare-fun temp780_32 () (_ BitVec 64))
(declare-fun temp780_33 () (_ BitVec 64))
(declare-fun temp780_34 () (_ BitVec 64))
(declare-fun temp780_35 () (_ BitVec 64))
(declare-fun temp780_36 () (_ BitVec 64))
(declare-fun temp780_37 () (_ BitVec 64))
(declare-fun temp780_38 () (_ BitVec 64))
(declare-fun temp780_39 () (_ BitVec 64))
(declare-fun temp780_40 () (_ BitVec 64))
(declare-fun temp780_41 () (_ BitVec 64))
(declare-fun temp780_42 () (_ BitVec 64))
(declare-fun temp780_43 () (_ BitVec 64))
(declare-fun temp780_44 () (_ BitVec 64))
(declare-fun temp780_45 () (_ BitVec 64))
(declare-fun temp780_46 () (_ BitVec 64))
(declare-fun temp780_47 () (_ BitVec 64))
(declare-fun temp780_48 () (_ BitVec 64))
(declare-fun temp780_49 () (_ BitVec 64))
(declare-fun temp780_50 () (_ BitVec 64))
(declare-fun temp780_51 () (_ BitVec 64))
(declare-fun temp780_52 () (_ BitVec 64))
(declare-fun temp780_53 () (_ BitVec 64))
(declare-fun temp780_54 () (_ BitVec 64))
(declare-fun temp780_55 () (_ BitVec 64))
(declare-fun temp780_56 () (_ BitVec 64))
(declare-fun temp780_57 () (_ BitVec 64))
(declare-fun temp780_58 () (_ BitVec 64))
(declare-fun temp780_59 () (_ BitVec 64))
(declare-fun temp780_60 () (_ BitVec 64))
(declare-fun temp780_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp780_62 () (_ BitVec 64))
(declare-fun temp780_63 () (_ BitVec 64))
(declare-fun temp780_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp780_65 () (_ BitVec 64))
(declare-fun temp780_66 () (_ BitVec 64))
(declare-fun temp780_67 () (_ BitVec 64))
(declare-fun temp780_68 () (_ BitVec 64))
(declare-fun temp780_69 () (_ BitVec 64))
(declare-fun temp780_70 () (_ BitVec 64))
(declare-fun temp780_71 () (_ BitVec 64))
(declare-fun temp780_72 () (_ BitVec 64))
(declare-fun temp780_73 () (_ BitVec 64))
(declare-fun temp780_74 () (_ BitVec 64))
(declare-fun temp780_75 () (_ BitVec 64))
(declare-fun temp780_76 () (_ BitVec 64))
(declare-fun temp780_77 () (_ BitVec 64))
(declare-fun temp780_78 () (_ BitVec 64))
(declare-fun temp780_79 () (_ BitVec 64))
(declare-fun temp780_80 () (_ BitVec 64))
(declare-fun temp780_81 () (_ BitVec 64))
(declare-fun temp780_82 () (_ BitVec 64))
(declare-fun temp780_83 () (_ BitVec 64))
(declare-fun temp780_84 () (_ BitVec 64))
(declare-fun temp780_85 () (_ BitVec 64))
(declare-fun temp780_86 () (_ BitVec 64))
(declare-fun temp780_87 () (_ BitVec 64))
(declare-fun temp780_88 () (_ BitVec 64))
(declare-fun temp780_89 () (_ BitVec 64))
(declare-fun temp780_90 () (_ BitVec 64))
(declare-fun temp780_91 () (_ BitVec 64))
(declare-fun temp780_92 () (_ BitVec 64))
(declare-fun temp780_93 () (_ BitVec 64))
(declare-fun temp780_94 () (_ BitVec 64))
(declare-fun temp780_95 () (_ BitVec 64))
(declare-fun temp780_96 () (_ BitVec 64))
(declare-fun temp780_97 () (_ BitVec 64))
(declare-fun temp780_98 () (_ BitVec 64))
(declare-fun temp780_99 () (_ BitVec 64))
(declare-fun temp780_100 () (_ BitVec 64))
(declare-fun temp780_101 () (_ BitVec 64))
(declare-fun temp780_102 () (_ BitVec 64))
(declare-fun temp780_103 () (_ BitVec 64))
(declare-fun temp780_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp780_105 () (_ BitVec 64))
(declare-fun temp780_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp780_107 () (_ BitVec 64))
(declare-fun temp780_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp780_109 () (_ BitVec 64))
(declare-fun temp780_110 () (_ BitVec 64))
(declare-fun temp780_111 () (_ BitVec 64))
(declare-fun temp780_112 () (_ BitVec 64))
(declare-fun temp780_113 () (_ BitVec 64))
(declare-fun temp780_114 () (_ BitVec 64))
(declare-fun temp780_115 () (_ BitVec 64))
(declare-fun temp780_116 () (_ BitVec 64))
(declare-fun temp780_117 () (_ BitVec 64))
(declare-fun temp780_118 () (_ BitVec 64))
(declare-fun temp780_119 () (_ BitVec 64))
(declare-fun temp780_120 () (_ BitVec 64))
(declare-fun temp780_121 () (_ BitVec 64))
(declare-fun temp780_122 () (_ BitVec 64))
(declare-fun temp780_123 () (_ BitVec 64))
(declare-fun temp780_124 () (_ BitVec 64))
(declare-fun temp780_126 () (_ BitVec 64))
(declare-fun temp780_127 () (_ BitVec 64))
(declare-fun temp780_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp780_128 () (_ BitVec 64))
(declare-fun temp780_129 () (_ BitVec 64))
(declare-fun temp780_131 () (_ BitVec 64))
(declare-fun temp780_132 () (_ BitVec 64))
(declare-fun temp780_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp780_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp780_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp780_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp780_136 () (_ BitVec 64))
(declare-fun temp780_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp780_139 () (_ BitVec 64))
(declare-fun temp780_140 () (_ BitVec 64))
(declare-fun temp780_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp780_141 () (_ BitVec 64))
(declare-fun temp780_143 () (_ BitVec 64))
(declare-fun temp780_144 () (_ BitVec 64))
(declare-fun temp780_142 () (_ BitVec 64))
(declare-fun temp780_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp780_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp780_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp780_148 () (_ BitVec 64))
(declare-fun temp780_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp780_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp780_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var1522540 () (_ BitVec 64))
(declare-fun temp780_152 () (_ BitVec 64))
(declare-fun var1522541 () (_ BitVec 64))
(declare-fun temp780_153 () (_ BitVec 64))
(assert (= temp780_1 #x0000000000000002))
(assert (= var989741 temp780_1))
(assert (= temp780_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp780_2)))
(assert (= temp780_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp780_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp780_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp780_4)))
(assert (= temp780_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp780_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp780_6 #x0000000000000000))
(assert (= var989776 temp780_6))
(assert (= temp780_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp780_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp780_8 #x0000000000000001))
(assert (= var989810 temp780_8))
(assert (= temp780_10 #x0000000000000000))
(assert (= temp780_9 temp780_10))
(assert (= temp780_12 #x0000000000000002))
(assert (= temp780_11 temp780_12))
(assert (= temp780_13 #x0000000000000000))
(assert (= var1387902 temp780_13))
(assert (= temp780_14 #x0000000000000001))
(assert (= var1387923 temp780_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp780_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp780_15)))
(assert (= temp780_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp780_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_17 #x0000000000000000))
(assert (= var1521661 temp780_17))
(assert (= temp780_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp780_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_19 #x0000000000000000))
(assert (= var1521706 temp780_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp780_20 #x0000000000000000))
(assert (= temp780_21 temp780_20))
(assert (= temp780_22 (select ARGNAME_padding_NAMEEND_VAL temp780_21)))
(assert (= temp780_23 #x0000000000000001))
(assert (= temp780_24 temp780_23))
(assert (= temp780_25 (select ARGNAME_padding_NAMEEND_VAL temp780_24)))
(assert (= temp780_26 #x0000000000000002))
(assert (= temp780_27 temp780_26))
(assert (= temp780_28 (select ARGNAME_padding_NAMEEND_VAL temp780_27)))
(assert (= temp780_29 #x0000000000000003))
(assert (= temp780_30 temp780_29))
(assert (= temp780_31 (select ARGNAME_padding_NAMEEND_VAL temp780_30)))
(assert (= temp780_32 #x0000000000000004))
(assert (= temp780_33 temp780_32))
(assert (= temp780_34 (select ARGNAME_padding_NAMEEND_VAL temp780_33)))
(assert (= temp780_35 #x0000000000000005))
(assert (= temp780_36 temp780_35))
(assert (= temp780_37 (select ARGNAME_padding_NAMEEND_VAL temp780_36)))
(assert (= temp780_38 #x0000000000000000))
(assert (= temp780_39 #x0000000000000000))
(assert (= temp780_40 temp780_39))
(assert (= temp780_41 (select ARGNAME_padding_NAMEEND_VAL temp780_40)))
(assert (= temp780_42 #x0000000000000000))
(assert (= temp780_43 #x0000000000000001))
(assert (= temp780_44 temp780_43))
(assert (= temp780_45 (select ARGNAME_padding_NAMEEND_VAL temp780_44)))
(assert (= temp780_46 #x0000000000000000))
(assert (= temp780_47 #x0000000000000002))
(assert (= temp780_48 temp780_47))
(assert (= temp780_49 (select ARGNAME_padding_NAMEEND_VAL temp780_48)))
(assert (= temp780_50 #x0000000000000000))
(assert (= temp780_51 #x0000000000000003))
(assert (= temp780_52 temp780_51))
(assert (= temp780_53 (select ARGNAME_padding_NAMEEND_VAL temp780_52)))
(assert (= temp780_54 #x0000000000000000))
(assert (= temp780_55 #x0000000000000004))
(assert (= temp780_56 temp780_55))
(assert (= temp780_57 (select ARGNAME_padding_NAMEEND_VAL temp780_56)))
(assert (= temp780_58 #x0000000000000000))
(assert (= temp780_59 #x0000000000000005))
(assert (= temp780_60 temp780_59))
(assert (= temp780_61 (select ARGNAME_padding_NAMEEND_VAL temp780_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp780_41 temp780_38)
             (bvslt temp780_45 temp780_42)
             (bvslt temp780_49 temp780_46)
             (bvslt temp780_53 temp780_50)
             (bvslt temp780_57 temp780_54)
             (bvslt temp780_61 temp780_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_62 #x0000000000000000))
(assert (= var2240290 temp780_62))
(assert (= temp780_63 #x0000000000000000))
(assert (= temp780_64 temp780_63))
(assert (= temp780_65 (select ARGNAME_stride_NAMEEND_VAL temp780_64)))
(assert (= temp780_66 #x0000000000000001))
(assert (= temp780_67 temp780_66))
(assert (= temp780_68 (select ARGNAME_stride_NAMEEND_VAL temp780_67)))
(assert (= temp780_69 #x0000000000000002))
(assert (= temp780_70 temp780_69))
(assert (= temp780_71 (select ARGNAME_stride_NAMEEND_VAL temp780_70)))
(assert (= temp780_72 #x0000000000000003))
(assert (= temp780_73 temp780_72))
(assert (= temp780_74 (select ARGNAME_stride_NAMEEND_VAL temp780_73)))
(assert (= temp780_75 #x0000000000000004))
(assert (= temp780_76 temp780_75))
(assert (= temp780_77 (select ARGNAME_stride_NAMEEND_VAL temp780_76)))
(assert (= temp780_78 #x0000000000000005))
(assert (= temp780_79 temp780_78))
(assert (= temp780_80 (select ARGNAME_stride_NAMEEND_VAL temp780_79)))
(assert (= temp780_81 #x0000000000000000))
(assert (= temp780_82 #x0000000000000000))
(assert (= temp780_83 temp780_82))
(assert (= temp780_84 (select ARGNAME_stride_NAMEEND_VAL temp780_83)))
(assert (= temp780_85 #x0000000000000000))
(assert (= temp780_86 #x0000000000000001))
(assert (= temp780_87 temp780_86))
(assert (= temp780_88 (select ARGNAME_stride_NAMEEND_VAL temp780_87)))
(assert (= temp780_89 #x0000000000000000))
(assert (= temp780_90 #x0000000000000002))
(assert (= temp780_91 temp780_90))
(assert (= temp780_92 (select ARGNAME_stride_NAMEEND_VAL temp780_91)))
(assert (= temp780_93 #x0000000000000000))
(assert (= temp780_94 #x0000000000000003))
(assert (= temp780_95 temp780_94))
(assert (= temp780_96 (select ARGNAME_stride_NAMEEND_VAL temp780_95)))
(assert (= temp780_97 #x0000000000000000))
(assert (= temp780_98 #x0000000000000004))
(assert (= temp780_99 temp780_98))
(assert (= temp780_100 (select ARGNAME_stride_NAMEEND_VAL temp780_99)))
(assert (= temp780_101 #x0000000000000000))
(assert (= temp780_102 #x0000000000000005))
(assert (= temp780_103 temp780_102))
(assert (= temp780_104 (select ARGNAME_stride_NAMEEND_VAL temp780_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp780_84 temp780_81)
             (bvsle temp780_88 temp780_85)
             (bvsle temp780_92 temp780_89)
             (bvsle temp780_96 temp780_93)
             (bvsle temp780_100 temp780_97)
             (bvsle temp780_104 temp780_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_105 #x0000000000000000))
(assert (= var2240311 temp780_105))
(assert (= temp780_106 #x0000000000000000))
(assert (= var2228402 temp780_106))
(assert (= temp780_107 #x0000000000000000))
(assert (= temp780_108 temp780_107))
(assert (= temp780_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_108)))
(assert (= temp780_110 #x0000000000000001))
(assert (= temp780_111 temp780_110))
(assert (= temp780_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_111)))
(assert (= temp780_113 #x0000000000000002))
(assert (= temp780_114 temp780_113))
(assert (= temp780_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_114)))
(assert (= temp780_116 #x0000000000000003))
(assert (= temp780_117 temp780_116))
(assert (= temp780_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_117)))
(assert (= temp780_119 #x0000000000000004))
(assert (= temp780_120 temp780_119))
(assert (= temp780_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_120)))
(assert (= temp780_122 #x0000000000000005))
(assert (= temp780_123 temp780_122))
(assert (= temp780_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_123)))
(assert (= temp780_126 var2228402))
(assert (= temp780_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_126)))
(assert (= temp780_125 temp780_127))
(assert (= var2240356
   (ite (bvslt temp780_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_128 #x0000000000000000))
(assert (= var2240356 temp780_128))
(assert (= temp780_129 #x0000000000000000))
(assert (= var2228402 temp780_129))
(assert (= temp780_131 var2228402))
(assert (= temp780_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_131)))
(assert (= temp780_130 temp780_132))
(assert (= var2240378 (bvsmod temp780_130 ARGNAME_groups_NAMEEND)))
(assert (= temp780_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp780_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp780_134 #x0000000000000001))
(assert (= var2240379 temp780_134))
(assert (= var2240398 var2240288))
(assert (= temp780_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp780_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp780_136 #x0000000000000001))
(assert (= var2240399 temp780_136))
(assert (= temp780_137 #x0000000000000001))
(assert (= var2229290 temp780_137))
(assert (= temp780_139 var2229290))
(assert (= temp780_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_139)))
(assert (= temp780_138 temp780_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp780_138)))
(assert (= temp780_141 #x0000000000000000))
(assert (= var2228402 temp780_141))
(assert (= temp780_143 var2228402))
(assert (= temp780_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_143)))
(assert (= temp780_142 temp780_144))
(assert (= temp780_145 #x0000000000000002))
(assert (= var2503529 temp780_145))
(assert (= temp780_146 #x0000000000000001))
(assert (= var2240569 temp780_146))
(assert (= temp780_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp780_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_148 #x0000000000000001))
(assert (= var1521778 temp780_148))
(assert (= temp780_149 #x0000000000000001))
(assert (= var1521908 temp780_149))
(assert (= var4010473 var1521908))
(assert (= temp780_150 #x0000000000000000))
(assert (= var4210495 temp780_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp780_151 #x0000000000000002))
(assert (= var4339331 temp780_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4993424 var1521921))
(assert (= var1522540 var1521633))
(assert (= temp780_152 #x0000000000000000))
(assert (= var1522541
   (ite (distinct var1522540 temp780_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp780_153 #x0000000000000001))
(assert (= var1521778 temp780_153))
(model-add temp780_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp780_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp780_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp780_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp780_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp780_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






