(declare-fun temp838_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp838_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp838_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp838_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp838_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp838_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp838_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp838_8 () (_ BitVec 64))
(declare-fun temp838_10 () (_ BitVec 64))
(declare-fun temp838_9 () (_ BitVec 64))
(declare-fun temp838_12 () (_ BitVec 64))
(declare-fun temp838_11 () (_ BitVec 64))
(declare-fun temp838_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp838_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp838_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp838_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp838_17 () (_ BitVec 64))
(declare-fun temp838_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp838_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp838_20 () (_ BitVec 64))
(declare-fun temp838_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp838_22 () (_ BitVec 64))
(declare-fun temp838_23 () (_ BitVec 64))
(declare-fun temp838_24 () (_ BitVec 64))
(declare-fun temp838_25 () (_ BitVec 64))
(declare-fun temp838_26 () (_ BitVec 64))
(declare-fun temp838_27 () (_ BitVec 64))
(declare-fun temp838_28 () (_ BitVec 64))
(declare-fun temp838_29 () (_ BitVec 64))
(declare-fun temp838_30 () (_ BitVec 64))
(declare-fun temp838_31 () (_ BitVec 64))
(declare-fun temp838_32 () (_ BitVec 64))
(declare-fun temp838_33 () (_ BitVec 64))
(declare-fun temp838_34 () (_ BitVec 64))
(declare-fun temp838_35 () (_ BitVec 64))
(declare-fun temp838_36 () (_ BitVec 64))
(declare-fun temp838_37 () (_ BitVec 64))
(declare-fun temp838_38 () (_ BitVec 64))
(declare-fun temp838_39 () (_ BitVec 64))
(declare-fun temp838_40 () (_ BitVec 64))
(declare-fun temp838_41 () (_ BitVec 64))
(declare-fun temp838_42 () (_ BitVec 64))
(declare-fun temp838_43 () (_ BitVec 64))
(declare-fun temp838_44 () (_ BitVec 64))
(declare-fun temp838_45 () (_ BitVec 64))
(declare-fun temp838_46 () (_ BitVec 64))
(declare-fun temp838_47 () (_ BitVec 64))
(declare-fun temp838_48 () (_ BitVec 64))
(declare-fun temp838_49 () (_ BitVec 64))
(declare-fun temp838_50 () (_ BitVec 64))
(declare-fun temp838_51 () (_ BitVec 64))
(declare-fun temp838_52 () (_ BitVec 64))
(declare-fun temp838_53 () (_ BitVec 64))
(declare-fun temp838_54 () (_ BitVec 64))
(declare-fun temp838_55 () (_ BitVec 64))
(declare-fun temp838_56 () (_ BitVec 64))
(declare-fun temp838_57 () (_ BitVec 64))
(declare-fun temp838_58 () (_ BitVec 64))
(declare-fun temp838_59 () (_ BitVec 64))
(declare-fun temp838_60 () (_ BitVec 64))
(declare-fun temp838_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp838_62 () (_ BitVec 64))
(declare-fun temp838_63 () (_ BitVec 64))
(declare-fun temp838_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp838_65 () (_ BitVec 64))
(declare-fun temp838_66 () (_ BitVec 64))
(declare-fun temp838_67 () (_ BitVec 64))
(declare-fun temp838_68 () (_ BitVec 64))
(declare-fun temp838_69 () (_ BitVec 64))
(declare-fun temp838_70 () (_ BitVec 64))
(declare-fun temp838_71 () (_ BitVec 64))
(declare-fun temp838_72 () (_ BitVec 64))
(declare-fun temp838_73 () (_ BitVec 64))
(declare-fun temp838_74 () (_ BitVec 64))
(declare-fun temp838_75 () (_ BitVec 64))
(declare-fun temp838_76 () (_ BitVec 64))
(declare-fun temp838_77 () (_ BitVec 64))
(declare-fun temp838_78 () (_ BitVec 64))
(declare-fun temp838_79 () (_ BitVec 64))
(declare-fun temp838_80 () (_ BitVec 64))
(declare-fun temp838_81 () (_ BitVec 64))
(declare-fun temp838_82 () (_ BitVec 64))
(declare-fun temp838_83 () (_ BitVec 64))
(declare-fun temp838_84 () (_ BitVec 64))
(declare-fun temp838_85 () (_ BitVec 64))
(declare-fun temp838_86 () (_ BitVec 64))
(declare-fun temp838_87 () (_ BitVec 64))
(declare-fun temp838_88 () (_ BitVec 64))
(declare-fun temp838_89 () (_ BitVec 64))
(declare-fun temp838_90 () (_ BitVec 64))
(declare-fun temp838_91 () (_ BitVec 64))
(declare-fun temp838_92 () (_ BitVec 64))
(declare-fun temp838_93 () (_ BitVec 64))
(declare-fun temp838_94 () (_ BitVec 64))
(declare-fun temp838_95 () (_ BitVec 64))
(declare-fun temp838_96 () (_ BitVec 64))
(declare-fun temp838_97 () (_ BitVec 64))
(declare-fun temp838_98 () (_ BitVec 64))
(declare-fun temp838_99 () (_ BitVec 64))
(declare-fun temp838_100 () (_ BitVec 64))
(declare-fun temp838_101 () (_ BitVec 64))
(declare-fun temp838_102 () (_ BitVec 64))
(declare-fun temp838_103 () (_ BitVec 64))
(declare-fun temp838_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp838_105 () (_ BitVec 64))
(declare-fun temp838_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp838_107 () (_ BitVec 64))
(declare-fun temp838_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp838_109 () (_ BitVec 64))
(declare-fun temp838_110 () (_ BitVec 64))
(declare-fun temp838_111 () (_ BitVec 64))
(declare-fun temp838_112 () (_ BitVec 64))
(declare-fun temp838_113 () (_ BitVec 64))
(declare-fun temp838_114 () (_ BitVec 64))
(declare-fun temp838_115 () (_ BitVec 64))
(declare-fun temp838_116 () (_ BitVec 64))
(declare-fun temp838_117 () (_ BitVec 64))
(declare-fun temp838_118 () (_ BitVec 64))
(declare-fun temp838_119 () (_ BitVec 64))
(declare-fun temp838_120 () (_ BitVec 64))
(declare-fun temp838_121 () (_ BitVec 64))
(declare-fun temp838_122 () (_ BitVec 64))
(declare-fun temp838_123 () (_ BitVec 64))
(declare-fun temp838_124 () (_ BitVec 64))
(declare-fun temp838_126 () (_ BitVec 64))
(declare-fun temp838_127 () (_ BitVec 64))
(declare-fun temp838_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp838_128 () (_ BitVec 64))
(declare-fun temp838_129 () (_ BitVec 64))
(declare-fun temp838_131 () (_ BitVec 64))
(declare-fun temp838_132 () (_ BitVec 64))
(declare-fun temp838_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp838_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp838_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp838_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp838_136 () (_ BitVec 64))
(declare-fun temp838_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp838_139 () (_ BitVec 64))
(declare-fun temp838_140 () (_ BitVec 64))
(declare-fun temp838_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp838_141 () (_ BitVec 64))
(declare-fun temp838_143 () (_ BitVec 64))
(declare-fun temp838_144 () (_ BitVec 64))
(declare-fun temp838_142 () (_ BitVec 64))
(declare-fun temp838_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp838_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp838_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp838_148 () (_ BitVec 64))
(declare-fun temp838_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp838_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp838_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var5058960 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun temp838_152 () (_ BitVec 64))
(assert (= temp838_1 #x0000000000000002))
(assert (= var989741 temp838_1))
(assert (= temp838_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp838_2)))
(assert (= temp838_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp838_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp838_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp838_4)))
(assert (= temp838_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp838_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp838_6 #x0000000000000000))
(assert (= var989776 temp838_6))
(assert (= temp838_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp838_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp838_8 #x0000000000000001))
(assert (= var989810 temp838_8))
(assert (= temp838_10 #x0000000000000000))
(assert (= temp838_9 temp838_10))
(assert (= temp838_12 #x0000000000000002))
(assert (= temp838_11 temp838_12))
(assert (= temp838_13 #x0000000000000000))
(assert (= var1387902 temp838_13))
(assert (= temp838_14 #x0000000000000001))
(assert (= var1387923 temp838_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp838_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp838_15)))
(assert (= temp838_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp838_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_17 #x0000000000000000))
(assert (= var1521661 temp838_17))
(assert (= temp838_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp838_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_19 #x0000000000000000))
(assert (= var1521706 temp838_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp838_20 #x0000000000000000))
(assert (= temp838_21 temp838_20))
(assert (= temp838_22 (select ARGNAME_padding_NAMEEND_VAL temp838_21)))
(assert (= temp838_23 #x0000000000000001))
(assert (= temp838_24 temp838_23))
(assert (= temp838_25 (select ARGNAME_padding_NAMEEND_VAL temp838_24)))
(assert (= temp838_26 #x0000000000000002))
(assert (= temp838_27 temp838_26))
(assert (= temp838_28 (select ARGNAME_padding_NAMEEND_VAL temp838_27)))
(assert (= temp838_29 #x0000000000000003))
(assert (= temp838_30 temp838_29))
(assert (= temp838_31 (select ARGNAME_padding_NAMEEND_VAL temp838_30)))
(assert (= temp838_32 #x0000000000000004))
(assert (= temp838_33 temp838_32))
(assert (= temp838_34 (select ARGNAME_padding_NAMEEND_VAL temp838_33)))
(assert (= temp838_35 #x0000000000000005))
(assert (= temp838_36 temp838_35))
(assert (= temp838_37 (select ARGNAME_padding_NAMEEND_VAL temp838_36)))
(assert (= temp838_38 #x0000000000000000))
(assert (= temp838_39 #x0000000000000000))
(assert (= temp838_40 temp838_39))
(assert (= temp838_41 (select ARGNAME_padding_NAMEEND_VAL temp838_40)))
(assert (= temp838_42 #x0000000000000000))
(assert (= temp838_43 #x0000000000000001))
(assert (= temp838_44 temp838_43))
(assert (= temp838_45 (select ARGNAME_padding_NAMEEND_VAL temp838_44)))
(assert (= temp838_46 #x0000000000000000))
(assert (= temp838_47 #x0000000000000002))
(assert (= temp838_48 temp838_47))
(assert (= temp838_49 (select ARGNAME_padding_NAMEEND_VAL temp838_48)))
(assert (= temp838_50 #x0000000000000000))
(assert (= temp838_51 #x0000000000000003))
(assert (= temp838_52 temp838_51))
(assert (= temp838_53 (select ARGNAME_padding_NAMEEND_VAL temp838_52)))
(assert (= temp838_54 #x0000000000000000))
(assert (= temp838_55 #x0000000000000004))
(assert (= temp838_56 temp838_55))
(assert (= temp838_57 (select ARGNAME_padding_NAMEEND_VAL temp838_56)))
(assert (= temp838_58 #x0000000000000000))
(assert (= temp838_59 #x0000000000000005))
(assert (= temp838_60 temp838_59))
(assert (= temp838_61 (select ARGNAME_padding_NAMEEND_VAL temp838_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp838_41 temp838_38)
             (bvslt temp838_45 temp838_42)
             (bvslt temp838_49 temp838_46)
             (bvslt temp838_53 temp838_50)
             (bvslt temp838_57 temp838_54)
             (bvslt temp838_61 temp838_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_62 #x0000000000000000))
(assert (= var2240290 temp838_62))
(assert (= temp838_63 #x0000000000000000))
(assert (= temp838_64 temp838_63))
(assert (= temp838_65 (select ARGNAME_stride_NAMEEND_VAL temp838_64)))
(assert (= temp838_66 #x0000000000000001))
(assert (= temp838_67 temp838_66))
(assert (= temp838_68 (select ARGNAME_stride_NAMEEND_VAL temp838_67)))
(assert (= temp838_69 #x0000000000000002))
(assert (= temp838_70 temp838_69))
(assert (= temp838_71 (select ARGNAME_stride_NAMEEND_VAL temp838_70)))
(assert (= temp838_72 #x0000000000000003))
(assert (= temp838_73 temp838_72))
(assert (= temp838_74 (select ARGNAME_stride_NAMEEND_VAL temp838_73)))
(assert (= temp838_75 #x0000000000000004))
(assert (= temp838_76 temp838_75))
(assert (= temp838_77 (select ARGNAME_stride_NAMEEND_VAL temp838_76)))
(assert (= temp838_78 #x0000000000000005))
(assert (= temp838_79 temp838_78))
(assert (= temp838_80 (select ARGNAME_stride_NAMEEND_VAL temp838_79)))
(assert (= temp838_81 #x0000000000000000))
(assert (= temp838_82 #x0000000000000000))
(assert (= temp838_83 temp838_82))
(assert (= temp838_84 (select ARGNAME_stride_NAMEEND_VAL temp838_83)))
(assert (= temp838_85 #x0000000000000000))
(assert (= temp838_86 #x0000000000000001))
(assert (= temp838_87 temp838_86))
(assert (= temp838_88 (select ARGNAME_stride_NAMEEND_VAL temp838_87)))
(assert (= temp838_89 #x0000000000000000))
(assert (= temp838_90 #x0000000000000002))
(assert (= temp838_91 temp838_90))
(assert (= temp838_92 (select ARGNAME_stride_NAMEEND_VAL temp838_91)))
(assert (= temp838_93 #x0000000000000000))
(assert (= temp838_94 #x0000000000000003))
(assert (= temp838_95 temp838_94))
(assert (= temp838_96 (select ARGNAME_stride_NAMEEND_VAL temp838_95)))
(assert (= temp838_97 #x0000000000000000))
(assert (= temp838_98 #x0000000000000004))
(assert (= temp838_99 temp838_98))
(assert (= temp838_100 (select ARGNAME_stride_NAMEEND_VAL temp838_99)))
(assert (= temp838_101 #x0000000000000000))
(assert (= temp838_102 #x0000000000000005))
(assert (= temp838_103 temp838_102))
(assert (= temp838_104 (select ARGNAME_stride_NAMEEND_VAL temp838_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp838_84 temp838_81)
             (bvsle temp838_88 temp838_85)
             (bvsle temp838_92 temp838_89)
             (bvsle temp838_96 temp838_93)
             (bvsle temp838_100 temp838_97)
             (bvsle temp838_104 temp838_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_105 #x0000000000000000))
(assert (= var2240311 temp838_105))
(assert (= temp838_106 #x0000000000000000))
(assert (= var2228402 temp838_106))
(assert (= temp838_107 #x0000000000000000))
(assert (= temp838_108 temp838_107))
(assert (= temp838_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_108)))
(assert (= temp838_110 #x0000000000000001))
(assert (= temp838_111 temp838_110))
(assert (= temp838_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_111)))
(assert (= temp838_113 #x0000000000000002))
(assert (= temp838_114 temp838_113))
(assert (= temp838_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_114)))
(assert (= temp838_116 #x0000000000000003))
(assert (= temp838_117 temp838_116))
(assert (= temp838_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_117)))
(assert (= temp838_119 #x0000000000000004))
(assert (= temp838_120 temp838_119))
(assert (= temp838_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_120)))
(assert (= temp838_122 #x0000000000000005))
(assert (= temp838_123 temp838_122))
(assert (= temp838_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_123)))
(assert (= temp838_126 var2228402))
(assert (= temp838_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_126)))
(assert (= temp838_125 temp838_127))
(assert (= var2240356
   (ite (bvslt temp838_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_128 #x0000000000000000))
(assert (= var2240356 temp838_128))
(assert (= temp838_129 #x0000000000000000))
(assert (= var2228402 temp838_129))
(assert (= temp838_131 var2228402))
(assert (= temp838_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_131)))
(assert (= temp838_130 temp838_132))
(assert (= var2240378 (bvsmod temp838_130 ARGNAME_groups_NAMEEND)))
(assert (= temp838_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp838_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp838_134 #x0000000000000001))
(assert (= var2240379 temp838_134))
(assert (= var2240398 var2240288))
(assert (= temp838_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp838_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp838_136 #x0000000000000001))
(assert (= var2240399 temp838_136))
(assert (= temp838_137 #x0000000000000001))
(assert (= var2229290 temp838_137))
(assert (= temp838_139 var2229290))
(assert (= temp838_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_139)))
(assert (= temp838_138 temp838_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp838_138)))
(assert (= temp838_141 #x0000000000000000))
(assert (= var2228402 temp838_141))
(assert (= temp838_143 var2228402))
(assert (= temp838_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp838_143)))
(assert (= temp838_142 temp838_144))
(assert (= temp838_145 #x0000000000000002))
(assert (= var2503529 temp838_145))
(assert (= temp838_146 #x0000000000000001))
(assert (= var2240569 temp838_146))
(assert (= temp838_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp838_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp838_148 #x0000000000000001))
(assert (= var1521778 temp838_148))
(assert (= temp838_149 #x0000000000000001))
(assert (= var1521908 temp838_149))
(assert (= var4010473 var1521908))
(assert (= temp838_150 #x0000000000000000))
(assert (= var4210495 temp838_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp838_151 #x0000000000000002))
(assert (= var4339331 temp838_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var5058960 var1521921))
(assert (= var5321104 var1521921))
(assert (= temp838_152 #x0000000000000001))
(assert (= var1521778 temp838_152))
(model-add temp838_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp838_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp838_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp838_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp838_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp838_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






