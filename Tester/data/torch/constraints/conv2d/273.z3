(declare-fun temp363_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp363_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp363_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp363_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp363_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp363_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp363_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp363_8 () (_ BitVec 64))
(declare-fun temp363_10 () (_ BitVec 64))
(declare-fun temp363_9 () (_ BitVec 64))
(declare-fun temp363_12 () (_ BitVec 64))
(declare-fun temp363_11 () (_ BitVec 64))
(declare-fun temp363_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp363_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp363_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp363_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp363_17 () (_ BitVec 64))
(declare-fun temp363_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp363_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp363_20 () (_ BitVec 64))
(declare-fun temp363_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp363_22 () (_ BitVec 64))
(declare-fun temp363_23 () (_ BitVec 64))
(declare-fun temp363_24 () (_ BitVec 64))
(declare-fun temp363_25 () (_ BitVec 64))
(declare-fun temp363_26 () (_ BitVec 64))
(declare-fun temp363_27 () (_ BitVec 64))
(declare-fun temp363_28 () (_ BitVec 64))
(declare-fun temp363_29 () (_ BitVec 64))
(declare-fun temp363_30 () (_ BitVec 64))
(declare-fun temp363_31 () (_ BitVec 64))
(declare-fun temp363_32 () (_ BitVec 64))
(declare-fun temp363_33 () (_ BitVec 64))
(declare-fun temp363_34 () (_ BitVec 64))
(declare-fun temp363_35 () (_ BitVec 64))
(declare-fun temp363_36 () (_ BitVec 64))
(declare-fun temp363_37 () (_ BitVec 64))
(declare-fun temp363_38 () (_ BitVec 64))
(declare-fun temp363_39 () (_ BitVec 64))
(declare-fun temp363_40 () (_ BitVec 64))
(declare-fun temp363_41 () (_ BitVec 64))
(declare-fun temp363_42 () (_ BitVec 64))
(declare-fun temp363_43 () (_ BitVec 64))
(declare-fun temp363_44 () (_ BitVec 64))
(declare-fun temp363_45 () (_ BitVec 64))
(declare-fun temp363_46 () (_ BitVec 64))
(declare-fun temp363_47 () (_ BitVec 64))
(declare-fun temp363_48 () (_ BitVec 64))
(declare-fun temp363_49 () (_ BitVec 64))
(declare-fun temp363_50 () (_ BitVec 64))
(declare-fun temp363_51 () (_ BitVec 64))
(declare-fun temp363_52 () (_ BitVec 64))
(declare-fun temp363_53 () (_ BitVec 64))
(declare-fun temp363_54 () (_ BitVec 64))
(declare-fun temp363_55 () (_ BitVec 64))
(declare-fun temp363_56 () (_ BitVec 64))
(declare-fun temp363_57 () (_ BitVec 64))
(declare-fun temp363_58 () (_ BitVec 64))
(declare-fun temp363_59 () (_ BitVec 64))
(declare-fun temp363_60 () (_ BitVec 64))
(declare-fun temp363_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp363_62 () (_ BitVec 64))
(declare-fun temp363_63 () (_ BitVec 64))
(declare-fun temp363_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp363_65 () (_ BitVec 64))
(declare-fun temp363_66 () (_ BitVec 64))
(declare-fun temp363_67 () (_ BitVec 64))
(declare-fun temp363_68 () (_ BitVec 64))
(declare-fun temp363_69 () (_ BitVec 64))
(declare-fun temp363_70 () (_ BitVec 64))
(declare-fun temp363_71 () (_ BitVec 64))
(declare-fun temp363_72 () (_ BitVec 64))
(declare-fun temp363_73 () (_ BitVec 64))
(declare-fun temp363_74 () (_ BitVec 64))
(declare-fun temp363_75 () (_ BitVec 64))
(declare-fun temp363_76 () (_ BitVec 64))
(declare-fun temp363_77 () (_ BitVec 64))
(declare-fun temp363_78 () (_ BitVec 64))
(declare-fun temp363_79 () (_ BitVec 64))
(declare-fun temp363_80 () (_ BitVec 64))
(declare-fun temp363_81 () (_ BitVec 64))
(declare-fun temp363_82 () (_ BitVec 64))
(declare-fun temp363_83 () (_ BitVec 64))
(declare-fun temp363_84 () (_ BitVec 64))
(declare-fun temp363_85 () (_ BitVec 64))
(declare-fun temp363_86 () (_ BitVec 64))
(declare-fun temp363_87 () (_ BitVec 64))
(declare-fun temp363_88 () (_ BitVec 64))
(declare-fun temp363_89 () (_ BitVec 64))
(declare-fun temp363_90 () (_ BitVec 64))
(declare-fun temp363_91 () (_ BitVec 64))
(declare-fun temp363_92 () (_ BitVec 64))
(declare-fun temp363_93 () (_ BitVec 64))
(declare-fun temp363_94 () (_ BitVec 64))
(declare-fun temp363_95 () (_ BitVec 64))
(declare-fun temp363_96 () (_ BitVec 64))
(declare-fun temp363_97 () (_ BitVec 64))
(declare-fun temp363_98 () (_ BitVec 64))
(declare-fun temp363_99 () (_ BitVec 64))
(declare-fun temp363_100 () (_ BitVec 64))
(declare-fun temp363_101 () (_ BitVec 64))
(declare-fun temp363_102 () (_ BitVec 64))
(declare-fun temp363_103 () (_ BitVec 64))
(declare-fun temp363_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp363_105 () (_ BitVec 64))
(declare-fun temp363_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp363_107 () (_ BitVec 64))
(declare-fun temp363_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp363_109 () (_ BitVec 64))
(declare-fun temp363_110 () (_ BitVec 64))
(declare-fun temp363_111 () (_ BitVec 64))
(declare-fun temp363_112 () (_ BitVec 64))
(declare-fun temp363_113 () (_ BitVec 64))
(declare-fun temp363_114 () (_ BitVec 64))
(declare-fun temp363_115 () (_ BitVec 64))
(declare-fun temp363_116 () (_ BitVec 64))
(declare-fun temp363_117 () (_ BitVec 64))
(declare-fun temp363_118 () (_ BitVec 64))
(declare-fun temp363_119 () (_ BitVec 64))
(declare-fun temp363_120 () (_ BitVec 64))
(declare-fun temp363_121 () (_ BitVec 64))
(declare-fun temp363_122 () (_ BitVec 64))
(declare-fun temp363_123 () (_ BitVec 64))
(declare-fun temp363_124 () (_ BitVec 64))
(declare-fun temp363_126 () (_ BitVec 64))
(declare-fun temp363_127 () (_ BitVec 64))
(declare-fun temp363_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp363_128 () (_ BitVec 64))
(declare-fun temp363_129 () (_ BitVec 64))
(declare-fun temp363_131 () (_ BitVec 64))
(declare-fun temp363_132 () (_ BitVec 64))
(declare-fun temp363_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp363_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp363_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp363_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp363_136 () (_ BitVec 64))
(declare-fun temp363_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp363_139 () (_ BitVec 64))
(declare-fun temp363_140 () (_ BitVec 64))
(declare-fun temp363_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp363_141 () (_ BitVec 64))
(declare-fun temp363_143 () (_ BitVec 64))
(declare-fun temp363_144 () (_ BitVec 64))
(declare-fun temp363_142 () (_ BitVec 64))
(declare-fun temp363_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp363_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp363_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp363_148 () (_ BitVec 64))
(declare-fun temp363_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp363_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp363_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun var5845392 () (_ BitVec 64))
(declare-fun temp363_152 () (_ BitVec 64))
(declare-fun var6173072 () (_ BitVec 64))
(declare-fun temp363_153 () (_ BitVec 64))
(assert (= temp363_1 #x0000000000000002))
(assert (= var989741 temp363_1))
(assert (= temp363_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp363_2)))
(assert (= temp363_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp363_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp363_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp363_4)))
(assert (= temp363_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp363_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp363_6 #x0000000000000000))
(assert (= var989776 temp363_6))
(assert (= temp363_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp363_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp363_8 #x0000000000000001))
(assert (= var989810 temp363_8))
(assert (= temp363_10 #x0000000000000000))
(assert (= temp363_9 temp363_10))
(assert (= temp363_12 #x0000000000000002))
(assert (= temp363_11 temp363_12))
(assert (= temp363_13 #x0000000000000000))
(assert (= var1387902 temp363_13))
(assert (= temp363_14 #x0000000000000001))
(assert (= var1387923 temp363_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp363_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp363_15)))
(assert (= temp363_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp363_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp363_17 #x0000000000000000))
(assert (= var1521661 temp363_17))
(assert (= temp363_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp363_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp363_19 #x0000000000000000))
(assert (= var1521706 temp363_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp363_20 #x0000000000000000))
(assert (= temp363_21 temp363_20))
(assert (= temp363_22 (select ARGNAME_padding_NAMEEND_VAL temp363_21)))
(assert (= temp363_23 #x0000000000000001))
(assert (= temp363_24 temp363_23))
(assert (= temp363_25 (select ARGNAME_padding_NAMEEND_VAL temp363_24)))
(assert (= temp363_26 #x0000000000000002))
(assert (= temp363_27 temp363_26))
(assert (= temp363_28 (select ARGNAME_padding_NAMEEND_VAL temp363_27)))
(assert (= temp363_29 #x0000000000000003))
(assert (= temp363_30 temp363_29))
(assert (= temp363_31 (select ARGNAME_padding_NAMEEND_VAL temp363_30)))
(assert (= temp363_32 #x0000000000000004))
(assert (= temp363_33 temp363_32))
(assert (= temp363_34 (select ARGNAME_padding_NAMEEND_VAL temp363_33)))
(assert (= temp363_35 #x0000000000000005))
(assert (= temp363_36 temp363_35))
(assert (= temp363_37 (select ARGNAME_padding_NAMEEND_VAL temp363_36)))
(assert (= temp363_38 #x0000000000000000))
(assert (= temp363_39 #x0000000000000000))
(assert (= temp363_40 temp363_39))
(assert (= temp363_41 (select ARGNAME_padding_NAMEEND_VAL temp363_40)))
(assert (= temp363_42 #x0000000000000000))
(assert (= temp363_43 #x0000000000000001))
(assert (= temp363_44 temp363_43))
(assert (= temp363_45 (select ARGNAME_padding_NAMEEND_VAL temp363_44)))
(assert (= temp363_46 #x0000000000000000))
(assert (= temp363_47 #x0000000000000002))
(assert (= temp363_48 temp363_47))
(assert (= temp363_49 (select ARGNAME_padding_NAMEEND_VAL temp363_48)))
(assert (= temp363_50 #x0000000000000000))
(assert (= temp363_51 #x0000000000000003))
(assert (= temp363_52 temp363_51))
(assert (= temp363_53 (select ARGNAME_padding_NAMEEND_VAL temp363_52)))
(assert (= temp363_54 #x0000000000000000))
(assert (= temp363_55 #x0000000000000004))
(assert (= temp363_56 temp363_55))
(assert (= temp363_57 (select ARGNAME_padding_NAMEEND_VAL temp363_56)))
(assert (= temp363_58 #x0000000000000000))
(assert (= temp363_59 #x0000000000000005))
(assert (= temp363_60 temp363_59))
(assert (= temp363_61 (select ARGNAME_padding_NAMEEND_VAL temp363_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp363_41 temp363_38)
             (bvslt temp363_45 temp363_42)
             (bvslt temp363_49 temp363_46)
             (bvslt temp363_53 temp363_50)
             (bvslt temp363_57 temp363_54)
             (bvslt temp363_61 temp363_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp363_62 #x0000000000000000))
(assert (= var2240290 temp363_62))
(assert (= temp363_63 #x0000000000000000))
(assert (= temp363_64 temp363_63))
(assert (= temp363_65 (select ARGNAME_stride_NAMEEND_VAL temp363_64)))
(assert (= temp363_66 #x0000000000000001))
(assert (= temp363_67 temp363_66))
(assert (= temp363_68 (select ARGNAME_stride_NAMEEND_VAL temp363_67)))
(assert (= temp363_69 #x0000000000000002))
(assert (= temp363_70 temp363_69))
(assert (= temp363_71 (select ARGNAME_stride_NAMEEND_VAL temp363_70)))
(assert (= temp363_72 #x0000000000000003))
(assert (= temp363_73 temp363_72))
(assert (= temp363_74 (select ARGNAME_stride_NAMEEND_VAL temp363_73)))
(assert (= temp363_75 #x0000000000000004))
(assert (= temp363_76 temp363_75))
(assert (= temp363_77 (select ARGNAME_stride_NAMEEND_VAL temp363_76)))
(assert (= temp363_78 #x0000000000000005))
(assert (= temp363_79 temp363_78))
(assert (= temp363_80 (select ARGNAME_stride_NAMEEND_VAL temp363_79)))
(assert (= temp363_81 #x0000000000000000))
(assert (= temp363_82 #x0000000000000000))
(assert (= temp363_83 temp363_82))
(assert (= temp363_84 (select ARGNAME_stride_NAMEEND_VAL temp363_83)))
(assert (= temp363_85 #x0000000000000000))
(assert (= temp363_86 #x0000000000000001))
(assert (= temp363_87 temp363_86))
(assert (= temp363_88 (select ARGNAME_stride_NAMEEND_VAL temp363_87)))
(assert (= temp363_89 #x0000000000000000))
(assert (= temp363_90 #x0000000000000002))
(assert (= temp363_91 temp363_90))
(assert (= temp363_92 (select ARGNAME_stride_NAMEEND_VAL temp363_91)))
(assert (= temp363_93 #x0000000000000000))
(assert (= temp363_94 #x0000000000000003))
(assert (= temp363_95 temp363_94))
(assert (= temp363_96 (select ARGNAME_stride_NAMEEND_VAL temp363_95)))
(assert (= temp363_97 #x0000000000000000))
(assert (= temp363_98 #x0000000000000004))
(assert (= temp363_99 temp363_98))
(assert (= temp363_100 (select ARGNAME_stride_NAMEEND_VAL temp363_99)))
(assert (= temp363_101 #x0000000000000000))
(assert (= temp363_102 #x0000000000000005))
(assert (= temp363_103 temp363_102))
(assert (= temp363_104 (select ARGNAME_stride_NAMEEND_VAL temp363_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp363_84 temp363_81)
             (bvsle temp363_88 temp363_85)
             (bvsle temp363_92 temp363_89)
             (bvsle temp363_96 temp363_93)
             (bvsle temp363_100 temp363_97)
             (bvsle temp363_104 temp363_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp363_105 #x0000000000000000))
(assert (= var2240311 temp363_105))
(assert (= temp363_106 #x0000000000000000))
(assert (= var2228402 temp363_106))
(assert (= temp363_107 #x0000000000000000))
(assert (= temp363_108 temp363_107))
(assert (= temp363_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp363_108)))
(assert (= temp363_110 #x0000000000000001))
(assert (= temp363_111 temp363_110))
(assert (= temp363_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp363_111)))
(assert (= temp363_113 #x0000000000000002))
(assert (= temp363_114 temp363_113))
(assert (= temp363_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp363_114)))
(assert (= temp363_116 #x0000000000000003))
(assert (= temp363_117 temp363_116))
(assert (= temp363_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp363_117)))
(assert (= temp363_119 #x0000000000000004))
(assert (= temp363_120 temp363_119))
(assert (= temp363_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp363_120)))
(assert (= temp363_122 #x0000000000000005))
(assert (= temp363_123 temp363_122))
(assert (= temp363_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp363_123)))
(assert (= temp363_126 var2228402))
(assert (= temp363_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp363_126)))
(assert (= temp363_125 temp363_127))
(assert (= var2240356
   (ite (bvslt temp363_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp363_128 #x0000000000000000))
(assert (= var2240356 temp363_128))
(assert (= temp363_129 #x0000000000000000))
(assert (= var2228402 temp363_129))
(assert (= temp363_131 var2228402))
(assert (= temp363_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp363_131)))
(assert (= temp363_130 temp363_132))
(assert (= var2240378 (bvsmod temp363_130 ARGNAME_groups_NAMEEND)))
(assert (= temp363_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp363_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp363_134 #x0000000000000001))
(assert (= var2240379 temp363_134))
(assert (= var2240398 var2240288))
(assert (= temp363_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp363_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp363_136 #x0000000000000001))
(assert (= var2240399 temp363_136))
(assert (= temp363_137 #x0000000000000001))
(assert (= var2229290 temp363_137))
(assert (= temp363_139 var2229290))
(assert (= temp363_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp363_139)))
(assert (= temp363_138 temp363_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp363_138)))
(assert (= temp363_141 #x0000000000000000))
(assert (= var2228402 temp363_141))
(assert (= temp363_143 var2228402))
(assert (= temp363_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp363_143)))
(assert (= temp363_142 temp363_144))
(assert (= temp363_145 #x0000000000000002))
(assert (= var2503529 temp363_145))
(assert (= temp363_146 #x0000000000000001))
(assert (= var2240569 temp363_146))
(assert (= temp363_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp363_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp363_148 #x0000000000000001))
(assert (= var1521778 temp363_148))
(assert (= temp363_149 #x0000000000000001))
(assert (= var1521908 temp363_149))
(assert (= var4010473 var1521908))
(assert (= temp363_150 #x0000000000000000))
(assert (= var4210495 temp363_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp363_151 #x0000000000000002))
(assert (= var4339331 temp363_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var5583248 var1521921))
(assert (= var5845392 var1521921))
(assert (= temp363_152 #x0000000000000000))
(assert (= var6173072 temp363_152))
(assert (= temp363_153 #x0000000000000001))
(assert (= var1521778 temp363_153))
(model-add temp363_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp363_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp363_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp363_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp363_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp363_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






