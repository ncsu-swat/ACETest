(declare-fun temp90_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp90_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp90_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp90_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp90_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp90_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp90_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp90_8 () (_ BitVec 64))
(declare-fun temp90_10 () (_ BitVec 64))
(declare-fun temp90_9 () (_ BitVec 64))
(declare-fun temp90_12 () (_ BitVec 64))
(declare-fun temp90_11 () (_ BitVec 64))
(declare-fun temp90_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp90_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp90_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp90_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp90_17 () (_ BitVec 64))
(declare-fun temp90_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp90_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp90_20 () (_ BitVec 64))
(declare-fun temp90_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp90_22 () (_ BitVec 64))
(declare-fun temp90_23 () (_ BitVec 64))
(declare-fun temp90_24 () (_ BitVec 64))
(declare-fun temp90_25 () (_ BitVec 64))
(declare-fun temp90_26 () (_ BitVec 64))
(declare-fun temp90_27 () (_ BitVec 64))
(declare-fun temp90_28 () (_ BitVec 64))
(declare-fun temp90_29 () (_ BitVec 64))
(declare-fun temp90_30 () (_ BitVec 64))
(declare-fun temp90_31 () (_ BitVec 64))
(declare-fun temp90_32 () (_ BitVec 64))
(declare-fun temp90_33 () (_ BitVec 64))
(declare-fun temp90_34 () (_ BitVec 64))
(declare-fun temp90_35 () (_ BitVec 64))
(declare-fun temp90_36 () (_ BitVec 64))
(declare-fun temp90_37 () (_ BitVec 64))
(declare-fun temp90_38 () (_ BitVec 64))
(declare-fun temp90_39 () (_ BitVec 64))
(declare-fun temp90_40 () (_ BitVec 64))
(declare-fun temp90_41 () (_ BitVec 64))
(declare-fun temp90_42 () (_ BitVec 64))
(declare-fun temp90_43 () (_ BitVec 64))
(declare-fun temp90_44 () (_ BitVec 64))
(declare-fun temp90_45 () (_ BitVec 64))
(declare-fun temp90_46 () (_ BitVec 64))
(declare-fun temp90_47 () (_ BitVec 64))
(declare-fun temp90_48 () (_ BitVec 64))
(declare-fun temp90_49 () (_ BitVec 64))
(declare-fun temp90_50 () (_ BitVec 64))
(declare-fun temp90_51 () (_ BitVec 64))
(declare-fun temp90_52 () (_ BitVec 64))
(declare-fun temp90_53 () (_ BitVec 64))
(declare-fun temp90_54 () (_ BitVec 64))
(declare-fun temp90_55 () (_ BitVec 64))
(declare-fun temp90_56 () (_ BitVec 64))
(declare-fun temp90_57 () (_ BitVec 64))
(declare-fun temp90_58 () (_ BitVec 64))
(declare-fun temp90_59 () (_ BitVec 64))
(declare-fun temp90_60 () (_ BitVec 64))
(declare-fun temp90_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp90_62 () (_ BitVec 64))
(declare-fun temp90_63 () (_ BitVec 64))
(declare-fun temp90_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp90_65 () (_ BitVec 64))
(declare-fun temp90_66 () (_ BitVec 64))
(declare-fun temp90_67 () (_ BitVec 64))
(declare-fun temp90_68 () (_ BitVec 64))
(declare-fun temp90_69 () (_ BitVec 64))
(declare-fun temp90_70 () (_ BitVec 64))
(declare-fun temp90_71 () (_ BitVec 64))
(declare-fun temp90_72 () (_ BitVec 64))
(declare-fun temp90_73 () (_ BitVec 64))
(declare-fun temp90_74 () (_ BitVec 64))
(declare-fun temp90_75 () (_ BitVec 64))
(declare-fun temp90_76 () (_ BitVec 64))
(declare-fun temp90_77 () (_ BitVec 64))
(declare-fun temp90_78 () (_ BitVec 64))
(declare-fun temp90_79 () (_ BitVec 64))
(declare-fun temp90_80 () (_ BitVec 64))
(declare-fun temp90_81 () (_ BitVec 64))
(declare-fun temp90_82 () (_ BitVec 64))
(declare-fun temp90_83 () (_ BitVec 64))
(declare-fun temp90_84 () (_ BitVec 64))
(declare-fun temp90_85 () (_ BitVec 64))
(declare-fun temp90_86 () (_ BitVec 64))
(declare-fun temp90_87 () (_ BitVec 64))
(declare-fun temp90_88 () (_ BitVec 64))
(declare-fun temp90_89 () (_ BitVec 64))
(declare-fun temp90_90 () (_ BitVec 64))
(declare-fun temp90_91 () (_ BitVec 64))
(declare-fun temp90_92 () (_ BitVec 64))
(declare-fun temp90_93 () (_ BitVec 64))
(declare-fun temp90_94 () (_ BitVec 64))
(declare-fun temp90_95 () (_ BitVec 64))
(declare-fun temp90_96 () (_ BitVec 64))
(declare-fun temp90_97 () (_ BitVec 64))
(declare-fun temp90_98 () (_ BitVec 64))
(declare-fun temp90_99 () (_ BitVec 64))
(declare-fun temp90_100 () (_ BitVec 64))
(declare-fun temp90_101 () (_ BitVec 64))
(declare-fun temp90_102 () (_ BitVec 64))
(declare-fun temp90_103 () (_ BitVec 64))
(declare-fun temp90_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp90_105 () (_ BitVec 64))
(declare-fun temp90_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp90_107 () (_ BitVec 64))
(declare-fun temp90_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp90_109 () (_ BitVec 64))
(declare-fun temp90_110 () (_ BitVec 64))
(declare-fun temp90_111 () (_ BitVec 64))
(declare-fun temp90_112 () (_ BitVec 64))
(declare-fun temp90_113 () (_ BitVec 64))
(declare-fun temp90_114 () (_ BitVec 64))
(declare-fun temp90_115 () (_ BitVec 64))
(declare-fun temp90_116 () (_ BitVec 64))
(declare-fun temp90_117 () (_ BitVec 64))
(declare-fun temp90_118 () (_ BitVec 64))
(declare-fun temp90_119 () (_ BitVec 64))
(declare-fun temp90_120 () (_ BitVec 64))
(declare-fun temp90_121 () (_ BitVec 64))
(declare-fun temp90_122 () (_ BitVec 64))
(declare-fun temp90_123 () (_ BitVec 64))
(declare-fun temp90_124 () (_ BitVec 64))
(declare-fun temp90_126 () (_ BitVec 64))
(declare-fun temp90_127 () (_ BitVec 64))
(declare-fun temp90_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp90_128 () (_ BitVec 64))
(declare-fun temp90_129 () (_ BitVec 64))
(declare-fun temp90_131 () (_ BitVec 64))
(declare-fun temp90_132 () (_ BitVec 64))
(declare-fun temp90_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp90_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp90_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp90_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp90_136 () (_ BitVec 64))
(declare-fun temp90_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp90_139 () (_ BitVec 64))
(declare-fun temp90_140 () (_ BitVec 64))
(declare-fun temp90_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp90_141 () (_ BitVec 64))
(declare-fun temp90_143 () (_ BitVec 64))
(declare-fun temp90_144 () (_ BitVec 64))
(declare-fun temp90_142 () (_ BitVec 64))
(declare-fun temp90_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp90_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp90_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp90_148 () (_ BitVec 64))
(declare-fun temp90_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp90_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp90_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp90_153 () (_ BitVec 64))
(declare-fun temp90_152 () (_ BitVec 64))
(declare-fun temp90_155 () (_ BitVec 64))
(declare-fun temp90_154 () (_ BitVec 64))
(declare-fun temp90_156 () (_ BitVec 64))
(assert (= temp90_1 #x0000000000000002))
(assert (= var989741 temp90_1))
(assert (= temp90_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp90_2)))
(assert (= temp90_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp90_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp90_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp90_4)))
(assert (= temp90_5 #x0000000000000000))
(assert (= var989775 (ite (= var989774 temp90_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp90_6 #x0000000000000000))
(assert (= var989776 temp90_6))
(assert (= temp90_7 #x0000000000000000))
(assert (= var989810 (ite (= var989773 temp90_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp90_8 #x0000000000000001))
(assert (= var989810 temp90_8))
(assert (= temp90_10 #x0000000000000000))
(assert (= temp90_9 temp90_10))
(assert (= temp90_12 #x0000000000000002))
(assert (= temp90_11 temp90_12))
(assert (= temp90_13 #x0000000000000000))
(assert (= var1387902 temp90_13))
(assert (= temp90_14 #x0000000000000001))
(assert (= var1387923 temp90_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp90_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp90_15)))
(assert (= temp90_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp90_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp90_17 #x0000000000000000))
(assert (= var1521661 temp90_17))
(assert (= temp90_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp90_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp90_19 #x0000000000000000))
(assert (= var1521706 temp90_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp90_20 #x0000000000000000))
(assert (= temp90_21 temp90_20))
(assert (= temp90_22 (select ARGNAME_padding_NAMEEND_VAL temp90_21)))
(assert (= temp90_23 #x0000000000000001))
(assert (= temp90_24 temp90_23))
(assert (= temp90_25 (select ARGNAME_padding_NAMEEND_VAL temp90_24)))
(assert (= temp90_26 #x0000000000000002))
(assert (= temp90_27 temp90_26))
(assert (= temp90_28 (select ARGNAME_padding_NAMEEND_VAL temp90_27)))
(assert (= temp90_29 #x0000000000000003))
(assert (= temp90_30 temp90_29))
(assert (= temp90_31 (select ARGNAME_padding_NAMEEND_VAL temp90_30)))
(assert (= temp90_32 #x0000000000000004))
(assert (= temp90_33 temp90_32))
(assert (= temp90_34 (select ARGNAME_padding_NAMEEND_VAL temp90_33)))
(assert (= temp90_35 #x0000000000000005))
(assert (= temp90_36 temp90_35))
(assert (= temp90_37 (select ARGNAME_padding_NAMEEND_VAL temp90_36)))
(assert (= temp90_38 #x0000000000000000))
(assert (= temp90_39 #x0000000000000000))
(assert (= temp90_40 temp90_39))
(assert (= temp90_41 (select ARGNAME_padding_NAMEEND_VAL temp90_40)))
(assert (= temp90_42 #x0000000000000000))
(assert (= temp90_43 #x0000000000000001))
(assert (= temp90_44 temp90_43))
(assert (= temp90_45 (select ARGNAME_padding_NAMEEND_VAL temp90_44)))
(assert (= temp90_46 #x0000000000000000))
(assert (= temp90_47 #x0000000000000002))
(assert (= temp90_48 temp90_47))
(assert (= temp90_49 (select ARGNAME_padding_NAMEEND_VAL temp90_48)))
(assert (= temp90_50 #x0000000000000000))
(assert (= temp90_51 #x0000000000000003))
(assert (= temp90_52 temp90_51))
(assert (= temp90_53 (select ARGNAME_padding_NAMEEND_VAL temp90_52)))
(assert (= temp90_54 #x0000000000000000))
(assert (= temp90_55 #x0000000000000004))
(assert (= temp90_56 temp90_55))
(assert (= temp90_57 (select ARGNAME_padding_NAMEEND_VAL temp90_56)))
(assert (= temp90_58 #x0000000000000000))
(assert (= temp90_59 #x0000000000000005))
(assert (= temp90_60 temp90_59))
(assert (= temp90_61 (select ARGNAME_padding_NAMEEND_VAL temp90_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp90_41 temp90_38)
             (bvslt temp90_45 temp90_42)
             (bvslt temp90_49 temp90_46)
             (bvslt temp90_53 temp90_50)
             (bvslt temp90_57 temp90_54)
             (bvslt temp90_61 temp90_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp90_62 #x0000000000000000))
(assert (= var2240290 temp90_62))
(assert (= temp90_63 #x0000000000000000))
(assert (= temp90_64 temp90_63))
(assert (= temp90_65 (select ARGNAME_stride_NAMEEND_VAL temp90_64)))
(assert (= temp90_66 #x0000000000000001))
(assert (= temp90_67 temp90_66))
(assert (= temp90_68 (select ARGNAME_stride_NAMEEND_VAL temp90_67)))
(assert (= temp90_69 #x0000000000000002))
(assert (= temp90_70 temp90_69))
(assert (= temp90_71 (select ARGNAME_stride_NAMEEND_VAL temp90_70)))
(assert (= temp90_72 #x0000000000000003))
(assert (= temp90_73 temp90_72))
(assert (= temp90_74 (select ARGNAME_stride_NAMEEND_VAL temp90_73)))
(assert (= temp90_75 #x0000000000000004))
(assert (= temp90_76 temp90_75))
(assert (= temp90_77 (select ARGNAME_stride_NAMEEND_VAL temp90_76)))
(assert (= temp90_78 #x0000000000000005))
(assert (= temp90_79 temp90_78))
(assert (= temp90_80 (select ARGNAME_stride_NAMEEND_VAL temp90_79)))
(assert (= temp90_81 #x0000000000000000))
(assert (= temp90_82 #x0000000000000000))
(assert (= temp90_83 temp90_82))
(assert (= temp90_84 (select ARGNAME_stride_NAMEEND_VAL temp90_83)))
(assert (= temp90_85 #x0000000000000000))
(assert (= temp90_86 #x0000000000000001))
(assert (= temp90_87 temp90_86))
(assert (= temp90_88 (select ARGNAME_stride_NAMEEND_VAL temp90_87)))
(assert (= temp90_89 #x0000000000000000))
(assert (= temp90_90 #x0000000000000002))
(assert (= temp90_91 temp90_90))
(assert (= temp90_92 (select ARGNAME_stride_NAMEEND_VAL temp90_91)))
(assert (= temp90_93 #x0000000000000000))
(assert (= temp90_94 #x0000000000000003))
(assert (= temp90_95 temp90_94))
(assert (= temp90_96 (select ARGNAME_stride_NAMEEND_VAL temp90_95)))
(assert (= temp90_97 #x0000000000000000))
(assert (= temp90_98 #x0000000000000004))
(assert (= temp90_99 temp90_98))
(assert (= temp90_100 (select ARGNAME_stride_NAMEEND_VAL temp90_99)))
(assert (= temp90_101 #x0000000000000000))
(assert (= temp90_102 #x0000000000000005))
(assert (= temp90_103 temp90_102))
(assert (= temp90_104 (select ARGNAME_stride_NAMEEND_VAL temp90_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp90_84 temp90_81)
             (bvsle temp90_88 temp90_85)
             (bvsle temp90_92 temp90_89)
             (bvsle temp90_96 temp90_93)
             (bvsle temp90_100 temp90_97)
             (bvsle temp90_104 temp90_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp90_105 #x0000000000000000))
(assert (= var2240311 temp90_105))
(assert (= temp90_106 #x0000000000000000))
(assert (= var2228402 temp90_106))
(assert (= temp90_107 #x0000000000000000))
(assert (= temp90_108 temp90_107))
(assert (= temp90_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp90_108)))
(assert (= temp90_110 #x0000000000000001))
(assert (= temp90_111 temp90_110))
(assert (= temp90_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp90_111)))
(assert (= temp90_113 #x0000000000000002))
(assert (= temp90_114 temp90_113))
(assert (= temp90_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp90_114)))
(assert (= temp90_116 #x0000000000000003))
(assert (= temp90_117 temp90_116))
(assert (= temp90_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp90_117)))
(assert (= temp90_119 #x0000000000000004))
(assert (= temp90_120 temp90_119))
(assert (= temp90_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp90_120)))
(assert (= temp90_122 #x0000000000000005))
(assert (= temp90_123 temp90_122))
(assert (= temp90_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp90_123)))
(assert (= temp90_126 var2228402))
(assert (= temp90_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp90_126)))
(assert (= temp90_125 temp90_127))
(assert (= var2240356
   (ite (bvslt temp90_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp90_128 #x0000000000000000))
(assert (= var2240356 temp90_128))
(assert (= temp90_129 #x0000000000000000))
(assert (= var2228402 temp90_129))
(assert (= temp90_131 var2228402))
(assert (= temp90_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp90_131)))
(assert (= temp90_130 temp90_132))
(assert (= var2240378 (bvsmod temp90_130 ARGNAME_groups_NAMEEND)))
(assert (= temp90_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp90_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp90_134 #x0000000000000001))
(assert (= var2240379 temp90_134))
(assert (= var2240398 var2240288))
(assert (= temp90_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp90_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp90_136 #x0000000000000001))
(assert (= var2240399 temp90_136))
(assert (= temp90_137 #x0000000000000001))
(assert (= var2229290 temp90_137))
(assert (= temp90_139 var2229290))
(assert (= temp90_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp90_139)))
(assert (= temp90_138 temp90_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp90_138)))
(assert (= temp90_141 #x0000000000000000))
(assert (= var2228402 temp90_141))
(assert (= temp90_143 var2228402))
(assert (= temp90_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp90_143)))
(assert (= temp90_142 temp90_144))
(assert (= temp90_145 #x0000000000000002))
(assert (= var2503529 temp90_145))
(assert (= temp90_146 #x0000000000000001))
(assert (= var2240569 temp90_146))
(assert (= temp90_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp90_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp90_148 #x0000000000000001))
(assert (= var1521778 temp90_148))
(assert (= temp90_149 #x0000000000000001))
(assert (= var1521908 temp90_149))
(assert (= var4010473 var1521908))
(assert (= temp90_150 #x0000000000000000))
(assert (= var4210495 temp90_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp90_151 #x0000000000000002))
(assert (= var4339331 temp90_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp90_153 #xffffffffffffffff))
(assert (= temp90_152 temp90_153))
(assert (= temp90_155 #xffffffffffffffff))
(assert (= temp90_154 temp90_155))
(assert (= temp90_156 #x0000000000000001))
(assert (= var1521778 temp90_156))
(model-add temp90_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp90_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp90_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp90_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp90_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp90_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






