(declare-fun temp886_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp886_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp886_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp886_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp886_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp886_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp886_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp886_8 () (_ BitVec 64))
(declare-fun temp886_10 () (_ BitVec 64))
(declare-fun temp886_9 () (_ BitVec 64))
(declare-fun temp886_12 () (_ BitVec 64))
(declare-fun temp886_11 () (_ BitVec 64))
(declare-fun temp886_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp886_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp886_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp886_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp886_17 () (_ BitVec 64))
(declare-fun temp886_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp886_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp886_20 () (_ BitVec 64))
(declare-fun temp886_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp886_22 () (_ BitVec 64))
(declare-fun temp886_23 () (_ BitVec 64))
(declare-fun temp886_24 () (_ BitVec 64))
(declare-fun temp886_25 () (_ BitVec 64))
(declare-fun temp886_26 () (_ BitVec 64))
(declare-fun temp886_27 () (_ BitVec 64))
(declare-fun temp886_28 () (_ BitVec 64))
(declare-fun temp886_29 () (_ BitVec 64))
(declare-fun temp886_30 () (_ BitVec 64))
(declare-fun temp886_31 () (_ BitVec 64))
(declare-fun temp886_32 () (_ BitVec 64))
(declare-fun temp886_33 () (_ BitVec 64))
(declare-fun temp886_34 () (_ BitVec 64))
(declare-fun temp886_35 () (_ BitVec 64))
(declare-fun temp886_36 () (_ BitVec 64))
(declare-fun temp886_37 () (_ BitVec 64))
(declare-fun temp886_38 () (_ BitVec 64))
(declare-fun temp886_39 () (_ BitVec 64))
(declare-fun temp886_40 () (_ BitVec 64))
(declare-fun temp886_41 () (_ BitVec 64))
(declare-fun temp886_42 () (_ BitVec 64))
(declare-fun temp886_43 () (_ BitVec 64))
(declare-fun temp886_44 () (_ BitVec 64))
(declare-fun temp886_45 () (_ BitVec 64))
(declare-fun temp886_46 () (_ BitVec 64))
(declare-fun temp886_47 () (_ BitVec 64))
(declare-fun temp886_48 () (_ BitVec 64))
(declare-fun temp886_49 () (_ BitVec 64))
(declare-fun temp886_50 () (_ BitVec 64))
(declare-fun temp886_51 () (_ BitVec 64))
(declare-fun temp886_52 () (_ BitVec 64))
(declare-fun temp886_53 () (_ BitVec 64))
(declare-fun temp886_54 () (_ BitVec 64))
(declare-fun temp886_55 () (_ BitVec 64))
(declare-fun temp886_56 () (_ BitVec 64))
(declare-fun temp886_57 () (_ BitVec 64))
(declare-fun temp886_58 () (_ BitVec 64))
(declare-fun temp886_59 () (_ BitVec 64))
(declare-fun temp886_60 () (_ BitVec 64))
(declare-fun temp886_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp886_62 () (_ BitVec 64))
(declare-fun temp886_63 () (_ BitVec 64))
(declare-fun temp886_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp886_65 () (_ BitVec 64))
(declare-fun temp886_66 () (_ BitVec 64))
(declare-fun temp886_67 () (_ BitVec 64))
(declare-fun temp886_68 () (_ BitVec 64))
(declare-fun temp886_69 () (_ BitVec 64))
(declare-fun temp886_70 () (_ BitVec 64))
(declare-fun temp886_71 () (_ BitVec 64))
(declare-fun temp886_72 () (_ BitVec 64))
(declare-fun temp886_73 () (_ BitVec 64))
(declare-fun temp886_74 () (_ BitVec 64))
(declare-fun temp886_75 () (_ BitVec 64))
(declare-fun temp886_76 () (_ BitVec 64))
(declare-fun temp886_77 () (_ BitVec 64))
(declare-fun temp886_78 () (_ BitVec 64))
(declare-fun temp886_79 () (_ BitVec 64))
(declare-fun temp886_80 () (_ BitVec 64))
(declare-fun temp886_81 () (_ BitVec 64))
(declare-fun temp886_82 () (_ BitVec 64))
(declare-fun temp886_83 () (_ BitVec 64))
(declare-fun temp886_84 () (_ BitVec 64))
(declare-fun temp886_85 () (_ BitVec 64))
(declare-fun temp886_86 () (_ BitVec 64))
(declare-fun temp886_87 () (_ BitVec 64))
(declare-fun temp886_88 () (_ BitVec 64))
(declare-fun temp886_89 () (_ BitVec 64))
(declare-fun temp886_90 () (_ BitVec 64))
(declare-fun temp886_91 () (_ BitVec 64))
(declare-fun temp886_92 () (_ BitVec 64))
(declare-fun temp886_93 () (_ BitVec 64))
(declare-fun temp886_94 () (_ BitVec 64))
(declare-fun temp886_95 () (_ BitVec 64))
(declare-fun temp886_96 () (_ BitVec 64))
(declare-fun temp886_97 () (_ BitVec 64))
(declare-fun temp886_98 () (_ BitVec 64))
(declare-fun temp886_99 () (_ BitVec 64))
(declare-fun temp886_100 () (_ BitVec 64))
(declare-fun temp886_101 () (_ BitVec 64))
(declare-fun temp886_102 () (_ BitVec 64))
(declare-fun temp886_103 () (_ BitVec 64))
(declare-fun temp886_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp886_105 () (_ BitVec 64))
(declare-fun temp886_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp886_107 () (_ BitVec 64))
(declare-fun temp886_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp886_109 () (_ BitVec 64))
(declare-fun temp886_110 () (_ BitVec 64))
(declare-fun temp886_111 () (_ BitVec 64))
(declare-fun temp886_112 () (_ BitVec 64))
(declare-fun temp886_113 () (_ BitVec 64))
(declare-fun temp886_114 () (_ BitVec 64))
(declare-fun temp886_115 () (_ BitVec 64))
(declare-fun temp886_116 () (_ BitVec 64))
(declare-fun temp886_117 () (_ BitVec 64))
(declare-fun temp886_118 () (_ BitVec 64))
(declare-fun temp886_119 () (_ BitVec 64))
(declare-fun temp886_120 () (_ BitVec 64))
(declare-fun temp886_121 () (_ BitVec 64))
(declare-fun temp886_122 () (_ BitVec 64))
(declare-fun temp886_123 () (_ BitVec 64))
(declare-fun temp886_124 () (_ BitVec 64))
(declare-fun temp886_126 () (_ BitVec 64))
(declare-fun temp886_127 () (_ BitVec 64))
(declare-fun temp886_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp886_128 () (_ BitVec 64))
(declare-fun temp886_129 () (_ BitVec 64))
(declare-fun temp886_131 () (_ BitVec 64))
(declare-fun temp886_132 () (_ BitVec 64))
(declare-fun temp886_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp886_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp886_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp886_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp886_136 () (_ BitVec 64))
(declare-fun temp886_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp886_139 () (_ BitVec 64))
(declare-fun temp886_140 () (_ BitVec 64))
(declare-fun temp886_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp886_141 () (_ BitVec 64))
(declare-fun temp886_143 () (_ BitVec 64))
(declare-fun temp886_144 () (_ BitVec 64))
(declare-fun temp886_142 () (_ BitVec 64))
(declare-fun temp886_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp886_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp886_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp886_148 () (_ BitVec 64))
(declare-fun temp886_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp886_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp886_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun temp886_152 () (_ BitVec 64))
(assert (= temp886_1 #x0000000000000002))
(assert (= var989741 temp886_1))
(assert (= temp886_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp886_2)))
(assert (= temp886_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp886_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp886_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp886_4)))
(assert (= temp886_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp886_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp886_6 #x0000000000000000))
(assert (= var989776 temp886_6))
(assert (= temp886_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp886_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp886_8 #x0000000000000001))
(assert (= var989810 temp886_8))
(assert (= temp886_10 #x0000000000000000))
(assert (= temp886_9 temp886_10))
(assert (= temp886_12 #x0000000000000002))
(assert (= temp886_11 temp886_12))
(assert (= temp886_13 #x0000000000000000))
(assert (= var1387902 temp886_13))
(assert (= temp886_14 #x0000000000000001))
(assert (= var1387923 temp886_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp886_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp886_15)))
(assert (= temp886_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp886_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_17 #x0000000000000000))
(assert (= var1521661 temp886_17))
(assert (= temp886_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp886_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_19 #x0000000000000000))
(assert (= var1521706 temp886_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp886_20 #x0000000000000000))
(assert (= temp886_21 temp886_20))
(assert (= temp886_22 (select ARGNAME_padding_NAMEEND_VAL temp886_21)))
(assert (= temp886_23 #x0000000000000001))
(assert (= temp886_24 temp886_23))
(assert (= temp886_25 (select ARGNAME_padding_NAMEEND_VAL temp886_24)))
(assert (= temp886_26 #x0000000000000002))
(assert (= temp886_27 temp886_26))
(assert (= temp886_28 (select ARGNAME_padding_NAMEEND_VAL temp886_27)))
(assert (= temp886_29 #x0000000000000003))
(assert (= temp886_30 temp886_29))
(assert (= temp886_31 (select ARGNAME_padding_NAMEEND_VAL temp886_30)))
(assert (= temp886_32 #x0000000000000004))
(assert (= temp886_33 temp886_32))
(assert (= temp886_34 (select ARGNAME_padding_NAMEEND_VAL temp886_33)))
(assert (= temp886_35 #x0000000000000005))
(assert (= temp886_36 temp886_35))
(assert (= temp886_37 (select ARGNAME_padding_NAMEEND_VAL temp886_36)))
(assert (= temp886_38 #x0000000000000000))
(assert (= temp886_39 #x0000000000000000))
(assert (= temp886_40 temp886_39))
(assert (= temp886_41 (select ARGNAME_padding_NAMEEND_VAL temp886_40)))
(assert (= temp886_42 #x0000000000000000))
(assert (= temp886_43 #x0000000000000001))
(assert (= temp886_44 temp886_43))
(assert (= temp886_45 (select ARGNAME_padding_NAMEEND_VAL temp886_44)))
(assert (= temp886_46 #x0000000000000000))
(assert (= temp886_47 #x0000000000000002))
(assert (= temp886_48 temp886_47))
(assert (= temp886_49 (select ARGNAME_padding_NAMEEND_VAL temp886_48)))
(assert (= temp886_50 #x0000000000000000))
(assert (= temp886_51 #x0000000000000003))
(assert (= temp886_52 temp886_51))
(assert (= temp886_53 (select ARGNAME_padding_NAMEEND_VAL temp886_52)))
(assert (= temp886_54 #x0000000000000000))
(assert (= temp886_55 #x0000000000000004))
(assert (= temp886_56 temp886_55))
(assert (= temp886_57 (select ARGNAME_padding_NAMEEND_VAL temp886_56)))
(assert (= temp886_58 #x0000000000000000))
(assert (= temp886_59 #x0000000000000005))
(assert (= temp886_60 temp886_59))
(assert (= temp886_61 (select ARGNAME_padding_NAMEEND_VAL temp886_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp886_41 temp886_38)
             (bvslt temp886_45 temp886_42)
             (bvslt temp886_49 temp886_46)
             (bvslt temp886_53 temp886_50)
             (bvslt temp886_57 temp886_54)
             (bvslt temp886_61 temp886_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_62 #x0000000000000000))
(assert (= var2240290 temp886_62))
(assert (= temp886_63 #x0000000000000000))
(assert (= temp886_64 temp886_63))
(assert (= temp886_65 (select ARGNAME_stride_NAMEEND_VAL temp886_64)))
(assert (= temp886_66 #x0000000000000001))
(assert (= temp886_67 temp886_66))
(assert (= temp886_68 (select ARGNAME_stride_NAMEEND_VAL temp886_67)))
(assert (= temp886_69 #x0000000000000002))
(assert (= temp886_70 temp886_69))
(assert (= temp886_71 (select ARGNAME_stride_NAMEEND_VAL temp886_70)))
(assert (= temp886_72 #x0000000000000003))
(assert (= temp886_73 temp886_72))
(assert (= temp886_74 (select ARGNAME_stride_NAMEEND_VAL temp886_73)))
(assert (= temp886_75 #x0000000000000004))
(assert (= temp886_76 temp886_75))
(assert (= temp886_77 (select ARGNAME_stride_NAMEEND_VAL temp886_76)))
(assert (= temp886_78 #x0000000000000005))
(assert (= temp886_79 temp886_78))
(assert (= temp886_80 (select ARGNAME_stride_NAMEEND_VAL temp886_79)))
(assert (= temp886_81 #x0000000000000000))
(assert (= temp886_82 #x0000000000000000))
(assert (= temp886_83 temp886_82))
(assert (= temp886_84 (select ARGNAME_stride_NAMEEND_VAL temp886_83)))
(assert (= temp886_85 #x0000000000000000))
(assert (= temp886_86 #x0000000000000001))
(assert (= temp886_87 temp886_86))
(assert (= temp886_88 (select ARGNAME_stride_NAMEEND_VAL temp886_87)))
(assert (= temp886_89 #x0000000000000000))
(assert (= temp886_90 #x0000000000000002))
(assert (= temp886_91 temp886_90))
(assert (= temp886_92 (select ARGNAME_stride_NAMEEND_VAL temp886_91)))
(assert (= temp886_93 #x0000000000000000))
(assert (= temp886_94 #x0000000000000003))
(assert (= temp886_95 temp886_94))
(assert (= temp886_96 (select ARGNAME_stride_NAMEEND_VAL temp886_95)))
(assert (= temp886_97 #x0000000000000000))
(assert (= temp886_98 #x0000000000000004))
(assert (= temp886_99 temp886_98))
(assert (= temp886_100 (select ARGNAME_stride_NAMEEND_VAL temp886_99)))
(assert (= temp886_101 #x0000000000000000))
(assert (= temp886_102 #x0000000000000005))
(assert (= temp886_103 temp886_102))
(assert (= temp886_104 (select ARGNAME_stride_NAMEEND_VAL temp886_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp886_84 temp886_81)
             (bvsle temp886_88 temp886_85)
             (bvsle temp886_92 temp886_89)
             (bvsle temp886_96 temp886_93)
             (bvsle temp886_100 temp886_97)
             (bvsle temp886_104 temp886_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_105 #x0000000000000000))
(assert (= var2240311 temp886_105))
(assert (= temp886_106 #x0000000000000000))
(assert (= var2228402 temp886_106))
(assert (= temp886_107 #x0000000000000000))
(assert (= temp886_108 temp886_107))
(assert (= temp886_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_108)))
(assert (= temp886_110 #x0000000000000001))
(assert (= temp886_111 temp886_110))
(assert (= temp886_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_111)))
(assert (= temp886_113 #x0000000000000002))
(assert (= temp886_114 temp886_113))
(assert (= temp886_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_114)))
(assert (= temp886_116 #x0000000000000003))
(assert (= temp886_117 temp886_116))
(assert (= temp886_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_117)))
(assert (= temp886_119 #x0000000000000004))
(assert (= temp886_120 temp886_119))
(assert (= temp886_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_120)))
(assert (= temp886_122 #x0000000000000005))
(assert (= temp886_123 temp886_122))
(assert (= temp886_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_123)))
(assert (= temp886_126 var2228402))
(assert (= temp886_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_126)))
(assert (= temp886_125 temp886_127))
(assert (= var2240356
   (ite (bvslt temp886_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_128 #x0000000000000000))
(assert (= var2240356 temp886_128))
(assert (= temp886_129 #x0000000000000000))
(assert (= var2228402 temp886_129))
(assert (= temp886_131 var2228402))
(assert (= temp886_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_131)))
(assert (= temp886_130 temp886_132))
(assert (= var2240378 (bvsmod temp886_130 ARGNAME_groups_NAMEEND)))
(assert (= temp886_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp886_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp886_134 #x0000000000000001))
(assert (= var2240379 temp886_134))
(assert (= var2240398 var2240288))
(assert (= temp886_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp886_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp886_136 #x0000000000000001))
(assert (= var2240399 temp886_136))
(assert (= temp886_137 #x0000000000000001))
(assert (= var2229290 temp886_137))
(assert (= temp886_139 var2229290))
(assert (= temp886_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_139)))
(assert (= temp886_138 temp886_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp886_138)))
(assert (= temp886_141 #x0000000000000000))
(assert (= var2228402 temp886_141))
(assert (= temp886_143 var2228402))
(assert (= temp886_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp886_143)))
(assert (= temp886_142 temp886_144))
(assert (= temp886_145 #x0000000000000002))
(assert (= var2503529 temp886_145))
(assert (= temp886_146 #x0000000000000001))
(assert (= var2240569 temp886_146))
(assert (= temp886_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp886_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp886_148 #x0000000000000001))
(assert (= var1521778 temp886_148))
(assert (= temp886_149 #x0000000000000001))
(assert (= var1521908 temp886_149))
(assert (= var4010473 var1521908))
(assert (= temp886_150 #x0000000000000000))
(assert (= var4210495 temp886_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp886_151 #x0000000000000002))
(assert (= var4339331 temp886_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4862352 var1521921))
(assert (= var5124496 var1521921))
(assert (= temp886_152 #x0000000000000001))
(assert (= var1521778 temp886_152))
(model-add temp886_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp886_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp886_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp886_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp886_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp886_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






