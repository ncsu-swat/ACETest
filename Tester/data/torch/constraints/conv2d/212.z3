(declare-fun temp282_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp282_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp282_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp282_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp282_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp282_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp282_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp282_8 () (_ BitVec 64))
(declare-fun temp282_10 () (_ BitVec 64))
(declare-fun temp282_9 () (_ BitVec 64))
(declare-fun temp282_12 () (_ BitVec 64))
(declare-fun temp282_11 () (_ BitVec 64))
(declare-fun temp282_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp282_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp282_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp282_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp282_17 () (_ BitVec 64))
(declare-fun temp282_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp282_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp282_20 () (_ BitVec 64))
(declare-fun temp282_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp282_22 () (_ BitVec 64))
(declare-fun temp282_23 () (_ BitVec 64))
(declare-fun temp282_24 () (_ BitVec 64))
(declare-fun temp282_25 () (_ BitVec 64))
(declare-fun temp282_26 () (_ BitVec 64))
(declare-fun temp282_27 () (_ BitVec 64))
(declare-fun temp282_28 () (_ BitVec 64))
(declare-fun temp282_29 () (_ BitVec 64))
(declare-fun temp282_30 () (_ BitVec 64))
(declare-fun temp282_31 () (_ BitVec 64))
(declare-fun temp282_32 () (_ BitVec 64))
(declare-fun temp282_33 () (_ BitVec 64))
(declare-fun temp282_34 () (_ BitVec 64))
(declare-fun temp282_35 () (_ BitVec 64))
(declare-fun temp282_36 () (_ BitVec 64))
(declare-fun temp282_37 () (_ BitVec 64))
(declare-fun temp282_38 () (_ BitVec 64))
(declare-fun temp282_39 () (_ BitVec 64))
(declare-fun temp282_40 () (_ BitVec 64))
(declare-fun temp282_41 () (_ BitVec 64))
(declare-fun temp282_42 () (_ BitVec 64))
(declare-fun temp282_43 () (_ BitVec 64))
(declare-fun temp282_44 () (_ BitVec 64))
(declare-fun temp282_45 () (_ BitVec 64))
(declare-fun temp282_46 () (_ BitVec 64))
(declare-fun temp282_47 () (_ BitVec 64))
(declare-fun temp282_48 () (_ BitVec 64))
(declare-fun temp282_49 () (_ BitVec 64))
(declare-fun temp282_50 () (_ BitVec 64))
(declare-fun temp282_51 () (_ BitVec 64))
(declare-fun temp282_52 () (_ BitVec 64))
(declare-fun temp282_53 () (_ BitVec 64))
(declare-fun temp282_54 () (_ BitVec 64))
(declare-fun temp282_55 () (_ BitVec 64))
(declare-fun temp282_56 () (_ BitVec 64))
(declare-fun temp282_57 () (_ BitVec 64))
(declare-fun temp282_58 () (_ BitVec 64))
(declare-fun temp282_59 () (_ BitVec 64))
(declare-fun temp282_60 () (_ BitVec 64))
(declare-fun temp282_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp282_62 () (_ BitVec 64))
(declare-fun temp282_63 () (_ BitVec 64))
(declare-fun temp282_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp282_65 () (_ BitVec 64))
(declare-fun temp282_66 () (_ BitVec 64))
(declare-fun temp282_67 () (_ BitVec 64))
(declare-fun temp282_68 () (_ BitVec 64))
(declare-fun temp282_69 () (_ BitVec 64))
(declare-fun temp282_70 () (_ BitVec 64))
(declare-fun temp282_71 () (_ BitVec 64))
(declare-fun temp282_72 () (_ BitVec 64))
(declare-fun temp282_73 () (_ BitVec 64))
(declare-fun temp282_74 () (_ BitVec 64))
(declare-fun temp282_75 () (_ BitVec 64))
(declare-fun temp282_76 () (_ BitVec 64))
(declare-fun temp282_77 () (_ BitVec 64))
(declare-fun temp282_78 () (_ BitVec 64))
(declare-fun temp282_79 () (_ BitVec 64))
(declare-fun temp282_80 () (_ BitVec 64))
(declare-fun temp282_81 () (_ BitVec 64))
(declare-fun temp282_82 () (_ BitVec 64))
(declare-fun temp282_83 () (_ BitVec 64))
(declare-fun temp282_84 () (_ BitVec 64))
(declare-fun temp282_85 () (_ BitVec 64))
(declare-fun temp282_86 () (_ BitVec 64))
(declare-fun temp282_87 () (_ BitVec 64))
(declare-fun temp282_88 () (_ BitVec 64))
(declare-fun temp282_89 () (_ BitVec 64))
(declare-fun temp282_90 () (_ BitVec 64))
(declare-fun temp282_91 () (_ BitVec 64))
(declare-fun temp282_92 () (_ BitVec 64))
(declare-fun temp282_93 () (_ BitVec 64))
(declare-fun temp282_94 () (_ BitVec 64))
(declare-fun temp282_95 () (_ BitVec 64))
(declare-fun temp282_96 () (_ BitVec 64))
(declare-fun temp282_97 () (_ BitVec 64))
(declare-fun temp282_98 () (_ BitVec 64))
(declare-fun temp282_99 () (_ BitVec 64))
(declare-fun temp282_100 () (_ BitVec 64))
(declare-fun temp282_101 () (_ BitVec 64))
(declare-fun temp282_102 () (_ BitVec 64))
(declare-fun temp282_103 () (_ BitVec 64))
(declare-fun temp282_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp282_105 () (_ BitVec 64))
(declare-fun temp282_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp282_107 () (_ BitVec 64))
(declare-fun temp282_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp282_109 () (_ BitVec 64))
(declare-fun temp282_110 () (_ BitVec 64))
(declare-fun temp282_111 () (_ BitVec 64))
(declare-fun temp282_112 () (_ BitVec 64))
(declare-fun temp282_113 () (_ BitVec 64))
(declare-fun temp282_114 () (_ BitVec 64))
(declare-fun temp282_115 () (_ BitVec 64))
(declare-fun temp282_116 () (_ BitVec 64))
(declare-fun temp282_117 () (_ BitVec 64))
(declare-fun temp282_118 () (_ BitVec 64))
(declare-fun temp282_119 () (_ BitVec 64))
(declare-fun temp282_120 () (_ BitVec 64))
(declare-fun temp282_121 () (_ BitVec 64))
(declare-fun temp282_122 () (_ BitVec 64))
(declare-fun temp282_123 () (_ BitVec 64))
(declare-fun temp282_124 () (_ BitVec 64))
(declare-fun temp282_126 () (_ BitVec 64))
(declare-fun temp282_127 () (_ BitVec 64))
(declare-fun temp282_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp282_128 () (_ BitVec 64))
(declare-fun temp282_129 () (_ BitVec 64))
(declare-fun temp282_131 () (_ BitVec 64))
(declare-fun temp282_132 () (_ BitVec 64))
(declare-fun temp282_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp282_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp282_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp282_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp282_136 () (_ BitVec 64))
(declare-fun temp282_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp282_139 () (_ BitVec 64))
(declare-fun temp282_140 () (_ BitVec 64))
(declare-fun temp282_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp282_141 () (_ BitVec 64))
(declare-fun temp282_143 () (_ BitVec 64))
(declare-fun temp282_144 () (_ BitVec 64))
(declare-fun temp282_142 () (_ BitVec 64))
(declare-fun temp282_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp282_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp282_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp282_148 () (_ BitVec 64))
(declare-fun temp282_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp282_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp282_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp282_152 () (_ BitVec 64))
(assert (= temp282_1 #x0000000000000002))
(assert (= var989741 temp282_1))
(assert (= temp282_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp282_2)))
(assert (= temp282_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp282_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp282_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp282_4)))
(assert (= temp282_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp282_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp282_6 #x0000000000000000))
(assert (= var989776 temp282_6))
(assert (= temp282_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp282_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp282_8 #x0000000000000001))
(assert (= var989810 temp282_8))
(assert (= temp282_10 #x0000000000000000))
(assert (= temp282_9 temp282_10))
(assert (= temp282_12 #x0000000000000002))
(assert (= temp282_11 temp282_12))
(assert (= temp282_13 #x0000000000000000))
(assert (= var1387902 temp282_13))
(assert (= temp282_14 #x0000000000000001))
(assert (= var1387923 temp282_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp282_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp282_15)))
(assert (= temp282_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp282_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp282_17 #x0000000000000000))
(assert (= var1521661 temp282_17))
(assert (= temp282_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp282_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp282_19 #x0000000000000000))
(assert (= var1521706 temp282_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp282_20 #x0000000000000000))
(assert (= temp282_21 temp282_20))
(assert (= temp282_22 (select ARGNAME_padding_NAMEEND_VAL temp282_21)))
(assert (= temp282_23 #x0000000000000001))
(assert (= temp282_24 temp282_23))
(assert (= temp282_25 (select ARGNAME_padding_NAMEEND_VAL temp282_24)))
(assert (= temp282_26 #x0000000000000002))
(assert (= temp282_27 temp282_26))
(assert (= temp282_28 (select ARGNAME_padding_NAMEEND_VAL temp282_27)))
(assert (= temp282_29 #x0000000000000003))
(assert (= temp282_30 temp282_29))
(assert (= temp282_31 (select ARGNAME_padding_NAMEEND_VAL temp282_30)))
(assert (= temp282_32 #x0000000000000004))
(assert (= temp282_33 temp282_32))
(assert (= temp282_34 (select ARGNAME_padding_NAMEEND_VAL temp282_33)))
(assert (= temp282_35 #x0000000000000005))
(assert (= temp282_36 temp282_35))
(assert (= temp282_37 (select ARGNAME_padding_NAMEEND_VAL temp282_36)))
(assert (= temp282_38 #x0000000000000000))
(assert (= temp282_39 #x0000000000000000))
(assert (= temp282_40 temp282_39))
(assert (= temp282_41 (select ARGNAME_padding_NAMEEND_VAL temp282_40)))
(assert (= temp282_42 #x0000000000000000))
(assert (= temp282_43 #x0000000000000001))
(assert (= temp282_44 temp282_43))
(assert (= temp282_45 (select ARGNAME_padding_NAMEEND_VAL temp282_44)))
(assert (= temp282_46 #x0000000000000000))
(assert (= temp282_47 #x0000000000000002))
(assert (= temp282_48 temp282_47))
(assert (= temp282_49 (select ARGNAME_padding_NAMEEND_VAL temp282_48)))
(assert (= temp282_50 #x0000000000000000))
(assert (= temp282_51 #x0000000000000003))
(assert (= temp282_52 temp282_51))
(assert (= temp282_53 (select ARGNAME_padding_NAMEEND_VAL temp282_52)))
(assert (= temp282_54 #x0000000000000000))
(assert (= temp282_55 #x0000000000000004))
(assert (= temp282_56 temp282_55))
(assert (= temp282_57 (select ARGNAME_padding_NAMEEND_VAL temp282_56)))
(assert (= temp282_58 #x0000000000000000))
(assert (= temp282_59 #x0000000000000005))
(assert (= temp282_60 temp282_59))
(assert (= temp282_61 (select ARGNAME_padding_NAMEEND_VAL temp282_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp282_41 temp282_38)
             (bvslt temp282_45 temp282_42)
             (bvslt temp282_49 temp282_46)
             (bvslt temp282_53 temp282_50)
             (bvslt temp282_57 temp282_54)
             (bvslt temp282_61 temp282_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp282_62 #x0000000000000000))
(assert (= var2240290 temp282_62))
(assert (= temp282_63 #x0000000000000000))
(assert (= temp282_64 temp282_63))
(assert (= temp282_65 (select ARGNAME_stride_NAMEEND_VAL temp282_64)))
(assert (= temp282_66 #x0000000000000001))
(assert (= temp282_67 temp282_66))
(assert (= temp282_68 (select ARGNAME_stride_NAMEEND_VAL temp282_67)))
(assert (= temp282_69 #x0000000000000002))
(assert (= temp282_70 temp282_69))
(assert (= temp282_71 (select ARGNAME_stride_NAMEEND_VAL temp282_70)))
(assert (= temp282_72 #x0000000000000003))
(assert (= temp282_73 temp282_72))
(assert (= temp282_74 (select ARGNAME_stride_NAMEEND_VAL temp282_73)))
(assert (= temp282_75 #x0000000000000004))
(assert (= temp282_76 temp282_75))
(assert (= temp282_77 (select ARGNAME_stride_NAMEEND_VAL temp282_76)))
(assert (= temp282_78 #x0000000000000005))
(assert (= temp282_79 temp282_78))
(assert (= temp282_80 (select ARGNAME_stride_NAMEEND_VAL temp282_79)))
(assert (= temp282_81 #x0000000000000000))
(assert (= temp282_82 #x0000000000000000))
(assert (= temp282_83 temp282_82))
(assert (= temp282_84 (select ARGNAME_stride_NAMEEND_VAL temp282_83)))
(assert (= temp282_85 #x0000000000000000))
(assert (= temp282_86 #x0000000000000001))
(assert (= temp282_87 temp282_86))
(assert (= temp282_88 (select ARGNAME_stride_NAMEEND_VAL temp282_87)))
(assert (= temp282_89 #x0000000000000000))
(assert (= temp282_90 #x0000000000000002))
(assert (= temp282_91 temp282_90))
(assert (= temp282_92 (select ARGNAME_stride_NAMEEND_VAL temp282_91)))
(assert (= temp282_93 #x0000000000000000))
(assert (= temp282_94 #x0000000000000003))
(assert (= temp282_95 temp282_94))
(assert (= temp282_96 (select ARGNAME_stride_NAMEEND_VAL temp282_95)))
(assert (= temp282_97 #x0000000000000000))
(assert (= temp282_98 #x0000000000000004))
(assert (= temp282_99 temp282_98))
(assert (= temp282_100 (select ARGNAME_stride_NAMEEND_VAL temp282_99)))
(assert (= temp282_101 #x0000000000000000))
(assert (= temp282_102 #x0000000000000005))
(assert (= temp282_103 temp282_102))
(assert (= temp282_104 (select ARGNAME_stride_NAMEEND_VAL temp282_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp282_84 temp282_81)
             (bvsle temp282_88 temp282_85)
             (bvsle temp282_92 temp282_89)
             (bvsle temp282_96 temp282_93)
             (bvsle temp282_100 temp282_97)
             (bvsle temp282_104 temp282_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp282_105 #x0000000000000000))
(assert (= var2240311 temp282_105))
(assert (= temp282_106 #x0000000000000000))
(assert (= var2228402 temp282_106))
(assert (= temp282_107 #x0000000000000000))
(assert (= temp282_108 temp282_107))
(assert (= temp282_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp282_108)))
(assert (= temp282_110 #x0000000000000001))
(assert (= temp282_111 temp282_110))
(assert (= temp282_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp282_111)))
(assert (= temp282_113 #x0000000000000002))
(assert (= temp282_114 temp282_113))
(assert (= temp282_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp282_114)))
(assert (= temp282_116 #x0000000000000003))
(assert (= temp282_117 temp282_116))
(assert (= temp282_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp282_117)))
(assert (= temp282_119 #x0000000000000004))
(assert (= temp282_120 temp282_119))
(assert (= temp282_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp282_120)))
(assert (= temp282_122 #x0000000000000005))
(assert (= temp282_123 temp282_122))
(assert (= temp282_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp282_123)))
(assert (= temp282_126 var2228402))
(assert (= temp282_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp282_126)))
(assert (= temp282_125 temp282_127))
(assert (= var2240356
   (ite (bvslt temp282_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp282_128 #x0000000000000000))
(assert (= var2240356 temp282_128))
(assert (= temp282_129 #x0000000000000000))
(assert (= var2228402 temp282_129))
(assert (= temp282_131 var2228402))
(assert (= temp282_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp282_131)))
(assert (= temp282_130 temp282_132))
(assert (= var2240378 (bvsmod temp282_130 ARGNAME_groups_NAMEEND)))
(assert (= temp282_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp282_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp282_134 #x0000000000000001))
(assert (= var2240379 temp282_134))
(assert (= var2240398 var2240288))
(assert (= temp282_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp282_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp282_136 #x0000000000000001))
(assert (= var2240399 temp282_136))
(assert (= temp282_137 #x0000000000000001))
(assert (= var2229290 temp282_137))
(assert (= temp282_139 var2229290))
(assert (= temp282_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp282_139)))
(assert (= temp282_138 temp282_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp282_138)))
(assert (= temp282_141 #x0000000000000000))
(assert (= var2228402 temp282_141))
(assert (= temp282_143 var2228402))
(assert (= temp282_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp282_143)))
(assert (= temp282_142 temp282_144))
(assert (= temp282_145 #x0000000000000002))
(assert (= var2503529 temp282_145))
(assert (= temp282_146 #x0000000000000001))
(assert (= var2240569 temp282_146))
(assert (= temp282_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp282_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp282_148 #x0000000000000001))
(assert (= var1521778 temp282_148))
(assert (= temp282_149 #x0000000000000001))
(assert (= var1521908 temp282_149))
(assert (= var4010473 var1521908))
(assert (= temp282_150 #x0000000000000000))
(assert (= var4210495 temp282_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp282_151 #x0000000000000002))
(assert (= var4339331 temp282_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp282_152 #x0000000000000001))
(assert (= var1521778 temp282_152))
(model-add temp282_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp282_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp282_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp282_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp282_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp282_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






