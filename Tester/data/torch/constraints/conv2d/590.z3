(declare-fun temp786_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp786_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp786_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp786_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp786_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp786_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp786_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp786_8 () (_ BitVec 64))
(declare-fun temp786_10 () (_ BitVec 64))
(declare-fun temp786_9 () (_ BitVec 64))
(declare-fun temp786_12 () (_ BitVec 64))
(declare-fun temp786_11 () (_ BitVec 64))
(declare-fun temp786_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp786_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp786_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp786_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp786_17 () (_ BitVec 64))
(declare-fun temp786_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp786_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp786_20 () (_ BitVec 64))
(declare-fun temp786_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp786_22 () (_ BitVec 64))
(declare-fun temp786_23 () (_ BitVec 64))
(declare-fun temp786_24 () (_ BitVec 64))
(declare-fun temp786_25 () (_ BitVec 64))
(declare-fun temp786_26 () (_ BitVec 64))
(declare-fun temp786_27 () (_ BitVec 64))
(declare-fun temp786_28 () (_ BitVec 64))
(declare-fun temp786_29 () (_ BitVec 64))
(declare-fun temp786_30 () (_ BitVec 64))
(declare-fun temp786_31 () (_ BitVec 64))
(declare-fun temp786_32 () (_ BitVec 64))
(declare-fun temp786_33 () (_ BitVec 64))
(declare-fun temp786_34 () (_ BitVec 64))
(declare-fun temp786_35 () (_ BitVec 64))
(declare-fun temp786_36 () (_ BitVec 64))
(declare-fun temp786_37 () (_ BitVec 64))
(declare-fun temp786_38 () (_ BitVec 64))
(declare-fun temp786_39 () (_ BitVec 64))
(declare-fun temp786_40 () (_ BitVec 64))
(declare-fun temp786_41 () (_ BitVec 64))
(declare-fun temp786_42 () (_ BitVec 64))
(declare-fun temp786_43 () (_ BitVec 64))
(declare-fun temp786_44 () (_ BitVec 64))
(declare-fun temp786_45 () (_ BitVec 64))
(declare-fun temp786_46 () (_ BitVec 64))
(declare-fun temp786_47 () (_ BitVec 64))
(declare-fun temp786_48 () (_ BitVec 64))
(declare-fun temp786_49 () (_ BitVec 64))
(declare-fun temp786_50 () (_ BitVec 64))
(declare-fun temp786_51 () (_ BitVec 64))
(declare-fun temp786_52 () (_ BitVec 64))
(declare-fun temp786_53 () (_ BitVec 64))
(declare-fun temp786_54 () (_ BitVec 64))
(declare-fun temp786_55 () (_ BitVec 64))
(declare-fun temp786_56 () (_ BitVec 64))
(declare-fun temp786_57 () (_ BitVec 64))
(declare-fun temp786_58 () (_ BitVec 64))
(declare-fun temp786_59 () (_ BitVec 64))
(declare-fun temp786_60 () (_ BitVec 64))
(declare-fun temp786_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp786_62 () (_ BitVec 64))
(declare-fun temp786_63 () (_ BitVec 64))
(declare-fun temp786_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp786_65 () (_ BitVec 64))
(declare-fun temp786_66 () (_ BitVec 64))
(declare-fun temp786_67 () (_ BitVec 64))
(declare-fun temp786_68 () (_ BitVec 64))
(declare-fun temp786_69 () (_ BitVec 64))
(declare-fun temp786_70 () (_ BitVec 64))
(declare-fun temp786_71 () (_ BitVec 64))
(declare-fun temp786_72 () (_ BitVec 64))
(declare-fun temp786_73 () (_ BitVec 64))
(declare-fun temp786_74 () (_ BitVec 64))
(declare-fun temp786_75 () (_ BitVec 64))
(declare-fun temp786_76 () (_ BitVec 64))
(declare-fun temp786_77 () (_ BitVec 64))
(declare-fun temp786_78 () (_ BitVec 64))
(declare-fun temp786_79 () (_ BitVec 64))
(declare-fun temp786_80 () (_ BitVec 64))
(declare-fun temp786_81 () (_ BitVec 64))
(declare-fun temp786_82 () (_ BitVec 64))
(declare-fun temp786_83 () (_ BitVec 64))
(declare-fun temp786_84 () (_ BitVec 64))
(declare-fun temp786_85 () (_ BitVec 64))
(declare-fun temp786_86 () (_ BitVec 64))
(declare-fun temp786_87 () (_ BitVec 64))
(declare-fun temp786_88 () (_ BitVec 64))
(declare-fun temp786_89 () (_ BitVec 64))
(declare-fun temp786_90 () (_ BitVec 64))
(declare-fun temp786_91 () (_ BitVec 64))
(declare-fun temp786_92 () (_ BitVec 64))
(declare-fun temp786_93 () (_ BitVec 64))
(declare-fun temp786_94 () (_ BitVec 64))
(declare-fun temp786_95 () (_ BitVec 64))
(declare-fun temp786_96 () (_ BitVec 64))
(declare-fun temp786_97 () (_ BitVec 64))
(declare-fun temp786_98 () (_ BitVec 64))
(declare-fun temp786_99 () (_ BitVec 64))
(declare-fun temp786_100 () (_ BitVec 64))
(declare-fun temp786_101 () (_ BitVec 64))
(declare-fun temp786_102 () (_ BitVec 64))
(declare-fun temp786_103 () (_ BitVec 64))
(declare-fun temp786_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp786_105 () (_ BitVec 64))
(declare-fun temp786_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp786_107 () (_ BitVec 64))
(declare-fun temp786_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp786_109 () (_ BitVec 64))
(declare-fun temp786_110 () (_ BitVec 64))
(declare-fun temp786_111 () (_ BitVec 64))
(declare-fun temp786_112 () (_ BitVec 64))
(declare-fun temp786_113 () (_ BitVec 64))
(declare-fun temp786_114 () (_ BitVec 64))
(declare-fun temp786_115 () (_ BitVec 64))
(declare-fun temp786_116 () (_ BitVec 64))
(declare-fun temp786_117 () (_ BitVec 64))
(declare-fun temp786_118 () (_ BitVec 64))
(declare-fun temp786_119 () (_ BitVec 64))
(declare-fun temp786_120 () (_ BitVec 64))
(declare-fun temp786_121 () (_ BitVec 64))
(declare-fun temp786_122 () (_ BitVec 64))
(declare-fun temp786_123 () (_ BitVec 64))
(declare-fun temp786_124 () (_ BitVec 64))
(declare-fun temp786_126 () (_ BitVec 64))
(declare-fun temp786_127 () (_ BitVec 64))
(declare-fun temp786_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp786_128 () (_ BitVec 64))
(declare-fun temp786_129 () (_ BitVec 64))
(declare-fun temp786_131 () (_ BitVec 64))
(declare-fun temp786_132 () (_ BitVec 64))
(declare-fun temp786_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp786_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp786_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp786_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp786_136 () (_ BitVec 64))
(declare-fun temp786_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp786_139 () (_ BitVec 64))
(declare-fun temp786_140 () (_ BitVec 64))
(declare-fun temp786_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp786_141 () (_ BitVec 64))
(declare-fun temp786_143 () (_ BitVec 64))
(declare-fun temp786_144 () (_ BitVec 64))
(declare-fun temp786_142 () (_ BitVec 64))
(declare-fun temp786_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp786_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp786_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp786_148 () (_ BitVec 64))
(declare-fun temp786_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp786_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp786_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var1522540 () (_ BitVec 64))
(declare-fun temp786_152 () (_ BitVec 64))
(declare-fun var1522541 () (_ BitVec 64))
(declare-fun temp786_153 () (_ BitVec 64))
(assert (= temp786_1 #x0000000000000002))
(assert (= var989741 temp786_1))
(assert (= temp786_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp786_2)))
(assert (= temp786_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp786_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp786_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp786_4)))
(assert (= temp786_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp786_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp786_6 #x0000000000000000))
(assert (= var989776 temp786_6))
(assert (= temp786_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp786_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp786_8 #x0000000000000001))
(assert (= var989810 temp786_8))
(assert (= temp786_10 #x0000000000000000))
(assert (= temp786_9 temp786_10))
(assert (= temp786_12 #x0000000000000002))
(assert (= temp786_11 temp786_12))
(assert (= temp786_13 #x0000000000000000))
(assert (= var1387902 temp786_13))
(assert (= temp786_14 #x0000000000000001))
(assert (= var1387923 temp786_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp786_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp786_15)))
(assert (= temp786_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp786_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp786_17 #x0000000000000000))
(assert (= var1521661 temp786_17))
(assert (= temp786_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp786_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp786_19 #x0000000000000000))
(assert (= var1521706 temp786_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp786_20 #x0000000000000000))
(assert (= temp786_21 temp786_20))
(assert (= temp786_22 (select ARGNAME_padding_NAMEEND_VAL temp786_21)))
(assert (= temp786_23 #x0000000000000001))
(assert (= temp786_24 temp786_23))
(assert (= temp786_25 (select ARGNAME_padding_NAMEEND_VAL temp786_24)))
(assert (= temp786_26 #x0000000000000002))
(assert (= temp786_27 temp786_26))
(assert (= temp786_28 (select ARGNAME_padding_NAMEEND_VAL temp786_27)))
(assert (= temp786_29 #x0000000000000003))
(assert (= temp786_30 temp786_29))
(assert (= temp786_31 (select ARGNAME_padding_NAMEEND_VAL temp786_30)))
(assert (= temp786_32 #x0000000000000004))
(assert (= temp786_33 temp786_32))
(assert (= temp786_34 (select ARGNAME_padding_NAMEEND_VAL temp786_33)))
(assert (= temp786_35 #x0000000000000005))
(assert (= temp786_36 temp786_35))
(assert (= temp786_37 (select ARGNAME_padding_NAMEEND_VAL temp786_36)))
(assert (= temp786_38 #x0000000000000000))
(assert (= temp786_39 #x0000000000000000))
(assert (= temp786_40 temp786_39))
(assert (= temp786_41 (select ARGNAME_padding_NAMEEND_VAL temp786_40)))
(assert (= temp786_42 #x0000000000000000))
(assert (= temp786_43 #x0000000000000001))
(assert (= temp786_44 temp786_43))
(assert (= temp786_45 (select ARGNAME_padding_NAMEEND_VAL temp786_44)))
(assert (= temp786_46 #x0000000000000000))
(assert (= temp786_47 #x0000000000000002))
(assert (= temp786_48 temp786_47))
(assert (= temp786_49 (select ARGNAME_padding_NAMEEND_VAL temp786_48)))
(assert (= temp786_50 #x0000000000000000))
(assert (= temp786_51 #x0000000000000003))
(assert (= temp786_52 temp786_51))
(assert (= temp786_53 (select ARGNAME_padding_NAMEEND_VAL temp786_52)))
(assert (= temp786_54 #x0000000000000000))
(assert (= temp786_55 #x0000000000000004))
(assert (= temp786_56 temp786_55))
(assert (= temp786_57 (select ARGNAME_padding_NAMEEND_VAL temp786_56)))
(assert (= temp786_58 #x0000000000000000))
(assert (= temp786_59 #x0000000000000005))
(assert (= temp786_60 temp786_59))
(assert (= temp786_61 (select ARGNAME_padding_NAMEEND_VAL temp786_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp786_41 temp786_38)
             (bvslt temp786_45 temp786_42)
             (bvslt temp786_49 temp786_46)
             (bvslt temp786_53 temp786_50)
             (bvslt temp786_57 temp786_54)
             (bvslt temp786_61 temp786_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp786_62 #x0000000000000000))
(assert (= var2240290 temp786_62))
(assert (= temp786_63 #x0000000000000000))
(assert (= temp786_64 temp786_63))
(assert (= temp786_65 (select ARGNAME_stride_NAMEEND_VAL temp786_64)))
(assert (= temp786_66 #x0000000000000001))
(assert (= temp786_67 temp786_66))
(assert (= temp786_68 (select ARGNAME_stride_NAMEEND_VAL temp786_67)))
(assert (= temp786_69 #x0000000000000002))
(assert (= temp786_70 temp786_69))
(assert (= temp786_71 (select ARGNAME_stride_NAMEEND_VAL temp786_70)))
(assert (= temp786_72 #x0000000000000003))
(assert (= temp786_73 temp786_72))
(assert (= temp786_74 (select ARGNAME_stride_NAMEEND_VAL temp786_73)))
(assert (= temp786_75 #x0000000000000004))
(assert (= temp786_76 temp786_75))
(assert (= temp786_77 (select ARGNAME_stride_NAMEEND_VAL temp786_76)))
(assert (= temp786_78 #x0000000000000005))
(assert (= temp786_79 temp786_78))
(assert (= temp786_80 (select ARGNAME_stride_NAMEEND_VAL temp786_79)))
(assert (= temp786_81 #x0000000000000000))
(assert (= temp786_82 #x0000000000000000))
(assert (= temp786_83 temp786_82))
(assert (= temp786_84 (select ARGNAME_stride_NAMEEND_VAL temp786_83)))
(assert (= temp786_85 #x0000000000000000))
(assert (= temp786_86 #x0000000000000001))
(assert (= temp786_87 temp786_86))
(assert (= temp786_88 (select ARGNAME_stride_NAMEEND_VAL temp786_87)))
(assert (= temp786_89 #x0000000000000000))
(assert (= temp786_90 #x0000000000000002))
(assert (= temp786_91 temp786_90))
(assert (= temp786_92 (select ARGNAME_stride_NAMEEND_VAL temp786_91)))
(assert (= temp786_93 #x0000000000000000))
(assert (= temp786_94 #x0000000000000003))
(assert (= temp786_95 temp786_94))
(assert (= temp786_96 (select ARGNAME_stride_NAMEEND_VAL temp786_95)))
(assert (= temp786_97 #x0000000000000000))
(assert (= temp786_98 #x0000000000000004))
(assert (= temp786_99 temp786_98))
(assert (= temp786_100 (select ARGNAME_stride_NAMEEND_VAL temp786_99)))
(assert (= temp786_101 #x0000000000000000))
(assert (= temp786_102 #x0000000000000005))
(assert (= temp786_103 temp786_102))
(assert (= temp786_104 (select ARGNAME_stride_NAMEEND_VAL temp786_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp786_84 temp786_81)
             (bvsle temp786_88 temp786_85)
             (bvsle temp786_92 temp786_89)
             (bvsle temp786_96 temp786_93)
             (bvsle temp786_100 temp786_97)
             (bvsle temp786_104 temp786_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp786_105 #x0000000000000000))
(assert (= var2240311 temp786_105))
(assert (= temp786_106 #x0000000000000000))
(assert (= var2228402 temp786_106))
(assert (= temp786_107 #x0000000000000000))
(assert (= temp786_108 temp786_107))
(assert (= temp786_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp786_108)))
(assert (= temp786_110 #x0000000000000001))
(assert (= temp786_111 temp786_110))
(assert (= temp786_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp786_111)))
(assert (= temp786_113 #x0000000000000002))
(assert (= temp786_114 temp786_113))
(assert (= temp786_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp786_114)))
(assert (= temp786_116 #x0000000000000003))
(assert (= temp786_117 temp786_116))
(assert (= temp786_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp786_117)))
(assert (= temp786_119 #x0000000000000004))
(assert (= temp786_120 temp786_119))
(assert (= temp786_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp786_120)))
(assert (= temp786_122 #x0000000000000005))
(assert (= temp786_123 temp786_122))
(assert (= temp786_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp786_123)))
(assert (= temp786_126 var2228402))
(assert (= temp786_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp786_126)))
(assert (= temp786_125 temp786_127))
(assert (= var2240356
   (ite (bvslt temp786_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp786_128 #x0000000000000000))
(assert (= var2240356 temp786_128))
(assert (= temp786_129 #x0000000000000000))
(assert (= var2228402 temp786_129))
(assert (= temp786_131 var2228402))
(assert (= temp786_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp786_131)))
(assert (= temp786_130 temp786_132))
(assert (= var2240378 (bvsmod temp786_130 ARGNAME_groups_NAMEEND)))
(assert (= temp786_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp786_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp786_134 #x0000000000000001))
(assert (= var2240379 temp786_134))
(assert (= var2240398 var2240288))
(assert (= temp786_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp786_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp786_136 #x0000000000000001))
(assert (= var2240399 temp786_136))
(assert (= temp786_137 #x0000000000000001))
(assert (= var2229290 temp786_137))
(assert (= temp786_139 var2229290))
(assert (= temp786_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp786_139)))
(assert (= temp786_138 temp786_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp786_138)))
(assert (= temp786_141 #x0000000000000000))
(assert (= var2228402 temp786_141))
(assert (= temp786_143 var2228402))
(assert (= temp786_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp786_143)))
(assert (= temp786_142 temp786_144))
(assert (= temp786_145 #x0000000000000002))
(assert (= var2503529 temp786_145))
(assert (= temp786_146 #x0000000000000001))
(assert (= var2240569 temp786_146))
(assert (= temp786_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp786_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp786_148 #x0000000000000001))
(assert (= var1521778 temp786_148))
(assert (= temp786_149 #x0000000000000001))
(assert (= var1521908 temp786_149))
(assert (= var4010473 var1521908))
(assert (= temp786_150 #x0000000000000000))
(assert (= var4210495 temp786_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp786_151 #x0000000000000002))
(assert (= var4339331 temp786_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4796816 var1521921))
(assert (= var1522540 var1521633))
(assert (= temp786_152 #x0000000000000000))
(assert (= var1522541
   (ite (distinct var1522540 temp786_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp786_153 #x0000000000000001))
(assert (= var1521778 temp786_153))
(model-add temp786_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp786_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp786_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp786_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp786_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp786_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






