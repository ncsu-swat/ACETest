(declare-fun temp68_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp68_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp68_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp68_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp68_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp68_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp68_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp68_8 () (_ BitVec 64))
(declare-fun temp68_10 () (_ BitVec 64))
(declare-fun temp68_9 () (_ BitVec 64))
(declare-fun temp68_12 () (_ BitVec 64))
(declare-fun temp68_11 () (_ BitVec 64))
(declare-fun temp68_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp68_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp68_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp68_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp68_17 () (_ BitVec 64))
(declare-fun temp68_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp68_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp68_20 () (_ BitVec 64))
(declare-fun temp68_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp68_22 () (_ BitVec 64))
(declare-fun temp68_23 () (_ BitVec 64))
(declare-fun temp68_24 () (_ BitVec 64))
(declare-fun temp68_25 () (_ BitVec 64))
(declare-fun temp68_26 () (_ BitVec 64))
(declare-fun temp68_27 () (_ BitVec 64))
(declare-fun temp68_28 () (_ BitVec 64))
(declare-fun temp68_29 () (_ BitVec 64))
(declare-fun temp68_30 () (_ BitVec 64))
(declare-fun temp68_31 () (_ BitVec 64))
(declare-fun temp68_32 () (_ BitVec 64))
(declare-fun temp68_33 () (_ BitVec 64))
(declare-fun temp68_34 () (_ BitVec 64))
(declare-fun temp68_35 () (_ BitVec 64))
(declare-fun temp68_36 () (_ BitVec 64))
(declare-fun temp68_37 () (_ BitVec 64))
(declare-fun temp68_38 () (_ BitVec 64))
(declare-fun temp68_39 () (_ BitVec 64))
(declare-fun temp68_40 () (_ BitVec 64))
(declare-fun temp68_41 () (_ BitVec 64))
(declare-fun temp68_42 () (_ BitVec 64))
(declare-fun temp68_43 () (_ BitVec 64))
(declare-fun temp68_44 () (_ BitVec 64))
(declare-fun temp68_45 () (_ BitVec 64))
(declare-fun temp68_46 () (_ BitVec 64))
(declare-fun temp68_47 () (_ BitVec 64))
(declare-fun temp68_48 () (_ BitVec 64))
(declare-fun temp68_49 () (_ BitVec 64))
(declare-fun temp68_50 () (_ BitVec 64))
(declare-fun temp68_51 () (_ BitVec 64))
(declare-fun temp68_52 () (_ BitVec 64))
(declare-fun temp68_53 () (_ BitVec 64))
(declare-fun temp68_54 () (_ BitVec 64))
(declare-fun temp68_55 () (_ BitVec 64))
(declare-fun temp68_56 () (_ BitVec 64))
(declare-fun temp68_57 () (_ BitVec 64))
(declare-fun temp68_58 () (_ BitVec 64))
(declare-fun temp68_59 () (_ BitVec 64))
(declare-fun temp68_60 () (_ BitVec 64))
(declare-fun temp68_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp68_62 () (_ BitVec 64))
(declare-fun temp68_63 () (_ BitVec 64))
(declare-fun temp68_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp68_65 () (_ BitVec 64))
(declare-fun temp68_66 () (_ BitVec 64))
(declare-fun temp68_67 () (_ BitVec 64))
(declare-fun temp68_68 () (_ BitVec 64))
(declare-fun temp68_69 () (_ BitVec 64))
(declare-fun temp68_70 () (_ BitVec 64))
(declare-fun temp68_71 () (_ BitVec 64))
(declare-fun temp68_72 () (_ BitVec 64))
(declare-fun temp68_73 () (_ BitVec 64))
(declare-fun temp68_74 () (_ BitVec 64))
(declare-fun temp68_75 () (_ BitVec 64))
(declare-fun temp68_76 () (_ BitVec 64))
(declare-fun temp68_77 () (_ BitVec 64))
(declare-fun temp68_78 () (_ BitVec 64))
(declare-fun temp68_79 () (_ BitVec 64))
(declare-fun temp68_80 () (_ BitVec 64))
(declare-fun temp68_81 () (_ BitVec 64))
(declare-fun temp68_82 () (_ BitVec 64))
(declare-fun temp68_83 () (_ BitVec 64))
(declare-fun temp68_84 () (_ BitVec 64))
(declare-fun temp68_85 () (_ BitVec 64))
(declare-fun temp68_86 () (_ BitVec 64))
(declare-fun temp68_87 () (_ BitVec 64))
(declare-fun temp68_88 () (_ BitVec 64))
(declare-fun temp68_89 () (_ BitVec 64))
(declare-fun temp68_90 () (_ BitVec 64))
(declare-fun temp68_91 () (_ BitVec 64))
(declare-fun temp68_92 () (_ BitVec 64))
(declare-fun temp68_93 () (_ BitVec 64))
(declare-fun temp68_94 () (_ BitVec 64))
(declare-fun temp68_95 () (_ BitVec 64))
(declare-fun temp68_96 () (_ BitVec 64))
(declare-fun temp68_97 () (_ BitVec 64))
(declare-fun temp68_98 () (_ BitVec 64))
(declare-fun temp68_99 () (_ BitVec 64))
(declare-fun temp68_100 () (_ BitVec 64))
(declare-fun temp68_101 () (_ BitVec 64))
(declare-fun temp68_102 () (_ BitVec 64))
(declare-fun temp68_103 () (_ BitVec 64))
(declare-fun temp68_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp68_105 () (_ BitVec 64))
(declare-fun temp68_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp68_107 () (_ BitVec 64))
(declare-fun temp68_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp68_109 () (_ BitVec 64))
(declare-fun temp68_110 () (_ BitVec 64))
(declare-fun temp68_111 () (_ BitVec 64))
(declare-fun temp68_112 () (_ BitVec 64))
(declare-fun temp68_113 () (_ BitVec 64))
(declare-fun temp68_114 () (_ BitVec 64))
(declare-fun temp68_115 () (_ BitVec 64))
(declare-fun temp68_116 () (_ BitVec 64))
(declare-fun temp68_117 () (_ BitVec 64))
(declare-fun temp68_118 () (_ BitVec 64))
(declare-fun temp68_119 () (_ BitVec 64))
(declare-fun temp68_120 () (_ BitVec 64))
(declare-fun temp68_121 () (_ BitVec 64))
(declare-fun temp68_122 () (_ BitVec 64))
(declare-fun temp68_123 () (_ BitVec 64))
(declare-fun temp68_124 () (_ BitVec 64))
(declare-fun temp68_126 () (_ BitVec 64))
(declare-fun temp68_127 () (_ BitVec 64))
(declare-fun temp68_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp68_128 () (_ BitVec 64))
(declare-fun temp68_129 () (_ BitVec 64))
(declare-fun temp68_131 () (_ BitVec 64))
(declare-fun temp68_132 () (_ BitVec 64))
(declare-fun temp68_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp68_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp68_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp68_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp68_136 () (_ BitVec 64))
(declare-fun temp68_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp68_139 () (_ BitVec 64))
(declare-fun temp68_140 () (_ BitVec 64))
(declare-fun temp68_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp68_141 () (_ BitVec 64))
(declare-fun temp68_143 () (_ BitVec 64))
(declare-fun temp68_144 () (_ BitVec 64))
(declare-fun temp68_142 () (_ BitVec 64))
(declare-fun temp68_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp68_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp68_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp68_148 () (_ BitVec 64))
(declare-fun temp68_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp68_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp68_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var1522214 () (_ BitVec 64))
(declare-fun temp68_152 () (_ BitVec 64))
(declare-fun var1522215 () (_ BitVec 64))
(declare-fun temp68_154 () (_ BitVec 64))
(declare-fun temp68_153 () (_ BitVec 64))
(declare-fun temp68_155 () (_ BitVec 64))
(declare-fun var6426090 () (_ BitVec 64))
(declare-fun temp68_157 () (_ BitVec 64))
(declare-fun temp68_156 () (_ BitVec 64))
(declare-fun temp68_158 () (_ BitVec 64))
(assert (= temp68_1 #x0000000000000002))
(assert (= var989741 temp68_1))
(assert (= temp68_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp68_2)))
(assert (= temp68_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp68_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp68_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp68_4)))
(assert (= temp68_5 #x0000000000000000))
(assert (= var989775 (ite (= var989774 temp68_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp68_6 #x0000000000000000))
(assert (= var989776 temp68_6))
(assert (= temp68_7 #x0000000000000000))
(assert (= var989810 (ite (= var989773 temp68_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_8 #x0000000000000001))
(assert (= var989810 temp68_8))
(assert (= temp68_10 #x0000000000000000))
(assert (= temp68_9 temp68_10))
(assert (= temp68_12 #x0000000000000002))
(assert (= temp68_11 temp68_12))
(assert (= temp68_13 #x0000000000000000))
(assert (= var1387902 temp68_13))
(assert (= temp68_14 #x0000000000000001))
(assert (= var1387923 temp68_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp68_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp68_15)))
(assert (= temp68_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp68_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_17 #x0000000000000000))
(assert (= var1521661 temp68_17))
(assert (= temp68_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp68_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_19 #x0000000000000000))
(assert (= var1521706 temp68_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp68_20 #x0000000000000000))
(assert (= temp68_21 temp68_20))
(assert (= temp68_22 (select ARGNAME_padding_NAMEEND_VAL temp68_21)))
(assert (= temp68_23 #x0000000000000001))
(assert (= temp68_24 temp68_23))
(assert (= temp68_25 (select ARGNAME_padding_NAMEEND_VAL temp68_24)))
(assert (= temp68_26 #x0000000000000002))
(assert (= temp68_27 temp68_26))
(assert (= temp68_28 (select ARGNAME_padding_NAMEEND_VAL temp68_27)))
(assert (= temp68_29 #x0000000000000003))
(assert (= temp68_30 temp68_29))
(assert (= temp68_31 (select ARGNAME_padding_NAMEEND_VAL temp68_30)))
(assert (= temp68_32 #x0000000000000004))
(assert (= temp68_33 temp68_32))
(assert (= temp68_34 (select ARGNAME_padding_NAMEEND_VAL temp68_33)))
(assert (= temp68_35 #x0000000000000005))
(assert (= temp68_36 temp68_35))
(assert (= temp68_37 (select ARGNAME_padding_NAMEEND_VAL temp68_36)))
(assert (= temp68_38 #x0000000000000000))
(assert (= temp68_39 #x0000000000000000))
(assert (= temp68_40 temp68_39))
(assert (= temp68_41 (select ARGNAME_padding_NAMEEND_VAL temp68_40)))
(assert (= temp68_42 #x0000000000000000))
(assert (= temp68_43 #x0000000000000001))
(assert (= temp68_44 temp68_43))
(assert (= temp68_45 (select ARGNAME_padding_NAMEEND_VAL temp68_44)))
(assert (= temp68_46 #x0000000000000000))
(assert (= temp68_47 #x0000000000000002))
(assert (= temp68_48 temp68_47))
(assert (= temp68_49 (select ARGNAME_padding_NAMEEND_VAL temp68_48)))
(assert (= temp68_50 #x0000000000000000))
(assert (= temp68_51 #x0000000000000003))
(assert (= temp68_52 temp68_51))
(assert (= temp68_53 (select ARGNAME_padding_NAMEEND_VAL temp68_52)))
(assert (= temp68_54 #x0000000000000000))
(assert (= temp68_55 #x0000000000000004))
(assert (= temp68_56 temp68_55))
(assert (= temp68_57 (select ARGNAME_padding_NAMEEND_VAL temp68_56)))
(assert (= temp68_58 #x0000000000000000))
(assert (= temp68_59 #x0000000000000005))
(assert (= temp68_60 temp68_59))
(assert (= temp68_61 (select ARGNAME_padding_NAMEEND_VAL temp68_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp68_41 temp68_38)
             (bvslt temp68_45 temp68_42)
             (bvslt temp68_49 temp68_46)
             (bvslt temp68_53 temp68_50)
             (bvslt temp68_57 temp68_54)
             (bvslt temp68_61 temp68_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_62 #x0000000000000000))
(assert (= var2240290 temp68_62))
(assert (= temp68_63 #x0000000000000000))
(assert (= temp68_64 temp68_63))
(assert (= temp68_65 (select ARGNAME_stride_NAMEEND_VAL temp68_64)))
(assert (= temp68_66 #x0000000000000001))
(assert (= temp68_67 temp68_66))
(assert (= temp68_68 (select ARGNAME_stride_NAMEEND_VAL temp68_67)))
(assert (= temp68_69 #x0000000000000002))
(assert (= temp68_70 temp68_69))
(assert (= temp68_71 (select ARGNAME_stride_NAMEEND_VAL temp68_70)))
(assert (= temp68_72 #x0000000000000003))
(assert (= temp68_73 temp68_72))
(assert (= temp68_74 (select ARGNAME_stride_NAMEEND_VAL temp68_73)))
(assert (= temp68_75 #x0000000000000004))
(assert (= temp68_76 temp68_75))
(assert (= temp68_77 (select ARGNAME_stride_NAMEEND_VAL temp68_76)))
(assert (= temp68_78 #x0000000000000005))
(assert (= temp68_79 temp68_78))
(assert (= temp68_80 (select ARGNAME_stride_NAMEEND_VAL temp68_79)))
(assert (= temp68_81 #x0000000000000000))
(assert (= temp68_82 #x0000000000000000))
(assert (= temp68_83 temp68_82))
(assert (= temp68_84 (select ARGNAME_stride_NAMEEND_VAL temp68_83)))
(assert (= temp68_85 #x0000000000000000))
(assert (= temp68_86 #x0000000000000001))
(assert (= temp68_87 temp68_86))
(assert (= temp68_88 (select ARGNAME_stride_NAMEEND_VAL temp68_87)))
(assert (= temp68_89 #x0000000000000000))
(assert (= temp68_90 #x0000000000000002))
(assert (= temp68_91 temp68_90))
(assert (= temp68_92 (select ARGNAME_stride_NAMEEND_VAL temp68_91)))
(assert (= temp68_93 #x0000000000000000))
(assert (= temp68_94 #x0000000000000003))
(assert (= temp68_95 temp68_94))
(assert (= temp68_96 (select ARGNAME_stride_NAMEEND_VAL temp68_95)))
(assert (= temp68_97 #x0000000000000000))
(assert (= temp68_98 #x0000000000000004))
(assert (= temp68_99 temp68_98))
(assert (= temp68_100 (select ARGNAME_stride_NAMEEND_VAL temp68_99)))
(assert (= temp68_101 #x0000000000000000))
(assert (= temp68_102 #x0000000000000005))
(assert (= temp68_103 temp68_102))
(assert (= temp68_104 (select ARGNAME_stride_NAMEEND_VAL temp68_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp68_84 temp68_81)
             (bvsle temp68_88 temp68_85)
             (bvsle temp68_92 temp68_89)
             (bvsle temp68_96 temp68_93)
             (bvsle temp68_100 temp68_97)
             (bvsle temp68_104 temp68_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_105 #x0000000000000000))
(assert (= var2240311 temp68_105))
(assert (= temp68_106 #x0000000000000000))
(assert (= var2228402 temp68_106))
(assert (= temp68_107 #x0000000000000000))
(assert (= temp68_108 temp68_107))
(assert (= temp68_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_108)))
(assert (= temp68_110 #x0000000000000001))
(assert (= temp68_111 temp68_110))
(assert (= temp68_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_111)))
(assert (= temp68_113 #x0000000000000002))
(assert (= temp68_114 temp68_113))
(assert (= temp68_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_114)))
(assert (= temp68_116 #x0000000000000003))
(assert (= temp68_117 temp68_116))
(assert (= temp68_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_117)))
(assert (= temp68_119 #x0000000000000004))
(assert (= temp68_120 temp68_119))
(assert (= temp68_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_120)))
(assert (= temp68_122 #x0000000000000005))
(assert (= temp68_123 temp68_122))
(assert (= temp68_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_123)))
(assert (= temp68_126 var2228402))
(assert (= temp68_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_126)))
(assert (= temp68_125 temp68_127))
(assert (= var2240356
   (ite (bvslt temp68_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_128 #x0000000000000000))
(assert (= var2240356 temp68_128))
(assert (= temp68_129 #x0000000000000000))
(assert (= var2228402 temp68_129))
(assert (= temp68_131 var2228402))
(assert (= temp68_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_131)))
(assert (= temp68_130 temp68_132))
(assert (= var2240378 (bvsmod temp68_130 ARGNAME_groups_NAMEEND)))
(assert (= temp68_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp68_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_134 #x0000000000000001))
(assert (= var2240379 temp68_134))
(assert (= var2240398 var2240288))
(assert (= temp68_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp68_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_136 #x0000000000000001))
(assert (= var2240399 temp68_136))
(assert (= temp68_137 #x0000000000000001))
(assert (= var2229290 temp68_137))
(assert (= temp68_139 var2229290))
(assert (= temp68_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_139)))
(assert (= temp68_138 temp68_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp68_138)))
(assert (= temp68_141 #x0000000000000000))
(assert (= var2228402 temp68_141))
(assert (= temp68_143 var2228402))
(assert (= temp68_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_143)))
(assert (= temp68_142 temp68_144))
(assert (= temp68_145 #x0000000000000002))
(assert (= var2503529 temp68_145))
(assert (= temp68_146 #x0000000000000001))
(assert (= var2240569 temp68_146))
(assert (= temp68_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp68_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_148 #x0000000000000001))
(assert (= var1521778 temp68_148))
(assert (= temp68_149 #x0000000000000001))
(assert (= var1521908 temp68_149))
(assert (= var4010473 var1521908))
(assert (= temp68_150 #x0000000000000000))
(assert (= var4210495 temp68_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp68_151 #x0000000000000002))
(assert (= var4339331 temp68_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4993424 var1521921))
(assert (= var1522214 var1521633))
(assert (= temp68_152 #x0000000000000000))
(assert (= var1522215
   (ite (distinct var1522214 temp68_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_154 #x0000000000000001))
(assert (= temp68_153 temp68_154))
(assert (= temp68_155 #x0000000000000001))
(assert (= var6426090 temp68_155))
(assert (= temp68_157 #xffffffffffffffff))
(assert (= temp68_156 temp68_157))
(assert (= temp68_158 #x0000000000000001))
(assert (= var1521778 temp68_158))
(model-add temp68_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp68_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp68_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp68_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp68_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp68_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






