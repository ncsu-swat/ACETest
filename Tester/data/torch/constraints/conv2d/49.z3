(declare-fun temp63_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp63_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp63_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp63_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp63_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp63_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp63_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp63_8 () (_ BitVec 64))
(declare-fun temp63_10 () (_ BitVec 64))
(declare-fun temp63_9 () (_ BitVec 64))
(declare-fun temp63_12 () (_ BitVec 64))
(declare-fun temp63_11 () (_ BitVec 64))
(declare-fun temp63_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp63_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp63_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp63_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp63_17 () (_ BitVec 64))
(declare-fun temp63_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp63_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp63_20 () (_ BitVec 64))
(declare-fun temp63_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp63_22 () (_ BitVec 64))
(declare-fun temp63_23 () (_ BitVec 64))
(declare-fun temp63_24 () (_ BitVec 64))
(declare-fun temp63_25 () (_ BitVec 64))
(declare-fun temp63_26 () (_ BitVec 64))
(declare-fun temp63_27 () (_ BitVec 64))
(declare-fun temp63_28 () (_ BitVec 64))
(declare-fun temp63_29 () (_ BitVec 64))
(declare-fun temp63_30 () (_ BitVec 64))
(declare-fun temp63_31 () (_ BitVec 64))
(declare-fun temp63_32 () (_ BitVec 64))
(declare-fun temp63_33 () (_ BitVec 64))
(declare-fun temp63_34 () (_ BitVec 64))
(declare-fun temp63_35 () (_ BitVec 64))
(declare-fun temp63_36 () (_ BitVec 64))
(declare-fun temp63_37 () (_ BitVec 64))
(declare-fun temp63_38 () (_ BitVec 64))
(declare-fun temp63_39 () (_ BitVec 64))
(declare-fun temp63_40 () (_ BitVec 64))
(declare-fun temp63_41 () (_ BitVec 64))
(declare-fun temp63_42 () (_ BitVec 64))
(declare-fun temp63_43 () (_ BitVec 64))
(declare-fun temp63_44 () (_ BitVec 64))
(declare-fun temp63_45 () (_ BitVec 64))
(declare-fun temp63_46 () (_ BitVec 64))
(declare-fun temp63_47 () (_ BitVec 64))
(declare-fun temp63_48 () (_ BitVec 64))
(declare-fun temp63_49 () (_ BitVec 64))
(declare-fun temp63_50 () (_ BitVec 64))
(declare-fun temp63_51 () (_ BitVec 64))
(declare-fun temp63_52 () (_ BitVec 64))
(declare-fun temp63_53 () (_ BitVec 64))
(declare-fun temp63_54 () (_ BitVec 64))
(declare-fun temp63_55 () (_ BitVec 64))
(declare-fun temp63_56 () (_ BitVec 64))
(declare-fun temp63_57 () (_ BitVec 64))
(declare-fun temp63_58 () (_ BitVec 64))
(declare-fun temp63_59 () (_ BitVec 64))
(declare-fun temp63_60 () (_ BitVec 64))
(declare-fun temp63_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp63_62 () (_ BitVec 64))
(declare-fun temp63_63 () (_ BitVec 64))
(declare-fun temp63_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp63_65 () (_ BitVec 64))
(declare-fun temp63_66 () (_ BitVec 64))
(declare-fun temp63_67 () (_ BitVec 64))
(declare-fun temp63_68 () (_ BitVec 64))
(declare-fun temp63_69 () (_ BitVec 64))
(declare-fun temp63_70 () (_ BitVec 64))
(declare-fun temp63_71 () (_ BitVec 64))
(declare-fun temp63_72 () (_ BitVec 64))
(declare-fun temp63_73 () (_ BitVec 64))
(declare-fun temp63_74 () (_ BitVec 64))
(declare-fun temp63_75 () (_ BitVec 64))
(declare-fun temp63_76 () (_ BitVec 64))
(declare-fun temp63_77 () (_ BitVec 64))
(declare-fun temp63_78 () (_ BitVec 64))
(declare-fun temp63_79 () (_ BitVec 64))
(declare-fun temp63_80 () (_ BitVec 64))
(declare-fun temp63_81 () (_ BitVec 64))
(declare-fun temp63_82 () (_ BitVec 64))
(declare-fun temp63_83 () (_ BitVec 64))
(declare-fun temp63_84 () (_ BitVec 64))
(declare-fun temp63_85 () (_ BitVec 64))
(declare-fun temp63_86 () (_ BitVec 64))
(declare-fun temp63_87 () (_ BitVec 64))
(declare-fun temp63_88 () (_ BitVec 64))
(declare-fun temp63_89 () (_ BitVec 64))
(declare-fun temp63_90 () (_ BitVec 64))
(declare-fun temp63_91 () (_ BitVec 64))
(declare-fun temp63_92 () (_ BitVec 64))
(declare-fun temp63_93 () (_ BitVec 64))
(declare-fun temp63_94 () (_ BitVec 64))
(declare-fun temp63_95 () (_ BitVec 64))
(declare-fun temp63_96 () (_ BitVec 64))
(declare-fun temp63_97 () (_ BitVec 64))
(declare-fun temp63_98 () (_ BitVec 64))
(declare-fun temp63_99 () (_ BitVec 64))
(declare-fun temp63_100 () (_ BitVec 64))
(declare-fun temp63_101 () (_ BitVec 64))
(declare-fun temp63_102 () (_ BitVec 64))
(declare-fun temp63_103 () (_ BitVec 64))
(declare-fun temp63_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp63_105 () (_ BitVec 64))
(declare-fun temp63_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp63_107 () (_ BitVec 64))
(declare-fun temp63_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp63_109 () (_ BitVec 64))
(declare-fun temp63_110 () (_ BitVec 64))
(declare-fun temp63_111 () (_ BitVec 64))
(declare-fun temp63_112 () (_ BitVec 64))
(declare-fun temp63_113 () (_ BitVec 64))
(declare-fun temp63_114 () (_ BitVec 64))
(declare-fun temp63_115 () (_ BitVec 64))
(declare-fun temp63_116 () (_ BitVec 64))
(declare-fun temp63_117 () (_ BitVec 64))
(declare-fun temp63_118 () (_ BitVec 64))
(declare-fun temp63_119 () (_ BitVec 64))
(declare-fun temp63_120 () (_ BitVec 64))
(declare-fun temp63_121 () (_ BitVec 64))
(declare-fun temp63_122 () (_ BitVec 64))
(declare-fun temp63_123 () (_ BitVec 64))
(declare-fun temp63_124 () (_ BitVec 64))
(declare-fun temp63_126 () (_ BitVec 64))
(declare-fun temp63_127 () (_ BitVec 64))
(declare-fun temp63_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp63_128 () (_ BitVec 64))
(declare-fun temp63_129 () (_ BitVec 64))
(declare-fun temp63_131 () (_ BitVec 64))
(declare-fun temp63_132 () (_ BitVec 64))
(declare-fun temp63_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp63_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp63_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp63_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp63_136 () (_ BitVec 64))
(declare-fun temp63_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp63_139 () (_ BitVec 64))
(declare-fun temp63_140 () (_ BitVec 64))
(declare-fun temp63_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp63_141 () (_ BitVec 64))
(declare-fun temp63_143 () (_ BitVec 64))
(declare-fun temp63_144 () (_ BitVec 64))
(declare-fun temp63_142 () (_ BitVec 64))
(declare-fun temp63_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp63_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp63_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp63_148 () (_ BitVec 64))
(declare-fun temp63_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp63_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp63_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var1522214 () (_ BitVec 64))
(declare-fun temp63_152 () (_ BitVec 64))
(declare-fun var1522215 () (_ BitVec 64))
(declare-fun temp63_153 () (_ BitVec 64))
(assert (= temp63_1 #x0000000000000002))
(assert (= var989741 temp63_1))
(assert (= temp63_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp63_2)))
(assert (= temp63_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp63_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp63_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp63_4)))
(assert (= temp63_5 #x0000000000000000))
(assert (= var989775 (ite (= var989774 temp63_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp63_6 #x0000000000000000))
(assert (= var989776 temp63_6))
(assert (= temp63_7 #x0000000000000000))
(assert (= var989810 (ite (= var989773 temp63_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp63_8 #x0000000000000001))
(assert (= var989810 temp63_8))
(assert (= temp63_10 #x0000000000000000))
(assert (= temp63_9 temp63_10))
(assert (= temp63_12 #x0000000000000002))
(assert (= temp63_11 temp63_12))
(assert (= temp63_13 #x0000000000000000))
(assert (= var1387902 temp63_13))
(assert (= temp63_14 #x0000000000000001))
(assert (= var1387923 temp63_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp63_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp63_15)))
(assert (= temp63_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp63_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp63_17 #x0000000000000000))
(assert (= var1521661 temp63_17))
(assert (= temp63_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp63_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp63_19 #x0000000000000000))
(assert (= var1521706 temp63_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp63_20 #x0000000000000000))
(assert (= temp63_21 temp63_20))
(assert (= temp63_22 (select ARGNAME_padding_NAMEEND_VAL temp63_21)))
(assert (= temp63_23 #x0000000000000001))
(assert (= temp63_24 temp63_23))
(assert (= temp63_25 (select ARGNAME_padding_NAMEEND_VAL temp63_24)))
(assert (= temp63_26 #x0000000000000002))
(assert (= temp63_27 temp63_26))
(assert (= temp63_28 (select ARGNAME_padding_NAMEEND_VAL temp63_27)))
(assert (= temp63_29 #x0000000000000003))
(assert (= temp63_30 temp63_29))
(assert (= temp63_31 (select ARGNAME_padding_NAMEEND_VAL temp63_30)))
(assert (= temp63_32 #x0000000000000004))
(assert (= temp63_33 temp63_32))
(assert (= temp63_34 (select ARGNAME_padding_NAMEEND_VAL temp63_33)))
(assert (= temp63_35 #x0000000000000005))
(assert (= temp63_36 temp63_35))
(assert (= temp63_37 (select ARGNAME_padding_NAMEEND_VAL temp63_36)))
(assert (= temp63_38 #x0000000000000000))
(assert (= temp63_39 #x0000000000000000))
(assert (= temp63_40 temp63_39))
(assert (= temp63_41 (select ARGNAME_padding_NAMEEND_VAL temp63_40)))
(assert (= temp63_42 #x0000000000000000))
(assert (= temp63_43 #x0000000000000001))
(assert (= temp63_44 temp63_43))
(assert (= temp63_45 (select ARGNAME_padding_NAMEEND_VAL temp63_44)))
(assert (= temp63_46 #x0000000000000000))
(assert (= temp63_47 #x0000000000000002))
(assert (= temp63_48 temp63_47))
(assert (= temp63_49 (select ARGNAME_padding_NAMEEND_VAL temp63_48)))
(assert (= temp63_50 #x0000000000000000))
(assert (= temp63_51 #x0000000000000003))
(assert (= temp63_52 temp63_51))
(assert (= temp63_53 (select ARGNAME_padding_NAMEEND_VAL temp63_52)))
(assert (= temp63_54 #x0000000000000000))
(assert (= temp63_55 #x0000000000000004))
(assert (= temp63_56 temp63_55))
(assert (= temp63_57 (select ARGNAME_padding_NAMEEND_VAL temp63_56)))
(assert (= temp63_58 #x0000000000000000))
(assert (= temp63_59 #x0000000000000005))
(assert (= temp63_60 temp63_59))
(assert (= temp63_61 (select ARGNAME_padding_NAMEEND_VAL temp63_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp63_41 temp63_38)
             (bvslt temp63_45 temp63_42)
             (bvslt temp63_49 temp63_46)
             (bvslt temp63_53 temp63_50)
             (bvslt temp63_57 temp63_54)
             (bvslt temp63_61 temp63_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp63_62 #x0000000000000000))
(assert (= var2240290 temp63_62))
(assert (= temp63_63 #x0000000000000000))
(assert (= temp63_64 temp63_63))
(assert (= temp63_65 (select ARGNAME_stride_NAMEEND_VAL temp63_64)))
(assert (= temp63_66 #x0000000000000001))
(assert (= temp63_67 temp63_66))
(assert (= temp63_68 (select ARGNAME_stride_NAMEEND_VAL temp63_67)))
(assert (= temp63_69 #x0000000000000002))
(assert (= temp63_70 temp63_69))
(assert (= temp63_71 (select ARGNAME_stride_NAMEEND_VAL temp63_70)))
(assert (= temp63_72 #x0000000000000003))
(assert (= temp63_73 temp63_72))
(assert (= temp63_74 (select ARGNAME_stride_NAMEEND_VAL temp63_73)))
(assert (= temp63_75 #x0000000000000004))
(assert (= temp63_76 temp63_75))
(assert (= temp63_77 (select ARGNAME_stride_NAMEEND_VAL temp63_76)))
(assert (= temp63_78 #x0000000000000005))
(assert (= temp63_79 temp63_78))
(assert (= temp63_80 (select ARGNAME_stride_NAMEEND_VAL temp63_79)))
(assert (= temp63_81 #x0000000000000000))
(assert (= temp63_82 #x0000000000000000))
(assert (= temp63_83 temp63_82))
(assert (= temp63_84 (select ARGNAME_stride_NAMEEND_VAL temp63_83)))
(assert (= temp63_85 #x0000000000000000))
(assert (= temp63_86 #x0000000000000001))
(assert (= temp63_87 temp63_86))
(assert (= temp63_88 (select ARGNAME_stride_NAMEEND_VAL temp63_87)))
(assert (= temp63_89 #x0000000000000000))
(assert (= temp63_90 #x0000000000000002))
(assert (= temp63_91 temp63_90))
(assert (= temp63_92 (select ARGNAME_stride_NAMEEND_VAL temp63_91)))
(assert (= temp63_93 #x0000000000000000))
(assert (= temp63_94 #x0000000000000003))
(assert (= temp63_95 temp63_94))
(assert (= temp63_96 (select ARGNAME_stride_NAMEEND_VAL temp63_95)))
(assert (= temp63_97 #x0000000000000000))
(assert (= temp63_98 #x0000000000000004))
(assert (= temp63_99 temp63_98))
(assert (= temp63_100 (select ARGNAME_stride_NAMEEND_VAL temp63_99)))
(assert (= temp63_101 #x0000000000000000))
(assert (= temp63_102 #x0000000000000005))
(assert (= temp63_103 temp63_102))
(assert (= temp63_104 (select ARGNAME_stride_NAMEEND_VAL temp63_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp63_84 temp63_81)
             (bvsle temp63_88 temp63_85)
             (bvsle temp63_92 temp63_89)
             (bvsle temp63_96 temp63_93)
             (bvsle temp63_100 temp63_97)
             (bvsle temp63_104 temp63_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp63_105 #x0000000000000000))
(assert (= var2240311 temp63_105))
(assert (= temp63_106 #x0000000000000000))
(assert (= var2228402 temp63_106))
(assert (= temp63_107 #x0000000000000000))
(assert (= temp63_108 temp63_107))
(assert (= temp63_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp63_108)))
(assert (= temp63_110 #x0000000000000001))
(assert (= temp63_111 temp63_110))
(assert (= temp63_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp63_111)))
(assert (= temp63_113 #x0000000000000002))
(assert (= temp63_114 temp63_113))
(assert (= temp63_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp63_114)))
(assert (= temp63_116 #x0000000000000003))
(assert (= temp63_117 temp63_116))
(assert (= temp63_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp63_117)))
(assert (= temp63_119 #x0000000000000004))
(assert (= temp63_120 temp63_119))
(assert (= temp63_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp63_120)))
(assert (= temp63_122 #x0000000000000005))
(assert (= temp63_123 temp63_122))
(assert (= temp63_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp63_123)))
(assert (= temp63_126 var2228402))
(assert (= temp63_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp63_126)))
(assert (= temp63_125 temp63_127))
(assert (= var2240356
   (ite (bvslt temp63_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp63_128 #x0000000000000000))
(assert (= var2240356 temp63_128))
(assert (= temp63_129 #x0000000000000000))
(assert (= var2228402 temp63_129))
(assert (= temp63_131 var2228402))
(assert (= temp63_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp63_131)))
(assert (= temp63_130 temp63_132))
(assert (= var2240378 (bvsmod temp63_130 ARGNAME_groups_NAMEEND)))
(assert (= temp63_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp63_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp63_134 #x0000000000000001))
(assert (= var2240379 temp63_134))
(assert (= var2240398 var2240288))
(assert (= temp63_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp63_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp63_136 #x0000000000000001))
(assert (= var2240399 temp63_136))
(assert (= temp63_137 #x0000000000000001))
(assert (= var2229290 temp63_137))
(assert (= temp63_139 var2229290))
(assert (= temp63_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp63_139)))
(assert (= temp63_138 temp63_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp63_138)))
(assert (= temp63_141 #x0000000000000000))
(assert (= var2228402 temp63_141))
(assert (= temp63_143 var2228402))
(assert (= temp63_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp63_143)))
(assert (= temp63_142 temp63_144))
(assert (= temp63_145 #x0000000000000002))
(assert (= var2503529 temp63_145))
(assert (= temp63_146 #x0000000000000001))
(assert (= var2240569 temp63_146))
(assert (= temp63_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp63_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp63_148 #x0000000000000001))
(assert (= var1521778 temp63_148))
(assert (= temp63_149 #x0000000000000001))
(assert (= var1521908 temp63_149))
(assert (= var4010473 var1521908))
(assert (= temp63_150 #x0000000000000000))
(assert (= var4210495 temp63_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp63_151 #x0000000000000002))
(assert (= var4339331 temp63_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4993424 var1521921))
(assert (= var1522214 var1521633))
(assert (= temp63_152 #x0000000000000000))
(assert (= var1522215
   (ite (distinct var1522214 temp63_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp63_153 #x0000000000000001))
(assert (= var1521778 temp63_153))
(model-add temp63_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp63_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp63_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp63_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp63_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp63_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






