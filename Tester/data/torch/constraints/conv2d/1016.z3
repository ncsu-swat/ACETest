(declare-fun temp10125_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp10125_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp10125_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp10125_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp10125_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp10125_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp10125_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp10125_8 () (_ BitVec 64))
(declare-fun temp10125_10 () (_ BitVec 64))
(declare-fun temp10125_9 () (_ BitVec 64))
(declare-fun temp10125_12 () (_ BitVec 64))
(declare-fun temp10125_11 () (_ BitVec 64))
(declare-fun temp10125_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp10125_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp10125_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp10125_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp10125_17 () (_ BitVec 64))
(declare-fun temp10125_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp10125_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp10125_20 () (_ BitVec 64))
(declare-fun temp10125_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10125_22 () (_ BitVec 64))
(declare-fun temp10125_23 () (_ BitVec 64))
(declare-fun temp10125_24 () (_ BitVec 64))
(declare-fun temp10125_25 () (_ BitVec 64))
(declare-fun temp10125_26 () (_ BitVec 64))
(declare-fun temp10125_27 () (_ BitVec 64))
(declare-fun temp10125_28 () (_ BitVec 64))
(declare-fun temp10125_29 () (_ BitVec 64))
(declare-fun temp10125_30 () (_ BitVec 64))
(declare-fun temp10125_31 () (_ BitVec 64))
(declare-fun temp10125_32 () (_ BitVec 64))
(declare-fun temp10125_33 () (_ BitVec 64))
(declare-fun temp10125_34 () (_ BitVec 64))
(declare-fun temp10125_35 () (_ BitVec 64))
(declare-fun temp10125_36 () (_ BitVec 64))
(declare-fun temp10125_37 () (_ BitVec 64))
(declare-fun temp10125_38 () (_ BitVec 64))
(declare-fun temp10125_39 () (_ BitVec 64))
(declare-fun temp10125_40 () (_ BitVec 64))
(declare-fun temp10125_41 () (_ BitVec 64))
(declare-fun temp10125_42 () (_ BitVec 64))
(declare-fun temp10125_43 () (_ BitVec 64))
(declare-fun temp10125_44 () (_ BitVec 64))
(declare-fun temp10125_45 () (_ BitVec 64))
(declare-fun temp10125_46 () (_ BitVec 64))
(declare-fun temp10125_47 () (_ BitVec 64))
(declare-fun temp10125_48 () (_ BitVec 64))
(declare-fun temp10125_49 () (_ BitVec 64))
(declare-fun temp10125_50 () (_ BitVec 64))
(declare-fun temp10125_51 () (_ BitVec 64))
(declare-fun temp10125_52 () (_ BitVec 64))
(declare-fun temp10125_53 () (_ BitVec 64))
(declare-fun temp10125_54 () (_ BitVec 64))
(declare-fun temp10125_55 () (_ BitVec 64))
(declare-fun temp10125_56 () (_ BitVec 64))
(declare-fun temp10125_57 () (_ BitVec 64))
(declare-fun temp10125_58 () (_ BitVec 64))
(declare-fun temp10125_59 () (_ BitVec 64))
(declare-fun temp10125_60 () (_ BitVec 64))
(declare-fun temp10125_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp10125_62 () (_ BitVec 64))
(declare-fun temp10125_63 () (_ BitVec 64))
(declare-fun temp10125_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10125_65 () (_ BitVec 64))
(declare-fun temp10125_66 () (_ BitVec 64))
(declare-fun temp10125_67 () (_ BitVec 64))
(declare-fun temp10125_68 () (_ BitVec 64))
(declare-fun temp10125_69 () (_ BitVec 64))
(declare-fun temp10125_70 () (_ BitVec 64))
(declare-fun temp10125_71 () (_ BitVec 64))
(declare-fun temp10125_72 () (_ BitVec 64))
(declare-fun temp10125_73 () (_ BitVec 64))
(declare-fun temp10125_74 () (_ BitVec 64))
(declare-fun temp10125_75 () (_ BitVec 64))
(declare-fun temp10125_76 () (_ BitVec 64))
(declare-fun temp10125_77 () (_ BitVec 64))
(declare-fun temp10125_78 () (_ BitVec 64))
(declare-fun temp10125_79 () (_ BitVec 64))
(declare-fun temp10125_80 () (_ BitVec 64))
(declare-fun temp10125_81 () (_ BitVec 64))
(declare-fun temp10125_82 () (_ BitVec 64))
(declare-fun temp10125_83 () (_ BitVec 64))
(declare-fun temp10125_84 () (_ BitVec 64))
(declare-fun temp10125_85 () (_ BitVec 64))
(declare-fun temp10125_86 () (_ BitVec 64))
(declare-fun temp10125_87 () (_ BitVec 64))
(declare-fun temp10125_88 () (_ BitVec 64))
(declare-fun temp10125_89 () (_ BitVec 64))
(declare-fun temp10125_90 () (_ BitVec 64))
(declare-fun temp10125_91 () (_ BitVec 64))
(declare-fun temp10125_92 () (_ BitVec 64))
(declare-fun temp10125_93 () (_ BitVec 64))
(declare-fun temp10125_94 () (_ BitVec 64))
(declare-fun temp10125_95 () (_ BitVec 64))
(declare-fun temp10125_96 () (_ BitVec 64))
(declare-fun temp10125_97 () (_ BitVec 64))
(declare-fun temp10125_98 () (_ BitVec 64))
(declare-fun temp10125_99 () (_ BitVec 64))
(declare-fun temp10125_100 () (_ BitVec 64))
(declare-fun temp10125_101 () (_ BitVec 64))
(declare-fun temp10125_102 () (_ BitVec 64))
(declare-fun temp10125_103 () (_ BitVec 64))
(declare-fun temp10125_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp10125_105 () (_ BitVec 64))
(declare-fun temp10125_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp10125_107 () (_ BitVec 64))
(declare-fun temp10125_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10125_109 () (_ BitVec 64))
(declare-fun temp10125_110 () (_ BitVec 64))
(declare-fun temp10125_111 () (_ BitVec 64))
(declare-fun temp10125_112 () (_ BitVec 64))
(declare-fun temp10125_113 () (_ BitVec 64))
(declare-fun temp10125_114 () (_ BitVec 64))
(declare-fun temp10125_115 () (_ BitVec 64))
(declare-fun temp10125_116 () (_ BitVec 64))
(declare-fun temp10125_117 () (_ BitVec 64))
(declare-fun temp10125_118 () (_ BitVec 64))
(declare-fun temp10125_119 () (_ BitVec 64))
(declare-fun temp10125_120 () (_ BitVec 64))
(declare-fun temp10125_121 () (_ BitVec 64))
(declare-fun temp10125_122 () (_ BitVec 64))
(declare-fun temp10125_123 () (_ BitVec 64))
(declare-fun temp10125_124 () (_ BitVec 64))
(declare-fun temp10125_126 () (_ BitVec 64))
(declare-fun temp10125_127 () (_ BitVec 64))
(declare-fun temp10125_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp10125_128 () (_ BitVec 64))
(declare-fun temp10125_129 () (_ BitVec 64))
(declare-fun temp10125_131 () (_ BitVec 64))
(declare-fun temp10125_132 () (_ BitVec 64))
(declare-fun temp10125_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp10125_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp10125_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp10125_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp10125_136 () (_ BitVec 64))
(declare-fun temp10125_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp10125_139 () (_ BitVec 64))
(declare-fun temp10125_140 () (_ BitVec 64))
(declare-fun temp10125_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp10125_141 () (_ BitVec 64))
(declare-fun temp10125_143 () (_ BitVec 64))
(declare-fun temp10125_144 () (_ BitVec 64))
(declare-fun temp10125_142 () (_ BitVec 64))
(declare-fun temp10125_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp10125_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp10125_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp10125_148 () (_ BitVec 64))
(declare-fun temp10125_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp10125_150 () (_ BitVec 64))
(declare-fun var4010640 () (_ BitVec 64))
(declare-fun var4010467 () (_ BitVec 64))
(declare-fun var1521917 () (_ BitVec 64))
(declare-fun var4275993 () (_ BitVec 64))
(declare-fun temp10125_151 () (_ BitVec 64))
(declare-fun temp10125_152 () (_ BitVec 64))
(declare-fun temp10125_153 () (_ BitVec 64))
(declare-fun var4470403 () (_ BitVec 64))
(declare-fun var4470405 () (_ BitVec 64))
(declare-fun var4535948 () (_ BitVec 64))
(declare-fun var4535949 () (_ BitVec 64))
(declare-fun temp10125_154 () (_ BitVec 64))
(declare-fun var1522108 () (_ BitVec 64))
(declare-fun temp10125_155 () (_ BitVec 64))
(declare-fun var1522109 () (_ BitVec 64))
(declare-fun var5652301 () (_ BitVec 64))
(declare-fun temp10125_156 () (_ BitVec 64))
(assert (= temp10125_1 #x0000000000000002))
(assert (= var989741 temp10125_1))
(assert (= temp10125_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp10125_2)))
(assert (= temp10125_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp10125_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp10125_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp10125_4)))
(assert (= temp10125_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp10125_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp10125_6 #x0000000000000000))
(assert (= var989776 temp10125_6))
(assert (= temp10125_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp10125_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp10125_8 #x0000000000000001))
(assert (= var989810 temp10125_8))
(assert (= temp10125_10 #x0000000000000000))
(assert (= temp10125_9 temp10125_10))
(assert (= temp10125_12 #x0000000000000002))
(assert (= temp10125_11 temp10125_12))
(assert (= temp10125_13 #x0000000000000000))
(assert (= var1387902 temp10125_13))
(assert (= temp10125_14 #x0000000000000001))
(assert (= var1387923 temp10125_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp10125_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp10125_15)))
(assert (= temp10125_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10125_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10125_17 #x0000000000000000))
(assert (= var1521661 temp10125_17))
(assert (= temp10125_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp10125_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10125_19 #x0000000000000000))
(assert (= var1521706 temp10125_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp10125_20 #x0000000000000000))
(assert (= temp10125_21 temp10125_20))
(assert (= temp10125_22 (select ARGNAME_padding_NAMEEND_VAL temp10125_21)))
(assert (= temp10125_23 #x0000000000000001))
(assert (= temp10125_24 temp10125_23))
(assert (= temp10125_25 (select ARGNAME_padding_NAMEEND_VAL temp10125_24)))
(assert (= temp10125_26 #x0000000000000002))
(assert (= temp10125_27 temp10125_26))
(assert (= temp10125_28 (select ARGNAME_padding_NAMEEND_VAL temp10125_27)))
(assert (= temp10125_29 #x0000000000000003))
(assert (= temp10125_30 temp10125_29))
(assert (= temp10125_31 (select ARGNAME_padding_NAMEEND_VAL temp10125_30)))
(assert (= temp10125_32 #x0000000000000004))
(assert (= temp10125_33 temp10125_32))
(assert (= temp10125_34 (select ARGNAME_padding_NAMEEND_VAL temp10125_33)))
(assert (= temp10125_35 #x0000000000000005))
(assert (= temp10125_36 temp10125_35))
(assert (= temp10125_37 (select ARGNAME_padding_NAMEEND_VAL temp10125_36)))
(assert (= temp10125_38 #x0000000000000000))
(assert (= temp10125_39 #x0000000000000000))
(assert (= temp10125_40 temp10125_39))
(assert (= temp10125_41 (select ARGNAME_padding_NAMEEND_VAL temp10125_40)))
(assert (= temp10125_42 #x0000000000000000))
(assert (= temp10125_43 #x0000000000000001))
(assert (= temp10125_44 temp10125_43))
(assert (= temp10125_45 (select ARGNAME_padding_NAMEEND_VAL temp10125_44)))
(assert (= temp10125_46 #x0000000000000000))
(assert (= temp10125_47 #x0000000000000002))
(assert (= temp10125_48 temp10125_47))
(assert (= temp10125_49 (select ARGNAME_padding_NAMEEND_VAL temp10125_48)))
(assert (= temp10125_50 #x0000000000000000))
(assert (= temp10125_51 #x0000000000000003))
(assert (= temp10125_52 temp10125_51))
(assert (= temp10125_53 (select ARGNAME_padding_NAMEEND_VAL temp10125_52)))
(assert (= temp10125_54 #x0000000000000000))
(assert (= temp10125_55 #x0000000000000004))
(assert (= temp10125_56 temp10125_55))
(assert (= temp10125_57 (select ARGNAME_padding_NAMEEND_VAL temp10125_56)))
(assert (= temp10125_58 #x0000000000000000))
(assert (= temp10125_59 #x0000000000000005))
(assert (= temp10125_60 temp10125_59))
(assert (= temp10125_61 (select ARGNAME_padding_NAMEEND_VAL temp10125_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp10125_41 temp10125_38)
             (bvslt temp10125_45 temp10125_42)
             (bvslt temp10125_49 temp10125_46)
             (bvslt temp10125_53 temp10125_50)
             (bvslt temp10125_57 temp10125_54)
             (bvslt temp10125_61 temp10125_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10125_62 #x0000000000000000))
(assert (= var2240290 temp10125_62))
(assert (= temp10125_63 #x0000000000000000))
(assert (= temp10125_64 temp10125_63))
(assert (= temp10125_65 (select ARGNAME_stride_NAMEEND_VAL temp10125_64)))
(assert (= temp10125_66 #x0000000000000001))
(assert (= temp10125_67 temp10125_66))
(assert (= temp10125_68 (select ARGNAME_stride_NAMEEND_VAL temp10125_67)))
(assert (= temp10125_69 #x0000000000000002))
(assert (= temp10125_70 temp10125_69))
(assert (= temp10125_71 (select ARGNAME_stride_NAMEEND_VAL temp10125_70)))
(assert (= temp10125_72 #x0000000000000003))
(assert (= temp10125_73 temp10125_72))
(assert (= temp10125_74 (select ARGNAME_stride_NAMEEND_VAL temp10125_73)))
(assert (= temp10125_75 #x0000000000000004))
(assert (= temp10125_76 temp10125_75))
(assert (= temp10125_77 (select ARGNAME_stride_NAMEEND_VAL temp10125_76)))
(assert (= temp10125_78 #x0000000000000005))
(assert (= temp10125_79 temp10125_78))
(assert (= temp10125_80 (select ARGNAME_stride_NAMEEND_VAL temp10125_79)))
(assert (= temp10125_81 #x0000000000000000))
(assert (= temp10125_82 #x0000000000000000))
(assert (= temp10125_83 temp10125_82))
(assert (= temp10125_84 (select ARGNAME_stride_NAMEEND_VAL temp10125_83)))
(assert (= temp10125_85 #x0000000000000000))
(assert (= temp10125_86 #x0000000000000001))
(assert (= temp10125_87 temp10125_86))
(assert (= temp10125_88 (select ARGNAME_stride_NAMEEND_VAL temp10125_87)))
(assert (= temp10125_89 #x0000000000000000))
(assert (= temp10125_90 #x0000000000000002))
(assert (= temp10125_91 temp10125_90))
(assert (= temp10125_92 (select ARGNAME_stride_NAMEEND_VAL temp10125_91)))
(assert (= temp10125_93 #x0000000000000000))
(assert (= temp10125_94 #x0000000000000003))
(assert (= temp10125_95 temp10125_94))
(assert (= temp10125_96 (select ARGNAME_stride_NAMEEND_VAL temp10125_95)))
(assert (= temp10125_97 #x0000000000000000))
(assert (= temp10125_98 #x0000000000000004))
(assert (= temp10125_99 temp10125_98))
(assert (= temp10125_100 (select ARGNAME_stride_NAMEEND_VAL temp10125_99)))
(assert (= temp10125_101 #x0000000000000000))
(assert (= temp10125_102 #x0000000000000005))
(assert (= temp10125_103 temp10125_102))
(assert (= temp10125_104 (select ARGNAME_stride_NAMEEND_VAL temp10125_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp10125_84 temp10125_81)
             (bvsle temp10125_88 temp10125_85)
             (bvsle temp10125_92 temp10125_89)
             (bvsle temp10125_96 temp10125_93)
             (bvsle temp10125_100 temp10125_97)
             (bvsle temp10125_104 temp10125_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10125_105 #x0000000000000000))
(assert (= var2240311 temp10125_105))
(assert (= temp10125_106 #x0000000000000000))
(assert (= var2228402 temp10125_106))
(assert (= temp10125_107 #x0000000000000000))
(assert (= temp10125_108 temp10125_107))
(assert (= temp10125_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10125_108)))
(assert (= temp10125_110 #x0000000000000001))
(assert (= temp10125_111 temp10125_110))
(assert (= temp10125_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10125_111)))
(assert (= temp10125_113 #x0000000000000002))
(assert (= temp10125_114 temp10125_113))
(assert (= temp10125_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10125_114)))
(assert (= temp10125_116 #x0000000000000003))
(assert (= temp10125_117 temp10125_116))
(assert (= temp10125_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10125_117)))
(assert (= temp10125_119 #x0000000000000004))
(assert (= temp10125_120 temp10125_119))
(assert (= temp10125_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10125_120)))
(assert (= temp10125_122 #x0000000000000005))
(assert (= temp10125_123 temp10125_122))
(assert (= temp10125_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10125_123)))
(assert (= temp10125_126 var2228402))
(assert (= temp10125_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10125_126)))
(assert (= temp10125_125 temp10125_127))
(assert (= var2240356
   (ite (bvslt temp10125_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10125_128 #x0000000000000000))
(assert (= var2240356 temp10125_128))
(assert (= temp10125_129 #x0000000000000000))
(assert (= var2228402 temp10125_129))
(assert (= temp10125_131 var2228402))
(assert (= temp10125_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10125_131)))
(assert (= temp10125_130 temp10125_132))
(assert (= var2240378 (bvsmod temp10125_130 ARGNAME_groups_NAMEEND)))
(assert (= temp10125_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp10125_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp10125_134 #x0000000000000001))
(assert (= var2240379 temp10125_134))
(assert (= var2240398 var2240288))
(assert (= temp10125_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp10125_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp10125_136 #x0000000000000001))
(assert (= var2240399 temp10125_136))
(assert (= temp10125_137 #x0000000000000001))
(assert (= var2229290 temp10125_137))
(assert (= temp10125_139 var2229290))
(assert (= temp10125_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10125_139)))
(assert (= temp10125_138 temp10125_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp10125_138)))
(assert (= temp10125_141 #x0000000000000000))
(assert (= var2228402 temp10125_141))
(assert (= temp10125_143 var2228402))
(assert (= temp10125_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10125_143)))
(assert (= temp10125_142 temp10125_144))
(assert (= temp10125_145 #x0000000000000002))
(assert (= var2503529 temp10125_145))
(assert (= temp10125_146 #x0000000000000001))
(assert (= var2240569 temp10125_146))
(assert (= temp10125_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10125_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10125_148 #x0000000000000001))
(assert (= var1521778 temp10125_148))
(assert (= temp10125_149 #x0000000000000001))
(assert (= var1521908 temp10125_149))
(assert (= var4010473 var1521908))
(assert (= temp10125_150 #x0000000000000002))
(assert (= var4010640 temp10125_150))
(assert (= var4010467 var4010640))
(assert (= var1521917 var4010467))
(assert (= var4275993 var1521917))
(assert (= temp10125_151 #x0000000000000002))
(assert (= temp10125_152 #x0000000000000003))
(assert (or false (= var4275993 temp10125_151) (= var4275993 temp10125_152)))
(assert (= temp10125_153 #x0000000000000002))
(assert (= var4470403 temp10125_153))
(assert (= var4470405 (bvsub ARGNAME_weight_NAMEEND_DIM var4470403)))
(assert (= var4535948 var4470403))
(assert (= var4535949 var4470405))
(assert (= temp10125_154 #x0000000000000002))
(assert (or false (= var1521917 temp10125_154)))
(assert (= var1522108 var1521633))
(assert (= temp10125_155 #x0000000000000000))
(assert (= var1522109
   (ite (distinct var1522108 temp10125_155)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var5652301 var1522109))
(assert (= temp10125_156 #x0000000000000001))
(assert (= var1521778 temp10125_156))
(model-add temp10125_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp10125_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp10125_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp10125_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp10125_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp10125_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






