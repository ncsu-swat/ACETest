(declare-fun temp1058_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp1058_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp1058_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp1058_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp1058_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp1058_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp1058_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp1058_8 () (_ BitVec 64))
(declare-fun temp1058_10 () (_ BitVec 64))
(declare-fun temp1058_9 () (_ BitVec 64))
(declare-fun temp1058_12 () (_ BitVec 64))
(declare-fun temp1058_11 () (_ BitVec 64))
(declare-fun temp1058_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp1058_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp1058_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp1058_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp1058_17 () (_ BitVec 64))
(declare-fun temp1058_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp1058_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp1058_20 () (_ BitVec 64))
(declare-fun temp1058_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1058_22 () (_ BitVec 64))
(declare-fun temp1058_23 () (_ BitVec 64))
(declare-fun temp1058_24 () (_ BitVec 64))
(declare-fun temp1058_25 () (_ BitVec 64))
(declare-fun temp1058_26 () (_ BitVec 64))
(declare-fun temp1058_27 () (_ BitVec 64))
(declare-fun temp1058_28 () (_ BitVec 64))
(declare-fun temp1058_29 () (_ BitVec 64))
(declare-fun temp1058_30 () (_ BitVec 64))
(declare-fun temp1058_31 () (_ BitVec 64))
(declare-fun temp1058_32 () (_ BitVec 64))
(declare-fun temp1058_33 () (_ BitVec 64))
(declare-fun temp1058_34 () (_ BitVec 64))
(declare-fun temp1058_35 () (_ BitVec 64))
(declare-fun temp1058_36 () (_ BitVec 64))
(declare-fun temp1058_37 () (_ BitVec 64))
(declare-fun temp1058_38 () (_ BitVec 64))
(declare-fun temp1058_39 () (_ BitVec 64))
(declare-fun temp1058_40 () (_ BitVec 64))
(declare-fun temp1058_41 () (_ BitVec 64))
(declare-fun temp1058_42 () (_ BitVec 64))
(declare-fun temp1058_43 () (_ BitVec 64))
(declare-fun temp1058_44 () (_ BitVec 64))
(declare-fun temp1058_45 () (_ BitVec 64))
(declare-fun temp1058_46 () (_ BitVec 64))
(declare-fun temp1058_47 () (_ BitVec 64))
(declare-fun temp1058_48 () (_ BitVec 64))
(declare-fun temp1058_49 () (_ BitVec 64))
(declare-fun temp1058_50 () (_ BitVec 64))
(declare-fun temp1058_51 () (_ BitVec 64))
(declare-fun temp1058_52 () (_ BitVec 64))
(declare-fun temp1058_53 () (_ BitVec 64))
(declare-fun temp1058_54 () (_ BitVec 64))
(declare-fun temp1058_55 () (_ BitVec 64))
(declare-fun temp1058_56 () (_ BitVec 64))
(declare-fun temp1058_57 () (_ BitVec 64))
(declare-fun temp1058_58 () (_ BitVec 64))
(declare-fun temp1058_59 () (_ BitVec 64))
(declare-fun temp1058_60 () (_ BitVec 64))
(declare-fun temp1058_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp1058_62 () (_ BitVec 64))
(declare-fun temp1058_63 () (_ BitVec 64))
(declare-fun temp1058_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1058_65 () (_ BitVec 64))
(declare-fun temp1058_66 () (_ BitVec 64))
(declare-fun temp1058_67 () (_ BitVec 64))
(declare-fun temp1058_68 () (_ BitVec 64))
(declare-fun temp1058_69 () (_ BitVec 64))
(declare-fun temp1058_70 () (_ BitVec 64))
(declare-fun temp1058_71 () (_ BitVec 64))
(declare-fun temp1058_72 () (_ BitVec 64))
(declare-fun temp1058_73 () (_ BitVec 64))
(declare-fun temp1058_74 () (_ BitVec 64))
(declare-fun temp1058_75 () (_ BitVec 64))
(declare-fun temp1058_76 () (_ BitVec 64))
(declare-fun temp1058_77 () (_ BitVec 64))
(declare-fun temp1058_78 () (_ BitVec 64))
(declare-fun temp1058_79 () (_ BitVec 64))
(declare-fun temp1058_80 () (_ BitVec 64))
(declare-fun temp1058_81 () (_ BitVec 64))
(declare-fun temp1058_82 () (_ BitVec 64))
(declare-fun temp1058_83 () (_ BitVec 64))
(declare-fun temp1058_84 () (_ BitVec 64))
(declare-fun temp1058_85 () (_ BitVec 64))
(declare-fun temp1058_86 () (_ BitVec 64))
(declare-fun temp1058_87 () (_ BitVec 64))
(declare-fun temp1058_88 () (_ BitVec 64))
(declare-fun temp1058_89 () (_ BitVec 64))
(declare-fun temp1058_90 () (_ BitVec 64))
(declare-fun temp1058_91 () (_ BitVec 64))
(declare-fun temp1058_92 () (_ BitVec 64))
(declare-fun temp1058_93 () (_ BitVec 64))
(declare-fun temp1058_94 () (_ BitVec 64))
(declare-fun temp1058_95 () (_ BitVec 64))
(declare-fun temp1058_96 () (_ BitVec 64))
(declare-fun temp1058_97 () (_ BitVec 64))
(declare-fun temp1058_98 () (_ BitVec 64))
(declare-fun temp1058_99 () (_ BitVec 64))
(declare-fun temp1058_100 () (_ BitVec 64))
(declare-fun temp1058_101 () (_ BitVec 64))
(declare-fun temp1058_102 () (_ BitVec 64))
(declare-fun temp1058_103 () (_ BitVec 64))
(declare-fun temp1058_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp1058_105 () (_ BitVec 64))
(declare-fun temp1058_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp1058_107 () (_ BitVec 64))
(declare-fun temp1058_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1058_109 () (_ BitVec 64))
(declare-fun temp1058_110 () (_ BitVec 64))
(declare-fun temp1058_111 () (_ BitVec 64))
(declare-fun temp1058_112 () (_ BitVec 64))
(declare-fun temp1058_113 () (_ BitVec 64))
(declare-fun temp1058_114 () (_ BitVec 64))
(declare-fun temp1058_115 () (_ BitVec 64))
(declare-fun temp1058_116 () (_ BitVec 64))
(declare-fun temp1058_117 () (_ BitVec 64))
(declare-fun temp1058_118 () (_ BitVec 64))
(declare-fun temp1058_119 () (_ BitVec 64))
(declare-fun temp1058_120 () (_ BitVec 64))
(declare-fun temp1058_121 () (_ BitVec 64))
(declare-fun temp1058_122 () (_ BitVec 64))
(declare-fun temp1058_123 () (_ BitVec 64))
(declare-fun temp1058_124 () (_ BitVec 64))
(declare-fun temp1058_126 () (_ BitVec 64))
(declare-fun temp1058_127 () (_ BitVec 64))
(declare-fun temp1058_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp1058_128 () (_ BitVec 64))
(declare-fun temp1058_129 () (_ BitVec 64))
(declare-fun temp1058_131 () (_ BitVec 64))
(declare-fun temp1058_132 () (_ BitVec 64))
(declare-fun temp1058_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp1058_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp1058_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp1058_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp1058_136 () (_ BitVec 64))
(declare-fun temp1058_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp1058_139 () (_ BitVec 64))
(declare-fun temp1058_140 () (_ BitVec 64))
(declare-fun temp1058_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp1058_141 () (_ BitVec 64))
(declare-fun temp1058_143 () (_ BitVec 64))
(declare-fun temp1058_144 () (_ BitVec 64))
(declare-fun temp1058_142 () (_ BitVec 64))
(declare-fun temp1058_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp1058_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp1058_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp1058_148 () (_ BitVec 64))
(declare-fun temp1058_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp1058_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp1058_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp1058_152 () (_ BitVec 64))
(declare-fun var1523134 () (_ BitVec 64))
(declare-fun temp1058_153 () (_ BitVec 64))
(declare-fun temp1058_154 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun temp1058_155 () (_ BitVec 64))
(assert (= temp1058_1 #x0000000000000002))
(assert (= var989741 temp1058_1))
(assert (= temp1058_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp1058_2)))
(assert (= temp1058_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp1058_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp1058_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp1058_4)))
(assert (= temp1058_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp1058_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp1058_6 #x0000000000000000))
(assert (= var989776 temp1058_6))
(assert (= temp1058_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp1058_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1058_8 #x0000000000000001))
(assert (= var989810 temp1058_8))
(assert (= temp1058_10 #x0000000000000000))
(assert (= temp1058_9 temp1058_10))
(assert (= temp1058_12 #x0000000000000002))
(assert (= temp1058_11 temp1058_12))
(assert (= temp1058_13 #x0000000000000000))
(assert (= var1387902 temp1058_13))
(assert (= temp1058_14 #x0000000000000001))
(assert (= var1387923 temp1058_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp1058_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp1058_15)))
(assert (= temp1058_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1058_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1058_17 #x0000000000000000))
(assert (= var1521661 temp1058_17))
(assert (= temp1058_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp1058_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1058_19 #x0000000000000000))
(assert (= var1521706 temp1058_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp1058_20 #x0000000000000000))
(assert (= temp1058_21 temp1058_20))
(assert (= temp1058_22 (select ARGNAME_padding_NAMEEND_VAL temp1058_21)))
(assert (= temp1058_23 #x0000000000000001))
(assert (= temp1058_24 temp1058_23))
(assert (= temp1058_25 (select ARGNAME_padding_NAMEEND_VAL temp1058_24)))
(assert (= temp1058_26 #x0000000000000002))
(assert (= temp1058_27 temp1058_26))
(assert (= temp1058_28 (select ARGNAME_padding_NAMEEND_VAL temp1058_27)))
(assert (= temp1058_29 #x0000000000000003))
(assert (= temp1058_30 temp1058_29))
(assert (= temp1058_31 (select ARGNAME_padding_NAMEEND_VAL temp1058_30)))
(assert (= temp1058_32 #x0000000000000004))
(assert (= temp1058_33 temp1058_32))
(assert (= temp1058_34 (select ARGNAME_padding_NAMEEND_VAL temp1058_33)))
(assert (= temp1058_35 #x0000000000000005))
(assert (= temp1058_36 temp1058_35))
(assert (= temp1058_37 (select ARGNAME_padding_NAMEEND_VAL temp1058_36)))
(assert (= temp1058_38 #x0000000000000000))
(assert (= temp1058_39 #x0000000000000000))
(assert (= temp1058_40 temp1058_39))
(assert (= temp1058_41 (select ARGNAME_padding_NAMEEND_VAL temp1058_40)))
(assert (= temp1058_42 #x0000000000000000))
(assert (= temp1058_43 #x0000000000000001))
(assert (= temp1058_44 temp1058_43))
(assert (= temp1058_45 (select ARGNAME_padding_NAMEEND_VAL temp1058_44)))
(assert (= temp1058_46 #x0000000000000000))
(assert (= temp1058_47 #x0000000000000002))
(assert (= temp1058_48 temp1058_47))
(assert (= temp1058_49 (select ARGNAME_padding_NAMEEND_VAL temp1058_48)))
(assert (= temp1058_50 #x0000000000000000))
(assert (= temp1058_51 #x0000000000000003))
(assert (= temp1058_52 temp1058_51))
(assert (= temp1058_53 (select ARGNAME_padding_NAMEEND_VAL temp1058_52)))
(assert (= temp1058_54 #x0000000000000000))
(assert (= temp1058_55 #x0000000000000004))
(assert (= temp1058_56 temp1058_55))
(assert (= temp1058_57 (select ARGNAME_padding_NAMEEND_VAL temp1058_56)))
(assert (= temp1058_58 #x0000000000000000))
(assert (= temp1058_59 #x0000000000000005))
(assert (= temp1058_60 temp1058_59))
(assert (= temp1058_61 (select ARGNAME_padding_NAMEEND_VAL temp1058_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp1058_41 temp1058_38)
             (bvslt temp1058_45 temp1058_42)
             (bvslt temp1058_49 temp1058_46)
             (bvslt temp1058_53 temp1058_50)
             (bvslt temp1058_57 temp1058_54)
             (bvslt temp1058_61 temp1058_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1058_62 #x0000000000000000))
(assert (= var2240290 temp1058_62))
(assert (= temp1058_63 #x0000000000000000))
(assert (= temp1058_64 temp1058_63))
(assert (= temp1058_65 (select ARGNAME_stride_NAMEEND_VAL temp1058_64)))
(assert (= temp1058_66 #x0000000000000001))
(assert (= temp1058_67 temp1058_66))
(assert (= temp1058_68 (select ARGNAME_stride_NAMEEND_VAL temp1058_67)))
(assert (= temp1058_69 #x0000000000000002))
(assert (= temp1058_70 temp1058_69))
(assert (= temp1058_71 (select ARGNAME_stride_NAMEEND_VAL temp1058_70)))
(assert (= temp1058_72 #x0000000000000003))
(assert (= temp1058_73 temp1058_72))
(assert (= temp1058_74 (select ARGNAME_stride_NAMEEND_VAL temp1058_73)))
(assert (= temp1058_75 #x0000000000000004))
(assert (= temp1058_76 temp1058_75))
(assert (= temp1058_77 (select ARGNAME_stride_NAMEEND_VAL temp1058_76)))
(assert (= temp1058_78 #x0000000000000005))
(assert (= temp1058_79 temp1058_78))
(assert (= temp1058_80 (select ARGNAME_stride_NAMEEND_VAL temp1058_79)))
(assert (= temp1058_81 #x0000000000000000))
(assert (= temp1058_82 #x0000000000000000))
(assert (= temp1058_83 temp1058_82))
(assert (= temp1058_84 (select ARGNAME_stride_NAMEEND_VAL temp1058_83)))
(assert (= temp1058_85 #x0000000000000000))
(assert (= temp1058_86 #x0000000000000001))
(assert (= temp1058_87 temp1058_86))
(assert (= temp1058_88 (select ARGNAME_stride_NAMEEND_VAL temp1058_87)))
(assert (= temp1058_89 #x0000000000000000))
(assert (= temp1058_90 #x0000000000000002))
(assert (= temp1058_91 temp1058_90))
(assert (= temp1058_92 (select ARGNAME_stride_NAMEEND_VAL temp1058_91)))
(assert (= temp1058_93 #x0000000000000000))
(assert (= temp1058_94 #x0000000000000003))
(assert (= temp1058_95 temp1058_94))
(assert (= temp1058_96 (select ARGNAME_stride_NAMEEND_VAL temp1058_95)))
(assert (= temp1058_97 #x0000000000000000))
(assert (= temp1058_98 #x0000000000000004))
(assert (= temp1058_99 temp1058_98))
(assert (= temp1058_100 (select ARGNAME_stride_NAMEEND_VAL temp1058_99)))
(assert (= temp1058_101 #x0000000000000000))
(assert (= temp1058_102 #x0000000000000005))
(assert (= temp1058_103 temp1058_102))
(assert (= temp1058_104 (select ARGNAME_stride_NAMEEND_VAL temp1058_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp1058_84 temp1058_81)
             (bvsle temp1058_88 temp1058_85)
             (bvsle temp1058_92 temp1058_89)
             (bvsle temp1058_96 temp1058_93)
             (bvsle temp1058_100 temp1058_97)
             (bvsle temp1058_104 temp1058_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1058_105 #x0000000000000000))
(assert (= var2240311 temp1058_105))
(assert (= temp1058_106 #x0000000000000000))
(assert (= var2228402 temp1058_106))
(assert (= temp1058_107 #x0000000000000000))
(assert (= temp1058_108 temp1058_107))
(assert (= temp1058_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1058_108)))
(assert (= temp1058_110 #x0000000000000001))
(assert (= temp1058_111 temp1058_110))
(assert (= temp1058_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1058_111)))
(assert (= temp1058_113 #x0000000000000002))
(assert (= temp1058_114 temp1058_113))
(assert (= temp1058_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1058_114)))
(assert (= temp1058_116 #x0000000000000003))
(assert (= temp1058_117 temp1058_116))
(assert (= temp1058_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1058_117)))
(assert (= temp1058_119 #x0000000000000004))
(assert (= temp1058_120 temp1058_119))
(assert (= temp1058_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1058_120)))
(assert (= temp1058_122 #x0000000000000005))
(assert (= temp1058_123 temp1058_122))
(assert (= temp1058_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1058_123)))
(assert (= temp1058_126 var2228402))
(assert (= temp1058_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1058_126)))
(assert (= temp1058_125 temp1058_127))
(assert (= var2240356
   (ite (bvslt temp1058_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1058_128 #x0000000000000000))
(assert (= var2240356 temp1058_128))
(assert (= temp1058_129 #x0000000000000000))
(assert (= var2228402 temp1058_129))
(assert (= temp1058_131 var2228402))
(assert (= temp1058_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1058_131)))
(assert (= temp1058_130 temp1058_132))
(assert (= var2240378 (bvsmod temp1058_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1058_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp1058_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1058_134 #x0000000000000001))
(assert (= var2240379 temp1058_134))
(assert (= var2240398 var2240288))
(assert (= temp1058_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp1058_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1058_136 #x0000000000000001))
(assert (= var2240399 temp1058_136))
(assert (= temp1058_137 #x0000000000000001))
(assert (= var2229290 temp1058_137))
(assert (= temp1058_139 var2229290))
(assert (= temp1058_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1058_139)))
(assert (= temp1058_138 temp1058_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp1058_138)))
(assert (= temp1058_141 #x0000000000000000))
(assert (= var2228402 temp1058_141))
(assert (= temp1058_143 var2228402))
(assert (= temp1058_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1058_143)))
(assert (= temp1058_142 temp1058_144))
(assert (= temp1058_145 #x0000000000000002))
(assert (= var2503529 temp1058_145))
(assert (= temp1058_146 #x0000000000000001))
(assert (= var2240569 temp1058_146))
(assert (= temp1058_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1058_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1058_148 #x0000000000000001))
(assert (= var1521778 temp1058_148))
(assert (= temp1058_149 #x0000000000000001))
(assert (= var1521908 temp1058_149))
(assert (= var4010473 var1521908))
(assert (= temp1058_150 #x0000000000000000))
(assert (= var4210495 temp1058_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp1058_151 #x0000000000000002))
(assert (= var4339331 temp1058_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4469136 var1521921))
(assert (= var4731280 var1521921))
(assert (= temp1058_152 #x0000000000000001))
(assert (= var1523134
   (ite (= ARGNAME_groups_NAMEEND temp1058_152)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1058_153 #x0000000000000001))
(assert (= var1523134 temp1058_153))
(assert (= temp1058_154 #x0000000000000002))
(assert (= var5060227 temp1058_154))
(assert (= temp1058_155 #x0000000000000001))
(assert (= var1521778 temp1058_155))
(model-add temp1058_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp1058_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp1058_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1058_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp1058_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1058_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






