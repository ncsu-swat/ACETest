(declare-fun temp35_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp35_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp35_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp35_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp35_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp35_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp35_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp35_8 () (_ BitVec 64))
(declare-fun temp35_10 () (_ BitVec 64))
(declare-fun temp35_9 () (_ BitVec 64))
(declare-fun temp35_12 () (_ BitVec 64))
(declare-fun temp35_11 () (_ BitVec 64))
(declare-fun temp35_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp35_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp35_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp35_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp35_17 () (_ BitVec 64))
(declare-fun temp35_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp35_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp35_20 () (_ BitVec 64))
(declare-fun temp35_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp35_22 () (_ BitVec 64))
(declare-fun temp35_23 () (_ BitVec 64))
(declare-fun temp35_24 () (_ BitVec 64))
(declare-fun temp35_25 () (_ BitVec 64))
(declare-fun temp35_26 () (_ BitVec 64))
(declare-fun temp35_27 () (_ BitVec 64))
(declare-fun temp35_28 () (_ BitVec 64))
(declare-fun temp35_29 () (_ BitVec 64))
(declare-fun temp35_30 () (_ BitVec 64))
(declare-fun temp35_31 () (_ BitVec 64))
(declare-fun temp35_32 () (_ BitVec 64))
(declare-fun temp35_33 () (_ BitVec 64))
(declare-fun temp35_34 () (_ BitVec 64))
(declare-fun temp35_35 () (_ BitVec 64))
(declare-fun temp35_36 () (_ BitVec 64))
(declare-fun temp35_37 () (_ BitVec 64))
(declare-fun temp35_38 () (_ BitVec 64))
(declare-fun temp35_39 () (_ BitVec 64))
(declare-fun temp35_40 () (_ BitVec 64))
(declare-fun temp35_41 () (_ BitVec 64))
(declare-fun temp35_42 () (_ BitVec 64))
(declare-fun temp35_43 () (_ BitVec 64))
(declare-fun temp35_44 () (_ BitVec 64))
(declare-fun temp35_45 () (_ BitVec 64))
(declare-fun temp35_46 () (_ BitVec 64))
(declare-fun temp35_47 () (_ BitVec 64))
(declare-fun temp35_48 () (_ BitVec 64))
(declare-fun temp35_49 () (_ BitVec 64))
(declare-fun temp35_50 () (_ BitVec 64))
(declare-fun temp35_51 () (_ BitVec 64))
(declare-fun temp35_52 () (_ BitVec 64))
(declare-fun temp35_53 () (_ BitVec 64))
(declare-fun temp35_54 () (_ BitVec 64))
(declare-fun temp35_55 () (_ BitVec 64))
(declare-fun temp35_56 () (_ BitVec 64))
(declare-fun temp35_57 () (_ BitVec 64))
(declare-fun temp35_58 () (_ BitVec 64))
(declare-fun temp35_59 () (_ BitVec 64))
(declare-fun temp35_60 () (_ BitVec 64))
(declare-fun temp35_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp35_62 () (_ BitVec 64))
(declare-fun temp35_63 () (_ BitVec 64))
(declare-fun temp35_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp35_65 () (_ BitVec 64))
(declare-fun temp35_66 () (_ BitVec 64))
(declare-fun temp35_67 () (_ BitVec 64))
(declare-fun temp35_68 () (_ BitVec 64))
(declare-fun temp35_69 () (_ BitVec 64))
(declare-fun temp35_70 () (_ BitVec 64))
(declare-fun temp35_71 () (_ BitVec 64))
(declare-fun temp35_72 () (_ BitVec 64))
(declare-fun temp35_73 () (_ BitVec 64))
(declare-fun temp35_74 () (_ BitVec 64))
(declare-fun temp35_75 () (_ BitVec 64))
(declare-fun temp35_76 () (_ BitVec 64))
(declare-fun temp35_77 () (_ BitVec 64))
(declare-fun temp35_78 () (_ BitVec 64))
(declare-fun temp35_79 () (_ BitVec 64))
(declare-fun temp35_80 () (_ BitVec 64))
(declare-fun temp35_81 () (_ BitVec 64))
(declare-fun temp35_82 () (_ BitVec 64))
(declare-fun temp35_83 () (_ BitVec 64))
(declare-fun temp35_84 () (_ BitVec 64))
(declare-fun temp35_85 () (_ BitVec 64))
(declare-fun temp35_86 () (_ BitVec 64))
(declare-fun temp35_87 () (_ BitVec 64))
(declare-fun temp35_88 () (_ BitVec 64))
(declare-fun temp35_89 () (_ BitVec 64))
(declare-fun temp35_90 () (_ BitVec 64))
(declare-fun temp35_91 () (_ BitVec 64))
(declare-fun temp35_92 () (_ BitVec 64))
(declare-fun temp35_93 () (_ BitVec 64))
(declare-fun temp35_94 () (_ BitVec 64))
(declare-fun temp35_95 () (_ BitVec 64))
(declare-fun temp35_96 () (_ BitVec 64))
(declare-fun temp35_97 () (_ BitVec 64))
(declare-fun temp35_98 () (_ BitVec 64))
(declare-fun temp35_99 () (_ BitVec 64))
(declare-fun temp35_100 () (_ BitVec 64))
(declare-fun temp35_101 () (_ BitVec 64))
(declare-fun temp35_102 () (_ BitVec 64))
(declare-fun temp35_103 () (_ BitVec 64))
(declare-fun temp35_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp35_105 () (_ BitVec 64))
(declare-fun temp35_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp35_107 () (_ BitVec 64))
(declare-fun temp35_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp35_109 () (_ BitVec 64))
(declare-fun temp35_110 () (_ BitVec 64))
(declare-fun temp35_111 () (_ BitVec 64))
(declare-fun temp35_112 () (_ BitVec 64))
(declare-fun temp35_113 () (_ BitVec 64))
(declare-fun temp35_114 () (_ BitVec 64))
(declare-fun temp35_115 () (_ BitVec 64))
(declare-fun temp35_116 () (_ BitVec 64))
(declare-fun temp35_117 () (_ BitVec 64))
(declare-fun temp35_118 () (_ BitVec 64))
(declare-fun temp35_119 () (_ BitVec 64))
(declare-fun temp35_120 () (_ BitVec 64))
(declare-fun temp35_121 () (_ BitVec 64))
(declare-fun temp35_122 () (_ BitVec 64))
(declare-fun temp35_123 () (_ BitVec 64))
(declare-fun temp35_124 () (_ BitVec 64))
(declare-fun temp35_126 () (_ BitVec 64))
(declare-fun temp35_127 () (_ BitVec 64))
(declare-fun temp35_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp35_128 () (_ BitVec 64))
(declare-fun temp35_129 () (_ BitVec 64))
(declare-fun temp35_131 () (_ BitVec 64))
(declare-fun temp35_132 () (_ BitVec 64))
(declare-fun temp35_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp35_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp35_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp35_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp35_136 () (_ BitVec 64))
(declare-fun temp35_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp35_139 () (_ BitVec 64))
(declare-fun temp35_140 () (_ BitVec 64))
(declare-fun temp35_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp35_141 () (_ BitVec 64))
(declare-fun temp35_143 () (_ BitVec 64))
(declare-fun temp35_144 () (_ BitVec 64))
(declare-fun temp35_142 () (_ BitVec 64))
(declare-fun temp35_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp35_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp35_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp35_148 () (_ BitVec 64))
(declare-fun temp35_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp35_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp35_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var1522108 () (_ BitVec 64))
(declare-fun temp35_152 () (_ BitVec 64))
(declare-fun var1522109 () (_ BitVec 64))
(declare-fun var5717837 () (_ BitVec 64))
(declare-fun temp35_154 () (_ BitVec 64))
(declare-fun temp35_153 () (_ BitVec 64))
(declare-fun temp35_155 () (_ BitVec 64))
(declare-fun var6295018 () (_ BitVec 64))
(declare-fun temp35_157 () (_ BitVec 64))
(declare-fun temp35_156 () (_ BitVec 64))
(declare-fun temp35_158 () (_ BitVec 64))
(assert (= temp35_1 #x0000000000000002))
(assert (= var989741 temp35_1))
(assert (= temp35_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp35_2)))
(assert (= temp35_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp35_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp35_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp35_4)))
(assert (= temp35_5 #x0000000000000000))
(assert (= var989775 (ite (= var989774 temp35_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp35_6 #x0000000000000000))
(assert (= var989776 temp35_6))
(assert (= temp35_7 #x0000000000000000))
(assert (= var989810 (ite (= var989773 temp35_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp35_8 #x0000000000000001))
(assert (= var989810 temp35_8))
(assert (= temp35_10 #x0000000000000000))
(assert (= temp35_9 temp35_10))
(assert (= temp35_12 #x0000000000000002))
(assert (= temp35_11 temp35_12))
(assert (= temp35_13 #x0000000000000000))
(assert (= var1387902 temp35_13))
(assert (= temp35_14 #x0000000000000001))
(assert (= var1387923 temp35_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp35_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp35_15)))
(assert (= temp35_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp35_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp35_17 #x0000000000000000))
(assert (= var1521661 temp35_17))
(assert (= temp35_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp35_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp35_19 #x0000000000000000))
(assert (= var1521706 temp35_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp35_20 #x0000000000000000))
(assert (= temp35_21 temp35_20))
(assert (= temp35_22 (select ARGNAME_padding_NAMEEND_VAL temp35_21)))
(assert (= temp35_23 #x0000000000000001))
(assert (= temp35_24 temp35_23))
(assert (= temp35_25 (select ARGNAME_padding_NAMEEND_VAL temp35_24)))
(assert (= temp35_26 #x0000000000000002))
(assert (= temp35_27 temp35_26))
(assert (= temp35_28 (select ARGNAME_padding_NAMEEND_VAL temp35_27)))
(assert (= temp35_29 #x0000000000000003))
(assert (= temp35_30 temp35_29))
(assert (= temp35_31 (select ARGNAME_padding_NAMEEND_VAL temp35_30)))
(assert (= temp35_32 #x0000000000000004))
(assert (= temp35_33 temp35_32))
(assert (= temp35_34 (select ARGNAME_padding_NAMEEND_VAL temp35_33)))
(assert (= temp35_35 #x0000000000000005))
(assert (= temp35_36 temp35_35))
(assert (= temp35_37 (select ARGNAME_padding_NAMEEND_VAL temp35_36)))
(assert (= temp35_38 #x0000000000000000))
(assert (= temp35_39 #x0000000000000000))
(assert (= temp35_40 temp35_39))
(assert (= temp35_41 (select ARGNAME_padding_NAMEEND_VAL temp35_40)))
(assert (= temp35_42 #x0000000000000000))
(assert (= temp35_43 #x0000000000000001))
(assert (= temp35_44 temp35_43))
(assert (= temp35_45 (select ARGNAME_padding_NAMEEND_VAL temp35_44)))
(assert (= temp35_46 #x0000000000000000))
(assert (= temp35_47 #x0000000000000002))
(assert (= temp35_48 temp35_47))
(assert (= temp35_49 (select ARGNAME_padding_NAMEEND_VAL temp35_48)))
(assert (= temp35_50 #x0000000000000000))
(assert (= temp35_51 #x0000000000000003))
(assert (= temp35_52 temp35_51))
(assert (= temp35_53 (select ARGNAME_padding_NAMEEND_VAL temp35_52)))
(assert (= temp35_54 #x0000000000000000))
(assert (= temp35_55 #x0000000000000004))
(assert (= temp35_56 temp35_55))
(assert (= temp35_57 (select ARGNAME_padding_NAMEEND_VAL temp35_56)))
(assert (= temp35_58 #x0000000000000000))
(assert (= temp35_59 #x0000000000000005))
(assert (= temp35_60 temp35_59))
(assert (= temp35_61 (select ARGNAME_padding_NAMEEND_VAL temp35_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp35_41 temp35_38)
             (bvslt temp35_45 temp35_42)
             (bvslt temp35_49 temp35_46)
             (bvslt temp35_53 temp35_50)
             (bvslt temp35_57 temp35_54)
             (bvslt temp35_61 temp35_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp35_62 #x0000000000000000))
(assert (= var2240290 temp35_62))
(assert (= temp35_63 #x0000000000000000))
(assert (= temp35_64 temp35_63))
(assert (= temp35_65 (select ARGNAME_stride_NAMEEND_VAL temp35_64)))
(assert (= temp35_66 #x0000000000000001))
(assert (= temp35_67 temp35_66))
(assert (= temp35_68 (select ARGNAME_stride_NAMEEND_VAL temp35_67)))
(assert (= temp35_69 #x0000000000000002))
(assert (= temp35_70 temp35_69))
(assert (= temp35_71 (select ARGNAME_stride_NAMEEND_VAL temp35_70)))
(assert (= temp35_72 #x0000000000000003))
(assert (= temp35_73 temp35_72))
(assert (= temp35_74 (select ARGNAME_stride_NAMEEND_VAL temp35_73)))
(assert (= temp35_75 #x0000000000000004))
(assert (= temp35_76 temp35_75))
(assert (= temp35_77 (select ARGNAME_stride_NAMEEND_VAL temp35_76)))
(assert (= temp35_78 #x0000000000000005))
(assert (= temp35_79 temp35_78))
(assert (= temp35_80 (select ARGNAME_stride_NAMEEND_VAL temp35_79)))
(assert (= temp35_81 #x0000000000000000))
(assert (= temp35_82 #x0000000000000000))
(assert (= temp35_83 temp35_82))
(assert (= temp35_84 (select ARGNAME_stride_NAMEEND_VAL temp35_83)))
(assert (= temp35_85 #x0000000000000000))
(assert (= temp35_86 #x0000000000000001))
(assert (= temp35_87 temp35_86))
(assert (= temp35_88 (select ARGNAME_stride_NAMEEND_VAL temp35_87)))
(assert (= temp35_89 #x0000000000000000))
(assert (= temp35_90 #x0000000000000002))
(assert (= temp35_91 temp35_90))
(assert (= temp35_92 (select ARGNAME_stride_NAMEEND_VAL temp35_91)))
(assert (= temp35_93 #x0000000000000000))
(assert (= temp35_94 #x0000000000000003))
(assert (= temp35_95 temp35_94))
(assert (= temp35_96 (select ARGNAME_stride_NAMEEND_VAL temp35_95)))
(assert (= temp35_97 #x0000000000000000))
(assert (= temp35_98 #x0000000000000004))
(assert (= temp35_99 temp35_98))
(assert (= temp35_100 (select ARGNAME_stride_NAMEEND_VAL temp35_99)))
(assert (= temp35_101 #x0000000000000000))
(assert (= temp35_102 #x0000000000000005))
(assert (= temp35_103 temp35_102))
(assert (= temp35_104 (select ARGNAME_stride_NAMEEND_VAL temp35_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp35_84 temp35_81)
             (bvsle temp35_88 temp35_85)
             (bvsle temp35_92 temp35_89)
             (bvsle temp35_96 temp35_93)
             (bvsle temp35_100 temp35_97)
             (bvsle temp35_104 temp35_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp35_105 #x0000000000000000))
(assert (= var2240311 temp35_105))
(assert (= temp35_106 #x0000000000000000))
(assert (= var2228402 temp35_106))
(assert (= temp35_107 #x0000000000000000))
(assert (= temp35_108 temp35_107))
(assert (= temp35_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp35_108)))
(assert (= temp35_110 #x0000000000000001))
(assert (= temp35_111 temp35_110))
(assert (= temp35_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp35_111)))
(assert (= temp35_113 #x0000000000000002))
(assert (= temp35_114 temp35_113))
(assert (= temp35_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp35_114)))
(assert (= temp35_116 #x0000000000000003))
(assert (= temp35_117 temp35_116))
(assert (= temp35_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp35_117)))
(assert (= temp35_119 #x0000000000000004))
(assert (= temp35_120 temp35_119))
(assert (= temp35_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp35_120)))
(assert (= temp35_122 #x0000000000000005))
(assert (= temp35_123 temp35_122))
(assert (= temp35_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp35_123)))
(assert (= temp35_126 var2228402))
(assert (= temp35_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp35_126)))
(assert (= temp35_125 temp35_127))
(assert (= var2240356
   (ite (bvslt temp35_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp35_128 #x0000000000000000))
(assert (= var2240356 temp35_128))
(assert (= temp35_129 #x0000000000000000))
(assert (= var2228402 temp35_129))
(assert (= temp35_131 var2228402))
(assert (= temp35_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp35_131)))
(assert (= temp35_130 temp35_132))
(assert (= var2240378 (bvsmod temp35_130 ARGNAME_groups_NAMEEND)))
(assert (= temp35_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp35_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp35_134 #x0000000000000001))
(assert (= var2240379 temp35_134))
(assert (= var2240398 var2240288))
(assert (= temp35_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp35_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp35_136 #x0000000000000001))
(assert (= var2240399 temp35_136))
(assert (= temp35_137 #x0000000000000001))
(assert (= var2229290 temp35_137))
(assert (= temp35_139 var2229290))
(assert (= temp35_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp35_139)))
(assert (= temp35_138 temp35_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp35_138)))
(assert (= temp35_141 #x0000000000000000))
(assert (= var2228402 temp35_141))
(assert (= temp35_143 var2228402))
(assert (= temp35_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp35_143)))
(assert (= temp35_142 temp35_144))
(assert (= temp35_145 #x0000000000000002))
(assert (= var2503529 temp35_145))
(assert (= temp35_146 #x0000000000000001))
(assert (= var2240569 temp35_146))
(assert (= temp35_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp35_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp35_148 #x0000000000000001))
(assert (= var1521778 temp35_148))
(assert (= temp35_149 #x0000000000000001))
(assert (= var1521908 temp35_149))
(assert (= var4010473 var1521908))
(assert (= temp35_150 #x0000000000000000))
(assert (= var4210495 temp35_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp35_151 #x0000000000000002))
(assert (= var4339331 temp35_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4993424 var1521921))
(assert (= var1522108 var1521633))
(assert (= temp35_152 #x0000000000000000))
(assert (= var1522109
   (ite (distinct var1522108 temp35_152) #x0000000000000001 #x0000000000000000)))
(assert (= var5717837 var1522109))
(assert (= temp35_154 #x0000000000000001))
(assert (= temp35_153 temp35_154))
(assert (= temp35_155 #x0000000000000001))
(assert (= var6295018 temp35_155))
(assert (= temp35_157 #xffffffffffffffff))
(assert (= temp35_156 temp35_157))
(assert (= temp35_158 #x0000000000000001))
(assert (= var1521778 temp35_158))
(model-add temp35_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp35_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp35_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp35_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp35_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp35_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






