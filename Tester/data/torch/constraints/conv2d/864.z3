(declare-fun temp1150_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp1150_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp1150_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp1150_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp1150_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp1150_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp1150_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp1150_8 () (_ BitVec 64))
(declare-fun temp1150_10 () (_ BitVec 64))
(declare-fun temp1150_9 () (_ BitVec 64))
(declare-fun temp1150_12 () (_ BitVec 64))
(declare-fun temp1150_11 () (_ BitVec 64))
(declare-fun temp1150_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp1150_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp1150_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp1150_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp1150_17 () (_ BitVec 64))
(declare-fun temp1150_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp1150_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp1150_20 () (_ BitVec 64))
(declare-fun temp1150_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1150_22 () (_ BitVec 64))
(declare-fun temp1150_23 () (_ BitVec 64))
(declare-fun temp1150_24 () (_ BitVec 64))
(declare-fun temp1150_25 () (_ BitVec 64))
(declare-fun temp1150_26 () (_ BitVec 64))
(declare-fun temp1150_27 () (_ BitVec 64))
(declare-fun temp1150_28 () (_ BitVec 64))
(declare-fun temp1150_29 () (_ BitVec 64))
(declare-fun temp1150_30 () (_ BitVec 64))
(declare-fun temp1150_31 () (_ BitVec 64))
(declare-fun temp1150_32 () (_ BitVec 64))
(declare-fun temp1150_33 () (_ BitVec 64))
(declare-fun temp1150_34 () (_ BitVec 64))
(declare-fun temp1150_35 () (_ BitVec 64))
(declare-fun temp1150_36 () (_ BitVec 64))
(declare-fun temp1150_37 () (_ BitVec 64))
(declare-fun temp1150_38 () (_ BitVec 64))
(declare-fun temp1150_39 () (_ BitVec 64))
(declare-fun temp1150_40 () (_ BitVec 64))
(declare-fun temp1150_41 () (_ BitVec 64))
(declare-fun temp1150_42 () (_ BitVec 64))
(declare-fun temp1150_43 () (_ BitVec 64))
(declare-fun temp1150_44 () (_ BitVec 64))
(declare-fun temp1150_45 () (_ BitVec 64))
(declare-fun temp1150_46 () (_ BitVec 64))
(declare-fun temp1150_47 () (_ BitVec 64))
(declare-fun temp1150_48 () (_ BitVec 64))
(declare-fun temp1150_49 () (_ BitVec 64))
(declare-fun temp1150_50 () (_ BitVec 64))
(declare-fun temp1150_51 () (_ BitVec 64))
(declare-fun temp1150_52 () (_ BitVec 64))
(declare-fun temp1150_53 () (_ BitVec 64))
(declare-fun temp1150_54 () (_ BitVec 64))
(declare-fun temp1150_55 () (_ BitVec 64))
(declare-fun temp1150_56 () (_ BitVec 64))
(declare-fun temp1150_57 () (_ BitVec 64))
(declare-fun temp1150_58 () (_ BitVec 64))
(declare-fun temp1150_59 () (_ BitVec 64))
(declare-fun temp1150_60 () (_ BitVec 64))
(declare-fun temp1150_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp1150_62 () (_ BitVec 64))
(declare-fun temp1150_63 () (_ BitVec 64))
(declare-fun temp1150_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1150_65 () (_ BitVec 64))
(declare-fun temp1150_66 () (_ BitVec 64))
(declare-fun temp1150_67 () (_ BitVec 64))
(declare-fun temp1150_68 () (_ BitVec 64))
(declare-fun temp1150_69 () (_ BitVec 64))
(declare-fun temp1150_70 () (_ BitVec 64))
(declare-fun temp1150_71 () (_ BitVec 64))
(declare-fun temp1150_72 () (_ BitVec 64))
(declare-fun temp1150_73 () (_ BitVec 64))
(declare-fun temp1150_74 () (_ BitVec 64))
(declare-fun temp1150_75 () (_ BitVec 64))
(declare-fun temp1150_76 () (_ BitVec 64))
(declare-fun temp1150_77 () (_ BitVec 64))
(declare-fun temp1150_78 () (_ BitVec 64))
(declare-fun temp1150_79 () (_ BitVec 64))
(declare-fun temp1150_80 () (_ BitVec 64))
(declare-fun temp1150_81 () (_ BitVec 64))
(declare-fun temp1150_82 () (_ BitVec 64))
(declare-fun temp1150_83 () (_ BitVec 64))
(declare-fun temp1150_84 () (_ BitVec 64))
(declare-fun temp1150_85 () (_ BitVec 64))
(declare-fun temp1150_86 () (_ BitVec 64))
(declare-fun temp1150_87 () (_ BitVec 64))
(declare-fun temp1150_88 () (_ BitVec 64))
(declare-fun temp1150_89 () (_ BitVec 64))
(declare-fun temp1150_90 () (_ BitVec 64))
(declare-fun temp1150_91 () (_ BitVec 64))
(declare-fun temp1150_92 () (_ BitVec 64))
(declare-fun temp1150_93 () (_ BitVec 64))
(declare-fun temp1150_94 () (_ BitVec 64))
(declare-fun temp1150_95 () (_ BitVec 64))
(declare-fun temp1150_96 () (_ BitVec 64))
(declare-fun temp1150_97 () (_ BitVec 64))
(declare-fun temp1150_98 () (_ BitVec 64))
(declare-fun temp1150_99 () (_ BitVec 64))
(declare-fun temp1150_100 () (_ BitVec 64))
(declare-fun temp1150_101 () (_ BitVec 64))
(declare-fun temp1150_102 () (_ BitVec 64))
(declare-fun temp1150_103 () (_ BitVec 64))
(declare-fun temp1150_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp1150_105 () (_ BitVec 64))
(declare-fun temp1150_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp1150_107 () (_ BitVec 64))
(declare-fun temp1150_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1150_109 () (_ BitVec 64))
(declare-fun temp1150_110 () (_ BitVec 64))
(declare-fun temp1150_111 () (_ BitVec 64))
(declare-fun temp1150_112 () (_ BitVec 64))
(declare-fun temp1150_113 () (_ BitVec 64))
(declare-fun temp1150_114 () (_ BitVec 64))
(declare-fun temp1150_115 () (_ BitVec 64))
(declare-fun temp1150_116 () (_ BitVec 64))
(declare-fun temp1150_117 () (_ BitVec 64))
(declare-fun temp1150_118 () (_ BitVec 64))
(declare-fun temp1150_119 () (_ BitVec 64))
(declare-fun temp1150_120 () (_ BitVec 64))
(declare-fun temp1150_121 () (_ BitVec 64))
(declare-fun temp1150_122 () (_ BitVec 64))
(declare-fun temp1150_123 () (_ BitVec 64))
(declare-fun temp1150_124 () (_ BitVec 64))
(declare-fun temp1150_126 () (_ BitVec 64))
(declare-fun temp1150_127 () (_ BitVec 64))
(declare-fun temp1150_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp1150_128 () (_ BitVec 64))
(declare-fun temp1150_129 () (_ BitVec 64))
(declare-fun temp1150_131 () (_ BitVec 64))
(declare-fun temp1150_132 () (_ BitVec 64))
(declare-fun temp1150_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp1150_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp1150_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp1150_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp1150_136 () (_ BitVec 64))
(declare-fun temp1150_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp1150_139 () (_ BitVec 64))
(declare-fun temp1150_140 () (_ BitVec 64))
(declare-fun temp1150_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp1150_141 () (_ BitVec 64))
(declare-fun temp1150_143 () (_ BitVec 64))
(declare-fun temp1150_144 () (_ BitVec 64))
(declare-fun temp1150_142 () (_ BitVec 64))
(declare-fun temp1150_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp1150_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp1150_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp1150_148 () (_ BitVec 64))
(declare-fun temp1150_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp1150_150 () (_ BitVec 64))
(declare-fun var4404867 () (_ BitVec 64))
(declare-fun var4404869 () (_ BitVec 64))
(declare-fun var4470412 () (_ BitVec 64))
(declare-fun var4470413 () (_ BitVec 64))
(declare-fun var1522108 () (_ BitVec 64))
(declare-fun temp1150_151 () (_ BitVec 64))
(declare-fun var1522109 () (_ BitVec 64))
(declare-fun var5783373 () (_ BitVec 64))
(declare-fun temp1150_152 () (_ BitVec 64))
(assert (= temp1150_1 #x0000000000000002))
(assert (= var989741 temp1150_1))
(assert (= temp1150_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp1150_2)))
(assert (= temp1150_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp1150_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp1150_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp1150_4)))
(assert (= temp1150_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp1150_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp1150_6 #x0000000000000000))
(assert (= var989776 temp1150_6))
(assert (= temp1150_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp1150_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1150_8 #x0000000000000001))
(assert (= var989810 temp1150_8))
(assert (= temp1150_10 #x0000000000000000))
(assert (= temp1150_9 temp1150_10))
(assert (= temp1150_12 #x0000000000000002))
(assert (= temp1150_11 temp1150_12))
(assert (= temp1150_13 #x0000000000000000))
(assert (= var1387902 temp1150_13))
(assert (= temp1150_14 #x0000000000000001))
(assert (= var1387923 temp1150_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp1150_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp1150_15)))
(assert (= temp1150_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1150_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1150_17 #x0000000000000000))
(assert (= var1521661 temp1150_17))
(assert (= temp1150_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp1150_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1150_19 #x0000000000000000))
(assert (= var1521706 temp1150_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp1150_20 #x0000000000000000))
(assert (= temp1150_21 temp1150_20))
(assert (= temp1150_22 (select ARGNAME_padding_NAMEEND_VAL temp1150_21)))
(assert (= temp1150_23 #x0000000000000001))
(assert (= temp1150_24 temp1150_23))
(assert (= temp1150_25 (select ARGNAME_padding_NAMEEND_VAL temp1150_24)))
(assert (= temp1150_26 #x0000000000000002))
(assert (= temp1150_27 temp1150_26))
(assert (= temp1150_28 (select ARGNAME_padding_NAMEEND_VAL temp1150_27)))
(assert (= temp1150_29 #x0000000000000003))
(assert (= temp1150_30 temp1150_29))
(assert (= temp1150_31 (select ARGNAME_padding_NAMEEND_VAL temp1150_30)))
(assert (= temp1150_32 #x0000000000000004))
(assert (= temp1150_33 temp1150_32))
(assert (= temp1150_34 (select ARGNAME_padding_NAMEEND_VAL temp1150_33)))
(assert (= temp1150_35 #x0000000000000005))
(assert (= temp1150_36 temp1150_35))
(assert (= temp1150_37 (select ARGNAME_padding_NAMEEND_VAL temp1150_36)))
(assert (= temp1150_38 #x0000000000000000))
(assert (= temp1150_39 #x0000000000000000))
(assert (= temp1150_40 temp1150_39))
(assert (= temp1150_41 (select ARGNAME_padding_NAMEEND_VAL temp1150_40)))
(assert (= temp1150_42 #x0000000000000000))
(assert (= temp1150_43 #x0000000000000001))
(assert (= temp1150_44 temp1150_43))
(assert (= temp1150_45 (select ARGNAME_padding_NAMEEND_VAL temp1150_44)))
(assert (= temp1150_46 #x0000000000000000))
(assert (= temp1150_47 #x0000000000000002))
(assert (= temp1150_48 temp1150_47))
(assert (= temp1150_49 (select ARGNAME_padding_NAMEEND_VAL temp1150_48)))
(assert (= temp1150_50 #x0000000000000000))
(assert (= temp1150_51 #x0000000000000003))
(assert (= temp1150_52 temp1150_51))
(assert (= temp1150_53 (select ARGNAME_padding_NAMEEND_VAL temp1150_52)))
(assert (= temp1150_54 #x0000000000000000))
(assert (= temp1150_55 #x0000000000000004))
(assert (= temp1150_56 temp1150_55))
(assert (= temp1150_57 (select ARGNAME_padding_NAMEEND_VAL temp1150_56)))
(assert (= temp1150_58 #x0000000000000000))
(assert (= temp1150_59 #x0000000000000005))
(assert (= temp1150_60 temp1150_59))
(assert (= temp1150_61 (select ARGNAME_padding_NAMEEND_VAL temp1150_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp1150_41 temp1150_38)
             (bvslt temp1150_45 temp1150_42)
             (bvslt temp1150_49 temp1150_46)
             (bvslt temp1150_53 temp1150_50)
             (bvslt temp1150_57 temp1150_54)
             (bvslt temp1150_61 temp1150_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1150_62 #x0000000000000000))
(assert (= var2240290 temp1150_62))
(assert (= temp1150_63 #x0000000000000000))
(assert (= temp1150_64 temp1150_63))
(assert (= temp1150_65 (select ARGNAME_stride_NAMEEND_VAL temp1150_64)))
(assert (= temp1150_66 #x0000000000000001))
(assert (= temp1150_67 temp1150_66))
(assert (= temp1150_68 (select ARGNAME_stride_NAMEEND_VAL temp1150_67)))
(assert (= temp1150_69 #x0000000000000002))
(assert (= temp1150_70 temp1150_69))
(assert (= temp1150_71 (select ARGNAME_stride_NAMEEND_VAL temp1150_70)))
(assert (= temp1150_72 #x0000000000000003))
(assert (= temp1150_73 temp1150_72))
(assert (= temp1150_74 (select ARGNAME_stride_NAMEEND_VAL temp1150_73)))
(assert (= temp1150_75 #x0000000000000004))
(assert (= temp1150_76 temp1150_75))
(assert (= temp1150_77 (select ARGNAME_stride_NAMEEND_VAL temp1150_76)))
(assert (= temp1150_78 #x0000000000000005))
(assert (= temp1150_79 temp1150_78))
(assert (= temp1150_80 (select ARGNAME_stride_NAMEEND_VAL temp1150_79)))
(assert (= temp1150_81 #x0000000000000000))
(assert (= temp1150_82 #x0000000000000000))
(assert (= temp1150_83 temp1150_82))
(assert (= temp1150_84 (select ARGNAME_stride_NAMEEND_VAL temp1150_83)))
(assert (= temp1150_85 #x0000000000000000))
(assert (= temp1150_86 #x0000000000000001))
(assert (= temp1150_87 temp1150_86))
(assert (= temp1150_88 (select ARGNAME_stride_NAMEEND_VAL temp1150_87)))
(assert (= temp1150_89 #x0000000000000000))
(assert (= temp1150_90 #x0000000000000002))
(assert (= temp1150_91 temp1150_90))
(assert (= temp1150_92 (select ARGNAME_stride_NAMEEND_VAL temp1150_91)))
(assert (= temp1150_93 #x0000000000000000))
(assert (= temp1150_94 #x0000000000000003))
(assert (= temp1150_95 temp1150_94))
(assert (= temp1150_96 (select ARGNAME_stride_NAMEEND_VAL temp1150_95)))
(assert (= temp1150_97 #x0000000000000000))
(assert (= temp1150_98 #x0000000000000004))
(assert (= temp1150_99 temp1150_98))
(assert (= temp1150_100 (select ARGNAME_stride_NAMEEND_VAL temp1150_99)))
(assert (= temp1150_101 #x0000000000000000))
(assert (= temp1150_102 #x0000000000000005))
(assert (= temp1150_103 temp1150_102))
(assert (= temp1150_104 (select ARGNAME_stride_NAMEEND_VAL temp1150_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp1150_84 temp1150_81)
             (bvsle temp1150_88 temp1150_85)
             (bvsle temp1150_92 temp1150_89)
             (bvsle temp1150_96 temp1150_93)
             (bvsle temp1150_100 temp1150_97)
             (bvsle temp1150_104 temp1150_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1150_105 #x0000000000000000))
(assert (= var2240311 temp1150_105))
(assert (= temp1150_106 #x0000000000000000))
(assert (= var2228402 temp1150_106))
(assert (= temp1150_107 #x0000000000000000))
(assert (= temp1150_108 temp1150_107))
(assert (= temp1150_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1150_108)))
(assert (= temp1150_110 #x0000000000000001))
(assert (= temp1150_111 temp1150_110))
(assert (= temp1150_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1150_111)))
(assert (= temp1150_113 #x0000000000000002))
(assert (= temp1150_114 temp1150_113))
(assert (= temp1150_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1150_114)))
(assert (= temp1150_116 #x0000000000000003))
(assert (= temp1150_117 temp1150_116))
(assert (= temp1150_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1150_117)))
(assert (= temp1150_119 #x0000000000000004))
(assert (= temp1150_120 temp1150_119))
(assert (= temp1150_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1150_120)))
(assert (= temp1150_122 #x0000000000000005))
(assert (= temp1150_123 temp1150_122))
(assert (= temp1150_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1150_123)))
(assert (= temp1150_126 var2228402))
(assert (= temp1150_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1150_126)))
(assert (= temp1150_125 temp1150_127))
(assert (= var2240356
   (ite (bvslt temp1150_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1150_128 #x0000000000000000))
(assert (= var2240356 temp1150_128))
(assert (= temp1150_129 #x0000000000000000))
(assert (= var2228402 temp1150_129))
(assert (= temp1150_131 var2228402))
(assert (= temp1150_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1150_131)))
(assert (= temp1150_130 temp1150_132))
(assert (= var2240378 (bvsmod temp1150_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1150_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp1150_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1150_134 #x0000000000000001))
(assert (= var2240379 temp1150_134))
(assert (= var2240398 var2240288))
(assert (= temp1150_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp1150_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1150_136 #x0000000000000001))
(assert (= var2240399 temp1150_136))
(assert (= temp1150_137 #x0000000000000001))
(assert (= var2229290 temp1150_137))
(assert (= temp1150_139 var2229290))
(assert (= temp1150_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1150_139)))
(assert (= temp1150_138 temp1150_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp1150_138)))
(assert (= temp1150_141 #x0000000000000000))
(assert (= var2228402 temp1150_141))
(assert (= temp1150_143 var2228402))
(assert (= temp1150_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1150_143)))
(assert (= temp1150_142 temp1150_144))
(assert (= temp1150_145 #x0000000000000002))
(assert (= var2503529 temp1150_145))
(assert (= temp1150_146 #x0000000000000001))
(assert (= var2240569 temp1150_146))
(assert (= temp1150_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1150_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1150_148 #x0000000000000001))
(assert (= var1521778 temp1150_148))
(assert (= temp1150_149 #x0000000000000001))
(assert (= var1521908 temp1150_149))
(assert (= var4010473 var1521908))
(assert (= temp1150_150 #x0000000000000002))
(assert (= var4404867 temp1150_150))
(assert (= var4404869 (bvsub ARGNAME_weight_NAMEEND_DIM var4404867)))
(assert (= var4470412 var4404867))
(assert (= var4470413 var4404869))
(assert (= var1522108 var1521633))
(assert (= temp1150_151 #x0000000000000000))
(assert (= var1522109
   (ite (distinct var1522108 temp1150_151)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var5783373 var1522109))
(assert (= temp1150_152 #x0000000000000001))
(assert (= var1521778 temp1150_152))
(model-add temp1150_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp1150_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp1150_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1150_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp1150_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1150_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






