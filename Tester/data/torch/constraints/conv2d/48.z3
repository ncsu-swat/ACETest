(declare-fun temp62_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp62_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp62_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp62_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp62_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp62_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp62_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp62_8 () (_ BitVec 64))
(declare-fun temp62_10 () (_ BitVec 64))
(declare-fun temp62_9 () (_ BitVec 64))
(declare-fun temp62_12 () (_ BitVec 64))
(declare-fun temp62_11 () (_ BitVec 64))
(declare-fun temp62_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp62_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp62_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp62_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp62_17 () (_ BitVec 64))
(declare-fun temp62_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp62_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp62_20 () (_ BitVec 64))
(declare-fun temp62_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp62_22 () (_ BitVec 64))
(declare-fun temp62_23 () (_ BitVec 64))
(declare-fun temp62_24 () (_ BitVec 64))
(declare-fun temp62_25 () (_ BitVec 64))
(declare-fun temp62_26 () (_ BitVec 64))
(declare-fun temp62_27 () (_ BitVec 64))
(declare-fun temp62_28 () (_ BitVec 64))
(declare-fun temp62_29 () (_ BitVec 64))
(declare-fun temp62_30 () (_ BitVec 64))
(declare-fun temp62_31 () (_ BitVec 64))
(declare-fun temp62_32 () (_ BitVec 64))
(declare-fun temp62_33 () (_ BitVec 64))
(declare-fun temp62_34 () (_ BitVec 64))
(declare-fun temp62_35 () (_ BitVec 64))
(declare-fun temp62_36 () (_ BitVec 64))
(declare-fun temp62_37 () (_ BitVec 64))
(declare-fun temp62_38 () (_ BitVec 64))
(declare-fun temp62_39 () (_ BitVec 64))
(declare-fun temp62_40 () (_ BitVec 64))
(declare-fun temp62_41 () (_ BitVec 64))
(declare-fun temp62_42 () (_ BitVec 64))
(declare-fun temp62_43 () (_ BitVec 64))
(declare-fun temp62_44 () (_ BitVec 64))
(declare-fun temp62_45 () (_ BitVec 64))
(declare-fun temp62_46 () (_ BitVec 64))
(declare-fun temp62_47 () (_ BitVec 64))
(declare-fun temp62_48 () (_ BitVec 64))
(declare-fun temp62_49 () (_ BitVec 64))
(declare-fun temp62_50 () (_ BitVec 64))
(declare-fun temp62_51 () (_ BitVec 64))
(declare-fun temp62_52 () (_ BitVec 64))
(declare-fun temp62_53 () (_ BitVec 64))
(declare-fun temp62_54 () (_ BitVec 64))
(declare-fun temp62_55 () (_ BitVec 64))
(declare-fun temp62_56 () (_ BitVec 64))
(declare-fun temp62_57 () (_ BitVec 64))
(declare-fun temp62_58 () (_ BitVec 64))
(declare-fun temp62_59 () (_ BitVec 64))
(declare-fun temp62_60 () (_ BitVec 64))
(declare-fun temp62_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp62_62 () (_ BitVec 64))
(declare-fun temp62_63 () (_ BitVec 64))
(declare-fun temp62_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp62_65 () (_ BitVec 64))
(declare-fun temp62_66 () (_ BitVec 64))
(declare-fun temp62_67 () (_ BitVec 64))
(declare-fun temp62_68 () (_ BitVec 64))
(declare-fun temp62_69 () (_ BitVec 64))
(declare-fun temp62_70 () (_ BitVec 64))
(declare-fun temp62_71 () (_ BitVec 64))
(declare-fun temp62_72 () (_ BitVec 64))
(declare-fun temp62_73 () (_ BitVec 64))
(declare-fun temp62_74 () (_ BitVec 64))
(declare-fun temp62_75 () (_ BitVec 64))
(declare-fun temp62_76 () (_ BitVec 64))
(declare-fun temp62_77 () (_ BitVec 64))
(declare-fun temp62_78 () (_ BitVec 64))
(declare-fun temp62_79 () (_ BitVec 64))
(declare-fun temp62_80 () (_ BitVec 64))
(declare-fun temp62_81 () (_ BitVec 64))
(declare-fun temp62_82 () (_ BitVec 64))
(declare-fun temp62_83 () (_ BitVec 64))
(declare-fun temp62_84 () (_ BitVec 64))
(declare-fun temp62_85 () (_ BitVec 64))
(declare-fun temp62_86 () (_ BitVec 64))
(declare-fun temp62_87 () (_ BitVec 64))
(declare-fun temp62_88 () (_ BitVec 64))
(declare-fun temp62_89 () (_ BitVec 64))
(declare-fun temp62_90 () (_ BitVec 64))
(declare-fun temp62_91 () (_ BitVec 64))
(declare-fun temp62_92 () (_ BitVec 64))
(declare-fun temp62_93 () (_ BitVec 64))
(declare-fun temp62_94 () (_ BitVec 64))
(declare-fun temp62_95 () (_ BitVec 64))
(declare-fun temp62_96 () (_ BitVec 64))
(declare-fun temp62_97 () (_ BitVec 64))
(declare-fun temp62_98 () (_ BitVec 64))
(declare-fun temp62_99 () (_ BitVec 64))
(declare-fun temp62_100 () (_ BitVec 64))
(declare-fun temp62_101 () (_ BitVec 64))
(declare-fun temp62_102 () (_ BitVec 64))
(declare-fun temp62_103 () (_ BitVec 64))
(declare-fun temp62_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp62_105 () (_ BitVec 64))
(declare-fun temp62_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp62_107 () (_ BitVec 64))
(declare-fun temp62_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp62_109 () (_ BitVec 64))
(declare-fun temp62_110 () (_ BitVec 64))
(declare-fun temp62_111 () (_ BitVec 64))
(declare-fun temp62_112 () (_ BitVec 64))
(declare-fun temp62_113 () (_ BitVec 64))
(declare-fun temp62_114 () (_ BitVec 64))
(declare-fun temp62_115 () (_ BitVec 64))
(declare-fun temp62_116 () (_ BitVec 64))
(declare-fun temp62_117 () (_ BitVec 64))
(declare-fun temp62_118 () (_ BitVec 64))
(declare-fun temp62_119 () (_ BitVec 64))
(declare-fun temp62_120 () (_ BitVec 64))
(declare-fun temp62_121 () (_ BitVec 64))
(declare-fun temp62_122 () (_ BitVec 64))
(declare-fun temp62_123 () (_ BitVec 64))
(declare-fun temp62_124 () (_ BitVec 64))
(declare-fun temp62_126 () (_ BitVec 64))
(declare-fun temp62_127 () (_ BitVec 64))
(declare-fun temp62_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp62_128 () (_ BitVec 64))
(declare-fun temp62_129 () (_ BitVec 64))
(declare-fun temp62_131 () (_ BitVec 64))
(declare-fun temp62_132 () (_ BitVec 64))
(declare-fun temp62_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp62_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp62_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp62_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp62_136 () (_ BitVec 64))
(declare-fun temp62_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp62_139 () (_ BitVec 64))
(declare-fun temp62_140 () (_ BitVec 64))
(declare-fun temp62_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp62_141 () (_ BitVec 64))
(declare-fun temp62_143 () (_ BitVec 64))
(declare-fun temp62_144 () (_ BitVec 64))
(declare-fun temp62_142 () (_ BitVec 64))
(declare-fun temp62_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp62_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp62_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp62_148 () (_ BitVec 64))
(declare-fun temp62_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp62_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp62_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var1522214 () (_ BitVec 64))
(declare-fun temp62_152 () (_ BitVec 64))
(declare-fun var1522215 () (_ BitVec 64))
(declare-fun temp62_153 () (_ BitVec 64))
(assert (= temp62_1 #x0000000000000002))
(assert (= var989741 temp62_1))
(assert (= temp62_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp62_2)))
(assert (= temp62_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp62_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp62_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp62_4)))
(assert (= temp62_5 #x0000000000000000))
(assert (= var989775 (ite (= var989774 temp62_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp62_6 #x0000000000000000))
(assert (= var989776 temp62_6))
(assert (= temp62_7 #x0000000000000000))
(assert (= var989810 (ite (= var989773 temp62_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp62_8 #x0000000000000001))
(assert (= var989810 temp62_8))
(assert (= temp62_10 #x0000000000000000))
(assert (= temp62_9 temp62_10))
(assert (= temp62_12 #x0000000000000002))
(assert (= temp62_11 temp62_12))
(assert (= temp62_13 #x0000000000000000))
(assert (= var1387902 temp62_13))
(assert (= temp62_14 #x0000000000000001))
(assert (= var1387923 temp62_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp62_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp62_15)))
(assert (= temp62_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp62_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_17 #x0000000000000000))
(assert (= var1521661 temp62_17))
(assert (= temp62_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp62_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_19 #x0000000000000000))
(assert (= var1521706 temp62_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp62_20 #x0000000000000000))
(assert (= temp62_21 temp62_20))
(assert (= temp62_22 (select ARGNAME_padding_NAMEEND_VAL temp62_21)))
(assert (= temp62_23 #x0000000000000001))
(assert (= temp62_24 temp62_23))
(assert (= temp62_25 (select ARGNAME_padding_NAMEEND_VAL temp62_24)))
(assert (= temp62_26 #x0000000000000002))
(assert (= temp62_27 temp62_26))
(assert (= temp62_28 (select ARGNAME_padding_NAMEEND_VAL temp62_27)))
(assert (= temp62_29 #x0000000000000003))
(assert (= temp62_30 temp62_29))
(assert (= temp62_31 (select ARGNAME_padding_NAMEEND_VAL temp62_30)))
(assert (= temp62_32 #x0000000000000004))
(assert (= temp62_33 temp62_32))
(assert (= temp62_34 (select ARGNAME_padding_NAMEEND_VAL temp62_33)))
(assert (= temp62_35 #x0000000000000005))
(assert (= temp62_36 temp62_35))
(assert (= temp62_37 (select ARGNAME_padding_NAMEEND_VAL temp62_36)))
(assert (= temp62_38 #x0000000000000000))
(assert (= temp62_39 #x0000000000000000))
(assert (= temp62_40 temp62_39))
(assert (= temp62_41 (select ARGNAME_padding_NAMEEND_VAL temp62_40)))
(assert (= temp62_42 #x0000000000000000))
(assert (= temp62_43 #x0000000000000001))
(assert (= temp62_44 temp62_43))
(assert (= temp62_45 (select ARGNAME_padding_NAMEEND_VAL temp62_44)))
(assert (= temp62_46 #x0000000000000000))
(assert (= temp62_47 #x0000000000000002))
(assert (= temp62_48 temp62_47))
(assert (= temp62_49 (select ARGNAME_padding_NAMEEND_VAL temp62_48)))
(assert (= temp62_50 #x0000000000000000))
(assert (= temp62_51 #x0000000000000003))
(assert (= temp62_52 temp62_51))
(assert (= temp62_53 (select ARGNAME_padding_NAMEEND_VAL temp62_52)))
(assert (= temp62_54 #x0000000000000000))
(assert (= temp62_55 #x0000000000000004))
(assert (= temp62_56 temp62_55))
(assert (= temp62_57 (select ARGNAME_padding_NAMEEND_VAL temp62_56)))
(assert (= temp62_58 #x0000000000000000))
(assert (= temp62_59 #x0000000000000005))
(assert (= temp62_60 temp62_59))
(assert (= temp62_61 (select ARGNAME_padding_NAMEEND_VAL temp62_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp62_41 temp62_38)
             (bvslt temp62_45 temp62_42)
             (bvslt temp62_49 temp62_46)
             (bvslt temp62_53 temp62_50)
             (bvslt temp62_57 temp62_54)
             (bvslt temp62_61 temp62_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_62 #x0000000000000000))
(assert (= var2240290 temp62_62))
(assert (= temp62_63 #x0000000000000000))
(assert (= temp62_64 temp62_63))
(assert (= temp62_65 (select ARGNAME_stride_NAMEEND_VAL temp62_64)))
(assert (= temp62_66 #x0000000000000001))
(assert (= temp62_67 temp62_66))
(assert (= temp62_68 (select ARGNAME_stride_NAMEEND_VAL temp62_67)))
(assert (= temp62_69 #x0000000000000002))
(assert (= temp62_70 temp62_69))
(assert (= temp62_71 (select ARGNAME_stride_NAMEEND_VAL temp62_70)))
(assert (= temp62_72 #x0000000000000003))
(assert (= temp62_73 temp62_72))
(assert (= temp62_74 (select ARGNAME_stride_NAMEEND_VAL temp62_73)))
(assert (= temp62_75 #x0000000000000004))
(assert (= temp62_76 temp62_75))
(assert (= temp62_77 (select ARGNAME_stride_NAMEEND_VAL temp62_76)))
(assert (= temp62_78 #x0000000000000005))
(assert (= temp62_79 temp62_78))
(assert (= temp62_80 (select ARGNAME_stride_NAMEEND_VAL temp62_79)))
(assert (= temp62_81 #x0000000000000000))
(assert (= temp62_82 #x0000000000000000))
(assert (= temp62_83 temp62_82))
(assert (= temp62_84 (select ARGNAME_stride_NAMEEND_VAL temp62_83)))
(assert (= temp62_85 #x0000000000000000))
(assert (= temp62_86 #x0000000000000001))
(assert (= temp62_87 temp62_86))
(assert (= temp62_88 (select ARGNAME_stride_NAMEEND_VAL temp62_87)))
(assert (= temp62_89 #x0000000000000000))
(assert (= temp62_90 #x0000000000000002))
(assert (= temp62_91 temp62_90))
(assert (= temp62_92 (select ARGNAME_stride_NAMEEND_VAL temp62_91)))
(assert (= temp62_93 #x0000000000000000))
(assert (= temp62_94 #x0000000000000003))
(assert (= temp62_95 temp62_94))
(assert (= temp62_96 (select ARGNAME_stride_NAMEEND_VAL temp62_95)))
(assert (= temp62_97 #x0000000000000000))
(assert (= temp62_98 #x0000000000000004))
(assert (= temp62_99 temp62_98))
(assert (= temp62_100 (select ARGNAME_stride_NAMEEND_VAL temp62_99)))
(assert (= temp62_101 #x0000000000000000))
(assert (= temp62_102 #x0000000000000005))
(assert (= temp62_103 temp62_102))
(assert (= temp62_104 (select ARGNAME_stride_NAMEEND_VAL temp62_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp62_84 temp62_81)
             (bvsle temp62_88 temp62_85)
             (bvsle temp62_92 temp62_89)
             (bvsle temp62_96 temp62_93)
             (bvsle temp62_100 temp62_97)
             (bvsle temp62_104 temp62_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_105 #x0000000000000000))
(assert (= var2240311 temp62_105))
(assert (= temp62_106 #x0000000000000000))
(assert (= var2228402 temp62_106))
(assert (= temp62_107 #x0000000000000000))
(assert (= temp62_108 temp62_107))
(assert (= temp62_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_108)))
(assert (= temp62_110 #x0000000000000001))
(assert (= temp62_111 temp62_110))
(assert (= temp62_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_111)))
(assert (= temp62_113 #x0000000000000002))
(assert (= temp62_114 temp62_113))
(assert (= temp62_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_114)))
(assert (= temp62_116 #x0000000000000003))
(assert (= temp62_117 temp62_116))
(assert (= temp62_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_117)))
(assert (= temp62_119 #x0000000000000004))
(assert (= temp62_120 temp62_119))
(assert (= temp62_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_120)))
(assert (= temp62_122 #x0000000000000005))
(assert (= temp62_123 temp62_122))
(assert (= temp62_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_123)))
(assert (= temp62_126 var2228402))
(assert (= temp62_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_126)))
(assert (= temp62_125 temp62_127))
(assert (= var2240356
   (ite (bvslt temp62_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_128 #x0000000000000000))
(assert (= var2240356 temp62_128))
(assert (= temp62_129 #x0000000000000000))
(assert (= var2228402 temp62_129))
(assert (= temp62_131 var2228402))
(assert (= temp62_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_131)))
(assert (= temp62_130 temp62_132))
(assert (= var2240378 (bvsmod temp62_130 ARGNAME_groups_NAMEEND)))
(assert (= temp62_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp62_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp62_134 #x0000000000000001))
(assert (= var2240379 temp62_134))
(assert (= var2240398 var2240288))
(assert (= temp62_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp62_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp62_136 #x0000000000000001))
(assert (= var2240399 temp62_136))
(assert (= temp62_137 #x0000000000000001))
(assert (= var2229290 temp62_137))
(assert (= temp62_139 var2229290))
(assert (= temp62_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_139)))
(assert (= temp62_138 temp62_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp62_138)))
(assert (= temp62_141 #x0000000000000000))
(assert (= var2228402 temp62_141))
(assert (= temp62_143 var2228402))
(assert (= temp62_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_143)))
(assert (= temp62_142 temp62_144))
(assert (= temp62_145 #x0000000000000002))
(assert (= var2503529 temp62_145))
(assert (= temp62_146 #x0000000000000001))
(assert (= var2240569 temp62_146))
(assert (= temp62_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp62_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_148 #x0000000000000001))
(assert (= var1521778 temp62_148))
(assert (= temp62_149 #x0000000000000001))
(assert (= var1521908 temp62_149))
(assert (= var4010473 var1521908))
(assert (= temp62_150 #x0000000000000000))
(assert (= var4210495 temp62_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp62_151 #x0000000000000002))
(assert (= var4339331 temp62_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4993424 var1521921))
(assert (= var1522214 var1521633))
(assert (= temp62_152 #x0000000000000000))
(assert (= var1522215
   (ite (distinct var1522214 temp62_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp62_153 #x0000000000000001))
(assert (= var1521778 temp62_153))
(model-add temp62_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp62_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp62_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp62_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp62_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp62_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






