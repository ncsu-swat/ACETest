(declare-fun temp676_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp676_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp676_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp676_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp676_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp676_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp676_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp676_8 () (_ BitVec 64))
(declare-fun temp676_10 () (_ BitVec 64))
(declare-fun temp676_9 () (_ BitVec 64))
(declare-fun temp676_12 () (_ BitVec 64))
(declare-fun temp676_11 () (_ BitVec 64))
(declare-fun temp676_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp676_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp676_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp676_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp676_17 () (_ BitVec 64))
(declare-fun temp676_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp676_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp676_20 () (_ BitVec 64))
(declare-fun temp676_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp676_22 () (_ BitVec 64))
(declare-fun temp676_23 () (_ BitVec 64))
(declare-fun temp676_24 () (_ BitVec 64))
(declare-fun temp676_25 () (_ BitVec 64))
(declare-fun temp676_26 () (_ BitVec 64))
(declare-fun temp676_27 () (_ BitVec 64))
(declare-fun temp676_28 () (_ BitVec 64))
(declare-fun temp676_29 () (_ BitVec 64))
(declare-fun temp676_30 () (_ BitVec 64))
(declare-fun temp676_31 () (_ BitVec 64))
(declare-fun temp676_32 () (_ BitVec 64))
(declare-fun temp676_33 () (_ BitVec 64))
(declare-fun temp676_34 () (_ BitVec 64))
(declare-fun temp676_35 () (_ BitVec 64))
(declare-fun temp676_36 () (_ BitVec 64))
(declare-fun temp676_37 () (_ BitVec 64))
(declare-fun temp676_38 () (_ BitVec 64))
(declare-fun temp676_39 () (_ BitVec 64))
(declare-fun temp676_40 () (_ BitVec 64))
(declare-fun temp676_41 () (_ BitVec 64))
(declare-fun temp676_42 () (_ BitVec 64))
(declare-fun temp676_43 () (_ BitVec 64))
(declare-fun temp676_44 () (_ BitVec 64))
(declare-fun temp676_45 () (_ BitVec 64))
(declare-fun temp676_46 () (_ BitVec 64))
(declare-fun temp676_47 () (_ BitVec 64))
(declare-fun temp676_48 () (_ BitVec 64))
(declare-fun temp676_49 () (_ BitVec 64))
(declare-fun temp676_50 () (_ BitVec 64))
(declare-fun temp676_51 () (_ BitVec 64))
(declare-fun temp676_52 () (_ BitVec 64))
(declare-fun temp676_53 () (_ BitVec 64))
(declare-fun temp676_54 () (_ BitVec 64))
(declare-fun temp676_55 () (_ BitVec 64))
(declare-fun temp676_56 () (_ BitVec 64))
(declare-fun temp676_57 () (_ BitVec 64))
(declare-fun temp676_58 () (_ BitVec 64))
(declare-fun temp676_59 () (_ BitVec 64))
(declare-fun temp676_60 () (_ BitVec 64))
(declare-fun temp676_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp676_62 () (_ BitVec 64))
(declare-fun temp676_63 () (_ BitVec 64))
(declare-fun temp676_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp676_65 () (_ BitVec 64))
(declare-fun temp676_66 () (_ BitVec 64))
(declare-fun temp676_67 () (_ BitVec 64))
(declare-fun temp676_68 () (_ BitVec 64))
(declare-fun temp676_69 () (_ BitVec 64))
(declare-fun temp676_70 () (_ BitVec 64))
(declare-fun temp676_71 () (_ BitVec 64))
(declare-fun temp676_72 () (_ BitVec 64))
(declare-fun temp676_73 () (_ BitVec 64))
(declare-fun temp676_74 () (_ BitVec 64))
(declare-fun temp676_75 () (_ BitVec 64))
(declare-fun temp676_76 () (_ BitVec 64))
(declare-fun temp676_77 () (_ BitVec 64))
(declare-fun temp676_78 () (_ BitVec 64))
(declare-fun temp676_79 () (_ BitVec 64))
(declare-fun temp676_80 () (_ BitVec 64))
(declare-fun temp676_81 () (_ BitVec 64))
(declare-fun temp676_82 () (_ BitVec 64))
(declare-fun temp676_83 () (_ BitVec 64))
(declare-fun temp676_84 () (_ BitVec 64))
(declare-fun temp676_85 () (_ BitVec 64))
(declare-fun temp676_86 () (_ BitVec 64))
(declare-fun temp676_87 () (_ BitVec 64))
(declare-fun temp676_88 () (_ BitVec 64))
(declare-fun temp676_89 () (_ BitVec 64))
(declare-fun temp676_90 () (_ BitVec 64))
(declare-fun temp676_91 () (_ BitVec 64))
(declare-fun temp676_92 () (_ BitVec 64))
(declare-fun temp676_93 () (_ BitVec 64))
(declare-fun temp676_94 () (_ BitVec 64))
(declare-fun temp676_95 () (_ BitVec 64))
(declare-fun temp676_96 () (_ BitVec 64))
(declare-fun temp676_97 () (_ BitVec 64))
(declare-fun temp676_98 () (_ BitVec 64))
(declare-fun temp676_99 () (_ BitVec 64))
(declare-fun temp676_100 () (_ BitVec 64))
(declare-fun temp676_101 () (_ BitVec 64))
(declare-fun temp676_102 () (_ BitVec 64))
(declare-fun temp676_103 () (_ BitVec 64))
(declare-fun temp676_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp676_105 () (_ BitVec 64))
(declare-fun temp676_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp676_107 () (_ BitVec 64))
(declare-fun temp676_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp676_109 () (_ BitVec 64))
(declare-fun temp676_110 () (_ BitVec 64))
(declare-fun temp676_111 () (_ BitVec 64))
(declare-fun temp676_112 () (_ BitVec 64))
(declare-fun temp676_113 () (_ BitVec 64))
(declare-fun temp676_114 () (_ BitVec 64))
(declare-fun temp676_115 () (_ BitVec 64))
(declare-fun temp676_116 () (_ BitVec 64))
(declare-fun temp676_117 () (_ BitVec 64))
(declare-fun temp676_118 () (_ BitVec 64))
(declare-fun temp676_119 () (_ BitVec 64))
(declare-fun temp676_120 () (_ BitVec 64))
(declare-fun temp676_121 () (_ BitVec 64))
(declare-fun temp676_122 () (_ BitVec 64))
(declare-fun temp676_123 () (_ BitVec 64))
(declare-fun temp676_124 () (_ BitVec 64))
(declare-fun temp676_126 () (_ BitVec 64))
(declare-fun temp676_127 () (_ BitVec 64))
(declare-fun temp676_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp676_128 () (_ BitVec 64))
(declare-fun temp676_129 () (_ BitVec 64))
(declare-fun temp676_131 () (_ BitVec 64))
(declare-fun temp676_132 () (_ BitVec 64))
(declare-fun temp676_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp676_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp676_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp676_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp676_136 () (_ BitVec 64))
(declare-fun temp676_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp676_139 () (_ BitVec 64))
(declare-fun temp676_140 () (_ BitVec 64))
(declare-fun temp676_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp676_141 () (_ BitVec 64))
(declare-fun temp676_143 () (_ BitVec 64))
(declare-fun temp676_144 () (_ BitVec 64))
(declare-fun temp676_142 () (_ BitVec 64))
(declare-fun temp676_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp676_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp676_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp676_148 () (_ BitVec 64))
(declare-fun temp676_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp676_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp676_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp676_153 () (_ BitVec 64))
(declare-fun temp676_152 () (_ BitVec 64))
(declare-fun temp676_155 () (_ BitVec 64))
(declare-fun temp676_154 () (_ BitVec 64))
(declare-fun temp676_156 () (_ BitVec 64))
(assert (= temp676_1 #x0000000000000002))
(assert (= var989741 temp676_1))
(assert (= temp676_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp676_2)))
(assert (= temp676_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp676_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp676_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp676_4)))
(assert (= temp676_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp676_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp676_6 #x0000000000000000))
(assert (= var989776 temp676_6))
(assert (= temp676_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp676_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp676_8 #x0000000000000001))
(assert (= var989810 temp676_8))
(assert (= temp676_10 #x0000000000000000))
(assert (= temp676_9 temp676_10))
(assert (= temp676_12 #x0000000000000002))
(assert (= temp676_11 temp676_12))
(assert (= temp676_13 #x0000000000000000))
(assert (= var1387902 temp676_13))
(assert (= temp676_14 #x0000000000000001))
(assert (= var1387923 temp676_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp676_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp676_15)))
(assert (= temp676_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp676_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_17 #x0000000000000000))
(assert (= var1521661 temp676_17))
(assert (= temp676_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp676_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_19 #x0000000000000000))
(assert (= var1521706 temp676_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp676_20 #x0000000000000000))
(assert (= temp676_21 temp676_20))
(assert (= temp676_22 (select ARGNAME_padding_NAMEEND_VAL temp676_21)))
(assert (= temp676_23 #x0000000000000001))
(assert (= temp676_24 temp676_23))
(assert (= temp676_25 (select ARGNAME_padding_NAMEEND_VAL temp676_24)))
(assert (= temp676_26 #x0000000000000002))
(assert (= temp676_27 temp676_26))
(assert (= temp676_28 (select ARGNAME_padding_NAMEEND_VAL temp676_27)))
(assert (= temp676_29 #x0000000000000003))
(assert (= temp676_30 temp676_29))
(assert (= temp676_31 (select ARGNAME_padding_NAMEEND_VAL temp676_30)))
(assert (= temp676_32 #x0000000000000004))
(assert (= temp676_33 temp676_32))
(assert (= temp676_34 (select ARGNAME_padding_NAMEEND_VAL temp676_33)))
(assert (= temp676_35 #x0000000000000005))
(assert (= temp676_36 temp676_35))
(assert (= temp676_37 (select ARGNAME_padding_NAMEEND_VAL temp676_36)))
(assert (= temp676_38 #x0000000000000000))
(assert (= temp676_39 #x0000000000000000))
(assert (= temp676_40 temp676_39))
(assert (= temp676_41 (select ARGNAME_padding_NAMEEND_VAL temp676_40)))
(assert (= temp676_42 #x0000000000000000))
(assert (= temp676_43 #x0000000000000001))
(assert (= temp676_44 temp676_43))
(assert (= temp676_45 (select ARGNAME_padding_NAMEEND_VAL temp676_44)))
(assert (= temp676_46 #x0000000000000000))
(assert (= temp676_47 #x0000000000000002))
(assert (= temp676_48 temp676_47))
(assert (= temp676_49 (select ARGNAME_padding_NAMEEND_VAL temp676_48)))
(assert (= temp676_50 #x0000000000000000))
(assert (= temp676_51 #x0000000000000003))
(assert (= temp676_52 temp676_51))
(assert (= temp676_53 (select ARGNAME_padding_NAMEEND_VAL temp676_52)))
(assert (= temp676_54 #x0000000000000000))
(assert (= temp676_55 #x0000000000000004))
(assert (= temp676_56 temp676_55))
(assert (= temp676_57 (select ARGNAME_padding_NAMEEND_VAL temp676_56)))
(assert (= temp676_58 #x0000000000000000))
(assert (= temp676_59 #x0000000000000005))
(assert (= temp676_60 temp676_59))
(assert (= temp676_61 (select ARGNAME_padding_NAMEEND_VAL temp676_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp676_41 temp676_38)
             (bvslt temp676_45 temp676_42)
             (bvslt temp676_49 temp676_46)
             (bvslt temp676_53 temp676_50)
             (bvslt temp676_57 temp676_54)
             (bvslt temp676_61 temp676_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_62 #x0000000000000000))
(assert (= var2240290 temp676_62))
(assert (= temp676_63 #x0000000000000000))
(assert (= temp676_64 temp676_63))
(assert (= temp676_65 (select ARGNAME_stride_NAMEEND_VAL temp676_64)))
(assert (= temp676_66 #x0000000000000001))
(assert (= temp676_67 temp676_66))
(assert (= temp676_68 (select ARGNAME_stride_NAMEEND_VAL temp676_67)))
(assert (= temp676_69 #x0000000000000002))
(assert (= temp676_70 temp676_69))
(assert (= temp676_71 (select ARGNAME_stride_NAMEEND_VAL temp676_70)))
(assert (= temp676_72 #x0000000000000003))
(assert (= temp676_73 temp676_72))
(assert (= temp676_74 (select ARGNAME_stride_NAMEEND_VAL temp676_73)))
(assert (= temp676_75 #x0000000000000004))
(assert (= temp676_76 temp676_75))
(assert (= temp676_77 (select ARGNAME_stride_NAMEEND_VAL temp676_76)))
(assert (= temp676_78 #x0000000000000005))
(assert (= temp676_79 temp676_78))
(assert (= temp676_80 (select ARGNAME_stride_NAMEEND_VAL temp676_79)))
(assert (= temp676_81 #x0000000000000000))
(assert (= temp676_82 #x0000000000000000))
(assert (= temp676_83 temp676_82))
(assert (= temp676_84 (select ARGNAME_stride_NAMEEND_VAL temp676_83)))
(assert (= temp676_85 #x0000000000000000))
(assert (= temp676_86 #x0000000000000001))
(assert (= temp676_87 temp676_86))
(assert (= temp676_88 (select ARGNAME_stride_NAMEEND_VAL temp676_87)))
(assert (= temp676_89 #x0000000000000000))
(assert (= temp676_90 #x0000000000000002))
(assert (= temp676_91 temp676_90))
(assert (= temp676_92 (select ARGNAME_stride_NAMEEND_VAL temp676_91)))
(assert (= temp676_93 #x0000000000000000))
(assert (= temp676_94 #x0000000000000003))
(assert (= temp676_95 temp676_94))
(assert (= temp676_96 (select ARGNAME_stride_NAMEEND_VAL temp676_95)))
(assert (= temp676_97 #x0000000000000000))
(assert (= temp676_98 #x0000000000000004))
(assert (= temp676_99 temp676_98))
(assert (= temp676_100 (select ARGNAME_stride_NAMEEND_VAL temp676_99)))
(assert (= temp676_101 #x0000000000000000))
(assert (= temp676_102 #x0000000000000005))
(assert (= temp676_103 temp676_102))
(assert (= temp676_104 (select ARGNAME_stride_NAMEEND_VAL temp676_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp676_84 temp676_81)
             (bvsle temp676_88 temp676_85)
             (bvsle temp676_92 temp676_89)
             (bvsle temp676_96 temp676_93)
             (bvsle temp676_100 temp676_97)
             (bvsle temp676_104 temp676_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_105 #x0000000000000000))
(assert (= var2240311 temp676_105))
(assert (= temp676_106 #x0000000000000000))
(assert (= var2228402 temp676_106))
(assert (= temp676_107 #x0000000000000000))
(assert (= temp676_108 temp676_107))
(assert (= temp676_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_108)))
(assert (= temp676_110 #x0000000000000001))
(assert (= temp676_111 temp676_110))
(assert (= temp676_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_111)))
(assert (= temp676_113 #x0000000000000002))
(assert (= temp676_114 temp676_113))
(assert (= temp676_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_114)))
(assert (= temp676_116 #x0000000000000003))
(assert (= temp676_117 temp676_116))
(assert (= temp676_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_117)))
(assert (= temp676_119 #x0000000000000004))
(assert (= temp676_120 temp676_119))
(assert (= temp676_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_120)))
(assert (= temp676_122 #x0000000000000005))
(assert (= temp676_123 temp676_122))
(assert (= temp676_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_123)))
(assert (= temp676_126 var2228402))
(assert (= temp676_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_126)))
(assert (= temp676_125 temp676_127))
(assert (= var2240356
   (ite (bvslt temp676_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_128 #x0000000000000000))
(assert (= var2240356 temp676_128))
(assert (= temp676_129 #x0000000000000000))
(assert (= var2228402 temp676_129))
(assert (= temp676_131 var2228402))
(assert (= temp676_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_131)))
(assert (= temp676_130 temp676_132))
(assert (= var2240378 (bvsmod temp676_130 ARGNAME_groups_NAMEEND)))
(assert (= temp676_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp676_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp676_134 #x0000000000000001))
(assert (= var2240379 temp676_134))
(assert (= var2240398 var2240288))
(assert (= temp676_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp676_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp676_136 #x0000000000000001))
(assert (= var2240399 temp676_136))
(assert (= temp676_137 #x0000000000000001))
(assert (= var2229290 temp676_137))
(assert (= temp676_139 var2229290))
(assert (= temp676_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_139)))
(assert (= temp676_138 temp676_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp676_138)))
(assert (= temp676_141 #x0000000000000000))
(assert (= var2228402 temp676_141))
(assert (= temp676_143 var2228402))
(assert (= temp676_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_143)))
(assert (= temp676_142 temp676_144))
(assert (= temp676_145 #x0000000000000002))
(assert (= var2503529 temp676_145))
(assert (= temp676_146 #x0000000000000001))
(assert (= var2240569 temp676_146))
(assert (= temp676_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp676_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_148 #x0000000000000001))
(assert (= var1521778 temp676_148))
(assert (= temp676_149 #x0000000000000001))
(assert (= var1521908 temp676_149))
(assert (= var4010473 var1521908))
(assert (= temp676_150 #x0000000000000000))
(assert (= var4210495 temp676_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp676_151 #x0000000000000002))
(assert (= var4339331 temp676_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp676_153 #xffffffffffffffff))
(assert (= temp676_152 temp676_153))
(assert (= temp676_155 #xffffffffffffffff))
(assert (= temp676_154 temp676_155))
(assert (= temp676_156 #x0000000000000001))
(assert (= var1521778 temp676_156))
(model-add temp676_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp676_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp676_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp676_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp676_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp676_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






