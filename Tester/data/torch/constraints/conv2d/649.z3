(declare-fun temp863_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp863_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp863_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp863_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp863_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp863_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp863_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp863_8 () (_ BitVec 64))
(declare-fun temp863_10 () (_ BitVec 64))
(declare-fun temp863_9 () (_ BitVec 64))
(declare-fun temp863_12 () (_ BitVec 64))
(declare-fun temp863_11 () (_ BitVec 64))
(declare-fun temp863_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp863_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp863_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp863_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp863_17 () (_ BitVec 64))
(declare-fun temp863_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp863_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp863_20 () (_ BitVec 64))
(declare-fun temp863_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp863_22 () (_ BitVec 64))
(declare-fun temp863_23 () (_ BitVec 64))
(declare-fun temp863_24 () (_ BitVec 64))
(declare-fun temp863_25 () (_ BitVec 64))
(declare-fun temp863_26 () (_ BitVec 64))
(declare-fun temp863_27 () (_ BitVec 64))
(declare-fun temp863_28 () (_ BitVec 64))
(declare-fun temp863_29 () (_ BitVec 64))
(declare-fun temp863_30 () (_ BitVec 64))
(declare-fun temp863_31 () (_ BitVec 64))
(declare-fun temp863_32 () (_ BitVec 64))
(declare-fun temp863_33 () (_ BitVec 64))
(declare-fun temp863_34 () (_ BitVec 64))
(declare-fun temp863_35 () (_ BitVec 64))
(declare-fun temp863_36 () (_ BitVec 64))
(declare-fun temp863_37 () (_ BitVec 64))
(declare-fun temp863_38 () (_ BitVec 64))
(declare-fun temp863_39 () (_ BitVec 64))
(declare-fun temp863_40 () (_ BitVec 64))
(declare-fun temp863_41 () (_ BitVec 64))
(declare-fun temp863_42 () (_ BitVec 64))
(declare-fun temp863_43 () (_ BitVec 64))
(declare-fun temp863_44 () (_ BitVec 64))
(declare-fun temp863_45 () (_ BitVec 64))
(declare-fun temp863_46 () (_ BitVec 64))
(declare-fun temp863_47 () (_ BitVec 64))
(declare-fun temp863_48 () (_ BitVec 64))
(declare-fun temp863_49 () (_ BitVec 64))
(declare-fun temp863_50 () (_ BitVec 64))
(declare-fun temp863_51 () (_ BitVec 64))
(declare-fun temp863_52 () (_ BitVec 64))
(declare-fun temp863_53 () (_ BitVec 64))
(declare-fun temp863_54 () (_ BitVec 64))
(declare-fun temp863_55 () (_ BitVec 64))
(declare-fun temp863_56 () (_ BitVec 64))
(declare-fun temp863_57 () (_ BitVec 64))
(declare-fun temp863_58 () (_ BitVec 64))
(declare-fun temp863_59 () (_ BitVec 64))
(declare-fun temp863_60 () (_ BitVec 64))
(declare-fun temp863_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp863_62 () (_ BitVec 64))
(declare-fun temp863_63 () (_ BitVec 64))
(declare-fun temp863_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp863_65 () (_ BitVec 64))
(declare-fun temp863_66 () (_ BitVec 64))
(declare-fun temp863_67 () (_ BitVec 64))
(declare-fun temp863_68 () (_ BitVec 64))
(declare-fun temp863_69 () (_ BitVec 64))
(declare-fun temp863_70 () (_ BitVec 64))
(declare-fun temp863_71 () (_ BitVec 64))
(declare-fun temp863_72 () (_ BitVec 64))
(declare-fun temp863_73 () (_ BitVec 64))
(declare-fun temp863_74 () (_ BitVec 64))
(declare-fun temp863_75 () (_ BitVec 64))
(declare-fun temp863_76 () (_ BitVec 64))
(declare-fun temp863_77 () (_ BitVec 64))
(declare-fun temp863_78 () (_ BitVec 64))
(declare-fun temp863_79 () (_ BitVec 64))
(declare-fun temp863_80 () (_ BitVec 64))
(declare-fun temp863_81 () (_ BitVec 64))
(declare-fun temp863_82 () (_ BitVec 64))
(declare-fun temp863_83 () (_ BitVec 64))
(declare-fun temp863_84 () (_ BitVec 64))
(declare-fun temp863_85 () (_ BitVec 64))
(declare-fun temp863_86 () (_ BitVec 64))
(declare-fun temp863_87 () (_ BitVec 64))
(declare-fun temp863_88 () (_ BitVec 64))
(declare-fun temp863_89 () (_ BitVec 64))
(declare-fun temp863_90 () (_ BitVec 64))
(declare-fun temp863_91 () (_ BitVec 64))
(declare-fun temp863_92 () (_ BitVec 64))
(declare-fun temp863_93 () (_ BitVec 64))
(declare-fun temp863_94 () (_ BitVec 64))
(declare-fun temp863_95 () (_ BitVec 64))
(declare-fun temp863_96 () (_ BitVec 64))
(declare-fun temp863_97 () (_ BitVec 64))
(declare-fun temp863_98 () (_ BitVec 64))
(declare-fun temp863_99 () (_ BitVec 64))
(declare-fun temp863_100 () (_ BitVec 64))
(declare-fun temp863_101 () (_ BitVec 64))
(declare-fun temp863_102 () (_ BitVec 64))
(declare-fun temp863_103 () (_ BitVec 64))
(declare-fun temp863_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp863_105 () (_ BitVec 64))
(declare-fun temp863_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp863_107 () (_ BitVec 64))
(declare-fun temp863_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp863_109 () (_ BitVec 64))
(declare-fun temp863_110 () (_ BitVec 64))
(declare-fun temp863_111 () (_ BitVec 64))
(declare-fun temp863_112 () (_ BitVec 64))
(declare-fun temp863_113 () (_ BitVec 64))
(declare-fun temp863_114 () (_ BitVec 64))
(declare-fun temp863_115 () (_ BitVec 64))
(declare-fun temp863_116 () (_ BitVec 64))
(declare-fun temp863_117 () (_ BitVec 64))
(declare-fun temp863_118 () (_ BitVec 64))
(declare-fun temp863_119 () (_ BitVec 64))
(declare-fun temp863_120 () (_ BitVec 64))
(declare-fun temp863_121 () (_ BitVec 64))
(declare-fun temp863_122 () (_ BitVec 64))
(declare-fun temp863_123 () (_ BitVec 64))
(declare-fun temp863_124 () (_ BitVec 64))
(declare-fun temp863_126 () (_ BitVec 64))
(declare-fun temp863_127 () (_ BitVec 64))
(declare-fun temp863_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp863_128 () (_ BitVec 64))
(declare-fun temp863_129 () (_ BitVec 64))
(declare-fun temp863_131 () (_ BitVec 64))
(declare-fun temp863_132 () (_ BitVec 64))
(declare-fun temp863_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp863_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp863_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp863_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp863_136 () (_ BitVec 64))
(declare-fun temp863_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp863_139 () (_ BitVec 64))
(declare-fun temp863_140 () (_ BitVec 64))
(declare-fun temp863_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp863_141 () (_ BitVec 64))
(declare-fun temp863_143 () (_ BitVec 64))
(declare-fun temp863_144 () (_ BitVec 64))
(declare-fun temp863_142 () (_ BitVec 64))
(declare-fun temp863_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp863_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp863_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp863_148 () (_ BitVec 64))
(declare-fun temp863_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp863_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp863_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp863_152 () (_ BitVec 64))
(assert (= temp863_1 #x0000000000000002))
(assert (= var989741 temp863_1))
(assert (= temp863_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp863_2)))
(assert (= temp863_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp863_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp863_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp863_4)))
(assert (= temp863_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp863_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp863_6 #x0000000000000000))
(assert (= var989776 temp863_6))
(assert (= temp863_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp863_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp863_8 #x0000000000000001))
(assert (= var989810 temp863_8))
(assert (= temp863_10 #x0000000000000000))
(assert (= temp863_9 temp863_10))
(assert (= temp863_12 #x0000000000000002))
(assert (= temp863_11 temp863_12))
(assert (= temp863_13 #x0000000000000000))
(assert (= var1387902 temp863_13))
(assert (= temp863_14 #x0000000000000001))
(assert (= var1387923 temp863_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp863_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp863_15)))
(assert (= temp863_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp863_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp863_17 #x0000000000000000))
(assert (= var1521661 temp863_17))
(assert (= temp863_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp863_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp863_19 #x0000000000000000))
(assert (= var1521706 temp863_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp863_20 #x0000000000000000))
(assert (= temp863_21 temp863_20))
(assert (= temp863_22 (select ARGNAME_padding_NAMEEND_VAL temp863_21)))
(assert (= temp863_23 #x0000000000000001))
(assert (= temp863_24 temp863_23))
(assert (= temp863_25 (select ARGNAME_padding_NAMEEND_VAL temp863_24)))
(assert (= temp863_26 #x0000000000000002))
(assert (= temp863_27 temp863_26))
(assert (= temp863_28 (select ARGNAME_padding_NAMEEND_VAL temp863_27)))
(assert (= temp863_29 #x0000000000000003))
(assert (= temp863_30 temp863_29))
(assert (= temp863_31 (select ARGNAME_padding_NAMEEND_VAL temp863_30)))
(assert (= temp863_32 #x0000000000000004))
(assert (= temp863_33 temp863_32))
(assert (= temp863_34 (select ARGNAME_padding_NAMEEND_VAL temp863_33)))
(assert (= temp863_35 #x0000000000000005))
(assert (= temp863_36 temp863_35))
(assert (= temp863_37 (select ARGNAME_padding_NAMEEND_VAL temp863_36)))
(assert (= temp863_38 #x0000000000000000))
(assert (= temp863_39 #x0000000000000000))
(assert (= temp863_40 temp863_39))
(assert (= temp863_41 (select ARGNAME_padding_NAMEEND_VAL temp863_40)))
(assert (= temp863_42 #x0000000000000000))
(assert (= temp863_43 #x0000000000000001))
(assert (= temp863_44 temp863_43))
(assert (= temp863_45 (select ARGNAME_padding_NAMEEND_VAL temp863_44)))
(assert (= temp863_46 #x0000000000000000))
(assert (= temp863_47 #x0000000000000002))
(assert (= temp863_48 temp863_47))
(assert (= temp863_49 (select ARGNAME_padding_NAMEEND_VAL temp863_48)))
(assert (= temp863_50 #x0000000000000000))
(assert (= temp863_51 #x0000000000000003))
(assert (= temp863_52 temp863_51))
(assert (= temp863_53 (select ARGNAME_padding_NAMEEND_VAL temp863_52)))
(assert (= temp863_54 #x0000000000000000))
(assert (= temp863_55 #x0000000000000004))
(assert (= temp863_56 temp863_55))
(assert (= temp863_57 (select ARGNAME_padding_NAMEEND_VAL temp863_56)))
(assert (= temp863_58 #x0000000000000000))
(assert (= temp863_59 #x0000000000000005))
(assert (= temp863_60 temp863_59))
(assert (= temp863_61 (select ARGNAME_padding_NAMEEND_VAL temp863_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp863_41 temp863_38)
             (bvslt temp863_45 temp863_42)
             (bvslt temp863_49 temp863_46)
             (bvslt temp863_53 temp863_50)
             (bvslt temp863_57 temp863_54)
             (bvslt temp863_61 temp863_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp863_62 #x0000000000000000))
(assert (= var2240290 temp863_62))
(assert (= temp863_63 #x0000000000000000))
(assert (= temp863_64 temp863_63))
(assert (= temp863_65 (select ARGNAME_stride_NAMEEND_VAL temp863_64)))
(assert (= temp863_66 #x0000000000000001))
(assert (= temp863_67 temp863_66))
(assert (= temp863_68 (select ARGNAME_stride_NAMEEND_VAL temp863_67)))
(assert (= temp863_69 #x0000000000000002))
(assert (= temp863_70 temp863_69))
(assert (= temp863_71 (select ARGNAME_stride_NAMEEND_VAL temp863_70)))
(assert (= temp863_72 #x0000000000000003))
(assert (= temp863_73 temp863_72))
(assert (= temp863_74 (select ARGNAME_stride_NAMEEND_VAL temp863_73)))
(assert (= temp863_75 #x0000000000000004))
(assert (= temp863_76 temp863_75))
(assert (= temp863_77 (select ARGNAME_stride_NAMEEND_VAL temp863_76)))
(assert (= temp863_78 #x0000000000000005))
(assert (= temp863_79 temp863_78))
(assert (= temp863_80 (select ARGNAME_stride_NAMEEND_VAL temp863_79)))
(assert (= temp863_81 #x0000000000000000))
(assert (= temp863_82 #x0000000000000000))
(assert (= temp863_83 temp863_82))
(assert (= temp863_84 (select ARGNAME_stride_NAMEEND_VAL temp863_83)))
(assert (= temp863_85 #x0000000000000000))
(assert (= temp863_86 #x0000000000000001))
(assert (= temp863_87 temp863_86))
(assert (= temp863_88 (select ARGNAME_stride_NAMEEND_VAL temp863_87)))
(assert (= temp863_89 #x0000000000000000))
(assert (= temp863_90 #x0000000000000002))
(assert (= temp863_91 temp863_90))
(assert (= temp863_92 (select ARGNAME_stride_NAMEEND_VAL temp863_91)))
(assert (= temp863_93 #x0000000000000000))
(assert (= temp863_94 #x0000000000000003))
(assert (= temp863_95 temp863_94))
(assert (= temp863_96 (select ARGNAME_stride_NAMEEND_VAL temp863_95)))
(assert (= temp863_97 #x0000000000000000))
(assert (= temp863_98 #x0000000000000004))
(assert (= temp863_99 temp863_98))
(assert (= temp863_100 (select ARGNAME_stride_NAMEEND_VAL temp863_99)))
(assert (= temp863_101 #x0000000000000000))
(assert (= temp863_102 #x0000000000000005))
(assert (= temp863_103 temp863_102))
(assert (= temp863_104 (select ARGNAME_stride_NAMEEND_VAL temp863_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp863_84 temp863_81)
             (bvsle temp863_88 temp863_85)
             (bvsle temp863_92 temp863_89)
             (bvsle temp863_96 temp863_93)
             (bvsle temp863_100 temp863_97)
             (bvsle temp863_104 temp863_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp863_105 #x0000000000000000))
(assert (= var2240311 temp863_105))
(assert (= temp863_106 #x0000000000000000))
(assert (= var2228402 temp863_106))
(assert (= temp863_107 #x0000000000000000))
(assert (= temp863_108 temp863_107))
(assert (= temp863_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp863_108)))
(assert (= temp863_110 #x0000000000000001))
(assert (= temp863_111 temp863_110))
(assert (= temp863_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp863_111)))
(assert (= temp863_113 #x0000000000000002))
(assert (= temp863_114 temp863_113))
(assert (= temp863_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp863_114)))
(assert (= temp863_116 #x0000000000000003))
(assert (= temp863_117 temp863_116))
(assert (= temp863_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp863_117)))
(assert (= temp863_119 #x0000000000000004))
(assert (= temp863_120 temp863_119))
(assert (= temp863_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp863_120)))
(assert (= temp863_122 #x0000000000000005))
(assert (= temp863_123 temp863_122))
(assert (= temp863_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp863_123)))
(assert (= temp863_126 var2228402))
(assert (= temp863_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp863_126)))
(assert (= temp863_125 temp863_127))
(assert (= var2240356
   (ite (bvslt temp863_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp863_128 #x0000000000000000))
(assert (= var2240356 temp863_128))
(assert (= temp863_129 #x0000000000000000))
(assert (= var2228402 temp863_129))
(assert (= temp863_131 var2228402))
(assert (= temp863_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp863_131)))
(assert (= temp863_130 temp863_132))
(assert (= var2240378 (bvsmod temp863_130 ARGNAME_groups_NAMEEND)))
(assert (= temp863_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp863_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp863_134 #x0000000000000001))
(assert (= var2240379 temp863_134))
(assert (= var2240398 var2240288))
(assert (= temp863_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp863_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp863_136 #x0000000000000001))
(assert (= var2240399 temp863_136))
(assert (= temp863_137 #x0000000000000001))
(assert (= var2229290 temp863_137))
(assert (= temp863_139 var2229290))
(assert (= temp863_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp863_139)))
(assert (= temp863_138 temp863_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp863_138)))
(assert (= temp863_141 #x0000000000000000))
(assert (= var2228402 temp863_141))
(assert (= temp863_143 var2228402))
(assert (= temp863_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp863_143)))
(assert (= temp863_142 temp863_144))
(assert (= temp863_145 #x0000000000000002))
(assert (= var2503529 temp863_145))
(assert (= temp863_146 #x0000000000000001))
(assert (= var2240569 temp863_146))
(assert (= temp863_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp863_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp863_148 #x0000000000000001))
(assert (= var1521778 temp863_148))
(assert (= temp863_149 #x0000000000000001))
(assert (= var1521908 temp863_149))
(assert (= var4010473 var1521908))
(assert (= temp863_150 #x0000000000000000))
(assert (= var4210495 temp863_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp863_151 #x0000000000000002))
(assert (= var4339331 temp863_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var5321104 var1521921))
(assert (= var5583248 var1521921))
(assert (= temp863_152 #x0000000000000001))
(assert (= var1521778 temp863_152))
(model-add temp863_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp863_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp863_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp863_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp863_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp863_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






