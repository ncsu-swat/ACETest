(declare-fun temp682_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp682_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp682_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp682_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp682_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp682_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp682_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp682_8 () (_ BitVec 64))
(declare-fun temp682_10 () (_ BitVec 64))
(declare-fun temp682_9 () (_ BitVec 64))
(declare-fun temp682_12 () (_ BitVec 64))
(declare-fun temp682_11 () (_ BitVec 64))
(declare-fun temp682_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp682_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp682_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp682_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp682_17 () (_ BitVec 64))
(declare-fun temp682_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp682_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp682_20 () (_ BitVec 64))
(declare-fun temp682_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp682_22 () (_ BitVec 64))
(declare-fun temp682_23 () (_ BitVec 64))
(declare-fun temp682_24 () (_ BitVec 64))
(declare-fun temp682_25 () (_ BitVec 64))
(declare-fun temp682_26 () (_ BitVec 64))
(declare-fun temp682_27 () (_ BitVec 64))
(declare-fun temp682_28 () (_ BitVec 64))
(declare-fun temp682_29 () (_ BitVec 64))
(declare-fun temp682_30 () (_ BitVec 64))
(declare-fun temp682_31 () (_ BitVec 64))
(declare-fun temp682_32 () (_ BitVec 64))
(declare-fun temp682_33 () (_ BitVec 64))
(declare-fun temp682_34 () (_ BitVec 64))
(declare-fun temp682_35 () (_ BitVec 64))
(declare-fun temp682_36 () (_ BitVec 64))
(declare-fun temp682_37 () (_ BitVec 64))
(declare-fun temp682_38 () (_ BitVec 64))
(declare-fun temp682_39 () (_ BitVec 64))
(declare-fun temp682_40 () (_ BitVec 64))
(declare-fun temp682_41 () (_ BitVec 64))
(declare-fun temp682_42 () (_ BitVec 64))
(declare-fun temp682_43 () (_ BitVec 64))
(declare-fun temp682_44 () (_ BitVec 64))
(declare-fun temp682_45 () (_ BitVec 64))
(declare-fun temp682_46 () (_ BitVec 64))
(declare-fun temp682_47 () (_ BitVec 64))
(declare-fun temp682_48 () (_ BitVec 64))
(declare-fun temp682_49 () (_ BitVec 64))
(declare-fun temp682_50 () (_ BitVec 64))
(declare-fun temp682_51 () (_ BitVec 64))
(declare-fun temp682_52 () (_ BitVec 64))
(declare-fun temp682_53 () (_ BitVec 64))
(declare-fun temp682_54 () (_ BitVec 64))
(declare-fun temp682_55 () (_ BitVec 64))
(declare-fun temp682_56 () (_ BitVec 64))
(declare-fun temp682_57 () (_ BitVec 64))
(declare-fun temp682_58 () (_ BitVec 64))
(declare-fun temp682_59 () (_ BitVec 64))
(declare-fun temp682_60 () (_ BitVec 64))
(declare-fun temp682_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp682_62 () (_ BitVec 64))
(declare-fun temp682_63 () (_ BitVec 64))
(declare-fun temp682_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp682_65 () (_ BitVec 64))
(declare-fun temp682_66 () (_ BitVec 64))
(declare-fun temp682_67 () (_ BitVec 64))
(declare-fun temp682_68 () (_ BitVec 64))
(declare-fun temp682_69 () (_ BitVec 64))
(declare-fun temp682_70 () (_ BitVec 64))
(declare-fun temp682_71 () (_ BitVec 64))
(declare-fun temp682_72 () (_ BitVec 64))
(declare-fun temp682_73 () (_ BitVec 64))
(declare-fun temp682_74 () (_ BitVec 64))
(declare-fun temp682_75 () (_ BitVec 64))
(declare-fun temp682_76 () (_ BitVec 64))
(declare-fun temp682_77 () (_ BitVec 64))
(declare-fun temp682_78 () (_ BitVec 64))
(declare-fun temp682_79 () (_ BitVec 64))
(declare-fun temp682_80 () (_ BitVec 64))
(declare-fun temp682_81 () (_ BitVec 64))
(declare-fun temp682_82 () (_ BitVec 64))
(declare-fun temp682_83 () (_ BitVec 64))
(declare-fun temp682_84 () (_ BitVec 64))
(declare-fun temp682_85 () (_ BitVec 64))
(declare-fun temp682_86 () (_ BitVec 64))
(declare-fun temp682_87 () (_ BitVec 64))
(declare-fun temp682_88 () (_ BitVec 64))
(declare-fun temp682_89 () (_ BitVec 64))
(declare-fun temp682_90 () (_ BitVec 64))
(declare-fun temp682_91 () (_ BitVec 64))
(declare-fun temp682_92 () (_ BitVec 64))
(declare-fun temp682_93 () (_ BitVec 64))
(declare-fun temp682_94 () (_ BitVec 64))
(declare-fun temp682_95 () (_ BitVec 64))
(declare-fun temp682_96 () (_ BitVec 64))
(declare-fun temp682_97 () (_ BitVec 64))
(declare-fun temp682_98 () (_ BitVec 64))
(declare-fun temp682_99 () (_ BitVec 64))
(declare-fun temp682_100 () (_ BitVec 64))
(declare-fun temp682_101 () (_ BitVec 64))
(declare-fun temp682_102 () (_ BitVec 64))
(declare-fun temp682_103 () (_ BitVec 64))
(declare-fun temp682_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp682_105 () (_ BitVec 64))
(declare-fun temp682_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp682_107 () (_ BitVec 64))
(declare-fun temp682_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp682_109 () (_ BitVec 64))
(declare-fun temp682_110 () (_ BitVec 64))
(declare-fun temp682_111 () (_ BitVec 64))
(declare-fun temp682_112 () (_ BitVec 64))
(declare-fun temp682_113 () (_ BitVec 64))
(declare-fun temp682_114 () (_ BitVec 64))
(declare-fun temp682_115 () (_ BitVec 64))
(declare-fun temp682_116 () (_ BitVec 64))
(declare-fun temp682_117 () (_ BitVec 64))
(declare-fun temp682_118 () (_ BitVec 64))
(declare-fun temp682_119 () (_ BitVec 64))
(declare-fun temp682_120 () (_ BitVec 64))
(declare-fun temp682_121 () (_ BitVec 64))
(declare-fun temp682_122 () (_ BitVec 64))
(declare-fun temp682_123 () (_ BitVec 64))
(declare-fun temp682_124 () (_ BitVec 64))
(declare-fun temp682_126 () (_ BitVec 64))
(declare-fun temp682_127 () (_ BitVec 64))
(declare-fun temp682_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp682_128 () (_ BitVec 64))
(declare-fun temp682_129 () (_ BitVec 64))
(declare-fun temp682_131 () (_ BitVec 64))
(declare-fun temp682_132 () (_ BitVec 64))
(declare-fun temp682_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp682_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp682_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp682_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp682_136 () (_ BitVec 64))
(declare-fun temp682_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp682_139 () (_ BitVec 64))
(declare-fun temp682_140 () (_ BitVec 64))
(declare-fun temp682_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp682_141 () (_ BitVec 64))
(declare-fun temp682_143 () (_ BitVec 64))
(declare-fun temp682_144 () (_ BitVec 64))
(declare-fun temp682_142 () (_ BitVec 64))
(declare-fun temp682_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp682_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp682_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp682_148 () (_ BitVec 64))
(declare-fun temp682_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp682_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp682_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp682_153 () (_ BitVec 64))
(declare-fun temp682_152 () (_ BitVec 64))
(declare-fun temp682_155 () (_ BitVec 64))
(declare-fun temp682_154 () (_ BitVec 64))
(declare-fun temp682_156 () (_ BitVec 64))
(assert (= temp682_1 #x0000000000000002))
(assert (= var989741 temp682_1))
(assert (= temp682_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp682_2)))
(assert (= temp682_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp682_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp682_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp682_4)))
(assert (= temp682_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp682_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp682_6 #x0000000000000000))
(assert (= var989776 temp682_6))
(assert (= temp682_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp682_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp682_8 #x0000000000000001))
(assert (= var989810 temp682_8))
(assert (= temp682_10 #x0000000000000000))
(assert (= temp682_9 temp682_10))
(assert (= temp682_12 #x0000000000000002))
(assert (= temp682_11 temp682_12))
(assert (= temp682_13 #x0000000000000000))
(assert (= var1387902 temp682_13))
(assert (= temp682_14 #x0000000000000001))
(assert (= var1387923 temp682_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp682_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp682_15)))
(assert (= temp682_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp682_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_17 #x0000000000000000))
(assert (= var1521661 temp682_17))
(assert (= temp682_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp682_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_19 #x0000000000000000))
(assert (= var1521706 temp682_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp682_20 #x0000000000000000))
(assert (= temp682_21 temp682_20))
(assert (= temp682_22 (select ARGNAME_padding_NAMEEND_VAL temp682_21)))
(assert (= temp682_23 #x0000000000000001))
(assert (= temp682_24 temp682_23))
(assert (= temp682_25 (select ARGNAME_padding_NAMEEND_VAL temp682_24)))
(assert (= temp682_26 #x0000000000000002))
(assert (= temp682_27 temp682_26))
(assert (= temp682_28 (select ARGNAME_padding_NAMEEND_VAL temp682_27)))
(assert (= temp682_29 #x0000000000000003))
(assert (= temp682_30 temp682_29))
(assert (= temp682_31 (select ARGNAME_padding_NAMEEND_VAL temp682_30)))
(assert (= temp682_32 #x0000000000000004))
(assert (= temp682_33 temp682_32))
(assert (= temp682_34 (select ARGNAME_padding_NAMEEND_VAL temp682_33)))
(assert (= temp682_35 #x0000000000000005))
(assert (= temp682_36 temp682_35))
(assert (= temp682_37 (select ARGNAME_padding_NAMEEND_VAL temp682_36)))
(assert (= temp682_38 #x0000000000000000))
(assert (= temp682_39 #x0000000000000000))
(assert (= temp682_40 temp682_39))
(assert (= temp682_41 (select ARGNAME_padding_NAMEEND_VAL temp682_40)))
(assert (= temp682_42 #x0000000000000000))
(assert (= temp682_43 #x0000000000000001))
(assert (= temp682_44 temp682_43))
(assert (= temp682_45 (select ARGNAME_padding_NAMEEND_VAL temp682_44)))
(assert (= temp682_46 #x0000000000000000))
(assert (= temp682_47 #x0000000000000002))
(assert (= temp682_48 temp682_47))
(assert (= temp682_49 (select ARGNAME_padding_NAMEEND_VAL temp682_48)))
(assert (= temp682_50 #x0000000000000000))
(assert (= temp682_51 #x0000000000000003))
(assert (= temp682_52 temp682_51))
(assert (= temp682_53 (select ARGNAME_padding_NAMEEND_VAL temp682_52)))
(assert (= temp682_54 #x0000000000000000))
(assert (= temp682_55 #x0000000000000004))
(assert (= temp682_56 temp682_55))
(assert (= temp682_57 (select ARGNAME_padding_NAMEEND_VAL temp682_56)))
(assert (= temp682_58 #x0000000000000000))
(assert (= temp682_59 #x0000000000000005))
(assert (= temp682_60 temp682_59))
(assert (= temp682_61 (select ARGNAME_padding_NAMEEND_VAL temp682_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp682_41 temp682_38)
             (bvslt temp682_45 temp682_42)
             (bvslt temp682_49 temp682_46)
             (bvslt temp682_53 temp682_50)
             (bvslt temp682_57 temp682_54)
             (bvslt temp682_61 temp682_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_62 #x0000000000000000))
(assert (= var2240290 temp682_62))
(assert (= temp682_63 #x0000000000000000))
(assert (= temp682_64 temp682_63))
(assert (= temp682_65 (select ARGNAME_stride_NAMEEND_VAL temp682_64)))
(assert (= temp682_66 #x0000000000000001))
(assert (= temp682_67 temp682_66))
(assert (= temp682_68 (select ARGNAME_stride_NAMEEND_VAL temp682_67)))
(assert (= temp682_69 #x0000000000000002))
(assert (= temp682_70 temp682_69))
(assert (= temp682_71 (select ARGNAME_stride_NAMEEND_VAL temp682_70)))
(assert (= temp682_72 #x0000000000000003))
(assert (= temp682_73 temp682_72))
(assert (= temp682_74 (select ARGNAME_stride_NAMEEND_VAL temp682_73)))
(assert (= temp682_75 #x0000000000000004))
(assert (= temp682_76 temp682_75))
(assert (= temp682_77 (select ARGNAME_stride_NAMEEND_VAL temp682_76)))
(assert (= temp682_78 #x0000000000000005))
(assert (= temp682_79 temp682_78))
(assert (= temp682_80 (select ARGNAME_stride_NAMEEND_VAL temp682_79)))
(assert (= temp682_81 #x0000000000000000))
(assert (= temp682_82 #x0000000000000000))
(assert (= temp682_83 temp682_82))
(assert (= temp682_84 (select ARGNAME_stride_NAMEEND_VAL temp682_83)))
(assert (= temp682_85 #x0000000000000000))
(assert (= temp682_86 #x0000000000000001))
(assert (= temp682_87 temp682_86))
(assert (= temp682_88 (select ARGNAME_stride_NAMEEND_VAL temp682_87)))
(assert (= temp682_89 #x0000000000000000))
(assert (= temp682_90 #x0000000000000002))
(assert (= temp682_91 temp682_90))
(assert (= temp682_92 (select ARGNAME_stride_NAMEEND_VAL temp682_91)))
(assert (= temp682_93 #x0000000000000000))
(assert (= temp682_94 #x0000000000000003))
(assert (= temp682_95 temp682_94))
(assert (= temp682_96 (select ARGNAME_stride_NAMEEND_VAL temp682_95)))
(assert (= temp682_97 #x0000000000000000))
(assert (= temp682_98 #x0000000000000004))
(assert (= temp682_99 temp682_98))
(assert (= temp682_100 (select ARGNAME_stride_NAMEEND_VAL temp682_99)))
(assert (= temp682_101 #x0000000000000000))
(assert (= temp682_102 #x0000000000000005))
(assert (= temp682_103 temp682_102))
(assert (= temp682_104 (select ARGNAME_stride_NAMEEND_VAL temp682_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp682_84 temp682_81)
             (bvsle temp682_88 temp682_85)
             (bvsle temp682_92 temp682_89)
             (bvsle temp682_96 temp682_93)
             (bvsle temp682_100 temp682_97)
             (bvsle temp682_104 temp682_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_105 #x0000000000000000))
(assert (= var2240311 temp682_105))
(assert (= temp682_106 #x0000000000000000))
(assert (= var2228402 temp682_106))
(assert (= temp682_107 #x0000000000000000))
(assert (= temp682_108 temp682_107))
(assert (= temp682_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_108)))
(assert (= temp682_110 #x0000000000000001))
(assert (= temp682_111 temp682_110))
(assert (= temp682_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_111)))
(assert (= temp682_113 #x0000000000000002))
(assert (= temp682_114 temp682_113))
(assert (= temp682_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_114)))
(assert (= temp682_116 #x0000000000000003))
(assert (= temp682_117 temp682_116))
(assert (= temp682_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_117)))
(assert (= temp682_119 #x0000000000000004))
(assert (= temp682_120 temp682_119))
(assert (= temp682_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_120)))
(assert (= temp682_122 #x0000000000000005))
(assert (= temp682_123 temp682_122))
(assert (= temp682_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_123)))
(assert (= temp682_126 var2228402))
(assert (= temp682_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_126)))
(assert (= temp682_125 temp682_127))
(assert (= var2240356
   (ite (bvslt temp682_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_128 #x0000000000000000))
(assert (= var2240356 temp682_128))
(assert (= temp682_129 #x0000000000000000))
(assert (= var2228402 temp682_129))
(assert (= temp682_131 var2228402))
(assert (= temp682_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_131)))
(assert (= temp682_130 temp682_132))
(assert (= var2240378 (bvsmod temp682_130 ARGNAME_groups_NAMEEND)))
(assert (= temp682_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp682_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp682_134 #x0000000000000001))
(assert (= var2240379 temp682_134))
(assert (= var2240398 var2240288))
(assert (= temp682_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp682_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp682_136 #x0000000000000001))
(assert (= var2240399 temp682_136))
(assert (= temp682_137 #x0000000000000001))
(assert (= var2229290 temp682_137))
(assert (= temp682_139 var2229290))
(assert (= temp682_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_139)))
(assert (= temp682_138 temp682_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp682_138)))
(assert (= temp682_141 #x0000000000000000))
(assert (= var2228402 temp682_141))
(assert (= temp682_143 var2228402))
(assert (= temp682_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_143)))
(assert (= temp682_142 temp682_144))
(assert (= temp682_145 #x0000000000000002))
(assert (= var2503529 temp682_145))
(assert (= temp682_146 #x0000000000000001))
(assert (= var2240569 temp682_146))
(assert (= temp682_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp682_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_148 #x0000000000000001))
(assert (= var1521778 temp682_148))
(assert (= temp682_149 #x0000000000000001))
(assert (= var1521908 temp682_149))
(assert (= var4010473 var1521908))
(assert (= temp682_150 #x0000000000000000))
(assert (= var4210495 temp682_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp682_151 #x0000000000000002))
(assert (= var4339331 temp682_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp682_153 #xffffffffffffffff))
(assert (= temp682_152 temp682_153))
(assert (= temp682_155 #xffffffffffffffff))
(assert (= temp682_154 temp682_155))
(assert (= temp682_156 #x0000000000000001))
(assert (= var1521778 temp682_156))
(model-add temp682_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp682_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp682_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp682_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp682_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp682_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






