(declare-fun temp52_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp52_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp52_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp52_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp52_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp52_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp52_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp52_8 () (_ BitVec 64))
(declare-fun temp52_10 () (_ BitVec 64))
(declare-fun temp52_9 () (_ BitVec 64))
(declare-fun temp52_12 () (_ BitVec 64))
(declare-fun temp52_11 () (_ BitVec 64))
(declare-fun temp52_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp52_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp52_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp52_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp52_17 () (_ BitVec 64))
(declare-fun temp52_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp52_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp52_20 () (_ BitVec 64))
(declare-fun temp52_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp52_22 () (_ BitVec 64))
(declare-fun temp52_23 () (_ BitVec 64))
(declare-fun temp52_24 () (_ BitVec 64))
(declare-fun temp52_25 () (_ BitVec 64))
(declare-fun temp52_26 () (_ BitVec 64))
(declare-fun temp52_27 () (_ BitVec 64))
(declare-fun temp52_28 () (_ BitVec 64))
(declare-fun temp52_29 () (_ BitVec 64))
(declare-fun temp52_30 () (_ BitVec 64))
(declare-fun temp52_31 () (_ BitVec 64))
(declare-fun temp52_32 () (_ BitVec 64))
(declare-fun temp52_33 () (_ BitVec 64))
(declare-fun temp52_34 () (_ BitVec 64))
(declare-fun temp52_35 () (_ BitVec 64))
(declare-fun temp52_36 () (_ BitVec 64))
(declare-fun temp52_37 () (_ BitVec 64))
(declare-fun temp52_38 () (_ BitVec 64))
(declare-fun temp52_39 () (_ BitVec 64))
(declare-fun temp52_40 () (_ BitVec 64))
(declare-fun temp52_41 () (_ BitVec 64))
(declare-fun temp52_42 () (_ BitVec 64))
(declare-fun temp52_43 () (_ BitVec 64))
(declare-fun temp52_44 () (_ BitVec 64))
(declare-fun temp52_45 () (_ BitVec 64))
(declare-fun temp52_46 () (_ BitVec 64))
(declare-fun temp52_47 () (_ BitVec 64))
(declare-fun temp52_48 () (_ BitVec 64))
(declare-fun temp52_49 () (_ BitVec 64))
(declare-fun temp52_50 () (_ BitVec 64))
(declare-fun temp52_51 () (_ BitVec 64))
(declare-fun temp52_52 () (_ BitVec 64))
(declare-fun temp52_53 () (_ BitVec 64))
(declare-fun temp52_54 () (_ BitVec 64))
(declare-fun temp52_55 () (_ BitVec 64))
(declare-fun temp52_56 () (_ BitVec 64))
(declare-fun temp52_57 () (_ BitVec 64))
(declare-fun temp52_58 () (_ BitVec 64))
(declare-fun temp52_59 () (_ BitVec 64))
(declare-fun temp52_60 () (_ BitVec 64))
(declare-fun temp52_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp52_62 () (_ BitVec 64))
(declare-fun temp52_63 () (_ BitVec 64))
(declare-fun temp52_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp52_65 () (_ BitVec 64))
(declare-fun temp52_66 () (_ BitVec 64))
(declare-fun temp52_67 () (_ BitVec 64))
(declare-fun temp52_68 () (_ BitVec 64))
(declare-fun temp52_69 () (_ BitVec 64))
(declare-fun temp52_70 () (_ BitVec 64))
(declare-fun temp52_71 () (_ BitVec 64))
(declare-fun temp52_72 () (_ BitVec 64))
(declare-fun temp52_73 () (_ BitVec 64))
(declare-fun temp52_74 () (_ BitVec 64))
(declare-fun temp52_75 () (_ BitVec 64))
(declare-fun temp52_76 () (_ BitVec 64))
(declare-fun temp52_77 () (_ BitVec 64))
(declare-fun temp52_78 () (_ BitVec 64))
(declare-fun temp52_79 () (_ BitVec 64))
(declare-fun temp52_80 () (_ BitVec 64))
(declare-fun temp52_81 () (_ BitVec 64))
(declare-fun temp52_82 () (_ BitVec 64))
(declare-fun temp52_83 () (_ BitVec 64))
(declare-fun temp52_84 () (_ BitVec 64))
(declare-fun temp52_85 () (_ BitVec 64))
(declare-fun temp52_86 () (_ BitVec 64))
(declare-fun temp52_87 () (_ BitVec 64))
(declare-fun temp52_88 () (_ BitVec 64))
(declare-fun temp52_89 () (_ BitVec 64))
(declare-fun temp52_90 () (_ BitVec 64))
(declare-fun temp52_91 () (_ BitVec 64))
(declare-fun temp52_92 () (_ BitVec 64))
(declare-fun temp52_93 () (_ BitVec 64))
(declare-fun temp52_94 () (_ BitVec 64))
(declare-fun temp52_95 () (_ BitVec 64))
(declare-fun temp52_96 () (_ BitVec 64))
(declare-fun temp52_97 () (_ BitVec 64))
(declare-fun temp52_98 () (_ BitVec 64))
(declare-fun temp52_99 () (_ BitVec 64))
(declare-fun temp52_100 () (_ BitVec 64))
(declare-fun temp52_101 () (_ BitVec 64))
(declare-fun temp52_102 () (_ BitVec 64))
(declare-fun temp52_103 () (_ BitVec 64))
(declare-fun temp52_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp52_105 () (_ BitVec 64))
(declare-fun temp52_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp52_107 () (_ BitVec 64))
(declare-fun temp52_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp52_109 () (_ BitVec 64))
(declare-fun temp52_110 () (_ BitVec 64))
(declare-fun temp52_111 () (_ BitVec 64))
(declare-fun temp52_112 () (_ BitVec 64))
(declare-fun temp52_113 () (_ BitVec 64))
(declare-fun temp52_114 () (_ BitVec 64))
(declare-fun temp52_115 () (_ BitVec 64))
(declare-fun temp52_116 () (_ BitVec 64))
(declare-fun temp52_117 () (_ BitVec 64))
(declare-fun temp52_118 () (_ BitVec 64))
(declare-fun temp52_119 () (_ BitVec 64))
(declare-fun temp52_120 () (_ BitVec 64))
(declare-fun temp52_121 () (_ BitVec 64))
(declare-fun temp52_122 () (_ BitVec 64))
(declare-fun temp52_123 () (_ BitVec 64))
(declare-fun temp52_124 () (_ BitVec 64))
(declare-fun temp52_126 () (_ BitVec 64))
(declare-fun temp52_127 () (_ BitVec 64))
(declare-fun temp52_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp52_128 () (_ BitVec 64))
(declare-fun temp52_129 () (_ BitVec 64))
(declare-fun temp52_131 () (_ BitVec 64))
(declare-fun temp52_132 () (_ BitVec 64))
(declare-fun temp52_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp52_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp52_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp52_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp52_136 () (_ BitVec 64))
(declare-fun temp52_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp52_139 () (_ BitVec 64))
(declare-fun temp52_140 () (_ BitVec 64))
(declare-fun temp52_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp52_141 () (_ BitVec 64))
(declare-fun temp52_143 () (_ BitVec 64))
(declare-fun temp52_144 () (_ BitVec 64))
(declare-fun temp52_142 () (_ BitVec 64))
(declare-fun temp52_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp52_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp52_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp52_148 () (_ BitVec 64))
(declare-fun temp52_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp52_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp52_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var1522108 () (_ BitVec 64))
(declare-fun temp52_152 () (_ BitVec 64))
(declare-fun var1522109 () (_ BitVec 64))
(declare-fun var5521229 () (_ BitVec 64))
(declare-fun temp52_154 () (_ BitVec 64))
(declare-fun temp52_153 () (_ BitVec 64))
(declare-fun temp52_155 () (_ BitVec 64))
(declare-fun var6098410 () (_ BitVec 64))
(declare-fun temp52_157 () (_ BitVec 64))
(declare-fun temp52_156 () (_ BitVec 64))
(declare-fun temp52_158 () (_ BitVec 64))
(assert (= temp52_1 #x0000000000000002))
(assert (= var989741 temp52_1))
(assert (= temp52_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp52_2)))
(assert (= temp52_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp52_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp52_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp52_4)))
(assert (= temp52_5 #x0000000000000000))
(assert (= var989775 (ite (= var989774 temp52_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp52_6 #x0000000000000000))
(assert (= var989776 temp52_6))
(assert (= temp52_7 #x0000000000000000))
(assert (= var989810 (ite (= var989773 temp52_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp52_8 #x0000000000000001))
(assert (= var989810 temp52_8))
(assert (= temp52_10 #x0000000000000000))
(assert (= temp52_9 temp52_10))
(assert (= temp52_12 #x0000000000000002))
(assert (= temp52_11 temp52_12))
(assert (= temp52_13 #x0000000000000000))
(assert (= var1387902 temp52_13))
(assert (= temp52_14 #x0000000000000001))
(assert (= var1387923 temp52_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp52_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp52_15)))
(assert (= temp52_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp52_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp52_17 #x0000000000000000))
(assert (= var1521661 temp52_17))
(assert (= temp52_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp52_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp52_19 #x0000000000000000))
(assert (= var1521706 temp52_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp52_20 #x0000000000000000))
(assert (= temp52_21 temp52_20))
(assert (= temp52_22 (select ARGNAME_padding_NAMEEND_VAL temp52_21)))
(assert (= temp52_23 #x0000000000000001))
(assert (= temp52_24 temp52_23))
(assert (= temp52_25 (select ARGNAME_padding_NAMEEND_VAL temp52_24)))
(assert (= temp52_26 #x0000000000000002))
(assert (= temp52_27 temp52_26))
(assert (= temp52_28 (select ARGNAME_padding_NAMEEND_VAL temp52_27)))
(assert (= temp52_29 #x0000000000000003))
(assert (= temp52_30 temp52_29))
(assert (= temp52_31 (select ARGNAME_padding_NAMEEND_VAL temp52_30)))
(assert (= temp52_32 #x0000000000000004))
(assert (= temp52_33 temp52_32))
(assert (= temp52_34 (select ARGNAME_padding_NAMEEND_VAL temp52_33)))
(assert (= temp52_35 #x0000000000000005))
(assert (= temp52_36 temp52_35))
(assert (= temp52_37 (select ARGNAME_padding_NAMEEND_VAL temp52_36)))
(assert (= temp52_38 #x0000000000000000))
(assert (= temp52_39 #x0000000000000000))
(assert (= temp52_40 temp52_39))
(assert (= temp52_41 (select ARGNAME_padding_NAMEEND_VAL temp52_40)))
(assert (= temp52_42 #x0000000000000000))
(assert (= temp52_43 #x0000000000000001))
(assert (= temp52_44 temp52_43))
(assert (= temp52_45 (select ARGNAME_padding_NAMEEND_VAL temp52_44)))
(assert (= temp52_46 #x0000000000000000))
(assert (= temp52_47 #x0000000000000002))
(assert (= temp52_48 temp52_47))
(assert (= temp52_49 (select ARGNAME_padding_NAMEEND_VAL temp52_48)))
(assert (= temp52_50 #x0000000000000000))
(assert (= temp52_51 #x0000000000000003))
(assert (= temp52_52 temp52_51))
(assert (= temp52_53 (select ARGNAME_padding_NAMEEND_VAL temp52_52)))
(assert (= temp52_54 #x0000000000000000))
(assert (= temp52_55 #x0000000000000004))
(assert (= temp52_56 temp52_55))
(assert (= temp52_57 (select ARGNAME_padding_NAMEEND_VAL temp52_56)))
(assert (= temp52_58 #x0000000000000000))
(assert (= temp52_59 #x0000000000000005))
(assert (= temp52_60 temp52_59))
(assert (= temp52_61 (select ARGNAME_padding_NAMEEND_VAL temp52_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp52_41 temp52_38)
             (bvslt temp52_45 temp52_42)
             (bvslt temp52_49 temp52_46)
             (bvslt temp52_53 temp52_50)
             (bvslt temp52_57 temp52_54)
             (bvslt temp52_61 temp52_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp52_62 #x0000000000000000))
(assert (= var2240290 temp52_62))
(assert (= temp52_63 #x0000000000000000))
(assert (= temp52_64 temp52_63))
(assert (= temp52_65 (select ARGNAME_stride_NAMEEND_VAL temp52_64)))
(assert (= temp52_66 #x0000000000000001))
(assert (= temp52_67 temp52_66))
(assert (= temp52_68 (select ARGNAME_stride_NAMEEND_VAL temp52_67)))
(assert (= temp52_69 #x0000000000000002))
(assert (= temp52_70 temp52_69))
(assert (= temp52_71 (select ARGNAME_stride_NAMEEND_VAL temp52_70)))
(assert (= temp52_72 #x0000000000000003))
(assert (= temp52_73 temp52_72))
(assert (= temp52_74 (select ARGNAME_stride_NAMEEND_VAL temp52_73)))
(assert (= temp52_75 #x0000000000000004))
(assert (= temp52_76 temp52_75))
(assert (= temp52_77 (select ARGNAME_stride_NAMEEND_VAL temp52_76)))
(assert (= temp52_78 #x0000000000000005))
(assert (= temp52_79 temp52_78))
(assert (= temp52_80 (select ARGNAME_stride_NAMEEND_VAL temp52_79)))
(assert (= temp52_81 #x0000000000000000))
(assert (= temp52_82 #x0000000000000000))
(assert (= temp52_83 temp52_82))
(assert (= temp52_84 (select ARGNAME_stride_NAMEEND_VAL temp52_83)))
(assert (= temp52_85 #x0000000000000000))
(assert (= temp52_86 #x0000000000000001))
(assert (= temp52_87 temp52_86))
(assert (= temp52_88 (select ARGNAME_stride_NAMEEND_VAL temp52_87)))
(assert (= temp52_89 #x0000000000000000))
(assert (= temp52_90 #x0000000000000002))
(assert (= temp52_91 temp52_90))
(assert (= temp52_92 (select ARGNAME_stride_NAMEEND_VAL temp52_91)))
(assert (= temp52_93 #x0000000000000000))
(assert (= temp52_94 #x0000000000000003))
(assert (= temp52_95 temp52_94))
(assert (= temp52_96 (select ARGNAME_stride_NAMEEND_VAL temp52_95)))
(assert (= temp52_97 #x0000000000000000))
(assert (= temp52_98 #x0000000000000004))
(assert (= temp52_99 temp52_98))
(assert (= temp52_100 (select ARGNAME_stride_NAMEEND_VAL temp52_99)))
(assert (= temp52_101 #x0000000000000000))
(assert (= temp52_102 #x0000000000000005))
(assert (= temp52_103 temp52_102))
(assert (= temp52_104 (select ARGNAME_stride_NAMEEND_VAL temp52_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp52_84 temp52_81)
             (bvsle temp52_88 temp52_85)
             (bvsle temp52_92 temp52_89)
             (bvsle temp52_96 temp52_93)
             (bvsle temp52_100 temp52_97)
             (bvsle temp52_104 temp52_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp52_105 #x0000000000000000))
(assert (= var2240311 temp52_105))
(assert (= temp52_106 #x0000000000000000))
(assert (= var2228402 temp52_106))
(assert (= temp52_107 #x0000000000000000))
(assert (= temp52_108 temp52_107))
(assert (= temp52_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp52_108)))
(assert (= temp52_110 #x0000000000000001))
(assert (= temp52_111 temp52_110))
(assert (= temp52_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp52_111)))
(assert (= temp52_113 #x0000000000000002))
(assert (= temp52_114 temp52_113))
(assert (= temp52_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp52_114)))
(assert (= temp52_116 #x0000000000000003))
(assert (= temp52_117 temp52_116))
(assert (= temp52_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp52_117)))
(assert (= temp52_119 #x0000000000000004))
(assert (= temp52_120 temp52_119))
(assert (= temp52_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp52_120)))
(assert (= temp52_122 #x0000000000000005))
(assert (= temp52_123 temp52_122))
(assert (= temp52_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp52_123)))
(assert (= temp52_126 var2228402))
(assert (= temp52_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp52_126)))
(assert (= temp52_125 temp52_127))
(assert (= var2240356
   (ite (bvslt temp52_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp52_128 #x0000000000000000))
(assert (= var2240356 temp52_128))
(assert (= temp52_129 #x0000000000000000))
(assert (= var2228402 temp52_129))
(assert (= temp52_131 var2228402))
(assert (= temp52_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp52_131)))
(assert (= temp52_130 temp52_132))
(assert (= var2240378 (bvsmod temp52_130 ARGNAME_groups_NAMEEND)))
(assert (= temp52_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp52_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp52_134 #x0000000000000001))
(assert (= var2240379 temp52_134))
(assert (= var2240398 var2240288))
(assert (= temp52_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp52_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp52_136 #x0000000000000001))
(assert (= var2240399 temp52_136))
(assert (= temp52_137 #x0000000000000001))
(assert (= var2229290 temp52_137))
(assert (= temp52_139 var2229290))
(assert (= temp52_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp52_139)))
(assert (= temp52_138 temp52_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp52_138)))
(assert (= temp52_141 #x0000000000000000))
(assert (= var2228402 temp52_141))
(assert (= temp52_143 var2228402))
(assert (= temp52_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp52_143)))
(assert (= temp52_142 temp52_144))
(assert (= temp52_145 #x0000000000000002))
(assert (= var2503529 temp52_145))
(assert (= temp52_146 #x0000000000000001))
(assert (= var2240569 temp52_146))
(assert (= temp52_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp52_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp52_148 #x0000000000000001))
(assert (= var1521778 temp52_148))
(assert (= temp52_149 #x0000000000000001))
(assert (= var1521908 temp52_149))
(assert (= var4010473 var1521908))
(assert (= temp52_150 #x0000000000000000))
(assert (= var4210495 temp52_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp52_151 #x0000000000000002))
(assert (= var4339331 temp52_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4796816 var1521921))
(assert (= var1522108 var1521633))
(assert (= temp52_152 #x0000000000000000))
(assert (= var1522109
   (ite (distinct var1522108 temp52_152) #x0000000000000001 #x0000000000000000)))
(assert (= var5521229 var1522109))
(assert (= temp52_154 #x0000000000000001))
(assert (= temp52_153 temp52_154))
(assert (= temp52_155 #x0000000000000001))
(assert (= var6098410 temp52_155))
(assert (= temp52_157 #xffffffffffffffff))
(assert (= temp52_156 temp52_157))
(assert (= temp52_158 #x0000000000000001))
(assert (= var1521778 temp52_158))
(model-add temp52_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp52_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp52_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp52_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp52_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp52_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






