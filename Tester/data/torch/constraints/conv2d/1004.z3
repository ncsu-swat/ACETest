(declare-fun temp10109_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp10109_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp10109_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp10109_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp10109_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp10109_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp10109_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp10109_8 () (_ BitVec 64))
(declare-fun temp10109_10 () (_ BitVec 64))
(declare-fun temp10109_9 () (_ BitVec 64))
(declare-fun temp10109_12 () (_ BitVec 64))
(declare-fun temp10109_11 () (_ BitVec 64))
(declare-fun temp10109_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp10109_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp10109_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp10109_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp10109_17 () (_ BitVec 64))
(declare-fun temp10109_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp10109_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp10109_20 () (_ BitVec 64))
(declare-fun temp10109_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10109_22 () (_ BitVec 64))
(declare-fun temp10109_23 () (_ BitVec 64))
(declare-fun temp10109_24 () (_ BitVec 64))
(declare-fun temp10109_25 () (_ BitVec 64))
(declare-fun temp10109_26 () (_ BitVec 64))
(declare-fun temp10109_27 () (_ BitVec 64))
(declare-fun temp10109_28 () (_ BitVec 64))
(declare-fun temp10109_29 () (_ BitVec 64))
(declare-fun temp10109_30 () (_ BitVec 64))
(declare-fun temp10109_31 () (_ BitVec 64))
(declare-fun temp10109_32 () (_ BitVec 64))
(declare-fun temp10109_33 () (_ BitVec 64))
(declare-fun temp10109_34 () (_ BitVec 64))
(declare-fun temp10109_35 () (_ BitVec 64))
(declare-fun temp10109_36 () (_ BitVec 64))
(declare-fun temp10109_37 () (_ BitVec 64))
(declare-fun temp10109_38 () (_ BitVec 64))
(declare-fun temp10109_39 () (_ BitVec 64))
(declare-fun temp10109_40 () (_ BitVec 64))
(declare-fun temp10109_41 () (_ BitVec 64))
(declare-fun temp10109_42 () (_ BitVec 64))
(declare-fun temp10109_43 () (_ BitVec 64))
(declare-fun temp10109_44 () (_ BitVec 64))
(declare-fun temp10109_45 () (_ BitVec 64))
(declare-fun temp10109_46 () (_ BitVec 64))
(declare-fun temp10109_47 () (_ BitVec 64))
(declare-fun temp10109_48 () (_ BitVec 64))
(declare-fun temp10109_49 () (_ BitVec 64))
(declare-fun temp10109_50 () (_ BitVec 64))
(declare-fun temp10109_51 () (_ BitVec 64))
(declare-fun temp10109_52 () (_ BitVec 64))
(declare-fun temp10109_53 () (_ BitVec 64))
(declare-fun temp10109_54 () (_ BitVec 64))
(declare-fun temp10109_55 () (_ BitVec 64))
(declare-fun temp10109_56 () (_ BitVec 64))
(declare-fun temp10109_57 () (_ BitVec 64))
(declare-fun temp10109_58 () (_ BitVec 64))
(declare-fun temp10109_59 () (_ BitVec 64))
(declare-fun temp10109_60 () (_ BitVec 64))
(declare-fun temp10109_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp10109_62 () (_ BitVec 64))
(declare-fun temp10109_63 () (_ BitVec 64))
(declare-fun temp10109_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10109_65 () (_ BitVec 64))
(declare-fun temp10109_66 () (_ BitVec 64))
(declare-fun temp10109_67 () (_ BitVec 64))
(declare-fun temp10109_68 () (_ BitVec 64))
(declare-fun temp10109_69 () (_ BitVec 64))
(declare-fun temp10109_70 () (_ BitVec 64))
(declare-fun temp10109_71 () (_ BitVec 64))
(declare-fun temp10109_72 () (_ BitVec 64))
(declare-fun temp10109_73 () (_ BitVec 64))
(declare-fun temp10109_74 () (_ BitVec 64))
(declare-fun temp10109_75 () (_ BitVec 64))
(declare-fun temp10109_76 () (_ BitVec 64))
(declare-fun temp10109_77 () (_ BitVec 64))
(declare-fun temp10109_78 () (_ BitVec 64))
(declare-fun temp10109_79 () (_ BitVec 64))
(declare-fun temp10109_80 () (_ BitVec 64))
(declare-fun temp10109_81 () (_ BitVec 64))
(declare-fun temp10109_82 () (_ BitVec 64))
(declare-fun temp10109_83 () (_ BitVec 64))
(declare-fun temp10109_84 () (_ BitVec 64))
(declare-fun temp10109_85 () (_ BitVec 64))
(declare-fun temp10109_86 () (_ BitVec 64))
(declare-fun temp10109_87 () (_ BitVec 64))
(declare-fun temp10109_88 () (_ BitVec 64))
(declare-fun temp10109_89 () (_ BitVec 64))
(declare-fun temp10109_90 () (_ BitVec 64))
(declare-fun temp10109_91 () (_ BitVec 64))
(declare-fun temp10109_92 () (_ BitVec 64))
(declare-fun temp10109_93 () (_ BitVec 64))
(declare-fun temp10109_94 () (_ BitVec 64))
(declare-fun temp10109_95 () (_ BitVec 64))
(declare-fun temp10109_96 () (_ BitVec 64))
(declare-fun temp10109_97 () (_ BitVec 64))
(declare-fun temp10109_98 () (_ BitVec 64))
(declare-fun temp10109_99 () (_ BitVec 64))
(declare-fun temp10109_100 () (_ BitVec 64))
(declare-fun temp10109_101 () (_ BitVec 64))
(declare-fun temp10109_102 () (_ BitVec 64))
(declare-fun temp10109_103 () (_ BitVec 64))
(declare-fun temp10109_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp10109_105 () (_ BitVec 64))
(declare-fun temp10109_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp10109_107 () (_ BitVec 64))
(declare-fun temp10109_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10109_109 () (_ BitVec 64))
(declare-fun temp10109_110 () (_ BitVec 64))
(declare-fun temp10109_111 () (_ BitVec 64))
(declare-fun temp10109_112 () (_ BitVec 64))
(declare-fun temp10109_113 () (_ BitVec 64))
(declare-fun temp10109_114 () (_ BitVec 64))
(declare-fun temp10109_115 () (_ BitVec 64))
(declare-fun temp10109_116 () (_ BitVec 64))
(declare-fun temp10109_117 () (_ BitVec 64))
(declare-fun temp10109_118 () (_ BitVec 64))
(declare-fun temp10109_119 () (_ BitVec 64))
(declare-fun temp10109_120 () (_ BitVec 64))
(declare-fun temp10109_121 () (_ BitVec 64))
(declare-fun temp10109_122 () (_ BitVec 64))
(declare-fun temp10109_123 () (_ BitVec 64))
(declare-fun temp10109_124 () (_ BitVec 64))
(declare-fun temp10109_126 () (_ BitVec 64))
(declare-fun temp10109_127 () (_ BitVec 64))
(declare-fun temp10109_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp10109_128 () (_ BitVec 64))
(declare-fun temp10109_129 () (_ BitVec 64))
(declare-fun temp10109_131 () (_ BitVec 64))
(declare-fun temp10109_132 () (_ BitVec 64))
(declare-fun temp10109_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp10109_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp10109_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp10109_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp10109_136 () (_ BitVec 64))
(declare-fun temp10109_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp10109_139 () (_ BitVec 64))
(declare-fun temp10109_140 () (_ BitVec 64))
(declare-fun temp10109_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp10109_141 () (_ BitVec 64))
(declare-fun temp10109_143 () (_ BitVec 64))
(declare-fun temp10109_144 () (_ BitVec 64))
(declare-fun temp10109_142 () (_ BitVec 64))
(declare-fun temp10109_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp10109_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp10109_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp10109_148 () (_ BitVec 64))
(declare-fun temp10109_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp10109_150 () (_ BitVec 64))
(declare-fun var4010640 () (_ BitVec 64))
(declare-fun var4010467 () (_ BitVec 64))
(declare-fun var1521917 () (_ BitVec 64))
(declare-fun var4275993 () (_ BitVec 64))
(declare-fun temp10109_151 () (_ BitVec 64))
(declare-fun temp10109_152 () (_ BitVec 64))
(declare-fun temp10109_153 () (_ BitVec 64))
(declare-fun var4470403 () (_ BitVec 64))
(declare-fun var4470405 () (_ BitVec 64))
(declare-fun var4535948 () (_ BitVec 64))
(declare-fun var4535949 () (_ BitVec 64))
(declare-fun temp10109_154 () (_ BitVec 64))
(declare-fun var1522108 () (_ BitVec 64))
(declare-fun temp10109_155 () (_ BitVec 64))
(declare-fun var1522109 () (_ BitVec 64))
(declare-fun var5848909 () (_ BitVec 64))
(declare-fun temp10109_156 () (_ BitVec 64))
(assert (= temp10109_1 #x0000000000000002))
(assert (= var989741 temp10109_1))
(assert (= temp10109_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp10109_2)))
(assert (= temp10109_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp10109_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp10109_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp10109_4)))
(assert (= temp10109_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp10109_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp10109_6 #x0000000000000000))
(assert (= var989776 temp10109_6))
(assert (= temp10109_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp10109_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp10109_8 #x0000000000000001))
(assert (= var989810 temp10109_8))
(assert (= temp10109_10 #x0000000000000000))
(assert (= temp10109_9 temp10109_10))
(assert (= temp10109_12 #x0000000000000002))
(assert (= temp10109_11 temp10109_12))
(assert (= temp10109_13 #x0000000000000000))
(assert (= var1387902 temp10109_13))
(assert (= temp10109_14 #x0000000000000001))
(assert (= var1387923 temp10109_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp10109_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp10109_15)))
(assert (= temp10109_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10109_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10109_17 #x0000000000000000))
(assert (= var1521661 temp10109_17))
(assert (= temp10109_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp10109_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10109_19 #x0000000000000000))
(assert (= var1521706 temp10109_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp10109_20 #x0000000000000000))
(assert (= temp10109_21 temp10109_20))
(assert (= temp10109_22 (select ARGNAME_padding_NAMEEND_VAL temp10109_21)))
(assert (= temp10109_23 #x0000000000000001))
(assert (= temp10109_24 temp10109_23))
(assert (= temp10109_25 (select ARGNAME_padding_NAMEEND_VAL temp10109_24)))
(assert (= temp10109_26 #x0000000000000002))
(assert (= temp10109_27 temp10109_26))
(assert (= temp10109_28 (select ARGNAME_padding_NAMEEND_VAL temp10109_27)))
(assert (= temp10109_29 #x0000000000000003))
(assert (= temp10109_30 temp10109_29))
(assert (= temp10109_31 (select ARGNAME_padding_NAMEEND_VAL temp10109_30)))
(assert (= temp10109_32 #x0000000000000004))
(assert (= temp10109_33 temp10109_32))
(assert (= temp10109_34 (select ARGNAME_padding_NAMEEND_VAL temp10109_33)))
(assert (= temp10109_35 #x0000000000000005))
(assert (= temp10109_36 temp10109_35))
(assert (= temp10109_37 (select ARGNAME_padding_NAMEEND_VAL temp10109_36)))
(assert (= temp10109_38 #x0000000000000000))
(assert (= temp10109_39 #x0000000000000000))
(assert (= temp10109_40 temp10109_39))
(assert (= temp10109_41 (select ARGNAME_padding_NAMEEND_VAL temp10109_40)))
(assert (= temp10109_42 #x0000000000000000))
(assert (= temp10109_43 #x0000000000000001))
(assert (= temp10109_44 temp10109_43))
(assert (= temp10109_45 (select ARGNAME_padding_NAMEEND_VAL temp10109_44)))
(assert (= temp10109_46 #x0000000000000000))
(assert (= temp10109_47 #x0000000000000002))
(assert (= temp10109_48 temp10109_47))
(assert (= temp10109_49 (select ARGNAME_padding_NAMEEND_VAL temp10109_48)))
(assert (= temp10109_50 #x0000000000000000))
(assert (= temp10109_51 #x0000000000000003))
(assert (= temp10109_52 temp10109_51))
(assert (= temp10109_53 (select ARGNAME_padding_NAMEEND_VAL temp10109_52)))
(assert (= temp10109_54 #x0000000000000000))
(assert (= temp10109_55 #x0000000000000004))
(assert (= temp10109_56 temp10109_55))
(assert (= temp10109_57 (select ARGNAME_padding_NAMEEND_VAL temp10109_56)))
(assert (= temp10109_58 #x0000000000000000))
(assert (= temp10109_59 #x0000000000000005))
(assert (= temp10109_60 temp10109_59))
(assert (= temp10109_61 (select ARGNAME_padding_NAMEEND_VAL temp10109_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp10109_41 temp10109_38)
             (bvslt temp10109_45 temp10109_42)
             (bvslt temp10109_49 temp10109_46)
             (bvslt temp10109_53 temp10109_50)
             (bvslt temp10109_57 temp10109_54)
             (bvslt temp10109_61 temp10109_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10109_62 #x0000000000000000))
(assert (= var2240290 temp10109_62))
(assert (= temp10109_63 #x0000000000000000))
(assert (= temp10109_64 temp10109_63))
(assert (= temp10109_65 (select ARGNAME_stride_NAMEEND_VAL temp10109_64)))
(assert (= temp10109_66 #x0000000000000001))
(assert (= temp10109_67 temp10109_66))
(assert (= temp10109_68 (select ARGNAME_stride_NAMEEND_VAL temp10109_67)))
(assert (= temp10109_69 #x0000000000000002))
(assert (= temp10109_70 temp10109_69))
(assert (= temp10109_71 (select ARGNAME_stride_NAMEEND_VAL temp10109_70)))
(assert (= temp10109_72 #x0000000000000003))
(assert (= temp10109_73 temp10109_72))
(assert (= temp10109_74 (select ARGNAME_stride_NAMEEND_VAL temp10109_73)))
(assert (= temp10109_75 #x0000000000000004))
(assert (= temp10109_76 temp10109_75))
(assert (= temp10109_77 (select ARGNAME_stride_NAMEEND_VAL temp10109_76)))
(assert (= temp10109_78 #x0000000000000005))
(assert (= temp10109_79 temp10109_78))
(assert (= temp10109_80 (select ARGNAME_stride_NAMEEND_VAL temp10109_79)))
(assert (= temp10109_81 #x0000000000000000))
(assert (= temp10109_82 #x0000000000000000))
(assert (= temp10109_83 temp10109_82))
(assert (= temp10109_84 (select ARGNAME_stride_NAMEEND_VAL temp10109_83)))
(assert (= temp10109_85 #x0000000000000000))
(assert (= temp10109_86 #x0000000000000001))
(assert (= temp10109_87 temp10109_86))
(assert (= temp10109_88 (select ARGNAME_stride_NAMEEND_VAL temp10109_87)))
(assert (= temp10109_89 #x0000000000000000))
(assert (= temp10109_90 #x0000000000000002))
(assert (= temp10109_91 temp10109_90))
(assert (= temp10109_92 (select ARGNAME_stride_NAMEEND_VAL temp10109_91)))
(assert (= temp10109_93 #x0000000000000000))
(assert (= temp10109_94 #x0000000000000003))
(assert (= temp10109_95 temp10109_94))
(assert (= temp10109_96 (select ARGNAME_stride_NAMEEND_VAL temp10109_95)))
(assert (= temp10109_97 #x0000000000000000))
(assert (= temp10109_98 #x0000000000000004))
(assert (= temp10109_99 temp10109_98))
(assert (= temp10109_100 (select ARGNAME_stride_NAMEEND_VAL temp10109_99)))
(assert (= temp10109_101 #x0000000000000000))
(assert (= temp10109_102 #x0000000000000005))
(assert (= temp10109_103 temp10109_102))
(assert (= temp10109_104 (select ARGNAME_stride_NAMEEND_VAL temp10109_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp10109_84 temp10109_81)
             (bvsle temp10109_88 temp10109_85)
             (bvsle temp10109_92 temp10109_89)
             (bvsle temp10109_96 temp10109_93)
             (bvsle temp10109_100 temp10109_97)
             (bvsle temp10109_104 temp10109_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10109_105 #x0000000000000000))
(assert (= var2240311 temp10109_105))
(assert (= temp10109_106 #x0000000000000000))
(assert (= var2228402 temp10109_106))
(assert (= temp10109_107 #x0000000000000000))
(assert (= temp10109_108 temp10109_107))
(assert (= temp10109_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10109_108)))
(assert (= temp10109_110 #x0000000000000001))
(assert (= temp10109_111 temp10109_110))
(assert (= temp10109_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10109_111)))
(assert (= temp10109_113 #x0000000000000002))
(assert (= temp10109_114 temp10109_113))
(assert (= temp10109_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10109_114)))
(assert (= temp10109_116 #x0000000000000003))
(assert (= temp10109_117 temp10109_116))
(assert (= temp10109_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10109_117)))
(assert (= temp10109_119 #x0000000000000004))
(assert (= temp10109_120 temp10109_119))
(assert (= temp10109_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10109_120)))
(assert (= temp10109_122 #x0000000000000005))
(assert (= temp10109_123 temp10109_122))
(assert (= temp10109_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10109_123)))
(assert (= temp10109_126 var2228402))
(assert (= temp10109_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10109_126)))
(assert (= temp10109_125 temp10109_127))
(assert (= var2240356
   (ite (bvslt temp10109_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10109_128 #x0000000000000000))
(assert (= var2240356 temp10109_128))
(assert (= temp10109_129 #x0000000000000000))
(assert (= var2228402 temp10109_129))
(assert (= temp10109_131 var2228402))
(assert (= temp10109_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10109_131)))
(assert (= temp10109_130 temp10109_132))
(assert (= var2240378 (bvsmod temp10109_130 ARGNAME_groups_NAMEEND)))
(assert (= temp10109_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp10109_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp10109_134 #x0000000000000001))
(assert (= var2240379 temp10109_134))
(assert (= var2240398 var2240288))
(assert (= temp10109_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp10109_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp10109_136 #x0000000000000001))
(assert (= var2240399 temp10109_136))
(assert (= temp10109_137 #x0000000000000001))
(assert (= var2229290 temp10109_137))
(assert (= temp10109_139 var2229290))
(assert (= temp10109_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10109_139)))
(assert (= temp10109_138 temp10109_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp10109_138)))
(assert (= temp10109_141 #x0000000000000000))
(assert (= var2228402 temp10109_141))
(assert (= temp10109_143 var2228402))
(assert (= temp10109_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10109_143)))
(assert (= temp10109_142 temp10109_144))
(assert (= temp10109_145 #x0000000000000002))
(assert (= var2503529 temp10109_145))
(assert (= temp10109_146 #x0000000000000001))
(assert (= var2240569 temp10109_146))
(assert (= temp10109_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10109_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10109_148 #x0000000000000001))
(assert (= var1521778 temp10109_148))
(assert (= temp10109_149 #x0000000000000001))
(assert (= var1521908 temp10109_149))
(assert (= var4010473 var1521908))
(assert (= temp10109_150 #x0000000000000002))
(assert (= var4010640 temp10109_150))
(assert (= var4010467 var4010640))
(assert (= var1521917 var4010467))
(assert (= var4275993 var1521917))
(assert (= temp10109_151 #x0000000000000002))
(assert (= temp10109_152 #x0000000000000003))
(assert (or false (= var4275993 temp10109_151) (= var4275993 temp10109_152)))
(assert (= temp10109_153 #x0000000000000002))
(assert (= var4470403 temp10109_153))
(assert (= var4470405 (bvsub ARGNAME_weight_NAMEEND_DIM var4470403)))
(assert (= var4535948 var4470403))
(assert (= var4535949 var4470405))
(assert (= temp10109_154 #x0000000000000002))
(assert (or false (= var1521917 temp10109_154)))
(assert (= var1522108 var1521633))
(assert (= temp10109_155 #x0000000000000000))
(assert (= var1522109
   (ite (distinct var1522108 temp10109_155)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var5848909 var1522109))
(assert (= temp10109_156 #x0000000000000001))
(assert (= var1521778 temp10109_156))
(model-add temp10109_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp10109_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp10109_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp10109_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp10109_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp10109_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






