(declare-fun temp639_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp639_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp639_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp639_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp639_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp639_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp639_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp639_8 () (_ BitVec 64))
(declare-fun temp639_10 () (_ BitVec 64))
(declare-fun temp639_9 () (_ BitVec 64))
(declare-fun temp639_12 () (_ BitVec 64))
(declare-fun temp639_11 () (_ BitVec 64))
(declare-fun temp639_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp639_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp639_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp639_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp639_17 () (_ BitVec 64))
(declare-fun temp639_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp639_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp639_20 () (_ BitVec 64))
(declare-fun temp639_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp639_22 () (_ BitVec 64))
(declare-fun temp639_23 () (_ BitVec 64))
(declare-fun temp639_24 () (_ BitVec 64))
(declare-fun temp639_25 () (_ BitVec 64))
(declare-fun temp639_26 () (_ BitVec 64))
(declare-fun temp639_27 () (_ BitVec 64))
(declare-fun temp639_28 () (_ BitVec 64))
(declare-fun temp639_29 () (_ BitVec 64))
(declare-fun temp639_30 () (_ BitVec 64))
(declare-fun temp639_31 () (_ BitVec 64))
(declare-fun temp639_32 () (_ BitVec 64))
(declare-fun temp639_33 () (_ BitVec 64))
(declare-fun temp639_34 () (_ BitVec 64))
(declare-fun temp639_35 () (_ BitVec 64))
(declare-fun temp639_36 () (_ BitVec 64))
(declare-fun temp639_37 () (_ BitVec 64))
(declare-fun temp639_38 () (_ BitVec 64))
(declare-fun temp639_39 () (_ BitVec 64))
(declare-fun temp639_40 () (_ BitVec 64))
(declare-fun temp639_41 () (_ BitVec 64))
(declare-fun temp639_42 () (_ BitVec 64))
(declare-fun temp639_43 () (_ BitVec 64))
(declare-fun temp639_44 () (_ BitVec 64))
(declare-fun temp639_45 () (_ BitVec 64))
(declare-fun temp639_46 () (_ BitVec 64))
(declare-fun temp639_47 () (_ BitVec 64))
(declare-fun temp639_48 () (_ BitVec 64))
(declare-fun temp639_49 () (_ BitVec 64))
(declare-fun temp639_50 () (_ BitVec 64))
(declare-fun temp639_51 () (_ BitVec 64))
(declare-fun temp639_52 () (_ BitVec 64))
(declare-fun temp639_53 () (_ BitVec 64))
(declare-fun temp639_54 () (_ BitVec 64))
(declare-fun temp639_55 () (_ BitVec 64))
(declare-fun temp639_56 () (_ BitVec 64))
(declare-fun temp639_57 () (_ BitVec 64))
(declare-fun temp639_58 () (_ BitVec 64))
(declare-fun temp639_59 () (_ BitVec 64))
(declare-fun temp639_60 () (_ BitVec 64))
(declare-fun temp639_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp639_62 () (_ BitVec 64))
(declare-fun temp639_63 () (_ BitVec 64))
(declare-fun temp639_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp639_65 () (_ BitVec 64))
(declare-fun temp639_66 () (_ BitVec 64))
(declare-fun temp639_67 () (_ BitVec 64))
(declare-fun temp639_68 () (_ BitVec 64))
(declare-fun temp639_69 () (_ BitVec 64))
(declare-fun temp639_70 () (_ BitVec 64))
(declare-fun temp639_71 () (_ BitVec 64))
(declare-fun temp639_72 () (_ BitVec 64))
(declare-fun temp639_73 () (_ BitVec 64))
(declare-fun temp639_74 () (_ BitVec 64))
(declare-fun temp639_75 () (_ BitVec 64))
(declare-fun temp639_76 () (_ BitVec 64))
(declare-fun temp639_77 () (_ BitVec 64))
(declare-fun temp639_78 () (_ BitVec 64))
(declare-fun temp639_79 () (_ BitVec 64))
(declare-fun temp639_80 () (_ BitVec 64))
(declare-fun temp639_81 () (_ BitVec 64))
(declare-fun temp639_82 () (_ BitVec 64))
(declare-fun temp639_83 () (_ BitVec 64))
(declare-fun temp639_84 () (_ BitVec 64))
(declare-fun temp639_85 () (_ BitVec 64))
(declare-fun temp639_86 () (_ BitVec 64))
(declare-fun temp639_87 () (_ BitVec 64))
(declare-fun temp639_88 () (_ BitVec 64))
(declare-fun temp639_89 () (_ BitVec 64))
(declare-fun temp639_90 () (_ BitVec 64))
(declare-fun temp639_91 () (_ BitVec 64))
(declare-fun temp639_92 () (_ BitVec 64))
(declare-fun temp639_93 () (_ BitVec 64))
(declare-fun temp639_94 () (_ BitVec 64))
(declare-fun temp639_95 () (_ BitVec 64))
(declare-fun temp639_96 () (_ BitVec 64))
(declare-fun temp639_97 () (_ BitVec 64))
(declare-fun temp639_98 () (_ BitVec 64))
(declare-fun temp639_99 () (_ BitVec 64))
(declare-fun temp639_100 () (_ BitVec 64))
(declare-fun temp639_101 () (_ BitVec 64))
(declare-fun temp639_102 () (_ BitVec 64))
(declare-fun temp639_103 () (_ BitVec 64))
(declare-fun temp639_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp639_105 () (_ BitVec 64))
(declare-fun temp639_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp639_107 () (_ BitVec 64))
(declare-fun temp639_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp639_109 () (_ BitVec 64))
(declare-fun temp639_110 () (_ BitVec 64))
(declare-fun temp639_111 () (_ BitVec 64))
(declare-fun temp639_112 () (_ BitVec 64))
(declare-fun temp639_113 () (_ BitVec 64))
(declare-fun temp639_114 () (_ BitVec 64))
(declare-fun temp639_115 () (_ BitVec 64))
(declare-fun temp639_116 () (_ BitVec 64))
(declare-fun temp639_117 () (_ BitVec 64))
(declare-fun temp639_118 () (_ BitVec 64))
(declare-fun temp639_119 () (_ BitVec 64))
(declare-fun temp639_120 () (_ BitVec 64))
(declare-fun temp639_121 () (_ BitVec 64))
(declare-fun temp639_122 () (_ BitVec 64))
(declare-fun temp639_123 () (_ BitVec 64))
(declare-fun temp639_124 () (_ BitVec 64))
(declare-fun temp639_126 () (_ BitVec 64))
(declare-fun temp639_127 () (_ BitVec 64))
(declare-fun temp639_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp639_128 () (_ BitVec 64))
(declare-fun temp639_129 () (_ BitVec 64))
(declare-fun temp639_131 () (_ BitVec 64))
(declare-fun temp639_132 () (_ BitVec 64))
(declare-fun temp639_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp639_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp639_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp639_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp639_136 () (_ BitVec 64))
(declare-fun temp639_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp639_139 () (_ BitVec 64))
(declare-fun temp639_140 () (_ BitVec 64))
(declare-fun temp639_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp639_141 () (_ BitVec 64))
(declare-fun temp639_143 () (_ BitVec 64))
(declare-fun temp639_144 () (_ BitVec 64))
(declare-fun temp639_142 () (_ BitVec 64))
(declare-fun temp639_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp639_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp639_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp639_148 () (_ BitVec 64))
(declare-fun temp639_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp639_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp639_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var1522214 () (_ BitVec 64))
(declare-fun temp639_152 () (_ BitVec 64))
(declare-fun var1522215 () (_ BitVec 64))
(declare-fun temp639_153 () (_ BitVec 64))
(assert (= temp639_1 #x0000000000000002))
(assert (= var989741 temp639_1))
(assert (= temp639_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp639_2)))
(assert (= temp639_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp639_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp639_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp639_4)))
(assert (= temp639_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp639_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp639_6 #x0000000000000000))
(assert (= var989776 temp639_6))
(assert (= temp639_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp639_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp639_8 #x0000000000000001))
(assert (= var989810 temp639_8))
(assert (= temp639_10 #x0000000000000000))
(assert (= temp639_9 temp639_10))
(assert (= temp639_12 #x0000000000000002))
(assert (= temp639_11 temp639_12))
(assert (= temp639_13 #x0000000000000000))
(assert (= var1387902 temp639_13))
(assert (= temp639_14 #x0000000000000001))
(assert (= var1387923 temp639_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp639_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp639_15)))
(assert (= temp639_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp639_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp639_17 #x0000000000000000))
(assert (= var1521661 temp639_17))
(assert (= temp639_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp639_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp639_19 #x0000000000000000))
(assert (= var1521706 temp639_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp639_20 #x0000000000000000))
(assert (= temp639_21 temp639_20))
(assert (= temp639_22 (select ARGNAME_padding_NAMEEND_VAL temp639_21)))
(assert (= temp639_23 #x0000000000000001))
(assert (= temp639_24 temp639_23))
(assert (= temp639_25 (select ARGNAME_padding_NAMEEND_VAL temp639_24)))
(assert (= temp639_26 #x0000000000000002))
(assert (= temp639_27 temp639_26))
(assert (= temp639_28 (select ARGNAME_padding_NAMEEND_VAL temp639_27)))
(assert (= temp639_29 #x0000000000000003))
(assert (= temp639_30 temp639_29))
(assert (= temp639_31 (select ARGNAME_padding_NAMEEND_VAL temp639_30)))
(assert (= temp639_32 #x0000000000000004))
(assert (= temp639_33 temp639_32))
(assert (= temp639_34 (select ARGNAME_padding_NAMEEND_VAL temp639_33)))
(assert (= temp639_35 #x0000000000000005))
(assert (= temp639_36 temp639_35))
(assert (= temp639_37 (select ARGNAME_padding_NAMEEND_VAL temp639_36)))
(assert (= temp639_38 #x0000000000000000))
(assert (= temp639_39 #x0000000000000000))
(assert (= temp639_40 temp639_39))
(assert (= temp639_41 (select ARGNAME_padding_NAMEEND_VAL temp639_40)))
(assert (= temp639_42 #x0000000000000000))
(assert (= temp639_43 #x0000000000000001))
(assert (= temp639_44 temp639_43))
(assert (= temp639_45 (select ARGNAME_padding_NAMEEND_VAL temp639_44)))
(assert (= temp639_46 #x0000000000000000))
(assert (= temp639_47 #x0000000000000002))
(assert (= temp639_48 temp639_47))
(assert (= temp639_49 (select ARGNAME_padding_NAMEEND_VAL temp639_48)))
(assert (= temp639_50 #x0000000000000000))
(assert (= temp639_51 #x0000000000000003))
(assert (= temp639_52 temp639_51))
(assert (= temp639_53 (select ARGNAME_padding_NAMEEND_VAL temp639_52)))
(assert (= temp639_54 #x0000000000000000))
(assert (= temp639_55 #x0000000000000004))
(assert (= temp639_56 temp639_55))
(assert (= temp639_57 (select ARGNAME_padding_NAMEEND_VAL temp639_56)))
(assert (= temp639_58 #x0000000000000000))
(assert (= temp639_59 #x0000000000000005))
(assert (= temp639_60 temp639_59))
(assert (= temp639_61 (select ARGNAME_padding_NAMEEND_VAL temp639_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp639_41 temp639_38)
             (bvslt temp639_45 temp639_42)
             (bvslt temp639_49 temp639_46)
             (bvslt temp639_53 temp639_50)
             (bvslt temp639_57 temp639_54)
             (bvslt temp639_61 temp639_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp639_62 #x0000000000000000))
(assert (= var2240290 temp639_62))
(assert (= temp639_63 #x0000000000000000))
(assert (= temp639_64 temp639_63))
(assert (= temp639_65 (select ARGNAME_stride_NAMEEND_VAL temp639_64)))
(assert (= temp639_66 #x0000000000000001))
(assert (= temp639_67 temp639_66))
(assert (= temp639_68 (select ARGNAME_stride_NAMEEND_VAL temp639_67)))
(assert (= temp639_69 #x0000000000000002))
(assert (= temp639_70 temp639_69))
(assert (= temp639_71 (select ARGNAME_stride_NAMEEND_VAL temp639_70)))
(assert (= temp639_72 #x0000000000000003))
(assert (= temp639_73 temp639_72))
(assert (= temp639_74 (select ARGNAME_stride_NAMEEND_VAL temp639_73)))
(assert (= temp639_75 #x0000000000000004))
(assert (= temp639_76 temp639_75))
(assert (= temp639_77 (select ARGNAME_stride_NAMEEND_VAL temp639_76)))
(assert (= temp639_78 #x0000000000000005))
(assert (= temp639_79 temp639_78))
(assert (= temp639_80 (select ARGNAME_stride_NAMEEND_VAL temp639_79)))
(assert (= temp639_81 #x0000000000000000))
(assert (= temp639_82 #x0000000000000000))
(assert (= temp639_83 temp639_82))
(assert (= temp639_84 (select ARGNAME_stride_NAMEEND_VAL temp639_83)))
(assert (= temp639_85 #x0000000000000000))
(assert (= temp639_86 #x0000000000000001))
(assert (= temp639_87 temp639_86))
(assert (= temp639_88 (select ARGNAME_stride_NAMEEND_VAL temp639_87)))
(assert (= temp639_89 #x0000000000000000))
(assert (= temp639_90 #x0000000000000002))
(assert (= temp639_91 temp639_90))
(assert (= temp639_92 (select ARGNAME_stride_NAMEEND_VAL temp639_91)))
(assert (= temp639_93 #x0000000000000000))
(assert (= temp639_94 #x0000000000000003))
(assert (= temp639_95 temp639_94))
(assert (= temp639_96 (select ARGNAME_stride_NAMEEND_VAL temp639_95)))
(assert (= temp639_97 #x0000000000000000))
(assert (= temp639_98 #x0000000000000004))
(assert (= temp639_99 temp639_98))
(assert (= temp639_100 (select ARGNAME_stride_NAMEEND_VAL temp639_99)))
(assert (= temp639_101 #x0000000000000000))
(assert (= temp639_102 #x0000000000000005))
(assert (= temp639_103 temp639_102))
(assert (= temp639_104 (select ARGNAME_stride_NAMEEND_VAL temp639_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp639_84 temp639_81)
             (bvsle temp639_88 temp639_85)
             (bvsle temp639_92 temp639_89)
             (bvsle temp639_96 temp639_93)
             (bvsle temp639_100 temp639_97)
             (bvsle temp639_104 temp639_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp639_105 #x0000000000000000))
(assert (= var2240311 temp639_105))
(assert (= temp639_106 #x0000000000000000))
(assert (= var2228402 temp639_106))
(assert (= temp639_107 #x0000000000000000))
(assert (= temp639_108 temp639_107))
(assert (= temp639_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp639_108)))
(assert (= temp639_110 #x0000000000000001))
(assert (= temp639_111 temp639_110))
(assert (= temp639_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp639_111)))
(assert (= temp639_113 #x0000000000000002))
(assert (= temp639_114 temp639_113))
(assert (= temp639_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp639_114)))
(assert (= temp639_116 #x0000000000000003))
(assert (= temp639_117 temp639_116))
(assert (= temp639_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp639_117)))
(assert (= temp639_119 #x0000000000000004))
(assert (= temp639_120 temp639_119))
(assert (= temp639_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp639_120)))
(assert (= temp639_122 #x0000000000000005))
(assert (= temp639_123 temp639_122))
(assert (= temp639_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp639_123)))
(assert (= temp639_126 var2228402))
(assert (= temp639_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp639_126)))
(assert (= temp639_125 temp639_127))
(assert (= var2240356
   (ite (bvslt temp639_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp639_128 #x0000000000000000))
(assert (= var2240356 temp639_128))
(assert (= temp639_129 #x0000000000000000))
(assert (= var2228402 temp639_129))
(assert (= temp639_131 var2228402))
(assert (= temp639_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp639_131)))
(assert (= temp639_130 temp639_132))
(assert (= var2240378 (bvsmod temp639_130 ARGNAME_groups_NAMEEND)))
(assert (= temp639_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp639_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp639_134 #x0000000000000001))
(assert (= var2240379 temp639_134))
(assert (= var2240398 var2240288))
(assert (= temp639_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp639_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp639_136 #x0000000000000001))
(assert (= var2240399 temp639_136))
(assert (= temp639_137 #x0000000000000001))
(assert (= var2229290 temp639_137))
(assert (= temp639_139 var2229290))
(assert (= temp639_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp639_139)))
(assert (= temp639_138 temp639_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp639_138)))
(assert (= temp639_141 #x0000000000000000))
(assert (= var2228402 temp639_141))
(assert (= temp639_143 var2228402))
(assert (= temp639_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp639_143)))
(assert (= temp639_142 temp639_144))
(assert (= temp639_145 #x0000000000000002))
(assert (= var2503529 temp639_145))
(assert (= temp639_146 #x0000000000000001))
(assert (= var2240569 temp639_146))
(assert (= temp639_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp639_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp639_148 #x0000000000000001))
(assert (= var1521778 temp639_148))
(assert (= temp639_149 #x0000000000000001))
(assert (= var1521908 temp639_149))
(assert (= var4010473 var1521908))
(assert (= temp639_150 #x0000000000000000))
(assert (= var4210495 temp639_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp639_151 #x0000000000000002))
(assert (= var4339331 temp639_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4796816 var1521921))
(assert (= var1522214 var1521633))
(assert (= temp639_152 #x0000000000000000))
(assert (= var1522215
   (ite (distinct var1522214 temp639_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp639_153 #x0000000000000001))
(assert (= var1521778 temp639_153))
(model-add temp639_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp639_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp639_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp639_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp639_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp639_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






