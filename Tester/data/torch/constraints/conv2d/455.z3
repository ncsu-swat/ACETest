(declare-fun temp605_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp605_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp605_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp605_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp605_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp605_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp605_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp605_8 () (_ BitVec 64))
(declare-fun temp605_10 () (_ BitVec 64))
(declare-fun temp605_9 () (_ BitVec 64))
(declare-fun temp605_12 () (_ BitVec 64))
(declare-fun temp605_11 () (_ BitVec 64))
(declare-fun temp605_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp605_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp605_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp605_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp605_17 () (_ BitVec 64))
(declare-fun temp605_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp605_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp605_20 () (_ BitVec 64))
(declare-fun temp605_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp605_22 () (_ BitVec 64))
(declare-fun temp605_23 () (_ BitVec 64))
(declare-fun temp605_24 () (_ BitVec 64))
(declare-fun temp605_25 () (_ BitVec 64))
(declare-fun temp605_26 () (_ BitVec 64))
(declare-fun temp605_27 () (_ BitVec 64))
(declare-fun temp605_28 () (_ BitVec 64))
(declare-fun temp605_29 () (_ BitVec 64))
(declare-fun temp605_30 () (_ BitVec 64))
(declare-fun temp605_31 () (_ BitVec 64))
(declare-fun temp605_32 () (_ BitVec 64))
(declare-fun temp605_33 () (_ BitVec 64))
(declare-fun temp605_34 () (_ BitVec 64))
(declare-fun temp605_35 () (_ BitVec 64))
(declare-fun temp605_36 () (_ BitVec 64))
(declare-fun temp605_37 () (_ BitVec 64))
(declare-fun temp605_38 () (_ BitVec 64))
(declare-fun temp605_39 () (_ BitVec 64))
(declare-fun temp605_40 () (_ BitVec 64))
(declare-fun temp605_41 () (_ BitVec 64))
(declare-fun temp605_42 () (_ BitVec 64))
(declare-fun temp605_43 () (_ BitVec 64))
(declare-fun temp605_44 () (_ BitVec 64))
(declare-fun temp605_45 () (_ BitVec 64))
(declare-fun temp605_46 () (_ BitVec 64))
(declare-fun temp605_47 () (_ BitVec 64))
(declare-fun temp605_48 () (_ BitVec 64))
(declare-fun temp605_49 () (_ BitVec 64))
(declare-fun temp605_50 () (_ BitVec 64))
(declare-fun temp605_51 () (_ BitVec 64))
(declare-fun temp605_52 () (_ BitVec 64))
(declare-fun temp605_53 () (_ BitVec 64))
(declare-fun temp605_54 () (_ BitVec 64))
(declare-fun temp605_55 () (_ BitVec 64))
(declare-fun temp605_56 () (_ BitVec 64))
(declare-fun temp605_57 () (_ BitVec 64))
(declare-fun temp605_58 () (_ BitVec 64))
(declare-fun temp605_59 () (_ BitVec 64))
(declare-fun temp605_60 () (_ BitVec 64))
(declare-fun temp605_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp605_62 () (_ BitVec 64))
(declare-fun temp605_63 () (_ BitVec 64))
(declare-fun temp605_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp605_65 () (_ BitVec 64))
(declare-fun temp605_66 () (_ BitVec 64))
(declare-fun temp605_67 () (_ BitVec 64))
(declare-fun temp605_68 () (_ BitVec 64))
(declare-fun temp605_69 () (_ BitVec 64))
(declare-fun temp605_70 () (_ BitVec 64))
(declare-fun temp605_71 () (_ BitVec 64))
(declare-fun temp605_72 () (_ BitVec 64))
(declare-fun temp605_73 () (_ BitVec 64))
(declare-fun temp605_74 () (_ BitVec 64))
(declare-fun temp605_75 () (_ BitVec 64))
(declare-fun temp605_76 () (_ BitVec 64))
(declare-fun temp605_77 () (_ BitVec 64))
(declare-fun temp605_78 () (_ BitVec 64))
(declare-fun temp605_79 () (_ BitVec 64))
(declare-fun temp605_80 () (_ BitVec 64))
(declare-fun temp605_81 () (_ BitVec 64))
(declare-fun temp605_82 () (_ BitVec 64))
(declare-fun temp605_83 () (_ BitVec 64))
(declare-fun temp605_84 () (_ BitVec 64))
(declare-fun temp605_85 () (_ BitVec 64))
(declare-fun temp605_86 () (_ BitVec 64))
(declare-fun temp605_87 () (_ BitVec 64))
(declare-fun temp605_88 () (_ BitVec 64))
(declare-fun temp605_89 () (_ BitVec 64))
(declare-fun temp605_90 () (_ BitVec 64))
(declare-fun temp605_91 () (_ BitVec 64))
(declare-fun temp605_92 () (_ BitVec 64))
(declare-fun temp605_93 () (_ BitVec 64))
(declare-fun temp605_94 () (_ BitVec 64))
(declare-fun temp605_95 () (_ BitVec 64))
(declare-fun temp605_96 () (_ BitVec 64))
(declare-fun temp605_97 () (_ BitVec 64))
(declare-fun temp605_98 () (_ BitVec 64))
(declare-fun temp605_99 () (_ BitVec 64))
(declare-fun temp605_100 () (_ BitVec 64))
(declare-fun temp605_101 () (_ BitVec 64))
(declare-fun temp605_102 () (_ BitVec 64))
(declare-fun temp605_103 () (_ BitVec 64))
(declare-fun temp605_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp605_105 () (_ BitVec 64))
(declare-fun temp605_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp605_107 () (_ BitVec 64))
(declare-fun temp605_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp605_109 () (_ BitVec 64))
(declare-fun temp605_110 () (_ BitVec 64))
(declare-fun temp605_111 () (_ BitVec 64))
(declare-fun temp605_112 () (_ BitVec 64))
(declare-fun temp605_113 () (_ BitVec 64))
(declare-fun temp605_114 () (_ BitVec 64))
(declare-fun temp605_115 () (_ BitVec 64))
(declare-fun temp605_116 () (_ BitVec 64))
(declare-fun temp605_117 () (_ BitVec 64))
(declare-fun temp605_118 () (_ BitVec 64))
(declare-fun temp605_119 () (_ BitVec 64))
(declare-fun temp605_120 () (_ BitVec 64))
(declare-fun temp605_121 () (_ BitVec 64))
(declare-fun temp605_122 () (_ BitVec 64))
(declare-fun temp605_123 () (_ BitVec 64))
(declare-fun temp605_124 () (_ BitVec 64))
(declare-fun temp605_126 () (_ BitVec 64))
(declare-fun temp605_127 () (_ BitVec 64))
(declare-fun temp605_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp605_128 () (_ BitVec 64))
(declare-fun temp605_129 () (_ BitVec 64))
(declare-fun temp605_131 () (_ BitVec 64))
(declare-fun temp605_132 () (_ BitVec 64))
(declare-fun temp605_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp605_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp605_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp605_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp605_136 () (_ BitVec 64))
(declare-fun temp605_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp605_139 () (_ BitVec 64))
(declare-fun temp605_140 () (_ BitVec 64))
(declare-fun temp605_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp605_141 () (_ BitVec 64))
(declare-fun temp605_143 () (_ BitVec 64))
(declare-fun temp605_144 () (_ BitVec 64))
(declare-fun temp605_142 () (_ BitVec 64))
(declare-fun temp605_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp605_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp605_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp605_148 () (_ BitVec 64))
(declare-fun temp605_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp605_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp605_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var1522108 () (_ BitVec 64))
(declare-fun temp605_152 () (_ BitVec 64))
(declare-fun var1522109 () (_ BitVec 64))
(declare-fun var5521229 () (_ BitVec 64))
(declare-fun temp605_153 () (_ BitVec 64))
(assert (= temp605_1 #x0000000000000002))
(assert (= var989741 temp605_1))
(assert (= temp605_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp605_2)))
(assert (= temp605_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp605_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp605_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp605_4)))
(assert (= temp605_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp605_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp605_6 #x0000000000000000))
(assert (= var989776 temp605_6))
(assert (= temp605_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp605_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp605_8 #x0000000000000001))
(assert (= var989810 temp605_8))
(assert (= temp605_10 #x0000000000000000))
(assert (= temp605_9 temp605_10))
(assert (= temp605_12 #x0000000000000002))
(assert (= temp605_11 temp605_12))
(assert (= temp605_13 #x0000000000000000))
(assert (= var1387902 temp605_13))
(assert (= temp605_14 #x0000000000000001))
(assert (= var1387923 temp605_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp605_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp605_15)))
(assert (= temp605_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp605_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_17 #x0000000000000000))
(assert (= var1521661 temp605_17))
(assert (= temp605_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp605_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_19 #x0000000000000000))
(assert (= var1521706 temp605_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp605_20 #x0000000000000000))
(assert (= temp605_21 temp605_20))
(assert (= temp605_22 (select ARGNAME_padding_NAMEEND_VAL temp605_21)))
(assert (= temp605_23 #x0000000000000001))
(assert (= temp605_24 temp605_23))
(assert (= temp605_25 (select ARGNAME_padding_NAMEEND_VAL temp605_24)))
(assert (= temp605_26 #x0000000000000002))
(assert (= temp605_27 temp605_26))
(assert (= temp605_28 (select ARGNAME_padding_NAMEEND_VAL temp605_27)))
(assert (= temp605_29 #x0000000000000003))
(assert (= temp605_30 temp605_29))
(assert (= temp605_31 (select ARGNAME_padding_NAMEEND_VAL temp605_30)))
(assert (= temp605_32 #x0000000000000004))
(assert (= temp605_33 temp605_32))
(assert (= temp605_34 (select ARGNAME_padding_NAMEEND_VAL temp605_33)))
(assert (= temp605_35 #x0000000000000005))
(assert (= temp605_36 temp605_35))
(assert (= temp605_37 (select ARGNAME_padding_NAMEEND_VAL temp605_36)))
(assert (= temp605_38 #x0000000000000000))
(assert (= temp605_39 #x0000000000000000))
(assert (= temp605_40 temp605_39))
(assert (= temp605_41 (select ARGNAME_padding_NAMEEND_VAL temp605_40)))
(assert (= temp605_42 #x0000000000000000))
(assert (= temp605_43 #x0000000000000001))
(assert (= temp605_44 temp605_43))
(assert (= temp605_45 (select ARGNAME_padding_NAMEEND_VAL temp605_44)))
(assert (= temp605_46 #x0000000000000000))
(assert (= temp605_47 #x0000000000000002))
(assert (= temp605_48 temp605_47))
(assert (= temp605_49 (select ARGNAME_padding_NAMEEND_VAL temp605_48)))
(assert (= temp605_50 #x0000000000000000))
(assert (= temp605_51 #x0000000000000003))
(assert (= temp605_52 temp605_51))
(assert (= temp605_53 (select ARGNAME_padding_NAMEEND_VAL temp605_52)))
(assert (= temp605_54 #x0000000000000000))
(assert (= temp605_55 #x0000000000000004))
(assert (= temp605_56 temp605_55))
(assert (= temp605_57 (select ARGNAME_padding_NAMEEND_VAL temp605_56)))
(assert (= temp605_58 #x0000000000000000))
(assert (= temp605_59 #x0000000000000005))
(assert (= temp605_60 temp605_59))
(assert (= temp605_61 (select ARGNAME_padding_NAMEEND_VAL temp605_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp605_41 temp605_38)
             (bvslt temp605_45 temp605_42)
             (bvslt temp605_49 temp605_46)
             (bvslt temp605_53 temp605_50)
             (bvslt temp605_57 temp605_54)
             (bvslt temp605_61 temp605_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_62 #x0000000000000000))
(assert (= var2240290 temp605_62))
(assert (= temp605_63 #x0000000000000000))
(assert (= temp605_64 temp605_63))
(assert (= temp605_65 (select ARGNAME_stride_NAMEEND_VAL temp605_64)))
(assert (= temp605_66 #x0000000000000001))
(assert (= temp605_67 temp605_66))
(assert (= temp605_68 (select ARGNAME_stride_NAMEEND_VAL temp605_67)))
(assert (= temp605_69 #x0000000000000002))
(assert (= temp605_70 temp605_69))
(assert (= temp605_71 (select ARGNAME_stride_NAMEEND_VAL temp605_70)))
(assert (= temp605_72 #x0000000000000003))
(assert (= temp605_73 temp605_72))
(assert (= temp605_74 (select ARGNAME_stride_NAMEEND_VAL temp605_73)))
(assert (= temp605_75 #x0000000000000004))
(assert (= temp605_76 temp605_75))
(assert (= temp605_77 (select ARGNAME_stride_NAMEEND_VAL temp605_76)))
(assert (= temp605_78 #x0000000000000005))
(assert (= temp605_79 temp605_78))
(assert (= temp605_80 (select ARGNAME_stride_NAMEEND_VAL temp605_79)))
(assert (= temp605_81 #x0000000000000000))
(assert (= temp605_82 #x0000000000000000))
(assert (= temp605_83 temp605_82))
(assert (= temp605_84 (select ARGNAME_stride_NAMEEND_VAL temp605_83)))
(assert (= temp605_85 #x0000000000000000))
(assert (= temp605_86 #x0000000000000001))
(assert (= temp605_87 temp605_86))
(assert (= temp605_88 (select ARGNAME_stride_NAMEEND_VAL temp605_87)))
(assert (= temp605_89 #x0000000000000000))
(assert (= temp605_90 #x0000000000000002))
(assert (= temp605_91 temp605_90))
(assert (= temp605_92 (select ARGNAME_stride_NAMEEND_VAL temp605_91)))
(assert (= temp605_93 #x0000000000000000))
(assert (= temp605_94 #x0000000000000003))
(assert (= temp605_95 temp605_94))
(assert (= temp605_96 (select ARGNAME_stride_NAMEEND_VAL temp605_95)))
(assert (= temp605_97 #x0000000000000000))
(assert (= temp605_98 #x0000000000000004))
(assert (= temp605_99 temp605_98))
(assert (= temp605_100 (select ARGNAME_stride_NAMEEND_VAL temp605_99)))
(assert (= temp605_101 #x0000000000000000))
(assert (= temp605_102 #x0000000000000005))
(assert (= temp605_103 temp605_102))
(assert (= temp605_104 (select ARGNAME_stride_NAMEEND_VAL temp605_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp605_84 temp605_81)
             (bvsle temp605_88 temp605_85)
             (bvsle temp605_92 temp605_89)
             (bvsle temp605_96 temp605_93)
             (bvsle temp605_100 temp605_97)
             (bvsle temp605_104 temp605_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_105 #x0000000000000000))
(assert (= var2240311 temp605_105))
(assert (= temp605_106 #x0000000000000000))
(assert (= var2228402 temp605_106))
(assert (= temp605_107 #x0000000000000000))
(assert (= temp605_108 temp605_107))
(assert (= temp605_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_108)))
(assert (= temp605_110 #x0000000000000001))
(assert (= temp605_111 temp605_110))
(assert (= temp605_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_111)))
(assert (= temp605_113 #x0000000000000002))
(assert (= temp605_114 temp605_113))
(assert (= temp605_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_114)))
(assert (= temp605_116 #x0000000000000003))
(assert (= temp605_117 temp605_116))
(assert (= temp605_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_117)))
(assert (= temp605_119 #x0000000000000004))
(assert (= temp605_120 temp605_119))
(assert (= temp605_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_120)))
(assert (= temp605_122 #x0000000000000005))
(assert (= temp605_123 temp605_122))
(assert (= temp605_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_123)))
(assert (= temp605_126 var2228402))
(assert (= temp605_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_126)))
(assert (= temp605_125 temp605_127))
(assert (= var2240356
   (ite (bvslt temp605_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_128 #x0000000000000000))
(assert (= var2240356 temp605_128))
(assert (= temp605_129 #x0000000000000000))
(assert (= var2228402 temp605_129))
(assert (= temp605_131 var2228402))
(assert (= temp605_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_131)))
(assert (= temp605_130 temp605_132))
(assert (= var2240378 (bvsmod temp605_130 ARGNAME_groups_NAMEEND)))
(assert (= temp605_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp605_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp605_134 #x0000000000000001))
(assert (= var2240379 temp605_134))
(assert (= var2240398 var2240288))
(assert (= temp605_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp605_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp605_136 #x0000000000000001))
(assert (= var2240399 temp605_136))
(assert (= temp605_137 #x0000000000000001))
(assert (= var2229290 temp605_137))
(assert (= temp605_139 var2229290))
(assert (= temp605_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_139)))
(assert (= temp605_138 temp605_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp605_138)))
(assert (= temp605_141 #x0000000000000000))
(assert (= var2228402 temp605_141))
(assert (= temp605_143 var2228402))
(assert (= temp605_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_143)))
(assert (= temp605_142 temp605_144))
(assert (= temp605_145 #x0000000000000002))
(assert (= var2503529 temp605_145))
(assert (= temp605_146 #x0000000000000001))
(assert (= var2240569 temp605_146))
(assert (= temp605_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp605_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_148 #x0000000000000001))
(assert (= var1521778 temp605_148))
(assert (= temp605_149 #x0000000000000001))
(assert (= var1521908 temp605_149))
(assert (= var4010473 var1521908))
(assert (= temp605_150 #x0000000000000000))
(assert (= var4210495 temp605_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp605_151 #x0000000000000002))
(assert (= var4339331 temp605_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4796816 var1521921))
(assert (= var1522108 var1521633))
(assert (= temp605_152 #x0000000000000000))
(assert (= var1522109
   (ite (distinct var1522108 temp605_152) #x0000000000000001 #x0000000000000000)))
(assert (= var5521229 var1522109))
(assert (= temp605_153 #x0000000000000001))
(assert (= var1521778 temp605_153))
(model-add temp605_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp605_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp605_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp605_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp605_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp605_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






