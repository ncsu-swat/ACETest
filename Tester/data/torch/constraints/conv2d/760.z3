(declare-fun temp1012_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp1012_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp1012_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp1012_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp1012_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp1012_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp1012_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp1012_8 () (_ BitVec 64))
(declare-fun temp1012_10 () (_ BitVec 64))
(declare-fun temp1012_9 () (_ BitVec 64))
(declare-fun temp1012_12 () (_ BitVec 64))
(declare-fun temp1012_11 () (_ BitVec 64))
(declare-fun temp1012_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp1012_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp1012_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp1012_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp1012_17 () (_ BitVec 64))
(declare-fun temp1012_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp1012_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp1012_20 () (_ BitVec 64))
(declare-fun temp1012_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1012_22 () (_ BitVec 64))
(declare-fun temp1012_23 () (_ BitVec 64))
(declare-fun temp1012_24 () (_ BitVec 64))
(declare-fun temp1012_25 () (_ BitVec 64))
(declare-fun temp1012_26 () (_ BitVec 64))
(declare-fun temp1012_27 () (_ BitVec 64))
(declare-fun temp1012_28 () (_ BitVec 64))
(declare-fun temp1012_29 () (_ BitVec 64))
(declare-fun temp1012_30 () (_ BitVec 64))
(declare-fun temp1012_31 () (_ BitVec 64))
(declare-fun temp1012_32 () (_ BitVec 64))
(declare-fun temp1012_33 () (_ BitVec 64))
(declare-fun temp1012_34 () (_ BitVec 64))
(declare-fun temp1012_35 () (_ BitVec 64))
(declare-fun temp1012_36 () (_ BitVec 64))
(declare-fun temp1012_37 () (_ BitVec 64))
(declare-fun temp1012_38 () (_ BitVec 64))
(declare-fun temp1012_39 () (_ BitVec 64))
(declare-fun temp1012_40 () (_ BitVec 64))
(declare-fun temp1012_41 () (_ BitVec 64))
(declare-fun temp1012_42 () (_ BitVec 64))
(declare-fun temp1012_43 () (_ BitVec 64))
(declare-fun temp1012_44 () (_ BitVec 64))
(declare-fun temp1012_45 () (_ BitVec 64))
(declare-fun temp1012_46 () (_ BitVec 64))
(declare-fun temp1012_47 () (_ BitVec 64))
(declare-fun temp1012_48 () (_ BitVec 64))
(declare-fun temp1012_49 () (_ BitVec 64))
(declare-fun temp1012_50 () (_ BitVec 64))
(declare-fun temp1012_51 () (_ BitVec 64))
(declare-fun temp1012_52 () (_ BitVec 64))
(declare-fun temp1012_53 () (_ BitVec 64))
(declare-fun temp1012_54 () (_ BitVec 64))
(declare-fun temp1012_55 () (_ BitVec 64))
(declare-fun temp1012_56 () (_ BitVec 64))
(declare-fun temp1012_57 () (_ BitVec 64))
(declare-fun temp1012_58 () (_ BitVec 64))
(declare-fun temp1012_59 () (_ BitVec 64))
(declare-fun temp1012_60 () (_ BitVec 64))
(declare-fun temp1012_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp1012_62 () (_ BitVec 64))
(declare-fun temp1012_63 () (_ BitVec 64))
(declare-fun temp1012_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1012_65 () (_ BitVec 64))
(declare-fun temp1012_66 () (_ BitVec 64))
(declare-fun temp1012_67 () (_ BitVec 64))
(declare-fun temp1012_68 () (_ BitVec 64))
(declare-fun temp1012_69 () (_ BitVec 64))
(declare-fun temp1012_70 () (_ BitVec 64))
(declare-fun temp1012_71 () (_ BitVec 64))
(declare-fun temp1012_72 () (_ BitVec 64))
(declare-fun temp1012_73 () (_ BitVec 64))
(declare-fun temp1012_74 () (_ BitVec 64))
(declare-fun temp1012_75 () (_ BitVec 64))
(declare-fun temp1012_76 () (_ BitVec 64))
(declare-fun temp1012_77 () (_ BitVec 64))
(declare-fun temp1012_78 () (_ BitVec 64))
(declare-fun temp1012_79 () (_ BitVec 64))
(declare-fun temp1012_80 () (_ BitVec 64))
(declare-fun temp1012_81 () (_ BitVec 64))
(declare-fun temp1012_82 () (_ BitVec 64))
(declare-fun temp1012_83 () (_ BitVec 64))
(declare-fun temp1012_84 () (_ BitVec 64))
(declare-fun temp1012_85 () (_ BitVec 64))
(declare-fun temp1012_86 () (_ BitVec 64))
(declare-fun temp1012_87 () (_ BitVec 64))
(declare-fun temp1012_88 () (_ BitVec 64))
(declare-fun temp1012_89 () (_ BitVec 64))
(declare-fun temp1012_90 () (_ BitVec 64))
(declare-fun temp1012_91 () (_ BitVec 64))
(declare-fun temp1012_92 () (_ BitVec 64))
(declare-fun temp1012_93 () (_ BitVec 64))
(declare-fun temp1012_94 () (_ BitVec 64))
(declare-fun temp1012_95 () (_ BitVec 64))
(declare-fun temp1012_96 () (_ BitVec 64))
(declare-fun temp1012_97 () (_ BitVec 64))
(declare-fun temp1012_98 () (_ BitVec 64))
(declare-fun temp1012_99 () (_ BitVec 64))
(declare-fun temp1012_100 () (_ BitVec 64))
(declare-fun temp1012_101 () (_ BitVec 64))
(declare-fun temp1012_102 () (_ BitVec 64))
(declare-fun temp1012_103 () (_ BitVec 64))
(declare-fun temp1012_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp1012_105 () (_ BitVec 64))
(declare-fun temp1012_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp1012_107 () (_ BitVec 64))
(declare-fun temp1012_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1012_109 () (_ BitVec 64))
(declare-fun temp1012_110 () (_ BitVec 64))
(declare-fun temp1012_111 () (_ BitVec 64))
(declare-fun temp1012_112 () (_ BitVec 64))
(declare-fun temp1012_113 () (_ BitVec 64))
(declare-fun temp1012_114 () (_ BitVec 64))
(declare-fun temp1012_115 () (_ BitVec 64))
(declare-fun temp1012_116 () (_ BitVec 64))
(declare-fun temp1012_117 () (_ BitVec 64))
(declare-fun temp1012_118 () (_ BitVec 64))
(declare-fun temp1012_119 () (_ BitVec 64))
(declare-fun temp1012_120 () (_ BitVec 64))
(declare-fun temp1012_121 () (_ BitVec 64))
(declare-fun temp1012_122 () (_ BitVec 64))
(declare-fun temp1012_123 () (_ BitVec 64))
(declare-fun temp1012_124 () (_ BitVec 64))
(declare-fun temp1012_126 () (_ BitVec 64))
(declare-fun temp1012_127 () (_ BitVec 64))
(declare-fun temp1012_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp1012_128 () (_ BitVec 64))
(declare-fun temp1012_129 () (_ BitVec 64))
(declare-fun temp1012_131 () (_ BitVec 64))
(declare-fun temp1012_132 () (_ BitVec 64))
(declare-fun temp1012_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp1012_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp1012_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp1012_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp1012_136 () (_ BitVec 64))
(declare-fun temp1012_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp1012_139 () (_ BitVec 64))
(declare-fun temp1012_140 () (_ BitVec 64))
(declare-fun temp1012_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp1012_141 () (_ BitVec 64))
(declare-fun temp1012_143 () (_ BitVec 64))
(declare-fun temp1012_144 () (_ BitVec 64))
(declare-fun temp1012_142 () (_ BitVec 64))
(declare-fun temp1012_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp1012_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp1012_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp1012_148 () (_ BitVec 64))
(declare-fun temp1012_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp1012_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp1012_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp1012_152 () (_ BitVec 64))
(assert (= temp1012_1 #x0000000000000002))
(assert (= var989741 temp1012_1))
(assert (= temp1012_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp1012_2)))
(assert (= temp1012_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp1012_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp1012_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp1012_4)))
(assert (= temp1012_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp1012_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp1012_6 #x0000000000000000))
(assert (= var989776 temp1012_6))
(assert (= temp1012_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp1012_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1012_8 #x0000000000000001))
(assert (= var989810 temp1012_8))
(assert (= temp1012_10 #x0000000000000000))
(assert (= temp1012_9 temp1012_10))
(assert (= temp1012_12 #x0000000000000002))
(assert (= temp1012_11 temp1012_12))
(assert (= temp1012_13 #x0000000000000000))
(assert (= var1387902 temp1012_13))
(assert (= temp1012_14 #x0000000000000001))
(assert (= var1387923 temp1012_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp1012_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp1012_15)))
(assert (= temp1012_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1012_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_17 #x0000000000000000))
(assert (= var1521661 temp1012_17))
(assert (= temp1012_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp1012_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_19 #x0000000000000000))
(assert (= var1521706 temp1012_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp1012_20 #x0000000000000000))
(assert (= temp1012_21 temp1012_20))
(assert (= temp1012_22 (select ARGNAME_padding_NAMEEND_VAL temp1012_21)))
(assert (= temp1012_23 #x0000000000000001))
(assert (= temp1012_24 temp1012_23))
(assert (= temp1012_25 (select ARGNAME_padding_NAMEEND_VAL temp1012_24)))
(assert (= temp1012_26 #x0000000000000002))
(assert (= temp1012_27 temp1012_26))
(assert (= temp1012_28 (select ARGNAME_padding_NAMEEND_VAL temp1012_27)))
(assert (= temp1012_29 #x0000000000000003))
(assert (= temp1012_30 temp1012_29))
(assert (= temp1012_31 (select ARGNAME_padding_NAMEEND_VAL temp1012_30)))
(assert (= temp1012_32 #x0000000000000004))
(assert (= temp1012_33 temp1012_32))
(assert (= temp1012_34 (select ARGNAME_padding_NAMEEND_VAL temp1012_33)))
(assert (= temp1012_35 #x0000000000000005))
(assert (= temp1012_36 temp1012_35))
(assert (= temp1012_37 (select ARGNAME_padding_NAMEEND_VAL temp1012_36)))
(assert (= temp1012_38 #x0000000000000000))
(assert (= temp1012_39 #x0000000000000000))
(assert (= temp1012_40 temp1012_39))
(assert (= temp1012_41 (select ARGNAME_padding_NAMEEND_VAL temp1012_40)))
(assert (= temp1012_42 #x0000000000000000))
(assert (= temp1012_43 #x0000000000000001))
(assert (= temp1012_44 temp1012_43))
(assert (= temp1012_45 (select ARGNAME_padding_NAMEEND_VAL temp1012_44)))
(assert (= temp1012_46 #x0000000000000000))
(assert (= temp1012_47 #x0000000000000002))
(assert (= temp1012_48 temp1012_47))
(assert (= temp1012_49 (select ARGNAME_padding_NAMEEND_VAL temp1012_48)))
(assert (= temp1012_50 #x0000000000000000))
(assert (= temp1012_51 #x0000000000000003))
(assert (= temp1012_52 temp1012_51))
(assert (= temp1012_53 (select ARGNAME_padding_NAMEEND_VAL temp1012_52)))
(assert (= temp1012_54 #x0000000000000000))
(assert (= temp1012_55 #x0000000000000004))
(assert (= temp1012_56 temp1012_55))
(assert (= temp1012_57 (select ARGNAME_padding_NAMEEND_VAL temp1012_56)))
(assert (= temp1012_58 #x0000000000000000))
(assert (= temp1012_59 #x0000000000000005))
(assert (= temp1012_60 temp1012_59))
(assert (= temp1012_61 (select ARGNAME_padding_NAMEEND_VAL temp1012_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp1012_41 temp1012_38)
             (bvslt temp1012_45 temp1012_42)
             (bvslt temp1012_49 temp1012_46)
             (bvslt temp1012_53 temp1012_50)
             (bvslt temp1012_57 temp1012_54)
             (bvslt temp1012_61 temp1012_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_62 #x0000000000000000))
(assert (= var2240290 temp1012_62))
(assert (= temp1012_63 #x0000000000000000))
(assert (= temp1012_64 temp1012_63))
(assert (= temp1012_65 (select ARGNAME_stride_NAMEEND_VAL temp1012_64)))
(assert (= temp1012_66 #x0000000000000001))
(assert (= temp1012_67 temp1012_66))
(assert (= temp1012_68 (select ARGNAME_stride_NAMEEND_VAL temp1012_67)))
(assert (= temp1012_69 #x0000000000000002))
(assert (= temp1012_70 temp1012_69))
(assert (= temp1012_71 (select ARGNAME_stride_NAMEEND_VAL temp1012_70)))
(assert (= temp1012_72 #x0000000000000003))
(assert (= temp1012_73 temp1012_72))
(assert (= temp1012_74 (select ARGNAME_stride_NAMEEND_VAL temp1012_73)))
(assert (= temp1012_75 #x0000000000000004))
(assert (= temp1012_76 temp1012_75))
(assert (= temp1012_77 (select ARGNAME_stride_NAMEEND_VAL temp1012_76)))
(assert (= temp1012_78 #x0000000000000005))
(assert (= temp1012_79 temp1012_78))
(assert (= temp1012_80 (select ARGNAME_stride_NAMEEND_VAL temp1012_79)))
(assert (= temp1012_81 #x0000000000000000))
(assert (= temp1012_82 #x0000000000000000))
(assert (= temp1012_83 temp1012_82))
(assert (= temp1012_84 (select ARGNAME_stride_NAMEEND_VAL temp1012_83)))
(assert (= temp1012_85 #x0000000000000000))
(assert (= temp1012_86 #x0000000000000001))
(assert (= temp1012_87 temp1012_86))
(assert (= temp1012_88 (select ARGNAME_stride_NAMEEND_VAL temp1012_87)))
(assert (= temp1012_89 #x0000000000000000))
(assert (= temp1012_90 #x0000000000000002))
(assert (= temp1012_91 temp1012_90))
(assert (= temp1012_92 (select ARGNAME_stride_NAMEEND_VAL temp1012_91)))
(assert (= temp1012_93 #x0000000000000000))
(assert (= temp1012_94 #x0000000000000003))
(assert (= temp1012_95 temp1012_94))
(assert (= temp1012_96 (select ARGNAME_stride_NAMEEND_VAL temp1012_95)))
(assert (= temp1012_97 #x0000000000000000))
(assert (= temp1012_98 #x0000000000000004))
(assert (= temp1012_99 temp1012_98))
(assert (= temp1012_100 (select ARGNAME_stride_NAMEEND_VAL temp1012_99)))
(assert (= temp1012_101 #x0000000000000000))
(assert (= temp1012_102 #x0000000000000005))
(assert (= temp1012_103 temp1012_102))
(assert (= temp1012_104 (select ARGNAME_stride_NAMEEND_VAL temp1012_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp1012_84 temp1012_81)
             (bvsle temp1012_88 temp1012_85)
             (bvsle temp1012_92 temp1012_89)
             (bvsle temp1012_96 temp1012_93)
             (bvsle temp1012_100 temp1012_97)
             (bvsle temp1012_104 temp1012_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_105 #x0000000000000000))
(assert (= var2240311 temp1012_105))
(assert (= temp1012_106 #x0000000000000000))
(assert (= var2228402 temp1012_106))
(assert (= temp1012_107 #x0000000000000000))
(assert (= temp1012_108 temp1012_107))
(assert (= temp1012_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_108)))
(assert (= temp1012_110 #x0000000000000001))
(assert (= temp1012_111 temp1012_110))
(assert (= temp1012_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_111)))
(assert (= temp1012_113 #x0000000000000002))
(assert (= temp1012_114 temp1012_113))
(assert (= temp1012_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_114)))
(assert (= temp1012_116 #x0000000000000003))
(assert (= temp1012_117 temp1012_116))
(assert (= temp1012_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_117)))
(assert (= temp1012_119 #x0000000000000004))
(assert (= temp1012_120 temp1012_119))
(assert (= temp1012_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_120)))
(assert (= temp1012_122 #x0000000000000005))
(assert (= temp1012_123 temp1012_122))
(assert (= temp1012_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_123)))
(assert (= temp1012_126 var2228402))
(assert (= temp1012_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_126)))
(assert (= temp1012_125 temp1012_127))
(assert (= var2240356
   (ite (bvslt temp1012_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_128 #x0000000000000000))
(assert (= var2240356 temp1012_128))
(assert (= temp1012_129 #x0000000000000000))
(assert (= var2228402 temp1012_129))
(assert (= temp1012_131 var2228402))
(assert (= temp1012_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_131)))
(assert (= temp1012_130 temp1012_132))
(assert (= var2240378 (bvsmod temp1012_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1012_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp1012_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1012_134 #x0000000000000001))
(assert (= var2240379 temp1012_134))
(assert (= var2240398 var2240288))
(assert (= temp1012_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp1012_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1012_136 #x0000000000000001))
(assert (= var2240399 temp1012_136))
(assert (= temp1012_137 #x0000000000000001))
(assert (= var2229290 temp1012_137))
(assert (= temp1012_139 var2229290))
(assert (= temp1012_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_139)))
(assert (= temp1012_138 temp1012_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp1012_138)))
(assert (= temp1012_141 #x0000000000000000))
(assert (= var2228402 temp1012_141))
(assert (= temp1012_143 var2228402))
(assert (= temp1012_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1012_143)))
(assert (= temp1012_142 temp1012_144))
(assert (= temp1012_145 #x0000000000000002))
(assert (= var2503529 temp1012_145))
(assert (= temp1012_146 #x0000000000000001))
(assert (= var2240569 temp1012_146))
(assert (= temp1012_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1012_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_148 #x0000000000000001))
(assert (= var1521778 temp1012_148))
(assert (= temp1012_149 #x0000000000000001))
(assert (= var1521908 temp1012_149))
(assert (= var4010473 var1521908))
(assert (= temp1012_150 #x0000000000000000))
(assert (= var4210495 temp1012_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp1012_151 #x0000000000000002))
(assert (= var4339331 temp1012_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp1012_152 #x0000000000000001))
(assert (= var1521778 temp1012_152))
(model-add temp1012_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp1012_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp1012_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1012_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp1012_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1012_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






