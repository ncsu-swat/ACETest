(declare-fun temp898_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp898_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp898_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp898_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp898_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp898_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp898_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp898_8 () (_ BitVec 64))
(declare-fun temp898_10 () (_ BitVec 64))
(declare-fun temp898_9 () (_ BitVec 64))
(declare-fun temp898_12 () (_ BitVec 64))
(declare-fun temp898_11 () (_ BitVec 64))
(declare-fun temp898_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp898_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp898_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp898_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp898_17 () (_ BitVec 64))
(declare-fun temp898_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp898_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp898_20 () (_ BitVec 64))
(declare-fun temp898_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp898_22 () (_ BitVec 64))
(declare-fun temp898_23 () (_ BitVec 64))
(declare-fun temp898_24 () (_ BitVec 64))
(declare-fun temp898_25 () (_ BitVec 64))
(declare-fun temp898_26 () (_ BitVec 64))
(declare-fun temp898_27 () (_ BitVec 64))
(declare-fun temp898_28 () (_ BitVec 64))
(declare-fun temp898_29 () (_ BitVec 64))
(declare-fun temp898_30 () (_ BitVec 64))
(declare-fun temp898_31 () (_ BitVec 64))
(declare-fun temp898_32 () (_ BitVec 64))
(declare-fun temp898_33 () (_ BitVec 64))
(declare-fun temp898_34 () (_ BitVec 64))
(declare-fun temp898_35 () (_ BitVec 64))
(declare-fun temp898_36 () (_ BitVec 64))
(declare-fun temp898_37 () (_ BitVec 64))
(declare-fun temp898_38 () (_ BitVec 64))
(declare-fun temp898_39 () (_ BitVec 64))
(declare-fun temp898_40 () (_ BitVec 64))
(declare-fun temp898_41 () (_ BitVec 64))
(declare-fun temp898_42 () (_ BitVec 64))
(declare-fun temp898_43 () (_ BitVec 64))
(declare-fun temp898_44 () (_ BitVec 64))
(declare-fun temp898_45 () (_ BitVec 64))
(declare-fun temp898_46 () (_ BitVec 64))
(declare-fun temp898_47 () (_ BitVec 64))
(declare-fun temp898_48 () (_ BitVec 64))
(declare-fun temp898_49 () (_ BitVec 64))
(declare-fun temp898_50 () (_ BitVec 64))
(declare-fun temp898_51 () (_ BitVec 64))
(declare-fun temp898_52 () (_ BitVec 64))
(declare-fun temp898_53 () (_ BitVec 64))
(declare-fun temp898_54 () (_ BitVec 64))
(declare-fun temp898_55 () (_ BitVec 64))
(declare-fun temp898_56 () (_ BitVec 64))
(declare-fun temp898_57 () (_ BitVec 64))
(declare-fun temp898_58 () (_ BitVec 64))
(declare-fun temp898_59 () (_ BitVec 64))
(declare-fun temp898_60 () (_ BitVec 64))
(declare-fun temp898_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp898_62 () (_ BitVec 64))
(declare-fun temp898_63 () (_ BitVec 64))
(declare-fun temp898_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp898_65 () (_ BitVec 64))
(declare-fun temp898_66 () (_ BitVec 64))
(declare-fun temp898_67 () (_ BitVec 64))
(declare-fun temp898_68 () (_ BitVec 64))
(declare-fun temp898_69 () (_ BitVec 64))
(declare-fun temp898_70 () (_ BitVec 64))
(declare-fun temp898_71 () (_ BitVec 64))
(declare-fun temp898_72 () (_ BitVec 64))
(declare-fun temp898_73 () (_ BitVec 64))
(declare-fun temp898_74 () (_ BitVec 64))
(declare-fun temp898_75 () (_ BitVec 64))
(declare-fun temp898_76 () (_ BitVec 64))
(declare-fun temp898_77 () (_ BitVec 64))
(declare-fun temp898_78 () (_ BitVec 64))
(declare-fun temp898_79 () (_ BitVec 64))
(declare-fun temp898_80 () (_ BitVec 64))
(declare-fun temp898_81 () (_ BitVec 64))
(declare-fun temp898_82 () (_ BitVec 64))
(declare-fun temp898_83 () (_ BitVec 64))
(declare-fun temp898_84 () (_ BitVec 64))
(declare-fun temp898_85 () (_ BitVec 64))
(declare-fun temp898_86 () (_ BitVec 64))
(declare-fun temp898_87 () (_ BitVec 64))
(declare-fun temp898_88 () (_ BitVec 64))
(declare-fun temp898_89 () (_ BitVec 64))
(declare-fun temp898_90 () (_ BitVec 64))
(declare-fun temp898_91 () (_ BitVec 64))
(declare-fun temp898_92 () (_ BitVec 64))
(declare-fun temp898_93 () (_ BitVec 64))
(declare-fun temp898_94 () (_ BitVec 64))
(declare-fun temp898_95 () (_ BitVec 64))
(declare-fun temp898_96 () (_ BitVec 64))
(declare-fun temp898_97 () (_ BitVec 64))
(declare-fun temp898_98 () (_ BitVec 64))
(declare-fun temp898_99 () (_ BitVec 64))
(declare-fun temp898_100 () (_ BitVec 64))
(declare-fun temp898_101 () (_ BitVec 64))
(declare-fun temp898_102 () (_ BitVec 64))
(declare-fun temp898_103 () (_ BitVec 64))
(declare-fun temp898_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp898_105 () (_ BitVec 64))
(declare-fun temp898_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp898_107 () (_ BitVec 64))
(declare-fun temp898_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp898_109 () (_ BitVec 64))
(declare-fun temp898_110 () (_ BitVec 64))
(declare-fun temp898_111 () (_ BitVec 64))
(declare-fun temp898_112 () (_ BitVec 64))
(declare-fun temp898_113 () (_ BitVec 64))
(declare-fun temp898_114 () (_ BitVec 64))
(declare-fun temp898_115 () (_ BitVec 64))
(declare-fun temp898_116 () (_ BitVec 64))
(declare-fun temp898_117 () (_ BitVec 64))
(declare-fun temp898_118 () (_ BitVec 64))
(declare-fun temp898_119 () (_ BitVec 64))
(declare-fun temp898_120 () (_ BitVec 64))
(declare-fun temp898_121 () (_ BitVec 64))
(declare-fun temp898_122 () (_ BitVec 64))
(declare-fun temp898_123 () (_ BitVec 64))
(declare-fun temp898_124 () (_ BitVec 64))
(declare-fun temp898_126 () (_ BitVec 64))
(declare-fun temp898_127 () (_ BitVec 64))
(declare-fun temp898_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp898_128 () (_ BitVec 64))
(declare-fun temp898_129 () (_ BitVec 64))
(declare-fun temp898_131 () (_ BitVec 64))
(declare-fun temp898_132 () (_ BitVec 64))
(declare-fun temp898_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp898_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp898_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp898_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp898_136 () (_ BitVec 64))
(declare-fun temp898_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp898_139 () (_ BitVec 64))
(declare-fun temp898_140 () (_ BitVec 64))
(declare-fun temp898_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp898_141 () (_ BitVec 64))
(declare-fun temp898_143 () (_ BitVec 64))
(declare-fun temp898_144 () (_ BitVec 64))
(declare-fun temp898_142 () (_ BitVec 64))
(declare-fun temp898_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp898_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp898_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp898_148 () (_ BitVec 64))
(declare-fun temp898_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp898_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp898_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp898_152 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp898_153 () (_ BitVec 64))
(assert (= temp898_1 #x0000000000000002))
(assert (= var989741 temp898_1))
(assert (= temp898_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp898_2)))
(assert (= temp898_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp898_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp898_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp898_4)))
(assert (= temp898_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp898_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp898_6 #x0000000000000000))
(assert (= var989776 temp898_6))
(assert (= temp898_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp898_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp898_8 #x0000000000000001))
(assert (= var989810 temp898_8))
(assert (= temp898_10 #x0000000000000000))
(assert (= temp898_9 temp898_10))
(assert (= temp898_12 #x0000000000000002))
(assert (= temp898_11 temp898_12))
(assert (= temp898_13 #x0000000000000000))
(assert (= var1387902 temp898_13))
(assert (= temp898_14 #x0000000000000001))
(assert (= var1387923 temp898_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp898_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp898_15)))
(assert (= temp898_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp898_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp898_17 #x0000000000000000))
(assert (= var1521661 temp898_17))
(assert (= temp898_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp898_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp898_19 #x0000000000000000))
(assert (= var1521706 temp898_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp898_20 #x0000000000000000))
(assert (= temp898_21 temp898_20))
(assert (= temp898_22 (select ARGNAME_padding_NAMEEND_VAL temp898_21)))
(assert (= temp898_23 #x0000000000000001))
(assert (= temp898_24 temp898_23))
(assert (= temp898_25 (select ARGNAME_padding_NAMEEND_VAL temp898_24)))
(assert (= temp898_26 #x0000000000000002))
(assert (= temp898_27 temp898_26))
(assert (= temp898_28 (select ARGNAME_padding_NAMEEND_VAL temp898_27)))
(assert (= temp898_29 #x0000000000000003))
(assert (= temp898_30 temp898_29))
(assert (= temp898_31 (select ARGNAME_padding_NAMEEND_VAL temp898_30)))
(assert (= temp898_32 #x0000000000000004))
(assert (= temp898_33 temp898_32))
(assert (= temp898_34 (select ARGNAME_padding_NAMEEND_VAL temp898_33)))
(assert (= temp898_35 #x0000000000000005))
(assert (= temp898_36 temp898_35))
(assert (= temp898_37 (select ARGNAME_padding_NAMEEND_VAL temp898_36)))
(assert (= temp898_38 #x0000000000000000))
(assert (= temp898_39 #x0000000000000000))
(assert (= temp898_40 temp898_39))
(assert (= temp898_41 (select ARGNAME_padding_NAMEEND_VAL temp898_40)))
(assert (= temp898_42 #x0000000000000000))
(assert (= temp898_43 #x0000000000000001))
(assert (= temp898_44 temp898_43))
(assert (= temp898_45 (select ARGNAME_padding_NAMEEND_VAL temp898_44)))
(assert (= temp898_46 #x0000000000000000))
(assert (= temp898_47 #x0000000000000002))
(assert (= temp898_48 temp898_47))
(assert (= temp898_49 (select ARGNAME_padding_NAMEEND_VAL temp898_48)))
(assert (= temp898_50 #x0000000000000000))
(assert (= temp898_51 #x0000000000000003))
(assert (= temp898_52 temp898_51))
(assert (= temp898_53 (select ARGNAME_padding_NAMEEND_VAL temp898_52)))
(assert (= temp898_54 #x0000000000000000))
(assert (= temp898_55 #x0000000000000004))
(assert (= temp898_56 temp898_55))
(assert (= temp898_57 (select ARGNAME_padding_NAMEEND_VAL temp898_56)))
(assert (= temp898_58 #x0000000000000000))
(assert (= temp898_59 #x0000000000000005))
(assert (= temp898_60 temp898_59))
(assert (= temp898_61 (select ARGNAME_padding_NAMEEND_VAL temp898_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp898_41 temp898_38)
             (bvslt temp898_45 temp898_42)
             (bvslt temp898_49 temp898_46)
             (bvslt temp898_53 temp898_50)
             (bvslt temp898_57 temp898_54)
             (bvslt temp898_61 temp898_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp898_62 #x0000000000000000))
(assert (= var2240290 temp898_62))
(assert (= temp898_63 #x0000000000000000))
(assert (= temp898_64 temp898_63))
(assert (= temp898_65 (select ARGNAME_stride_NAMEEND_VAL temp898_64)))
(assert (= temp898_66 #x0000000000000001))
(assert (= temp898_67 temp898_66))
(assert (= temp898_68 (select ARGNAME_stride_NAMEEND_VAL temp898_67)))
(assert (= temp898_69 #x0000000000000002))
(assert (= temp898_70 temp898_69))
(assert (= temp898_71 (select ARGNAME_stride_NAMEEND_VAL temp898_70)))
(assert (= temp898_72 #x0000000000000003))
(assert (= temp898_73 temp898_72))
(assert (= temp898_74 (select ARGNAME_stride_NAMEEND_VAL temp898_73)))
(assert (= temp898_75 #x0000000000000004))
(assert (= temp898_76 temp898_75))
(assert (= temp898_77 (select ARGNAME_stride_NAMEEND_VAL temp898_76)))
(assert (= temp898_78 #x0000000000000005))
(assert (= temp898_79 temp898_78))
(assert (= temp898_80 (select ARGNAME_stride_NAMEEND_VAL temp898_79)))
(assert (= temp898_81 #x0000000000000000))
(assert (= temp898_82 #x0000000000000000))
(assert (= temp898_83 temp898_82))
(assert (= temp898_84 (select ARGNAME_stride_NAMEEND_VAL temp898_83)))
(assert (= temp898_85 #x0000000000000000))
(assert (= temp898_86 #x0000000000000001))
(assert (= temp898_87 temp898_86))
(assert (= temp898_88 (select ARGNAME_stride_NAMEEND_VAL temp898_87)))
(assert (= temp898_89 #x0000000000000000))
(assert (= temp898_90 #x0000000000000002))
(assert (= temp898_91 temp898_90))
(assert (= temp898_92 (select ARGNAME_stride_NAMEEND_VAL temp898_91)))
(assert (= temp898_93 #x0000000000000000))
(assert (= temp898_94 #x0000000000000003))
(assert (= temp898_95 temp898_94))
(assert (= temp898_96 (select ARGNAME_stride_NAMEEND_VAL temp898_95)))
(assert (= temp898_97 #x0000000000000000))
(assert (= temp898_98 #x0000000000000004))
(assert (= temp898_99 temp898_98))
(assert (= temp898_100 (select ARGNAME_stride_NAMEEND_VAL temp898_99)))
(assert (= temp898_101 #x0000000000000000))
(assert (= temp898_102 #x0000000000000005))
(assert (= temp898_103 temp898_102))
(assert (= temp898_104 (select ARGNAME_stride_NAMEEND_VAL temp898_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp898_84 temp898_81)
             (bvsle temp898_88 temp898_85)
             (bvsle temp898_92 temp898_89)
             (bvsle temp898_96 temp898_93)
             (bvsle temp898_100 temp898_97)
             (bvsle temp898_104 temp898_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp898_105 #x0000000000000000))
(assert (= var2240311 temp898_105))
(assert (= temp898_106 #x0000000000000000))
(assert (= var2228402 temp898_106))
(assert (= temp898_107 #x0000000000000000))
(assert (= temp898_108 temp898_107))
(assert (= temp898_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp898_108)))
(assert (= temp898_110 #x0000000000000001))
(assert (= temp898_111 temp898_110))
(assert (= temp898_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp898_111)))
(assert (= temp898_113 #x0000000000000002))
(assert (= temp898_114 temp898_113))
(assert (= temp898_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp898_114)))
(assert (= temp898_116 #x0000000000000003))
(assert (= temp898_117 temp898_116))
(assert (= temp898_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp898_117)))
(assert (= temp898_119 #x0000000000000004))
(assert (= temp898_120 temp898_119))
(assert (= temp898_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp898_120)))
(assert (= temp898_122 #x0000000000000005))
(assert (= temp898_123 temp898_122))
(assert (= temp898_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp898_123)))
(assert (= temp898_126 var2228402))
(assert (= temp898_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp898_126)))
(assert (= temp898_125 temp898_127))
(assert (= var2240356
   (ite (bvslt temp898_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp898_128 #x0000000000000000))
(assert (= var2240356 temp898_128))
(assert (= temp898_129 #x0000000000000000))
(assert (= var2228402 temp898_129))
(assert (= temp898_131 var2228402))
(assert (= temp898_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp898_131)))
(assert (= temp898_130 temp898_132))
(assert (= var2240378 (bvsmod temp898_130 ARGNAME_groups_NAMEEND)))
(assert (= temp898_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp898_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp898_134 #x0000000000000001))
(assert (= var2240379 temp898_134))
(assert (= var2240398 var2240288))
(assert (= temp898_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp898_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp898_136 #x0000000000000001))
(assert (= var2240399 temp898_136))
(assert (= temp898_137 #x0000000000000001))
(assert (= var2229290 temp898_137))
(assert (= temp898_139 var2229290))
(assert (= temp898_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp898_139)))
(assert (= temp898_138 temp898_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp898_138)))
(assert (= temp898_141 #x0000000000000000))
(assert (= var2228402 temp898_141))
(assert (= temp898_143 var2228402))
(assert (= temp898_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp898_143)))
(assert (= temp898_142 temp898_144))
(assert (= temp898_145 #x0000000000000002))
(assert (= var2503529 temp898_145))
(assert (= temp898_146 #x0000000000000001))
(assert (= var2240569 temp898_146))
(assert (= temp898_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp898_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp898_148 #x0000000000000001))
(assert (= var1521778 temp898_148))
(assert (= temp898_149 #x0000000000000001))
(assert (= var1521908 temp898_149))
(assert (= var4010473 var1521908))
(assert (= temp898_150 #x0000000000000000))
(assert (= var4210495 temp898_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp898_151 #x0000000000000002))
(assert (= var4339331 temp898_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var5321104 var1521921))
(assert (= var5583248 var1521921))
(assert (= temp898_152 #x0000000000000000))
(assert (= var5910928 temp898_152))
(assert (= temp898_153 #x0000000000000001))
(assert (= var1521778 temp898_153))
(model-add temp898_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp898_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp898_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp898_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp898_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp898_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






