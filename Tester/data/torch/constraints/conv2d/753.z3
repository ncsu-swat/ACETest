(declare-fun temp1003_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp1003_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp1003_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp1003_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp1003_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp1003_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp1003_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp1003_8 () (_ BitVec 64))
(declare-fun temp1003_10 () (_ BitVec 64))
(declare-fun temp1003_9 () (_ BitVec 64))
(declare-fun temp1003_12 () (_ BitVec 64))
(declare-fun temp1003_11 () (_ BitVec 64))
(declare-fun temp1003_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp1003_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp1003_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp1003_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp1003_17 () (_ BitVec 64))
(declare-fun temp1003_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp1003_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp1003_20 () (_ BitVec 64))
(declare-fun temp1003_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1003_22 () (_ BitVec 64))
(declare-fun temp1003_23 () (_ BitVec 64))
(declare-fun temp1003_24 () (_ BitVec 64))
(declare-fun temp1003_25 () (_ BitVec 64))
(declare-fun temp1003_26 () (_ BitVec 64))
(declare-fun temp1003_27 () (_ BitVec 64))
(declare-fun temp1003_28 () (_ BitVec 64))
(declare-fun temp1003_29 () (_ BitVec 64))
(declare-fun temp1003_30 () (_ BitVec 64))
(declare-fun temp1003_31 () (_ BitVec 64))
(declare-fun temp1003_32 () (_ BitVec 64))
(declare-fun temp1003_33 () (_ BitVec 64))
(declare-fun temp1003_34 () (_ BitVec 64))
(declare-fun temp1003_35 () (_ BitVec 64))
(declare-fun temp1003_36 () (_ BitVec 64))
(declare-fun temp1003_37 () (_ BitVec 64))
(declare-fun temp1003_38 () (_ BitVec 64))
(declare-fun temp1003_39 () (_ BitVec 64))
(declare-fun temp1003_40 () (_ BitVec 64))
(declare-fun temp1003_41 () (_ BitVec 64))
(declare-fun temp1003_42 () (_ BitVec 64))
(declare-fun temp1003_43 () (_ BitVec 64))
(declare-fun temp1003_44 () (_ BitVec 64))
(declare-fun temp1003_45 () (_ BitVec 64))
(declare-fun temp1003_46 () (_ BitVec 64))
(declare-fun temp1003_47 () (_ BitVec 64))
(declare-fun temp1003_48 () (_ BitVec 64))
(declare-fun temp1003_49 () (_ BitVec 64))
(declare-fun temp1003_50 () (_ BitVec 64))
(declare-fun temp1003_51 () (_ BitVec 64))
(declare-fun temp1003_52 () (_ BitVec 64))
(declare-fun temp1003_53 () (_ BitVec 64))
(declare-fun temp1003_54 () (_ BitVec 64))
(declare-fun temp1003_55 () (_ BitVec 64))
(declare-fun temp1003_56 () (_ BitVec 64))
(declare-fun temp1003_57 () (_ BitVec 64))
(declare-fun temp1003_58 () (_ BitVec 64))
(declare-fun temp1003_59 () (_ BitVec 64))
(declare-fun temp1003_60 () (_ BitVec 64))
(declare-fun temp1003_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp1003_62 () (_ BitVec 64))
(declare-fun temp1003_63 () (_ BitVec 64))
(declare-fun temp1003_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1003_65 () (_ BitVec 64))
(declare-fun temp1003_66 () (_ BitVec 64))
(declare-fun temp1003_67 () (_ BitVec 64))
(declare-fun temp1003_68 () (_ BitVec 64))
(declare-fun temp1003_69 () (_ BitVec 64))
(declare-fun temp1003_70 () (_ BitVec 64))
(declare-fun temp1003_71 () (_ BitVec 64))
(declare-fun temp1003_72 () (_ BitVec 64))
(declare-fun temp1003_73 () (_ BitVec 64))
(declare-fun temp1003_74 () (_ BitVec 64))
(declare-fun temp1003_75 () (_ BitVec 64))
(declare-fun temp1003_76 () (_ BitVec 64))
(declare-fun temp1003_77 () (_ BitVec 64))
(declare-fun temp1003_78 () (_ BitVec 64))
(declare-fun temp1003_79 () (_ BitVec 64))
(declare-fun temp1003_80 () (_ BitVec 64))
(declare-fun temp1003_81 () (_ BitVec 64))
(declare-fun temp1003_82 () (_ BitVec 64))
(declare-fun temp1003_83 () (_ BitVec 64))
(declare-fun temp1003_84 () (_ BitVec 64))
(declare-fun temp1003_85 () (_ BitVec 64))
(declare-fun temp1003_86 () (_ BitVec 64))
(declare-fun temp1003_87 () (_ BitVec 64))
(declare-fun temp1003_88 () (_ BitVec 64))
(declare-fun temp1003_89 () (_ BitVec 64))
(declare-fun temp1003_90 () (_ BitVec 64))
(declare-fun temp1003_91 () (_ BitVec 64))
(declare-fun temp1003_92 () (_ BitVec 64))
(declare-fun temp1003_93 () (_ BitVec 64))
(declare-fun temp1003_94 () (_ BitVec 64))
(declare-fun temp1003_95 () (_ BitVec 64))
(declare-fun temp1003_96 () (_ BitVec 64))
(declare-fun temp1003_97 () (_ BitVec 64))
(declare-fun temp1003_98 () (_ BitVec 64))
(declare-fun temp1003_99 () (_ BitVec 64))
(declare-fun temp1003_100 () (_ BitVec 64))
(declare-fun temp1003_101 () (_ BitVec 64))
(declare-fun temp1003_102 () (_ BitVec 64))
(declare-fun temp1003_103 () (_ BitVec 64))
(declare-fun temp1003_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp1003_105 () (_ BitVec 64))
(declare-fun temp1003_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp1003_107 () (_ BitVec 64))
(declare-fun temp1003_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1003_109 () (_ BitVec 64))
(declare-fun temp1003_110 () (_ BitVec 64))
(declare-fun temp1003_111 () (_ BitVec 64))
(declare-fun temp1003_112 () (_ BitVec 64))
(declare-fun temp1003_113 () (_ BitVec 64))
(declare-fun temp1003_114 () (_ BitVec 64))
(declare-fun temp1003_115 () (_ BitVec 64))
(declare-fun temp1003_116 () (_ BitVec 64))
(declare-fun temp1003_117 () (_ BitVec 64))
(declare-fun temp1003_118 () (_ BitVec 64))
(declare-fun temp1003_119 () (_ BitVec 64))
(declare-fun temp1003_120 () (_ BitVec 64))
(declare-fun temp1003_121 () (_ BitVec 64))
(declare-fun temp1003_122 () (_ BitVec 64))
(declare-fun temp1003_123 () (_ BitVec 64))
(declare-fun temp1003_124 () (_ BitVec 64))
(declare-fun temp1003_126 () (_ BitVec 64))
(declare-fun temp1003_127 () (_ BitVec 64))
(declare-fun temp1003_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp1003_128 () (_ BitVec 64))
(declare-fun temp1003_129 () (_ BitVec 64))
(declare-fun temp1003_131 () (_ BitVec 64))
(declare-fun temp1003_132 () (_ BitVec 64))
(declare-fun temp1003_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp1003_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp1003_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp1003_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp1003_136 () (_ BitVec 64))
(declare-fun temp1003_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp1003_139 () (_ BitVec 64))
(declare-fun temp1003_140 () (_ BitVec 64))
(declare-fun temp1003_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp1003_141 () (_ BitVec 64))
(declare-fun temp1003_143 () (_ BitVec 64))
(declare-fun temp1003_144 () (_ BitVec 64))
(declare-fun temp1003_142 () (_ BitVec 64))
(declare-fun temp1003_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp1003_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp1003_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp1003_148 () (_ BitVec 64))
(declare-fun temp1003_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp1003_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp1003_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp1003_152 () (_ BitVec 64))
(assert (= temp1003_1 #x0000000000000002))
(assert (= var989741 temp1003_1))
(assert (= temp1003_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp1003_2)))
(assert (= temp1003_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp1003_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp1003_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp1003_4)))
(assert (= temp1003_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp1003_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp1003_6 #x0000000000000000))
(assert (= var989776 temp1003_6))
(assert (= temp1003_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp1003_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1003_8 #x0000000000000001))
(assert (= var989810 temp1003_8))
(assert (= temp1003_10 #x0000000000000000))
(assert (= temp1003_9 temp1003_10))
(assert (= temp1003_12 #x0000000000000002))
(assert (= temp1003_11 temp1003_12))
(assert (= temp1003_13 #x0000000000000000))
(assert (= var1387902 temp1003_13))
(assert (= temp1003_14 #x0000000000000001))
(assert (= var1387923 temp1003_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp1003_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp1003_15)))
(assert (= temp1003_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1003_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1003_17 #x0000000000000000))
(assert (= var1521661 temp1003_17))
(assert (= temp1003_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp1003_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1003_19 #x0000000000000000))
(assert (= var1521706 temp1003_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp1003_20 #x0000000000000000))
(assert (= temp1003_21 temp1003_20))
(assert (= temp1003_22 (select ARGNAME_padding_NAMEEND_VAL temp1003_21)))
(assert (= temp1003_23 #x0000000000000001))
(assert (= temp1003_24 temp1003_23))
(assert (= temp1003_25 (select ARGNAME_padding_NAMEEND_VAL temp1003_24)))
(assert (= temp1003_26 #x0000000000000002))
(assert (= temp1003_27 temp1003_26))
(assert (= temp1003_28 (select ARGNAME_padding_NAMEEND_VAL temp1003_27)))
(assert (= temp1003_29 #x0000000000000003))
(assert (= temp1003_30 temp1003_29))
(assert (= temp1003_31 (select ARGNAME_padding_NAMEEND_VAL temp1003_30)))
(assert (= temp1003_32 #x0000000000000004))
(assert (= temp1003_33 temp1003_32))
(assert (= temp1003_34 (select ARGNAME_padding_NAMEEND_VAL temp1003_33)))
(assert (= temp1003_35 #x0000000000000005))
(assert (= temp1003_36 temp1003_35))
(assert (= temp1003_37 (select ARGNAME_padding_NAMEEND_VAL temp1003_36)))
(assert (= temp1003_38 #x0000000000000000))
(assert (= temp1003_39 #x0000000000000000))
(assert (= temp1003_40 temp1003_39))
(assert (= temp1003_41 (select ARGNAME_padding_NAMEEND_VAL temp1003_40)))
(assert (= temp1003_42 #x0000000000000000))
(assert (= temp1003_43 #x0000000000000001))
(assert (= temp1003_44 temp1003_43))
(assert (= temp1003_45 (select ARGNAME_padding_NAMEEND_VAL temp1003_44)))
(assert (= temp1003_46 #x0000000000000000))
(assert (= temp1003_47 #x0000000000000002))
(assert (= temp1003_48 temp1003_47))
(assert (= temp1003_49 (select ARGNAME_padding_NAMEEND_VAL temp1003_48)))
(assert (= temp1003_50 #x0000000000000000))
(assert (= temp1003_51 #x0000000000000003))
(assert (= temp1003_52 temp1003_51))
(assert (= temp1003_53 (select ARGNAME_padding_NAMEEND_VAL temp1003_52)))
(assert (= temp1003_54 #x0000000000000000))
(assert (= temp1003_55 #x0000000000000004))
(assert (= temp1003_56 temp1003_55))
(assert (= temp1003_57 (select ARGNAME_padding_NAMEEND_VAL temp1003_56)))
(assert (= temp1003_58 #x0000000000000000))
(assert (= temp1003_59 #x0000000000000005))
(assert (= temp1003_60 temp1003_59))
(assert (= temp1003_61 (select ARGNAME_padding_NAMEEND_VAL temp1003_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp1003_41 temp1003_38)
             (bvslt temp1003_45 temp1003_42)
             (bvslt temp1003_49 temp1003_46)
             (bvslt temp1003_53 temp1003_50)
             (bvslt temp1003_57 temp1003_54)
             (bvslt temp1003_61 temp1003_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1003_62 #x0000000000000000))
(assert (= var2240290 temp1003_62))
(assert (= temp1003_63 #x0000000000000000))
(assert (= temp1003_64 temp1003_63))
(assert (= temp1003_65 (select ARGNAME_stride_NAMEEND_VAL temp1003_64)))
(assert (= temp1003_66 #x0000000000000001))
(assert (= temp1003_67 temp1003_66))
(assert (= temp1003_68 (select ARGNAME_stride_NAMEEND_VAL temp1003_67)))
(assert (= temp1003_69 #x0000000000000002))
(assert (= temp1003_70 temp1003_69))
(assert (= temp1003_71 (select ARGNAME_stride_NAMEEND_VAL temp1003_70)))
(assert (= temp1003_72 #x0000000000000003))
(assert (= temp1003_73 temp1003_72))
(assert (= temp1003_74 (select ARGNAME_stride_NAMEEND_VAL temp1003_73)))
(assert (= temp1003_75 #x0000000000000004))
(assert (= temp1003_76 temp1003_75))
(assert (= temp1003_77 (select ARGNAME_stride_NAMEEND_VAL temp1003_76)))
(assert (= temp1003_78 #x0000000000000005))
(assert (= temp1003_79 temp1003_78))
(assert (= temp1003_80 (select ARGNAME_stride_NAMEEND_VAL temp1003_79)))
(assert (= temp1003_81 #x0000000000000000))
(assert (= temp1003_82 #x0000000000000000))
(assert (= temp1003_83 temp1003_82))
(assert (= temp1003_84 (select ARGNAME_stride_NAMEEND_VAL temp1003_83)))
(assert (= temp1003_85 #x0000000000000000))
(assert (= temp1003_86 #x0000000000000001))
(assert (= temp1003_87 temp1003_86))
(assert (= temp1003_88 (select ARGNAME_stride_NAMEEND_VAL temp1003_87)))
(assert (= temp1003_89 #x0000000000000000))
(assert (= temp1003_90 #x0000000000000002))
(assert (= temp1003_91 temp1003_90))
(assert (= temp1003_92 (select ARGNAME_stride_NAMEEND_VAL temp1003_91)))
(assert (= temp1003_93 #x0000000000000000))
(assert (= temp1003_94 #x0000000000000003))
(assert (= temp1003_95 temp1003_94))
(assert (= temp1003_96 (select ARGNAME_stride_NAMEEND_VAL temp1003_95)))
(assert (= temp1003_97 #x0000000000000000))
(assert (= temp1003_98 #x0000000000000004))
(assert (= temp1003_99 temp1003_98))
(assert (= temp1003_100 (select ARGNAME_stride_NAMEEND_VAL temp1003_99)))
(assert (= temp1003_101 #x0000000000000000))
(assert (= temp1003_102 #x0000000000000005))
(assert (= temp1003_103 temp1003_102))
(assert (= temp1003_104 (select ARGNAME_stride_NAMEEND_VAL temp1003_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp1003_84 temp1003_81)
             (bvsle temp1003_88 temp1003_85)
             (bvsle temp1003_92 temp1003_89)
             (bvsle temp1003_96 temp1003_93)
             (bvsle temp1003_100 temp1003_97)
             (bvsle temp1003_104 temp1003_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1003_105 #x0000000000000000))
(assert (= var2240311 temp1003_105))
(assert (= temp1003_106 #x0000000000000000))
(assert (= var2228402 temp1003_106))
(assert (= temp1003_107 #x0000000000000000))
(assert (= temp1003_108 temp1003_107))
(assert (= temp1003_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1003_108)))
(assert (= temp1003_110 #x0000000000000001))
(assert (= temp1003_111 temp1003_110))
(assert (= temp1003_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1003_111)))
(assert (= temp1003_113 #x0000000000000002))
(assert (= temp1003_114 temp1003_113))
(assert (= temp1003_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1003_114)))
(assert (= temp1003_116 #x0000000000000003))
(assert (= temp1003_117 temp1003_116))
(assert (= temp1003_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1003_117)))
(assert (= temp1003_119 #x0000000000000004))
(assert (= temp1003_120 temp1003_119))
(assert (= temp1003_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1003_120)))
(assert (= temp1003_122 #x0000000000000005))
(assert (= temp1003_123 temp1003_122))
(assert (= temp1003_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1003_123)))
(assert (= temp1003_126 var2228402))
(assert (= temp1003_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1003_126)))
(assert (= temp1003_125 temp1003_127))
(assert (= var2240356
   (ite (bvslt temp1003_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1003_128 #x0000000000000000))
(assert (= var2240356 temp1003_128))
(assert (= temp1003_129 #x0000000000000000))
(assert (= var2228402 temp1003_129))
(assert (= temp1003_131 var2228402))
(assert (= temp1003_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1003_131)))
(assert (= temp1003_130 temp1003_132))
(assert (= var2240378 (bvsmod temp1003_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1003_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp1003_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1003_134 #x0000000000000001))
(assert (= var2240379 temp1003_134))
(assert (= var2240398 var2240288))
(assert (= temp1003_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp1003_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1003_136 #x0000000000000001))
(assert (= var2240399 temp1003_136))
(assert (= temp1003_137 #x0000000000000001))
(assert (= var2229290 temp1003_137))
(assert (= temp1003_139 var2229290))
(assert (= temp1003_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1003_139)))
(assert (= temp1003_138 temp1003_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp1003_138)))
(assert (= temp1003_141 #x0000000000000000))
(assert (= var2228402 temp1003_141))
(assert (= temp1003_143 var2228402))
(assert (= temp1003_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1003_143)))
(assert (= temp1003_142 temp1003_144))
(assert (= temp1003_145 #x0000000000000002))
(assert (= var2503529 temp1003_145))
(assert (= temp1003_146 #x0000000000000001))
(assert (= var2240569 temp1003_146))
(assert (= temp1003_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1003_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1003_148 #x0000000000000001))
(assert (= var1521778 temp1003_148))
(assert (= temp1003_149 #x0000000000000001))
(assert (= var1521908 temp1003_149))
(assert (= var4010473 var1521908))
(assert (= temp1003_150 #x0000000000000000))
(assert (= var4210495 temp1003_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp1003_151 #x0000000000000002))
(assert (= var4339331 temp1003_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp1003_152 #x0000000000000001))
(assert (= var1521778 temp1003_152))
(model-add temp1003_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp1003_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp1003_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1003_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp1003_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1003_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






