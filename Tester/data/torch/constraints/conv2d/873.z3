(declare-fun temp1163_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp1163_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp1163_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp1163_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp1163_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp1163_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp1163_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp1163_8 () (_ BitVec 64))
(declare-fun temp1163_10 () (_ BitVec 64))
(declare-fun temp1163_9 () (_ BitVec 64))
(declare-fun temp1163_12 () (_ BitVec 64))
(declare-fun temp1163_11 () (_ BitVec 64))
(declare-fun temp1163_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp1163_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp1163_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp1163_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp1163_17 () (_ BitVec 64))
(declare-fun temp1163_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp1163_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp1163_20 () (_ BitVec 64))
(declare-fun temp1163_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1163_22 () (_ BitVec 64))
(declare-fun temp1163_23 () (_ BitVec 64))
(declare-fun temp1163_24 () (_ BitVec 64))
(declare-fun temp1163_25 () (_ BitVec 64))
(declare-fun temp1163_26 () (_ BitVec 64))
(declare-fun temp1163_27 () (_ BitVec 64))
(declare-fun temp1163_28 () (_ BitVec 64))
(declare-fun temp1163_29 () (_ BitVec 64))
(declare-fun temp1163_30 () (_ BitVec 64))
(declare-fun temp1163_31 () (_ BitVec 64))
(declare-fun temp1163_32 () (_ BitVec 64))
(declare-fun temp1163_33 () (_ BitVec 64))
(declare-fun temp1163_34 () (_ BitVec 64))
(declare-fun temp1163_35 () (_ BitVec 64))
(declare-fun temp1163_36 () (_ BitVec 64))
(declare-fun temp1163_37 () (_ BitVec 64))
(declare-fun temp1163_38 () (_ BitVec 64))
(declare-fun temp1163_39 () (_ BitVec 64))
(declare-fun temp1163_40 () (_ BitVec 64))
(declare-fun temp1163_41 () (_ BitVec 64))
(declare-fun temp1163_42 () (_ BitVec 64))
(declare-fun temp1163_43 () (_ BitVec 64))
(declare-fun temp1163_44 () (_ BitVec 64))
(declare-fun temp1163_45 () (_ BitVec 64))
(declare-fun temp1163_46 () (_ BitVec 64))
(declare-fun temp1163_47 () (_ BitVec 64))
(declare-fun temp1163_48 () (_ BitVec 64))
(declare-fun temp1163_49 () (_ BitVec 64))
(declare-fun temp1163_50 () (_ BitVec 64))
(declare-fun temp1163_51 () (_ BitVec 64))
(declare-fun temp1163_52 () (_ BitVec 64))
(declare-fun temp1163_53 () (_ BitVec 64))
(declare-fun temp1163_54 () (_ BitVec 64))
(declare-fun temp1163_55 () (_ BitVec 64))
(declare-fun temp1163_56 () (_ BitVec 64))
(declare-fun temp1163_57 () (_ BitVec 64))
(declare-fun temp1163_58 () (_ BitVec 64))
(declare-fun temp1163_59 () (_ BitVec 64))
(declare-fun temp1163_60 () (_ BitVec 64))
(declare-fun temp1163_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp1163_62 () (_ BitVec 64))
(declare-fun temp1163_63 () (_ BitVec 64))
(declare-fun temp1163_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1163_65 () (_ BitVec 64))
(declare-fun temp1163_66 () (_ BitVec 64))
(declare-fun temp1163_67 () (_ BitVec 64))
(declare-fun temp1163_68 () (_ BitVec 64))
(declare-fun temp1163_69 () (_ BitVec 64))
(declare-fun temp1163_70 () (_ BitVec 64))
(declare-fun temp1163_71 () (_ BitVec 64))
(declare-fun temp1163_72 () (_ BitVec 64))
(declare-fun temp1163_73 () (_ BitVec 64))
(declare-fun temp1163_74 () (_ BitVec 64))
(declare-fun temp1163_75 () (_ BitVec 64))
(declare-fun temp1163_76 () (_ BitVec 64))
(declare-fun temp1163_77 () (_ BitVec 64))
(declare-fun temp1163_78 () (_ BitVec 64))
(declare-fun temp1163_79 () (_ BitVec 64))
(declare-fun temp1163_80 () (_ BitVec 64))
(declare-fun temp1163_81 () (_ BitVec 64))
(declare-fun temp1163_82 () (_ BitVec 64))
(declare-fun temp1163_83 () (_ BitVec 64))
(declare-fun temp1163_84 () (_ BitVec 64))
(declare-fun temp1163_85 () (_ BitVec 64))
(declare-fun temp1163_86 () (_ BitVec 64))
(declare-fun temp1163_87 () (_ BitVec 64))
(declare-fun temp1163_88 () (_ BitVec 64))
(declare-fun temp1163_89 () (_ BitVec 64))
(declare-fun temp1163_90 () (_ BitVec 64))
(declare-fun temp1163_91 () (_ BitVec 64))
(declare-fun temp1163_92 () (_ BitVec 64))
(declare-fun temp1163_93 () (_ BitVec 64))
(declare-fun temp1163_94 () (_ BitVec 64))
(declare-fun temp1163_95 () (_ BitVec 64))
(declare-fun temp1163_96 () (_ BitVec 64))
(declare-fun temp1163_97 () (_ BitVec 64))
(declare-fun temp1163_98 () (_ BitVec 64))
(declare-fun temp1163_99 () (_ BitVec 64))
(declare-fun temp1163_100 () (_ BitVec 64))
(declare-fun temp1163_101 () (_ BitVec 64))
(declare-fun temp1163_102 () (_ BitVec 64))
(declare-fun temp1163_103 () (_ BitVec 64))
(declare-fun temp1163_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp1163_105 () (_ BitVec 64))
(declare-fun temp1163_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp1163_107 () (_ BitVec 64))
(declare-fun temp1163_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1163_109 () (_ BitVec 64))
(declare-fun temp1163_110 () (_ BitVec 64))
(declare-fun temp1163_111 () (_ BitVec 64))
(declare-fun temp1163_112 () (_ BitVec 64))
(declare-fun temp1163_113 () (_ BitVec 64))
(declare-fun temp1163_114 () (_ BitVec 64))
(declare-fun temp1163_115 () (_ BitVec 64))
(declare-fun temp1163_116 () (_ BitVec 64))
(declare-fun temp1163_117 () (_ BitVec 64))
(declare-fun temp1163_118 () (_ BitVec 64))
(declare-fun temp1163_119 () (_ BitVec 64))
(declare-fun temp1163_120 () (_ BitVec 64))
(declare-fun temp1163_121 () (_ BitVec 64))
(declare-fun temp1163_122 () (_ BitVec 64))
(declare-fun temp1163_123 () (_ BitVec 64))
(declare-fun temp1163_124 () (_ BitVec 64))
(declare-fun temp1163_126 () (_ BitVec 64))
(declare-fun temp1163_127 () (_ BitVec 64))
(declare-fun temp1163_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp1163_128 () (_ BitVec 64))
(declare-fun temp1163_129 () (_ BitVec 64))
(declare-fun temp1163_131 () (_ BitVec 64))
(declare-fun temp1163_132 () (_ BitVec 64))
(declare-fun temp1163_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp1163_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp1163_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp1163_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp1163_136 () (_ BitVec 64))
(declare-fun temp1163_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp1163_139 () (_ BitVec 64))
(declare-fun temp1163_140 () (_ BitVec 64))
(declare-fun temp1163_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp1163_141 () (_ BitVec 64))
(declare-fun temp1163_143 () (_ BitVec 64))
(declare-fun temp1163_144 () (_ BitVec 64))
(declare-fun temp1163_142 () (_ BitVec 64))
(declare-fun temp1163_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp1163_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp1163_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp1163_148 () (_ BitVec 64))
(declare-fun temp1163_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp1163_150 () (_ BitVec 64))
(declare-fun var4404867 () (_ BitVec 64))
(declare-fun var4404869 () (_ BitVec 64))
(declare-fun var4470412 () (_ BitVec 64))
(declare-fun var4470413 () (_ BitVec 64))
(declare-fun var1522108 () (_ BitVec 64))
(declare-fun temp1163_151 () (_ BitVec 64))
(declare-fun var1522109 () (_ BitVec 64))
(declare-fun var5586765 () (_ BitVec 64))
(declare-fun temp1163_152 () (_ BitVec 64))
(assert (= temp1163_1 #x0000000000000002))
(assert (= var989741 temp1163_1))
(assert (= temp1163_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp1163_2)))
(assert (= temp1163_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp1163_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp1163_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp1163_4)))
(assert (= temp1163_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp1163_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp1163_6 #x0000000000000000))
(assert (= var989776 temp1163_6))
(assert (= temp1163_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp1163_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1163_8 #x0000000000000001))
(assert (= var989810 temp1163_8))
(assert (= temp1163_10 #x0000000000000000))
(assert (= temp1163_9 temp1163_10))
(assert (= temp1163_12 #x0000000000000002))
(assert (= temp1163_11 temp1163_12))
(assert (= temp1163_13 #x0000000000000000))
(assert (= var1387902 temp1163_13))
(assert (= temp1163_14 #x0000000000000001))
(assert (= var1387923 temp1163_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp1163_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp1163_15)))
(assert (= temp1163_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1163_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1163_17 #x0000000000000000))
(assert (= var1521661 temp1163_17))
(assert (= temp1163_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp1163_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1163_19 #x0000000000000000))
(assert (= var1521706 temp1163_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp1163_20 #x0000000000000000))
(assert (= temp1163_21 temp1163_20))
(assert (= temp1163_22 (select ARGNAME_padding_NAMEEND_VAL temp1163_21)))
(assert (= temp1163_23 #x0000000000000001))
(assert (= temp1163_24 temp1163_23))
(assert (= temp1163_25 (select ARGNAME_padding_NAMEEND_VAL temp1163_24)))
(assert (= temp1163_26 #x0000000000000002))
(assert (= temp1163_27 temp1163_26))
(assert (= temp1163_28 (select ARGNAME_padding_NAMEEND_VAL temp1163_27)))
(assert (= temp1163_29 #x0000000000000003))
(assert (= temp1163_30 temp1163_29))
(assert (= temp1163_31 (select ARGNAME_padding_NAMEEND_VAL temp1163_30)))
(assert (= temp1163_32 #x0000000000000004))
(assert (= temp1163_33 temp1163_32))
(assert (= temp1163_34 (select ARGNAME_padding_NAMEEND_VAL temp1163_33)))
(assert (= temp1163_35 #x0000000000000005))
(assert (= temp1163_36 temp1163_35))
(assert (= temp1163_37 (select ARGNAME_padding_NAMEEND_VAL temp1163_36)))
(assert (= temp1163_38 #x0000000000000000))
(assert (= temp1163_39 #x0000000000000000))
(assert (= temp1163_40 temp1163_39))
(assert (= temp1163_41 (select ARGNAME_padding_NAMEEND_VAL temp1163_40)))
(assert (= temp1163_42 #x0000000000000000))
(assert (= temp1163_43 #x0000000000000001))
(assert (= temp1163_44 temp1163_43))
(assert (= temp1163_45 (select ARGNAME_padding_NAMEEND_VAL temp1163_44)))
(assert (= temp1163_46 #x0000000000000000))
(assert (= temp1163_47 #x0000000000000002))
(assert (= temp1163_48 temp1163_47))
(assert (= temp1163_49 (select ARGNAME_padding_NAMEEND_VAL temp1163_48)))
(assert (= temp1163_50 #x0000000000000000))
(assert (= temp1163_51 #x0000000000000003))
(assert (= temp1163_52 temp1163_51))
(assert (= temp1163_53 (select ARGNAME_padding_NAMEEND_VAL temp1163_52)))
(assert (= temp1163_54 #x0000000000000000))
(assert (= temp1163_55 #x0000000000000004))
(assert (= temp1163_56 temp1163_55))
(assert (= temp1163_57 (select ARGNAME_padding_NAMEEND_VAL temp1163_56)))
(assert (= temp1163_58 #x0000000000000000))
(assert (= temp1163_59 #x0000000000000005))
(assert (= temp1163_60 temp1163_59))
(assert (= temp1163_61 (select ARGNAME_padding_NAMEEND_VAL temp1163_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp1163_41 temp1163_38)
             (bvslt temp1163_45 temp1163_42)
             (bvslt temp1163_49 temp1163_46)
             (bvslt temp1163_53 temp1163_50)
             (bvslt temp1163_57 temp1163_54)
             (bvslt temp1163_61 temp1163_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1163_62 #x0000000000000000))
(assert (= var2240290 temp1163_62))
(assert (= temp1163_63 #x0000000000000000))
(assert (= temp1163_64 temp1163_63))
(assert (= temp1163_65 (select ARGNAME_stride_NAMEEND_VAL temp1163_64)))
(assert (= temp1163_66 #x0000000000000001))
(assert (= temp1163_67 temp1163_66))
(assert (= temp1163_68 (select ARGNAME_stride_NAMEEND_VAL temp1163_67)))
(assert (= temp1163_69 #x0000000000000002))
(assert (= temp1163_70 temp1163_69))
(assert (= temp1163_71 (select ARGNAME_stride_NAMEEND_VAL temp1163_70)))
(assert (= temp1163_72 #x0000000000000003))
(assert (= temp1163_73 temp1163_72))
(assert (= temp1163_74 (select ARGNAME_stride_NAMEEND_VAL temp1163_73)))
(assert (= temp1163_75 #x0000000000000004))
(assert (= temp1163_76 temp1163_75))
(assert (= temp1163_77 (select ARGNAME_stride_NAMEEND_VAL temp1163_76)))
(assert (= temp1163_78 #x0000000000000005))
(assert (= temp1163_79 temp1163_78))
(assert (= temp1163_80 (select ARGNAME_stride_NAMEEND_VAL temp1163_79)))
(assert (= temp1163_81 #x0000000000000000))
(assert (= temp1163_82 #x0000000000000000))
(assert (= temp1163_83 temp1163_82))
(assert (= temp1163_84 (select ARGNAME_stride_NAMEEND_VAL temp1163_83)))
(assert (= temp1163_85 #x0000000000000000))
(assert (= temp1163_86 #x0000000000000001))
(assert (= temp1163_87 temp1163_86))
(assert (= temp1163_88 (select ARGNAME_stride_NAMEEND_VAL temp1163_87)))
(assert (= temp1163_89 #x0000000000000000))
(assert (= temp1163_90 #x0000000000000002))
(assert (= temp1163_91 temp1163_90))
(assert (= temp1163_92 (select ARGNAME_stride_NAMEEND_VAL temp1163_91)))
(assert (= temp1163_93 #x0000000000000000))
(assert (= temp1163_94 #x0000000000000003))
(assert (= temp1163_95 temp1163_94))
(assert (= temp1163_96 (select ARGNAME_stride_NAMEEND_VAL temp1163_95)))
(assert (= temp1163_97 #x0000000000000000))
(assert (= temp1163_98 #x0000000000000004))
(assert (= temp1163_99 temp1163_98))
(assert (= temp1163_100 (select ARGNAME_stride_NAMEEND_VAL temp1163_99)))
(assert (= temp1163_101 #x0000000000000000))
(assert (= temp1163_102 #x0000000000000005))
(assert (= temp1163_103 temp1163_102))
(assert (= temp1163_104 (select ARGNAME_stride_NAMEEND_VAL temp1163_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp1163_84 temp1163_81)
             (bvsle temp1163_88 temp1163_85)
             (bvsle temp1163_92 temp1163_89)
             (bvsle temp1163_96 temp1163_93)
             (bvsle temp1163_100 temp1163_97)
             (bvsle temp1163_104 temp1163_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1163_105 #x0000000000000000))
(assert (= var2240311 temp1163_105))
(assert (= temp1163_106 #x0000000000000000))
(assert (= var2228402 temp1163_106))
(assert (= temp1163_107 #x0000000000000000))
(assert (= temp1163_108 temp1163_107))
(assert (= temp1163_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1163_108)))
(assert (= temp1163_110 #x0000000000000001))
(assert (= temp1163_111 temp1163_110))
(assert (= temp1163_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1163_111)))
(assert (= temp1163_113 #x0000000000000002))
(assert (= temp1163_114 temp1163_113))
(assert (= temp1163_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1163_114)))
(assert (= temp1163_116 #x0000000000000003))
(assert (= temp1163_117 temp1163_116))
(assert (= temp1163_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1163_117)))
(assert (= temp1163_119 #x0000000000000004))
(assert (= temp1163_120 temp1163_119))
(assert (= temp1163_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1163_120)))
(assert (= temp1163_122 #x0000000000000005))
(assert (= temp1163_123 temp1163_122))
(assert (= temp1163_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1163_123)))
(assert (= temp1163_126 var2228402))
(assert (= temp1163_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1163_126)))
(assert (= temp1163_125 temp1163_127))
(assert (= var2240356
   (ite (bvslt temp1163_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1163_128 #x0000000000000000))
(assert (= var2240356 temp1163_128))
(assert (= temp1163_129 #x0000000000000000))
(assert (= var2228402 temp1163_129))
(assert (= temp1163_131 var2228402))
(assert (= temp1163_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1163_131)))
(assert (= temp1163_130 temp1163_132))
(assert (= var2240378 (bvsmod temp1163_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1163_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp1163_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1163_134 #x0000000000000001))
(assert (= var2240379 temp1163_134))
(assert (= var2240398 var2240288))
(assert (= temp1163_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp1163_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1163_136 #x0000000000000001))
(assert (= var2240399 temp1163_136))
(assert (= temp1163_137 #x0000000000000001))
(assert (= var2229290 temp1163_137))
(assert (= temp1163_139 var2229290))
(assert (= temp1163_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1163_139)))
(assert (= temp1163_138 temp1163_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp1163_138)))
(assert (= temp1163_141 #x0000000000000000))
(assert (= var2228402 temp1163_141))
(assert (= temp1163_143 var2228402))
(assert (= temp1163_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1163_143)))
(assert (= temp1163_142 temp1163_144))
(assert (= temp1163_145 #x0000000000000002))
(assert (= var2503529 temp1163_145))
(assert (= temp1163_146 #x0000000000000001))
(assert (= var2240569 temp1163_146))
(assert (= temp1163_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1163_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1163_148 #x0000000000000001))
(assert (= var1521778 temp1163_148))
(assert (= temp1163_149 #x0000000000000001))
(assert (= var1521908 temp1163_149))
(assert (= var4010473 var1521908))
(assert (= temp1163_150 #x0000000000000002))
(assert (= var4404867 temp1163_150))
(assert (= var4404869 (bvsub ARGNAME_weight_NAMEEND_DIM var4404867)))
(assert (= var4470412 var4404867))
(assert (= var4470413 var4404869))
(assert (= var1522108 var1521633))
(assert (= temp1163_151 #x0000000000000000))
(assert (= var1522109
   (ite (distinct var1522108 temp1163_151)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var5586765 var1522109))
(assert (= temp1163_152 #x0000000000000001))
(assert (= var1521778 temp1163_152))
(model-add temp1163_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp1163_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp1163_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1163_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp1163_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1163_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)





