(declare-fun temp10135_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp10135_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp10135_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp10135_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp10135_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp10135_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp10135_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp10135_8 () (_ BitVec 64))
(declare-fun temp10135_10 () (_ BitVec 64))
(declare-fun temp10135_9 () (_ BitVec 64))
(declare-fun temp10135_12 () (_ BitVec 64))
(declare-fun temp10135_11 () (_ BitVec 64))
(declare-fun temp10135_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp10135_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp10135_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp10135_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp10135_17 () (_ BitVec 64))
(declare-fun temp10135_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp10135_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp10135_20 () (_ BitVec 64))
(declare-fun temp10135_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10135_22 () (_ BitVec 64))
(declare-fun temp10135_23 () (_ BitVec 64))
(declare-fun temp10135_24 () (_ BitVec 64))
(declare-fun temp10135_25 () (_ BitVec 64))
(declare-fun temp10135_26 () (_ BitVec 64))
(declare-fun temp10135_27 () (_ BitVec 64))
(declare-fun temp10135_28 () (_ BitVec 64))
(declare-fun temp10135_29 () (_ BitVec 64))
(declare-fun temp10135_30 () (_ BitVec 64))
(declare-fun temp10135_31 () (_ BitVec 64))
(declare-fun temp10135_32 () (_ BitVec 64))
(declare-fun temp10135_33 () (_ BitVec 64))
(declare-fun temp10135_34 () (_ BitVec 64))
(declare-fun temp10135_35 () (_ BitVec 64))
(declare-fun temp10135_36 () (_ BitVec 64))
(declare-fun temp10135_37 () (_ BitVec 64))
(declare-fun temp10135_38 () (_ BitVec 64))
(declare-fun temp10135_39 () (_ BitVec 64))
(declare-fun temp10135_40 () (_ BitVec 64))
(declare-fun temp10135_41 () (_ BitVec 64))
(declare-fun temp10135_42 () (_ BitVec 64))
(declare-fun temp10135_43 () (_ BitVec 64))
(declare-fun temp10135_44 () (_ BitVec 64))
(declare-fun temp10135_45 () (_ BitVec 64))
(declare-fun temp10135_46 () (_ BitVec 64))
(declare-fun temp10135_47 () (_ BitVec 64))
(declare-fun temp10135_48 () (_ BitVec 64))
(declare-fun temp10135_49 () (_ BitVec 64))
(declare-fun temp10135_50 () (_ BitVec 64))
(declare-fun temp10135_51 () (_ BitVec 64))
(declare-fun temp10135_52 () (_ BitVec 64))
(declare-fun temp10135_53 () (_ BitVec 64))
(declare-fun temp10135_54 () (_ BitVec 64))
(declare-fun temp10135_55 () (_ BitVec 64))
(declare-fun temp10135_56 () (_ BitVec 64))
(declare-fun temp10135_57 () (_ BitVec 64))
(declare-fun temp10135_58 () (_ BitVec 64))
(declare-fun temp10135_59 () (_ BitVec 64))
(declare-fun temp10135_60 () (_ BitVec 64))
(declare-fun temp10135_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp10135_62 () (_ BitVec 64))
(declare-fun temp10135_63 () (_ BitVec 64))
(declare-fun temp10135_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10135_65 () (_ BitVec 64))
(declare-fun temp10135_66 () (_ BitVec 64))
(declare-fun temp10135_67 () (_ BitVec 64))
(declare-fun temp10135_68 () (_ BitVec 64))
(declare-fun temp10135_69 () (_ BitVec 64))
(declare-fun temp10135_70 () (_ BitVec 64))
(declare-fun temp10135_71 () (_ BitVec 64))
(declare-fun temp10135_72 () (_ BitVec 64))
(declare-fun temp10135_73 () (_ BitVec 64))
(declare-fun temp10135_74 () (_ BitVec 64))
(declare-fun temp10135_75 () (_ BitVec 64))
(declare-fun temp10135_76 () (_ BitVec 64))
(declare-fun temp10135_77 () (_ BitVec 64))
(declare-fun temp10135_78 () (_ BitVec 64))
(declare-fun temp10135_79 () (_ BitVec 64))
(declare-fun temp10135_80 () (_ BitVec 64))
(declare-fun temp10135_81 () (_ BitVec 64))
(declare-fun temp10135_82 () (_ BitVec 64))
(declare-fun temp10135_83 () (_ BitVec 64))
(declare-fun temp10135_84 () (_ BitVec 64))
(declare-fun temp10135_85 () (_ BitVec 64))
(declare-fun temp10135_86 () (_ BitVec 64))
(declare-fun temp10135_87 () (_ BitVec 64))
(declare-fun temp10135_88 () (_ BitVec 64))
(declare-fun temp10135_89 () (_ BitVec 64))
(declare-fun temp10135_90 () (_ BitVec 64))
(declare-fun temp10135_91 () (_ BitVec 64))
(declare-fun temp10135_92 () (_ BitVec 64))
(declare-fun temp10135_93 () (_ BitVec 64))
(declare-fun temp10135_94 () (_ BitVec 64))
(declare-fun temp10135_95 () (_ BitVec 64))
(declare-fun temp10135_96 () (_ BitVec 64))
(declare-fun temp10135_97 () (_ BitVec 64))
(declare-fun temp10135_98 () (_ BitVec 64))
(declare-fun temp10135_99 () (_ BitVec 64))
(declare-fun temp10135_100 () (_ BitVec 64))
(declare-fun temp10135_101 () (_ BitVec 64))
(declare-fun temp10135_102 () (_ BitVec 64))
(declare-fun temp10135_103 () (_ BitVec 64))
(declare-fun temp10135_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp10135_105 () (_ BitVec 64))
(declare-fun temp10135_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp10135_107 () (_ BitVec 64))
(declare-fun temp10135_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10135_109 () (_ BitVec 64))
(declare-fun temp10135_110 () (_ BitVec 64))
(declare-fun temp10135_111 () (_ BitVec 64))
(declare-fun temp10135_112 () (_ BitVec 64))
(declare-fun temp10135_113 () (_ BitVec 64))
(declare-fun temp10135_114 () (_ BitVec 64))
(declare-fun temp10135_115 () (_ BitVec 64))
(declare-fun temp10135_116 () (_ BitVec 64))
(declare-fun temp10135_117 () (_ BitVec 64))
(declare-fun temp10135_118 () (_ BitVec 64))
(declare-fun temp10135_119 () (_ BitVec 64))
(declare-fun temp10135_120 () (_ BitVec 64))
(declare-fun temp10135_121 () (_ BitVec 64))
(declare-fun temp10135_122 () (_ BitVec 64))
(declare-fun temp10135_123 () (_ BitVec 64))
(declare-fun temp10135_124 () (_ BitVec 64))
(declare-fun temp10135_126 () (_ BitVec 64))
(declare-fun temp10135_127 () (_ BitVec 64))
(declare-fun temp10135_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp10135_128 () (_ BitVec 64))
(declare-fun temp10135_129 () (_ BitVec 64))
(declare-fun temp10135_131 () (_ BitVec 64))
(declare-fun temp10135_132 () (_ BitVec 64))
(declare-fun temp10135_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp10135_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp10135_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp10135_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp10135_136 () (_ BitVec 64))
(declare-fun temp10135_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp10135_139 () (_ BitVec 64))
(declare-fun temp10135_140 () (_ BitVec 64))
(declare-fun temp10135_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp10135_141 () (_ BitVec 64))
(declare-fun temp10135_143 () (_ BitVec 64))
(declare-fun temp10135_144 () (_ BitVec 64))
(declare-fun temp10135_142 () (_ BitVec 64))
(declare-fun temp10135_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp10135_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp10135_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp10135_148 () (_ BitVec 64))
(declare-fun temp10135_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp10135_150 () (_ BitVec 64))
(declare-fun var4010640 () (_ BitVec 64))
(declare-fun var4010467 () (_ BitVec 64))
(declare-fun var1521917 () (_ BitVec 64))
(declare-fun var4275993 () (_ BitVec 64))
(declare-fun temp10135_151 () (_ BitVec 64))
(declare-fun temp10135_152 () (_ BitVec 64))
(declare-fun temp10135_153 () (_ BitVec 64))
(declare-fun var4470403 () (_ BitVec 64))
(declare-fun var4470405 () (_ BitVec 64))
(declare-fun var4535948 () (_ BitVec 64))
(declare-fun var4535949 () (_ BitVec 64))
(declare-fun temp10135_154 () (_ BitVec 64))
(declare-fun var1522108 () (_ BitVec 64))
(declare-fun temp10135_155 () (_ BitVec 64))
(declare-fun var1522109 () (_ BitVec 64))
(declare-fun var5652301 () (_ BitVec 64))
(declare-fun temp10135_157 () (_ BitVec 64))
(declare-fun temp10135_156 () (_ BitVec 64))
(declare-fun temp10135_158 () (_ BitVec 64))
(declare-fun var6229482 () (_ BitVec 64))
(declare-fun temp10135_160 () (_ BitVec 64))
(declare-fun temp10135_159 () (_ BitVec 64))
(declare-fun temp10135_161 () (_ BitVec 64))
(assert (= temp10135_1 #x0000000000000002))
(assert (= var989741 temp10135_1))
(assert (= temp10135_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp10135_2)))
(assert (= temp10135_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp10135_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp10135_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp10135_4)))
(assert (= temp10135_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp10135_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp10135_6 #x0000000000000000))
(assert (= var989776 temp10135_6))
(assert (= temp10135_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp10135_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp10135_8 #x0000000000000001))
(assert (= var989810 temp10135_8))
(assert (= temp10135_10 #x0000000000000000))
(assert (= temp10135_9 temp10135_10))
(assert (= temp10135_12 #x0000000000000002))
(assert (= temp10135_11 temp10135_12))
(assert (= temp10135_13 #x0000000000000000))
(assert (= var1387902 temp10135_13))
(assert (= temp10135_14 #x0000000000000001))
(assert (= var1387923 temp10135_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp10135_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp10135_15)))
(assert (= temp10135_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10135_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10135_17 #x0000000000000000))
(assert (= var1521661 temp10135_17))
(assert (= temp10135_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp10135_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10135_19 #x0000000000000000))
(assert (= var1521706 temp10135_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp10135_20 #x0000000000000000))
(assert (= temp10135_21 temp10135_20))
(assert (= temp10135_22 (select ARGNAME_padding_NAMEEND_VAL temp10135_21)))
(assert (= temp10135_23 #x0000000000000001))
(assert (= temp10135_24 temp10135_23))
(assert (= temp10135_25 (select ARGNAME_padding_NAMEEND_VAL temp10135_24)))
(assert (= temp10135_26 #x0000000000000002))
(assert (= temp10135_27 temp10135_26))
(assert (= temp10135_28 (select ARGNAME_padding_NAMEEND_VAL temp10135_27)))
(assert (= temp10135_29 #x0000000000000003))
(assert (= temp10135_30 temp10135_29))
(assert (= temp10135_31 (select ARGNAME_padding_NAMEEND_VAL temp10135_30)))
(assert (= temp10135_32 #x0000000000000004))
(assert (= temp10135_33 temp10135_32))
(assert (= temp10135_34 (select ARGNAME_padding_NAMEEND_VAL temp10135_33)))
(assert (= temp10135_35 #x0000000000000005))
(assert (= temp10135_36 temp10135_35))
(assert (= temp10135_37 (select ARGNAME_padding_NAMEEND_VAL temp10135_36)))
(assert (= temp10135_38 #x0000000000000000))
(assert (= temp10135_39 #x0000000000000000))
(assert (= temp10135_40 temp10135_39))
(assert (= temp10135_41 (select ARGNAME_padding_NAMEEND_VAL temp10135_40)))
(assert (= temp10135_42 #x0000000000000000))
(assert (= temp10135_43 #x0000000000000001))
(assert (= temp10135_44 temp10135_43))
(assert (= temp10135_45 (select ARGNAME_padding_NAMEEND_VAL temp10135_44)))
(assert (= temp10135_46 #x0000000000000000))
(assert (= temp10135_47 #x0000000000000002))
(assert (= temp10135_48 temp10135_47))
(assert (= temp10135_49 (select ARGNAME_padding_NAMEEND_VAL temp10135_48)))
(assert (= temp10135_50 #x0000000000000000))
(assert (= temp10135_51 #x0000000000000003))
(assert (= temp10135_52 temp10135_51))
(assert (= temp10135_53 (select ARGNAME_padding_NAMEEND_VAL temp10135_52)))
(assert (= temp10135_54 #x0000000000000000))
(assert (= temp10135_55 #x0000000000000004))
(assert (= temp10135_56 temp10135_55))
(assert (= temp10135_57 (select ARGNAME_padding_NAMEEND_VAL temp10135_56)))
(assert (= temp10135_58 #x0000000000000000))
(assert (= temp10135_59 #x0000000000000005))
(assert (= temp10135_60 temp10135_59))
(assert (= temp10135_61 (select ARGNAME_padding_NAMEEND_VAL temp10135_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp10135_41 temp10135_38)
             (bvslt temp10135_45 temp10135_42)
             (bvslt temp10135_49 temp10135_46)
             (bvslt temp10135_53 temp10135_50)
             (bvslt temp10135_57 temp10135_54)
             (bvslt temp10135_61 temp10135_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10135_62 #x0000000000000000))
(assert (= var2240290 temp10135_62))
(assert (= temp10135_63 #x0000000000000000))
(assert (= temp10135_64 temp10135_63))
(assert (= temp10135_65 (select ARGNAME_stride_NAMEEND_VAL temp10135_64)))
(assert (= temp10135_66 #x0000000000000001))
(assert (= temp10135_67 temp10135_66))
(assert (= temp10135_68 (select ARGNAME_stride_NAMEEND_VAL temp10135_67)))
(assert (= temp10135_69 #x0000000000000002))
(assert (= temp10135_70 temp10135_69))
(assert (= temp10135_71 (select ARGNAME_stride_NAMEEND_VAL temp10135_70)))
(assert (= temp10135_72 #x0000000000000003))
(assert (= temp10135_73 temp10135_72))
(assert (= temp10135_74 (select ARGNAME_stride_NAMEEND_VAL temp10135_73)))
(assert (= temp10135_75 #x0000000000000004))
(assert (= temp10135_76 temp10135_75))
(assert (= temp10135_77 (select ARGNAME_stride_NAMEEND_VAL temp10135_76)))
(assert (= temp10135_78 #x0000000000000005))
(assert (= temp10135_79 temp10135_78))
(assert (= temp10135_80 (select ARGNAME_stride_NAMEEND_VAL temp10135_79)))
(assert (= temp10135_81 #x0000000000000000))
(assert (= temp10135_82 #x0000000000000000))
(assert (= temp10135_83 temp10135_82))
(assert (= temp10135_84 (select ARGNAME_stride_NAMEEND_VAL temp10135_83)))
(assert (= temp10135_85 #x0000000000000000))
(assert (= temp10135_86 #x0000000000000001))
(assert (= temp10135_87 temp10135_86))
(assert (= temp10135_88 (select ARGNAME_stride_NAMEEND_VAL temp10135_87)))
(assert (= temp10135_89 #x0000000000000000))
(assert (= temp10135_90 #x0000000000000002))
(assert (= temp10135_91 temp10135_90))
(assert (= temp10135_92 (select ARGNAME_stride_NAMEEND_VAL temp10135_91)))
(assert (= temp10135_93 #x0000000000000000))
(assert (= temp10135_94 #x0000000000000003))
(assert (= temp10135_95 temp10135_94))
(assert (= temp10135_96 (select ARGNAME_stride_NAMEEND_VAL temp10135_95)))
(assert (= temp10135_97 #x0000000000000000))
(assert (= temp10135_98 #x0000000000000004))
(assert (= temp10135_99 temp10135_98))
(assert (= temp10135_100 (select ARGNAME_stride_NAMEEND_VAL temp10135_99)))
(assert (= temp10135_101 #x0000000000000000))
(assert (= temp10135_102 #x0000000000000005))
(assert (= temp10135_103 temp10135_102))
(assert (= temp10135_104 (select ARGNAME_stride_NAMEEND_VAL temp10135_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp10135_84 temp10135_81)
             (bvsle temp10135_88 temp10135_85)
             (bvsle temp10135_92 temp10135_89)
             (bvsle temp10135_96 temp10135_93)
             (bvsle temp10135_100 temp10135_97)
             (bvsle temp10135_104 temp10135_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10135_105 #x0000000000000000))
(assert (= var2240311 temp10135_105))
(assert (= temp10135_106 #x0000000000000000))
(assert (= var2228402 temp10135_106))
(assert (= temp10135_107 #x0000000000000000))
(assert (= temp10135_108 temp10135_107))
(assert (= temp10135_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10135_108)))
(assert (= temp10135_110 #x0000000000000001))
(assert (= temp10135_111 temp10135_110))
(assert (= temp10135_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10135_111)))
(assert (= temp10135_113 #x0000000000000002))
(assert (= temp10135_114 temp10135_113))
(assert (= temp10135_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10135_114)))
(assert (= temp10135_116 #x0000000000000003))
(assert (= temp10135_117 temp10135_116))
(assert (= temp10135_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10135_117)))
(assert (= temp10135_119 #x0000000000000004))
(assert (= temp10135_120 temp10135_119))
(assert (= temp10135_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10135_120)))
(assert (= temp10135_122 #x0000000000000005))
(assert (= temp10135_123 temp10135_122))
(assert (= temp10135_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10135_123)))
(assert (= temp10135_126 var2228402))
(assert (= temp10135_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10135_126)))
(assert (= temp10135_125 temp10135_127))
(assert (= var2240356
   (ite (bvslt temp10135_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10135_128 #x0000000000000000))
(assert (= var2240356 temp10135_128))
(assert (= temp10135_129 #x0000000000000000))
(assert (= var2228402 temp10135_129))
(assert (= temp10135_131 var2228402))
(assert (= temp10135_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10135_131)))
(assert (= temp10135_130 temp10135_132))
(assert (= var2240378 (bvsmod temp10135_130 ARGNAME_groups_NAMEEND)))
(assert (= temp10135_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp10135_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp10135_134 #x0000000000000001))
(assert (= var2240379 temp10135_134))
(assert (= var2240398 var2240288))
(assert (= temp10135_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp10135_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp10135_136 #x0000000000000001))
(assert (= var2240399 temp10135_136))
(assert (= temp10135_137 #x0000000000000001))
(assert (= var2229290 temp10135_137))
(assert (= temp10135_139 var2229290))
(assert (= temp10135_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10135_139)))
(assert (= temp10135_138 temp10135_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp10135_138)))
(assert (= temp10135_141 #x0000000000000000))
(assert (= var2228402 temp10135_141))
(assert (= temp10135_143 var2228402))
(assert (= temp10135_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10135_143)))
(assert (= temp10135_142 temp10135_144))
(assert (= temp10135_145 #x0000000000000002))
(assert (= var2503529 temp10135_145))
(assert (= temp10135_146 #x0000000000000001))
(assert (= var2240569 temp10135_146))
(assert (= temp10135_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10135_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10135_148 #x0000000000000001))
(assert (= var1521778 temp10135_148))
(assert (= temp10135_149 #x0000000000000001))
(assert (= var1521908 temp10135_149))
(assert (= var4010473 var1521908))
(assert (= temp10135_150 #x0000000000000002))
(assert (= var4010640 temp10135_150))
(assert (= var4010467 var4010640))
(assert (= var1521917 var4010467))
(assert (= var4275993 var1521917))
(assert (= temp10135_151 #x0000000000000002))
(assert (= temp10135_152 #x0000000000000003))
(assert (or false (= var4275993 temp10135_151) (= var4275993 temp10135_152)))
(assert (= temp10135_153 #x0000000000000002))
(assert (= var4470403 temp10135_153))
(assert (= var4470405 (bvsub ARGNAME_weight_NAMEEND_DIM var4470403)))
(assert (= var4535948 var4470403))
(assert (= var4535949 var4470405))
(assert (= temp10135_154 #x0000000000000002))
(assert (or false (= var1521917 temp10135_154)))
(assert (= var1522108 var1521633))
(assert (= temp10135_155 #x0000000000000000))
(assert (= var1522109
   (ite (distinct var1522108 temp10135_155)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var5652301 var1522109))
(assert (= temp10135_157 #x0000000000000001))
(assert (= temp10135_156 temp10135_157))
(assert (= temp10135_158 #x0000000000000001))
(assert (= var6229482 temp10135_158))
(assert (= temp10135_160 #xffffffffffffffff))
(assert (= temp10135_159 temp10135_160))
(assert (= temp10135_161 #x0000000000000001))
(assert (= var1521778 temp10135_161))
(model-add temp10135_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp10135_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp10135_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp10135_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp10135_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp10135_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






