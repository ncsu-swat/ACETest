(declare-fun temp206_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp206_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp206_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp206_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp206_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp206_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp206_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp206_8 () (_ BitVec 64))
(declare-fun temp206_10 () (_ BitVec 64))
(declare-fun temp206_9 () (_ BitVec 64))
(declare-fun temp206_12 () (_ BitVec 64))
(declare-fun temp206_11 () (_ BitVec 64))
(declare-fun temp206_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp206_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp206_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp206_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp206_17 () (_ BitVec 64))
(declare-fun temp206_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp206_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp206_20 () (_ BitVec 64))
(declare-fun temp206_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp206_22 () (_ BitVec 64))
(declare-fun temp206_23 () (_ BitVec 64))
(declare-fun temp206_24 () (_ BitVec 64))
(declare-fun temp206_25 () (_ BitVec 64))
(declare-fun temp206_26 () (_ BitVec 64))
(declare-fun temp206_27 () (_ BitVec 64))
(declare-fun temp206_28 () (_ BitVec 64))
(declare-fun temp206_29 () (_ BitVec 64))
(declare-fun temp206_30 () (_ BitVec 64))
(declare-fun temp206_31 () (_ BitVec 64))
(declare-fun temp206_32 () (_ BitVec 64))
(declare-fun temp206_33 () (_ BitVec 64))
(declare-fun temp206_34 () (_ BitVec 64))
(declare-fun temp206_35 () (_ BitVec 64))
(declare-fun temp206_36 () (_ BitVec 64))
(declare-fun temp206_37 () (_ BitVec 64))
(declare-fun temp206_38 () (_ BitVec 64))
(declare-fun temp206_39 () (_ BitVec 64))
(declare-fun temp206_40 () (_ BitVec 64))
(declare-fun temp206_41 () (_ BitVec 64))
(declare-fun temp206_42 () (_ BitVec 64))
(declare-fun temp206_43 () (_ BitVec 64))
(declare-fun temp206_44 () (_ BitVec 64))
(declare-fun temp206_45 () (_ BitVec 64))
(declare-fun temp206_46 () (_ BitVec 64))
(declare-fun temp206_47 () (_ BitVec 64))
(declare-fun temp206_48 () (_ BitVec 64))
(declare-fun temp206_49 () (_ BitVec 64))
(declare-fun temp206_50 () (_ BitVec 64))
(declare-fun temp206_51 () (_ BitVec 64))
(declare-fun temp206_52 () (_ BitVec 64))
(declare-fun temp206_53 () (_ BitVec 64))
(declare-fun temp206_54 () (_ BitVec 64))
(declare-fun temp206_55 () (_ BitVec 64))
(declare-fun temp206_56 () (_ BitVec 64))
(declare-fun temp206_57 () (_ BitVec 64))
(declare-fun temp206_58 () (_ BitVec 64))
(declare-fun temp206_59 () (_ BitVec 64))
(declare-fun temp206_60 () (_ BitVec 64))
(declare-fun temp206_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp206_62 () (_ BitVec 64))
(declare-fun temp206_63 () (_ BitVec 64))
(declare-fun temp206_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp206_65 () (_ BitVec 64))
(declare-fun temp206_66 () (_ BitVec 64))
(declare-fun temp206_67 () (_ BitVec 64))
(declare-fun temp206_68 () (_ BitVec 64))
(declare-fun temp206_69 () (_ BitVec 64))
(declare-fun temp206_70 () (_ BitVec 64))
(declare-fun temp206_71 () (_ BitVec 64))
(declare-fun temp206_72 () (_ BitVec 64))
(declare-fun temp206_73 () (_ BitVec 64))
(declare-fun temp206_74 () (_ BitVec 64))
(declare-fun temp206_75 () (_ BitVec 64))
(declare-fun temp206_76 () (_ BitVec 64))
(declare-fun temp206_77 () (_ BitVec 64))
(declare-fun temp206_78 () (_ BitVec 64))
(declare-fun temp206_79 () (_ BitVec 64))
(declare-fun temp206_80 () (_ BitVec 64))
(declare-fun temp206_81 () (_ BitVec 64))
(declare-fun temp206_82 () (_ BitVec 64))
(declare-fun temp206_83 () (_ BitVec 64))
(declare-fun temp206_84 () (_ BitVec 64))
(declare-fun temp206_85 () (_ BitVec 64))
(declare-fun temp206_86 () (_ BitVec 64))
(declare-fun temp206_87 () (_ BitVec 64))
(declare-fun temp206_88 () (_ BitVec 64))
(declare-fun temp206_89 () (_ BitVec 64))
(declare-fun temp206_90 () (_ BitVec 64))
(declare-fun temp206_91 () (_ BitVec 64))
(declare-fun temp206_92 () (_ BitVec 64))
(declare-fun temp206_93 () (_ BitVec 64))
(declare-fun temp206_94 () (_ BitVec 64))
(declare-fun temp206_95 () (_ BitVec 64))
(declare-fun temp206_96 () (_ BitVec 64))
(declare-fun temp206_97 () (_ BitVec 64))
(declare-fun temp206_98 () (_ BitVec 64))
(declare-fun temp206_99 () (_ BitVec 64))
(declare-fun temp206_100 () (_ BitVec 64))
(declare-fun temp206_101 () (_ BitVec 64))
(declare-fun temp206_102 () (_ BitVec 64))
(declare-fun temp206_103 () (_ BitVec 64))
(declare-fun temp206_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp206_105 () (_ BitVec 64))
(declare-fun temp206_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp206_107 () (_ BitVec 64))
(declare-fun temp206_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp206_109 () (_ BitVec 64))
(declare-fun temp206_110 () (_ BitVec 64))
(declare-fun temp206_111 () (_ BitVec 64))
(declare-fun temp206_112 () (_ BitVec 64))
(declare-fun temp206_113 () (_ BitVec 64))
(declare-fun temp206_114 () (_ BitVec 64))
(declare-fun temp206_115 () (_ BitVec 64))
(declare-fun temp206_116 () (_ BitVec 64))
(declare-fun temp206_117 () (_ BitVec 64))
(declare-fun temp206_118 () (_ BitVec 64))
(declare-fun temp206_119 () (_ BitVec 64))
(declare-fun temp206_120 () (_ BitVec 64))
(declare-fun temp206_121 () (_ BitVec 64))
(declare-fun temp206_122 () (_ BitVec 64))
(declare-fun temp206_123 () (_ BitVec 64))
(declare-fun temp206_124 () (_ BitVec 64))
(declare-fun temp206_126 () (_ BitVec 64))
(declare-fun temp206_127 () (_ BitVec 64))
(declare-fun temp206_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp206_128 () (_ BitVec 64))
(declare-fun temp206_129 () (_ BitVec 64))
(declare-fun temp206_131 () (_ BitVec 64))
(declare-fun temp206_132 () (_ BitVec 64))
(declare-fun temp206_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp206_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp206_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp206_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp206_136 () (_ BitVec 64))
(declare-fun temp206_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp206_139 () (_ BitVec 64))
(declare-fun temp206_140 () (_ BitVec 64))
(declare-fun temp206_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp206_141 () (_ BitVec 64))
(declare-fun temp206_143 () (_ BitVec 64))
(declare-fun temp206_144 () (_ BitVec 64))
(declare-fun temp206_142 () (_ BitVec 64))
(declare-fun temp206_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp206_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp206_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp206_148 () (_ BitVec 64))
(declare-fun temp206_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp206_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp206_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp206_153 () (_ BitVec 64))
(declare-fun temp206_152 () (_ BitVec 64))
(declare-fun temp206_154 () (_ BitVec 64))
(assert (= temp206_1 #x0000000000000002))
(assert (= var989741 temp206_1))
(assert (= temp206_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp206_2)))
(assert (= temp206_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp206_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp206_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp206_4)))
(assert (= temp206_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp206_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp206_6 #x0000000000000000))
(assert (= var989776 temp206_6))
(assert (= temp206_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp206_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp206_8 #x0000000000000001))
(assert (= var989810 temp206_8))
(assert (= temp206_10 #x0000000000000000))
(assert (= temp206_9 temp206_10))
(assert (= temp206_12 #x0000000000000002))
(assert (= temp206_11 temp206_12))
(assert (= temp206_13 #x0000000000000000))
(assert (= var1387902 temp206_13))
(assert (= temp206_14 #x0000000000000001))
(assert (= var1387923 temp206_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp206_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp206_15)))
(assert (= temp206_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp206_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp206_17 #x0000000000000000))
(assert (= var1521661 temp206_17))
(assert (= temp206_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp206_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp206_19 #x0000000000000000))
(assert (= var1521706 temp206_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp206_20 #x0000000000000000))
(assert (= temp206_21 temp206_20))
(assert (= temp206_22 (select ARGNAME_padding_NAMEEND_VAL temp206_21)))
(assert (= temp206_23 #x0000000000000001))
(assert (= temp206_24 temp206_23))
(assert (= temp206_25 (select ARGNAME_padding_NAMEEND_VAL temp206_24)))
(assert (= temp206_26 #x0000000000000002))
(assert (= temp206_27 temp206_26))
(assert (= temp206_28 (select ARGNAME_padding_NAMEEND_VAL temp206_27)))
(assert (= temp206_29 #x0000000000000003))
(assert (= temp206_30 temp206_29))
(assert (= temp206_31 (select ARGNAME_padding_NAMEEND_VAL temp206_30)))
(assert (= temp206_32 #x0000000000000004))
(assert (= temp206_33 temp206_32))
(assert (= temp206_34 (select ARGNAME_padding_NAMEEND_VAL temp206_33)))
(assert (= temp206_35 #x0000000000000005))
(assert (= temp206_36 temp206_35))
(assert (= temp206_37 (select ARGNAME_padding_NAMEEND_VAL temp206_36)))
(assert (= temp206_38 #x0000000000000000))
(assert (= temp206_39 #x0000000000000000))
(assert (= temp206_40 temp206_39))
(assert (= temp206_41 (select ARGNAME_padding_NAMEEND_VAL temp206_40)))
(assert (= temp206_42 #x0000000000000000))
(assert (= temp206_43 #x0000000000000001))
(assert (= temp206_44 temp206_43))
(assert (= temp206_45 (select ARGNAME_padding_NAMEEND_VAL temp206_44)))
(assert (= temp206_46 #x0000000000000000))
(assert (= temp206_47 #x0000000000000002))
(assert (= temp206_48 temp206_47))
(assert (= temp206_49 (select ARGNAME_padding_NAMEEND_VAL temp206_48)))
(assert (= temp206_50 #x0000000000000000))
(assert (= temp206_51 #x0000000000000003))
(assert (= temp206_52 temp206_51))
(assert (= temp206_53 (select ARGNAME_padding_NAMEEND_VAL temp206_52)))
(assert (= temp206_54 #x0000000000000000))
(assert (= temp206_55 #x0000000000000004))
(assert (= temp206_56 temp206_55))
(assert (= temp206_57 (select ARGNAME_padding_NAMEEND_VAL temp206_56)))
(assert (= temp206_58 #x0000000000000000))
(assert (= temp206_59 #x0000000000000005))
(assert (= temp206_60 temp206_59))
(assert (= temp206_61 (select ARGNAME_padding_NAMEEND_VAL temp206_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp206_41 temp206_38)
             (bvslt temp206_45 temp206_42)
             (bvslt temp206_49 temp206_46)
             (bvslt temp206_53 temp206_50)
             (bvslt temp206_57 temp206_54)
             (bvslt temp206_61 temp206_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp206_62 #x0000000000000000))
(assert (= var2240290 temp206_62))
(assert (= temp206_63 #x0000000000000000))
(assert (= temp206_64 temp206_63))
(assert (= temp206_65 (select ARGNAME_stride_NAMEEND_VAL temp206_64)))
(assert (= temp206_66 #x0000000000000001))
(assert (= temp206_67 temp206_66))
(assert (= temp206_68 (select ARGNAME_stride_NAMEEND_VAL temp206_67)))
(assert (= temp206_69 #x0000000000000002))
(assert (= temp206_70 temp206_69))
(assert (= temp206_71 (select ARGNAME_stride_NAMEEND_VAL temp206_70)))
(assert (= temp206_72 #x0000000000000003))
(assert (= temp206_73 temp206_72))
(assert (= temp206_74 (select ARGNAME_stride_NAMEEND_VAL temp206_73)))
(assert (= temp206_75 #x0000000000000004))
(assert (= temp206_76 temp206_75))
(assert (= temp206_77 (select ARGNAME_stride_NAMEEND_VAL temp206_76)))
(assert (= temp206_78 #x0000000000000005))
(assert (= temp206_79 temp206_78))
(assert (= temp206_80 (select ARGNAME_stride_NAMEEND_VAL temp206_79)))
(assert (= temp206_81 #x0000000000000000))
(assert (= temp206_82 #x0000000000000000))
(assert (= temp206_83 temp206_82))
(assert (= temp206_84 (select ARGNAME_stride_NAMEEND_VAL temp206_83)))
(assert (= temp206_85 #x0000000000000000))
(assert (= temp206_86 #x0000000000000001))
(assert (= temp206_87 temp206_86))
(assert (= temp206_88 (select ARGNAME_stride_NAMEEND_VAL temp206_87)))
(assert (= temp206_89 #x0000000000000000))
(assert (= temp206_90 #x0000000000000002))
(assert (= temp206_91 temp206_90))
(assert (= temp206_92 (select ARGNAME_stride_NAMEEND_VAL temp206_91)))
(assert (= temp206_93 #x0000000000000000))
(assert (= temp206_94 #x0000000000000003))
(assert (= temp206_95 temp206_94))
(assert (= temp206_96 (select ARGNAME_stride_NAMEEND_VAL temp206_95)))
(assert (= temp206_97 #x0000000000000000))
(assert (= temp206_98 #x0000000000000004))
(assert (= temp206_99 temp206_98))
(assert (= temp206_100 (select ARGNAME_stride_NAMEEND_VAL temp206_99)))
(assert (= temp206_101 #x0000000000000000))
(assert (= temp206_102 #x0000000000000005))
(assert (= temp206_103 temp206_102))
(assert (= temp206_104 (select ARGNAME_stride_NAMEEND_VAL temp206_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp206_84 temp206_81)
             (bvsle temp206_88 temp206_85)
             (bvsle temp206_92 temp206_89)
             (bvsle temp206_96 temp206_93)
             (bvsle temp206_100 temp206_97)
             (bvsle temp206_104 temp206_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp206_105 #x0000000000000000))
(assert (= var2240311 temp206_105))
(assert (= temp206_106 #x0000000000000000))
(assert (= var2228402 temp206_106))
(assert (= temp206_107 #x0000000000000000))
(assert (= temp206_108 temp206_107))
(assert (= temp206_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp206_108)))
(assert (= temp206_110 #x0000000000000001))
(assert (= temp206_111 temp206_110))
(assert (= temp206_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp206_111)))
(assert (= temp206_113 #x0000000000000002))
(assert (= temp206_114 temp206_113))
(assert (= temp206_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp206_114)))
(assert (= temp206_116 #x0000000000000003))
(assert (= temp206_117 temp206_116))
(assert (= temp206_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp206_117)))
(assert (= temp206_119 #x0000000000000004))
(assert (= temp206_120 temp206_119))
(assert (= temp206_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp206_120)))
(assert (= temp206_122 #x0000000000000005))
(assert (= temp206_123 temp206_122))
(assert (= temp206_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp206_123)))
(assert (= temp206_126 var2228402))
(assert (= temp206_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp206_126)))
(assert (= temp206_125 temp206_127))
(assert (= var2240356
   (ite (bvslt temp206_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp206_128 #x0000000000000000))
(assert (= var2240356 temp206_128))
(assert (= temp206_129 #x0000000000000000))
(assert (= var2228402 temp206_129))
(assert (= temp206_131 var2228402))
(assert (= temp206_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp206_131)))
(assert (= temp206_130 temp206_132))
(assert (= var2240378 (bvsmod temp206_130 ARGNAME_groups_NAMEEND)))
(assert (= temp206_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp206_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp206_134 #x0000000000000001))
(assert (= var2240379 temp206_134))
(assert (= var2240398 var2240288))
(assert (= temp206_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp206_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp206_136 #x0000000000000001))
(assert (= var2240399 temp206_136))
(assert (= temp206_137 #x0000000000000001))
(assert (= var2229290 temp206_137))
(assert (= temp206_139 var2229290))
(assert (= temp206_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp206_139)))
(assert (= temp206_138 temp206_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp206_138)))
(assert (= temp206_141 #x0000000000000000))
(assert (= var2228402 temp206_141))
(assert (= temp206_143 var2228402))
(assert (= temp206_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp206_143)))
(assert (= temp206_142 temp206_144))
(assert (= temp206_145 #x0000000000000002))
(assert (= var2503529 temp206_145))
(assert (= temp206_146 #x0000000000000001))
(assert (= var2240569 temp206_146))
(assert (= temp206_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp206_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp206_148 #x0000000000000001))
(assert (= var1521778 temp206_148))
(assert (= temp206_149 #x0000000000000001))
(assert (= var1521908 temp206_149))
(assert (= var4010473 var1521908))
(assert (= temp206_150 #x0000000000000000))
(assert (= var4210495 temp206_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp206_151 #x0000000000000002))
(assert (= var4339331 temp206_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp206_153 #xffffffffffffffff))
(assert (= temp206_152 temp206_153))
(assert (= temp206_154 #x0000000000000001))
(assert (= var1521778 temp206_154))
(model-add temp206_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp206_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp206_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp206_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp206_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp206_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






