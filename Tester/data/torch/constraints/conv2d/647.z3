(declare-fun temp861_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp861_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp861_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp861_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp861_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp861_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp861_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp861_8 () (_ BitVec 64))
(declare-fun temp861_10 () (_ BitVec 64))
(declare-fun temp861_9 () (_ BitVec 64))
(declare-fun temp861_12 () (_ BitVec 64))
(declare-fun temp861_11 () (_ BitVec 64))
(declare-fun temp861_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp861_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp861_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp861_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp861_17 () (_ BitVec 64))
(declare-fun temp861_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp861_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp861_20 () (_ BitVec 64))
(declare-fun temp861_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp861_22 () (_ BitVec 64))
(declare-fun temp861_23 () (_ BitVec 64))
(declare-fun temp861_24 () (_ BitVec 64))
(declare-fun temp861_25 () (_ BitVec 64))
(declare-fun temp861_26 () (_ BitVec 64))
(declare-fun temp861_27 () (_ BitVec 64))
(declare-fun temp861_28 () (_ BitVec 64))
(declare-fun temp861_29 () (_ BitVec 64))
(declare-fun temp861_30 () (_ BitVec 64))
(declare-fun temp861_31 () (_ BitVec 64))
(declare-fun temp861_32 () (_ BitVec 64))
(declare-fun temp861_33 () (_ BitVec 64))
(declare-fun temp861_34 () (_ BitVec 64))
(declare-fun temp861_35 () (_ BitVec 64))
(declare-fun temp861_36 () (_ BitVec 64))
(declare-fun temp861_37 () (_ BitVec 64))
(declare-fun temp861_38 () (_ BitVec 64))
(declare-fun temp861_39 () (_ BitVec 64))
(declare-fun temp861_40 () (_ BitVec 64))
(declare-fun temp861_41 () (_ BitVec 64))
(declare-fun temp861_42 () (_ BitVec 64))
(declare-fun temp861_43 () (_ BitVec 64))
(declare-fun temp861_44 () (_ BitVec 64))
(declare-fun temp861_45 () (_ BitVec 64))
(declare-fun temp861_46 () (_ BitVec 64))
(declare-fun temp861_47 () (_ BitVec 64))
(declare-fun temp861_48 () (_ BitVec 64))
(declare-fun temp861_49 () (_ BitVec 64))
(declare-fun temp861_50 () (_ BitVec 64))
(declare-fun temp861_51 () (_ BitVec 64))
(declare-fun temp861_52 () (_ BitVec 64))
(declare-fun temp861_53 () (_ BitVec 64))
(declare-fun temp861_54 () (_ BitVec 64))
(declare-fun temp861_55 () (_ BitVec 64))
(declare-fun temp861_56 () (_ BitVec 64))
(declare-fun temp861_57 () (_ BitVec 64))
(declare-fun temp861_58 () (_ BitVec 64))
(declare-fun temp861_59 () (_ BitVec 64))
(declare-fun temp861_60 () (_ BitVec 64))
(declare-fun temp861_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp861_62 () (_ BitVec 64))
(declare-fun temp861_63 () (_ BitVec 64))
(declare-fun temp861_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp861_65 () (_ BitVec 64))
(declare-fun temp861_66 () (_ BitVec 64))
(declare-fun temp861_67 () (_ BitVec 64))
(declare-fun temp861_68 () (_ BitVec 64))
(declare-fun temp861_69 () (_ BitVec 64))
(declare-fun temp861_70 () (_ BitVec 64))
(declare-fun temp861_71 () (_ BitVec 64))
(declare-fun temp861_72 () (_ BitVec 64))
(declare-fun temp861_73 () (_ BitVec 64))
(declare-fun temp861_74 () (_ BitVec 64))
(declare-fun temp861_75 () (_ BitVec 64))
(declare-fun temp861_76 () (_ BitVec 64))
(declare-fun temp861_77 () (_ BitVec 64))
(declare-fun temp861_78 () (_ BitVec 64))
(declare-fun temp861_79 () (_ BitVec 64))
(declare-fun temp861_80 () (_ BitVec 64))
(declare-fun temp861_81 () (_ BitVec 64))
(declare-fun temp861_82 () (_ BitVec 64))
(declare-fun temp861_83 () (_ BitVec 64))
(declare-fun temp861_84 () (_ BitVec 64))
(declare-fun temp861_85 () (_ BitVec 64))
(declare-fun temp861_86 () (_ BitVec 64))
(declare-fun temp861_87 () (_ BitVec 64))
(declare-fun temp861_88 () (_ BitVec 64))
(declare-fun temp861_89 () (_ BitVec 64))
(declare-fun temp861_90 () (_ BitVec 64))
(declare-fun temp861_91 () (_ BitVec 64))
(declare-fun temp861_92 () (_ BitVec 64))
(declare-fun temp861_93 () (_ BitVec 64))
(declare-fun temp861_94 () (_ BitVec 64))
(declare-fun temp861_95 () (_ BitVec 64))
(declare-fun temp861_96 () (_ BitVec 64))
(declare-fun temp861_97 () (_ BitVec 64))
(declare-fun temp861_98 () (_ BitVec 64))
(declare-fun temp861_99 () (_ BitVec 64))
(declare-fun temp861_100 () (_ BitVec 64))
(declare-fun temp861_101 () (_ BitVec 64))
(declare-fun temp861_102 () (_ BitVec 64))
(declare-fun temp861_103 () (_ BitVec 64))
(declare-fun temp861_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp861_105 () (_ BitVec 64))
(declare-fun temp861_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp861_107 () (_ BitVec 64))
(declare-fun temp861_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp861_109 () (_ BitVec 64))
(declare-fun temp861_110 () (_ BitVec 64))
(declare-fun temp861_111 () (_ BitVec 64))
(declare-fun temp861_112 () (_ BitVec 64))
(declare-fun temp861_113 () (_ BitVec 64))
(declare-fun temp861_114 () (_ BitVec 64))
(declare-fun temp861_115 () (_ BitVec 64))
(declare-fun temp861_116 () (_ BitVec 64))
(declare-fun temp861_117 () (_ BitVec 64))
(declare-fun temp861_118 () (_ BitVec 64))
(declare-fun temp861_119 () (_ BitVec 64))
(declare-fun temp861_120 () (_ BitVec 64))
(declare-fun temp861_121 () (_ BitVec 64))
(declare-fun temp861_122 () (_ BitVec 64))
(declare-fun temp861_123 () (_ BitVec 64))
(declare-fun temp861_124 () (_ BitVec 64))
(declare-fun temp861_126 () (_ BitVec 64))
(declare-fun temp861_127 () (_ BitVec 64))
(declare-fun temp861_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp861_128 () (_ BitVec 64))
(declare-fun temp861_129 () (_ BitVec 64))
(declare-fun temp861_131 () (_ BitVec 64))
(declare-fun temp861_132 () (_ BitVec 64))
(declare-fun temp861_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp861_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp861_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp861_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp861_136 () (_ BitVec 64))
(declare-fun temp861_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp861_139 () (_ BitVec 64))
(declare-fun temp861_140 () (_ BitVec 64))
(declare-fun temp861_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp861_141 () (_ BitVec 64))
(declare-fun temp861_143 () (_ BitVec 64))
(declare-fun temp861_144 () (_ BitVec 64))
(declare-fun temp861_142 () (_ BitVec 64))
(declare-fun temp861_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp861_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp861_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp861_148 () (_ BitVec 64))
(declare-fun temp861_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp861_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp861_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp861_152 () (_ BitVec 64))
(assert (= temp861_1 #x0000000000000002))
(assert (= var989741 temp861_1))
(assert (= temp861_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp861_2)))
(assert (= temp861_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp861_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp861_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp861_4)))
(assert (= temp861_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp861_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp861_6 #x0000000000000000))
(assert (= var989776 temp861_6))
(assert (= temp861_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp861_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp861_8 #x0000000000000001))
(assert (= var989810 temp861_8))
(assert (= temp861_10 #x0000000000000000))
(assert (= temp861_9 temp861_10))
(assert (= temp861_12 #x0000000000000002))
(assert (= temp861_11 temp861_12))
(assert (= temp861_13 #x0000000000000000))
(assert (= var1387902 temp861_13))
(assert (= temp861_14 #x0000000000000001))
(assert (= var1387923 temp861_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp861_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp861_15)))
(assert (= temp861_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp861_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_17 #x0000000000000000))
(assert (= var1521661 temp861_17))
(assert (= temp861_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp861_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_19 #x0000000000000000))
(assert (= var1521706 temp861_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp861_20 #x0000000000000000))
(assert (= temp861_21 temp861_20))
(assert (= temp861_22 (select ARGNAME_padding_NAMEEND_VAL temp861_21)))
(assert (= temp861_23 #x0000000000000001))
(assert (= temp861_24 temp861_23))
(assert (= temp861_25 (select ARGNAME_padding_NAMEEND_VAL temp861_24)))
(assert (= temp861_26 #x0000000000000002))
(assert (= temp861_27 temp861_26))
(assert (= temp861_28 (select ARGNAME_padding_NAMEEND_VAL temp861_27)))
(assert (= temp861_29 #x0000000000000003))
(assert (= temp861_30 temp861_29))
(assert (= temp861_31 (select ARGNAME_padding_NAMEEND_VAL temp861_30)))
(assert (= temp861_32 #x0000000000000004))
(assert (= temp861_33 temp861_32))
(assert (= temp861_34 (select ARGNAME_padding_NAMEEND_VAL temp861_33)))
(assert (= temp861_35 #x0000000000000005))
(assert (= temp861_36 temp861_35))
(assert (= temp861_37 (select ARGNAME_padding_NAMEEND_VAL temp861_36)))
(assert (= temp861_38 #x0000000000000000))
(assert (= temp861_39 #x0000000000000000))
(assert (= temp861_40 temp861_39))
(assert (= temp861_41 (select ARGNAME_padding_NAMEEND_VAL temp861_40)))
(assert (= temp861_42 #x0000000000000000))
(assert (= temp861_43 #x0000000000000001))
(assert (= temp861_44 temp861_43))
(assert (= temp861_45 (select ARGNAME_padding_NAMEEND_VAL temp861_44)))
(assert (= temp861_46 #x0000000000000000))
(assert (= temp861_47 #x0000000000000002))
(assert (= temp861_48 temp861_47))
(assert (= temp861_49 (select ARGNAME_padding_NAMEEND_VAL temp861_48)))
(assert (= temp861_50 #x0000000000000000))
(assert (= temp861_51 #x0000000000000003))
(assert (= temp861_52 temp861_51))
(assert (= temp861_53 (select ARGNAME_padding_NAMEEND_VAL temp861_52)))
(assert (= temp861_54 #x0000000000000000))
(assert (= temp861_55 #x0000000000000004))
(assert (= temp861_56 temp861_55))
(assert (= temp861_57 (select ARGNAME_padding_NAMEEND_VAL temp861_56)))
(assert (= temp861_58 #x0000000000000000))
(assert (= temp861_59 #x0000000000000005))
(assert (= temp861_60 temp861_59))
(assert (= temp861_61 (select ARGNAME_padding_NAMEEND_VAL temp861_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp861_41 temp861_38)
             (bvslt temp861_45 temp861_42)
             (bvslt temp861_49 temp861_46)
             (bvslt temp861_53 temp861_50)
             (bvslt temp861_57 temp861_54)
             (bvslt temp861_61 temp861_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_62 #x0000000000000000))
(assert (= var2240290 temp861_62))
(assert (= temp861_63 #x0000000000000000))
(assert (= temp861_64 temp861_63))
(assert (= temp861_65 (select ARGNAME_stride_NAMEEND_VAL temp861_64)))
(assert (= temp861_66 #x0000000000000001))
(assert (= temp861_67 temp861_66))
(assert (= temp861_68 (select ARGNAME_stride_NAMEEND_VAL temp861_67)))
(assert (= temp861_69 #x0000000000000002))
(assert (= temp861_70 temp861_69))
(assert (= temp861_71 (select ARGNAME_stride_NAMEEND_VAL temp861_70)))
(assert (= temp861_72 #x0000000000000003))
(assert (= temp861_73 temp861_72))
(assert (= temp861_74 (select ARGNAME_stride_NAMEEND_VAL temp861_73)))
(assert (= temp861_75 #x0000000000000004))
(assert (= temp861_76 temp861_75))
(assert (= temp861_77 (select ARGNAME_stride_NAMEEND_VAL temp861_76)))
(assert (= temp861_78 #x0000000000000005))
(assert (= temp861_79 temp861_78))
(assert (= temp861_80 (select ARGNAME_stride_NAMEEND_VAL temp861_79)))
(assert (= temp861_81 #x0000000000000000))
(assert (= temp861_82 #x0000000000000000))
(assert (= temp861_83 temp861_82))
(assert (= temp861_84 (select ARGNAME_stride_NAMEEND_VAL temp861_83)))
(assert (= temp861_85 #x0000000000000000))
(assert (= temp861_86 #x0000000000000001))
(assert (= temp861_87 temp861_86))
(assert (= temp861_88 (select ARGNAME_stride_NAMEEND_VAL temp861_87)))
(assert (= temp861_89 #x0000000000000000))
(assert (= temp861_90 #x0000000000000002))
(assert (= temp861_91 temp861_90))
(assert (= temp861_92 (select ARGNAME_stride_NAMEEND_VAL temp861_91)))
(assert (= temp861_93 #x0000000000000000))
(assert (= temp861_94 #x0000000000000003))
(assert (= temp861_95 temp861_94))
(assert (= temp861_96 (select ARGNAME_stride_NAMEEND_VAL temp861_95)))
(assert (= temp861_97 #x0000000000000000))
(assert (= temp861_98 #x0000000000000004))
(assert (= temp861_99 temp861_98))
(assert (= temp861_100 (select ARGNAME_stride_NAMEEND_VAL temp861_99)))
(assert (= temp861_101 #x0000000000000000))
(assert (= temp861_102 #x0000000000000005))
(assert (= temp861_103 temp861_102))
(assert (= temp861_104 (select ARGNAME_stride_NAMEEND_VAL temp861_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp861_84 temp861_81)
             (bvsle temp861_88 temp861_85)
             (bvsle temp861_92 temp861_89)
             (bvsle temp861_96 temp861_93)
             (bvsle temp861_100 temp861_97)
             (bvsle temp861_104 temp861_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_105 #x0000000000000000))
(assert (= var2240311 temp861_105))
(assert (= temp861_106 #x0000000000000000))
(assert (= var2228402 temp861_106))
(assert (= temp861_107 #x0000000000000000))
(assert (= temp861_108 temp861_107))
(assert (= temp861_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_108)))
(assert (= temp861_110 #x0000000000000001))
(assert (= temp861_111 temp861_110))
(assert (= temp861_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_111)))
(assert (= temp861_113 #x0000000000000002))
(assert (= temp861_114 temp861_113))
(assert (= temp861_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_114)))
(assert (= temp861_116 #x0000000000000003))
(assert (= temp861_117 temp861_116))
(assert (= temp861_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_117)))
(assert (= temp861_119 #x0000000000000004))
(assert (= temp861_120 temp861_119))
(assert (= temp861_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_120)))
(assert (= temp861_122 #x0000000000000005))
(assert (= temp861_123 temp861_122))
(assert (= temp861_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_123)))
(assert (= temp861_126 var2228402))
(assert (= temp861_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_126)))
(assert (= temp861_125 temp861_127))
(assert (= var2240356
   (ite (bvslt temp861_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_128 #x0000000000000000))
(assert (= var2240356 temp861_128))
(assert (= temp861_129 #x0000000000000000))
(assert (= var2228402 temp861_129))
(assert (= temp861_131 var2228402))
(assert (= temp861_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_131)))
(assert (= temp861_130 temp861_132))
(assert (= var2240378 (bvsmod temp861_130 ARGNAME_groups_NAMEEND)))
(assert (= temp861_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp861_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp861_134 #x0000000000000001))
(assert (= var2240379 temp861_134))
(assert (= var2240398 var2240288))
(assert (= temp861_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp861_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp861_136 #x0000000000000001))
(assert (= var2240399 temp861_136))
(assert (= temp861_137 #x0000000000000001))
(assert (= var2229290 temp861_137))
(assert (= temp861_139 var2229290))
(assert (= temp861_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_139)))
(assert (= temp861_138 temp861_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp861_138)))
(assert (= temp861_141 #x0000000000000000))
(assert (= var2228402 temp861_141))
(assert (= temp861_143 var2228402))
(assert (= temp861_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_143)))
(assert (= temp861_142 temp861_144))
(assert (= temp861_145 #x0000000000000002))
(assert (= var2503529 temp861_145))
(assert (= temp861_146 #x0000000000000001))
(assert (= var2240569 temp861_146))
(assert (= temp861_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp861_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_148 #x0000000000000001))
(assert (= var1521778 temp861_148))
(assert (= temp861_149 #x0000000000000001))
(assert (= var1521908 temp861_149))
(assert (= var4010473 var1521908))
(assert (= temp861_150 #x0000000000000000))
(assert (= var4210495 temp861_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp861_151 #x0000000000000002))
(assert (= var4339331 temp861_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var5321104 var1521921))
(assert (= var5583248 var1521921))
(assert (= temp861_152 #x0000000000000001))
(assert (= var1521778 temp861_152))
(model-add temp861_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp861_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp861_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp861_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp861_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp861_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






