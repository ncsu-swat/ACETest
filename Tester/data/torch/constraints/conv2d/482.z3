(declare-fun temp642_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp642_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp642_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp642_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp642_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp642_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp642_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp642_8 () (_ BitVec 64))
(declare-fun temp642_10 () (_ BitVec 64))
(declare-fun temp642_9 () (_ BitVec 64))
(declare-fun temp642_12 () (_ BitVec 64))
(declare-fun temp642_11 () (_ BitVec 64))
(declare-fun temp642_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp642_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp642_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp642_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp642_17 () (_ BitVec 64))
(declare-fun temp642_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp642_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp642_20 () (_ BitVec 64))
(declare-fun temp642_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp642_22 () (_ BitVec 64))
(declare-fun temp642_23 () (_ BitVec 64))
(declare-fun temp642_24 () (_ BitVec 64))
(declare-fun temp642_25 () (_ BitVec 64))
(declare-fun temp642_26 () (_ BitVec 64))
(declare-fun temp642_27 () (_ BitVec 64))
(declare-fun temp642_28 () (_ BitVec 64))
(declare-fun temp642_29 () (_ BitVec 64))
(declare-fun temp642_30 () (_ BitVec 64))
(declare-fun temp642_31 () (_ BitVec 64))
(declare-fun temp642_32 () (_ BitVec 64))
(declare-fun temp642_33 () (_ BitVec 64))
(declare-fun temp642_34 () (_ BitVec 64))
(declare-fun temp642_35 () (_ BitVec 64))
(declare-fun temp642_36 () (_ BitVec 64))
(declare-fun temp642_37 () (_ BitVec 64))
(declare-fun temp642_38 () (_ BitVec 64))
(declare-fun temp642_39 () (_ BitVec 64))
(declare-fun temp642_40 () (_ BitVec 64))
(declare-fun temp642_41 () (_ BitVec 64))
(declare-fun temp642_42 () (_ BitVec 64))
(declare-fun temp642_43 () (_ BitVec 64))
(declare-fun temp642_44 () (_ BitVec 64))
(declare-fun temp642_45 () (_ BitVec 64))
(declare-fun temp642_46 () (_ BitVec 64))
(declare-fun temp642_47 () (_ BitVec 64))
(declare-fun temp642_48 () (_ BitVec 64))
(declare-fun temp642_49 () (_ BitVec 64))
(declare-fun temp642_50 () (_ BitVec 64))
(declare-fun temp642_51 () (_ BitVec 64))
(declare-fun temp642_52 () (_ BitVec 64))
(declare-fun temp642_53 () (_ BitVec 64))
(declare-fun temp642_54 () (_ BitVec 64))
(declare-fun temp642_55 () (_ BitVec 64))
(declare-fun temp642_56 () (_ BitVec 64))
(declare-fun temp642_57 () (_ BitVec 64))
(declare-fun temp642_58 () (_ BitVec 64))
(declare-fun temp642_59 () (_ BitVec 64))
(declare-fun temp642_60 () (_ BitVec 64))
(declare-fun temp642_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp642_62 () (_ BitVec 64))
(declare-fun temp642_63 () (_ BitVec 64))
(declare-fun temp642_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp642_65 () (_ BitVec 64))
(declare-fun temp642_66 () (_ BitVec 64))
(declare-fun temp642_67 () (_ BitVec 64))
(declare-fun temp642_68 () (_ BitVec 64))
(declare-fun temp642_69 () (_ BitVec 64))
(declare-fun temp642_70 () (_ BitVec 64))
(declare-fun temp642_71 () (_ BitVec 64))
(declare-fun temp642_72 () (_ BitVec 64))
(declare-fun temp642_73 () (_ BitVec 64))
(declare-fun temp642_74 () (_ BitVec 64))
(declare-fun temp642_75 () (_ BitVec 64))
(declare-fun temp642_76 () (_ BitVec 64))
(declare-fun temp642_77 () (_ BitVec 64))
(declare-fun temp642_78 () (_ BitVec 64))
(declare-fun temp642_79 () (_ BitVec 64))
(declare-fun temp642_80 () (_ BitVec 64))
(declare-fun temp642_81 () (_ BitVec 64))
(declare-fun temp642_82 () (_ BitVec 64))
(declare-fun temp642_83 () (_ BitVec 64))
(declare-fun temp642_84 () (_ BitVec 64))
(declare-fun temp642_85 () (_ BitVec 64))
(declare-fun temp642_86 () (_ BitVec 64))
(declare-fun temp642_87 () (_ BitVec 64))
(declare-fun temp642_88 () (_ BitVec 64))
(declare-fun temp642_89 () (_ BitVec 64))
(declare-fun temp642_90 () (_ BitVec 64))
(declare-fun temp642_91 () (_ BitVec 64))
(declare-fun temp642_92 () (_ BitVec 64))
(declare-fun temp642_93 () (_ BitVec 64))
(declare-fun temp642_94 () (_ BitVec 64))
(declare-fun temp642_95 () (_ BitVec 64))
(declare-fun temp642_96 () (_ BitVec 64))
(declare-fun temp642_97 () (_ BitVec 64))
(declare-fun temp642_98 () (_ BitVec 64))
(declare-fun temp642_99 () (_ BitVec 64))
(declare-fun temp642_100 () (_ BitVec 64))
(declare-fun temp642_101 () (_ BitVec 64))
(declare-fun temp642_102 () (_ BitVec 64))
(declare-fun temp642_103 () (_ BitVec 64))
(declare-fun temp642_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp642_105 () (_ BitVec 64))
(declare-fun temp642_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp642_107 () (_ BitVec 64))
(declare-fun temp642_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp642_109 () (_ BitVec 64))
(declare-fun temp642_110 () (_ BitVec 64))
(declare-fun temp642_111 () (_ BitVec 64))
(declare-fun temp642_112 () (_ BitVec 64))
(declare-fun temp642_113 () (_ BitVec 64))
(declare-fun temp642_114 () (_ BitVec 64))
(declare-fun temp642_115 () (_ BitVec 64))
(declare-fun temp642_116 () (_ BitVec 64))
(declare-fun temp642_117 () (_ BitVec 64))
(declare-fun temp642_118 () (_ BitVec 64))
(declare-fun temp642_119 () (_ BitVec 64))
(declare-fun temp642_120 () (_ BitVec 64))
(declare-fun temp642_121 () (_ BitVec 64))
(declare-fun temp642_122 () (_ BitVec 64))
(declare-fun temp642_123 () (_ BitVec 64))
(declare-fun temp642_124 () (_ BitVec 64))
(declare-fun temp642_126 () (_ BitVec 64))
(declare-fun temp642_127 () (_ BitVec 64))
(declare-fun temp642_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp642_128 () (_ BitVec 64))
(declare-fun temp642_129 () (_ BitVec 64))
(declare-fun temp642_131 () (_ BitVec 64))
(declare-fun temp642_132 () (_ BitVec 64))
(declare-fun temp642_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp642_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp642_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp642_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp642_136 () (_ BitVec 64))
(declare-fun temp642_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp642_139 () (_ BitVec 64))
(declare-fun temp642_140 () (_ BitVec 64))
(declare-fun temp642_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp642_141 () (_ BitVec 64))
(declare-fun temp642_143 () (_ BitVec 64))
(declare-fun temp642_144 () (_ BitVec 64))
(declare-fun temp642_142 () (_ BitVec 64))
(declare-fun temp642_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp642_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp642_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp642_148 () (_ BitVec 64))
(declare-fun temp642_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp642_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp642_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var1522214 () (_ BitVec 64))
(declare-fun temp642_152 () (_ BitVec 64))
(declare-fun var1522215 () (_ BitVec 64))
(declare-fun temp642_154 () (_ BitVec 64))
(declare-fun temp642_153 () (_ BitVec 64))
(declare-fun temp642_155 () (_ BitVec 64))
(declare-fun var6229482 () (_ BitVec 64))
(declare-fun temp642_157 () (_ BitVec 64))
(declare-fun temp642_156 () (_ BitVec 64))
(declare-fun temp642_158 () (_ BitVec 64))
(assert (= temp642_1 #x0000000000000002))
(assert (= var989741 temp642_1))
(assert (= temp642_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp642_2)))
(assert (= temp642_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp642_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp642_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp642_4)))
(assert (= temp642_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp642_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp642_6 #x0000000000000000))
(assert (= var989776 temp642_6))
(assert (= temp642_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp642_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp642_8 #x0000000000000001))
(assert (= var989810 temp642_8))
(assert (= temp642_10 #x0000000000000000))
(assert (= temp642_9 temp642_10))
(assert (= temp642_12 #x0000000000000002))
(assert (= temp642_11 temp642_12))
(assert (= temp642_13 #x0000000000000000))
(assert (= var1387902 temp642_13))
(assert (= temp642_14 #x0000000000000001))
(assert (= var1387923 temp642_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp642_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp642_15)))
(assert (= temp642_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp642_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_17 #x0000000000000000))
(assert (= var1521661 temp642_17))
(assert (= temp642_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp642_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_19 #x0000000000000000))
(assert (= var1521706 temp642_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp642_20 #x0000000000000000))
(assert (= temp642_21 temp642_20))
(assert (= temp642_22 (select ARGNAME_padding_NAMEEND_VAL temp642_21)))
(assert (= temp642_23 #x0000000000000001))
(assert (= temp642_24 temp642_23))
(assert (= temp642_25 (select ARGNAME_padding_NAMEEND_VAL temp642_24)))
(assert (= temp642_26 #x0000000000000002))
(assert (= temp642_27 temp642_26))
(assert (= temp642_28 (select ARGNAME_padding_NAMEEND_VAL temp642_27)))
(assert (= temp642_29 #x0000000000000003))
(assert (= temp642_30 temp642_29))
(assert (= temp642_31 (select ARGNAME_padding_NAMEEND_VAL temp642_30)))
(assert (= temp642_32 #x0000000000000004))
(assert (= temp642_33 temp642_32))
(assert (= temp642_34 (select ARGNAME_padding_NAMEEND_VAL temp642_33)))
(assert (= temp642_35 #x0000000000000005))
(assert (= temp642_36 temp642_35))
(assert (= temp642_37 (select ARGNAME_padding_NAMEEND_VAL temp642_36)))
(assert (= temp642_38 #x0000000000000000))
(assert (= temp642_39 #x0000000000000000))
(assert (= temp642_40 temp642_39))
(assert (= temp642_41 (select ARGNAME_padding_NAMEEND_VAL temp642_40)))
(assert (= temp642_42 #x0000000000000000))
(assert (= temp642_43 #x0000000000000001))
(assert (= temp642_44 temp642_43))
(assert (= temp642_45 (select ARGNAME_padding_NAMEEND_VAL temp642_44)))
(assert (= temp642_46 #x0000000000000000))
(assert (= temp642_47 #x0000000000000002))
(assert (= temp642_48 temp642_47))
(assert (= temp642_49 (select ARGNAME_padding_NAMEEND_VAL temp642_48)))
(assert (= temp642_50 #x0000000000000000))
(assert (= temp642_51 #x0000000000000003))
(assert (= temp642_52 temp642_51))
(assert (= temp642_53 (select ARGNAME_padding_NAMEEND_VAL temp642_52)))
(assert (= temp642_54 #x0000000000000000))
(assert (= temp642_55 #x0000000000000004))
(assert (= temp642_56 temp642_55))
(assert (= temp642_57 (select ARGNAME_padding_NAMEEND_VAL temp642_56)))
(assert (= temp642_58 #x0000000000000000))
(assert (= temp642_59 #x0000000000000005))
(assert (= temp642_60 temp642_59))
(assert (= temp642_61 (select ARGNAME_padding_NAMEEND_VAL temp642_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp642_41 temp642_38)
             (bvslt temp642_45 temp642_42)
             (bvslt temp642_49 temp642_46)
             (bvslt temp642_53 temp642_50)
             (bvslt temp642_57 temp642_54)
             (bvslt temp642_61 temp642_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_62 #x0000000000000000))
(assert (= var2240290 temp642_62))
(assert (= temp642_63 #x0000000000000000))
(assert (= temp642_64 temp642_63))
(assert (= temp642_65 (select ARGNAME_stride_NAMEEND_VAL temp642_64)))
(assert (= temp642_66 #x0000000000000001))
(assert (= temp642_67 temp642_66))
(assert (= temp642_68 (select ARGNAME_stride_NAMEEND_VAL temp642_67)))
(assert (= temp642_69 #x0000000000000002))
(assert (= temp642_70 temp642_69))
(assert (= temp642_71 (select ARGNAME_stride_NAMEEND_VAL temp642_70)))
(assert (= temp642_72 #x0000000000000003))
(assert (= temp642_73 temp642_72))
(assert (= temp642_74 (select ARGNAME_stride_NAMEEND_VAL temp642_73)))
(assert (= temp642_75 #x0000000000000004))
(assert (= temp642_76 temp642_75))
(assert (= temp642_77 (select ARGNAME_stride_NAMEEND_VAL temp642_76)))
(assert (= temp642_78 #x0000000000000005))
(assert (= temp642_79 temp642_78))
(assert (= temp642_80 (select ARGNAME_stride_NAMEEND_VAL temp642_79)))
(assert (= temp642_81 #x0000000000000000))
(assert (= temp642_82 #x0000000000000000))
(assert (= temp642_83 temp642_82))
(assert (= temp642_84 (select ARGNAME_stride_NAMEEND_VAL temp642_83)))
(assert (= temp642_85 #x0000000000000000))
(assert (= temp642_86 #x0000000000000001))
(assert (= temp642_87 temp642_86))
(assert (= temp642_88 (select ARGNAME_stride_NAMEEND_VAL temp642_87)))
(assert (= temp642_89 #x0000000000000000))
(assert (= temp642_90 #x0000000000000002))
(assert (= temp642_91 temp642_90))
(assert (= temp642_92 (select ARGNAME_stride_NAMEEND_VAL temp642_91)))
(assert (= temp642_93 #x0000000000000000))
(assert (= temp642_94 #x0000000000000003))
(assert (= temp642_95 temp642_94))
(assert (= temp642_96 (select ARGNAME_stride_NAMEEND_VAL temp642_95)))
(assert (= temp642_97 #x0000000000000000))
(assert (= temp642_98 #x0000000000000004))
(assert (= temp642_99 temp642_98))
(assert (= temp642_100 (select ARGNAME_stride_NAMEEND_VAL temp642_99)))
(assert (= temp642_101 #x0000000000000000))
(assert (= temp642_102 #x0000000000000005))
(assert (= temp642_103 temp642_102))
(assert (= temp642_104 (select ARGNAME_stride_NAMEEND_VAL temp642_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp642_84 temp642_81)
             (bvsle temp642_88 temp642_85)
             (bvsle temp642_92 temp642_89)
             (bvsle temp642_96 temp642_93)
             (bvsle temp642_100 temp642_97)
             (bvsle temp642_104 temp642_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_105 #x0000000000000000))
(assert (= var2240311 temp642_105))
(assert (= temp642_106 #x0000000000000000))
(assert (= var2228402 temp642_106))
(assert (= temp642_107 #x0000000000000000))
(assert (= temp642_108 temp642_107))
(assert (= temp642_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_108)))
(assert (= temp642_110 #x0000000000000001))
(assert (= temp642_111 temp642_110))
(assert (= temp642_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_111)))
(assert (= temp642_113 #x0000000000000002))
(assert (= temp642_114 temp642_113))
(assert (= temp642_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_114)))
(assert (= temp642_116 #x0000000000000003))
(assert (= temp642_117 temp642_116))
(assert (= temp642_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_117)))
(assert (= temp642_119 #x0000000000000004))
(assert (= temp642_120 temp642_119))
(assert (= temp642_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_120)))
(assert (= temp642_122 #x0000000000000005))
(assert (= temp642_123 temp642_122))
(assert (= temp642_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_123)))
(assert (= temp642_126 var2228402))
(assert (= temp642_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_126)))
(assert (= temp642_125 temp642_127))
(assert (= var2240356
   (ite (bvslt temp642_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_128 #x0000000000000000))
(assert (= var2240356 temp642_128))
(assert (= temp642_129 #x0000000000000000))
(assert (= var2228402 temp642_129))
(assert (= temp642_131 var2228402))
(assert (= temp642_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_131)))
(assert (= temp642_130 temp642_132))
(assert (= var2240378 (bvsmod temp642_130 ARGNAME_groups_NAMEEND)))
(assert (= temp642_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp642_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp642_134 #x0000000000000001))
(assert (= var2240379 temp642_134))
(assert (= var2240398 var2240288))
(assert (= temp642_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp642_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp642_136 #x0000000000000001))
(assert (= var2240399 temp642_136))
(assert (= temp642_137 #x0000000000000001))
(assert (= var2229290 temp642_137))
(assert (= temp642_139 var2229290))
(assert (= temp642_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_139)))
(assert (= temp642_138 temp642_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp642_138)))
(assert (= temp642_141 #x0000000000000000))
(assert (= var2228402 temp642_141))
(assert (= temp642_143 var2228402))
(assert (= temp642_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp642_143)))
(assert (= temp642_142 temp642_144))
(assert (= temp642_145 #x0000000000000002))
(assert (= var2503529 temp642_145))
(assert (= temp642_146 #x0000000000000001))
(assert (= var2240569 temp642_146))
(assert (= temp642_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp642_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_148 #x0000000000000001))
(assert (= var1521778 temp642_148))
(assert (= temp642_149 #x0000000000000001))
(assert (= var1521908 temp642_149))
(assert (= var4010473 var1521908))
(assert (= temp642_150 #x0000000000000000))
(assert (= var4210495 temp642_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp642_151 #x0000000000000002))
(assert (= var4339331 temp642_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4796816 var1521921))
(assert (= var1522214 var1521633))
(assert (= temp642_152 #x0000000000000000))
(assert (= var1522215
   (ite (distinct var1522214 temp642_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp642_154 #x0000000000000001))
(assert (= temp642_153 temp642_154))
(assert (= temp642_155 #x0000000000000001))
(assert (= var6229482 temp642_155))
(assert (= temp642_157 #xffffffffffffffff))
(assert (= temp642_156 temp642_157))
(assert (= temp642_158 #x0000000000000001))
(assert (= var1521778 temp642_158))
(model-add temp642_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp642_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp642_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp642_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp642_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp642_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






