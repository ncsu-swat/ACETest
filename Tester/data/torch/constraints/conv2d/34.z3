(declare-fun temp44_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp44_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp44_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp44_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp44_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp44_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp44_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp44_8 () (_ BitVec 64))
(declare-fun temp44_10 () (_ BitVec 64))
(declare-fun temp44_9 () (_ BitVec 64))
(declare-fun temp44_12 () (_ BitVec 64))
(declare-fun temp44_11 () (_ BitVec 64))
(declare-fun temp44_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp44_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp44_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp44_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp44_17 () (_ BitVec 64))
(declare-fun temp44_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp44_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp44_20 () (_ BitVec 64))
(declare-fun temp44_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp44_22 () (_ BitVec 64))
(declare-fun temp44_23 () (_ BitVec 64))
(declare-fun temp44_24 () (_ BitVec 64))
(declare-fun temp44_25 () (_ BitVec 64))
(declare-fun temp44_26 () (_ BitVec 64))
(declare-fun temp44_27 () (_ BitVec 64))
(declare-fun temp44_28 () (_ BitVec 64))
(declare-fun temp44_29 () (_ BitVec 64))
(declare-fun temp44_30 () (_ BitVec 64))
(declare-fun temp44_31 () (_ BitVec 64))
(declare-fun temp44_32 () (_ BitVec 64))
(declare-fun temp44_33 () (_ BitVec 64))
(declare-fun temp44_34 () (_ BitVec 64))
(declare-fun temp44_35 () (_ BitVec 64))
(declare-fun temp44_36 () (_ BitVec 64))
(declare-fun temp44_37 () (_ BitVec 64))
(declare-fun temp44_38 () (_ BitVec 64))
(declare-fun temp44_39 () (_ BitVec 64))
(declare-fun temp44_40 () (_ BitVec 64))
(declare-fun temp44_41 () (_ BitVec 64))
(declare-fun temp44_42 () (_ BitVec 64))
(declare-fun temp44_43 () (_ BitVec 64))
(declare-fun temp44_44 () (_ BitVec 64))
(declare-fun temp44_45 () (_ BitVec 64))
(declare-fun temp44_46 () (_ BitVec 64))
(declare-fun temp44_47 () (_ BitVec 64))
(declare-fun temp44_48 () (_ BitVec 64))
(declare-fun temp44_49 () (_ BitVec 64))
(declare-fun temp44_50 () (_ BitVec 64))
(declare-fun temp44_51 () (_ BitVec 64))
(declare-fun temp44_52 () (_ BitVec 64))
(declare-fun temp44_53 () (_ BitVec 64))
(declare-fun temp44_54 () (_ BitVec 64))
(declare-fun temp44_55 () (_ BitVec 64))
(declare-fun temp44_56 () (_ BitVec 64))
(declare-fun temp44_57 () (_ BitVec 64))
(declare-fun temp44_58 () (_ BitVec 64))
(declare-fun temp44_59 () (_ BitVec 64))
(declare-fun temp44_60 () (_ BitVec 64))
(declare-fun temp44_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp44_62 () (_ BitVec 64))
(declare-fun temp44_63 () (_ BitVec 64))
(declare-fun temp44_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp44_65 () (_ BitVec 64))
(declare-fun temp44_66 () (_ BitVec 64))
(declare-fun temp44_67 () (_ BitVec 64))
(declare-fun temp44_68 () (_ BitVec 64))
(declare-fun temp44_69 () (_ BitVec 64))
(declare-fun temp44_70 () (_ BitVec 64))
(declare-fun temp44_71 () (_ BitVec 64))
(declare-fun temp44_72 () (_ BitVec 64))
(declare-fun temp44_73 () (_ BitVec 64))
(declare-fun temp44_74 () (_ BitVec 64))
(declare-fun temp44_75 () (_ BitVec 64))
(declare-fun temp44_76 () (_ BitVec 64))
(declare-fun temp44_77 () (_ BitVec 64))
(declare-fun temp44_78 () (_ BitVec 64))
(declare-fun temp44_79 () (_ BitVec 64))
(declare-fun temp44_80 () (_ BitVec 64))
(declare-fun temp44_81 () (_ BitVec 64))
(declare-fun temp44_82 () (_ BitVec 64))
(declare-fun temp44_83 () (_ BitVec 64))
(declare-fun temp44_84 () (_ BitVec 64))
(declare-fun temp44_85 () (_ BitVec 64))
(declare-fun temp44_86 () (_ BitVec 64))
(declare-fun temp44_87 () (_ BitVec 64))
(declare-fun temp44_88 () (_ BitVec 64))
(declare-fun temp44_89 () (_ BitVec 64))
(declare-fun temp44_90 () (_ BitVec 64))
(declare-fun temp44_91 () (_ BitVec 64))
(declare-fun temp44_92 () (_ BitVec 64))
(declare-fun temp44_93 () (_ BitVec 64))
(declare-fun temp44_94 () (_ BitVec 64))
(declare-fun temp44_95 () (_ BitVec 64))
(declare-fun temp44_96 () (_ BitVec 64))
(declare-fun temp44_97 () (_ BitVec 64))
(declare-fun temp44_98 () (_ BitVec 64))
(declare-fun temp44_99 () (_ BitVec 64))
(declare-fun temp44_100 () (_ BitVec 64))
(declare-fun temp44_101 () (_ BitVec 64))
(declare-fun temp44_102 () (_ BitVec 64))
(declare-fun temp44_103 () (_ BitVec 64))
(declare-fun temp44_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp44_105 () (_ BitVec 64))
(declare-fun temp44_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp44_107 () (_ BitVec 64))
(declare-fun temp44_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp44_109 () (_ BitVec 64))
(declare-fun temp44_110 () (_ BitVec 64))
(declare-fun temp44_111 () (_ BitVec 64))
(declare-fun temp44_112 () (_ BitVec 64))
(declare-fun temp44_113 () (_ BitVec 64))
(declare-fun temp44_114 () (_ BitVec 64))
(declare-fun temp44_115 () (_ BitVec 64))
(declare-fun temp44_116 () (_ BitVec 64))
(declare-fun temp44_117 () (_ BitVec 64))
(declare-fun temp44_118 () (_ BitVec 64))
(declare-fun temp44_119 () (_ BitVec 64))
(declare-fun temp44_120 () (_ BitVec 64))
(declare-fun temp44_121 () (_ BitVec 64))
(declare-fun temp44_122 () (_ BitVec 64))
(declare-fun temp44_123 () (_ BitVec 64))
(declare-fun temp44_124 () (_ BitVec 64))
(declare-fun temp44_126 () (_ BitVec 64))
(declare-fun temp44_127 () (_ BitVec 64))
(declare-fun temp44_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp44_128 () (_ BitVec 64))
(declare-fun temp44_129 () (_ BitVec 64))
(declare-fun temp44_131 () (_ BitVec 64))
(declare-fun temp44_132 () (_ BitVec 64))
(declare-fun temp44_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp44_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp44_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp44_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp44_136 () (_ BitVec 64))
(declare-fun temp44_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp44_139 () (_ BitVec 64))
(declare-fun temp44_140 () (_ BitVec 64))
(declare-fun temp44_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp44_141 () (_ BitVec 64))
(declare-fun temp44_143 () (_ BitVec 64))
(declare-fun temp44_144 () (_ BitVec 64))
(declare-fun temp44_142 () (_ BitVec 64))
(declare-fun temp44_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp44_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp44_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp44_148 () (_ BitVec 64))
(declare-fun temp44_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp44_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp44_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var1522108 () (_ BitVec 64))
(declare-fun temp44_152 () (_ BitVec 64))
(declare-fun var1522109 () (_ BitVec 64))
(declare-fun var5521229 () (_ BitVec 64))
(declare-fun temp44_153 () (_ BitVec 64))
(assert (= temp44_1 #x0000000000000002))
(assert (= var989741 temp44_1))
(assert (= temp44_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp44_2)))
(assert (= temp44_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp44_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp44_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp44_4)))
(assert (= temp44_5 #x0000000000000000))
(assert (= var989775 (ite (= var989774 temp44_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp44_6 #x0000000000000000))
(assert (= var989776 temp44_6))
(assert (= temp44_7 #x0000000000000000))
(assert (= var989810 (ite (= var989773 temp44_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp44_8 #x0000000000000001))
(assert (= var989810 temp44_8))
(assert (= temp44_10 #x0000000000000000))
(assert (= temp44_9 temp44_10))
(assert (= temp44_12 #x0000000000000002))
(assert (= temp44_11 temp44_12))
(assert (= temp44_13 #x0000000000000000))
(assert (= var1387902 temp44_13))
(assert (= temp44_14 #x0000000000000001))
(assert (= var1387923 temp44_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp44_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp44_15)))
(assert (= temp44_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp44_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp44_17 #x0000000000000000))
(assert (= var1521661 temp44_17))
(assert (= temp44_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp44_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp44_19 #x0000000000000000))
(assert (= var1521706 temp44_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp44_20 #x0000000000000000))
(assert (= temp44_21 temp44_20))
(assert (= temp44_22 (select ARGNAME_padding_NAMEEND_VAL temp44_21)))
(assert (= temp44_23 #x0000000000000001))
(assert (= temp44_24 temp44_23))
(assert (= temp44_25 (select ARGNAME_padding_NAMEEND_VAL temp44_24)))
(assert (= temp44_26 #x0000000000000002))
(assert (= temp44_27 temp44_26))
(assert (= temp44_28 (select ARGNAME_padding_NAMEEND_VAL temp44_27)))
(assert (= temp44_29 #x0000000000000003))
(assert (= temp44_30 temp44_29))
(assert (= temp44_31 (select ARGNAME_padding_NAMEEND_VAL temp44_30)))
(assert (= temp44_32 #x0000000000000004))
(assert (= temp44_33 temp44_32))
(assert (= temp44_34 (select ARGNAME_padding_NAMEEND_VAL temp44_33)))
(assert (= temp44_35 #x0000000000000005))
(assert (= temp44_36 temp44_35))
(assert (= temp44_37 (select ARGNAME_padding_NAMEEND_VAL temp44_36)))
(assert (= temp44_38 #x0000000000000000))
(assert (= temp44_39 #x0000000000000000))
(assert (= temp44_40 temp44_39))
(assert (= temp44_41 (select ARGNAME_padding_NAMEEND_VAL temp44_40)))
(assert (= temp44_42 #x0000000000000000))
(assert (= temp44_43 #x0000000000000001))
(assert (= temp44_44 temp44_43))
(assert (= temp44_45 (select ARGNAME_padding_NAMEEND_VAL temp44_44)))
(assert (= temp44_46 #x0000000000000000))
(assert (= temp44_47 #x0000000000000002))
(assert (= temp44_48 temp44_47))
(assert (= temp44_49 (select ARGNAME_padding_NAMEEND_VAL temp44_48)))
(assert (= temp44_50 #x0000000000000000))
(assert (= temp44_51 #x0000000000000003))
(assert (= temp44_52 temp44_51))
(assert (= temp44_53 (select ARGNAME_padding_NAMEEND_VAL temp44_52)))
(assert (= temp44_54 #x0000000000000000))
(assert (= temp44_55 #x0000000000000004))
(assert (= temp44_56 temp44_55))
(assert (= temp44_57 (select ARGNAME_padding_NAMEEND_VAL temp44_56)))
(assert (= temp44_58 #x0000000000000000))
(assert (= temp44_59 #x0000000000000005))
(assert (= temp44_60 temp44_59))
(assert (= temp44_61 (select ARGNAME_padding_NAMEEND_VAL temp44_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp44_41 temp44_38)
             (bvslt temp44_45 temp44_42)
             (bvslt temp44_49 temp44_46)
             (bvslt temp44_53 temp44_50)
             (bvslt temp44_57 temp44_54)
             (bvslt temp44_61 temp44_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp44_62 #x0000000000000000))
(assert (= var2240290 temp44_62))
(assert (= temp44_63 #x0000000000000000))
(assert (= temp44_64 temp44_63))
(assert (= temp44_65 (select ARGNAME_stride_NAMEEND_VAL temp44_64)))
(assert (= temp44_66 #x0000000000000001))
(assert (= temp44_67 temp44_66))
(assert (= temp44_68 (select ARGNAME_stride_NAMEEND_VAL temp44_67)))
(assert (= temp44_69 #x0000000000000002))
(assert (= temp44_70 temp44_69))
(assert (= temp44_71 (select ARGNAME_stride_NAMEEND_VAL temp44_70)))
(assert (= temp44_72 #x0000000000000003))
(assert (= temp44_73 temp44_72))
(assert (= temp44_74 (select ARGNAME_stride_NAMEEND_VAL temp44_73)))
(assert (= temp44_75 #x0000000000000004))
(assert (= temp44_76 temp44_75))
(assert (= temp44_77 (select ARGNAME_stride_NAMEEND_VAL temp44_76)))
(assert (= temp44_78 #x0000000000000005))
(assert (= temp44_79 temp44_78))
(assert (= temp44_80 (select ARGNAME_stride_NAMEEND_VAL temp44_79)))
(assert (= temp44_81 #x0000000000000000))
(assert (= temp44_82 #x0000000000000000))
(assert (= temp44_83 temp44_82))
(assert (= temp44_84 (select ARGNAME_stride_NAMEEND_VAL temp44_83)))
(assert (= temp44_85 #x0000000000000000))
(assert (= temp44_86 #x0000000000000001))
(assert (= temp44_87 temp44_86))
(assert (= temp44_88 (select ARGNAME_stride_NAMEEND_VAL temp44_87)))
(assert (= temp44_89 #x0000000000000000))
(assert (= temp44_90 #x0000000000000002))
(assert (= temp44_91 temp44_90))
(assert (= temp44_92 (select ARGNAME_stride_NAMEEND_VAL temp44_91)))
(assert (= temp44_93 #x0000000000000000))
(assert (= temp44_94 #x0000000000000003))
(assert (= temp44_95 temp44_94))
(assert (= temp44_96 (select ARGNAME_stride_NAMEEND_VAL temp44_95)))
(assert (= temp44_97 #x0000000000000000))
(assert (= temp44_98 #x0000000000000004))
(assert (= temp44_99 temp44_98))
(assert (= temp44_100 (select ARGNAME_stride_NAMEEND_VAL temp44_99)))
(assert (= temp44_101 #x0000000000000000))
(assert (= temp44_102 #x0000000000000005))
(assert (= temp44_103 temp44_102))
(assert (= temp44_104 (select ARGNAME_stride_NAMEEND_VAL temp44_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp44_84 temp44_81)
             (bvsle temp44_88 temp44_85)
             (bvsle temp44_92 temp44_89)
             (bvsle temp44_96 temp44_93)
             (bvsle temp44_100 temp44_97)
             (bvsle temp44_104 temp44_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp44_105 #x0000000000000000))
(assert (= var2240311 temp44_105))
(assert (= temp44_106 #x0000000000000000))
(assert (= var2228402 temp44_106))
(assert (= temp44_107 #x0000000000000000))
(assert (= temp44_108 temp44_107))
(assert (= temp44_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp44_108)))
(assert (= temp44_110 #x0000000000000001))
(assert (= temp44_111 temp44_110))
(assert (= temp44_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp44_111)))
(assert (= temp44_113 #x0000000000000002))
(assert (= temp44_114 temp44_113))
(assert (= temp44_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp44_114)))
(assert (= temp44_116 #x0000000000000003))
(assert (= temp44_117 temp44_116))
(assert (= temp44_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp44_117)))
(assert (= temp44_119 #x0000000000000004))
(assert (= temp44_120 temp44_119))
(assert (= temp44_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp44_120)))
(assert (= temp44_122 #x0000000000000005))
(assert (= temp44_123 temp44_122))
(assert (= temp44_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp44_123)))
(assert (= temp44_126 var2228402))
(assert (= temp44_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp44_126)))
(assert (= temp44_125 temp44_127))
(assert (= var2240356
   (ite (bvslt temp44_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp44_128 #x0000000000000000))
(assert (= var2240356 temp44_128))
(assert (= temp44_129 #x0000000000000000))
(assert (= var2228402 temp44_129))
(assert (= temp44_131 var2228402))
(assert (= temp44_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp44_131)))
(assert (= temp44_130 temp44_132))
(assert (= var2240378 (bvsmod temp44_130 ARGNAME_groups_NAMEEND)))
(assert (= temp44_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp44_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp44_134 #x0000000000000001))
(assert (= var2240379 temp44_134))
(assert (= var2240398 var2240288))
(assert (= temp44_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp44_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp44_136 #x0000000000000001))
(assert (= var2240399 temp44_136))
(assert (= temp44_137 #x0000000000000001))
(assert (= var2229290 temp44_137))
(assert (= temp44_139 var2229290))
(assert (= temp44_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp44_139)))
(assert (= temp44_138 temp44_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp44_138)))
(assert (= temp44_141 #x0000000000000000))
(assert (= var2228402 temp44_141))
(assert (= temp44_143 var2228402))
(assert (= temp44_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp44_143)))
(assert (= temp44_142 temp44_144))
(assert (= temp44_145 #x0000000000000002))
(assert (= var2503529 temp44_145))
(assert (= temp44_146 #x0000000000000001))
(assert (= var2240569 temp44_146))
(assert (= temp44_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp44_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp44_148 #x0000000000000001))
(assert (= var1521778 temp44_148))
(assert (= temp44_149 #x0000000000000001))
(assert (= var1521908 temp44_149))
(assert (= var4010473 var1521908))
(assert (= temp44_150 #x0000000000000000))
(assert (= var4210495 temp44_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp44_151 #x0000000000000002))
(assert (= var4339331 temp44_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4796816 var1521921))
(assert (= var1522108 var1521633))
(assert (= temp44_152 #x0000000000000000))
(assert (= var1522109
   (ite (distinct var1522108 temp44_152) #x0000000000000001 #x0000000000000000)))
(assert (= var5521229 var1522109))
(assert (= temp44_153 #x0000000000000001))
(assert (= var1521778 temp44_153))
(model-add temp44_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp44_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp44_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp44_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp44_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp44_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






