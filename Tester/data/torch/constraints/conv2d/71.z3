(declare-fun temp93_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp93_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp93_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp93_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp93_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp93_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp93_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp93_8 () (_ BitVec 64))
(declare-fun temp93_10 () (_ BitVec 64))
(declare-fun temp93_9 () (_ BitVec 64))
(declare-fun temp93_12 () (_ BitVec 64))
(declare-fun temp93_11 () (_ BitVec 64))
(declare-fun temp93_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp93_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp93_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp93_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp93_17 () (_ BitVec 64))
(declare-fun temp93_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp93_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp93_20 () (_ BitVec 64))
(declare-fun temp93_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp93_22 () (_ BitVec 64))
(declare-fun temp93_23 () (_ BitVec 64))
(declare-fun temp93_24 () (_ BitVec 64))
(declare-fun temp93_25 () (_ BitVec 64))
(declare-fun temp93_26 () (_ BitVec 64))
(declare-fun temp93_27 () (_ BitVec 64))
(declare-fun temp93_28 () (_ BitVec 64))
(declare-fun temp93_29 () (_ BitVec 64))
(declare-fun temp93_30 () (_ BitVec 64))
(declare-fun temp93_31 () (_ BitVec 64))
(declare-fun temp93_32 () (_ BitVec 64))
(declare-fun temp93_33 () (_ BitVec 64))
(declare-fun temp93_34 () (_ BitVec 64))
(declare-fun temp93_35 () (_ BitVec 64))
(declare-fun temp93_36 () (_ BitVec 64))
(declare-fun temp93_37 () (_ BitVec 64))
(declare-fun temp93_38 () (_ BitVec 64))
(declare-fun temp93_39 () (_ BitVec 64))
(declare-fun temp93_40 () (_ BitVec 64))
(declare-fun temp93_41 () (_ BitVec 64))
(declare-fun temp93_42 () (_ BitVec 64))
(declare-fun temp93_43 () (_ BitVec 64))
(declare-fun temp93_44 () (_ BitVec 64))
(declare-fun temp93_45 () (_ BitVec 64))
(declare-fun temp93_46 () (_ BitVec 64))
(declare-fun temp93_47 () (_ BitVec 64))
(declare-fun temp93_48 () (_ BitVec 64))
(declare-fun temp93_49 () (_ BitVec 64))
(declare-fun temp93_50 () (_ BitVec 64))
(declare-fun temp93_51 () (_ BitVec 64))
(declare-fun temp93_52 () (_ BitVec 64))
(declare-fun temp93_53 () (_ BitVec 64))
(declare-fun temp93_54 () (_ BitVec 64))
(declare-fun temp93_55 () (_ BitVec 64))
(declare-fun temp93_56 () (_ BitVec 64))
(declare-fun temp93_57 () (_ BitVec 64))
(declare-fun temp93_58 () (_ BitVec 64))
(declare-fun temp93_59 () (_ BitVec 64))
(declare-fun temp93_60 () (_ BitVec 64))
(declare-fun temp93_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp93_62 () (_ BitVec 64))
(declare-fun temp93_63 () (_ BitVec 64))
(declare-fun temp93_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp93_65 () (_ BitVec 64))
(declare-fun temp93_66 () (_ BitVec 64))
(declare-fun temp93_67 () (_ BitVec 64))
(declare-fun temp93_68 () (_ BitVec 64))
(declare-fun temp93_69 () (_ BitVec 64))
(declare-fun temp93_70 () (_ BitVec 64))
(declare-fun temp93_71 () (_ BitVec 64))
(declare-fun temp93_72 () (_ BitVec 64))
(declare-fun temp93_73 () (_ BitVec 64))
(declare-fun temp93_74 () (_ BitVec 64))
(declare-fun temp93_75 () (_ BitVec 64))
(declare-fun temp93_76 () (_ BitVec 64))
(declare-fun temp93_77 () (_ BitVec 64))
(declare-fun temp93_78 () (_ BitVec 64))
(declare-fun temp93_79 () (_ BitVec 64))
(declare-fun temp93_80 () (_ BitVec 64))
(declare-fun temp93_81 () (_ BitVec 64))
(declare-fun temp93_82 () (_ BitVec 64))
(declare-fun temp93_83 () (_ BitVec 64))
(declare-fun temp93_84 () (_ BitVec 64))
(declare-fun temp93_85 () (_ BitVec 64))
(declare-fun temp93_86 () (_ BitVec 64))
(declare-fun temp93_87 () (_ BitVec 64))
(declare-fun temp93_88 () (_ BitVec 64))
(declare-fun temp93_89 () (_ BitVec 64))
(declare-fun temp93_90 () (_ BitVec 64))
(declare-fun temp93_91 () (_ BitVec 64))
(declare-fun temp93_92 () (_ BitVec 64))
(declare-fun temp93_93 () (_ BitVec 64))
(declare-fun temp93_94 () (_ BitVec 64))
(declare-fun temp93_95 () (_ BitVec 64))
(declare-fun temp93_96 () (_ BitVec 64))
(declare-fun temp93_97 () (_ BitVec 64))
(declare-fun temp93_98 () (_ BitVec 64))
(declare-fun temp93_99 () (_ BitVec 64))
(declare-fun temp93_100 () (_ BitVec 64))
(declare-fun temp93_101 () (_ BitVec 64))
(declare-fun temp93_102 () (_ BitVec 64))
(declare-fun temp93_103 () (_ BitVec 64))
(declare-fun temp93_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp93_105 () (_ BitVec 64))
(declare-fun temp93_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp93_107 () (_ BitVec 64))
(declare-fun temp93_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp93_109 () (_ BitVec 64))
(declare-fun temp93_110 () (_ BitVec 64))
(declare-fun temp93_111 () (_ BitVec 64))
(declare-fun temp93_112 () (_ BitVec 64))
(declare-fun temp93_113 () (_ BitVec 64))
(declare-fun temp93_114 () (_ BitVec 64))
(declare-fun temp93_115 () (_ BitVec 64))
(declare-fun temp93_116 () (_ BitVec 64))
(declare-fun temp93_117 () (_ BitVec 64))
(declare-fun temp93_118 () (_ BitVec 64))
(declare-fun temp93_119 () (_ BitVec 64))
(declare-fun temp93_120 () (_ BitVec 64))
(declare-fun temp93_121 () (_ BitVec 64))
(declare-fun temp93_122 () (_ BitVec 64))
(declare-fun temp93_123 () (_ BitVec 64))
(declare-fun temp93_124 () (_ BitVec 64))
(declare-fun temp93_126 () (_ BitVec 64))
(declare-fun temp93_127 () (_ BitVec 64))
(declare-fun temp93_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp93_128 () (_ BitVec 64))
(declare-fun temp93_129 () (_ BitVec 64))
(declare-fun temp93_131 () (_ BitVec 64))
(declare-fun temp93_132 () (_ BitVec 64))
(declare-fun temp93_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp93_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp93_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp93_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp93_136 () (_ BitVec 64))
(declare-fun temp93_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp93_139 () (_ BitVec 64))
(declare-fun temp93_140 () (_ BitVec 64))
(declare-fun temp93_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp93_141 () (_ BitVec 64))
(declare-fun temp93_143 () (_ BitVec 64))
(declare-fun temp93_144 () (_ BitVec 64))
(declare-fun temp93_142 () (_ BitVec 64))
(declare-fun temp93_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp93_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp93_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp93_148 () (_ BitVec 64))
(declare-fun temp93_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp93_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp93_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp93_153 () (_ BitVec 64))
(declare-fun temp93_152 () (_ BitVec 64))
(declare-fun temp93_155 () (_ BitVec 64))
(declare-fun temp93_154 () (_ BitVec 64))
(declare-fun temp93_156 () (_ BitVec 64))
(assert (= temp93_1 #x0000000000000002))
(assert (= var989741 temp93_1))
(assert (= temp93_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp93_2)))
(assert (= temp93_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp93_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp93_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp93_4)))
(assert (= temp93_5 #x0000000000000000))
(assert (= var989775 (ite (= var989774 temp93_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp93_6 #x0000000000000000))
(assert (= var989776 temp93_6))
(assert (= temp93_7 #x0000000000000000))
(assert (= var989810 (ite (= var989773 temp93_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp93_8 #x0000000000000001))
(assert (= var989810 temp93_8))
(assert (= temp93_10 #x0000000000000000))
(assert (= temp93_9 temp93_10))
(assert (= temp93_12 #x0000000000000002))
(assert (= temp93_11 temp93_12))
(assert (= temp93_13 #x0000000000000000))
(assert (= var1387902 temp93_13))
(assert (= temp93_14 #x0000000000000001))
(assert (= var1387923 temp93_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp93_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp93_15)))
(assert (= temp93_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp93_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_17 #x0000000000000000))
(assert (= var1521661 temp93_17))
(assert (= temp93_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp93_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_19 #x0000000000000000))
(assert (= var1521706 temp93_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp93_20 #x0000000000000000))
(assert (= temp93_21 temp93_20))
(assert (= temp93_22 (select ARGNAME_padding_NAMEEND_VAL temp93_21)))
(assert (= temp93_23 #x0000000000000001))
(assert (= temp93_24 temp93_23))
(assert (= temp93_25 (select ARGNAME_padding_NAMEEND_VAL temp93_24)))
(assert (= temp93_26 #x0000000000000002))
(assert (= temp93_27 temp93_26))
(assert (= temp93_28 (select ARGNAME_padding_NAMEEND_VAL temp93_27)))
(assert (= temp93_29 #x0000000000000003))
(assert (= temp93_30 temp93_29))
(assert (= temp93_31 (select ARGNAME_padding_NAMEEND_VAL temp93_30)))
(assert (= temp93_32 #x0000000000000004))
(assert (= temp93_33 temp93_32))
(assert (= temp93_34 (select ARGNAME_padding_NAMEEND_VAL temp93_33)))
(assert (= temp93_35 #x0000000000000005))
(assert (= temp93_36 temp93_35))
(assert (= temp93_37 (select ARGNAME_padding_NAMEEND_VAL temp93_36)))
(assert (= temp93_38 #x0000000000000000))
(assert (= temp93_39 #x0000000000000000))
(assert (= temp93_40 temp93_39))
(assert (= temp93_41 (select ARGNAME_padding_NAMEEND_VAL temp93_40)))
(assert (= temp93_42 #x0000000000000000))
(assert (= temp93_43 #x0000000000000001))
(assert (= temp93_44 temp93_43))
(assert (= temp93_45 (select ARGNAME_padding_NAMEEND_VAL temp93_44)))
(assert (= temp93_46 #x0000000000000000))
(assert (= temp93_47 #x0000000000000002))
(assert (= temp93_48 temp93_47))
(assert (= temp93_49 (select ARGNAME_padding_NAMEEND_VAL temp93_48)))
(assert (= temp93_50 #x0000000000000000))
(assert (= temp93_51 #x0000000000000003))
(assert (= temp93_52 temp93_51))
(assert (= temp93_53 (select ARGNAME_padding_NAMEEND_VAL temp93_52)))
(assert (= temp93_54 #x0000000000000000))
(assert (= temp93_55 #x0000000000000004))
(assert (= temp93_56 temp93_55))
(assert (= temp93_57 (select ARGNAME_padding_NAMEEND_VAL temp93_56)))
(assert (= temp93_58 #x0000000000000000))
(assert (= temp93_59 #x0000000000000005))
(assert (= temp93_60 temp93_59))
(assert (= temp93_61 (select ARGNAME_padding_NAMEEND_VAL temp93_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp93_41 temp93_38)
             (bvslt temp93_45 temp93_42)
             (bvslt temp93_49 temp93_46)
             (bvslt temp93_53 temp93_50)
             (bvslt temp93_57 temp93_54)
             (bvslt temp93_61 temp93_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_62 #x0000000000000000))
(assert (= var2240290 temp93_62))
(assert (= temp93_63 #x0000000000000000))
(assert (= temp93_64 temp93_63))
(assert (= temp93_65 (select ARGNAME_stride_NAMEEND_VAL temp93_64)))
(assert (= temp93_66 #x0000000000000001))
(assert (= temp93_67 temp93_66))
(assert (= temp93_68 (select ARGNAME_stride_NAMEEND_VAL temp93_67)))
(assert (= temp93_69 #x0000000000000002))
(assert (= temp93_70 temp93_69))
(assert (= temp93_71 (select ARGNAME_stride_NAMEEND_VAL temp93_70)))
(assert (= temp93_72 #x0000000000000003))
(assert (= temp93_73 temp93_72))
(assert (= temp93_74 (select ARGNAME_stride_NAMEEND_VAL temp93_73)))
(assert (= temp93_75 #x0000000000000004))
(assert (= temp93_76 temp93_75))
(assert (= temp93_77 (select ARGNAME_stride_NAMEEND_VAL temp93_76)))
(assert (= temp93_78 #x0000000000000005))
(assert (= temp93_79 temp93_78))
(assert (= temp93_80 (select ARGNAME_stride_NAMEEND_VAL temp93_79)))
(assert (= temp93_81 #x0000000000000000))
(assert (= temp93_82 #x0000000000000000))
(assert (= temp93_83 temp93_82))
(assert (= temp93_84 (select ARGNAME_stride_NAMEEND_VAL temp93_83)))
(assert (= temp93_85 #x0000000000000000))
(assert (= temp93_86 #x0000000000000001))
(assert (= temp93_87 temp93_86))
(assert (= temp93_88 (select ARGNAME_stride_NAMEEND_VAL temp93_87)))
(assert (= temp93_89 #x0000000000000000))
(assert (= temp93_90 #x0000000000000002))
(assert (= temp93_91 temp93_90))
(assert (= temp93_92 (select ARGNAME_stride_NAMEEND_VAL temp93_91)))
(assert (= temp93_93 #x0000000000000000))
(assert (= temp93_94 #x0000000000000003))
(assert (= temp93_95 temp93_94))
(assert (= temp93_96 (select ARGNAME_stride_NAMEEND_VAL temp93_95)))
(assert (= temp93_97 #x0000000000000000))
(assert (= temp93_98 #x0000000000000004))
(assert (= temp93_99 temp93_98))
(assert (= temp93_100 (select ARGNAME_stride_NAMEEND_VAL temp93_99)))
(assert (= temp93_101 #x0000000000000000))
(assert (= temp93_102 #x0000000000000005))
(assert (= temp93_103 temp93_102))
(assert (= temp93_104 (select ARGNAME_stride_NAMEEND_VAL temp93_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp93_84 temp93_81)
             (bvsle temp93_88 temp93_85)
             (bvsle temp93_92 temp93_89)
             (bvsle temp93_96 temp93_93)
             (bvsle temp93_100 temp93_97)
             (bvsle temp93_104 temp93_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_105 #x0000000000000000))
(assert (= var2240311 temp93_105))
(assert (= temp93_106 #x0000000000000000))
(assert (= var2228402 temp93_106))
(assert (= temp93_107 #x0000000000000000))
(assert (= temp93_108 temp93_107))
(assert (= temp93_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_108)))
(assert (= temp93_110 #x0000000000000001))
(assert (= temp93_111 temp93_110))
(assert (= temp93_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_111)))
(assert (= temp93_113 #x0000000000000002))
(assert (= temp93_114 temp93_113))
(assert (= temp93_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_114)))
(assert (= temp93_116 #x0000000000000003))
(assert (= temp93_117 temp93_116))
(assert (= temp93_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_117)))
(assert (= temp93_119 #x0000000000000004))
(assert (= temp93_120 temp93_119))
(assert (= temp93_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_120)))
(assert (= temp93_122 #x0000000000000005))
(assert (= temp93_123 temp93_122))
(assert (= temp93_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_123)))
(assert (= temp93_126 var2228402))
(assert (= temp93_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_126)))
(assert (= temp93_125 temp93_127))
(assert (= var2240356
   (ite (bvslt temp93_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_128 #x0000000000000000))
(assert (= var2240356 temp93_128))
(assert (= temp93_129 #x0000000000000000))
(assert (= var2228402 temp93_129))
(assert (= temp93_131 var2228402))
(assert (= temp93_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_131)))
(assert (= temp93_130 temp93_132))
(assert (= var2240378 (bvsmod temp93_130 ARGNAME_groups_NAMEEND)))
(assert (= temp93_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp93_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp93_134 #x0000000000000001))
(assert (= var2240379 temp93_134))
(assert (= var2240398 var2240288))
(assert (= temp93_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp93_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp93_136 #x0000000000000001))
(assert (= var2240399 temp93_136))
(assert (= temp93_137 #x0000000000000001))
(assert (= var2229290 temp93_137))
(assert (= temp93_139 var2229290))
(assert (= temp93_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_139)))
(assert (= temp93_138 temp93_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp93_138)))
(assert (= temp93_141 #x0000000000000000))
(assert (= var2228402 temp93_141))
(assert (= temp93_143 var2228402))
(assert (= temp93_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp93_143)))
(assert (= temp93_142 temp93_144))
(assert (= temp93_145 #x0000000000000002))
(assert (= var2503529 temp93_145))
(assert (= temp93_146 #x0000000000000001))
(assert (= var2240569 temp93_146))
(assert (= temp93_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp93_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp93_148 #x0000000000000001))
(assert (= var1521778 temp93_148))
(assert (= temp93_149 #x0000000000000001))
(assert (= var1521908 temp93_149))
(assert (= var4010473 var1521908))
(assert (= temp93_150 #x0000000000000000))
(assert (= var4210495 temp93_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp93_151 #x0000000000000002))
(assert (= var4339331 temp93_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp93_153 #xffffffffffffffff))
(assert (= temp93_152 temp93_153))
(assert (= temp93_155 #xffffffffffffffff))
(assert (= temp93_154 temp93_155))
(assert (= temp93_156 #x0000000000000001))
(assert (= var1521778 temp93_156))
(model-add temp93_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp93_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp93_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp93_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp93_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp93_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






