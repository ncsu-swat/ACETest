(declare-fun temp338_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp338_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp338_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp338_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp338_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp338_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp338_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp338_8 () (_ BitVec 64))
(declare-fun temp338_10 () (_ BitVec 64))
(declare-fun temp338_9 () (_ BitVec 64))
(declare-fun temp338_12 () (_ BitVec 64))
(declare-fun temp338_11 () (_ BitVec 64))
(declare-fun temp338_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp338_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp338_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp338_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp338_17 () (_ BitVec 64))
(declare-fun temp338_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp338_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp338_20 () (_ BitVec 64))
(declare-fun temp338_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp338_22 () (_ BitVec 64))
(declare-fun temp338_23 () (_ BitVec 64))
(declare-fun temp338_24 () (_ BitVec 64))
(declare-fun temp338_25 () (_ BitVec 64))
(declare-fun temp338_26 () (_ BitVec 64))
(declare-fun temp338_27 () (_ BitVec 64))
(declare-fun temp338_28 () (_ BitVec 64))
(declare-fun temp338_29 () (_ BitVec 64))
(declare-fun temp338_30 () (_ BitVec 64))
(declare-fun temp338_31 () (_ BitVec 64))
(declare-fun temp338_32 () (_ BitVec 64))
(declare-fun temp338_33 () (_ BitVec 64))
(declare-fun temp338_34 () (_ BitVec 64))
(declare-fun temp338_35 () (_ BitVec 64))
(declare-fun temp338_36 () (_ BitVec 64))
(declare-fun temp338_37 () (_ BitVec 64))
(declare-fun temp338_38 () (_ BitVec 64))
(declare-fun temp338_39 () (_ BitVec 64))
(declare-fun temp338_40 () (_ BitVec 64))
(declare-fun temp338_41 () (_ BitVec 64))
(declare-fun temp338_42 () (_ BitVec 64))
(declare-fun temp338_43 () (_ BitVec 64))
(declare-fun temp338_44 () (_ BitVec 64))
(declare-fun temp338_45 () (_ BitVec 64))
(declare-fun temp338_46 () (_ BitVec 64))
(declare-fun temp338_47 () (_ BitVec 64))
(declare-fun temp338_48 () (_ BitVec 64))
(declare-fun temp338_49 () (_ BitVec 64))
(declare-fun temp338_50 () (_ BitVec 64))
(declare-fun temp338_51 () (_ BitVec 64))
(declare-fun temp338_52 () (_ BitVec 64))
(declare-fun temp338_53 () (_ BitVec 64))
(declare-fun temp338_54 () (_ BitVec 64))
(declare-fun temp338_55 () (_ BitVec 64))
(declare-fun temp338_56 () (_ BitVec 64))
(declare-fun temp338_57 () (_ BitVec 64))
(declare-fun temp338_58 () (_ BitVec 64))
(declare-fun temp338_59 () (_ BitVec 64))
(declare-fun temp338_60 () (_ BitVec 64))
(declare-fun temp338_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp338_62 () (_ BitVec 64))
(declare-fun temp338_63 () (_ BitVec 64))
(declare-fun temp338_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp338_65 () (_ BitVec 64))
(declare-fun temp338_66 () (_ BitVec 64))
(declare-fun temp338_67 () (_ BitVec 64))
(declare-fun temp338_68 () (_ BitVec 64))
(declare-fun temp338_69 () (_ BitVec 64))
(declare-fun temp338_70 () (_ BitVec 64))
(declare-fun temp338_71 () (_ BitVec 64))
(declare-fun temp338_72 () (_ BitVec 64))
(declare-fun temp338_73 () (_ BitVec 64))
(declare-fun temp338_74 () (_ BitVec 64))
(declare-fun temp338_75 () (_ BitVec 64))
(declare-fun temp338_76 () (_ BitVec 64))
(declare-fun temp338_77 () (_ BitVec 64))
(declare-fun temp338_78 () (_ BitVec 64))
(declare-fun temp338_79 () (_ BitVec 64))
(declare-fun temp338_80 () (_ BitVec 64))
(declare-fun temp338_81 () (_ BitVec 64))
(declare-fun temp338_82 () (_ BitVec 64))
(declare-fun temp338_83 () (_ BitVec 64))
(declare-fun temp338_84 () (_ BitVec 64))
(declare-fun temp338_85 () (_ BitVec 64))
(declare-fun temp338_86 () (_ BitVec 64))
(declare-fun temp338_87 () (_ BitVec 64))
(declare-fun temp338_88 () (_ BitVec 64))
(declare-fun temp338_89 () (_ BitVec 64))
(declare-fun temp338_90 () (_ BitVec 64))
(declare-fun temp338_91 () (_ BitVec 64))
(declare-fun temp338_92 () (_ BitVec 64))
(declare-fun temp338_93 () (_ BitVec 64))
(declare-fun temp338_94 () (_ BitVec 64))
(declare-fun temp338_95 () (_ BitVec 64))
(declare-fun temp338_96 () (_ BitVec 64))
(declare-fun temp338_97 () (_ BitVec 64))
(declare-fun temp338_98 () (_ BitVec 64))
(declare-fun temp338_99 () (_ BitVec 64))
(declare-fun temp338_100 () (_ BitVec 64))
(declare-fun temp338_101 () (_ BitVec 64))
(declare-fun temp338_102 () (_ BitVec 64))
(declare-fun temp338_103 () (_ BitVec 64))
(declare-fun temp338_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp338_105 () (_ BitVec 64))
(declare-fun temp338_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp338_107 () (_ BitVec 64))
(declare-fun temp338_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp338_109 () (_ BitVec 64))
(declare-fun temp338_110 () (_ BitVec 64))
(declare-fun temp338_111 () (_ BitVec 64))
(declare-fun temp338_112 () (_ BitVec 64))
(declare-fun temp338_113 () (_ BitVec 64))
(declare-fun temp338_114 () (_ BitVec 64))
(declare-fun temp338_115 () (_ BitVec 64))
(declare-fun temp338_116 () (_ BitVec 64))
(declare-fun temp338_117 () (_ BitVec 64))
(declare-fun temp338_118 () (_ BitVec 64))
(declare-fun temp338_119 () (_ BitVec 64))
(declare-fun temp338_120 () (_ BitVec 64))
(declare-fun temp338_121 () (_ BitVec 64))
(declare-fun temp338_122 () (_ BitVec 64))
(declare-fun temp338_123 () (_ BitVec 64))
(declare-fun temp338_124 () (_ BitVec 64))
(declare-fun temp338_126 () (_ BitVec 64))
(declare-fun temp338_127 () (_ BitVec 64))
(declare-fun temp338_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp338_128 () (_ BitVec 64))
(declare-fun temp338_129 () (_ BitVec 64))
(declare-fun temp338_131 () (_ BitVec 64))
(declare-fun temp338_132 () (_ BitVec 64))
(declare-fun temp338_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp338_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp338_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp338_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp338_136 () (_ BitVec 64))
(declare-fun temp338_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp338_139 () (_ BitVec 64))
(declare-fun temp338_140 () (_ BitVec 64))
(declare-fun temp338_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp338_141 () (_ BitVec 64))
(declare-fun temp338_143 () (_ BitVec 64))
(declare-fun temp338_144 () (_ BitVec 64))
(declare-fun temp338_142 () (_ BitVec 64))
(declare-fun temp338_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp338_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp338_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp338_148 () (_ BitVec 64))
(declare-fun temp338_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp338_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp338_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp338_152 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp338_153 () (_ BitVec 64))
(assert (= temp338_1 #x0000000000000002))
(assert (= var989741 temp338_1))
(assert (= temp338_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp338_2)))
(assert (= temp338_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp338_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp338_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp338_4)))
(assert (= temp338_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp338_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp338_6 #x0000000000000000))
(assert (= var989776 temp338_6))
(assert (= temp338_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp338_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp338_8 #x0000000000000001))
(assert (= var989810 temp338_8))
(assert (= temp338_10 #x0000000000000000))
(assert (= temp338_9 temp338_10))
(assert (= temp338_12 #x0000000000000002))
(assert (= temp338_11 temp338_12))
(assert (= temp338_13 #x0000000000000000))
(assert (= var1387902 temp338_13))
(assert (= temp338_14 #x0000000000000001))
(assert (= var1387923 temp338_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp338_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp338_15)))
(assert (= temp338_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp338_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_17 #x0000000000000000))
(assert (= var1521661 temp338_17))
(assert (= temp338_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp338_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_19 #x0000000000000000))
(assert (= var1521706 temp338_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp338_20 #x0000000000000000))
(assert (= temp338_21 temp338_20))
(assert (= temp338_22 (select ARGNAME_padding_NAMEEND_VAL temp338_21)))
(assert (= temp338_23 #x0000000000000001))
(assert (= temp338_24 temp338_23))
(assert (= temp338_25 (select ARGNAME_padding_NAMEEND_VAL temp338_24)))
(assert (= temp338_26 #x0000000000000002))
(assert (= temp338_27 temp338_26))
(assert (= temp338_28 (select ARGNAME_padding_NAMEEND_VAL temp338_27)))
(assert (= temp338_29 #x0000000000000003))
(assert (= temp338_30 temp338_29))
(assert (= temp338_31 (select ARGNAME_padding_NAMEEND_VAL temp338_30)))
(assert (= temp338_32 #x0000000000000004))
(assert (= temp338_33 temp338_32))
(assert (= temp338_34 (select ARGNAME_padding_NAMEEND_VAL temp338_33)))
(assert (= temp338_35 #x0000000000000005))
(assert (= temp338_36 temp338_35))
(assert (= temp338_37 (select ARGNAME_padding_NAMEEND_VAL temp338_36)))
(assert (= temp338_38 #x0000000000000000))
(assert (= temp338_39 #x0000000000000000))
(assert (= temp338_40 temp338_39))
(assert (= temp338_41 (select ARGNAME_padding_NAMEEND_VAL temp338_40)))
(assert (= temp338_42 #x0000000000000000))
(assert (= temp338_43 #x0000000000000001))
(assert (= temp338_44 temp338_43))
(assert (= temp338_45 (select ARGNAME_padding_NAMEEND_VAL temp338_44)))
(assert (= temp338_46 #x0000000000000000))
(assert (= temp338_47 #x0000000000000002))
(assert (= temp338_48 temp338_47))
(assert (= temp338_49 (select ARGNAME_padding_NAMEEND_VAL temp338_48)))
(assert (= temp338_50 #x0000000000000000))
(assert (= temp338_51 #x0000000000000003))
(assert (= temp338_52 temp338_51))
(assert (= temp338_53 (select ARGNAME_padding_NAMEEND_VAL temp338_52)))
(assert (= temp338_54 #x0000000000000000))
(assert (= temp338_55 #x0000000000000004))
(assert (= temp338_56 temp338_55))
(assert (= temp338_57 (select ARGNAME_padding_NAMEEND_VAL temp338_56)))
(assert (= temp338_58 #x0000000000000000))
(assert (= temp338_59 #x0000000000000005))
(assert (= temp338_60 temp338_59))
(assert (= temp338_61 (select ARGNAME_padding_NAMEEND_VAL temp338_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp338_41 temp338_38)
             (bvslt temp338_45 temp338_42)
             (bvslt temp338_49 temp338_46)
             (bvslt temp338_53 temp338_50)
             (bvslt temp338_57 temp338_54)
             (bvslt temp338_61 temp338_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_62 #x0000000000000000))
(assert (= var2240290 temp338_62))
(assert (= temp338_63 #x0000000000000000))
(assert (= temp338_64 temp338_63))
(assert (= temp338_65 (select ARGNAME_stride_NAMEEND_VAL temp338_64)))
(assert (= temp338_66 #x0000000000000001))
(assert (= temp338_67 temp338_66))
(assert (= temp338_68 (select ARGNAME_stride_NAMEEND_VAL temp338_67)))
(assert (= temp338_69 #x0000000000000002))
(assert (= temp338_70 temp338_69))
(assert (= temp338_71 (select ARGNAME_stride_NAMEEND_VAL temp338_70)))
(assert (= temp338_72 #x0000000000000003))
(assert (= temp338_73 temp338_72))
(assert (= temp338_74 (select ARGNAME_stride_NAMEEND_VAL temp338_73)))
(assert (= temp338_75 #x0000000000000004))
(assert (= temp338_76 temp338_75))
(assert (= temp338_77 (select ARGNAME_stride_NAMEEND_VAL temp338_76)))
(assert (= temp338_78 #x0000000000000005))
(assert (= temp338_79 temp338_78))
(assert (= temp338_80 (select ARGNAME_stride_NAMEEND_VAL temp338_79)))
(assert (= temp338_81 #x0000000000000000))
(assert (= temp338_82 #x0000000000000000))
(assert (= temp338_83 temp338_82))
(assert (= temp338_84 (select ARGNAME_stride_NAMEEND_VAL temp338_83)))
(assert (= temp338_85 #x0000000000000000))
(assert (= temp338_86 #x0000000000000001))
(assert (= temp338_87 temp338_86))
(assert (= temp338_88 (select ARGNAME_stride_NAMEEND_VAL temp338_87)))
(assert (= temp338_89 #x0000000000000000))
(assert (= temp338_90 #x0000000000000002))
(assert (= temp338_91 temp338_90))
(assert (= temp338_92 (select ARGNAME_stride_NAMEEND_VAL temp338_91)))
(assert (= temp338_93 #x0000000000000000))
(assert (= temp338_94 #x0000000000000003))
(assert (= temp338_95 temp338_94))
(assert (= temp338_96 (select ARGNAME_stride_NAMEEND_VAL temp338_95)))
(assert (= temp338_97 #x0000000000000000))
(assert (= temp338_98 #x0000000000000004))
(assert (= temp338_99 temp338_98))
(assert (= temp338_100 (select ARGNAME_stride_NAMEEND_VAL temp338_99)))
(assert (= temp338_101 #x0000000000000000))
(assert (= temp338_102 #x0000000000000005))
(assert (= temp338_103 temp338_102))
(assert (= temp338_104 (select ARGNAME_stride_NAMEEND_VAL temp338_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp338_84 temp338_81)
             (bvsle temp338_88 temp338_85)
             (bvsle temp338_92 temp338_89)
             (bvsle temp338_96 temp338_93)
             (bvsle temp338_100 temp338_97)
             (bvsle temp338_104 temp338_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_105 #x0000000000000000))
(assert (= var2240311 temp338_105))
(assert (= temp338_106 #x0000000000000000))
(assert (= var2228402 temp338_106))
(assert (= temp338_107 #x0000000000000000))
(assert (= temp338_108 temp338_107))
(assert (= temp338_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_108)))
(assert (= temp338_110 #x0000000000000001))
(assert (= temp338_111 temp338_110))
(assert (= temp338_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_111)))
(assert (= temp338_113 #x0000000000000002))
(assert (= temp338_114 temp338_113))
(assert (= temp338_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_114)))
(assert (= temp338_116 #x0000000000000003))
(assert (= temp338_117 temp338_116))
(assert (= temp338_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_117)))
(assert (= temp338_119 #x0000000000000004))
(assert (= temp338_120 temp338_119))
(assert (= temp338_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_120)))
(assert (= temp338_122 #x0000000000000005))
(assert (= temp338_123 temp338_122))
(assert (= temp338_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_123)))
(assert (= temp338_126 var2228402))
(assert (= temp338_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_126)))
(assert (= temp338_125 temp338_127))
(assert (= var2240356
   (ite (bvslt temp338_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_128 #x0000000000000000))
(assert (= var2240356 temp338_128))
(assert (= temp338_129 #x0000000000000000))
(assert (= var2228402 temp338_129))
(assert (= temp338_131 var2228402))
(assert (= temp338_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_131)))
(assert (= temp338_130 temp338_132))
(assert (= var2240378 (bvsmod temp338_130 ARGNAME_groups_NAMEEND)))
(assert (= temp338_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp338_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp338_134 #x0000000000000001))
(assert (= var2240379 temp338_134))
(assert (= var2240398 var2240288))
(assert (= temp338_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp338_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp338_136 #x0000000000000001))
(assert (= var2240399 temp338_136))
(assert (= temp338_137 #x0000000000000001))
(assert (= var2229290 temp338_137))
(assert (= temp338_139 var2229290))
(assert (= temp338_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_139)))
(assert (= temp338_138 temp338_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp338_138)))
(assert (= temp338_141 #x0000000000000000))
(assert (= var2228402 temp338_141))
(assert (= temp338_143 var2228402))
(assert (= temp338_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp338_143)))
(assert (= temp338_142 temp338_144))
(assert (= temp338_145 #x0000000000000002))
(assert (= var2503529 temp338_145))
(assert (= temp338_146 #x0000000000000001))
(assert (= var2240569 temp338_146))
(assert (= temp338_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp338_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp338_148 #x0000000000000001))
(assert (= var1521778 temp338_148))
(assert (= temp338_149 #x0000000000000001))
(assert (= var1521908 temp338_149))
(assert (= var4010473 var1521908))
(assert (= temp338_150 #x0000000000000000))
(assert (= var4210495 temp338_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp338_151 #x0000000000000002))
(assert (= var4339331 temp338_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var5321104 var1521921))
(assert (= var5583248 var1521921))
(assert (= temp338_152 #x0000000000000000))
(assert (= var5910928 temp338_152))
(assert (= temp338_153 #x0000000000000001))
(assert (= var1521778 temp338_153))
(model-add temp338_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp338_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp338_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp338_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp338_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp338_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)





