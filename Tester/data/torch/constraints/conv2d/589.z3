(declare-fun temp783_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp783_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp783_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp783_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp783_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp783_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp783_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp783_8 () (_ BitVec 64))
(declare-fun temp783_10 () (_ BitVec 64))
(declare-fun temp783_9 () (_ BitVec 64))
(declare-fun temp783_12 () (_ BitVec 64))
(declare-fun temp783_11 () (_ BitVec 64))
(declare-fun temp783_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp783_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp783_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp783_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp783_17 () (_ BitVec 64))
(declare-fun temp783_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp783_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp783_20 () (_ BitVec 64))
(declare-fun temp783_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp783_22 () (_ BitVec 64))
(declare-fun temp783_23 () (_ BitVec 64))
(declare-fun temp783_24 () (_ BitVec 64))
(declare-fun temp783_25 () (_ BitVec 64))
(declare-fun temp783_26 () (_ BitVec 64))
(declare-fun temp783_27 () (_ BitVec 64))
(declare-fun temp783_28 () (_ BitVec 64))
(declare-fun temp783_29 () (_ BitVec 64))
(declare-fun temp783_30 () (_ BitVec 64))
(declare-fun temp783_31 () (_ BitVec 64))
(declare-fun temp783_32 () (_ BitVec 64))
(declare-fun temp783_33 () (_ BitVec 64))
(declare-fun temp783_34 () (_ BitVec 64))
(declare-fun temp783_35 () (_ BitVec 64))
(declare-fun temp783_36 () (_ BitVec 64))
(declare-fun temp783_37 () (_ BitVec 64))
(declare-fun temp783_38 () (_ BitVec 64))
(declare-fun temp783_39 () (_ BitVec 64))
(declare-fun temp783_40 () (_ BitVec 64))
(declare-fun temp783_41 () (_ BitVec 64))
(declare-fun temp783_42 () (_ BitVec 64))
(declare-fun temp783_43 () (_ BitVec 64))
(declare-fun temp783_44 () (_ BitVec 64))
(declare-fun temp783_45 () (_ BitVec 64))
(declare-fun temp783_46 () (_ BitVec 64))
(declare-fun temp783_47 () (_ BitVec 64))
(declare-fun temp783_48 () (_ BitVec 64))
(declare-fun temp783_49 () (_ BitVec 64))
(declare-fun temp783_50 () (_ BitVec 64))
(declare-fun temp783_51 () (_ BitVec 64))
(declare-fun temp783_52 () (_ BitVec 64))
(declare-fun temp783_53 () (_ BitVec 64))
(declare-fun temp783_54 () (_ BitVec 64))
(declare-fun temp783_55 () (_ BitVec 64))
(declare-fun temp783_56 () (_ BitVec 64))
(declare-fun temp783_57 () (_ BitVec 64))
(declare-fun temp783_58 () (_ BitVec 64))
(declare-fun temp783_59 () (_ BitVec 64))
(declare-fun temp783_60 () (_ BitVec 64))
(declare-fun temp783_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp783_62 () (_ BitVec 64))
(declare-fun temp783_63 () (_ BitVec 64))
(declare-fun temp783_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp783_65 () (_ BitVec 64))
(declare-fun temp783_66 () (_ BitVec 64))
(declare-fun temp783_67 () (_ BitVec 64))
(declare-fun temp783_68 () (_ BitVec 64))
(declare-fun temp783_69 () (_ BitVec 64))
(declare-fun temp783_70 () (_ BitVec 64))
(declare-fun temp783_71 () (_ BitVec 64))
(declare-fun temp783_72 () (_ BitVec 64))
(declare-fun temp783_73 () (_ BitVec 64))
(declare-fun temp783_74 () (_ BitVec 64))
(declare-fun temp783_75 () (_ BitVec 64))
(declare-fun temp783_76 () (_ BitVec 64))
(declare-fun temp783_77 () (_ BitVec 64))
(declare-fun temp783_78 () (_ BitVec 64))
(declare-fun temp783_79 () (_ BitVec 64))
(declare-fun temp783_80 () (_ BitVec 64))
(declare-fun temp783_81 () (_ BitVec 64))
(declare-fun temp783_82 () (_ BitVec 64))
(declare-fun temp783_83 () (_ BitVec 64))
(declare-fun temp783_84 () (_ BitVec 64))
(declare-fun temp783_85 () (_ BitVec 64))
(declare-fun temp783_86 () (_ BitVec 64))
(declare-fun temp783_87 () (_ BitVec 64))
(declare-fun temp783_88 () (_ BitVec 64))
(declare-fun temp783_89 () (_ BitVec 64))
(declare-fun temp783_90 () (_ BitVec 64))
(declare-fun temp783_91 () (_ BitVec 64))
(declare-fun temp783_92 () (_ BitVec 64))
(declare-fun temp783_93 () (_ BitVec 64))
(declare-fun temp783_94 () (_ BitVec 64))
(declare-fun temp783_95 () (_ BitVec 64))
(declare-fun temp783_96 () (_ BitVec 64))
(declare-fun temp783_97 () (_ BitVec 64))
(declare-fun temp783_98 () (_ BitVec 64))
(declare-fun temp783_99 () (_ BitVec 64))
(declare-fun temp783_100 () (_ BitVec 64))
(declare-fun temp783_101 () (_ BitVec 64))
(declare-fun temp783_102 () (_ BitVec 64))
(declare-fun temp783_103 () (_ BitVec 64))
(declare-fun temp783_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp783_105 () (_ BitVec 64))
(declare-fun temp783_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp783_107 () (_ BitVec 64))
(declare-fun temp783_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp783_109 () (_ BitVec 64))
(declare-fun temp783_110 () (_ BitVec 64))
(declare-fun temp783_111 () (_ BitVec 64))
(declare-fun temp783_112 () (_ BitVec 64))
(declare-fun temp783_113 () (_ BitVec 64))
(declare-fun temp783_114 () (_ BitVec 64))
(declare-fun temp783_115 () (_ BitVec 64))
(declare-fun temp783_116 () (_ BitVec 64))
(declare-fun temp783_117 () (_ BitVec 64))
(declare-fun temp783_118 () (_ BitVec 64))
(declare-fun temp783_119 () (_ BitVec 64))
(declare-fun temp783_120 () (_ BitVec 64))
(declare-fun temp783_121 () (_ BitVec 64))
(declare-fun temp783_122 () (_ BitVec 64))
(declare-fun temp783_123 () (_ BitVec 64))
(declare-fun temp783_124 () (_ BitVec 64))
(declare-fun temp783_126 () (_ BitVec 64))
(declare-fun temp783_127 () (_ BitVec 64))
(declare-fun temp783_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp783_128 () (_ BitVec 64))
(declare-fun temp783_129 () (_ BitVec 64))
(declare-fun temp783_131 () (_ BitVec 64))
(declare-fun temp783_132 () (_ BitVec 64))
(declare-fun temp783_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp783_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp783_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp783_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp783_136 () (_ BitVec 64))
(declare-fun temp783_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp783_139 () (_ BitVec 64))
(declare-fun temp783_140 () (_ BitVec 64))
(declare-fun temp783_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp783_141 () (_ BitVec 64))
(declare-fun temp783_143 () (_ BitVec 64))
(declare-fun temp783_144 () (_ BitVec 64))
(declare-fun temp783_142 () (_ BitVec 64))
(declare-fun temp783_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp783_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp783_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp783_148 () (_ BitVec 64))
(declare-fun temp783_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp783_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp783_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var1522540 () (_ BitVec 64))
(declare-fun temp783_152 () (_ BitVec 64))
(declare-fun var1522541 () (_ BitVec 64))
(declare-fun temp783_153 () (_ BitVec 64))
(assert (= temp783_1 #x0000000000000002))
(assert (= var989741 temp783_1))
(assert (= temp783_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp783_2)))
(assert (= temp783_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp783_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp783_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp783_4)))
(assert (= temp783_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp783_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp783_6 #x0000000000000000))
(assert (= var989776 temp783_6))
(assert (= temp783_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp783_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp783_8 #x0000000000000001))
(assert (= var989810 temp783_8))
(assert (= temp783_10 #x0000000000000000))
(assert (= temp783_9 temp783_10))
(assert (= temp783_12 #x0000000000000002))
(assert (= temp783_11 temp783_12))
(assert (= temp783_13 #x0000000000000000))
(assert (= var1387902 temp783_13))
(assert (= temp783_14 #x0000000000000001))
(assert (= var1387923 temp783_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp783_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp783_15)))
(assert (= temp783_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp783_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp783_17 #x0000000000000000))
(assert (= var1521661 temp783_17))
(assert (= temp783_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp783_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp783_19 #x0000000000000000))
(assert (= var1521706 temp783_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp783_20 #x0000000000000000))
(assert (= temp783_21 temp783_20))
(assert (= temp783_22 (select ARGNAME_padding_NAMEEND_VAL temp783_21)))
(assert (= temp783_23 #x0000000000000001))
(assert (= temp783_24 temp783_23))
(assert (= temp783_25 (select ARGNAME_padding_NAMEEND_VAL temp783_24)))
(assert (= temp783_26 #x0000000000000002))
(assert (= temp783_27 temp783_26))
(assert (= temp783_28 (select ARGNAME_padding_NAMEEND_VAL temp783_27)))
(assert (= temp783_29 #x0000000000000003))
(assert (= temp783_30 temp783_29))
(assert (= temp783_31 (select ARGNAME_padding_NAMEEND_VAL temp783_30)))
(assert (= temp783_32 #x0000000000000004))
(assert (= temp783_33 temp783_32))
(assert (= temp783_34 (select ARGNAME_padding_NAMEEND_VAL temp783_33)))
(assert (= temp783_35 #x0000000000000005))
(assert (= temp783_36 temp783_35))
(assert (= temp783_37 (select ARGNAME_padding_NAMEEND_VAL temp783_36)))
(assert (= temp783_38 #x0000000000000000))
(assert (= temp783_39 #x0000000000000000))
(assert (= temp783_40 temp783_39))
(assert (= temp783_41 (select ARGNAME_padding_NAMEEND_VAL temp783_40)))
(assert (= temp783_42 #x0000000000000000))
(assert (= temp783_43 #x0000000000000001))
(assert (= temp783_44 temp783_43))
(assert (= temp783_45 (select ARGNAME_padding_NAMEEND_VAL temp783_44)))
(assert (= temp783_46 #x0000000000000000))
(assert (= temp783_47 #x0000000000000002))
(assert (= temp783_48 temp783_47))
(assert (= temp783_49 (select ARGNAME_padding_NAMEEND_VAL temp783_48)))
(assert (= temp783_50 #x0000000000000000))
(assert (= temp783_51 #x0000000000000003))
(assert (= temp783_52 temp783_51))
(assert (= temp783_53 (select ARGNAME_padding_NAMEEND_VAL temp783_52)))
(assert (= temp783_54 #x0000000000000000))
(assert (= temp783_55 #x0000000000000004))
(assert (= temp783_56 temp783_55))
(assert (= temp783_57 (select ARGNAME_padding_NAMEEND_VAL temp783_56)))
(assert (= temp783_58 #x0000000000000000))
(assert (= temp783_59 #x0000000000000005))
(assert (= temp783_60 temp783_59))
(assert (= temp783_61 (select ARGNAME_padding_NAMEEND_VAL temp783_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp783_41 temp783_38)
             (bvslt temp783_45 temp783_42)
             (bvslt temp783_49 temp783_46)
             (bvslt temp783_53 temp783_50)
             (bvslt temp783_57 temp783_54)
             (bvslt temp783_61 temp783_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp783_62 #x0000000000000000))
(assert (= var2240290 temp783_62))
(assert (= temp783_63 #x0000000000000000))
(assert (= temp783_64 temp783_63))
(assert (= temp783_65 (select ARGNAME_stride_NAMEEND_VAL temp783_64)))
(assert (= temp783_66 #x0000000000000001))
(assert (= temp783_67 temp783_66))
(assert (= temp783_68 (select ARGNAME_stride_NAMEEND_VAL temp783_67)))
(assert (= temp783_69 #x0000000000000002))
(assert (= temp783_70 temp783_69))
(assert (= temp783_71 (select ARGNAME_stride_NAMEEND_VAL temp783_70)))
(assert (= temp783_72 #x0000000000000003))
(assert (= temp783_73 temp783_72))
(assert (= temp783_74 (select ARGNAME_stride_NAMEEND_VAL temp783_73)))
(assert (= temp783_75 #x0000000000000004))
(assert (= temp783_76 temp783_75))
(assert (= temp783_77 (select ARGNAME_stride_NAMEEND_VAL temp783_76)))
(assert (= temp783_78 #x0000000000000005))
(assert (= temp783_79 temp783_78))
(assert (= temp783_80 (select ARGNAME_stride_NAMEEND_VAL temp783_79)))
(assert (= temp783_81 #x0000000000000000))
(assert (= temp783_82 #x0000000000000000))
(assert (= temp783_83 temp783_82))
(assert (= temp783_84 (select ARGNAME_stride_NAMEEND_VAL temp783_83)))
(assert (= temp783_85 #x0000000000000000))
(assert (= temp783_86 #x0000000000000001))
(assert (= temp783_87 temp783_86))
(assert (= temp783_88 (select ARGNAME_stride_NAMEEND_VAL temp783_87)))
(assert (= temp783_89 #x0000000000000000))
(assert (= temp783_90 #x0000000000000002))
(assert (= temp783_91 temp783_90))
(assert (= temp783_92 (select ARGNAME_stride_NAMEEND_VAL temp783_91)))
(assert (= temp783_93 #x0000000000000000))
(assert (= temp783_94 #x0000000000000003))
(assert (= temp783_95 temp783_94))
(assert (= temp783_96 (select ARGNAME_stride_NAMEEND_VAL temp783_95)))
(assert (= temp783_97 #x0000000000000000))
(assert (= temp783_98 #x0000000000000004))
(assert (= temp783_99 temp783_98))
(assert (= temp783_100 (select ARGNAME_stride_NAMEEND_VAL temp783_99)))
(assert (= temp783_101 #x0000000000000000))
(assert (= temp783_102 #x0000000000000005))
(assert (= temp783_103 temp783_102))
(assert (= temp783_104 (select ARGNAME_stride_NAMEEND_VAL temp783_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp783_84 temp783_81)
             (bvsle temp783_88 temp783_85)
             (bvsle temp783_92 temp783_89)
             (bvsle temp783_96 temp783_93)
             (bvsle temp783_100 temp783_97)
             (bvsle temp783_104 temp783_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp783_105 #x0000000000000000))
(assert (= var2240311 temp783_105))
(assert (= temp783_106 #x0000000000000000))
(assert (= var2228402 temp783_106))
(assert (= temp783_107 #x0000000000000000))
(assert (= temp783_108 temp783_107))
(assert (= temp783_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp783_108)))
(assert (= temp783_110 #x0000000000000001))
(assert (= temp783_111 temp783_110))
(assert (= temp783_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp783_111)))
(assert (= temp783_113 #x0000000000000002))
(assert (= temp783_114 temp783_113))
(assert (= temp783_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp783_114)))
(assert (= temp783_116 #x0000000000000003))
(assert (= temp783_117 temp783_116))
(assert (= temp783_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp783_117)))
(assert (= temp783_119 #x0000000000000004))
(assert (= temp783_120 temp783_119))
(assert (= temp783_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp783_120)))
(assert (= temp783_122 #x0000000000000005))
(assert (= temp783_123 temp783_122))
(assert (= temp783_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp783_123)))
(assert (= temp783_126 var2228402))
(assert (= temp783_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp783_126)))
(assert (= temp783_125 temp783_127))
(assert (= var2240356
   (ite (bvslt temp783_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp783_128 #x0000000000000000))
(assert (= var2240356 temp783_128))
(assert (= temp783_129 #x0000000000000000))
(assert (= var2228402 temp783_129))
(assert (= temp783_131 var2228402))
(assert (= temp783_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp783_131)))
(assert (= temp783_130 temp783_132))
(assert (= var2240378 (bvsmod temp783_130 ARGNAME_groups_NAMEEND)))
(assert (= temp783_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp783_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp783_134 #x0000000000000001))
(assert (= var2240379 temp783_134))
(assert (= var2240398 var2240288))
(assert (= temp783_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp783_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp783_136 #x0000000000000001))
(assert (= var2240399 temp783_136))
(assert (= temp783_137 #x0000000000000001))
(assert (= var2229290 temp783_137))
(assert (= temp783_139 var2229290))
(assert (= temp783_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp783_139)))
(assert (= temp783_138 temp783_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp783_138)))
(assert (= temp783_141 #x0000000000000000))
(assert (= var2228402 temp783_141))
(assert (= temp783_143 var2228402))
(assert (= temp783_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp783_143)))
(assert (= temp783_142 temp783_144))
(assert (= temp783_145 #x0000000000000002))
(assert (= var2503529 temp783_145))
(assert (= temp783_146 #x0000000000000001))
(assert (= var2240569 temp783_146))
(assert (= temp783_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp783_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp783_148 #x0000000000000001))
(assert (= var1521778 temp783_148))
(assert (= temp783_149 #x0000000000000001))
(assert (= var1521908 temp783_149))
(assert (= var4010473 var1521908))
(assert (= temp783_150 #x0000000000000000))
(assert (= var4210495 temp783_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp783_151 #x0000000000000002))
(assert (= var4339331 temp783_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4993424 var1521921))
(assert (= var1522540 var1521633))
(assert (= temp783_152 #x0000000000000000))
(assert (= var1522541
   (ite (distinct var1522540 temp783_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp783_153 #x0000000000000001))
(assert (= var1521778 temp783_153))
(model-add temp783_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp783_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp783_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp783_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp783_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp783_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






