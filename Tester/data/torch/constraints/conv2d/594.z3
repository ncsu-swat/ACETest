(declare-fun temp790_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp790_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp790_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp790_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp790_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp790_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp790_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp790_8 () (_ BitVec 64))
(declare-fun temp790_10 () (_ BitVec 64))
(declare-fun temp790_9 () (_ BitVec 64))
(declare-fun temp790_12 () (_ BitVec 64))
(declare-fun temp790_11 () (_ BitVec 64))
(declare-fun temp790_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp790_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp790_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp790_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp790_17 () (_ BitVec 64))
(declare-fun temp790_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp790_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp790_20 () (_ BitVec 64))
(declare-fun temp790_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp790_22 () (_ BitVec 64))
(declare-fun temp790_23 () (_ BitVec 64))
(declare-fun temp790_24 () (_ BitVec 64))
(declare-fun temp790_25 () (_ BitVec 64))
(declare-fun temp790_26 () (_ BitVec 64))
(declare-fun temp790_27 () (_ BitVec 64))
(declare-fun temp790_28 () (_ BitVec 64))
(declare-fun temp790_29 () (_ BitVec 64))
(declare-fun temp790_30 () (_ BitVec 64))
(declare-fun temp790_31 () (_ BitVec 64))
(declare-fun temp790_32 () (_ BitVec 64))
(declare-fun temp790_33 () (_ BitVec 64))
(declare-fun temp790_34 () (_ BitVec 64))
(declare-fun temp790_35 () (_ BitVec 64))
(declare-fun temp790_36 () (_ BitVec 64))
(declare-fun temp790_37 () (_ BitVec 64))
(declare-fun temp790_38 () (_ BitVec 64))
(declare-fun temp790_39 () (_ BitVec 64))
(declare-fun temp790_40 () (_ BitVec 64))
(declare-fun temp790_41 () (_ BitVec 64))
(declare-fun temp790_42 () (_ BitVec 64))
(declare-fun temp790_43 () (_ BitVec 64))
(declare-fun temp790_44 () (_ BitVec 64))
(declare-fun temp790_45 () (_ BitVec 64))
(declare-fun temp790_46 () (_ BitVec 64))
(declare-fun temp790_47 () (_ BitVec 64))
(declare-fun temp790_48 () (_ BitVec 64))
(declare-fun temp790_49 () (_ BitVec 64))
(declare-fun temp790_50 () (_ BitVec 64))
(declare-fun temp790_51 () (_ BitVec 64))
(declare-fun temp790_52 () (_ BitVec 64))
(declare-fun temp790_53 () (_ BitVec 64))
(declare-fun temp790_54 () (_ BitVec 64))
(declare-fun temp790_55 () (_ BitVec 64))
(declare-fun temp790_56 () (_ BitVec 64))
(declare-fun temp790_57 () (_ BitVec 64))
(declare-fun temp790_58 () (_ BitVec 64))
(declare-fun temp790_59 () (_ BitVec 64))
(declare-fun temp790_60 () (_ BitVec 64))
(declare-fun temp790_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp790_62 () (_ BitVec 64))
(declare-fun temp790_63 () (_ BitVec 64))
(declare-fun temp790_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp790_65 () (_ BitVec 64))
(declare-fun temp790_66 () (_ BitVec 64))
(declare-fun temp790_67 () (_ BitVec 64))
(declare-fun temp790_68 () (_ BitVec 64))
(declare-fun temp790_69 () (_ BitVec 64))
(declare-fun temp790_70 () (_ BitVec 64))
(declare-fun temp790_71 () (_ BitVec 64))
(declare-fun temp790_72 () (_ BitVec 64))
(declare-fun temp790_73 () (_ BitVec 64))
(declare-fun temp790_74 () (_ BitVec 64))
(declare-fun temp790_75 () (_ BitVec 64))
(declare-fun temp790_76 () (_ BitVec 64))
(declare-fun temp790_77 () (_ BitVec 64))
(declare-fun temp790_78 () (_ BitVec 64))
(declare-fun temp790_79 () (_ BitVec 64))
(declare-fun temp790_80 () (_ BitVec 64))
(declare-fun temp790_81 () (_ BitVec 64))
(declare-fun temp790_82 () (_ BitVec 64))
(declare-fun temp790_83 () (_ BitVec 64))
(declare-fun temp790_84 () (_ BitVec 64))
(declare-fun temp790_85 () (_ BitVec 64))
(declare-fun temp790_86 () (_ BitVec 64))
(declare-fun temp790_87 () (_ BitVec 64))
(declare-fun temp790_88 () (_ BitVec 64))
(declare-fun temp790_89 () (_ BitVec 64))
(declare-fun temp790_90 () (_ BitVec 64))
(declare-fun temp790_91 () (_ BitVec 64))
(declare-fun temp790_92 () (_ BitVec 64))
(declare-fun temp790_93 () (_ BitVec 64))
(declare-fun temp790_94 () (_ BitVec 64))
(declare-fun temp790_95 () (_ BitVec 64))
(declare-fun temp790_96 () (_ BitVec 64))
(declare-fun temp790_97 () (_ BitVec 64))
(declare-fun temp790_98 () (_ BitVec 64))
(declare-fun temp790_99 () (_ BitVec 64))
(declare-fun temp790_100 () (_ BitVec 64))
(declare-fun temp790_101 () (_ BitVec 64))
(declare-fun temp790_102 () (_ BitVec 64))
(declare-fun temp790_103 () (_ BitVec 64))
(declare-fun temp790_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp790_105 () (_ BitVec 64))
(declare-fun temp790_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp790_107 () (_ BitVec 64))
(declare-fun temp790_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp790_109 () (_ BitVec 64))
(declare-fun temp790_110 () (_ BitVec 64))
(declare-fun temp790_111 () (_ BitVec 64))
(declare-fun temp790_112 () (_ BitVec 64))
(declare-fun temp790_113 () (_ BitVec 64))
(declare-fun temp790_114 () (_ BitVec 64))
(declare-fun temp790_115 () (_ BitVec 64))
(declare-fun temp790_116 () (_ BitVec 64))
(declare-fun temp790_117 () (_ BitVec 64))
(declare-fun temp790_118 () (_ BitVec 64))
(declare-fun temp790_119 () (_ BitVec 64))
(declare-fun temp790_120 () (_ BitVec 64))
(declare-fun temp790_121 () (_ BitVec 64))
(declare-fun temp790_122 () (_ BitVec 64))
(declare-fun temp790_123 () (_ BitVec 64))
(declare-fun temp790_124 () (_ BitVec 64))
(declare-fun temp790_126 () (_ BitVec 64))
(declare-fun temp790_127 () (_ BitVec 64))
(declare-fun temp790_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp790_128 () (_ BitVec 64))
(declare-fun temp790_129 () (_ BitVec 64))
(declare-fun temp790_131 () (_ BitVec 64))
(declare-fun temp790_132 () (_ BitVec 64))
(declare-fun temp790_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp790_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp790_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp790_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp790_136 () (_ BitVec 64))
(declare-fun temp790_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp790_139 () (_ BitVec 64))
(declare-fun temp790_140 () (_ BitVec 64))
(declare-fun temp790_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp790_141 () (_ BitVec 64))
(declare-fun temp790_143 () (_ BitVec 64))
(declare-fun temp790_144 () (_ BitVec 64))
(declare-fun temp790_142 () (_ BitVec 64))
(declare-fun temp790_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp790_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp790_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp790_148 () (_ BitVec 64))
(declare-fun temp790_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp790_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp790_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var1522540 () (_ BitVec 64))
(declare-fun temp790_152 () (_ BitVec 64))
(declare-fun var1522541 () (_ BitVec 64))
(declare-fun temp790_153 () (_ BitVec 64))
(assert (= temp790_1 #x0000000000000002))
(assert (= var989741 temp790_1))
(assert (= temp790_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp790_2)))
(assert (= temp790_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp790_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp790_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp790_4)))
(assert (= temp790_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp790_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp790_6 #x0000000000000000))
(assert (= var989776 temp790_6))
(assert (= temp790_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp790_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp790_8 #x0000000000000001))
(assert (= var989810 temp790_8))
(assert (= temp790_10 #x0000000000000000))
(assert (= temp790_9 temp790_10))
(assert (= temp790_12 #x0000000000000002))
(assert (= temp790_11 temp790_12))
(assert (= temp790_13 #x0000000000000000))
(assert (= var1387902 temp790_13))
(assert (= temp790_14 #x0000000000000001))
(assert (= var1387923 temp790_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp790_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp790_15)))
(assert (= temp790_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp790_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp790_17 #x0000000000000000))
(assert (= var1521661 temp790_17))
(assert (= temp790_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp790_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp790_19 #x0000000000000000))
(assert (= var1521706 temp790_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp790_20 #x0000000000000000))
(assert (= temp790_21 temp790_20))
(assert (= temp790_22 (select ARGNAME_padding_NAMEEND_VAL temp790_21)))
(assert (= temp790_23 #x0000000000000001))
(assert (= temp790_24 temp790_23))
(assert (= temp790_25 (select ARGNAME_padding_NAMEEND_VAL temp790_24)))
(assert (= temp790_26 #x0000000000000002))
(assert (= temp790_27 temp790_26))
(assert (= temp790_28 (select ARGNAME_padding_NAMEEND_VAL temp790_27)))
(assert (= temp790_29 #x0000000000000003))
(assert (= temp790_30 temp790_29))
(assert (= temp790_31 (select ARGNAME_padding_NAMEEND_VAL temp790_30)))
(assert (= temp790_32 #x0000000000000004))
(assert (= temp790_33 temp790_32))
(assert (= temp790_34 (select ARGNAME_padding_NAMEEND_VAL temp790_33)))
(assert (= temp790_35 #x0000000000000005))
(assert (= temp790_36 temp790_35))
(assert (= temp790_37 (select ARGNAME_padding_NAMEEND_VAL temp790_36)))
(assert (= temp790_38 #x0000000000000000))
(assert (= temp790_39 #x0000000000000000))
(assert (= temp790_40 temp790_39))
(assert (= temp790_41 (select ARGNAME_padding_NAMEEND_VAL temp790_40)))
(assert (= temp790_42 #x0000000000000000))
(assert (= temp790_43 #x0000000000000001))
(assert (= temp790_44 temp790_43))
(assert (= temp790_45 (select ARGNAME_padding_NAMEEND_VAL temp790_44)))
(assert (= temp790_46 #x0000000000000000))
(assert (= temp790_47 #x0000000000000002))
(assert (= temp790_48 temp790_47))
(assert (= temp790_49 (select ARGNAME_padding_NAMEEND_VAL temp790_48)))
(assert (= temp790_50 #x0000000000000000))
(assert (= temp790_51 #x0000000000000003))
(assert (= temp790_52 temp790_51))
(assert (= temp790_53 (select ARGNAME_padding_NAMEEND_VAL temp790_52)))
(assert (= temp790_54 #x0000000000000000))
(assert (= temp790_55 #x0000000000000004))
(assert (= temp790_56 temp790_55))
(assert (= temp790_57 (select ARGNAME_padding_NAMEEND_VAL temp790_56)))
(assert (= temp790_58 #x0000000000000000))
(assert (= temp790_59 #x0000000000000005))
(assert (= temp790_60 temp790_59))
(assert (= temp790_61 (select ARGNAME_padding_NAMEEND_VAL temp790_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp790_41 temp790_38)
             (bvslt temp790_45 temp790_42)
             (bvslt temp790_49 temp790_46)
             (bvslt temp790_53 temp790_50)
             (bvslt temp790_57 temp790_54)
             (bvslt temp790_61 temp790_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp790_62 #x0000000000000000))
(assert (= var2240290 temp790_62))
(assert (= temp790_63 #x0000000000000000))
(assert (= temp790_64 temp790_63))
(assert (= temp790_65 (select ARGNAME_stride_NAMEEND_VAL temp790_64)))
(assert (= temp790_66 #x0000000000000001))
(assert (= temp790_67 temp790_66))
(assert (= temp790_68 (select ARGNAME_stride_NAMEEND_VAL temp790_67)))
(assert (= temp790_69 #x0000000000000002))
(assert (= temp790_70 temp790_69))
(assert (= temp790_71 (select ARGNAME_stride_NAMEEND_VAL temp790_70)))
(assert (= temp790_72 #x0000000000000003))
(assert (= temp790_73 temp790_72))
(assert (= temp790_74 (select ARGNAME_stride_NAMEEND_VAL temp790_73)))
(assert (= temp790_75 #x0000000000000004))
(assert (= temp790_76 temp790_75))
(assert (= temp790_77 (select ARGNAME_stride_NAMEEND_VAL temp790_76)))
(assert (= temp790_78 #x0000000000000005))
(assert (= temp790_79 temp790_78))
(assert (= temp790_80 (select ARGNAME_stride_NAMEEND_VAL temp790_79)))
(assert (= temp790_81 #x0000000000000000))
(assert (= temp790_82 #x0000000000000000))
(assert (= temp790_83 temp790_82))
(assert (= temp790_84 (select ARGNAME_stride_NAMEEND_VAL temp790_83)))
(assert (= temp790_85 #x0000000000000000))
(assert (= temp790_86 #x0000000000000001))
(assert (= temp790_87 temp790_86))
(assert (= temp790_88 (select ARGNAME_stride_NAMEEND_VAL temp790_87)))
(assert (= temp790_89 #x0000000000000000))
(assert (= temp790_90 #x0000000000000002))
(assert (= temp790_91 temp790_90))
(assert (= temp790_92 (select ARGNAME_stride_NAMEEND_VAL temp790_91)))
(assert (= temp790_93 #x0000000000000000))
(assert (= temp790_94 #x0000000000000003))
(assert (= temp790_95 temp790_94))
(assert (= temp790_96 (select ARGNAME_stride_NAMEEND_VAL temp790_95)))
(assert (= temp790_97 #x0000000000000000))
(assert (= temp790_98 #x0000000000000004))
(assert (= temp790_99 temp790_98))
(assert (= temp790_100 (select ARGNAME_stride_NAMEEND_VAL temp790_99)))
(assert (= temp790_101 #x0000000000000000))
(assert (= temp790_102 #x0000000000000005))
(assert (= temp790_103 temp790_102))
(assert (= temp790_104 (select ARGNAME_stride_NAMEEND_VAL temp790_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp790_84 temp790_81)
             (bvsle temp790_88 temp790_85)
             (bvsle temp790_92 temp790_89)
             (bvsle temp790_96 temp790_93)
             (bvsle temp790_100 temp790_97)
             (bvsle temp790_104 temp790_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp790_105 #x0000000000000000))
(assert (= var2240311 temp790_105))
(assert (= temp790_106 #x0000000000000000))
(assert (= var2228402 temp790_106))
(assert (= temp790_107 #x0000000000000000))
(assert (= temp790_108 temp790_107))
(assert (= temp790_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp790_108)))
(assert (= temp790_110 #x0000000000000001))
(assert (= temp790_111 temp790_110))
(assert (= temp790_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp790_111)))
(assert (= temp790_113 #x0000000000000002))
(assert (= temp790_114 temp790_113))
(assert (= temp790_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp790_114)))
(assert (= temp790_116 #x0000000000000003))
(assert (= temp790_117 temp790_116))
(assert (= temp790_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp790_117)))
(assert (= temp790_119 #x0000000000000004))
(assert (= temp790_120 temp790_119))
(assert (= temp790_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp790_120)))
(assert (= temp790_122 #x0000000000000005))
(assert (= temp790_123 temp790_122))
(assert (= temp790_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp790_123)))
(assert (= temp790_126 var2228402))
(assert (= temp790_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp790_126)))
(assert (= temp790_125 temp790_127))
(assert (= var2240356
   (ite (bvslt temp790_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp790_128 #x0000000000000000))
(assert (= var2240356 temp790_128))
(assert (= temp790_129 #x0000000000000000))
(assert (= var2228402 temp790_129))
(assert (= temp790_131 var2228402))
(assert (= temp790_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp790_131)))
(assert (= temp790_130 temp790_132))
(assert (= var2240378 (bvsmod temp790_130 ARGNAME_groups_NAMEEND)))
(assert (= temp790_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp790_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp790_134 #x0000000000000001))
(assert (= var2240379 temp790_134))
(assert (= var2240398 var2240288))
(assert (= temp790_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp790_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp790_136 #x0000000000000001))
(assert (= var2240399 temp790_136))
(assert (= temp790_137 #x0000000000000001))
(assert (= var2229290 temp790_137))
(assert (= temp790_139 var2229290))
(assert (= temp790_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp790_139)))
(assert (= temp790_138 temp790_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp790_138)))
(assert (= temp790_141 #x0000000000000000))
(assert (= var2228402 temp790_141))
(assert (= temp790_143 var2228402))
(assert (= temp790_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp790_143)))
(assert (= temp790_142 temp790_144))
(assert (= temp790_145 #x0000000000000002))
(assert (= var2503529 temp790_145))
(assert (= temp790_146 #x0000000000000001))
(assert (= var2240569 temp790_146))
(assert (= temp790_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp790_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp790_148 #x0000000000000001))
(assert (= var1521778 temp790_148))
(assert (= temp790_149 #x0000000000000001))
(assert (= var1521908 temp790_149))
(assert (= var4010473 var1521908))
(assert (= temp790_150 #x0000000000000000))
(assert (= var4210495 temp790_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp790_151 #x0000000000000002))
(assert (= var4339331 temp790_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4796816 var1521921))
(assert (= var1522540 var1521633))
(assert (= temp790_152 #x0000000000000000))
(assert (= var1522541
   (ite (distinct var1522540 temp790_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp790_153 #x0000000000000001))
(assert (= var1521778 temp790_153))
(model-add temp790_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp790_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp790_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp790_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp790_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp790_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






