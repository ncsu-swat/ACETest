(declare-fun temp778_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp778_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp778_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp778_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp778_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp778_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp778_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp778_8 () (_ BitVec 64))
(declare-fun temp778_10 () (_ BitVec 64))
(declare-fun temp778_9 () (_ BitVec 64))
(declare-fun temp778_12 () (_ BitVec 64))
(declare-fun temp778_11 () (_ BitVec 64))
(declare-fun temp778_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp778_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp778_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp778_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp778_17 () (_ BitVec 64))
(declare-fun temp778_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp778_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp778_20 () (_ BitVec 64))
(declare-fun temp778_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp778_22 () (_ BitVec 64))
(declare-fun temp778_23 () (_ BitVec 64))
(declare-fun temp778_24 () (_ BitVec 64))
(declare-fun temp778_25 () (_ BitVec 64))
(declare-fun temp778_26 () (_ BitVec 64))
(declare-fun temp778_27 () (_ BitVec 64))
(declare-fun temp778_28 () (_ BitVec 64))
(declare-fun temp778_29 () (_ BitVec 64))
(declare-fun temp778_30 () (_ BitVec 64))
(declare-fun temp778_31 () (_ BitVec 64))
(declare-fun temp778_32 () (_ BitVec 64))
(declare-fun temp778_33 () (_ BitVec 64))
(declare-fun temp778_34 () (_ BitVec 64))
(declare-fun temp778_35 () (_ BitVec 64))
(declare-fun temp778_36 () (_ BitVec 64))
(declare-fun temp778_37 () (_ BitVec 64))
(declare-fun temp778_38 () (_ BitVec 64))
(declare-fun temp778_39 () (_ BitVec 64))
(declare-fun temp778_40 () (_ BitVec 64))
(declare-fun temp778_41 () (_ BitVec 64))
(declare-fun temp778_42 () (_ BitVec 64))
(declare-fun temp778_43 () (_ BitVec 64))
(declare-fun temp778_44 () (_ BitVec 64))
(declare-fun temp778_45 () (_ BitVec 64))
(declare-fun temp778_46 () (_ BitVec 64))
(declare-fun temp778_47 () (_ BitVec 64))
(declare-fun temp778_48 () (_ BitVec 64))
(declare-fun temp778_49 () (_ BitVec 64))
(declare-fun temp778_50 () (_ BitVec 64))
(declare-fun temp778_51 () (_ BitVec 64))
(declare-fun temp778_52 () (_ BitVec 64))
(declare-fun temp778_53 () (_ BitVec 64))
(declare-fun temp778_54 () (_ BitVec 64))
(declare-fun temp778_55 () (_ BitVec 64))
(declare-fun temp778_56 () (_ BitVec 64))
(declare-fun temp778_57 () (_ BitVec 64))
(declare-fun temp778_58 () (_ BitVec 64))
(declare-fun temp778_59 () (_ BitVec 64))
(declare-fun temp778_60 () (_ BitVec 64))
(declare-fun temp778_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp778_62 () (_ BitVec 64))
(declare-fun temp778_63 () (_ BitVec 64))
(declare-fun temp778_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp778_65 () (_ BitVec 64))
(declare-fun temp778_66 () (_ BitVec 64))
(declare-fun temp778_67 () (_ BitVec 64))
(declare-fun temp778_68 () (_ BitVec 64))
(declare-fun temp778_69 () (_ BitVec 64))
(declare-fun temp778_70 () (_ BitVec 64))
(declare-fun temp778_71 () (_ BitVec 64))
(declare-fun temp778_72 () (_ BitVec 64))
(declare-fun temp778_73 () (_ BitVec 64))
(declare-fun temp778_74 () (_ BitVec 64))
(declare-fun temp778_75 () (_ BitVec 64))
(declare-fun temp778_76 () (_ BitVec 64))
(declare-fun temp778_77 () (_ BitVec 64))
(declare-fun temp778_78 () (_ BitVec 64))
(declare-fun temp778_79 () (_ BitVec 64))
(declare-fun temp778_80 () (_ BitVec 64))
(declare-fun temp778_81 () (_ BitVec 64))
(declare-fun temp778_82 () (_ BitVec 64))
(declare-fun temp778_83 () (_ BitVec 64))
(declare-fun temp778_84 () (_ BitVec 64))
(declare-fun temp778_85 () (_ BitVec 64))
(declare-fun temp778_86 () (_ BitVec 64))
(declare-fun temp778_87 () (_ BitVec 64))
(declare-fun temp778_88 () (_ BitVec 64))
(declare-fun temp778_89 () (_ BitVec 64))
(declare-fun temp778_90 () (_ BitVec 64))
(declare-fun temp778_91 () (_ BitVec 64))
(declare-fun temp778_92 () (_ BitVec 64))
(declare-fun temp778_93 () (_ BitVec 64))
(declare-fun temp778_94 () (_ BitVec 64))
(declare-fun temp778_95 () (_ BitVec 64))
(declare-fun temp778_96 () (_ BitVec 64))
(declare-fun temp778_97 () (_ BitVec 64))
(declare-fun temp778_98 () (_ BitVec 64))
(declare-fun temp778_99 () (_ BitVec 64))
(declare-fun temp778_100 () (_ BitVec 64))
(declare-fun temp778_101 () (_ BitVec 64))
(declare-fun temp778_102 () (_ BitVec 64))
(declare-fun temp778_103 () (_ BitVec 64))
(declare-fun temp778_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp778_105 () (_ BitVec 64))
(declare-fun temp778_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp778_107 () (_ BitVec 64))
(declare-fun temp778_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp778_109 () (_ BitVec 64))
(declare-fun temp778_110 () (_ BitVec 64))
(declare-fun temp778_111 () (_ BitVec 64))
(declare-fun temp778_112 () (_ BitVec 64))
(declare-fun temp778_113 () (_ BitVec 64))
(declare-fun temp778_114 () (_ BitVec 64))
(declare-fun temp778_115 () (_ BitVec 64))
(declare-fun temp778_116 () (_ BitVec 64))
(declare-fun temp778_117 () (_ BitVec 64))
(declare-fun temp778_118 () (_ BitVec 64))
(declare-fun temp778_119 () (_ BitVec 64))
(declare-fun temp778_120 () (_ BitVec 64))
(declare-fun temp778_121 () (_ BitVec 64))
(declare-fun temp778_122 () (_ BitVec 64))
(declare-fun temp778_123 () (_ BitVec 64))
(declare-fun temp778_124 () (_ BitVec 64))
(declare-fun temp778_126 () (_ BitVec 64))
(declare-fun temp778_127 () (_ BitVec 64))
(declare-fun temp778_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp778_128 () (_ BitVec 64))
(declare-fun temp778_129 () (_ BitVec 64))
(declare-fun temp778_131 () (_ BitVec 64))
(declare-fun temp778_132 () (_ BitVec 64))
(declare-fun temp778_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp778_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp778_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp778_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp778_136 () (_ BitVec 64))
(declare-fun temp778_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp778_139 () (_ BitVec 64))
(declare-fun temp778_140 () (_ BitVec 64))
(declare-fun temp778_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp778_141 () (_ BitVec 64))
(declare-fun temp778_143 () (_ BitVec 64))
(declare-fun temp778_144 () (_ BitVec 64))
(declare-fun temp778_142 () (_ BitVec 64))
(declare-fun temp778_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp778_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp778_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp778_148 () (_ BitVec 64))
(declare-fun temp778_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp778_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp778_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var1522540 () (_ BitVec 64))
(declare-fun temp778_152 () (_ BitVec 64))
(declare-fun var1522541 () (_ BitVec 64))
(declare-fun temp778_153 () (_ BitVec 64))
(assert (= temp778_1 #x0000000000000002))
(assert (= var989741 temp778_1))
(assert (= temp778_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp778_2)))
(assert (= temp778_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp778_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp778_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp778_4)))
(assert (= temp778_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp778_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp778_6 #x0000000000000000))
(assert (= var989776 temp778_6))
(assert (= temp778_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp778_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp778_8 #x0000000000000001))
(assert (= var989810 temp778_8))
(assert (= temp778_10 #x0000000000000000))
(assert (= temp778_9 temp778_10))
(assert (= temp778_12 #x0000000000000002))
(assert (= temp778_11 temp778_12))
(assert (= temp778_13 #x0000000000000000))
(assert (= var1387902 temp778_13))
(assert (= temp778_14 #x0000000000000001))
(assert (= var1387923 temp778_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp778_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp778_15)))
(assert (= temp778_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp778_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp778_17 #x0000000000000000))
(assert (= var1521661 temp778_17))
(assert (= temp778_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp778_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp778_19 #x0000000000000000))
(assert (= var1521706 temp778_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp778_20 #x0000000000000000))
(assert (= temp778_21 temp778_20))
(assert (= temp778_22 (select ARGNAME_padding_NAMEEND_VAL temp778_21)))
(assert (= temp778_23 #x0000000000000001))
(assert (= temp778_24 temp778_23))
(assert (= temp778_25 (select ARGNAME_padding_NAMEEND_VAL temp778_24)))
(assert (= temp778_26 #x0000000000000002))
(assert (= temp778_27 temp778_26))
(assert (= temp778_28 (select ARGNAME_padding_NAMEEND_VAL temp778_27)))
(assert (= temp778_29 #x0000000000000003))
(assert (= temp778_30 temp778_29))
(assert (= temp778_31 (select ARGNAME_padding_NAMEEND_VAL temp778_30)))
(assert (= temp778_32 #x0000000000000004))
(assert (= temp778_33 temp778_32))
(assert (= temp778_34 (select ARGNAME_padding_NAMEEND_VAL temp778_33)))
(assert (= temp778_35 #x0000000000000005))
(assert (= temp778_36 temp778_35))
(assert (= temp778_37 (select ARGNAME_padding_NAMEEND_VAL temp778_36)))
(assert (= temp778_38 #x0000000000000000))
(assert (= temp778_39 #x0000000000000000))
(assert (= temp778_40 temp778_39))
(assert (= temp778_41 (select ARGNAME_padding_NAMEEND_VAL temp778_40)))
(assert (= temp778_42 #x0000000000000000))
(assert (= temp778_43 #x0000000000000001))
(assert (= temp778_44 temp778_43))
(assert (= temp778_45 (select ARGNAME_padding_NAMEEND_VAL temp778_44)))
(assert (= temp778_46 #x0000000000000000))
(assert (= temp778_47 #x0000000000000002))
(assert (= temp778_48 temp778_47))
(assert (= temp778_49 (select ARGNAME_padding_NAMEEND_VAL temp778_48)))
(assert (= temp778_50 #x0000000000000000))
(assert (= temp778_51 #x0000000000000003))
(assert (= temp778_52 temp778_51))
(assert (= temp778_53 (select ARGNAME_padding_NAMEEND_VAL temp778_52)))
(assert (= temp778_54 #x0000000000000000))
(assert (= temp778_55 #x0000000000000004))
(assert (= temp778_56 temp778_55))
(assert (= temp778_57 (select ARGNAME_padding_NAMEEND_VAL temp778_56)))
(assert (= temp778_58 #x0000000000000000))
(assert (= temp778_59 #x0000000000000005))
(assert (= temp778_60 temp778_59))
(assert (= temp778_61 (select ARGNAME_padding_NAMEEND_VAL temp778_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp778_41 temp778_38)
             (bvslt temp778_45 temp778_42)
             (bvslt temp778_49 temp778_46)
             (bvslt temp778_53 temp778_50)
             (bvslt temp778_57 temp778_54)
             (bvslt temp778_61 temp778_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp778_62 #x0000000000000000))
(assert (= var2240290 temp778_62))
(assert (= temp778_63 #x0000000000000000))
(assert (= temp778_64 temp778_63))
(assert (= temp778_65 (select ARGNAME_stride_NAMEEND_VAL temp778_64)))
(assert (= temp778_66 #x0000000000000001))
(assert (= temp778_67 temp778_66))
(assert (= temp778_68 (select ARGNAME_stride_NAMEEND_VAL temp778_67)))
(assert (= temp778_69 #x0000000000000002))
(assert (= temp778_70 temp778_69))
(assert (= temp778_71 (select ARGNAME_stride_NAMEEND_VAL temp778_70)))
(assert (= temp778_72 #x0000000000000003))
(assert (= temp778_73 temp778_72))
(assert (= temp778_74 (select ARGNAME_stride_NAMEEND_VAL temp778_73)))
(assert (= temp778_75 #x0000000000000004))
(assert (= temp778_76 temp778_75))
(assert (= temp778_77 (select ARGNAME_stride_NAMEEND_VAL temp778_76)))
(assert (= temp778_78 #x0000000000000005))
(assert (= temp778_79 temp778_78))
(assert (= temp778_80 (select ARGNAME_stride_NAMEEND_VAL temp778_79)))
(assert (= temp778_81 #x0000000000000000))
(assert (= temp778_82 #x0000000000000000))
(assert (= temp778_83 temp778_82))
(assert (= temp778_84 (select ARGNAME_stride_NAMEEND_VAL temp778_83)))
(assert (= temp778_85 #x0000000000000000))
(assert (= temp778_86 #x0000000000000001))
(assert (= temp778_87 temp778_86))
(assert (= temp778_88 (select ARGNAME_stride_NAMEEND_VAL temp778_87)))
(assert (= temp778_89 #x0000000000000000))
(assert (= temp778_90 #x0000000000000002))
(assert (= temp778_91 temp778_90))
(assert (= temp778_92 (select ARGNAME_stride_NAMEEND_VAL temp778_91)))
(assert (= temp778_93 #x0000000000000000))
(assert (= temp778_94 #x0000000000000003))
(assert (= temp778_95 temp778_94))
(assert (= temp778_96 (select ARGNAME_stride_NAMEEND_VAL temp778_95)))
(assert (= temp778_97 #x0000000000000000))
(assert (= temp778_98 #x0000000000000004))
(assert (= temp778_99 temp778_98))
(assert (= temp778_100 (select ARGNAME_stride_NAMEEND_VAL temp778_99)))
(assert (= temp778_101 #x0000000000000000))
(assert (= temp778_102 #x0000000000000005))
(assert (= temp778_103 temp778_102))
(assert (= temp778_104 (select ARGNAME_stride_NAMEEND_VAL temp778_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp778_84 temp778_81)
             (bvsle temp778_88 temp778_85)
             (bvsle temp778_92 temp778_89)
             (bvsle temp778_96 temp778_93)
             (bvsle temp778_100 temp778_97)
             (bvsle temp778_104 temp778_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp778_105 #x0000000000000000))
(assert (= var2240311 temp778_105))
(assert (= temp778_106 #x0000000000000000))
(assert (= var2228402 temp778_106))
(assert (= temp778_107 #x0000000000000000))
(assert (= temp778_108 temp778_107))
(assert (= temp778_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp778_108)))
(assert (= temp778_110 #x0000000000000001))
(assert (= temp778_111 temp778_110))
(assert (= temp778_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp778_111)))
(assert (= temp778_113 #x0000000000000002))
(assert (= temp778_114 temp778_113))
(assert (= temp778_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp778_114)))
(assert (= temp778_116 #x0000000000000003))
(assert (= temp778_117 temp778_116))
(assert (= temp778_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp778_117)))
(assert (= temp778_119 #x0000000000000004))
(assert (= temp778_120 temp778_119))
(assert (= temp778_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp778_120)))
(assert (= temp778_122 #x0000000000000005))
(assert (= temp778_123 temp778_122))
(assert (= temp778_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp778_123)))
(assert (= temp778_126 var2228402))
(assert (= temp778_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp778_126)))
(assert (= temp778_125 temp778_127))
(assert (= var2240356
   (ite (bvslt temp778_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp778_128 #x0000000000000000))
(assert (= var2240356 temp778_128))
(assert (= temp778_129 #x0000000000000000))
(assert (= var2228402 temp778_129))
(assert (= temp778_131 var2228402))
(assert (= temp778_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp778_131)))
(assert (= temp778_130 temp778_132))
(assert (= var2240378 (bvsmod temp778_130 ARGNAME_groups_NAMEEND)))
(assert (= temp778_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp778_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp778_134 #x0000000000000001))
(assert (= var2240379 temp778_134))
(assert (= var2240398 var2240288))
(assert (= temp778_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp778_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp778_136 #x0000000000000001))
(assert (= var2240399 temp778_136))
(assert (= temp778_137 #x0000000000000001))
(assert (= var2229290 temp778_137))
(assert (= temp778_139 var2229290))
(assert (= temp778_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp778_139)))
(assert (= temp778_138 temp778_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp778_138)))
(assert (= temp778_141 #x0000000000000000))
(assert (= var2228402 temp778_141))
(assert (= temp778_143 var2228402))
(assert (= temp778_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp778_143)))
(assert (= temp778_142 temp778_144))
(assert (= temp778_145 #x0000000000000002))
(assert (= var2503529 temp778_145))
(assert (= temp778_146 #x0000000000000001))
(assert (= var2240569 temp778_146))
(assert (= temp778_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp778_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp778_148 #x0000000000000001))
(assert (= var1521778 temp778_148))
(assert (= temp778_149 #x0000000000000001))
(assert (= var1521908 temp778_149))
(assert (= var4010473 var1521908))
(assert (= temp778_150 #x0000000000000000))
(assert (= var4210495 temp778_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp778_151 #x0000000000000002))
(assert (= var4339331 temp778_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4993424 var1521921))
(assert (= var1522540 var1521633))
(assert (= temp778_152 #x0000000000000000))
(assert (= var1522541
   (ite (distinct var1522540 temp778_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp778_153 #x0000000000000001))
(assert (= var1521778 temp778_153))
(model-add temp778_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp778_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp778_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp778_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp778_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp778_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






