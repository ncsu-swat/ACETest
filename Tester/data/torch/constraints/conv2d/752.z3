(declare-fun temp1002_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp1002_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp1002_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp1002_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp1002_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp1002_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp1002_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp1002_8 () (_ BitVec 64))
(declare-fun temp1002_10 () (_ BitVec 64))
(declare-fun temp1002_9 () (_ BitVec 64))
(declare-fun temp1002_12 () (_ BitVec 64))
(declare-fun temp1002_11 () (_ BitVec 64))
(declare-fun temp1002_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp1002_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp1002_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp1002_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp1002_17 () (_ BitVec 64))
(declare-fun temp1002_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp1002_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp1002_20 () (_ BitVec 64))
(declare-fun temp1002_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1002_22 () (_ BitVec 64))
(declare-fun temp1002_23 () (_ BitVec 64))
(declare-fun temp1002_24 () (_ BitVec 64))
(declare-fun temp1002_25 () (_ BitVec 64))
(declare-fun temp1002_26 () (_ BitVec 64))
(declare-fun temp1002_27 () (_ BitVec 64))
(declare-fun temp1002_28 () (_ BitVec 64))
(declare-fun temp1002_29 () (_ BitVec 64))
(declare-fun temp1002_30 () (_ BitVec 64))
(declare-fun temp1002_31 () (_ BitVec 64))
(declare-fun temp1002_32 () (_ BitVec 64))
(declare-fun temp1002_33 () (_ BitVec 64))
(declare-fun temp1002_34 () (_ BitVec 64))
(declare-fun temp1002_35 () (_ BitVec 64))
(declare-fun temp1002_36 () (_ BitVec 64))
(declare-fun temp1002_37 () (_ BitVec 64))
(declare-fun temp1002_38 () (_ BitVec 64))
(declare-fun temp1002_39 () (_ BitVec 64))
(declare-fun temp1002_40 () (_ BitVec 64))
(declare-fun temp1002_41 () (_ BitVec 64))
(declare-fun temp1002_42 () (_ BitVec 64))
(declare-fun temp1002_43 () (_ BitVec 64))
(declare-fun temp1002_44 () (_ BitVec 64))
(declare-fun temp1002_45 () (_ BitVec 64))
(declare-fun temp1002_46 () (_ BitVec 64))
(declare-fun temp1002_47 () (_ BitVec 64))
(declare-fun temp1002_48 () (_ BitVec 64))
(declare-fun temp1002_49 () (_ BitVec 64))
(declare-fun temp1002_50 () (_ BitVec 64))
(declare-fun temp1002_51 () (_ BitVec 64))
(declare-fun temp1002_52 () (_ BitVec 64))
(declare-fun temp1002_53 () (_ BitVec 64))
(declare-fun temp1002_54 () (_ BitVec 64))
(declare-fun temp1002_55 () (_ BitVec 64))
(declare-fun temp1002_56 () (_ BitVec 64))
(declare-fun temp1002_57 () (_ BitVec 64))
(declare-fun temp1002_58 () (_ BitVec 64))
(declare-fun temp1002_59 () (_ BitVec 64))
(declare-fun temp1002_60 () (_ BitVec 64))
(declare-fun temp1002_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp1002_62 () (_ BitVec 64))
(declare-fun temp1002_63 () (_ BitVec 64))
(declare-fun temp1002_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1002_65 () (_ BitVec 64))
(declare-fun temp1002_66 () (_ BitVec 64))
(declare-fun temp1002_67 () (_ BitVec 64))
(declare-fun temp1002_68 () (_ BitVec 64))
(declare-fun temp1002_69 () (_ BitVec 64))
(declare-fun temp1002_70 () (_ BitVec 64))
(declare-fun temp1002_71 () (_ BitVec 64))
(declare-fun temp1002_72 () (_ BitVec 64))
(declare-fun temp1002_73 () (_ BitVec 64))
(declare-fun temp1002_74 () (_ BitVec 64))
(declare-fun temp1002_75 () (_ BitVec 64))
(declare-fun temp1002_76 () (_ BitVec 64))
(declare-fun temp1002_77 () (_ BitVec 64))
(declare-fun temp1002_78 () (_ BitVec 64))
(declare-fun temp1002_79 () (_ BitVec 64))
(declare-fun temp1002_80 () (_ BitVec 64))
(declare-fun temp1002_81 () (_ BitVec 64))
(declare-fun temp1002_82 () (_ BitVec 64))
(declare-fun temp1002_83 () (_ BitVec 64))
(declare-fun temp1002_84 () (_ BitVec 64))
(declare-fun temp1002_85 () (_ BitVec 64))
(declare-fun temp1002_86 () (_ BitVec 64))
(declare-fun temp1002_87 () (_ BitVec 64))
(declare-fun temp1002_88 () (_ BitVec 64))
(declare-fun temp1002_89 () (_ BitVec 64))
(declare-fun temp1002_90 () (_ BitVec 64))
(declare-fun temp1002_91 () (_ BitVec 64))
(declare-fun temp1002_92 () (_ BitVec 64))
(declare-fun temp1002_93 () (_ BitVec 64))
(declare-fun temp1002_94 () (_ BitVec 64))
(declare-fun temp1002_95 () (_ BitVec 64))
(declare-fun temp1002_96 () (_ BitVec 64))
(declare-fun temp1002_97 () (_ BitVec 64))
(declare-fun temp1002_98 () (_ BitVec 64))
(declare-fun temp1002_99 () (_ BitVec 64))
(declare-fun temp1002_100 () (_ BitVec 64))
(declare-fun temp1002_101 () (_ BitVec 64))
(declare-fun temp1002_102 () (_ BitVec 64))
(declare-fun temp1002_103 () (_ BitVec 64))
(declare-fun temp1002_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp1002_105 () (_ BitVec 64))
(declare-fun temp1002_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp1002_107 () (_ BitVec 64))
(declare-fun temp1002_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1002_109 () (_ BitVec 64))
(declare-fun temp1002_110 () (_ BitVec 64))
(declare-fun temp1002_111 () (_ BitVec 64))
(declare-fun temp1002_112 () (_ BitVec 64))
(declare-fun temp1002_113 () (_ BitVec 64))
(declare-fun temp1002_114 () (_ BitVec 64))
(declare-fun temp1002_115 () (_ BitVec 64))
(declare-fun temp1002_116 () (_ BitVec 64))
(declare-fun temp1002_117 () (_ BitVec 64))
(declare-fun temp1002_118 () (_ BitVec 64))
(declare-fun temp1002_119 () (_ BitVec 64))
(declare-fun temp1002_120 () (_ BitVec 64))
(declare-fun temp1002_121 () (_ BitVec 64))
(declare-fun temp1002_122 () (_ BitVec 64))
(declare-fun temp1002_123 () (_ BitVec 64))
(declare-fun temp1002_124 () (_ BitVec 64))
(declare-fun temp1002_126 () (_ BitVec 64))
(declare-fun temp1002_127 () (_ BitVec 64))
(declare-fun temp1002_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp1002_128 () (_ BitVec 64))
(declare-fun temp1002_129 () (_ BitVec 64))
(declare-fun temp1002_131 () (_ BitVec 64))
(declare-fun temp1002_132 () (_ BitVec 64))
(declare-fun temp1002_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp1002_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp1002_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp1002_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp1002_136 () (_ BitVec 64))
(declare-fun temp1002_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp1002_139 () (_ BitVec 64))
(declare-fun temp1002_140 () (_ BitVec 64))
(declare-fun temp1002_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp1002_141 () (_ BitVec 64))
(declare-fun temp1002_143 () (_ BitVec 64))
(declare-fun temp1002_144 () (_ BitVec 64))
(declare-fun temp1002_142 () (_ BitVec 64))
(declare-fun temp1002_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp1002_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp1002_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp1002_148 () (_ BitVec 64))
(declare-fun temp1002_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp1002_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp1002_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp1002_152 () (_ BitVec 64))
(assert (= temp1002_1 #x0000000000000002))
(assert (= var989741 temp1002_1))
(assert (= temp1002_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp1002_2)))
(assert (= temp1002_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp1002_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp1002_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp1002_4)))
(assert (= temp1002_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp1002_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp1002_6 #x0000000000000000))
(assert (= var989776 temp1002_6))
(assert (= temp1002_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp1002_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1002_8 #x0000000000000001))
(assert (= var989810 temp1002_8))
(assert (= temp1002_10 #x0000000000000000))
(assert (= temp1002_9 temp1002_10))
(assert (= temp1002_12 #x0000000000000002))
(assert (= temp1002_11 temp1002_12))
(assert (= temp1002_13 #x0000000000000000))
(assert (= var1387902 temp1002_13))
(assert (= temp1002_14 #x0000000000000001))
(assert (= var1387923 temp1002_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp1002_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp1002_15)))
(assert (= temp1002_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1002_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1002_17 #x0000000000000000))
(assert (= var1521661 temp1002_17))
(assert (= temp1002_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp1002_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1002_19 #x0000000000000000))
(assert (= var1521706 temp1002_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp1002_20 #x0000000000000000))
(assert (= temp1002_21 temp1002_20))
(assert (= temp1002_22 (select ARGNAME_padding_NAMEEND_VAL temp1002_21)))
(assert (= temp1002_23 #x0000000000000001))
(assert (= temp1002_24 temp1002_23))
(assert (= temp1002_25 (select ARGNAME_padding_NAMEEND_VAL temp1002_24)))
(assert (= temp1002_26 #x0000000000000002))
(assert (= temp1002_27 temp1002_26))
(assert (= temp1002_28 (select ARGNAME_padding_NAMEEND_VAL temp1002_27)))
(assert (= temp1002_29 #x0000000000000003))
(assert (= temp1002_30 temp1002_29))
(assert (= temp1002_31 (select ARGNAME_padding_NAMEEND_VAL temp1002_30)))
(assert (= temp1002_32 #x0000000000000004))
(assert (= temp1002_33 temp1002_32))
(assert (= temp1002_34 (select ARGNAME_padding_NAMEEND_VAL temp1002_33)))
(assert (= temp1002_35 #x0000000000000005))
(assert (= temp1002_36 temp1002_35))
(assert (= temp1002_37 (select ARGNAME_padding_NAMEEND_VAL temp1002_36)))
(assert (= temp1002_38 #x0000000000000000))
(assert (= temp1002_39 #x0000000000000000))
(assert (= temp1002_40 temp1002_39))
(assert (= temp1002_41 (select ARGNAME_padding_NAMEEND_VAL temp1002_40)))
(assert (= temp1002_42 #x0000000000000000))
(assert (= temp1002_43 #x0000000000000001))
(assert (= temp1002_44 temp1002_43))
(assert (= temp1002_45 (select ARGNAME_padding_NAMEEND_VAL temp1002_44)))
(assert (= temp1002_46 #x0000000000000000))
(assert (= temp1002_47 #x0000000000000002))
(assert (= temp1002_48 temp1002_47))
(assert (= temp1002_49 (select ARGNAME_padding_NAMEEND_VAL temp1002_48)))
(assert (= temp1002_50 #x0000000000000000))
(assert (= temp1002_51 #x0000000000000003))
(assert (= temp1002_52 temp1002_51))
(assert (= temp1002_53 (select ARGNAME_padding_NAMEEND_VAL temp1002_52)))
(assert (= temp1002_54 #x0000000000000000))
(assert (= temp1002_55 #x0000000000000004))
(assert (= temp1002_56 temp1002_55))
(assert (= temp1002_57 (select ARGNAME_padding_NAMEEND_VAL temp1002_56)))
(assert (= temp1002_58 #x0000000000000000))
(assert (= temp1002_59 #x0000000000000005))
(assert (= temp1002_60 temp1002_59))
(assert (= temp1002_61 (select ARGNAME_padding_NAMEEND_VAL temp1002_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp1002_41 temp1002_38)
             (bvslt temp1002_45 temp1002_42)
             (bvslt temp1002_49 temp1002_46)
             (bvslt temp1002_53 temp1002_50)
             (bvslt temp1002_57 temp1002_54)
             (bvslt temp1002_61 temp1002_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1002_62 #x0000000000000000))
(assert (= var2240290 temp1002_62))
(assert (= temp1002_63 #x0000000000000000))
(assert (= temp1002_64 temp1002_63))
(assert (= temp1002_65 (select ARGNAME_stride_NAMEEND_VAL temp1002_64)))
(assert (= temp1002_66 #x0000000000000001))
(assert (= temp1002_67 temp1002_66))
(assert (= temp1002_68 (select ARGNAME_stride_NAMEEND_VAL temp1002_67)))
(assert (= temp1002_69 #x0000000000000002))
(assert (= temp1002_70 temp1002_69))
(assert (= temp1002_71 (select ARGNAME_stride_NAMEEND_VAL temp1002_70)))
(assert (= temp1002_72 #x0000000000000003))
(assert (= temp1002_73 temp1002_72))
(assert (= temp1002_74 (select ARGNAME_stride_NAMEEND_VAL temp1002_73)))
(assert (= temp1002_75 #x0000000000000004))
(assert (= temp1002_76 temp1002_75))
(assert (= temp1002_77 (select ARGNAME_stride_NAMEEND_VAL temp1002_76)))
(assert (= temp1002_78 #x0000000000000005))
(assert (= temp1002_79 temp1002_78))
(assert (= temp1002_80 (select ARGNAME_stride_NAMEEND_VAL temp1002_79)))
(assert (= temp1002_81 #x0000000000000000))
(assert (= temp1002_82 #x0000000000000000))
(assert (= temp1002_83 temp1002_82))
(assert (= temp1002_84 (select ARGNAME_stride_NAMEEND_VAL temp1002_83)))
(assert (= temp1002_85 #x0000000000000000))
(assert (= temp1002_86 #x0000000000000001))
(assert (= temp1002_87 temp1002_86))
(assert (= temp1002_88 (select ARGNAME_stride_NAMEEND_VAL temp1002_87)))
(assert (= temp1002_89 #x0000000000000000))
(assert (= temp1002_90 #x0000000000000002))
(assert (= temp1002_91 temp1002_90))
(assert (= temp1002_92 (select ARGNAME_stride_NAMEEND_VAL temp1002_91)))
(assert (= temp1002_93 #x0000000000000000))
(assert (= temp1002_94 #x0000000000000003))
(assert (= temp1002_95 temp1002_94))
(assert (= temp1002_96 (select ARGNAME_stride_NAMEEND_VAL temp1002_95)))
(assert (= temp1002_97 #x0000000000000000))
(assert (= temp1002_98 #x0000000000000004))
(assert (= temp1002_99 temp1002_98))
(assert (= temp1002_100 (select ARGNAME_stride_NAMEEND_VAL temp1002_99)))
(assert (= temp1002_101 #x0000000000000000))
(assert (= temp1002_102 #x0000000000000005))
(assert (= temp1002_103 temp1002_102))
(assert (= temp1002_104 (select ARGNAME_stride_NAMEEND_VAL temp1002_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp1002_84 temp1002_81)
             (bvsle temp1002_88 temp1002_85)
             (bvsle temp1002_92 temp1002_89)
             (bvsle temp1002_96 temp1002_93)
             (bvsle temp1002_100 temp1002_97)
             (bvsle temp1002_104 temp1002_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1002_105 #x0000000000000000))
(assert (= var2240311 temp1002_105))
(assert (= temp1002_106 #x0000000000000000))
(assert (= var2228402 temp1002_106))
(assert (= temp1002_107 #x0000000000000000))
(assert (= temp1002_108 temp1002_107))
(assert (= temp1002_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1002_108)))
(assert (= temp1002_110 #x0000000000000001))
(assert (= temp1002_111 temp1002_110))
(assert (= temp1002_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1002_111)))
(assert (= temp1002_113 #x0000000000000002))
(assert (= temp1002_114 temp1002_113))
(assert (= temp1002_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1002_114)))
(assert (= temp1002_116 #x0000000000000003))
(assert (= temp1002_117 temp1002_116))
(assert (= temp1002_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1002_117)))
(assert (= temp1002_119 #x0000000000000004))
(assert (= temp1002_120 temp1002_119))
(assert (= temp1002_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1002_120)))
(assert (= temp1002_122 #x0000000000000005))
(assert (= temp1002_123 temp1002_122))
(assert (= temp1002_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1002_123)))
(assert (= temp1002_126 var2228402))
(assert (= temp1002_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1002_126)))
(assert (= temp1002_125 temp1002_127))
(assert (= var2240356
   (ite (bvslt temp1002_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1002_128 #x0000000000000000))
(assert (= var2240356 temp1002_128))
(assert (= temp1002_129 #x0000000000000000))
(assert (= var2228402 temp1002_129))
(assert (= temp1002_131 var2228402))
(assert (= temp1002_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1002_131)))
(assert (= temp1002_130 temp1002_132))
(assert (= var2240378 (bvsmod temp1002_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1002_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp1002_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1002_134 #x0000000000000001))
(assert (= var2240379 temp1002_134))
(assert (= var2240398 var2240288))
(assert (= temp1002_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp1002_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1002_136 #x0000000000000001))
(assert (= var2240399 temp1002_136))
(assert (= temp1002_137 #x0000000000000001))
(assert (= var2229290 temp1002_137))
(assert (= temp1002_139 var2229290))
(assert (= temp1002_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1002_139)))
(assert (= temp1002_138 temp1002_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp1002_138)))
(assert (= temp1002_141 #x0000000000000000))
(assert (= var2228402 temp1002_141))
(assert (= temp1002_143 var2228402))
(assert (= temp1002_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1002_143)))
(assert (= temp1002_142 temp1002_144))
(assert (= temp1002_145 #x0000000000000002))
(assert (= var2503529 temp1002_145))
(assert (= temp1002_146 #x0000000000000001))
(assert (= var2240569 temp1002_146))
(assert (= temp1002_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1002_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1002_148 #x0000000000000001))
(assert (= var1521778 temp1002_148))
(assert (= temp1002_149 #x0000000000000001))
(assert (= var1521908 temp1002_149))
(assert (= var4010473 var1521908))
(assert (= temp1002_150 #x0000000000000000))
(assert (= var4210495 temp1002_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp1002_151 #x0000000000000002))
(assert (= var4339331 temp1002_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp1002_152 #x0000000000000001))
(assert (= var1521778 temp1002_152))
(model-add temp1002_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp1002_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp1002_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1002_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp1002_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1002_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






