(declare-fun temp83_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp83_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp83_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp83_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp83_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp83_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp83_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp83_8 () (_ BitVec 64))
(declare-fun temp83_10 () (_ BitVec 64))
(declare-fun temp83_9 () (_ BitVec 64))
(declare-fun temp83_12 () (_ BitVec 64))
(declare-fun temp83_11 () (_ BitVec 64))
(declare-fun temp83_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp83_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp83_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp83_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp83_17 () (_ BitVec 64))
(declare-fun temp83_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp83_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp83_20 () (_ BitVec 64))
(declare-fun temp83_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp83_22 () (_ BitVec 64))
(declare-fun temp83_23 () (_ BitVec 64))
(declare-fun temp83_24 () (_ BitVec 64))
(declare-fun temp83_25 () (_ BitVec 64))
(declare-fun temp83_26 () (_ BitVec 64))
(declare-fun temp83_27 () (_ BitVec 64))
(declare-fun temp83_28 () (_ BitVec 64))
(declare-fun temp83_29 () (_ BitVec 64))
(declare-fun temp83_30 () (_ BitVec 64))
(declare-fun temp83_31 () (_ BitVec 64))
(declare-fun temp83_32 () (_ BitVec 64))
(declare-fun temp83_33 () (_ BitVec 64))
(declare-fun temp83_34 () (_ BitVec 64))
(declare-fun temp83_35 () (_ BitVec 64))
(declare-fun temp83_36 () (_ BitVec 64))
(declare-fun temp83_37 () (_ BitVec 64))
(declare-fun temp83_38 () (_ BitVec 64))
(declare-fun temp83_39 () (_ BitVec 64))
(declare-fun temp83_40 () (_ BitVec 64))
(declare-fun temp83_41 () (_ BitVec 64))
(declare-fun temp83_42 () (_ BitVec 64))
(declare-fun temp83_43 () (_ BitVec 64))
(declare-fun temp83_44 () (_ BitVec 64))
(declare-fun temp83_45 () (_ BitVec 64))
(declare-fun temp83_46 () (_ BitVec 64))
(declare-fun temp83_47 () (_ BitVec 64))
(declare-fun temp83_48 () (_ BitVec 64))
(declare-fun temp83_49 () (_ BitVec 64))
(declare-fun temp83_50 () (_ BitVec 64))
(declare-fun temp83_51 () (_ BitVec 64))
(declare-fun temp83_52 () (_ BitVec 64))
(declare-fun temp83_53 () (_ BitVec 64))
(declare-fun temp83_54 () (_ BitVec 64))
(declare-fun temp83_55 () (_ BitVec 64))
(declare-fun temp83_56 () (_ BitVec 64))
(declare-fun temp83_57 () (_ BitVec 64))
(declare-fun temp83_58 () (_ BitVec 64))
(declare-fun temp83_59 () (_ BitVec 64))
(declare-fun temp83_60 () (_ BitVec 64))
(declare-fun temp83_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp83_62 () (_ BitVec 64))
(declare-fun temp83_63 () (_ BitVec 64))
(declare-fun temp83_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp83_65 () (_ BitVec 64))
(declare-fun temp83_66 () (_ BitVec 64))
(declare-fun temp83_67 () (_ BitVec 64))
(declare-fun temp83_68 () (_ BitVec 64))
(declare-fun temp83_69 () (_ BitVec 64))
(declare-fun temp83_70 () (_ BitVec 64))
(declare-fun temp83_71 () (_ BitVec 64))
(declare-fun temp83_72 () (_ BitVec 64))
(declare-fun temp83_73 () (_ BitVec 64))
(declare-fun temp83_74 () (_ BitVec 64))
(declare-fun temp83_75 () (_ BitVec 64))
(declare-fun temp83_76 () (_ BitVec 64))
(declare-fun temp83_77 () (_ BitVec 64))
(declare-fun temp83_78 () (_ BitVec 64))
(declare-fun temp83_79 () (_ BitVec 64))
(declare-fun temp83_80 () (_ BitVec 64))
(declare-fun temp83_81 () (_ BitVec 64))
(declare-fun temp83_82 () (_ BitVec 64))
(declare-fun temp83_83 () (_ BitVec 64))
(declare-fun temp83_84 () (_ BitVec 64))
(declare-fun temp83_85 () (_ BitVec 64))
(declare-fun temp83_86 () (_ BitVec 64))
(declare-fun temp83_87 () (_ BitVec 64))
(declare-fun temp83_88 () (_ BitVec 64))
(declare-fun temp83_89 () (_ BitVec 64))
(declare-fun temp83_90 () (_ BitVec 64))
(declare-fun temp83_91 () (_ BitVec 64))
(declare-fun temp83_92 () (_ BitVec 64))
(declare-fun temp83_93 () (_ BitVec 64))
(declare-fun temp83_94 () (_ BitVec 64))
(declare-fun temp83_95 () (_ BitVec 64))
(declare-fun temp83_96 () (_ BitVec 64))
(declare-fun temp83_97 () (_ BitVec 64))
(declare-fun temp83_98 () (_ BitVec 64))
(declare-fun temp83_99 () (_ BitVec 64))
(declare-fun temp83_100 () (_ BitVec 64))
(declare-fun temp83_101 () (_ BitVec 64))
(declare-fun temp83_102 () (_ BitVec 64))
(declare-fun temp83_103 () (_ BitVec 64))
(declare-fun temp83_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp83_105 () (_ BitVec 64))
(declare-fun temp83_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp83_107 () (_ BitVec 64))
(declare-fun temp83_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp83_109 () (_ BitVec 64))
(declare-fun temp83_110 () (_ BitVec 64))
(declare-fun temp83_111 () (_ BitVec 64))
(declare-fun temp83_112 () (_ BitVec 64))
(declare-fun temp83_113 () (_ BitVec 64))
(declare-fun temp83_114 () (_ BitVec 64))
(declare-fun temp83_115 () (_ BitVec 64))
(declare-fun temp83_116 () (_ BitVec 64))
(declare-fun temp83_117 () (_ BitVec 64))
(declare-fun temp83_118 () (_ BitVec 64))
(declare-fun temp83_119 () (_ BitVec 64))
(declare-fun temp83_120 () (_ BitVec 64))
(declare-fun temp83_121 () (_ BitVec 64))
(declare-fun temp83_122 () (_ BitVec 64))
(declare-fun temp83_123 () (_ BitVec 64))
(declare-fun temp83_124 () (_ BitVec 64))
(declare-fun temp83_126 () (_ BitVec 64))
(declare-fun temp83_127 () (_ BitVec 64))
(declare-fun temp83_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp83_128 () (_ BitVec 64))
(declare-fun temp83_129 () (_ BitVec 64))
(declare-fun temp83_131 () (_ BitVec 64))
(declare-fun temp83_132 () (_ BitVec 64))
(declare-fun temp83_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp83_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp83_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp83_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp83_136 () (_ BitVec 64))
(declare-fun temp83_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp83_139 () (_ BitVec 64))
(declare-fun temp83_140 () (_ BitVec 64))
(declare-fun temp83_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp83_141 () (_ BitVec 64))
(declare-fun temp83_143 () (_ BitVec 64))
(declare-fun temp83_144 () (_ BitVec 64))
(declare-fun temp83_142 () (_ BitVec 64))
(declare-fun temp83_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp83_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp83_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp83_148 () (_ BitVec 64))
(declare-fun temp83_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp83_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp83_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var1522214 () (_ BitVec 64))
(declare-fun temp83_152 () (_ BitVec 64))
(declare-fun var1522215 () (_ BitVec 64))
(declare-fun temp83_154 () (_ BitVec 64))
(declare-fun temp83_153 () (_ BitVec 64))
(declare-fun temp83_155 () (_ BitVec 64))
(declare-fun var6229482 () (_ BitVec 64))
(declare-fun temp83_157 () (_ BitVec 64))
(declare-fun temp83_156 () (_ BitVec 64))
(declare-fun temp83_158 () (_ BitVec 64))
(assert (= temp83_1 #x0000000000000002))
(assert (= var989741 temp83_1))
(assert (= temp83_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp83_2)))
(assert (= temp83_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp83_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp83_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp83_4)))
(assert (= temp83_5 #x0000000000000000))
(assert (= var989775 (ite (= var989774 temp83_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp83_6 #x0000000000000000))
(assert (= var989776 temp83_6))
(assert (= temp83_7 #x0000000000000000))
(assert (= var989810 (ite (= var989773 temp83_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp83_8 #x0000000000000001))
(assert (= var989810 temp83_8))
(assert (= temp83_10 #x0000000000000000))
(assert (= temp83_9 temp83_10))
(assert (= temp83_12 #x0000000000000002))
(assert (= temp83_11 temp83_12))
(assert (= temp83_13 #x0000000000000000))
(assert (= var1387902 temp83_13))
(assert (= temp83_14 #x0000000000000001))
(assert (= var1387923 temp83_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp83_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp83_15)))
(assert (= temp83_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp83_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp83_17 #x0000000000000000))
(assert (= var1521661 temp83_17))
(assert (= temp83_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp83_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp83_19 #x0000000000000000))
(assert (= var1521706 temp83_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp83_20 #x0000000000000000))
(assert (= temp83_21 temp83_20))
(assert (= temp83_22 (select ARGNAME_padding_NAMEEND_VAL temp83_21)))
(assert (= temp83_23 #x0000000000000001))
(assert (= temp83_24 temp83_23))
(assert (= temp83_25 (select ARGNAME_padding_NAMEEND_VAL temp83_24)))
(assert (= temp83_26 #x0000000000000002))
(assert (= temp83_27 temp83_26))
(assert (= temp83_28 (select ARGNAME_padding_NAMEEND_VAL temp83_27)))
(assert (= temp83_29 #x0000000000000003))
(assert (= temp83_30 temp83_29))
(assert (= temp83_31 (select ARGNAME_padding_NAMEEND_VAL temp83_30)))
(assert (= temp83_32 #x0000000000000004))
(assert (= temp83_33 temp83_32))
(assert (= temp83_34 (select ARGNAME_padding_NAMEEND_VAL temp83_33)))
(assert (= temp83_35 #x0000000000000005))
(assert (= temp83_36 temp83_35))
(assert (= temp83_37 (select ARGNAME_padding_NAMEEND_VAL temp83_36)))
(assert (= temp83_38 #x0000000000000000))
(assert (= temp83_39 #x0000000000000000))
(assert (= temp83_40 temp83_39))
(assert (= temp83_41 (select ARGNAME_padding_NAMEEND_VAL temp83_40)))
(assert (= temp83_42 #x0000000000000000))
(assert (= temp83_43 #x0000000000000001))
(assert (= temp83_44 temp83_43))
(assert (= temp83_45 (select ARGNAME_padding_NAMEEND_VAL temp83_44)))
(assert (= temp83_46 #x0000000000000000))
(assert (= temp83_47 #x0000000000000002))
(assert (= temp83_48 temp83_47))
(assert (= temp83_49 (select ARGNAME_padding_NAMEEND_VAL temp83_48)))
(assert (= temp83_50 #x0000000000000000))
(assert (= temp83_51 #x0000000000000003))
(assert (= temp83_52 temp83_51))
(assert (= temp83_53 (select ARGNAME_padding_NAMEEND_VAL temp83_52)))
(assert (= temp83_54 #x0000000000000000))
(assert (= temp83_55 #x0000000000000004))
(assert (= temp83_56 temp83_55))
(assert (= temp83_57 (select ARGNAME_padding_NAMEEND_VAL temp83_56)))
(assert (= temp83_58 #x0000000000000000))
(assert (= temp83_59 #x0000000000000005))
(assert (= temp83_60 temp83_59))
(assert (= temp83_61 (select ARGNAME_padding_NAMEEND_VAL temp83_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp83_41 temp83_38)
             (bvslt temp83_45 temp83_42)
             (bvslt temp83_49 temp83_46)
             (bvslt temp83_53 temp83_50)
             (bvslt temp83_57 temp83_54)
             (bvslt temp83_61 temp83_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp83_62 #x0000000000000000))
(assert (= var2240290 temp83_62))
(assert (= temp83_63 #x0000000000000000))
(assert (= temp83_64 temp83_63))
(assert (= temp83_65 (select ARGNAME_stride_NAMEEND_VAL temp83_64)))
(assert (= temp83_66 #x0000000000000001))
(assert (= temp83_67 temp83_66))
(assert (= temp83_68 (select ARGNAME_stride_NAMEEND_VAL temp83_67)))
(assert (= temp83_69 #x0000000000000002))
(assert (= temp83_70 temp83_69))
(assert (= temp83_71 (select ARGNAME_stride_NAMEEND_VAL temp83_70)))
(assert (= temp83_72 #x0000000000000003))
(assert (= temp83_73 temp83_72))
(assert (= temp83_74 (select ARGNAME_stride_NAMEEND_VAL temp83_73)))
(assert (= temp83_75 #x0000000000000004))
(assert (= temp83_76 temp83_75))
(assert (= temp83_77 (select ARGNAME_stride_NAMEEND_VAL temp83_76)))
(assert (= temp83_78 #x0000000000000005))
(assert (= temp83_79 temp83_78))
(assert (= temp83_80 (select ARGNAME_stride_NAMEEND_VAL temp83_79)))
(assert (= temp83_81 #x0000000000000000))
(assert (= temp83_82 #x0000000000000000))
(assert (= temp83_83 temp83_82))
(assert (= temp83_84 (select ARGNAME_stride_NAMEEND_VAL temp83_83)))
(assert (= temp83_85 #x0000000000000000))
(assert (= temp83_86 #x0000000000000001))
(assert (= temp83_87 temp83_86))
(assert (= temp83_88 (select ARGNAME_stride_NAMEEND_VAL temp83_87)))
(assert (= temp83_89 #x0000000000000000))
(assert (= temp83_90 #x0000000000000002))
(assert (= temp83_91 temp83_90))
(assert (= temp83_92 (select ARGNAME_stride_NAMEEND_VAL temp83_91)))
(assert (= temp83_93 #x0000000000000000))
(assert (= temp83_94 #x0000000000000003))
(assert (= temp83_95 temp83_94))
(assert (= temp83_96 (select ARGNAME_stride_NAMEEND_VAL temp83_95)))
(assert (= temp83_97 #x0000000000000000))
(assert (= temp83_98 #x0000000000000004))
(assert (= temp83_99 temp83_98))
(assert (= temp83_100 (select ARGNAME_stride_NAMEEND_VAL temp83_99)))
(assert (= temp83_101 #x0000000000000000))
(assert (= temp83_102 #x0000000000000005))
(assert (= temp83_103 temp83_102))
(assert (= temp83_104 (select ARGNAME_stride_NAMEEND_VAL temp83_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp83_84 temp83_81)
             (bvsle temp83_88 temp83_85)
             (bvsle temp83_92 temp83_89)
             (bvsle temp83_96 temp83_93)
             (bvsle temp83_100 temp83_97)
             (bvsle temp83_104 temp83_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp83_105 #x0000000000000000))
(assert (= var2240311 temp83_105))
(assert (= temp83_106 #x0000000000000000))
(assert (= var2228402 temp83_106))
(assert (= temp83_107 #x0000000000000000))
(assert (= temp83_108 temp83_107))
(assert (= temp83_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp83_108)))
(assert (= temp83_110 #x0000000000000001))
(assert (= temp83_111 temp83_110))
(assert (= temp83_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp83_111)))
(assert (= temp83_113 #x0000000000000002))
(assert (= temp83_114 temp83_113))
(assert (= temp83_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp83_114)))
(assert (= temp83_116 #x0000000000000003))
(assert (= temp83_117 temp83_116))
(assert (= temp83_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp83_117)))
(assert (= temp83_119 #x0000000000000004))
(assert (= temp83_120 temp83_119))
(assert (= temp83_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp83_120)))
(assert (= temp83_122 #x0000000000000005))
(assert (= temp83_123 temp83_122))
(assert (= temp83_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp83_123)))
(assert (= temp83_126 var2228402))
(assert (= temp83_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp83_126)))
(assert (= temp83_125 temp83_127))
(assert (= var2240356
   (ite (bvslt temp83_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp83_128 #x0000000000000000))
(assert (= var2240356 temp83_128))
(assert (= temp83_129 #x0000000000000000))
(assert (= var2228402 temp83_129))
(assert (= temp83_131 var2228402))
(assert (= temp83_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp83_131)))
(assert (= temp83_130 temp83_132))
(assert (= var2240378 (bvsmod temp83_130 ARGNAME_groups_NAMEEND)))
(assert (= temp83_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp83_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp83_134 #x0000000000000001))
(assert (= var2240379 temp83_134))
(assert (= var2240398 var2240288))
(assert (= temp83_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp83_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp83_136 #x0000000000000001))
(assert (= var2240399 temp83_136))
(assert (= temp83_137 #x0000000000000001))
(assert (= var2229290 temp83_137))
(assert (= temp83_139 var2229290))
(assert (= temp83_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp83_139)))
(assert (= temp83_138 temp83_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp83_138)))
(assert (= temp83_141 #x0000000000000000))
(assert (= var2228402 temp83_141))
(assert (= temp83_143 var2228402))
(assert (= temp83_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp83_143)))
(assert (= temp83_142 temp83_144))
(assert (= temp83_145 #x0000000000000002))
(assert (= var2503529 temp83_145))
(assert (= temp83_146 #x0000000000000001))
(assert (= var2240569 temp83_146))
(assert (= temp83_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp83_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp83_148 #x0000000000000001))
(assert (= var1521778 temp83_148))
(assert (= temp83_149 #x0000000000000001))
(assert (= var1521908 temp83_149))
(assert (= var4010473 var1521908))
(assert (= temp83_150 #x0000000000000000))
(assert (= var4210495 temp83_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp83_151 #x0000000000000002))
(assert (= var4339331 temp83_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4796816 var1521921))
(assert (= var1522214 var1521633))
(assert (= temp83_152 #x0000000000000000))
(assert (= var1522215
   (ite (distinct var1522214 temp83_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp83_154 #x0000000000000001))
(assert (= temp83_153 temp83_154))
(assert (= temp83_155 #x0000000000000001))
(assert (= var6229482 temp83_155))
(assert (= temp83_157 #xffffffffffffffff))
(assert (= temp83_156 temp83_157))
(assert (= temp83_158 #x0000000000000001))
(assert (= var1521778 temp83_158))
(model-add temp83_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp83_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp83_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp83_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp83_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp83_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






