(declare-fun temp86_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp86_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp86_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp86_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp86_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp86_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp86_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp86_8 () (_ BitVec 64))
(declare-fun temp86_10 () (_ BitVec 64))
(declare-fun temp86_9 () (_ BitVec 64))
(declare-fun temp86_12 () (_ BitVec 64))
(declare-fun temp86_11 () (_ BitVec 64))
(declare-fun temp86_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp86_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp86_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp86_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp86_17 () (_ BitVec 64))
(declare-fun temp86_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp86_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp86_20 () (_ BitVec 64))
(declare-fun temp86_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp86_22 () (_ BitVec 64))
(declare-fun temp86_23 () (_ BitVec 64))
(declare-fun temp86_24 () (_ BitVec 64))
(declare-fun temp86_25 () (_ BitVec 64))
(declare-fun temp86_26 () (_ BitVec 64))
(declare-fun temp86_27 () (_ BitVec 64))
(declare-fun temp86_28 () (_ BitVec 64))
(declare-fun temp86_29 () (_ BitVec 64))
(declare-fun temp86_30 () (_ BitVec 64))
(declare-fun temp86_31 () (_ BitVec 64))
(declare-fun temp86_32 () (_ BitVec 64))
(declare-fun temp86_33 () (_ BitVec 64))
(declare-fun temp86_34 () (_ BitVec 64))
(declare-fun temp86_35 () (_ BitVec 64))
(declare-fun temp86_36 () (_ BitVec 64))
(declare-fun temp86_37 () (_ BitVec 64))
(declare-fun temp86_38 () (_ BitVec 64))
(declare-fun temp86_39 () (_ BitVec 64))
(declare-fun temp86_40 () (_ BitVec 64))
(declare-fun temp86_41 () (_ BitVec 64))
(declare-fun temp86_42 () (_ BitVec 64))
(declare-fun temp86_43 () (_ BitVec 64))
(declare-fun temp86_44 () (_ BitVec 64))
(declare-fun temp86_45 () (_ BitVec 64))
(declare-fun temp86_46 () (_ BitVec 64))
(declare-fun temp86_47 () (_ BitVec 64))
(declare-fun temp86_48 () (_ BitVec 64))
(declare-fun temp86_49 () (_ BitVec 64))
(declare-fun temp86_50 () (_ BitVec 64))
(declare-fun temp86_51 () (_ BitVec 64))
(declare-fun temp86_52 () (_ BitVec 64))
(declare-fun temp86_53 () (_ BitVec 64))
(declare-fun temp86_54 () (_ BitVec 64))
(declare-fun temp86_55 () (_ BitVec 64))
(declare-fun temp86_56 () (_ BitVec 64))
(declare-fun temp86_57 () (_ BitVec 64))
(declare-fun temp86_58 () (_ BitVec 64))
(declare-fun temp86_59 () (_ BitVec 64))
(declare-fun temp86_60 () (_ BitVec 64))
(declare-fun temp86_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp86_62 () (_ BitVec 64))
(declare-fun temp86_63 () (_ BitVec 64))
(declare-fun temp86_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp86_65 () (_ BitVec 64))
(declare-fun temp86_66 () (_ BitVec 64))
(declare-fun temp86_67 () (_ BitVec 64))
(declare-fun temp86_68 () (_ BitVec 64))
(declare-fun temp86_69 () (_ BitVec 64))
(declare-fun temp86_70 () (_ BitVec 64))
(declare-fun temp86_71 () (_ BitVec 64))
(declare-fun temp86_72 () (_ BitVec 64))
(declare-fun temp86_73 () (_ BitVec 64))
(declare-fun temp86_74 () (_ BitVec 64))
(declare-fun temp86_75 () (_ BitVec 64))
(declare-fun temp86_76 () (_ BitVec 64))
(declare-fun temp86_77 () (_ BitVec 64))
(declare-fun temp86_78 () (_ BitVec 64))
(declare-fun temp86_79 () (_ BitVec 64))
(declare-fun temp86_80 () (_ BitVec 64))
(declare-fun temp86_81 () (_ BitVec 64))
(declare-fun temp86_82 () (_ BitVec 64))
(declare-fun temp86_83 () (_ BitVec 64))
(declare-fun temp86_84 () (_ BitVec 64))
(declare-fun temp86_85 () (_ BitVec 64))
(declare-fun temp86_86 () (_ BitVec 64))
(declare-fun temp86_87 () (_ BitVec 64))
(declare-fun temp86_88 () (_ BitVec 64))
(declare-fun temp86_89 () (_ BitVec 64))
(declare-fun temp86_90 () (_ BitVec 64))
(declare-fun temp86_91 () (_ BitVec 64))
(declare-fun temp86_92 () (_ BitVec 64))
(declare-fun temp86_93 () (_ BitVec 64))
(declare-fun temp86_94 () (_ BitVec 64))
(declare-fun temp86_95 () (_ BitVec 64))
(declare-fun temp86_96 () (_ BitVec 64))
(declare-fun temp86_97 () (_ BitVec 64))
(declare-fun temp86_98 () (_ BitVec 64))
(declare-fun temp86_99 () (_ BitVec 64))
(declare-fun temp86_100 () (_ BitVec 64))
(declare-fun temp86_101 () (_ BitVec 64))
(declare-fun temp86_102 () (_ BitVec 64))
(declare-fun temp86_103 () (_ BitVec 64))
(declare-fun temp86_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp86_105 () (_ BitVec 64))
(declare-fun temp86_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp86_107 () (_ BitVec 64))
(declare-fun temp86_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp86_109 () (_ BitVec 64))
(declare-fun temp86_110 () (_ BitVec 64))
(declare-fun temp86_111 () (_ BitVec 64))
(declare-fun temp86_112 () (_ BitVec 64))
(declare-fun temp86_113 () (_ BitVec 64))
(declare-fun temp86_114 () (_ BitVec 64))
(declare-fun temp86_115 () (_ BitVec 64))
(declare-fun temp86_116 () (_ BitVec 64))
(declare-fun temp86_117 () (_ BitVec 64))
(declare-fun temp86_118 () (_ BitVec 64))
(declare-fun temp86_119 () (_ BitVec 64))
(declare-fun temp86_120 () (_ BitVec 64))
(declare-fun temp86_121 () (_ BitVec 64))
(declare-fun temp86_122 () (_ BitVec 64))
(declare-fun temp86_123 () (_ BitVec 64))
(declare-fun temp86_124 () (_ BitVec 64))
(declare-fun temp86_126 () (_ BitVec 64))
(declare-fun temp86_127 () (_ BitVec 64))
(declare-fun temp86_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp86_128 () (_ BitVec 64))
(declare-fun temp86_129 () (_ BitVec 64))
(declare-fun temp86_131 () (_ BitVec 64))
(declare-fun temp86_132 () (_ BitVec 64))
(declare-fun temp86_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp86_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp86_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp86_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp86_136 () (_ BitVec 64))
(declare-fun temp86_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp86_139 () (_ BitVec 64))
(declare-fun temp86_140 () (_ BitVec 64))
(declare-fun temp86_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp86_141 () (_ BitVec 64))
(declare-fun temp86_143 () (_ BitVec 64))
(declare-fun temp86_144 () (_ BitVec 64))
(declare-fun temp86_142 () (_ BitVec 64))
(declare-fun temp86_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp86_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp86_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp86_148 () (_ BitVec 64))
(declare-fun temp86_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp86_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp86_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var1522214 () (_ BitVec 64))
(declare-fun temp86_152 () (_ BitVec 64))
(declare-fun var1522215 () (_ BitVec 64))
(declare-fun temp86_154 () (_ BitVec 64))
(declare-fun temp86_153 () (_ BitVec 64))
(declare-fun temp86_155 () (_ BitVec 64))
(declare-fun var6229482 () (_ BitVec 64))
(declare-fun temp86_157 () (_ BitVec 64))
(declare-fun temp86_156 () (_ BitVec 64))
(declare-fun temp86_158 () (_ BitVec 64))
(assert (= temp86_1 #x0000000000000002))
(assert (= var989741 temp86_1))
(assert (= temp86_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp86_2)))
(assert (= temp86_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp86_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp86_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp86_4)))
(assert (= temp86_5 #x0000000000000000))
(assert (= var989775 (ite (= var989774 temp86_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp86_6 #x0000000000000000))
(assert (= var989776 temp86_6))
(assert (= temp86_7 #x0000000000000000))
(assert (= var989810 (ite (= var989773 temp86_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp86_8 #x0000000000000001))
(assert (= var989810 temp86_8))
(assert (= temp86_10 #x0000000000000000))
(assert (= temp86_9 temp86_10))
(assert (= temp86_12 #x0000000000000002))
(assert (= temp86_11 temp86_12))
(assert (= temp86_13 #x0000000000000000))
(assert (= var1387902 temp86_13))
(assert (= temp86_14 #x0000000000000001))
(assert (= var1387923 temp86_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp86_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp86_15)))
(assert (= temp86_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp86_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp86_17 #x0000000000000000))
(assert (= var1521661 temp86_17))
(assert (= temp86_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp86_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp86_19 #x0000000000000000))
(assert (= var1521706 temp86_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp86_20 #x0000000000000000))
(assert (= temp86_21 temp86_20))
(assert (= temp86_22 (select ARGNAME_padding_NAMEEND_VAL temp86_21)))
(assert (= temp86_23 #x0000000000000001))
(assert (= temp86_24 temp86_23))
(assert (= temp86_25 (select ARGNAME_padding_NAMEEND_VAL temp86_24)))
(assert (= temp86_26 #x0000000000000002))
(assert (= temp86_27 temp86_26))
(assert (= temp86_28 (select ARGNAME_padding_NAMEEND_VAL temp86_27)))
(assert (= temp86_29 #x0000000000000003))
(assert (= temp86_30 temp86_29))
(assert (= temp86_31 (select ARGNAME_padding_NAMEEND_VAL temp86_30)))
(assert (= temp86_32 #x0000000000000004))
(assert (= temp86_33 temp86_32))
(assert (= temp86_34 (select ARGNAME_padding_NAMEEND_VAL temp86_33)))
(assert (= temp86_35 #x0000000000000005))
(assert (= temp86_36 temp86_35))
(assert (= temp86_37 (select ARGNAME_padding_NAMEEND_VAL temp86_36)))
(assert (= temp86_38 #x0000000000000000))
(assert (= temp86_39 #x0000000000000000))
(assert (= temp86_40 temp86_39))
(assert (= temp86_41 (select ARGNAME_padding_NAMEEND_VAL temp86_40)))
(assert (= temp86_42 #x0000000000000000))
(assert (= temp86_43 #x0000000000000001))
(assert (= temp86_44 temp86_43))
(assert (= temp86_45 (select ARGNAME_padding_NAMEEND_VAL temp86_44)))
(assert (= temp86_46 #x0000000000000000))
(assert (= temp86_47 #x0000000000000002))
(assert (= temp86_48 temp86_47))
(assert (= temp86_49 (select ARGNAME_padding_NAMEEND_VAL temp86_48)))
(assert (= temp86_50 #x0000000000000000))
(assert (= temp86_51 #x0000000000000003))
(assert (= temp86_52 temp86_51))
(assert (= temp86_53 (select ARGNAME_padding_NAMEEND_VAL temp86_52)))
(assert (= temp86_54 #x0000000000000000))
(assert (= temp86_55 #x0000000000000004))
(assert (= temp86_56 temp86_55))
(assert (= temp86_57 (select ARGNAME_padding_NAMEEND_VAL temp86_56)))
(assert (= temp86_58 #x0000000000000000))
(assert (= temp86_59 #x0000000000000005))
(assert (= temp86_60 temp86_59))
(assert (= temp86_61 (select ARGNAME_padding_NAMEEND_VAL temp86_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp86_41 temp86_38)
             (bvslt temp86_45 temp86_42)
             (bvslt temp86_49 temp86_46)
             (bvslt temp86_53 temp86_50)
             (bvslt temp86_57 temp86_54)
             (bvslt temp86_61 temp86_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp86_62 #x0000000000000000))
(assert (= var2240290 temp86_62))
(assert (= temp86_63 #x0000000000000000))
(assert (= temp86_64 temp86_63))
(assert (= temp86_65 (select ARGNAME_stride_NAMEEND_VAL temp86_64)))
(assert (= temp86_66 #x0000000000000001))
(assert (= temp86_67 temp86_66))
(assert (= temp86_68 (select ARGNAME_stride_NAMEEND_VAL temp86_67)))
(assert (= temp86_69 #x0000000000000002))
(assert (= temp86_70 temp86_69))
(assert (= temp86_71 (select ARGNAME_stride_NAMEEND_VAL temp86_70)))
(assert (= temp86_72 #x0000000000000003))
(assert (= temp86_73 temp86_72))
(assert (= temp86_74 (select ARGNAME_stride_NAMEEND_VAL temp86_73)))
(assert (= temp86_75 #x0000000000000004))
(assert (= temp86_76 temp86_75))
(assert (= temp86_77 (select ARGNAME_stride_NAMEEND_VAL temp86_76)))
(assert (= temp86_78 #x0000000000000005))
(assert (= temp86_79 temp86_78))
(assert (= temp86_80 (select ARGNAME_stride_NAMEEND_VAL temp86_79)))
(assert (= temp86_81 #x0000000000000000))
(assert (= temp86_82 #x0000000000000000))
(assert (= temp86_83 temp86_82))
(assert (= temp86_84 (select ARGNAME_stride_NAMEEND_VAL temp86_83)))
(assert (= temp86_85 #x0000000000000000))
(assert (= temp86_86 #x0000000000000001))
(assert (= temp86_87 temp86_86))
(assert (= temp86_88 (select ARGNAME_stride_NAMEEND_VAL temp86_87)))
(assert (= temp86_89 #x0000000000000000))
(assert (= temp86_90 #x0000000000000002))
(assert (= temp86_91 temp86_90))
(assert (= temp86_92 (select ARGNAME_stride_NAMEEND_VAL temp86_91)))
(assert (= temp86_93 #x0000000000000000))
(assert (= temp86_94 #x0000000000000003))
(assert (= temp86_95 temp86_94))
(assert (= temp86_96 (select ARGNAME_stride_NAMEEND_VAL temp86_95)))
(assert (= temp86_97 #x0000000000000000))
(assert (= temp86_98 #x0000000000000004))
(assert (= temp86_99 temp86_98))
(assert (= temp86_100 (select ARGNAME_stride_NAMEEND_VAL temp86_99)))
(assert (= temp86_101 #x0000000000000000))
(assert (= temp86_102 #x0000000000000005))
(assert (= temp86_103 temp86_102))
(assert (= temp86_104 (select ARGNAME_stride_NAMEEND_VAL temp86_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp86_84 temp86_81)
             (bvsle temp86_88 temp86_85)
             (bvsle temp86_92 temp86_89)
             (bvsle temp86_96 temp86_93)
             (bvsle temp86_100 temp86_97)
             (bvsle temp86_104 temp86_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp86_105 #x0000000000000000))
(assert (= var2240311 temp86_105))
(assert (= temp86_106 #x0000000000000000))
(assert (= var2228402 temp86_106))
(assert (= temp86_107 #x0000000000000000))
(assert (= temp86_108 temp86_107))
(assert (= temp86_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp86_108)))
(assert (= temp86_110 #x0000000000000001))
(assert (= temp86_111 temp86_110))
(assert (= temp86_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp86_111)))
(assert (= temp86_113 #x0000000000000002))
(assert (= temp86_114 temp86_113))
(assert (= temp86_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp86_114)))
(assert (= temp86_116 #x0000000000000003))
(assert (= temp86_117 temp86_116))
(assert (= temp86_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp86_117)))
(assert (= temp86_119 #x0000000000000004))
(assert (= temp86_120 temp86_119))
(assert (= temp86_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp86_120)))
(assert (= temp86_122 #x0000000000000005))
(assert (= temp86_123 temp86_122))
(assert (= temp86_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp86_123)))
(assert (= temp86_126 var2228402))
(assert (= temp86_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp86_126)))
(assert (= temp86_125 temp86_127))
(assert (= var2240356
   (ite (bvslt temp86_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp86_128 #x0000000000000000))
(assert (= var2240356 temp86_128))
(assert (= temp86_129 #x0000000000000000))
(assert (= var2228402 temp86_129))
(assert (= temp86_131 var2228402))
(assert (= temp86_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp86_131)))
(assert (= temp86_130 temp86_132))
(assert (= var2240378 (bvsmod temp86_130 ARGNAME_groups_NAMEEND)))
(assert (= temp86_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp86_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp86_134 #x0000000000000001))
(assert (= var2240379 temp86_134))
(assert (= var2240398 var2240288))
(assert (= temp86_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp86_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp86_136 #x0000000000000001))
(assert (= var2240399 temp86_136))
(assert (= temp86_137 #x0000000000000001))
(assert (= var2229290 temp86_137))
(assert (= temp86_139 var2229290))
(assert (= temp86_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp86_139)))
(assert (= temp86_138 temp86_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp86_138)))
(assert (= temp86_141 #x0000000000000000))
(assert (= var2228402 temp86_141))
(assert (= temp86_143 var2228402))
(assert (= temp86_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp86_143)))
(assert (= temp86_142 temp86_144))
(assert (= temp86_145 #x0000000000000002))
(assert (= var2503529 temp86_145))
(assert (= temp86_146 #x0000000000000001))
(assert (= var2240569 temp86_146))
(assert (= temp86_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp86_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp86_148 #x0000000000000001))
(assert (= var1521778 temp86_148))
(assert (= temp86_149 #x0000000000000001))
(assert (= var1521908 temp86_149))
(assert (= var4010473 var1521908))
(assert (= temp86_150 #x0000000000000000))
(assert (= var4210495 temp86_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp86_151 #x0000000000000002))
(assert (= var4339331 temp86_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4796816 var1521921))
(assert (= var1522214 var1521633))
(assert (= temp86_152 #x0000000000000000))
(assert (= var1522215
   (ite (distinct var1522214 temp86_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp86_154 #x0000000000000001))
(assert (= temp86_153 temp86_154))
(assert (= temp86_155 #x0000000000000001))
(assert (= var6229482 temp86_155))
(assert (= temp86_157 #xffffffffffffffff))
(assert (= temp86_156 temp86_157))
(assert (= temp86_158 #x0000000000000001))
(assert (= var1521778 temp86_158))
(model-add temp86_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp86_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp86_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp86_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp86_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp86_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






