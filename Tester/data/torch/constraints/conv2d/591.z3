(declare-fun temp787_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp787_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp787_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp787_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp787_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp787_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp787_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp787_8 () (_ BitVec 64))
(declare-fun temp787_10 () (_ BitVec 64))
(declare-fun temp787_9 () (_ BitVec 64))
(declare-fun temp787_12 () (_ BitVec 64))
(declare-fun temp787_11 () (_ BitVec 64))
(declare-fun temp787_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp787_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp787_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp787_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp787_17 () (_ BitVec 64))
(declare-fun temp787_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp787_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp787_20 () (_ BitVec 64))
(declare-fun temp787_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp787_22 () (_ BitVec 64))
(declare-fun temp787_23 () (_ BitVec 64))
(declare-fun temp787_24 () (_ BitVec 64))
(declare-fun temp787_25 () (_ BitVec 64))
(declare-fun temp787_26 () (_ BitVec 64))
(declare-fun temp787_27 () (_ BitVec 64))
(declare-fun temp787_28 () (_ BitVec 64))
(declare-fun temp787_29 () (_ BitVec 64))
(declare-fun temp787_30 () (_ BitVec 64))
(declare-fun temp787_31 () (_ BitVec 64))
(declare-fun temp787_32 () (_ BitVec 64))
(declare-fun temp787_33 () (_ BitVec 64))
(declare-fun temp787_34 () (_ BitVec 64))
(declare-fun temp787_35 () (_ BitVec 64))
(declare-fun temp787_36 () (_ BitVec 64))
(declare-fun temp787_37 () (_ BitVec 64))
(declare-fun temp787_38 () (_ BitVec 64))
(declare-fun temp787_39 () (_ BitVec 64))
(declare-fun temp787_40 () (_ BitVec 64))
(declare-fun temp787_41 () (_ BitVec 64))
(declare-fun temp787_42 () (_ BitVec 64))
(declare-fun temp787_43 () (_ BitVec 64))
(declare-fun temp787_44 () (_ BitVec 64))
(declare-fun temp787_45 () (_ BitVec 64))
(declare-fun temp787_46 () (_ BitVec 64))
(declare-fun temp787_47 () (_ BitVec 64))
(declare-fun temp787_48 () (_ BitVec 64))
(declare-fun temp787_49 () (_ BitVec 64))
(declare-fun temp787_50 () (_ BitVec 64))
(declare-fun temp787_51 () (_ BitVec 64))
(declare-fun temp787_52 () (_ BitVec 64))
(declare-fun temp787_53 () (_ BitVec 64))
(declare-fun temp787_54 () (_ BitVec 64))
(declare-fun temp787_55 () (_ BitVec 64))
(declare-fun temp787_56 () (_ BitVec 64))
(declare-fun temp787_57 () (_ BitVec 64))
(declare-fun temp787_58 () (_ BitVec 64))
(declare-fun temp787_59 () (_ BitVec 64))
(declare-fun temp787_60 () (_ BitVec 64))
(declare-fun temp787_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp787_62 () (_ BitVec 64))
(declare-fun temp787_63 () (_ BitVec 64))
(declare-fun temp787_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp787_65 () (_ BitVec 64))
(declare-fun temp787_66 () (_ BitVec 64))
(declare-fun temp787_67 () (_ BitVec 64))
(declare-fun temp787_68 () (_ BitVec 64))
(declare-fun temp787_69 () (_ BitVec 64))
(declare-fun temp787_70 () (_ BitVec 64))
(declare-fun temp787_71 () (_ BitVec 64))
(declare-fun temp787_72 () (_ BitVec 64))
(declare-fun temp787_73 () (_ BitVec 64))
(declare-fun temp787_74 () (_ BitVec 64))
(declare-fun temp787_75 () (_ BitVec 64))
(declare-fun temp787_76 () (_ BitVec 64))
(declare-fun temp787_77 () (_ BitVec 64))
(declare-fun temp787_78 () (_ BitVec 64))
(declare-fun temp787_79 () (_ BitVec 64))
(declare-fun temp787_80 () (_ BitVec 64))
(declare-fun temp787_81 () (_ BitVec 64))
(declare-fun temp787_82 () (_ BitVec 64))
(declare-fun temp787_83 () (_ BitVec 64))
(declare-fun temp787_84 () (_ BitVec 64))
(declare-fun temp787_85 () (_ BitVec 64))
(declare-fun temp787_86 () (_ BitVec 64))
(declare-fun temp787_87 () (_ BitVec 64))
(declare-fun temp787_88 () (_ BitVec 64))
(declare-fun temp787_89 () (_ BitVec 64))
(declare-fun temp787_90 () (_ BitVec 64))
(declare-fun temp787_91 () (_ BitVec 64))
(declare-fun temp787_92 () (_ BitVec 64))
(declare-fun temp787_93 () (_ BitVec 64))
(declare-fun temp787_94 () (_ BitVec 64))
(declare-fun temp787_95 () (_ BitVec 64))
(declare-fun temp787_96 () (_ BitVec 64))
(declare-fun temp787_97 () (_ BitVec 64))
(declare-fun temp787_98 () (_ BitVec 64))
(declare-fun temp787_99 () (_ BitVec 64))
(declare-fun temp787_100 () (_ BitVec 64))
(declare-fun temp787_101 () (_ BitVec 64))
(declare-fun temp787_102 () (_ BitVec 64))
(declare-fun temp787_103 () (_ BitVec 64))
(declare-fun temp787_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp787_105 () (_ BitVec 64))
(declare-fun temp787_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp787_107 () (_ BitVec 64))
(declare-fun temp787_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp787_109 () (_ BitVec 64))
(declare-fun temp787_110 () (_ BitVec 64))
(declare-fun temp787_111 () (_ BitVec 64))
(declare-fun temp787_112 () (_ BitVec 64))
(declare-fun temp787_113 () (_ BitVec 64))
(declare-fun temp787_114 () (_ BitVec 64))
(declare-fun temp787_115 () (_ BitVec 64))
(declare-fun temp787_116 () (_ BitVec 64))
(declare-fun temp787_117 () (_ BitVec 64))
(declare-fun temp787_118 () (_ BitVec 64))
(declare-fun temp787_119 () (_ BitVec 64))
(declare-fun temp787_120 () (_ BitVec 64))
(declare-fun temp787_121 () (_ BitVec 64))
(declare-fun temp787_122 () (_ BitVec 64))
(declare-fun temp787_123 () (_ BitVec 64))
(declare-fun temp787_124 () (_ BitVec 64))
(declare-fun temp787_126 () (_ BitVec 64))
(declare-fun temp787_127 () (_ BitVec 64))
(declare-fun temp787_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp787_128 () (_ BitVec 64))
(declare-fun temp787_129 () (_ BitVec 64))
(declare-fun temp787_131 () (_ BitVec 64))
(declare-fun temp787_132 () (_ BitVec 64))
(declare-fun temp787_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp787_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp787_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp787_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp787_136 () (_ BitVec 64))
(declare-fun temp787_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp787_139 () (_ BitVec 64))
(declare-fun temp787_140 () (_ BitVec 64))
(declare-fun temp787_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp787_141 () (_ BitVec 64))
(declare-fun temp787_143 () (_ BitVec 64))
(declare-fun temp787_144 () (_ BitVec 64))
(declare-fun temp787_142 () (_ BitVec 64))
(declare-fun temp787_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp787_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp787_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp787_148 () (_ BitVec 64))
(declare-fun temp787_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp787_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp787_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var1522540 () (_ BitVec 64))
(declare-fun temp787_152 () (_ BitVec 64))
(declare-fun var1522541 () (_ BitVec 64))
(declare-fun temp787_153 () (_ BitVec 64))
(assert (= temp787_1 #x0000000000000002))
(assert (= var989741 temp787_1))
(assert (= temp787_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp787_2)))
(assert (= temp787_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp787_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp787_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp787_4)))
(assert (= temp787_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp787_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp787_6 #x0000000000000000))
(assert (= var989776 temp787_6))
(assert (= temp787_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp787_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp787_8 #x0000000000000001))
(assert (= var989810 temp787_8))
(assert (= temp787_10 #x0000000000000000))
(assert (= temp787_9 temp787_10))
(assert (= temp787_12 #x0000000000000002))
(assert (= temp787_11 temp787_12))
(assert (= temp787_13 #x0000000000000000))
(assert (= var1387902 temp787_13))
(assert (= temp787_14 #x0000000000000001))
(assert (= var1387923 temp787_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp787_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp787_15)))
(assert (= temp787_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp787_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp787_17 #x0000000000000000))
(assert (= var1521661 temp787_17))
(assert (= temp787_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp787_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp787_19 #x0000000000000000))
(assert (= var1521706 temp787_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp787_20 #x0000000000000000))
(assert (= temp787_21 temp787_20))
(assert (= temp787_22 (select ARGNAME_padding_NAMEEND_VAL temp787_21)))
(assert (= temp787_23 #x0000000000000001))
(assert (= temp787_24 temp787_23))
(assert (= temp787_25 (select ARGNAME_padding_NAMEEND_VAL temp787_24)))
(assert (= temp787_26 #x0000000000000002))
(assert (= temp787_27 temp787_26))
(assert (= temp787_28 (select ARGNAME_padding_NAMEEND_VAL temp787_27)))
(assert (= temp787_29 #x0000000000000003))
(assert (= temp787_30 temp787_29))
(assert (= temp787_31 (select ARGNAME_padding_NAMEEND_VAL temp787_30)))
(assert (= temp787_32 #x0000000000000004))
(assert (= temp787_33 temp787_32))
(assert (= temp787_34 (select ARGNAME_padding_NAMEEND_VAL temp787_33)))
(assert (= temp787_35 #x0000000000000005))
(assert (= temp787_36 temp787_35))
(assert (= temp787_37 (select ARGNAME_padding_NAMEEND_VAL temp787_36)))
(assert (= temp787_38 #x0000000000000000))
(assert (= temp787_39 #x0000000000000000))
(assert (= temp787_40 temp787_39))
(assert (= temp787_41 (select ARGNAME_padding_NAMEEND_VAL temp787_40)))
(assert (= temp787_42 #x0000000000000000))
(assert (= temp787_43 #x0000000000000001))
(assert (= temp787_44 temp787_43))
(assert (= temp787_45 (select ARGNAME_padding_NAMEEND_VAL temp787_44)))
(assert (= temp787_46 #x0000000000000000))
(assert (= temp787_47 #x0000000000000002))
(assert (= temp787_48 temp787_47))
(assert (= temp787_49 (select ARGNAME_padding_NAMEEND_VAL temp787_48)))
(assert (= temp787_50 #x0000000000000000))
(assert (= temp787_51 #x0000000000000003))
(assert (= temp787_52 temp787_51))
(assert (= temp787_53 (select ARGNAME_padding_NAMEEND_VAL temp787_52)))
(assert (= temp787_54 #x0000000000000000))
(assert (= temp787_55 #x0000000000000004))
(assert (= temp787_56 temp787_55))
(assert (= temp787_57 (select ARGNAME_padding_NAMEEND_VAL temp787_56)))
(assert (= temp787_58 #x0000000000000000))
(assert (= temp787_59 #x0000000000000005))
(assert (= temp787_60 temp787_59))
(assert (= temp787_61 (select ARGNAME_padding_NAMEEND_VAL temp787_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp787_41 temp787_38)
             (bvslt temp787_45 temp787_42)
             (bvslt temp787_49 temp787_46)
             (bvslt temp787_53 temp787_50)
             (bvslt temp787_57 temp787_54)
             (bvslt temp787_61 temp787_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp787_62 #x0000000000000000))
(assert (= var2240290 temp787_62))
(assert (= temp787_63 #x0000000000000000))
(assert (= temp787_64 temp787_63))
(assert (= temp787_65 (select ARGNAME_stride_NAMEEND_VAL temp787_64)))
(assert (= temp787_66 #x0000000000000001))
(assert (= temp787_67 temp787_66))
(assert (= temp787_68 (select ARGNAME_stride_NAMEEND_VAL temp787_67)))
(assert (= temp787_69 #x0000000000000002))
(assert (= temp787_70 temp787_69))
(assert (= temp787_71 (select ARGNAME_stride_NAMEEND_VAL temp787_70)))
(assert (= temp787_72 #x0000000000000003))
(assert (= temp787_73 temp787_72))
(assert (= temp787_74 (select ARGNAME_stride_NAMEEND_VAL temp787_73)))
(assert (= temp787_75 #x0000000000000004))
(assert (= temp787_76 temp787_75))
(assert (= temp787_77 (select ARGNAME_stride_NAMEEND_VAL temp787_76)))
(assert (= temp787_78 #x0000000000000005))
(assert (= temp787_79 temp787_78))
(assert (= temp787_80 (select ARGNAME_stride_NAMEEND_VAL temp787_79)))
(assert (= temp787_81 #x0000000000000000))
(assert (= temp787_82 #x0000000000000000))
(assert (= temp787_83 temp787_82))
(assert (= temp787_84 (select ARGNAME_stride_NAMEEND_VAL temp787_83)))
(assert (= temp787_85 #x0000000000000000))
(assert (= temp787_86 #x0000000000000001))
(assert (= temp787_87 temp787_86))
(assert (= temp787_88 (select ARGNAME_stride_NAMEEND_VAL temp787_87)))
(assert (= temp787_89 #x0000000000000000))
(assert (= temp787_90 #x0000000000000002))
(assert (= temp787_91 temp787_90))
(assert (= temp787_92 (select ARGNAME_stride_NAMEEND_VAL temp787_91)))
(assert (= temp787_93 #x0000000000000000))
(assert (= temp787_94 #x0000000000000003))
(assert (= temp787_95 temp787_94))
(assert (= temp787_96 (select ARGNAME_stride_NAMEEND_VAL temp787_95)))
(assert (= temp787_97 #x0000000000000000))
(assert (= temp787_98 #x0000000000000004))
(assert (= temp787_99 temp787_98))
(assert (= temp787_100 (select ARGNAME_stride_NAMEEND_VAL temp787_99)))
(assert (= temp787_101 #x0000000000000000))
(assert (= temp787_102 #x0000000000000005))
(assert (= temp787_103 temp787_102))
(assert (= temp787_104 (select ARGNAME_stride_NAMEEND_VAL temp787_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp787_84 temp787_81)
             (bvsle temp787_88 temp787_85)
             (bvsle temp787_92 temp787_89)
             (bvsle temp787_96 temp787_93)
             (bvsle temp787_100 temp787_97)
             (bvsle temp787_104 temp787_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp787_105 #x0000000000000000))
(assert (= var2240311 temp787_105))
(assert (= temp787_106 #x0000000000000000))
(assert (= var2228402 temp787_106))
(assert (= temp787_107 #x0000000000000000))
(assert (= temp787_108 temp787_107))
(assert (= temp787_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp787_108)))
(assert (= temp787_110 #x0000000000000001))
(assert (= temp787_111 temp787_110))
(assert (= temp787_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp787_111)))
(assert (= temp787_113 #x0000000000000002))
(assert (= temp787_114 temp787_113))
(assert (= temp787_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp787_114)))
(assert (= temp787_116 #x0000000000000003))
(assert (= temp787_117 temp787_116))
(assert (= temp787_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp787_117)))
(assert (= temp787_119 #x0000000000000004))
(assert (= temp787_120 temp787_119))
(assert (= temp787_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp787_120)))
(assert (= temp787_122 #x0000000000000005))
(assert (= temp787_123 temp787_122))
(assert (= temp787_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp787_123)))
(assert (= temp787_126 var2228402))
(assert (= temp787_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp787_126)))
(assert (= temp787_125 temp787_127))
(assert (= var2240356
   (ite (bvslt temp787_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp787_128 #x0000000000000000))
(assert (= var2240356 temp787_128))
(assert (= temp787_129 #x0000000000000000))
(assert (= var2228402 temp787_129))
(assert (= temp787_131 var2228402))
(assert (= temp787_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp787_131)))
(assert (= temp787_130 temp787_132))
(assert (= var2240378 (bvsmod temp787_130 ARGNAME_groups_NAMEEND)))
(assert (= temp787_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp787_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp787_134 #x0000000000000001))
(assert (= var2240379 temp787_134))
(assert (= var2240398 var2240288))
(assert (= temp787_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp787_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp787_136 #x0000000000000001))
(assert (= var2240399 temp787_136))
(assert (= temp787_137 #x0000000000000001))
(assert (= var2229290 temp787_137))
(assert (= temp787_139 var2229290))
(assert (= temp787_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp787_139)))
(assert (= temp787_138 temp787_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp787_138)))
(assert (= temp787_141 #x0000000000000000))
(assert (= var2228402 temp787_141))
(assert (= temp787_143 var2228402))
(assert (= temp787_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp787_143)))
(assert (= temp787_142 temp787_144))
(assert (= temp787_145 #x0000000000000002))
(assert (= var2503529 temp787_145))
(assert (= temp787_146 #x0000000000000001))
(assert (= var2240569 temp787_146))
(assert (= temp787_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp787_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp787_148 #x0000000000000001))
(assert (= var1521778 temp787_148))
(assert (= temp787_149 #x0000000000000001))
(assert (= var1521908 temp787_149))
(assert (= var4010473 var1521908))
(assert (= temp787_150 #x0000000000000000))
(assert (= var4210495 temp787_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp787_151 #x0000000000000002))
(assert (= var4339331 temp787_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4796816 var1521921))
(assert (= var1522540 var1521633))
(assert (= temp787_152 #x0000000000000000))
(assert (= var1522541
   (ite (distinct var1522540 temp787_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp787_153 #x0000000000000001))
(assert (= var1521778 temp787_153))
(model-add temp787_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp787_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp787_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp787_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp787_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp787_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






