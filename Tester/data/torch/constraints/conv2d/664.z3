(declare-fun temp884_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp884_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp884_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp884_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp884_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp884_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp884_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp884_8 () (_ BitVec 64))
(declare-fun temp884_10 () (_ BitVec 64))
(declare-fun temp884_9 () (_ BitVec 64))
(declare-fun temp884_12 () (_ BitVec 64))
(declare-fun temp884_11 () (_ BitVec 64))
(declare-fun temp884_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp884_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp884_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp884_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp884_17 () (_ BitVec 64))
(declare-fun temp884_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp884_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp884_20 () (_ BitVec 64))
(declare-fun temp884_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp884_22 () (_ BitVec 64))
(declare-fun temp884_23 () (_ BitVec 64))
(declare-fun temp884_24 () (_ BitVec 64))
(declare-fun temp884_25 () (_ BitVec 64))
(declare-fun temp884_26 () (_ BitVec 64))
(declare-fun temp884_27 () (_ BitVec 64))
(declare-fun temp884_28 () (_ BitVec 64))
(declare-fun temp884_29 () (_ BitVec 64))
(declare-fun temp884_30 () (_ BitVec 64))
(declare-fun temp884_31 () (_ BitVec 64))
(declare-fun temp884_32 () (_ BitVec 64))
(declare-fun temp884_33 () (_ BitVec 64))
(declare-fun temp884_34 () (_ BitVec 64))
(declare-fun temp884_35 () (_ BitVec 64))
(declare-fun temp884_36 () (_ BitVec 64))
(declare-fun temp884_37 () (_ BitVec 64))
(declare-fun temp884_38 () (_ BitVec 64))
(declare-fun temp884_39 () (_ BitVec 64))
(declare-fun temp884_40 () (_ BitVec 64))
(declare-fun temp884_41 () (_ BitVec 64))
(declare-fun temp884_42 () (_ BitVec 64))
(declare-fun temp884_43 () (_ BitVec 64))
(declare-fun temp884_44 () (_ BitVec 64))
(declare-fun temp884_45 () (_ BitVec 64))
(declare-fun temp884_46 () (_ BitVec 64))
(declare-fun temp884_47 () (_ BitVec 64))
(declare-fun temp884_48 () (_ BitVec 64))
(declare-fun temp884_49 () (_ BitVec 64))
(declare-fun temp884_50 () (_ BitVec 64))
(declare-fun temp884_51 () (_ BitVec 64))
(declare-fun temp884_52 () (_ BitVec 64))
(declare-fun temp884_53 () (_ BitVec 64))
(declare-fun temp884_54 () (_ BitVec 64))
(declare-fun temp884_55 () (_ BitVec 64))
(declare-fun temp884_56 () (_ BitVec 64))
(declare-fun temp884_57 () (_ BitVec 64))
(declare-fun temp884_58 () (_ BitVec 64))
(declare-fun temp884_59 () (_ BitVec 64))
(declare-fun temp884_60 () (_ BitVec 64))
(declare-fun temp884_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp884_62 () (_ BitVec 64))
(declare-fun temp884_63 () (_ BitVec 64))
(declare-fun temp884_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp884_65 () (_ BitVec 64))
(declare-fun temp884_66 () (_ BitVec 64))
(declare-fun temp884_67 () (_ BitVec 64))
(declare-fun temp884_68 () (_ BitVec 64))
(declare-fun temp884_69 () (_ BitVec 64))
(declare-fun temp884_70 () (_ BitVec 64))
(declare-fun temp884_71 () (_ BitVec 64))
(declare-fun temp884_72 () (_ BitVec 64))
(declare-fun temp884_73 () (_ BitVec 64))
(declare-fun temp884_74 () (_ BitVec 64))
(declare-fun temp884_75 () (_ BitVec 64))
(declare-fun temp884_76 () (_ BitVec 64))
(declare-fun temp884_77 () (_ BitVec 64))
(declare-fun temp884_78 () (_ BitVec 64))
(declare-fun temp884_79 () (_ BitVec 64))
(declare-fun temp884_80 () (_ BitVec 64))
(declare-fun temp884_81 () (_ BitVec 64))
(declare-fun temp884_82 () (_ BitVec 64))
(declare-fun temp884_83 () (_ BitVec 64))
(declare-fun temp884_84 () (_ BitVec 64))
(declare-fun temp884_85 () (_ BitVec 64))
(declare-fun temp884_86 () (_ BitVec 64))
(declare-fun temp884_87 () (_ BitVec 64))
(declare-fun temp884_88 () (_ BitVec 64))
(declare-fun temp884_89 () (_ BitVec 64))
(declare-fun temp884_90 () (_ BitVec 64))
(declare-fun temp884_91 () (_ BitVec 64))
(declare-fun temp884_92 () (_ BitVec 64))
(declare-fun temp884_93 () (_ BitVec 64))
(declare-fun temp884_94 () (_ BitVec 64))
(declare-fun temp884_95 () (_ BitVec 64))
(declare-fun temp884_96 () (_ BitVec 64))
(declare-fun temp884_97 () (_ BitVec 64))
(declare-fun temp884_98 () (_ BitVec 64))
(declare-fun temp884_99 () (_ BitVec 64))
(declare-fun temp884_100 () (_ BitVec 64))
(declare-fun temp884_101 () (_ BitVec 64))
(declare-fun temp884_102 () (_ BitVec 64))
(declare-fun temp884_103 () (_ BitVec 64))
(declare-fun temp884_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp884_105 () (_ BitVec 64))
(declare-fun temp884_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp884_107 () (_ BitVec 64))
(declare-fun temp884_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp884_109 () (_ BitVec 64))
(declare-fun temp884_110 () (_ BitVec 64))
(declare-fun temp884_111 () (_ BitVec 64))
(declare-fun temp884_112 () (_ BitVec 64))
(declare-fun temp884_113 () (_ BitVec 64))
(declare-fun temp884_114 () (_ BitVec 64))
(declare-fun temp884_115 () (_ BitVec 64))
(declare-fun temp884_116 () (_ BitVec 64))
(declare-fun temp884_117 () (_ BitVec 64))
(declare-fun temp884_118 () (_ BitVec 64))
(declare-fun temp884_119 () (_ BitVec 64))
(declare-fun temp884_120 () (_ BitVec 64))
(declare-fun temp884_121 () (_ BitVec 64))
(declare-fun temp884_122 () (_ BitVec 64))
(declare-fun temp884_123 () (_ BitVec 64))
(declare-fun temp884_124 () (_ BitVec 64))
(declare-fun temp884_126 () (_ BitVec 64))
(declare-fun temp884_127 () (_ BitVec 64))
(declare-fun temp884_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp884_128 () (_ BitVec 64))
(declare-fun temp884_129 () (_ BitVec 64))
(declare-fun temp884_131 () (_ BitVec 64))
(declare-fun temp884_132 () (_ BitVec 64))
(declare-fun temp884_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp884_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp884_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp884_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp884_136 () (_ BitVec 64))
(declare-fun temp884_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp884_139 () (_ BitVec 64))
(declare-fun temp884_140 () (_ BitVec 64))
(declare-fun temp884_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp884_141 () (_ BitVec 64))
(declare-fun temp884_143 () (_ BitVec 64))
(declare-fun temp884_144 () (_ BitVec 64))
(declare-fun temp884_142 () (_ BitVec 64))
(declare-fun temp884_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp884_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp884_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp884_148 () (_ BitVec 64))
(declare-fun temp884_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp884_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp884_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun temp884_152 () (_ BitVec 64))
(assert (= temp884_1 #x0000000000000002))
(assert (= var989741 temp884_1))
(assert (= temp884_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp884_2)))
(assert (= temp884_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp884_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp884_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp884_4)))
(assert (= temp884_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp884_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp884_6 #x0000000000000000))
(assert (= var989776 temp884_6))
(assert (= temp884_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp884_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp884_8 #x0000000000000001))
(assert (= var989810 temp884_8))
(assert (= temp884_10 #x0000000000000000))
(assert (= temp884_9 temp884_10))
(assert (= temp884_12 #x0000000000000002))
(assert (= temp884_11 temp884_12))
(assert (= temp884_13 #x0000000000000000))
(assert (= var1387902 temp884_13))
(assert (= temp884_14 #x0000000000000001))
(assert (= var1387923 temp884_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp884_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp884_15)))
(assert (= temp884_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp884_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp884_17 #x0000000000000000))
(assert (= var1521661 temp884_17))
(assert (= temp884_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp884_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp884_19 #x0000000000000000))
(assert (= var1521706 temp884_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp884_20 #x0000000000000000))
(assert (= temp884_21 temp884_20))
(assert (= temp884_22 (select ARGNAME_padding_NAMEEND_VAL temp884_21)))
(assert (= temp884_23 #x0000000000000001))
(assert (= temp884_24 temp884_23))
(assert (= temp884_25 (select ARGNAME_padding_NAMEEND_VAL temp884_24)))
(assert (= temp884_26 #x0000000000000002))
(assert (= temp884_27 temp884_26))
(assert (= temp884_28 (select ARGNAME_padding_NAMEEND_VAL temp884_27)))
(assert (= temp884_29 #x0000000000000003))
(assert (= temp884_30 temp884_29))
(assert (= temp884_31 (select ARGNAME_padding_NAMEEND_VAL temp884_30)))
(assert (= temp884_32 #x0000000000000004))
(assert (= temp884_33 temp884_32))
(assert (= temp884_34 (select ARGNAME_padding_NAMEEND_VAL temp884_33)))
(assert (= temp884_35 #x0000000000000005))
(assert (= temp884_36 temp884_35))
(assert (= temp884_37 (select ARGNAME_padding_NAMEEND_VAL temp884_36)))
(assert (= temp884_38 #x0000000000000000))
(assert (= temp884_39 #x0000000000000000))
(assert (= temp884_40 temp884_39))
(assert (= temp884_41 (select ARGNAME_padding_NAMEEND_VAL temp884_40)))
(assert (= temp884_42 #x0000000000000000))
(assert (= temp884_43 #x0000000000000001))
(assert (= temp884_44 temp884_43))
(assert (= temp884_45 (select ARGNAME_padding_NAMEEND_VAL temp884_44)))
(assert (= temp884_46 #x0000000000000000))
(assert (= temp884_47 #x0000000000000002))
(assert (= temp884_48 temp884_47))
(assert (= temp884_49 (select ARGNAME_padding_NAMEEND_VAL temp884_48)))
(assert (= temp884_50 #x0000000000000000))
(assert (= temp884_51 #x0000000000000003))
(assert (= temp884_52 temp884_51))
(assert (= temp884_53 (select ARGNAME_padding_NAMEEND_VAL temp884_52)))
(assert (= temp884_54 #x0000000000000000))
(assert (= temp884_55 #x0000000000000004))
(assert (= temp884_56 temp884_55))
(assert (= temp884_57 (select ARGNAME_padding_NAMEEND_VAL temp884_56)))
(assert (= temp884_58 #x0000000000000000))
(assert (= temp884_59 #x0000000000000005))
(assert (= temp884_60 temp884_59))
(assert (= temp884_61 (select ARGNAME_padding_NAMEEND_VAL temp884_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp884_41 temp884_38)
             (bvslt temp884_45 temp884_42)
             (bvslt temp884_49 temp884_46)
             (bvslt temp884_53 temp884_50)
             (bvslt temp884_57 temp884_54)
             (bvslt temp884_61 temp884_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp884_62 #x0000000000000000))
(assert (= var2240290 temp884_62))
(assert (= temp884_63 #x0000000000000000))
(assert (= temp884_64 temp884_63))
(assert (= temp884_65 (select ARGNAME_stride_NAMEEND_VAL temp884_64)))
(assert (= temp884_66 #x0000000000000001))
(assert (= temp884_67 temp884_66))
(assert (= temp884_68 (select ARGNAME_stride_NAMEEND_VAL temp884_67)))
(assert (= temp884_69 #x0000000000000002))
(assert (= temp884_70 temp884_69))
(assert (= temp884_71 (select ARGNAME_stride_NAMEEND_VAL temp884_70)))
(assert (= temp884_72 #x0000000000000003))
(assert (= temp884_73 temp884_72))
(assert (= temp884_74 (select ARGNAME_stride_NAMEEND_VAL temp884_73)))
(assert (= temp884_75 #x0000000000000004))
(assert (= temp884_76 temp884_75))
(assert (= temp884_77 (select ARGNAME_stride_NAMEEND_VAL temp884_76)))
(assert (= temp884_78 #x0000000000000005))
(assert (= temp884_79 temp884_78))
(assert (= temp884_80 (select ARGNAME_stride_NAMEEND_VAL temp884_79)))
(assert (= temp884_81 #x0000000000000000))
(assert (= temp884_82 #x0000000000000000))
(assert (= temp884_83 temp884_82))
(assert (= temp884_84 (select ARGNAME_stride_NAMEEND_VAL temp884_83)))
(assert (= temp884_85 #x0000000000000000))
(assert (= temp884_86 #x0000000000000001))
(assert (= temp884_87 temp884_86))
(assert (= temp884_88 (select ARGNAME_stride_NAMEEND_VAL temp884_87)))
(assert (= temp884_89 #x0000000000000000))
(assert (= temp884_90 #x0000000000000002))
(assert (= temp884_91 temp884_90))
(assert (= temp884_92 (select ARGNAME_stride_NAMEEND_VAL temp884_91)))
(assert (= temp884_93 #x0000000000000000))
(assert (= temp884_94 #x0000000000000003))
(assert (= temp884_95 temp884_94))
(assert (= temp884_96 (select ARGNAME_stride_NAMEEND_VAL temp884_95)))
(assert (= temp884_97 #x0000000000000000))
(assert (= temp884_98 #x0000000000000004))
(assert (= temp884_99 temp884_98))
(assert (= temp884_100 (select ARGNAME_stride_NAMEEND_VAL temp884_99)))
(assert (= temp884_101 #x0000000000000000))
(assert (= temp884_102 #x0000000000000005))
(assert (= temp884_103 temp884_102))
(assert (= temp884_104 (select ARGNAME_stride_NAMEEND_VAL temp884_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp884_84 temp884_81)
             (bvsle temp884_88 temp884_85)
             (bvsle temp884_92 temp884_89)
             (bvsle temp884_96 temp884_93)
             (bvsle temp884_100 temp884_97)
             (bvsle temp884_104 temp884_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp884_105 #x0000000000000000))
(assert (= var2240311 temp884_105))
(assert (= temp884_106 #x0000000000000000))
(assert (= var2228402 temp884_106))
(assert (= temp884_107 #x0000000000000000))
(assert (= temp884_108 temp884_107))
(assert (= temp884_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp884_108)))
(assert (= temp884_110 #x0000000000000001))
(assert (= temp884_111 temp884_110))
(assert (= temp884_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp884_111)))
(assert (= temp884_113 #x0000000000000002))
(assert (= temp884_114 temp884_113))
(assert (= temp884_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp884_114)))
(assert (= temp884_116 #x0000000000000003))
(assert (= temp884_117 temp884_116))
(assert (= temp884_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp884_117)))
(assert (= temp884_119 #x0000000000000004))
(assert (= temp884_120 temp884_119))
(assert (= temp884_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp884_120)))
(assert (= temp884_122 #x0000000000000005))
(assert (= temp884_123 temp884_122))
(assert (= temp884_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp884_123)))
(assert (= temp884_126 var2228402))
(assert (= temp884_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp884_126)))
(assert (= temp884_125 temp884_127))
(assert (= var2240356
   (ite (bvslt temp884_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp884_128 #x0000000000000000))
(assert (= var2240356 temp884_128))
(assert (= temp884_129 #x0000000000000000))
(assert (= var2228402 temp884_129))
(assert (= temp884_131 var2228402))
(assert (= temp884_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp884_131)))
(assert (= temp884_130 temp884_132))
(assert (= var2240378 (bvsmod temp884_130 ARGNAME_groups_NAMEEND)))
(assert (= temp884_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp884_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp884_134 #x0000000000000001))
(assert (= var2240379 temp884_134))
(assert (= var2240398 var2240288))
(assert (= temp884_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp884_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp884_136 #x0000000000000001))
(assert (= var2240399 temp884_136))
(assert (= temp884_137 #x0000000000000001))
(assert (= var2229290 temp884_137))
(assert (= temp884_139 var2229290))
(assert (= temp884_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp884_139)))
(assert (= temp884_138 temp884_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp884_138)))
(assert (= temp884_141 #x0000000000000000))
(assert (= var2228402 temp884_141))
(assert (= temp884_143 var2228402))
(assert (= temp884_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp884_143)))
(assert (= temp884_142 temp884_144))
(assert (= temp884_145 #x0000000000000002))
(assert (= var2503529 temp884_145))
(assert (= temp884_146 #x0000000000000001))
(assert (= var2240569 temp884_146))
(assert (= temp884_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp884_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp884_148 #x0000000000000001))
(assert (= var1521778 temp884_148))
(assert (= temp884_149 #x0000000000000001))
(assert (= var1521908 temp884_149))
(assert (= var4010473 var1521908))
(assert (= temp884_150 #x0000000000000000))
(assert (= var4210495 temp884_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp884_151 #x0000000000000002))
(assert (= var4339331 temp884_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4862352 var1521921))
(assert (= var5124496 var1521921))
(assert (= temp884_152 #x0000000000000001))
(assert (= var1521778 temp884_152))
(model-add temp884_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp884_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp884_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp884_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp884_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp884_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






