(declare-fun temp661_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp661_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp661_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp661_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp661_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp661_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp661_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp661_8 () (_ BitVec 64))
(declare-fun temp661_10 () (_ BitVec 64))
(declare-fun temp661_9 () (_ BitVec 64))
(declare-fun temp661_12 () (_ BitVec 64))
(declare-fun temp661_11 () (_ BitVec 64))
(declare-fun temp661_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp661_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp661_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp661_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp661_17 () (_ BitVec 64))
(declare-fun temp661_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp661_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp661_20 () (_ BitVec 64))
(declare-fun temp661_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp661_22 () (_ BitVec 64))
(declare-fun temp661_23 () (_ BitVec 64))
(declare-fun temp661_24 () (_ BitVec 64))
(declare-fun temp661_25 () (_ BitVec 64))
(declare-fun temp661_26 () (_ BitVec 64))
(declare-fun temp661_27 () (_ BitVec 64))
(declare-fun temp661_28 () (_ BitVec 64))
(declare-fun temp661_29 () (_ BitVec 64))
(declare-fun temp661_30 () (_ BitVec 64))
(declare-fun temp661_31 () (_ BitVec 64))
(declare-fun temp661_32 () (_ BitVec 64))
(declare-fun temp661_33 () (_ BitVec 64))
(declare-fun temp661_34 () (_ BitVec 64))
(declare-fun temp661_35 () (_ BitVec 64))
(declare-fun temp661_36 () (_ BitVec 64))
(declare-fun temp661_37 () (_ BitVec 64))
(declare-fun temp661_38 () (_ BitVec 64))
(declare-fun temp661_39 () (_ BitVec 64))
(declare-fun temp661_40 () (_ BitVec 64))
(declare-fun temp661_41 () (_ BitVec 64))
(declare-fun temp661_42 () (_ BitVec 64))
(declare-fun temp661_43 () (_ BitVec 64))
(declare-fun temp661_44 () (_ BitVec 64))
(declare-fun temp661_45 () (_ BitVec 64))
(declare-fun temp661_46 () (_ BitVec 64))
(declare-fun temp661_47 () (_ BitVec 64))
(declare-fun temp661_48 () (_ BitVec 64))
(declare-fun temp661_49 () (_ BitVec 64))
(declare-fun temp661_50 () (_ BitVec 64))
(declare-fun temp661_51 () (_ BitVec 64))
(declare-fun temp661_52 () (_ BitVec 64))
(declare-fun temp661_53 () (_ BitVec 64))
(declare-fun temp661_54 () (_ BitVec 64))
(declare-fun temp661_55 () (_ BitVec 64))
(declare-fun temp661_56 () (_ BitVec 64))
(declare-fun temp661_57 () (_ BitVec 64))
(declare-fun temp661_58 () (_ BitVec 64))
(declare-fun temp661_59 () (_ BitVec 64))
(declare-fun temp661_60 () (_ BitVec 64))
(declare-fun temp661_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp661_62 () (_ BitVec 64))
(declare-fun temp661_63 () (_ BitVec 64))
(declare-fun temp661_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp661_65 () (_ BitVec 64))
(declare-fun temp661_66 () (_ BitVec 64))
(declare-fun temp661_67 () (_ BitVec 64))
(declare-fun temp661_68 () (_ BitVec 64))
(declare-fun temp661_69 () (_ BitVec 64))
(declare-fun temp661_70 () (_ BitVec 64))
(declare-fun temp661_71 () (_ BitVec 64))
(declare-fun temp661_72 () (_ BitVec 64))
(declare-fun temp661_73 () (_ BitVec 64))
(declare-fun temp661_74 () (_ BitVec 64))
(declare-fun temp661_75 () (_ BitVec 64))
(declare-fun temp661_76 () (_ BitVec 64))
(declare-fun temp661_77 () (_ BitVec 64))
(declare-fun temp661_78 () (_ BitVec 64))
(declare-fun temp661_79 () (_ BitVec 64))
(declare-fun temp661_80 () (_ BitVec 64))
(declare-fun temp661_81 () (_ BitVec 64))
(declare-fun temp661_82 () (_ BitVec 64))
(declare-fun temp661_83 () (_ BitVec 64))
(declare-fun temp661_84 () (_ BitVec 64))
(declare-fun temp661_85 () (_ BitVec 64))
(declare-fun temp661_86 () (_ BitVec 64))
(declare-fun temp661_87 () (_ BitVec 64))
(declare-fun temp661_88 () (_ BitVec 64))
(declare-fun temp661_89 () (_ BitVec 64))
(declare-fun temp661_90 () (_ BitVec 64))
(declare-fun temp661_91 () (_ BitVec 64))
(declare-fun temp661_92 () (_ BitVec 64))
(declare-fun temp661_93 () (_ BitVec 64))
(declare-fun temp661_94 () (_ BitVec 64))
(declare-fun temp661_95 () (_ BitVec 64))
(declare-fun temp661_96 () (_ BitVec 64))
(declare-fun temp661_97 () (_ BitVec 64))
(declare-fun temp661_98 () (_ BitVec 64))
(declare-fun temp661_99 () (_ BitVec 64))
(declare-fun temp661_100 () (_ BitVec 64))
(declare-fun temp661_101 () (_ BitVec 64))
(declare-fun temp661_102 () (_ BitVec 64))
(declare-fun temp661_103 () (_ BitVec 64))
(declare-fun temp661_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp661_105 () (_ BitVec 64))
(declare-fun temp661_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp661_107 () (_ BitVec 64))
(declare-fun temp661_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp661_109 () (_ BitVec 64))
(declare-fun temp661_110 () (_ BitVec 64))
(declare-fun temp661_111 () (_ BitVec 64))
(declare-fun temp661_112 () (_ BitVec 64))
(declare-fun temp661_113 () (_ BitVec 64))
(declare-fun temp661_114 () (_ BitVec 64))
(declare-fun temp661_115 () (_ BitVec 64))
(declare-fun temp661_116 () (_ BitVec 64))
(declare-fun temp661_117 () (_ BitVec 64))
(declare-fun temp661_118 () (_ BitVec 64))
(declare-fun temp661_119 () (_ BitVec 64))
(declare-fun temp661_120 () (_ BitVec 64))
(declare-fun temp661_121 () (_ BitVec 64))
(declare-fun temp661_122 () (_ BitVec 64))
(declare-fun temp661_123 () (_ BitVec 64))
(declare-fun temp661_124 () (_ BitVec 64))
(declare-fun temp661_126 () (_ BitVec 64))
(declare-fun temp661_127 () (_ BitVec 64))
(declare-fun temp661_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp661_128 () (_ BitVec 64))
(declare-fun temp661_129 () (_ BitVec 64))
(declare-fun temp661_131 () (_ BitVec 64))
(declare-fun temp661_132 () (_ BitVec 64))
(declare-fun temp661_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp661_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp661_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp661_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp661_136 () (_ BitVec 64))
(declare-fun temp661_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp661_139 () (_ BitVec 64))
(declare-fun temp661_140 () (_ BitVec 64))
(declare-fun temp661_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp661_141 () (_ BitVec 64))
(declare-fun temp661_143 () (_ BitVec 64))
(declare-fun temp661_144 () (_ BitVec 64))
(declare-fun temp661_142 () (_ BitVec 64))
(declare-fun temp661_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp661_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp661_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp661_148 () (_ BitVec 64))
(declare-fun temp661_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp661_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp661_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp661_153 () (_ BitVec 64))
(declare-fun temp661_152 () (_ BitVec 64))
(declare-fun temp661_155 () (_ BitVec 64))
(declare-fun temp661_154 () (_ BitVec 64))
(declare-fun temp661_156 () (_ BitVec 64))
(assert (= temp661_1 #x0000000000000002))
(assert (= var989741 temp661_1))
(assert (= temp661_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp661_2)))
(assert (= temp661_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp661_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp661_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp661_4)))
(assert (= temp661_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp661_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp661_6 #x0000000000000000))
(assert (= var989776 temp661_6))
(assert (= temp661_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp661_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp661_8 #x0000000000000001))
(assert (= var989810 temp661_8))
(assert (= temp661_10 #x0000000000000000))
(assert (= temp661_9 temp661_10))
(assert (= temp661_12 #x0000000000000002))
(assert (= temp661_11 temp661_12))
(assert (= temp661_13 #x0000000000000000))
(assert (= var1387902 temp661_13))
(assert (= temp661_14 #x0000000000000001))
(assert (= var1387923 temp661_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp661_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp661_15)))
(assert (= temp661_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp661_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_17 #x0000000000000000))
(assert (= var1521661 temp661_17))
(assert (= temp661_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp661_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_19 #x0000000000000000))
(assert (= var1521706 temp661_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp661_20 #x0000000000000000))
(assert (= temp661_21 temp661_20))
(assert (= temp661_22 (select ARGNAME_padding_NAMEEND_VAL temp661_21)))
(assert (= temp661_23 #x0000000000000001))
(assert (= temp661_24 temp661_23))
(assert (= temp661_25 (select ARGNAME_padding_NAMEEND_VAL temp661_24)))
(assert (= temp661_26 #x0000000000000002))
(assert (= temp661_27 temp661_26))
(assert (= temp661_28 (select ARGNAME_padding_NAMEEND_VAL temp661_27)))
(assert (= temp661_29 #x0000000000000003))
(assert (= temp661_30 temp661_29))
(assert (= temp661_31 (select ARGNAME_padding_NAMEEND_VAL temp661_30)))
(assert (= temp661_32 #x0000000000000004))
(assert (= temp661_33 temp661_32))
(assert (= temp661_34 (select ARGNAME_padding_NAMEEND_VAL temp661_33)))
(assert (= temp661_35 #x0000000000000005))
(assert (= temp661_36 temp661_35))
(assert (= temp661_37 (select ARGNAME_padding_NAMEEND_VAL temp661_36)))
(assert (= temp661_38 #x0000000000000000))
(assert (= temp661_39 #x0000000000000000))
(assert (= temp661_40 temp661_39))
(assert (= temp661_41 (select ARGNAME_padding_NAMEEND_VAL temp661_40)))
(assert (= temp661_42 #x0000000000000000))
(assert (= temp661_43 #x0000000000000001))
(assert (= temp661_44 temp661_43))
(assert (= temp661_45 (select ARGNAME_padding_NAMEEND_VAL temp661_44)))
(assert (= temp661_46 #x0000000000000000))
(assert (= temp661_47 #x0000000000000002))
(assert (= temp661_48 temp661_47))
(assert (= temp661_49 (select ARGNAME_padding_NAMEEND_VAL temp661_48)))
(assert (= temp661_50 #x0000000000000000))
(assert (= temp661_51 #x0000000000000003))
(assert (= temp661_52 temp661_51))
(assert (= temp661_53 (select ARGNAME_padding_NAMEEND_VAL temp661_52)))
(assert (= temp661_54 #x0000000000000000))
(assert (= temp661_55 #x0000000000000004))
(assert (= temp661_56 temp661_55))
(assert (= temp661_57 (select ARGNAME_padding_NAMEEND_VAL temp661_56)))
(assert (= temp661_58 #x0000000000000000))
(assert (= temp661_59 #x0000000000000005))
(assert (= temp661_60 temp661_59))
(assert (= temp661_61 (select ARGNAME_padding_NAMEEND_VAL temp661_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp661_41 temp661_38)
             (bvslt temp661_45 temp661_42)
             (bvslt temp661_49 temp661_46)
             (bvslt temp661_53 temp661_50)
             (bvslt temp661_57 temp661_54)
             (bvslt temp661_61 temp661_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_62 #x0000000000000000))
(assert (= var2240290 temp661_62))
(assert (= temp661_63 #x0000000000000000))
(assert (= temp661_64 temp661_63))
(assert (= temp661_65 (select ARGNAME_stride_NAMEEND_VAL temp661_64)))
(assert (= temp661_66 #x0000000000000001))
(assert (= temp661_67 temp661_66))
(assert (= temp661_68 (select ARGNAME_stride_NAMEEND_VAL temp661_67)))
(assert (= temp661_69 #x0000000000000002))
(assert (= temp661_70 temp661_69))
(assert (= temp661_71 (select ARGNAME_stride_NAMEEND_VAL temp661_70)))
(assert (= temp661_72 #x0000000000000003))
(assert (= temp661_73 temp661_72))
(assert (= temp661_74 (select ARGNAME_stride_NAMEEND_VAL temp661_73)))
(assert (= temp661_75 #x0000000000000004))
(assert (= temp661_76 temp661_75))
(assert (= temp661_77 (select ARGNAME_stride_NAMEEND_VAL temp661_76)))
(assert (= temp661_78 #x0000000000000005))
(assert (= temp661_79 temp661_78))
(assert (= temp661_80 (select ARGNAME_stride_NAMEEND_VAL temp661_79)))
(assert (= temp661_81 #x0000000000000000))
(assert (= temp661_82 #x0000000000000000))
(assert (= temp661_83 temp661_82))
(assert (= temp661_84 (select ARGNAME_stride_NAMEEND_VAL temp661_83)))
(assert (= temp661_85 #x0000000000000000))
(assert (= temp661_86 #x0000000000000001))
(assert (= temp661_87 temp661_86))
(assert (= temp661_88 (select ARGNAME_stride_NAMEEND_VAL temp661_87)))
(assert (= temp661_89 #x0000000000000000))
(assert (= temp661_90 #x0000000000000002))
(assert (= temp661_91 temp661_90))
(assert (= temp661_92 (select ARGNAME_stride_NAMEEND_VAL temp661_91)))
(assert (= temp661_93 #x0000000000000000))
(assert (= temp661_94 #x0000000000000003))
(assert (= temp661_95 temp661_94))
(assert (= temp661_96 (select ARGNAME_stride_NAMEEND_VAL temp661_95)))
(assert (= temp661_97 #x0000000000000000))
(assert (= temp661_98 #x0000000000000004))
(assert (= temp661_99 temp661_98))
(assert (= temp661_100 (select ARGNAME_stride_NAMEEND_VAL temp661_99)))
(assert (= temp661_101 #x0000000000000000))
(assert (= temp661_102 #x0000000000000005))
(assert (= temp661_103 temp661_102))
(assert (= temp661_104 (select ARGNAME_stride_NAMEEND_VAL temp661_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp661_84 temp661_81)
             (bvsle temp661_88 temp661_85)
             (bvsle temp661_92 temp661_89)
             (bvsle temp661_96 temp661_93)
             (bvsle temp661_100 temp661_97)
             (bvsle temp661_104 temp661_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_105 #x0000000000000000))
(assert (= var2240311 temp661_105))
(assert (= temp661_106 #x0000000000000000))
(assert (= var2228402 temp661_106))
(assert (= temp661_107 #x0000000000000000))
(assert (= temp661_108 temp661_107))
(assert (= temp661_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_108)))
(assert (= temp661_110 #x0000000000000001))
(assert (= temp661_111 temp661_110))
(assert (= temp661_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_111)))
(assert (= temp661_113 #x0000000000000002))
(assert (= temp661_114 temp661_113))
(assert (= temp661_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_114)))
(assert (= temp661_116 #x0000000000000003))
(assert (= temp661_117 temp661_116))
(assert (= temp661_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_117)))
(assert (= temp661_119 #x0000000000000004))
(assert (= temp661_120 temp661_119))
(assert (= temp661_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_120)))
(assert (= temp661_122 #x0000000000000005))
(assert (= temp661_123 temp661_122))
(assert (= temp661_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_123)))
(assert (= temp661_126 var2228402))
(assert (= temp661_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_126)))
(assert (= temp661_125 temp661_127))
(assert (= var2240356
   (ite (bvslt temp661_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_128 #x0000000000000000))
(assert (= var2240356 temp661_128))
(assert (= temp661_129 #x0000000000000000))
(assert (= var2228402 temp661_129))
(assert (= temp661_131 var2228402))
(assert (= temp661_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_131)))
(assert (= temp661_130 temp661_132))
(assert (= var2240378 (bvsmod temp661_130 ARGNAME_groups_NAMEEND)))
(assert (= temp661_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp661_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp661_134 #x0000000000000001))
(assert (= var2240379 temp661_134))
(assert (= var2240398 var2240288))
(assert (= temp661_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp661_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp661_136 #x0000000000000001))
(assert (= var2240399 temp661_136))
(assert (= temp661_137 #x0000000000000001))
(assert (= var2229290 temp661_137))
(assert (= temp661_139 var2229290))
(assert (= temp661_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_139)))
(assert (= temp661_138 temp661_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp661_138)))
(assert (= temp661_141 #x0000000000000000))
(assert (= var2228402 temp661_141))
(assert (= temp661_143 var2228402))
(assert (= temp661_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp661_143)))
(assert (= temp661_142 temp661_144))
(assert (= temp661_145 #x0000000000000002))
(assert (= var2503529 temp661_145))
(assert (= temp661_146 #x0000000000000001))
(assert (= var2240569 temp661_146))
(assert (= temp661_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp661_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp661_148 #x0000000000000001))
(assert (= var1521778 temp661_148))
(assert (= temp661_149 #x0000000000000001))
(assert (= var1521908 temp661_149))
(assert (= var4010473 var1521908))
(assert (= temp661_150 #x0000000000000000))
(assert (= var4210495 temp661_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp661_151 #x0000000000000002))
(assert (= var4339331 temp661_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp661_153 #xffffffffffffffff))
(assert (= temp661_152 temp661_153))
(assert (= temp661_155 #xffffffffffffffff))
(assert (= temp661_154 temp661_155))
(assert (= temp661_156 #x0000000000000001))
(assert (= var1521778 temp661_156))
(model-add temp661_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp661_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp661_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp661_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp661_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp661_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






