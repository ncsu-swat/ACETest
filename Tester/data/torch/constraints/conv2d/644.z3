(declare-fun temp858_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp858_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp858_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp858_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp858_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp858_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp858_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp858_8 () (_ BitVec 64))
(declare-fun temp858_10 () (_ BitVec 64))
(declare-fun temp858_9 () (_ BitVec 64))
(declare-fun temp858_12 () (_ BitVec 64))
(declare-fun temp858_11 () (_ BitVec 64))
(declare-fun temp858_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp858_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp858_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp858_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp858_17 () (_ BitVec 64))
(declare-fun temp858_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp858_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp858_20 () (_ BitVec 64))
(declare-fun temp858_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp858_22 () (_ BitVec 64))
(declare-fun temp858_23 () (_ BitVec 64))
(declare-fun temp858_24 () (_ BitVec 64))
(declare-fun temp858_25 () (_ BitVec 64))
(declare-fun temp858_26 () (_ BitVec 64))
(declare-fun temp858_27 () (_ BitVec 64))
(declare-fun temp858_28 () (_ BitVec 64))
(declare-fun temp858_29 () (_ BitVec 64))
(declare-fun temp858_30 () (_ BitVec 64))
(declare-fun temp858_31 () (_ BitVec 64))
(declare-fun temp858_32 () (_ BitVec 64))
(declare-fun temp858_33 () (_ BitVec 64))
(declare-fun temp858_34 () (_ BitVec 64))
(declare-fun temp858_35 () (_ BitVec 64))
(declare-fun temp858_36 () (_ BitVec 64))
(declare-fun temp858_37 () (_ BitVec 64))
(declare-fun temp858_38 () (_ BitVec 64))
(declare-fun temp858_39 () (_ BitVec 64))
(declare-fun temp858_40 () (_ BitVec 64))
(declare-fun temp858_41 () (_ BitVec 64))
(declare-fun temp858_42 () (_ BitVec 64))
(declare-fun temp858_43 () (_ BitVec 64))
(declare-fun temp858_44 () (_ BitVec 64))
(declare-fun temp858_45 () (_ BitVec 64))
(declare-fun temp858_46 () (_ BitVec 64))
(declare-fun temp858_47 () (_ BitVec 64))
(declare-fun temp858_48 () (_ BitVec 64))
(declare-fun temp858_49 () (_ BitVec 64))
(declare-fun temp858_50 () (_ BitVec 64))
(declare-fun temp858_51 () (_ BitVec 64))
(declare-fun temp858_52 () (_ BitVec 64))
(declare-fun temp858_53 () (_ BitVec 64))
(declare-fun temp858_54 () (_ BitVec 64))
(declare-fun temp858_55 () (_ BitVec 64))
(declare-fun temp858_56 () (_ BitVec 64))
(declare-fun temp858_57 () (_ BitVec 64))
(declare-fun temp858_58 () (_ BitVec 64))
(declare-fun temp858_59 () (_ BitVec 64))
(declare-fun temp858_60 () (_ BitVec 64))
(declare-fun temp858_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp858_62 () (_ BitVec 64))
(declare-fun temp858_63 () (_ BitVec 64))
(declare-fun temp858_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp858_65 () (_ BitVec 64))
(declare-fun temp858_66 () (_ BitVec 64))
(declare-fun temp858_67 () (_ BitVec 64))
(declare-fun temp858_68 () (_ BitVec 64))
(declare-fun temp858_69 () (_ BitVec 64))
(declare-fun temp858_70 () (_ BitVec 64))
(declare-fun temp858_71 () (_ BitVec 64))
(declare-fun temp858_72 () (_ BitVec 64))
(declare-fun temp858_73 () (_ BitVec 64))
(declare-fun temp858_74 () (_ BitVec 64))
(declare-fun temp858_75 () (_ BitVec 64))
(declare-fun temp858_76 () (_ BitVec 64))
(declare-fun temp858_77 () (_ BitVec 64))
(declare-fun temp858_78 () (_ BitVec 64))
(declare-fun temp858_79 () (_ BitVec 64))
(declare-fun temp858_80 () (_ BitVec 64))
(declare-fun temp858_81 () (_ BitVec 64))
(declare-fun temp858_82 () (_ BitVec 64))
(declare-fun temp858_83 () (_ BitVec 64))
(declare-fun temp858_84 () (_ BitVec 64))
(declare-fun temp858_85 () (_ BitVec 64))
(declare-fun temp858_86 () (_ BitVec 64))
(declare-fun temp858_87 () (_ BitVec 64))
(declare-fun temp858_88 () (_ BitVec 64))
(declare-fun temp858_89 () (_ BitVec 64))
(declare-fun temp858_90 () (_ BitVec 64))
(declare-fun temp858_91 () (_ BitVec 64))
(declare-fun temp858_92 () (_ BitVec 64))
(declare-fun temp858_93 () (_ BitVec 64))
(declare-fun temp858_94 () (_ BitVec 64))
(declare-fun temp858_95 () (_ BitVec 64))
(declare-fun temp858_96 () (_ BitVec 64))
(declare-fun temp858_97 () (_ BitVec 64))
(declare-fun temp858_98 () (_ BitVec 64))
(declare-fun temp858_99 () (_ BitVec 64))
(declare-fun temp858_100 () (_ BitVec 64))
(declare-fun temp858_101 () (_ BitVec 64))
(declare-fun temp858_102 () (_ BitVec 64))
(declare-fun temp858_103 () (_ BitVec 64))
(declare-fun temp858_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp858_105 () (_ BitVec 64))
(declare-fun temp858_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp858_107 () (_ BitVec 64))
(declare-fun temp858_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp858_109 () (_ BitVec 64))
(declare-fun temp858_110 () (_ BitVec 64))
(declare-fun temp858_111 () (_ BitVec 64))
(declare-fun temp858_112 () (_ BitVec 64))
(declare-fun temp858_113 () (_ BitVec 64))
(declare-fun temp858_114 () (_ BitVec 64))
(declare-fun temp858_115 () (_ BitVec 64))
(declare-fun temp858_116 () (_ BitVec 64))
(declare-fun temp858_117 () (_ BitVec 64))
(declare-fun temp858_118 () (_ BitVec 64))
(declare-fun temp858_119 () (_ BitVec 64))
(declare-fun temp858_120 () (_ BitVec 64))
(declare-fun temp858_121 () (_ BitVec 64))
(declare-fun temp858_122 () (_ BitVec 64))
(declare-fun temp858_123 () (_ BitVec 64))
(declare-fun temp858_124 () (_ BitVec 64))
(declare-fun temp858_126 () (_ BitVec 64))
(declare-fun temp858_127 () (_ BitVec 64))
(declare-fun temp858_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp858_128 () (_ BitVec 64))
(declare-fun temp858_129 () (_ BitVec 64))
(declare-fun temp858_131 () (_ BitVec 64))
(declare-fun temp858_132 () (_ BitVec 64))
(declare-fun temp858_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp858_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp858_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp858_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp858_136 () (_ BitVec 64))
(declare-fun temp858_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp858_139 () (_ BitVec 64))
(declare-fun temp858_140 () (_ BitVec 64))
(declare-fun temp858_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp858_141 () (_ BitVec 64))
(declare-fun temp858_143 () (_ BitVec 64))
(declare-fun temp858_144 () (_ BitVec 64))
(declare-fun temp858_142 () (_ BitVec 64))
(declare-fun temp858_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp858_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp858_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp858_148 () (_ BitVec 64))
(declare-fun temp858_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp858_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp858_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp858_152 () (_ BitVec 64))
(assert (= temp858_1 #x0000000000000002))
(assert (= var989741 temp858_1))
(assert (= temp858_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp858_2)))
(assert (= temp858_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp858_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp858_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp858_4)))
(assert (= temp858_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp858_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp858_6 #x0000000000000000))
(assert (= var989776 temp858_6))
(assert (= temp858_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp858_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp858_8 #x0000000000000001))
(assert (= var989810 temp858_8))
(assert (= temp858_10 #x0000000000000000))
(assert (= temp858_9 temp858_10))
(assert (= temp858_12 #x0000000000000002))
(assert (= temp858_11 temp858_12))
(assert (= temp858_13 #x0000000000000000))
(assert (= var1387902 temp858_13))
(assert (= temp858_14 #x0000000000000001))
(assert (= var1387923 temp858_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp858_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp858_15)))
(assert (= temp858_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp858_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp858_17 #x0000000000000000))
(assert (= var1521661 temp858_17))
(assert (= temp858_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp858_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp858_19 #x0000000000000000))
(assert (= var1521706 temp858_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp858_20 #x0000000000000000))
(assert (= temp858_21 temp858_20))
(assert (= temp858_22 (select ARGNAME_padding_NAMEEND_VAL temp858_21)))
(assert (= temp858_23 #x0000000000000001))
(assert (= temp858_24 temp858_23))
(assert (= temp858_25 (select ARGNAME_padding_NAMEEND_VAL temp858_24)))
(assert (= temp858_26 #x0000000000000002))
(assert (= temp858_27 temp858_26))
(assert (= temp858_28 (select ARGNAME_padding_NAMEEND_VAL temp858_27)))
(assert (= temp858_29 #x0000000000000003))
(assert (= temp858_30 temp858_29))
(assert (= temp858_31 (select ARGNAME_padding_NAMEEND_VAL temp858_30)))
(assert (= temp858_32 #x0000000000000004))
(assert (= temp858_33 temp858_32))
(assert (= temp858_34 (select ARGNAME_padding_NAMEEND_VAL temp858_33)))
(assert (= temp858_35 #x0000000000000005))
(assert (= temp858_36 temp858_35))
(assert (= temp858_37 (select ARGNAME_padding_NAMEEND_VAL temp858_36)))
(assert (= temp858_38 #x0000000000000000))
(assert (= temp858_39 #x0000000000000000))
(assert (= temp858_40 temp858_39))
(assert (= temp858_41 (select ARGNAME_padding_NAMEEND_VAL temp858_40)))
(assert (= temp858_42 #x0000000000000000))
(assert (= temp858_43 #x0000000000000001))
(assert (= temp858_44 temp858_43))
(assert (= temp858_45 (select ARGNAME_padding_NAMEEND_VAL temp858_44)))
(assert (= temp858_46 #x0000000000000000))
(assert (= temp858_47 #x0000000000000002))
(assert (= temp858_48 temp858_47))
(assert (= temp858_49 (select ARGNAME_padding_NAMEEND_VAL temp858_48)))
(assert (= temp858_50 #x0000000000000000))
(assert (= temp858_51 #x0000000000000003))
(assert (= temp858_52 temp858_51))
(assert (= temp858_53 (select ARGNAME_padding_NAMEEND_VAL temp858_52)))
(assert (= temp858_54 #x0000000000000000))
(assert (= temp858_55 #x0000000000000004))
(assert (= temp858_56 temp858_55))
(assert (= temp858_57 (select ARGNAME_padding_NAMEEND_VAL temp858_56)))
(assert (= temp858_58 #x0000000000000000))
(assert (= temp858_59 #x0000000000000005))
(assert (= temp858_60 temp858_59))
(assert (= temp858_61 (select ARGNAME_padding_NAMEEND_VAL temp858_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp858_41 temp858_38)
             (bvslt temp858_45 temp858_42)
             (bvslt temp858_49 temp858_46)
             (bvslt temp858_53 temp858_50)
             (bvslt temp858_57 temp858_54)
             (bvslt temp858_61 temp858_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp858_62 #x0000000000000000))
(assert (= var2240290 temp858_62))
(assert (= temp858_63 #x0000000000000000))
(assert (= temp858_64 temp858_63))
(assert (= temp858_65 (select ARGNAME_stride_NAMEEND_VAL temp858_64)))
(assert (= temp858_66 #x0000000000000001))
(assert (= temp858_67 temp858_66))
(assert (= temp858_68 (select ARGNAME_stride_NAMEEND_VAL temp858_67)))
(assert (= temp858_69 #x0000000000000002))
(assert (= temp858_70 temp858_69))
(assert (= temp858_71 (select ARGNAME_stride_NAMEEND_VAL temp858_70)))
(assert (= temp858_72 #x0000000000000003))
(assert (= temp858_73 temp858_72))
(assert (= temp858_74 (select ARGNAME_stride_NAMEEND_VAL temp858_73)))
(assert (= temp858_75 #x0000000000000004))
(assert (= temp858_76 temp858_75))
(assert (= temp858_77 (select ARGNAME_stride_NAMEEND_VAL temp858_76)))
(assert (= temp858_78 #x0000000000000005))
(assert (= temp858_79 temp858_78))
(assert (= temp858_80 (select ARGNAME_stride_NAMEEND_VAL temp858_79)))
(assert (= temp858_81 #x0000000000000000))
(assert (= temp858_82 #x0000000000000000))
(assert (= temp858_83 temp858_82))
(assert (= temp858_84 (select ARGNAME_stride_NAMEEND_VAL temp858_83)))
(assert (= temp858_85 #x0000000000000000))
(assert (= temp858_86 #x0000000000000001))
(assert (= temp858_87 temp858_86))
(assert (= temp858_88 (select ARGNAME_stride_NAMEEND_VAL temp858_87)))
(assert (= temp858_89 #x0000000000000000))
(assert (= temp858_90 #x0000000000000002))
(assert (= temp858_91 temp858_90))
(assert (= temp858_92 (select ARGNAME_stride_NAMEEND_VAL temp858_91)))
(assert (= temp858_93 #x0000000000000000))
(assert (= temp858_94 #x0000000000000003))
(assert (= temp858_95 temp858_94))
(assert (= temp858_96 (select ARGNAME_stride_NAMEEND_VAL temp858_95)))
(assert (= temp858_97 #x0000000000000000))
(assert (= temp858_98 #x0000000000000004))
(assert (= temp858_99 temp858_98))
(assert (= temp858_100 (select ARGNAME_stride_NAMEEND_VAL temp858_99)))
(assert (= temp858_101 #x0000000000000000))
(assert (= temp858_102 #x0000000000000005))
(assert (= temp858_103 temp858_102))
(assert (= temp858_104 (select ARGNAME_stride_NAMEEND_VAL temp858_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp858_84 temp858_81)
             (bvsle temp858_88 temp858_85)
             (bvsle temp858_92 temp858_89)
             (bvsle temp858_96 temp858_93)
             (bvsle temp858_100 temp858_97)
             (bvsle temp858_104 temp858_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp858_105 #x0000000000000000))
(assert (= var2240311 temp858_105))
(assert (= temp858_106 #x0000000000000000))
(assert (= var2228402 temp858_106))
(assert (= temp858_107 #x0000000000000000))
(assert (= temp858_108 temp858_107))
(assert (= temp858_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp858_108)))
(assert (= temp858_110 #x0000000000000001))
(assert (= temp858_111 temp858_110))
(assert (= temp858_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp858_111)))
(assert (= temp858_113 #x0000000000000002))
(assert (= temp858_114 temp858_113))
(assert (= temp858_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp858_114)))
(assert (= temp858_116 #x0000000000000003))
(assert (= temp858_117 temp858_116))
(assert (= temp858_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp858_117)))
(assert (= temp858_119 #x0000000000000004))
(assert (= temp858_120 temp858_119))
(assert (= temp858_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp858_120)))
(assert (= temp858_122 #x0000000000000005))
(assert (= temp858_123 temp858_122))
(assert (= temp858_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp858_123)))
(assert (= temp858_126 var2228402))
(assert (= temp858_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp858_126)))
(assert (= temp858_125 temp858_127))
(assert (= var2240356
   (ite (bvslt temp858_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp858_128 #x0000000000000000))
(assert (= var2240356 temp858_128))
(assert (= temp858_129 #x0000000000000000))
(assert (= var2228402 temp858_129))
(assert (= temp858_131 var2228402))
(assert (= temp858_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp858_131)))
(assert (= temp858_130 temp858_132))
(assert (= var2240378 (bvsmod temp858_130 ARGNAME_groups_NAMEEND)))
(assert (= temp858_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp858_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp858_134 #x0000000000000001))
(assert (= var2240379 temp858_134))
(assert (= var2240398 var2240288))
(assert (= temp858_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp858_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp858_136 #x0000000000000001))
(assert (= var2240399 temp858_136))
(assert (= temp858_137 #x0000000000000001))
(assert (= var2229290 temp858_137))
(assert (= temp858_139 var2229290))
(assert (= temp858_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp858_139)))
(assert (= temp858_138 temp858_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp858_138)))
(assert (= temp858_141 #x0000000000000000))
(assert (= var2228402 temp858_141))
(assert (= temp858_143 var2228402))
(assert (= temp858_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp858_143)))
(assert (= temp858_142 temp858_144))
(assert (= temp858_145 #x0000000000000002))
(assert (= var2503529 temp858_145))
(assert (= temp858_146 #x0000000000000001))
(assert (= var2240569 temp858_146))
(assert (= temp858_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp858_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp858_148 #x0000000000000001))
(assert (= var1521778 temp858_148))
(assert (= temp858_149 #x0000000000000001))
(assert (= var1521908 temp858_149))
(assert (= var4010473 var1521908))
(assert (= temp858_150 #x0000000000000000))
(assert (= var4210495 temp858_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp858_151 #x0000000000000002))
(assert (= var4339331 temp858_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var5321104 var1521921))
(assert (= var5583248 var1521921))
(assert (= temp858_152 #x0000000000000001))
(assert (= var1521778 temp858_152))
(model-add temp858_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp858_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp858_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp858_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp858_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp858_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






