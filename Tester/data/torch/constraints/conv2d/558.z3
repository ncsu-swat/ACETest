(declare-fun temp742_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp742_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp742_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp742_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp742_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp742_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp742_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp742_8 () (_ BitVec 64))
(declare-fun temp742_10 () (_ BitVec 64))
(declare-fun temp742_9 () (_ BitVec 64))
(declare-fun temp742_12 () (_ BitVec 64))
(declare-fun temp742_11 () (_ BitVec 64))
(declare-fun temp742_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp742_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp742_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp742_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp742_17 () (_ BitVec 64))
(declare-fun temp742_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp742_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp742_20 () (_ BitVec 64))
(declare-fun temp742_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp742_22 () (_ BitVec 64))
(declare-fun temp742_23 () (_ BitVec 64))
(declare-fun temp742_24 () (_ BitVec 64))
(declare-fun temp742_25 () (_ BitVec 64))
(declare-fun temp742_26 () (_ BitVec 64))
(declare-fun temp742_27 () (_ BitVec 64))
(declare-fun temp742_28 () (_ BitVec 64))
(declare-fun temp742_29 () (_ BitVec 64))
(declare-fun temp742_30 () (_ BitVec 64))
(declare-fun temp742_31 () (_ BitVec 64))
(declare-fun temp742_32 () (_ BitVec 64))
(declare-fun temp742_33 () (_ BitVec 64))
(declare-fun temp742_34 () (_ BitVec 64))
(declare-fun temp742_35 () (_ BitVec 64))
(declare-fun temp742_36 () (_ BitVec 64))
(declare-fun temp742_37 () (_ BitVec 64))
(declare-fun temp742_38 () (_ BitVec 64))
(declare-fun temp742_39 () (_ BitVec 64))
(declare-fun temp742_40 () (_ BitVec 64))
(declare-fun temp742_41 () (_ BitVec 64))
(declare-fun temp742_42 () (_ BitVec 64))
(declare-fun temp742_43 () (_ BitVec 64))
(declare-fun temp742_44 () (_ BitVec 64))
(declare-fun temp742_45 () (_ BitVec 64))
(declare-fun temp742_46 () (_ BitVec 64))
(declare-fun temp742_47 () (_ BitVec 64))
(declare-fun temp742_48 () (_ BitVec 64))
(declare-fun temp742_49 () (_ BitVec 64))
(declare-fun temp742_50 () (_ BitVec 64))
(declare-fun temp742_51 () (_ BitVec 64))
(declare-fun temp742_52 () (_ BitVec 64))
(declare-fun temp742_53 () (_ BitVec 64))
(declare-fun temp742_54 () (_ BitVec 64))
(declare-fun temp742_55 () (_ BitVec 64))
(declare-fun temp742_56 () (_ BitVec 64))
(declare-fun temp742_57 () (_ BitVec 64))
(declare-fun temp742_58 () (_ BitVec 64))
(declare-fun temp742_59 () (_ BitVec 64))
(declare-fun temp742_60 () (_ BitVec 64))
(declare-fun temp742_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp742_62 () (_ BitVec 64))
(declare-fun temp742_63 () (_ BitVec 64))
(declare-fun temp742_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp742_65 () (_ BitVec 64))
(declare-fun temp742_66 () (_ BitVec 64))
(declare-fun temp742_67 () (_ BitVec 64))
(declare-fun temp742_68 () (_ BitVec 64))
(declare-fun temp742_69 () (_ BitVec 64))
(declare-fun temp742_70 () (_ BitVec 64))
(declare-fun temp742_71 () (_ BitVec 64))
(declare-fun temp742_72 () (_ BitVec 64))
(declare-fun temp742_73 () (_ BitVec 64))
(declare-fun temp742_74 () (_ BitVec 64))
(declare-fun temp742_75 () (_ BitVec 64))
(declare-fun temp742_76 () (_ BitVec 64))
(declare-fun temp742_77 () (_ BitVec 64))
(declare-fun temp742_78 () (_ BitVec 64))
(declare-fun temp742_79 () (_ BitVec 64))
(declare-fun temp742_80 () (_ BitVec 64))
(declare-fun temp742_81 () (_ BitVec 64))
(declare-fun temp742_82 () (_ BitVec 64))
(declare-fun temp742_83 () (_ BitVec 64))
(declare-fun temp742_84 () (_ BitVec 64))
(declare-fun temp742_85 () (_ BitVec 64))
(declare-fun temp742_86 () (_ BitVec 64))
(declare-fun temp742_87 () (_ BitVec 64))
(declare-fun temp742_88 () (_ BitVec 64))
(declare-fun temp742_89 () (_ BitVec 64))
(declare-fun temp742_90 () (_ BitVec 64))
(declare-fun temp742_91 () (_ BitVec 64))
(declare-fun temp742_92 () (_ BitVec 64))
(declare-fun temp742_93 () (_ BitVec 64))
(declare-fun temp742_94 () (_ BitVec 64))
(declare-fun temp742_95 () (_ BitVec 64))
(declare-fun temp742_96 () (_ BitVec 64))
(declare-fun temp742_97 () (_ BitVec 64))
(declare-fun temp742_98 () (_ BitVec 64))
(declare-fun temp742_99 () (_ BitVec 64))
(declare-fun temp742_100 () (_ BitVec 64))
(declare-fun temp742_101 () (_ BitVec 64))
(declare-fun temp742_102 () (_ BitVec 64))
(declare-fun temp742_103 () (_ BitVec 64))
(declare-fun temp742_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp742_105 () (_ BitVec 64))
(declare-fun temp742_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp742_107 () (_ BitVec 64))
(declare-fun temp742_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp742_109 () (_ BitVec 64))
(declare-fun temp742_110 () (_ BitVec 64))
(declare-fun temp742_111 () (_ BitVec 64))
(declare-fun temp742_112 () (_ BitVec 64))
(declare-fun temp742_113 () (_ BitVec 64))
(declare-fun temp742_114 () (_ BitVec 64))
(declare-fun temp742_115 () (_ BitVec 64))
(declare-fun temp742_116 () (_ BitVec 64))
(declare-fun temp742_117 () (_ BitVec 64))
(declare-fun temp742_118 () (_ BitVec 64))
(declare-fun temp742_119 () (_ BitVec 64))
(declare-fun temp742_120 () (_ BitVec 64))
(declare-fun temp742_121 () (_ BitVec 64))
(declare-fun temp742_122 () (_ BitVec 64))
(declare-fun temp742_123 () (_ BitVec 64))
(declare-fun temp742_124 () (_ BitVec 64))
(declare-fun temp742_126 () (_ BitVec 64))
(declare-fun temp742_127 () (_ BitVec 64))
(declare-fun temp742_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp742_128 () (_ BitVec 64))
(declare-fun temp742_129 () (_ BitVec 64))
(declare-fun temp742_131 () (_ BitVec 64))
(declare-fun temp742_132 () (_ BitVec 64))
(declare-fun temp742_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp742_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp742_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp742_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp742_136 () (_ BitVec 64))
(declare-fun temp742_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp742_139 () (_ BitVec 64))
(declare-fun temp742_140 () (_ BitVec 64))
(declare-fun temp742_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp742_141 () (_ BitVec 64))
(declare-fun temp742_143 () (_ BitVec 64))
(declare-fun temp742_144 () (_ BitVec 64))
(declare-fun temp742_142 () (_ BitVec 64))
(declare-fun temp742_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp742_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp742_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp742_148 () (_ BitVec 64))
(declare-fun temp742_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp742_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp742_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp742_153 () (_ BitVec 64))
(declare-fun temp742_152 () (_ BitVec 64))
(declare-fun temp742_154 () (_ BitVec 64))
(assert (= temp742_1 #x0000000000000002))
(assert (= var989741 temp742_1))
(assert (= temp742_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp742_2)))
(assert (= temp742_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp742_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp742_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp742_4)))
(assert (= temp742_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp742_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp742_6 #x0000000000000000))
(assert (= var989776 temp742_6))
(assert (= temp742_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp742_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp742_8 #x0000000000000001))
(assert (= var989810 temp742_8))
(assert (= temp742_10 #x0000000000000000))
(assert (= temp742_9 temp742_10))
(assert (= temp742_12 #x0000000000000002))
(assert (= temp742_11 temp742_12))
(assert (= temp742_13 #x0000000000000000))
(assert (= var1387902 temp742_13))
(assert (= temp742_14 #x0000000000000001))
(assert (= var1387923 temp742_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp742_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp742_15)))
(assert (= temp742_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp742_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp742_17 #x0000000000000000))
(assert (= var1521661 temp742_17))
(assert (= temp742_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp742_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp742_19 #x0000000000000000))
(assert (= var1521706 temp742_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp742_20 #x0000000000000000))
(assert (= temp742_21 temp742_20))
(assert (= temp742_22 (select ARGNAME_padding_NAMEEND_VAL temp742_21)))
(assert (= temp742_23 #x0000000000000001))
(assert (= temp742_24 temp742_23))
(assert (= temp742_25 (select ARGNAME_padding_NAMEEND_VAL temp742_24)))
(assert (= temp742_26 #x0000000000000002))
(assert (= temp742_27 temp742_26))
(assert (= temp742_28 (select ARGNAME_padding_NAMEEND_VAL temp742_27)))
(assert (= temp742_29 #x0000000000000003))
(assert (= temp742_30 temp742_29))
(assert (= temp742_31 (select ARGNAME_padding_NAMEEND_VAL temp742_30)))
(assert (= temp742_32 #x0000000000000004))
(assert (= temp742_33 temp742_32))
(assert (= temp742_34 (select ARGNAME_padding_NAMEEND_VAL temp742_33)))
(assert (= temp742_35 #x0000000000000005))
(assert (= temp742_36 temp742_35))
(assert (= temp742_37 (select ARGNAME_padding_NAMEEND_VAL temp742_36)))
(assert (= temp742_38 #x0000000000000000))
(assert (= temp742_39 #x0000000000000000))
(assert (= temp742_40 temp742_39))
(assert (= temp742_41 (select ARGNAME_padding_NAMEEND_VAL temp742_40)))
(assert (= temp742_42 #x0000000000000000))
(assert (= temp742_43 #x0000000000000001))
(assert (= temp742_44 temp742_43))
(assert (= temp742_45 (select ARGNAME_padding_NAMEEND_VAL temp742_44)))
(assert (= temp742_46 #x0000000000000000))
(assert (= temp742_47 #x0000000000000002))
(assert (= temp742_48 temp742_47))
(assert (= temp742_49 (select ARGNAME_padding_NAMEEND_VAL temp742_48)))
(assert (= temp742_50 #x0000000000000000))
(assert (= temp742_51 #x0000000000000003))
(assert (= temp742_52 temp742_51))
(assert (= temp742_53 (select ARGNAME_padding_NAMEEND_VAL temp742_52)))
(assert (= temp742_54 #x0000000000000000))
(assert (= temp742_55 #x0000000000000004))
(assert (= temp742_56 temp742_55))
(assert (= temp742_57 (select ARGNAME_padding_NAMEEND_VAL temp742_56)))
(assert (= temp742_58 #x0000000000000000))
(assert (= temp742_59 #x0000000000000005))
(assert (= temp742_60 temp742_59))
(assert (= temp742_61 (select ARGNAME_padding_NAMEEND_VAL temp742_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp742_41 temp742_38)
             (bvslt temp742_45 temp742_42)
             (bvslt temp742_49 temp742_46)
             (bvslt temp742_53 temp742_50)
             (bvslt temp742_57 temp742_54)
             (bvslt temp742_61 temp742_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp742_62 #x0000000000000000))
(assert (= var2240290 temp742_62))
(assert (= temp742_63 #x0000000000000000))
(assert (= temp742_64 temp742_63))
(assert (= temp742_65 (select ARGNAME_stride_NAMEEND_VAL temp742_64)))
(assert (= temp742_66 #x0000000000000001))
(assert (= temp742_67 temp742_66))
(assert (= temp742_68 (select ARGNAME_stride_NAMEEND_VAL temp742_67)))
(assert (= temp742_69 #x0000000000000002))
(assert (= temp742_70 temp742_69))
(assert (= temp742_71 (select ARGNAME_stride_NAMEEND_VAL temp742_70)))
(assert (= temp742_72 #x0000000000000003))
(assert (= temp742_73 temp742_72))
(assert (= temp742_74 (select ARGNAME_stride_NAMEEND_VAL temp742_73)))
(assert (= temp742_75 #x0000000000000004))
(assert (= temp742_76 temp742_75))
(assert (= temp742_77 (select ARGNAME_stride_NAMEEND_VAL temp742_76)))
(assert (= temp742_78 #x0000000000000005))
(assert (= temp742_79 temp742_78))
(assert (= temp742_80 (select ARGNAME_stride_NAMEEND_VAL temp742_79)))
(assert (= temp742_81 #x0000000000000000))
(assert (= temp742_82 #x0000000000000000))
(assert (= temp742_83 temp742_82))
(assert (= temp742_84 (select ARGNAME_stride_NAMEEND_VAL temp742_83)))
(assert (= temp742_85 #x0000000000000000))
(assert (= temp742_86 #x0000000000000001))
(assert (= temp742_87 temp742_86))
(assert (= temp742_88 (select ARGNAME_stride_NAMEEND_VAL temp742_87)))
(assert (= temp742_89 #x0000000000000000))
(assert (= temp742_90 #x0000000000000002))
(assert (= temp742_91 temp742_90))
(assert (= temp742_92 (select ARGNAME_stride_NAMEEND_VAL temp742_91)))
(assert (= temp742_93 #x0000000000000000))
(assert (= temp742_94 #x0000000000000003))
(assert (= temp742_95 temp742_94))
(assert (= temp742_96 (select ARGNAME_stride_NAMEEND_VAL temp742_95)))
(assert (= temp742_97 #x0000000000000000))
(assert (= temp742_98 #x0000000000000004))
(assert (= temp742_99 temp742_98))
(assert (= temp742_100 (select ARGNAME_stride_NAMEEND_VAL temp742_99)))
(assert (= temp742_101 #x0000000000000000))
(assert (= temp742_102 #x0000000000000005))
(assert (= temp742_103 temp742_102))
(assert (= temp742_104 (select ARGNAME_stride_NAMEEND_VAL temp742_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp742_84 temp742_81)
             (bvsle temp742_88 temp742_85)
             (bvsle temp742_92 temp742_89)
             (bvsle temp742_96 temp742_93)
             (bvsle temp742_100 temp742_97)
             (bvsle temp742_104 temp742_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp742_105 #x0000000000000000))
(assert (= var2240311 temp742_105))
(assert (= temp742_106 #x0000000000000000))
(assert (= var2228402 temp742_106))
(assert (= temp742_107 #x0000000000000000))
(assert (= temp742_108 temp742_107))
(assert (= temp742_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp742_108)))
(assert (= temp742_110 #x0000000000000001))
(assert (= temp742_111 temp742_110))
(assert (= temp742_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp742_111)))
(assert (= temp742_113 #x0000000000000002))
(assert (= temp742_114 temp742_113))
(assert (= temp742_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp742_114)))
(assert (= temp742_116 #x0000000000000003))
(assert (= temp742_117 temp742_116))
(assert (= temp742_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp742_117)))
(assert (= temp742_119 #x0000000000000004))
(assert (= temp742_120 temp742_119))
(assert (= temp742_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp742_120)))
(assert (= temp742_122 #x0000000000000005))
(assert (= temp742_123 temp742_122))
(assert (= temp742_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp742_123)))
(assert (= temp742_126 var2228402))
(assert (= temp742_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp742_126)))
(assert (= temp742_125 temp742_127))
(assert (= var2240356
   (ite (bvslt temp742_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp742_128 #x0000000000000000))
(assert (= var2240356 temp742_128))
(assert (= temp742_129 #x0000000000000000))
(assert (= var2228402 temp742_129))
(assert (= temp742_131 var2228402))
(assert (= temp742_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp742_131)))
(assert (= temp742_130 temp742_132))
(assert (= var2240378 (bvsmod temp742_130 ARGNAME_groups_NAMEEND)))
(assert (= temp742_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp742_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp742_134 #x0000000000000001))
(assert (= var2240379 temp742_134))
(assert (= var2240398 var2240288))
(assert (= temp742_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp742_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp742_136 #x0000000000000001))
(assert (= var2240399 temp742_136))
(assert (= temp742_137 #x0000000000000001))
(assert (= var2229290 temp742_137))
(assert (= temp742_139 var2229290))
(assert (= temp742_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp742_139)))
(assert (= temp742_138 temp742_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp742_138)))
(assert (= temp742_141 #x0000000000000000))
(assert (= var2228402 temp742_141))
(assert (= temp742_143 var2228402))
(assert (= temp742_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp742_143)))
(assert (= temp742_142 temp742_144))
(assert (= temp742_145 #x0000000000000002))
(assert (= var2503529 temp742_145))
(assert (= temp742_146 #x0000000000000001))
(assert (= var2240569 temp742_146))
(assert (= temp742_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp742_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp742_148 #x0000000000000001))
(assert (= var1521778 temp742_148))
(assert (= temp742_149 #x0000000000000001))
(assert (= var1521908 temp742_149))
(assert (= var4010473 var1521908))
(assert (= temp742_150 #x0000000000000000))
(assert (= var4210495 temp742_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp742_151 #x0000000000000002))
(assert (= var4339331 temp742_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp742_153 #xffffffffffffffff))
(assert (= temp742_152 temp742_153))
(assert (= temp742_154 #x0000000000000001))
(assert (= var1521778 temp742_154))
(model-add temp742_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp742_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp742_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp742_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp742_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp742_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






