(declare-fun temp50_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp50_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp50_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp50_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp50_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp50_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp50_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp50_8 () (_ BitVec 64))
(declare-fun temp50_10 () (_ BitVec 64))
(declare-fun temp50_9 () (_ BitVec 64))
(declare-fun temp50_12 () (_ BitVec 64))
(declare-fun temp50_11 () (_ BitVec 64))
(declare-fun temp50_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp50_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp50_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp50_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp50_17 () (_ BitVec 64))
(declare-fun temp50_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp50_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp50_20 () (_ BitVec 64))
(declare-fun temp50_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp50_22 () (_ BitVec 64))
(declare-fun temp50_23 () (_ BitVec 64))
(declare-fun temp50_24 () (_ BitVec 64))
(declare-fun temp50_25 () (_ BitVec 64))
(declare-fun temp50_26 () (_ BitVec 64))
(declare-fun temp50_27 () (_ BitVec 64))
(declare-fun temp50_28 () (_ BitVec 64))
(declare-fun temp50_29 () (_ BitVec 64))
(declare-fun temp50_30 () (_ BitVec 64))
(declare-fun temp50_31 () (_ BitVec 64))
(declare-fun temp50_32 () (_ BitVec 64))
(declare-fun temp50_33 () (_ BitVec 64))
(declare-fun temp50_34 () (_ BitVec 64))
(declare-fun temp50_35 () (_ BitVec 64))
(declare-fun temp50_36 () (_ BitVec 64))
(declare-fun temp50_37 () (_ BitVec 64))
(declare-fun temp50_38 () (_ BitVec 64))
(declare-fun temp50_39 () (_ BitVec 64))
(declare-fun temp50_40 () (_ BitVec 64))
(declare-fun temp50_41 () (_ BitVec 64))
(declare-fun temp50_42 () (_ BitVec 64))
(declare-fun temp50_43 () (_ BitVec 64))
(declare-fun temp50_44 () (_ BitVec 64))
(declare-fun temp50_45 () (_ BitVec 64))
(declare-fun temp50_46 () (_ BitVec 64))
(declare-fun temp50_47 () (_ BitVec 64))
(declare-fun temp50_48 () (_ BitVec 64))
(declare-fun temp50_49 () (_ BitVec 64))
(declare-fun temp50_50 () (_ BitVec 64))
(declare-fun temp50_51 () (_ BitVec 64))
(declare-fun temp50_52 () (_ BitVec 64))
(declare-fun temp50_53 () (_ BitVec 64))
(declare-fun temp50_54 () (_ BitVec 64))
(declare-fun temp50_55 () (_ BitVec 64))
(declare-fun temp50_56 () (_ BitVec 64))
(declare-fun temp50_57 () (_ BitVec 64))
(declare-fun temp50_58 () (_ BitVec 64))
(declare-fun temp50_59 () (_ BitVec 64))
(declare-fun temp50_60 () (_ BitVec 64))
(declare-fun temp50_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp50_62 () (_ BitVec 64))
(declare-fun temp50_63 () (_ BitVec 64))
(declare-fun temp50_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp50_65 () (_ BitVec 64))
(declare-fun temp50_66 () (_ BitVec 64))
(declare-fun temp50_67 () (_ BitVec 64))
(declare-fun temp50_68 () (_ BitVec 64))
(declare-fun temp50_69 () (_ BitVec 64))
(declare-fun temp50_70 () (_ BitVec 64))
(declare-fun temp50_71 () (_ BitVec 64))
(declare-fun temp50_72 () (_ BitVec 64))
(declare-fun temp50_73 () (_ BitVec 64))
(declare-fun temp50_74 () (_ BitVec 64))
(declare-fun temp50_75 () (_ BitVec 64))
(declare-fun temp50_76 () (_ BitVec 64))
(declare-fun temp50_77 () (_ BitVec 64))
(declare-fun temp50_78 () (_ BitVec 64))
(declare-fun temp50_79 () (_ BitVec 64))
(declare-fun temp50_80 () (_ BitVec 64))
(declare-fun temp50_81 () (_ BitVec 64))
(declare-fun temp50_82 () (_ BitVec 64))
(declare-fun temp50_83 () (_ BitVec 64))
(declare-fun temp50_84 () (_ BitVec 64))
(declare-fun temp50_85 () (_ BitVec 64))
(declare-fun temp50_86 () (_ BitVec 64))
(declare-fun temp50_87 () (_ BitVec 64))
(declare-fun temp50_88 () (_ BitVec 64))
(declare-fun temp50_89 () (_ BitVec 64))
(declare-fun temp50_90 () (_ BitVec 64))
(declare-fun temp50_91 () (_ BitVec 64))
(declare-fun temp50_92 () (_ BitVec 64))
(declare-fun temp50_93 () (_ BitVec 64))
(declare-fun temp50_94 () (_ BitVec 64))
(declare-fun temp50_95 () (_ BitVec 64))
(declare-fun temp50_96 () (_ BitVec 64))
(declare-fun temp50_97 () (_ BitVec 64))
(declare-fun temp50_98 () (_ BitVec 64))
(declare-fun temp50_99 () (_ BitVec 64))
(declare-fun temp50_100 () (_ BitVec 64))
(declare-fun temp50_101 () (_ BitVec 64))
(declare-fun temp50_102 () (_ BitVec 64))
(declare-fun temp50_103 () (_ BitVec 64))
(declare-fun temp50_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp50_105 () (_ BitVec 64))
(declare-fun temp50_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp50_107 () (_ BitVec 64))
(declare-fun temp50_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp50_109 () (_ BitVec 64))
(declare-fun temp50_110 () (_ BitVec 64))
(declare-fun temp50_111 () (_ BitVec 64))
(declare-fun temp50_112 () (_ BitVec 64))
(declare-fun temp50_113 () (_ BitVec 64))
(declare-fun temp50_114 () (_ BitVec 64))
(declare-fun temp50_115 () (_ BitVec 64))
(declare-fun temp50_116 () (_ BitVec 64))
(declare-fun temp50_117 () (_ BitVec 64))
(declare-fun temp50_118 () (_ BitVec 64))
(declare-fun temp50_119 () (_ BitVec 64))
(declare-fun temp50_120 () (_ BitVec 64))
(declare-fun temp50_121 () (_ BitVec 64))
(declare-fun temp50_122 () (_ BitVec 64))
(declare-fun temp50_123 () (_ BitVec 64))
(declare-fun temp50_124 () (_ BitVec 64))
(declare-fun temp50_126 () (_ BitVec 64))
(declare-fun temp50_127 () (_ BitVec 64))
(declare-fun temp50_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp50_128 () (_ BitVec 64))
(declare-fun temp50_129 () (_ BitVec 64))
(declare-fun temp50_131 () (_ BitVec 64))
(declare-fun temp50_132 () (_ BitVec 64))
(declare-fun temp50_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp50_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp50_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp50_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp50_136 () (_ BitVec 64))
(declare-fun temp50_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp50_139 () (_ BitVec 64))
(declare-fun temp50_140 () (_ BitVec 64))
(declare-fun temp50_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp50_141 () (_ BitVec 64))
(declare-fun temp50_143 () (_ BitVec 64))
(declare-fun temp50_144 () (_ BitVec 64))
(declare-fun temp50_142 () (_ BitVec 64))
(declare-fun temp50_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp50_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp50_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp50_148 () (_ BitVec 64))
(declare-fun temp50_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp50_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp50_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var1522108 () (_ BitVec 64))
(declare-fun temp50_152 () (_ BitVec 64))
(declare-fun var1522109 () (_ BitVec 64))
(declare-fun var5521229 () (_ BitVec 64))
(declare-fun temp50_154 () (_ BitVec 64))
(declare-fun temp50_153 () (_ BitVec 64))
(declare-fun temp50_155 () (_ BitVec 64))
(declare-fun var6098410 () (_ BitVec 64))
(declare-fun temp50_157 () (_ BitVec 64))
(declare-fun temp50_156 () (_ BitVec 64))
(declare-fun temp50_158 () (_ BitVec 64))
(assert (= temp50_1 #x0000000000000002))
(assert (= var989741 temp50_1))
(assert (= temp50_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp50_2)))
(assert (= temp50_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp50_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp50_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp50_4)))
(assert (= temp50_5 #x0000000000000000))
(assert (= var989775 (ite (= var989774 temp50_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp50_6 #x0000000000000000))
(assert (= var989776 temp50_6))
(assert (= temp50_7 #x0000000000000000))
(assert (= var989810 (ite (= var989773 temp50_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp50_8 #x0000000000000001))
(assert (= var989810 temp50_8))
(assert (= temp50_10 #x0000000000000000))
(assert (= temp50_9 temp50_10))
(assert (= temp50_12 #x0000000000000002))
(assert (= temp50_11 temp50_12))
(assert (= temp50_13 #x0000000000000000))
(assert (= var1387902 temp50_13))
(assert (= temp50_14 #x0000000000000001))
(assert (= var1387923 temp50_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp50_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp50_15)))
(assert (= temp50_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp50_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_17 #x0000000000000000))
(assert (= var1521661 temp50_17))
(assert (= temp50_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp50_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_19 #x0000000000000000))
(assert (= var1521706 temp50_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp50_20 #x0000000000000000))
(assert (= temp50_21 temp50_20))
(assert (= temp50_22 (select ARGNAME_padding_NAMEEND_VAL temp50_21)))
(assert (= temp50_23 #x0000000000000001))
(assert (= temp50_24 temp50_23))
(assert (= temp50_25 (select ARGNAME_padding_NAMEEND_VAL temp50_24)))
(assert (= temp50_26 #x0000000000000002))
(assert (= temp50_27 temp50_26))
(assert (= temp50_28 (select ARGNAME_padding_NAMEEND_VAL temp50_27)))
(assert (= temp50_29 #x0000000000000003))
(assert (= temp50_30 temp50_29))
(assert (= temp50_31 (select ARGNAME_padding_NAMEEND_VAL temp50_30)))
(assert (= temp50_32 #x0000000000000004))
(assert (= temp50_33 temp50_32))
(assert (= temp50_34 (select ARGNAME_padding_NAMEEND_VAL temp50_33)))
(assert (= temp50_35 #x0000000000000005))
(assert (= temp50_36 temp50_35))
(assert (= temp50_37 (select ARGNAME_padding_NAMEEND_VAL temp50_36)))
(assert (= temp50_38 #x0000000000000000))
(assert (= temp50_39 #x0000000000000000))
(assert (= temp50_40 temp50_39))
(assert (= temp50_41 (select ARGNAME_padding_NAMEEND_VAL temp50_40)))
(assert (= temp50_42 #x0000000000000000))
(assert (= temp50_43 #x0000000000000001))
(assert (= temp50_44 temp50_43))
(assert (= temp50_45 (select ARGNAME_padding_NAMEEND_VAL temp50_44)))
(assert (= temp50_46 #x0000000000000000))
(assert (= temp50_47 #x0000000000000002))
(assert (= temp50_48 temp50_47))
(assert (= temp50_49 (select ARGNAME_padding_NAMEEND_VAL temp50_48)))
(assert (= temp50_50 #x0000000000000000))
(assert (= temp50_51 #x0000000000000003))
(assert (= temp50_52 temp50_51))
(assert (= temp50_53 (select ARGNAME_padding_NAMEEND_VAL temp50_52)))
(assert (= temp50_54 #x0000000000000000))
(assert (= temp50_55 #x0000000000000004))
(assert (= temp50_56 temp50_55))
(assert (= temp50_57 (select ARGNAME_padding_NAMEEND_VAL temp50_56)))
(assert (= temp50_58 #x0000000000000000))
(assert (= temp50_59 #x0000000000000005))
(assert (= temp50_60 temp50_59))
(assert (= temp50_61 (select ARGNAME_padding_NAMEEND_VAL temp50_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp50_41 temp50_38)
             (bvslt temp50_45 temp50_42)
             (bvslt temp50_49 temp50_46)
             (bvslt temp50_53 temp50_50)
             (bvslt temp50_57 temp50_54)
             (bvslt temp50_61 temp50_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_62 #x0000000000000000))
(assert (= var2240290 temp50_62))
(assert (= temp50_63 #x0000000000000000))
(assert (= temp50_64 temp50_63))
(assert (= temp50_65 (select ARGNAME_stride_NAMEEND_VAL temp50_64)))
(assert (= temp50_66 #x0000000000000001))
(assert (= temp50_67 temp50_66))
(assert (= temp50_68 (select ARGNAME_stride_NAMEEND_VAL temp50_67)))
(assert (= temp50_69 #x0000000000000002))
(assert (= temp50_70 temp50_69))
(assert (= temp50_71 (select ARGNAME_stride_NAMEEND_VAL temp50_70)))
(assert (= temp50_72 #x0000000000000003))
(assert (= temp50_73 temp50_72))
(assert (= temp50_74 (select ARGNAME_stride_NAMEEND_VAL temp50_73)))
(assert (= temp50_75 #x0000000000000004))
(assert (= temp50_76 temp50_75))
(assert (= temp50_77 (select ARGNAME_stride_NAMEEND_VAL temp50_76)))
(assert (= temp50_78 #x0000000000000005))
(assert (= temp50_79 temp50_78))
(assert (= temp50_80 (select ARGNAME_stride_NAMEEND_VAL temp50_79)))
(assert (= temp50_81 #x0000000000000000))
(assert (= temp50_82 #x0000000000000000))
(assert (= temp50_83 temp50_82))
(assert (= temp50_84 (select ARGNAME_stride_NAMEEND_VAL temp50_83)))
(assert (= temp50_85 #x0000000000000000))
(assert (= temp50_86 #x0000000000000001))
(assert (= temp50_87 temp50_86))
(assert (= temp50_88 (select ARGNAME_stride_NAMEEND_VAL temp50_87)))
(assert (= temp50_89 #x0000000000000000))
(assert (= temp50_90 #x0000000000000002))
(assert (= temp50_91 temp50_90))
(assert (= temp50_92 (select ARGNAME_stride_NAMEEND_VAL temp50_91)))
(assert (= temp50_93 #x0000000000000000))
(assert (= temp50_94 #x0000000000000003))
(assert (= temp50_95 temp50_94))
(assert (= temp50_96 (select ARGNAME_stride_NAMEEND_VAL temp50_95)))
(assert (= temp50_97 #x0000000000000000))
(assert (= temp50_98 #x0000000000000004))
(assert (= temp50_99 temp50_98))
(assert (= temp50_100 (select ARGNAME_stride_NAMEEND_VAL temp50_99)))
(assert (= temp50_101 #x0000000000000000))
(assert (= temp50_102 #x0000000000000005))
(assert (= temp50_103 temp50_102))
(assert (= temp50_104 (select ARGNAME_stride_NAMEEND_VAL temp50_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp50_84 temp50_81)
             (bvsle temp50_88 temp50_85)
             (bvsle temp50_92 temp50_89)
             (bvsle temp50_96 temp50_93)
             (bvsle temp50_100 temp50_97)
             (bvsle temp50_104 temp50_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_105 #x0000000000000000))
(assert (= var2240311 temp50_105))
(assert (= temp50_106 #x0000000000000000))
(assert (= var2228402 temp50_106))
(assert (= temp50_107 #x0000000000000000))
(assert (= temp50_108 temp50_107))
(assert (= temp50_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_108)))
(assert (= temp50_110 #x0000000000000001))
(assert (= temp50_111 temp50_110))
(assert (= temp50_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_111)))
(assert (= temp50_113 #x0000000000000002))
(assert (= temp50_114 temp50_113))
(assert (= temp50_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_114)))
(assert (= temp50_116 #x0000000000000003))
(assert (= temp50_117 temp50_116))
(assert (= temp50_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_117)))
(assert (= temp50_119 #x0000000000000004))
(assert (= temp50_120 temp50_119))
(assert (= temp50_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_120)))
(assert (= temp50_122 #x0000000000000005))
(assert (= temp50_123 temp50_122))
(assert (= temp50_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_123)))
(assert (= temp50_126 var2228402))
(assert (= temp50_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_126)))
(assert (= temp50_125 temp50_127))
(assert (= var2240356
   (ite (bvslt temp50_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_128 #x0000000000000000))
(assert (= var2240356 temp50_128))
(assert (= temp50_129 #x0000000000000000))
(assert (= var2228402 temp50_129))
(assert (= temp50_131 var2228402))
(assert (= temp50_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_131)))
(assert (= temp50_130 temp50_132))
(assert (= var2240378 (bvsmod temp50_130 ARGNAME_groups_NAMEEND)))
(assert (= temp50_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp50_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp50_134 #x0000000000000001))
(assert (= var2240379 temp50_134))
(assert (= var2240398 var2240288))
(assert (= temp50_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp50_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp50_136 #x0000000000000001))
(assert (= var2240399 temp50_136))
(assert (= temp50_137 #x0000000000000001))
(assert (= var2229290 temp50_137))
(assert (= temp50_139 var2229290))
(assert (= temp50_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_139)))
(assert (= temp50_138 temp50_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp50_138)))
(assert (= temp50_141 #x0000000000000000))
(assert (= var2228402 temp50_141))
(assert (= temp50_143 var2228402))
(assert (= temp50_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp50_143)))
(assert (= temp50_142 temp50_144))
(assert (= temp50_145 #x0000000000000002))
(assert (= var2503529 temp50_145))
(assert (= temp50_146 #x0000000000000001))
(assert (= var2240569 temp50_146))
(assert (= temp50_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp50_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_148 #x0000000000000001))
(assert (= var1521778 temp50_148))
(assert (= temp50_149 #x0000000000000001))
(assert (= var1521908 temp50_149))
(assert (= var4010473 var1521908))
(assert (= temp50_150 #x0000000000000000))
(assert (= var4210495 temp50_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp50_151 #x0000000000000002))
(assert (= var4339331 temp50_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4796816 var1521921))
(assert (= var1522108 var1521633))
(assert (= temp50_152 #x0000000000000000))
(assert (= var1522109
   (ite (distinct var1522108 temp50_152) #x0000000000000001 #x0000000000000000)))
(assert (= var5521229 var1522109))
(assert (= temp50_154 #x0000000000000001))
(assert (= temp50_153 temp50_154))
(assert (= temp50_155 #x0000000000000001))
(assert (= var6098410 temp50_155))
(assert (= temp50_157 #xffffffffffffffff))
(assert (= temp50_156 temp50_157))
(assert (= temp50_158 #x0000000000000001))
(assert (= var1521778 temp50_158))
(model-add temp50_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp50_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp50_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp50_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp50_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp50_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






