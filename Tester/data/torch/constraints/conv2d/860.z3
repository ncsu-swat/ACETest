(declare-fun temp1146_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp1146_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp1146_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp1146_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp1146_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp1146_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp1146_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp1146_8 () (_ BitVec 64))
(declare-fun temp1146_10 () (_ BitVec 64))
(declare-fun temp1146_9 () (_ BitVec 64))
(declare-fun temp1146_12 () (_ BitVec 64))
(declare-fun temp1146_11 () (_ BitVec 64))
(declare-fun temp1146_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp1146_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp1146_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp1146_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp1146_17 () (_ BitVec 64))
(declare-fun temp1146_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp1146_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp1146_20 () (_ BitVec 64))
(declare-fun temp1146_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1146_22 () (_ BitVec 64))
(declare-fun temp1146_23 () (_ BitVec 64))
(declare-fun temp1146_24 () (_ BitVec 64))
(declare-fun temp1146_25 () (_ BitVec 64))
(declare-fun temp1146_26 () (_ BitVec 64))
(declare-fun temp1146_27 () (_ BitVec 64))
(declare-fun temp1146_28 () (_ BitVec 64))
(declare-fun temp1146_29 () (_ BitVec 64))
(declare-fun temp1146_30 () (_ BitVec 64))
(declare-fun temp1146_31 () (_ BitVec 64))
(declare-fun temp1146_32 () (_ BitVec 64))
(declare-fun temp1146_33 () (_ BitVec 64))
(declare-fun temp1146_34 () (_ BitVec 64))
(declare-fun temp1146_35 () (_ BitVec 64))
(declare-fun temp1146_36 () (_ BitVec 64))
(declare-fun temp1146_37 () (_ BitVec 64))
(declare-fun temp1146_38 () (_ BitVec 64))
(declare-fun temp1146_39 () (_ BitVec 64))
(declare-fun temp1146_40 () (_ BitVec 64))
(declare-fun temp1146_41 () (_ BitVec 64))
(declare-fun temp1146_42 () (_ BitVec 64))
(declare-fun temp1146_43 () (_ BitVec 64))
(declare-fun temp1146_44 () (_ BitVec 64))
(declare-fun temp1146_45 () (_ BitVec 64))
(declare-fun temp1146_46 () (_ BitVec 64))
(declare-fun temp1146_47 () (_ BitVec 64))
(declare-fun temp1146_48 () (_ BitVec 64))
(declare-fun temp1146_49 () (_ BitVec 64))
(declare-fun temp1146_50 () (_ BitVec 64))
(declare-fun temp1146_51 () (_ BitVec 64))
(declare-fun temp1146_52 () (_ BitVec 64))
(declare-fun temp1146_53 () (_ BitVec 64))
(declare-fun temp1146_54 () (_ BitVec 64))
(declare-fun temp1146_55 () (_ BitVec 64))
(declare-fun temp1146_56 () (_ BitVec 64))
(declare-fun temp1146_57 () (_ BitVec 64))
(declare-fun temp1146_58 () (_ BitVec 64))
(declare-fun temp1146_59 () (_ BitVec 64))
(declare-fun temp1146_60 () (_ BitVec 64))
(declare-fun temp1146_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp1146_62 () (_ BitVec 64))
(declare-fun temp1146_63 () (_ BitVec 64))
(declare-fun temp1146_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1146_65 () (_ BitVec 64))
(declare-fun temp1146_66 () (_ BitVec 64))
(declare-fun temp1146_67 () (_ BitVec 64))
(declare-fun temp1146_68 () (_ BitVec 64))
(declare-fun temp1146_69 () (_ BitVec 64))
(declare-fun temp1146_70 () (_ BitVec 64))
(declare-fun temp1146_71 () (_ BitVec 64))
(declare-fun temp1146_72 () (_ BitVec 64))
(declare-fun temp1146_73 () (_ BitVec 64))
(declare-fun temp1146_74 () (_ BitVec 64))
(declare-fun temp1146_75 () (_ BitVec 64))
(declare-fun temp1146_76 () (_ BitVec 64))
(declare-fun temp1146_77 () (_ BitVec 64))
(declare-fun temp1146_78 () (_ BitVec 64))
(declare-fun temp1146_79 () (_ BitVec 64))
(declare-fun temp1146_80 () (_ BitVec 64))
(declare-fun temp1146_81 () (_ BitVec 64))
(declare-fun temp1146_82 () (_ BitVec 64))
(declare-fun temp1146_83 () (_ BitVec 64))
(declare-fun temp1146_84 () (_ BitVec 64))
(declare-fun temp1146_85 () (_ BitVec 64))
(declare-fun temp1146_86 () (_ BitVec 64))
(declare-fun temp1146_87 () (_ BitVec 64))
(declare-fun temp1146_88 () (_ BitVec 64))
(declare-fun temp1146_89 () (_ BitVec 64))
(declare-fun temp1146_90 () (_ BitVec 64))
(declare-fun temp1146_91 () (_ BitVec 64))
(declare-fun temp1146_92 () (_ BitVec 64))
(declare-fun temp1146_93 () (_ BitVec 64))
(declare-fun temp1146_94 () (_ BitVec 64))
(declare-fun temp1146_95 () (_ BitVec 64))
(declare-fun temp1146_96 () (_ BitVec 64))
(declare-fun temp1146_97 () (_ BitVec 64))
(declare-fun temp1146_98 () (_ BitVec 64))
(declare-fun temp1146_99 () (_ BitVec 64))
(declare-fun temp1146_100 () (_ BitVec 64))
(declare-fun temp1146_101 () (_ BitVec 64))
(declare-fun temp1146_102 () (_ BitVec 64))
(declare-fun temp1146_103 () (_ BitVec 64))
(declare-fun temp1146_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp1146_105 () (_ BitVec 64))
(declare-fun temp1146_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp1146_107 () (_ BitVec 64))
(declare-fun temp1146_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1146_109 () (_ BitVec 64))
(declare-fun temp1146_110 () (_ BitVec 64))
(declare-fun temp1146_111 () (_ BitVec 64))
(declare-fun temp1146_112 () (_ BitVec 64))
(declare-fun temp1146_113 () (_ BitVec 64))
(declare-fun temp1146_114 () (_ BitVec 64))
(declare-fun temp1146_115 () (_ BitVec 64))
(declare-fun temp1146_116 () (_ BitVec 64))
(declare-fun temp1146_117 () (_ BitVec 64))
(declare-fun temp1146_118 () (_ BitVec 64))
(declare-fun temp1146_119 () (_ BitVec 64))
(declare-fun temp1146_120 () (_ BitVec 64))
(declare-fun temp1146_121 () (_ BitVec 64))
(declare-fun temp1146_122 () (_ BitVec 64))
(declare-fun temp1146_123 () (_ BitVec 64))
(declare-fun temp1146_124 () (_ BitVec 64))
(declare-fun temp1146_126 () (_ BitVec 64))
(declare-fun temp1146_127 () (_ BitVec 64))
(declare-fun temp1146_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp1146_128 () (_ BitVec 64))
(declare-fun temp1146_129 () (_ BitVec 64))
(declare-fun temp1146_131 () (_ BitVec 64))
(declare-fun temp1146_132 () (_ BitVec 64))
(declare-fun temp1146_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp1146_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp1146_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp1146_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp1146_136 () (_ BitVec 64))
(declare-fun temp1146_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp1146_139 () (_ BitVec 64))
(declare-fun temp1146_140 () (_ BitVec 64))
(declare-fun temp1146_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp1146_141 () (_ BitVec 64))
(declare-fun temp1146_143 () (_ BitVec 64))
(declare-fun temp1146_144 () (_ BitVec 64))
(declare-fun temp1146_142 () (_ BitVec 64))
(declare-fun temp1146_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp1146_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp1146_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp1146_148 () (_ BitVec 64))
(declare-fun temp1146_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp1146_150 () (_ BitVec 64))
(declare-fun var4404867 () (_ BitVec 64))
(declare-fun var4404869 () (_ BitVec 64))
(declare-fun var4470412 () (_ BitVec 64))
(declare-fun var4470413 () (_ BitVec 64))
(declare-fun var1522108 () (_ BitVec 64))
(declare-fun temp1146_151 () (_ BitVec 64))
(declare-fun var1522109 () (_ BitVec 64))
(declare-fun var5783373 () (_ BitVec 64))
(declare-fun temp1146_152 () (_ BitVec 64))
(assert (= temp1146_1 #x0000000000000002))
(assert (= var989741 temp1146_1))
(assert (= temp1146_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp1146_2)))
(assert (= temp1146_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp1146_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp1146_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp1146_4)))
(assert (= temp1146_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp1146_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp1146_6 #x0000000000000000))
(assert (= var989776 temp1146_6))
(assert (= temp1146_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp1146_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1146_8 #x0000000000000001))
(assert (= var989810 temp1146_8))
(assert (= temp1146_10 #x0000000000000000))
(assert (= temp1146_9 temp1146_10))
(assert (= temp1146_12 #x0000000000000002))
(assert (= temp1146_11 temp1146_12))
(assert (= temp1146_13 #x0000000000000000))
(assert (= var1387902 temp1146_13))
(assert (= temp1146_14 #x0000000000000001))
(assert (= var1387923 temp1146_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp1146_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp1146_15)))
(assert (= temp1146_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1146_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1146_17 #x0000000000000000))
(assert (= var1521661 temp1146_17))
(assert (= temp1146_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp1146_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1146_19 #x0000000000000000))
(assert (= var1521706 temp1146_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp1146_20 #x0000000000000000))
(assert (= temp1146_21 temp1146_20))
(assert (= temp1146_22 (select ARGNAME_padding_NAMEEND_VAL temp1146_21)))
(assert (= temp1146_23 #x0000000000000001))
(assert (= temp1146_24 temp1146_23))
(assert (= temp1146_25 (select ARGNAME_padding_NAMEEND_VAL temp1146_24)))
(assert (= temp1146_26 #x0000000000000002))
(assert (= temp1146_27 temp1146_26))
(assert (= temp1146_28 (select ARGNAME_padding_NAMEEND_VAL temp1146_27)))
(assert (= temp1146_29 #x0000000000000003))
(assert (= temp1146_30 temp1146_29))
(assert (= temp1146_31 (select ARGNAME_padding_NAMEEND_VAL temp1146_30)))
(assert (= temp1146_32 #x0000000000000004))
(assert (= temp1146_33 temp1146_32))
(assert (= temp1146_34 (select ARGNAME_padding_NAMEEND_VAL temp1146_33)))
(assert (= temp1146_35 #x0000000000000005))
(assert (= temp1146_36 temp1146_35))
(assert (= temp1146_37 (select ARGNAME_padding_NAMEEND_VAL temp1146_36)))
(assert (= temp1146_38 #x0000000000000000))
(assert (= temp1146_39 #x0000000000000000))
(assert (= temp1146_40 temp1146_39))
(assert (= temp1146_41 (select ARGNAME_padding_NAMEEND_VAL temp1146_40)))
(assert (= temp1146_42 #x0000000000000000))
(assert (= temp1146_43 #x0000000000000001))
(assert (= temp1146_44 temp1146_43))
(assert (= temp1146_45 (select ARGNAME_padding_NAMEEND_VAL temp1146_44)))
(assert (= temp1146_46 #x0000000000000000))
(assert (= temp1146_47 #x0000000000000002))
(assert (= temp1146_48 temp1146_47))
(assert (= temp1146_49 (select ARGNAME_padding_NAMEEND_VAL temp1146_48)))
(assert (= temp1146_50 #x0000000000000000))
(assert (= temp1146_51 #x0000000000000003))
(assert (= temp1146_52 temp1146_51))
(assert (= temp1146_53 (select ARGNAME_padding_NAMEEND_VAL temp1146_52)))
(assert (= temp1146_54 #x0000000000000000))
(assert (= temp1146_55 #x0000000000000004))
(assert (= temp1146_56 temp1146_55))
(assert (= temp1146_57 (select ARGNAME_padding_NAMEEND_VAL temp1146_56)))
(assert (= temp1146_58 #x0000000000000000))
(assert (= temp1146_59 #x0000000000000005))
(assert (= temp1146_60 temp1146_59))
(assert (= temp1146_61 (select ARGNAME_padding_NAMEEND_VAL temp1146_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp1146_41 temp1146_38)
             (bvslt temp1146_45 temp1146_42)
             (bvslt temp1146_49 temp1146_46)
             (bvslt temp1146_53 temp1146_50)
             (bvslt temp1146_57 temp1146_54)
             (bvslt temp1146_61 temp1146_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1146_62 #x0000000000000000))
(assert (= var2240290 temp1146_62))
(assert (= temp1146_63 #x0000000000000000))
(assert (= temp1146_64 temp1146_63))
(assert (= temp1146_65 (select ARGNAME_stride_NAMEEND_VAL temp1146_64)))
(assert (= temp1146_66 #x0000000000000001))
(assert (= temp1146_67 temp1146_66))
(assert (= temp1146_68 (select ARGNAME_stride_NAMEEND_VAL temp1146_67)))
(assert (= temp1146_69 #x0000000000000002))
(assert (= temp1146_70 temp1146_69))
(assert (= temp1146_71 (select ARGNAME_stride_NAMEEND_VAL temp1146_70)))
(assert (= temp1146_72 #x0000000000000003))
(assert (= temp1146_73 temp1146_72))
(assert (= temp1146_74 (select ARGNAME_stride_NAMEEND_VAL temp1146_73)))
(assert (= temp1146_75 #x0000000000000004))
(assert (= temp1146_76 temp1146_75))
(assert (= temp1146_77 (select ARGNAME_stride_NAMEEND_VAL temp1146_76)))
(assert (= temp1146_78 #x0000000000000005))
(assert (= temp1146_79 temp1146_78))
(assert (= temp1146_80 (select ARGNAME_stride_NAMEEND_VAL temp1146_79)))
(assert (= temp1146_81 #x0000000000000000))
(assert (= temp1146_82 #x0000000000000000))
(assert (= temp1146_83 temp1146_82))
(assert (= temp1146_84 (select ARGNAME_stride_NAMEEND_VAL temp1146_83)))
(assert (= temp1146_85 #x0000000000000000))
(assert (= temp1146_86 #x0000000000000001))
(assert (= temp1146_87 temp1146_86))
(assert (= temp1146_88 (select ARGNAME_stride_NAMEEND_VAL temp1146_87)))
(assert (= temp1146_89 #x0000000000000000))
(assert (= temp1146_90 #x0000000000000002))
(assert (= temp1146_91 temp1146_90))
(assert (= temp1146_92 (select ARGNAME_stride_NAMEEND_VAL temp1146_91)))
(assert (= temp1146_93 #x0000000000000000))
(assert (= temp1146_94 #x0000000000000003))
(assert (= temp1146_95 temp1146_94))
(assert (= temp1146_96 (select ARGNAME_stride_NAMEEND_VAL temp1146_95)))
(assert (= temp1146_97 #x0000000000000000))
(assert (= temp1146_98 #x0000000000000004))
(assert (= temp1146_99 temp1146_98))
(assert (= temp1146_100 (select ARGNAME_stride_NAMEEND_VAL temp1146_99)))
(assert (= temp1146_101 #x0000000000000000))
(assert (= temp1146_102 #x0000000000000005))
(assert (= temp1146_103 temp1146_102))
(assert (= temp1146_104 (select ARGNAME_stride_NAMEEND_VAL temp1146_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp1146_84 temp1146_81)
             (bvsle temp1146_88 temp1146_85)
             (bvsle temp1146_92 temp1146_89)
             (bvsle temp1146_96 temp1146_93)
             (bvsle temp1146_100 temp1146_97)
             (bvsle temp1146_104 temp1146_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1146_105 #x0000000000000000))
(assert (= var2240311 temp1146_105))
(assert (= temp1146_106 #x0000000000000000))
(assert (= var2228402 temp1146_106))
(assert (= temp1146_107 #x0000000000000000))
(assert (= temp1146_108 temp1146_107))
(assert (= temp1146_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1146_108)))
(assert (= temp1146_110 #x0000000000000001))
(assert (= temp1146_111 temp1146_110))
(assert (= temp1146_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1146_111)))
(assert (= temp1146_113 #x0000000000000002))
(assert (= temp1146_114 temp1146_113))
(assert (= temp1146_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1146_114)))
(assert (= temp1146_116 #x0000000000000003))
(assert (= temp1146_117 temp1146_116))
(assert (= temp1146_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1146_117)))
(assert (= temp1146_119 #x0000000000000004))
(assert (= temp1146_120 temp1146_119))
(assert (= temp1146_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1146_120)))
(assert (= temp1146_122 #x0000000000000005))
(assert (= temp1146_123 temp1146_122))
(assert (= temp1146_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1146_123)))
(assert (= temp1146_126 var2228402))
(assert (= temp1146_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1146_126)))
(assert (= temp1146_125 temp1146_127))
(assert (= var2240356
   (ite (bvslt temp1146_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1146_128 #x0000000000000000))
(assert (= var2240356 temp1146_128))
(assert (= temp1146_129 #x0000000000000000))
(assert (= var2228402 temp1146_129))
(assert (= temp1146_131 var2228402))
(assert (= temp1146_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1146_131)))
(assert (= temp1146_130 temp1146_132))
(assert (= var2240378 (bvsmod temp1146_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1146_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp1146_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1146_134 #x0000000000000001))
(assert (= var2240379 temp1146_134))
(assert (= var2240398 var2240288))
(assert (= temp1146_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp1146_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1146_136 #x0000000000000001))
(assert (= var2240399 temp1146_136))
(assert (= temp1146_137 #x0000000000000001))
(assert (= var2229290 temp1146_137))
(assert (= temp1146_139 var2229290))
(assert (= temp1146_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1146_139)))
(assert (= temp1146_138 temp1146_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp1146_138)))
(assert (= temp1146_141 #x0000000000000000))
(assert (= var2228402 temp1146_141))
(assert (= temp1146_143 var2228402))
(assert (= temp1146_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1146_143)))
(assert (= temp1146_142 temp1146_144))
(assert (= temp1146_145 #x0000000000000002))
(assert (= var2503529 temp1146_145))
(assert (= temp1146_146 #x0000000000000001))
(assert (= var2240569 temp1146_146))
(assert (= temp1146_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1146_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1146_148 #x0000000000000001))
(assert (= var1521778 temp1146_148))
(assert (= temp1146_149 #x0000000000000001))
(assert (= var1521908 temp1146_149))
(assert (= var4010473 var1521908))
(assert (= temp1146_150 #x0000000000000002))
(assert (= var4404867 temp1146_150))
(assert (= var4404869 (bvsub ARGNAME_weight_NAMEEND_DIM var4404867)))
(assert (= var4470412 var4404867))
(assert (= var4470413 var4404869))
(assert (= var1522108 var1521633))
(assert (= temp1146_151 #x0000000000000000))
(assert (= var1522109
   (ite (distinct var1522108 temp1146_151)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var5783373 var1522109))
(assert (= temp1146_152 #x0000000000000001))
(assert (= var1521778 temp1146_152))
(model-add temp1146_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp1146_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp1146_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1146_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp1146_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1146_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






