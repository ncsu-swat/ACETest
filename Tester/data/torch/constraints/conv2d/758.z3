(declare-fun temp1010_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp1010_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp1010_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp1010_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp1010_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp1010_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp1010_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp1010_8 () (_ BitVec 64))
(declare-fun temp1010_10 () (_ BitVec 64))
(declare-fun temp1010_9 () (_ BitVec 64))
(declare-fun temp1010_12 () (_ BitVec 64))
(declare-fun temp1010_11 () (_ BitVec 64))
(declare-fun temp1010_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp1010_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp1010_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp1010_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp1010_17 () (_ BitVec 64))
(declare-fun temp1010_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp1010_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp1010_20 () (_ BitVec 64))
(declare-fun temp1010_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1010_22 () (_ BitVec 64))
(declare-fun temp1010_23 () (_ BitVec 64))
(declare-fun temp1010_24 () (_ BitVec 64))
(declare-fun temp1010_25 () (_ BitVec 64))
(declare-fun temp1010_26 () (_ BitVec 64))
(declare-fun temp1010_27 () (_ BitVec 64))
(declare-fun temp1010_28 () (_ BitVec 64))
(declare-fun temp1010_29 () (_ BitVec 64))
(declare-fun temp1010_30 () (_ BitVec 64))
(declare-fun temp1010_31 () (_ BitVec 64))
(declare-fun temp1010_32 () (_ BitVec 64))
(declare-fun temp1010_33 () (_ BitVec 64))
(declare-fun temp1010_34 () (_ BitVec 64))
(declare-fun temp1010_35 () (_ BitVec 64))
(declare-fun temp1010_36 () (_ BitVec 64))
(declare-fun temp1010_37 () (_ BitVec 64))
(declare-fun temp1010_38 () (_ BitVec 64))
(declare-fun temp1010_39 () (_ BitVec 64))
(declare-fun temp1010_40 () (_ BitVec 64))
(declare-fun temp1010_41 () (_ BitVec 64))
(declare-fun temp1010_42 () (_ BitVec 64))
(declare-fun temp1010_43 () (_ BitVec 64))
(declare-fun temp1010_44 () (_ BitVec 64))
(declare-fun temp1010_45 () (_ BitVec 64))
(declare-fun temp1010_46 () (_ BitVec 64))
(declare-fun temp1010_47 () (_ BitVec 64))
(declare-fun temp1010_48 () (_ BitVec 64))
(declare-fun temp1010_49 () (_ BitVec 64))
(declare-fun temp1010_50 () (_ BitVec 64))
(declare-fun temp1010_51 () (_ BitVec 64))
(declare-fun temp1010_52 () (_ BitVec 64))
(declare-fun temp1010_53 () (_ BitVec 64))
(declare-fun temp1010_54 () (_ BitVec 64))
(declare-fun temp1010_55 () (_ BitVec 64))
(declare-fun temp1010_56 () (_ BitVec 64))
(declare-fun temp1010_57 () (_ BitVec 64))
(declare-fun temp1010_58 () (_ BitVec 64))
(declare-fun temp1010_59 () (_ BitVec 64))
(declare-fun temp1010_60 () (_ BitVec 64))
(declare-fun temp1010_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp1010_62 () (_ BitVec 64))
(declare-fun temp1010_63 () (_ BitVec 64))
(declare-fun temp1010_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1010_65 () (_ BitVec 64))
(declare-fun temp1010_66 () (_ BitVec 64))
(declare-fun temp1010_67 () (_ BitVec 64))
(declare-fun temp1010_68 () (_ BitVec 64))
(declare-fun temp1010_69 () (_ BitVec 64))
(declare-fun temp1010_70 () (_ BitVec 64))
(declare-fun temp1010_71 () (_ BitVec 64))
(declare-fun temp1010_72 () (_ BitVec 64))
(declare-fun temp1010_73 () (_ BitVec 64))
(declare-fun temp1010_74 () (_ BitVec 64))
(declare-fun temp1010_75 () (_ BitVec 64))
(declare-fun temp1010_76 () (_ BitVec 64))
(declare-fun temp1010_77 () (_ BitVec 64))
(declare-fun temp1010_78 () (_ BitVec 64))
(declare-fun temp1010_79 () (_ BitVec 64))
(declare-fun temp1010_80 () (_ BitVec 64))
(declare-fun temp1010_81 () (_ BitVec 64))
(declare-fun temp1010_82 () (_ BitVec 64))
(declare-fun temp1010_83 () (_ BitVec 64))
(declare-fun temp1010_84 () (_ BitVec 64))
(declare-fun temp1010_85 () (_ BitVec 64))
(declare-fun temp1010_86 () (_ BitVec 64))
(declare-fun temp1010_87 () (_ BitVec 64))
(declare-fun temp1010_88 () (_ BitVec 64))
(declare-fun temp1010_89 () (_ BitVec 64))
(declare-fun temp1010_90 () (_ BitVec 64))
(declare-fun temp1010_91 () (_ BitVec 64))
(declare-fun temp1010_92 () (_ BitVec 64))
(declare-fun temp1010_93 () (_ BitVec 64))
(declare-fun temp1010_94 () (_ BitVec 64))
(declare-fun temp1010_95 () (_ BitVec 64))
(declare-fun temp1010_96 () (_ BitVec 64))
(declare-fun temp1010_97 () (_ BitVec 64))
(declare-fun temp1010_98 () (_ BitVec 64))
(declare-fun temp1010_99 () (_ BitVec 64))
(declare-fun temp1010_100 () (_ BitVec 64))
(declare-fun temp1010_101 () (_ BitVec 64))
(declare-fun temp1010_102 () (_ BitVec 64))
(declare-fun temp1010_103 () (_ BitVec 64))
(declare-fun temp1010_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp1010_105 () (_ BitVec 64))
(declare-fun temp1010_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp1010_107 () (_ BitVec 64))
(declare-fun temp1010_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1010_109 () (_ BitVec 64))
(declare-fun temp1010_110 () (_ BitVec 64))
(declare-fun temp1010_111 () (_ BitVec 64))
(declare-fun temp1010_112 () (_ BitVec 64))
(declare-fun temp1010_113 () (_ BitVec 64))
(declare-fun temp1010_114 () (_ BitVec 64))
(declare-fun temp1010_115 () (_ BitVec 64))
(declare-fun temp1010_116 () (_ BitVec 64))
(declare-fun temp1010_117 () (_ BitVec 64))
(declare-fun temp1010_118 () (_ BitVec 64))
(declare-fun temp1010_119 () (_ BitVec 64))
(declare-fun temp1010_120 () (_ BitVec 64))
(declare-fun temp1010_121 () (_ BitVec 64))
(declare-fun temp1010_122 () (_ BitVec 64))
(declare-fun temp1010_123 () (_ BitVec 64))
(declare-fun temp1010_124 () (_ BitVec 64))
(declare-fun temp1010_126 () (_ BitVec 64))
(declare-fun temp1010_127 () (_ BitVec 64))
(declare-fun temp1010_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp1010_128 () (_ BitVec 64))
(declare-fun temp1010_129 () (_ BitVec 64))
(declare-fun temp1010_131 () (_ BitVec 64))
(declare-fun temp1010_132 () (_ BitVec 64))
(declare-fun temp1010_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp1010_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp1010_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp1010_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp1010_136 () (_ BitVec 64))
(declare-fun temp1010_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp1010_139 () (_ BitVec 64))
(declare-fun temp1010_140 () (_ BitVec 64))
(declare-fun temp1010_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp1010_141 () (_ BitVec 64))
(declare-fun temp1010_143 () (_ BitVec 64))
(declare-fun temp1010_144 () (_ BitVec 64))
(declare-fun temp1010_142 () (_ BitVec 64))
(declare-fun temp1010_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp1010_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp1010_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp1010_148 () (_ BitVec 64))
(declare-fun temp1010_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp1010_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp1010_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp1010_152 () (_ BitVec 64))
(assert (= temp1010_1 #x0000000000000002))
(assert (= var989741 temp1010_1))
(assert (= temp1010_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp1010_2)))
(assert (= temp1010_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp1010_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp1010_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp1010_4)))
(assert (= temp1010_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp1010_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp1010_6 #x0000000000000000))
(assert (= var989776 temp1010_6))
(assert (= temp1010_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp1010_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1010_8 #x0000000000000001))
(assert (= var989810 temp1010_8))
(assert (= temp1010_10 #x0000000000000000))
(assert (= temp1010_9 temp1010_10))
(assert (= temp1010_12 #x0000000000000002))
(assert (= temp1010_11 temp1010_12))
(assert (= temp1010_13 #x0000000000000000))
(assert (= var1387902 temp1010_13))
(assert (= temp1010_14 #x0000000000000001))
(assert (= var1387923 temp1010_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp1010_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp1010_15)))
(assert (= temp1010_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1010_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1010_17 #x0000000000000000))
(assert (= var1521661 temp1010_17))
(assert (= temp1010_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp1010_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1010_19 #x0000000000000000))
(assert (= var1521706 temp1010_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp1010_20 #x0000000000000000))
(assert (= temp1010_21 temp1010_20))
(assert (= temp1010_22 (select ARGNAME_padding_NAMEEND_VAL temp1010_21)))
(assert (= temp1010_23 #x0000000000000001))
(assert (= temp1010_24 temp1010_23))
(assert (= temp1010_25 (select ARGNAME_padding_NAMEEND_VAL temp1010_24)))
(assert (= temp1010_26 #x0000000000000002))
(assert (= temp1010_27 temp1010_26))
(assert (= temp1010_28 (select ARGNAME_padding_NAMEEND_VAL temp1010_27)))
(assert (= temp1010_29 #x0000000000000003))
(assert (= temp1010_30 temp1010_29))
(assert (= temp1010_31 (select ARGNAME_padding_NAMEEND_VAL temp1010_30)))
(assert (= temp1010_32 #x0000000000000004))
(assert (= temp1010_33 temp1010_32))
(assert (= temp1010_34 (select ARGNAME_padding_NAMEEND_VAL temp1010_33)))
(assert (= temp1010_35 #x0000000000000005))
(assert (= temp1010_36 temp1010_35))
(assert (= temp1010_37 (select ARGNAME_padding_NAMEEND_VAL temp1010_36)))
(assert (= temp1010_38 #x0000000000000000))
(assert (= temp1010_39 #x0000000000000000))
(assert (= temp1010_40 temp1010_39))
(assert (= temp1010_41 (select ARGNAME_padding_NAMEEND_VAL temp1010_40)))
(assert (= temp1010_42 #x0000000000000000))
(assert (= temp1010_43 #x0000000000000001))
(assert (= temp1010_44 temp1010_43))
(assert (= temp1010_45 (select ARGNAME_padding_NAMEEND_VAL temp1010_44)))
(assert (= temp1010_46 #x0000000000000000))
(assert (= temp1010_47 #x0000000000000002))
(assert (= temp1010_48 temp1010_47))
(assert (= temp1010_49 (select ARGNAME_padding_NAMEEND_VAL temp1010_48)))
(assert (= temp1010_50 #x0000000000000000))
(assert (= temp1010_51 #x0000000000000003))
(assert (= temp1010_52 temp1010_51))
(assert (= temp1010_53 (select ARGNAME_padding_NAMEEND_VAL temp1010_52)))
(assert (= temp1010_54 #x0000000000000000))
(assert (= temp1010_55 #x0000000000000004))
(assert (= temp1010_56 temp1010_55))
(assert (= temp1010_57 (select ARGNAME_padding_NAMEEND_VAL temp1010_56)))
(assert (= temp1010_58 #x0000000000000000))
(assert (= temp1010_59 #x0000000000000005))
(assert (= temp1010_60 temp1010_59))
(assert (= temp1010_61 (select ARGNAME_padding_NAMEEND_VAL temp1010_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp1010_41 temp1010_38)
             (bvslt temp1010_45 temp1010_42)
             (bvslt temp1010_49 temp1010_46)
             (bvslt temp1010_53 temp1010_50)
             (bvslt temp1010_57 temp1010_54)
             (bvslt temp1010_61 temp1010_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1010_62 #x0000000000000000))
(assert (= var2240290 temp1010_62))
(assert (= temp1010_63 #x0000000000000000))
(assert (= temp1010_64 temp1010_63))
(assert (= temp1010_65 (select ARGNAME_stride_NAMEEND_VAL temp1010_64)))
(assert (= temp1010_66 #x0000000000000001))
(assert (= temp1010_67 temp1010_66))
(assert (= temp1010_68 (select ARGNAME_stride_NAMEEND_VAL temp1010_67)))
(assert (= temp1010_69 #x0000000000000002))
(assert (= temp1010_70 temp1010_69))
(assert (= temp1010_71 (select ARGNAME_stride_NAMEEND_VAL temp1010_70)))
(assert (= temp1010_72 #x0000000000000003))
(assert (= temp1010_73 temp1010_72))
(assert (= temp1010_74 (select ARGNAME_stride_NAMEEND_VAL temp1010_73)))
(assert (= temp1010_75 #x0000000000000004))
(assert (= temp1010_76 temp1010_75))
(assert (= temp1010_77 (select ARGNAME_stride_NAMEEND_VAL temp1010_76)))
(assert (= temp1010_78 #x0000000000000005))
(assert (= temp1010_79 temp1010_78))
(assert (= temp1010_80 (select ARGNAME_stride_NAMEEND_VAL temp1010_79)))
(assert (= temp1010_81 #x0000000000000000))
(assert (= temp1010_82 #x0000000000000000))
(assert (= temp1010_83 temp1010_82))
(assert (= temp1010_84 (select ARGNAME_stride_NAMEEND_VAL temp1010_83)))
(assert (= temp1010_85 #x0000000000000000))
(assert (= temp1010_86 #x0000000000000001))
(assert (= temp1010_87 temp1010_86))
(assert (= temp1010_88 (select ARGNAME_stride_NAMEEND_VAL temp1010_87)))
(assert (= temp1010_89 #x0000000000000000))
(assert (= temp1010_90 #x0000000000000002))
(assert (= temp1010_91 temp1010_90))
(assert (= temp1010_92 (select ARGNAME_stride_NAMEEND_VAL temp1010_91)))
(assert (= temp1010_93 #x0000000000000000))
(assert (= temp1010_94 #x0000000000000003))
(assert (= temp1010_95 temp1010_94))
(assert (= temp1010_96 (select ARGNAME_stride_NAMEEND_VAL temp1010_95)))
(assert (= temp1010_97 #x0000000000000000))
(assert (= temp1010_98 #x0000000000000004))
(assert (= temp1010_99 temp1010_98))
(assert (= temp1010_100 (select ARGNAME_stride_NAMEEND_VAL temp1010_99)))
(assert (= temp1010_101 #x0000000000000000))
(assert (= temp1010_102 #x0000000000000005))
(assert (= temp1010_103 temp1010_102))
(assert (= temp1010_104 (select ARGNAME_stride_NAMEEND_VAL temp1010_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp1010_84 temp1010_81)
             (bvsle temp1010_88 temp1010_85)
             (bvsle temp1010_92 temp1010_89)
             (bvsle temp1010_96 temp1010_93)
             (bvsle temp1010_100 temp1010_97)
             (bvsle temp1010_104 temp1010_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1010_105 #x0000000000000000))
(assert (= var2240311 temp1010_105))
(assert (= temp1010_106 #x0000000000000000))
(assert (= var2228402 temp1010_106))
(assert (= temp1010_107 #x0000000000000000))
(assert (= temp1010_108 temp1010_107))
(assert (= temp1010_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1010_108)))
(assert (= temp1010_110 #x0000000000000001))
(assert (= temp1010_111 temp1010_110))
(assert (= temp1010_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1010_111)))
(assert (= temp1010_113 #x0000000000000002))
(assert (= temp1010_114 temp1010_113))
(assert (= temp1010_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1010_114)))
(assert (= temp1010_116 #x0000000000000003))
(assert (= temp1010_117 temp1010_116))
(assert (= temp1010_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1010_117)))
(assert (= temp1010_119 #x0000000000000004))
(assert (= temp1010_120 temp1010_119))
(assert (= temp1010_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1010_120)))
(assert (= temp1010_122 #x0000000000000005))
(assert (= temp1010_123 temp1010_122))
(assert (= temp1010_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1010_123)))
(assert (= temp1010_126 var2228402))
(assert (= temp1010_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1010_126)))
(assert (= temp1010_125 temp1010_127))
(assert (= var2240356
   (ite (bvslt temp1010_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1010_128 #x0000000000000000))
(assert (= var2240356 temp1010_128))
(assert (= temp1010_129 #x0000000000000000))
(assert (= var2228402 temp1010_129))
(assert (= temp1010_131 var2228402))
(assert (= temp1010_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1010_131)))
(assert (= temp1010_130 temp1010_132))
(assert (= var2240378 (bvsmod temp1010_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1010_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp1010_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1010_134 #x0000000000000001))
(assert (= var2240379 temp1010_134))
(assert (= var2240398 var2240288))
(assert (= temp1010_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp1010_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1010_136 #x0000000000000001))
(assert (= var2240399 temp1010_136))
(assert (= temp1010_137 #x0000000000000001))
(assert (= var2229290 temp1010_137))
(assert (= temp1010_139 var2229290))
(assert (= temp1010_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1010_139)))
(assert (= temp1010_138 temp1010_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp1010_138)))
(assert (= temp1010_141 #x0000000000000000))
(assert (= var2228402 temp1010_141))
(assert (= temp1010_143 var2228402))
(assert (= temp1010_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1010_143)))
(assert (= temp1010_142 temp1010_144))
(assert (= temp1010_145 #x0000000000000002))
(assert (= var2503529 temp1010_145))
(assert (= temp1010_146 #x0000000000000001))
(assert (= var2240569 temp1010_146))
(assert (= temp1010_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1010_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1010_148 #x0000000000000001))
(assert (= var1521778 temp1010_148))
(assert (= temp1010_149 #x0000000000000001))
(assert (= var1521908 temp1010_149))
(assert (= var4010473 var1521908))
(assert (= temp1010_150 #x0000000000000000))
(assert (= var4210495 temp1010_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp1010_151 #x0000000000000002))
(assert (= var4339331 temp1010_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp1010_152 #x0000000000000001))
(assert (= var1521778 temp1010_152))
(model-add temp1010_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp1010_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp1010_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1010_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp1010_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1010_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)





