(declare-fun temp75_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp75_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp75_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp75_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp75_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp75_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp75_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp75_8 () (_ BitVec 64))
(declare-fun temp75_10 () (_ BitVec 64))
(declare-fun temp75_9 () (_ BitVec 64))
(declare-fun temp75_12 () (_ BitVec 64))
(declare-fun temp75_11 () (_ BitVec 64))
(declare-fun temp75_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp75_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp75_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp75_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp75_17 () (_ BitVec 64))
(declare-fun temp75_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp75_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp75_20 () (_ BitVec 64))
(declare-fun temp75_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp75_22 () (_ BitVec 64))
(declare-fun temp75_23 () (_ BitVec 64))
(declare-fun temp75_24 () (_ BitVec 64))
(declare-fun temp75_25 () (_ BitVec 64))
(declare-fun temp75_26 () (_ BitVec 64))
(declare-fun temp75_27 () (_ BitVec 64))
(declare-fun temp75_28 () (_ BitVec 64))
(declare-fun temp75_29 () (_ BitVec 64))
(declare-fun temp75_30 () (_ BitVec 64))
(declare-fun temp75_31 () (_ BitVec 64))
(declare-fun temp75_32 () (_ BitVec 64))
(declare-fun temp75_33 () (_ BitVec 64))
(declare-fun temp75_34 () (_ BitVec 64))
(declare-fun temp75_35 () (_ BitVec 64))
(declare-fun temp75_36 () (_ BitVec 64))
(declare-fun temp75_37 () (_ BitVec 64))
(declare-fun temp75_38 () (_ BitVec 64))
(declare-fun temp75_39 () (_ BitVec 64))
(declare-fun temp75_40 () (_ BitVec 64))
(declare-fun temp75_41 () (_ BitVec 64))
(declare-fun temp75_42 () (_ BitVec 64))
(declare-fun temp75_43 () (_ BitVec 64))
(declare-fun temp75_44 () (_ BitVec 64))
(declare-fun temp75_45 () (_ BitVec 64))
(declare-fun temp75_46 () (_ BitVec 64))
(declare-fun temp75_47 () (_ BitVec 64))
(declare-fun temp75_48 () (_ BitVec 64))
(declare-fun temp75_49 () (_ BitVec 64))
(declare-fun temp75_50 () (_ BitVec 64))
(declare-fun temp75_51 () (_ BitVec 64))
(declare-fun temp75_52 () (_ BitVec 64))
(declare-fun temp75_53 () (_ BitVec 64))
(declare-fun temp75_54 () (_ BitVec 64))
(declare-fun temp75_55 () (_ BitVec 64))
(declare-fun temp75_56 () (_ BitVec 64))
(declare-fun temp75_57 () (_ BitVec 64))
(declare-fun temp75_58 () (_ BitVec 64))
(declare-fun temp75_59 () (_ BitVec 64))
(declare-fun temp75_60 () (_ BitVec 64))
(declare-fun temp75_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp75_62 () (_ BitVec 64))
(declare-fun temp75_63 () (_ BitVec 64))
(declare-fun temp75_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp75_65 () (_ BitVec 64))
(declare-fun temp75_66 () (_ BitVec 64))
(declare-fun temp75_67 () (_ BitVec 64))
(declare-fun temp75_68 () (_ BitVec 64))
(declare-fun temp75_69 () (_ BitVec 64))
(declare-fun temp75_70 () (_ BitVec 64))
(declare-fun temp75_71 () (_ BitVec 64))
(declare-fun temp75_72 () (_ BitVec 64))
(declare-fun temp75_73 () (_ BitVec 64))
(declare-fun temp75_74 () (_ BitVec 64))
(declare-fun temp75_75 () (_ BitVec 64))
(declare-fun temp75_76 () (_ BitVec 64))
(declare-fun temp75_77 () (_ BitVec 64))
(declare-fun temp75_78 () (_ BitVec 64))
(declare-fun temp75_79 () (_ BitVec 64))
(declare-fun temp75_80 () (_ BitVec 64))
(declare-fun temp75_81 () (_ BitVec 64))
(declare-fun temp75_82 () (_ BitVec 64))
(declare-fun temp75_83 () (_ BitVec 64))
(declare-fun temp75_84 () (_ BitVec 64))
(declare-fun temp75_85 () (_ BitVec 64))
(declare-fun temp75_86 () (_ BitVec 64))
(declare-fun temp75_87 () (_ BitVec 64))
(declare-fun temp75_88 () (_ BitVec 64))
(declare-fun temp75_89 () (_ BitVec 64))
(declare-fun temp75_90 () (_ BitVec 64))
(declare-fun temp75_91 () (_ BitVec 64))
(declare-fun temp75_92 () (_ BitVec 64))
(declare-fun temp75_93 () (_ BitVec 64))
(declare-fun temp75_94 () (_ BitVec 64))
(declare-fun temp75_95 () (_ BitVec 64))
(declare-fun temp75_96 () (_ BitVec 64))
(declare-fun temp75_97 () (_ BitVec 64))
(declare-fun temp75_98 () (_ BitVec 64))
(declare-fun temp75_99 () (_ BitVec 64))
(declare-fun temp75_100 () (_ BitVec 64))
(declare-fun temp75_101 () (_ BitVec 64))
(declare-fun temp75_102 () (_ BitVec 64))
(declare-fun temp75_103 () (_ BitVec 64))
(declare-fun temp75_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp75_105 () (_ BitVec 64))
(declare-fun temp75_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp75_107 () (_ BitVec 64))
(declare-fun temp75_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp75_109 () (_ BitVec 64))
(declare-fun temp75_110 () (_ BitVec 64))
(declare-fun temp75_111 () (_ BitVec 64))
(declare-fun temp75_112 () (_ BitVec 64))
(declare-fun temp75_113 () (_ BitVec 64))
(declare-fun temp75_114 () (_ BitVec 64))
(declare-fun temp75_115 () (_ BitVec 64))
(declare-fun temp75_116 () (_ BitVec 64))
(declare-fun temp75_117 () (_ BitVec 64))
(declare-fun temp75_118 () (_ BitVec 64))
(declare-fun temp75_119 () (_ BitVec 64))
(declare-fun temp75_120 () (_ BitVec 64))
(declare-fun temp75_121 () (_ BitVec 64))
(declare-fun temp75_122 () (_ BitVec 64))
(declare-fun temp75_123 () (_ BitVec 64))
(declare-fun temp75_124 () (_ BitVec 64))
(declare-fun temp75_126 () (_ BitVec 64))
(declare-fun temp75_127 () (_ BitVec 64))
(declare-fun temp75_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp75_128 () (_ BitVec 64))
(declare-fun temp75_129 () (_ BitVec 64))
(declare-fun temp75_131 () (_ BitVec 64))
(declare-fun temp75_132 () (_ BitVec 64))
(declare-fun temp75_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp75_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp75_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp75_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp75_136 () (_ BitVec 64))
(declare-fun temp75_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp75_139 () (_ BitVec 64))
(declare-fun temp75_140 () (_ BitVec 64))
(declare-fun temp75_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp75_141 () (_ BitVec 64))
(declare-fun temp75_143 () (_ BitVec 64))
(declare-fun temp75_144 () (_ BitVec 64))
(declare-fun temp75_142 () (_ BitVec 64))
(declare-fun temp75_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp75_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp75_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp75_148 () (_ BitVec 64))
(declare-fun temp75_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp75_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp75_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var1522214 () (_ BitVec 64))
(declare-fun temp75_152 () (_ BitVec 64))
(declare-fun var1522215 () (_ BitVec 64))
(declare-fun temp75_153 () (_ BitVec 64))
(assert (= temp75_1 #x0000000000000002))
(assert (= var989741 temp75_1))
(assert (= temp75_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp75_2)))
(assert (= temp75_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp75_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp75_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp75_4)))
(assert (= temp75_5 #x0000000000000000))
(assert (= var989775 (ite (= var989774 temp75_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp75_6 #x0000000000000000))
(assert (= var989776 temp75_6))
(assert (= temp75_7 #x0000000000000000))
(assert (= var989810 (ite (= var989773 temp75_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp75_8 #x0000000000000001))
(assert (= var989810 temp75_8))
(assert (= temp75_10 #x0000000000000000))
(assert (= temp75_9 temp75_10))
(assert (= temp75_12 #x0000000000000002))
(assert (= temp75_11 temp75_12))
(assert (= temp75_13 #x0000000000000000))
(assert (= var1387902 temp75_13))
(assert (= temp75_14 #x0000000000000001))
(assert (= var1387923 temp75_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp75_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp75_15)))
(assert (= temp75_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp75_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp75_17 #x0000000000000000))
(assert (= var1521661 temp75_17))
(assert (= temp75_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp75_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp75_19 #x0000000000000000))
(assert (= var1521706 temp75_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp75_20 #x0000000000000000))
(assert (= temp75_21 temp75_20))
(assert (= temp75_22 (select ARGNAME_padding_NAMEEND_VAL temp75_21)))
(assert (= temp75_23 #x0000000000000001))
(assert (= temp75_24 temp75_23))
(assert (= temp75_25 (select ARGNAME_padding_NAMEEND_VAL temp75_24)))
(assert (= temp75_26 #x0000000000000002))
(assert (= temp75_27 temp75_26))
(assert (= temp75_28 (select ARGNAME_padding_NAMEEND_VAL temp75_27)))
(assert (= temp75_29 #x0000000000000003))
(assert (= temp75_30 temp75_29))
(assert (= temp75_31 (select ARGNAME_padding_NAMEEND_VAL temp75_30)))
(assert (= temp75_32 #x0000000000000004))
(assert (= temp75_33 temp75_32))
(assert (= temp75_34 (select ARGNAME_padding_NAMEEND_VAL temp75_33)))
(assert (= temp75_35 #x0000000000000005))
(assert (= temp75_36 temp75_35))
(assert (= temp75_37 (select ARGNAME_padding_NAMEEND_VAL temp75_36)))
(assert (= temp75_38 #x0000000000000000))
(assert (= temp75_39 #x0000000000000000))
(assert (= temp75_40 temp75_39))
(assert (= temp75_41 (select ARGNAME_padding_NAMEEND_VAL temp75_40)))
(assert (= temp75_42 #x0000000000000000))
(assert (= temp75_43 #x0000000000000001))
(assert (= temp75_44 temp75_43))
(assert (= temp75_45 (select ARGNAME_padding_NAMEEND_VAL temp75_44)))
(assert (= temp75_46 #x0000000000000000))
(assert (= temp75_47 #x0000000000000002))
(assert (= temp75_48 temp75_47))
(assert (= temp75_49 (select ARGNAME_padding_NAMEEND_VAL temp75_48)))
(assert (= temp75_50 #x0000000000000000))
(assert (= temp75_51 #x0000000000000003))
(assert (= temp75_52 temp75_51))
(assert (= temp75_53 (select ARGNAME_padding_NAMEEND_VAL temp75_52)))
(assert (= temp75_54 #x0000000000000000))
(assert (= temp75_55 #x0000000000000004))
(assert (= temp75_56 temp75_55))
(assert (= temp75_57 (select ARGNAME_padding_NAMEEND_VAL temp75_56)))
(assert (= temp75_58 #x0000000000000000))
(assert (= temp75_59 #x0000000000000005))
(assert (= temp75_60 temp75_59))
(assert (= temp75_61 (select ARGNAME_padding_NAMEEND_VAL temp75_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp75_41 temp75_38)
             (bvslt temp75_45 temp75_42)
             (bvslt temp75_49 temp75_46)
             (bvslt temp75_53 temp75_50)
             (bvslt temp75_57 temp75_54)
             (bvslt temp75_61 temp75_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp75_62 #x0000000000000000))
(assert (= var2240290 temp75_62))
(assert (= temp75_63 #x0000000000000000))
(assert (= temp75_64 temp75_63))
(assert (= temp75_65 (select ARGNAME_stride_NAMEEND_VAL temp75_64)))
(assert (= temp75_66 #x0000000000000001))
(assert (= temp75_67 temp75_66))
(assert (= temp75_68 (select ARGNAME_stride_NAMEEND_VAL temp75_67)))
(assert (= temp75_69 #x0000000000000002))
(assert (= temp75_70 temp75_69))
(assert (= temp75_71 (select ARGNAME_stride_NAMEEND_VAL temp75_70)))
(assert (= temp75_72 #x0000000000000003))
(assert (= temp75_73 temp75_72))
(assert (= temp75_74 (select ARGNAME_stride_NAMEEND_VAL temp75_73)))
(assert (= temp75_75 #x0000000000000004))
(assert (= temp75_76 temp75_75))
(assert (= temp75_77 (select ARGNAME_stride_NAMEEND_VAL temp75_76)))
(assert (= temp75_78 #x0000000000000005))
(assert (= temp75_79 temp75_78))
(assert (= temp75_80 (select ARGNAME_stride_NAMEEND_VAL temp75_79)))
(assert (= temp75_81 #x0000000000000000))
(assert (= temp75_82 #x0000000000000000))
(assert (= temp75_83 temp75_82))
(assert (= temp75_84 (select ARGNAME_stride_NAMEEND_VAL temp75_83)))
(assert (= temp75_85 #x0000000000000000))
(assert (= temp75_86 #x0000000000000001))
(assert (= temp75_87 temp75_86))
(assert (= temp75_88 (select ARGNAME_stride_NAMEEND_VAL temp75_87)))
(assert (= temp75_89 #x0000000000000000))
(assert (= temp75_90 #x0000000000000002))
(assert (= temp75_91 temp75_90))
(assert (= temp75_92 (select ARGNAME_stride_NAMEEND_VAL temp75_91)))
(assert (= temp75_93 #x0000000000000000))
(assert (= temp75_94 #x0000000000000003))
(assert (= temp75_95 temp75_94))
(assert (= temp75_96 (select ARGNAME_stride_NAMEEND_VAL temp75_95)))
(assert (= temp75_97 #x0000000000000000))
(assert (= temp75_98 #x0000000000000004))
(assert (= temp75_99 temp75_98))
(assert (= temp75_100 (select ARGNAME_stride_NAMEEND_VAL temp75_99)))
(assert (= temp75_101 #x0000000000000000))
(assert (= temp75_102 #x0000000000000005))
(assert (= temp75_103 temp75_102))
(assert (= temp75_104 (select ARGNAME_stride_NAMEEND_VAL temp75_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp75_84 temp75_81)
             (bvsle temp75_88 temp75_85)
             (bvsle temp75_92 temp75_89)
             (bvsle temp75_96 temp75_93)
             (bvsle temp75_100 temp75_97)
             (bvsle temp75_104 temp75_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp75_105 #x0000000000000000))
(assert (= var2240311 temp75_105))
(assert (= temp75_106 #x0000000000000000))
(assert (= var2228402 temp75_106))
(assert (= temp75_107 #x0000000000000000))
(assert (= temp75_108 temp75_107))
(assert (= temp75_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp75_108)))
(assert (= temp75_110 #x0000000000000001))
(assert (= temp75_111 temp75_110))
(assert (= temp75_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp75_111)))
(assert (= temp75_113 #x0000000000000002))
(assert (= temp75_114 temp75_113))
(assert (= temp75_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp75_114)))
(assert (= temp75_116 #x0000000000000003))
(assert (= temp75_117 temp75_116))
(assert (= temp75_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp75_117)))
(assert (= temp75_119 #x0000000000000004))
(assert (= temp75_120 temp75_119))
(assert (= temp75_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp75_120)))
(assert (= temp75_122 #x0000000000000005))
(assert (= temp75_123 temp75_122))
(assert (= temp75_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp75_123)))
(assert (= temp75_126 var2228402))
(assert (= temp75_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp75_126)))
(assert (= temp75_125 temp75_127))
(assert (= var2240356
   (ite (bvslt temp75_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp75_128 #x0000000000000000))
(assert (= var2240356 temp75_128))
(assert (= temp75_129 #x0000000000000000))
(assert (= var2228402 temp75_129))
(assert (= temp75_131 var2228402))
(assert (= temp75_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp75_131)))
(assert (= temp75_130 temp75_132))
(assert (= var2240378 (bvsmod temp75_130 ARGNAME_groups_NAMEEND)))
(assert (= temp75_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp75_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp75_134 #x0000000000000001))
(assert (= var2240379 temp75_134))
(assert (= var2240398 var2240288))
(assert (= temp75_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp75_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp75_136 #x0000000000000001))
(assert (= var2240399 temp75_136))
(assert (= temp75_137 #x0000000000000001))
(assert (= var2229290 temp75_137))
(assert (= temp75_139 var2229290))
(assert (= temp75_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp75_139)))
(assert (= temp75_138 temp75_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp75_138)))
(assert (= temp75_141 #x0000000000000000))
(assert (= var2228402 temp75_141))
(assert (= temp75_143 var2228402))
(assert (= temp75_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp75_143)))
(assert (= temp75_142 temp75_144))
(assert (= temp75_145 #x0000000000000002))
(assert (= var2503529 temp75_145))
(assert (= temp75_146 #x0000000000000001))
(assert (= var2240569 temp75_146))
(assert (= temp75_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp75_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp75_148 #x0000000000000001))
(assert (= var1521778 temp75_148))
(assert (= temp75_149 #x0000000000000001))
(assert (= var1521908 temp75_149))
(assert (= var4010473 var1521908))
(assert (= temp75_150 #x0000000000000000))
(assert (= var4210495 temp75_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp75_151 #x0000000000000002))
(assert (= var4339331 temp75_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4796816 var1521921))
(assert (= var1522214 var1521633))
(assert (= temp75_152 #x0000000000000000))
(assert (= var1522215
   (ite (distinct var1522214 temp75_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp75_153 #x0000000000000001))
(assert (= var1521778 temp75_153))
(model-add temp75_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp75_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp75_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp75_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp75_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp75_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






