(declare-fun temp278_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp278_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp278_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp278_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp278_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp278_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp278_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp278_8 () (_ BitVec 64))
(declare-fun temp278_10 () (_ BitVec 64))
(declare-fun temp278_9 () (_ BitVec 64))
(declare-fun temp278_12 () (_ BitVec 64))
(declare-fun temp278_11 () (_ BitVec 64))
(declare-fun temp278_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp278_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp278_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp278_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp278_17 () (_ BitVec 64))
(declare-fun temp278_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp278_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp278_20 () (_ BitVec 64))
(declare-fun temp278_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp278_22 () (_ BitVec 64))
(declare-fun temp278_23 () (_ BitVec 64))
(declare-fun temp278_24 () (_ BitVec 64))
(declare-fun temp278_25 () (_ BitVec 64))
(declare-fun temp278_26 () (_ BitVec 64))
(declare-fun temp278_27 () (_ BitVec 64))
(declare-fun temp278_28 () (_ BitVec 64))
(declare-fun temp278_29 () (_ BitVec 64))
(declare-fun temp278_30 () (_ BitVec 64))
(declare-fun temp278_31 () (_ BitVec 64))
(declare-fun temp278_32 () (_ BitVec 64))
(declare-fun temp278_33 () (_ BitVec 64))
(declare-fun temp278_34 () (_ BitVec 64))
(declare-fun temp278_35 () (_ BitVec 64))
(declare-fun temp278_36 () (_ BitVec 64))
(declare-fun temp278_37 () (_ BitVec 64))
(declare-fun temp278_38 () (_ BitVec 64))
(declare-fun temp278_39 () (_ BitVec 64))
(declare-fun temp278_40 () (_ BitVec 64))
(declare-fun temp278_41 () (_ BitVec 64))
(declare-fun temp278_42 () (_ BitVec 64))
(declare-fun temp278_43 () (_ BitVec 64))
(declare-fun temp278_44 () (_ BitVec 64))
(declare-fun temp278_45 () (_ BitVec 64))
(declare-fun temp278_46 () (_ BitVec 64))
(declare-fun temp278_47 () (_ BitVec 64))
(declare-fun temp278_48 () (_ BitVec 64))
(declare-fun temp278_49 () (_ BitVec 64))
(declare-fun temp278_50 () (_ BitVec 64))
(declare-fun temp278_51 () (_ BitVec 64))
(declare-fun temp278_52 () (_ BitVec 64))
(declare-fun temp278_53 () (_ BitVec 64))
(declare-fun temp278_54 () (_ BitVec 64))
(declare-fun temp278_55 () (_ BitVec 64))
(declare-fun temp278_56 () (_ BitVec 64))
(declare-fun temp278_57 () (_ BitVec 64))
(declare-fun temp278_58 () (_ BitVec 64))
(declare-fun temp278_59 () (_ BitVec 64))
(declare-fun temp278_60 () (_ BitVec 64))
(declare-fun temp278_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp278_62 () (_ BitVec 64))
(declare-fun temp278_63 () (_ BitVec 64))
(declare-fun temp278_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp278_65 () (_ BitVec 64))
(declare-fun temp278_66 () (_ BitVec 64))
(declare-fun temp278_67 () (_ BitVec 64))
(declare-fun temp278_68 () (_ BitVec 64))
(declare-fun temp278_69 () (_ BitVec 64))
(declare-fun temp278_70 () (_ BitVec 64))
(declare-fun temp278_71 () (_ BitVec 64))
(declare-fun temp278_72 () (_ BitVec 64))
(declare-fun temp278_73 () (_ BitVec 64))
(declare-fun temp278_74 () (_ BitVec 64))
(declare-fun temp278_75 () (_ BitVec 64))
(declare-fun temp278_76 () (_ BitVec 64))
(declare-fun temp278_77 () (_ BitVec 64))
(declare-fun temp278_78 () (_ BitVec 64))
(declare-fun temp278_79 () (_ BitVec 64))
(declare-fun temp278_80 () (_ BitVec 64))
(declare-fun temp278_81 () (_ BitVec 64))
(declare-fun temp278_82 () (_ BitVec 64))
(declare-fun temp278_83 () (_ BitVec 64))
(declare-fun temp278_84 () (_ BitVec 64))
(declare-fun temp278_85 () (_ BitVec 64))
(declare-fun temp278_86 () (_ BitVec 64))
(declare-fun temp278_87 () (_ BitVec 64))
(declare-fun temp278_88 () (_ BitVec 64))
(declare-fun temp278_89 () (_ BitVec 64))
(declare-fun temp278_90 () (_ BitVec 64))
(declare-fun temp278_91 () (_ BitVec 64))
(declare-fun temp278_92 () (_ BitVec 64))
(declare-fun temp278_93 () (_ BitVec 64))
(declare-fun temp278_94 () (_ BitVec 64))
(declare-fun temp278_95 () (_ BitVec 64))
(declare-fun temp278_96 () (_ BitVec 64))
(declare-fun temp278_97 () (_ BitVec 64))
(declare-fun temp278_98 () (_ BitVec 64))
(declare-fun temp278_99 () (_ BitVec 64))
(declare-fun temp278_100 () (_ BitVec 64))
(declare-fun temp278_101 () (_ BitVec 64))
(declare-fun temp278_102 () (_ BitVec 64))
(declare-fun temp278_103 () (_ BitVec 64))
(declare-fun temp278_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp278_105 () (_ BitVec 64))
(declare-fun temp278_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp278_107 () (_ BitVec 64))
(declare-fun temp278_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp278_109 () (_ BitVec 64))
(declare-fun temp278_110 () (_ BitVec 64))
(declare-fun temp278_111 () (_ BitVec 64))
(declare-fun temp278_112 () (_ BitVec 64))
(declare-fun temp278_113 () (_ BitVec 64))
(declare-fun temp278_114 () (_ BitVec 64))
(declare-fun temp278_115 () (_ BitVec 64))
(declare-fun temp278_116 () (_ BitVec 64))
(declare-fun temp278_117 () (_ BitVec 64))
(declare-fun temp278_118 () (_ BitVec 64))
(declare-fun temp278_119 () (_ BitVec 64))
(declare-fun temp278_120 () (_ BitVec 64))
(declare-fun temp278_121 () (_ BitVec 64))
(declare-fun temp278_122 () (_ BitVec 64))
(declare-fun temp278_123 () (_ BitVec 64))
(declare-fun temp278_124 () (_ BitVec 64))
(declare-fun temp278_126 () (_ BitVec 64))
(declare-fun temp278_127 () (_ BitVec 64))
(declare-fun temp278_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp278_128 () (_ BitVec 64))
(declare-fun temp278_129 () (_ BitVec 64))
(declare-fun temp278_131 () (_ BitVec 64))
(declare-fun temp278_132 () (_ BitVec 64))
(declare-fun temp278_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp278_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp278_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp278_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp278_136 () (_ BitVec 64))
(declare-fun temp278_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp278_139 () (_ BitVec 64))
(declare-fun temp278_140 () (_ BitVec 64))
(declare-fun temp278_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp278_141 () (_ BitVec 64))
(declare-fun temp278_143 () (_ BitVec 64))
(declare-fun temp278_144 () (_ BitVec 64))
(declare-fun temp278_142 () (_ BitVec 64))
(declare-fun temp278_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp278_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp278_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp278_148 () (_ BitVec 64))
(declare-fun temp278_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp278_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp278_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var5058960 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun temp278_152 () (_ BitVec 64))
(assert (= temp278_1 #x0000000000000002))
(assert (= var989741 temp278_1))
(assert (= temp278_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp278_2)))
(assert (= temp278_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp278_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp278_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp278_4)))
(assert (= temp278_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp278_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp278_6 #x0000000000000000))
(assert (= var989776 temp278_6))
(assert (= temp278_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp278_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp278_8 #x0000000000000001))
(assert (= var989810 temp278_8))
(assert (= temp278_10 #x0000000000000000))
(assert (= temp278_9 temp278_10))
(assert (= temp278_12 #x0000000000000002))
(assert (= temp278_11 temp278_12))
(assert (= temp278_13 #x0000000000000000))
(assert (= var1387902 temp278_13))
(assert (= temp278_14 #x0000000000000001))
(assert (= var1387923 temp278_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp278_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp278_15)))
(assert (= temp278_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp278_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_17 #x0000000000000000))
(assert (= var1521661 temp278_17))
(assert (= temp278_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp278_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_19 #x0000000000000000))
(assert (= var1521706 temp278_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp278_20 #x0000000000000000))
(assert (= temp278_21 temp278_20))
(assert (= temp278_22 (select ARGNAME_padding_NAMEEND_VAL temp278_21)))
(assert (= temp278_23 #x0000000000000001))
(assert (= temp278_24 temp278_23))
(assert (= temp278_25 (select ARGNAME_padding_NAMEEND_VAL temp278_24)))
(assert (= temp278_26 #x0000000000000002))
(assert (= temp278_27 temp278_26))
(assert (= temp278_28 (select ARGNAME_padding_NAMEEND_VAL temp278_27)))
(assert (= temp278_29 #x0000000000000003))
(assert (= temp278_30 temp278_29))
(assert (= temp278_31 (select ARGNAME_padding_NAMEEND_VAL temp278_30)))
(assert (= temp278_32 #x0000000000000004))
(assert (= temp278_33 temp278_32))
(assert (= temp278_34 (select ARGNAME_padding_NAMEEND_VAL temp278_33)))
(assert (= temp278_35 #x0000000000000005))
(assert (= temp278_36 temp278_35))
(assert (= temp278_37 (select ARGNAME_padding_NAMEEND_VAL temp278_36)))
(assert (= temp278_38 #x0000000000000000))
(assert (= temp278_39 #x0000000000000000))
(assert (= temp278_40 temp278_39))
(assert (= temp278_41 (select ARGNAME_padding_NAMEEND_VAL temp278_40)))
(assert (= temp278_42 #x0000000000000000))
(assert (= temp278_43 #x0000000000000001))
(assert (= temp278_44 temp278_43))
(assert (= temp278_45 (select ARGNAME_padding_NAMEEND_VAL temp278_44)))
(assert (= temp278_46 #x0000000000000000))
(assert (= temp278_47 #x0000000000000002))
(assert (= temp278_48 temp278_47))
(assert (= temp278_49 (select ARGNAME_padding_NAMEEND_VAL temp278_48)))
(assert (= temp278_50 #x0000000000000000))
(assert (= temp278_51 #x0000000000000003))
(assert (= temp278_52 temp278_51))
(assert (= temp278_53 (select ARGNAME_padding_NAMEEND_VAL temp278_52)))
(assert (= temp278_54 #x0000000000000000))
(assert (= temp278_55 #x0000000000000004))
(assert (= temp278_56 temp278_55))
(assert (= temp278_57 (select ARGNAME_padding_NAMEEND_VAL temp278_56)))
(assert (= temp278_58 #x0000000000000000))
(assert (= temp278_59 #x0000000000000005))
(assert (= temp278_60 temp278_59))
(assert (= temp278_61 (select ARGNAME_padding_NAMEEND_VAL temp278_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp278_41 temp278_38)
             (bvslt temp278_45 temp278_42)
             (bvslt temp278_49 temp278_46)
             (bvslt temp278_53 temp278_50)
             (bvslt temp278_57 temp278_54)
             (bvslt temp278_61 temp278_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_62 #x0000000000000000))
(assert (= var2240290 temp278_62))
(assert (= temp278_63 #x0000000000000000))
(assert (= temp278_64 temp278_63))
(assert (= temp278_65 (select ARGNAME_stride_NAMEEND_VAL temp278_64)))
(assert (= temp278_66 #x0000000000000001))
(assert (= temp278_67 temp278_66))
(assert (= temp278_68 (select ARGNAME_stride_NAMEEND_VAL temp278_67)))
(assert (= temp278_69 #x0000000000000002))
(assert (= temp278_70 temp278_69))
(assert (= temp278_71 (select ARGNAME_stride_NAMEEND_VAL temp278_70)))
(assert (= temp278_72 #x0000000000000003))
(assert (= temp278_73 temp278_72))
(assert (= temp278_74 (select ARGNAME_stride_NAMEEND_VAL temp278_73)))
(assert (= temp278_75 #x0000000000000004))
(assert (= temp278_76 temp278_75))
(assert (= temp278_77 (select ARGNAME_stride_NAMEEND_VAL temp278_76)))
(assert (= temp278_78 #x0000000000000005))
(assert (= temp278_79 temp278_78))
(assert (= temp278_80 (select ARGNAME_stride_NAMEEND_VAL temp278_79)))
(assert (= temp278_81 #x0000000000000000))
(assert (= temp278_82 #x0000000000000000))
(assert (= temp278_83 temp278_82))
(assert (= temp278_84 (select ARGNAME_stride_NAMEEND_VAL temp278_83)))
(assert (= temp278_85 #x0000000000000000))
(assert (= temp278_86 #x0000000000000001))
(assert (= temp278_87 temp278_86))
(assert (= temp278_88 (select ARGNAME_stride_NAMEEND_VAL temp278_87)))
(assert (= temp278_89 #x0000000000000000))
(assert (= temp278_90 #x0000000000000002))
(assert (= temp278_91 temp278_90))
(assert (= temp278_92 (select ARGNAME_stride_NAMEEND_VAL temp278_91)))
(assert (= temp278_93 #x0000000000000000))
(assert (= temp278_94 #x0000000000000003))
(assert (= temp278_95 temp278_94))
(assert (= temp278_96 (select ARGNAME_stride_NAMEEND_VAL temp278_95)))
(assert (= temp278_97 #x0000000000000000))
(assert (= temp278_98 #x0000000000000004))
(assert (= temp278_99 temp278_98))
(assert (= temp278_100 (select ARGNAME_stride_NAMEEND_VAL temp278_99)))
(assert (= temp278_101 #x0000000000000000))
(assert (= temp278_102 #x0000000000000005))
(assert (= temp278_103 temp278_102))
(assert (= temp278_104 (select ARGNAME_stride_NAMEEND_VAL temp278_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp278_84 temp278_81)
             (bvsle temp278_88 temp278_85)
             (bvsle temp278_92 temp278_89)
             (bvsle temp278_96 temp278_93)
             (bvsle temp278_100 temp278_97)
             (bvsle temp278_104 temp278_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_105 #x0000000000000000))
(assert (= var2240311 temp278_105))
(assert (= temp278_106 #x0000000000000000))
(assert (= var2228402 temp278_106))
(assert (= temp278_107 #x0000000000000000))
(assert (= temp278_108 temp278_107))
(assert (= temp278_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_108)))
(assert (= temp278_110 #x0000000000000001))
(assert (= temp278_111 temp278_110))
(assert (= temp278_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_111)))
(assert (= temp278_113 #x0000000000000002))
(assert (= temp278_114 temp278_113))
(assert (= temp278_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_114)))
(assert (= temp278_116 #x0000000000000003))
(assert (= temp278_117 temp278_116))
(assert (= temp278_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_117)))
(assert (= temp278_119 #x0000000000000004))
(assert (= temp278_120 temp278_119))
(assert (= temp278_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_120)))
(assert (= temp278_122 #x0000000000000005))
(assert (= temp278_123 temp278_122))
(assert (= temp278_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_123)))
(assert (= temp278_126 var2228402))
(assert (= temp278_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_126)))
(assert (= temp278_125 temp278_127))
(assert (= var2240356
   (ite (bvslt temp278_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_128 #x0000000000000000))
(assert (= var2240356 temp278_128))
(assert (= temp278_129 #x0000000000000000))
(assert (= var2228402 temp278_129))
(assert (= temp278_131 var2228402))
(assert (= temp278_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_131)))
(assert (= temp278_130 temp278_132))
(assert (= var2240378 (bvsmod temp278_130 ARGNAME_groups_NAMEEND)))
(assert (= temp278_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp278_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp278_134 #x0000000000000001))
(assert (= var2240379 temp278_134))
(assert (= var2240398 var2240288))
(assert (= temp278_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp278_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp278_136 #x0000000000000001))
(assert (= var2240399 temp278_136))
(assert (= temp278_137 #x0000000000000001))
(assert (= var2229290 temp278_137))
(assert (= temp278_139 var2229290))
(assert (= temp278_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_139)))
(assert (= temp278_138 temp278_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp278_138)))
(assert (= temp278_141 #x0000000000000000))
(assert (= var2228402 temp278_141))
(assert (= temp278_143 var2228402))
(assert (= temp278_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_143)))
(assert (= temp278_142 temp278_144))
(assert (= temp278_145 #x0000000000000002))
(assert (= var2503529 temp278_145))
(assert (= temp278_146 #x0000000000000001))
(assert (= var2240569 temp278_146))
(assert (= temp278_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp278_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_148 #x0000000000000001))
(assert (= var1521778 temp278_148))
(assert (= temp278_149 #x0000000000000001))
(assert (= var1521908 temp278_149))
(assert (= var4010473 var1521908))
(assert (= temp278_150 #x0000000000000000))
(assert (= var4210495 temp278_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp278_151 #x0000000000000002))
(assert (= var4339331 temp278_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var5058960 var1521921))
(assert (= var5321104 var1521921))
(assert (= temp278_152 #x0000000000000001))
(assert (= var1521778 temp278_152))
(model-add temp278_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp278_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp278_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp278_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp278_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp278_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






