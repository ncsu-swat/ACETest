(declare-fun temp988_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp988_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp988_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp988_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp988_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp988_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp988_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp988_8 () (_ BitVec 64))
(declare-fun temp988_10 () (_ BitVec 64))
(declare-fun temp988_9 () (_ BitVec 64))
(declare-fun temp988_12 () (_ BitVec 64))
(declare-fun temp988_11 () (_ BitVec 64))
(declare-fun temp988_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp988_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp988_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp988_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp988_17 () (_ BitVec 64))
(declare-fun temp988_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp988_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp988_20 () (_ BitVec 64))
(declare-fun temp988_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp988_22 () (_ BitVec 64))
(declare-fun temp988_23 () (_ BitVec 64))
(declare-fun temp988_24 () (_ BitVec 64))
(declare-fun temp988_25 () (_ BitVec 64))
(declare-fun temp988_26 () (_ BitVec 64))
(declare-fun temp988_27 () (_ BitVec 64))
(declare-fun temp988_28 () (_ BitVec 64))
(declare-fun temp988_29 () (_ BitVec 64))
(declare-fun temp988_30 () (_ BitVec 64))
(declare-fun temp988_31 () (_ BitVec 64))
(declare-fun temp988_32 () (_ BitVec 64))
(declare-fun temp988_33 () (_ BitVec 64))
(declare-fun temp988_34 () (_ BitVec 64))
(declare-fun temp988_35 () (_ BitVec 64))
(declare-fun temp988_36 () (_ BitVec 64))
(declare-fun temp988_37 () (_ BitVec 64))
(declare-fun temp988_38 () (_ BitVec 64))
(declare-fun temp988_39 () (_ BitVec 64))
(declare-fun temp988_40 () (_ BitVec 64))
(declare-fun temp988_41 () (_ BitVec 64))
(declare-fun temp988_42 () (_ BitVec 64))
(declare-fun temp988_43 () (_ BitVec 64))
(declare-fun temp988_44 () (_ BitVec 64))
(declare-fun temp988_45 () (_ BitVec 64))
(declare-fun temp988_46 () (_ BitVec 64))
(declare-fun temp988_47 () (_ BitVec 64))
(declare-fun temp988_48 () (_ BitVec 64))
(declare-fun temp988_49 () (_ BitVec 64))
(declare-fun temp988_50 () (_ BitVec 64))
(declare-fun temp988_51 () (_ BitVec 64))
(declare-fun temp988_52 () (_ BitVec 64))
(declare-fun temp988_53 () (_ BitVec 64))
(declare-fun temp988_54 () (_ BitVec 64))
(declare-fun temp988_55 () (_ BitVec 64))
(declare-fun temp988_56 () (_ BitVec 64))
(declare-fun temp988_57 () (_ BitVec 64))
(declare-fun temp988_58 () (_ BitVec 64))
(declare-fun temp988_59 () (_ BitVec 64))
(declare-fun temp988_60 () (_ BitVec 64))
(declare-fun temp988_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp988_62 () (_ BitVec 64))
(declare-fun temp988_63 () (_ BitVec 64))
(declare-fun temp988_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp988_65 () (_ BitVec 64))
(declare-fun temp988_66 () (_ BitVec 64))
(declare-fun temp988_67 () (_ BitVec 64))
(declare-fun temp988_68 () (_ BitVec 64))
(declare-fun temp988_69 () (_ BitVec 64))
(declare-fun temp988_70 () (_ BitVec 64))
(declare-fun temp988_71 () (_ BitVec 64))
(declare-fun temp988_72 () (_ BitVec 64))
(declare-fun temp988_73 () (_ BitVec 64))
(declare-fun temp988_74 () (_ BitVec 64))
(declare-fun temp988_75 () (_ BitVec 64))
(declare-fun temp988_76 () (_ BitVec 64))
(declare-fun temp988_77 () (_ BitVec 64))
(declare-fun temp988_78 () (_ BitVec 64))
(declare-fun temp988_79 () (_ BitVec 64))
(declare-fun temp988_80 () (_ BitVec 64))
(declare-fun temp988_81 () (_ BitVec 64))
(declare-fun temp988_82 () (_ BitVec 64))
(declare-fun temp988_83 () (_ BitVec 64))
(declare-fun temp988_84 () (_ BitVec 64))
(declare-fun temp988_85 () (_ BitVec 64))
(declare-fun temp988_86 () (_ BitVec 64))
(declare-fun temp988_87 () (_ BitVec 64))
(declare-fun temp988_88 () (_ BitVec 64))
(declare-fun temp988_89 () (_ BitVec 64))
(declare-fun temp988_90 () (_ BitVec 64))
(declare-fun temp988_91 () (_ BitVec 64))
(declare-fun temp988_92 () (_ BitVec 64))
(declare-fun temp988_93 () (_ BitVec 64))
(declare-fun temp988_94 () (_ BitVec 64))
(declare-fun temp988_95 () (_ BitVec 64))
(declare-fun temp988_96 () (_ BitVec 64))
(declare-fun temp988_97 () (_ BitVec 64))
(declare-fun temp988_98 () (_ BitVec 64))
(declare-fun temp988_99 () (_ BitVec 64))
(declare-fun temp988_100 () (_ BitVec 64))
(declare-fun temp988_101 () (_ BitVec 64))
(declare-fun temp988_102 () (_ BitVec 64))
(declare-fun temp988_103 () (_ BitVec 64))
(declare-fun temp988_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp988_105 () (_ BitVec 64))
(declare-fun temp988_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp988_107 () (_ BitVec 64))
(declare-fun temp988_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp988_109 () (_ BitVec 64))
(declare-fun temp988_110 () (_ BitVec 64))
(declare-fun temp988_111 () (_ BitVec 64))
(declare-fun temp988_112 () (_ BitVec 64))
(declare-fun temp988_113 () (_ BitVec 64))
(declare-fun temp988_114 () (_ BitVec 64))
(declare-fun temp988_115 () (_ BitVec 64))
(declare-fun temp988_116 () (_ BitVec 64))
(declare-fun temp988_117 () (_ BitVec 64))
(declare-fun temp988_118 () (_ BitVec 64))
(declare-fun temp988_119 () (_ BitVec 64))
(declare-fun temp988_120 () (_ BitVec 64))
(declare-fun temp988_121 () (_ BitVec 64))
(declare-fun temp988_122 () (_ BitVec 64))
(declare-fun temp988_123 () (_ BitVec 64))
(declare-fun temp988_124 () (_ BitVec 64))
(declare-fun temp988_126 () (_ BitVec 64))
(declare-fun temp988_127 () (_ BitVec 64))
(declare-fun temp988_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp988_128 () (_ BitVec 64))
(declare-fun temp988_129 () (_ BitVec 64))
(declare-fun temp988_131 () (_ BitVec 64))
(declare-fun temp988_132 () (_ BitVec 64))
(declare-fun temp988_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp988_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp988_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp988_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp988_136 () (_ BitVec 64))
(declare-fun temp988_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp988_139 () (_ BitVec 64))
(declare-fun temp988_140 () (_ BitVec 64))
(declare-fun temp988_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp988_141 () (_ BitVec 64))
(declare-fun temp988_143 () (_ BitVec 64))
(declare-fun temp988_144 () (_ BitVec 64))
(declare-fun temp988_142 () (_ BitVec 64))
(declare-fun temp988_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp988_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp988_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp988_148 () (_ BitVec 64))
(declare-fun temp988_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp988_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp988_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp988_152 () (_ BitVec 64))
(assert (= temp988_1 #x0000000000000002))
(assert (= var989741 temp988_1))
(assert (= temp988_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp988_2)))
(assert (= temp988_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp988_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp988_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp988_4)))
(assert (= temp988_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp988_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp988_6 #x0000000000000000))
(assert (= var989776 temp988_6))
(assert (= temp988_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp988_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp988_8 #x0000000000000001))
(assert (= var989810 temp988_8))
(assert (= temp988_10 #x0000000000000000))
(assert (= temp988_9 temp988_10))
(assert (= temp988_12 #x0000000000000002))
(assert (= temp988_11 temp988_12))
(assert (= temp988_13 #x0000000000000000))
(assert (= var1387902 temp988_13))
(assert (= temp988_14 #x0000000000000001))
(assert (= var1387923 temp988_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp988_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp988_15)))
(assert (= temp988_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp988_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp988_17 #x0000000000000000))
(assert (= var1521661 temp988_17))
(assert (= temp988_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp988_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp988_19 #x0000000000000000))
(assert (= var1521706 temp988_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp988_20 #x0000000000000000))
(assert (= temp988_21 temp988_20))
(assert (= temp988_22 (select ARGNAME_padding_NAMEEND_VAL temp988_21)))
(assert (= temp988_23 #x0000000000000001))
(assert (= temp988_24 temp988_23))
(assert (= temp988_25 (select ARGNAME_padding_NAMEEND_VAL temp988_24)))
(assert (= temp988_26 #x0000000000000002))
(assert (= temp988_27 temp988_26))
(assert (= temp988_28 (select ARGNAME_padding_NAMEEND_VAL temp988_27)))
(assert (= temp988_29 #x0000000000000003))
(assert (= temp988_30 temp988_29))
(assert (= temp988_31 (select ARGNAME_padding_NAMEEND_VAL temp988_30)))
(assert (= temp988_32 #x0000000000000004))
(assert (= temp988_33 temp988_32))
(assert (= temp988_34 (select ARGNAME_padding_NAMEEND_VAL temp988_33)))
(assert (= temp988_35 #x0000000000000005))
(assert (= temp988_36 temp988_35))
(assert (= temp988_37 (select ARGNAME_padding_NAMEEND_VAL temp988_36)))
(assert (= temp988_38 #x0000000000000000))
(assert (= temp988_39 #x0000000000000000))
(assert (= temp988_40 temp988_39))
(assert (= temp988_41 (select ARGNAME_padding_NAMEEND_VAL temp988_40)))
(assert (= temp988_42 #x0000000000000000))
(assert (= temp988_43 #x0000000000000001))
(assert (= temp988_44 temp988_43))
(assert (= temp988_45 (select ARGNAME_padding_NAMEEND_VAL temp988_44)))
(assert (= temp988_46 #x0000000000000000))
(assert (= temp988_47 #x0000000000000002))
(assert (= temp988_48 temp988_47))
(assert (= temp988_49 (select ARGNAME_padding_NAMEEND_VAL temp988_48)))
(assert (= temp988_50 #x0000000000000000))
(assert (= temp988_51 #x0000000000000003))
(assert (= temp988_52 temp988_51))
(assert (= temp988_53 (select ARGNAME_padding_NAMEEND_VAL temp988_52)))
(assert (= temp988_54 #x0000000000000000))
(assert (= temp988_55 #x0000000000000004))
(assert (= temp988_56 temp988_55))
(assert (= temp988_57 (select ARGNAME_padding_NAMEEND_VAL temp988_56)))
(assert (= temp988_58 #x0000000000000000))
(assert (= temp988_59 #x0000000000000005))
(assert (= temp988_60 temp988_59))
(assert (= temp988_61 (select ARGNAME_padding_NAMEEND_VAL temp988_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp988_41 temp988_38)
             (bvslt temp988_45 temp988_42)
             (bvslt temp988_49 temp988_46)
             (bvslt temp988_53 temp988_50)
             (bvslt temp988_57 temp988_54)
             (bvslt temp988_61 temp988_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp988_62 #x0000000000000000))
(assert (= var2240290 temp988_62))
(assert (= temp988_63 #x0000000000000000))
(assert (= temp988_64 temp988_63))
(assert (= temp988_65 (select ARGNAME_stride_NAMEEND_VAL temp988_64)))
(assert (= temp988_66 #x0000000000000001))
(assert (= temp988_67 temp988_66))
(assert (= temp988_68 (select ARGNAME_stride_NAMEEND_VAL temp988_67)))
(assert (= temp988_69 #x0000000000000002))
(assert (= temp988_70 temp988_69))
(assert (= temp988_71 (select ARGNAME_stride_NAMEEND_VAL temp988_70)))
(assert (= temp988_72 #x0000000000000003))
(assert (= temp988_73 temp988_72))
(assert (= temp988_74 (select ARGNAME_stride_NAMEEND_VAL temp988_73)))
(assert (= temp988_75 #x0000000000000004))
(assert (= temp988_76 temp988_75))
(assert (= temp988_77 (select ARGNAME_stride_NAMEEND_VAL temp988_76)))
(assert (= temp988_78 #x0000000000000005))
(assert (= temp988_79 temp988_78))
(assert (= temp988_80 (select ARGNAME_stride_NAMEEND_VAL temp988_79)))
(assert (= temp988_81 #x0000000000000000))
(assert (= temp988_82 #x0000000000000000))
(assert (= temp988_83 temp988_82))
(assert (= temp988_84 (select ARGNAME_stride_NAMEEND_VAL temp988_83)))
(assert (= temp988_85 #x0000000000000000))
(assert (= temp988_86 #x0000000000000001))
(assert (= temp988_87 temp988_86))
(assert (= temp988_88 (select ARGNAME_stride_NAMEEND_VAL temp988_87)))
(assert (= temp988_89 #x0000000000000000))
(assert (= temp988_90 #x0000000000000002))
(assert (= temp988_91 temp988_90))
(assert (= temp988_92 (select ARGNAME_stride_NAMEEND_VAL temp988_91)))
(assert (= temp988_93 #x0000000000000000))
(assert (= temp988_94 #x0000000000000003))
(assert (= temp988_95 temp988_94))
(assert (= temp988_96 (select ARGNAME_stride_NAMEEND_VAL temp988_95)))
(assert (= temp988_97 #x0000000000000000))
(assert (= temp988_98 #x0000000000000004))
(assert (= temp988_99 temp988_98))
(assert (= temp988_100 (select ARGNAME_stride_NAMEEND_VAL temp988_99)))
(assert (= temp988_101 #x0000000000000000))
(assert (= temp988_102 #x0000000000000005))
(assert (= temp988_103 temp988_102))
(assert (= temp988_104 (select ARGNAME_stride_NAMEEND_VAL temp988_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp988_84 temp988_81)
             (bvsle temp988_88 temp988_85)
             (bvsle temp988_92 temp988_89)
             (bvsle temp988_96 temp988_93)
             (bvsle temp988_100 temp988_97)
             (bvsle temp988_104 temp988_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp988_105 #x0000000000000000))
(assert (= var2240311 temp988_105))
(assert (= temp988_106 #x0000000000000000))
(assert (= var2228402 temp988_106))
(assert (= temp988_107 #x0000000000000000))
(assert (= temp988_108 temp988_107))
(assert (= temp988_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp988_108)))
(assert (= temp988_110 #x0000000000000001))
(assert (= temp988_111 temp988_110))
(assert (= temp988_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp988_111)))
(assert (= temp988_113 #x0000000000000002))
(assert (= temp988_114 temp988_113))
(assert (= temp988_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp988_114)))
(assert (= temp988_116 #x0000000000000003))
(assert (= temp988_117 temp988_116))
(assert (= temp988_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp988_117)))
(assert (= temp988_119 #x0000000000000004))
(assert (= temp988_120 temp988_119))
(assert (= temp988_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp988_120)))
(assert (= temp988_122 #x0000000000000005))
(assert (= temp988_123 temp988_122))
(assert (= temp988_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp988_123)))
(assert (= temp988_126 var2228402))
(assert (= temp988_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp988_126)))
(assert (= temp988_125 temp988_127))
(assert (= var2240356
   (ite (bvslt temp988_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp988_128 #x0000000000000000))
(assert (= var2240356 temp988_128))
(assert (= temp988_129 #x0000000000000000))
(assert (= var2228402 temp988_129))
(assert (= temp988_131 var2228402))
(assert (= temp988_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp988_131)))
(assert (= temp988_130 temp988_132))
(assert (= var2240378 (bvsmod temp988_130 ARGNAME_groups_NAMEEND)))
(assert (= temp988_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp988_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp988_134 #x0000000000000001))
(assert (= var2240379 temp988_134))
(assert (= var2240398 var2240288))
(assert (= temp988_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp988_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp988_136 #x0000000000000001))
(assert (= var2240399 temp988_136))
(assert (= temp988_137 #x0000000000000001))
(assert (= var2229290 temp988_137))
(assert (= temp988_139 var2229290))
(assert (= temp988_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp988_139)))
(assert (= temp988_138 temp988_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp988_138)))
(assert (= temp988_141 #x0000000000000000))
(assert (= var2228402 temp988_141))
(assert (= temp988_143 var2228402))
(assert (= temp988_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp988_143)))
(assert (= temp988_142 temp988_144))
(assert (= temp988_145 #x0000000000000002))
(assert (= var2503529 temp988_145))
(assert (= temp988_146 #x0000000000000001))
(assert (= var2240569 temp988_146))
(assert (= temp988_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp988_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp988_148 #x0000000000000001))
(assert (= var1521778 temp988_148))
(assert (= temp988_149 #x0000000000000001))
(assert (= var1521908 temp988_149))
(assert (= var4010473 var1521908))
(assert (= temp988_150 #x0000000000000000))
(assert (= var4210495 temp988_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp988_151 #x0000000000000002))
(assert (= var4339331 temp988_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp988_152 #x0000000000000001))
(assert (= var1521778 temp988_152))
(model-add temp988_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp988_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp988_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp988_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp988_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp988_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






