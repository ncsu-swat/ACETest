(declare-fun temp955_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp955_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp955_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp955_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp955_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp955_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp955_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp955_8 () (_ BitVec 64))
(declare-fun temp955_10 () (_ BitVec 64))
(declare-fun temp955_9 () (_ BitVec 64))
(declare-fun temp955_12 () (_ BitVec 64))
(declare-fun temp955_11 () (_ BitVec 64))
(declare-fun temp955_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp955_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp955_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp955_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp955_17 () (_ BitVec 64))
(declare-fun temp955_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp955_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp955_20 () (_ BitVec 64))
(declare-fun temp955_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp955_22 () (_ BitVec 64))
(declare-fun temp955_23 () (_ BitVec 64))
(declare-fun temp955_24 () (_ BitVec 64))
(declare-fun temp955_25 () (_ BitVec 64))
(declare-fun temp955_26 () (_ BitVec 64))
(declare-fun temp955_27 () (_ BitVec 64))
(declare-fun temp955_28 () (_ BitVec 64))
(declare-fun temp955_29 () (_ BitVec 64))
(declare-fun temp955_30 () (_ BitVec 64))
(declare-fun temp955_31 () (_ BitVec 64))
(declare-fun temp955_32 () (_ BitVec 64))
(declare-fun temp955_33 () (_ BitVec 64))
(declare-fun temp955_34 () (_ BitVec 64))
(declare-fun temp955_35 () (_ BitVec 64))
(declare-fun temp955_36 () (_ BitVec 64))
(declare-fun temp955_37 () (_ BitVec 64))
(declare-fun temp955_38 () (_ BitVec 64))
(declare-fun temp955_39 () (_ BitVec 64))
(declare-fun temp955_40 () (_ BitVec 64))
(declare-fun temp955_41 () (_ BitVec 64))
(declare-fun temp955_42 () (_ BitVec 64))
(declare-fun temp955_43 () (_ BitVec 64))
(declare-fun temp955_44 () (_ BitVec 64))
(declare-fun temp955_45 () (_ BitVec 64))
(declare-fun temp955_46 () (_ BitVec 64))
(declare-fun temp955_47 () (_ BitVec 64))
(declare-fun temp955_48 () (_ BitVec 64))
(declare-fun temp955_49 () (_ BitVec 64))
(declare-fun temp955_50 () (_ BitVec 64))
(declare-fun temp955_51 () (_ BitVec 64))
(declare-fun temp955_52 () (_ BitVec 64))
(declare-fun temp955_53 () (_ BitVec 64))
(declare-fun temp955_54 () (_ BitVec 64))
(declare-fun temp955_55 () (_ BitVec 64))
(declare-fun temp955_56 () (_ BitVec 64))
(declare-fun temp955_57 () (_ BitVec 64))
(declare-fun temp955_58 () (_ BitVec 64))
(declare-fun temp955_59 () (_ BitVec 64))
(declare-fun temp955_60 () (_ BitVec 64))
(declare-fun temp955_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp955_62 () (_ BitVec 64))
(declare-fun temp955_63 () (_ BitVec 64))
(declare-fun temp955_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp955_65 () (_ BitVec 64))
(declare-fun temp955_66 () (_ BitVec 64))
(declare-fun temp955_67 () (_ BitVec 64))
(declare-fun temp955_68 () (_ BitVec 64))
(declare-fun temp955_69 () (_ BitVec 64))
(declare-fun temp955_70 () (_ BitVec 64))
(declare-fun temp955_71 () (_ BitVec 64))
(declare-fun temp955_72 () (_ BitVec 64))
(declare-fun temp955_73 () (_ BitVec 64))
(declare-fun temp955_74 () (_ BitVec 64))
(declare-fun temp955_75 () (_ BitVec 64))
(declare-fun temp955_76 () (_ BitVec 64))
(declare-fun temp955_77 () (_ BitVec 64))
(declare-fun temp955_78 () (_ BitVec 64))
(declare-fun temp955_79 () (_ BitVec 64))
(declare-fun temp955_80 () (_ BitVec 64))
(declare-fun temp955_81 () (_ BitVec 64))
(declare-fun temp955_82 () (_ BitVec 64))
(declare-fun temp955_83 () (_ BitVec 64))
(declare-fun temp955_84 () (_ BitVec 64))
(declare-fun temp955_85 () (_ BitVec 64))
(declare-fun temp955_86 () (_ BitVec 64))
(declare-fun temp955_87 () (_ BitVec 64))
(declare-fun temp955_88 () (_ BitVec 64))
(declare-fun temp955_89 () (_ BitVec 64))
(declare-fun temp955_90 () (_ BitVec 64))
(declare-fun temp955_91 () (_ BitVec 64))
(declare-fun temp955_92 () (_ BitVec 64))
(declare-fun temp955_93 () (_ BitVec 64))
(declare-fun temp955_94 () (_ BitVec 64))
(declare-fun temp955_95 () (_ BitVec 64))
(declare-fun temp955_96 () (_ BitVec 64))
(declare-fun temp955_97 () (_ BitVec 64))
(declare-fun temp955_98 () (_ BitVec 64))
(declare-fun temp955_99 () (_ BitVec 64))
(declare-fun temp955_100 () (_ BitVec 64))
(declare-fun temp955_101 () (_ BitVec 64))
(declare-fun temp955_102 () (_ BitVec 64))
(declare-fun temp955_103 () (_ BitVec 64))
(declare-fun temp955_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp955_105 () (_ BitVec 64))
(declare-fun temp955_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp955_107 () (_ BitVec 64))
(declare-fun temp955_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp955_109 () (_ BitVec 64))
(declare-fun temp955_110 () (_ BitVec 64))
(declare-fun temp955_111 () (_ BitVec 64))
(declare-fun temp955_112 () (_ BitVec 64))
(declare-fun temp955_113 () (_ BitVec 64))
(declare-fun temp955_114 () (_ BitVec 64))
(declare-fun temp955_115 () (_ BitVec 64))
(declare-fun temp955_116 () (_ BitVec 64))
(declare-fun temp955_117 () (_ BitVec 64))
(declare-fun temp955_118 () (_ BitVec 64))
(declare-fun temp955_119 () (_ BitVec 64))
(declare-fun temp955_120 () (_ BitVec 64))
(declare-fun temp955_121 () (_ BitVec 64))
(declare-fun temp955_122 () (_ BitVec 64))
(declare-fun temp955_123 () (_ BitVec 64))
(declare-fun temp955_124 () (_ BitVec 64))
(declare-fun temp955_126 () (_ BitVec 64))
(declare-fun temp955_127 () (_ BitVec 64))
(declare-fun temp955_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp955_128 () (_ BitVec 64))
(declare-fun temp955_129 () (_ BitVec 64))
(declare-fun temp955_131 () (_ BitVec 64))
(declare-fun temp955_132 () (_ BitVec 64))
(declare-fun temp955_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp955_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp955_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp955_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp955_136 () (_ BitVec 64))
(declare-fun temp955_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp955_139 () (_ BitVec 64))
(declare-fun temp955_140 () (_ BitVec 64))
(declare-fun temp955_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp955_141 () (_ BitVec 64))
(declare-fun temp955_143 () (_ BitVec 64))
(declare-fun temp955_144 () (_ BitVec 64))
(declare-fun temp955_142 () (_ BitVec 64))
(declare-fun temp955_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp955_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp955_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp955_148 () (_ BitVec 64))
(declare-fun temp955_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp955_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp955_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun temp955_152 () (_ BitVec 64))
(assert (= temp955_1 #x0000000000000002))
(assert (= var989741 temp955_1))
(assert (= temp955_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp955_2)))
(assert (= temp955_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp955_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp955_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp955_4)))
(assert (= temp955_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp955_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp955_6 #x0000000000000000))
(assert (= var989776 temp955_6))
(assert (= temp955_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp955_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp955_8 #x0000000000000001))
(assert (= var989810 temp955_8))
(assert (= temp955_10 #x0000000000000000))
(assert (= temp955_9 temp955_10))
(assert (= temp955_12 #x0000000000000002))
(assert (= temp955_11 temp955_12))
(assert (= temp955_13 #x0000000000000000))
(assert (= var1387902 temp955_13))
(assert (= temp955_14 #x0000000000000001))
(assert (= var1387923 temp955_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp955_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp955_15)))
(assert (= temp955_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp955_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp955_17 #x0000000000000000))
(assert (= var1521661 temp955_17))
(assert (= temp955_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp955_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp955_19 #x0000000000000000))
(assert (= var1521706 temp955_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp955_20 #x0000000000000000))
(assert (= temp955_21 temp955_20))
(assert (= temp955_22 (select ARGNAME_padding_NAMEEND_VAL temp955_21)))
(assert (= temp955_23 #x0000000000000001))
(assert (= temp955_24 temp955_23))
(assert (= temp955_25 (select ARGNAME_padding_NAMEEND_VAL temp955_24)))
(assert (= temp955_26 #x0000000000000002))
(assert (= temp955_27 temp955_26))
(assert (= temp955_28 (select ARGNAME_padding_NAMEEND_VAL temp955_27)))
(assert (= temp955_29 #x0000000000000003))
(assert (= temp955_30 temp955_29))
(assert (= temp955_31 (select ARGNAME_padding_NAMEEND_VAL temp955_30)))
(assert (= temp955_32 #x0000000000000004))
(assert (= temp955_33 temp955_32))
(assert (= temp955_34 (select ARGNAME_padding_NAMEEND_VAL temp955_33)))
(assert (= temp955_35 #x0000000000000005))
(assert (= temp955_36 temp955_35))
(assert (= temp955_37 (select ARGNAME_padding_NAMEEND_VAL temp955_36)))
(assert (= temp955_38 #x0000000000000000))
(assert (= temp955_39 #x0000000000000000))
(assert (= temp955_40 temp955_39))
(assert (= temp955_41 (select ARGNAME_padding_NAMEEND_VAL temp955_40)))
(assert (= temp955_42 #x0000000000000000))
(assert (= temp955_43 #x0000000000000001))
(assert (= temp955_44 temp955_43))
(assert (= temp955_45 (select ARGNAME_padding_NAMEEND_VAL temp955_44)))
(assert (= temp955_46 #x0000000000000000))
(assert (= temp955_47 #x0000000000000002))
(assert (= temp955_48 temp955_47))
(assert (= temp955_49 (select ARGNAME_padding_NAMEEND_VAL temp955_48)))
(assert (= temp955_50 #x0000000000000000))
(assert (= temp955_51 #x0000000000000003))
(assert (= temp955_52 temp955_51))
(assert (= temp955_53 (select ARGNAME_padding_NAMEEND_VAL temp955_52)))
(assert (= temp955_54 #x0000000000000000))
(assert (= temp955_55 #x0000000000000004))
(assert (= temp955_56 temp955_55))
(assert (= temp955_57 (select ARGNAME_padding_NAMEEND_VAL temp955_56)))
(assert (= temp955_58 #x0000000000000000))
(assert (= temp955_59 #x0000000000000005))
(assert (= temp955_60 temp955_59))
(assert (= temp955_61 (select ARGNAME_padding_NAMEEND_VAL temp955_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp955_41 temp955_38)
             (bvslt temp955_45 temp955_42)
             (bvslt temp955_49 temp955_46)
             (bvslt temp955_53 temp955_50)
             (bvslt temp955_57 temp955_54)
             (bvslt temp955_61 temp955_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp955_62 #x0000000000000000))
(assert (= var2240290 temp955_62))
(assert (= temp955_63 #x0000000000000000))
(assert (= temp955_64 temp955_63))
(assert (= temp955_65 (select ARGNAME_stride_NAMEEND_VAL temp955_64)))
(assert (= temp955_66 #x0000000000000001))
(assert (= temp955_67 temp955_66))
(assert (= temp955_68 (select ARGNAME_stride_NAMEEND_VAL temp955_67)))
(assert (= temp955_69 #x0000000000000002))
(assert (= temp955_70 temp955_69))
(assert (= temp955_71 (select ARGNAME_stride_NAMEEND_VAL temp955_70)))
(assert (= temp955_72 #x0000000000000003))
(assert (= temp955_73 temp955_72))
(assert (= temp955_74 (select ARGNAME_stride_NAMEEND_VAL temp955_73)))
(assert (= temp955_75 #x0000000000000004))
(assert (= temp955_76 temp955_75))
(assert (= temp955_77 (select ARGNAME_stride_NAMEEND_VAL temp955_76)))
(assert (= temp955_78 #x0000000000000005))
(assert (= temp955_79 temp955_78))
(assert (= temp955_80 (select ARGNAME_stride_NAMEEND_VAL temp955_79)))
(assert (= temp955_81 #x0000000000000000))
(assert (= temp955_82 #x0000000000000000))
(assert (= temp955_83 temp955_82))
(assert (= temp955_84 (select ARGNAME_stride_NAMEEND_VAL temp955_83)))
(assert (= temp955_85 #x0000000000000000))
(assert (= temp955_86 #x0000000000000001))
(assert (= temp955_87 temp955_86))
(assert (= temp955_88 (select ARGNAME_stride_NAMEEND_VAL temp955_87)))
(assert (= temp955_89 #x0000000000000000))
(assert (= temp955_90 #x0000000000000002))
(assert (= temp955_91 temp955_90))
(assert (= temp955_92 (select ARGNAME_stride_NAMEEND_VAL temp955_91)))
(assert (= temp955_93 #x0000000000000000))
(assert (= temp955_94 #x0000000000000003))
(assert (= temp955_95 temp955_94))
(assert (= temp955_96 (select ARGNAME_stride_NAMEEND_VAL temp955_95)))
(assert (= temp955_97 #x0000000000000000))
(assert (= temp955_98 #x0000000000000004))
(assert (= temp955_99 temp955_98))
(assert (= temp955_100 (select ARGNAME_stride_NAMEEND_VAL temp955_99)))
(assert (= temp955_101 #x0000000000000000))
(assert (= temp955_102 #x0000000000000005))
(assert (= temp955_103 temp955_102))
(assert (= temp955_104 (select ARGNAME_stride_NAMEEND_VAL temp955_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp955_84 temp955_81)
             (bvsle temp955_88 temp955_85)
             (bvsle temp955_92 temp955_89)
             (bvsle temp955_96 temp955_93)
             (bvsle temp955_100 temp955_97)
             (bvsle temp955_104 temp955_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp955_105 #x0000000000000000))
(assert (= var2240311 temp955_105))
(assert (= temp955_106 #x0000000000000000))
(assert (= var2228402 temp955_106))
(assert (= temp955_107 #x0000000000000000))
(assert (= temp955_108 temp955_107))
(assert (= temp955_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp955_108)))
(assert (= temp955_110 #x0000000000000001))
(assert (= temp955_111 temp955_110))
(assert (= temp955_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp955_111)))
(assert (= temp955_113 #x0000000000000002))
(assert (= temp955_114 temp955_113))
(assert (= temp955_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp955_114)))
(assert (= temp955_116 #x0000000000000003))
(assert (= temp955_117 temp955_116))
(assert (= temp955_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp955_117)))
(assert (= temp955_119 #x0000000000000004))
(assert (= temp955_120 temp955_119))
(assert (= temp955_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp955_120)))
(assert (= temp955_122 #x0000000000000005))
(assert (= temp955_123 temp955_122))
(assert (= temp955_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp955_123)))
(assert (= temp955_126 var2228402))
(assert (= temp955_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp955_126)))
(assert (= temp955_125 temp955_127))
(assert (= var2240356
   (ite (bvslt temp955_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp955_128 #x0000000000000000))
(assert (= var2240356 temp955_128))
(assert (= temp955_129 #x0000000000000000))
(assert (= var2228402 temp955_129))
(assert (= temp955_131 var2228402))
(assert (= temp955_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp955_131)))
(assert (= temp955_130 temp955_132))
(assert (= var2240378 (bvsmod temp955_130 ARGNAME_groups_NAMEEND)))
(assert (= temp955_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp955_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp955_134 #x0000000000000001))
(assert (= var2240379 temp955_134))
(assert (= var2240398 var2240288))
(assert (= temp955_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp955_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp955_136 #x0000000000000001))
(assert (= var2240399 temp955_136))
(assert (= temp955_137 #x0000000000000001))
(assert (= var2229290 temp955_137))
(assert (= temp955_139 var2229290))
(assert (= temp955_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp955_139)))
(assert (= temp955_138 temp955_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp955_138)))
(assert (= temp955_141 #x0000000000000000))
(assert (= var2228402 temp955_141))
(assert (= temp955_143 var2228402))
(assert (= temp955_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp955_143)))
(assert (= temp955_142 temp955_144))
(assert (= temp955_145 #x0000000000000002))
(assert (= var2503529 temp955_145))
(assert (= temp955_146 #x0000000000000001))
(assert (= var2240569 temp955_146))
(assert (= temp955_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp955_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp955_148 #x0000000000000001))
(assert (= var1521778 temp955_148))
(assert (= temp955_149 #x0000000000000001))
(assert (= var1521908 temp955_149))
(assert (= var4010473 var1521908))
(assert (= temp955_150 #x0000000000000000))
(assert (= var4210495 temp955_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp955_151 #x0000000000000002))
(assert (= var4339331 temp955_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var5124496 var1521921))
(assert (= var5386640 var1521921))
(assert (= temp955_152 #x0000000000000001))
(assert (= var1521778 temp955_152))
(model-add temp955_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp955_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp955_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp955_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp955_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp955_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






