(declare-fun temp79_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp79_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp79_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp79_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp79_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp79_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp79_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp79_8 () (_ BitVec 64))
(declare-fun temp79_10 () (_ BitVec 64))
(declare-fun temp79_9 () (_ BitVec 64))
(declare-fun temp79_12 () (_ BitVec 64))
(declare-fun temp79_11 () (_ BitVec 64))
(declare-fun temp79_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp79_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp79_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp79_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp79_17 () (_ BitVec 64))
(declare-fun temp79_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp79_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp79_20 () (_ BitVec 64))
(declare-fun temp79_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp79_22 () (_ BitVec 64))
(declare-fun temp79_23 () (_ BitVec 64))
(declare-fun temp79_24 () (_ BitVec 64))
(declare-fun temp79_25 () (_ BitVec 64))
(declare-fun temp79_26 () (_ BitVec 64))
(declare-fun temp79_27 () (_ BitVec 64))
(declare-fun temp79_28 () (_ BitVec 64))
(declare-fun temp79_29 () (_ BitVec 64))
(declare-fun temp79_30 () (_ BitVec 64))
(declare-fun temp79_31 () (_ BitVec 64))
(declare-fun temp79_32 () (_ BitVec 64))
(declare-fun temp79_33 () (_ BitVec 64))
(declare-fun temp79_34 () (_ BitVec 64))
(declare-fun temp79_35 () (_ BitVec 64))
(declare-fun temp79_36 () (_ BitVec 64))
(declare-fun temp79_37 () (_ BitVec 64))
(declare-fun temp79_38 () (_ BitVec 64))
(declare-fun temp79_39 () (_ BitVec 64))
(declare-fun temp79_40 () (_ BitVec 64))
(declare-fun temp79_41 () (_ BitVec 64))
(declare-fun temp79_42 () (_ BitVec 64))
(declare-fun temp79_43 () (_ BitVec 64))
(declare-fun temp79_44 () (_ BitVec 64))
(declare-fun temp79_45 () (_ BitVec 64))
(declare-fun temp79_46 () (_ BitVec 64))
(declare-fun temp79_47 () (_ BitVec 64))
(declare-fun temp79_48 () (_ BitVec 64))
(declare-fun temp79_49 () (_ BitVec 64))
(declare-fun temp79_50 () (_ BitVec 64))
(declare-fun temp79_51 () (_ BitVec 64))
(declare-fun temp79_52 () (_ BitVec 64))
(declare-fun temp79_53 () (_ BitVec 64))
(declare-fun temp79_54 () (_ BitVec 64))
(declare-fun temp79_55 () (_ BitVec 64))
(declare-fun temp79_56 () (_ BitVec 64))
(declare-fun temp79_57 () (_ BitVec 64))
(declare-fun temp79_58 () (_ BitVec 64))
(declare-fun temp79_59 () (_ BitVec 64))
(declare-fun temp79_60 () (_ BitVec 64))
(declare-fun temp79_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp79_62 () (_ BitVec 64))
(declare-fun temp79_63 () (_ BitVec 64))
(declare-fun temp79_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp79_65 () (_ BitVec 64))
(declare-fun temp79_66 () (_ BitVec 64))
(declare-fun temp79_67 () (_ BitVec 64))
(declare-fun temp79_68 () (_ BitVec 64))
(declare-fun temp79_69 () (_ BitVec 64))
(declare-fun temp79_70 () (_ BitVec 64))
(declare-fun temp79_71 () (_ BitVec 64))
(declare-fun temp79_72 () (_ BitVec 64))
(declare-fun temp79_73 () (_ BitVec 64))
(declare-fun temp79_74 () (_ BitVec 64))
(declare-fun temp79_75 () (_ BitVec 64))
(declare-fun temp79_76 () (_ BitVec 64))
(declare-fun temp79_77 () (_ BitVec 64))
(declare-fun temp79_78 () (_ BitVec 64))
(declare-fun temp79_79 () (_ BitVec 64))
(declare-fun temp79_80 () (_ BitVec 64))
(declare-fun temp79_81 () (_ BitVec 64))
(declare-fun temp79_82 () (_ BitVec 64))
(declare-fun temp79_83 () (_ BitVec 64))
(declare-fun temp79_84 () (_ BitVec 64))
(declare-fun temp79_85 () (_ BitVec 64))
(declare-fun temp79_86 () (_ BitVec 64))
(declare-fun temp79_87 () (_ BitVec 64))
(declare-fun temp79_88 () (_ BitVec 64))
(declare-fun temp79_89 () (_ BitVec 64))
(declare-fun temp79_90 () (_ BitVec 64))
(declare-fun temp79_91 () (_ BitVec 64))
(declare-fun temp79_92 () (_ BitVec 64))
(declare-fun temp79_93 () (_ BitVec 64))
(declare-fun temp79_94 () (_ BitVec 64))
(declare-fun temp79_95 () (_ BitVec 64))
(declare-fun temp79_96 () (_ BitVec 64))
(declare-fun temp79_97 () (_ BitVec 64))
(declare-fun temp79_98 () (_ BitVec 64))
(declare-fun temp79_99 () (_ BitVec 64))
(declare-fun temp79_100 () (_ BitVec 64))
(declare-fun temp79_101 () (_ BitVec 64))
(declare-fun temp79_102 () (_ BitVec 64))
(declare-fun temp79_103 () (_ BitVec 64))
(declare-fun temp79_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp79_105 () (_ BitVec 64))
(declare-fun temp79_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp79_107 () (_ BitVec 64))
(declare-fun temp79_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp79_109 () (_ BitVec 64))
(declare-fun temp79_110 () (_ BitVec 64))
(declare-fun temp79_111 () (_ BitVec 64))
(declare-fun temp79_112 () (_ BitVec 64))
(declare-fun temp79_113 () (_ BitVec 64))
(declare-fun temp79_114 () (_ BitVec 64))
(declare-fun temp79_115 () (_ BitVec 64))
(declare-fun temp79_116 () (_ BitVec 64))
(declare-fun temp79_117 () (_ BitVec 64))
(declare-fun temp79_118 () (_ BitVec 64))
(declare-fun temp79_119 () (_ BitVec 64))
(declare-fun temp79_120 () (_ BitVec 64))
(declare-fun temp79_121 () (_ BitVec 64))
(declare-fun temp79_122 () (_ BitVec 64))
(declare-fun temp79_123 () (_ BitVec 64))
(declare-fun temp79_124 () (_ BitVec 64))
(declare-fun temp79_126 () (_ BitVec 64))
(declare-fun temp79_127 () (_ BitVec 64))
(declare-fun temp79_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp79_128 () (_ BitVec 64))
(declare-fun temp79_129 () (_ BitVec 64))
(declare-fun temp79_131 () (_ BitVec 64))
(declare-fun temp79_132 () (_ BitVec 64))
(declare-fun temp79_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp79_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp79_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp79_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp79_136 () (_ BitVec 64))
(declare-fun temp79_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp79_139 () (_ BitVec 64))
(declare-fun temp79_140 () (_ BitVec 64))
(declare-fun temp79_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp79_141 () (_ BitVec 64))
(declare-fun temp79_143 () (_ BitVec 64))
(declare-fun temp79_144 () (_ BitVec 64))
(declare-fun temp79_142 () (_ BitVec 64))
(declare-fun temp79_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp79_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp79_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp79_148 () (_ BitVec 64))
(declare-fun temp79_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp79_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp79_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var1522214 () (_ BitVec 64))
(declare-fun temp79_152 () (_ BitVec 64))
(declare-fun var1522215 () (_ BitVec 64))
(declare-fun temp79_153 () (_ BitVec 64))
(assert (= temp79_1 #x0000000000000002))
(assert (= var989741 temp79_1))
(assert (= temp79_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp79_2)))
(assert (= temp79_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp79_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp79_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp79_4)))
(assert (= temp79_5 #x0000000000000000))
(assert (= var989775 (ite (= var989774 temp79_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp79_6 #x0000000000000000))
(assert (= var989776 temp79_6))
(assert (= temp79_7 #x0000000000000000))
(assert (= var989810 (ite (= var989773 temp79_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp79_8 #x0000000000000001))
(assert (= var989810 temp79_8))
(assert (= temp79_10 #x0000000000000000))
(assert (= temp79_9 temp79_10))
(assert (= temp79_12 #x0000000000000002))
(assert (= temp79_11 temp79_12))
(assert (= temp79_13 #x0000000000000000))
(assert (= var1387902 temp79_13))
(assert (= temp79_14 #x0000000000000001))
(assert (= var1387923 temp79_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp79_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp79_15)))
(assert (= temp79_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp79_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp79_17 #x0000000000000000))
(assert (= var1521661 temp79_17))
(assert (= temp79_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp79_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp79_19 #x0000000000000000))
(assert (= var1521706 temp79_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp79_20 #x0000000000000000))
(assert (= temp79_21 temp79_20))
(assert (= temp79_22 (select ARGNAME_padding_NAMEEND_VAL temp79_21)))
(assert (= temp79_23 #x0000000000000001))
(assert (= temp79_24 temp79_23))
(assert (= temp79_25 (select ARGNAME_padding_NAMEEND_VAL temp79_24)))
(assert (= temp79_26 #x0000000000000002))
(assert (= temp79_27 temp79_26))
(assert (= temp79_28 (select ARGNAME_padding_NAMEEND_VAL temp79_27)))
(assert (= temp79_29 #x0000000000000003))
(assert (= temp79_30 temp79_29))
(assert (= temp79_31 (select ARGNAME_padding_NAMEEND_VAL temp79_30)))
(assert (= temp79_32 #x0000000000000004))
(assert (= temp79_33 temp79_32))
(assert (= temp79_34 (select ARGNAME_padding_NAMEEND_VAL temp79_33)))
(assert (= temp79_35 #x0000000000000005))
(assert (= temp79_36 temp79_35))
(assert (= temp79_37 (select ARGNAME_padding_NAMEEND_VAL temp79_36)))
(assert (= temp79_38 #x0000000000000000))
(assert (= temp79_39 #x0000000000000000))
(assert (= temp79_40 temp79_39))
(assert (= temp79_41 (select ARGNAME_padding_NAMEEND_VAL temp79_40)))
(assert (= temp79_42 #x0000000000000000))
(assert (= temp79_43 #x0000000000000001))
(assert (= temp79_44 temp79_43))
(assert (= temp79_45 (select ARGNAME_padding_NAMEEND_VAL temp79_44)))
(assert (= temp79_46 #x0000000000000000))
(assert (= temp79_47 #x0000000000000002))
(assert (= temp79_48 temp79_47))
(assert (= temp79_49 (select ARGNAME_padding_NAMEEND_VAL temp79_48)))
(assert (= temp79_50 #x0000000000000000))
(assert (= temp79_51 #x0000000000000003))
(assert (= temp79_52 temp79_51))
(assert (= temp79_53 (select ARGNAME_padding_NAMEEND_VAL temp79_52)))
(assert (= temp79_54 #x0000000000000000))
(assert (= temp79_55 #x0000000000000004))
(assert (= temp79_56 temp79_55))
(assert (= temp79_57 (select ARGNAME_padding_NAMEEND_VAL temp79_56)))
(assert (= temp79_58 #x0000000000000000))
(assert (= temp79_59 #x0000000000000005))
(assert (= temp79_60 temp79_59))
(assert (= temp79_61 (select ARGNAME_padding_NAMEEND_VAL temp79_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp79_41 temp79_38)
             (bvslt temp79_45 temp79_42)
             (bvslt temp79_49 temp79_46)
             (bvslt temp79_53 temp79_50)
             (bvslt temp79_57 temp79_54)
             (bvslt temp79_61 temp79_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp79_62 #x0000000000000000))
(assert (= var2240290 temp79_62))
(assert (= temp79_63 #x0000000000000000))
(assert (= temp79_64 temp79_63))
(assert (= temp79_65 (select ARGNAME_stride_NAMEEND_VAL temp79_64)))
(assert (= temp79_66 #x0000000000000001))
(assert (= temp79_67 temp79_66))
(assert (= temp79_68 (select ARGNAME_stride_NAMEEND_VAL temp79_67)))
(assert (= temp79_69 #x0000000000000002))
(assert (= temp79_70 temp79_69))
(assert (= temp79_71 (select ARGNAME_stride_NAMEEND_VAL temp79_70)))
(assert (= temp79_72 #x0000000000000003))
(assert (= temp79_73 temp79_72))
(assert (= temp79_74 (select ARGNAME_stride_NAMEEND_VAL temp79_73)))
(assert (= temp79_75 #x0000000000000004))
(assert (= temp79_76 temp79_75))
(assert (= temp79_77 (select ARGNAME_stride_NAMEEND_VAL temp79_76)))
(assert (= temp79_78 #x0000000000000005))
(assert (= temp79_79 temp79_78))
(assert (= temp79_80 (select ARGNAME_stride_NAMEEND_VAL temp79_79)))
(assert (= temp79_81 #x0000000000000000))
(assert (= temp79_82 #x0000000000000000))
(assert (= temp79_83 temp79_82))
(assert (= temp79_84 (select ARGNAME_stride_NAMEEND_VAL temp79_83)))
(assert (= temp79_85 #x0000000000000000))
(assert (= temp79_86 #x0000000000000001))
(assert (= temp79_87 temp79_86))
(assert (= temp79_88 (select ARGNAME_stride_NAMEEND_VAL temp79_87)))
(assert (= temp79_89 #x0000000000000000))
(assert (= temp79_90 #x0000000000000002))
(assert (= temp79_91 temp79_90))
(assert (= temp79_92 (select ARGNAME_stride_NAMEEND_VAL temp79_91)))
(assert (= temp79_93 #x0000000000000000))
(assert (= temp79_94 #x0000000000000003))
(assert (= temp79_95 temp79_94))
(assert (= temp79_96 (select ARGNAME_stride_NAMEEND_VAL temp79_95)))
(assert (= temp79_97 #x0000000000000000))
(assert (= temp79_98 #x0000000000000004))
(assert (= temp79_99 temp79_98))
(assert (= temp79_100 (select ARGNAME_stride_NAMEEND_VAL temp79_99)))
(assert (= temp79_101 #x0000000000000000))
(assert (= temp79_102 #x0000000000000005))
(assert (= temp79_103 temp79_102))
(assert (= temp79_104 (select ARGNAME_stride_NAMEEND_VAL temp79_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp79_84 temp79_81)
             (bvsle temp79_88 temp79_85)
             (bvsle temp79_92 temp79_89)
             (bvsle temp79_96 temp79_93)
             (bvsle temp79_100 temp79_97)
             (bvsle temp79_104 temp79_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp79_105 #x0000000000000000))
(assert (= var2240311 temp79_105))
(assert (= temp79_106 #x0000000000000000))
(assert (= var2228402 temp79_106))
(assert (= temp79_107 #x0000000000000000))
(assert (= temp79_108 temp79_107))
(assert (= temp79_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp79_108)))
(assert (= temp79_110 #x0000000000000001))
(assert (= temp79_111 temp79_110))
(assert (= temp79_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp79_111)))
(assert (= temp79_113 #x0000000000000002))
(assert (= temp79_114 temp79_113))
(assert (= temp79_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp79_114)))
(assert (= temp79_116 #x0000000000000003))
(assert (= temp79_117 temp79_116))
(assert (= temp79_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp79_117)))
(assert (= temp79_119 #x0000000000000004))
(assert (= temp79_120 temp79_119))
(assert (= temp79_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp79_120)))
(assert (= temp79_122 #x0000000000000005))
(assert (= temp79_123 temp79_122))
(assert (= temp79_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp79_123)))
(assert (= temp79_126 var2228402))
(assert (= temp79_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp79_126)))
(assert (= temp79_125 temp79_127))
(assert (= var2240356
   (ite (bvslt temp79_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp79_128 #x0000000000000000))
(assert (= var2240356 temp79_128))
(assert (= temp79_129 #x0000000000000000))
(assert (= var2228402 temp79_129))
(assert (= temp79_131 var2228402))
(assert (= temp79_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp79_131)))
(assert (= temp79_130 temp79_132))
(assert (= var2240378 (bvsmod temp79_130 ARGNAME_groups_NAMEEND)))
(assert (= temp79_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp79_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp79_134 #x0000000000000001))
(assert (= var2240379 temp79_134))
(assert (= var2240398 var2240288))
(assert (= temp79_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp79_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp79_136 #x0000000000000001))
(assert (= var2240399 temp79_136))
(assert (= temp79_137 #x0000000000000001))
(assert (= var2229290 temp79_137))
(assert (= temp79_139 var2229290))
(assert (= temp79_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp79_139)))
(assert (= temp79_138 temp79_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp79_138)))
(assert (= temp79_141 #x0000000000000000))
(assert (= var2228402 temp79_141))
(assert (= temp79_143 var2228402))
(assert (= temp79_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp79_143)))
(assert (= temp79_142 temp79_144))
(assert (= temp79_145 #x0000000000000002))
(assert (= var2503529 temp79_145))
(assert (= temp79_146 #x0000000000000001))
(assert (= var2240569 temp79_146))
(assert (= temp79_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp79_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp79_148 #x0000000000000001))
(assert (= var1521778 temp79_148))
(assert (= temp79_149 #x0000000000000001))
(assert (= var1521908 temp79_149))
(assert (= var4010473 var1521908))
(assert (= temp79_150 #x0000000000000000))
(assert (= var4210495 temp79_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp79_151 #x0000000000000002))
(assert (= var4339331 temp79_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4796816 var1521921))
(assert (= var1522214 var1521633))
(assert (= temp79_152 #x0000000000000000))
(assert (= var1522215
   (ite (distinct var1522214 temp79_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp79_153 #x0000000000000001))
(assert (= var1521778 temp79_153))
(model-add temp79_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp79_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp79_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp79_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp79_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp79_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)





