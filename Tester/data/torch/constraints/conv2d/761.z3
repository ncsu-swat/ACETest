(declare-fun temp1013_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp1013_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp1013_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp1013_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp1013_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp1013_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp1013_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp1013_8 () (_ BitVec 64))
(declare-fun temp1013_10 () (_ BitVec 64))
(declare-fun temp1013_9 () (_ BitVec 64))
(declare-fun temp1013_12 () (_ BitVec 64))
(declare-fun temp1013_11 () (_ BitVec 64))
(declare-fun temp1013_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp1013_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp1013_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp1013_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp1013_17 () (_ BitVec 64))
(declare-fun temp1013_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp1013_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp1013_20 () (_ BitVec 64))
(declare-fun temp1013_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1013_22 () (_ BitVec 64))
(declare-fun temp1013_23 () (_ BitVec 64))
(declare-fun temp1013_24 () (_ BitVec 64))
(declare-fun temp1013_25 () (_ BitVec 64))
(declare-fun temp1013_26 () (_ BitVec 64))
(declare-fun temp1013_27 () (_ BitVec 64))
(declare-fun temp1013_28 () (_ BitVec 64))
(declare-fun temp1013_29 () (_ BitVec 64))
(declare-fun temp1013_30 () (_ BitVec 64))
(declare-fun temp1013_31 () (_ BitVec 64))
(declare-fun temp1013_32 () (_ BitVec 64))
(declare-fun temp1013_33 () (_ BitVec 64))
(declare-fun temp1013_34 () (_ BitVec 64))
(declare-fun temp1013_35 () (_ BitVec 64))
(declare-fun temp1013_36 () (_ BitVec 64))
(declare-fun temp1013_37 () (_ BitVec 64))
(declare-fun temp1013_38 () (_ BitVec 64))
(declare-fun temp1013_39 () (_ BitVec 64))
(declare-fun temp1013_40 () (_ BitVec 64))
(declare-fun temp1013_41 () (_ BitVec 64))
(declare-fun temp1013_42 () (_ BitVec 64))
(declare-fun temp1013_43 () (_ BitVec 64))
(declare-fun temp1013_44 () (_ BitVec 64))
(declare-fun temp1013_45 () (_ BitVec 64))
(declare-fun temp1013_46 () (_ BitVec 64))
(declare-fun temp1013_47 () (_ BitVec 64))
(declare-fun temp1013_48 () (_ BitVec 64))
(declare-fun temp1013_49 () (_ BitVec 64))
(declare-fun temp1013_50 () (_ BitVec 64))
(declare-fun temp1013_51 () (_ BitVec 64))
(declare-fun temp1013_52 () (_ BitVec 64))
(declare-fun temp1013_53 () (_ BitVec 64))
(declare-fun temp1013_54 () (_ BitVec 64))
(declare-fun temp1013_55 () (_ BitVec 64))
(declare-fun temp1013_56 () (_ BitVec 64))
(declare-fun temp1013_57 () (_ BitVec 64))
(declare-fun temp1013_58 () (_ BitVec 64))
(declare-fun temp1013_59 () (_ BitVec 64))
(declare-fun temp1013_60 () (_ BitVec 64))
(declare-fun temp1013_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp1013_62 () (_ BitVec 64))
(declare-fun temp1013_63 () (_ BitVec 64))
(declare-fun temp1013_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1013_65 () (_ BitVec 64))
(declare-fun temp1013_66 () (_ BitVec 64))
(declare-fun temp1013_67 () (_ BitVec 64))
(declare-fun temp1013_68 () (_ BitVec 64))
(declare-fun temp1013_69 () (_ BitVec 64))
(declare-fun temp1013_70 () (_ BitVec 64))
(declare-fun temp1013_71 () (_ BitVec 64))
(declare-fun temp1013_72 () (_ BitVec 64))
(declare-fun temp1013_73 () (_ BitVec 64))
(declare-fun temp1013_74 () (_ BitVec 64))
(declare-fun temp1013_75 () (_ BitVec 64))
(declare-fun temp1013_76 () (_ BitVec 64))
(declare-fun temp1013_77 () (_ BitVec 64))
(declare-fun temp1013_78 () (_ BitVec 64))
(declare-fun temp1013_79 () (_ BitVec 64))
(declare-fun temp1013_80 () (_ BitVec 64))
(declare-fun temp1013_81 () (_ BitVec 64))
(declare-fun temp1013_82 () (_ BitVec 64))
(declare-fun temp1013_83 () (_ BitVec 64))
(declare-fun temp1013_84 () (_ BitVec 64))
(declare-fun temp1013_85 () (_ BitVec 64))
(declare-fun temp1013_86 () (_ BitVec 64))
(declare-fun temp1013_87 () (_ BitVec 64))
(declare-fun temp1013_88 () (_ BitVec 64))
(declare-fun temp1013_89 () (_ BitVec 64))
(declare-fun temp1013_90 () (_ BitVec 64))
(declare-fun temp1013_91 () (_ BitVec 64))
(declare-fun temp1013_92 () (_ BitVec 64))
(declare-fun temp1013_93 () (_ BitVec 64))
(declare-fun temp1013_94 () (_ BitVec 64))
(declare-fun temp1013_95 () (_ BitVec 64))
(declare-fun temp1013_96 () (_ BitVec 64))
(declare-fun temp1013_97 () (_ BitVec 64))
(declare-fun temp1013_98 () (_ BitVec 64))
(declare-fun temp1013_99 () (_ BitVec 64))
(declare-fun temp1013_100 () (_ BitVec 64))
(declare-fun temp1013_101 () (_ BitVec 64))
(declare-fun temp1013_102 () (_ BitVec 64))
(declare-fun temp1013_103 () (_ BitVec 64))
(declare-fun temp1013_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp1013_105 () (_ BitVec 64))
(declare-fun temp1013_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp1013_107 () (_ BitVec 64))
(declare-fun temp1013_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1013_109 () (_ BitVec 64))
(declare-fun temp1013_110 () (_ BitVec 64))
(declare-fun temp1013_111 () (_ BitVec 64))
(declare-fun temp1013_112 () (_ BitVec 64))
(declare-fun temp1013_113 () (_ BitVec 64))
(declare-fun temp1013_114 () (_ BitVec 64))
(declare-fun temp1013_115 () (_ BitVec 64))
(declare-fun temp1013_116 () (_ BitVec 64))
(declare-fun temp1013_117 () (_ BitVec 64))
(declare-fun temp1013_118 () (_ BitVec 64))
(declare-fun temp1013_119 () (_ BitVec 64))
(declare-fun temp1013_120 () (_ BitVec 64))
(declare-fun temp1013_121 () (_ BitVec 64))
(declare-fun temp1013_122 () (_ BitVec 64))
(declare-fun temp1013_123 () (_ BitVec 64))
(declare-fun temp1013_124 () (_ BitVec 64))
(declare-fun temp1013_126 () (_ BitVec 64))
(declare-fun temp1013_127 () (_ BitVec 64))
(declare-fun temp1013_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp1013_128 () (_ BitVec 64))
(declare-fun temp1013_129 () (_ BitVec 64))
(declare-fun temp1013_131 () (_ BitVec 64))
(declare-fun temp1013_132 () (_ BitVec 64))
(declare-fun temp1013_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp1013_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp1013_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp1013_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp1013_136 () (_ BitVec 64))
(declare-fun temp1013_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp1013_139 () (_ BitVec 64))
(declare-fun temp1013_140 () (_ BitVec 64))
(declare-fun temp1013_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp1013_141 () (_ BitVec 64))
(declare-fun temp1013_143 () (_ BitVec 64))
(declare-fun temp1013_144 () (_ BitVec 64))
(declare-fun temp1013_142 () (_ BitVec 64))
(declare-fun temp1013_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp1013_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp1013_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp1013_148 () (_ BitVec 64))
(declare-fun temp1013_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp1013_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp1013_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp1013_152 () (_ BitVec 64))
(assert (= temp1013_1 #x0000000000000002))
(assert (= var989741 temp1013_1))
(assert (= temp1013_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp1013_2)))
(assert (= temp1013_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp1013_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp1013_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp1013_4)))
(assert (= temp1013_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp1013_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp1013_6 #x0000000000000000))
(assert (= var989776 temp1013_6))
(assert (= temp1013_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp1013_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1013_8 #x0000000000000001))
(assert (= var989810 temp1013_8))
(assert (= temp1013_10 #x0000000000000000))
(assert (= temp1013_9 temp1013_10))
(assert (= temp1013_12 #x0000000000000002))
(assert (= temp1013_11 temp1013_12))
(assert (= temp1013_13 #x0000000000000000))
(assert (= var1387902 temp1013_13))
(assert (= temp1013_14 #x0000000000000001))
(assert (= var1387923 temp1013_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp1013_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp1013_15)))
(assert (= temp1013_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1013_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1013_17 #x0000000000000000))
(assert (= var1521661 temp1013_17))
(assert (= temp1013_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp1013_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1013_19 #x0000000000000000))
(assert (= var1521706 temp1013_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp1013_20 #x0000000000000000))
(assert (= temp1013_21 temp1013_20))
(assert (= temp1013_22 (select ARGNAME_padding_NAMEEND_VAL temp1013_21)))
(assert (= temp1013_23 #x0000000000000001))
(assert (= temp1013_24 temp1013_23))
(assert (= temp1013_25 (select ARGNAME_padding_NAMEEND_VAL temp1013_24)))
(assert (= temp1013_26 #x0000000000000002))
(assert (= temp1013_27 temp1013_26))
(assert (= temp1013_28 (select ARGNAME_padding_NAMEEND_VAL temp1013_27)))
(assert (= temp1013_29 #x0000000000000003))
(assert (= temp1013_30 temp1013_29))
(assert (= temp1013_31 (select ARGNAME_padding_NAMEEND_VAL temp1013_30)))
(assert (= temp1013_32 #x0000000000000004))
(assert (= temp1013_33 temp1013_32))
(assert (= temp1013_34 (select ARGNAME_padding_NAMEEND_VAL temp1013_33)))
(assert (= temp1013_35 #x0000000000000005))
(assert (= temp1013_36 temp1013_35))
(assert (= temp1013_37 (select ARGNAME_padding_NAMEEND_VAL temp1013_36)))
(assert (= temp1013_38 #x0000000000000000))
(assert (= temp1013_39 #x0000000000000000))
(assert (= temp1013_40 temp1013_39))
(assert (= temp1013_41 (select ARGNAME_padding_NAMEEND_VAL temp1013_40)))
(assert (= temp1013_42 #x0000000000000000))
(assert (= temp1013_43 #x0000000000000001))
(assert (= temp1013_44 temp1013_43))
(assert (= temp1013_45 (select ARGNAME_padding_NAMEEND_VAL temp1013_44)))
(assert (= temp1013_46 #x0000000000000000))
(assert (= temp1013_47 #x0000000000000002))
(assert (= temp1013_48 temp1013_47))
(assert (= temp1013_49 (select ARGNAME_padding_NAMEEND_VAL temp1013_48)))
(assert (= temp1013_50 #x0000000000000000))
(assert (= temp1013_51 #x0000000000000003))
(assert (= temp1013_52 temp1013_51))
(assert (= temp1013_53 (select ARGNAME_padding_NAMEEND_VAL temp1013_52)))
(assert (= temp1013_54 #x0000000000000000))
(assert (= temp1013_55 #x0000000000000004))
(assert (= temp1013_56 temp1013_55))
(assert (= temp1013_57 (select ARGNAME_padding_NAMEEND_VAL temp1013_56)))
(assert (= temp1013_58 #x0000000000000000))
(assert (= temp1013_59 #x0000000000000005))
(assert (= temp1013_60 temp1013_59))
(assert (= temp1013_61 (select ARGNAME_padding_NAMEEND_VAL temp1013_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp1013_41 temp1013_38)
             (bvslt temp1013_45 temp1013_42)
             (bvslt temp1013_49 temp1013_46)
             (bvslt temp1013_53 temp1013_50)
             (bvslt temp1013_57 temp1013_54)
             (bvslt temp1013_61 temp1013_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1013_62 #x0000000000000000))
(assert (= var2240290 temp1013_62))
(assert (= temp1013_63 #x0000000000000000))
(assert (= temp1013_64 temp1013_63))
(assert (= temp1013_65 (select ARGNAME_stride_NAMEEND_VAL temp1013_64)))
(assert (= temp1013_66 #x0000000000000001))
(assert (= temp1013_67 temp1013_66))
(assert (= temp1013_68 (select ARGNAME_stride_NAMEEND_VAL temp1013_67)))
(assert (= temp1013_69 #x0000000000000002))
(assert (= temp1013_70 temp1013_69))
(assert (= temp1013_71 (select ARGNAME_stride_NAMEEND_VAL temp1013_70)))
(assert (= temp1013_72 #x0000000000000003))
(assert (= temp1013_73 temp1013_72))
(assert (= temp1013_74 (select ARGNAME_stride_NAMEEND_VAL temp1013_73)))
(assert (= temp1013_75 #x0000000000000004))
(assert (= temp1013_76 temp1013_75))
(assert (= temp1013_77 (select ARGNAME_stride_NAMEEND_VAL temp1013_76)))
(assert (= temp1013_78 #x0000000000000005))
(assert (= temp1013_79 temp1013_78))
(assert (= temp1013_80 (select ARGNAME_stride_NAMEEND_VAL temp1013_79)))
(assert (= temp1013_81 #x0000000000000000))
(assert (= temp1013_82 #x0000000000000000))
(assert (= temp1013_83 temp1013_82))
(assert (= temp1013_84 (select ARGNAME_stride_NAMEEND_VAL temp1013_83)))
(assert (= temp1013_85 #x0000000000000000))
(assert (= temp1013_86 #x0000000000000001))
(assert (= temp1013_87 temp1013_86))
(assert (= temp1013_88 (select ARGNAME_stride_NAMEEND_VAL temp1013_87)))
(assert (= temp1013_89 #x0000000000000000))
(assert (= temp1013_90 #x0000000000000002))
(assert (= temp1013_91 temp1013_90))
(assert (= temp1013_92 (select ARGNAME_stride_NAMEEND_VAL temp1013_91)))
(assert (= temp1013_93 #x0000000000000000))
(assert (= temp1013_94 #x0000000000000003))
(assert (= temp1013_95 temp1013_94))
(assert (= temp1013_96 (select ARGNAME_stride_NAMEEND_VAL temp1013_95)))
(assert (= temp1013_97 #x0000000000000000))
(assert (= temp1013_98 #x0000000000000004))
(assert (= temp1013_99 temp1013_98))
(assert (= temp1013_100 (select ARGNAME_stride_NAMEEND_VAL temp1013_99)))
(assert (= temp1013_101 #x0000000000000000))
(assert (= temp1013_102 #x0000000000000005))
(assert (= temp1013_103 temp1013_102))
(assert (= temp1013_104 (select ARGNAME_stride_NAMEEND_VAL temp1013_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp1013_84 temp1013_81)
             (bvsle temp1013_88 temp1013_85)
             (bvsle temp1013_92 temp1013_89)
             (bvsle temp1013_96 temp1013_93)
             (bvsle temp1013_100 temp1013_97)
             (bvsle temp1013_104 temp1013_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1013_105 #x0000000000000000))
(assert (= var2240311 temp1013_105))
(assert (= temp1013_106 #x0000000000000000))
(assert (= var2228402 temp1013_106))
(assert (= temp1013_107 #x0000000000000000))
(assert (= temp1013_108 temp1013_107))
(assert (= temp1013_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1013_108)))
(assert (= temp1013_110 #x0000000000000001))
(assert (= temp1013_111 temp1013_110))
(assert (= temp1013_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1013_111)))
(assert (= temp1013_113 #x0000000000000002))
(assert (= temp1013_114 temp1013_113))
(assert (= temp1013_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1013_114)))
(assert (= temp1013_116 #x0000000000000003))
(assert (= temp1013_117 temp1013_116))
(assert (= temp1013_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1013_117)))
(assert (= temp1013_119 #x0000000000000004))
(assert (= temp1013_120 temp1013_119))
(assert (= temp1013_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1013_120)))
(assert (= temp1013_122 #x0000000000000005))
(assert (= temp1013_123 temp1013_122))
(assert (= temp1013_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1013_123)))
(assert (= temp1013_126 var2228402))
(assert (= temp1013_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1013_126)))
(assert (= temp1013_125 temp1013_127))
(assert (= var2240356
   (ite (bvslt temp1013_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1013_128 #x0000000000000000))
(assert (= var2240356 temp1013_128))
(assert (= temp1013_129 #x0000000000000000))
(assert (= var2228402 temp1013_129))
(assert (= temp1013_131 var2228402))
(assert (= temp1013_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1013_131)))
(assert (= temp1013_130 temp1013_132))
(assert (= var2240378 (bvsmod temp1013_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1013_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp1013_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1013_134 #x0000000000000001))
(assert (= var2240379 temp1013_134))
(assert (= var2240398 var2240288))
(assert (= temp1013_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp1013_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1013_136 #x0000000000000001))
(assert (= var2240399 temp1013_136))
(assert (= temp1013_137 #x0000000000000001))
(assert (= var2229290 temp1013_137))
(assert (= temp1013_139 var2229290))
(assert (= temp1013_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1013_139)))
(assert (= temp1013_138 temp1013_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp1013_138)))
(assert (= temp1013_141 #x0000000000000000))
(assert (= var2228402 temp1013_141))
(assert (= temp1013_143 var2228402))
(assert (= temp1013_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1013_143)))
(assert (= temp1013_142 temp1013_144))
(assert (= temp1013_145 #x0000000000000002))
(assert (= var2503529 temp1013_145))
(assert (= temp1013_146 #x0000000000000001))
(assert (= var2240569 temp1013_146))
(assert (= temp1013_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1013_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1013_148 #x0000000000000001))
(assert (= var1521778 temp1013_148))
(assert (= temp1013_149 #x0000000000000001))
(assert (= var1521908 temp1013_149))
(assert (= var4010473 var1521908))
(assert (= temp1013_150 #x0000000000000000))
(assert (= var4210495 temp1013_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp1013_151 #x0000000000000002))
(assert (= var4339331 temp1013_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp1013_152 #x0000000000000001))
(assert (= var1521778 temp1013_152))
(model-add temp1013_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp1013_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp1013_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1013_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp1013_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1013_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






