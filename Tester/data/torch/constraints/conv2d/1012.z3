(declare-fun temp10119_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp10119_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp10119_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp10119_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp10119_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp10119_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp10119_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp10119_8 () (_ BitVec 64))
(declare-fun temp10119_10 () (_ BitVec 64))
(declare-fun temp10119_9 () (_ BitVec 64))
(declare-fun temp10119_12 () (_ BitVec 64))
(declare-fun temp10119_11 () (_ BitVec 64))
(declare-fun temp10119_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp10119_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp10119_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp10119_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp10119_17 () (_ BitVec 64))
(declare-fun temp10119_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp10119_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp10119_20 () (_ BitVec 64))
(declare-fun temp10119_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10119_22 () (_ BitVec 64))
(declare-fun temp10119_23 () (_ BitVec 64))
(declare-fun temp10119_24 () (_ BitVec 64))
(declare-fun temp10119_25 () (_ BitVec 64))
(declare-fun temp10119_26 () (_ BitVec 64))
(declare-fun temp10119_27 () (_ BitVec 64))
(declare-fun temp10119_28 () (_ BitVec 64))
(declare-fun temp10119_29 () (_ BitVec 64))
(declare-fun temp10119_30 () (_ BitVec 64))
(declare-fun temp10119_31 () (_ BitVec 64))
(declare-fun temp10119_32 () (_ BitVec 64))
(declare-fun temp10119_33 () (_ BitVec 64))
(declare-fun temp10119_34 () (_ BitVec 64))
(declare-fun temp10119_35 () (_ BitVec 64))
(declare-fun temp10119_36 () (_ BitVec 64))
(declare-fun temp10119_37 () (_ BitVec 64))
(declare-fun temp10119_38 () (_ BitVec 64))
(declare-fun temp10119_39 () (_ BitVec 64))
(declare-fun temp10119_40 () (_ BitVec 64))
(declare-fun temp10119_41 () (_ BitVec 64))
(declare-fun temp10119_42 () (_ BitVec 64))
(declare-fun temp10119_43 () (_ BitVec 64))
(declare-fun temp10119_44 () (_ BitVec 64))
(declare-fun temp10119_45 () (_ BitVec 64))
(declare-fun temp10119_46 () (_ BitVec 64))
(declare-fun temp10119_47 () (_ BitVec 64))
(declare-fun temp10119_48 () (_ BitVec 64))
(declare-fun temp10119_49 () (_ BitVec 64))
(declare-fun temp10119_50 () (_ BitVec 64))
(declare-fun temp10119_51 () (_ BitVec 64))
(declare-fun temp10119_52 () (_ BitVec 64))
(declare-fun temp10119_53 () (_ BitVec 64))
(declare-fun temp10119_54 () (_ BitVec 64))
(declare-fun temp10119_55 () (_ BitVec 64))
(declare-fun temp10119_56 () (_ BitVec 64))
(declare-fun temp10119_57 () (_ BitVec 64))
(declare-fun temp10119_58 () (_ BitVec 64))
(declare-fun temp10119_59 () (_ BitVec 64))
(declare-fun temp10119_60 () (_ BitVec 64))
(declare-fun temp10119_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp10119_62 () (_ BitVec 64))
(declare-fun temp10119_63 () (_ BitVec 64))
(declare-fun temp10119_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10119_65 () (_ BitVec 64))
(declare-fun temp10119_66 () (_ BitVec 64))
(declare-fun temp10119_67 () (_ BitVec 64))
(declare-fun temp10119_68 () (_ BitVec 64))
(declare-fun temp10119_69 () (_ BitVec 64))
(declare-fun temp10119_70 () (_ BitVec 64))
(declare-fun temp10119_71 () (_ BitVec 64))
(declare-fun temp10119_72 () (_ BitVec 64))
(declare-fun temp10119_73 () (_ BitVec 64))
(declare-fun temp10119_74 () (_ BitVec 64))
(declare-fun temp10119_75 () (_ BitVec 64))
(declare-fun temp10119_76 () (_ BitVec 64))
(declare-fun temp10119_77 () (_ BitVec 64))
(declare-fun temp10119_78 () (_ BitVec 64))
(declare-fun temp10119_79 () (_ BitVec 64))
(declare-fun temp10119_80 () (_ BitVec 64))
(declare-fun temp10119_81 () (_ BitVec 64))
(declare-fun temp10119_82 () (_ BitVec 64))
(declare-fun temp10119_83 () (_ BitVec 64))
(declare-fun temp10119_84 () (_ BitVec 64))
(declare-fun temp10119_85 () (_ BitVec 64))
(declare-fun temp10119_86 () (_ BitVec 64))
(declare-fun temp10119_87 () (_ BitVec 64))
(declare-fun temp10119_88 () (_ BitVec 64))
(declare-fun temp10119_89 () (_ BitVec 64))
(declare-fun temp10119_90 () (_ BitVec 64))
(declare-fun temp10119_91 () (_ BitVec 64))
(declare-fun temp10119_92 () (_ BitVec 64))
(declare-fun temp10119_93 () (_ BitVec 64))
(declare-fun temp10119_94 () (_ BitVec 64))
(declare-fun temp10119_95 () (_ BitVec 64))
(declare-fun temp10119_96 () (_ BitVec 64))
(declare-fun temp10119_97 () (_ BitVec 64))
(declare-fun temp10119_98 () (_ BitVec 64))
(declare-fun temp10119_99 () (_ BitVec 64))
(declare-fun temp10119_100 () (_ BitVec 64))
(declare-fun temp10119_101 () (_ BitVec 64))
(declare-fun temp10119_102 () (_ BitVec 64))
(declare-fun temp10119_103 () (_ BitVec 64))
(declare-fun temp10119_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp10119_105 () (_ BitVec 64))
(declare-fun temp10119_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp10119_107 () (_ BitVec 64))
(declare-fun temp10119_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10119_109 () (_ BitVec 64))
(declare-fun temp10119_110 () (_ BitVec 64))
(declare-fun temp10119_111 () (_ BitVec 64))
(declare-fun temp10119_112 () (_ BitVec 64))
(declare-fun temp10119_113 () (_ BitVec 64))
(declare-fun temp10119_114 () (_ BitVec 64))
(declare-fun temp10119_115 () (_ BitVec 64))
(declare-fun temp10119_116 () (_ BitVec 64))
(declare-fun temp10119_117 () (_ BitVec 64))
(declare-fun temp10119_118 () (_ BitVec 64))
(declare-fun temp10119_119 () (_ BitVec 64))
(declare-fun temp10119_120 () (_ BitVec 64))
(declare-fun temp10119_121 () (_ BitVec 64))
(declare-fun temp10119_122 () (_ BitVec 64))
(declare-fun temp10119_123 () (_ BitVec 64))
(declare-fun temp10119_124 () (_ BitVec 64))
(declare-fun temp10119_126 () (_ BitVec 64))
(declare-fun temp10119_127 () (_ BitVec 64))
(declare-fun temp10119_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp10119_128 () (_ BitVec 64))
(declare-fun temp10119_129 () (_ BitVec 64))
(declare-fun temp10119_131 () (_ BitVec 64))
(declare-fun temp10119_132 () (_ BitVec 64))
(declare-fun temp10119_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp10119_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp10119_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp10119_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp10119_136 () (_ BitVec 64))
(declare-fun temp10119_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp10119_139 () (_ BitVec 64))
(declare-fun temp10119_140 () (_ BitVec 64))
(declare-fun temp10119_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp10119_141 () (_ BitVec 64))
(declare-fun temp10119_143 () (_ BitVec 64))
(declare-fun temp10119_144 () (_ BitVec 64))
(declare-fun temp10119_142 () (_ BitVec 64))
(declare-fun temp10119_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp10119_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp10119_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp10119_148 () (_ BitVec 64))
(declare-fun temp10119_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp10119_150 () (_ BitVec 64))
(declare-fun var4010640 () (_ BitVec 64))
(declare-fun var4010467 () (_ BitVec 64))
(declare-fun var1521917 () (_ BitVec 64))
(declare-fun var4275993 () (_ BitVec 64))
(declare-fun temp10119_151 () (_ BitVec 64))
(declare-fun temp10119_152 () (_ BitVec 64))
(declare-fun temp10119_153 () (_ BitVec 64))
(declare-fun var4470403 () (_ BitVec 64))
(declare-fun var4470405 () (_ BitVec 64))
(declare-fun var4535948 () (_ BitVec 64))
(declare-fun var4535949 () (_ BitVec 64))
(declare-fun temp10119_154 () (_ BitVec 64))
(declare-fun var1522108 () (_ BitVec 64))
(declare-fun temp10119_155 () (_ BitVec 64))
(declare-fun var1522109 () (_ BitVec 64))
(declare-fun var5848909 () (_ BitVec 64))
(declare-fun temp10119_157 () (_ BitVec 64))
(declare-fun temp10119_156 () (_ BitVec 64))
(declare-fun temp10119_158 () (_ BitVec 64))
(declare-fun var6426090 () (_ BitVec 64))
(declare-fun temp10119_160 () (_ BitVec 64))
(declare-fun temp10119_159 () (_ BitVec 64))
(declare-fun temp10119_161 () (_ BitVec 64))
(assert (= temp10119_1 #x0000000000000002))
(assert (= var989741 temp10119_1))
(assert (= temp10119_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp10119_2)))
(assert (= temp10119_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp10119_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp10119_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp10119_4)))
(assert (= temp10119_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp10119_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp10119_6 #x0000000000000000))
(assert (= var989776 temp10119_6))
(assert (= temp10119_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp10119_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp10119_8 #x0000000000000001))
(assert (= var989810 temp10119_8))
(assert (= temp10119_10 #x0000000000000000))
(assert (= temp10119_9 temp10119_10))
(assert (= temp10119_12 #x0000000000000002))
(assert (= temp10119_11 temp10119_12))
(assert (= temp10119_13 #x0000000000000000))
(assert (= var1387902 temp10119_13))
(assert (= temp10119_14 #x0000000000000001))
(assert (= var1387923 temp10119_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp10119_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp10119_15)))
(assert (= temp10119_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10119_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10119_17 #x0000000000000000))
(assert (= var1521661 temp10119_17))
(assert (= temp10119_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp10119_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10119_19 #x0000000000000000))
(assert (= var1521706 temp10119_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp10119_20 #x0000000000000000))
(assert (= temp10119_21 temp10119_20))
(assert (= temp10119_22 (select ARGNAME_padding_NAMEEND_VAL temp10119_21)))
(assert (= temp10119_23 #x0000000000000001))
(assert (= temp10119_24 temp10119_23))
(assert (= temp10119_25 (select ARGNAME_padding_NAMEEND_VAL temp10119_24)))
(assert (= temp10119_26 #x0000000000000002))
(assert (= temp10119_27 temp10119_26))
(assert (= temp10119_28 (select ARGNAME_padding_NAMEEND_VAL temp10119_27)))
(assert (= temp10119_29 #x0000000000000003))
(assert (= temp10119_30 temp10119_29))
(assert (= temp10119_31 (select ARGNAME_padding_NAMEEND_VAL temp10119_30)))
(assert (= temp10119_32 #x0000000000000004))
(assert (= temp10119_33 temp10119_32))
(assert (= temp10119_34 (select ARGNAME_padding_NAMEEND_VAL temp10119_33)))
(assert (= temp10119_35 #x0000000000000005))
(assert (= temp10119_36 temp10119_35))
(assert (= temp10119_37 (select ARGNAME_padding_NAMEEND_VAL temp10119_36)))
(assert (= temp10119_38 #x0000000000000000))
(assert (= temp10119_39 #x0000000000000000))
(assert (= temp10119_40 temp10119_39))
(assert (= temp10119_41 (select ARGNAME_padding_NAMEEND_VAL temp10119_40)))
(assert (= temp10119_42 #x0000000000000000))
(assert (= temp10119_43 #x0000000000000001))
(assert (= temp10119_44 temp10119_43))
(assert (= temp10119_45 (select ARGNAME_padding_NAMEEND_VAL temp10119_44)))
(assert (= temp10119_46 #x0000000000000000))
(assert (= temp10119_47 #x0000000000000002))
(assert (= temp10119_48 temp10119_47))
(assert (= temp10119_49 (select ARGNAME_padding_NAMEEND_VAL temp10119_48)))
(assert (= temp10119_50 #x0000000000000000))
(assert (= temp10119_51 #x0000000000000003))
(assert (= temp10119_52 temp10119_51))
(assert (= temp10119_53 (select ARGNAME_padding_NAMEEND_VAL temp10119_52)))
(assert (= temp10119_54 #x0000000000000000))
(assert (= temp10119_55 #x0000000000000004))
(assert (= temp10119_56 temp10119_55))
(assert (= temp10119_57 (select ARGNAME_padding_NAMEEND_VAL temp10119_56)))
(assert (= temp10119_58 #x0000000000000000))
(assert (= temp10119_59 #x0000000000000005))
(assert (= temp10119_60 temp10119_59))
(assert (= temp10119_61 (select ARGNAME_padding_NAMEEND_VAL temp10119_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp10119_41 temp10119_38)
             (bvslt temp10119_45 temp10119_42)
             (bvslt temp10119_49 temp10119_46)
             (bvslt temp10119_53 temp10119_50)
             (bvslt temp10119_57 temp10119_54)
             (bvslt temp10119_61 temp10119_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10119_62 #x0000000000000000))
(assert (= var2240290 temp10119_62))
(assert (= temp10119_63 #x0000000000000000))
(assert (= temp10119_64 temp10119_63))
(assert (= temp10119_65 (select ARGNAME_stride_NAMEEND_VAL temp10119_64)))
(assert (= temp10119_66 #x0000000000000001))
(assert (= temp10119_67 temp10119_66))
(assert (= temp10119_68 (select ARGNAME_stride_NAMEEND_VAL temp10119_67)))
(assert (= temp10119_69 #x0000000000000002))
(assert (= temp10119_70 temp10119_69))
(assert (= temp10119_71 (select ARGNAME_stride_NAMEEND_VAL temp10119_70)))
(assert (= temp10119_72 #x0000000000000003))
(assert (= temp10119_73 temp10119_72))
(assert (= temp10119_74 (select ARGNAME_stride_NAMEEND_VAL temp10119_73)))
(assert (= temp10119_75 #x0000000000000004))
(assert (= temp10119_76 temp10119_75))
(assert (= temp10119_77 (select ARGNAME_stride_NAMEEND_VAL temp10119_76)))
(assert (= temp10119_78 #x0000000000000005))
(assert (= temp10119_79 temp10119_78))
(assert (= temp10119_80 (select ARGNAME_stride_NAMEEND_VAL temp10119_79)))
(assert (= temp10119_81 #x0000000000000000))
(assert (= temp10119_82 #x0000000000000000))
(assert (= temp10119_83 temp10119_82))
(assert (= temp10119_84 (select ARGNAME_stride_NAMEEND_VAL temp10119_83)))
(assert (= temp10119_85 #x0000000000000000))
(assert (= temp10119_86 #x0000000000000001))
(assert (= temp10119_87 temp10119_86))
(assert (= temp10119_88 (select ARGNAME_stride_NAMEEND_VAL temp10119_87)))
(assert (= temp10119_89 #x0000000000000000))
(assert (= temp10119_90 #x0000000000000002))
(assert (= temp10119_91 temp10119_90))
(assert (= temp10119_92 (select ARGNAME_stride_NAMEEND_VAL temp10119_91)))
(assert (= temp10119_93 #x0000000000000000))
(assert (= temp10119_94 #x0000000000000003))
(assert (= temp10119_95 temp10119_94))
(assert (= temp10119_96 (select ARGNAME_stride_NAMEEND_VAL temp10119_95)))
(assert (= temp10119_97 #x0000000000000000))
(assert (= temp10119_98 #x0000000000000004))
(assert (= temp10119_99 temp10119_98))
(assert (= temp10119_100 (select ARGNAME_stride_NAMEEND_VAL temp10119_99)))
(assert (= temp10119_101 #x0000000000000000))
(assert (= temp10119_102 #x0000000000000005))
(assert (= temp10119_103 temp10119_102))
(assert (= temp10119_104 (select ARGNAME_stride_NAMEEND_VAL temp10119_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp10119_84 temp10119_81)
             (bvsle temp10119_88 temp10119_85)
             (bvsle temp10119_92 temp10119_89)
             (bvsle temp10119_96 temp10119_93)
             (bvsle temp10119_100 temp10119_97)
             (bvsle temp10119_104 temp10119_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10119_105 #x0000000000000000))
(assert (= var2240311 temp10119_105))
(assert (= temp10119_106 #x0000000000000000))
(assert (= var2228402 temp10119_106))
(assert (= temp10119_107 #x0000000000000000))
(assert (= temp10119_108 temp10119_107))
(assert (= temp10119_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10119_108)))
(assert (= temp10119_110 #x0000000000000001))
(assert (= temp10119_111 temp10119_110))
(assert (= temp10119_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10119_111)))
(assert (= temp10119_113 #x0000000000000002))
(assert (= temp10119_114 temp10119_113))
(assert (= temp10119_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10119_114)))
(assert (= temp10119_116 #x0000000000000003))
(assert (= temp10119_117 temp10119_116))
(assert (= temp10119_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10119_117)))
(assert (= temp10119_119 #x0000000000000004))
(assert (= temp10119_120 temp10119_119))
(assert (= temp10119_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10119_120)))
(assert (= temp10119_122 #x0000000000000005))
(assert (= temp10119_123 temp10119_122))
(assert (= temp10119_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10119_123)))
(assert (= temp10119_126 var2228402))
(assert (= temp10119_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10119_126)))
(assert (= temp10119_125 temp10119_127))
(assert (= var2240356
   (ite (bvslt temp10119_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10119_128 #x0000000000000000))
(assert (= var2240356 temp10119_128))
(assert (= temp10119_129 #x0000000000000000))
(assert (= var2228402 temp10119_129))
(assert (= temp10119_131 var2228402))
(assert (= temp10119_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10119_131)))
(assert (= temp10119_130 temp10119_132))
(assert (= var2240378 (bvsmod temp10119_130 ARGNAME_groups_NAMEEND)))
(assert (= temp10119_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp10119_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp10119_134 #x0000000000000001))
(assert (= var2240379 temp10119_134))
(assert (= var2240398 var2240288))
(assert (= temp10119_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp10119_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp10119_136 #x0000000000000001))
(assert (= var2240399 temp10119_136))
(assert (= temp10119_137 #x0000000000000001))
(assert (= var2229290 temp10119_137))
(assert (= temp10119_139 var2229290))
(assert (= temp10119_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10119_139)))
(assert (= temp10119_138 temp10119_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp10119_138)))
(assert (= temp10119_141 #x0000000000000000))
(assert (= var2228402 temp10119_141))
(assert (= temp10119_143 var2228402))
(assert (= temp10119_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10119_143)))
(assert (= temp10119_142 temp10119_144))
(assert (= temp10119_145 #x0000000000000002))
(assert (= var2503529 temp10119_145))
(assert (= temp10119_146 #x0000000000000001))
(assert (= var2240569 temp10119_146))
(assert (= temp10119_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10119_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10119_148 #x0000000000000001))
(assert (= var1521778 temp10119_148))
(assert (= temp10119_149 #x0000000000000001))
(assert (= var1521908 temp10119_149))
(assert (= var4010473 var1521908))
(assert (= temp10119_150 #x0000000000000002))
(assert (= var4010640 temp10119_150))
(assert (= var4010467 var4010640))
(assert (= var1521917 var4010467))
(assert (= var4275993 var1521917))
(assert (= temp10119_151 #x0000000000000002))
(assert (= temp10119_152 #x0000000000000003))
(assert (or false (= var4275993 temp10119_151) (= var4275993 temp10119_152)))
(assert (= temp10119_153 #x0000000000000002))
(assert (= var4470403 temp10119_153))
(assert (= var4470405 (bvsub ARGNAME_weight_NAMEEND_DIM var4470403)))
(assert (= var4535948 var4470403))
(assert (= var4535949 var4470405))
(assert (= temp10119_154 #x0000000000000002))
(assert (or false (= var1521917 temp10119_154)))
(assert (= var1522108 var1521633))
(assert (= temp10119_155 #x0000000000000000))
(assert (= var1522109
   (ite (distinct var1522108 temp10119_155)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var5848909 var1522109))
(assert (= temp10119_157 #x0000000000000001))
(assert (= temp10119_156 temp10119_157))
(assert (= temp10119_158 #x0000000000000001))
(assert (= var6426090 temp10119_158))
(assert (= temp10119_160 #xffffffffffffffff))
(assert (= temp10119_159 temp10119_160))
(assert (= temp10119_161 #x0000000000000001))
(assert (= var1521778 temp10119_161))
(model-add temp10119_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp10119_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp10119_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp10119_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp10119_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp10119_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






