(declare-fun temp835_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp835_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp835_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp835_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp835_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp835_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp835_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp835_8 () (_ BitVec 64))
(declare-fun temp835_10 () (_ BitVec 64))
(declare-fun temp835_9 () (_ BitVec 64))
(declare-fun temp835_12 () (_ BitVec 64))
(declare-fun temp835_11 () (_ BitVec 64))
(declare-fun temp835_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp835_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp835_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp835_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp835_17 () (_ BitVec 64))
(declare-fun temp835_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp835_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp835_20 () (_ BitVec 64))
(declare-fun temp835_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp835_22 () (_ BitVec 64))
(declare-fun temp835_23 () (_ BitVec 64))
(declare-fun temp835_24 () (_ BitVec 64))
(declare-fun temp835_25 () (_ BitVec 64))
(declare-fun temp835_26 () (_ BitVec 64))
(declare-fun temp835_27 () (_ BitVec 64))
(declare-fun temp835_28 () (_ BitVec 64))
(declare-fun temp835_29 () (_ BitVec 64))
(declare-fun temp835_30 () (_ BitVec 64))
(declare-fun temp835_31 () (_ BitVec 64))
(declare-fun temp835_32 () (_ BitVec 64))
(declare-fun temp835_33 () (_ BitVec 64))
(declare-fun temp835_34 () (_ BitVec 64))
(declare-fun temp835_35 () (_ BitVec 64))
(declare-fun temp835_36 () (_ BitVec 64))
(declare-fun temp835_37 () (_ BitVec 64))
(declare-fun temp835_38 () (_ BitVec 64))
(declare-fun temp835_39 () (_ BitVec 64))
(declare-fun temp835_40 () (_ BitVec 64))
(declare-fun temp835_41 () (_ BitVec 64))
(declare-fun temp835_42 () (_ BitVec 64))
(declare-fun temp835_43 () (_ BitVec 64))
(declare-fun temp835_44 () (_ BitVec 64))
(declare-fun temp835_45 () (_ BitVec 64))
(declare-fun temp835_46 () (_ BitVec 64))
(declare-fun temp835_47 () (_ BitVec 64))
(declare-fun temp835_48 () (_ BitVec 64))
(declare-fun temp835_49 () (_ BitVec 64))
(declare-fun temp835_50 () (_ BitVec 64))
(declare-fun temp835_51 () (_ BitVec 64))
(declare-fun temp835_52 () (_ BitVec 64))
(declare-fun temp835_53 () (_ BitVec 64))
(declare-fun temp835_54 () (_ BitVec 64))
(declare-fun temp835_55 () (_ BitVec 64))
(declare-fun temp835_56 () (_ BitVec 64))
(declare-fun temp835_57 () (_ BitVec 64))
(declare-fun temp835_58 () (_ BitVec 64))
(declare-fun temp835_59 () (_ BitVec 64))
(declare-fun temp835_60 () (_ BitVec 64))
(declare-fun temp835_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp835_62 () (_ BitVec 64))
(declare-fun temp835_63 () (_ BitVec 64))
(declare-fun temp835_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp835_65 () (_ BitVec 64))
(declare-fun temp835_66 () (_ BitVec 64))
(declare-fun temp835_67 () (_ BitVec 64))
(declare-fun temp835_68 () (_ BitVec 64))
(declare-fun temp835_69 () (_ BitVec 64))
(declare-fun temp835_70 () (_ BitVec 64))
(declare-fun temp835_71 () (_ BitVec 64))
(declare-fun temp835_72 () (_ BitVec 64))
(declare-fun temp835_73 () (_ BitVec 64))
(declare-fun temp835_74 () (_ BitVec 64))
(declare-fun temp835_75 () (_ BitVec 64))
(declare-fun temp835_76 () (_ BitVec 64))
(declare-fun temp835_77 () (_ BitVec 64))
(declare-fun temp835_78 () (_ BitVec 64))
(declare-fun temp835_79 () (_ BitVec 64))
(declare-fun temp835_80 () (_ BitVec 64))
(declare-fun temp835_81 () (_ BitVec 64))
(declare-fun temp835_82 () (_ BitVec 64))
(declare-fun temp835_83 () (_ BitVec 64))
(declare-fun temp835_84 () (_ BitVec 64))
(declare-fun temp835_85 () (_ BitVec 64))
(declare-fun temp835_86 () (_ BitVec 64))
(declare-fun temp835_87 () (_ BitVec 64))
(declare-fun temp835_88 () (_ BitVec 64))
(declare-fun temp835_89 () (_ BitVec 64))
(declare-fun temp835_90 () (_ BitVec 64))
(declare-fun temp835_91 () (_ BitVec 64))
(declare-fun temp835_92 () (_ BitVec 64))
(declare-fun temp835_93 () (_ BitVec 64))
(declare-fun temp835_94 () (_ BitVec 64))
(declare-fun temp835_95 () (_ BitVec 64))
(declare-fun temp835_96 () (_ BitVec 64))
(declare-fun temp835_97 () (_ BitVec 64))
(declare-fun temp835_98 () (_ BitVec 64))
(declare-fun temp835_99 () (_ BitVec 64))
(declare-fun temp835_100 () (_ BitVec 64))
(declare-fun temp835_101 () (_ BitVec 64))
(declare-fun temp835_102 () (_ BitVec 64))
(declare-fun temp835_103 () (_ BitVec 64))
(declare-fun temp835_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp835_105 () (_ BitVec 64))
(declare-fun temp835_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp835_107 () (_ BitVec 64))
(declare-fun temp835_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp835_109 () (_ BitVec 64))
(declare-fun temp835_110 () (_ BitVec 64))
(declare-fun temp835_111 () (_ BitVec 64))
(declare-fun temp835_112 () (_ BitVec 64))
(declare-fun temp835_113 () (_ BitVec 64))
(declare-fun temp835_114 () (_ BitVec 64))
(declare-fun temp835_115 () (_ BitVec 64))
(declare-fun temp835_116 () (_ BitVec 64))
(declare-fun temp835_117 () (_ BitVec 64))
(declare-fun temp835_118 () (_ BitVec 64))
(declare-fun temp835_119 () (_ BitVec 64))
(declare-fun temp835_120 () (_ BitVec 64))
(declare-fun temp835_121 () (_ BitVec 64))
(declare-fun temp835_122 () (_ BitVec 64))
(declare-fun temp835_123 () (_ BitVec 64))
(declare-fun temp835_124 () (_ BitVec 64))
(declare-fun temp835_126 () (_ BitVec 64))
(declare-fun temp835_127 () (_ BitVec 64))
(declare-fun temp835_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp835_128 () (_ BitVec 64))
(declare-fun temp835_129 () (_ BitVec 64))
(declare-fun temp835_131 () (_ BitVec 64))
(declare-fun temp835_132 () (_ BitVec 64))
(declare-fun temp835_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp835_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp835_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp835_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp835_136 () (_ BitVec 64))
(declare-fun temp835_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp835_139 () (_ BitVec 64))
(declare-fun temp835_140 () (_ BitVec 64))
(declare-fun temp835_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp835_141 () (_ BitVec 64))
(declare-fun temp835_143 () (_ BitVec 64))
(declare-fun temp835_144 () (_ BitVec 64))
(declare-fun temp835_142 () (_ BitVec 64))
(declare-fun temp835_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp835_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp835_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp835_148 () (_ BitVec 64))
(declare-fun temp835_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp835_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp835_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var5058960 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun temp835_152 () (_ BitVec 64))
(assert (= temp835_1 #x0000000000000002))
(assert (= var989741 temp835_1))
(assert (= temp835_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp835_2)))
(assert (= temp835_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp835_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp835_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp835_4)))
(assert (= temp835_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp835_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp835_6 #x0000000000000000))
(assert (= var989776 temp835_6))
(assert (= temp835_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp835_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp835_8 #x0000000000000001))
(assert (= var989810 temp835_8))
(assert (= temp835_10 #x0000000000000000))
(assert (= temp835_9 temp835_10))
(assert (= temp835_12 #x0000000000000002))
(assert (= temp835_11 temp835_12))
(assert (= temp835_13 #x0000000000000000))
(assert (= var1387902 temp835_13))
(assert (= temp835_14 #x0000000000000001))
(assert (= var1387923 temp835_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp835_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp835_15)))
(assert (= temp835_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp835_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp835_17 #x0000000000000000))
(assert (= var1521661 temp835_17))
(assert (= temp835_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp835_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp835_19 #x0000000000000000))
(assert (= var1521706 temp835_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp835_20 #x0000000000000000))
(assert (= temp835_21 temp835_20))
(assert (= temp835_22 (select ARGNAME_padding_NAMEEND_VAL temp835_21)))
(assert (= temp835_23 #x0000000000000001))
(assert (= temp835_24 temp835_23))
(assert (= temp835_25 (select ARGNAME_padding_NAMEEND_VAL temp835_24)))
(assert (= temp835_26 #x0000000000000002))
(assert (= temp835_27 temp835_26))
(assert (= temp835_28 (select ARGNAME_padding_NAMEEND_VAL temp835_27)))
(assert (= temp835_29 #x0000000000000003))
(assert (= temp835_30 temp835_29))
(assert (= temp835_31 (select ARGNAME_padding_NAMEEND_VAL temp835_30)))
(assert (= temp835_32 #x0000000000000004))
(assert (= temp835_33 temp835_32))
(assert (= temp835_34 (select ARGNAME_padding_NAMEEND_VAL temp835_33)))
(assert (= temp835_35 #x0000000000000005))
(assert (= temp835_36 temp835_35))
(assert (= temp835_37 (select ARGNAME_padding_NAMEEND_VAL temp835_36)))
(assert (= temp835_38 #x0000000000000000))
(assert (= temp835_39 #x0000000000000000))
(assert (= temp835_40 temp835_39))
(assert (= temp835_41 (select ARGNAME_padding_NAMEEND_VAL temp835_40)))
(assert (= temp835_42 #x0000000000000000))
(assert (= temp835_43 #x0000000000000001))
(assert (= temp835_44 temp835_43))
(assert (= temp835_45 (select ARGNAME_padding_NAMEEND_VAL temp835_44)))
(assert (= temp835_46 #x0000000000000000))
(assert (= temp835_47 #x0000000000000002))
(assert (= temp835_48 temp835_47))
(assert (= temp835_49 (select ARGNAME_padding_NAMEEND_VAL temp835_48)))
(assert (= temp835_50 #x0000000000000000))
(assert (= temp835_51 #x0000000000000003))
(assert (= temp835_52 temp835_51))
(assert (= temp835_53 (select ARGNAME_padding_NAMEEND_VAL temp835_52)))
(assert (= temp835_54 #x0000000000000000))
(assert (= temp835_55 #x0000000000000004))
(assert (= temp835_56 temp835_55))
(assert (= temp835_57 (select ARGNAME_padding_NAMEEND_VAL temp835_56)))
(assert (= temp835_58 #x0000000000000000))
(assert (= temp835_59 #x0000000000000005))
(assert (= temp835_60 temp835_59))
(assert (= temp835_61 (select ARGNAME_padding_NAMEEND_VAL temp835_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp835_41 temp835_38)
             (bvslt temp835_45 temp835_42)
             (bvslt temp835_49 temp835_46)
             (bvslt temp835_53 temp835_50)
             (bvslt temp835_57 temp835_54)
             (bvslt temp835_61 temp835_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp835_62 #x0000000000000000))
(assert (= var2240290 temp835_62))
(assert (= temp835_63 #x0000000000000000))
(assert (= temp835_64 temp835_63))
(assert (= temp835_65 (select ARGNAME_stride_NAMEEND_VAL temp835_64)))
(assert (= temp835_66 #x0000000000000001))
(assert (= temp835_67 temp835_66))
(assert (= temp835_68 (select ARGNAME_stride_NAMEEND_VAL temp835_67)))
(assert (= temp835_69 #x0000000000000002))
(assert (= temp835_70 temp835_69))
(assert (= temp835_71 (select ARGNAME_stride_NAMEEND_VAL temp835_70)))
(assert (= temp835_72 #x0000000000000003))
(assert (= temp835_73 temp835_72))
(assert (= temp835_74 (select ARGNAME_stride_NAMEEND_VAL temp835_73)))
(assert (= temp835_75 #x0000000000000004))
(assert (= temp835_76 temp835_75))
(assert (= temp835_77 (select ARGNAME_stride_NAMEEND_VAL temp835_76)))
(assert (= temp835_78 #x0000000000000005))
(assert (= temp835_79 temp835_78))
(assert (= temp835_80 (select ARGNAME_stride_NAMEEND_VAL temp835_79)))
(assert (= temp835_81 #x0000000000000000))
(assert (= temp835_82 #x0000000000000000))
(assert (= temp835_83 temp835_82))
(assert (= temp835_84 (select ARGNAME_stride_NAMEEND_VAL temp835_83)))
(assert (= temp835_85 #x0000000000000000))
(assert (= temp835_86 #x0000000000000001))
(assert (= temp835_87 temp835_86))
(assert (= temp835_88 (select ARGNAME_stride_NAMEEND_VAL temp835_87)))
(assert (= temp835_89 #x0000000000000000))
(assert (= temp835_90 #x0000000000000002))
(assert (= temp835_91 temp835_90))
(assert (= temp835_92 (select ARGNAME_stride_NAMEEND_VAL temp835_91)))
(assert (= temp835_93 #x0000000000000000))
(assert (= temp835_94 #x0000000000000003))
(assert (= temp835_95 temp835_94))
(assert (= temp835_96 (select ARGNAME_stride_NAMEEND_VAL temp835_95)))
(assert (= temp835_97 #x0000000000000000))
(assert (= temp835_98 #x0000000000000004))
(assert (= temp835_99 temp835_98))
(assert (= temp835_100 (select ARGNAME_stride_NAMEEND_VAL temp835_99)))
(assert (= temp835_101 #x0000000000000000))
(assert (= temp835_102 #x0000000000000005))
(assert (= temp835_103 temp835_102))
(assert (= temp835_104 (select ARGNAME_stride_NAMEEND_VAL temp835_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp835_84 temp835_81)
             (bvsle temp835_88 temp835_85)
             (bvsle temp835_92 temp835_89)
             (bvsle temp835_96 temp835_93)
             (bvsle temp835_100 temp835_97)
             (bvsle temp835_104 temp835_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp835_105 #x0000000000000000))
(assert (= var2240311 temp835_105))
(assert (= temp835_106 #x0000000000000000))
(assert (= var2228402 temp835_106))
(assert (= temp835_107 #x0000000000000000))
(assert (= temp835_108 temp835_107))
(assert (= temp835_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp835_108)))
(assert (= temp835_110 #x0000000000000001))
(assert (= temp835_111 temp835_110))
(assert (= temp835_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp835_111)))
(assert (= temp835_113 #x0000000000000002))
(assert (= temp835_114 temp835_113))
(assert (= temp835_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp835_114)))
(assert (= temp835_116 #x0000000000000003))
(assert (= temp835_117 temp835_116))
(assert (= temp835_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp835_117)))
(assert (= temp835_119 #x0000000000000004))
(assert (= temp835_120 temp835_119))
(assert (= temp835_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp835_120)))
(assert (= temp835_122 #x0000000000000005))
(assert (= temp835_123 temp835_122))
(assert (= temp835_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp835_123)))
(assert (= temp835_126 var2228402))
(assert (= temp835_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp835_126)))
(assert (= temp835_125 temp835_127))
(assert (= var2240356
   (ite (bvslt temp835_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp835_128 #x0000000000000000))
(assert (= var2240356 temp835_128))
(assert (= temp835_129 #x0000000000000000))
(assert (= var2228402 temp835_129))
(assert (= temp835_131 var2228402))
(assert (= temp835_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp835_131)))
(assert (= temp835_130 temp835_132))
(assert (= var2240378 (bvsmod temp835_130 ARGNAME_groups_NAMEEND)))
(assert (= temp835_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp835_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp835_134 #x0000000000000001))
(assert (= var2240379 temp835_134))
(assert (= var2240398 var2240288))
(assert (= temp835_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp835_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp835_136 #x0000000000000001))
(assert (= var2240399 temp835_136))
(assert (= temp835_137 #x0000000000000001))
(assert (= var2229290 temp835_137))
(assert (= temp835_139 var2229290))
(assert (= temp835_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp835_139)))
(assert (= temp835_138 temp835_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp835_138)))
(assert (= temp835_141 #x0000000000000000))
(assert (= var2228402 temp835_141))
(assert (= temp835_143 var2228402))
(assert (= temp835_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp835_143)))
(assert (= temp835_142 temp835_144))
(assert (= temp835_145 #x0000000000000002))
(assert (= var2503529 temp835_145))
(assert (= temp835_146 #x0000000000000001))
(assert (= var2240569 temp835_146))
(assert (= temp835_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp835_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp835_148 #x0000000000000001))
(assert (= var1521778 temp835_148))
(assert (= temp835_149 #x0000000000000001))
(assert (= var1521908 temp835_149))
(assert (= var4010473 var1521908))
(assert (= temp835_150 #x0000000000000000))
(assert (= var4210495 temp835_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp835_151 #x0000000000000002))
(assert (= var4339331 temp835_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var5058960 var1521921))
(assert (= var5321104 var1521921))
(assert (= temp835_152 #x0000000000000001))
(assert (= var1521778 temp835_152))
(model-add temp835_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp835_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp835_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp835_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp835_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp835_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)





