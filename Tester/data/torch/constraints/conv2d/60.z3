(declare-fun temp78_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp78_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp78_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp78_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp78_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp78_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp78_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp78_8 () (_ BitVec 64))
(declare-fun temp78_10 () (_ BitVec 64))
(declare-fun temp78_9 () (_ BitVec 64))
(declare-fun temp78_12 () (_ BitVec 64))
(declare-fun temp78_11 () (_ BitVec 64))
(declare-fun temp78_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp78_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp78_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp78_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp78_17 () (_ BitVec 64))
(declare-fun temp78_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp78_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp78_20 () (_ BitVec 64))
(declare-fun temp78_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp78_22 () (_ BitVec 64))
(declare-fun temp78_23 () (_ BitVec 64))
(declare-fun temp78_24 () (_ BitVec 64))
(declare-fun temp78_25 () (_ BitVec 64))
(declare-fun temp78_26 () (_ BitVec 64))
(declare-fun temp78_27 () (_ BitVec 64))
(declare-fun temp78_28 () (_ BitVec 64))
(declare-fun temp78_29 () (_ BitVec 64))
(declare-fun temp78_30 () (_ BitVec 64))
(declare-fun temp78_31 () (_ BitVec 64))
(declare-fun temp78_32 () (_ BitVec 64))
(declare-fun temp78_33 () (_ BitVec 64))
(declare-fun temp78_34 () (_ BitVec 64))
(declare-fun temp78_35 () (_ BitVec 64))
(declare-fun temp78_36 () (_ BitVec 64))
(declare-fun temp78_37 () (_ BitVec 64))
(declare-fun temp78_38 () (_ BitVec 64))
(declare-fun temp78_39 () (_ BitVec 64))
(declare-fun temp78_40 () (_ BitVec 64))
(declare-fun temp78_41 () (_ BitVec 64))
(declare-fun temp78_42 () (_ BitVec 64))
(declare-fun temp78_43 () (_ BitVec 64))
(declare-fun temp78_44 () (_ BitVec 64))
(declare-fun temp78_45 () (_ BitVec 64))
(declare-fun temp78_46 () (_ BitVec 64))
(declare-fun temp78_47 () (_ BitVec 64))
(declare-fun temp78_48 () (_ BitVec 64))
(declare-fun temp78_49 () (_ BitVec 64))
(declare-fun temp78_50 () (_ BitVec 64))
(declare-fun temp78_51 () (_ BitVec 64))
(declare-fun temp78_52 () (_ BitVec 64))
(declare-fun temp78_53 () (_ BitVec 64))
(declare-fun temp78_54 () (_ BitVec 64))
(declare-fun temp78_55 () (_ BitVec 64))
(declare-fun temp78_56 () (_ BitVec 64))
(declare-fun temp78_57 () (_ BitVec 64))
(declare-fun temp78_58 () (_ BitVec 64))
(declare-fun temp78_59 () (_ BitVec 64))
(declare-fun temp78_60 () (_ BitVec 64))
(declare-fun temp78_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp78_62 () (_ BitVec 64))
(declare-fun temp78_63 () (_ BitVec 64))
(declare-fun temp78_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp78_65 () (_ BitVec 64))
(declare-fun temp78_66 () (_ BitVec 64))
(declare-fun temp78_67 () (_ BitVec 64))
(declare-fun temp78_68 () (_ BitVec 64))
(declare-fun temp78_69 () (_ BitVec 64))
(declare-fun temp78_70 () (_ BitVec 64))
(declare-fun temp78_71 () (_ BitVec 64))
(declare-fun temp78_72 () (_ BitVec 64))
(declare-fun temp78_73 () (_ BitVec 64))
(declare-fun temp78_74 () (_ BitVec 64))
(declare-fun temp78_75 () (_ BitVec 64))
(declare-fun temp78_76 () (_ BitVec 64))
(declare-fun temp78_77 () (_ BitVec 64))
(declare-fun temp78_78 () (_ BitVec 64))
(declare-fun temp78_79 () (_ BitVec 64))
(declare-fun temp78_80 () (_ BitVec 64))
(declare-fun temp78_81 () (_ BitVec 64))
(declare-fun temp78_82 () (_ BitVec 64))
(declare-fun temp78_83 () (_ BitVec 64))
(declare-fun temp78_84 () (_ BitVec 64))
(declare-fun temp78_85 () (_ BitVec 64))
(declare-fun temp78_86 () (_ BitVec 64))
(declare-fun temp78_87 () (_ BitVec 64))
(declare-fun temp78_88 () (_ BitVec 64))
(declare-fun temp78_89 () (_ BitVec 64))
(declare-fun temp78_90 () (_ BitVec 64))
(declare-fun temp78_91 () (_ BitVec 64))
(declare-fun temp78_92 () (_ BitVec 64))
(declare-fun temp78_93 () (_ BitVec 64))
(declare-fun temp78_94 () (_ BitVec 64))
(declare-fun temp78_95 () (_ BitVec 64))
(declare-fun temp78_96 () (_ BitVec 64))
(declare-fun temp78_97 () (_ BitVec 64))
(declare-fun temp78_98 () (_ BitVec 64))
(declare-fun temp78_99 () (_ BitVec 64))
(declare-fun temp78_100 () (_ BitVec 64))
(declare-fun temp78_101 () (_ BitVec 64))
(declare-fun temp78_102 () (_ BitVec 64))
(declare-fun temp78_103 () (_ BitVec 64))
(declare-fun temp78_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp78_105 () (_ BitVec 64))
(declare-fun temp78_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp78_107 () (_ BitVec 64))
(declare-fun temp78_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp78_109 () (_ BitVec 64))
(declare-fun temp78_110 () (_ BitVec 64))
(declare-fun temp78_111 () (_ BitVec 64))
(declare-fun temp78_112 () (_ BitVec 64))
(declare-fun temp78_113 () (_ BitVec 64))
(declare-fun temp78_114 () (_ BitVec 64))
(declare-fun temp78_115 () (_ BitVec 64))
(declare-fun temp78_116 () (_ BitVec 64))
(declare-fun temp78_117 () (_ BitVec 64))
(declare-fun temp78_118 () (_ BitVec 64))
(declare-fun temp78_119 () (_ BitVec 64))
(declare-fun temp78_120 () (_ BitVec 64))
(declare-fun temp78_121 () (_ BitVec 64))
(declare-fun temp78_122 () (_ BitVec 64))
(declare-fun temp78_123 () (_ BitVec 64))
(declare-fun temp78_124 () (_ BitVec 64))
(declare-fun temp78_126 () (_ BitVec 64))
(declare-fun temp78_127 () (_ BitVec 64))
(declare-fun temp78_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp78_128 () (_ BitVec 64))
(declare-fun temp78_129 () (_ BitVec 64))
(declare-fun temp78_131 () (_ BitVec 64))
(declare-fun temp78_132 () (_ BitVec 64))
(declare-fun temp78_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp78_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp78_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp78_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp78_136 () (_ BitVec 64))
(declare-fun temp78_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp78_139 () (_ BitVec 64))
(declare-fun temp78_140 () (_ BitVec 64))
(declare-fun temp78_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp78_141 () (_ BitVec 64))
(declare-fun temp78_143 () (_ BitVec 64))
(declare-fun temp78_144 () (_ BitVec 64))
(declare-fun temp78_142 () (_ BitVec 64))
(declare-fun temp78_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp78_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp78_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp78_148 () (_ BitVec 64))
(declare-fun temp78_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp78_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp78_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var1522214 () (_ BitVec 64))
(declare-fun temp78_152 () (_ BitVec 64))
(declare-fun var1522215 () (_ BitVec 64))
(declare-fun temp78_153 () (_ BitVec 64))
(assert (= temp78_1 #x0000000000000002))
(assert (= var989741 temp78_1))
(assert (= temp78_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp78_2)))
(assert (= temp78_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp78_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp78_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp78_4)))
(assert (= temp78_5 #x0000000000000000))
(assert (= var989775 (ite (= var989774 temp78_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp78_6 #x0000000000000000))
(assert (= var989776 temp78_6))
(assert (= temp78_7 #x0000000000000000))
(assert (= var989810 (ite (= var989773 temp78_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp78_8 #x0000000000000001))
(assert (= var989810 temp78_8))
(assert (= temp78_10 #x0000000000000000))
(assert (= temp78_9 temp78_10))
(assert (= temp78_12 #x0000000000000002))
(assert (= temp78_11 temp78_12))
(assert (= temp78_13 #x0000000000000000))
(assert (= var1387902 temp78_13))
(assert (= temp78_14 #x0000000000000001))
(assert (= var1387923 temp78_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp78_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp78_15)))
(assert (= temp78_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp78_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp78_17 #x0000000000000000))
(assert (= var1521661 temp78_17))
(assert (= temp78_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp78_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp78_19 #x0000000000000000))
(assert (= var1521706 temp78_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp78_20 #x0000000000000000))
(assert (= temp78_21 temp78_20))
(assert (= temp78_22 (select ARGNAME_padding_NAMEEND_VAL temp78_21)))
(assert (= temp78_23 #x0000000000000001))
(assert (= temp78_24 temp78_23))
(assert (= temp78_25 (select ARGNAME_padding_NAMEEND_VAL temp78_24)))
(assert (= temp78_26 #x0000000000000002))
(assert (= temp78_27 temp78_26))
(assert (= temp78_28 (select ARGNAME_padding_NAMEEND_VAL temp78_27)))
(assert (= temp78_29 #x0000000000000003))
(assert (= temp78_30 temp78_29))
(assert (= temp78_31 (select ARGNAME_padding_NAMEEND_VAL temp78_30)))
(assert (= temp78_32 #x0000000000000004))
(assert (= temp78_33 temp78_32))
(assert (= temp78_34 (select ARGNAME_padding_NAMEEND_VAL temp78_33)))
(assert (= temp78_35 #x0000000000000005))
(assert (= temp78_36 temp78_35))
(assert (= temp78_37 (select ARGNAME_padding_NAMEEND_VAL temp78_36)))
(assert (= temp78_38 #x0000000000000000))
(assert (= temp78_39 #x0000000000000000))
(assert (= temp78_40 temp78_39))
(assert (= temp78_41 (select ARGNAME_padding_NAMEEND_VAL temp78_40)))
(assert (= temp78_42 #x0000000000000000))
(assert (= temp78_43 #x0000000000000001))
(assert (= temp78_44 temp78_43))
(assert (= temp78_45 (select ARGNAME_padding_NAMEEND_VAL temp78_44)))
(assert (= temp78_46 #x0000000000000000))
(assert (= temp78_47 #x0000000000000002))
(assert (= temp78_48 temp78_47))
(assert (= temp78_49 (select ARGNAME_padding_NAMEEND_VAL temp78_48)))
(assert (= temp78_50 #x0000000000000000))
(assert (= temp78_51 #x0000000000000003))
(assert (= temp78_52 temp78_51))
(assert (= temp78_53 (select ARGNAME_padding_NAMEEND_VAL temp78_52)))
(assert (= temp78_54 #x0000000000000000))
(assert (= temp78_55 #x0000000000000004))
(assert (= temp78_56 temp78_55))
(assert (= temp78_57 (select ARGNAME_padding_NAMEEND_VAL temp78_56)))
(assert (= temp78_58 #x0000000000000000))
(assert (= temp78_59 #x0000000000000005))
(assert (= temp78_60 temp78_59))
(assert (= temp78_61 (select ARGNAME_padding_NAMEEND_VAL temp78_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp78_41 temp78_38)
             (bvslt temp78_45 temp78_42)
             (bvslt temp78_49 temp78_46)
             (bvslt temp78_53 temp78_50)
             (bvslt temp78_57 temp78_54)
             (bvslt temp78_61 temp78_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp78_62 #x0000000000000000))
(assert (= var2240290 temp78_62))
(assert (= temp78_63 #x0000000000000000))
(assert (= temp78_64 temp78_63))
(assert (= temp78_65 (select ARGNAME_stride_NAMEEND_VAL temp78_64)))
(assert (= temp78_66 #x0000000000000001))
(assert (= temp78_67 temp78_66))
(assert (= temp78_68 (select ARGNAME_stride_NAMEEND_VAL temp78_67)))
(assert (= temp78_69 #x0000000000000002))
(assert (= temp78_70 temp78_69))
(assert (= temp78_71 (select ARGNAME_stride_NAMEEND_VAL temp78_70)))
(assert (= temp78_72 #x0000000000000003))
(assert (= temp78_73 temp78_72))
(assert (= temp78_74 (select ARGNAME_stride_NAMEEND_VAL temp78_73)))
(assert (= temp78_75 #x0000000000000004))
(assert (= temp78_76 temp78_75))
(assert (= temp78_77 (select ARGNAME_stride_NAMEEND_VAL temp78_76)))
(assert (= temp78_78 #x0000000000000005))
(assert (= temp78_79 temp78_78))
(assert (= temp78_80 (select ARGNAME_stride_NAMEEND_VAL temp78_79)))
(assert (= temp78_81 #x0000000000000000))
(assert (= temp78_82 #x0000000000000000))
(assert (= temp78_83 temp78_82))
(assert (= temp78_84 (select ARGNAME_stride_NAMEEND_VAL temp78_83)))
(assert (= temp78_85 #x0000000000000000))
(assert (= temp78_86 #x0000000000000001))
(assert (= temp78_87 temp78_86))
(assert (= temp78_88 (select ARGNAME_stride_NAMEEND_VAL temp78_87)))
(assert (= temp78_89 #x0000000000000000))
(assert (= temp78_90 #x0000000000000002))
(assert (= temp78_91 temp78_90))
(assert (= temp78_92 (select ARGNAME_stride_NAMEEND_VAL temp78_91)))
(assert (= temp78_93 #x0000000000000000))
(assert (= temp78_94 #x0000000000000003))
(assert (= temp78_95 temp78_94))
(assert (= temp78_96 (select ARGNAME_stride_NAMEEND_VAL temp78_95)))
(assert (= temp78_97 #x0000000000000000))
(assert (= temp78_98 #x0000000000000004))
(assert (= temp78_99 temp78_98))
(assert (= temp78_100 (select ARGNAME_stride_NAMEEND_VAL temp78_99)))
(assert (= temp78_101 #x0000000000000000))
(assert (= temp78_102 #x0000000000000005))
(assert (= temp78_103 temp78_102))
(assert (= temp78_104 (select ARGNAME_stride_NAMEEND_VAL temp78_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp78_84 temp78_81)
             (bvsle temp78_88 temp78_85)
             (bvsle temp78_92 temp78_89)
             (bvsle temp78_96 temp78_93)
             (bvsle temp78_100 temp78_97)
             (bvsle temp78_104 temp78_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp78_105 #x0000000000000000))
(assert (= var2240311 temp78_105))
(assert (= temp78_106 #x0000000000000000))
(assert (= var2228402 temp78_106))
(assert (= temp78_107 #x0000000000000000))
(assert (= temp78_108 temp78_107))
(assert (= temp78_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_108)))
(assert (= temp78_110 #x0000000000000001))
(assert (= temp78_111 temp78_110))
(assert (= temp78_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_111)))
(assert (= temp78_113 #x0000000000000002))
(assert (= temp78_114 temp78_113))
(assert (= temp78_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_114)))
(assert (= temp78_116 #x0000000000000003))
(assert (= temp78_117 temp78_116))
(assert (= temp78_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_117)))
(assert (= temp78_119 #x0000000000000004))
(assert (= temp78_120 temp78_119))
(assert (= temp78_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_120)))
(assert (= temp78_122 #x0000000000000005))
(assert (= temp78_123 temp78_122))
(assert (= temp78_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_123)))
(assert (= temp78_126 var2228402))
(assert (= temp78_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_126)))
(assert (= temp78_125 temp78_127))
(assert (= var2240356
   (ite (bvslt temp78_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp78_128 #x0000000000000000))
(assert (= var2240356 temp78_128))
(assert (= temp78_129 #x0000000000000000))
(assert (= var2228402 temp78_129))
(assert (= temp78_131 var2228402))
(assert (= temp78_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_131)))
(assert (= temp78_130 temp78_132))
(assert (= var2240378 (bvsmod temp78_130 ARGNAME_groups_NAMEEND)))
(assert (= temp78_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp78_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp78_134 #x0000000000000001))
(assert (= var2240379 temp78_134))
(assert (= var2240398 var2240288))
(assert (= temp78_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp78_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp78_136 #x0000000000000001))
(assert (= var2240399 temp78_136))
(assert (= temp78_137 #x0000000000000001))
(assert (= var2229290 temp78_137))
(assert (= temp78_139 var2229290))
(assert (= temp78_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_139)))
(assert (= temp78_138 temp78_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp78_138)))
(assert (= temp78_141 #x0000000000000000))
(assert (= var2228402 temp78_141))
(assert (= temp78_143 var2228402))
(assert (= temp78_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_143)))
(assert (= temp78_142 temp78_144))
(assert (= temp78_145 #x0000000000000002))
(assert (= var2503529 temp78_145))
(assert (= temp78_146 #x0000000000000001))
(assert (= var2240569 temp78_146))
(assert (= temp78_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp78_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp78_148 #x0000000000000001))
(assert (= var1521778 temp78_148))
(assert (= temp78_149 #x0000000000000001))
(assert (= var1521908 temp78_149))
(assert (= var4010473 var1521908))
(assert (= temp78_150 #x0000000000000000))
(assert (= var4210495 temp78_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp78_151 #x0000000000000002))
(assert (= var4339331 temp78_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4796816 var1521921))
(assert (= var1522214 var1521633))
(assert (= temp78_152 #x0000000000000000))
(assert (= var1522215
   (ite (distinct var1522214 temp78_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp78_153 #x0000000000000001))
(assert (= var1521778 temp78_153))
(model-add temp78_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp78_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp78_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp78_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp78_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp78_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






