(declare-fun temp1005_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp1005_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp1005_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp1005_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp1005_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp1005_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp1005_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp1005_8 () (_ BitVec 64))
(declare-fun temp1005_10 () (_ BitVec 64))
(declare-fun temp1005_9 () (_ BitVec 64))
(declare-fun temp1005_12 () (_ BitVec 64))
(declare-fun temp1005_11 () (_ BitVec 64))
(declare-fun temp1005_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp1005_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp1005_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp1005_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp1005_17 () (_ BitVec 64))
(declare-fun temp1005_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp1005_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp1005_20 () (_ BitVec 64))
(declare-fun temp1005_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1005_22 () (_ BitVec 64))
(declare-fun temp1005_23 () (_ BitVec 64))
(declare-fun temp1005_24 () (_ BitVec 64))
(declare-fun temp1005_25 () (_ BitVec 64))
(declare-fun temp1005_26 () (_ BitVec 64))
(declare-fun temp1005_27 () (_ BitVec 64))
(declare-fun temp1005_28 () (_ BitVec 64))
(declare-fun temp1005_29 () (_ BitVec 64))
(declare-fun temp1005_30 () (_ BitVec 64))
(declare-fun temp1005_31 () (_ BitVec 64))
(declare-fun temp1005_32 () (_ BitVec 64))
(declare-fun temp1005_33 () (_ BitVec 64))
(declare-fun temp1005_34 () (_ BitVec 64))
(declare-fun temp1005_35 () (_ BitVec 64))
(declare-fun temp1005_36 () (_ BitVec 64))
(declare-fun temp1005_37 () (_ BitVec 64))
(declare-fun temp1005_38 () (_ BitVec 64))
(declare-fun temp1005_39 () (_ BitVec 64))
(declare-fun temp1005_40 () (_ BitVec 64))
(declare-fun temp1005_41 () (_ BitVec 64))
(declare-fun temp1005_42 () (_ BitVec 64))
(declare-fun temp1005_43 () (_ BitVec 64))
(declare-fun temp1005_44 () (_ BitVec 64))
(declare-fun temp1005_45 () (_ BitVec 64))
(declare-fun temp1005_46 () (_ BitVec 64))
(declare-fun temp1005_47 () (_ BitVec 64))
(declare-fun temp1005_48 () (_ BitVec 64))
(declare-fun temp1005_49 () (_ BitVec 64))
(declare-fun temp1005_50 () (_ BitVec 64))
(declare-fun temp1005_51 () (_ BitVec 64))
(declare-fun temp1005_52 () (_ BitVec 64))
(declare-fun temp1005_53 () (_ BitVec 64))
(declare-fun temp1005_54 () (_ BitVec 64))
(declare-fun temp1005_55 () (_ BitVec 64))
(declare-fun temp1005_56 () (_ BitVec 64))
(declare-fun temp1005_57 () (_ BitVec 64))
(declare-fun temp1005_58 () (_ BitVec 64))
(declare-fun temp1005_59 () (_ BitVec 64))
(declare-fun temp1005_60 () (_ BitVec 64))
(declare-fun temp1005_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp1005_62 () (_ BitVec 64))
(declare-fun temp1005_63 () (_ BitVec 64))
(declare-fun temp1005_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1005_65 () (_ BitVec 64))
(declare-fun temp1005_66 () (_ BitVec 64))
(declare-fun temp1005_67 () (_ BitVec 64))
(declare-fun temp1005_68 () (_ BitVec 64))
(declare-fun temp1005_69 () (_ BitVec 64))
(declare-fun temp1005_70 () (_ BitVec 64))
(declare-fun temp1005_71 () (_ BitVec 64))
(declare-fun temp1005_72 () (_ BitVec 64))
(declare-fun temp1005_73 () (_ BitVec 64))
(declare-fun temp1005_74 () (_ BitVec 64))
(declare-fun temp1005_75 () (_ BitVec 64))
(declare-fun temp1005_76 () (_ BitVec 64))
(declare-fun temp1005_77 () (_ BitVec 64))
(declare-fun temp1005_78 () (_ BitVec 64))
(declare-fun temp1005_79 () (_ BitVec 64))
(declare-fun temp1005_80 () (_ BitVec 64))
(declare-fun temp1005_81 () (_ BitVec 64))
(declare-fun temp1005_82 () (_ BitVec 64))
(declare-fun temp1005_83 () (_ BitVec 64))
(declare-fun temp1005_84 () (_ BitVec 64))
(declare-fun temp1005_85 () (_ BitVec 64))
(declare-fun temp1005_86 () (_ BitVec 64))
(declare-fun temp1005_87 () (_ BitVec 64))
(declare-fun temp1005_88 () (_ BitVec 64))
(declare-fun temp1005_89 () (_ BitVec 64))
(declare-fun temp1005_90 () (_ BitVec 64))
(declare-fun temp1005_91 () (_ BitVec 64))
(declare-fun temp1005_92 () (_ BitVec 64))
(declare-fun temp1005_93 () (_ BitVec 64))
(declare-fun temp1005_94 () (_ BitVec 64))
(declare-fun temp1005_95 () (_ BitVec 64))
(declare-fun temp1005_96 () (_ BitVec 64))
(declare-fun temp1005_97 () (_ BitVec 64))
(declare-fun temp1005_98 () (_ BitVec 64))
(declare-fun temp1005_99 () (_ BitVec 64))
(declare-fun temp1005_100 () (_ BitVec 64))
(declare-fun temp1005_101 () (_ BitVec 64))
(declare-fun temp1005_102 () (_ BitVec 64))
(declare-fun temp1005_103 () (_ BitVec 64))
(declare-fun temp1005_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp1005_105 () (_ BitVec 64))
(declare-fun temp1005_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp1005_107 () (_ BitVec 64))
(declare-fun temp1005_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1005_109 () (_ BitVec 64))
(declare-fun temp1005_110 () (_ BitVec 64))
(declare-fun temp1005_111 () (_ BitVec 64))
(declare-fun temp1005_112 () (_ BitVec 64))
(declare-fun temp1005_113 () (_ BitVec 64))
(declare-fun temp1005_114 () (_ BitVec 64))
(declare-fun temp1005_115 () (_ BitVec 64))
(declare-fun temp1005_116 () (_ BitVec 64))
(declare-fun temp1005_117 () (_ BitVec 64))
(declare-fun temp1005_118 () (_ BitVec 64))
(declare-fun temp1005_119 () (_ BitVec 64))
(declare-fun temp1005_120 () (_ BitVec 64))
(declare-fun temp1005_121 () (_ BitVec 64))
(declare-fun temp1005_122 () (_ BitVec 64))
(declare-fun temp1005_123 () (_ BitVec 64))
(declare-fun temp1005_124 () (_ BitVec 64))
(declare-fun temp1005_126 () (_ BitVec 64))
(declare-fun temp1005_127 () (_ BitVec 64))
(declare-fun temp1005_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp1005_128 () (_ BitVec 64))
(declare-fun temp1005_129 () (_ BitVec 64))
(declare-fun temp1005_131 () (_ BitVec 64))
(declare-fun temp1005_132 () (_ BitVec 64))
(declare-fun temp1005_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp1005_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp1005_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp1005_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp1005_136 () (_ BitVec 64))
(declare-fun temp1005_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp1005_139 () (_ BitVec 64))
(declare-fun temp1005_140 () (_ BitVec 64))
(declare-fun temp1005_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp1005_141 () (_ BitVec 64))
(declare-fun temp1005_143 () (_ BitVec 64))
(declare-fun temp1005_144 () (_ BitVec 64))
(declare-fun temp1005_142 () (_ BitVec 64))
(declare-fun temp1005_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp1005_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp1005_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp1005_148 () (_ BitVec 64))
(declare-fun temp1005_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp1005_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp1005_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp1005_152 () (_ BitVec 64))
(assert (= temp1005_1 #x0000000000000002))
(assert (= var989741 temp1005_1))
(assert (= temp1005_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp1005_2)))
(assert (= temp1005_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp1005_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp1005_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp1005_4)))
(assert (= temp1005_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp1005_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp1005_6 #x0000000000000000))
(assert (= var989776 temp1005_6))
(assert (= temp1005_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp1005_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1005_8 #x0000000000000001))
(assert (= var989810 temp1005_8))
(assert (= temp1005_10 #x0000000000000000))
(assert (= temp1005_9 temp1005_10))
(assert (= temp1005_12 #x0000000000000002))
(assert (= temp1005_11 temp1005_12))
(assert (= temp1005_13 #x0000000000000000))
(assert (= var1387902 temp1005_13))
(assert (= temp1005_14 #x0000000000000001))
(assert (= var1387923 temp1005_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp1005_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp1005_15)))
(assert (= temp1005_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1005_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1005_17 #x0000000000000000))
(assert (= var1521661 temp1005_17))
(assert (= temp1005_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp1005_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1005_19 #x0000000000000000))
(assert (= var1521706 temp1005_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp1005_20 #x0000000000000000))
(assert (= temp1005_21 temp1005_20))
(assert (= temp1005_22 (select ARGNAME_padding_NAMEEND_VAL temp1005_21)))
(assert (= temp1005_23 #x0000000000000001))
(assert (= temp1005_24 temp1005_23))
(assert (= temp1005_25 (select ARGNAME_padding_NAMEEND_VAL temp1005_24)))
(assert (= temp1005_26 #x0000000000000002))
(assert (= temp1005_27 temp1005_26))
(assert (= temp1005_28 (select ARGNAME_padding_NAMEEND_VAL temp1005_27)))
(assert (= temp1005_29 #x0000000000000003))
(assert (= temp1005_30 temp1005_29))
(assert (= temp1005_31 (select ARGNAME_padding_NAMEEND_VAL temp1005_30)))
(assert (= temp1005_32 #x0000000000000004))
(assert (= temp1005_33 temp1005_32))
(assert (= temp1005_34 (select ARGNAME_padding_NAMEEND_VAL temp1005_33)))
(assert (= temp1005_35 #x0000000000000005))
(assert (= temp1005_36 temp1005_35))
(assert (= temp1005_37 (select ARGNAME_padding_NAMEEND_VAL temp1005_36)))
(assert (= temp1005_38 #x0000000000000000))
(assert (= temp1005_39 #x0000000000000000))
(assert (= temp1005_40 temp1005_39))
(assert (= temp1005_41 (select ARGNAME_padding_NAMEEND_VAL temp1005_40)))
(assert (= temp1005_42 #x0000000000000000))
(assert (= temp1005_43 #x0000000000000001))
(assert (= temp1005_44 temp1005_43))
(assert (= temp1005_45 (select ARGNAME_padding_NAMEEND_VAL temp1005_44)))
(assert (= temp1005_46 #x0000000000000000))
(assert (= temp1005_47 #x0000000000000002))
(assert (= temp1005_48 temp1005_47))
(assert (= temp1005_49 (select ARGNAME_padding_NAMEEND_VAL temp1005_48)))
(assert (= temp1005_50 #x0000000000000000))
(assert (= temp1005_51 #x0000000000000003))
(assert (= temp1005_52 temp1005_51))
(assert (= temp1005_53 (select ARGNAME_padding_NAMEEND_VAL temp1005_52)))
(assert (= temp1005_54 #x0000000000000000))
(assert (= temp1005_55 #x0000000000000004))
(assert (= temp1005_56 temp1005_55))
(assert (= temp1005_57 (select ARGNAME_padding_NAMEEND_VAL temp1005_56)))
(assert (= temp1005_58 #x0000000000000000))
(assert (= temp1005_59 #x0000000000000005))
(assert (= temp1005_60 temp1005_59))
(assert (= temp1005_61 (select ARGNAME_padding_NAMEEND_VAL temp1005_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp1005_41 temp1005_38)
             (bvslt temp1005_45 temp1005_42)
             (bvslt temp1005_49 temp1005_46)
             (bvslt temp1005_53 temp1005_50)
             (bvslt temp1005_57 temp1005_54)
             (bvslt temp1005_61 temp1005_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1005_62 #x0000000000000000))
(assert (= var2240290 temp1005_62))
(assert (= temp1005_63 #x0000000000000000))
(assert (= temp1005_64 temp1005_63))
(assert (= temp1005_65 (select ARGNAME_stride_NAMEEND_VAL temp1005_64)))
(assert (= temp1005_66 #x0000000000000001))
(assert (= temp1005_67 temp1005_66))
(assert (= temp1005_68 (select ARGNAME_stride_NAMEEND_VAL temp1005_67)))
(assert (= temp1005_69 #x0000000000000002))
(assert (= temp1005_70 temp1005_69))
(assert (= temp1005_71 (select ARGNAME_stride_NAMEEND_VAL temp1005_70)))
(assert (= temp1005_72 #x0000000000000003))
(assert (= temp1005_73 temp1005_72))
(assert (= temp1005_74 (select ARGNAME_stride_NAMEEND_VAL temp1005_73)))
(assert (= temp1005_75 #x0000000000000004))
(assert (= temp1005_76 temp1005_75))
(assert (= temp1005_77 (select ARGNAME_stride_NAMEEND_VAL temp1005_76)))
(assert (= temp1005_78 #x0000000000000005))
(assert (= temp1005_79 temp1005_78))
(assert (= temp1005_80 (select ARGNAME_stride_NAMEEND_VAL temp1005_79)))
(assert (= temp1005_81 #x0000000000000000))
(assert (= temp1005_82 #x0000000000000000))
(assert (= temp1005_83 temp1005_82))
(assert (= temp1005_84 (select ARGNAME_stride_NAMEEND_VAL temp1005_83)))
(assert (= temp1005_85 #x0000000000000000))
(assert (= temp1005_86 #x0000000000000001))
(assert (= temp1005_87 temp1005_86))
(assert (= temp1005_88 (select ARGNAME_stride_NAMEEND_VAL temp1005_87)))
(assert (= temp1005_89 #x0000000000000000))
(assert (= temp1005_90 #x0000000000000002))
(assert (= temp1005_91 temp1005_90))
(assert (= temp1005_92 (select ARGNAME_stride_NAMEEND_VAL temp1005_91)))
(assert (= temp1005_93 #x0000000000000000))
(assert (= temp1005_94 #x0000000000000003))
(assert (= temp1005_95 temp1005_94))
(assert (= temp1005_96 (select ARGNAME_stride_NAMEEND_VAL temp1005_95)))
(assert (= temp1005_97 #x0000000000000000))
(assert (= temp1005_98 #x0000000000000004))
(assert (= temp1005_99 temp1005_98))
(assert (= temp1005_100 (select ARGNAME_stride_NAMEEND_VAL temp1005_99)))
(assert (= temp1005_101 #x0000000000000000))
(assert (= temp1005_102 #x0000000000000005))
(assert (= temp1005_103 temp1005_102))
(assert (= temp1005_104 (select ARGNAME_stride_NAMEEND_VAL temp1005_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp1005_84 temp1005_81)
             (bvsle temp1005_88 temp1005_85)
             (bvsle temp1005_92 temp1005_89)
             (bvsle temp1005_96 temp1005_93)
             (bvsle temp1005_100 temp1005_97)
             (bvsle temp1005_104 temp1005_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1005_105 #x0000000000000000))
(assert (= var2240311 temp1005_105))
(assert (= temp1005_106 #x0000000000000000))
(assert (= var2228402 temp1005_106))
(assert (= temp1005_107 #x0000000000000000))
(assert (= temp1005_108 temp1005_107))
(assert (= temp1005_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_108)))
(assert (= temp1005_110 #x0000000000000001))
(assert (= temp1005_111 temp1005_110))
(assert (= temp1005_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_111)))
(assert (= temp1005_113 #x0000000000000002))
(assert (= temp1005_114 temp1005_113))
(assert (= temp1005_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_114)))
(assert (= temp1005_116 #x0000000000000003))
(assert (= temp1005_117 temp1005_116))
(assert (= temp1005_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_117)))
(assert (= temp1005_119 #x0000000000000004))
(assert (= temp1005_120 temp1005_119))
(assert (= temp1005_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_120)))
(assert (= temp1005_122 #x0000000000000005))
(assert (= temp1005_123 temp1005_122))
(assert (= temp1005_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_123)))
(assert (= temp1005_126 var2228402))
(assert (= temp1005_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_126)))
(assert (= temp1005_125 temp1005_127))
(assert (= var2240356
   (ite (bvslt temp1005_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1005_128 #x0000000000000000))
(assert (= var2240356 temp1005_128))
(assert (= temp1005_129 #x0000000000000000))
(assert (= var2228402 temp1005_129))
(assert (= temp1005_131 var2228402))
(assert (= temp1005_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_131)))
(assert (= temp1005_130 temp1005_132))
(assert (= var2240378 (bvsmod temp1005_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1005_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp1005_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1005_134 #x0000000000000001))
(assert (= var2240379 temp1005_134))
(assert (= var2240398 var2240288))
(assert (= temp1005_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp1005_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1005_136 #x0000000000000001))
(assert (= var2240399 temp1005_136))
(assert (= temp1005_137 #x0000000000000001))
(assert (= var2229290 temp1005_137))
(assert (= temp1005_139 var2229290))
(assert (= temp1005_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_139)))
(assert (= temp1005_138 temp1005_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp1005_138)))
(assert (= temp1005_141 #x0000000000000000))
(assert (= var2228402 temp1005_141))
(assert (= temp1005_143 var2228402))
(assert (= temp1005_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_143)))
(assert (= temp1005_142 temp1005_144))
(assert (= temp1005_145 #x0000000000000002))
(assert (= var2503529 temp1005_145))
(assert (= temp1005_146 #x0000000000000001))
(assert (= var2240569 temp1005_146))
(assert (= temp1005_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1005_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1005_148 #x0000000000000001))
(assert (= var1521778 temp1005_148))
(assert (= temp1005_149 #x0000000000000001))
(assert (= var1521908 temp1005_149))
(assert (= var4010473 var1521908))
(assert (= temp1005_150 #x0000000000000000))
(assert (= var4210495 temp1005_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp1005_151 #x0000000000000002))
(assert (= var4339331 temp1005_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp1005_152 #x0000000000000001))
(assert (= var1521778 temp1005_152))
(model-add temp1005_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp1005_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp1005_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1005_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp1005_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1005_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






