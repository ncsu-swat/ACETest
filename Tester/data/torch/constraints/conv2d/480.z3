(declare-fun temp638_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp638_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp638_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp638_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp638_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp638_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp638_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp638_8 () (_ BitVec 64))
(declare-fun temp638_10 () (_ BitVec 64))
(declare-fun temp638_9 () (_ BitVec 64))
(declare-fun temp638_12 () (_ BitVec 64))
(declare-fun temp638_11 () (_ BitVec 64))
(declare-fun temp638_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp638_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp638_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp638_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp638_17 () (_ BitVec 64))
(declare-fun temp638_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp638_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp638_20 () (_ BitVec 64))
(declare-fun temp638_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp638_22 () (_ BitVec 64))
(declare-fun temp638_23 () (_ BitVec 64))
(declare-fun temp638_24 () (_ BitVec 64))
(declare-fun temp638_25 () (_ BitVec 64))
(declare-fun temp638_26 () (_ BitVec 64))
(declare-fun temp638_27 () (_ BitVec 64))
(declare-fun temp638_28 () (_ BitVec 64))
(declare-fun temp638_29 () (_ BitVec 64))
(declare-fun temp638_30 () (_ BitVec 64))
(declare-fun temp638_31 () (_ BitVec 64))
(declare-fun temp638_32 () (_ BitVec 64))
(declare-fun temp638_33 () (_ BitVec 64))
(declare-fun temp638_34 () (_ BitVec 64))
(declare-fun temp638_35 () (_ BitVec 64))
(declare-fun temp638_36 () (_ BitVec 64))
(declare-fun temp638_37 () (_ BitVec 64))
(declare-fun temp638_38 () (_ BitVec 64))
(declare-fun temp638_39 () (_ BitVec 64))
(declare-fun temp638_40 () (_ BitVec 64))
(declare-fun temp638_41 () (_ BitVec 64))
(declare-fun temp638_42 () (_ BitVec 64))
(declare-fun temp638_43 () (_ BitVec 64))
(declare-fun temp638_44 () (_ BitVec 64))
(declare-fun temp638_45 () (_ BitVec 64))
(declare-fun temp638_46 () (_ BitVec 64))
(declare-fun temp638_47 () (_ BitVec 64))
(declare-fun temp638_48 () (_ BitVec 64))
(declare-fun temp638_49 () (_ BitVec 64))
(declare-fun temp638_50 () (_ BitVec 64))
(declare-fun temp638_51 () (_ BitVec 64))
(declare-fun temp638_52 () (_ BitVec 64))
(declare-fun temp638_53 () (_ BitVec 64))
(declare-fun temp638_54 () (_ BitVec 64))
(declare-fun temp638_55 () (_ BitVec 64))
(declare-fun temp638_56 () (_ BitVec 64))
(declare-fun temp638_57 () (_ BitVec 64))
(declare-fun temp638_58 () (_ BitVec 64))
(declare-fun temp638_59 () (_ BitVec 64))
(declare-fun temp638_60 () (_ BitVec 64))
(declare-fun temp638_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp638_62 () (_ BitVec 64))
(declare-fun temp638_63 () (_ BitVec 64))
(declare-fun temp638_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp638_65 () (_ BitVec 64))
(declare-fun temp638_66 () (_ BitVec 64))
(declare-fun temp638_67 () (_ BitVec 64))
(declare-fun temp638_68 () (_ BitVec 64))
(declare-fun temp638_69 () (_ BitVec 64))
(declare-fun temp638_70 () (_ BitVec 64))
(declare-fun temp638_71 () (_ BitVec 64))
(declare-fun temp638_72 () (_ BitVec 64))
(declare-fun temp638_73 () (_ BitVec 64))
(declare-fun temp638_74 () (_ BitVec 64))
(declare-fun temp638_75 () (_ BitVec 64))
(declare-fun temp638_76 () (_ BitVec 64))
(declare-fun temp638_77 () (_ BitVec 64))
(declare-fun temp638_78 () (_ BitVec 64))
(declare-fun temp638_79 () (_ BitVec 64))
(declare-fun temp638_80 () (_ BitVec 64))
(declare-fun temp638_81 () (_ BitVec 64))
(declare-fun temp638_82 () (_ BitVec 64))
(declare-fun temp638_83 () (_ BitVec 64))
(declare-fun temp638_84 () (_ BitVec 64))
(declare-fun temp638_85 () (_ BitVec 64))
(declare-fun temp638_86 () (_ BitVec 64))
(declare-fun temp638_87 () (_ BitVec 64))
(declare-fun temp638_88 () (_ BitVec 64))
(declare-fun temp638_89 () (_ BitVec 64))
(declare-fun temp638_90 () (_ BitVec 64))
(declare-fun temp638_91 () (_ BitVec 64))
(declare-fun temp638_92 () (_ BitVec 64))
(declare-fun temp638_93 () (_ BitVec 64))
(declare-fun temp638_94 () (_ BitVec 64))
(declare-fun temp638_95 () (_ BitVec 64))
(declare-fun temp638_96 () (_ BitVec 64))
(declare-fun temp638_97 () (_ BitVec 64))
(declare-fun temp638_98 () (_ BitVec 64))
(declare-fun temp638_99 () (_ BitVec 64))
(declare-fun temp638_100 () (_ BitVec 64))
(declare-fun temp638_101 () (_ BitVec 64))
(declare-fun temp638_102 () (_ BitVec 64))
(declare-fun temp638_103 () (_ BitVec 64))
(declare-fun temp638_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp638_105 () (_ BitVec 64))
(declare-fun temp638_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp638_107 () (_ BitVec 64))
(declare-fun temp638_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp638_109 () (_ BitVec 64))
(declare-fun temp638_110 () (_ BitVec 64))
(declare-fun temp638_111 () (_ BitVec 64))
(declare-fun temp638_112 () (_ BitVec 64))
(declare-fun temp638_113 () (_ BitVec 64))
(declare-fun temp638_114 () (_ BitVec 64))
(declare-fun temp638_115 () (_ BitVec 64))
(declare-fun temp638_116 () (_ BitVec 64))
(declare-fun temp638_117 () (_ BitVec 64))
(declare-fun temp638_118 () (_ BitVec 64))
(declare-fun temp638_119 () (_ BitVec 64))
(declare-fun temp638_120 () (_ BitVec 64))
(declare-fun temp638_121 () (_ BitVec 64))
(declare-fun temp638_122 () (_ BitVec 64))
(declare-fun temp638_123 () (_ BitVec 64))
(declare-fun temp638_124 () (_ BitVec 64))
(declare-fun temp638_126 () (_ BitVec 64))
(declare-fun temp638_127 () (_ BitVec 64))
(declare-fun temp638_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp638_128 () (_ BitVec 64))
(declare-fun temp638_129 () (_ BitVec 64))
(declare-fun temp638_131 () (_ BitVec 64))
(declare-fun temp638_132 () (_ BitVec 64))
(declare-fun temp638_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp638_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp638_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp638_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp638_136 () (_ BitVec 64))
(declare-fun temp638_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp638_139 () (_ BitVec 64))
(declare-fun temp638_140 () (_ BitVec 64))
(declare-fun temp638_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp638_141 () (_ BitVec 64))
(declare-fun temp638_143 () (_ BitVec 64))
(declare-fun temp638_144 () (_ BitVec 64))
(declare-fun temp638_142 () (_ BitVec 64))
(declare-fun temp638_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp638_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp638_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp638_148 () (_ BitVec 64))
(declare-fun temp638_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp638_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp638_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var1522214 () (_ BitVec 64))
(declare-fun temp638_152 () (_ BitVec 64))
(declare-fun var1522215 () (_ BitVec 64))
(declare-fun temp638_153 () (_ BitVec 64))
(assert (= temp638_1 #x0000000000000002))
(assert (= var989741 temp638_1))
(assert (= temp638_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp638_2)))
(assert (= temp638_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp638_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp638_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp638_4)))
(assert (= temp638_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp638_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp638_6 #x0000000000000000))
(assert (= var989776 temp638_6))
(assert (= temp638_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp638_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp638_8 #x0000000000000001))
(assert (= var989810 temp638_8))
(assert (= temp638_10 #x0000000000000000))
(assert (= temp638_9 temp638_10))
(assert (= temp638_12 #x0000000000000002))
(assert (= temp638_11 temp638_12))
(assert (= temp638_13 #x0000000000000000))
(assert (= var1387902 temp638_13))
(assert (= temp638_14 #x0000000000000001))
(assert (= var1387923 temp638_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp638_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp638_15)))
(assert (= temp638_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp638_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp638_17 #x0000000000000000))
(assert (= var1521661 temp638_17))
(assert (= temp638_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp638_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp638_19 #x0000000000000000))
(assert (= var1521706 temp638_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp638_20 #x0000000000000000))
(assert (= temp638_21 temp638_20))
(assert (= temp638_22 (select ARGNAME_padding_NAMEEND_VAL temp638_21)))
(assert (= temp638_23 #x0000000000000001))
(assert (= temp638_24 temp638_23))
(assert (= temp638_25 (select ARGNAME_padding_NAMEEND_VAL temp638_24)))
(assert (= temp638_26 #x0000000000000002))
(assert (= temp638_27 temp638_26))
(assert (= temp638_28 (select ARGNAME_padding_NAMEEND_VAL temp638_27)))
(assert (= temp638_29 #x0000000000000003))
(assert (= temp638_30 temp638_29))
(assert (= temp638_31 (select ARGNAME_padding_NAMEEND_VAL temp638_30)))
(assert (= temp638_32 #x0000000000000004))
(assert (= temp638_33 temp638_32))
(assert (= temp638_34 (select ARGNAME_padding_NAMEEND_VAL temp638_33)))
(assert (= temp638_35 #x0000000000000005))
(assert (= temp638_36 temp638_35))
(assert (= temp638_37 (select ARGNAME_padding_NAMEEND_VAL temp638_36)))
(assert (= temp638_38 #x0000000000000000))
(assert (= temp638_39 #x0000000000000000))
(assert (= temp638_40 temp638_39))
(assert (= temp638_41 (select ARGNAME_padding_NAMEEND_VAL temp638_40)))
(assert (= temp638_42 #x0000000000000000))
(assert (= temp638_43 #x0000000000000001))
(assert (= temp638_44 temp638_43))
(assert (= temp638_45 (select ARGNAME_padding_NAMEEND_VAL temp638_44)))
(assert (= temp638_46 #x0000000000000000))
(assert (= temp638_47 #x0000000000000002))
(assert (= temp638_48 temp638_47))
(assert (= temp638_49 (select ARGNAME_padding_NAMEEND_VAL temp638_48)))
(assert (= temp638_50 #x0000000000000000))
(assert (= temp638_51 #x0000000000000003))
(assert (= temp638_52 temp638_51))
(assert (= temp638_53 (select ARGNAME_padding_NAMEEND_VAL temp638_52)))
(assert (= temp638_54 #x0000000000000000))
(assert (= temp638_55 #x0000000000000004))
(assert (= temp638_56 temp638_55))
(assert (= temp638_57 (select ARGNAME_padding_NAMEEND_VAL temp638_56)))
(assert (= temp638_58 #x0000000000000000))
(assert (= temp638_59 #x0000000000000005))
(assert (= temp638_60 temp638_59))
(assert (= temp638_61 (select ARGNAME_padding_NAMEEND_VAL temp638_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp638_41 temp638_38)
             (bvslt temp638_45 temp638_42)
             (bvslt temp638_49 temp638_46)
             (bvslt temp638_53 temp638_50)
             (bvslt temp638_57 temp638_54)
             (bvslt temp638_61 temp638_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp638_62 #x0000000000000000))
(assert (= var2240290 temp638_62))
(assert (= temp638_63 #x0000000000000000))
(assert (= temp638_64 temp638_63))
(assert (= temp638_65 (select ARGNAME_stride_NAMEEND_VAL temp638_64)))
(assert (= temp638_66 #x0000000000000001))
(assert (= temp638_67 temp638_66))
(assert (= temp638_68 (select ARGNAME_stride_NAMEEND_VAL temp638_67)))
(assert (= temp638_69 #x0000000000000002))
(assert (= temp638_70 temp638_69))
(assert (= temp638_71 (select ARGNAME_stride_NAMEEND_VAL temp638_70)))
(assert (= temp638_72 #x0000000000000003))
(assert (= temp638_73 temp638_72))
(assert (= temp638_74 (select ARGNAME_stride_NAMEEND_VAL temp638_73)))
(assert (= temp638_75 #x0000000000000004))
(assert (= temp638_76 temp638_75))
(assert (= temp638_77 (select ARGNAME_stride_NAMEEND_VAL temp638_76)))
(assert (= temp638_78 #x0000000000000005))
(assert (= temp638_79 temp638_78))
(assert (= temp638_80 (select ARGNAME_stride_NAMEEND_VAL temp638_79)))
(assert (= temp638_81 #x0000000000000000))
(assert (= temp638_82 #x0000000000000000))
(assert (= temp638_83 temp638_82))
(assert (= temp638_84 (select ARGNAME_stride_NAMEEND_VAL temp638_83)))
(assert (= temp638_85 #x0000000000000000))
(assert (= temp638_86 #x0000000000000001))
(assert (= temp638_87 temp638_86))
(assert (= temp638_88 (select ARGNAME_stride_NAMEEND_VAL temp638_87)))
(assert (= temp638_89 #x0000000000000000))
(assert (= temp638_90 #x0000000000000002))
(assert (= temp638_91 temp638_90))
(assert (= temp638_92 (select ARGNAME_stride_NAMEEND_VAL temp638_91)))
(assert (= temp638_93 #x0000000000000000))
(assert (= temp638_94 #x0000000000000003))
(assert (= temp638_95 temp638_94))
(assert (= temp638_96 (select ARGNAME_stride_NAMEEND_VAL temp638_95)))
(assert (= temp638_97 #x0000000000000000))
(assert (= temp638_98 #x0000000000000004))
(assert (= temp638_99 temp638_98))
(assert (= temp638_100 (select ARGNAME_stride_NAMEEND_VAL temp638_99)))
(assert (= temp638_101 #x0000000000000000))
(assert (= temp638_102 #x0000000000000005))
(assert (= temp638_103 temp638_102))
(assert (= temp638_104 (select ARGNAME_stride_NAMEEND_VAL temp638_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp638_84 temp638_81)
             (bvsle temp638_88 temp638_85)
             (bvsle temp638_92 temp638_89)
             (bvsle temp638_96 temp638_93)
             (bvsle temp638_100 temp638_97)
             (bvsle temp638_104 temp638_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp638_105 #x0000000000000000))
(assert (= var2240311 temp638_105))
(assert (= temp638_106 #x0000000000000000))
(assert (= var2228402 temp638_106))
(assert (= temp638_107 #x0000000000000000))
(assert (= temp638_108 temp638_107))
(assert (= temp638_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp638_108)))
(assert (= temp638_110 #x0000000000000001))
(assert (= temp638_111 temp638_110))
(assert (= temp638_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp638_111)))
(assert (= temp638_113 #x0000000000000002))
(assert (= temp638_114 temp638_113))
(assert (= temp638_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp638_114)))
(assert (= temp638_116 #x0000000000000003))
(assert (= temp638_117 temp638_116))
(assert (= temp638_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp638_117)))
(assert (= temp638_119 #x0000000000000004))
(assert (= temp638_120 temp638_119))
(assert (= temp638_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp638_120)))
(assert (= temp638_122 #x0000000000000005))
(assert (= temp638_123 temp638_122))
(assert (= temp638_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp638_123)))
(assert (= temp638_126 var2228402))
(assert (= temp638_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp638_126)))
(assert (= temp638_125 temp638_127))
(assert (= var2240356
   (ite (bvslt temp638_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp638_128 #x0000000000000000))
(assert (= var2240356 temp638_128))
(assert (= temp638_129 #x0000000000000000))
(assert (= var2228402 temp638_129))
(assert (= temp638_131 var2228402))
(assert (= temp638_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp638_131)))
(assert (= temp638_130 temp638_132))
(assert (= var2240378 (bvsmod temp638_130 ARGNAME_groups_NAMEEND)))
(assert (= temp638_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp638_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp638_134 #x0000000000000001))
(assert (= var2240379 temp638_134))
(assert (= var2240398 var2240288))
(assert (= temp638_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp638_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp638_136 #x0000000000000001))
(assert (= var2240399 temp638_136))
(assert (= temp638_137 #x0000000000000001))
(assert (= var2229290 temp638_137))
(assert (= temp638_139 var2229290))
(assert (= temp638_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp638_139)))
(assert (= temp638_138 temp638_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp638_138)))
(assert (= temp638_141 #x0000000000000000))
(assert (= var2228402 temp638_141))
(assert (= temp638_143 var2228402))
(assert (= temp638_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp638_143)))
(assert (= temp638_142 temp638_144))
(assert (= temp638_145 #x0000000000000002))
(assert (= var2503529 temp638_145))
(assert (= temp638_146 #x0000000000000001))
(assert (= var2240569 temp638_146))
(assert (= temp638_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp638_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp638_148 #x0000000000000001))
(assert (= var1521778 temp638_148))
(assert (= temp638_149 #x0000000000000001))
(assert (= var1521908 temp638_149))
(assert (= var4010473 var1521908))
(assert (= temp638_150 #x0000000000000000))
(assert (= var4210495 temp638_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp638_151 #x0000000000000002))
(assert (= var4339331 temp638_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4796816 var1521921))
(assert (= var1522214 var1521633))
(assert (= temp638_152 #x0000000000000000))
(assert (= var1522215
   (ite (distinct var1522214 temp638_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp638_153 #x0000000000000001))
(assert (= var1521778 temp638_153))
(model-add temp638_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp638_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp638_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp638_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp638_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp638_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






