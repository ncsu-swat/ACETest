(declare-fun temp686_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp686_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp686_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp686_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp686_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp686_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp686_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp686_8 () (_ BitVec 64))
(declare-fun temp686_10 () (_ BitVec 64))
(declare-fun temp686_9 () (_ BitVec 64))
(declare-fun temp686_12 () (_ BitVec 64))
(declare-fun temp686_11 () (_ BitVec 64))
(declare-fun temp686_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp686_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp686_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp686_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp686_17 () (_ BitVec 64))
(declare-fun temp686_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp686_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp686_20 () (_ BitVec 64))
(declare-fun temp686_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp686_22 () (_ BitVec 64))
(declare-fun temp686_23 () (_ BitVec 64))
(declare-fun temp686_24 () (_ BitVec 64))
(declare-fun temp686_25 () (_ BitVec 64))
(declare-fun temp686_26 () (_ BitVec 64))
(declare-fun temp686_27 () (_ BitVec 64))
(declare-fun temp686_28 () (_ BitVec 64))
(declare-fun temp686_29 () (_ BitVec 64))
(declare-fun temp686_30 () (_ BitVec 64))
(declare-fun temp686_31 () (_ BitVec 64))
(declare-fun temp686_32 () (_ BitVec 64))
(declare-fun temp686_33 () (_ BitVec 64))
(declare-fun temp686_34 () (_ BitVec 64))
(declare-fun temp686_35 () (_ BitVec 64))
(declare-fun temp686_36 () (_ BitVec 64))
(declare-fun temp686_37 () (_ BitVec 64))
(declare-fun temp686_38 () (_ BitVec 64))
(declare-fun temp686_39 () (_ BitVec 64))
(declare-fun temp686_40 () (_ BitVec 64))
(declare-fun temp686_41 () (_ BitVec 64))
(declare-fun temp686_42 () (_ BitVec 64))
(declare-fun temp686_43 () (_ BitVec 64))
(declare-fun temp686_44 () (_ BitVec 64))
(declare-fun temp686_45 () (_ BitVec 64))
(declare-fun temp686_46 () (_ BitVec 64))
(declare-fun temp686_47 () (_ BitVec 64))
(declare-fun temp686_48 () (_ BitVec 64))
(declare-fun temp686_49 () (_ BitVec 64))
(declare-fun temp686_50 () (_ BitVec 64))
(declare-fun temp686_51 () (_ BitVec 64))
(declare-fun temp686_52 () (_ BitVec 64))
(declare-fun temp686_53 () (_ BitVec 64))
(declare-fun temp686_54 () (_ BitVec 64))
(declare-fun temp686_55 () (_ BitVec 64))
(declare-fun temp686_56 () (_ BitVec 64))
(declare-fun temp686_57 () (_ BitVec 64))
(declare-fun temp686_58 () (_ BitVec 64))
(declare-fun temp686_59 () (_ BitVec 64))
(declare-fun temp686_60 () (_ BitVec 64))
(declare-fun temp686_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp686_62 () (_ BitVec 64))
(declare-fun temp686_63 () (_ BitVec 64))
(declare-fun temp686_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp686_65 () (_ BitVec 64))
(declare-fun temp686_66 () (_ BitVec 64))
(declare-fun temp686_67 () (_ BitVec 64))
(declare-fun temp686_68 () (_ BitVec 64))
(declare-fun temp686_69 () (_ BitVec 64))
(declare-fun temp686_70 () (_ BitVec 64))
(declare-fun temp686_71 () (_ BitVec 64))
(declare-fun temp686_72 () (_ BitVec 64))
(declare-fun temp686_73 () (_ BitVec 64))
(declare-fun temp686_74 () (_ BitVec 64))
(declare-fun temp686_75 () (_ BitVec 64))
(declare-fun temp686_76 () (_ BitVec 64))
(declare-fun temp686_77 () (_ BitVec 64))
(declare-fun temp686_78 () (_ BitVec 64))
(declare-fun temp686_79 () (_ BitVec 64))
(declare-fun temp686_80 () (_ BitVec 64))
(declare-fun temp686_81 () (_ BitVec 64))
(declare-fun temp686_82 () (_ BitVec 64))
(declare-fun temp686_83 () (_ BitVec 64))
(declare-fun temp686_84 () (_ BitVec 64))
(declare-fun temp686_85 () (_ BitVec 64))
(declare-fun temp686_86 () (_ BitVec 64))
(declare-fun temp686_87 () (_ BitVec 64))
(declare-fun temp686_88 () (_ BitVec 64))
(declare-fun temp686_89 () (_ BitVec 64))
(declare-fun temp686_90 () (_ BitVec 64))
(declare-fun temp686_91 () (_ BitVec 64))
(declare-fun temp686_92 () (_ BitVec 64))
(declare-fun temp686_93 () (_ BitVec 64))
(declare-fun temp686_94 () (_ BitVec 64))
(declare-fun temp686_95 () (_ BitVec 64))
(declare-fun temp686_96 () (_ BitVec 64))
(declare-fun temp686_97 () (_ BitVec 64))
(declare-fun temp686_98 () (_ BitVec 64))
(declare-fun temp686_99 () (_ BitVec 64))
(declare-fun temp686_100 () (_ BitVec 64))
(declare-fun temp686_101 () (_ BitVec 64))
(declare-fun temp686_102 () (_ BitVec 64))
(declare-fun temp686_103 () (_ BitVec 64))
(declare-fun temp686_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp686_105 () (_ BitVec 64))
(declare-fun temp686_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp686_107 () (_ BitVec 64))
(declare-fun temp686_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp686_109 () (_ BitVec 64))
(declare-fun temp686_110 () (_ BitVec 64))
(declare-fun temp686_111 () (_ BitVec 64))
(declare-fun temp686_112 () (_ BitVec 64))
(declare-fun temp686_113 () (_ BitVec 64))
(declare-fun temp686_114 () (_ BitVec 64))
(declare-fun temp686_115 () (_ BitVec 64))
(declare-fun temp686_116 () (_ BitVec 64))
(declare-fun temp686_117 () (_ BitVec 64))
(declare-fun temp686_118 () (_ BitVec 64))
(declare-fun temp686_119 () (_ BitVec 64))
(declare-fun temp686_120 () (_ BitVec 64))
(declare-fun temp686_121 () (_ BitVec 64))
(declare-fun temp686_122 () (_ BitVec 64))
(declare-fun temp686_123 () (_ BitVec 64))
(declare-fun temp686_124 () (_ BitVec 64))
(declare-fun temp686_126 () (_ BitVec 64))
(declare-fun temp686_127 () (_ BitVec 64))
(declare-fun temp686_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp686_128 () (_ BitVec 64))
(declare-fun temp686_129 () (_ BitVec 64))
(declare-fun temp686_131 () (_ BitVec 64))
(declare-fun temp686_132 () (_ BitVec 64))
(declare-fun temp686_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp686_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp686_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp686_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp686_136 () (_ BitVec 64))
(declare-fun temp686_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp686_139 () (_ BitVec 64))
(declare-fun temp686_140 () (_ BitVec 64))
(declare-fun temp686_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp686_141 () (_ BitVec 64))
(declare-fun temp686_143 () (_ BitVec 64))
(declare-fun temp686_144 () (_ BitVec 64))
(declare-fun temp686_142 () (_ BitVec 64))
(declare-fun temp686_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp686_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp686_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp686_148 () (_ BitVec 64))
(declare-fun temp686_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp686_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp686_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp686_153 () (_ BitVec 64))
(declare-fun temp686_152 () (_ BitVec 64))
(declare-fun temp686_155 () (_ BitVec 64))
(declare-fun temp686_154 () (_ BitVec 64))
(declare-fun temp686_156 () (_ BitVec 64))
(assert (= temp686_1 #x0000000000000002))
(assert (= var989741 temp686_1))
(assert (= temp686_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp686_2)))
(assert (= temp686_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp686_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp686_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp686_4)))
(assert (= temp686_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp686_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp686_6 #x0000000000000000))
(assert (= var989776 temp686_6))
(assert (= temp686_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp686_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp686_8 #x0000000000000001))
(assert (= var989810 temp686_8))
(assert (= temp686_10 #x0000000000000000))
(assert (= temp686_9 temp686_10))
(assert (= temp686_12 #x0000000000000002))
(assert (= temp686_11 temp686_12))
(assert (= temp686_13 #x0000000000000000))
(assert (= var1387902 temp686_13))
(assert (= temp686_14 #x0000000000000001))
(assert (= var1387923 temp686_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp686_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp686_15)))
(assert (= temp686_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp686_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_17 #x0000000000000000))
(assert (= var1521661 temp686_17))
(assert (= temp686_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp686_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_19 #x0000000000000000))
(assert (= var1521706 temp686_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp686_20 #x0000000000000000))
(assert (= temp686_21 temp686_20))
(assert (= temp686_22 (select ARGNAME_padding_NAMEEND_VAL temp686_21)))
(assert (= temp686_23 #x0000000000000001))
(assert (= temp686_24 temp686_23))
(assert (= temp686_25 (select ARGNAME_padding_NAMEEND_VAL temp686_24)))
(assert (= temp686_26 #x0000000000000002))
(assert (= temp686_27 temp686_26))
(assert (= temp686_28 (select ARGNAME_padding_NAMEEND_VAL temp686_27)))
(assert (= temp686_29 #x0000000000000003))
(assert (= temp686_30 temp686_29))
(assert (= temp686_31 (select ARGNAME_padding_NAMEEND_VAL temp686_30)))
(assert (= temp686_32 #x0000000000000004))
(assert (= temp686_33 temp686_32))
(assert (= temp686_34 (select ARGNAME_padding_NAMEEND_VAL temp686_33)))
(assert (= temp686_35 #x0000000000000005))
(assert (= temp686_36 temp686_35))
(assert (= temp686_37 (select ARGNAME_padding_NAMEEND_VAL temp686_36)))
(assert (= temp686_38 #x0000000000000000))
(assert (= temp686_39 #x0000000000000000))
(assert (= temp686_40 temp686_39))
(assert (= temp686_41 (select ARGNAME_padding_NAMEEND_VAL temp686_40)))
(assert (= temp686_42 #x0000000000000000))
(assert (= temp686_43 #x0000000000000001))
(assert (= temp686_44 temp686_43))
(assert (= temp686_45 (select ARGNAME_padding_NAMEEND_VAL temp686_44)))
(assert (= temp686_46 #x0000000000000000))
(assert (= temp686_47 #x0000000000000002))
(assert (= temp686_48 temp686_47))
(assert (= temp686_49 (select ARGNAME_padding_NAMEEND_VAL temp686_48)))
(assert (= temp686_50 #x0000000000000000))
(assert (= temp686_51 #x0000000000000003))
(assert (= temp686_52 temp686_51))
(assert (= temp686_53 (select ARGNAME_padding_NAMEEND_VAL temp686_52)))
(assert (= temp686_54 #x0000000000000000))
(assert (= temp686_55 #x0000000000000004))
(assert (= temp686_56 temp686_55))
(assert (= temp686_57 (select ARGNAME_padding_NAMEEND_VAL temp686_56)))
(assert (= temp686_58 #x0000000000000000))
(assert (= temp686_59 #x0000000000000005))
(assert (= temp686_60 temp686_59))
(assert (= temp686_61 (select ARGNAME_padding_NAMEEND_VAL temp686_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp686_41 temp686_38)
             (bvslt temp686_45 temp686_42)
             (bvslt temp686_49 temp686_46)
             (bvslt temp686_53 temp686_50)
             (bvslt temp686_57 temp686_54)
             (bvslt temp686_61 temp686_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_62 #x0000000000000000))
(assert (= var2240290 temp686_62))
(assert (= temp686_63 #x0000000000000000))
(assert (= temp686_64 temp686_63))
(assert (= temp686_65 (select ARGNAME_stride_NAMEEND_VAL temp686_64)))
(assert (= temp686_66 #x0000000000000001))
(assert (= temp686_67 temp686_66))
(assert (= temp686_68 (select ARGNAME_stride_NAMEEND_VAL temp686_67)))
(assert (= temp686_69 #x0000000000000002))
(assert (= temp686_70 temp686_69))
(assert (= temp686_71 (select ARGNAME_stride_NAMEEND_VAL temp686_70)))
(assert (= temp686_72 #x0000000000000003))
(assert (= temp686_73 temp686_72))
(assert (= temp686_74 (select ARGNAME_stride_NAMEEND_VAL temp686_73)))
(assert (= temp686_75 #x0000000000000004))
(assert (= temp686_76 temp686_75))
(assert (= temp686_77 (select ARGNAME_stride_NAMEEND_VAL temp686_76)))
(assert (= temp686_78 #x0000000000000005))
(assert (= temp686_79 temp686_78))
(assert (= temp686_80 (select ARGNAME_stride_NAMEEND_VAL temp686_79)))
(assert (= temp686_81 #x0000000000000000))
(assert (= temp686_82 #x0000000000000000))
(assert (= temp686_83 temp686_82))
(assert (= temp686_84 (select ARGNAME_stride_NAMEEND_VAL temp686_83)))
(assert (= temp686_85 #x0000000000000000))
(assert (= temp686_86 #x0000000000000001))
(assert (= temp686_87 temp686_86))
(assert (= temp686_88 (select ARGNAME_stride_NAMEEND_VAL temp686_87)))
(assert (= temp686_89 #x0000000000000000))
(assert (= temp686_90 #x0000000000000002))
(assert (= temp686_91 temp686_90))
(assert (= temp686_92 (select ARGNAME_stride_NAMEEND_VAL temp686_91)))
(assert (= temp686_93 #x0000000000000000))
(assert (= temp686_94 #x0000000000000003))
(assert (= temp686_95 temp686_94))
(assert (= temp686_96 (select ARGNAME_stride_NAMEEND_VAL temp686_95)))
(assert (= temp686_97 #x0000000000000000))
(assert (= temp686_98 #x0000000000000004))
(assert (= temp686_99 temp686_98))
(assert (= temp686_100 (select ARGNAME_stride_NAMEEND_VAL temp686_99)))
(assert (= temp686_101 #x0000000000000000))
(assert (= temp686_102 #x0000000000000005))
(assert (= temp686_103 temp686_102))
(assert (= temp686_104 (select ARGNAME_stride_NAMEEND_VAL temp686_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp686_84 temp686_81)
             (bvsle temp686_88 temp686_85)
             (bvsle temp686_92 temp686_89)
             (bvsle temp686_96 temp686_93)
             (bvsle temp686_100 temp686_97)
             (bvsle temp686_104 temp686_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_105 #x0000000000000000))
(assert (= var2240311 temp686_105))
(assert (= temp686_106 #x0000000000000000))
(assert (= var2228402 temp686_106))
(assert (= temp686_107 #x0000000000000000))
(assert (= temp686_108 temp686_107))
(assert (= temp686_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_108)))
(assert (= temp686_110 #x0000000000000001))
(assert (= temp686_111 temp686_110))
(assert (= temp686_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_111)))
(assert (= temp686_113 #x0000000000000002))
(assert (= temp686_114 temp686_113))
(assert (= temp686_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_114)))
(assert (= temp686_116 #x0000000000000003))
(assert (= temp686_117 temp686_116))
(assert (= temp686_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_117)))
(assert (= temp686_119 #x0000000000000004))
(assert (= temp686_120 temp686_119))
(assert (= temp686_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_120)))
(assert (= temp686_122 #x0000000000000005))
(assert (= temp686_123 temp686_122))
(assert (= temp686_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_123)))
(assert (= temp686_126 var2228402))
(assert (= temp686_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_126)))
(assert (= temp686_125 temp686_127))
(assert (= var2240356
   (ite (bvslt temp686_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_128 #x0000000000000000))
(assert (= var2240356 temp686_128))
(assert (= temp686_129 #x0000000000000000))
(assert (= var2228402 temp686_129))
(assert (= temp686_131 var2228402))
(assert (= temp686_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_131)))
(assert (= temp686_130 temp686_132))
(assert (= var2240378 (bvsmod temp686_130 ARGNAME_groups_NAMEEND)))
(assert (= temp686_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp686_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp686_134 #x0000000000000001))
(assert (= var2240379 temp686_134))
(assert (= var2240398 var2240288))
(assert (= temp686_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp686_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp686_136 #x0000000000000001))
(assert (= var2240399 temp686_136))
(assert (= temp686_137 #x0000000000000001))
(assert (= var2229290 temp686_137))
(assert (= temp686_139 var2229290))
(assert (= temp686_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_139)))
(assert (= temp686_138 temp686_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp686_138)))
(assert (= temp686_141 #x0000000000000000))
(assert (= var2228402 temp686_141))
(assert (= temp686_143 var2228402))
(assert (= temp686_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_143)))
(assert (= temp686_142 temp686_144))
(assert (= temp686_145 #x0000000000000002))
(assert (= var2503529 temp686_145))
(assert (= temp686_146 #x0000000000000001))
(assert (= var2240569 temp686_146))
(assert (= temp686_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp686_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_148 #x0000000000000001))
(assert (= var1521778 temp686_148))
(assert (= temp686_149 #x0000000000000001))
(assert (= var1521908 temp686_149))
(assert (= var4010473 var1521908))
(assert (= temp686_150 #x0000000000000000))
(assert (= var4210495 temp686_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp686_151 #x0000000000000002))
(assert (= var4339331 temp686_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp686_153 #xffffffffffffffff))
(assert (= temp686_152 temp686_153))
(assert (= temp686_155 #xffffffffffffffff))
(assert (= temp686_154 temp686_155))
(assert (= temp686_156 #x0000000000000001))
(assert (= var1521778 temp686_156))
(model-add temp686_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp686_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp686_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp686_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp686_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp686_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






