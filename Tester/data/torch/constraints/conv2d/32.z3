(declare-fun temp42_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp42_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp42_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp42_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp42_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp42_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp42_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp42_8 () (_ BitVec 64))
(declare-fun temp42_10 () (_ BitVec 64))
(declare-fun temp42_9 () (_ BitVec 64))
(declare-fun temp42_12 () (_ BitVec 64))
(declare-fun temp42_11 () (_ BitVec 64))
(declare-fun temp42_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp42_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp42_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp42_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp42_17 () (_ BitVec 64))
(declare-fun temp42_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp42_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp42_20 () (_ BitVec 64))
(declare-fun temp42_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp42_22 () (_ BitVec 64))
(declare-fun temp42_23 () (_ BitVec 64))
(declare-fun temp42_24 () (_ BitVec 64))
(declare-fun temp42_25 () (_ BitVec 64))
(declare-fun temp42_26 () (_ BitVec 64))
(declare-fun temp42_27 () (_ BitVec 64))
(declare-fun temp42_28 () (_ BitVec 64))
(declare-fun temp42_29 () (_ BitVec 64))
(declare-fun temp42_30 () (_ BitVec 64))
(declare-fun temp42_31 () (_ BitVec 64))
(declare-fun temp42_32 () (_ BitVec 64))
(declare-fun temp42_33 () (_ BitVec 64))
(declare-fun temp42_34 () (_ BitVec 64))
(declare-fun temp42_35 () (_ BitVec 64))
(declare-fun temp42_36 () (_ BitVec 64))
(declare-fun temp42_37 () (_ BitVec 64))
(declare-fun temp42_38 () (_ BitVec 64))
(declare-fun temp42_39 () (_ BitVec 64))
(declare-fun temp42_40 () (_ BitVec 64))
(declare-fun temp42_41 () (_ BitVec 64))
(declare-fun temp42_42 () (_ BitVec 64))
(declare-fun temp42_43 () (_ BitVec 64))
(declare-fun temp42_44 () (_ BitVec 64))
(declare-fun temp42_45 () (_ BitVec 64))
(declare-fun temp42_46 () (_ BitVec 64))
(declare-fun temp42_47 () (_ BitVec 64))
(declare-fun temp42_48 () (_ BitVec 64))
(declare-fun temp42_49 () (_ BitVec 64))
(declare-fun temp42_50 () (_ BitVec 64))
(declare-fun temp42_51 () (_ BitVec 64))
(declare-fun temp42_52 () (_ BitVec 64))
(declare-fun temp42_53 () (_ BitVec 64))
(declare-fun temp42_54 () (_ BitVec 64))
(declare-fun temp42_55 () (_ BitVec 64))
(declare-fun temp42_56 () (_ BitVec 64))
(declare-fun temp42_57 () (_ BitVec 64))
(declare-fun temp42_58 () (_ BitVec 64))
(declare-fun temp42_59 () (_ BitVec 64))
(declare-fun temp42_60 () (_ BitVec 64))
(declare-fun temp42_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp42_62 () (_ BitVec 64))
(declare-fun temp42_63 () (_ BitVec 64))
(declare-fun temp42_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp42_65 () (_ BitVec 64))
(declare-fun temp42_66 () (_ BitVec 64))
(declare-fun temp42_67 () (_ BitVec 64))
(declare-fun temp42_68 () (_ BitVec 64))
(declare-fun temp42_69 () (_ BitVec 64))
(declare-fun temp42_70 () (_ BitVec 64))
(declare-fun temp42_71 () (_ BitVec 64))
(declare-fun temp42_72 () (_ BitVec 64))
(declare-fun temp42_73 () (_ BitVec 64))
(declare-fun temp42_74 () (_ BitVec 64))
(declare-fun temp42_75 () (_ BitVec 64))
(declare-fun temp42_76 () (_ BitVec 64))
(declare-fun temp42_77 () (_ BitVec 64))
(declare-fun temp42_78 () (_ BitVec 64))
(declare-fun temp42_79 () (_ BitVec 64))
(declare-fun temp42_80 () (_ BitVec 64))
(declare-fun temp42_81 () (_ BitVec 64))
(declare-fun temp42_82 () (_ BitVec 64))
(declare-fun temp42_83 () (_ BitVec 64))
(declare-fun temp42_84 () (_ BitVec 64))
(declare-fun temp42_85 () (_ BitVec 64))
(declare-fun temp42_86 () (_ BitVec 64))
(declare-fun temp42_87 () (_ BitVec 64))
(declare-fun temp42_88 () (_ BitVec 64))
(declare-fun temp42_89 () (_ BitVec 64))
(declare-fun temp42_90 () (_ BitVec 64))
(declare-fun temp42_91 () (_ BitVec 64))
(declare-fun temp42_92 () (_ BitVec 64))
(declare-fun temp42_93 () (_ BitVec 64))
(declare-fun temp42_94 () (_ BitVec 64))
(declare-fun temp42_95 () (_ BitVec 64))
(declare-fun temp42_96 () (_ BitVec 64))
(declare-fun temp42_97 () (_ BitVec 64))
(declare-fun temp42_98 () (_ BitVec 64))
(declare-fun temp42_99 () (_ BitVec 64))
(declare-fun temp42_100 () (_ BitVec 64))
(declare-fun temp42_101 () (_ BitVec 64))
(declare-fun temp42_102 () (_ BitVec 64))
(declare-fun temp42_103 () (_ BitVec 64))
(declare-fun temp42_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp42_105 () (_ BitVec 64))
(declare-fun temp42_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp42_107 () (_ BitVec 64))
(declare-fun temp42_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp42_109 () (_ BitVec 64))
(declare-fun temp42_110 () (_ BitVec 64))
(declare-fun temp42_111 () (_ BitVec 64))
(declare-fun temp42_112 () (_ BitVec 64))
(declare-fun temp42_113 () (_ BitVec 64))
(declare-fun temp42_114 () (_ BitVec 64))
(declare-fun temp42_115 () (_ BitVec 64))
(declare-fun temp42_116 () (_ BitVec 64))
(declare-fun temp42_117 () (_ BitVec 64))
(declare-fun temp42_118 () (_ BitVec 64))
(declare-fun temp42_119 () (_ BitVec 64))
(declare-fun temp42_120 () (_ BitVec 64))
(declare-fun temp42_121 () (_ BitVec 64))
(declare-fun temp42_122 () (_ BitVec 64))
(declare-fun temp42_123 () (_ BitVec 64))
(declare-fun temp42_124 () (_ BitVec 64))
(declare-fun temp42_126 () (_ BitVec 64))
(declare-fun temp42_127 () (_ BitVec 64))
(declare-fun temp42_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp42_128 () (_ BitVec 64))
(declare-fun temp42_129 () (_ BitVec 64))
(declare-fun temp42_131 () (_ BitVec 64))
(declare-fun temp42_132 () (_ BitVec 64))
(declare-fun temp42_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp42_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp42_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp42_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp42_136 () (_ BitVec 64))
(declare-fun temp42_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp42_139 () (_ BitVec 64))
(declare-fun temp42_140 () (_ BitVec 64))
(declare-fun temp42_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp42_141 () (_ BitVec 64))
(declare-fun temp42_143 () (_ BitVec 64))
(declare-fun temp42_144 () (_ BitVec 64))
(declare-fun temp42_142 () (_ BitVec 64))
(declare-fun temp42_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp42_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp42_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp42_148 () (_ BitVec 64))
(declare-fun temp42_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp42_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp42_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var1522108 () (_ BitVec 64))
(declare-fun temp42_152 () (_ BitVec 64))
(declare-fun var1522109 () (_ BitVec 64))
(declare-fun var5521229 () (_ BitVec 64))
(declare-fun temp42_153 () (_ BitVec 64))
(assert (= temp42_1 #x0000000000000002))
(assert (= var989741 temp42_1))
(assert (= temp42_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp42_2)))
(assert (= temp42_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp42_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp42_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp42_4)))
(assert (= temp42_5 #x0000000000000000))
(assert (= var989775 (ite (= var989774 temp42_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp42_6 #x0000000000000000))
(assert (= var989776 temp42_6))
(assert (= temp42_7 #x0000000000000000))
(assert (= var989810 (ite (= var989773 temp42_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp42_8 #x0000000000000001))
(assert (= var989810 temp42_8))
(assert (= temp42_10 #x0000000000000000))
(assert (= temp42_9 temp42_10))
(assert (= temp42_12 #x0000000000000002))
(assert (= temp42_11 temp42_12))
(assert (= temp42_13 #x0000000000000000))
(assert (= var1387902 temp42_13))
(assert (= temp42_14 #x0000000000000001))
(assert (= var1387923 temp42_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp42_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp42_15)))
(assert (= temp42_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp42_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_17 #x0000000000000000))
(assert (= var1521661 temp42_17))
(assert (= temp42_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp42_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_19 #x0000000000000000))
(assert (= var1521706 temp42_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp42_20 #x0000000000000000))
(assert (= temp42_21 temp42_20))
(assert (= temp42_22 (select ARGNAME_padding_NAMEEND_VAL temp42_21)))
(assert (= temp42_23 #x0000000000000001))
(assert (= temp42_24 temp42_23))
(assert (= temp42_25 (select ARGNAME_padding_NAMEEND_VAL temp42_24)))
(assert (= temp42_26 #x0000000000000002))
(assert (= temp42_27 temp42_26))
(assert (= temp42_28 (select ARGNAME_padding_NAMEEND_VAL temp42_27)))
(assert (= temp42_29 #x0000000000000003))
(assert (= temp42_30 temp42_29))
(assert (= temp42_31 (select ARGNAME_padding_NAMEEND_VAL temp42_30)))
(assert (= temp42_32 #x0000000000000004))
(assert (= temp42_33 temp42_32))
(assert (= temp42_34 (select ARGNAME_padding_NAMEEND_VAL temp42_33)))
(assert (= temp42_35 #x0000000000000005))
(assert (= temp42_36 temp42_35))
(assert (= temp42_37 (select ARGNAME_padding_NAMEEND_VAL temp42_36)))
(assert (= temp42_38 #x0000000000000000))
(assert (= temp42_39 #x0000000000000000))
(assert (= temp42_40 temp42_39))
(assert (= temp42_41 (select ARGNAME_padding_NAMEEND_VAL temp42_40)))
(assert (= temp42_42 #x0000000000000000))
(assert (= temp42_43 #x0000000000000001))
(assert (= temp42_44 temp42_43))
(assert (= temp42_45 (select ARGNAME_padding_NAMEEND_VAL temp42_44)))
(assert (= temp42_46 #x0000000000000000))
(assert (= temp42_47 #x0000000000000002))
(assert (= temp42_48 temp42_47))
(assert (= temp42_49 (select ARGNAME_padding_NAMEEND_VAL temp42_48)))
(assert (= temp42_50 #x0000000000000000))
(assert (= temp42_51 #x0000000000000003))
(assert (= temp42_52 temp42_51))
(assert (= temp42_53 (select ARGNAME_padding_NAMEEND_VAL temp42_52)))
(assert (= temp42_54 #x0000000000000000))
(assert (= temp42_55 #x0000000000000004))
(assert (= temp42_56 temp42_55))
(assert (= temp42_57 (select ARGNAME_padding_NAMEEND_VAL temp42_56)))
(assert (= temp42_58 #x0000000000000000))
(assert (= temp42_59 #x0000000000000005))
(assert (= temp42_60 temp42_59))
(assert (= temp42_61 (select ARGNAME_padding_NAMEEND_VAL temp42_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp42_41 temp42_38)
             (bvslt temp42_45 temp42_42)
             (bvslt temp42_49 temp42_46)
             (bvslt temp42_53 temp42_50)
             (bvslt temp42_57 temp42_54)
             (bvslt temp42_61 temp42_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_62 #x0000000000000000))
(assert (= var2240290 temp42_62))
(assert (= temp42_63 #x0000000000000000))
(assert (= temp42_64 temp42_63))
(assert (= temp42_65 (select ARGNAME_stride_NAMEEND_VAL temp42_64)))
(assert (= temp42_66 #x0000000000000001))
(assert (= temp42_67 temp42_66))
(assert (= temp42_68 (select ARGNAME_stride_NAMEEND_VAL temp42_67)))
(assert (= temp42_69 #x0000000000000002))
(assert (= temp42_70 temp42_69))
(assert (= temp42_71 (select ARGNAME_stride_NAMEEND_VAL temp42_70)))
(assert (= temp42_72 #x0000000000000003))
(assert (= temp42_73 temp42_72))
(assert (= temp42_74 (select ARGNAME_stride_NAMEEND_VAL temp42_73)))
(assert (= temp42_75 #x0000000000000004))
(assert (= temp42_76 temp42_75))
(assert (= temp42_77 (select ARGNAME_stride_NAMEEND_VAL temp42_76)))
(assert (= temp42_78 #x0000000000000005))
(assert (= temp42_79 temp42_78))
(assert (= temp42_80 (select ARGNAME_stride_NAMEEND_VAL temp42_79)))
(assert (= temp42_81 #x0000000000000000))
(assert (= temp42_82 #x0000000000000000))
(assert (= temp42_83 temp42_82))
(assert (= temp42_84 (select ARGNAME_stride_NAMEEND_VAL temp42_83)))
(assert (= temp42_85 #x0000000000000000))
(assert (= temp42_86 #x0000000000000001))
(assert (= temp42_87 temp42_86))
(assert (= temp42_88 (select ARGNAME_stride_NAMEEND_VAL temp42_87)))
(assert (= temp42_89 #x0000000000000000))
(assert (= temp42_90 #x0000000000000002))
(assert (= temp42_91 temp42_90))
(assert (= temp42_92 (select ARGNAME_stride_NAMEEND_VAL temp42_91)))
(assert (= temp42_93 #x0000000000000000))
(assert (= temp42_94 #x0000000000000003))
(assert (= temp42_95 temp42_94))
(assert (= temp42_96 (select ARGNAME_stride_NAMEEND_VAL temp42_95)))
(assert (= temp42_97 #x0000000000000000))
(assert (= temp42_98 #x0000000000000004))
(assert (= temp42_99 temp42_98))
(assert (= temp42_100 (select ARGNAME_stride_NAMEEND_VAL temp42_99)))
(assert (= temp42_101 #x0000000000000000))
(assert (= temp42_102 #x0000000000000005))
(assert (= temp42_103 temp42_102))
(assert (= temp42_104 (select ARGNAME_stride_NAMEEND_VAL temp42_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp42_84 temp42_81)
             (bvsle temp42_88 temp42_85)
             (bvsle temp42_92 temp42_89)
             (bvsle temp42_96 temp42_93)
             (bvsle temp42_100 temp42_97)
             (bvsle temp42_104 temp42_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_105 #x0000000000000000))
(assert (= var2240311 temp42_105))
(assert (= temp42_106 #x0000000000000000))
(assert (= var2228402 temp42_106))
(assert (= temp42_107 #x0000000000000000))
(assert (= temp42_108 temp42_107))
(assert (= temp42_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_108)))
(assert (= temp42_110 #x0000000000000001))
(assert (= temp42_111 temp42_110))
(assert (= temp42_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_111)))
(assert (= temp42_113 #x0000000000000002))
(assert (= temp42_114 temp42_113))
(assert (= temp42_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_114)))
(assert (= temp42_116 #x0000000000000003))
(assert (= temp42_117 temp42_116))
(assert (= temp42_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_117)))
(assert (= temp42_119 #x0000000000000004))
(assert (= temp42_120 temp42_119))
(assert (= temp42_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_120)))
(assert (= temp42_122 #x0000000000000005))
(assert (= temp42_123 temp42_122))
(assert (= temp42_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_123)))
(assert (= temp42_126 var2228402))
(assert (= temp42_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_126)))
(assert (= temp42_125 temp42_127))
(assert (= var2240356
   (ite (bvslt temp42_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_128 #x0000000000000000))
(assert (= var2240356 temp42_128))
(assert (= temp42_129 #x0000000000000000))
(assert (= var2228402 temp42_129))
(assert (= temp42_131 var2228402))
(assert (= temp42_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_131)))
(assert (= temp42_130 temp42_132))
(assert (= var2240378 (bvsmod temp42_130 ARGNAME_groups_NAMEEND)))
(assert (= temp42_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp42_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp42_134 #x0000000000000001))
(assert (= var2240379 temp42_134))
(assert (= var2240398 var2240288))
(assert (= temp42_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp42_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp42_136 #x0000000000000001))
(assert (= var2240399 temp42_136))
(assert (= temp42_137 #x0000000000000001))
(assert (= var2229290 temp42_137))
(assert (= temp42_139 var2229290))
(assert (= temp42_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_139)))
(assert (= temp42_138 temp42_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp42_138)))
(assert (= temp42_141 #x0000000000000000))
(assert (= var2228402 temp42_141))
(assert (= temp42_143 var2228402))
(assert (= temp42_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_143)))
(assert (= temp42_142 temp42_144))
(assert (= temp42_145 #x0000000000000002))
(assert (= var2503529 temp42_145))
(assert (= temp42_146 #x0000000000000001))
(assert (= var2240569 temp42_146))
(assert (= temp42_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp42_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_148 #x0000000000000001))
(assert (= var1521778 temp42_148))
(assert (= temp42_149 #x0000000000000001))
(assert (= var1521908 temp42_149))
(assert (= var4010473 var1521908))
(assert (= temp42_150 #x0000000000000000))
(assert (= var4210495 temp42_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp42_151 #x0000000000000002))
(assert (= var4339331 temp42_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4796816 var1521921))
(assert (= var1522108 var1521633))
(assert (= temp42_152 #x0000000000000000))
(assert (= var1522109
   (ite (distinct var1522108 temp42_152) #x0000000000000001 #x0000000000000000)))
(assert (= var5521229 var1522109))
(assert (= temp42_153 #x0000000000000001))
(assert (= var1521778 temp42_153))
(model-add temp42_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp42_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp42_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp42_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp42_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp42_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






