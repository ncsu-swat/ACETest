(declare-fun temp367_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp367_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp367_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp367_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp367_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp367_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp367_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp367_8 () (_ BitVec 64))
(declare-fun temp367_10 () (_ BitVec 64))
(declare-fun temp367_9 () (_ BitVec 64))
(declare-fun temp367_12 () (_ BitVec 64))
(declare-fun temp367_11 () (_ BitVec 64))
(declare-fun temp367_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp367_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp367_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp367_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp367_17 () (_ BitVec 64))
(declare-fun temp367_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp367_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp367_20 () (_ BitVec 64))
(declare-fun temp367_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp367_22 () (_ BitVec 64))
(declare-fun temp367_23 () (_ BitVec 64))
(declare-fun temp367_24 () (_ BitVec 64))
(declare-fun temp367_25 () (_ BitVec 64))
(declare-fun temp367_26 () (_ BitVec 64))
(declare-fun temp367_27 () (_ BitVec 64))
(declare-fun temp367_28 () (_ BitVec 64))
(declare-fun temp367_29 () (_ BitVec 64))
(declare-fun temp367_30 () (_ BitVec 64))
(declare-fun temp367_31 () (_ BitVec 64))
(declare-fun temp367_32 () (_ BitVec 64))
(declare-fun temp367_33 () (_ BitVec 64))
(declare-fun temp367_34 () (_ BitVec 64))
(declare-fun temp367_35 () (_ BitVec 64))
(declare-fun temp367_36 () (_ BitVec 64))
(declare-fun temp367_37 () (_ BitVec 64))
(declare-fun temp367_38 () (_ BitVec 64))
(declare-fun temp367_39 () (_ BitVec 64))
(declare-fun temp367_40 () (_ BitVec 64))
(declare-fun temp367_41 () (_ BitVec 64))
(declare-fun temp367_42 () (_ BitVec 64))
(declare-fun temp367_43 () (_ BitVec 64))
(declare-fun temp367_44 () (_ BitVec 64))
(declare-fun temp367_45 () (_ BitVec 64))
(declare-fun temp367_46 () (_ BitVec 64))
(declare-fun temp367_47 () (_ BitVec 64))
(declare-fun temp367_48 () (_ BitVec 64))
(declare-fun temp367_49 () (_ BitVec 64))
(declare-fun temp367_50 () (_ BitVec 64))
(declare-fun temp367_51 () (_ BitVec 64))
(declare-fun temp367_52 () (_ BitVec 64))
(declare-fun temp367_53 () (_ BitVec 64))
(declare-fun temp367_54 () (_ BitVec 64))
(declare-fun temp367_55 () (_ BitVec 64))
(declare-fun temp367_56 () (_ BitVec 64))
(declare-fun temp367_57 () (_ BitVec 64))
(declare-fun temp367_58 () (_ BitVec 64))
(declare-fun temp367_59 () (_ BitVec 64))
(declare-fun temp367_60 () (_ BitVec 64))
(declare-fun temp367_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp367_62 () (_ BitVec 64))
(declare-fun temp367_63 () (_ BitVec 64))
(declare-fun temp367_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp367_65 () (_ BitVec 64))
(declare-fun temp367_66 () (_ BitVec 64))
(declare-fun temp367_67 () (_ BitVec 64))
(declare-fun temp367_68 () (_ BitVec 64))
(declare-fun temp367_69 () (_ BitVec 64))
(declare-fun temp367_70 () (_ BitVec 64))
(declare-fun temp367_71 () (_ BitVec 64))
(declare-fun temp367_72 () (_ BitVec 64))
(declare-fun temp367_73 () (_ BitVec 64))
(declare-fun temp367_74 () (_ BitVec 64))
(declare-fun temp367_75 () (_ BitVec 64))
(declare-fun temp367_76 () (_ BitVec 64))
(declare-fun temp367_77 () (_ BitVec 64))
(declare-fun temp367_78 () (_ BitVec 64))
(declare-fun temp367_79 () (_ BitVec 64))
(declare-fun temp367_80 () (_ BitVec 64))
(declare-fun temp367_81 () (_ BitVec 64))
(declare-fun temp367_82 () (_ BitVec 64))
(declare-fun temp367_83 () (_ BitVec 64))
(declare-fun temp367_84 () (_ BitVec 64))
(declare-fun temp367_85 () (_ BitVec 64))
(declare-fun temp367_86 () (_ BitVec 64))
(declare-fun temp367_87 () (_ BitVec 64))
(declare-fun temp367_88 () (_ BitVec 64))
(declare-fun temp367_89 () (_ BitVec 64))
(declare-fun temp367_90 () (_ BitVec 64))
(declare-fun temp367_91 () (_ BitVec 64))
(declare-fun temp367_92 () (_ BitVec 64))
(declare-fun temp367_93 () (_ BitVec 64))
(declare-fun temp367_94 () (_ BitVec 64))
(declare-fun temp367_95 () (_ BitVec 64))
(declare-fun temp367_96 () (_ BitVec 64))
(declare-fun temp367_97 () (_ BitVec 64))
(declare-fun temp367_98 () (_ BitVec 64))
(declare-fun temp367_99 () (_ BitVec 64))
(declare-fun temp367_100 () (_ BitVec 64))
(declare-fun temp367_101 () (_ BitVec 64))
(declare-fun temp367_102 () (_ BitVec 64))
(declare-fun temp367_103 () (_ BitVec 64))
(declare-fun temp367_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp367_105 () (_ BitVec 64))
(declare-fun temp367_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp367_107 () (_ BitVec 64))
(declare-fun temp367_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp367_109 () (_ BitVec 64))
(declare-fun temp367_110 () (_ BitVec 64))
(declare-fun temp367_111 () (_ BitVec 64))
(declare-fun temp367_112 () (_ BitVec 64))
(declare-fun temp367_113 () (_ BitVec 64))
(declare-fun temp367_114 () (_ BitVec 64))
(declare-fun temp367_115 () (_ BitVec 64))
(declare-fun temp367_116 () (_ BitVec 64))
(declare-fun temp367_117 () (_ BitVec 64))
(declare-fun temp367_118 () (_ BitVec 64))
(declare-fun temp367_119 () (_ BitVec 64))
(declare-fun temp367_120 () (_ BitVec 64))
(declare-fun temp367_121 () (_ BitVec 64))
(declare-fun temp367_122 () (_ BitVec 64))
(declare-fun temp367_123 () (_ BitVec 64))
(declare-fun temp367_124 () (_ BitVec 64))
(declare-fun temp367_126 () (_ BitVec 64))
(declare-fun temp367_127 () (_ BitVec 64))
(declare-fun temp367_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp367_128 () (_ BitVec 64))
(declare-fun temp367_129 () (_ BitVec 64))
(declare-fun temp367_131 () (_ BitVec 64))
(declare-fun temp367_132 () (_ BitVec 64))
(declare-fun temp367_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp367_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp367_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp367_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp367_136 () (_ BitVec 64))
(declare-fun temp367_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp367_139 () (_ BitVec 64))
(declare-fun temp367_140 () (_ BitVec 64))
(declare-fun temp367_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp367_141 () (_ BitVec 64))
(declare-fun temp367_143 () (_ BitVec 64))
(declare-fun temp367_144 () (_ BitVec 64))
(declare-fun temp367_142 () (_ BitVec 64))
(declare-fun temp367_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp367_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp367_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp367_148 () (_ BitVec 64))
(declare-fun temp367_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp367_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp367_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun var5845392 () (_ BitVec 64))
(declare-fun temp367_152 () (_ BitVec 64))
(declare-fun var6173072 () (_ BitVec 64))
(declare-fun temp367_153 () (_ BitVec 64))
(assert (= temp367_1 #x0000000000000002))
(assert (= var989741 temp367_1))
(assert (= temp367_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp367_2)))
(assert (= temp367_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp367_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp367_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp367_4)))
(assert (= temp367_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp367_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp367_6 #x0000000000000000))
(assert (= var989776 temp367_6))
(assert (= temp367_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp367_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp367_8 #x0000000000000001))
(assert (= var989810 temp367_8))
(assert (= temp367_10 #x0000000000000000))
(assert (= temp367_9 temp367_10))
(assert (= temp367_12 #x0000000000000002))
(assert (= temp367_11 temp367_12))
(assert (= temp367_13 #x0000000000000000))
(assert (= var1387902 temp367_13))
(assert (= temp367_14 #x0000000000000001))
(assert (= var1387923 temp367_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp367_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp367_15)))
(assert (= temp367_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp367_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp367_17 #x0000000000000000))
(assert (= var1521661 temp367_17))
(assert (= temp367_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp367_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp367_19 #x0000000000000000))
(assert (= var1521706 temp367_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp367_20 #x0000000000000000))
(assert (= temp367_21 temp367_20))
(assert (= temp367_22 (select ARGNAME_padding_NAMEEND_VAL temp367_21)))
(assert (= temp367_23 #x0000000000000001))
(assert (= temp367_24 temp367_23))
(assert (= temp367_25 (select ARGNAME_padding_NAMEEND_VAL temp367_24)))
(assert (= temp367_26 #x0000000000000002))
(assert (= temp367_27 temp367_26))
(assert (= temp367_28 (select ARGNAME_padding_NAMEEND_VAL temp367_27)))
(assert (= temp367_29 #x0000000000000003))
(assert (= temp367_30 temp367_29))
(assert (= temp367_31 (select ARGNAME_padding_NAMEEND_VAL temp367_30)))
(assert (= temp367_32 #x0000000000000004))
(assert (= temp367_33 temp367_32))
(assert (= temp367_34 (select ARGNAME_padding_NAMEEND_VAL temp367_33)))
(assert (= temp367_35 #x0000000000000005))
(assert (= temp367_36 temp367_35))
(assert (= temp367_37 (select ARGNAME_padding_NAMEEND_VAL temp367_36)))
(assert (= temp367_38 #x0000000000000000))
(assert (= temp367_39 #x0000000000000000))
(assert (= temp367_40 temp367_39))
(assert (= temp367_41 (select ARGNAME_padding_NAMEEND_VAL temp367_40)))
(assert (= temp367_42 #x0000000000000000))
(assert (= temp367_43 #x0000000000000001))
(assert (= temp367_44 temp367_43))
(assert (= temp367_45 (select ARGNAME_padding_NAMEEND_VAL temp367_44)))
(assert (= temp367_46 #x0000000000000000))
(assert (= temp367_47 #x0000000000000002))
(assert (= temp367_48 temp367_47))
(assert (= temp367_49 (select ARGNAME_padding_NAMEEND_VAL temp367_48)))
(assert (= temp367_50 #x0000000000000000))
(assert (= temp367_51 #x0000000000000003))
(assert (= temp367_52 temp367_51))
(assert (= temp367_53 (select ARGNAME_padding_NAMEEND_VAL temp367_52)))
(assert (= temp367_54 #x0000000000000000))
(assert (= temp367_55 #x0000000000000004))
(assert (= temp367_56 temp367_55))
(assert (= temp367_57 (select ARGNAME_padding_NAMEEND_VAL temp367_56)))
(assert (= temp367_58 #x0000000000000000))
(assert (= temp367_59 #x0000000000000005))
(assert (= temp367_60 temp367_59))
(assert (= temp367_61 (select ARGNAME_padding_NAMEEND_VAL temp367_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp367_41 temp367_38)
             (bvslt temp367_45 temp367_42)
             (bvslt temp367_49 temp367_46)
             (bvslt temp367_53 temp367_50)
             (bvslt temp367_57 temp367_54)
             (bvslt temp367_61 temp367_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp367_62 #x0000000000000000))
(assert (= var2240290 temp367_62))
(assert (= temp367_63 #x0000000000000000))
(assert (= temp367_64 temp367_63))
(assert (= temp367_65 (select ARGNAME_stride_NAMEEND_VAL temp367_64)))
(assert (= temp367_66 #x0000000000000001))
(assert (= temp367_67 temp367_66))
(assert (= temp367_68 (select ARGNAME_stride_NAMEEND_VAL temp367_67)))
(assert (= temp367_69 #x0000000000000002))
(assert (= temp367_70 temp367_69))
(assert (= temp367_71 (select ARGNAME_stride_NAMEEND_VAL temp367_70)))
(assert (= temp367_72 #x0000000000000003))
(assert (= temp367_73 temp367_72))
(assert (= temp367_74 (select ARGNAME_stride_NAMEEND_VAL temp367_73)))
(assert (= temp367_75 #x0000000000000004))
(assert (= temp367_76 temp367_75))
(assert (= temp367_77 (select ARGNAME_stride_NAMEEND_VAL temp367_76)))
(assert (= temp367_78 #x0000000000000005))
(assert (= temp367_79 temp367_78))
(assert (= temp367_80 (select ARGNAME_stride_NAMEEND_VAL temp367_79)))
(assert (= temp367_81 #x0000000000000000))
(assert (= temp367_82 #x0000000000000000))
(assert (= temp367_83 temp367_82))
(assert (= temp367_84 (select ARGNAME_stride_NAMEEND_VAL temp367_83)))
(assert (= temp367_85 #x0000000000000000))
(assert (= temp367_86 #x0000000000000001))
(assert (= temp367_87 temp367_86))
(assert (= temp367_88 (select ARGNAME_stride_NAMEEND_VAL temp367_87)))
(assert (= temp367_89 #x0000000000000000))
(assert (= temp367_90 #x0000000000000002))
(assert (= temp367_91 temp367_90))
(assert (= temp367_92 (select ARGNAME_stride_NAMEEND_VAL temp367_91)))
(assert (= temp367_93 #x0000000000000000))
(assert (= temp367_94 #x0000000000000003))
(assert (= temp367_95 temp367_94))
(assert (= temp367_96 (select ARGNAME_stride_NAMEEND_VAL temp367_95)))
(assert (= temp367_97 #x0000000000000000))
(assert (= temp367_98 #x0000000000000004))
(assert (= temp367_99 temp367_98))
(assert (= temp367_100 (select ARGNAME_stride_NAMEEND_VAL temp367_99)))
(assert (= temp367_101 #x0000000000000000))
(assert (= temp367_102 #x0000000000000005))
(assert (= temp367_103 temp367_102))
(assert (= temp367_104 (select ARGNAME_stride_NAMEEND_VAL temp367_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp367_84 temp367_81)
             (bvsle temp367_88 temp367_85)
             (bvsle temp367_92 temp367_89)
             (bvsle temp367_96 temp367_93)
             (bvsle temp367_100 temp367_97)
             (bvsle temp367_104 temp367_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp367_105 #x0000000000000000))
(assert (= var2240311 temp367_105))
(assert (= temp367_106 #x0000000000000000))
(assert (= var2228402 temp367_106))
(assert (= temp367_107 #x0000000000000000))
(assert (= temp367_108 temp367_107))
(assert (= temp367_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp367_108)))
(assert (= temp367_110 #x0000000000000001))
(assert (= temp367_111 temp367_110))
(assert (= temp367_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp367_111)))
(assert (= temp367_113 #x0000000000000002))
(assert (= temp367_114 temp367_113))
(assert (= temp367_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp367_114)))
(assert (= temp367_116 #x0000000000000003))
(assert (= temp367_117 temp367_116))
(assert (= temp367_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp367_117)))
(assert (= temp367_119 #x0000000000000004))
(assert (= temp367_120 temp367_119))
(assert (= temp367_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp367_120)))
(assert (= temp367_122 #x0000000000000005))
(assert (= temp367_123 temp367_122))
(assert (= temp367_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp367_123)))
(assert (= temp367_126 var2228402))
(assert (= temp367_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp367_126)))
(assert (= temp367_125 temp367_127))
(assert (= var2240356
   (ite (bvslt temp367_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp367_128 #x0000000000000000))
(assert (= var2240356 temp367_128))
(assert (= temp367_129 #x0000000000000000))
(assert (= var2228402 temp367_129))
(assert (= temp367_131 var2228402))
(assert (= temp367_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp367_131)))
(assert (= temp367_130 temp367_132))
(assert (= var2240378 (bvsmod temp367_130 ARGNAME_groups_NAMEEND)))
(assert (= temp367_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp367_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp367_134 #x0000000000000001))
(assert (= var2240379 temp367_134))
(assert (= var2240398 var2240288))
(assert (= temp367_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp367_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp367_136 #x0000000000000001))
(assert (= var2240399 temp367_136))
(assert (= temp367_137 #x0000000000000001))
(assert (= var2229290 temp367_137))
(assert (= temp367_139 var2229290))
(assert (= temp367_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp367_139)))
(assert (= temp367_138 temp367_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp367_138)))
(assert (= temp367_141 #x0000000000000000))
(assert (= var2228402 temp367_141))
(assert (= temp367_143 var2228402))
(assert (= temp367_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp367_143)))
(assert (= temp367_142 temp367_144))
(assert (= temp367_145 #x0000000000000002))
(assert (= var2503529 temp367_145))
(assert (= temp367_146 #x0000000000000001))
(assert (= var2240569 temp367_146))
(assert (= temp367_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp367_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp367_148 #x0000000000000001))
(assert (= var1521778 temp367_148))
(assert (= temp367_149 #x0000000000000001))
(assert (= var1521908 temp367_149))
(assert (= var4010473 var1521908))
(assert (= temp367_150 #x0000000000000000))
(assert (= var4210495 temp367_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp367_151 #x0000000000000002))
(assert (= var4339331 temp367_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var5583248 var1521921))
(assert (= var5845392 var1521921))
(assert (= temp367_152 #x0000000000000000))
(assert (= var6173072 temp367_152))
(assert (= temp367_153 #x0000000000000001))
(assert (= var1521778 temp367_153))
(model-add temp367_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp367_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp367_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp367_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp367_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp367_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






