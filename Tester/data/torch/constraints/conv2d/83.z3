(declare-fun temp109_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp109_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp109_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp109_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp109_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp109_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp109_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp109_8 () (_ BitVec 64))
(declare-fun temp109_10 () (_ BitVec 64))
(declare-fun temp109_9 () (_ BitVec 64))
(declare-fun temp109_12 () (_ BitVec 64))
(declare-fun temp109_11 () (_ BitVec 64))
(declare-fun temp109_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp109_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp109_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp109_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp109_17 () (_ BitVec 64))
(declare-fun temp109_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp109_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp109_20 () (_ BitVec 64))
(declare-fun temp109_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp109_22 () (_ BitVec 64))
(declare-fun temp109_23 () (_ BitVec 64))
(declare-fun temp109_24 () (_ BitVec 64))
(declare-fun temp109_25 () (_ BitVec 64))
(declare-fun temp109_26 () (_ BitVec 64))
(declare-fun temp109_27 () (_ BitVec 64))
(declare-fun temp109_28 () (_ BitVec 64))
(declare-fun temp109_29 () (_ BitVec 64))
(declare-fun temp109_30 () (_ BitVec 64))
(declare-fun temp109_31 () (_ BitVec 64))
(declare-fun temp109_32 () (_ BitVec 64))
(declare-fun temp109_33 () (_ BitVec 64))
(declare-fun temp109_34 () (_ BitVec 64))
(declare-fun temp109_35 () (_ BitVec 64))
(declare-fun temp109_36 () (_ BitVec 64))
(declare-fun temp109_37 () (_ BitVec 64))
(declare-fun temp109_38 () (_ BitVec 64))
(declare-fun temp109_39 () (_ BitVec 64))
(declare-fun temp109_40 () (_ BitVec 64))
(declare-fun temp109_41 () (_ BitVec 64))
(declare-fun temp109_42 () (_ BitVec 64))
(declare-fun temp109_43 () (_ BitVec 64))
(declare-fun temp109_44 () (_ BitVec 64))
(declare-fun temp109_45 () (_ BitVec 64))
(declare-fun temp109_46 () (_ BitVec 64))
(declare-fun temp109_47 () (_ BitVec 64))
(declare-fun temp109_48 () (_ BitVec 64))
(declare-fun temp109_49 () (_ BitVec 64))
(declare-fun temp109_50 () (_ BitVec 64))
(declare-fun temp109_51 () (_ BitVec 64))
(declare-fun temp109_52 () (_ BitVec 64))
(declare-fun temp109_53 () (_ BitVec 64))
(declare-fun temp109_54 () (_ BitVec 64))
(declare-fun temp109_55 () (_ BitVec 64))
(declare-fun temp109_56 () (_ BitVec 64))
(declare-fun temp109_57 () (_ BitVec 64))
(declare-fun temp109_58 () (_ BitVec 64))
(declare-fun temp109_59 () (_ BitVec 64))
(declare-fun temp109_60 () (_ BitVec 64))
(declare-fun temp109_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp109_62 () (_ BitVec 64))
(declare-fun temp109_63 () (_ BitVec 64))
(declare-fun temp109_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp109_65 () (_ BitVec 64))
(declare-fun temp109_66 () (_ BitVec 64))
(declare-fun temp109_67 () (_ BitVec 64))
(declare-fun temp109_68 () (_ BitVec 64))
(declare-fun temp109_69 () (_ BitVec 64))
(declare-fun temp109_70 () (_ BitVec 64))
(declare-fun temp109_71 () (_ BitVec 64))
(declare-fun temp109_72 () (_ BitVec 64))
(declare-fun temp109_73 () (_ BitVec 64))
(declare-fun temp109_74 () (_ BitVec 64))
(declare-fun temp109_75 () (_ BitVec 64))
(declare-fun temp109_76 () (_ BitVec 64))
(declare-fun temp109_77 () (_ BitVec 64))
(declare-fun temp109_78 () (_ BitVec 64))
(declare-fun temp109_79 () (_ BitVec 64))
(declare-fun temp109_80 () (_ BitVec 64))
(declare-fun temp109_81 () (_ BitVec 64))
(declare-fun temp109_82 () (_ BitVec 64))
(declare-fun temp109_83 () (_ BitVec 64))
(declare-fun temp109_84 () (_ BitVec 64))
(declare-fun temp109_85 () (_ BitVec 64))
(declare-fun temp109_86 () (_ BitVec 64))
(declare-fun temp109_87 () (_ BitVec 64))
(declare-fun temp109_88 () (_ BitVec 64))
(declare-fun temp109_89 () (_ BitVec 64))
(declare-fun temp109_90 () (_ BitVec 64))
(declare-fun temp109_91 () (_ BitVec 64))
(declare-fun temp109_92 () (_ BitVec 64))
(declare-fun temp109_93 () (_ BitVec 64))
(declare-fun temp109_94 () (_ BitVec 64))
(declare-fun temp109_95 () (_ BitVec 64))
(declare-fun temp109_96 () (_ BitVec 64))
(declare-fun temp109_97 () (_ BitVec 64))
(declare-fun temp109_98 () (_ BitVec 64))
(declare-fun temp109_99 () (_ BitVec 64))
(declare-fun temp109_100 () (_ BitVec 64))
(declare-fun temp109_101 () (_ BitVec 64))
(declare-fun temp109_102 () (_ BitVec 64))
(declare-fun temp109_103 () (_ BitVec 64))
(declare-fun temp109_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp109_105 () (_ BitVec 64))
(declare-fun temp109_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp109_107 () (_ BitVec 64))
(declare-fun temp109_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp109_109 () (_ BitVec 64))
(declare-fun temp109_110 () (_ BitVec 64))
(declare-fun temp109_111 () (_ BitVec 64))
(declare-fun temp109_112 () (_ BitVec 64))
(declare-fun temp109_113 () (_ BitVec 64))
(declare-fun temp109_114 () (_ BitVec 64))
(declare-fun temp109_115 () (_ BitVec 64))
(declare-fun temp109_116 () (_ BitVec 64))
(declare-fun temp109_117 () (_ BitVec 64))
(declare-fun temp109_118 () (_ BitVec 64))
(declare-fun temp109_119 () (_ BitVec 64))
(declare-fun temp109_120 () (_ BitVec 64))
(declare-fun temp109_121 () (_ BitVec 64))
(declare-fun temp109_122 () (_ BitVec 64))
(declare-fun temp109_123 () (_ BitVec 64))
(declare-fun temp109_124 () (_ BitVec 64))
(declare-fun temp109_126 () (_ BitVec 64))
(declare-fun temp109_127 () (_ BitVec 64))
(declare-fun temp109_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp109_128 () (_ BitVec 64))
(declare-fun temp109_129 () (_ BitVec 64))
(declare-fun temp109_131 () (_ BitVec 64))
(declare-fun temp109_132 () (_ BitVec 64))
(declare-fun temp109_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp109_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp109_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp109_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp109_136 () (_ BitVec 64))
(declare-fun temp109_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp109_139 () (_ BitVec 64))
(declare-fun temp109_140 () (_ BitVec 64))
(declare-fun temp109_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp109_141 () (_ BitVec 64))
(declare-fun temp109_143 () (_ BitVec 64))
(declare-fun temp109_144 () (_ BitVec 64))
(declare-fun temp109_142 () (_ BitVec 64))
(declare-fun temp109_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp109_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp109_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp109_148 () (_ BitVec 64))
(declare-fun temp109_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp109_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp109_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp109_153 () (_ BitVec 64))
(declare-fun temp109_152 () (_ BitVec 64))
(declare-fun temp109_155 () (_ BitVec 64))
(declare-fun temp109_154 () (_ BitVec 64))
(declare-fun temp109_156 () (_ BitVec 64))
(assert (= temp109_1 #x0000000000000002))
(assert (= var989741 temp109_1))
(assert (= temp109_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp109_2)))
(assert (= temp109_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp109_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp109_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp109_4)))
(assert (= temp109_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp109_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp109_6 #x0000000000000000))
(assert (= var989776 temp109_6))
(assert (= temp109_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp109_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp109_8 #x0000000000000001))
(assert (= var989810 temp109_8))
(assert (= temp109_10 #x0000000000000000))
(assert (= temp109_9 temp109_10))
(assert (= temp109_12 #x0000000000000002))
(assert (= temp109_11 temp109_12))
(assert (= temp109_13 #x0000000000000000))
(assert (= var1387902 temp109_13))
(assert (= temp109_14 #x0000000000000001))
(assert (= var1387923 temp109_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp109_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp109_15)))
(assert (= temp109_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp109_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp109_17 #x0000000000000000))
(assert (= var1521661 temp109_17))
(assert (= temp109_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp109_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp109_19 #x0000000000000000))
(assert (= var1521706 temp109_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp109_20 #x0000000000000000))
(assert (= temp109_21 temp109_20))
(assert (= temp109_22 (select ARGNAME_padding_NAMEEND_VAL temp109_21)))
(assert (= temp109_23 #x0000000000000001))
(assert (= temp109_24 temp109_23))
(assert (= temp109_25 (select ARGNAME_padding_NAMEEND_VAL temp109_24)))
(assert (= temp109_26 #x0000000000000002))
(assert (= temp109_27 temp109_26))
(assert (= temp109_28 (select ARGNAME_padding_NAMEEND_VAL temp109_27)))
(assert (= temp109_29 #x0000000000000003))
(assert (= temp109_30 temp109_29))
(assert (= temp109_31 (select ARGNAME_padding_NAMEEND_VAL temp109_30)))
(assert (= temp109_32 #x0000000000000004))
(assert (= temp109_33 temp109_32))
(assert (= temp109_34 (select ARGNAME_padding_NAMEEND_VAL temp109_33)))
(assert (= temp109_35 #x0000000000000005))
(assert (= temp109_36 temp109_35))
(assert (= temp109_37 (select ARGNAME_padding_NAMEEND_VAL temp109_36)))
(assert (= temp109_38 #x0000000000000000))
(assert (= temp109_39 #x0000000000000000))
(assert (= temp109_40 temp109_39))
(assert (= temp109_41 (select ARGNAME_padding_NAMEEND_VAL temp109_40)))
(assert (= temp109_42 #x0000000000000000))
(assert (= temp109_43 #x0000000000000001))
(assert (= temp109_44 temp109_43))
(assert (= temp109_45 (select ARGNAME_padding_NAMEEND_VAL temp109_44)))
(assert (= temp109_46 #x0000000000000000))
(assert (= temp109_47 #x0000000000000002))
(assert (= temp109_48 temp109_47))
(assert (= temp109_49 (select ARGNAME_padding_NAMEEND_VAL temp109_48)))
(assert (= temp109_50 #x0000000000000000))
(assert (= temp109_51 #x0000000000000003))
(assert (= temp109_52 temp109_51))
(assert (= temp109_53 (select ARGNAME_padding_NAMEEND_VAL temp109_52)))
(assert (= temp109_54 #x0000000000000000))
(assert (= temp109_55 #x0000000000000004))
(assert (= temp109_56 temp109_55))
(assert (= temp109_57 (select ARGNAME_padding_NAMEEND_VAL temp109_56)))
(assert (= temp109_58 #x0000000000000000))
(assert (= temp109_59 #x0000000000000005))
(assert (= temp109_60 temp109_59))
(assert (= temp109_61 (select ARGNAME_padding_NAMEEND_VAL temp109_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp109_41 temp109_38)
             (bvslt temp109_45 temp109_42)
             (bvslt temp109_49 temp109_46)
             (bvslt temp109_53 temp109_50)
             (bvslt temp109_57 temp109_54)
             (bvslt temp109_61 temp109_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp109_62 #x0000000000000000))
(assert (= var2240290 temp109_62))
(assert (= temp109_63 #x0000000000000000))
(assert (= temp109_64 temp109_63))
(assert (= temp109_65 (select ARGNAME_stride_NAMEEND_VAL temp109_64)))
(assert (= temp109_66 #x0000000000000001))
(assert (= temp109_67 temp109_66))
(assert (= temp109_68 (select ARGNAME_stride_NAMEEND_VAL temp109_67)))
(assert (= temp109_69 #x0000000000000002))
(assert (= temp109_70 temp109_69))
(assert (= temp109_71 (select ARGNAME_stride_NAMEEND_VAL temp109_70)))
(assert (= temp109_72 #x0000000000000003))
(assert (= temp109_73 temp109_72))
(assert (= temp109_74 (select ARGNAME_stride_NAMEEND_VAL temp109_73)))
(assert (= temp109_75 #x0000000000000004))
(assert (= temp109_76 temp109_75))
(assert (= temp109_77 (select ARGNAME_stride_NAMEEND_VAL temp109_76)))
(assert (= temp109_78 #x0000000000000005))
(assert (= temp109_79 temp109_78))
(assert (= temp109_80 (select ARGNAME_stride_NAMEEND_VAL temp109_79)))
(assert (= temp109_81 #x0000000000000000))
(assert (= temp109_82 #x0000000000000000))
(assert (= temp109_83 temp109_82))
(assert (= temp109_84 (select ARGNAME_stride_NAMEEND_VAL temp109_83)))
(assert (= temp109_85 #x0000000000000000))
(assert (= temp109_86 #x0000000000000001))
(assert (= temp109_87 temp109_86))
(assert (= temp109_88 (select ARGNAME_stride_NAMEEND_VAL temp109_87)))
(assert (= temp109_89 #x0000000000000000))
(assert (= temp109_90 #x0000000000000002))
(assert (= temp109_91 temp109_90))
(assert (= temp109_92 (select ARGNAME_stride_NAMEEND_VAL temp109_91)))
(assert (= temp109_93 #x0000000000000000))
(assert (= temp109_94 #x0000000000000003))
(assert (= temp109_95 temp109_94))
(assert (= temp109_96 (select ARGNAME_stride_NAMEEND_VAL temp109_95)))
(assert (= temp109_97 #x0000000000000000))
(assert (= temp109_98 #x0000000000000004))
(assert (= temp109_99 temp109_98))
(assert (= temp109_100 (select ARGNAME_stride_NAMEEND_VAL temp109_99)))
(assert (= temp109_101 #x0000000000000000))
(assert (= temp109_102 #x0000000000000005))
(assert (= temp109_103 temp109_102))
(assert (= temp109_104 (select ARGNAME_stride_NAMEEND_VAL temp109_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp109_84 temp109_81)
             (bvsle temp109_88 temp109_85)
             (bvsle temp109_92 temp109_89)
             (bvsle temp109_96 temp109_93)
             (bvsle temp109_100 temp109_97)
             (bvsle temp109_104 temp109_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp109_105 #x0000000000000000))
(assert (= var2240311 temp109_105))
(assert (= temp109_106 #x0000000000000000))
(assert (= var2228402 temp109_106))
(assert (= temp109_107 #x0000000000000000))
(assert (= temp109_108 temp109_107))
(assert (= temp109_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp109_108)))
(assert (= temp109_110 #x0000000000000001))
(assert (= temp109_111 temp109_110))
(assert (= temp109_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp109_111)))
(assert (= temp109_113 #x0000000000000002))
(assert (= temp109_114 temp109_113))
(assert (= temp109_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp109_114)))
(assert (= temp109_116 #x0000000000000003))
(assert (= temp109_117 temp109_116))
(assert (= temp109_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp109_117)))
(assert (= temp109_119 #x0000000000000004))
(assert (= temp109_120 temp109_119))
(assert (= temp109_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp109_120)))
(assert (= temp109_122 #x0000000000000005))
(assert (= temp109_123 temp109_122))
(assert (= temp109_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp109_123)))
(assert (= temp109_126 var2228402))
(assert (= temp109_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp109_126)))
(assert (= temp109_125 temp109_127))
(assert (= var2240356
   (ite (bvslt temp109_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp109_128 #x0000000000000000))
(assert (= var2240356 temp109_128))
(assert (= temp109_129 #x0000000000000000))
(assert (= var2228402 temp109_129))
(assert (= temp109_131 var2228402))
(assert (= temp109_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp109_131)))
(assert (= temp109_130 temp109_132))
(assert (= var2240378 (bvsmod temp109_130 ARGNAME_groups_NAMEEND)))
(assert (= temp109_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp109_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp109_134 #x0000000000000001))
(assert (= var2240379 temp109_134))
(assert (= var2240398 var2240288))
(assert (= temp109_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp109_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp109_136 #x0000000000000001))
(assert (= var2240399 temp109_136))
(assert (= temp109_137 #x0000000000000001))
(assert (= var2229290 temp109_137))
(assert (= temp109_139 var2229290))
(assert (= temp109_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp109_139)))
(assert (= temp109_138 temp109_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp109_138)))
(assert (= temp109_141 #x0000000000000000))
(assert (= var2228402 temp109_141))
(assert (= temp109_143 var2228402))
(assert (= temp109_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp109_143)))
(assert (= temp109_142 temp109_144))
(assert (= temp109_145 #x0000000000000002))
(assert (= var2503529 temp109_145))
(assert (= temp109_146 #x0000000000000001))
(assert (= var2240569 temp109_146))
(assert (= temp109_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp109_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp109_148 #x0000000000000001))
(assert (= var1521778 temp109_148))
(assert (= temp109_149 #x0000000000000001))
(assert (= var1521908 temp109_149))
(assert (= var4010473 var1521908))
(assert (= temp109_150 #x0000000000000000))
(assert (= var4210495 temp109_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp109_151 #x0000000000000002))
(assert (= var4339331 temp109_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp109_153 #xffffffffffffffff))
(assert (= temp109_152 temp109_153))
(assert (= temp109_155 #xffffffffffffffff))
(assert (= temp109_154 temp109_155))
(assert (= temp109_156 #x0000000000000001))
(assert (= var1521778 temp109_156))
(model-add temp109_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp109_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp109_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp109_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp109_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp109_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






