(declare-fun temp95_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp95_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp95_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp95_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp95_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp95_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp95_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp95_8 () (_ BitVec 64))
(declare-fun temp95_10 () (_ BitVec 64))
(declare-fun temp95_9 () (_ BitVec 64))
(declare-fun temp95_12 () (_ BitVec 64))
(declare-fun temp95_11 () (_ BitVec 64))
(declare-fun temp95_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp95_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp95_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp95_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp95_17 () (_ BitVec 64))
(declare-fun temp95_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp95_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp95_20 () (_ BitVec 64))
(declare-fun temp95_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp95_22 () (_ BitVec 64))
(declare-fun temp95_23 () (_ BitVec 64))
(declare-fun temp95_24 () (_ BitVec 64))
(declare-fun temp95_25 () (_ BitVec 64))
(declare-fun temp95_26 () (_ BitVec 64))
(declare-fun temp95_27 () (_ BitVec 64))
(declare-fun temp95_28 () (_ BitVec 64))
(declare-fun temp95_29 () (_ BitVec 64))
(declare-fun temp95_30 () (_ BitVec 64))
(declare-fun temp95_31 () (_ BitVec 64))
(declare-fun temp95_32 () (_ BitVec 64))
(declare-fun temp95_33 () (_ BitVec 64))
(declare-fun temp95_34 () (_ BitVec 64))
(declare-fun temp95_35 () (_ BitVec 64))
(declare-fun temp95_36 () (_ BitVec 64))
(declare-fun temp95_37 () (_ BitVec 64))
(declare-fun temp95_38 () (_ BitVec 64))
(declare-fun temp95_39 () (_ BitVec 64))
(declare-fun temp95_40 () (_ BitVec 64))
(declare-fun temp95_41 () (_ BitVec 64))
(declare-fun temp95_42 () (_ BitVec 64))
(declare-fun temp95_43 () (_ BitVec 64))
(declare-fun temp95_44 () (_ BitVec 64))
(declare-fun temp95_45 () (_ BitVec 64))
(declare-fun temp95_46 () (_ BitVec 64))
(declare-fun temp95_47 () (_ BitVec 64))
(declare-fun temp95_48 () (_ BitVec 64))
(declare-fun temp95_49 () (_ BitVec 64))
(declare-fun temp95_50 () (_ BitVec 64))
(declare-fun temp95_51 () (_ BitVec 64))
(declare-fun temp95_52 () (_ BitVec 64))
(declare-fun temp95_53 () (_ BitVec 64))
(declare-fun temp95_54 () (_ BitVec 64))
(declare-fun temp95_55 () (_ BitVec 64))
(declare-fun temp95_56 () (_ BitVec 64))
(declare-fun temp95_57 () (_ BitVec 64))
(declare-fun temp95_58 () (_ BitVec 64))
(declare-fun temp95_59 () (_ BitVec 64))
(declare-fun temp95_60 () (_ BitVec 64))
(declare-fun temp95_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp95_62 () (_ BitVec 64))
(declare-fun temp95_63 () (_ BitVec 64))
(declare-fun temp95_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp95_65 () (_ BitVec 64))
(declare-fun temp95_66 () (_ BitVec 64))
(declare-fun temp95_67 () (_ BitVec 64))
(declare-fun temp95_68 () (_ BitVec 64))
(declare-fun temp95_69 () (_ BitVec 64))
(declare-fun temp95_70 () (_ BitVec 64))
(declare-fun temp95_71 () (_ BitVec 64))
(declare-fun temp95_72 () (_ BitVec 64))
(declare-fun temp95_73 () (_ BitVec 64))
(declare-fun temp95_74 () (_ BitVec 64))
(declare-fun temp95_75 () (_ BitVec 64))
(declare-fun temp95_76 () (_ BitVec 64))
(declare-fun temp95_77 () (_ BitVec 64))
(declare-fun temp95_78 () (_ BitVec 64))
(declare-fun temp95_79 () (_ BitVec 64))
(declare-fun temp95_80 () (_ BitVec 64))
(declare-fun temp95_81 () (_ BitVec 64))
(declare-fun temp95_82 () (_ BitVec 64))
(declare-fun temp95_83 () (_ BitVec 64))
(declare-fun temp95_84 () (_ BitVec 64))
(declare-fun temp95_85 () (_ BitVec 64))
(declare-fun temp95_86 () (_ BitVec 64))
(declare-fun temp95_87 () (_ BitVec 64))
(declare-fun temp95_88 () (_ BitVec 64))
(declare-fun temp95_89 () (_ BitVec 64))
(declare-fun temp95_90 () (_ BitVec 64))
(declare-fun temp95_91 () (_ BitVec 64))
(declare-fun temp95_92 () (_ BitVec 64))
(declare-fun temp95_93 () (_ BitVec 64))
(declare-fun temp95_94 () (_ BitVec 64))
(declare-fun temp95_95 () (_ BitVec 64))
(declare-fun temp95_96 () (_ BitVec 64))
(declare-fun temp95_97 () (_ BitVec 64))
(declare-fun temp95_98 () (_ BitVec 64))
(declare-fun temp95_99 () (_ BitVec 64))
(declare-fun temp95_100 () (_ BitVec 64))
(declare-fun temp95_101 () (_ BitVec 64))
(declare-fun temp95_102 () (_ BitVec 64))
(declare-fun temp95_103 () (_ BitVec 64))
(declare-fun temp95_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp95_105 () (_ BitVec 64))
(declare-fun temp95_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp95_107 () (_ BitVec 64))
(declare-fun temp95_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp95_109 () (_ BitVec 64))
(declare-fun temp95_110 () (_ BitVec 64))
(declare-fun temp95_111 () (_ BitVec 64))
(declare-fun temp95_112 () (_ BitVec 64))
(declare-fun temp95_113 () (_ BitVec 64))
(declare-fun temp95_114 () (_ BitVec 64))
(declare-fun temp95_115 () (_ BitVec 64))
(declare-fun temp95_116 () (_ BitVec 64))
(declare-fun temp95_117 () (_ BitVec 64))
(declare-fun temp95_118 () (_ BitVec 64))
(declare-fun temp95_119 () (_ BitVec 64))
(declare-fun temp95_120 () (_ BitVec 64))
(declare-fun temp95_121 () (_ BitVec 64))
(declare-fun temp95_122 () (_ BitVec 64))
(declare-fun temp95_123 () (_ BitVec 64))
(declare-fun temp95_124 () (_ BitVec 64))
(declare-fun temp95_126 () (_ BitVec 64))
(declare-fun temp95_127 () (_ BitVec 64))
(declare-fun temp95_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp95_128 () (_ BitVec 64))
(declare-fun temp95_129 () (_ BitVec 64))
(declare-fun temp95_131 () (_ BitVec 64))
(declare-fun temp95_132 () (_ BitVec 64))
(declare-fun temp95_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp95_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp95_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp95_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp95_136 () (_ BitVec 64))
(declare-fun temp95_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp95_139 () (_ BitVec 64))
(declare-fun temp95_140 () (_ BitVec 64))
(declare-fun temp95_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp95_141 () (_ BitVec 64))
(declare-fun temp95_143 () (_ BitVec 64))
(declare-fun temp95_144 () (_ BitVec 64))
(declare-fun temp95_142 () (_ BitVec 64))
(declare-fun temp95_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp95_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp95_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp95_148 () (_ BitVec 64))
(declare-fun temp95_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp95_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp95_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun temp95_153 () (_ BitVec 64))
(declare-fun temp95_152 () (_ BitVec 64))
(declare-fun temp95_155 () (_ BitVec 64))
(declare-fun temp95_154 () (_ BitVec 64))
(declare-fun temp95_156 () (_ BitVec 64))
(assert (= temp95_1 #x0000000000000002))
(assert (= var989741 temp95_1))
(assert (= temp95_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp95_2)))
(assert (= temp95_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp95_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp95_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp95_4)))
(assert (= temp95_5 #x0000000000000000))
(assert (= var989775 (ite (= var989774 temp95_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp95_6 #x0000000000000000))
(assert (= var989776 temp95_6))
(assert (= temp95_7 #x0000000000000000))
(assert (= var989810 (ite (= var989773 temp95_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp95_8 #x0000000000000001))
(assert (= var989810 temp95_8))
(assert (= temp95_10 #x0000000000000000))
(assert (= temp95_9 temp95_10))
(assert (= temp95_12 #x0000000000000002))
(assert (= temp95_11 temp95_12))
(assert (= temp95_13 #x0000000000000000))
(assert (= var1387902 temp95_13))
(assert (= temp95_14 #x0000000000000001))
(assert (= var1387923 temp95_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp95_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp95_15)))
(assert (= temp95_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp95_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp95_17 #x0000000000000000))
(assert (= var1521661 temp95_17))
(assert (= temp95_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp95_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp95_19 #x0000000000000000))
(assert (= var1521706 temp95_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp95_20 #x0000000000000000))
(assert (= temp95_21 temp95_20))
(assert (= temp95_22 (select ARGNAME_padding_NAMEEND_VAL temp95_21)))
(assert (= temp95_23 #x0000000000000001))
(assert (= temp95_24 temp95_23))
(assert (= temp95_25 (select ARGNAME_padding_NAMEEND_VAL temp95_24)))
(assert (= temp95_26 #x0000000000000002))
(assert (= temp95_27 temp95_26))
(assert (= temp95_28 (select ARGNAME_padding_NAMEEND_VAL temp95_27)))
(assert (= temp95_29 #x0000000000000003))
(assert (= temp95_30 temp95_29))
(assert (= temp95_31 (select ARGNAME_padding_NAMEEND_VAL temp95_30)))
(assert (= temp95_32 #x0000000000000004))
(assert (= temp95_33 temp95_32))
(assert (= temp95_34 (select ARGNAME_padding_NAMEEND_VAL temp95_33)))
(assert (= temp95_35 #x0000000000000005))
(assert (= temp95_36 temp95_35))
(assert (= temp95_37 (select ARGNAME_padding_NAMEEND_VAL temp95_36)))
(assert (= temp95_38 #x0000000000000000))
(assert (= temp95_39 #x0000000000000000))
(assert (= temp95_40 temp95_39))
(assert (= temp95_41 (select ARGNAME_padding_NAMEEND_VAL temp95_40)))
(assert (= temp95_42 #x0000000000000000))
(assert (= temp95_43 #x0000000000000001))
(assert (= temp95_44 temp95_43))
(assert (= temp95_45 (select ARGNAME_padding_NAMEEND_VAL temp95_44)))
(assert (= temp95_46 #x0000000000000000))
(assert (= temp95_47 #x0000000000000002))
(assert (= temp95_48 temp95_47))
(assert (= temp95_49 (select ARGNAME_padding_NAMEEND_VAL temp95_48)))
(assert (= temp95_50 #x0000000000000000))
(assert (= temp95_51 #x0000000000000003))
(assert (= temp95_52 temp95_51))
(assert (= temp95_53 (select ARGNAME_padding_NAMEEND_VAL temp95_52)))
(assert (= temp95_54 #x0000000000000000))
(assert (= temp95_55 #x0000000000000004))
(assert (= temp95_56 temp95_55))
(assert (= temp95_57 (select ARGNAME_padding_NAMEEND_VAL temp95_56)))
(assert (= temp95_58 #x0000000000000000))
(assert (= temp95_59 #x0000000000000005))
(assert (= temp95_60 temp95_59))
(assert (= temp95_61 (select ARGNAME_padding_NAMEEND_VAL temp95_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp95_41 temp95_38)
             (bvslt temp95_45 temp95_42)
             (bvslt temp95_49 temp95_46)
             (bvslt temp95_53 temp95_50)
             (bvslt temp95_57 temp95_54)
             (bvslt temp95_61 temp95_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp95_62 #x0000000000000000))
(assert (= var2240290 temp95_62))
(assert (= temp95_63 #x0000000000000000))
(assert (= temp95_64 temp95_63))
(assert (= temp95_65 (select ARGNAME_stride_NAMEEND_VAL temp95_64)))
(assert (= temp95_66 #x0000000000000001))
(assert (= temp95_67 temp95_66))
(assert (= temp95_68 (select ARGNAME_stride_NAMEEND_VAL temp95_67)))
(assert (= temp95_69 #x0000000000000002))
(assert (= temp95_70 temp95_69))
(assert (= temp95_71 (select ARGNAME_stride_NAMEEND_VAL temp95_70)))
(assert (= temp95_72 #x0000000000000003))
(assert (= temp95_73 temp95_72))
(assert (= temp95_74 (select ARGNAME_stride_NAMEEND_VAL temp95_73)))
(assert (= temp95_75 #x0000000000000004))
(assert (= temp95_76 temp95_75))
(assert (= temp95_77 (select ARGNAME_stride_NAMEEND_VAL temp95_76)))
(assert (= temp95_78 #x0000000000000005))
(assert (= temp95_79 temp95_78))
(assert (= temp95_80 (select ARGNAME_stride_NAMEEND_VAL temp95_79)))
(assert (= temp95_81 #x0000000000000000))
(assert (= temp95_82 #x0000000000000000))
(assert (= temp95_83 temp95_82))
(assert (= temp95_84 (select ARGNAME_stride_NAMEEND_VAL temp95_83)))
(assert (= temp95_85 #x0000000000000000))
(assert (= temp95_86 #x0000000000000001))
(assert (= temp95_87 temp95_86))
(assert (= temp95_88 (select ARGNAME_stride_NAMEEND_VAL temp95_87)))
(assert (= temp95_89 #x0000000000000000))
(assert (= temp95_90 #x0000000000000002))
(assert (= temp95_91 temp95_90))
(assert (= temp95_92 (select ARGNAME_stride_NAMEEND_VAL temp95_91)))
(assert (= temp95_93 #x0000000000000000))
(assert (= temp95_94 #x0000000000000003))
(assert (= temp95_95 temp95_94))
(assert (= temp95_96 (select ARGNAME_stride_NAMEEND_VAL temp95_95)))
(assert (= temp95_97 #x0000000000000000))
(assert (= temp95_98 #x0000000000000004))
(assert (= temp95_99 temp95_98))
(assert (= temp95_100 (select ARGNAME_stride_NAMEEND_VAL temp95_99)))
(assert (= temp95_101 #x0000000000000000))
(assert (= temp95_102 #x0000000000000005))
(assert (= temp95_103 temp95_102))
(assert (= temp95_104 (select ARGNAME_stride_NAMEEND_VAL temp95_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp95_84 temp95_81)
             (bvsle temp95_88 temp95_85)
             (bvsle temp95_92 temp95_89)
             (bvsle temp95_96 temp95_93)
             (bvsle temp95_100 temp95_97)
             (bvsle temp95_104 temp95_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp95_105 #x0000000000000000))
(assert (= var2240311 temp95_105))
(assert (= temp95_106 #x0000000000000000))
(assert (= var2228402 temp95_106))
(assert (= temp95_107 #x0000000000000000))
(assert (= temp95_108 temp95_107))
(assert (= temp95_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp95_108)))
(assert (= temp95_110 #x0000000000000001))
(assert (= temp95_111 temp95_110))
(assert (= temp95_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp95_111)))
(assert (= temp95_113 #x0000000000000002))
(assert (= temp95_114 temp95_113))
(assert (= temp95_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp95_114)))
(assert (= temp95_116 #x0000000000000003))
(assert (= temp95_117 temp95_116))
(assert (= temp95_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp95_117)))
(assert (= temp95_119 #x0000000000000004))
(assert (= temp95_120 temp95_119))
(assert (= temp95_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp95_120)))
(assert (= temp95_122 #x0000000000000005))
(assert (= temp95_123 temp95_122))
(assert (= temp95_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp95_123)))
(assert (= temp95_126 var2228402))
(assert (= temp95_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp95_126)))
(assert (= temp95_125 temp95_127))
(assert (= var2240356
   (ite (bvslt temp95_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp95_128 #x0000000000000000))
(assert (= var2240356 temp95_128))
(assert (= temp95_129 #x0000000000000000))
(assert (= var2228402 temp95_129))
(assert (= temp95_131 var2228402))
(assert (= temp95_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp95_131)))
(assert (= temp95_130 temp95_132))
(assert (= var2240378 (bvsmod temp95_130 ARGNAME_groups_NAMEEND)))
(assert (= temp95_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp95_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp95_134 #x0000000000000001))
(assert (= var2240379 temp95_134))
(assert (= var2240398 var2240288))
(assert (= temp95_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp95_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp95_136 #x0000000000000001))
(assert (= var2240399 temp95_136))
(assert (= temp95_137 #x0000000000000001))
(assert (= var2229290 temp95_137))
(assert (= temp95_139 var2229290))
(assert (= temp95_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp95_139)))
(assert (= temp95_138 temp95_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp95_138)))
(assert (= temp95_141 #x0000000000000000))
(assert (= var2228402 temp95_141))
(assert (= temp95_143 var2228402))
(assert (= temp95_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp95_143)))
(assert (= temp95_142 temp95_144))
(assert (= temp95_145 #x0000000000000002))
(assert (= var2503529 temp95_145))
(assert (= temp95_146 #x0000000000000001))
(assert (= var2240569 temp95_146))
(assert (= temp95_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp95_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp95_148 #x0000000000000001))
(assert (= var1521778 temp95_148))
(assert (= temp95_149 #x0000000000000001))
(assert (= var1521908 temp95_149))
(assert (= var4010473 var1521908))
(assert (= temp95_150 #x0000000000000000))
(assert (= var4210495 temp95_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp95_151 #x0000000000000002))
(assert (= var4339331 temp95_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= temp95_153 #xffffffffffffffff))
(assert (= temp95_152 temp95_153))
(assert (= temp95_155 #xffffffffffffffff))
(assert (= temp95_154 temp95_155))
(assert (= temp95_156 #x0000000000000001))
(assert (= var1521778 temp95_156))
(model-add temp95_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp95_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp95_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp95_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp95_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp95_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)





