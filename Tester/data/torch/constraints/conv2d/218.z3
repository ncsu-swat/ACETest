(declare-fun temp290_1 () (_ BitVec 64))
(declare-fun var989741 () (_ BitVec 64))
(declare-fun temp290_2 () (_ BitVec 64))
(declare-fun var989757 () (_ BitVec 64))
(declare-fun temp290_3 () (_ BitVec 64))
(declare-fun var989761 () (_ BitVec 64))
(declare-fun var989766 () (_ BitVec 64))
(declare-fun var989767 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var989768 () (_ BitVec 64))
(declare-fun var989771 () (_ BitVec 64))
(declare-fun var989772 () (_ BitVec 64))
(declare-fun var989773 () (_ BitVec 64))
(declare-fun temp290_4 () (_ BitVec 64))
(declare-fun var989774 () (_ BitVec 64))
(declare-fun temp290_5 () (_ BitVec 64))
(declare-fun var989775 () (_ BitVec 64))
(declare-fun temp290_6 () (_ BitVec 64))
(declare-fun var989776 () (_ BitVec 64))
(declare-fun temp290_7 () (_ BitVec 64))
(declare-fun var989810 () (_ BitVec 64))
(declare-fun temp290_8 () (_ BitVec 64))
(declare-fun temp290_10 () (_ BitVec 64))
(declare-fun temp290_9 () (_ BitVec 64))
(declare-fun temp290_12 () (_ BitVec 64))
(declare-fun temp290_11 () (_ BitVec 64))
(declare-fun temp290_13 () (_ BitVec 64))
(declare-fun var1387902 () (_ BitVec 64))
(declare-fun temp290_14 () (_ BitVec 64))
(declare-fun var1387923 () (_ BitVec 64))
(declare-fun var1521369 () (_ BitVec 64))
(declare-fun var1521373 () (_ BitVec 64))
(declare-fun var1521631 () (_ BitVec 64))
(declare-fun var1521633 () (_ BitVec 64))
(declare-fun temp290_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1521660 () (_ BitVec 64))
(declare-fun temp290_16 () (_ BitVec 64))
(declare-fun var1521661 () (_ BitVec 64))
(declare-fun temp290_17 () (_ BitVec 64))
(declare-fun temp290_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var1521706 () (_ BitVec 64))
(declare-fun temp290_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var2240288 () (_ BitVec 64))
(declare-fun temp290_20 () (_ BitVec 64))
(declare-fun temp290_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp290_22 () (_ BitVec 64))
(declare-fun temp290_23 () (_ BitVec 64))
(declare-fun temp290_24 () (_ BitVec 64))
(declare-fun temp290_25 () (_ BitVec 64))
(declare-fun temp290_26 () (_ BitVec 64))
(declare-fun temp290_27 () (_ BitVec 64))
(declare-fun temp290_28 () (_ BitVec 64))
(declare-fun temp290_29 () (_ BitVec 64))
(declare-fun temp290_30 () (_ BitVec 64))
(declare-fun temp290_31 () (_ BitVec 64))
(declare-fun temp290_32 () (_ BitVec 64))
(declare-fun temp290_33 () (_ BitVec 64))
(declare-fun temp290_34 () (_ BitVec 64))
(declare-fun temp290_35 () (_ BitVec 64))
(declare-fun temp290_36 () (_ BitVec 64))
(declare-fun temp290_37 () (_ BitVec 64))
(declare-fun temp290_38 () (_ BitVec 64))
(declare-fun temp290_39 () (_ BitVec 64))
(declare-fun temp290_40 () (_ BitVec 64))
(declare-fun temp290_41 () (_ BitVec 64))
(declare-fun temp290_42 () (_ BitVec 64))
(declare-fun temp290_43 () (_ BitVec 64))
(declare-fun temp290_44 () (_ BitVec 64))
(declare-fun temp290_45 () (_ BitVec 64))
(declare-fun temp290_46 () (_ BitVec 64))
(declare-fun temp290_47 () (_ BitVec 64))
(declare-fun temp290_48 () (_ BitVec 64))
(declare-fun temp290_49 () (_ BitVec 64))
(declare-fun temp290_50 () (_ BitVec 64))
(declare-fun temp290_51 () (_ BitVec 64))
(declare-fun temp290_52 () (_ BitVec 64))
(declare-fun temp290_53 () (_ BitVec 64))
(declare-fun temp290_54 () (_ BitVec 64))
(declare-fun temp290_55 () (_ BitVec 64))
(declare-fun temp290_56 () (_ BitVec 64))
(declare-fun temp290_57 () (_ BitVec 64))
(declare-fun temp290_58 () (_ BitVec 64))
(declare-fun temp290_59 () (_ BitVec 64))
(declare-fun temp290_60 () (_ BitVec 64))
(declare-fun temp290_61 () (_ BitVec 64))
(declare-fun var2240290 () (_ BitVec 64))
(declare-fun temp290_62 () (_ BitVec 64))
(declare-fun temp290_63 () (_ BitVec 64))
(declare-fun temp290_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp290_65 () (_ BitVec 64))
(declare-fun temp290_66 () (_ BitVec 64))
(declare-fun temp290_67 () (_ BitVec 64))
(declare-fun temp290_68 () (_ BitVec 64))
(declare-fun temp290_69 () (_ BitVec 64))
(declare-fun temp290_70 () (_ BitVec 64))
(declare-fun temp290_71 () (_ BitVec 64))
(declare-fun temp290_72 () (_ BitVec 64))
(declare-fun temp290_73 () (_ BitVec 64))
(declare-fun temp290_74 () (_ BitVec 64))
(declare-fun temp290_75 () (_ BitVec 64))
(declare-fun temp290_76 () (_ BitVec 64))
(declare-fun temp290_77 () (_ BitVec 64))
(declare-fun temp290_78 () (_ BitVec 64))
(declare-fun temp290_79 () (_ BitVec 64))
(declare-fun temp290_80 () (_ BitVec 64))
(declare-fun temp290_81 () (_ BitVec 64))
(declare-fun temp290_82 () (_ BitVec 64))
(declare-fun temp290_83 () (_ BitVec 64))
(declare-fun temp290_84 () (_ BitVec 64))
(declare-fun temp290_85 () (_ BitVec 64))
(declare-fun temp290_86 () (_ BitVec 64))
(declare-fun temp290_87 () (_ BitVec 64))
(declare-fun temp290_88 () (_ BitVec 64))
(declare-fun temp290_89 () (_ BitVec 64))
(declare-fun temp290_90 () (_ BitVec 64))
(declare-fun temp290_91 () (_ BitVec 64))
(declare-fun temp290_92 () (_ BitVec 64))
(declare-fun temp290_93 () (_ BitVec 64))
(declare-fun temp290_94 () (_ BitVec 64))
(declare-fun temp290_95 () (_ BitVec 64))
(declare-fun temp290_96 () (_ BitVec 64))
(declare-fun temp290_97 () (_ BitVec 64))
(declare-fun temp290_98 () (_ BitVec 64))
(declare-fun temp290_99 () (_ BitVec 64))
(declare-fun temp290_100 () (_ BitVec 64))
(declare-fun temp290_101 () (_ BitVec 64))
(declare-fun temp290_102 () (_ BitVec 64))
(declare-fun temp290_103 () (_ BitVec 64))
(declare-fun temp290_104 () (_ BitVec 64))
(declare-fun var2240311 () (_ BitVec 64))
(declare-fun temp290_105 () (_ BitVec 64))
(declare-fun temp290_106 () (_ BitVec 64))
(declare-fun var2228402 () (_ BitVec 64))
(declare-fun temp290_107 () (_ BitVec 64))
(declare-fun temp290_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp290_109 () (_ BitVec 64))
(declare-fun temp290_110 () (_ BitVec 64))
(declare-fun temp290_111 () (_ BitVec 64))
(declare-fun temp290_112 () (_ BitVec 64))
(declare-fun temp290_113 () (_ BitVec 64))
(declare-fun temp290_114 () (_ BitVec 64))
(declare-fun temp290_115 () (_ BitVec 64))
(declare-fun temp290_116 () (_ BitVec 64))
(declare-fun temp290_117 () (_ BitVec 64))
(declare-fun temp290_118 () (_ BitVec 64))
(declare-fun temp290_119 () (_ BitVec 64))
(declare-fun temp290_120 () (_ BitVec 64))
(declare-fun temp290_121 () (_ BitVec 64))
(declare-fun temp290_122 () (_ BitVec 64))
(declare-fun temp290_123 () (_ BitVec 64))
(declare-fun temp290_124 () (_ BitVec 64))
(declare-fun temp290_126 () (_ BitVec 64))
(declare-fun temp290_127 () (_ BitVec 64))
(declare-fun temp290_125 () (_ BitVec 64))
(declare-fun var2240356 () (_ BitVec 64))
(declare-fun temp290_128 () (_ BitVec 64))
(declare-fun temp290_129 () (_ BitVec 64))
(declare-fun temp290_131 () (_ BitVec 64))
(declare-fun temp290_132 () (_ BitVec 64))
(declare-fun temp290_130 () (_ BitVec 64))
(declare-fun var2240378 () (_ BitVec 64))
(declare-fun temp290_133 () (_ BitVec 64))
(declare-fun var2240379 () (_ BitVec 64))
(declare-fun temp290_134 () (_ BitVec 64))
(declare-fun var2240398 () (_ BitVec 64))
(declare-fun temp290_135 () (_ BitVec 64))
(declare-fun var2240399 () (_ BitVec 64))
(declare-fun temp290_136 () (_ BitVec 64))
(declare-fun temp290_137 () (_ BitVec 64))
(declare-fun var2229290 () (_ BitVec 64))
(declare-fun temp290_139 () (_ BitVec 64))
(declare-fun temp290_140 () (_ BitVec 64))
(declare-fun temp290_138 () (_ BitVec 64))
(declare-fun var2240411 () (_ BitVec 64))
(declare-fun temp290_141 () (_ BitVec 64))
(declare-fun temp290_143 () (_ BitVec 64))
(declare-fun temp290_144 () (_ BitVec 64))
(declare-fun temp290_142 () (_ BitVec 64))
(declare-fun temp290_145 () (_ BitVec 64))
(declare-fun var2503529 () (_ BitVec 64))
(declare-fun temp290_146 () (_ BitVec 64))
(declare-fun var2240569 () (_ BitVec 64))
(declare-fun temp290_147 () (_ BitVec 64))
(declare-fun var1521778 () (_ BitVec 64))
(declare-fun temp290_148 () (_ BitVec 64))
(declare-fun temp290_149 () (_ BitVec 64))
(declare-fun var1521908 () (_ BitVec 64))
(declare-fun var4010473 () (_ BitVec 64))
(declare-fun temp290_150 () (_ BitVec 64))
(declare-fun var4210495 () (_ BitVec 64))
(declare-fun var4210497 () (_ BitVec 64))
(declare-fun var4210454 () (_ BitVec 64))
(declare-fun var1521921 () (_ BitVec 64))
(declare-fun temp290_151 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp290_152 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp290_153 () (_ BitVec 64))
(assert (= temp290_1 #x0000000000000002))
(assert (= var989741 temp290_1))
(assert (= temp290_2 #x0000000000000001))
(assert (= var989757 (bvadd var989741 temp290_2)))
(assert (= temp290_3 #x0000000000000002))
(assert (= var989761 (bvadd var989741 temp290_3)))
(assert (= var989766 var989761))
(assert (= var989767
   (ite (= ARGNAME_input_NAMEEND_DIM var989766)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989768 var989767))
(assert (= var989771 var989757))
(assert (= var989772
   (ite (distinct ARGNAME_input_NAMEEND_DIM var989771)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var989773 var989768))
(assert (= temp290_4 #x0000000000000001))
(assert (= var989774 (bvand var989773 temp290_4)))
(assert (= temp290_5 #x0000000000000000))
(assert (= var989775
   (ite (= var989774 temp290_5) #x0000000000000001 #x0000000000000000)))
(assert (= var989776 (bvand var989772 var989775)))
(assert (= temp290_6 #x0000000000000000))
(assert (= var989776 temp290_6))
(assert (= temp290_7 #x0000000000000000))
(assert (= var989810
   (ite (= var989773 temp290_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp290_8 #x0000000000000001))
(assert (= var989810 temp290_8))
(assert (= temp290_10 #x0000000000000000))
(assert (= temp290_9 temp290_10))
(assert (= temp290_12 #x0000000000000002))
(assert (= temp290_11 temp290_12))
(assert (= temp290_13 #x0000000000000000))
(assert (= var1387902 temp290_13))
(assert (= temp290_14 #x0000000000000001))
(assert (= var1387923 temp290_14))
(assert (= var1521369 var1387902))
(assert (= var1521373 var1387923))
(assert (= var1521631 var1521369))
(assert (= var1521633 var1521373))
(assert (= temp290_15 #xfffffffffffffffe))
(assert (= var1521660 (bvadd ARGNAME_weight_NAMEEND_DIM temp290_15)))
(assert (= temp290_16 #x0000000000000003))
(assert (= var1521661
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp290_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp290_17 #x0000000000000000))
(assert (= var1521661 temp290_17))
(assert (= temp290_18 #x0000000000000001))
(assert (= var1521706
   (ite (bvslt ARGNAME_groups_NAMEEND temp290_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp290_19 #x0000000000000000))
(assert (= var1521706 temp290_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var1521660))
(assert (= ARGNAME_padding_NAMEEND_LEN var1521660))
(assert (= ARGNAME_dilation_NAMEEND_LEN var1521660))
(assert (= var2240288 var1521631))
(assert (= temp290_20 #x0000000000000000))
(assert (= temp290_21 temp290_20))
(assert (= temp290_22 (select ARGNAME_padding_NAMEEND_VAL temp290_21)))
(assert (= temp290_23 #x0000000000000001))
(assert (= temp290_24 temp290_23))
(assert (= temp290_25 (select ARGNAME_padding_NAMEEND_VAL temp290_24)))
(assert (= temp290_26 #x0000000000000002))
(assert (= temp290_27 temp290_26))
(assert (= temp290_28 (select ARGNAME_padding_NAMEEND_VAL temp290_27)))
(assert (= temp290_29 #x0000000000000003))
(assert (= temp290_30 temp290_29))
(assert (= temp290_31 (select ARGNAME_padding_NAMEEND_VAL temp290_30)))
(assert (= temp290_32 #x0000000000000004))
(assert (= temp290_33 temp290_32))
(assert (= temp290_34 (select ARGNAME_padding_NAMEEND_VAL temp290_33)))
(assert (= temp290_35 #x0000000000000005))
(assert (= temp290_36 temp290_35))
(assert (= temp290_37 (select ARGNAME_padding_NAMEEND_VAL temp290_36)))
(assert (= temp290_38 #x0000000000000000))
(assert (= temp290_39 #x0000000000000000))
(assert (= temp290_40 temp290_39))
(assert (= temp290_41 (select ARGNAME_padding_NAMEEND_VAL temp290_40)))
(assert (= temp290_42 #x0000000000000000))
(assert (= temp290_43 #x0000000000000001))
(assert (= temp290_44 temp290_43))
(assert (= temp290_45 (select ARGNAME_padding_NAMEEND_VAL temp290_44)))
(assert (= temp290_46 #x0000000000000000))
(assert (= temp290_47 #x0000000000000002))
(assert (= temp290_48 temp290_47))
(assert (= temp290_49 (select ARGNAME_padding_NAMEEND_VAL temp290_48)))
(assert (= temp290_50 #x0000000000000000))
(assert (= temp290_51 #x0000000000000003))
(assert (= temp290_52 temp290_51))
(assert (= temp290_53 (select ARGNAME_padding_NAMEEND_VAL temp290_52)))
(assert (= temp290_54 #x0000000000000000))
(assert (= temp290_55 #x0000000000000004))
(assert (= temp290_56 temp290_55))
(assert (= temp290_57 (select ARGNAME_padding_NAMEEND_VAL temp290_56)))
(assert (= temp290_58 #x0000000000000000))
(assert (= temp290_59 #x0000000000000005))
(assert (= temp290_60 temp290_59))
(assert (= temp290_61 (select ARGNAME_padding_NAMEEND_VAL temp290_60)))
(assert (= var2240290
   (ite (and true
             (bvslt temp290_41 temp290_38)
             (bvslt temp290_45 temp290_42)
             (bvslt temp290_49 temp290_46)
             (bvslt temp290_53 temp290_50)
             (bvslt temp290_57 temp290_54)
             (bvslt temp290_61 temp290_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp290_62 #x0000000000000000))
(assert (= var2240290 temp290_62))
(assert (= temp290_63 #x0000000000000000))
(assert (= temp290_64 temp290_63))
(assert (= temp290_65 (select ARGNAME_stride_NAMEEND_VAL temp290_64)))
(assert (= temp290_66 #x0000000000000001))
(assert (= temp290_67 temp290_66))
(assert (= temp290_68 (select ARGNAME_stride_NAMEEND_VAL temp290_67)))
(assert (= temp290_69 #x0000000000000002))
(assert (= temp290_70 temp290_69))
(assert (= temp290_71 (select ARGNAME_stride_NAMEEND_VAL temp290_70)))
(assert (= temp290_72 #x0000000000000003))
(assert (= temp290_73 temp290_72))
(assert (= temp290_74 (select ARGNAME_stride_NAMEEND_VAL temp290_73)))
(assert (= temp290_75 #x0000000000000004))
(assert (= temp290_76 temp290_75))
(assert (= temp290_77 (select ARGNAME_stride_NAMEEND_VAL temp290_76)))
(assert (= temp290_78 #x0000000000000005))
(assert (= temp290_79 temp290_78))
(assert (= temp290_80 (select ARGNAME_stride_NAMEEND_VAL temp290_79)))
(assert (= temp290_81 #x0000000000000000))
(assert (= temp290_82 #x0000000000000000))
(assert (= temp290_83 temp290_82))
(assert (= temp290_84 (select ARGNAME_stride_NAMEEND_VAL temp290_83)))
(assert (= temp290_85 #x0000000000000000))
(assert (= temp290_86 #x0000000000000001))
(assert (= temp290_87 temp290_86))
(assert (= temp290_88 (select ARGNAME_stride_NAMEEND_VAL temp290_87)))
(assert (= temp290_89 #x0000000000000000))
(assert (= temp290_90 #x0000000000000002))
(assert (= temp290_91 temp290_90))
(assert (= temp290_92 (select ARGNAME_stride_NAMEEND_VAL temp290_91)))
(assert (= temp290_93 #x0000000000000000))
(assert (= temp290_94 #x0000000000000003))
(assert (= temp290_95 temp290_94))
(assert (= temp290_96 (select ARGNAME_stride_NAMEEND_VAL temp290_95)))
(assert (= temp290_97 #x0000000000000000))
(assert (= temp290_98 #x0000000000000004))
(assert (= temp290_99 temp290_98))
(assert (= temp290_100 (select ARGNAME_stride_NAMEEND_VAL temp290_99)))
(assert (= temp290_101 #x0000000000000000))
(assert (= temp290_102 #x0000000000000005))
(assert (= temp290_103 temp290_102))
(assert (= temp290_104 (select ARGNAME_stride_NAMEEND_VAL temp290_103)))
(assert (= var2240311
   (ite (and true
             (bvsle temp290_84 temp290_81)
             (bvsle temp290_88 temp290_85)
             (bvsle temp290_92 temp290_89)
             (bvsle temp290_96 temp290_93)
             (bvsle temp290_100 temp290_97)
             (bvsle temp290_104 temp290_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp290_105 #x0000000000000000))
(assert (= var2240311 temp290_105))
(assert (= temp290_106 #x0000000000000000))
(assert (= var2228402 temp290_106))
(assert (= temp290_107 #x0000000000000000))
(assert (= temp290_108 temp290_107))
(assert (= temp290_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp290_108)))
(assert (= temp290_110 #x0000000000000001))
(assert (= temp290_111 temp290_110))
(assert (= temp290_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp290_111)))
(assert (= temp290_113 #x0000000000000002))
(assert (= temp290_114 temp290_113))
(assert (= temp290_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp290_114)))
(assert (= temp290_116 #x0000000000000003))
(assert (= temp290_117 temp290_116))
(assert (= temp290_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp290_117)))
(assert (= temp290_119 #x0000000000000004))
(assert (= temp290_120 temp290_119))
(assert (= temp290_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp290_120)))
(assert (= temp290_122 #x0000000000000005))
(assert (= temp290_123 temp290_122))
(assert (= temp290_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp290_123)))
(assert (= temp290_126 var2228402))
(assert (= temp290_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp290_126)))
(assert (= temp290_125 temp290_127))
(assert (= var2240356
   (ite (bvslt temp290_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp290_128 #x0000000000000000))
(assert (= var2240356 temp290_128))
(assert (= temp290_129 #x0000000000000000))
(assert (= var2228402 temp290_129))
(assert (= temp290_131 var2228402))
(assert (= temp290_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp290_131)))
(assert (= temp290_130 temp290_132))
(assert (= var2240378 (bvsmod temp290_130 ARGNAME_groups_NAMEEND)))
(assert (= temp290_133 #x0000000000000000))
(assert (= var2240379
   (ite (= var2240378 temp290_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp290_134 #x0000000000000001))
(assert (= var2240379 temp290_134))
(assert (= var2240398 var2240288))
(assert (= temp290_135 #x0000000000000000))
(assert (= var2240399
   (ite (= var2240398 temp290_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp290_136 #x0000000000000001))
(assert (= var2240399 temp290_136))
(assert (= temp290_137 #x0000000000000001))
(assert (= var2229290 temp290_137))
(assert (= temp290_139 var2229290))
(assert (= temp290_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp290_139)))
(assert (= temp290_138 temp290_140))
(assert (= var2240411 (bvmul ARGNAME_groups_NAMEEND temp290_138)))
(assert (= temp290_141 #x0000000000000000))
(assert (= var2228402 temp290_141))
(assert (= temp290_143 var2228402))
(assert (= temp290_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp290_143)))
(assert (= temp290_142 temp290_144))
(assert (= temp290_145 #x0000000000000002))
(assert (= var2503529 temp290_145))
(assert (= temp290_146 #x0000000000000001))
(assert (= var2240569 temp290_146))
(assert (= temp290_147 #x0000000000000003))
(assert (= var1521778
   (ite (= ARGNAME_weight_NAMEEND_DIM temp290_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp290_148 #x0000000000000001))
(assert (= var1521778 temp290_148))
(assert (= temp290_149 #x0000000000000001))
(assert (= var1521908 temp290_149))
(assert (= var4010473 var1521908))
(assert (= temp290_150 #x0000000000000000))
(assert (= var4210495 temp290_150))
(assert (= var4210497 var4210495))
(assert (= var4210454 var4210497))
(assert (= var1521921 var4210454))
(assert (= temp290_151 #x0000000000000002))
(assert (= var4339331 temp290_151))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var5321104 var1521921))
(assert (= var5583248 var1521921))
(assert (= temp290_152 #x0000000000000000))
(assert (= var5910928 temp290_152))
(assert (= temp290_153 #x0000000000000001))
(assert (= var1521778 temp290_153))
(model-add temp290_1 () (_ BitVec 64) #x0000000000000002)
(model-add var989741 () (_ BitVec 64) #x0000000000000002)
(model-add temp290_2 () (_ BitVec 64) #x0000000000000001)
(model-add var989757 () (_ BitVec 64) #x0000000000000003)
(model-add temp290_3 () (_ BitVec 64) #x0000000000000002)
(model-add var989761 () (_ BitVec 64) #x0000000000000004)
(model-add var989766 () (_ BitVec 64) #x0000000000000004)
(model-add var989767
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989768
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add var989771 () (_ BitVec 64) #x0000000000000003)
(model-add var989772
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add var989773
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000001
                #x0000000000000000))
(model-add temp290_4 () (_ BitVec 64) #x0000000000000001)
(model-add var989774
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                        #b1
                        #b0)))
(model-add temp290_5 () (_ BitVec 64) #x0000000000000000)
(model-add var989775
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000004)
                #x0000000000000000
                #x0000000000000001))
(model-add temp290_6 () (_ BitVec 64) #x0000000000000000)
(model-add var989776 () (_ BitVec 64) #x0000000000000000)






