(declare-fun temp639_1 () (_ BitVec 64))
(declare-fun var1051073 () (_ BitVec 64))
(declare-fun temp639_2 () (_ BitVec 64))
(declare-fun var132043 () (_ BitVec 64))
(declare-fun temp639_3 () (_ BitVec 64))
(declare-fun var1313217 () (_ BitVec 64))
(declare-fun temp639_4 () (_ BitVec 64))
(declare-fun var1706433 () (_ BitVec 64))
(declare-fun temp639_5 () (_ BitVec 64))
(declare-fun var2296257 () (_ BitVec 64))
(declare-fun temp639_6 () (_ BitVec 64))
(declare-fun var2886081 () (_ BitVec 64))
(declare-fun temp639_7 () (_ BitVec 64))
(declare-fun var3475905 () (_ BitVec 64))
(declare-fun temp639_8 () (_ BitVec 64))
(declare-fun var134570 () (_ BitVec 64))
(declare-fun temp639_9 () (_ BitVec 64))
(declare-fun temp639_11 () (_ BitVec 64))
(declare-fun temp639_10 () (_ BitVec 64))
(declare-fun temp639_12 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134912 () (_ BitVec 64))
(declare-fun temp639_13 () (_ BitVec 64))
(declare-fun temp639_14 () (_ BitVec 64))
(declare-fun ARGNAME_training_NAMEEND () (_ BitVec 64))
(declare-fun var134935 () (_ BitVec 64))
(declare-fun temp639_16 () (_ BitVec 64))
(declare-fun temp639_15 () (_ BitVec 64))
(assert (= temp639_1 #x0000000000000002))
(assert (= var1051073 temp639_1))
(assert (= temp639_2 #x0000000000000001))
(assert (= var132043 temp639_2))
(assert (= temp639_3 #x0000000000000002))
(assert (= var1313217 temp639_3))
(assert (= temp639_4 #x0000000000000002))
(assert (= var1706433 temp639_4))
(assert (= temp639_5 #x0000000000000002))
(assert (= var2296257 temp639_5))
(assert (= temp639_6 #x0000000000000002))
(assert (= var2886081 temp639_6))
(assert (= temp639_7 #x0000000000000002))
(assert (= var3475905 temp639_7))
(assert (= temp639_8 #x0000000000000000))
(assert (= var134570 temp639_8))
(assert (= temp639_9 #x0000000000000000))
(assert (= var134570 temp639_9))
(assert (= temp639_11 #x0000000000000000))
(assert (= temp639_10 temp639_11))
(assert (= temp639_12 #x0000000000000006))
(assert (= var134912
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp639_12)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp639_13 #x0000000000000001))
(assert (= var134912 temp639_13))
(assert (= temp639_14 #x0000000000000001))
(assert (= var134935 (bvxor ARGNAME_training_NAMEEND temp639_14)))
(assert (= temp639_16 #x0000000000000000))
(assert (= temp639_15 temp639_16))
(model-add temp639_1 () (_ BitVec 64) #x0000000000000002)
(model-add var1051073 () (_ BitVec 64) #x0000000000000002)
(model-add temp639_2 () (_ BitVec 64) #x0000000000000001)
(model-add var132043 () (_ BitVec 64) #x0000000000000001)
(model-add temp639_3 () (_ BitVec 64) #x0000000000000002)
(model-add var1313217 () (_ BitVec 64) #x0000000000000002)
(model-add temp639_4 () (_ BitVec 64) #x0000000000000002)
(model-add var1706433 () (_ BitVec 64) #x0000000000000002)
(model-add temp639_5 () (_ BitVec 64) #x0000000000000002)
(model-add var2296257 () (_ BitVec 64) #x0000000000000002)
(model-add temp639_6 () (_ BitVec 64) #x0000000000000002)
(model-add var2886081 () (_ BitVec 64) #x0000000000000002)
(model-add temp639_7 () (_ BitVec 64) #x0000000000000002)
(model-add var3475905 () (_ BitVec 64) #x0000000000000002)
(model-add temp639_8 () (_ BitVec 64) #x0000000000000000)
(model-add var134570 () (_ BitVec 64) #x0000000000000000)
(model-add temp639_9 () (_ BitVec 64) #x0000000000000000)






