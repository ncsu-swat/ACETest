(declare-fun temp572_1 () (_ BitVec 64))
(declare-fun var1051073 () (_ BitVec 64))
(declare-fun temp572_2 () (_ BitVec 64))
(declare-fun var132043 () (_ BitVec 64))
(declare-fun temp572_3 () (_ BitVec 64))
(declare-fun var1313217 () (_ BitVec 64))
(declare-fun temp572_4 () (_ BitVec 64))
(declare-fun var1706433 () (_ BitVec 64))
(declare-fun temp572_5 () (_ BitVec 64))
(declare-fun var2296257 () (_ BitVec 64))
(declare-fun temp572_6 () (_ BitVec 64))
(declare-fun var2886081 () (_ BitVec 64))
(declare-fun temp572_7 () (_ BitVec 64))
(declare-fun var3475905 () (_ BitVec 64))
(declare-fun temp572_8 () (_ BitVec 64))
(declare-fun var134570 () (_ BitVec 64))
(declare-fun temp572_9 () (_ BitVec 64))
(declare-fun temp572_11 () (_ BitVec 64))
(declare-fun temp572_10 () (_ BitVec 64))
(declare-fun temp572_12 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134912 () (_ BitVec 64))
(declare-fun temp572_13 () (_ BitVec 64))
(declare-fun temp572_14 () (_ BitVec 64))
(declare-fun ARGNAME_training_NAMEEND () (_ BitVec 64))
(declare-fun var134935 () (_ BitVec 64))
(declare-fun temp572_16 () (_ BitVec 64))
(declare-fun temp572_15 () (_ BitVec 64))
(assert (= temp572_1 #x0000000000000002))
(assert (= var1051073 temp572_1))
(assert (= temp572_2 #x0000000000000001))
(assert (= var132043 temp572_2))
(assert (= temp572_3 #x0000000000000002))
(assert (= var1313217 temp572_3))
(assert (= temp572_4 #x0000000000000002))
(assert (= var1706433 temp572_4))
(assert (= temp572_5 #x0000000000000002))
(assert (= var2296257 temp572_5))
(assert (= temp572_6 #x0000000000000002))
(assert (= var2886081 temp572_6))
(assert (= temp572_7 #x0000000000000002))
(assert (= var3475905 temp572_7))
(assert (= temp572_8 #x0000000000000000))
(assert (= var134570 temp572_8))
(assert (= temp572_9 #x0000000000000000))
(assert (= var134570 temp572_9))
(assert (= temp572_11 #x0000000000000000))
(assert (= temp572_10 temp572_11))
(assert (= temp572_12 #x0000000000000006))
(assert (= var134912
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp572_12)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp572_13 #x0000000000000001))
(assert (= var134912 temp572_13))
(assert (= temp572_14 #x0000000000000001))
(assert (= var134935 (bvxor ARGNAME_training_NAMEEND temp572_14)))
(assert (= temp572_16 #x0000000000000002))
(assert (= temp572_15 temp572_16))
(model-add temp572_1 () (_ BitVec 64) #x0000000000000002)
(model-add var1051073 () (_ BitVec 64) #x0000000000000002)
(model-add temp572_2 () (_ BitVec 64) #x0000000000000001)
(model-add var132043 () (_ BitVec 64) #x0000000000000001)
(model-add temp572_3 () (_ BitVec 64) #x0000000000000002)
(model-add var1313217 () (_ BitVec 64) #x0000000000000002)
(model-add temp572_4 () (_ BitVec 64) #x0000000000000002)
(model-add var1706433 () (_ BitVec 64) #x0000000000000002)
(model-add temp572_5 () (_ BitVec 64) #x0000000000000002)
(model-add var2296257 () (_ BitVec 64) #x0000000000000002)
(model-add temp572_6 () (_ BitVec 64) #x0000000000000002)
(model-add var2886081 () (_ BitVec 64) #x0000000000000002)
(model-add temp572_7 () (_ BitVec 64) #x0000000000000002)
(model-add var3475905 () (_ BitVec 64) #x0000000000000002)
(model-add temp572_8 () (_ BitVec 64) #x0000000000000000)
(model-add var134570 () (_ BitVec 64) #x0000000000000000)
(model-add temp572_9 () (_ BitVec 64) #x0000000000000000)





