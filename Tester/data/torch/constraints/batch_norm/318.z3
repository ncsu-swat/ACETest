(declare-fun temp642_1 () (_ BitVec 64))
(declare-fun var1051073 () (_ BitVec 64))
(declare-fun temp642_2 () (_ BitVec 64))
(declare-fun var132043 () (_ BitVec 64))
(declare-fun temp642_3 () (_ BitVec 64))
(declare-fun var1313217 () (_ BitVec 64))
(declare-fun temp642_4 () (_ BitVec 64))
(declare-fun var1706433 () (_ BitVec 64))
(declare-fun temp642_5 () (_ BitVec 64))
(declare-fun var2296257 () (_ BitVec 64))
(declare-fun temp642_6 () (_ BitVec 64))
(declare-fun var2886081 () (_ BitVec 64))
(declare-fun temp642_7 () (_ BitVec 64))
(declare-fun var3475905 () (_ BitVec 64))
(declare-fun temp642_8 () (_ BitVec 64))
(declare-fun var134570 () (_ BitVec 64))
(declare-fun temp642_9 () (_ BitVec 64))
(declare-fun temp642_11 () (_ BitVec 64))
(declare-fun temp642_10 () (_ BitVec 64))
(declare-fun temp642_12 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134912 () (_ BitVec 64))
(declare-fun temp642_13 () (_ BitVec 64))
(declare-fun temp642_14 () (_ BitVec 64))
(declare-fun ARGNAME_training_NAMEEND () (_ BitVec 64))
(declare-fun var134935 () (_ BitVec 64))
(declare-fun temp642_16 () (_ BitVec 64))
(declare-fun temp642_15 () (_ BitVec 64))
(assert (= temp642_1 #x0000000000000002))
(assert (= var1051073 temp642_1))
(assert (= temp642_2 #x0000000000000001))
(assert (= var132043 temp642_2))
(assert (= temp642_3 #x0000000000000002))
(assert (= var1313217 temp642_3))
(assert (= temp642_4 #x0000000000000002))
(assert (= var1706433 temp642_4))
(assert (= temp642_5 #x0000000000000002))
(assert (= var2296257 temp642_5))
(assert (= temp642_6 #x0000000000000002))
(assert (= var2886081 temp642_6))
(assert (= temp642_7 #x0000000000000002))
(assert (= var3475905 temp642_7))
(assert (= temp642_8 #x0000000000000000))
(assert (= var134570 temp642_8))
(assert (= temp642_9 #x0000000000000000))
(assert (= var134570 temp642_9))
(assert (= temp642_11 #x0000000000000000))
(assert (= temp642_10 temp642_11))
(assert (= temp642_12 #x0000000000000006))
(assert (= var134912
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp642_12)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_13 #x0000000000000001))
(assert (= var134912 temp642_13))
(assert (= temp642_14 #x0000000000000001))
(assert (= var134935 (bvxor ARGNAME_training_NAMEEND temp642_14)))
(assert (= temp642_16 #x0000000000000000))
(assert (= temp642_15 temp642_16))
(model-add temp642_1 () (_ BitVec 64) #x0000000000000002)
(model-add var1051073 () (_ BitVec 64) #x0000000000000002)
(model-add temp642_2 () (_ BitVec 64) #x0000000000000001)
(model-add var132043 () (_ BitVec 64) #x0000000000000001)
(model-add temp642_3 () (_ BitVec 64) #x0000000000000002)
(model-add var1313217 () (_ BitVec 64) #x0000000000000002)
(model-add temp642_4 () (_ BitVec 64) #x0000000000000002)
(model-add var1706433 () (_ BitVec 64) #x0000000000000002)
(model-add temp642_5 () (_ BitVec 64) #x0000000000000002)
(model-add var2296257 () (_ BitVec 64) #x0000000000000002)
(model-add temp642_6 () (_ BitVec 64) #x0000000000000002)
(model-add var2886081 () (_ BitVec 64) #x0000000000000002)
(model-add temp642_7 () (_ BitVec 64) #x0000000000000002)
(model-add var3475905 () (_ BitVec 64) #x0000000000000002)
(model-add temp642_8 () (_ BitVec 64) #x0000000000000000)
(model-add var134570 () (_ BitVec 64) #x0000000000000000)
(model-add temp642_9 () (_ BitVec 64) #x0000000000000000)






