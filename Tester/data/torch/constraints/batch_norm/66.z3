(declare-fun temp138_1 () (_ BitVec 64))
(declare-fun var1051073 () (_ BitVec 64))
(declare-fun temp138_2 () (_ BitVec 64))
(declare-fun var132043 () (_ BitVec 64))
(declare-fun temp138_3 () (_ BitVec 64))
(declare-fun var1313217 () (_ BitVec 64))
(declare-fun temp138_4 () (_ BitVec 64))
(declare-fun var1706433 () (_ BitVec 64))
(declare-fun temp138_5 () (_ BitVec 64))
(declare-fun var2296257 () (_ BitVec 64))
(declare-fun temp138_6 () (_ BitVec 64))
(declare-fun var2886081 () (_ BitVec 64))
(declare-fun temp138_7 () (_ BitVec 64))
(declare-fun var3475905 () (_ BitVec 64))
(declare-fun temp138_8 () (_ BitVec 64))
(declare-fun var134570 () (_ BitVec 64))
(declare-fun temp138_9 () (_ BitVec 64))
(declare-fun temp138_11 () (_ BitVec 64))
(declare-fun temp138_10 () (_ BitVec 64))
(declare-fun temp138_12 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134912 () (_ BitVec 64))
(declare-fun temp138_13 () (_ BitVec 64))
(declare-fun temp138_14 () (_ BitVec 64))
(declare-fun ARGNAME_training_NAMEEND () (_ BitVec 64))
(declare-fun var134935 () (_ BitVec 64))
(declare-fun temp138_16 () (_ BitVec 64))
(declare-fun temp138_15 () (_ BitVec 64))
(assert (= temp138_1 #x0000000000000002))
(assert (= var1051073 temp138_1))
(assert (= temp138_2 #x0000000000000001))
(assert (= var132043 temp138_2))
(assert (= temp138_3 #x0000000000000002))
(assert (= var1313217 temp138_3))
(assert (= temp138_4 #x0000000000000002))
(assert (= var1706433 temp138_4))
(assert (= temp138_5 #x0000000000000002))
(assert (= var2296257 temp138_5))
(assert (= temp138_6 #x0000000000000002))
(assert (= var2886081 temp138_6))
(assert (= temp138_7 #x0000000000000002))
(assert (= var3475905 temp138_7))
(assert (= temp138_8 #x0000000000000000))
(assert (= var134570 temp138_8))
(assert (= temp138_9 #x0000000000000000))
(assert (= var134570 temp138_9))
(assert (= temp138_11 #x0000000000000000))
(assert (= temp138_10 temp138_11))
(assert (= temp138_12 #x0000000000000006))
(assert (= var134912
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp138_12)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_13 #x0000000000000001))
(assert (= var134912 temp138_13))
(assert (= temp138_14 #x0000000000000001))
(assert (= var134935 (bvxor ARGNAME_training_NAMEEND temp138_14)))
(assert (= temp138_16 #x0000000000000000))
(assert (= temp138_15 temp138_16))
(model-add temp138_1 () (_ BitVec 64) #x0000000000000002)
(model-add var1051073 () (_ BitVec 64) #x0000000000000002)
(model-add temp138_2 () (_ BitVec 64) #x0000000000000001)
(model-add var132043 () (_ BitVec 64) #x0000000000000001)
(model-add temp138_3 () (_ BitVec 64) #x0000000000000002)
(model-add var1313217 () (_ BitVec 64) #x0000000000000002)
(model-add temp138_4 () (_ BitVec 64) #x0000000000000002)
(model-add var1706433 () (_ BitVec 64) #x0000000000000002)
(model-add temp138_5 () (_ BitVec 64) #x0000000000000002)
(model-add var2296257 () (_ BitVec 64) #x0000000000000002)
(model-add temp138_6 () (_ BitVec 64) #x0000000000000002)
(model-add var2886081 () (_ BitVec 64) #x0000000000000002)
(model-add temp138_7 () (_ BitVec 64) #x0000000000000002)
(model-add var3475905 () (_ BitVec 64) #x0000000000000002)
(model-add temp138_8 () (_ BitVec 64) #x0000000000000000)
(model-add var134570 () (_ BitVec 64) #x0000000000000000)
(model-add temp138_9 () (_ BitVec 64) #x0000000000000000)




