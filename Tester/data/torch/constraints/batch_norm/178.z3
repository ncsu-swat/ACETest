(declare-fun temp358_1 () (_ BitVec 64))
(declare-fun var1051073 () (_ BitVec 64))
(declare-fun temp358_2 () (_ BitVec 64))
(declare-fun var132043 () (_ BitVec 64))
(declare-fun temp358_3 () (_ BitVec 64))
(declare-fun var1313217 () (_ BitVec 64))
(declare-fun temp358_4 () (_ BitVec 64))
(declare-fun var1706433 () (_ BitVec 64))
(declare-fun temp358_5 () (_ BitVec 64))
(declare-fun var2296257 () (_ BitVec 64))
(declare-fun temp358_6 () (_ BitVec 64))
(declare-fun var2886081 () (_ BitVec 64))
(declare-fun temp358_7 () (_ BitVec 64))
(declare-fun var3475905 () (_ BitVec 64))
(declare-fun temp358_8 () (_ BitVec 64))
(declare-fun var134570 () (_ BitVec 64))
(declare-fun temp358_9 () (_ BitVec 64))
(declare-fun temp358_11 () (_ BitVec 64))
(declare-fun temp358_10 () (_ BitVec 64))
(declare-fun temp358_12 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134912 () (_ BitVec 64))
(declare-fun temp358_13 () (_ BitVec 64))
(declare-fun temp358_14 () (_ BitVec 64))
(declare-fun ARGNAME_training_NAMEEND () (_ BitVec 64))
(declare-fun var134935 () (_ BitVec 64))
(declare-fun temp358_16 () (_ BitVec 64))
(declare-fun temp358_15 () (_ BitVec 64))
(assert (= temp358_1 #x0000000000000002))
(assert (= var1051073 temp358_1))
(assert (= temp358_2 #x0000000000000001))
(assert (= var132043 temp358_2))
(assert (= temp358_3 #x0000000000000002))
(assert (= var1313217 temp358_3))
(assert (= temp358_4 #x0000000000000002))
(assert (= var1706433 temp358_4))
(assert (= temp358_5 #x0000000000000002))
(assert (= var2296257 temp358_5))
(assert (= temp358_6 #x0000000000000002))
(assert (= var2886081 temp358_6))
(assert (= temp358_7 #x0000000000000002))
(assert (= var3475905 temp358_7))
(assert (= temp358_8 #x0000000000000000))
(assert (= var134570 temp358_8))
(assert (= temp358_9 #x0000000000000000))
(assert (= var134570 temp358_9))
(assert (= temp358_11 #x0000000000000000))
(assert (= temp358_10 temp358_11))
(assert (= temp358_12 #x0000000000000006))
(assert (= var134912
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp358_12)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_13 #x0000000000000001))
(assert (= var134912 temp358_13))
(assert (= temp358_14 #x0000000000000001))
(assert (= var134935 (bvxor ARGNAME_training_NAMEEND temp358_14)))
(assert (= temp358_16 #x0000000000000002))
(assert (= temp358_15 temp358_16))
(model-add temp358_1 () (_ BitVec 64) #x0000000000000002)
(model-add var1051073 () (_ BitVec 64) #x0000000000000002)
(model-add temp358_2 () (_ BitVec 64) #x0000000000000001)
(model-add var132043 () (_ BitVec 64) #x0000000000000001)
(model-add temp358_3 () (_ BitVec 64) #x0000000000000002)
(model-add var1313217 () (_ BitVec 64) #x0000000000000002)
(model-add temp358_4 () (_ BitVec 64) #x0000000000000002)
(model-add var1706433 () (_ BitVec 64) #x0000000000000002)
(model-add temp358_5 () (_ BitVec 64) #x0000000000000002)
(model-add var2296257 () (_ BitVec 64) #x0000000000000002)
(model-add temp358_6 () (_ BitVec 64) #x0000000000000002)
(model-add var2886081 () (_ BitVec 64) #x0000000000000002)
(model-add temp358_7 () (_ BitVec 64) #x0000000000000002)
(model-add var3475905 () (_ BitVec 64) #x0000000000000002)
(model-add temp358_8 () (_ BitVec 64) #x0000000000000000)
(model-add var134570 () (_ BitVec 64) #x0000000000000000)
(model-add temp358_9 () (_ BitVec 64) #x0000000000000000)





