(declare-fun temp52_1 () (_ BitVec 64))
(declare-fun temp52_2 () (_ BitVec 64))
(declare-fun var213198 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp52_3 () (_ BitVec 64))
(declare-fun ARGNAME_split_size_NAMEEND () (_ BitVec 64))
(declare-fun var213210 () (_ BitVec 64))
(declare-fun temp52_4 () (_ BitVec 64))
(declare-fun temp52_5 () (_ BitVec 64))
(declare-fun temp52_6 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp52_7 () (_ BitVec 64))
(declare-fun temp52_8 () (_ BitVec 64))
(declare-fun temp52_9 () (_ BitVec 64))
(declare-fun temp52_10 () (_ BitVec 64))
(declare-fun temp52_11 () (_ BitVec 64))
(declare-fun temp52_12 () (_ BitVec 64))
(declare-fun temp52_13 () (_ BitVec 64))
(declare-fun temp52_14 () (_ BitVec 64))
(declare-fun temp52_15 () (_ BitVec 64))
(declare-fun temp52_16 () (_ BitVec 64))
(declare-fun temp52_17 () (_ BitVec 64))
(declare-fun temp52_18 () (_ BitVec 64))
(declare-fun temp52_19 () (_ BitVec 64))
(declare-fun temp52_20 () (_ BitVec 64))
(declare-fun temp52_21 () (_ BitVec 64))
(declare-fun temp52_22 () (_ BitVec 64))
(declare-fun temp52_23 () (_ BitVec 64))
(declare-fun var213182 () (_ BitVec 64))
(declare-fun temp52_24 () (_ BitVec 64))
(declare-fun temp52_25 () (_ BitVec 64))
(declare-fun var213232 () (_ BitVec 64))
(declare-fun temp52_26 () (_ BitVec 64))
(declare-fun var213235 () (_ BitVec 64))
(declare-fun temp52_27 () (_ BitVec 64))
(declare-fun var213236 () (_ BitVec 64))
(declare-fun var213237 () (_ BitVec 64))
(declare-fun temp52_28 () (_ BitVec 64))
(declare-fun temp52_29 () (_ BitVec 64))
(declare-fun var213257 () (_ BitVec 64))
(declare-fun temp52_30 () (_ BitVec 64))
(declare-fun temp52_31 () (_ BitVec 64))
(declare-fun var213274 () (_ BitVec 64))
(declare-fun var213179 () (_ BitVec 64))
(declare-fun var147540 () (_ BitVec 64))
(declare-fun var335378 () (_ BitVec 64))
(declare-fun temp52_32 () (_ BitVec 64))
(declare-fun var147529 () (_ BitVec 64))
(declare-fun temp52_33 () (_ BitVec 64))
(declare-fun temp52_34 () (_ BitVec 64))
(declare-fun var147551 () (_ BitVec 64))
(declare-fun var147552 () (_ BitVec 64))
(declare-fun var147553 () (_ BitVec 64))
(declare-fun var461689 () (_ BitVec 64))
(declare-fun temp52_36 () (_ BitVec 64))
(declare-fun temp52_35 () (_ BitVec 64))
(declare-fun var527681 () (_ BitVec 64))
(declare-fun var527682 () (_ BitVec 64))
(declare-fun temp52_37 () (_ BitVec 64))
(declare-fun temp52_38 () (_ BitVec 64))
(declare-fun var593223 () (_ BitVec 64))
(declare-fun var658770 () (_ BitVec 64))
(declare-fun temp52_39 () (_ BitVec 64))
(declare-fun var1445668 () (_ BitVec 64))
(declare-fun temp52_40 () (_ BitVec 64))
(declare-fun var1445683 () (_ BitVec 64))
(declare-fun temp52_41 () (_ BitVec 64))
(declare-fun var1445685 () (_ BitVec 64))
(declare-fun temp52_42 () (_ BitVec 64))
(declare-fun var1445748 () (_ BitVec 64))
(declare-fun temp52_43 () (_ BitVec 64))
(declare-fun var1511204 () (_ BitVec 64))
(declare-fun temp52_44 () (_ BitVec 64))
(declare-fun var1511219 () (_ BitVec 64))
(declare-fun temp52_45 () (_ BitVec 64))
(declare-fun var1511221 () (_ BitVec 64))
(declare-fun temp52_46 () (_ BitVec 64))
(declare-fun var1511284 () (_ BitVec 64))
(assert (= temp52_1 #x0000000000000000))
(assert (= var213198
   (ite (= ARGNAME_input_NAMEEND_DIM temp52_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp52_2 #x0000000000000000))
(assert (= var213198 temp52_2))
(assert (= temp52_3 #xffffffffffffffff))
(assert (= var213210
   (ite (bvsgt ARGNAME_split_size_NAMEEND temp52_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp52_4 #x0000000000000001))
(assert (= var213210 temp52_4))
(assert (= temp52_5 #x0000000000000000))
(assert (= temp52_6 temp52_5))
(assert (= temp52_7 (select ARGNAME_input_NAMEEND_DIMSIZE temp52_6)))
(assert (= temp52_8 #x0000000000000001))
(assert (= temp52_9 temp52_8))
(assert (= temp52_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp52_9)))
(assert (= temp52_11 #x0000000000000002))
(assert (= temp52_12 temp52_11))
(assert (= temp52_13 (select ARGNAME_input_NAMEEND_DIMSIZE temp52_12)))
(assert (= temp52_14 #x0000000000000003))
(assert (= temp52_15 temp52_14))
(assert (= temp52_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp52_15)))
(assert (= temp52_17 #x0000000000000004))
(assert (= temp52_18 temp52_17))
(assert (= temp52_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp52_18)))
(assert (= temp52_20 #x0000000000000005))
(assert (= temp52_21 temp52_20))
(assert (= temp52_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp52_21)))
(assert (= temp52_23 #x0000000000000000))
(assert (= temp52_24
   (ite (bvslt var213182 temp52_23)
        (bvadd ARGNAME_input_NAMEEND_DIM var213182)
        var213182)))
(assert (= temp52_25 (select ARGNAME_input_NAMEEND_DIMSIZE temp52_24)))
(assert (= var213232 temp52_25))
(assert (bvslt (ite (bvslt var213182 temp52_23)
            (bvadd ARGNAME_input_NAMEEND_DIM var213182)
            var213182)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp52_26 #x0000000000000001))
(assert (= var213235
   (ite (bvslt ARGNAME_split_size_NAMEEND temp52_26)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp52_27 #x0000000000000000))
(assert (= var213236
   (ite (distinct var213232 temp52_27) #x0000000000000001 #x0000000000000000)))
(assert (= var213237 (bvand var213236 var213235)))
(assert (= temp52_28 #x0000000000000000))
(assert (= var213237 temp52_28))
(assert (= temp52_29 #x0000000000000000))
(assert (= var213257
   (ite (= ARGNAME_split_size_NAMEEND temp52_29)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp52_30 #x0000000000000001))
(assert (= var213257 temp52_30))
(assert (= temp52_31 #x0000000000000001))
(assert (= var213274 temp52_31))
(assert (= var213179 var213274))
(assert (= var147540 var213179))
(assert (= var335378 var147540))
(assert (= temp52_32 #x0000000000000000))
(assert (= temp52_33
   (ite (bvslt var147529 temp52_32)
        (bvadd ARGNAME_input_NAMEEND_DIM var147529)
        var147529)))
(assert (= temp52_34 (select ARGNAME_input_NAMEEND_DIMSIZE temp52_33)))
(assert (= var147551 temp52_34))
(assert (bvslt (ite (bvslt var147529 temp52_32)
            (bvadd ARGNAME_input_NAMEEND_DIM var147529)
            var147529)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var147552 (bvmul var147540 ARGNAME_split_size_NAMEEND)))
(assert (= var147553 (bvsub var147551 var147552)))
(assert (= var461689 var147540))
(assert (= temp52_36 #x0000000000000000))
(assert (= temp52_35 temp52_36))
(assert (= var527681 var461689))
(assert (= var527682
   (ite (bvslt temp52_35 var527681) #x0000000000000001 #x0000000000000000)))
(assert (= temp52_37 (ite (= var527682 #x0000000000000001) var461689 temp52_35)))
(assert (= temp52_38 #x0000000000000000))
(assert (= var593223 temp52_38))
(assert (= var658770 var593223))
(assert (= temp52_39 #x0000000000000000))
(assert (= var1445668 temp52_39))
(assert (= temp52_40 #x0000000000003fff))
(assert (= var1445683 (bvand var1445668 temp52_40)))
(assert (= temp52_41 #x0000000000000000))
(assert (= var1445685
   (ite (= var1445683 temp52_41) #x0000000000000001 #x0000000000000000)))
(assert (= temp52_42 #x0000000000000001))
(assert (= var1445685 temp52_42))
(assert (= var1445748 var1445668))
(assert (= temp52_43 #x0000000000000000))
(assert (= var1511204 temp52_43))
(assert (= temp52_44 #x0000000000003fff))
(assert (= var1511219 (bvand var1511204 temp52_44)))
(assert (= temp52_45 #x0000000000000000))
(assert (= var1511221
   (ite (= var1511219 temp52_45) #x0000000000000001 #x0000000000000000)))
(assert (= temp52_46 #x0000000000000001))
(assert (= var1511221 temp52_46))
(assert (= var1511284 var1511204))
(model-add temp52_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp52_2 () (_ BitVec 64) #x0000000000000000)
(model-add var213198 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))






