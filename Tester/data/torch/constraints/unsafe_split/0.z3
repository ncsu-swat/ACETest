(declare-fun temp0_1 () (_ BitVec 64))
(declare-fun temp0_2 () (_ BitVec 64))
(declare-fun var213198 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp0_3 () (_ BitVec 64))
(declare-fun ARGNAME_split_size_NAMEEND () (_ BitVec 64))
(declare-fun var213210 () (_ BitVec 64))
(declare-fun temp0_4 () (_ BitVec 64))
(declare-fun temp0_5 () (_ BitVec 64))
(declare-fun temp0_6 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_7 () (_ BitVec 64))
(declare-fun temp0_8 () (_ BitVec 64))
(declare-fun temp0_9 () (_ BitVec 64))
(declare-fun temp0_10 () (_ BitVec 64))
(declare-fun temp0_11 () (_ BitVec 64))
(declare-fun temp0_12 () (_ BitVec 64))
(declare-fun temp0_13 () (_ BitVec 64))
(declare-fun temp0_14 () (_ BitVec 64))
(declare-fun temp0_15 () (_ BitVec 64))
(declare-fun temp0_16 () (_ BitVec 64))
(declare-fun temp0_17 () (_ BitVec 64))
(declare-fun temp0_18 () (_ BitVec 64))
(declare-fun temp0_19 () (_ BitVec 64))
(declare-fun temp0_20 () (_ BitVec 64))
(declare-fun temp0_21 () (_ BitVec 64))
(declare-fun temp0_22 () (_ BitVec 64))
(declare-fun temp0_23 () (_ BitVec 64))
(declare-fun var213182 () (_ BitVec 64))
(declare-fun temp0_24 () (_ BitVec 64))
(declare-fun temp0_25 () (_ BitVec 64))
(declare-fun var213232 () (_ BitVec 64))
(declare-fun temp0_26 () (_ BitVec 64))
(declare-fun var213235 () (_ BitVec 64))
(declare-fun temp0_27 () (_ BitVec 64))
(declare-fun var213236 () (_ BitVec 64))
(declare-fun var213237 () (_ BitVec 64))
(declare-fun temp0_28 () (_ BitVec 64))
(declare-fun temp0_29 () (_ BitVec 64))
(declare-fun var213257 () (_ BitVec 64))
(declare-fun temp0_30 () (_ BitVec 64))
(declare-fun temp0_31 () (_ BitVec 64))
(declare-fun var213274 () (_ BitVec 64))
(declare-fun var213179 () (_ BitVec 64))
(declare-fun var147540 () (_ BitVec 64))
(declare-fun var335378 () (_ BitVec 64))
(declare-fun temp0_32 () (_ BitVec 64))
(declare-fun var147529 () (_ BitVec 64))
(declare-fun temp0_33 () (_ BitVec 64))
(declare-fun temp0_34 () (_ BitVec 64))
(declare-fun var147551 () (_ BitVec 64))
(declare-fun var147552 () (_ BitVec 64))
(declare-fun var147553 () (_ BitVec 64))
(declare-fun var461689 () (_ BitVec 64))
(declare-fun temp0_36 () (_ BitVec 64))
(declare-fun temp0_35 () (_ BitVec 64))
(declare-fun var527681 () (_ BitVec 64))
(declare-fun var527682 () (_ BitVec 64))
(declare-fun temp0_37 () (_ BitVec 64))
(declare-fun temp0_38 () (_ BitVec 64))
(declare-fun var593223 () (_ BitVec 64))
(declare-fun var658770 () (_ BitVec 64))
(declare-fun temp0_39 () (_ BitVec 64))
(declare-fun var147575 () (_ BitVec 64))
(declare-fun temp0_40 () (_ BitVec 64))
(declare-fun var1838884 () (_ BitVec 64))
(declare-fun temp0_41 () (_ BitVec 64))
(declare-fun var1838899 () (_ BitVec 64))
(declare-fun temp0_42 () (_ BitVec 64))
(declare-fun var1838901 () (_ BitVec 64))
(declare-fun temp0_43 () (_ BitVec 64))
(declare-fun var1838964 () (_ BitVec 64))
(declare-fun temp0_44 () (_ BitVec 64))
(declare-fun var1904420 () (_ BitVec 64))
(declare-fun temp0_45 () (_ BitVec 64))
(declare-fun var1904435 () (_ BitVec 64))
(declare-fun temp0_46 () (_ BitVec 64))
(declare-fun var1904437 () (_ BitVec 64))
(declare-fun temp0_47 () (_ BitVec 64))
(declare-fun var1904500 () (_ BitVec 64))
(assert (= temp0_1 #x0000000000000000))
(assert (= var213198
   (ite (= ARGNAME_input_NAMEEND_DIM temp0_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_2 #x0000000000000000))
(assert (= var213198 temp0_2))
(assert (= temp0_3 #xffffffffffffffff))
(assert (= var213210
   (ite (bvsgt ARGNAME_split_size_NAMEEND temp0_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_4 #x0000000000000001))
(assert (= var213210 temp0_4))
(assert (= temp0_5 #x0000000000000000))
(assert (= temp0_6 temp0_5))
(assert (= temp0_7 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_6)))
(assert (= temp0_8 #x0000000000000001))
(assert (= temp0_9 temp0_8))
(assert (= temp0_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_9)))
(assert (= temp0_11 #x0000000000000002))
(assert (= temp0_12 temp0_11))
(assert (= temp0_13 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_12)))
(assert (= temp0_14 #x0000000000000003))
(assert (= temp0_15 temp0_14))
(assert (= temp0_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_15)))
(assert (= temp0_17 #x0000000000000004))
(assert (= temp0_18 temp0_17))
(assert (= temp0_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_18)))
(assert (= temp0_20 #x0000000000000005))
(assert (= temp0_21 temp0_20))
(assert (= temp0_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_21)))
(assert (= temp0_23 #x0000000000000000))
(assert (= temp0_24
   (ite (bvslt var213182 temp0_23)
        (bvadd ARGNAME_input_NAMEEND_DIM var213182)
        var213182)))
(assert (= temp0_25 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_24)))
(assert (= var213232 temp0_25))
(assert (bvslt (ite (bvslt var213182 temp0_23)
            (bvadd ARGNAME_input_NAMEEND_DIM var213182)
            var213182)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp0_26 #x0000000000000001))
(assert (= var213235
   (ite (bvslt ARGNAME_split_size_NAMEEND temp0_26)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_27 #x0000000000000000))
(assert (= var213236
   (ite (distinct var213232 temp0_27) #x0000000000000001 #x0000000000000000)))
(assert (= var213237 (bvand var213236 var213235)))
(assert (= temp0_28 #x0000000000000000))
(assert (= var213237 temp0_28))
(assert (= temp0_29 #x0000000000000000))
(assert (= var213257
   (ite (= ARGNAME_split_size_NAMEEND temp0_29)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_30 #x0000000000000001))
(assert (= var213257 temp0_30))
(assert (= temp0_31 #x0000000000000001))
(assert (= var213274 temp0_31))
(assert (= var213179 var213274))
(assert (= var147540 var213179))
(assert (= var335378 var147540))
(assert (= temp0_32 #x0000000000000000))
(assert (= temp0_33
   (ite (bvslt var147529 temp0_32)
        (bvadd ARGNAME_input_NAMEEND_DIM var147529)
        var147529)))
(assert (= temp0_34 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_33)))
(assert (= var147551 temp0_34))
(assert (bvslt (ite (bvslt var147529 temp0_32)
            (bvadd ARGNAME_input_NAMEEND_DIM var147529)
            var147529)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var147552 (bvmul var147540 ARGNAME_split_size_NAMEEND)))
(assert (= var147553 (bvsub var147551 var147552)))
(assert (= var461689 var147540))
(assert (= temp0_36 #x0000000000000000))
(assert (= temp0_35 temp0_36))
(assert (= var527681 var461689))
(assert (= var527682
   (ite (bvslt temp0_35 var527681) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_37 (ite (= var527682 #x0000000000000001) var461689 temp0_35)))
(assert (= temp0_38 #x0000000000000000))
(assert (= var593223 temp0_38))
(assert (= var658770 var593223))
(assert (= temp0_39 #xffffffffffffffff))
(assert (= var147575 (bvadd var147540 temp0_39)))
(assert (= temp0_40 #x0000000000000000))
(assert (= var1838884 temp0_40))
(assert (= temp0_41 #x0000000000003fff))
(assert (= var1838899 (bvand var1838884 temp0_41)))
(assert (= temp0_42 #x0000000000000000))
(assert (= var1838901
   (ite (= var1838899 temp0_42) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_43 #x0000000000000001))
(assert (= var1838901 temp0_43))
(assert (= var1838964 var1838884))
(assert (= temp0_44 #x0000000000000000))
(assert (= var1904420 temp0_44))
(assert (= temp0_45 #x0000000000003fff))
(assert (= var1904435 (bvand var1904420 temp0_45)))
(assert (= temp0_46 #x0000000000000000))
(assert (= var1904437
   (ite (= var1904435 temp0_46) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_47 #x0000000000000001))
(assert (= var1904437 temp0_47))
(assert (= var1904500 var1904420))
(model-add temp0_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp0_2 () (_ BitVec 64) #x0000000000000000)
(model-add var213198 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))






