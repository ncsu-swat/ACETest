(declare-fun temp1_1 () (_ BitVec 64))
(declare-fun temp1_2 () (_ BitVec 64))
(declare-fun var213198 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1_3 () (_ BitVec 64))
(declare-fun ARGNAME_split_size_NAMEEND () (_ BitVec 64))
(declare-fun var213210 () (_ BitVec 64))
(declare-fun temp1_4 () (_ BitVec 64))
(declare-fun temp1_5 () (_ BitVec 64))
(declare-fun temp1_6 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_7 () (_ BitVec 64))
(declare-fun temp1_8 () (_ BitVec 64))
(declare-fun temp1_9 () (_ BitVec 64))
(declare-fun temp1_10 () (_ BitVec 64))
(declare-fun temp1_11 () (_ BitVec 64))
(declare-fun temp1_12 () (_ BitVec 64))
(declare-fun temp1_13 () (_ BitVec 64))
(declare-fun temp1_14 () (_ BitVec 64))
(declare-fun temp1_15 () (_ BitVec 64))
(declare-fun temp1_16 () (_ BitVec 64))
(declare-fun temp1_17 () (_ BitVec 64))
(declare-fun temp1_18 () (_ BitVec 64))
(declare-fun temp1_19 () (_ BitVec 64))
(declare-fun temp1_20 () (_ BitVec 64))
(declare-fun temp1_21 () (_ BitVec 64))
(declare-fun temp1_22 () (_ BitVec 64))
(declare-fun temp1_23 () (_ BitVec 64))
(declare-fun var213182 () (_ BitVec 64))
(declare-fun temp1_24 () (_ BitVec 64))
(declare-fun temp1_25 () (_ BitVec 64))
(declare-fun var213232 () (_ BitVec 64))
(declare-fun temp1_26 () (_ BitVec 64))
(declare-fun var213235 () (_ BitVec 64))
(declare-fun temp1_27 () (_ BitVec 64))
(declare-fun var213236 () (_ BitVec 64))
(declare-fun var213237 () (_ BitVec 64))
(declare-fun temp1_28 () (_ BitVec 64))
(declare-fun temp1_29 () (_ BitVec 64))
(declare-fun var213257 () (_ BitVec 64))
(declare-fun temp1_30 () (_ BitVec 64))
(declare-fun temp1_31 () (_ BitVec 64))
(declare-fun var213274 () (_ BitVec 64))
(declare-fun var213179 () (_ BitVec 64))
(declare-fun var147540 () (_ BitVec 64))
(declare-fun var335378 () (_ BitVec 64))
(declare-fun temp1_32 () (_ BitVec 64))
(declare-fun var147529 () (_ BitVec 64))
(declare-fun temp1_33 () (_ BitVec 64))
(declare-fun temp1_34 () (_ BitVec 64))
(declare-fun var147551 () (_ BitVec 64))
(declare-fun var147552 () (_ BitVec 64))
(declare-fun var147553 () (_ BitVec 64))
(declare-fun var461689 () (_ BitVec 64))
(declare-fun temp1_36 () (_ BitVec 64))
(declare-fun temp1_35 () (_ BitVec 64))
(declare-fun var527681 () (_ BitVec 64))
(declare-fun var527682 () (_ BitVec 64))
(declare-fun temp1_37 () (_ BitVec 64))
(declare-fun temp1_38 () (_ BitVec 64))
(declare-fun var593223 () (_ BitVec 64))
(declare-fun var658770 () (_ BitVec 64))
(declare-fun temp1_39 () (_ BitVec 64))
(declare-fun var147575 () (_ BitVec 64))
(declare-fun temp1_40 () (_ BitVec 64))
(declare-fun var1838884 () (_ BitVec 64))
(declare-fun temp1_41 () (_ BitVec 64))
(declare-fun var1838899 () (_ BitVec 64))
(declare-fun temp1_42 () (_ BitVec 64))
(declare-fun var1838901 () (_ BitVec 64))
(declare-fun temp1_43 () (_ BitVec 64))
(declare-fun var1838964 () (_ BitVec 64))
(declare-fun temp1_44 () (_ BitVec 64))
(declare-fun var1904420 () (_ BitVec 64))
(declare-fun temp1_45 () (_ BitVec 64))
(declare-fun var1904435 () (_ BitVec 64))
(declare-fun temp1_46 () (_ BitVec 64))
(declare-fun var1904437 () (_ BitVec 64))
(declare-fun temp1_47 () (_ BitVec 64))
(declare-fun var1904500 () (_ BitVec 64))
(declare-fun temp1_48 () (_ BitVec 64))
(declare-fun var2113932 () (_ BitVec 64))
(declare-fun temp1_49 () (_ BitVec 64))
(declare-fun var2297636 () (_ BitVec 64))
(declare-fun temp1_50 () (_ BitVec 64))
(declare-fun var2297651 () (_ BitVec 64))
(declare-fun temp1_51 () (_ BitVec 64))
(declare-fun var2297653 () (_ BitVec 64))
(declare-fun temp1_52 () (_ BitVec 64))
(declare-fun var2297716 () (_ BitVec 64))
(declare-fun temp1_53 () (_ BitVec 64))
(declare-fun var2363172 () (_ BitVec 64))
(declare-fun temp1_54 () (_ BitVec 64))
(declare-fun var2363187 () (_ BitVec 64))
(declare-fun temp1_55 () (_ BitVec 64))
(declare-fun var2363189 () (_ BitVec 64))
(declare-fun temp1_56 () (_ BitVec 64))
(declare-fun var2363252 () (_ BitVec 64))
(assert (= temp1_1 #x0000000000000000))
(assert (= var213198
   (ite (= ARGNAME_input_NAMEEND_DIM temp1_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_2 #x0000000000000000))
(assert (= var213198 temp1_2))
(assert (= temp1_3 #xffffffffffffffff))
(assert (= var213210
   (ite (bvsgt ARGNAME_split_size_NAMEEND temp1_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_4 #x0000000000000001))
(assert (= var213210 temp1_4))
(assert (= temp1_5 #x0000000000000000))
(assert (= temp1_6 temp1_5))
(assert (= temp1_7 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_6)))
(assert (= temp1_8 #x0000000000000001))
(assert (= temp1_9 temp1_8))
(assert (= temp1_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_9)))
(assert (= temp1_11 #x0000000000000002))
(assert (= temp1_12 temp1_11))
(assert (= temp1_13 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_12)))
(assert (= temp1_14 #x0000000000000003))
(assert (= temp1_15 temp1_14))
(assert (= temp1_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_15)))
(assert (= temp1_17 #x0000000000000004))
(assert (= temp1_18 temp1_17))
(assert (= temp1_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_18)))
(assert (= temp1_20 #x0000000000000005))
(assert (= temp1_21 temp1_20))
(assert (= temp1_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_21)))
(assert (= temp1_23 #x0000000000000000))
(assert (= temp1_24
   (ite (bvslt var213182 temp1_23)
        (bvadd ARGNAME_input_NAMEEND_DIM var213182)
        var213182)))
(assert (= temp1_25 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_24)))
(assert (= var213232 temp1_25))
(assert (bvslt (ite (bvslt var213182 temp1_23)
            (bvadd ARGNAME_input_NAMEEND_DIM var213182)
            var213182)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1_26 #x0000000000000001))
(assert (= var213235
   (ite (bvslt ARGNAME_split_size_NAMEEND temp1_26)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_27 #x0000000000000000))
(assert (= var213236
   (ite (distinct var213232 temp1_27) #x0000000000000001 #x0000000000000000)))
(assert (= var213237 (bvand var213236 var213235)))
(assert (= temp1_28 #x0000000000000000))
(assert (= var213237 temp1_28))
(assert (= temp1_29 #x0000000000000000))
(assert (= var213257
   (ite (= ARGNAME_split_size_NAMEEND temp1_29)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_30 #x0000000000000001))
(assert (= var213257 temp1_30))
(assert (= temp1_31 #x0000000000000001))
(assert (= var213274 temp1_31))
(assert (= var213179 var213274))
(assert (= var147540 var213179))
(assert (= var335378 var147540))
(assert (= temp1_32 #x0000000000000000))
(assert (= temp1_33
   (ite (bvslt var147529 temp1_32)
        (bvadd ARGNAME_input_NAMEEND_DIM var147529)
        var147529)))
(assert (= temp1_34 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_33)))
(assert (= var147551 temp1_34))
(assert (bvslt (ite (bvslt var147529 temp1_32)
            (bvadd ARGNAME_input_NAMEEND_DIM var147529)
            var147529)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var147552 (bvmul var147540 ARGNAME_split_size_NAMEEND)))
(assert (= var147553 (bvsub var147551 var147552)))
(assert (= var461689 var147540))
(assert (= temp1_36 #x0000000000000000))
(assert (= temp1_35 temp1_36))
(assert (= var527681 var461689))
(assert (= var527682
   (ite (bvslt temp1_35 var527681) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_37 (ite (= var527682 #x0000000000000001) var461689 temp1_35)))
(assert (= temp1_38 #x0000000000000000))
(assert (= var593223 temp1_38))
(assert (= var658770 var593223))
(assert (= temp1_39 #xffffffffffffffff))
(assert (= var147575 (bvadd var147540 temp1_39)))
(assert (= temp1_40 #x0000000000000000))
(assert (= var1838884 temp1_40))
(assert (= temp1_41 #x0000000000003fff))
(assert (= var1838899 (bvand var1838884 temp1_41)))
(assert (= temp1_42 #x0000000000000000))
(assert (= var1838901
   (ite (= var1838899 temp1_42) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_43 #x0000000000000001))
(assert (= var1838901 temp1_43))
(assert (= var1838964 var1838884))
(assert (= temp1_44 #x0000000000000000))
(assert (= var1904420 temp1_44))
(assert (= temp1_45 #x0000000000003fff))
(assert (= var1904435 (bvand var1904420 temp1_45)))
(assert (= temp1_46 #x0000000000000000))
(assert (= var1904437
   (ite (= var1904435 temp1_46) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_47 #x0000000000000001))
(assert (= var1904437 temp1_47))
(assert (= var1904500 var1904420))
(assert (= temp1_48 #x0000000000000000))
(assert (= var2113932 temp1_48))
(assert (= temp1_49 #x0000000000000000))
(assert (= var2297636 temp1_49))
(assert (= temp1_50 #x0000000000003fff))
(assert (= var2297651 (bvand var2297636 temp1_50)))
(assert (= temp1_51 #x0000000000000000))
(assert (= var2297653
   (ite (= var2297651 temp1_51) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_52 #x0000000000000001))
(assert (= var2297653 temp1_52))
(assert (= var2297716 var2297636))
(assert (= temp1_53 #x0000000000000000))
(assert (= var2363172 temp1_53))
(assert (= temp1_54 #x0000000000003fff))
(assert (= var2363187 (bvand var2363172 temp1_54)))
(assert (= temp1_55 #x0000000000000000))
(assert (= var2363189
   (ite (= var2363187 temp1_55) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_56 #x0000000000000001))
(assert (= var2363189 temp1_56))
(assert (= var2363252 var2363172))
(model-add temp1_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp1_2 () (_ BitVec 64) #x0000000000000000)
(model-add var213198 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))






