(declare-fun temp105_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp105_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp105_3 () (_ BitVec 64))
(declare-fun temp105_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp105_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp105_6 () (_ BitVec 64))
(declare-fun temp105_7 () (_ BitVec 64))
(declare-fun temp105_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp105_9 () (_ BitVec 64))
(declare-fun temp105_10 () (_ BitVec 64))
(declare-fun temp105_11 () (_ BitVec 64))
(declare-fun temp105_12 () (_ BitVec 64))
(declare-fun temp105_13 () (_ BitVec 64))
(declare-fun temp105_14 () (_ BitVec 64))
(declare-fun temp105_15 () (_ BitVec 64))
(declare-fun temp105_16 () (_ BitVec 64))
(declare-fun temp105_17 () (_ BitVec 64))
(declare-fun temp105_18 () (_ BitVec 64))
(declare-fun temp105_19 () (_ BitVec 64))
(declare-fun temp105_20 () (_ BitVec 64))
(declare-fun temp105_21 () (_ BitVec 64))
(declare-fun temp105_22 () (_ BitVec 64))
(declare-fun temp105_23 () (_ BitVec 64))
(declare-fun temp105_24 () (_ BitVec 64))
(declare-fun temp105_25 () (_ BitVec 64))
(declare-fun temp105_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp105_27 () (_ BitVec 64))
(declare-fun temp105_28 () (_ BitVec 64))
(declare-fun temp105_29 () (_ BitVec 64))
(declare-fun temp105_30 () (_ BitVec 64))
(declare-fun temp105_31 () (_ BitVec 64))
(declare-fun temp105_32 () (_ BitVec 64))
(declare-fun temp105_33 () (_ BitVec 64))
(declare-fun temp105_34 () (_ BitVec 64))
(declare-fun temp105_35 () (_ BitVec 64))
(declare-fun temp105_36 () (_ BitVec 64))
(declare-fun temp105_37 () (_ BitVec 64))
(declare-fun temp105_38 () (_ BitVec 64))
(declare-fun temp105_39 () (_ BitVec 64))
(declare-fun temp105_40 () (_ BitVec 64))
(declare-fun temp105_41 () (_ BitVec 64))
(declare-fun temp105_42 () (_ BitVec 64))
(declare-fun temp105_43 () (_ BitVec 64))
(declare-fun temp105_44 () (_ BitVec 64))
(declare-fun temp105_45 () (_ BitVec 64))
(declare-fun temp105_46 () (_ BitVec 64))
(declare-fun temp105_47 () (_ BitVec 64))
(declare-fun temp105_48 () (_ BitVec 64))
(declare-fun temp105_49 () (_ BitVec 64))
(declare-fun temp105_50 () (_ BitVec 64))
(declare-fun temp105_51 () (_ BitVec 64))
(declare-fun temp105_52 () (_ BitVec 64))
(declare-fun temp105_53 () (_ BitVec 64))
(declare-fun temp105_54 () (_ BitVec 64))
(declare-fun temp105_55 () (_ BitVec 64))
(declare-fun temp105_56 () (_ BitVec 64))
(declare-fun temp105_57 () (_ BitVec 64))
(declare-fun temp105_58 () (_ BitVec 64))
(declare-fun temp105_59 () (_ BitVec 64))
(declare-fun temp105_60 () (_ BitVec 64))
(declare-fun temp105_61 () (_ BitVec 64))
(declare-fun temp105_62 () (_ BitVec 64))
(declare-fun temp105_63 () (_ BitVec 64))
(declare-fun temp105_64 () (_ BitVec 64))
(declare-fun temp105_65 () (_ BitVec 64))
(declare-fun temp105_66 () (_ BitVec 64))
(declare-fun temp105_67 () (_ BitVec 64))
(declare-fun temp105_68 () (_ BitVec 64))
(declare-fun temp105_69 () (_ BitVec 64))
(declare-fun temp105_70 () (_ BitVec 64))
(declare-fun temp105_71 () (_ BitVec 64))
(declare-fun temp105_72 () (_ BitVec 64))
(declare-fun temp105_73 () (_ BitVec 64))
(declare-fun temp105_74 () (_ BitVec 64))
(declare-fun temp105_75 () (_ BitVec 64))
(declare-fun temp105_76 () (_ BitVec 64))
(declare-fun temp105_77 () (_ BitVec 64))
(declare-fun temp105_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp105_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp105_80 () (_ BitVec 64))
(declare-fun var987402 () (_ BitVec 64))
(declare-fun var987367 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp105_81 () (_ BitVec 64))
(declare-fun temp105_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp105_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp105_84 () (_ BitVec 64))
(declare-fun temp105_85 () (_ BitVec 64))
(declare-fun var2363802 () (_ BitVec 64))
(declare-fun temp105_86 () (_ BitVec 64))
(declare-fun var2888090 () (_ BitVec 64))
(declare-fun temp105_87 () (_ BitVec 64))
(declare-fun var4395939 () (_ BitVec 64))
(declare-fun temp105_89 () (_ BitVec 64))
(declare-fun temp105_88 () (_ BitVec 64))
(assert (= temp105_1 #x0000000000080000))
(assert (= var461925 temp105_1))
(assert (= temp105_2 #x0000000000080000))
(assert (= var724069 temp105_2))
(assert (= temp105_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp105_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp105_4 #x0000000000000000))
(assert (= var69380 temp105_4))
(assert (= temp105_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp105_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp105_6 #x0000000000000000))
(assert (= var69401 temp105_6))
(assert (= temp105_7 #x0000000000000000))
(assert (= temp105_8 temp105_7))
(assert (= temp105_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_8)))
(assert (= temp105_10 #x0000000000000001))
(assert (= temp105_11 temp105_10))
(assert (= temp105_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_11)))
(assert (= temp105_13 #x0000000000000002))
(assert (= temp105_14 temp105_13))
(assert (= temp105_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_14)))
(assert (= temp105_16 #x0000000000000003))
(assert (= temp105_17 temp105_16))
(assert (= temp105_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_17)))
(assert (= temp105_19 #x0000000000000004))
(assert (= temp105_20 temp105_19))
(assert (= temp105_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_20)))
(assert (= temp105_22 #x0000000000000005))
(assert (= temp105_23 temp105_22))
(assert (= temp105_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_23)))
(assert (= temp105_25 #x0000000000000000))
(assert (= temp105_26 temp105_25))
(assert (= temp105_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp105_26)))
(assert (= temp105_28 #x0000000000000001))
(assert (= temp105_29 temp105_28))
(assert (= temp105_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp105_29)))
(assert (= temp105_31 #x0000000000000002))
(assert (= temp105_32 temp105_31))
(assert (= temp105_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp105_32)))
(assert (= temp105_34 #x0000000000000003))
(assert (= temp105_35 temp105_34))
(assert (= temp105_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp105_35)))
(assert (= temp105_37 #x0000000000000004))
(assert (= temp105_38 temp105_37))
(assert (= temp105_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp105_38)))
(assert (= temp105_40 #x0000000000000005))
(assert (= temp105_41 temp105_40))
(assert (= temp105_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp105_41)))
(assert (= temp105_43 temp105_11))
(assert (= temp105_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp105_43)))
(assert (= temp105_45 temp105_14))
(assert (= temp105_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp105_45)))
(assert (= temp105_47 temp105_17))
(assert (= temp105_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp105_47)))
(assert (= temp105_49 temp105_20))
(assert (= temp105_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp105_49)))
(assert (= temp105_51 temp105_23))
(assert (= temp105_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp105_51)))
(assert (= temp105_53 temp105_8))
(assert (= temp105_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp105_53)))
(assert (= temp105_55 temp105_26))
(assert (= temp105_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_55)))
(assert (= temp105_57 temp105_29))
(assert (= temp105_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_57)))
(assert (= temp105_59 temp105_32))
(assert (= temp105_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_59)))
(assert (= temp105_61 temp105_35))
(assert (= temp105_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_61)))
(assert (= temp105_63 temp105_38))
(assert (= temp105_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_63)))
(assert (= temp105_65 temp105_41))
(assert (= temp105_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_65)))
(assert (= temp105_67 temp105_43))
(assert (= temp105_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_67)))
(assert (= temp105_69 temp105_45))
(assert (= temp105_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_69)))
(assert (= temp105_71 temp105_47))
(assert (= temp105_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_71)))
(assert (= temp105_73 temp105_49))
(assert (= temp105_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_73)))
(assert (= temp105_75 temp105_51))
(assert (= temp105_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_75)))
(assert (= temp105_77 temp105_53))
(assert (= temp105_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_77)))
(assert (= (and true
        (= temp105_44 temp105_12)
        (= temp105_46 temp105_15)
        (= temp105_48 temp105_18)
        (= temp105_50 temp105_21)
        (= temp105_52 temp105_24)
        (= temp105_54 temp105_9)
        (= temp105_56 temp105_27)
        (= temp105_58 temp105_30)
        (= temp105_60 temp105_33)
        (= temp105_62 temp105_36)
        (= temp105_64 temp105_39)
        (= temp105_66 temp105_42)
        (= temp105_68 temp105_44)
        (= temp105_70 temp105_46)
        (= temp105_72 temp105_48)
        (= temp105_74 temp105_50)
        (= temp105_76 temp105_52)
        (= temp105_78 temp105_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp105_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp105_79))
(assert (= temp105_80 #x0000000000000001))
(assert (= var987402 temp105_80))
(assert (= var987367 var987402))
(assert (= var69428 var987367))
(assert (= temp105_81 #x0000000000000001))
(assert (= var69428 temp105_81))
(assert (= temp105_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp105_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp105_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp105_83)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp105_84 #x0000000000000000))
(assert (= var69546 temp105_84))
(assert (= temp105_85 #x0000000000000001))
(assert (= var2363802 temp105_85))
(assert (= temp105_86 #x0000000000000001))
(assert (= var2888090 temp105_86))
(assert (= temp105_87 #x000000000000000b))
(assert (= var4395939 temp105_87))
(assert (= temp105_89 #x0000000000000001))
(assert (= temp105_88 temp105_89))
(model-add temp105_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp105_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp105_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp105_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






