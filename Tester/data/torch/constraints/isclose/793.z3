(declare-fun temp1041_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp1041_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp1041_3 () (_ BitVec 64))
(declare-fun temp1041_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp1041_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp1041_6 () (_ BitVec 64))
(declare-fun temp1041_7 () (_ BitVec 64))
(declare-fun temp1041_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1041_9 () (_ BitVec 64))
(declare-fun temp1041_10 () (_ BitVec 64))
(declare-fun temp1041_11 () (_ BitVec 64))
(declare-fun temp1041_12 () (_ BitVec 64))
(declare-fun temp1041_13 () (_ BitVec 64))
(declare-fun temp1041_14 () (_ BitVec 64))
(declare-fun temp1041_15 () (_ BitVec 64))
(declare-fun temp1041_16 () (_ BitVec 64))
(declare-fun temp1041_17 () (_ BitVec 64))
(declare-fun temp1041_18 () (_ BitVec 64))
(declare-fun temp1041_19 () (_ BitVec 64))
(declare-fun temp1041_20 () (_ BitVec 64))
(declare-fun temp1041_21 () (_ BitVec 64))
(declare-fun temp1041_22 () (_ BitVec 64))
(declare-fun temp1041_23 () (_ BitVec 64))
(declare-fun temp1041_24 () (_ BitVec 64))
(declare-fun temp1041_25 () (_ BitVec 64))
(declare-fun temp1041_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1041_27 () (_ BitVec 64))
(declare-fun temp1041_28 () (_ BitVec 64))
(declare-fun temp1041_29 () (_ BitVec 64))
(declare-fun temp1041_30 () (_ BitVec 64))
(declare-fun temp1041_31 () (_ BitVec 64))
(declare-fun temp1041_32 () (_ BitVec 64))
(declare-fun temp1041_33 () (_ BitVec 64))
(declare-fun temp1041_34 () (_ BitVec 64))
(declare-fun temp1041_35 () (_ BitVec 64))
(declare-fun temp1041_36 () (_ BitVec 64))
(declare-fun temp1041_37 () (_ BitVec 64))
(declare-fun temp1041_38 () (_ BitVec 64))
(declare-fun temp1041_39 () (_ BitVec 64))
(declare-fun temp1041_40 () (_ BitVec 64))
(declare-fun temp1041_41 () (_ BitVec 64))
(declare-fun temp1041_42 () (_ BitVec 64))
(declare-fun temp1041_43 () (_ BitVec 64))
(declare-fun temp1041_44 () (_ BitVec 64))
(declare-fun temp1041_45 () (_ BitVec 64))
(declare-fun temp1041_46 () (_ BitVec 64))
(declare-fun temp1041_47 () (_ BitVec 64))
(declare-fun temp1041_48 () (_ BitVec 64))
(declare-fun temp1041_49 () (_ BitVec 64))
(declare-fun temp1041_50 () (_ BitVec 64))
(declare-fun temp1041_51 () (_ BitVec 64))
(declare-fun temp1041_52 () (_ BitVec 64))
(declare-fun temp1041_53 () (_ BitVec 64))
(declare-fun temp1041_54 () (_ BitVec 64))
(declare-fun temp1041_55 () (_ BitVec 64))
(declare-fun temp1041_56 () (_ BitVec 64))
(declare-fun temp1041_57 () (_ BitVec 64))
(declare-fun temp1041_58 () (_ BitVec 64))
(declare-fun temp1041_59 () (_ BitVec 64))
(declare-fun temp1041_60 () (_ BitVec 64))
(declare-fun temp1041_61 () (_ BitVec 64))
(declare-fun temp1041_62 () (_ BitVec 64))
(declare-fun temp1041_63 () (_ BitVec 64))
(declare-fun temp1041_64 () (_ BitVec 64))
(declare-fun temp1041_65 () (_ BitVec 64))
(declare-fun temp1041_66 () (_ BitVec 64))
(declare-fun temp1041_67 () (_ BitVec 64))
(declare-fun temp1041_68 () (_ BitVec 64))
(declare-fun temp1041_69 () (_ BitVec 64))
(declare-fun temp1041_70 () (_ BitVec 64))
(declare-fun temp1041_71 () (_ BitVec 64))
(declare-fun temp1041_72 () (_ BitVec 64))
(declare-fun temp1041_73 () (_ BitVec 64))
(declare-fun temp1041_74 () (_ BitVec 64))
(declare-fun temp1041_75 () (_ BitVec 64))
(declare-fun temp1041_76 () (_ BitVec 64))
(declare-fun temp1041_77 () (_ BitVec 64))
(declare-fun temp1041_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1041_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp1041_80 () (_ BitVec 64))
(declare-fun var1444989 () (_ BitVec 64))
(declare-fun temp1041_81 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp1041_82 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp1041_83 () (_ BitVec 64))
(declare-fun temp1041_84 () (_ BitVec 64))
(declare-fun var2167086 () (_ BitVec 64))
(declare-fun temp1041_85 () (_ BitVec 64))
(declare-fun var2167087 () (_ BitVec 64))
(declare-fun var2491518 () (_ BitVec 64))
(declare-fun var2491519 () (_ BitVec 64))
(declare-fun temp1041_86 () (_ BitVec 64))
(declare-fun var3215770 () (_ BitVec 64))
(declare-fun temp1041_87 () (_ BitVec 64))
(declare-fun var3740058 () (_ BitVec 64))
(assert (= temp1041_1 #x0000000000080000))
(assert (= var461925 temp1041_1))
(assert (= temp1041_2 #x0000000000080000))
(assert (= var724069 temp1041_2))
(assert (= temp1041_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp1041_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1041_4 #x0000000000000000))
(assert (= var69380 temp1041_4))
(assert (= temp1041_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp1041_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1041_6 #x0000000000000000))
(assert (= var69401 temp1041_6))
(assert (= temp1041_7 #x0000000000000000))
(assert (= temp1041_8 temp1041_7))
(assert (= temp1041_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp1041_8)))
(assert (= temp1041_10 #x0000000000000001))
(assert (= temp1041_11 temp1041_10))
(assert (= temp1041_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp1041_11)))
(assert (= temp1041_13 #x0000000000000002))
(assert (= temp1041_14 temp1041_13))
(assert (= temp1041_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp1041_14)))
(assert (= temp1041_16 #x0000000000000003))
(assert (= temp1041_17 temp1041_16))
(assert (= temp1041_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp1041_17)))
(assert (= temp1041_19 #x0000000000000004))
(assert (= temp1041_20 temp1041_19))
(assert (= temp1041_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp1041_20)))
(assert (= temp1041_22 #x0000000000000005))
(assert (= temp1041_23 temp1041_22))
(assert (= temp1041_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp1041_23)))
(assert (= temp1041_25 #x0000000000000000))
(assert (= temp1041_26 temp1041_25))
(assert (= temp1041_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp1041_26)))
(assert (= temp1041_28 #x0000000000000001))
(assert (= temp1041_29 temp1041_28))
(assert (= temp1041_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp1041_29)))
(assert (= temp1041_31 #x0000000000000002))
(assert (= temp1041_32 temp1041_31))
(assert (= temp1041_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp1041_32)))
(assert (= temp1041_34 #x0000000000000003))
(assert (= temp1041_35 temp1041_34))
(assert (= temp1041_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp1041_35)))
(assert (= temp1041_37 #x0000000000000004))
(assert (= temp1041_38 temp1041_37))
(assert (= temp1041_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp1041_38)))
(assert (= temp1041_40 #x0000000000000005))
(assert (= temp1041_41 temp1041_40))
(assert (= temp1041_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp1041_41)))
(assert (= temp1041_43 temp1041_11))
(assert (= temp1041_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp1041_43)))
(assert (= temp1041_45 temp1041_14))
(assert (= temp1041_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp1041_45)))
(assert (= temp1041_47 temp1041_17))
(assert (= temp1041_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp1041_47)))
(assert (= temp1041_49 temp1041_20))
(assert (= temp1041_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp1041_49)))
(assert (= temp1041_51 temp1041_23))
(assert (= temp1041_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp1041_51)))
(assert (= temp1041_53 temp1041_8))
(assert (= temp1041_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp1041_53)))
(assert (= temp1041_55 temp1041_26))
(assert (= temp1041_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp1041_55)))
(assert (= temp1041_57 temp1041_29))
(assert (= temp1041_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp1041_57)))
(assert (= temp1041_59 temp1041_32))
(assert (= temp1041_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp1041_59)))
(assert (= temp1041_61 temp1041_35))
(assert (= temp1041_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp1041_61)))
(assert (= temp1041_63 temp1041_38))
(assert (= temp1041_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp1041_63)))
(assert (= temp1041_65 temp1041_41))
(assert (= temp1041_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp1041_65)))
(assert (= temp1041_67 temp1041_43))
(assert (= temp1041_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp1041_67)))
(assert (= temp1041_69 temp1041_45))
(assert (= temp1041_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp1041_69)))
(assert (= temp1041_71 temp1041_47))
(assert (= temp1041_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp1041_71)))
(assert (= temp1041_73 temp1041_49))
(assert (= temp1041_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp1041_73)))
(assert (= temp1041_75 temp1041_51))
(assert (= temp1041_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp1041_75)))
(assert (= temp1041_77 temp1041_53))
(assert (= temp1041_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp1041_77)))
(assert (= (and true
        (= temp1041_44 temp1041_12)
        (= temp1041_46 temp1041_15)
        (= temp1041_48 temp1041_18)
        (= temp1041_50 temp1041_21)
        (= temp1041_52 temp1041_24)
        (= temp1041_54 temp1041_9)
        (= temp1041_56 temp1041_27)
        (= temp1041_58 temp1041_30)
        (= temp1041_60 temp1041_33)
        (= temp1041_62 temp1041_36)
        (= temp1041_64 temp1041_39)
        (= temp1041_66 temp1041_42)
        (= temp1041_68 temp1041_44)
        (= temp1041_70 temp1041_46)
        (= temp1041_72 temp1041_48)
        (= temp1041_74 temp1041_50)
        (= temp1041_76 temp1041_52)
        (= temp1041_78 temp1041_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp1041_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp1041_79))
(assert (= temp1041_80 #x0000000009c00400))
(assert (= var1444989 temp1041_80))
(assert (= temp1041_81 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp1041_81)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1041_82 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp1041_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp1041_83 #x0000000000000000))
(assert (= var69546 temp1041_83))
(assert (= temp1041_84 #x0000000000000000))
(assert (= var2167086 temp1041_84))
(assert (= temp1041_85 #x0000000000000000))
(assert (= var2167087 temp1041_85))
(assert (= var2491518 var2167086))
(assert (= var2491519 var2167087))
(assert (= temp1041_86 #x0000000000000001))
(assert (= var3215770 temp1041_86))
(assert (= temp1041_87 #x0000000000000001))
(assert (= var3740058 temp1041_87))
(model-add temp1041_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp1041_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp1041_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp1041_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






