(declare-fun temp667_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp667_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp667_3 () (_ BitVec 64))
(declare-fun temp667_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp667_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp667_6 () (_ BitVec 64))
(declare-fun temp667_7 () (_ BitVec 64))
(declare-fun temp667_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp667_9 () (_ BitVec 64))
(declare-fun temp667_10 () (_ BitVec 64))
(declare-fun temp667_11 () (_ BitVec 64))
(declare-fun temp667_12 () (_ BitVec 64))
(declare-fun temp667_13 () (_ BitVec 64))
(declare-fun temp667_14 () (_ BitVec 64))
(declare-fun temp667_15 () (_ BitVec 64))
(declare-fun temp667_16 () (_ BitVec 64))
(declare-fun temp667_17 () (_ BitVec 64))
(declare-fun temp667_18 () (_ BitVec 64))
(declare-fun temp667_19 () (_ BitVec 64))
(declare-fun temp667_20 () (_ BitVec 64))
(declare-fun temp667_21 () (_ BitVec 64))
(declare-fun temp667_22 () (_ BitVec 64))
(declare-fun temp667_23 () (_ BitVec 64))
(declare-fun temp667_24 () (_ BitVec 64))
(declare-fun temp667_25 () (_ BitVec 64))
(declare-fun temp667_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp667_27 () (_ BitVec 64))
(declare-fun temp667_28 () (_ BitVec 64))
(declare-fun temp667_29 () (_ BitVec 64))
(declare-fun temp667_30 () (_ BitVec 64))
(declare-fun temp667_31 () (_ BitVec 64))
(declare-fun temp667_32 () (_ BitVec 64))
(declare-fun temp667_33 () (_ BitVec 64))
(declare-fun temp667_34 () (_ BitVec 64))
(declare-fun temp667_35 () (_ BitVec 64))
(declare-fun temp667_36 () (_ BitVec 64))
(declare-fun temp667_37 () (_ BitVec 64))
(declare-fun temp667_38 () (_ BitVec 64))
(declare-fun temp667_39 () (_ BitVec 64))
(declare-fun temp667_40 () (_ BitVec 64))
(declare-fun temp667_41 () (_ BitVec 64))
(declare-fun temp667_42 () (_ BitVec 64))
(declare-fun temp667_43 () (_ BitVec 64))
(declare-fun temp667_44 () (_ BitVec 64))
(declare-fun temp667_45 () (_ BitVec 64))
(declare-fun temp667_46 () (_ BitVec 64))
(declare-fun temp667_47 () (_ BitVec 64))
(declare-fun temp667_48 () (_ BitVec 64))
(declare-fun temp667_49 () (_ BitVec 64))
(declare-fun temp667_50 () (_ BitVec 64))
(declare-fun temp667_51 () (_ BitVec 64))
(declare-fun temp667_52 () (_ BitVec 64))
(declare-fun temp667_53 () (_ BitVec 64))
(declare-fun temp667_54 () (_ BitVec 64))
(declare-fun temp667_55 () (_ BitVec 64))
(declare-fun temp667_56 () (_ BitVec 64))
(declare-fun temp667_57 () (_ BitVec 64))
(declare-fun temp667_58 () (_ BitVec 64))
(declare-fun temp667_59 () (_ BitVec 64))
(declare-fun temp667_60 () (_ BitVec 64))
(declare-fun temp667_61 () (_ BitVec 64))
(declare-fun temp667_62 () (_ BitVec 64))
(declare-fun temp667_63 () (_ BitVec 64))
(declare-fun temp667_64 () (_ BitVec 64))
(declare-fun temp667_65 () (_ BitVec 64))
(declare-fun temp667_66 () (_ BitVec 64))
(declare-fun temp667_67 () (_ BitVec 64))
(declare-fun temp667_68 () (_ BitVec 64))
(declare-fun temp667_69 () (_ BitVec 64))
(declare-fun temp667_70 () (_ BitVec 64))
(declare-fun temp667_71 () (_ BitVec 64))
(declare-fun temp667_72 () (_ BitVec 64))
(declare-fun temp667_73 () (_ BitVec 64))
(declare-fun temp667_74 () (_ BitVec 64))
(declare-fun temp667_75 () (_ BitVec 64))
(declare-fun temp667_76 () (_ BitVec 64))
(declare-fun temp667_77 () (_ BitVec 64))
(declare-fun temp667_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp667_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp667_80 () (_ BitVec 64))
(declare-fun var1184010 () (_ BitVec 64))
(declare-fun var1183975 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp667_81 () (_ BitVec 64))
(declare-fun temp667_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp667_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp667_84 () (_ BitVec 64))
(declare-fun temp667_85 () (_ BitVec 64))
(declare-fun var1904942 () (_ BitVec 64))
(declare-fun temp667_86 () (_ BitVec 64))
(declare-fun var1904943 () (_ BitVec 64))
(declare-fun var2229374 () (_ BitVec 64))
(declare-fun var2229375 () (_ BitVec 64))
(declare-fun temp667_87 () (_ BitVec 64))
(declare-fun var2953626 () (_ BitVec 64))
(declare-fun temp667_88 () (_ BitVec 64))
(declare-fun var3477914 () (_ BitVec 64))
(assert (= temp667_1 #x0000000000080000))
(assert (= var461925 temp667_1))
(assert (= temp667_2 #x0000000000080000))
(assert (= var724069 temp667_2))
(assert (= temp667_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp667_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_4 #x0000000000000000))
(assert (= var69380 temp667_4))
(assert (= temp667_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp667_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_6 #x0000000000000000))
(assert (= var69401 temp667_6))
(assert (= temp667_7 #x0000000000000000))
(assert (= temp667_8 temp667_7))
(assert (= temp667_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_8)))
(assert (= temp667_10 #x0000000000000001))
(assert (= temp667_11 temp667_10))
(assert (= temp667_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_11)))
(assert (= temp667_13 #x0000000000000002))
(assert (= temp667_14 temp667_13))
(assert (= temp667_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_14)))
(assert (= temp667_16 #x0000000000000003))
(assert (= temp667_17 temp667_16))
(assert (= temp667_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_17)))
(assert (= temp667_19 #x0000000000000004))
(assert (= temp667_20 temp667_19))
(assert (= temp667_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_20)))
(assert (= temp667_22 #x0000000000000005))
(assert (= temp667_23 temp667_22))
(assert (= temp667_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_23)))
(assert (= temp667_25 #x0000000000000000))
(assert (= temp667_26 temp667_25))
(assert (= temp667_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp667_26)))
(assert (= temp667_28 #x0000000000000001))
(assert (= temp667_29 temp667_28))
(assert (= temp667_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp667_29)))
(assert (= temp667_31 #x0000000000000002))
(assert (= temp667_32 temp667_31))
(assert (= temp667_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp667_32)))
(assert (= temp667_34 #x0000000000000003))
(assert (= temp667_35 temp667_34))
(assert (= temp667_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp667_35)))
(assert (= temp667_37 #x0000000000000004))
(assert (= temp667_38 temp667_37))
(assert (= temp667_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp667_38)))
(assert (= temp667_40 #x0000000000000005))
(assert (= temp667_41 temp667_40))
(assert (= temp667_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp667_41)))
(assert (= temp667_43 temp667_11))
(assert (= temp667_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp667_43)))
(assert (= temp667_45 temp667_14))
(assert (= temp667_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp667_45)))
(assert (= temp667_47 temp667_17))
(assert (= temp667_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp667_47)))
(assert (= temp667_49 temp667_20))
(assert (= temp667_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp667_49)))
(assert (= temp667_51 temp667_23))
(assert (= temp667_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp667_51)))
(assert (= temp667_53 temp667_8))
(assert (= temp667_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp667_53)))
(assert (= temp667_55 temp667_26))
(assert (= temp667_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_55)))
(assert (= temp667_57 temp667_29))
(assert (= temp667_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_57)))
(assert (= temp667_59 temp667_32))
(assert (= temp667_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_59)))
(assert (= temp667_61 temp667_35))
(assert (= temp667_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_61)))
(assert (= temp667_63 temp667_38))
(assert (= temp667_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_63)))
(assert (= temp667_65 temp667_41))
(assert (= temp667_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_65)))
(assert (= temp667_67 temp667_43))
(assert (= temp667_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_67)))
(assert (= temp667_69 temp667_45))
(assert (= temp667_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_69)))
(assert (= temp667_71 temp667_47))
(assert (= temp667_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_71)))
(assert (= temp667_73 temp667_49))
(assert (= temp667_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_73)))
(assert (= temp667_75 temp667_51))
(assert (= temp667_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_75)))
(assert (= temp667_77 temp667_53))
(assert (= temp667_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp667_77)))
(assert (= (and true
        (= temp667_44 temp667_12)
        (= temp667_46 temp667_15)
        (= temp667_48 temp667_18)
        (= temp667_50 temp667_21)
        (= temp667_52 temp667_24)
        (= temp667_54 temp667_9)
        (= temp667_56 temp667_27)
        (= temp667_58 temp667_30)
        (= temp667_60 temp667_33)
        (= temp667_62 temp667_36)
        (= temp667_64 temp667_39)
        (= temp667_66 temp667_42)
        (= temp667_68 temp667_44)
        (= temp667_70 temp667_46)
        (= temp667_72 temp667_48)
        (= temp667_74 temp667_50)
        (= temp667_76 temp667_52)
        (= temp667_78 temp667_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp667_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp667_79))
(assert (= temp667_80 #x0000000000000001))
(assert (= var1184010 temp667_80))
(assert (= var1183975 var1184010))
(assert (= var69428 var1183975))
(assert (= temp667_81 #x0000000000000001))
(assert (= var69428 temp667_81))
(assert (= temp667_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp667_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp667_83)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp667_84 #x0000000000000000))
(assert (= var69546 temp667_84))
(assert (= temp667_85 #x0000000000000000))
(assert (= var1904942 temp667_85))
(assert (= temp667_86 #x0000000000000000))
(assert (= var1904943 temp667_86))
(assert (= var2229374 var1904942))
(assert (= var2229375 var1904943))
(assert (= temp667_87 #x0000000000000001))
(assert (= var2953626 temp667_87))
(assert (= temp667_88 #x0000000000000001))
(assert (= var3477914 temp667_88))
(model-add temp667_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp667_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp667_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp667_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






