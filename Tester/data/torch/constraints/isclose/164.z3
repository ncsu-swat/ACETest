(declare-fun temp288_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp288_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp288_3 () (_ BitVec 64))
(declare-fun temp288_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp288_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp288_6 () (_ BitVec 64))
(declare-fun temp288_7 () (_ BitVec 64))
(declare-fun temp288_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp288_9 () (_ BitVec 64))
(declare-fun temp288_10 () (_ BitVec 64))
(declare-fun temp288_11 () (_ BitVec 64))
(declare-fun temp288_12 () (_ BitVec 64))
(declare-fun temp288_13 () (_ BitVec 64))
(declare-fun temp288_14 () (_ BitVec 64))
(declare-fun temp288_15 () (_ BitVec 64))
(declare-fun temp288_16 () (_ BitVec 64))
(declare-fun temp288_17 () (_ BitVec 64))
(declare-fun temp288_18 () (_ BitVec 64))
(declare-fun temp288_19 () (_ BitVec 64))
(declare-fun temp288_20 () (_ BitVec 64))
(declare-fun temp288_21 () (_ BitVec 64))
(declare-fun temp288_22 () (_ BitVec 64))
(declare-fun temp288_23 () (_ BitVec 64))
(declare-fun temp288_24 () (_ BitVec 64))
(declare-fun temp288_25 () (_ BitVec 64))
(declare-fun temp288_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp288_27 () (_ BitVec 64))
(declare-fun temp288_28 () (_ BitVec 64))
(declare-fun temp288_29 () (_ BitVec 64))
(declare-fun temp288_30 () (_ BitVec 64))
(declare-fun temp288_31 () (_ BitVec 64))
(declare-fun temp288_32 () (_ BitVec 64))
(declare-fun temp288_33 () (_ BitVec 64))
(declare-fun temp288_34 () (_ BitVec 64))
(declare-fun temp288_35 () (_ BitVec 64))
(declare-fun temp288_36 () (_ BitVec 64))
(declare-fun temp288_37 () (_ BitVec 64))
(declare-fun temp288_38 () (_ BitVec 64))
(declare-fun temp288_39 () (_ BitVec 64))
(declare-fun temp288_40 () (_ BitVec 64))
(declare-fun temp288_41 () (_ BitVec 64))
(declare-fun temp288_42 () (_ BitVec 64))
(declare-fun temp288_43 () (_ BitVec 64))
(declare-fun temp288_44 () (_ BitVec 64))
(declare-fun temp288_45 () (_ BitVec 64))
(declare-fun temp288_46 () (_ BitVec 64))
(declare-fun temp288_47 () (_ BitVec 64))
(declare-fun temp288_48 () (_ BitVec 64))
(declare-fun temp288_49 () (_ BitVec 64))
(declare-fun temp288_50 () (_ BitVec 64))
(declare-fun temp288_51 () (_ BitVec 64))
(declare-fun temp288_52 () (_ BitVec 64))
(declare-fun temp288_53 () (_ BitVec 64))
(declare-fun temp288_54 () (_ BitVec 64))
(declare-fun temp288_55 () (_ BitVec 64))
(declare-fun temp288_56 () (_ BitVec 64))
(declare-fun temp288_57 () (_ BitVec 64))
(declare-fun temp288_58 () (_ BitVec 64))
(declare-fun temp288_59 () (_ BitVec 64))
(declare-fun temp288_60 () (_ BitVec 64))
(declare-fun temp288_61 () (_ BitVec 64))
(declare-fun temp288_62 () (_ BitVec 64))
(declare-fun temp288_63 () (_ BitVec 64))
(declare-fun temp288_64 () (_ BitVec 64))
(declare-fun temp288_65 () (_ BitVec 64))
(declare-fun temp288_66 () (_ BitVec 64))
(declare-fun temp288_67 () (_ BitVec 64))
(declare-fun temp288_68 () (_ BitVec 64))
(declare-fun temp288_69 () (_ BitVec 64))
(declare-fun temp288_70 () (_ BitVec 64))
(declare-fun temp288_71 () (_ BitVec 64))
(declare-fun temp288_72 () (_ BitVec 64))
(declare-fun temp288_73 () (_ BitVec 64))
(declare-fun temp288_74 () (_ BitVec 64))
(declare-fun temp288_75 () (_ BitVec 64))
(declare-fun temp288_76 () (_ BitVec 64))
(declare-fun temp288_77 () (_ BitVec 64))
(declare-fun temp288_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp288_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp288_80 () (_ BitVec 64))
(declare-fun var1248381 () (_ BitVec 64))
(declare-fun temp288_81 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp288_82 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp288_83 () (_ BitVec 64))
(declare-fun temp288_84 () (_ BitVec 64))
(declare-fun var2101550 () (_ BitVec 64))
(declare-fun temp288_85 () (_ BitVec 64))
(declare-fun var2101551 () (_ BitVec 64))
(declare-fun var2425982 () (_ BitVec 64))
(declare-fun var2425983 () (_ BitVec 64))
(declare-fun temp288_86 () (_ BitVec 64))
(declare-fun var3150234 () (_ BitVec 64))
(declare-fun temp288_87 () (_ BitVec 64))
(declare-fun var3674522 () (_ BitVec 64))
(assert (= temp288_1 #x0000000000080000))
(assert (= var461925 temp288_1))
(assert (= temp288_2 #x0000000000080000))
(assert (= var724069 temp288_2))
(assert (= temp288_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp288_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp288_4 #x0000000000000000))
(assert (= var69380 temp288_4))
(assert (= temp288_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp288_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp288_6 #x0000000000000000))
(assert (= var69401 temp288_6))
(assert (= temp288_7 #x0000000000000000))
(assert (= temp288_8 temp288_7))
(assert (= temp288_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_8)))
(assert (= temp288_10 #x0000000000000001))
(assert (= temp288_11 temp288_10))
(assert (= temp288_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_11)))
(assert (= temp288_13 #x0000000000000002))
(assert (= temp288_14 temp288_13))
(assert (= temp288_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_14)))
(assert (= temp288_16 #x0000000000000003))
(assert (= temp288_17 temp288_16))
(assert (= temp288_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_17)))
(assert (= temp288_19 #x0000000000000004))
(assert (= temp288_20 temp288_19))
(assert (= temp288_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_20)))
(assert (= temp288_22 #x0000000000000005))
(assert (= temp288_23 temp288_22))
(assert (= temp288_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_23)))
(assert (= temp288_25 #x0000000000000000))
(assert (= temp288_26 temp288_25))
(assert (= temp288_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp288_26)))
(assert (= temp288_28 #x0000000000000001))
(assert (= temp288_29 temp288_28))
(assert (= temp288_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp288_29)))
(assert (= temp288_31 #x0000000000000002))
(assert (= temp288_32 temp288_31))
(assert (= temp288_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp288_32)))
(assert (= temp288_34 #x0000000000000003))
(assert (= temp288_35 temp288_34))
(assert (= temp288_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp288_35)))
(assert (= temp288_37 #x0000000000000004))
(assert (= temp288_38 temp288_37))
(assert (= temp288_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp288_38)))
(assert (= temp288_40 #x0000000000000005))
(assert (= temp288_41 temp288_40))
(assert (= temp288_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp288_41)))
(assert (= temp288_43 temp288_11))
(assert (= temp288_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp288_43)))
(assert (= temp288_45 temp288_14))
(assert (= temp288_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp288_45)))
(assert (= temp288_47 temp288_17))
(assert (= temp288_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp288_47)))
(assert (= temp288_49 temp288_20))
(assert (= temp288_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp288_49)))
(assert (= temp288_51 temp288_23))
(assert (= temp288_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp288_51)))
(assert (= temp288_53 temp288_8))
(assert (= temp288_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp288_53)))
(assert (= temp288_55 temp288_26))
(assert (= temp288_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_55)))
(assert (= temp288_57 temp288_29))
(assert (= temp288_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_57)))
(assert (= temp288_59 temp288_32))
(assert (= temp288_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_59)))
(assert (= temp288_61 temp288_35))
(assert (= temp288_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_61)))
(assert (= temp288_63 temp288_38))
(assert (= temp288_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_63)))
(assert (= temp288_65 temp288_41))
(assert (= temp288_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_65)))
(assert (= temp288_67 temp288_43))
(assert (= temp288_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_67)))
(assert (= temp288_69 temp288_45))
(assert (= temp288_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_69)))
(assert (= temp288_71 temp288_47))
(assert (= temp288_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_71)))
(assert (= temp288_73 temp288_49))
(assert (= temp288_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_73)))
(assert (= temp288_75 temp288_51))
(assert (= temp288_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_75)))
(assert (= temp288_77 temp288_53))
(assert (= temp288_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_77)))
(assert (= (and true
        (= temp288_44 temp288_12)
        (= temp288_46 temp288_15)
        (= temp288_48 temp288_18)
        (= temp288_50 temp288_21)
        (= temp288_52 temp288_24)
        (= temp288_54 temp288_9)
        (= temp288_56 temp288_27)
        (= temp288_58 temp288_30)
        (= temp288_60 temp288_33)
        (= temp288_62 temp288_36)
        (= temp288_64 temp288_39)
        (= temp288_66 temp288_42)
        (= temp288_68 temp288_44)
        (= temp288_70 temp288_46)
        (= temp288_72 temp288_48)
        (= temp288_74 temp288_50)
        (= temp288_76 temp288_52)
        (= temp288_78 temp288_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp288_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp288_79))
(assert (= temp288_80 #x0000000009c00400))
(assert (= var1248381 temp288_80))
(assert (= temp288_81 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp288_81)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp288_82 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp288_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp288_83 #x0000000000000000))
(assert (= var69546 temp288_83))
(assert (= temp288_84 #x0000000000000000))
(assert (= var2101550 temp288_84))
(assert (= temp288_85 #x0000000000000000))
(assert (= var2101551 temp288_85))
(assert (= var2425982 var2101550))
(assert (= var2425983 var2101551))
(assert (= temp288_86 #x0000000000000001))
(assert (= var3150234 temp288_86))
(assert (= temp288_87 #x0000000000000001))
(assert (= var3674522 temp288_87))
(model-add temp288_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp288_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp288_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp288_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






