(declare-fun temp642_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp642_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp642_3 () (_ BitVec 64))
(declare-fun temp642_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp642_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp642_6 () (_ BitVec 64))
(declare-fun temp642_7 () (_ BitVec 64))
(declare-fun temp642_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp642_9 () (_ BitVec 64))
(declare-fun temp642_10 () (_ BitVec 64))
(declare-fun temp642_11 () (_ BitVec 64))
(declare-fun temp642_12 () (_ BitVec 64))
(declare-fun temp642_13 () (_ BitVec 64))
(declare-fun temp642_14 () (_ BitVec 64))
(declare-fun temp642_15 () (_ BitVec 64))
(declare-fun temp642_16 () (_ BitVec 64))
(declare-fun temp642_17 () (_ BitVec 64))
(declare-fun temp642_18 () (_ BitVec 64))
(declare-fun temp642_19 () (_ BitVec 64))
(declare-fun temp642_20 () (_ BitVec 64))
(declare-fun temp642_21 () (_ BitVec 64))
(declare-fun temp642_22 () (_ BitVec 64))
(declare-fun temp642_23 () (_ BitVec 64))
(declare-fun temp642_24 () (_ BitVec 64))
(declare-fun temp642_25 () (_ BitVec 64))
(declare-fun temp642_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp642_27 () (_ BitVec 64))
(declare-fun temp642_28 () (_ BitVec 64))
(declare-fun temp642_29 () (_ BitVec 64))
(declare-fun temp642_30 () (_ BitVec 64))
(declare-fun temp642_31 () (_ BitVec 64))
(declare-fun temp642_32 () (_ BitVec 64))
(declare-fun temp642_33 () (_ BitVec 64))
(declare-fun temp642_34 () (_ BitVec 64))
(declare-fun temp642_35 () (_ BitVec 64))
(declare-fun temp642_36 () (_ BitVec 64))
(declare-fun temp642_37 () (_ BitVec 64))
(declare-fun temp642_38 () (_ BitVec 64))
(declare-fun temp642_39 () (_ BitVec 64))
(declare-fun temp642_40 () (_ BitVec 64))
(declare-fun temp642_41 () (_ BitVec 64))
(declare-fun temp642_42 () (_ BitVec 64))
(declare-fun temp642_43 () (_ BitVec 64))
(declare-fun temp642_44 () (_ BitVec 64))
(declare-fun temp642_45 () (_ BitVec 64))
(declare-fun temp642_46 () (_ BitVec 64))
(declare-fun temp642_47 () (_ BitVec 64))
(declare-fun temp642_48 () (_ BitVec 64))
(declare-fun temp642_49 () (_ BitVec 64))
(declare-fun temp642_50 () (_ BitVec 64))
(declare-fun temp642_51 () (_ BitVec 64))
(declare-fun temp642_52 () (_ BitVec 64))
(declare-fun temp642_53 () (_ BitVec 64))
(declare-fun temp642_54 () (_ BitVec 64))
(declare-fun temp642_55 () (_ BitVec 64))
(declare-fun temp642_56 () (_ BitVec 64))
(declare-fun temp642_57 () (_ BitVec 64))
(declare-fun temp642_58 () (_ BitVec 64))
(declare-fun temp642_59 () (_ BitVec 64))
(declare-fun temp642_60 () (_ BitVec 64))
(declare-fun temp642_61 () (_ BitVec 64))
(declare-fun temp642_62 () (_ BitVec 64))
(declare-fun temp642_63 () (_ BitVec 64))
(declare-fun temp642_64 () (_ BitVec 64))
(declare-fun temp642_65 () (_ BitVec 64))
(declare-fun temp642_66 () (_ BitVec 64))
(declare-fun temp642_67 () (_ BitVec 64))
(declare-fun temp642_68 () (_ BitVec 64))
(declare-fun temp642_69 () (_ BitVec 64))
(declare-fun temp642_70 () (_ BitVec 64))
(declare-fun temp642_71 () (_ BitVec 64))
(declare-fun temp642_72 () (_ BitVec 64))
(declare-fun temp642_73 () (_ BitVec 64))
(declare-fun temp642_74 () (_ BitVec 64))
(declare-fun temp642_75 () (_ BitVec 64))
(declare-fun temp642_76 () (_ BitVec 64))
(declare-fun temp642_77 () (_ BitVec 64))
(declare-fun temp642_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp642_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp642_80 () (_ BitVec 64))
(declare-fun var1184010 () (_ BitVec 64))
(declare-fun var1183975 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp642_81 () (_ BitVec 64))
(declare-fun temp642_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp642_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp642_84 () (_ BitVec 64))
(declare-fun temp642_85 () (_ BitVec 64))
(declare-fun var1904942 () (_ BitVec 64))
(declare-fun temp642_86 () (_ BitVec 64))
(declare-fun var1904943 () (_ BitVec 64))
(declare-fun var2229374 () (_ BitVec 64))
(declare-fun var2229375 () (_ BitVec 64))
(declare-fun temp642_87 () (_ BitVec 64))
(declare-fun var2560302 () (_ BitVec 64))
(declare-fun temp642_88 () (_ BitVec 64))
(declare-fun var2560303 () (_ BitVec 64))
(declare-fun var2884734 () (_ BitVec 64))
(declare-fun var2884735 () (_ BitVec 64))
(declare-fun temp642_89 () (_ BitVec 64))
(declare-fun var3412378 () (_ BitVec 64))
(declare-fun temp642_90 () (_ BitVec 64))
(declare-fun var3936666 () (_ BitVec 64))
(declare-fun temp642_91 () (_ BitVec 64))
(declare-fun var5444515 () (_ BitVec 64))
(declare-fun temp642_93 () (_ BitVec 64))
(declare-fun temp642_92 () (_ BitVec 64))
(assert (= temp642_1 #x0000000000080000))
(assert (= var461925 temp642_1))
(assert (= temp642_2 #x0000000000080000))
(assert (= var724069 temp642_2))
(assert (= temp642_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp642_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_4 #x0000000000000000))
(assert (= var69380 temp642_4))
(assert (= temp642_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp642_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_6 #x0000000000000000))
(assert (= var69401 temp642_6))
(assert (= temp642_7 #x0000000000000000))
(assert (= temp642_8 temp642_7))
(assert (= temp642_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_8)))
(assert (= temp642_10 #x0000000000000001))
(assert (= temp642_11 temp642_10))
(assert (= temp642_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_11)))
(assert (= temp642_13 #x0000000000000002))
(assert (= temp642_14 temp642_13))
(assert (= temp642_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_14)))
(assert (= temp642_16 #x0000000000000003))
(assert (= temp642_17 temp642_16))
(assert (= temp642_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_17)))
(assert (= temp642_19 #x0000000000000004))
(assert (= temp642_20 temp642_19))
(assert (= temp642_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_20)))
(assert (= temp642_22 #x0000000000000005))
(assert (= temp642_23 temp642_22))
(assert (= temp642_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_23)))
(assert (= temp642_25 #x0000000000000000))
(assert (= temp642_26 temp642_25))
(assert (= temp642_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp642_26)))
(assert (= temp642_28 #x0000000000000001))
(assert (= temp642_29 temp642_28))
(assert (= temp642_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp642_29)))
(assert (= temp642_31 #x0000000000000002))
(assert (= temp642_32 temp642_31))
(assert (= temp642_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp642_32)))
(assert (= temp642_34 #x0000000000000003))
(assert (= temp642_35 temp642_34))
(assert (= temp642_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp642_35)))
(assert (= temp642_37 #x0000000000000004))
(assert (= temp642_38 temp642_37))
(assert (= temp642_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp642_38)))
(assert (= temp642_40 #x0000000000000005))
(assert (= temp642_41 temp642_40))
(assert (= temp642_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp642_41)))
(assert (= temp642_43 temp642_11))
(assert (= temp642_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp642_43)))
(assert (= temp642_45 temp642_14))
(assert (= temp642_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp642_45)))
(assert (= temp642_47 temp642_17))
(assert (= temp642_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp642_47)))
(assert (= temp642_49 temp642_20))
(assert (= temp642_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp642_49)))
(assert (= temp642_51 temp642_23))
(assert (= temp642_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp642_51)))
(assert (= temp642_53 temp642_8))
(assert (= temp642_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp642_53)))
(assert (= temp642_55 temp642_26))
(assert (= temp642_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_55)))
(assert (= temp642_57 temp642_29))
(assert (= temp642_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_57)))
(assert (= temp642_59 temp642_32))
(assert (= temp642_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_59)))
(assert (= temp642_61 temp642_35))
(assert (= temp642_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_61)))
(assert (= temp642_63 temp642_38))
(assert (= temp642_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_63)))
(assert (= temp642_65 temp642_41))
(assert (= temp642_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_65)))
(assert (= temp642_67 temp642_43))
(assert (= temp642_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_67)))
(assert (= temp642_69 temp642_45))
(assert (= temp642_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_69)))
(assert (= temp642_71 temp642_47))
(assert (= temp642_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_71)))
(assert (= temp642_73 temp642_49))
(assert (= temp642_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_73)))
(assert (= temp642_75 temp642_51))
(assert (= temp642_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_75)))
(assert (= temp642_77 temp642_53))
(assert (= temp642_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_77)))
(assert (= (and true
        (= temp642_44 temp642_12)
        (= temp642_46 temp642_15)
        (= temp642_48 temp642_18)
        (= temp642_50 temp642_21)
        (= temp642_52 temp642_24)
        (= temp642_54 temp642_9)
        (= temp642_56 temp642_27)
        (= temp642_58 temp642_30)
        (= temp642_60 temp642_33)
        (= temp642_62 temp642_36)
        (= temp642_64 temp642_39)
        (= temp642_66 temp642_42)
        (= temp642_68 temp642_44)
        (= temp642_70 temp642_46)
        (= temp642_72 temp642_48)
        (= temp642_74 temp642_50)
        (= temp642_76 temp642_52)
        (= temp642_78 temp642_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp642_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp642_79))
(assert (= temp642_80 #x0000000000000001))
(assert (= var1184010 temp642_80))
(assert (= var1183975 var1184010))
(assert (= var69428 var1183975))
(assert (= temp642_81 #x0000000000000001))
(assert (= var69428 temp642_81))
(assert (= temp642_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp642_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp642_83)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp642_84 #x0000000000000000))
(assert (= var69546 temp642_84))
(assert (= temp642_85 #x0000000000000000))
(assert (= var1904942 temp642_85))
(assert (= temp642_86 #x0000000000000000))
(assert (= var1904943 temp642_86))
(assert (= var2229374 var1904942))
(assert (= var2229375 var1904943))
(assert (= temp642_87 #x0000000000000000))
(assert (= var2560302 temp642_87))
(assert (= temp642_88 #x0000000000000000))
(assert (= var2560303 temp642_88))
(assert (= var2884734 var2560302))
(assert (= var2884735 var2560303))
(assert (= temp642_89 #x0000000000000001))
(assert (= var3412378 temp642_89))
(assert (= temp642_90 #x0000000000000001))
(assert (= var3936666 temp642_90))
(assert (= temp642_91 #x000000000000000b))
(assert (= var5444515 temp642_91))
(assert (= temp642_93 #x0000000000000001))
(assert (= temp642_92 temp642_93))
(model-add temp642_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp642_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp642_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp642_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






