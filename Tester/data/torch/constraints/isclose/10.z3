(declare-fun temp10_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp10_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp10_3 () (_ BitVec 64))
(declare-fun temp10_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp10_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp10_6 () (_ BitVec 64))
(declare-fun temp10_7 () (_ BitVec 64))
(declare-fun temp10_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10_9 () (_ BitVec 64))
(declare-fun temp10_10 () (_ BitVec 64))
(declare-fun temp10_11 () (_ BitVec 64))
(declare-fun temp10_12 () (_ BitVec 64))
(declare-fun temp10_13 () (_ BitVec 64))
(declare-fun temp10_14 () (_ BitVec 64))
(declare-fun temp10_15 () (_ BitVec 64))
(declare-fun temp10_16 () (_ BitVec 64))
(declare-fun temp10_17 () (_ BitVec 64))
(declare-fun temp10_18 () (_ BitVec 64))
(declare-fun temp10_19 () (_ BitVec 64))
(declare-fun temp10_20 () (_ BitVec 64))
(declare-fun temp10_21 () (_ BitVec 64))
(declare-fun temp10_22 () (_ BitVec 64))
(declare-fun temp10_23 () (_ BitVec 64))
(declare-fun temp10_24 () (_ BitVec 64))
(declare-fun temp10_25 () (_ BitVec 64))
(declare-fun temp10_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10_27 () (_ BitVec 64))
(declare-fun temp10_28 () (_ BitVec 64))
(declare-fun temp10_29 () (_ BitVec 64))
(declare-fun temp10_30 () (_ BitVec 64))
(declare-fun temp10_31 () (_ BitVec 64))
(declare-fun temp10_32 () (_ BitVec 64))
(declare-fun temp10_33 () (_ BitVec 64))
(declare-fun temp10_34 () (_ BitVec 64))
(declare-fun temp10_35 () (_ BitVec 64))
(declare-fun temp10_36 () (_ BitVec 64))
(declare-fun temp10_37 () (_ BitVec 64))
(declare-fun temp10_38 () (_ BitVec 64))
(declare-fun temp10_39 () (_ BitVec 64))
(declare-fun temp10_40 () (_ BitVec 64))
(declare-fun temp10_41 () (_ BitVec 64))
(declare-fun temp10_42 () (_ BitVec 64))
(declare-fun temp10_43 () (_ BitVec 64))
(declare-fun temp10_44 () (_ BitVec 64))
(declare-fun temp10_45 () (_ BitVec 64))
(declare-fun temp10_46 () (_ BitVec 64))
(declare-fun temp10_47 () (_ BitVec 64))
(declare-fun temp10_48 () (_ BitVec 64))
(declare-fun temp10_49 () (_ BitVec 64))
(declare-fun temp10_50 () (_ BitVec 64))
(declare-fun temp10_51 () (_ BitVec 64))
(declare-fun temp10_52 () (_ BitVec 64))
(declare-fun temp10_53 () (_ BitVec 64))
(declare-fun temp10_54 () (_ BitVec 64))
(declare-fun temp10_55 () (_ BitVec 64))
(declare-fun temp10_56 () (_ BitVec 64))
(declare-fun temp10_57 () (_ BitVec 64))
(declare-fun temp10_58 () (_ BitVec 64))
(declare-fun temp10_59 () (_ BitVec 64))
(declare-fun temp10_60 () (_ BitVec 64))
(declare-fun temp10_61 () (_ BitVec 64))
(declare-fun temp10_62 () (_ BitVec 64))
(declare-fun temp10_63 () (_ BitVec 64))
(declare-fun temp10_64 () (_ BitVec 64))
(declare-fun temp10_65 () (_ BitVec 64))
(declare-fun temp10_66 () (_ BitVec 64))
(declare-fun temp10_67 () (_ BitVec 64))
(declare-fun temp10_68 () (_ BitVec 64))
(declare-fun temp10_69 () (_ BitVec 64))
(declare-fun temp10_70 () (_ BitVec 64))
(declare-fun temp10_71 () (_ BitVec 64))
(declare-fun temp10_72 () (_ BitVec 64))
(declare-fun temp10_73 () (_ BitVec 64))
(declare-fun temp10_74 () (_ BitVec 64))
(declare-fun temp10_75 () (_ BitVec 64))
(declare-fun temp10_76 () (_ BitVec 64))
(declare-fun temp10_77 () (_ BitVec 64))
(declare-fun temp10_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp10_80 () (_ BitVec 64))
(declare-fun var987402 () (_ BitVec 64))
(declare-fun var987367 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp10_81 () (_ BitVec 64))
(declare-fun temp10_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp10_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp10_84 () (_ BitVec 64))
(declare-fun temp10_85 () (_ BitVec 64))
(declare-fun var1708334 () (_ BitVec 64))
(declare-fun temp10_86 () (_ BitVec 64))
(declare-fun var1708335 () (_ BitVec 64))
(declare-fun var2032766 () (_ BitVec 64))
(declare-fun var2032767 () (_ BitVec 64))
(declare-fun temp10_87 () (_ BitVec 64))
(declare-fun var2363694 () (_ BitVec 64))
(declare-fun temp10_88 () (_ BitVec 64))
(declare-fun var2363695 () (_ BitVec 64))
(declare-fun var2688126 () (_ BitVec 64))
(declare-fun var2688127 () (_ BitVec 64))
(declare-fun temp10_89 () (_ BitVec 64))
(declare-fun var3215770 () (_ BitVec 64))
(declare-fun temp10_90 () (_ BitVec 64))
(declare-fun var3740058 () (_ BitVec 64))
(assert (= temp10_1 #x0000000000080000))
(assert (= var461925 temp10_1))
(assert (= temp10_2 #x0000000000080000))
(assert (= var724069 temp10_2))
(assert (= temp10_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp10_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_4 #x0000000000000000))
(assert (= var69380 temp10_4))
(assert (= temp10_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp10_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_6 #x0000000000000000))
(assert (= var69401 temp10_6))
(assert (= temp10_7 #x0000000000000000))
(assert (= temp10_8 temp10_7))
(assert (= temp10_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_8)))
(assert (= temp10_10 #x0000000000000001))
(assert (= temp10_11 temp10_10))
(assert (= temp10_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_11)))
(assert (= temp10_13 #x0000000000000002))
(assert (= temp10_14 temp10_13))
(assert (= temp10_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_14)))
(assert (= temp10_16 #x0000000000000003))
(assert (= temp10_17 temp10_16))
(assert (= temp10_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_17)))
(assert (= temp10_19 #x0000000000000004))
(assert (= temp10_20 temp10_19))
(assert (= temp10_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_20)))
(assert (= temp10_22 #x0000000000000005))
(assert (= temp10_23 temp10_22))
(assert (= temp10_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_23)))
(assert (= temp10_25 #x0000000000000000))
(assert (= temp10_26 temp10_25))
(assert (= temp10_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp10_26)))
(assert (= temp10_28 #x0000000000000001))
(assert (= temp10_29 temp10_28))
(assert (= temp10_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp10_29)))
(assert (= temp10_31 #x0000000000000002))
(assert (= temp10_32 temp10_31))
(assert (= temp10_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp10_32)))
(assert (= temp10_34 #x0000000000000003))
(assert (= temp10_35 temp10_34))
(assert (= temp10_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp10_35)))
(assert (= temp10_37 #x0000000000000004))
(assert (= temp10_38 temp10_37))
(assert (= temp10_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp10_38)))
(assert (= temp10_40 #x0000000000000005))
(assert (= temp10_41 temp10_40))
(assert (= temp10_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp10_41)))
(assert (= temp10_43 temp10_11))
(assert (= temp10_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp10_43)))
(assert (= temp10_45 temp10_14))
(assert (= temp10_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp10_45)))
(assert (= temp10_47 temp10_17))
(assert (= temp10_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp10_47)))
(assert (= temp10_49 temp10_20))
(assert (= temp10_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp10_49)))
(assert (= temp10_51 temp10_23))
(assert (= temp10_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp10_51)))
(assert (= temp10_53 temp10_8))
(assert (= temp10_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp10_53)))
(assert (= temp10_55 temp10_26))
(assert (= temp10_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_55)))
(assert (= temp10_57 temp10_29))
(assert (= temp10_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_57)))
(assert (= temp10_59 temp10_32))
(assert (= temp10_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_59)))
(assert (= temp10_61 temp10_35))
(assert (= temp10_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_61)))
(assert (= temp10_63 temp10_38))
(assert (= temp10_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_63)))
(assert (= temp10_65 temp10_41))
(assert (= temp10_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_65)))
(assert (= temp10_67 temp10_43))
(assert (= temp10_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_67)))
(assert (= temp10_69 temp10_45))
(assert (= temp10_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_69)))
(assert (= temp10_71 temp10_47))
(assert (= temp10_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_71)))
(assert (= temp10_73 temp10_49))
(assert (= temp10_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_73)))
(assert (= temp10_75 temp10_51))
(assert (= temp10_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_75)))
(assert (= temp10_77 temp10_53))
(assert (= temp10_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_77)))
(assert (= (and true
        (= temp10_44 temp10_12)
        (= temp10_46 temp10_15)
        (= temp10_48 temp10_18)
        (= temp10_50 temp10_21)
        (= temp10_52 temp10_24)
        (= temp10_54 temp10_9)
        (= temp10_56 temp10_27)
        (= temp10_58 temp10_30)
        (= temp10_60 temp10_33)
        (= temp10_62 temp10_36)
        (= temp10_64 temp10_39)
        (= temp10_66 temp10_42)
        (= temp10_68 temp10_44)
        (= temp10_70 temp10_46)
        (= temp10_72 temp10_48)
        (= temp10_74 temp10_50)
        (= temp10_76 temp10_52)
        (= temp10_78 temp10_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp10_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp10_79))
(assert (= temp10_80 #x0000000000000001))
(assert (= var987402 temp10_80))
(assert (= var987367 var987402))
(assert (= var69428 var987367))
(assert (= temp10_81 #x0000000000000001))
(assert (= var69428 temp10_81))
(assert (= temp10_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp10_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp10_83)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp10_84 #x0000000000000000))
(assert (= var69546 temp10_84))
(assert (= temp10_85 #x0000000000000000))
(assert (= var1708334 temp10_85))
(assert (= temp10_86 #x0000000000000000))
(assert (= var1708335 temp10_86))
(assert (= var2032766 var1708334))
(assert (= var2032767 var1708335))
(assert (= temp10_87 #x0000000000000000))
(assert (= var2363694 temp10_87))
(assert (= temp10_88 #x0000000000000000))
(assert (= var2363695 temp10_88))
(assert (= var2688126 var2363694))
(assert (= var2688127 var2363695))
(assert (= temp10_89 #x0000000000000001))
(assert (= var3215770 temp10_89))
(assert (= temp10_90 #x0000000000000001))
(assert (= var3740058 temp10_90))
(model-add temp10_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp10_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp10_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp10_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






