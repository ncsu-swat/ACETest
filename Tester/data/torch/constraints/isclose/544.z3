(declare-fun temp668_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp668_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp668_3 () (_ BitVec 64))
(declare-fun temp668_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp668_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp668_6 () (_ BitVec 64))
(declare-fun temp668_7 () (_ BitVec 64))
(declare-fun temp668_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp668_9 () (_ BitVec 64))
(declare-fun temp668_10 () (_ BitVec 64))
(declare-fun temp668_11 () (_ BitVec 64))
(declare-fun temp668_12 () (_ BitVec 64))
(declare-fun temp668_13 () (_ BitVec 64))
(declare-fun temp668_14 () (_ BitVec 64))
(declare-fun temp668_15 () (_ BitVec 64))
(declare-fun temp668_16 () (_ BitVec 64))
(declare-fun temp668_17 () (_ BitVec 64))
(declare-fun temp668_18 () (_ BitVec 64))
(declare-fun temp668_19 () (_ BitVec 64))
(declare-fun temp668_20 () (_ BitVec 64))
(declare-fun temp668_21 () (_ BitVec 64))
(declare-fun temp668_22 () (_ BitVec 64))
(declare-fun temp668_23 () (_ BitVec 64))
(declare-fun temp668_24 () (_ BitVec 64))
(declare-fun temp668_25 () (_ BitVec 64))
(declare-fun temp668_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp668_27 () (_ BitVec 64))
(declare-fun temp668_28 () (_ BitVec 64))
(declare-fun temp668_29 () (_ BitVec 64))
(declare-fun temp668_30 () (_ BitVec 64))
(declare-fun temp668_31 () (_ BitVec 64))
(declare-fun temp668_32 () (_ BitVec 64))
(declare-fun temp668_33 () (_ BitVec 64))
(declare-fun temp668_34 () (_ BitVec 64))
(declare-fun temp668_35 () (_ BitVec 64))
(declare-fun temp668_36 () (_ BitVec 64))
(declare-fun temp668_37 () (_ BitVec 64))
(declare-fun temp668_38 () (_ BitVec 64))
(declare-fun temp668_39 () (_ BitVec 64))
(declare-fun temp668_40 () (_ BitVec 64))
(declare-fun temp668_41 () (_ BitVec 64))
(declare-fun temp668_42 () (_ BitVec 64))
(declare-fun temp668_43 () (_ BitVec 64))
(declare-fun temp668_44 () (_ BitVec 64))
(declare-fun temp668_45 () (_ BitVec 64))
(declare-fun temp668_46 () (_ BitVec 64))
(declare-fun temp668_47 () (_ BitVec 64))
(declare-fun temp668_48 () (_ BitVec 64))
(declare-fun temp668_49 () (_ BitVec 64))
(declare-fun temp668_50 () (_ BitVec 64))
(declare-fun temp668_51 () (_ BitVec 64))
(declare-fun temp668_52 () (_ BitVec 64))
(declare-fun temp668_53 () (_ BitVec 64))
(declare-fun temp668_54 () (_ BitVec 64))
(declare-fun temp668_55 () (_ BitVec 64))
(declare-fun temp668_56 () (_ BitVec 64))
(declare-fun temp668_57 () (_ BitVec 64))
(declare-fun temp668_58 () (_ BitVec 64))
(declare-fun temp668_59 () (_ BitVec 64))
(declare-fun temp668_60 () (_ BitVec 64))
(declare-fun temp668_61 () (_ BitVec 64))
(declare-fun temp668_62 () (_ BitVec 64))
(declare-fun temp668_63 () (_ BitVec 64))
(declare-fun temp668_64 () (_ BitVec 64))
(declare-fun temp668_65 () (_ BitVec 64))
(declare-fun temp668_66 () (_ BitVec 64))
(declare-fun temp668_67 () (_ BitVec 64))
(declare-fun temp668_68 () (_ BitVec 64))
(declare-fun temp668_69 () (_ BitVec 64))
(declare-fun temp668_70 () (_ BitVec 64))
(declare-fun temp668_71 () (_ BitVec 64))
(declare-fun temp668_72 () (_ BitVec 64))
(declare-fun temp668_73 () (_ BitVec 64))
(declare-fun temp668_74 () (_ BitVec 64))
(declare-fun temp668_75 () (_ BitVec 64))
(declare-fun temp668_76 () (_ BitVec 64))
(declare-fun temp668_77 () (_ BitVec 64))
(declare-fun temp668_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp668_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp668_80 () (_ BitVec 64))
(declare-fun var1184010 () (_ BitVec 64))
(declare-fun var1183975 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp668_81 () (_ BitVec 64))
(declare-fun temp668_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp668_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp668_84 () (_ BitVec 64))
(declare-fun temp668_85 () (_ BitVec 64))
(declare-fun var1904942 () (_ BitVec 64))
(declare-fun temp668_86 () (_ BitVec 64))
(declare-fun var1904943 () (_ BitVec 64))
(declare-fun var2229374 () (_ BitVec 64))
(declare-fun var2229375 () (_ BitVec 64))
(declare-fun temp668_87 () (_ BitVec 64))
(declare-fun var2953626 () (_ BitVec 64))
(declare-fun temp668_88 () (_ BitVec 64))
(declare-fun var3477914 () (_ BitVec 64))
(declare-fun temp668_89 () (_ BitVec 64))
(declare-fun var4985763 () (_ BitVec 64))
(declare-fun temp668_91 () (_ BitVec 64))
(declare-fun temp668_90 () (_ BitVec 64))
(assert (= temp668_1 #x0000000000080000))
(assert (= var461925 temp668_1))
(assert (= temp668_2 #x0000000000080000))
(assert (= var724069 temp668_2))
(assert (= temp668_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp668_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_4 #x0000000000000000))
(assert (= var69380 temp668_4))
(assert (= temp668_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp668_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_6 #x0000000000000000))
(assert (= var69401 temp668_6))
(assert (= temp668_7 #x0000000000000000))
(assert (= temp668_8 temp668_7))
(assert (= temp668_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_8)))
(assert (= temp668_10 #x0000000000000001))
(assert (= temp668_11 temp668_10))
(assert (= temp668_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_11)))
(assert (= temp668_13 #x0000000000000002))
(assert (= temp668_14 temp668_13))
(assert (= temp668_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_14)))
(assert (= temp668_16 #x0000000000000003))
(assert (= temp668_17 temp668_16))
(assert (= temp668_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_17)))
(assert (= temp668_19 #x0000000000000004))
(assert (= temp668_20 temp668_19))
(assert (= temp668_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_20)))
(assert (= temp668_22 #x0000000000000005))
(assert (= temp668_23 temp668_22))
(assert (= temp668_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_23)))
(assert (= temp668_25 #x0000000000000000))
(assert (= temp668_26 temp668_25))
(assert (= temp668_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp668_26)))
(assert (= temp668_28 #x0000000000000001))
(assert (= temp668_29 temp668_28))
(assert (= temp668_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp668_29)))
(assert (= temp668_31 #x0000000000000002))
(assert (= temp668_32 temp668_31))
(assert (= temp668_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp668_32)))
(assert (= temp668_34 #x0000000000000003))
(assert (= temp668_35 temp668_34))
(assert (= temp668_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp668_35)))
(assert (= temp668_37 #x0000000000000004))
(assert (= temp668_38 temp668_37))
(assert (= temp668_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp668_38)))
(assert (= temp668_40 #x0000000000000005))
(assert (= temp668_41 temp668_40))
(assert (= temp668_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp668_41)))
(assert (= temp668_43 temp668_11))
(assert (= temp668_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp668_43)))
(assert (= temp668_45 temp668_14))
(assert (= temp668_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp668_45)))
(assert (= temp668_47 temp668_17))
(assert (= temp668_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp668_47)))
(assert (= temp668_49 temp668_20))
(assert (= temp668_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp668_49)))
(assert (= temp668_51 temp668_23))
(assert (= temp668_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp668_51)))
(assert (= temp668_53 temp668_8))
(assert (= temp668_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp668_53)))
(assert (= temp668_55 temp668_26))
(assert (= temp668_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_55)))
(assert (= temp668_57 temp668_29))
(assert (= temp668_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_57)))
(assert (= temp668_59 temp668_32))
(assert (= temp668_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_59)))
(assert (= temp668_61 temp668_35))
(assert (= temp668_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_61)))
(assert (= temp668_63 temp668_38))
(assert (= temp668_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_63)))
(assert (= temp668_65 temp668_41))
(assert (= temp668_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_65)))
(assert (= temp668_67 temp668_43))
(assert (= temp668_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_67)))
(assert (= temp668_69 temp668_45))
(assert (= temp668_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_69)))
(assert (= temp668_71 temp668_47))
(assert (= temp668_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_71)))
(assert (= temp668_73 temp668_49))
(assert (= temp668_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_73)))
(assert (= temp668_75 temp668_51))
(assert (= temp668_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_75)))
(assert (= temp668_77 temp668_53))
(assert (= temp668_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_77)))
(assert (= (and true
        (= temp668_44 temp668_12)
        (= temp668_46 temp668_15)
        (= temp668_48 temp668_18)
        (= temp668_50 temp668_21)
        (= temp668_52 temp668_24)
        (= temp668_54 temp668_9)
        (= temp668_56 temp668_27)
        (= temp668_58 temp668_30)
        (= temp668_60 temp668_33)
        (= temp668_62 temp668_36)
        (= temp668_64 temp668_39)
        (= temp668_66 temp668_42)
        (= temp668_68 temp668_44)
        (= temp668_70 temp668_46)
        (= temp668_72 temp668_48)
        (= temp668_74 temp668_50)
        (= temp668_76 temp668_52)
        (= temp668_78 temp668_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp668_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp668_79))
(assert (= temp668_80 #x0000000000000001))
(assert (= var1184010 temp668_80))
(assert (= var1183975 var1184010))
(assert (= var69428 var1183975))
(assert (= temp668_81 #x0000000000000001))
(assert (= var69428 temp668_81))
(assert (= temp668_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp668_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp668_83)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp668_84 #x0000000000000000))
(assert (= var69546 temp668_84))
(assert (= temp668_85 #x0000000000000000))
(assert (= var1904942 temp668_85))
(assert (= temp668_86 #x0000000000000000))
(assert (= var1904943 temp668_86))
(assert (= var2229374 var1904942))
(assert (= var2229375 var1904943))
(assert (= temp668_87 #x0000000000000001))
(assert (= var2953626 temp668_87))
(assert (= temp668_88 #x0000000000000001))
(assert (= var3477914 temp668_88))
(assert (= temp668_89 #x000000000000000b))
(assert (= var4985763 temp668_89))
(assert (= temp668_91 #x0000000000000001))
(assert (= temp668_90 temp668_91))
(model-add temp668_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp668_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp668_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp668_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






