(declare-fun temp280_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp280_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp280_3 () (_ BitVec 64))
(declare-fun temp280_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp280_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp280_6 () (_ BitVec 64))
(declare-fun temp280_7 () (_ BitVec 64))
(declare-fun temp280_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp280_9 () (_ BitVec 64))
(declare-fun temp280_10 () (_ BitVec 64))
(declare-fun temp280_11 () (_ BitVec 64))
(declare-fun temp280_12 () (_ BitVec 64))
(declare-fun temp280_13 () (_ BitVec 64))
(declare-fun temp280_14 () (_ BitVec 64))
(declare-fun temp280_15 () (_ BitVec 64))
(declare-fun temp280_16 () (_ BitVec 64))
(declare-fun temp280_17 () (_ BitVec 64))
(declare-fun temp280_18 () (_ BitVec 64))
(declare-fun temp280_19 () (_ BitVec 64))
(declare-fun temp280_20 () (_ BitVec 64))
(declare-fun temp280_21 () (_ BitVec 64))
(declare-fun temp280_22 () (_ BitVec 64))
(declare-fun temp280_23 () (_ BitVec 64))
(declare-fun temp280_24 () (_ BitVec 64))
(declare-fun temp280_25 () (_ BitVec 64))
(declare-fun temp280_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp280_27 () (_ BitVec 64))
(declare-fun temp280_28 () (_ BitVec 64))
(declare-fun temp280_29 () (_ BitVec 64))
(declare-fun temp280_30 () (_ BitVec 64))
(declare-fun temp280_31 () (_ BitVec 64))
(declare-fun temp280_32 () (_ BitVec 64))
(declare-fun temp280_33 () (_ BitVec 64))
(declare-fun temp280_34 () (_ BitVec 64))
(declare-fun temp280_35 () (_ BitVec 64))
(declare-fun temp280_36 () (_ BitVec 64))
(declare-fun temp280_37 () (_ BitVec 64))
(declare-fun temp280_38 () (_ BitVec 64))
(declare-fun temp280_39 () (_ BitVec 64))
(declare-fun temp280_40 () (_ BitVec 64))
(declare-fun temp280_41 () (_ BitVec 64))
(declare-fun temp280_42 () (_ BitVec 64))
(declare-fun temp280_43 () (_ BitVec 64))
(declare-fun temp280_44 () (_ BitVec 64))
(declare-fun temp280_45 () (_ BitVec 64))
(declare-fun temp280_46 () (_ BitVec 64))
(declare-fun temp280_47 () (_ BitVec 64))
(declare-fun temp280_48 () (_ BitVec 64))
(declare-fun temp280_49 () (_ BitVec 64))
(declare-fun temp280_50 () (_ BitVec 64))
(declare-fun temp280_51 () (_ BitVec 64))
(declare-fun temp280_52 () (_ BitVec 64))
(declare-fun temp280_53 () (_ BitVec 64))
(declare-fun temp280_54 () (_ BitVec 64))
(declare-fun temp280_55 () (_ BitVec 64))
(declare-fun temp280_56 () (_ BitVec 64))
(declare-fun temp280_57 () (_ BitVec 64))
(declare-fun temp280_58 () (_ BitVec 64))
(declare-fun temp280_59 () (_ BitVec 64))
(declare-fun temp280_60 () (_ BitVec 64))
(declare-fun temp280_61 () (_ BitVec 64))
(declare-fun temp280_62 () (_ BitVec 64))
(declare-fun temp280_63 () (_ BitVec 64))
(declare-fun temp280_64 () (_ BitVec 64))
(declare-fun temp280_65 () (_ BitVec 64))
(declare-fun temp280_66 () (_ BitVec 64))
(declare-fun temp280_67 () (_ BitVec 64))
(declare-fun temp280_68 () (_ BitVec 64))
(declare-fun temp280_69 () (_ BitVec 64))
(declare-fun temp280_70 () (_ BitVec 64))
(declare-fun temp280_71 () (_ BitVec 64))
(declare-fun temp280_72 () (_ BitVec 64))
(declare-fun temp280_73 () (_ BitVec 64))
(declare-fun temp280_74 () (_ BitVec 64))
(declare-fun temp280_75 () (_ BitVec 64))
(declare-fun temp280_76 () (_ BitVec 64))
(declare-fun temp280_77 () (_ BitVec 64))
(declare-fun temp280_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp280_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp280_80 () (_ BitVec 64))
(declare-fun var1248381 () (_ BitVec 64))
(declare-fun temp280_81 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp280_82 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp280_83 () (_ BitVec 64))
(declare-fun temp280_84 () (_ BitVec 64))
(declare-fun var2101550 () (_ BitVec 64))
(declare-fun temp280_85 () (_ BitVec 64))
(declare-fun var2101551 () (_ BitVec 64))
(declare-fun var2425982 () (_ BitVec 64))
(declare-fun var2425983 () (_ BitVec 64))
(declare-fun temp280_86 () (_ BitVec 64))
(declare-fun var3150234 () (_ BitVec 64))
(declare-fun temp280_87 () (_ BitVec 64))
(declare-fun var3674522 () (_ BitVec 64))
(declare-fun temp280_88 () (_ BitVec 64))
(declare-fun var4199331 () (_ BitVec 64))
(declare-fun temp280_90 () (_ BitVec 64))
(declare-fun temp280_89 () (_ BitVec 64))
(assert (= temp280_1 #x0000000000080000))
(assert (= var461925 temp280_1))
(assert (= temp280_2 #x0000000000080000))
(assert (= var724069 temp280_2))
(assert (= temp280_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp280_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp280_4 #x0000000000000000))
(assert (= var69380 temp280_4))
(assert (= temp280_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp280_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp280_6 #x0000000000000000))
(assert (= var69401 temp280_6))
(assert (= temp280_7 #x0000000000000000))
(assert (= temp280_8 temp280_7))
(assert (= temp280_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp280_8)))
(assert (= temp280_10 #x0000000000000001))
(assert (= temp280_11 temp280_10))
(assert (= temp280_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp280_11)))
(assert (= temp280_13 #x0000000000000002))
(assert (= temp280_14 temp280_13))
(assert (= temp280_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp280_14)))
(assert (= temp280_16 #x0000000000000003))
(assert (= temp280_17 temp280_16))
(assert (= temp280_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp280_17)))
(assert (= temp280_19 #x0000000000000004))
(assert (= temp280_20 temp280_19))
(assert (= temp280_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp280_20)))
(assert (= temp280_22 #x0000000000000005))
(assert (= temp280_23 temp280_22))
(assert (= temp280_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp280_23)))
(assert (= temp280_25 #x0000000000000000))
(assert (= temp280_26 temp280_25))
(assert (= temp280_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp280_26)))
(assert (= temp280_28 #x0000000000000001))
(assert (= temp280_29 temp280_28))
(assert (= temp280_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp280_29)))
(assert (= temp280_31 #x0000000000000002))
(assert (= temp280_32 temp280_31))
(assert (= temp280_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp280_32)))
(assert (= temp280_34 #x0000000000000003))
(assert (= temp280_35 temp280_34))
(assert (= temp280_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp280_35)))
(assert (= temp280_37 #x0000000000000004))
(assert (= temp280_38 temp280_37))
(assert (= temp280_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp280_38)))
(assert (= temp280_40 #x0000000000000005))
(assert (= temp280_41 temp280_40))
(assert (= temp280_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp280_41)))
(assert (= temp280_43 temp280_11))
(assert (= temp280_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp280_43)))
(assert (= temp280_45 temp280_14))
(assert (= temp280_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp280_45)))
(assert (= temp280_47 temp280_17))
(assert (= temp280_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp280_47)))
(assert (= temp280_49 temp280_20))
(assert (= temp280_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp280_49)))
(assert (= temp280_51 temp280_23))
(assert (= temp280_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp280_51)))
(assert (= temp280_53 temp280_8))
(assert (= temp280_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp280_53)))
(assert (= temp280_55 temp280_26))
(assert (= temp280_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp280_55)))
(assert (= temp280_57 temp280_29))
(assert (= temp280_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp280_57)))
(assert (= temp280_59 temp280_32))
(assert (= temp280_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp280_59)))
(assert (= temp280_61 temp280_35))
(assert (= temp280_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp280_61)))
(assert (= temp280_63 temp280_38))
(assert (= temp280_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp280_63)))
(assert (= temp280_65 temp280_41))
(assert (= temp280_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp280_65)))
(assert (= temp280_67 temp280_43))
(assert (= temp280_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp280_67)))
(assert (= temp280_69 temp280_45))
(assert (= temp280_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp280_69)))
(assert (= temp280_71 temp280_47))
(assert (= temp280_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp280_71)))
(assert (= temp280_73 temp280_49))
(assert (= temp280_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp280_73)))
(assert (= temp280_75 temp280_51))
(assert (= temp280_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp280_75)))
(assert (= temp280_77 temp280_53))
(assert (= temp280_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp280_77)))
(assert (= (and true
        (= temp280_44 temp280_12)
        (= temp280_46 temp280_15)
        (= temp280_48 temp280_18)
        (= temp280_50 temp280_21)
        (= temp280_52 temp280_24)
        (= temp280_54 temp280_9)
        (= temp280_56 temp280_27)
        (= temp280_58 temp280_30)
        (= temp280_60 temp280_33)
        (= temp280_62 temp280_36)
        (= temp280_64 temp280_39)
        (= temp280_66 temp280_42)
        (= temp280_68 temp280_44)
        (= temp280_70 temp280_46)
        (= temp280_72 temp280_48)
        (= temp280_74 temp280_50)
        (= temp280_76 temp280_52)
        (= temp280_78 temp280_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp280_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp280_79))
(assert (= temp280_80 #x0000000009c00400))
(assert (= var1248381 temp280_80))
(assert (= temp280_81 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp280_81)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp280_82 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp280_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp280_83 #x0000000000000000))
(assert (= var69546 temp280_83))
(assert (= temp280_84 #x0000000000000000))
(assert (= var2101550 temp280_84))
(assert (= temp280_85 #x0000000000000000))
(assert (= var2101551 temp280_85))
(assert (= var2425982 var2101550))
(assert (= var2425983 var2101551))
(assert (= temp280_86 #x0000000000000001))
(assert (= var3150234 temp280_86))
(assert (= temp280_87 #x0000000000000001))
(assert (= var3674522 temp280_87))
(assert (= temp280_88 #x000000000000000b))
(assert (= var4199331 temp280_88))
(assert (= temp280_90 #x0000000000000001))
(assert (= temp280_89 temp280_90))
(model-add temp280_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp280_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp280_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp280_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






