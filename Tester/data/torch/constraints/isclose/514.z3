(declare-fun temp638_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp638_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp638_3 () (_ BitVec 64))
(declare-fun temp638_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp638_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp638_6 () (_ BitVec 64))
(declare-fun temp638_7 () (_ BitVec 64))
(declare-fun temp638_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp638_9 () (_ BitVec 64))
(declare-fun temp638_10 () (_ BitVec 64))
(declare-fun temp638_11 () (_ BitVec 64))
(declare-fun temp638_12 () (_ BitVec 64))
(declare-fun temp638_13 () (_ BitVec 64))
(declare-fun temp638_14 () (_ BitVec 64))
(declare-fun temp638_15 () (_ BitVec 64))
(declare-fun temp638_16 () (_ BitVec 64))
(declare-fun temp638_17 () (_ BitVec 64))
(declare-fun temp638_18 () (_ BitVec 64))
(declare-fun temp638_19 () (_ BitVec 64))
(declare-fun temp638_20 () (_ BitVec 64))
(declare-fun temp638_21 () (_ BitVec 64))
(declare-fun temp638_22 () (_ BitVec 64))
(declare-fun temp638_23 () (_ BitVec 64))
(declare-fun temp638_24 () (_ BitVec 64))
(declare-fun temp638_25 () (_ BitVec 64))
(declare-fun temp638_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp638_27 () (_ BitVec 64))
(declare-fun temp638_28 () (_ BitVec 64))
(declare-fun temp638_29 () (_ BitVec 64))
(declare-fun temp638_30 () (_ BitVec 64))
(declare-fun temp638_31 () (_ BitVec 64))
(declare-fun temp638_32 () (_ BitVec 64))
(declare-fun temp638_33 () (_ BitVec 64))
(declare-fun temp638_34 () (_ BitVec 64))
(declare-fun temp638_35 () (_ BitVec 64))
(declare-fun temp638_36 () (_ BitVec 64))
(declare-fun temp638_37 () (_ BitVec 64))
(declare-fun temp638_38 () (_ BitVec 64))
(declare-fun temp638_39 () (_ BitVec 64))
(declare-fun temp638_40 () (_ BitVec 64))
(declare-fun temp638_41 () (_ BitVec 64))
(declare-fun temp638_42 () (_ BitVec 64))
(declare-fun temp638_43 () (_ BitVec 64))
(declare-fun temp638_44 () (_ BitVec 64))
(declare-fun temp638_45 () (_ BitVec 64))
(declare-fun temp638_46 () (_ BitVec 64))
(declare-fun temp638_47 () (_ BitVec 64))
(declare-fun temp638_48 () (_ BitVec 64))
(declare-fun temp638_49 () (_ BitVec 64))
(declare-fun temp638_50 () (_ BitVec 64))
(declare-fun temp638_51 () (_ BitVec 64))
(declare-fun temp638_52 () (_ BitVec 64))
(declare-fun temp638_53 () (_ BitVec 64))
(declare-fun temp638_54 () (_ BitVec 64))
(declare-fun temp638_55 () (_ BitVec 64))
(declare-fun temp638_56 () (_ BitVec 64))
(declare-fun temp638_57 () (_ BitVec 64))
(declare-fun temp638_58 () (_ BitVec 64))
(declare-fun temp638_59 () (_ BitVec 64))
(declare-fun temp638_60 () (_ BitVec 64))
(declare-fun temp638_61 () (_ BitVec 64))
(declare-fun temp638_62 () (_ BitVec 64))
(declare-fun temp638_63 () (_ BitVec 64))
(declare-fun temp638_64 () (_ BitVec 64))
(declare-fun temp638_65 () (_ BitVec 64))
(declare-fun temp638_66 () (_ BitVec 64))
(declare-fun temp638_67 () (_ BitVec 64))
(declare-fun temp638_68 () (_ BitVec 64))
(declare-fun temp638_69 () (_ BitVec 64))
(declare-fun temp638_70 () (_ BitVec 64))
(declare-fun temp638_71 () (_ BitVec 64))
(declare-fun temp638_72 () (_ BitVec 64))
(declare-fun temp638_73 () (_ BitVec 64))
(declare-fun temp638_74 () (_ BitVec 64))
(declare-fun temp638_75 () (_ BitVec 64))
(declare-fun temp638_76 () (_ BitVec 64))
(declare-fun temp638_77 () (_ BitVec 64))
(declare-fun temp638_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp638_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp638_80 () (_ BitVec 64))
(declare-fun var1184010 () (_ BitVec 64))
(declare-fun var1183975 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp638_81 () (_ BitVec 64))
(declare-fun temp638_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp638_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp638_84 () (_ BitVec 64))
(declare-fun temp638_85 () (_ BitVec 64))
(declare-fun var1904942 () (_ BitVec 64))
(declare-fun temp638_86 () (_ BitVec 64))
(declare-fun var1904943 () (_ BitVec 64))
(declare-fun var2229374 () (_ BitVec 64))
(declare-fun var2229375 () (_ BitVec 64))
(declare-fun temp638_87 () (_ BitVec 64))
(declare-fun var2560302 () (_ BitVec 64))
(declare-fun temp638_88 () (_ BitVec 64))
(declare-fun var2560303 () (_ BitVec 64))
(declare-fun var2884734 () (_ BitVec 64))
(declare-fun var2884735 () (_ BitVec 64))
(declare-fun temp638_89 () (_ BitVec 64))
(declare-fun var3412378 () (_ BitVec 64))
(declare-fun temp638_90 () (_ BitVec 64))
(declare-fun var3936666 () (_ BitVec 64))
(assert (= temp638_1 #x0000000000080000))
(assert (= var461925 temp638_1))
(assert (= temp638_2 #x0000000000080000))
(assert (= var724069 temp638_2))
(assert (= temp638_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp638_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp638_4 #x0000000000000000))
(assert (= var69380 temp638_4))
(assert (= temp638_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp638_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp638_6 #x0000000000000000))
(assert (= var69401 temp638_6))
(assert (= temp638_7 #x0000000000000000))
(assert (= temp638_8 temp638_7))
(assert (= temp638_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp638_8)))
(assert (= temp638_10 #x0000000000000001))
(assert (= temp638_11 temp638_10))
(assert (= temp638_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp638_11)))
(assert (= temp638_13 #x0000000000000002))
(assert (= temp638_14 temp638_13))
(assert (= temp638_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp638_14)))
(assert (= temp638_16 #x0000000000000003))
(assert (= temp638_17 temp638_16))
(assert (= temp638_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp638_17)))
(assert (= temp638_19 #x0000000000000004))
(assert (= temp638_20 temp638_19))
(assert (= temp638_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp638_20)))
(assert (= temp638_22 #x0000000000000005))
(assert (= temp638_23 temp638_22))
(assert (= temp638_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp638_23)))
(assert (= temp638_25 #x0000000000000000))
(assert (= temp638_26 temp638_25))
(assert (= temp638_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp638_26)))
(assert (= temp638_28 #x0000000000000001))
(assert (= temp638_29 temp638_28))
(assert (= temp638_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp638_29)))
(assert (= temp638_31 #x0000000000000002))
(assert (= temp638_32 temp638_31))
(assert (= temp638_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp638_32)))
(assert (= temp638_34 #x0000000000000003))
(assert (= temp638_35 temp638_34))
(assert (= temp638_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp638_35)))
(assert (= temp638_37 #x0000000000000004))
(assert (= temp638_38 temp638_37))
(assert (= temp638_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp638_38)))
(assert (= temp638_40 #x0000000000000005))
(assert (= temp638_41 temp638_40))
(assert (= temp638_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp638_41)))
(assert (= temp638_43 temp638_11))
(assert (= temp638_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp638_43)))
(assert (= temp638_45 temp638_14))
(assert (= temp638_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp638_45)))
(assert (= temp638_47 temp638_17))
(assert (= temp638_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp638_47)))
(assert (= temp638_49 temp638_20))
(assert (= temp638_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp638_49)))
(assert (= temp638_51 temp638_23))
(assert (= temp638_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp638_51)))
(assert (= temp638_53 temp638_8))
(assert (= temp638_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp638_53)))
(assert (= temp638_55 temp638_26))
(assert (= temp638_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp638_55)))
(assert (= temp638_57 temp638_29))
(assert (= temp638_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp638_57)))
(assert (= temp638_59 temp638_32))
(assert (= temp638_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp638_59)))
(assert (= temp638_61 temp638_35))
(assert (= temp638_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp638_61)))
(assert (= temp638_63 temp638_38))
(assert (= temp638_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp638_63)))
(assert (= temp638_65 temp638_41))
(assert (= temp638_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp638_65)))
(assert (= temp638_67 temp638_43))
(assert (= temp638_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp638_67)))
(assert (= temp638_69 temp638_45))
(assert (= temp638_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp638_69)))
(assert (= temp638_71 temp638_47))
(assert (= temp638_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp638_71)))
(assert (= temp638_73 temp638_49))
(assert (= temp638_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp638_73)))
(assert (= temp638_75 temp638_51))
(assert (= temp638_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp638_75)))
(assert (= temp638_77 temp638_53))
(assert (= temp638_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp638_77)))
(assert (= (and true
        (= temp638_44 temp638_12)
        (= temp638_46 temp638_15)
        (= temp638_48 temp638_18)
        (= temp638_50 temp638_21)
        (= temp638_52 temp638_24)
        (= temp638_54 temp638_9)
        (= temp638_56 temp638_27)
        (= temp638_58 temp638_30)
        (= temp638_60 temp638_33)
        (= temp638_62 temp638_36)
        (= temp638_64 temp638_39)
        (= temp638_66 temp638_42)
        (= temp638_68 temp638_44)
        (= temp638_70 temp638_46)
        (= temp638_72 temp638_48)
        (= temp638_74 temp638_50)
        (= temp638_76 temp638_52)
        (= temp638_78 temp638_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp638_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp638_79))
(assert (= temp638_80 #x0000000000000001))
(assert (= var1184010 temp638_80))
(assert (= var1183975 var1184010))
(assert (= var69428 var1183975))
(assert (= temp638_81 #x0000000000000001))
(assert (= var69428 temp638_81))
(assert (= temp638_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp638_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp638_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp638_83)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp638_84 #x0000000000000000))
(assert (= var69546 temp638_84))
(assert (= temp638_85 #x0000000000000000))
(assert (= var1904942 temp638_85))
(assert (= temp638_86 #x0000000000000000))
(assert (= var1904943 temp638_86))
(assert (= var2229374 var1904942))
(assert (= var2229375 var1904943))
(assert (= temp638_87 #x0000000000000000))
(assert (= var2560302 temp638_87))
(assert (= temp638_88 #x0000000000000000))
(assert (= var2560303 temp638_88))
(assert (= var2884734 var2560302))
(assert (= var2884735 var2560303))
(assert (= temp638_89 #x0000000000000001))
(assert (= var3412378 temp638_89))
(assert (= temp638_90 #x0000000000000001))
(assert (= var3936666 temp638_90))
(model-add temp638_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp638_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp638_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp638_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






