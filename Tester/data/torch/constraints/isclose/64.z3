(declare-fun temp64_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp64_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp64_3 () (_ BitVec 64))
(declare-fun temp64_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp64_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp64_6 () (_ BitVec 64))
(declare-fun temp64_7 () (_ BitVec 64))
(declare-fun temp64_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp64_9 () (_ BitVec 64))
(declare-fun temp64_10 () (_ BitVec 64))
(declare-fun temp64_11 () (_ BitVec 64))
(declare-fun temp64_12 () (_ BitVec 64))
(declare-fun temp64_13 () (_ BitVec 64))
(declare-fun temp64_14 () (_ BitVec 64))
(declare-fun temp64_15 () (_ BitVec 64))
(declare-fun temp64_16 () (_ BitVec 64))
(declare-fun temp64_17 () (_ BitVec 64))
(declare-fun temp64_18 () (_ BitVec 64))
(declare-fun temp64_19 () (_ BitVec 64))
(declare-fun temp64_20 () (_ BitVec 64))
(declare-fun temp64_21 () (_ BitVec 64))
(declare-fun temp64_22 () (_ BitVec 64))
(declare-fun temp64_23 () (_ BitVec 64))
(declare-fun temp64_24 () (_ BitVec 64))
(declare-fun temp64_25 () (_ BitVec 64))
(declare-fun temp64_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp64_27 () (_ BitVec 64))
(declare-fun temp64_28 () (_ BitVec 64))
(declare-fun temp64_29 () (_ BitVec 64))
(declare-fun temp64_30 () (_ BitVec 64))
(declare-fun temp64_31 () (_ BitVec 64))
(declare-fun temp64_32 () (_ BitVec 64))
(declare-fun temp64_33 () (_ BitVec 64))
(declare-fun temp64_34 () (_ BitVec 64))
(declare-fun temp64_35 () (_ BitVec 64))
(declare-fun temp64_36 () (_ BitVec 64))
(declare-fun temp64_37 () (_ BitVec 64))
(declare-fun temp64_38 () (_ BitVec 64))
(declare-fun temp64_39 () (_ BitVec 64))
(declare-fun temp64_40 () (_ BitVec 64))
(declare-fun temp64_41 () (_ BitVec 64))
(declare-fun temp64_42 () (_ BitVec 64))
(declare-fun temp64_43 () (_ BitVec 64))
(declare-fun temp64_44 () (_ BitVec 64))
(declare-fun temp64_45 () (_ BitVec 64))
(declare-fun temp64_46 () (_ BitVec 64))
(declare-fun temp64_47 () (_ BitVec 64))
(declare-fun temp64_48 () (_ BitVec 64))
(declare-fun temp64_49 () (_ BitVec 64))
(declare-fun temp64_50 () (_ BitVec 64))
(declare-fun temp64_51 () (_ BitVec 64))
(declare-fun temp64_52 () (_ BitVec 64))
(declare-fun temp64_53 () (_ BitVec 64))
(declare-fun temp64_54 () (_ BitVec 64))
(declare-fun temp64_55 () (_ BitVec 64))
(declare-fun temp64_56 () (_ BitVec 64))
(declare-fun temp64_57 () (_ BitVec 64))
(declare-fun temp64_58 () (_ BitVec 64))
(declare-fun temp64_59 () (_ BitVec 64))
(declare-fun temp64_60 () (_ BitVec 64))
(declare-fun temp64_61 () (_ BitVec 64))
(declare-fun temp64_62 () (_ BitVec 64))
(declare-fun temp64_63 () (_ BitVec 64))
(declare-fun temp64_64 () (_ BitVec 64))
(declare-fun temp64_65 () (_ BitVec 64))
(declare-fun temp64_66 () (_ BitVec 64))
(declare-fun temp64_67 () (_ BitVec 64))
(declare-fun temp64_68 () (_ BitVec 64))
(declare-fun temp64_69 () (_ BitVec 64))
(declare-fun temp64_70 () (_ BitVec 64))
(declare-fun temp64_71 () (_ BitVec 64))
(declare-fun temp64_72 () (_ BitVec 64))
(declare-fun temp64_73 () (_ BitVec 64))
(declare-fun temp64_74 () (_ BitVec 64))
(declare-fun temp64_75 () (_ BitVec 64))
(declare-fun temp64_76 () (_ BitVec 64))
(declare-fun temp64_77 () (_ BitVec 64))
(declare-fun temp64_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp64_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp64_80 () (_ BitVec 64))
(declare-fun var987402 () (_ BitVec 64))
(declare-fun var987367 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp64_81 () (_ BitVec 64))
(declare-fun temp64_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp64_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp64_84 () (_ BitVec 64))
(declare-fun temp64_85 () (_ BitVec 64))
(declare-fun var1970478 () (_ BitVec 64))
(declare-fun temp64_86 () (_ BitVec 64))
(declare-fun var1970479 () (_ BitVec 64))
(declare-fun var2294910 () (_ BitVec 64))
(declare-fun var2294911 () (_ BitVec 64))
(declare-fun temp64_87 () (_ BitVec 64))
(declare-fun var2822554 () (_ BitVec 64))
(declare-fun temp64_88 () (_ BitVec 64))
(declare-fun var3346842 () (_ BitVec 64))
(declare-fun temp64_89 () (_ BitVec 64))
(declare-fun var4264867 () (_ BitVec 64))
(declare-fun temp64_91 () (_ BitVec 64))
(declare-fun temp64_90 () (_ BitVec 64))
(declare-fun temp64_92 () (_ BitVec 64))
(declare-fun var5051299 () (_ BitVec 64))
(declare-fun temp64_94 () (_ BitVec 64))
(declare-fun temp64_93 () (_ BitVec 64))
(assert (= temp64_1 #x0000000000080000))
(assert (= var461925 temp64_1))
(assert (= temp64_2 #x0000000000080000))
(assert (= var724069 temp64_2))
(assert (= temp64_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp64_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp64_4 #x0000000000000000))
(assert (= var69380 temp64_4))
(assert (= temp64_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp64_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp64_6 #x0000000000000000))
(assert (= var69401 temp64_6))
(assert (= temp64_7 #x0000000000000000))
(assert (= temp64_8 temp64_7))
(assert (= temp64_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_8)))
(assert (= temp64_10 #x0000000000000001))
(assert (= temp64_11 temp64_10))
(assert (= temp64_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_11)))
(assert (= temp64_13 #x0000000000000002))
(assert (= temp64_14 temp64_13))
(assert (= temp64_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_14)))
(assert (= temp64_16 #x0000000000000003))
(assert (= temp64_17 temp64_16))
(assert (= temp64_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_17)))
(assert (= temp64_19 #x0000000000000004))
(assert (= temp64_20 temp64_19))
(assert (= temp64_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_20)))
(assert (= temp64_22 #x0000000000000005))
(assert (= temp64_23 temp64_22))
(assert (= temp64_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_23)))
(assert (= temp64_25 #x0000000000000000))
(assert (= temp64_26 temp64_25))
(assert (= temp64_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp64_26)))
(assert (= temp64_28 #x0000000000000001))
(assert (= temp64_29 temp64_28))
(assert (= temp64_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp64_29)))
(assert (= temp64_31 #x0000000000000002))
(assert (= temp64_32 temp64_31))
(assert (= temp64_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp64_32)))
(assert (= temp64_34 #x0000000000000003))
(assert (= temp64_35 temp64_34))
(assert (= temp64_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp64_35)))
(assert (= temp64_37 #x0000000000000004))
(assert (= temp64_38 temp64_37))
(assert (= temp64_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp64_38)))
(assert (= temp64_40 #x0000000000000005))
(assert (= temp64_41 temp64_40))
(assert (= temp64_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp64_41)))
(assert (= temp64_43 temp64_11))
(assert (= temp64_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp64_43)))
(assert (= temp64_45 temp64_14))
(assert (= temp64_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp64_45)))
(assert (= temp64_47 temp64_17))
(assert (= temp64_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp64_47)))
(assert (= temp64_49 temp64_20))
(assert (= temp64_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp64_49)))
(assert (= temp64_51 temp64_23))
(assert (= temp64_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp64_51)))
(assert (= temp64_53 temp64_8))
(assert (= temp64_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp64_53)))
(assert (= temp64_55 temp64_26))
(assert (= temp64_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_55)))
(assert (= temp64_57 temp64_29))
(assert (= temp64_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_57)))
(assert (= temp64_59 temp64_32))
(assert (= temp64_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_59)))
(assert (= temp64_61 temp64_35))
(assert (= temp64_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_61)))
(assert (= temp64_63 temp64_38))
(assert (= temp64_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_63)))
(assert (= temp64_65 temp64_41))
(assert (= temp64_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_65)))
(assert (= temp64_67 temp64_43))
(assert (= temp64_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_67)))
(assert (= temp64_69 temp64_45))
(assert (= temp64_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_69)))
(assert (= temp64_71 temp64_47))
(assert (= temp64_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_71)))
(assert (= temp64_73 temp64_49))
(assert (= temp64_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_73)))
(assert (= temp64_75 temp64_51))
(assert (= temp64_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_75)))
(assert (= temp64_77 temp64_53))
(assert (= temp64_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_77)))
(assert (= (and true
        (= temp64_44 temp64_12)
        (= temp64_46 temp64_15)
        (= temp64_48 temp64_18)
        (= temp64_50 temp64_21)
        (= temp64_52 temp64_24)
        (= temp64_54 temp64_9)
        (= temp64_56 temp64_27)
        (= temp64_58 temp64_30)
        (= temp64_60 temp64_33)
        (= temp64_62 temp64_36)
        (= temp64_64 temp64_39)
        (= temp64_66 temp64_42)
        (= temp64_68 temp64_44)
        (= temp64_70 temp64_46)
        (= temp64_72 temp64_48)
        (= temp64_74 temp64_50)
        (= temp64_76 temp64_52)
        (= temp64_78 temp64_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp64_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp64_79))
(assert (= temp64_80 #x0000000000000001))
(assert (= var987402 temp64_80))
(assert (= var987367 var987402))
(assert (= var69428 var987367))
(assert (= temp64_81 #x0000000000000001))
(assert (= var69428 temp64_81))
(assert (= temp64_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp64_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp64_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp64_83)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp64_84 #x0000000000000000))
(assert (= var69546 temp64_84))
(assert (= temp64_85 #x0000000000000000))
(assert (= var1970478 temp64_85))
(assert (= temp64_86 #x0000000000000000))
(assert (= var1970479 temp64_86))
(assert (= var2294910 var1970478))
(assert (= var2294911 var1970479))
(assert (= temp64_87 #x0000000000000001))
(assert (= var2822554 temp64_87))
(assert (= temp64_88 #x0000000000000001))
(assert (= var3346842 temp64_88))
(assert (= temp64_89 #x000000000000000b))
(assert (= var4264867 temp64_89))
(assert (= temp64_91 #x0000000000000001))
(assert (= temp64_90 temp64_91))
(assert (= temp64_92 #x000000000000000b))
(assert (= var5051299 temp64_92))
(assert (= temp64_94 #x0000000000000001))
(assert (= temp64_93 temp64_94))
(model-add temp64_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp64_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp64_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp64_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






