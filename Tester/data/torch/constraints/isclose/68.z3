(declare-fun temp68_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp68_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp68_3 () (_ BitVec 64))
(declare-fun temp68_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp68_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp68_6 () (_ BitVec 64))
(declare-fun temp68_7 () (_ BitVec 64))
(declare-fun temp68_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp68_9 () (_ BitVec 64))
(declare-fun temp68_10 () (_ BitVec 64))
(declare-fun temp68_11 () (_ BitVec 64))
(declare-fun temp68_12 () (_ BitVec 64))
(declare-fun temp68_13 () (_ BitVec 64))
(declare-fun temp68_14 () (_ BitVec 64))
(declare-fun temp68_15 () (_ BitVec 64))
(declare-fun temp68_16 () (_ BitVec 64))
(declare-fun temp68_17 () (_ BitVec 64))
(declare-fun temp68_18 () (_ BitVec 64))
(declare-fun temp68_19 () (_ BitVec 64))
(declare-fun temp68_20 () (_ BitVec 64))
(declare-fun temp68_21 () (_ BitVec 64))
(declare-fun temp68_22 () (_ BitVec 64))
(declare-fun temp68_23 () (_ BitVec 64))
(declare-fun temp68_24 () (_ BitVec 64))
(declare-fun temp68_25 () (_ BitVec 64))
(declare-fun temp68_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp68_27 () (_ BitVec 64))
(declare-fun temp68_28 () (_ BitVec 64))
(declare-fun temp68_29 () (_ BitVec 64))
(declare-fun temp68_30 () (_ BitVec 64))
(declare-fun temp68_31 () (_ BitVec 64))
(declare-fun temp68_32 () (_ BitVec 64))
(declare-fun temp68_33 () (_ BitVec 64))
(declare-fun temp68_34 () (_ BitVec 64))
(declare-fun temp68_35 () (_ BitVec 64))
(declare-fun temp68_36 () (_ BitVec 64))
(declare-fun temp68_37 () (_ BitVec 64))
(declare-fun temp68_38 () (_ BitVec 64))
(declare-fun temp68_39 () (_ BitVec 64))
(declare-fun temp68_40 () (_ BitVec 64))
(declare-fun temp68_41 () (_ BitVec 64))
(declare-fun temp68_42 () (_ BitVec 64))
(declare-fun temp68_43 () (_ BitVec 64))
(declare-fun temp68_44 () (_ BitVec 64))
(declare-fun temp68_45 () (_ BitVec 64))
(declare-fun temp68_46 () (_ BitVec 64))
(declare-fun temp68_47 () (_ BitVec 64))
(declare-fun temp68_48 () (_ BitVec 64))
(declare-fun temp68_49 () (_ BitVec 64))
(declare-fun temp68_50 () (_ BitVec 64))
(declare-fun temp68_51 () (_ BitVec 64))
(declare-fun temp68_52 () (_ BitVec 64))
(declare-fun temp68_53 () (_ BitVec 64))
(declare-fun temp68_54 () (_ BitVec 64))
(declare-fun temp68_55 () (_ BitVec 64))
(declare-fun temp68_56 () (_ BitVec 64))
(declare-fun temp68_57 () (_ BitVec 64))
(declare-fun temp68_58 () (_ BitVec 64))
(declare-fun temp68_59 () (_ BitVec 64))
(declare-fun temp68_60 () (_ BitVec 64))
(declare-fun temp68_61 () (_ BitVec 64))
(declare-fun temp68_62 () (_ BitVec 64))
(declare-fun temp68_63 () (_ BitVec 64))
(declare-fun temp68_64 () (_ BitVec 64))
(declare-fun temp68_65 () (_ BitVec 64))
(declare-fun temp68_66 () (_ BitVec 64))
(declare-fun temp68_67 () (_ BitVec 64))
(declare-fun temp68_68 () (_ BitVec 64))
(declare-fun temp68_69 () (_ BitVec 64))
(declare-fun temp68_70 () (_ BitVec 64))
(declare-fun temp68_71 () (_ BitVec 64))
(declare-fun temp68_72 () (_ BitVec 64))
(declare-fun temp68_73 () (_ BitVec 64))
(declare-fun temp68_74 () (_ BitVec 64))
(declare-fun temp68_75 () (_ BitVec 64))
(declare-fun temp68_76 () (_ BitVec 64))
(declare-fun temp68_77 () (_ BitVec 64))
(declare-fun temp68_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp68_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp68_80 () (_ BitVec 64))
(declare-fun var987402 () (_ BitVec 64))
(declare-fun var987367 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp68_81 () (_ BitVec 64))
(declare-fun temp68_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp68_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp68_84 () (_ BitVec 64))
(declare-fun temp68_85 () (_ BitVec 64))
(declare-fun var1970478 () (_ BitVec 64))
(declare-fun temp68_86 () (_ BitVec 64))
(declare-fun var1970479 () (_ BitVec 64))
(declare-fun var2294910 () (_ BitVec 64))
(declare-fun var2294911 () (_ BitVec 64))
(declare-fun temp68_87 () (_ BitVec 64))
(declare-fun var2822554 () (_ BitVec 64))
(declare-fun temp68_88 () (_ BitVec 64))
(declare-fun var3346842 () (_ BitVec 64))
(declare-fun temp68_89 () (_ BitVec 64))
(declare-fun var4264867 () (_ BitVec 64))
(declare-fun temp68_91 () (_ BitVec 64))
(declare-fun temp68_90 () (_ BitVec 64))
(assert (= temp68_1 #x0000000000080000))
(assert (= var461925 temp68_1))
(assert (= temp68_2 #x0000000000080000))
(assert (= var724069 temp68_2))
(assert (= temp68_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp68_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_4 #x0000000000000000))
(assert (= var69380 temp68_4))
(assert (= temp68_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp68_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_6 #x0000000000000000))
(assert (= var69401 temp68_6))
(assert (= temp68_7 #x0000000000000000))
(assert (= temp68_8 temp68_7))
(assert (= temp68_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_8)))
(assert (= temp68_10 #x0000000000000001))
(assert (= temp68_11 temp68_10))
(assert (= temp68_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_11)))
(assert (= temp68_13 #x0000000000000002))
(assert (= temp68_14 temp68_13))
(assert (= temp68_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_14)))
(assert (= temp68_16 #x0000000000000003))
(assert (= temp68_17 temp68_16))
(assert (= temp68_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_17)))
(assert (= temp68_19 #x0000000000000004))
(assert (= temp68_20 temp68_19))
(assert (= temp68_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_20)))
(assert (= temp68_22 #x0000000000000005))
(assert (= temp68_23 temp68_22))
(assert (= temp68_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_23)))
(assert (= temp68_25 #x0000000000000000))
(assert (= temp68_26 temp68_25))
(assert (= temp68_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp68_26)))
(assert (= temp68_28 #x0000000000000001))
(assert (= temp68_29 temp68_28))
(assert (= temp68_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp68_29)))
(assert (= temp68_31 #x0000000000000002))
(assert (= temp68_32 temp68_31))
(assert (= temp68_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp68_32)))
(assert (= temp68_34 #x0000000000000003))
(assert (= temp68_35 temp68_34))
(assert (= temp68_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp68_35)))
(assert (= temp68_37 #x0000000000000004))
(assert (= temp68_38 temp68_37))
(assert (= temp68_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp68_38)))
(assert (= temp68_40 #x0000000000000005))
(assert (= temp68_41 temp68_40))
(assert (= temp68_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp68_41)))
(assert (= temp68_43 temp68_11))
(assert (= temp68_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp68_43)))
(assert (= temp68_45 temp68_14))
(assert (= temp68_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp68_45)))
(assert (= temp68_47 temp68_17))
(assert (= temp68_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp68_47)))
(assert (= temp68_49 temp68_20))
(assert (= temp68_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp68_49)))
(assert (= temp68_51 temp68_23))
(assert (= temp68_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp68_51)))
(assert (= temp68_53 temp68_8))
(assert (= temp68_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp68_53)))
(assert (= temp68_55 temp68_26))
(assert (= temp68_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_55)))
(assert (= temp68_57 temp68_29))
(assert (= temp68_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_57)))
(assert (= temp68_59 temp68_32))
(assert (= temp68_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_59)))
(assert (= temp68_61 temp68_35))
(assert (= temp68_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_61)))
(assert (= temp68_63 temp68_38))
(assert (= temp68_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_63)))
(assert (= temp68_65 temp68_41))
(assert (= temp68_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_65)))
(assert (= temp68_67 temp68_43))
(assert (= temp68_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_67)))
(assert (= temp68_69 temp68_45))
(assert (= temp68_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_69)))
(assert (= temp68_71 temp68_47))
(assert (= temp68_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_71)))
(assert (= temp68_73 temp68_49))
(assert (= temp68_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_73)))
(assert (= temp68_75 temp68_51))
(assert (= temp68_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_75)))
(assert (= temp68_77 temp68_53))
(assert (= temp68_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_77)))
(assert (= (and true
        (= temp68_44 temp68_12)
        (= temp68_46 temp68_15)
        (= temp68_48 temp68_18)
        (= temp68_50 temp68_21)
        (= temp68_52 temp68_24)
        (= temp68_54 temp68_9)
        (= temp68_56 temp68_27)
        (= temp68_58 temp68_30)
        (= temp68_60 temp68_33)
        (= temp68_62 temp68_36)
        (= temp68_64 temp68_39)
        (= temp68_66 temp68_42)
        (= temp68_68 temp68_44)
        (= temp68_70 temp68_46)
        (= temp68_72 temp68_48)
        (= temp68_74 temp68_50)
        (= temp68_76 temp68_52)
        (= temp68_78 temp68_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp68_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp68_79))
(assert (= temp68_80 #x0000000000000001))
(assert (= var987402 temp68_80))
(assert (= var987367 var987402))
(assert (= var69428 var987367))
(assert (= temp68_81 #x0000000000000001))
(assert (= var69428 temp68_81))
(assert (= temp68_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp68_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp68_83)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp68_84 #x0000000000000000))
(assert (= var69546 temp68_84))
(assert (= temp68_85 #x0000000000000000))
(assert (= var1970478 temp68_85))
(assert (= temp68_86 #x0000000000000000))
(assert (= var1970479 temp68_86))
(assert (= var2294910 var1970478))
(assert (= var2294911 var1970479))
(assert (= temp68_87 #x0000000000000001))
(assert (= var2822554 temp68_87))
(assert (= temp68_88 #x0000000000000001))
(assert (= var3346842 temp68_88))
(assert (= temp68_89 #x000000000000000b))
(assert (= var4264867 temp68_89))
(assert (= temp68_91 #x0000000000000001))
(assert (= temp68_90 temp68_91))
(model-add temp68_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp68_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp68_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp68_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






