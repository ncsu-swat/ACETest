(declare-fun temp651_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp651_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp651_3 () (_ BitVec 64))
(declare-fun temp651_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp651_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp651_6 () (_ BitVec 64))
(declare-fun temp651_7 () (_ BitVec 64))
(declare-fun temp651_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp651_9 () (_ BitVec 64))
(declare-fun temp651_10 () (_ BitVec 64))
(declare-fun temp651_11 () (_ BitVec 64))
(declare-fun temp651_12 () (_ BitVec 64))
(declare-fun temp651_13 () (_ BitVec 64))
(declare-fun temp651_14 () (_ BitVec 64))
(declare-fun temp651_15 () (_ BitVec 64))
(declare-fun temp651_16 () (_ BitVec 64))
(declare-fun temp651_17 () (_ BitVec 64))
(declare-fun temp651_18 () (_ BitVec 64))
(declare-fun temp651_19 () (_ BitVec 64))
(declare-fun temp651_20 () (_ BitVec 64))
(declare-fun temp651_21 () (_ BitVec 64))
(declare-fun temp651_22 () (_ BitVec 64))
(declare-fun temp651_23 () (_ BitVec 64))
(declare-fun temp651_24 () (_ BitVec 64))
(declare-fun temp651_25 () (_ BitVec 64))
(declare-fun temp651_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp651_27 () (_ BitVec 64))
(declare-fun temp651_28 () (_ BitVec 64))
(declare-fun temp651_29 () (_ BitVec 64))
(declare-fun temp651_30 () (_ BitVec 64))
(declare-fun temp651_31 () (_ BitVec 64))
(declare-fun temp651_32 () (_ BitVec 64))
(declare-fun temp651_33 () (_ BitVec 64))
(declare-fun temp651_34 () (_ BitVec 64))
(declare-fun temp651_35 () (_ BitVec 64))
(declare-fun temp651_36 () (_ BitVec 64))
(declare-fun temp651_37 () (_ BitVec 64))
(declare-fun temp651_38 () (_ BitVec 64))
(declare-fun temp651_39 () (_ BitVec 64))
(declare-fun temp651_40 () (_ BitVec 64))
(declare-fun temp651_41 () (_ BitVec 64))
(declare-fun temp651_42 () (_ BitVec 64))
(declare-fun temp651_43 () (_ BitVec 64))
(declare-fun temp651_44 () (_ BitVec 64))
(declare-fun temp651_45 () (_ BitVec 64))
(declare-fun temp651_46 () (_ BitVec 64))
(declare-fun temp651_47 () (_ BitVec 64))
(declare-fun temp651_48 () (_ BitVec 64))
(declare-fun temp651_49 () (_ BitVec 64))
(declare-fun temp651_50 () (_ BitVec 64))
(declare-fun temp651_51 () (_ BitVec 64))
(declare-fun temp651_52 () (_ BitVec 64))
(declare-fun temp651_53 () (_ BitVec 64))
(declare-fun temp651_54 () (_ BitVec 64))
(declare-fun temp651_55 () (_ BitVec 64))
(declare-fun temp651_56 () (_ BitVec 64))
(declare-fun temp651_57 () (_ BitVec 64))
(declare-fun temp651_58 () (_ BitVec 64))
(declare-fun temp651_59 () (_ BitVec 64))
(declare-fun temp651_60 () (_ BitVec 64))
(declare-fun temp651_61 () (_ BitVec 64))
(declare-fun temp651_62 () (_ BitVec 64))
(declare-fun temp651_63 () (_ BitVec 64))
(declare-fun temp651_64 () (_ BitVec 64))
(declare-fun temp651_65 () (_ BitVec 64))
(declare-fun temp651_66 () (_ BitVec 64))
(declare-fun temp651_67 () (_ BitVec 64))
(declare-fun temp651_68 () (_ BitVec 64))
(declare-fun temp651_69 () (_ BitVec 64))
(declare-fun temp651_70 () (_ BitVec 64))
(declare-fun temp651_71 () (_ BitVec 64))
(declare-fun temp651_72 () (_ BitVec 64))
(declare-fun temp651_73 () (_ BitVec 64))
(declare-fun temp651_74 () (_ BitVec 64))
(declare-fun temp651_75 () (_ BitVec 64))
(declare-fun temp651_76 () (_ BitVec 64))
(declare-fun temp651_77 () (_ BitVec 64))
(declare-fun temp651_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp651_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp651_80 () (_ BitVec 64))
(declare-fun var1184010 () (_ BitVec 64))
(declare-fun var1183975 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp651_81 () (_ BitVec 64))
(declare-fun temp651_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp651_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp651_84 () (_ BitVec 64))
(declare-fun temp651_85 () (_ BitVec 64))
(declare-fun var1904942 () (_ BitVec 64))
(declare-fun temp651_86 () (_ BitVec 64))
(declare-fun var1904943 () (_ BitVec 64))
(declare-fun var2229374 () (_ BitVec 64))
(declare-fun var2229375 () (_ BitVec 64))
(declare-fun temp651_87 () (_ BitVec 64))
(declare-fun var2560302 () (_ BitVec 64))
(declare-fun temp651_88 () (_ BitVec 64))
(declare-fun var2560303 () (_ BitVec 64))
(assert (= temp651_1 #x0000000000080000))
(assert (= var461925 temp651_1))
(assert (= temp651_2 #x0000000000080000))
(assert (= var724069 temp651_2))
(assert (= temp651_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp651_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp651_4 #x0000000000000000))
(assert (= var69380 temp651_4))
(assert (= temp651_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp651_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp651_6 #x0000000000000000))
(assert (= var69401 temp651_6))
(assert (= temp651_7 #x0000000000000000))
(assert (= temp651_8 temp651_7))
(assert (= temp651_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp651_8)))
(assert (= temp651_10 #x0000000000000001))
(assert (= temp651_11 temp651_10))
(assert (= temp651_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp651_11)))
(assert (= temp651_13 #x0000000000000002))
(assert (= temp651_14 temp651_13))
(assert (= temp651_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp651_14)))
(assert (= temp651_16 #x0000000000000003))
(assert (= temp651_17 temp651_16))
(assert (= temp651_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp651_17)))
(assert (= temp651_19 #x0000000000000004))
(assert (= temp651_20 temp651_19))
(assert (= temp651_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp651_20)))
(assert (= temp651_22 #x0000000000000005))
(assert (= temp651_23 temp651_22))
(assert (= temp651_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp651_23)))
(assert (= temp651_25 #x0000000000000000))
(assert (= temp651_26 temp651_25))
(assert (= temp651_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp651_26)))
(assert (= temp651_28 #x0000000000000001))
(assert (= temp651_29 temp651_28))
(assert (= temp651_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp651_29)))
(assert (= temp651_31 #x0000000000000002))
(assert (= temp651_32 temp651_31))
(assert (= temp651_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp651_32)))
(assert (= temp651_34 #x0000000000000003))
(assert (= temp651_35 temp651_34))
(assert (= temp651_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp651_35)))
(assert (= temp651_37 #x0000000000000004))
(assert (= temp651_38 temp651_37))
(assert (= temp651_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp651_38)))
(assert (= temp651_40 #x0000000000000005))
(assert (= temp651_41 temp651_40))
(assert (= temp651_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp651_41)))
(assert (= temp651_43 temp651_11))
(assert (= temp651_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp651_43)))
(assert (= temp651_45 temp651_14))
(assert (= temp651_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp651_45)))
(assert (= temp651_47 temp651_17))
(assert (= temp651_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp651_47)))
(assert (= temp651_49 temp651_20))
(assert (= temp651_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp651_49)))
(assert (= temp651_51 temp651_23))
(assert (= temp651_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp651_51)))
(assert (= temp651_53 temp651_8))
(assert (= temp651_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp651_53)))
(assert (= temp651_55 temp651_26))
(assert (= temp651_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp651_55)))
(assert (= temp651_57 temp651_29))
(assert (= temp651_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp651_57)))
(assert (= temp651_59 temp651_32))
(assert (= temp651_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp651_59)))
(assert (= temp651_61 temp651_35))
(assert (= temp651_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp651_61)))
(assert (= temp651_63 temp651_38))
(assert (= temp651_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp651_63)))
(assert (= temp651_65 temp651_41))
(assert (= temp651_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp651_65)))
(assert (= temp651_67 temp651_43))
(assert (= temp651_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp651_67)))
(assert (= temp651_69 temp651_45))
(assert (= temp651_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp651_69)))
(assert (= temp651_71 temp651_47))
(assert (= temp651_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp651_71)))
(assert (= temp651_73 temp651_49))
(assert (= temp651_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp651_73)))
(assert (= temp651_75 temp651_51))
(assert (= temp651_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp651_75)))
(assert (= temp651_77 temp651_53))
(assert (= temp651_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp651_77)))
(assert (= (and true
        (= temp651_44 temp651_12)
        (= temp651_46 temp651_15)
        (= temp651_48 temp651_18)
        (= temp651_50 temp651_21)
        (= temp651_52 temp651_24)
        (= temp651_54 temp651_9)
        (= temp651_56 temp651_27)
        (= temp651_58 temp651_30)
        (= temp651_60 temp651_33)
        (= temp651_62 temp651_36)
        (= temp651_64 temp651_39)
        (= temp651_66 temp651_42)
        (= temp651_68 temp651_44)
        (= temp651_70 temp651_46)
        (= temp651_72 temp651_48)
        (= temp651_74 temp651_50)
        (= temp651_76 temp651_52)
        (= temp651_78 temp651_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp651_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp651_79))
(assert (= temp651_80 #x0000000000000001))
(assert (= var1184010 temp651_80))
(assert (= var1183975 var1184010))
(assert (= var69428 var1183975))
(assert (= temp651_81 #x0000000000000001))
(assert (= var69428 temp651_81))
(assert (= temp651_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp651_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp651_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp651_83)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp651_84 #x0000000000000000))
(assert (= var69546 temp651_84))
(assert (= temp651_85 #x0000000000000000))
(assert (= var1904942 temp651_85))
(assert (= temp651_86 #x0000000000000000))
(assert (= var1904943 temp651_86))
(assert (= var2229374 var1904942))
(assert (= var2229375 var1904943))
(assert (= temp651_87 #x0000000000000000))
(assert (= var2560302 temp651_87))
(assert (= temp651_88 #x0000000000000000))
(assert (= var2560303 temp651_88))
(model-add temp651_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp651_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp651_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp651_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






