(declare-fun temp1056_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp1056_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp1056_3 () (_ BitVec 64))
(declare-fun temp1056_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp1056_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp1056_6 () (_ BitVec 64))
(declare-fun temp1056_7 () (_ BitVec 64))
(declare-fun temp1056_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1056_9 () (_ BitVec 64))
(declare-fun temp1056_10 () (_ BitVec 64))
(declare-fun temp1056_11 () (_ BitVec 64))
(declare-fun temp1056_12 () (_ BitVec 64))
(declare-fun temp1056_13 () (_ BitVec 64))
(declare-fun temp1056_14 () (_ BitVec 64))
(declare-fun temp1056_15 () (_ BitVec 64))
(declare-fun temp1056_16 () (_ BitVec 64))
(declare-fun temp1056_17 () (_ BitVec 64))
(declare-fun temp1056_18 () (_ BitVec 64))
(declare-fun temp1056_19 () (_ BitVec 64))
(declare-fun temp1056_20 () (_ BitVec 64))
(declare-fun temp1056_21 () (_ BitVec 64))
(declare-fun temp1056_22 () (_ BitVec 64))
(declare-fun temp1056_23 () (_ BitVec 64))
(declare-fun temp1056_24 () (_ BitVec 64))
(declare-fun temp1056_25 () (_ BitVec 64))
(declare-fun temp1056_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1056_27 () (_ BitVec 64))
(declare-fun temp1056_28 () (_ BitVec 64))
(declare-fun temp1056_29 () (_ BitVec 64))
(declare-fun temp1056_30 () (_ BitVec 64))
(declare-fun temp1056_31 () (_ BitVec 64))
(declare-fun temp1056_32 () (_ BitVec 64))
(declare-fun temp1056_33 () (_ BitVec 64))
(declare-fun temp1056_34 () (_ BitVec 64))
(declare-fun temp1056_35 () (_ BitVec 64))
(declare-fun temp1056_36 () (_ BitVec 64))
(declare-fun temp1056_37 () (_ BitVec 64))
(declare-fun temp1056_38 () (_ BitVec 64))
(declare-fun temp1056_39 () (_ BitVec 64))
(declare-fun temp1056_40 () (_ BitVec 64))
(declare-fun temp1056_41 () (_ BitVec 64))
(declare-fun temp1056_42 () (_ BitVec 64))
(declare-fun temp1056_43 () (_ BitVec 64))
(declare-fun temp1056_44 () (_ BitVec 64))
(declare-fun temp1056_45 () (_ BitVec 64))
(declare-fun temp1056_46 () (_ BitVec 64))
(declare-fun temp1056_47 () (_ BitVec 64))
(declare-fun temp1056_48 () (_ BitVec 64))
(declare-fun temp1056_49 () (_ BitVec 64))
(declare-fun temp1056_50 () (_ BitVec 64))
(declare-fun temp1056_51 () (_ BitVec 64))
(declare-fun temp1056_52 () (_ BitVec 64))
(declare-fun temp1056_53 () (_ BitVec 64))
(declare-fun temp1056_54 () (_ BitVec 64))
(declare-fun temp1056_55 () (_ BitVec 64))
(declare-fun temp1056_56 () (_ BitVec 64))
(declare-fun temp1056_57 () (_ BitVec 64))
(declare-fun temp1056_58 () (_ BitVec 64))
(declare-fun temp1056_59 () (_ BitVec 64))
(declare-fun temp1056_60 () (_ BitVec 64))
(declare-fun temp1056_61 () (_ BitVec 64))
(declare-fun temp1056_62 () (_ BitVec 64))
(declare-fun temp1056_63 () (_ BitVec 64))
(declare-fun temp1056_64 () (_ BitVec 64))
(declare-fun temp1056_65 () (_ BitVec 64))
(declare-fun temp1056_66 () (_ BitVec 64))
(declare-fun temp1056_67 () (_ BitVec 64))
(declare-fun temp1056_68 () (_ BitVec 64))
(declare-fun temp1056_69 () (_ BitVec 64))
(declare-fun temp1056_70 () (_ BitVec 64))
(declare-fun temp1056_71 () (_ BitVec 64))
(declare-fun temp1056_72 () (_ BitVec 64))
(declare-fun temp1056_73 () (_ BitVec 64))
(declare-fun temp1056_74 () (_ BitVec 64))
(declare-fun temp1056_75 () (_ BitVec 64))
(declare-fun temp1056_76 () (_ BitVec 64))
(declare-fun temp1056_77 () (_ BitVec 64))
(declare-fun temp1056_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1056_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp1056_80 () (_ BitVec 64))
(declare-fun var1444989 () (_ BitVec 64))
(declare-fun temp1056_81 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp1056_82 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp1056_83 () (_ BitVec 64))
(declare-fun temp1056_84 () (_ BitVec 64))
(declare-fun var2429230 () (_ BitVec 64))
(declare-fun temp1056_85 () (_ BitVec 64))
(declare-fun var2429231 () (_ BitVec 64))
(declare-fun var2753662 () (_ BitVec 64))
(declare-fun var2753663 () (_ BitVec 64))
(declare-fun temp1056_86 () (_ BitVec 64))
(declare-fun var3281306 () (_ BitVec 64))
(declare-fun temp1056_87 () (_ BitVec 64))
(declare-fun var3805594 () (_ BitVec 64))
(declare-fun temp1056_88 () (_ BitVec 64))
(declare-fun var4723619 () (_ BitVec 64))
(declare-fun temp1056_90 () (_ BitVec 64))
(declare-fun temp1056_89 () (_ BitVec 64))
(declare-fun temp1056_91 () (_ BitVec 64))
(declare-fun var5510051 () (_ BitVec 64))
(declare-fun temp1056_93 () (_ BitVec 64))
(declare-fun temp1056_92 () (_ BitVec 64))
(assert (= temp1056_1 #x0000000000080000))
(assert (= var461925 temp1056_1))
(assert (= temp1056_2 #x0000000000080000))
(assert (= var724069 temp1056_2))
(assert (= temp1056_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp1056_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1056_4 #x0000000000000000))
(assert (= var69380 temp1056_4))
(assert (= temp1056_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp1056_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1056_6 #x0000000000000000))
(assert (= var69401 temp1056_6))
(assert (= temp1056_7 #x0000000000000000))
(assert (= temp1056_8 temp1056_7))
(assert (= temp1056_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_8)))
(assert (= temp1056_10 #x0000000000000001))
(assert (= temp1056_11 temp1056_10))
(assert (= temp1056_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_11)))
(assert (= temp1056_13 #x0000000000000002))
(assert (= temp1056_14 temp1056_13))
(assert (= temp1056_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_14)))
(assert (= temp1056_16 #x0000000000000003))
(assert (= temp1056_17 temp1056_16))
(assert (= temp1056_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_17)))
(assert (= temp1056_19 #x0000000000000004))
(assert (= temp1056_20 temp1056_19))
(assert (= temp1056_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_20)))
(assert (= temp1056_22 #x0000000000000005))
(assert (= temp1056_23 temp1056_22))
(assert (= temp1056_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_23)))
(assert (= temp1056_25 #x0000000000000000))
(assert (= temp1056_26 temp1056_25))
(assert (= temp1056_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp1056_26)))
(assert (= temp1056_28 #x0000000000000001))
(assert (= temp1056_29 temp1056_28))
(assert (= temp1056_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp1056_29)))
(assert (= temp1056_31 #x0000000000000002))
(assert (= temp1056_32 temp1056_31))
(assert (= temp1056_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp1056_32)))
(assert (= temp1056_34 #x0000000000000003))
(assert (= temp1056_35 temp1056_34))
(assert (= temp1056_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp1056_35)))
(assert (= temp1056_37 #x0000000000000004))
(assert (= temp1056_38 temp1056_37))
(assert (= temp1056_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp1056_38)))
(assert (= temp1056_40 #x0000000000000005))
(assert (= temp1056_41 temp1056_40))
(assert (= temp1056_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp1056_41)))
(assert (= temp1056_43 temp1056_11))
(assert (= temp1056_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp1056_43)))
(assert (= temp1056_45 temp1056_14))
(assert (= temp1056_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp1056_45)))
(assert (= temp1056_47 temp1056_17))
(assert (= temp1056_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp1056_47)))
(assert (= temp1056_49 temp1056_20))
(assert (= temp1056_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp1056_49)))
(assert (= temp1056_51 temp1056_23))
(assert (= temp1056_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp1056_51)))
(assert (= temp1056_53 temp1056_8))
(assert (= temp1056_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp1056_53)))
(assert (= temp1056_55 temp1056_26))
(assert (= temp1056_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_55)))
(assert (= temp1056_57 temp1056_29))
(assert (= temp1056_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_57)))
(assert (= temp1056_59 temp1056_32))
(assert (= temp1056_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_59)))
(assert (= temp1056_61 temp1056_35))
(assert (= temp1056_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_61)))
(assert (= temp1056_63 temp1056_38))
(assert (= temp1056_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_63)))
(assert (= temp1056_65 temp1056_41))
(assert (= temp1056_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_65)))
(assert (= temp1056_67 temp1056_43))
(assert (= temp1056_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_67)))
(assert (= temp1056_69 temp1056_45))
(assert (= temp1056_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_69)))
(assert (= temp1056_71 temp1056_47))
(assert (= temp1056_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_71)))
(assert (= temp1056_73 temp1056_49))
(assert (= temp1056_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_73)))
(assert (= temp1056_75 temp1056_51))
(assert (= temp1056_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_75)))
(assert (= temp1056_77 temp1056_53))
(assert (= temp1056_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_77)))
(assert (= (and true
        (= temp1056_44 temp1056_12)
        (= temp1056_46 temp1056_15)
        (= temp1056_48 temp1056_18)
        (= temp1056_50 temp1056_21)
        (= temp1056_52 temp1056_24)
        (= temp1056_54 temp1056_9)
        (= temp1056_56 temp1056_27)
        (= temp1056_58 temp1056_30)
        (= temp1056_60 temp1056_33)
        (= temp1056_62 temp1056_36)
        (= temp1056_64 temp1056_39)
        (= temp1056_66 temp1056_42)
        (= temp1056_68 temp1056_44)
        (= temp1056_70 temp1056_46)
        (= temp1056_72 temp1056_48)
        (= temp1056_74 temp1056_50)
        (= temp1056_76 temp1056_52)
        (= temp1056_78 temp1056_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp1056_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp1056_79))
(assert (= temp1056_80 #x0000000009c00400))
(assert (= var1444989 temp1056_80))
(assert (= temp1056_81 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp1056_81)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1056_82 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp1056_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp1056_83 #x0000000000000000))
(assert (= var69546 temp1056_83))
(assert (= temp1056_84 #x0000000000000000))
(assert (= var2429230 temp1056_84))
(assert (= temp1056_85 #x0000000000000000))
(assert (= var2429231 temp1056_85))
(assert (= var2753662 var2429230))
(assert (= var2753663 var2429231))
(assert (= temp1056_86 #x0000000000000001))
(assert (= var3281306 temp1056_86))
(assert (= temp1056_87 #x0000000000000001))
(assert (= var3805594 temp1056_87))
(assert (= temp1056_88 #x000000000000000b))
(assert (= var4723619 temp1056_88))
(assert (= temp1056_90 #x0000000000000001))
(assert (= temp1056_89 temp1056_90))
(assert (= temp1056_91 #x000000000000000b))
(assert (= var5510051 temp1056_91))
(assert (= temp1056_93 #x0000000000000001))
(assert (= temp1056_92 temp1056_93))
(model-add temp1056_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp1056_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp1056_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp1056_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






