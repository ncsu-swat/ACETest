(declare-fun temp675_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp675_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp675_3 () (_ BitVec 64))
(declare-fun temp675_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp675_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp675_6 () (_ BitVec 64))
(declare-fun temp675_7 () (_ BitVec 64))
(declare-fun temp675_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp675_9 () (_ BitVec 64))
(declare-fun temp675_10 () (_ BitVec 64))
(declare-fun temp675_11 () (_ BitVec 64))
(declare-fun temp675_12 () (_ BitVec 64))
(declare-fun temp675_13 () (_ BitVec 64))
(declare-fun temp675_14 () (_ BitVec 64))
(declare-fun temp675_15 () (_ BitVec 64))
(declare-fun temp675_16 () (_ BitVec 64))
(declare-fun temp675_17 () (_ BitVec 64))
(declare-fun temp675_18 () (_ BitVec 64))
(declare-fun temp675_19 () (_ BitVec 64))
(declare-fun temp675_20 () (_ BitVec 64))
(declare-fun temp675_21 () (_ BitVec 64))
(declare-fun temp675_22 () (_ BitVec 64))
(declare-fun temp675_23 () (_ BitVec 64))
(declare-fun temp675_24 () (_ BitVec 64))
(declare-fun temp675_25 () (_ BitVec 64))
(declare-fun temp675_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp675_27 () (_ BitVec 64))
(declare-fun temp675_28 () (_ BitVec 64))
(declare-fun temp675_29 () (_ BitVec 64))
(declare-fun temp675_30 () (_ BitVec 64))
(declare-fun temp675_31 () (_ BitVec 64))
(declare-fun temp675_32 () (_ BitVec 64))
(declare-fun temp675_33 () (_ BitVec 64))
(declare-fun temp675_34 () (_ BitVec 64))
(declare-fun temp675_35 () (_ BitVec 64))
(declare-fun temp675_36 () (_ BitVec 64))
(declare-fun temp675_37 () (_ BitVec 64))
(declare-fun temp675_38 () (_ BitVec 64))
(declare-fun temp675_39 () (_ BitVec 64))
(declare-fun temp675_40 () (_ BitVec 64))
(declare-fun temp675_41 () (_ BitVec 64))
(declare-fun temp675_42 () (_ BitVec 64))
(declare-fun temp675_43 () (_ BitVec 64))
(declare-fun temp675_44 () (_ BitVec 64))
(declare-fun temp675_45 () (_ BitVec 64))
(declare-fun temp675_46 () (_ BitVec 64))
(declare-fun temp675_47 () (_ BitVec 64))
(declare-fun temp675_48 () (_ BitVec 64))
(declare-fun temp675_49 () (_ BitVec 64))
(declare-fun temp675_50 () (_ BitVec 64))
(declare-fun temp675_51 () (_ BitVec 64))
(declare-fun temp675_52 () (_ BitVec 64))
(declare-fun temp675_53 () (_ BitVec 64))
(declare-fun temp675_54 () (_ BitVec 64))
(declare-fun temp675_55 () (_ BitVec 64))
(declare-fun temp675_56 () (_ BitVec 64))
(declare-fun temp675_57 () (_ BitVec 64))
(declare-fun temp675_58 () (_ BitVec 64))
(declare-fun temp675_59 () (_ BitVec 64))
(declare-fun temp675_60 () (_ BitVec 64))
(declare-fun temp675_61 () (_ BitVec 64))
(declare-fun temp675_62 () (_ BitVec 64))
(declare-fun temp675_63 () (_ BitVec 64))
(declare-fun temp675_64 () (_ BitVec 64))
(declare-fun temp675_65 () (_ BitVec 64))
(declare-fun temp675_66 () (_ BitVec 64))
(declare-fun temp675_67 () (_ BitVec 64))
(declare-fun temp675_68 () (_ BitVec 64))
(declare-fun temp675_69 () (_ BitVec 64))
(declare-fun temp675_70 () (_ BitVec 64))
(declare-fun temp675_71 () (_ BitVec 64))
(declare-fun temp675_72 () (_ BitVec 64))
(declare-fun temp675_73 () (_ BitVec 64))
(declare-fun temp675_74 () (_ BitVec 64))
(declare-fun temp675_75 () (_ BitVec 64))
(declare-fun temp675_76 () (_ BitVec 64))
(declare-fun temp675_77 () (_ BitVec 64))
(declare-fun temp675_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp675_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp675_80 () (_ BitVec 64))
(declare-fun var1184010 () (_ BitVec 64))
(declare-fun var1183975 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp675_81 () (_ BitVec 64))
(declare-fun temp675_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp675_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp675_84 () (_ BitVec 64))
(declare-fun temp675_85 () (_ BitVec 64))
(declare-fun var1904942 () (_ BitVec 64))
(declare-fun temp675_86 () (_ BitVec 64))
(declare-fun var1904943 () (_ BitVec 64))
(declare-fun var2229374 () (_ BitVec 64))
(declare-fun var2229375 () (_ BitVec 64))
(declare-fun temp675_87 () (_ BitVec 64))
(declare-fun var2953626 () (_ BitVec 64))
(declare-fun temp675_88 () (_ BitVec 64))
(declare-fun var3477914 () (_ BitVec 64))
(assert (= temp675_1 #x0000000000080000))
(assert (= var461925 temp675_1))
(assert (= temp675_2 #x0000000000080000))
(assert (= var724069 temp675_2))
(assert (= temp675_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp675_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp675_4 #x0000000000000000))
(assert (= var69380 temp675_4))
(assert (= temp675_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp675_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp675_6 #x0000000000000000))
(assert (= var69401 temp675_6))
(assert (= temp675_7 #x0000000000000000))
(assert (= temp675_8 temp675_7))
(assert (= temp675_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp675_8)))
(assert (= temp675_10 #x0000000000000001))
(assert (= temp675_11 temp675_10))
(assert (= temp675_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp675_11)))
(assert (= temp675_13 #x0000000000000002))
(assert (= temp675_14 temp675_13))
(assert (= temp675_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp675_14)))
(assert (= temp675_16 #x0000000000000003))
(assert (= temp675_17 temp675_16))
(assert (= temp675_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp675_17)))
(assert (= temp675_19 #x0000000000000004))
(assert (= temp675_20 temp675_19))
(assert (= temp675_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp675_20)))
(assert (= temp675_22 #x0000000000000005))
(assert (= temp675_23 temp675_22))
(assert (= temp675_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp675_23)))
(assert (= temp675_25 #x0000000000000000))
(assert (= temp675_26 temp675_25))
(assert (= temp675_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp675_26)))
(assert (= temp675_28 #x0000000000000001))
(assert (= temp675_29 temp675_28))
(assert (= temp675_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp675_29)))
(assert (= temp675_31 #x0000000000000002))
(assert (= temp675_32 temp675_31))
(assert (= temp675_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp675_32)))
(assert (= temp675_34 #x0000000000000003))
(assert (= temp675_35 temp675_34))
(assert (= temp675_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp675_35)))
(assert (= temp675_37 #x0000000000000004))
(assert (= temp675_38 temp675_37))
(assert (= temp675_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp675_38)))
(assert (= temp675_40 #x0000000000000005))
(assert (= temp675_41 temp675_40))
(assert (= temp675_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp675_41)))
(assert (= temp675_43 temp675_11))
(assert (= temp675_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp675_43)))
(assert (= temp675_45 temp675_14))
(assert (= temp675_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp675_45)))
(assert (= temp675_47 temp675_17))
(assert (= temp675_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp675_47)))
(assert (= temp675_49 temp675_20))
(assert (= temp675_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp675_49)))
(assert (= temp675_51 temp675_23))
(assert (= temp675_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp675_51)))
(assert (= temp675_53 temp675_8))
(assert (= temp675_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp675_53)))
(assert (= temp675_55 temp675_26))
(assert (= temp675_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp675_55)))
(assert (= temp675_57 temp675_29))
(assert (= temp675_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp675_57)))
(assert (= temp675_59 temp675_32))
(assert (= temp675_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp675_59)))
(assert (= temp675_61 temp675_35))
(assert (= temp675_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp675_61)))
(assert (= temp675_63 temp675_38))
(assert (= temp675_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp675_63)))
(assert (= temp675_65 temp675_41))
(assert (= temp675_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp675_65)))
(assert (= temp675_67 temp675_43))
(assert (= temp675_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp675_67)))
(assert (= temp675_69 temp675_45))
(assert (= temp675_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp675_69)))
(assert (= temp675_71 temp675_47))
(assert (= temp675_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp675_71)))
(assert (= temp675_73 temp675_49))
(assert (= temp675_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp675_73)))
(assert (= temp675_75 temp675_51))
(assert (= temp675_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp675_75)))
(assert (= temp675_77 temp675_53))
(assert (= temp675_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp675_77)))
(assert (= (and true
        (= temp675_44 temp675_12)
        (= temp675_46 temp675_15)
        (= temp675_48 temp675_18)
        (= temp675_50 temp675_21)
        (= temp675_52 temp675_24)
        (= temp675_54 temp675_9)
        (= temp675_56 temp675_27)
        (= temp675_58 temp675_30)
        (= temp675_60 temp675_33)
        (= temp675_62 temp675_36)
        (= temp675_64 temp675_39)
        (= temp675_66 temp675_42)
        (= temp675_68 temp675_44)
        (= temp675_70 temp675_46)
        (= temp675_72 temp675_48)
        (= temp675_74 temp675_50)
        (= temp675_76 temp675_52)
        (= temp675_78 temp675_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp675_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp675_79))
(assert (= temp675_80 #x0000000000000001))
(assert (= var1184010 temp675_80))
(assert (= var1183975 var1184010))
(assert (= var69428 var1183975))
(assert (= temp675_81 #x0000000000000001))
(assert (= var69428 temp675_81))
(assert (= temp675_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp675_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp675_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp675_83)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp675_84 #x0000000000000000))
(assert (= var69546 temp675_84))
(assert (= temp675_85 #x0000000000000000))
(assert (= var1904942 temp675_85))
(assert (= temp675_86 #x0000000000000000))
(assert (= var1904943 temp675_86))
(assert (= var2229374 var1904942))
(assert (= var2229375 var1904943))
(assert (= temp675_87 #x0000000000000001))
(assert (= var2953626 temp675_87))
(assert (= temp675_88 #x0000000000000001))
(assert (= var3477914 temp675_88))
(model-add temp675_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp675_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp675_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp675_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






