(declare-fun temp680_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp680_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp680_3 () (_ BitVec 64))
(declare-fun temp680_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp680_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp680_6 () (_ BitVec 64))
(declare-fun temp680_7 () (_ BitVec 64))
(declare-fun temp680_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp680_9 () (_ BitVec 64))
(declare-fun temp680_10 () (_ BitVec 64))
(declare-fun temp680_11 () (_ BitVec 64))
(declare-fun temp680_12 () (_ BitVec 64))
(declare-fun temp680_13 () (_ BitVec 64))
(declare-fun temp680_14 () (_ BitVec 64))
(declare-fun temp680_15 () (_ BitVec 64))
(declare-fun temp680_16 () (_ BitVec 64))
(declare-fun temp680_17 () (_ BitVec 64))
(declare-fun temp680_18 () (_ BitVec 64))
(declare-fun temp680_19 () (_ BitVec 64))
(declare-fun temp680_20 () (_ BitVec 64))
(declare-fun temp680_21 () (_ BitVec 64))
(declare-fun temp680_22 () (_ BitVec 64))
(declare-fun temp680_23 () (_ BitVec 64))
(declare-fun temp680_24 () (_ BitVec 64))
(declare-fun temp680_25 () (_ BitVec 64))
(declare-fun temp680_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp680_27 () (_ BitVec 64))
(declare-fun temp680_28 () (_ BitVec 64))
(declare-fun temp680_29 () (_ BitVec 64))
(declare-fun temp680_30 () (_ BitVec 64))
(declare-fun temp680_31 () (_ BitVec 64))
(declare-fun temp680_32 () (_ BitVec 64))
(declare-fun temp680_33 () (_ BitVec 64))
(declare-fun temp680_34 () (_ BitVec 64))
(declare-fun temp680_35 () (_ BitVec 64))
(declare-fun temp680_36 () (_ BitVec 64))
(declare-fun temp680_37 () (_ BitVec 64))
(declare-fun temp680_38 () (_ BitVec 64))
(declare-fun temp680_39 () (_ BitVec 64))
(declare-fun temp680_40 () (_ BitVec 64))
(declare-fun temp680_41 () (_ BitVec 64))
(declare-fun temp680_42 () (_ BitVec 64))
(declare-fun temp680_43 () (_ BitVec 64))
(declare-fun temp680_44 () (_ BitVec 64))
(declare-fun temp680_45 () (_ BitVec 64))
(declare-fun temp680_46 () (_ BitVec 64))
(declare-fun temp680_47 () (_ BitVec 64))
(declare-fun temp680_48 () (_ BitVec 64))
(declare-fun temp680_49 () (_ BitVec 64))
(declare-fun temp680_50 () (_ BitVec 64))
(declare-fun temp680_51 () (_ BitVec 64))
(declare-fun temp680_52 () (_ BitVec 64))
(declare-fun temp680_53 () (_ BitVec 64))
(declare-fun temp680_54 () (_ BitVec 64))
(declare-fun temp680_55 () (_ BitVec 64))
(declare-fun temp680_56 () (_ BitVec 64))
(declare-fun temp680_57 () (_ BitVec 64))
(declare-fun temp680_58 () (_ BitVec 64))
(declare-fun temp680_59 () (_ BitVec 64))
(declare-fun temp680_60 () (_ BitVec 64))
(declare-fun temp680_61 () (_ BitVec 64))
(declare-fun temp680_62 () (_ BitVec 64))
(declare-fun temp680_63 () (_ BitVec 64))
(declare-fun temp680_64 () (_ BitVec 64))
(declare-fun temp680_65 () (_ BitVec 64))
(declare-fun temp680_66 () (_ BitVec 64))
(declare-fun temp680_67 () (_ BitVec 64))
(declare-fun temp680_68 () (_ BitVec 64))
(declare-fun temp680_69 () (_ BitVec 64))
(declare-fun temp680_70 () (_ BitVec 64))
(declare-fun temp680_71 () (_ BitVec 64))
(declare-fun temp680_72 () (_ BitVec 64))
(declare-fun temp680_73 () (_ BitVec 64))
(declare-fun temp680_74 () (_ BitVec 64))
(declare-fun temp680_75 () (_ BitVec 64))
(declare-fun temp680_76 () (_ BitVec 64))
(declare-fun temp680_77 () (_ BitVec 64))
(declare-fun temp680_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp680_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp680_80 () (_ BitVec 64))
(declare-fun var1184010 () (_ BitVec 64))
(declare-fun var1183975 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp680_81 () (_ BitVec 64))
(declare-fun temp680_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp680_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp680_84 () (_ BitVec 64))
(declare-fun temp680_85 () (_ BitVec 64))
(declare-fun var1904942 () (_ BitVec 64))
(declare-fun temp680_86 () (_ BitVec 64))
(declare-fun var1904943 () (_ BitVec 64))
(declare-fun var2229374 () (_ BitVec 64))
(declare-fun var2229375 () (_ BitVec 64))
(declare-fun temp680_87 () (_ BitVec 64))
(declare-fun var2953626 () (_ BitVec 64))
(declare-fun temp680_88 () (_ BitVec 64))
(declare-fun var3477914 () (_ BitVec 64))
(assert (= temp680_1 #x0000000000080000))
(assert (= var461925 temp680_1))
(assert (= temp680_2 #x0000000000080000))
(assert (= var724069 temp680_2))
(assert (= temp680_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp680_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp680_4 #x0000000000000000))
(assert (= var69380 temp680_4))
(assert (= temp680_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp680_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp680_6 #x0000000000000000))
(assert (= var69401 temp680_6))
(assert (= temp680_7 #x0000000000000000))
(assert (= temp680_8 temp680_7))
(assert (= temp680_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_8)))
(assert (= temp680_10 #x0000000000000001))
(assert (= temp680_11 temp680_10))
(assert (= temp680_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_11)))
(assert (= temp680_13 #x0000000000000002))
(assert (= temp680_14 temp680_13))
(assert (= temp680_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_14)))
(assert (= temp680_16 #x0000000000000003))
(assert (= temp680_17 temp680_16))
(assert (= temp680_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_17)))
(assert (= temp680_19 #x0000000000000004))
(assert (= temp680_20 temp680_19))
(assert (= temp680_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_20)))
(assert (= temp680_22 #x0000000000000005))
(assert (= temp680_23 temp680_22))
(assert (= temp680_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_23)))
(assert (= temp680_25 #x0000000000000000))
(assert (= temp680_26 temp680_25))
(assert (= temp680_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp680_26)))
(assert (= temp680_28 #x0000000000000001))
(assert (= temp680_29 temp680_28))
(assert (= temp680_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp680_29)))
(assert (= temp680_31 #x0000000000000002))
(assert (= temp680_32 temp680_31))
(assert (= temp680_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp680_32)))
(assert (= temp680_34 #x0000000000000003))
(assert (= temp680_35 temp680_34))
(assert (= temp680_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp680_35)))
(assert (= temp680_37 #x0000000000000004))
(assert (= temp680_38 temp680_37))
(assert (= temp680_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp680_38)))
(assert (= temp680_40 #x0000000000000005))
(assert (= temp680_41 temp680_40))
(assert (= temp680_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp680_41)))
(assert (= temp680_43 temp680_11))
(assert (= temp680_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp680_43)))
(assert (= temp680_45 temp680_14))
(assert (= temp680_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp680_45)))
(assert (= temp680_47 temp680_17))
(assert (= temp680_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp680_47)))
(assert (= temp680_49 temp680_20))
(assert (= temp680_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp680_49)))
(assert (= temp680_51 temp680_23))
(assert (= temp680_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp680_51)))
(assert (= temp680_53 temp680_8))
(assert (= temp680_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp680_53)))
(assert (= temp680_55 temp680_26))
(assert (= temp680_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_55)))
(assert (= temp680_57 temp680_29))
(assert (= temp680_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_57)))
(assert (= temp680_59 temp680_32))
(assert (= temp680_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_59)))
(assert (= temp680_61 temp680_35))
(assert (= temp680_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_61)))
(assert (= temp680_63 temp680_38))
(assert (= temp680_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_63)))
(assert (= temp680_65 temp680_41))
(assert (= temp680_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_65)))
(assert (= temp680_67 temp680_43))
(assert (= temp680_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_67)))
(assert (= temp680_69 temp680_45))
(assert (= temp680_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_69)))
(assert (= temp680_71 temp680_47))
(assert (= temp680_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_71)))
(assert (= temp680_73 temp680_49))
(assert (= temp680_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_73)))
(assert (= temp680_75 temp680_51))
(assert (= temp680_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_75)))
(assert (= temp680_77 temp680_53))
(assert (= temp680_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_77)))
(assert (= (and true
        (= temp680_44 temp680_12)
        (= temp680_46 temp680_15)
        (= temp680_48 temp680_18)
        (= temp680_50 temp680_21)
        (= temp680_52 temp680_24)
        (= temp680_54 temp680_9)
        (= temp680_56 temp680_27)
        (= temp680_58 temp680_30)
        (= temp680_60 temp680_33)
        (= temp680_62 temp680_36)
        (= temp680_64 temp680_39)
        (= temp680_66 temp680_42)
        (= temp680_68 temp680_44)
        (= temp680_70 temp680_46)
        (= temp680_72 temp680_48)
        (= temp680_74 temp680_50)
        (= temp680_76 temp680_52)
        (= temp680_78 temp680_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp680_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp680_79))
(assert (= temp680_80 #x0000000000000001))
(assert (= var1184010 temp680_80))
(assert (= var1183975 var1184010))
(assert (= var69428 var1183975))
(assert (= temp680_81 #x0000000000000001))
(assert (= var69428 temp680_81))
(assert (= temp680_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp680_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp680_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp680_83)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp680_84 #x0000000000000000))
(assert (= var69546 temp680_84))
(assert (= temp680_85 #x0000000000000000))
(assert (= var1904942 temp680_85))
(assert (= temp680_86 #x0000000000000000))
(assert (= var1904943 temp680_86))
(assert (= var2229374 var1904942))
(assert (= var2229375 var1904943))
(assert (= temp680_87 #x0000000000000001))
(assert (= var2953626 temp680_87))
(assert (= temp680_88 #x0000000000000001))
(assert (= var3477914 temp680_88))
(model-add temp680_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp680_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp680_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp680_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






