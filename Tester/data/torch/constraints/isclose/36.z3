(declare-fun temp36_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp36_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp36_3 () (_ BitVec 64))
(declare-fun temp36_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp36_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp36_6 () (_ BitVec 64))
(declare-fun temp36_7 () (_ BitVec 64))
(declare-fun temp36_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp36_9 () (_ BitVec 64))
(declare-fun temp36_10 () (_ BitVec 64))
(declare-fun temp36_11 () (_ BitVec 64))
(declare-fun temp36_12 () (_ BitVec 64))
(declare-fun temp36_13 () (_ BitVec 64))
(declare-fun temp36_14 () (_ BitVec 64))
(declare-fun temp36_15 () (_ BitVec 64))
(declare-fun temp36_16 () (_ BitVec 64))
(declare-fun temp36_17 () (_ BitVec 64))
(declare-fun temp36_18 () (_ BitVec 64))
(declare-fun temp36_19 () (_ BitVec 64))
(declare-fun temp36_20 () (_ BitVec 64))
(declare-fun temp36_21 () (_ BitVec 64))
(declare-fun temp36_22 () (_ BitVec 64))
(declare-fun temp36_23 () (_ BitVec 64))
(declare-fun temp36_24 () (_ BitVec 64))
(declare-fun temp36_25 () (_ BitVec 64))
(declare-fun temp36_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp36_27 () (_ BitVec 64))
(declare-fun temp36_28 () (_ BitVec 64))
(declare-fun temp36_29 () (_ BitVec 64))
(declare-fun temp36_30 () (_ BitVec 64))
(declare-fun temp36_31 () (_ BitVec 64))
(declare-fun temp36_32 () (_ BitVec 64))
(declare-fun temp36_33 () (_ BitVec 64))
(declare-fun temp36_34 () (_ BitVec 64))
(declare-fun temp36_35 () (_ BitVec 64))
(declare-fun temp36_36 () (_ BitVec 64))
(declare-fun temp36_37 () (_ BitVec 64))
(declare-fun temp36_38 () (_ BitVec 64))
(declare-fun temp36_39 () (_ BitVec 64))
(declare-fun temp36_40 () (_ BitVec 64))
(declare-fun temp36_41 () (_ BitVec 64))
(declare-fun temp36_42 () (_ BitVec 64))
(declare-fun temp36_43 () (_ BitVec 64))
(declare-fun temp36_44 () (_ BitVec 64))
(declare-fun temp36_45 () (_ BitVec 64))
(declare-fun temp36_46 () (_ BitVec 64))
(declare-fun temp36_47 () (_ BitVec 64))
(declare-fun temp36_48 () (_ BitVec 64))
(declare-fun temp36_49 () (_ BitVec 64))
(declare-fun temp36_50 () (_ BitVec 64))
(declare-fun temp36_51 () (_ BitVec 64))
(declare-fun temp36_52 () (_ BitVec 64))
(declare-fun temp36_53 () (_ BitVec 64))
(declare-fun temp36_54 () (_ BitVec 64))
(declare-fun temp36_55 () (_ BitVec 64))
(declare-fun temp36_56 () (_ BitVec 64))
(declare-fun temp36_57 () (_ BitVec 64))
(declare-fun temp36_58 () (_ BitVec 64))
(declare-fun temp36_59 () (_ BitVec 64))
(declare-fun temp36_60 () (_ BitVec 64))
(declare-fun temp36_61 () (_ BitVec 64))
(declare-fun temp36_62 () (_ BitVec 64))
(declare-fun temp36_63 () (_ BitVec 64))
(declare-fun temp36_64 () (_ BitVec 64))
(declare-fun temp36_65 () (_ BitVec 64))
(declare-fun temp36_66 () (_ BitVec 64))
(declare-fun temp36_67 () (_ BitVec 64))
(declare-fun temp36_68 () (_ BitVec 64))
(declare-fun temp36_69 () (_ BitVec 64))
(declare-fun temp36_70 () (_ BitVec 64))
(declare-fun temp36_71 () (_ BitVec 64))
(declare-fun temp36_72 () (_ BitVec 64))
(declare-fun temp36_73 () (_ BitVec 64))
(declare-fun temp36_74 () (_ BitVec 64))
(declare-fun temp36_75 () (_ BitVec 64))
(declare-fun temp36_76 () (_ BitVec 64))
(declare-fun temp36_77 () (_ BitVec 64))
(declare-fun temp36_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp36_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp36_80 () (_ BitVec 64))
(declare-fun var987402 () (_ BitVec 64))
(declare-fun var987367 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp36_81 () (_ BitVec 64))
(declare-fun temp36_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp36_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp36_84 () (_ BitVec 64))
(declare-fun temp36_85 () (_ BitVec 64))
(declare-fun var1708334 () (_ BitVec 64))
(declare-fun temp36_86 () (_ BitVec 64))
(declare-fun var1708335 () (_ BitVec 64))
(declare-fun var2032766 () (_ BitVec 64))
(declare-fun var2032767 () (_ BitVec 64))
(declare-fun temp36_87 () (_ BitVec 64))
(declare-fun var2757018 () (_ BitVec 64))
(declare-fun temp36_88 () (_ BitVec 64))
(declare-fun var3281306 () (_ BitVec 64))
(declare-fun temp36_89 () (_ BitVec 64))
(declare-fun var4199331 () (_ BitVec 64))
(declare-fun temp36_91 () (_ BitVec 64))
(declare-fun temp36_90 () (_ BitVec 64))
(assert (= temp36_1 #x0000000000080000))
(assert (= var461925 temp36_1))
(assert (= temp36_2 #x0000000000080000))
(assert (= var724069 temp36_2))
(assert (= temp36_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp36_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp36_4 #x0000000000000000))
(assert (= var69380 temp36_4))
(assert (= temp36_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp36_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp36_6 #x0000000000000000))
(assert (= var69401 temp36_6))
(assert (= temp36_7 #x0000000000000000))
(assert (= temp36_8 temp36_7))
(assert (= temp36_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp36_8)))
(assert (= temp36_10 #x0000000000000001))
(assert (= temp36_11 temp36_10))
(assert (= temp36_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp36_11)))
(assert (= temp36_13 #x0000000000000002))
(assert (= temp36_14 temp36_13))
(assert (= temp36_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp36_14)))
(assert (= temp36_16 #x0000000000000003))
(assert (= temp36_17 temp36_16))
(assert (= temp36_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp36_17)))
(assert (= temp36_19 #x0000000000000004))
(assert (= temp36_20 temp36_19))
(assert (= temp36_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp36_20)))
(assert (= temp36_22 #x0000000000000005))
(assert (= temp36_23 temp36_22))
(assert (= temp36_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp36_23)))
(assert (= temp36_25 #x0000000000000000))
(assert (= temp36_26 temp36_25))
(assert (= temp36_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp36_26)))
(assert (= temp36_28 #x0000000000000001))
(assert (= temp36_29 temp36_28))
(assert (= temp36_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp36_29)))
(assert (= temp36_31 #x0000000000000002))
(assert (= temp36_32 temp36_31))
(assert (= temp36_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp36_32)))
(assert (= temp36_34 #x0000000000000003))
(assert (= temp36_35 temp36_34))
(assert (= temp36_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp36_35)))
(assert (= temp36_37 #x0000000000000004))
(assert (= temp36_38 temp36_37))
(assert (= temp36_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp36_38)))
(assert (= temp36_40 #x0000000000000005))
(assert (= temp36_41 temp36_40))
(assert (= temp36_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp36_41)))
(assert (= temp36_43 temp36_11))
(assert (= temp36_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp36_43)))
(assert (= temp36_45 temp36_14))
(assert (= temp36_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp36_45)))
(assert (= temp36_47 temp36_17))
(assert (= temp36_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp36_47)))
(assert (= temp36_49 temp36_20))
(assert (= temp36_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp36_49)))
(assert (= temp36_51 temp36_23))
(assert (= temp36_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp36_51)))
(assert (= temp36_53 temp36_8))
(assert (= temp36_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp36_53)))
(assert (= temp36_55 temp36_26))
(assert (= temp36_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp36_55)))
(assert (= temp36_57 temp36_29))
(assert (= temp36_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp36_57)))
(assert (= temp36_59 temp36_32))
(assert (= temp36_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp36_59)))
(assert (= temp36_61 temp36_35))
(assert (= temp36_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp36_61)))
(assert (= temp36_63 temp36_38))
(assert (= temp36_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp36_63)))
(assert (= temp36_65 temp36_41))
(assert (= temp36_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp36_65)))
(assert (= temp36_67 temp36_43))
(assert (= temp36_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp36_67)))
(assert (= temp36_69 temp36_45))
(assert (= temp36_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp36_69)))
(assert (= temp36_71 temp36_47))
(assert (= temp36_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp36_71)))
(assert (= temp36_73 temp36_49))
(assert (= temp36_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp36_73)))
(assert (= temp36_75 temp36_51))
(assert (= temp36_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp36_75)))
(assert (= temp36_77 temp36_53))
(assert (= temp36_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp36_77)))
(assert (= (and true
        (= temp36_44 temp36_12)
        (= temp36_46 temp36_15)
        (= temp36_48 temp36_18)
        (= temp36_50 temp36_21)
        (= temp36_52 temp36_24)
        (= temp36_54 temp36_9)
        (= temp36_56 temp36_27)
        (= temp36_58 temp36_30)
        (= temp36_60 temp36_33)
        (= temp36_62 temp36_36)
        (= temp36_64 temp36_39)
        (= temp36_66 temp36_42)
        (= temp36_68 temp36_44)
        (= temp36_70 temp36_46)
        (= temp36_72 temp36_48)
        (= temp36_74 temp36_50)
        (= temp36_76 temp36_52)
        (= temp36_78 temp36_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp36_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp36_79))
(assert (= temp36_80 #x0000000000000001))
(assert (= var987402 temp36_80))
(assert (= var987367 var987402))
(assert (= var69428 var987367))
(assert (= temp36_81 #x0000000000000001))
(assert (= var69428 temp36_81))
(assert (= temp36_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp36_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp36_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp36_83)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp36_84 #x0000000000000000))
(assert (= var69546 temp36_84))
(assert (= temp36_85 #x0000000000000000))
(assert (= var1708334 temp36_85))
(assert (= temp36_86 #x0000000000000000))
(assert (= var1708335 temp36_86))
(assert (= var2032766 var1708334))
(assert (= var2032767 var1708335))
(assert (= temp36_87 #x0000000000000001))
(assert (= var2757018 temp36_87))
(assert (= temp36_88 #x0000000000000001))
(assert (= var3281306 temp36_88))
(assert (= temp36_89 #x000000000000000b))
(assert (= var4199331 temp36_89))
(assert (= temp36_91 #x0000000000000001))
(assert (= temp36_90 temp36_91))
(model-add temp36_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp36_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp36_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp36_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






