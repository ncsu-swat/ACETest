(declare-fun temp456_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp456_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp456_3 () (_ BitVec 64))
(declare-fun temp456_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp456_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp456_6 () (_ BitVec 64))
(declare-fun temp456_7 () (_ BitVec 64))
(declare-fun temp456_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp456_9 () (_ BitVec 64))
(declare-fun temp456_10 () (_ BitVec 64))
(declare-fun temp456_11 () (_ BitVec 64))
(declare-fun temp456_12 () (_ BitVec 64))
(declare-fun temp456_13 () (_ BitVec 64))
(declare-fun temp456_14 () (_ BitVec 64))
(declare-fun temp456_15 () (_ BitVec 64))
(declare-fun temp456_16 () (_ BitVec 64))
(declare-fun temp456_17 () (_ BitVec 64))
(declare-fun temp456_18 () (_ BitVec 64))
(declare-fun temp456_19 () (_ BitVec 64))
(declare-fun temp456_20 () (_ BitVec 64))
(declare-fun temp456_21 () (_ BitVec 64))
(declare-fun temp456_22 () (_ BitVec 64))
(declare-fun temp456_23 () (_ BitVec 64))
(declare-fun temp456_24 () (_ BitVec 64))
(declare-fun temp456_25 () (_ BitVec 64))
(declare-fun temp456_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp456_27 () (_ BitVec 64))
(declare-fun temp456_28 () (_ BitVec 64))
(declare-fun temp456_29 () (_ BitVec 64))
(declare-fun temp456_30 () (_ BitVec 64))
(declare-fun temp456_31 () (_ BitVec 64))
(declare-fun temp456_32 () (_ BitVec 64))
(declare-fun temp456_33 () (_ BitVec 64))
(declare-fun temp456_34 () (_ BitVec 64))
(declare-fun temp456_35 () (_ BitVec 64))
(declare-fun temp456_36 () (_ BitVec 64))
(declare-fun temp456_37 () (_ BitVec 64))
(declare-fun temp456_38 () (_ BitVec 64))
(declare-fun temp456_39 () (_ BitVec 64))
(declare-fun temp456_40 () (_ BitVec 64))
(declare-fun temp456_41 () (_ BitVec 64))
(declare-fun temp456_42 () (_ BitVec 64))
(declare-fun temp456_43 () (_ BitVec 64))
(declare-fun temp456_44 () (_ BitVec 64))
(declare-fun temp456_45 () (_ BitVec 64))
(declare-fun temp456_46 () (_ BitVec 64))
(declare-fun temp456_47 () (_ BitVec 64))
(declare-fun temp456_48 () (_ BitVec 64))
(declare-fun temp456_49 () (_ BitVec 64))
(declare-fun temp456_50 () (_ BitVec 64))
(declare-fun temp456_51 () (_ BitVec 64))
(declare-fun temp456_52 () (_ BitVec 64))
(declare-fun temp456_53 () (_ BitVec 64))
(declare-fun temp456_54 () (_ BitVec 64))
(declare-fun temp456_55 () (_ BitVec 64))
(declare-fun temp456_56 () (_ BitVec 64))
(declare-fun temp456_57 () (_ BitVec 64))
(declare-fun temp456_58 () (_ BitVec 64))
(declare-fun temp456_59 () (_ BitVec 64))
(declare-fun temp456_60 () (_ BitVec 64))
(declare-fun temp456_61 () (_ BitVec 64))
(declare-fun temp456_62 () (_ BitVec 64))
(declare-fun temp456_63 () (_ BitVec 64))
(declare-fun temp456_64 () (_ BitVec 64))
(declare-fun temp456_65 () (_ BitVec 64))
(declare-fun temp456_66 () (_ BitVec 64))
(declare-fun temp456_67 () (_ BitVec 64))
(declare-fun temp456_68 () (_ BitVec 64))
(declare-fun temp456_69 () (_ BitVec 64))
(declare-fun temp456_70 () (_ BitVec 64))
(declare-fun temp456_71 () (_ BitVec 64))
(declare-fun temp456_72 () (_ BitVec 64))
(declare-fun temp456_73 () (_ BitVec 64))
(declare-fun temp456_74 () (_ BitVec 64))
(declare-fun temp456_75 () (_ BitVec 64))
(declare-fun temp456_76 () (_ BitVec 64))
(declare-fun temp456_77 () (_ BitVec 64))
(declare-fun temp456_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp456_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp456_80 () (_ BitVec 64))
(declare-fun var1248381 () (_ BitVec 64))
(declare-fun temp456_81 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp456_82 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp456_83 () (_ BitVec 64))
(declare-fun temp456_84 () (_ BitVec 64))
(declare-fun var2232622 () (_ BitVec 64))
(declare-fun temp456_85 () (_ BitVec 64))
(declare-fun var2232623 () (_ BitVec 64))
(declare-fun var2557054 () (_ BitVec 64))
(declare-fun var2557055 () (_ BitVec 64))
(declare-fun temp456_86 () (_ BitVec 64))
(declare-fun var3084698 () (_ BitVec 64))
(declare-fun temp456_87 () (_ BitVec 64))
(declare-fun var3608986 () (_ BitVec 64))
(declare-fun temp456_88 () (_ BitVec 64))
(declare-fun var5116835 () (_ BitVec 64))
(declare-fun temp456_90 () (_ BitVec 64))
(declare-fun temp456_89 () (_ BitVec 64))
(assert (= temp456_1 #x0000000000080000))
(assert (= var461925 temp456_1))
(assert (= temp456_2 #x0000000000080000))
(assert (= var724069 temp456_2))
(assert (= temp456_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp456_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp456_4 #x0000000000000000))
(assert (= var69380 temp456_4))
(assert (= temp456_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp456_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp456_6 #x0000000000000000))
(assert (= var69401 temp456_6))
(assert (= temp456_7 #x0000000000000000))
(assert (= temp456_8 temp456_7))
(assert (= temp456_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_8)))
(assert (= temp456_10 #x0000000000000001))
(assert (= temp456_11 temp456_10))
(assert (= temp456_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_11)))
(assert (= temp456_13 #x0000000000000002))
(assert (= temp456_14 temp456_13))
(assert (= temp456_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_14)))
(assert (= temp456_16 #x0000000000000003))
(assert (= temp456_17 temp456_16))
(assert (= temp456_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_17)))
(assert (= temp456_19 #x0000000000000004))
(assert (= temp456_20 temp456_19))
(assert (= temp456_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_20)))
(assert (= temp456_22 #x0000000000000005))
(assert (= temp456_23 temp456_22))
(assert (= temp456_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_23)))
(assert (= temp456_25 #x0000000000000000))
(assert (= temp456_26 temp456_25))
(assert (= temp456_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp456_26)))
(assert (= temp456_28 #x0000000000000001))
(assert (= temp456_29 temp456_28))
(assert (= temp456_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp456_29)))
(assert (= temp456_31 #x0000000000000002))
(assert (= temp456_32 temp456_31))
(assert (= temp456_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp456_32)))
(assert (= temp456_34 #x0000000000000003))
(assert (= temp456_35 temp456_34))
(assert (= temp456_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp456_35)))
(assert (= temp456_37 #x0000000000000004))
(assert (= temp456_38 temp456_37))
(assert (= temp456_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp456_38)))
(assert (= temp456_40 #x0000000000000005))
(assert (= temp456_41 temp456_40))
(assert (= temp456_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp456_41)))
(assert (= temp456_43 temp456_11))
(assert (= temp456_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp456_43)))
(assert (= temp456_45 temp456_14))
(assert (= temp456_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp456_45)))
(assert (= temp456_47 temp456_17))
(assert (= temp456_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp456_47)))
(assert (= temp456_49 temp456_20))
(assert (= temp456_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp456_49)))
(assert (= temp456_51 temp456_23))
(assert (= temp456_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp456_51)))
(assert (= temp456_53 temp456_8))
(assert (= temp456_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp456_53)))
(assert (= temp456_55 temp456_26))
(assert (= temp456_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_55)))
(assert (= temp456_57 temp456_29))
(assert (= temp456_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_57)))
(assert (= temp456_59 temp456_32))
(assert (= temp456_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_59)))
(assert (= temp456_61 temp456_35))
(assert (= temp456_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_61)))
(assert (= temp456_63 temp456_38))
(assert (= temp456_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_63)))
(assert (= temp456_65 temp456_41))
(assert (= temp456_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_65)))
(assert (= temp456_67 temp456_43))
(assert (= temp456_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_67)))
(assert (= temp456_69 temp456_45))
(assert (= temp456_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_69)))
(assert (= temp456_71 temp456_47))
(assert (= temp456_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_71)))
(assert (= temp456_73 temp456_49))
(assert (= temp456_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_73)))
(assert (= temp456_75 temp456_51))
(assert (= temp456_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_75)))
(assert (= temp456_77 temp456_53))
(assert (= temp456_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp456_77)))
(assert (= (and true
        (= temp456_44 temp456_12)
        (= temp456_46 temp456_15)
        (= temp456_48 temp456_18)
        (= temp456_50 temp456_21)
        (= temp456_52 temp456_24)
        (= temp456_54 temp456_9)
        (= temp456_56 temp456_27)
        (= temp456_58 temp456_30)
        (= temp456_60 temp456_33)
        (= temp456_62 temp456_36)
        (= temp456_64 temp456_39)
        (= temp456_66 temp456_42)
        (= temp456_68 temp456_44)
        (= temp456_70 temp456_46)
        (= temp456_72 temp456_48)
        (= temp456_74 temp456_50)
        (= temp456_76 temp456_52)
        (= temp456_78 temp456_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp456_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp456_79))
(assert (= temp456_80 #x0000000009c00400))
(assert (= var1248381 temp456_80))
(assert (= temp456_81 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp456_81)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp456_82 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp456_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp456_83 #x0000000000000000))
(assert (= var69546 temp456_83))
(assert (= temp456_84 #x0000000000000000))
(assert (= var2232622 temp456_84))
(assert (= temp456_85 #x0000000000000000))
(assert (= var2232623 temp456_85))
(assert (= var2557054 var2232622))
(assert (= var2557055 var2232623))
(assert (= temp456_86 #x0000000000000001))
(assert (= var3084698 temp456_86))
(assert (= temp456_87 #x0000000000000001))
(assert (= var3608986 temp456_87))
(assert (= temp456_88 #x000000000000000b))
(assert (= var5116835 temp456_88))
(assert (= temp456_90 #x0000000000000001))
(assert (= temp456_89 temp456_90))
(model-add temp456_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp456_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp456_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp456_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






