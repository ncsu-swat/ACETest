(declare-fun temp35_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp35_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp35_3 () (_ BitVec 64))
(declare-fun temp35_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp35_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp35_6 () (_ BitVec 64))
(declare-fun temp35_7 () (_ BitVec 64))
(declare-fun temp35_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp35_9 () (_ BitVec 64))
(declare-fun temp35_10 () (_ BitVec 64))
(declare-fun temp35_11 () (_ BitVec 64))
(declare-fun temp35_12 () (_ BitVec 64))
(declare-fun temp35_13 () (_ BitVec 64))
(declare-fun temp35_14 () (_ BitVec 64))
(declare-fun temp35_15 () (_ BitVec 64))
(declare-fun temp35_16 () (_ BitVec 64))
(declare-fun temp35_17 () (_ BitVec 64))
(declare-fun temp35_18 () (_ BitVec 64))
(declare-fun temp35_19 () (_ BitVec 64))
(declare-fun temp35_20 () (_ BitVec 64))
(declare-fun temp35_21 () (_ BitVec 64))
(declare-fun temp35_22 () (_ BitVec 64))
(declare-fun temp35_23 () (_ BitVec 64))
(declare-fun temp35_24 () (_ BitVec 64))
(declare-fun temp35_25 () (_ BitVec 64))
(declare-fun temp35_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp35_27 () (_ BitVec 64))
(declare-fun temp35_28 () (_ BitVec 64))
(declare-fun temp35_29 () (_ BitVec 64))
(declare-fun temp35_30 () (_ BitVec 64))
(declare-fun temp35_31 () (_ BitVec 64))
(declare-fun temp35_32 () (_ BitVec 64))
(declare-fun temp35_33 () (_ BitVec 64))
(declare-fun temp35_34 () (_ BitVec 64))
(declare-fun temp35_35 () (_ BitVec 64))
(declare-fun temp35_36 () (_ BitVec 64))
(declare-fun temp35_37 () (_ BitVec 64))
(declare-fun temp35_38 () (_ BitVec 64))
(declare-fun temp35_39 () (_ BitVec 64))
(declare-fun temp35_40 () (_ BitVec 64))
(declare-fun temp35_41 () (_ BitVec 64))
(declare-fun temp35_42 () (_ BitVec 64))
(declare-fun temp35_43 () (_ BitVec 64))
(declare-fun temp35_44 () (_ BitVec 64))
(declare-fun temp35_45 () (_ BitVec 64))
(declare-fun temp35_46 () (_ BitVec 64))
(declare-fun temp35_47 () (_ BitVec 64))
(declare-fun temp35_48 () (_ BitVec 64))
(declare-fun temp35_49 () (_ BitVec 64))
(declare-fun temp35_50 () (_ BitVec 64))
(declare-fun temp35_51 () (_ BitVec 64))
(declare-fun temp35_52 () (_ BitVec 64))
(declare-fun temp35_53 () (_ BitVec 64))
(declare-fun temp35_54 () (_ BitVec 64))
(declare-fun temp35_55 () (_ BitVec 64))
(declare-fun temp35_56 () (_ BitVec 64))
(declare-fun temp35_57 () (_ BitVec 64))
(declare-fun temp35_58 () (_ BitVec 64))
(declare-fun temp35_59 () (_ BitVec 64))
(declare-fun temp35_60 () (_ BitVec 64))
(declare-fun temp35_61 () (_ BitVec 64))
(declare-fun temp35_62 () (_ BitVec 64))
(declare-fun temp35_63 () (_ BitVec 64))
(declare-fun temp35_64 () (_ BitVec 64))
(declare-fun temp35_65 () (_ BitVec 64))
(declare-fun temp35_66 () (_ BitVec 64))
(declare-fun temp35_67 () (_ BitVec 64))
(declare-fun temp35_68 () (_ BitVec 64))
(declare-fun temp35_69 () (_ BitVec 64))
(declare-fun temp35_70 () (_ BitVec 64))
(declare-fun temp35_71 () (_ BitVec 64))
(declare-fun temp35_72 () (_ BitVec 64))
(declare-fun temp35_73 () (_ BitVec 64))
(declare-fun temp35_74 () (_ BitVec 64))
(declare-fun temp35_75 () (_ BitVec 64))
(declare-fun temp35_76 () (_ BitVec 64))
(declare-fun temp35_77 () (_ BitVec 64))
(declare-fun temp35_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp35_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp35_80 () (_ BitVec 64))
(declare-fun var987402 () (_ BitVec 64))
(declare-fun var987367 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp35_81 () (_ BitVec 64))
(declare-fun temp35_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp35_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp35_84 () (_ BitVec 64))
(declare-fun temp35_85 () (_ BitVec 64))
(declare-fun var1708334 () (_ BitVec 64))
(declare-fun temp35_86 () (_ BitVec 64))
(declare-fun var1708335 () (_ BitVec 64))
(declare-fun var2032766 () (_ BitVec 64))
(declare-fun var2032767 () (_ BitVec 64))
(declare-fun temp35_87 () (_ BitVec 64))
(declare-fun var2757018 () (_ BitVec 64))
(declare-fun temp35_88 () (_ BitVec 64))
(declare-fun var3281306 () (_ BitVec 64))
(declare-fun temp35_89 () (_ BitVec 64))
(declare-fun var4199331 () (_ BitVec 64))
(declare-fun temp35_91 () (_ BitVec 64))
(declare-fun temp35_90 () (_ BitVec 64))
(assert (= temp35_1 #x0000000000080000))
(assert (= var461925 temp35_1))
(assert (= temp35_2 #x0000000000080000))
(assert (= var724069 temp35_2))
(assert (= temp35_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp35_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp35_4 #x0000000000000000))
(assert (= var69380 temp35_4))
(assert (= temp35_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp35_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp35_6 #x0000000000000000))
(assert (= var69401 temp35_6))
(assert (= temp35_7 #x0000000000000000))
(assert (= temp35_8 temp35_7))
(assert (= temp35_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp35_8)))
(assert (= temp35_10 #x0000000000000001))
(assert (= temp35_11 temp35_10))
(assert (= temp35_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp35_11)))
(assert (= temp35_13 #x0000000000000002))
(assert (= temp35_14 temp35_13))
(assert (= temp35_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp35_14)))
(assert (= temp35_16 #x0000000000000003))
(assert (= temp35_17 temp35_16))
(assert (= temp35_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp35_17)))
(assert (= temp35_19 #x0000000000000004))
(assert (= temp35_20 temp35_19))
(assert (= temp35_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp35_20)))
(assert (= temp35_22 #x0000000000000005))
(assert (= temp35_23 temp35_22))
(assert (= temp35_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp35_23)))
(assert (= temp35_25 #x0000000000000000))
(assert (= temp35_26 temp35_25))
(assert (= temp35_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp35_26)))
(assert (= temp35_28 #x0000000000000001))
(assert (= temp35_29 temp35_28))
(assert (= temp35_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp35_29)))
(assert (= temp35_31 #x0000000000000002))
(assert (= temp35_32 temp35_31))
(assert (= temp35_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp35_32)))
(assert (= temp35_34 #x0000000000000003))
(assert (= temp35_35 temp35_34))
(assert (= temp35_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp35_35)))
(assert (= temp35_37 #x0000000000000004))
(assert (= temp35_38 temp35_37))
(assert (= temp35_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp35_38)))
(assert (= temp35_40 #x0000000000000005))
(assert (= temp35_41 temp35_40))
(assert (= temp35_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp35_41)))
(assert (= temp35_43 temp35_11))
(assert (= temp35_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp35_43)))
(assert (= temp35_45 temp35_14))
(assert (= temp35_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp35_45)))
(assert (= temp35_47 temp35_17))
(assert (= temp35_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp35_47)))
(assert (= temp35_49 temp35_20))
(assert (= temp35_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp35_49)))
(assert (= temp35_51 temp35_23))
(assert (= temp35_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp35_51)))
(assert (= temp35_53 temp35_8))
(assert (= temp35_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp35_53)))
(assert (= temp35_55 temp35_26))
(assert (= temp35_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp35_55)))
(assert (= temp35_57 temp35_29))
(assert (= temp35_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp35_57)))
(assert (= temp35_59 temp35_32))
(assert (= temp35_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp35_59)))
(assert (= temp35_61 temp35_35))
(assert (= temp35_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp35_61)))
(assert (= temp35_63 temp35_38))
(assert (= temp35_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp35_63)))
(assert (= temp35_65 temp35_41))
(assert (= temp35_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp35_65)))
(assert (= temp35_67 temp35_43))
(assert (= temp35_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp35_67)))
(assert (= temp35_69 temp35_45))
(assert (= temp35_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp35_69)))
(assert (= temp35_71 temp35_47))
(assert (= temp35_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp35_71)))
(assert (= temp35_73 temp35_49))
(assert (= temp35_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp35_73)))
(assert (= temp35_75 temp35_51))
(assert (= temp35_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp35_75)))
(assert (= temp35_77 temp35_53))
(assert (= temp35_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp35_77)))
(assert (= (and true
        (= temp35_44 temp35_12)
        (= temp35_46 temp35_15)
        (= temp35_48 temp35_18)
        (= temp35_50 temp35_21)
        (= temp35_52 temp35_24)
        (= temp35_54 temp35_9)
        (= temp35_56 temp35_27)
        (= temp35_58 temp35_30)
        (= temp35_60 temp35_33)
        (= temp35_62 temp35_36)
        (= temp35_64 temp35_39)
        (= temp35_66 temp35_42)
        (= temp35_68 temp35_44)
        (= temp35_70 temp35_46)
        (= temp35_72 temp35_48)
        (= temp35_74 temp35_50)
        (= temp35_76 temp35_52)
        (= temp35_78 temp35_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp35_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp35_79))
(assert (= temp35_80 #x0000000000000001))
(assert (= var987402 temp35_80))
(assert (= var987367 var987402))
(assert (= var69428 var987367))
(assert (= temp35_81 #x0000000000000001))
(assert (= var69428 temp35_81))
(assert (= temp35_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp35_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp35_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp35_83)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp35_84 #x0000000000000000))
(assert (= var69546 temp35_84))
(assert (= temp35_85 #x0000000000000000))
(assert (= var1708334 temp35_85))
(assert (= temp35_86 #x0000000000000000))
(assert (= var1708335 temp35_86))
(assert (= var2032766 var1708334))
(assert (= var2032767 var1708335))
(assert (= temp35_87 #x0000000000000001))
(assert (= var2757018 temp35_87))
(assert (= temp35_88 #x0000000000000001))
(assert (= var3281306 temp35_88))
(assert (= temp35_89 #x000000000000000b))
(assert (= var4199331 temp35_89))
(assert (= temp35_91 #x0000000000000001))
(assert (= temp35_90 temp35_91))
(model-add temp35_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp35_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp35_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp35_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






