(declare-fun temp32_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp32_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp32_3 () (_ BitVec 64))
(declare-fun temp32_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp32_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp32_6 () (_ BitVec 64))
(declare-fun temp32_7 () (_ BitVec 64))
(declare-fun temp32_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp32_9 () (_ BitVec 64))
(declare-fun temp32_10 () (_ BitVec 64))
(declare-fun temp32_11 () (_ BitVec 64))
(declare-fun temp32_12 () (_ BitVec 64))
(declare-fun temp32_13 () (_ BitVec 64))
(declare-fun temp32_14 () (_ BitVec 64))
(declare-fun temp32_15 () (_ BitVec 64))
(declare-fun temp32_16 () (_ BitVec 64))
(declare-fun temp32_17 () (_ BitVec 64))
(declare-fun temp32_18 () (_ BitVec 64))
(declare-fun temp32_19 () (_ BitVec 64))
(declare-fun temp32_20 () (_ BitVec 64))
(declare-fun temp32_21 () (_ BitVec 64))
(declare-fun temp32_22 () (_ BitVec 64))
(declare-fun temp32_23 () (_ BitVec 64))
(declare-fun temp32_24 () (_ BitVec 64))
(declare-fun temp32_25 () (_ BitVec 64))
(declare-fun temp32_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp32_27 () (_ BitVec 64))
(declare-fun temp32_28 () (_ BitVec 64))
(declare-fun temp32_29 () (_ BitVec 64))
(declare-fun temp32_30 () (_ BitVec 64))
(declare-fun temp32_31 () (_ BitVec 64))
(declare-fun temp32_32 () (_ BitVec 64))
(declare-fun temp32_33 () (_ BitVec 64))
(declare-fun temp32_34 () (_ BitVec 64))
(declare-fun temp32_35 () (_ BitVec 64))
(declare-fun temp32_36 () (_ BitVec 64))
(declare-fun temp32_37 () (_ BitVec 64))
(declare-fun temp32_38 () (_ BitVec 64))
(declare-fun temp32_39 () (_ BitVec 64))
(declare-fun temp32_40 () (_ BitVec 64))
(declare-fun temp32_41 () (_ BitVec 64))
(declare-fun temp32_42 () (_ BitVec 64))
(declare-fun temp32_43 () (_ BitVec 64))
(declare-fun temp32_44 () (_ BitVec 64))
(declare-fun temp32_45 () (_ BitVec 64))
(declare-fun temp32_46 () (_ BitVec 64))
(declare-fun temp32_47 () (_ BitVec 64))
(declare-fun temp32_48 () (_ BitVec 64))
(declare-fun temp32_49 () (_ BitVec 64))
(declare-fun temp32_50 () (_ BitVec 64))
(declare-fun temp32_51 () (_ BitVec 64))
(declare-fun temp32_52 () (_ BitVec 64))
(declare-fun temp32_53 () (_ BitVec 64))
(declare-fun temp32_54 () (_ BitVec 64))
(declare-fun temp32_55 () (_ BitVec 64))
(declare-fun temp32_56 () (_ BitVec 64))
(declare-fun temp32_57 () (_ BitVec 64))
(declare-fun temp32_58 () (_ BitVec 64))
(declare-fun temp32_59 () (_ BitVec 64))
(declare-fun temp32_60 () (_ BitVec 64))
(declare-fun temp32_61 () (_ BitVec 64))
(declare-fun temp32_62 () (_ BitVec 64))
(declare-fun temp32_63 () (_ BitVec 64))
(declare-fun temp32_64 () (_ BitVec 64))
(declare-fun temp32_65 () (_ BitVec 64))
(declare-fun temp32_66 () (_ BitVec 64))
(declare-fun temp32_67 () (_ BitVec 64))
(declare-fun temp32_68 () (_ BitVec 64))
(declare-fun temp32_69 () (_ BitVec 64))
(declare-fun temp32_70 () (_ BitVec 64))
(declare-fun temp32_71 () (_ BitVec 64))
(declare-fun temp32_72 () (_ BitVec 64))
(declare-fun temp32_73 () (_ BitVec 64))
(declare-fun temp32_74 () (_ BitVec 64))
(declare-fun temp32_75 () (_ BitVec 64))
(declare-fun temp32_76 () (_ BitVec 64))
(declare-fun temp32_77 () (_ BitVec 64))
(declare-fun temp32_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp32_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp32_80 () (_ BitVec 64))
(declare-fun var987402 () (_ BitVec 64))
(declare-fun var987367 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp32_81 () (_ BitVec 64))
(declare-fun temp32_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp32_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp32_84 () (_ BitVec 64))
(declare-fun temp32_85 () (_ BitVec 64))
(declare-fun var1708334 () (_ BitVec 64))
(declare-fun temp32_86 () (_ BitVec 64))
(declare-fun var1708335 () (_ BitVec 64))
(declare-fun var2032766 () (_ BitVec 64))
(declare-fun var2032767 () (_ BitVec 64))
(declare-fun temp32_87 () (_ BitVec 64))
(declare-fun var2757018 () (_ BitVec 64))
(declare-fun temp32_88 () (_ BitVec 64))
(declare-fun var3281306 () (_ BitVec 64))
(declare-fun temp32_89 () (_ BitVec 64))
(declare-fun var3806115 () (_ BitVec 64))
(declare-fun temp32_91 () (_ BitVec 64))
(declare-fun temp32_90 () (_ BitVec 64))
(assert (= temp32_1 #x0000000000080000))
(assert (= var461925 temp32_1))
(assert (= temp32_2 #x0000000000080000))
(assert (= var724069 temp32_2))
(assert (= temp32_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp32_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_4 #x0000000000000000))
(assert (= var69380 temp32_4))
(assert (= temp32_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp32_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_6 #x0000000000000000))
(assert (= var69401 temp32_6))
(assert (= temp32_7 #x0000000000000000))
(assert (= temp32_8 temp32_7))
(assert (= temp32_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_8)))
(assert (= temp32_10 #x0000000000000001))
(assert (= temp32_11 temp32_10))
(assert (= temp32_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_11)))
(assert (= temp32_13 #x0000000000000002))
(assert (= temp32_14 temp32_13))
(assert (= temp32_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_14)))
(assert (= temp32_16 #x0000000000000003))
(assert (= temp32_17 temp32_16))
(assert (= temp32_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_17)))
(assert (= temp32_19 #x0000000000000004))
(assert (= temp32_20 temp32_19))
(assert (= temp32_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_20)))
(assert (= temp32_22 #x0000000000000005))
(assert (= temp32_23 temp32_22))
(assert (= temp32_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_23)))
(assert (= temp32_25 #x0000000000000000))
(assert (= temp32_26 temp32_25))
(assert (= temp32_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp32_26)))
(assert (= temp32_28 #x0000000000000001))
(assert (= temp32_29 temp32_28))
(assert (= temp32_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp32_29)))
(assert (= temp32_31 #x0000000000000002))
(assert (= temp32_32 temp32_31))
(assert (= temp32_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp32_32)))
(assert (= temp32_34 #x0000000000000003))
(assert (= temp32_35 temp32_34))
(assert (= temp32_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp32_35)))
(assert (= temp32_37 #x0000000000000004))
(assert (= temp32_38 temp32_37))
(assert (= temp32_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp32_38)))
(assert (= temp32_40 #x0000000000000005))
(assert (= temp32_41 temp32_40))
(assert (= temp32_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp32_41)))
(assert (= temp32_43 temp32_11))
(assert (= temp32_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp32_43)))
(assert (= temp32_45 temp32_14))
(assert (= temp32_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp32_45)))
(assert (= temp32_47 temp32_17))
(assert (= temp32_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp32_47)))
(assert (= temp32_49 temp32_20))
(assert (= temp32_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp32_49)))
(assert (= temp32_51 temp32_23))
(assert (= temp32_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp32_51)))
(assert (= temp32_53 temp32_8))
(assert (= temp32_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp32_53)))
(assert (= temp32_55 temp32_26))
(assert (= temp32_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_55)))
(assert (= temp32_57 temp32_29))
(assert (= temp32_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_57)))
(assert (= temp32_59 temp32_32))
(assert (= temp32_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_59)))
(assert (= temp32_61 temp32_35))
(assert (= temp32_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_61)))
(assert (= temp32_63 temp32_38))
(assert (= temp32_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_63)))
(assert (= temp32_65 temp32_41))
(assert (= temp32_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_65)))
(assert (= temp32_67 temp32_43))
(assert (= temp32_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_67)))
(assert (= temp32_69 temp32_45))
(assert (= temp32_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_69)))
(assert (= temp32_71 temp32_47))
(assert (= temp32_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_71)))
(assert (= temp32_73 temp32_49))
(assert (= temp32_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_73)))
(assert (= temp32_75 temp32_51))
(assert (= temp32_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_75)))
(assert (= temp32_77 temp32_53))
(assert (= temp32_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_77)))
(assert (= (and true
        (= temp32_44 temp32_12)
        (= temp32_46 temp32_15)
        (= temp32_48 temp32_18)
        (= temp32_50 temp32_21)
        (= temp32_52 temp32_24)
        (= temp32_54 temp32_9)
        (= temp32_56 temp32_27)
        (= temp32_58 temp32_30)
        (= temp32_60 temp32_33)
        (= temp32_62 temp32_36)
        (= temp32_64 temp32_39)
        (= temp32_66 temp32_42)
        (= temp32_68 temp32_44)
        (= temp32_70 temp32_46)
        (= temp32_72 temp32_48)
        (= temp32_74 temp32_50)
        (= temp32_76 temp32_52)
        (= temp32_78 temp32_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp32_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp32_79))
(assert (= temp32_80 #x0000000000000001))
(assert (= var987402 temp32_80))
(assert (= var987367 var987402))
(assert (= var69428 var987367))
(assert (= temp32_81 #x0000000000000001))
(assert (= var69428 temp32_81))
(assert (= temp32_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp32_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp32_83)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp32_84 #x0000000000000000))
(assert (= var69546 temp32_84))
(assert (= temp32_85 #x0000000000000000))
(assert (= var1708334 temp32_85))
(assert (= temp32_86 #x0000000000000000))
(assert (= var1708335 temp32_86))
(assert (= var2032766 var1708334))
(assert (= var2032767 var1708335))
(assert (= temp32_87 #x0000000000000001))
(assert (= var2757018 temp32_87))
(assert (= temp32_88 #x0000000000000001))
(assert (= var3281306 temp32_88))
(assert (= temp32_89 #x000000000000000b))
(assert (= var3806115 temp32_89))
(assert (= temp32_91 #x0000000000000001))
(assert (= temp32_90 temp32_91))
(model-add temp32_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp32_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp32_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp32_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






