(declare-fun temp588_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp588_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp588_3 () (_ BitVec 64))
(declare-fun temp588_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp588_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp588_6 () (_ BitVec 64))
(declare-fun temp588_7 () (_ BitVec 64))
(declare-fun temp588_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp588_9 () (_ BitVec 64))
(declare-fun temp588_10 () (_ BitVec 64))
(declare-fun temp588_11 () (_ BitVec 64))
(declare-fun temp588_12 () (_ BitVec 64))
(declare-fun temp588_13 () (_ BitVec 64))
(declare-fun temp588_14 () (_ BitVec 64))
(declare-fun temp588_15 () (_ BitVec 64))
(declare-fun temp588_16 () (_ BitVec 64))
(declare-fun temp588_17 () (_ BitVec 64))
(declare-fun temp588_18 () (_ BitVec 64))
(declare-fun temp588_19 () (_ BitVec 64))
(declare-fun temp588_20 () (_ BitVec 64))
(declare-fun temp588_21 () (_ BitVec 64))
(declare-fun temp588_22 () (_ BitVec 64))
(declare-fun temp588_23 () (_ BitVec 64))
(declare-fun temp588_24 () (_ BitVec 64))
(declare-fun temp588_25 () (_ BitVec 64))
(declare-fun temp588_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp588_27 () (_ BitVec 64))
(declare-fun temp588_28 () (_ BitVec 64))
(declare-fun temp588_29 () (_ BitVec 64))
(declare-fun temp588_30 () (_ BitVec 64))
(declare-fun temp588_31 () (_ BitVec 64))
(declare-fun temp588_32 () (_ BitVec 64))
(declare-fun temp588_33 () (_ BitVec 64))
(declare-fun temp588_34 () (_ BitVec 64))
(declare-fun temp588_35 () (_ BitVec 64))
(declare-fun temp588_36 () (_ BitVec 64))
(declare-fun temp588_37 () (_ BitVec 64))
(declare-fun temp588_38 () (_ BitVec 64))
(declare-fun temp588_39 () (_ BitVec 64))
(declare-fun temp588_40 () (_ BitVec 64))
(declare-fun temp588_41 () (_ BitVec 64))
(declare-fun temp588_42 () (_ BitVec 64))
(declare-fun temp588_43 () (_ BitVec 64))
(declare-fun temp588_44 () (_ BitVec 64))
(declare-fun temp588_45 () (_ BitVec 64))
(declare-fun temp588_46 () (_ BitVec 64))
(declare-fun temp588_47 () (_ BitVec 64))
(declare-fun temp588_48 () (_ BitVec 64))
(declare-fun temp588_49 () (_ BitVec 64))
(declare-fun temp588_50 () (_ BitVec 64))
(declare-fun temp588_51 () (_ BitVec 64))
(declare-fun temp588_52 () (_ BitVec 64))
(declare-fun temp588_53 () (_ BitVec 64))
(declare-fun temp588_54 () (_ BitVec 64))
(declare-fun temp588_55 () (_ BitVec 64))
(declare-fun temp588_56 () (_ BitVec 64))
(declare-fun temp588_57 () (_ BitVec 64))
(declare-fun temp588_58 () (_ BitVec 64))
(declare-fun temp588_59 () (_ BitVec 64))
(declare-fun temp588_60 () (_ BitVec 64))
(declare-fun temp588_61 () (_ BitVec 64))
(declare-fun temp588_62 () (_ BitVec 64))
(declare-fun temp588_63 () (_ BitVec 64))
(declare-fun temp588_64 () (_ BitVec 64))
(declare-fun temp588_65 () (_ BitVec 64))
(declare-fun temp588_66 () (_ BitVec 64))
(declare-fun temp588_67 () (_ BitVec 64))
(declare-fun temp588_68 () (_ BitVec 64))
(declare-fun temp588_69 () (_ BitVec 64))
(declare-fun temp588_70 () (_ BitVec 64))
(declare-fun temp588_71 () (_ BitVec 64))
(declare-fun temp588_72 () (_ BitVec 64))
(declare-fun temp588_73 () (_ BitVec 64))
(declare-fun temp588_74 () (_ BitVec 64))
(declare-fun temp588_75 () (_ BitVec 64))
(declare-fun temp588_76 () (_ BitVec 64))
(declare-fun temp588_77 () (_ BitVec 64))
(declare-fun temp588_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp588_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp588_80 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp588_81 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp588_82 () (_ BitVec 64))
(declare-fun temp588_83 () (_ BitVec 64))
(declare-fun var1642798 () (_ BitVec 64))
(declare-fun temp588_84 () (_ BitVec 64))
(declare-fun var1642799 () (_ BitVec 64))
(declare-fun var1967230 () (_ BitVec 64))
(declare-fun var1967231 () (_ BitVec 64))
(declare-fun temp588_85 () (_ BitVec 64))
(declare-fun var2494874 () (_ BitVec 64))
(declare-fun temp588_86 () (_ BitVec 64))
(declare-fun var3019162 () (_ BitVec 64))
(assert (= temp588_1 #x0000000000080000))
(assert (= var461925 temp588_1))
(assert (= temp588_2 #x0000000000080000))
(assert (= var724069 temp588_2))
(assert (= temp588_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp588_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp588_4 #x0000000000000000))
(assert (= var69380 temp588_4))
(assert (= temp588_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp588_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp588_6 #x0000000000000000))
(assert (= var69401 temp588_6))
(assert (= temp588_7 #x0000000000000000))
(assert (= temp588_8 temp588_7))
(assert (= temp588_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp588_8)))
(assert (= temp588_10 #x0000000000000001))
(assert (= temp588_11 temp588_10))
(assert (= temp588_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp588_11)))
(assert (= temp588_13 #x0000000000000002))
(assert (= temp588_14 temp588_13))
(assert (= temp588_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp588_14)))
(assert (= temp588_16 #x0000000000000003))
(assert (= temp588_17 temp588_16))
(assert (= temp588_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp588_17)))
(assert (= temp588_19 #x0000000000000004))
(assert (= temp588_20 temp588_19))
(assert (= temp588_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp588_20)))
(assert (= temp588_22 #x0000000000000005))
(assert (= temp588_23 temp588_22))
(assert (= temp588_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp588_23)))
(assert (= temp588_25 #x0000000000000000))
(assert (= temp588_26 temp588_25))
(assert (= temp588_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp588_26)))
(assert (= temp588_28 #x0000000000000001))
(assert (= temp588_29 temp588_28))
(assert (= temp588_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp588_29)))
(assert (= temp588_31 #x0000000000000002))
(assert (= temp588_32 temp588_31))
(assert (= temp588_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp588_32)))
(assert (= temp588_34 #x0000000000000003))
(assert (= temp588_35 temp588_34))
(assert (= temp588_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp588_35)))
(assert (= temp588_37 #x0000000000000004))
(assert (= temp588_38 temp588_37))
(assert (= temp588_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp588_38)))
(assert (= temp588_40 #x0000000000000005))
(assert (= temp588_41 temp588_40))
(assert (= temp588_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp588_41)))
(assert (= temp588_43 temp588_11))
(assert (= temp588_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp588_43)))
(assert (= temp588_45 temp588_14))
(assert (= temp588_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp588_45)))
(assert (= temp588_47 temp588_17))
(assert (= temp588_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp588_47)))
(assert (= temp588_49 temp588_20))
(assert (= temp588_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp588_49)))
(assert (= temp588_51 temp588_23))
(assert (= temp588_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp588_51)))
(assert (= temp588_53 temp588_8))
(assert (= temp588_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp588_53)))
(assert (= temp588_55 temp588_26))
(assert (= temp588_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp588_55)))
(assert (= temp588_57 temp588_29))
(assert (= temp588_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp588_57)))
(assert (= temp588_59 temp588_32))
(assert (= temp588_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp588_59)))
(assert (= temp588_61 temp588_35))
(assert (= temp588_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp588_61)))
(assert (= temp588_63 temp588_38))
(assert (= temp588_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp588_63)))
(assert (= temp588_65 temp588_41))
(assert (= temp588_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp588_65)))
(assert (= temp588_67 temp588_43))
(assert (= temp588_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp588_67)))
(assert (= temp588_69 temp588_45))
(assert (= temp588_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp588_69)))
(assert (= temp588_71 temp588_47))
(assert (= temp588_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp588_71)))
(assert (= temp588_73 temp588_49))
(assert (= temp588_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp588_73)))
(assert (= temp588_75 temp588_51))
(assert (= temp588_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp588_75)))
(assert (= temp588_77 temp588_53))
(assert (= temp588_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp588_77)))
(assert (= (and true
        (= temp588_44 temp588_12)
        (= temp588_46 temp588_15)
        (= temp588_48 temp588_18)
        (= temp588_50 temp588_21)
        (= temp588_52 temp588_24)
        (= temp588_54 temp588_9)
        (= temp588_56 temp588_27)
        (= temp588_58 temp588_30)
        (= temp588_60 temp588_33)
        (= temp588_62 temp588_36)
        (= temp588_64 temp588_39)
        (= temp588_66 temp588_42)
        (= temp588_68 temp588_44)
        (= temp588_70 temp588_46)
        (= temp588_72 temp588_48)
        (= temp588_74 temp588_50)
        (= temp588_76 temp588_52)
        (= temp588_78 temp588_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp588_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp588_79))
(assert (= temp588_80 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp588_80)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp588_81 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp588_81)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp588_82 #x0000000000000000))
(assert (= var69546 temp588_82))
(assert (= temp588_83 #x0000000000000000))
(assert (= var1642798 temp588_83))
(assert (= temp588_84 #x0000000000000000))
(assert (= var1642799 temp588_84))
(assert (= var1967230 var1642798))
(assert (= var1967231 var1642799))
(assert (= temp588_85 #x0000000000000001))
(assert (= var2494874 temp588_85))
(assert (= temp588_86 #x0000000000000001))
(assert (= var3019162 temp588_86))
(model-add temp588_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp588_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp588_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp588_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






