(declare-fun temp0_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp0_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp0_3 () (_ BitVec 64))
(declare-fun temp0_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp0_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp0_6 () (_ BitVec 64))
(declare-fun temp0_7 () (_ BitVec 64))
(declare-fun temp0_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_9 () (_ BitVec 64))
(declare-fun temp0_10 () (_ BitVec 64))
(declare-fun temp0_11 () (_ BitVec 64))
(declare-fun temp0_12 () (_ BitVec 64))
(declare-fun temp0_13 () (_ BitVec 64))
(declare-fun temp0_14 () (_ BitVec 64))
(declare-fun temp0_15 () (_ BitVec 64))
(declare-fun temp0_16 () (_ BitVec 64))
(declare-fun temp0_17 () (_ BitVec 64))
(declare-fun temp0_18 () (_ BitVec 64))
(declare-fun temp0_19 () (_ BitVec 64))
(declare-fun temp0_20 () (_ BitVec 64))
(declare-fun temp0_21 () (_ BitVec 64))
(declare-fun temp0_22 () (_ BitVec 64))
(declare-fun temp0_23 () (_ BitVec 64))
(declare-fun temp0_24 () (_ BitVec 64))
(declare-fun temp0_25 () (_ BitVec 64))
(declare-fun temp0_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_27 () (_ BitVec 64))
(declare-fun temp0_28 () (_ BitVec 64))
(declare-fun temp0_29 () (_ BitVec 64))
(declare-fun temp0_30 () (_ BitVec 64))
(declare-fun temp0_31 () (_ BitVec 64))
(declare-fun temp0_32 () (_ BitVec 64))
(declare-fun temp0_33 () (_ BitVec 64))
(declare-fun temp0_34 () (_ BitVec 64))
(declare-fun temp0_35 () (_ BitVec 64))
(declare-fun temp0_36 () (_ BitVec 64))
(declare-fun temp0_37 () (_ BitVec 64))
(declare-fun temp0_38 () (_ BitVec 64))
(declare-fun temp0_39 () (_ BitVec 64))
(declare-fun temp0_40 () (_ BitVec 64))
(declare-fun temp0_41 () (_ BitVec 64))
(declare-fun temp0_42 () (_ BitVec 64))
(declare-fun temp0_43 () (_ BitVec 64))
(declare-fun temp0_44 () (_ BitVec 64))
(declare-fun temp0_45 () (_ BitVec 64))
(declare-fun temp0_46 () (_ BitVec 64))
(declare-fun temp0_47 () (_ BitVec 64))
(declare-fun temp0_48 () (_ BitVec 64))
(declare-fun temp0_49 () (_ BitVec 64))
(declare-fun temp0_50 () (_ BitVec 64))
(declare-fun temp0_51 () (_ BitVec 64))
(declare-fun temp0_52 () (_ BitVec 64))
(declare-fun temp0_53 () (_ BitVec 64))
(declare-fun temp0_54 () (_ BitVec 64))
(declare-fun temp0_55 () (_ BitVec 64))
(declare-fun temp0_56 () (_ BitVec 64))
(declare-fun temp0_57 () (_ BitVec 64))
(declare-fun temp0_58 () (_ BitVec 64))
(declare-fun temp0_59 () (_ BitVec 64))
(declare-fun temp0_60 () (_ BitVec 64))
(declare-fun temp0_61 () (_ BitVec 64))
(declare-fun temp0_62 () (_ BitVec 64))
(declare-fun temp0_63 () (_ BitVec 64))
(declare-fun temp0_64 () (_ BitVec 64))
(declare-fun temp0_65 () (_ BitVec 64))
(declare-fun temp0_66 () (_ BitVec 64))
(declare-fun temp0_67 () (_ BitVec 64))
(declare-fun temp0_68 () (_ BitVec 64))
(declare-fun temp0_69 () (_ BitVec 64))
(declare-fun temp0_70 () (_ BitVec 64))
(declare-fun temp0_71 () (_ BitVec 64))
(declare-fun temp0_72 () (_ BitVec 64))
(declare-fun temp0_73 () (_ BitVec 64))
(declare-fun temp0_74 () (_ BitVec 64))
(declare-fun temp0_75 () (_ BitVec 64))
(declare-fun temp0_76 () (_ BitVec 64))
(declare-fun temp0_77 () (_ BitVec 64))
(declare-fun temp0_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp0_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp0_80 () (_ BitVec 64))
(declare-fun var987402 () (_ BitVec 64))
(declare-fun var987367 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp0_81 () (_ BitVec 64))
(declare-fun temp0_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp0_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp0_84 () (_ BitVec 64))
(assert (= temp0_1 #x0000000000080000))
(assert (= var461925 temp0_1))
(assert (= temp0_2 #x0000000000080000))
(assert (= var724069 temp0_2))
(assert (= temp0_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp0_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_4 #x0000000000000000))
(assert (= var69380 temp0_4))
(assert (= temp0_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp0_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_6 #x0000000000000000))
(assert (= var69401 temp0_6))
(assert (= temp0_7 #x0000000000000000))
(assert (= temp0_8 temp0_7))
(assert (= temp0_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_8)))
(assert (= temp0_10 #x0000000000000001))
(assert (= temp0_11 temp0_10))
(assert (= temp0_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_11)))
(assert (= temp0_13 #x0000000000000002))
(assert (= temp0_14 temp0_13))
(assert (= temp0_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_14)))
(assert (= temp0_16 #x0000000000000003))
(assert (= temp0_17 temp0_16))
(assert (= temp0_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_17)))
(assert (= temp0_19 #x0000000000000004))
(assert (= temp0_20 temp0_19))
(assert (= temp0_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_20)))
(assert (= temp0_22 #x0000000000000005))
(assert (= temp0_23 temp0_22))
(assert (= temp0_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_23)))
(assert (= temp0_25 #x0000000000000000))
(assert (= temp0_26 temp0_25))
(assert (= temp0_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp0_26)))
(assert (= temp0_28 #x0000000000000001))
(assert (= temp0_29 temp0_28))
(assert (= temp0_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp0_29)))
(assert (= temp0_31 #x0000000000000002))
(assert (= temp0_32 temp0_31))
(assert (= temp0_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp0_32)))
(assert (= temp0_34 #x0000000000000003))
(assert (= temp0_35 temp0_34))
(assert (= temp0_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp0_35)))
(assert (= temp0_37 #x0000000000000004))
(assert (= temp0_38 temp0_37))
(assert (= temp0_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp0_38)))
(assert (= temp0_40 #x0000000000000005))
(assert (= temp0_41 temp0_40))
(assert (= temp0_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp0_41)))
(assert (= temp0_43 temp0_11))
(assert (= temp0_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp0_43)))
(assert (= temp0_45 temp0_14))
(assert (= temp0_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp0_45)))
(assert (= temp0_47 temp0_17))
(assert (= temp0_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp0_47)))
(assert (= temp0_49 temp0_20))
(assert (= temp0_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp0_49)))
(assert (= temp0_51 temp0_23))
(assert (= temp0_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp0_51)))
(assert (= temp0_53 temp0_8))
(assert (= temp0_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp0_53)))
(assert (= temp0_55 temp0_26))
(assert (= temp0_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_55)))
(assert (= temp0_57 temp0_29))
(assert (= temp0_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_57)))
(assert (= temp0_59 temp0_32))
(assert (= temp0_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_59)))
(assert (= temp0_61 temp0_35))
(assert (= temp0_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_61)))
(assert (= temp0_63 temp0_38))
(assert (= temp0_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_63)))
(assert (= temp0_65 temp0_41))
(assert (= temp0_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_65)))
(assert (= temp0_67 temp0_43))
(assert (= temp0_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_67)))
(assert (= temp0_69 temp0_45))
(assert (= temp0_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_69)))
(assert (= temp0_71 temp0_47))
(assert (= temp0_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_71)))
(assert (= temp0_73 temp0_49))
(assert (= temp0_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_73)))
(assert (= temp0_75 temp0_51))
(assert (= temp0_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_75)))
(assert (= temp0_77 temp0_53))
(assert (= temp0_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_77)))
(assert (= (and true
        (= temp0_44 temp0_12)
        (= temp0_46 temp0_15)
        (= temp0_48 temp0_18)
        (= temp0_50 temp0_21)
        (= temp0_52 temp0_24)
        (= temp0_54 temp0_9)
        (= temp0_56 temp0_27)
        (= temp0_58 temp0_30)
        (= temp0_60 temp0_33)
        (= temp0_62 temp0_36)
        (= temp0_64 temp0_39)
        (= temp0_66 temp0_42)
        (= temp0_68 temp0_44)
        (= temp0_70 temp0_46)
        (= temp0_72 temp0_48)
        (= temp0_74 temp0_50)
        (= temp0_76 temp0_52)
        (= temp0_78 temp0_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp0_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp0_79))
(assert (= temp0_80 #x0000000000000001))
(assert (= var987402 temp0_80))
(assert (= var987367 var987402))
(assert (= var69428 var987367))
(assert (= temp0_81 #x0000000000000001))
(assert (= var69428 temp0_81))
(assert (= temp0_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp0_82) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp0_83) #x0000000000000001 #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp0_84 #x0000000000000001))
(assert (= var69546 temp0_84))
(model-add temp0_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp0_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp0_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp0_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






