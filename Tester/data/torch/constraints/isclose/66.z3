(declare-fun temp66_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp66_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp66_3 () (_ BitVec 64))
(declare-fun temp66_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp66_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp66_6 () (_ BitVec 64))
(declare-fun temp66_7 () (_ BitVec 64))
(declare-fun temp66_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp66_9 () (_ BitVec 64))
(declare-fun temp66_10 () (_ BitVec 64))
(declare-fun temp66_11 () (_ BitVec 64))
(declare-fun temp66_12 () (_ BitVec 64))
(declare-fun temp66_13 () (_ BitVec 64))
(declare-fun temp66_14 () (_ BitVec 64))
(declare-fun temp66_15 () (_ BitVec 64))
(declare-fun temp66_16 () (_ BitVec 64))
(declare-fun temp66_17 () (_ BitVec 64))
(declare-fun temp66_18 () (_ BitVec 64))
(declare-fun temp66_19 () (_ BitVec 64))
(declare-fun temp66_20 () (_ BitVec 64))
(declare-fun temp66_21 () (_ BitVec 64))
(declare-fun temp66_22 () (_ BitVec 64))
(declare-fun temp66_23 () (_ BitVec 64))
(declare-fun temp66_24 () (_ BitVec 64))
(declare-fun temp66_25 () (_ BitVec 64))
(declare-fun temp66_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp66_27 () (_ BitVec 64))
(declare-fun temp66_28 () (_ BitVec 64))
(declare-fun temp66_29 () (_ BitVec 64))
(declare-fun temp66_30 () (_ BitVec 64))
(declare-fun temp66_31 () (_ BitVec 64))
(declare-fun temp66_32 () (_ BitVec 64))
(declare-fun temp66_33 () (_ BitVec 64))
(declare-fun temp66_34 () (_ BitVec 64))
(declare-fun temp66_35 () (_ BitVec 64))
(declare-fun temp66_36 () (_ BitVec 64))
(declare-fun temp66_37 () (_ BitVec 64))
(declare-fun temp66_38 () (_ BitVec 64))
(declare-fun temp66_39 () (_ BitVec 64))
(declare-fun temp66_40 () (_ BitVec 64))
(declare-fun temp66_41 () (_ BitVec 64))
(declare-fun temp66_42 () (_ BitVec 64))
(declare-fun temp66_43 () (_ BitVec 64))
(declare-fun temp66_44 () (_ BitVec 64))
(declare-fun temp66_45 () (_ BitVec 64))
(declare-fun temp66_46 () (_ BitVec 64))
(declare-fun temp66_47 () (_ BitVec 64))
(declare-fun temp66_48 () (_ BitVec 64))
(declare-fun temp66_49 () (_ BitVec 64))
(declare-fun temp66_50 () (_ BitVec 64))
(declare-fun temp66_51 () (_ BitVec 64))
(declare-fun temp66_52 () (_ BitVec 64))
(declare-fun temp66_53 () (_ BitVec 64))
(declare-fun temp66_54 () (_ BitVec 64))
(declare-fun temp66_55 () (_ BitVec 64))
(declare-fun temp66_56 () (_ BitVec 64))
(declare-fun temp66_57 () (_ BitVec 64))
(declare-fun temp66_58 () (_ BitVec 64))
(declare-fun temp66_59 () (_ BitVec 64))
(declare-fun temp66_60 () (_ BitVec 64))
(declare-fun temp66_61 () (_ BitVec 64))
(declare-fun temp66_62 () (_ BitVec 64))
(declare-fun temp66_63 () (_ BitVec 64))
(declare-fun temp66_64 () (_ BitVec 64))
(declare-fun temp66_65 () (_ BitVec 64))
(declare-fun temp66_66 () (_ BitVec 64))
(declare-fun temp66_67 () (_ BitVec 64))
(declare-fun temp66_68 () (_ BitVec 64))
(declare-fun temp66_69 () (_ BitVec 64))
(declare-fun temp66_70 () (_ BitVec 64))
(declare-fun temp66_71 () (_ BitVec 64))
(declare-fun temp66_72 () (_ BitVec 64))
(declare-fun temp66_73 () (_ BitVec 64))
(declare-fun temp66_74 () (_ BitVec 64))
(declare-fun temp66_75 () (_ BitVec 64))
(declare-fun temp66_76 () (_ BitVec 64))
(declare-fun temp66_77 () (_ BitVec 64))
(declare-fun temp66_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp66_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp66_80 () (_ BitVec 64))
(declare-fun var987402 () (_ BitVec 64))
(declare-fun var987367 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp66_81 () (_ BitVec 64))
(declare-fun temp66_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp66_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp66_84 () (_ BitVec 64))
(declare-fun temp66_85 () (_ BitVec 64))
(declare-fun var1970478 () (_ BitVec 64))
(declare-fun temp66_86 () (_ BitVec 64))
(declare-fun var1970479 () (_ BitVec 64))
(declare-fun var2294910 () (_ BitVec 64))
(declare-fun var2294911 () (_ BitVec 64))
(declare-fun temp66_87 () (_ BitVec 64))
(declare-fun var2822554 () (_ BitVec 64))
(declare-fun temp66_88 () (_ BitVec 64))
(declare-fun var3346842 () (_ BitVec 64))
(declare-fun temp66_89 () (_ BitVec 64))
(declare-fun var4264867 () (_ BitVec 64))
(declare-fun temp66_91 () (_ BitVec 64))
(declare-fun temp66_90 () (_ BitVec 64))
(assert (= temp66_1 #x0000000000080000))
(assert (= var461925 temp66_1))
(assert (= temp66_2 #x0000000000080000))
(assert (= var724069 temp66_2))
(assert (= temp66_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp66_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_4 #x0000000000000000))
(assert (= var69380 temp66_4))
(assert (= temp66_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp66_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_6 #x0000000000000000))
(assert (= var69401 temp66_6))
(assert (= temp66_7 #x0000000000000000))
(assert (= temp66_8 temp66_7))
(assert (= temp66_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_8)))
(assert (= temp66_10 #x0000000000000001))
(assert (= temp66_11 temp66_10))
(assert (= temp66_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_11)))
(assert (= temp66_13 #x0000000000000002))
(assert (= temp66_14 temp66_13))
(assert (= temp66_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_14)))
(assert (= temp66_16 #x0000000000000003))
(assert (= temp66_17 temp66_16))
(assert (= temp66_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_17)))
(assert (= temp66_19 #x0000000000000004))
(assert (= temp66_20 temp66_19))
(assert (= temp66_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_20)))
(assert (= temp66_22 #x0000000000000005))
(assert (= temp66_23 temp66_22))
(assert (= temp66_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_23)))
(assert (= temp66_25 #x0000000000000000))
(assert (= temp66_26 temp66_25))
(assert (= temp66_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp66_26)))
(assert (= temp66_28 #x0000000000000001))
(assert (= temp66_29 temp66_28))
(assert (= temp66_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp66_29)))
(assert (= temp66_31 #x0000000000000002))
(assert (= temp66_32 temp66_31))
(assert (= temp66_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp66_32)))
(assert (= temp66_34 #x0000000000000003))
(assert (= temp66_35 temp66_34))
(assert (= temp66_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp66_35)))
(assert (= temp66_37 #x0000000000000004))
(assert (= temp66_38 temp66_37))
(assert (= temp66_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp66_38)))
(assert (= temp66_40 #x0000000000000005))
(assert (= temp66_41 temp66_40))
(assert (= temp66_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp66_41)))
(assert (= temp66_43 temp66_11))
(assert (= temp66_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp66_43)))
(assert (= temp66_45 temp66_14))
(assert (= temp66_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp66_45)))
(assert (= temp66_47 temp66_17))
(assert (= temp66_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp66_47)))
(assert (= temp66_49 temp66_20))
(assert (= temp66_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp66_49)))
(assert (= temp66_51 temp66_23))
(assert (= temp66_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp66_51)))
(assert (= temp66_53 temp66_8))
(assert (= temp66_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp66_53)))
(assert (= temp66_55 temp66_26))
(assert (= temp66_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_55)))
(assert (= temp66_57 temp66_29))
(assert (= temp66_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_57)))
(assert (= temp66_59 temp66_32))
(assert (= temp66_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_59)))
(assert (= temp66_61 temp66_35))
(assert (= temp66_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_61)))
(assert (= temp66_63 temp66_38))
(assert (= temp66_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_63)))
(assert (= temp66_65 temp66_41))
(assert (= temp66_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_65)))
(assert (= temp66_67 temp66_43))
(assert (= temp66_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_67)))
(assert (= temp66_69 temp66_45))
(assert (= temp66_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_69)))
(assert (= temp66_71 temp66_47))
(assert (= temp66_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_71)))
(assert (= temp66_73 temp66_49))
(assert (= temp66_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_73)))
(assert (= temp66_75 temp66_51))
(assert (= temp66_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_75)))
(assert (= temp66_77 temp66_53))
(assert (= temp66_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_77)))
(assert (= (and true
        (= temp66_44 temp66_12)
        (= temp66_46 temp66_15)
        (= temp66_48 temp66_18)
        (= temp66_50 temp66_21)
        (= temp66_52 temp66_24)
        (= temp66_54 temp66_9)
        (= temp66_56 temp66_27)
        (= temp66_58 temp66_30)
        (= temp66_60 temp66_33)
        (= temp66_62 temp66_36)
        (= temp66_64 temp66_39)
        (= temp66_66 temp66_42)
        (= temp66_68 temp66_44)
        (= temp66_70 temp66_46)
        (= temp66_72 temp66_48)
        (= temp66_74 temp66_50)
        (= temp66_76 temp66_52)
        (= temp66_78 temp66_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp66_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp66_79))
(assert (= temp66_80 #x0000000000000001))
(assert (= var987402 temp66_80))
(assert (= var987367 var987402))
(assert (= var69428 var987367))
(assert (= temp66_81 #x0000000000000001))
(assert (= var69428 temp66_81))
(assert (= temp66_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp66_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp66_83)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp66_84 #x0000000000000000))
(assert (= var69546 temp66_84))
(assert (= temp66_85 #x0000000000000000))
(assert (= var1970478 temp66_85))
(assert (= temp66_86 #x0000000000000000))
(assert (= var1970479 temp66_86))
(assert (= var2294910 var1970478))
(assert (= var2294911 var1970479))
(assert (= temp66_87 #x0000000000000001))
(assert (= var2822554 temp66_87))
(assert (= temp66_88 #x0000000000000001))
(assert (= var3346842 temp66_88))
(assert (= temp66_89 #x000000000000000b))
(assert (= var4264867 temp66_89))
(assert (= temp66_91 #x0000000000000001))
(assert (= temp66_90 temp66_91))
(model-add temp66_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp66_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp66_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp66_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






