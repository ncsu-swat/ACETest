(declare-fun temp900_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp900_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp900_3 () (_ BitVec 64))
(declare-fun temp900_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp900_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp900_6 () (_ BitVec 64))
(declare-fun temp900_7 () (_ BitVec 64))
(declare-fun temp900_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp900_9 () (_ BitVec 64))
(declare-fun temp900_10 () (_ BitVec 64))
(declare-fun temp900_11 () (_ BitVec 64))
(declare-fun temp900_12 () (_ BitVec 64))
(declare-fun temp900_13 () (_ BitVec 64))
(declare-fun temp900_14 () (_ BitVec 64))
(declare-fun temp900_15 () (_ BitVec 64))
(declare-fun temp900_16 () (_ BitVec 64))
(declare-fun temp900_17 () (_ BitVec 64))
(declare-fun temp900_18 () (_ BitVec 64))
(declare-fun temp900_19 () (_ BitVec 64))
(declare-fun temp900_20 () (_ BitVec 64))
(declare-fun temp900_21 () (_ BitVec 64))
(declare-fun temp900_22 () (_ BitVec 64))
(declare-fun temp900_23 () (_ BitVec 64))
(declare-fun temp900_24 () (_ BitVec 64))
(declare-fun temp900_25 () (_ BitVec 64))
(declare-fun temp900_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp900_27 () (_ BitVec 64))
(declare-fun temp900_28 () (_ BitVec 64))
(declare-fun temp900_29 () (_ BitVec 64))
(declare-fun temp900_30 () (_ BitVec 64))
(declare-fun temp900_31 () (_ BitVec 64))
(declare-fun temp900_32 () (_ BitVec 64))
(declare-fun temp900_33 () (_ BitVec 64))
(declare-fun temp900_34 () (_ BitVec 64))
(declare-fun temp900_35 () (_ BitVec 64))
(declare-fun temp900_36 () (_ BitVec 64))
(declare-fun temp900_37 () (_ BitVec 64))
(declare-fun temp900_38 () (_ BitVec 64))
(declare-fun temp900_39 () (_ BitVec 64))
(declare-fun temp900_40 () (_ BitVec 64))
(declare-fun temp900_41 () (_ BitVec 64))
(declare-fun temp900_42 () (_ BitVec 64))
(declare-fun temp900_43 () (_ BitVec 64))
(declare-fun temp900_44 () (_ BitVec 64))
(declare-fun temp900_45 () (_ BitVec 64))
(declare-fun temp900_46 () (_ BitVec 64))
(declare-fun temp900_47 () (_ BitVec 64))
(declare-fun temp900_48 () (_ BitVec 64))
(declare-fun temp900_49 () (_ BitVec 64))
(declare-fun temp900_50 () (_ BitVec 64))
(declare-fun temp900_51 () (_ BitVec 64))
(declare-fun temp900_52 () (_ BitVec 64))
(declare-fun temp900_53 () (_ BitVec 64))
(declare-fun temp900_54 () (_ BitVec 64))
(declare-fun temp900_55 () (_ BitVec 64))
(declare-fun temp900_56 () (_ BitVec 64))
(declare-fun temp900_57 () (_ BitVec 64))
(declare-fun temp900_58 () (_ BitVec 64))
(declare-fun temp900_59 () (_ BitVec 64))
(declare-fun temp900_60 () (_ BitVec 64))
(declare-fun temp900_61 () (_ BitVec 64))
(declare-fun temp900_62 () (_ BitVec 64))
(declare-fun temp900_63 () (_ BitVec 64))
(declare-fun temp900_64 () (_ BitVec 64))
(declare-fun temp900_65 () (_ BitVec 64))
(declare-fun temp900_66 () (_ BitVec 64))
(declare-fun temp900_67 () (_ BitVec 64))
(declare-fun temp900_68 () (_ BitVec 64))
(declare-fun temp900_69 () (_ BitVec 64))
(declare-fun temp900_70 () (_ BitVec 64))
(declare-fun temp900_71 () (_ BitVec 64))
(declare-fun temp900_72 () (_ BitVec 64))
(declare-fun temp900_73 () (_ BitVec 64))
(declare-fun temp900_74 () (_ BitVec 64))
(declare-fun temp900_75 () (_ BitVec 64))
(declare-fun temp900_76 () (_ BitVec 64))
(declare-fun temp900_77 () (_ BitVec 64))
(declare-fun temp900_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp900_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp900_80 () (_ BitVec 64))
(declare-fun var1444989 () (_ BitVec 64))
(declare-fun temp900_81 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp900_82 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp900_83 () (_ BitVec 64))
(declare-fun temp900_84 () (_ BitVec 64))
(declare-fun var2298158 () (_ BitVec 64))
(declare-fun temp900_85 () (_ BitVec 64))
(declare-fun var2298159 () (_ BitVec 64))
(declare-fun var2622590 () (_ BitVec 64))
(declare-fun var2622591 () (_ BitVec 64))
(declare-fun temp900_86 () (_ BitVec 64))
(declare-fun var3346842 () (_ BitVec 64))
(declare-fun temp900_87 () (_ BitVec 64))
(declare-fun var3871130 () (_ BitVec 64))
(declare-fun temp900_88 () (_ BitVec 64))
(declare-fun var4395939 () (_ BitVec 64))
(declare-fun temp900_90 () (_ BitVec 64))
(declare-fun temp900_89 () (_ BitVec 64))
(assert (= temp900_1 #x0000000000080000))
(assert (= var461925 temp900_1))
(assert (= temp900_2 #x0000000000080000))
(assert (= var724069 temp900_2))
(assert (= temp900_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp900_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp900_4 #x0000000000000000))
(assert (= var69380 temp900_4))
(assert (= temp900_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp900_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp900_6 #x0000000000000000))
(assert (= var69401 temp900_6))
(assert (= temp900_7 #x0000000000000000))
(assert (= temp900_8 temp900_7))
(assert (= temp900_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp900_8)))
(assert (= temp900_10 #x0000000000000001))
(assert (= temp900_11 temp900_10))
(assert (= temp900_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp900_11)))
(assert (= temp900_13 #x0000000000000002))
(assert (= temp900_14 temp900_13))
(assert (= temp900_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp900_14)))
(assert (= temp900_16 #x0000000000000003))
(assert (= temp900_17 temp900_16))
(assert (= temp900_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp900_17)))
(assert (= temp900_19 #x0000000000000004))
(assert (= temp900_20 temp900_19))
(assert (= temp900_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp900_20)))
(assert (= temp900_22 #x0000000000000005))
(assert (= temp900_23 temp900_22))
(assert (= temp900_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp900_23)))
(assert (= temp900_25 #x0000000000000000))
(assert (= temp900_26 temp900_25))
(assert (= temp900_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp900_26)))
(assert (= temp900_28 #x0000000000000001))
(assert (= temp900_29 temp900_28))
(assert (= temp900_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp900_29)))
(assert (= temp900_31 #x0000000000000002))
(assert (= temp900_32 temp900_31))
(assert (= temp900_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp900_32)))
(assert (= temp900_34 #x0000000000000003))
(assert (= temp900_35 temp900_34))
(assert (= temp900_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp900_35)))
(assert (= temp900_37 #x0000000000000004))
(assert (= temp900_38 temp900_37))
(assert (= temp900_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp900_38)))
(assert (= temp900_40 #x0000000000000005))
(assert (= temp900_41 temp900_40))
(assert (= temp900_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp900_41)))
(assert (= temp900_43 temp900_11))
(assert (= temp900_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp900_43)))
(assert (= temp900_45 temp900_14))
(assert (= temp900_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp900_45)))
(assert (= temp900_47 temp900_17))
(assert (= temp900_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp900_47)))
(assert (= temp900_49 temp900_20))
(assert (= temp900_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp900_49)))
(assert (= temp900_51 temp900_23))
(assert (= temp900_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp900_51)))
(assert (= temp900_53 temp900_8))
(assert (= temp900_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp900_53)))
(assert (= temp900_55 temp900_26))
(assert (= temp900_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp900_55)))
(assert (= temp900_57 temp900_29))
(assert (= temp900_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp900_57)))
(assert (= temp900_59 temp900_32))
(assert (= temp900_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp900_59)))
(assert (= temp900_61 temp900_35))
(assert (= temp900_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp900_61)))
(assert (= temp900_63 temp900_38))
(assert (= temp900_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp900_63)))
(assert (= temp900_65 temp900_41))
(assert (= temp900_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp900_65)))
(assert (= temp900_67 temp900_43))
(assert (= temp900_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp900_67)))
(assert (= temp900_69 temp900_45))
(assert (= temp900_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp900_69)))
(assert (= temp900_71 temp900_47))
(assert (= temp900_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp900_71)))
(assert (= temp900_73 temp900_49))
(assert (= temp900_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp900_73)))
(assert (= temp900_75 temp900_51))
(assert (= temp900_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp900_75)))
(assert (= temp900_77 temp900_53))
(assert (= temp900_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp900_77)))
(assert (= (and true
        (= temp900_44 temp900_12)
        (= temp900_46 temp900_15)
        (= temp900_48 temp900_18)
        (= temp900_50 temp900_21)
        (= temp900_52 temp900_24)
        (= temp900_54 temp900_9)
        (= temp900_56 temp900_27)
        (= temp900_58 temp900_30)
        (= temp900_60 temp900_33)
        (= temp900_62 temp900_36)
        (= temp900_64 temp900_39)
        (= temp900_66 temp900_42)
        (= temp900_68 temp900_44)
        (= temp900_70 temp900_46)
        (= temp900_72 temp900_48)
        (= temp900_74 temp900_50)
        (= temp900_76 temp900_52)
        (= temp900_78 temp900_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp900_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp900_79))
(assert (= temp900_80 #x0000000009c00400))
(assert (= var1444989 temp900_80))
(assert (= temp900_81 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp900_81)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp900_82 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp900_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp900_83 #x0000000000000000))
(assert (= var69546 temp900_83))
(assert (= temp900_84 #x0000000000000000))
(assert (= var2298158 temp900_84))
(assert (= temp900_85 #x0000000000000000))
(assert (= var2298159 temp900_85))
(assert (= var2622590 var2298158))
(assert (= var2622591 var2298159))
(assert (= temp900_86 #x0000000000000001))
(assert (= var3346842 temp900_86))
(assert (= temp900_87 #x0000000000000001))
(assert (= var3871130 temp900_87))
(assert (= temp900_88 #x000000000000000b))
(assert (= var4395939 temp900_88))
(assert (= temp900_90 #x0000000000000001))
(assert (= temp900_89 temp900_90))
(model-add temp900_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp900_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp900_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp900_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






