(declare-fun temp265_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp265_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp265_3 () (_ BitVec 64))
(declare-fun temp265_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp265_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp265_6 () (_ BitVec 64))
(declare-fun temp265_7 () (_ BitVec 64))
(declare-fun temp265_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp265_9 () (_ BitVec 64))
(declare-fun temp265_10 () (_ BitVec 64))
(declare-fun temp265_11 () (_ BitVec 64))
(declare-fun temp265_12 () (_ BitVec 64))
(declare-fun temp265_13 () (_ BitVec 64))
(declare-fun temp265_14 () (_ BitVec 64))
(declare-fun temp265_15 () (_ BitVec 64))
(declare-fun temp265_16 () (_ BitVec 64))
(declare-fun temp265_17 () (_ BitVec 64))
(declare-fun temp265_18 () (_ BitVec 64))
(declare-fun temp265_19 () (_ BitVec 64))
(declare-fun temp265_20 () (_ BitVec 64))
(declare-fun temp265_21 () (_ BitVec 64))
(declare-fun temp265_22 () (_ BitVec 64))
(declare-fun temp265_23 () (_ BitVec 64))
(declare-fun temp265_24 () (_ BitVec 64))
(declare-fun temp265_25 () (_ BitVec 64))
(declare-fun temp265_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp265_27 () (_ BitVec 64))
(declare-fun temp265_28 () (_ BitVec 64))
(declare-fun temp265_29 () (_ BitVec 64))
(declare-fun temp265_30 () (_ BitVec 64))
(declare-fun temp265_31 () (_ BitVec 64))
(declare-fun temp265_32 () (_ BitVec 64))
(declare-fun temp265_33 () (_ BitVec 64))
(declare-fun temp265_34 () (_ BitVec 64))
(declare-fun temp265_35 () (_ BitVec 64))
(declare-fun temp265_36 () (_ BitVec 64))
(declare-fun temp265_37 () (_ BitVec 64))
(declare-fun temp265_38 () (_ BitVec 64))
(declare-fun temp265_39 () (_ BitVec 64))
(declare-fun temp265_40 () (_ BitVec 64))
(declare-fun temp265_41 () (_ BitVec 64))
(declare-fun temp265_42 () (_ BitVec 64))
(declare-fun temp265_43 () (_ BitVec 64))
(declare-fun temp265_44 () (_ BitVec 64))
(declare-fun temp265_45 () (_ BitVec 64))
(declare-fun temp265_46 () (_ BitVec 64))
(declare-fun temp265_47 () (_ BitVec 64))
(declare-fun temp265_48 () (_ BitVec 64))
(declare-fun temp265_49 () (_ BitVec 64))
(declare-fun temp265_50 () (_ BitVec 64))
(declare-fun temp265_51 () (_ BitVec 64))
(declare-fun temp265_52 () (_ BitVec 64))
(declare-fun temp265_53 () (_ BitVec 64))
(declare-fun temp265_54 () (_ BitVec 64))
(declare-fun temp265_55 () (_ BitVec 64))
(declare-fun temp265_56 () (_ BitVec 64))
(declare-fun temp265_57 () (_ BitVec 64))
(declare-fun temp265_58 () (_ BitVec 64))
(declare-fun temp265_59 () (_ BitVec 64))
(declare-fun temp265_60 () (_ BitVec 64))
(declare-fun temp265_61 () (_ BitVec 64))
(declare-fun temp265_62 () (_ BitVec 64))
(declare-fun temp265_63 () (_ BitVec 64))
(declare-fun temp265_64 () (_ BitVec 64))
(declare-fun temp265_65 () (_ BitVec 64))
(declare-fun temp265_66 () (_ BitVec 64))
(declare-fun temp265_67 () (_ BitVec 64))
(declare-fun temp265_68 () (_ BitVec 64))
(declare-fun temp265_69 () (_ BitVec 64))
(declare-fun temp265_70 () (_ BitVec 64))
(declare-fun temp265_71 () (_ BitVec 64))
(declare-fun temp265_72 () (_ BitVec 64))
(declare-fun temp265_73 () (_ BitVec 64))
(declare-fun temp265_74 () (_ BitVec 64))
(declare-fun temp265_75 () (_ BitVec 64))
(declare-fun temp265_76 () (_ BitVec 64))
(declare-fun temp265_77 () (_ BitVec 64))
(declare-fun temp265_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp265_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp265_80 () (_ BitVec 64))
(declare-fun var1248381 () (_ BitVec 64))
(declare-fun temp265_81 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp265_82 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp265_83 () (_ BitVec 64))
(declare-fun temp265_84 () (_ BitVec 64))
(declare-fun var2101550 () (_ BitVec 64))
(declare-fun temp265_85 () (_ BitVec 64))
(declare-fun var2101551 () (_ BitVec 64))
(declare-fun var2425982 () (_ BitVec 64))
(declare-fun var2425983 () (_ BitVec 64))
(declare-fun temp265_86 () (_ BitVec 64))
(declare-fun var2756910 () (_ BitVec 64))
(declare-fun temp265_87 () (_ BitVec 64))
(declare-fun var2756911 () (_ BitVec 64))
(declare-fun var3081342 () (_ BitVec 64))
(declare-fun var3081343 () (_ BitVec 64))
(declare-fun temp265_88 () (_ BitVec 64))
(declare-fun var3608986 () (_ BitVec 64))
(declare-fun temp265_89 () (_ BitVec 64))
(declare-fun var4133274 () (_ BitVec 64))
(declare-fun temp265_90 () (_ BitVec 64))
(declare-fun var5641123 () (_ BitVec 64))
(declare-fun temp265_92 () (_ BitVec 64))
(declare-fun temp265_91 () (_ BitVec 64))
(assert (= temp265_1 #x0000000000080000))
(assert (= var461925 temp265_1))
(assert (= temp265_2 #x0000000000080000))
(assert (= var724069 temp265_2))
(assert (= temp265_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp265_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp265_4 #x0000000000000000))
(assert (= var69380 temp265_4))
(assert (= temp265_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp265_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp265_6 #x0000000000000000))
(assert (= var69401 temp265_6))
(assert (= temp265_7 #x0000000000000000))
(assert (= temp265_8 temp265_7))
(assert (= temp265_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp265_8)))
(assert (= temp265_10 #x0000000000000001))
(assert (= temp265_11 temp265_10))
(assert (= temp265_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp265_11)))
(assert (= temp265_13 #x0000000000000002))
(assert (= temp265_14 temp265_13))
(assert (= temp265_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp265_14)))
(assert (= temp265_16 #x0000000000000003))
(assert (= temp265_17 temp265_16))
(assert (= temp265_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp265_17)))
(assert (= temp265_19 #x0000000000000004))
(assert (= temp265_20 temp265_19))
(assert (= temp265_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp265_20)))
(assert (= temp265_22 #x0000000000000005))
(assert (= temp265_23 temp265_22))
(assert (= temp265_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp265_23)))
(assert (= temp265_25 #x0000000000000000))
(assert (= temp265_26 temp265_25))
(assert (= temp265_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp265_26)))
(assert (= temp265_28 #x0000000000000001))
(assert (= temp265_29 temp265_28))
(assert (= temp265_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp265_29)))
(assert (= temp265_31 #x0000000000000002))
(assert (= temp265_32 temp265_31))
(assert (= temp265_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp265_32)))
(assert (= temp265_34 #x0000000000000003))
(assert (= temp265_35 temp265_34))
(assert (= temp265_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp265_35)))
(assert (= temp265_37 #x0000000000000004))
(assert (= temp265_38 temp265_37))
(assert (= temp265_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp265_38)))
(assert (= temp265_40 #x0000000000000005))
(assert (= temp265_41 temp265_40))
(assert (= temp265_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp265_41)))
(assert (= temp265_43 temp265_11))
(assert (= temp265_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp265_43)))
(assert (= temp265_45 temp265_14))
(assert (= temp265_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp265_45)))
(assert (= temp265_47 temp265_17))
(assert (= temp265_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp265_47)))
(assert (= temp265_49 temp265_20))
(assert (= temp265_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp265_49)))
(assert (= temp265_51 temp265_23))
(assert (= temp265_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp265_51)))
(assert (= temp265_53 temp265_8))
(assert (= temp265_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp265_53)))
(assert (= temp265_55 temp265_26))
(assert (= temp265_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp265_55)))
(assert (= temp265_57 temp265_29))
(assert (= temp265_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp265_57)))
(assert (= temp265_59 temp265_32))
(assert (= temp265_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp265_59)))
(assert (= temp265_61 temp265_35))
(assert (= temp265_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp265_61)))
(assert (= temp265_63 temp265_38))
(assert (= temp265_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp265_63)))
(assert (= temp265_65 temp265_41))
(assert (= temp265_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp265_65)))
(assert (= temp265_67 temp265_43))
(assert (= temp265_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp265_67)))
(assert (= temp265_69 temp265_45))
(assert (= temp265_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp265_69)))
(assert (= temp265_71 temp265_47))
(assert (= temp265_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp265_71)))
(assert (= temp265_73 temp265_49))
(assert (= temp265_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp265_73)))
(assert (= temp265_75 temp265_51))
(assert (= temp265_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp265_75)))
(assert (= temp265_77 temp265_53))
(assert (= temp265_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp265_77)))
(assert (= (and true
        (= temp265_44 temp265_12)
        (= temp265_46 temp265_15)
        (= temp265_48 temp265_18)
        (= temp265_50 temp265_21)
        (= temp265_52 temp265_24)
        (= temp265_54 temp265_9)
        (= temp265_56 temp265_27)
        (= temp265_58 temp265_30)
        (= temp265_60 temp265_33)
        (= temp265_62 temp265_36)
        (= temp265_64 temp265_39)
        (= temp265_66 temp265_42)
        (= temp265_68 temp265_44)
        (= temp265_70 temp265_46)
        (= temp265_72 temp265_48)
        (= temp265_74 temp265_50)
        (= temp265_76 temp265_52)
        (= temp265_78 temp265_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp265_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp265_79))
(assert (= temp265_80 #x0000000009c00400))
(assert (= var1248381 temp265_80))
(assert (= temp265_81 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp265_81)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp265_82 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp265_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp265_83 #x0000000000000000))
(assert (= var69546 temp265_83))
(assert (= temp265_84 #x0000000000000000))
(assert (= var2101550 temp265_84))
(assert (= temp265_85 #x0000000000000000))
(assert (= var2101551 temp265_85))
(assert (= var2425982 var2101550))
(assert (= var2425983 var2101551))
(assert (= temp265_86 #x0000000000000000))
(assert (= var2756910 temp265_86))
(assert (= temp265_87 #x0000000000000000))
(assert (= var2756911 temp265_87))
(assert (= var3081342 var2756910))
(assert (= var3081343 var2756911))
(assert (= temp265_88 #x0000000000000001))
(assert (= var3608986 temp265_88))
(assert (= temp265_89 #x0000000000000001))
(assert (= var4133274 temp265_89))
(assert (= temp265_90 #x000000000000000b))
(assert (= var5641123 temp265_90))
(assert (= temp265_92 #x0000000000000001))
(assert (= temp265_91 temp265_92))
(model-add temp265_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp265_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp265_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp265_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






