(declare-fun temp58_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp58_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp58_3 () (_ BitVec 64))
(declare-fun temp58_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp58_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp58_6 () (_ BitVec 64))
(declare-fun temp58_7 () (_ BitVec 64))
(declare-fun temp58_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp58_9 () (_ BitVec 64))
(declare-fun temp58_10 () (_ BitVec 64))
(declare-fun temp58_11 () (_ BitVec 64))
(declare-fun temp58_12 () (_ BitVec 64))
(declare-fun temp58_13 () (_ BitVec 64))
(declare-fun temp58_14 () (_ BitVec 64))
(declare-fun temp58_15 () (_ BitVec 64))
(declare-fun temp58_16 () (_ BitVec 64))
(declare-fun temp58_17 () (_ BitVec 64))
(declare-fun temp58_18 () (_ BitVec 64))
(declare-fun temp58_19 () (_ BitVec 64))
(declare-fun temp58_20 () (_ BitVec 64))
(declare-fun temp58_21 () (_ BitVec 64))
(declare-fun temp58_22 () (_ BitVec 64))
(declare-fun temp58_23 () (_ BitVec 64))
(declare-fun temp58_24 () (_ BitVec 64))
(declare-fun temp58_25 () (_ BitVec 64))
(declare-fun temp58_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp58_27 () (_ BitVec 64))
(declare-fun temp58_28 () (_ BitVec 64))
(declare-fun temp58_29 () (_ BitVec 64))
(declare-fun temp58_30 () (_ BitVec 64))
(declare-fun temp58_31 () (_ BitVec 64))
(declare-fun temp58_32 () (_ BitVec 64))
(declare-fun temp58_33 () (_ BitVec 64))
(declare-fun temp58_34 () (_ BitVec 64))
(declare-fun temp58_35 () (_ BitVec 64))
(declare-fun temp58_36 () (_ BitVec 64))
(declare-fun temp58_37 () (_ BitVec 64))
(declare-fun temp58_38 () (_ BitVec 64))
(declare-fun temp58_39 () (_ BitVec 64))
(declare-fun temp58_40 () (_ BitVec 64))
(declare-fun temp58_41 () (_ BitVec 64))
(declare-fun temp58_42 () (_ BitVec 64))
(declare-fun temp58_43 () (_ BitVec 64))
(declare-fun temp58_44 () (_ BitVec 64))
(declare-fun temp58_45 () (_ BitVec 64))
(declare-fun temp58_46 () (_ BitVec 64))
(declare-fun temp58_47 () (_ BitVec 64))
(declare-fun temp58_48 () (_ BitVec 64))
(declare-fun temp58_49 () (_ BitVec 64))
(declare-fun temp58_50 () (_ BitVec 64))
(declare-fun temp58_51 () (_ BitVec 64))
(declare-fun temp58_52 () (_ BitVec 64))
(declare-fun temp58_53 () (_ BitVec 64))
(declare-fun temp58_54 () (_ BitVec 64))
(declare-fun temp58_55 () (_ BitVec 64))
(declare-fun temp58_56 () (_ BitVec 64))
(declare-fun temp58_57 () (_ BitVec 64))
(declare-fun temp58_58 () (_ BitVec 64))
(declare-fun temp58_59 () (_ BitVec 64))
(declare-fun temp58_60 () (_ BitVec 64))
(declare-fun temp58_61 () (_ BitVec 64))
(declare-fun temp58_62 () (_ BitVec 64))
(declare-fun temp58_63 () (_ BitVec 64))
(declare-fun temp58_64 () (_ BitVec 64))
(declare-fun temp58_65 () (_ BitVec 64))
(declare-fun temp58_66 () (_ BitVec 64))
(declare-fun temp58_67 () (_ BitVec 64))
(declare-fun temp58_68 () (_ BitVec 64))
(declare-fun temp58_69 () (_ BitVec 64))
(declare-fun temp58_70 () (_ BitVec 64))
(declare-fun temp58_71 () (_ BitVec 64))
(declare-fun temp58_72 () (_ BitVec 64))
(declare-fun temp58_73 () (_ BitVec 64))
(declare-fun temp58_74 () (_ BitVec 64))
(declare-fun temp58_75 () (_ BitVec 64))
(declare-fun temp58_76 () (_ BitVec 64))
(declare-fun temp58_77 () (_ BitVec 64))
(declare-fun temp58_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp58_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp58_80 () (_ BitVec 64))
(declare-fun var987402 () (_ BitVec 64))
(declare-fun var987367 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp58_81 () (_ BitVec 64))
(declare-fun temp58_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp58_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp58_84 () (_ BitVec 64))
(declare-fun temp58_85 () (_ BitVec 64))
(declare-fun var1708334 () (_ BitVec 64))
(declare-fun temp58_86 () (_ BitVec 64))
(declare-fun var1708335 () (_ BitVec 64))
(declare-fun var2032766 () (_ BitVec 64))
(declare-fun var2032767 () (_ BitVec 64))
(declare-fun temp58_87 () (_ BitVec 64))
(declare-fun var2757018 () (_ BitVec 64))
(declare-fun temp58_88 () (_ BitVec 64))
(declare-fun var3281306 () (_ BitVec 64))
(assert (= temp58_1 #x0000000000080000))
(assert (= var461925 temp58_1))
(assert (= temp58_2 #x0000000000080000))
(assert (= var724069 temp58_2))
(assert (= temp58_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp58_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_4 #x0000000000000000))
(assert (= var69380 temp58_4))
(assert (= temp58_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp58_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_6 #x0000000000000000))
(assert (= var69401 temp58_6))
(assert (= temp58_7 #x0000000000000000))
(assert (= temp58_8 temp58_7))
(assert (= temp58_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_8)))
(assert (= temp58_10 #x0000000000000001))
(assert (= temp58_11 temp58_10))
(assert (= temp58_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_11)))
(assert (= temp58_13 #x0000000000000002))
(assert (= temp58_14 temp58_13))
(assert (= temp58_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_14)))
(assert (= temp58_16 #x0000000000000003))
(assert (= temp58_17 temp58_16))
(assert (= temp58_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_17)))
(assert (= temp58_19 #x0000000000000004))
(assert (= temp58_20 temp58_19))
(assert (= temp58_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_20)))
(assert (= temp58_22 #x0000000000000005))
(assert (= temp58_23 temp58_22))
(assert (= temp58_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_23)))
(assert (= temp58_25 #x0000000000000000))
(assert (= temp58_26 temp58_25))
(assert (= temp58_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp58_26)))
(assert (= temp58_28 #x0000000000000001))
(assert (= temp58_29 temp58_28))
(assert (= temp58_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp58_29)))
(assert (= temp58_31 #x0000000000000002))
(assert (= temp58_32 temp58_31))
(assert (= temp58_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp58_32)))
(assert (= temp58_34 #x0000000000000003))
(assert (= temp58_35 temp58_34))
(assert (= temp58_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp58_35)))
(assert (= temp58_37 #x0000000000000004))
(assert (= temp58_38 temp58_37))
(assert (= temp58_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp58_38)))
(assert (= temp58_40 #x0000000000000005))
(assert (= temp58_41 temp58_40))
(assert (= temp58_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp58_41)))
(assert (= temp58_43 temp58_11))
(assert (= temp58_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp58_43)))
(assert (= temp58_45 temp58_14))
(assert (= temp58_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp58_45)))
(assert (= temp58_47 temp58_17))
(assert (= temp58_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp58_47)))
(assert (= temp58_49 temp58_20))
(assert (= temp58_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp58_49)))
(assert (= temp58_51 temp58_23))
(assert (= temp58_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp58_51)))
(assert (= temp58_53 temp58_8))
(assert (= temp58_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp58_53)))
(assert (= temp58_55 temp58_26))
(assert (= temp58_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_55)))
(assert (= temp58_57 temp58_29))
(assert (= temp58_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_57)))
(assert (= temp58_59 temp58_32))
(assert (= temp58_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_59)))
(assert (= temp58_61 temp58_35))
(assert (= temp58_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_61)))
(assert (= temp58_63 temp58_38))
(assert (= temp58_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_63)))
(assert (= temp58_65 temp58_41))
(assert (= temp58_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_65)))
(assert (= temp58_67 temp58_43))
(assert (= temp58_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_67)))
(assert (= temp58_69 temp58_45))
(assert (= temp58_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_69)))
(assert (= temp58_71 temp58_47))
(assert (= temp58_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_71)))
(assert (= temp58_73 temp58_49))
(assert (= temp58_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_73)))
(assert (= temp58_75 temp58_51))
(assert (= temp58_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_75)))
(assert (= temp58_77 temp58_53))
(assert (= temp58_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_77)))
(assert (= (and true
        (= temp58_44 temp58_12)
        (= temp58_46 temp58_15)
        (= temp58_48 temp58_18)
        (= temp58_50 temp58_21)
        (= temp58_52 temp58_24)
        (= temp58_54 temp58_9)
        (= temp58_56 temp58_27)
        (= temp58_58 temp58_30)
        (= temp58_60 temp58_33)
        (= temp58_62 temp58_36)
        (= temp58_64 temp58_39)
        (= temp58_66 temp58_42)
        (= temp58_68 temp58_44)
        (= temp58_70 temp58_46)
        (= temp58_72 temp58_48)
        (= temp58_74 temp58_50)
        (= temp58_76 temp58_52)
        (= temp58_78 temp58_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp58_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp58_79))
(assert (= temp58_80 #x0000000000000001))
(assert (= var987402 temp58_80))
(assert (= var987367 var987402))
(assert (= var69428 var987367))
(assert (= temp58_81 #x0000000000000001))
(assert (= var69428 temp58_81))
(assert (= temp58_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp58_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp58_83)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp58_84 #x0000000000000000))
(assert (= var69546 temp58_84))
(assert (= temp58_85 #x0000000000000000))
(assert (= var1708334 temp58_85))
(assert (= temp58_86 #x0000000000000000))
(assert (= var1708335 temp58_86))
(assert (= var2032766 var1708334))
(assert (= var2032767 var1708335))
(assert (= temp58_87 #x0000000000000001))
(assert (= var2757018 temp58_87))
(assert (= temp58_88 #x0000000000000001))
(assert (= var3281306 temp58_88))
(model-add temp58_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp58_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp58_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp58_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






