(declare-fun temp28_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp28_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp28_3 () (_ BitVec 64))
(declare-fun temp28_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp28_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp28_6 () (_ BitVec 64))
(declare-fun temp28_7 () (_ BitVec 64))
(declare-fun temp28_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp28_9 () (_ BitVec 64))
(declare-fun temp28_10 () (_ BitVec 64))
(declare-fun temp28_11 () (_ BitVec 64))
(declare-fun temp28_12 () (_ BitVec 64))
(declare-fun temp28_13 () (_ BitVec 64))
(declare-fun temp28_14 () (_ BitVec 64))
(declare-fun temp28_15 () (_ BitVec 64))
(declare-fun temp28_16 () (_ BitVec 64))
(declare-fun temp28_17 () (_ BitVec 64))
(declare-fun temp28_18 () (_ BitVec 64))
(declare-fun temp28_19 () (_ BitVec 64))
(declare-fun temp28_20 () (_ BitVec 64))
(declare-fun temp28_21 () (_ BitVec 64))
(declare-fun temp28_22 () (_ BitVec 64))
(declare-fun temp28_23 () (_ BitVec 64))
(declare-fun temp28_24 () (_ BitVec 64))
(declare-fun temp28_25 () (_ BitVec 64))
(declare-fun temp28_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp28_27 () (_ BitVec 64))
(declare-fun temp28_28 () (_ BitVec 64))
(declare-fun temp28_29 () (_ BitVec 64))
(declare-fun temp28_30 () (_ BitVec 64))
(declare-fun temp28_31 () (_ BitVec 64))
(declare-fun temp28_32 () (_ BitVec 64))
(declare-fun temp28_33 () (_ BitVec 64))
(declare-fun temp28_34 () (_ BitVec 64))
(declare-fun temp28_35 () (_ BitVec 64))
(declare-fun temp28_36 () (_ BitVec 64))
(declare-fun temp28_37 () (_ BitVec 64))
(declare-fun temp28_38 () (_ BitVec 64))
(declare-fun temp28_39 () (_ BitVec 64))
(declare-fun temp28_40 () (_ BitVec 64))
(declare-fun temp28_41 () (_ BitVec 64))
(declare-fun temp28_42 () (_ BitVec 64))
(declare-fun temp28_43 () (_ BitVec 64))
(declare-fun temp28_44 () (_ BitVec 64))
(declare-fun temp28_45 () (_ BitVec 64))
(declare-fun temp28_46 () (_ BitVec 64))
(declare-fun temp28_47 () (_ BitVec 64))
(declare-fun temp28_48 () (_ BitVec 64))
(declare-fun temp28_49 () (_ BitVec 64))
(declare-fun temp28_50 () (_ BitVec 64))
(declare-fun temp28_51 () (_ BitVec 64))
(declare-fun temp28_52 () (_ BitVec 64))
(declare-fun temp28_53 () (_ BitVec 64))
(declare-fun temp28_54 () (_ BitVec 64))
(declare-fun temp28_55 () (_ BitVec 64))
(declare-fun temp28_56 () (_ BitVec 64))
(declare-fun temp28_57 () (_ BitVec 64))
(declare-fun temp28_58 () (_ BitVec 64))
(declare-fun temp28_59 () (_ BitVec 64))
(declare-fun temp28_60 () (_ BitVec 64))
(declare-fun temp28_61 () (_ BitVec 64))
(declare-fun temp28_62 () (_ BitVec 64))
(declare-fun temp28_63 () (_ BitVec 64))
(declare-fun temp28_64 () (_ BitVec 64))
(declare-fun temp28_65 () (_ BitVec 64))
(declare-fun temp28_66 () (_ BitVec 64))
(declare-fun temp28_67 () (_ BitVec 64))
(declare-fun temp28_68 () (_ BitVec 64))
(declare-fun temp28_69 () (_ BitVec 64))
(declare-fun temp28_70 () (_ BitVec 64))
(declare-fun temp28_71 () (_ BitVec 64))
(declare-fun temp28_72 () (_ BitVec 64))
(declare-fun temp28_73 () (_ BitVec 64))
(declare-fun temp28_74 () (_ BitVec 64))
(declare-fun temp28_75 () (_ BitVec 64))
(declare-fun temp28_76 () (_ BitVec 64))
(declare-fun temp28_77 () (_ BitVec 64))
(declare-fun temp28_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp28_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp28_80 () (_ BitVec 64))
(declare-fun var987402 () (_ BitVec 64))
(declare-fun var987367 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp28_81 () (_ BitVec 64))
(declare-fun temp28_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp28_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp28_84 () (_ BitVec 64))
(declare-fun temp28_85 () (_ BitVec 64))
(declare-fun var1708334 () (_ BitVec 64))
(declare-fun temp28_86 () (_ BitVec 64))
(declare-fun var1708335 () (_ BitVec 64))
(declare-fun var2032766 () (_ BitVec 64))
(declare-fun var2032767 () (_ BitVec 64))
(declare-fun temp28_87 () (_ BitVec 64))
(declare-fun var2363694 () (_ BitVec 64))
(declare-fun temp28_88 () (_ BitVec 64))
(declare-fun var2363695 () (_ BitVec 64))
(declare-fun var2688126 () (_ BitVec 64))
(declare-fun var2688127 () (_ BitVec 64))
(declare-fun temp28_89 () (_ BitVec 64))
(declare-fun var3215770 () (_ BitVec 64))
(declare-fun temp28_90 () (_ BitVec 64))
(declare-fun var3740058 () (_ BitVec 64))
(assert (= temp28_1 #x0000000000080000))
(assert (= var461925 temp28_1))
(assert (= temp28_2 #x0000000000080000))
(assert (= var724069 temp28_2))
(assert (= temp28_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp28_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp28_4 #x0000000000000000))
(assert (= var69380 temp28_4))
(assert (= temp28_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp28_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp28_6 #x0000000000000000))
(assert (= var69401 temp28_6))
(assert (= temp28_7 #x0000000000000000))
(assert (= temp28_8 temp28_7))
(assert (= temp28_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_8)))
(assert (= temp28_10 #x0000000000000001))
(assert (= temp28_11 temp28_10))
(assert (= temp28_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_11)))
(assert (= temp28_13 #x0000000000000002))
(assert (= temp28_14 temp28_13))
(assert (= temp28_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_14)))
(assert (= temp28_16 #x0000000000000003))
(assert (= temp28_17 temp28_16))
(assert (= temp28_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_17)))
(assert (= temp28_19 #x0000000000000004))
(assert (= temp28_20 temp28_19))
(assert (= temp28_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_20)))
(assert (= temp28_22 #x0000000000000005))
(assert (= temp28_23 temp28_22))
(assert (= temp28_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_23)))
(assert (= temp28_25 #x0000000000000000))
(assert (= temp28_26 temp28_25))
(assert (= temp28_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp28_26)))
(assert (= temp28_28 #x0000000000000001))
(assert (= temp28_29 temp28_28))
(assert (= temp28_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp28_29)))
(assert (= temp28_31 #x0000000000000002))
(assert (= temp28_32 temp28_31))
(assert (= temp28_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp28_32)))
(assert (= temp28_34 #x0000000000000003))
(assert (= temp28_35 temp28_34))
(assert (= temp28_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp28_35)))
(assert (= temp28_37 #x0000000000000004))
(assert (= temp28_38 temp28_37))
(assert (= temp28_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp28_38)))
(assert (= temp28_40 #x0000000000000005))
(assert (= temp28_41 temp28_40))
(assert (= temp28_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp28_41)))
(assert (= temp28_43 temp28_11))
(assert (= temp28_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp28_43)))
(assert (= temp28_45 temp28_14))
(assert (= temp28_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp28_45)))
(assert (= temp28_47 temp28_17))
(assert (= temp28_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp28_47)))
(assert (= temp28_49 temp28_20))
(assert (= temp28_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp28_49)))
(assert (= temp28_51 temp28_23))
(assert (= temp28_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp28_51)))
(assert (= temp28_53 temp28_8))
(assert (= temp28_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp28_53)))
(assert (= temp28_55 temp28_26))
(assert (= temp28_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_55)))
(assert (= temp28_57 temp28_29))
(assert (= temp28_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_57)))
(assert (= temp28_59 temp28_32))
(assert (= temp28_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_59)))
(assert (= temp28_61 temp28_35))
(assert (= temp28_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_61)))
(assert (= temp28_63 temp28_38))
(assert (= temp28_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_63)))
(assert (= temp28_65 temp28_41))
(assert (= temp28_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_65)))
(assert (= temp28_67 temp28_43))
(assert (= temp28_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_67)))
(assert (= temp28_69 temp28_45))
(assert (= temp28_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_69)))
(assert (= temp28_71 temp28_47))
(assert (= temp28_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_71)))
(assert (= temp28_73 temp28_49))
(assert (= temp28_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_73)))
(assert (= temp28_75 temp28_51))
(assert (= temp28_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_75)))
(assert (= temp28_77 temp28_53))
(assert (= temp28_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_77)))
(assert (= (and true
        (= temp28_44 temp28_12)
        (= temp28_46 temp28_15)
        (= temp28_48 temp28_18)
        (= temp28_50 temp28_21)
        (= temp28_52 temp28_24)
        (= temp28_54 temp28_9)
        (= temp28_56 temp28_27)
        (= temp28_58 temp28_30)
        (= temp28_60 temp28_33)
        (= temp28_62 temp28_36)
        (= temp28_64 temp28_39)
        (= temp28_66 temp28_42)
        (= temp28_68 temp28_44)
        (= temp28_70 temp28_46)
        (= temp28_72 temp28_48)
        (= temp28_74 temp28_50)
        (= temp28_76 temp28_52)
        (= temp28_78 temp28_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp28_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp28_79))
(assert (= temp28_80 #x0000000000000001))
(assert (= var987402 temp28_80))
(assert (= var987367 var987402))
(assert (= var69428 var987367))
(assert (= temp28_81 #x0000000000000001))
(assert (= var69428 temp28_81))
(assert (= temp28_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp28_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp28_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp28_83)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp28_84 #x0000000000000000))
(assert (= var69546 temp28_84))
(assert (= temp28_85 #x0000000000000000))
(assert (= var1708334 temp28_85))
(assert (= temp28_86 #x0000000000000000))
(assert (= var1708335 temp28_86))
(assert (= var2032766 var1708334))
(assert (= var2032767 var1708335))
(assert (= temp28_87 #x0000000000000000))
(assert (= var2363694 temp28_87))
(assert (= temp28_88 #x0000000000000000))
(assert (= var2363695 temp28_88))
(assert (= var2688126 var2363694))
(assert (= var2688127 var2363695))
(assert (= temp28_89 #x0000000000000001))
(assert (= var3215770 temp28_89))
(assert (= temp28_90 #x0000000000000001))
(assert (= var3740058 temp28_90))
(model-add temp28_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp28_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp28_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp28_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






