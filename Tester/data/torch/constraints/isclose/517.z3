(declare-fun temp641_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp641_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp641_3 () (_ BitVec 64))
(declare-fun temp641_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp641_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp641_6 () (_ BitVec 64))
(declare-fun temp641_7 () (_ BitVec 64))
(declare-fun temp641_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp641_9 () (_ BitVec 64))
(declare-fun temp641_10 () (_ BitVec 64))
(declare-fun temp641_11 () (_ BitVec 64))
(declare-fun temp641_12 () (_ BitVec 64))
(declare-fun temp641_13 () (_ BitVec 64))
(declare-fun temp641_14 () (_ BitVec 64))
(declare-fun temp641_15 () (_ BitVec 64))
(declare-fun temp641_16 () (_ BitVec 64))
(declare-fun temp641_17 () (_ BitVec 64))
(declare-fun temp641_18 () (_ BitVec 64))
(declare-fun temp641_19 () (_ BitVec 64))
(declare-fun temp641_20 () (_ BitVec 64))
(declare-fun temp641_21 () (_ BitVec 64))
(declare-fun temp641_22 () (_ BitVec 64))
(declare-fun temp641_23 () (_ BitVec 64))
(declare-fun temp641_24 () (_ BitVec 64))
(declare-fun temp641_25 () (_ BitVec 64))
(declare-fun temp641_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp641_27 () (_ BitVec 64))
(declare-fun temp641_28 () (_ BitVec 64))
(declare-fun temp641_29 () (_ BitVec 64))
(declare-fun temp641_30 () (_ BitVec 64))
(declare-fun temp641_31 () (_ BitVec 64))
(declare-fun temp641_32 () (_ BitVec 64))
(declare-fun temp641_33 () (_ BitVec 64))
(declare-fun temp641_34 () (_ BitVec 64))
(declare-fun temp641_35 () (_ BitVec 64))
(declare-fun temp641_36 () (_ BitVec 64))
(declare-fun temp641_37 () (_ BitVec 64))
(declare-fun temp641_38 () (_ BitVec 64))
(declare-fun temp641_39 () (_ BitVec 64))
(declare-fun temp641_40 () (_ BitVec 64))
(declare-fun temp641_41 () (_ BitVec 64))
(declare-fun temp641_42 () (_ BitVec 64))
(declare-fun temp641_43 () (_ BitVec 64))
(declare-fun temp641_44 () (_ BitVec 64))
(declare-fun temp641_45 () (_ BitVec 64))
(declare-fun temp641_46 () (_ BitVec 64))
(declare-fun temp641_47 () (_ BitVec 64))
(declare-fun temp641_48 () (_ BitVec 64))
(declare-fun temp641_49 () (_ BitVec 64))
(declare-fun temp641_50 () (_ BitVec 64))
(declare-fun temp641_51 () (_ BitVec 64))
(declare-fun temp641_52 () (_ BitVec 64))
(declare-fun temp641_53 () (_ BitVec 64))
(declare-fun temp641_54 () (_ BitVec 64))
(declare-fun temp641_55 () (_ BitVec 64))
(declare-fun temp641_56 () (_ BitVec 64))
(declare-fun temp641_57 () (_ BitVec 64))
(declare-fun temp641_58 () (_ BitVec 64))
(declare-fun temp641_59 () (_ BitVec 64))
(declare-fun temp641_60 () (_ BitVec 64))
(declare-fun temp641_61 () (_ BitVec 64))
(declare-fun temp641_62 () (_ BitVec 64))
(declare-fun temp641_63 () (_ BitVec 64))
(declare-fun temp641_64 () (_ BitVec 64))
(declare-fun temp641_65 () (_ BitVec 64))
(declare-fun temp641_66 () (_ BitVec 64))
(declare-fun temp641_67 () (_ BitVec 64))
(declare-fun temp641_68 () (_ BitVec 64))
(declare-fun temp641_69 () (_ BitVec 64))
(declare-fun temp641_70 () (_ BitVec 64))
(declare-fun temp641_71 () (_ BitVec 64))
(declare-fun temp641_72 () (_ BitVec 64))
(declare-fun temp641_73 () (_ BitVec 64))
(declare-fun temp641_74 () (_ BitVec 64))
(declare-fun temp641_75 () (_ BitVec 64))
(declare-fun temp641_76 () (_ BitVec 64))
(declare-fun temp641_77 () (_ BitVec 64))
(declare-fun temp641_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp641_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp641_80 () (_ BitVec 64))
(declare-fun var1184010 () (_ BitVec 64))
(declare-fun var1183975 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp641_81 () (_ BitVec 64))
(declare-fun temp641_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp641_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp641_84 () (_ BitVec 64))
(declare-fun temp641_85 () (_ BitVec 64))
(declare-fun var1904942 () (_ BitVec 64))
(declare-fun temp641_86 () (_ BitVec 64))
(declare-fun var1904943 () (_ BitVec 64))
(declare-fun var2229374 () (_ BitVec 64))
(declare-fun var2229375 () (_ BitVec 64))
(declare-fun temp641_87 () (_ BitVec 64))
(declare-fun var2560302 () (_ BitVec 64))
(declare-fun temp641_88 () (_ BitVec 64))
(declare-fun var2560303 () (_ BitVec 64))
(declare-fun var2884734 () (_ BitVec 64))
(declare-fun var2884735 () (_ BitVec 64))
(declare-fun temp641_89 () (_ BitVec 64))
(declare-fun var3412378 () (_ BitVec 64))
(declare-fun temp641_90 () (_ BitVec 64))
(declare-fun var3936666 () (_ BitVec 64))
(assert (= temp641_1 #x0000000000080000))
(assert (= var461925 temp641_1))
(assert (= temp641_2 #x0000000000080000))
(assert (= var724069 temp641_2))
(assert (= temp641_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp641_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp641_4 #x0000000000000000))
(assert (= var69380 temp641_4))
(assert (= temp641_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp641_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp641_6 #x0000000000000000))
(assert (= var69401 temp641_6))
(assert (= temp641_7 #x0000000000000000))
(assert (= temp641_8 temp641_7))
(assert (= temp641_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp641_8)))
(assert (= temp641_10 #x0000000000000001))
(assert (= temp641_11 temp641_10))
(assert (= temp641_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp641_11)))
(assert (= temp641_13 #x0000000000000002))
(assert (= temp641_14 temp641_13))
(assert (= temp641_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp641_14)))
(assert (= temp641_16 #x0000000000000003))
(assert (= temp641_17 temp641_16))
(assert (= temp641_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp641_17)))
(assert (= temp641_19 #x0000000000000004))
(assert (= temp641_20 temp641_19))
(assert (= temp641_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp641_20)))
(assert (= temp641_22 #x0000000000000005))
(assert (= temp641_23 temp641_22))
(assert (= temp641_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp641_23)))
(assert (= temp641_25 #x0000000000000000))
(assert (= temp641_26 temp641_25))
(assert (= temp641_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp641_26)))
(assert (= temp641_28 #x0000000000000001))
(assert (= temp641_29 temp641_28))
(assert (= temp641_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp641_29)))
(assert (= temp641_31 #x0000000000000002))
(assert (= temp641_32 temp641_31))
(assert (= temp641_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp641_32)))
(assert (= temp641_34 #x0000000000000003))
(assert (= temp641_35 temp641_34))
(assert (= temp641_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp641_35)))
(assert (= temp641_37 #x0000000000000004))
(assert (= temp641_38 temp641_37))
(assert (= temp641_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp641_38)))
(assert (= temp641_40 #x0000000000000005))
(assert (= temp641_41 temp641_40))
(assert (= temp641_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp641_41)))
(assert (= temp641_43 temp641_11))
(assert (= temp641_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp641_43)))
(assert (= temp641_45 temp641_14))
(assert (= temp641_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp641_45)))
(assert (= temp641_47 temp641_17))
(assert (= temp641_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp641_47)))
(assert (= temp641_49 temp641_20))
(assert (= temp641_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp641_49)))
(assert (= temp641_51 temp641_23))
(assert (= temp641_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp641_51)))
(assert (= temp641_53 temp641_8))
(assert (= temp641_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp641_53)))
(assert (= temp641_55 temp641_26))
(assert (= temp641_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp641_55)))
(assert (= temp641_57 temp641_29))
(assert (= temp641_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp641_57)))
(assert (= temp641_59 temp641_32))
(assert (= temp641_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp641_59)))
(assert (= temp641_61 temp641_35))
(assert (= temp641_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp641_61)))
(assert (= temp641_63 temp641_38))
(assert (= temp641_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp641_63)))
(assert (= temp641_65 temp641_41))
(assert (= temp641_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp641_65)))
(assert (= temp641_67 temp641_43))
(assert (= temp641_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp641_67)))
(assert (= temp641_69 temp641_45))
(assert (= temp641_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp641_69)))
(assert (= temp641_71 temp641_47))
(assert (= temp641_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp641_71)))
(assert (= temp641_73 temp641_49))
(assert (= temp641_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp641_73)))
(assert (= temp641_75 temp641_51))
(assert (= temp641_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp641_75)))
(assert (= temp641_77 temp641_53))
(assert (= temp641_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp641_77)))
(assert (= (and true
        (= temp641_44 temp641_12)
        (= temp641_46 temp641_15)
        (= temp641_48 temp641_18)
        (= temp641_50 temp641_21)
        (= temp641_52 temp641_24)
        (= temp641_54 temp641_9)
        (= temp641_56 temp641_27)
        (= temp641_58 temp641_30)
        (= temp641_60 temp641_33)
        (= temp641_62 temp641_36)
        (= temp641_64 temp641_39)
        (= temp641_66 temp641_42)
        (= temp641_68 temp641_44)
        (= temp641_70 temp641_46)
        (= temp641_72 temp641_48)
        (= temp641_74 temp641_50)
        (= temp641_76 temp641_52)
        (= temp641_78 temp641_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp641_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp641_79))
(assert (= temp641_80 #x0000000000000001))
(assert (= var1184010 temp641_80))
(assert (= var1183975 var1184010))
(assert (= var69428 var1183975))
(assert (= temp641_81 #x0000000000000001))
(assert (= var69428 temp641_81))
(assert (= temp641_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp641_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp641_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp641_83)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp641_84 #x0000000000000000))
(assert (= var69546 temp641_84))
(assert (= temp641_85 #x0000000000000000))
(assert (= var1904942 temp641_85))
(assert (= temp641_86 #x0000000000000000))
(assert (= var1904943 temp641_86))
(assert (= var2229374 var1904942))
(assert (= var2229375 var1904943))
(assert (= temp641_87 #x0000000000000000))
(assert (= var2560302 temp641_87))
(assert (= temp641_88 #x0000000000000000))
(assert (= var2560303 temp641_88))
(assert (= var2884734 var2560302))
(assert (= var2884735 var2560303))
(assert (= temp641_89 #x0000000000000001))
(assert (= var3412378 temp641_89))
(assert (= temp641_90 #x0000000000000001))
(assert (= var3936666 temp641_90))
(model-add temp641_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp641_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp641_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp641_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






