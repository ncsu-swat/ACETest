(declare-fun temp684_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp684_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp684_3 () (_ BitVec 64))
(declare-fun temp684_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp684_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp684_6 () (_ BitVec 64))
(declare-fun temp684_7 () (_ BitVec 64))
(declare-fun temp684_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp684_9 () (_ BitVec 64))
(declare-fun temp684_10 () (_ BitVec 64))
(declare-fun temp684_11 () (_ BitVec 64))
(declare-fun temp684_12 () (_ BitVec 64))
(declare-fun temp684_13 () (_ BitVec 64))
(declare-fun temp684_14 () (_ BitVec 64))
(declare-fun temp684_15 () (_ BitVec 64))
(declare-fun temp684_16 () (_ BitVec 64))
(declare-fun temp684_17 () (_ BitVec 64))
(declare-fun temp684_18 () (_ BitVec 64))
(declare-fun temp684_19 () (_ BitVec 64))
(declare-fun temp684_20 () (_ BitVec 64))
(declare-fun temp684_21 () (_ BitVec 64))
(declare-fun temp684_22 () (_ BitVec 64))
(declare-fun temp684_23 () (_ BitVec 64))
(declare-fun temp684_24 () (_ BitVec 64))
(declare-fun temp684_25 () (_ BitVec 64))
(declare-fun temp684_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp684_27 () (_ BitVec 64))
(declare-fun temp684_28 () (_ BitVec 64))
(declare-fun temp684_29 () (_ BitVec 64))
(declare-fun temp684_30 () (_ BitVec 64))
(declare-fun temp684_31 () (_ BitVec 64))
(declare-fun temp684_32 () (_ BitVec 64))
(declare-fun temp684_33 () (_ BitVec 64))
(declare-fun temp684_34 () (_ BitVec 64))
(declare-fun temp684_35 () (_ BitVec 64))
(declare-fun temp684_36 () (_ BitVec 64))
(declare-fun temp684_37 () (_ BitVec 64))
(declare-fun temp684_38 () (_ BitVec 64))
(declare-fun temp684_39 () (_ BitVec 64))
(declare-fun temp684_40 () (_ BitVec 64))
(declare-fun temp684_41 () (_ BitVec 64))
(declare-fun temp684_42 () (_ BitVec 64))
(declare-fun temp684_43 () (_ BitVec 64))
(declare-fun temp684_44 () (_ BitVec 64))
(declare-fun temp684_45 () (_ BitVec 64))
(declare-fun temp684_46 () (_ BitVec 64))
(declare-fun temp684_47 () (_ BitVec 64))
(declare-fun temp684_48 () (_ BitVec 64))
(declare-fun temp684_49 () (_ BitVec 64))
(declare-fun temp684_50 () (_ BitVec 64))
(declare-fun temp684_51 () (_ BitVec 64))
(declare-fun temp684_52 () (_ BitVec 64))
(declare-fun temp684_53 () (_ BitVec 64))
(declare-fun temp684_54 () (_ BitVec 64))
(declare-fun temp684_55 () (_ BitVec 64))
(declare-fun temp684_56 () (_ BitVec 64))
(declare-fun temp684_57 () (_ BitVec 64))
(declare-fun temp684_58 () (_ BitVec 64))
(declare-fun temp684_59 () (_ BitVec 64))
(declare-fun temp684_60 () (_ BitVec 64))
(declare-fun temp684_61 () (_ BitVec 64))
(declare-fun temp684_62 () (_ BitVec 64))
(declare-fun temp684_63 () (_ BitVec 64))
(declare-fun temp684_64 () (_ BitVec 64))
(declare-fun temp684_65 () (_ BitVec 64))
(declare-fun temp684_66 () (_ BitVec 64))
(declare-fun temp684_67 () (_ BitVec 64))
(declare-fun temp684_68 () (_ BitVec 64))
(declare-fun temp684_69 () (_ BitVec 64))
(declare-fun temp684_70 () (_ BitVec 64))
(declare-fun temp684_71 () (_ BitVec 64))
(declare-fun temp684_72 () (_ BitVec 64))
(declare-fun temp684_73 () (_ BitVec 64))
(declare-fun temp684_74 () (_ BitVec 64))
(declare-fun temp684_75 () (_ BitVec 64))
(declare-fun temp684_76 () (_ BitVec 64))
(declare-fun temp684_77 () (_ BitVec 64))
(declare-fun temp684_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp684_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp684_80 () (_ BitVec 64))
(declare-fun var1184010 () (_ BitVec 64))
(declare-fun var1183975 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp684_81 () (_ BitVec 64))
(declare-fun temp684_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp684_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp684_84 () (_ BitVec 64))
(declare-fun temp684_85 () (_ BitVec 64))
(declare-fun var2167086 () (_ BitVec 64))
(declare-fun temp684_86 () (_ BitVec 64))
(declare-fun var2167087 () (_ BitVec 64))
(declare-fun var2491518 () (_ BitVec 64))
(declare-fun var2491519 () (_ BitVec 64))
(declare-fun temp684_87 () (_ BitVec 64))
(declare-fun var3019162 () (_ BitVec 64))
(declare-fun temp684_88 () (_ BitVec 64))
(declare-fun var3543450 () (_ BitVec 64))
(declare-fun temp684_89 () (_ BitVec 64))
(declare-fun var4461475 () (_ BitVec 64))
(declare-fun temp684_91 () (_ BitVec 64))
(declare-fun temp684_90 () (_ BitVec 64))
(declare-fun temp684_92 () (_ BitVec 64))
(declare-fun var5247907 () (_ BitVec 64))
(declare-fun temp684_94 () (_ BitVec 64))
(declare-fun temp684_93 () (_ BitVec 64))
(assert (= temp684_1 #x0000000000080000))
(assert (= var461925 temp684_1))
(assert (= temp684_2 #x0000000000080000))
(assert (= var724069 temp684_2))
(assert (= temp684_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp684_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp684_4 #x0000000000000000))
(assert (= var69380 temp684_4))
(assert (= temp684_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp684_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp684_6 #x0000000000000000))
(assert (= var69401 temp684_6))
(assert (= temp684_7 #x0000000000000000))
(assert (= temp684_8 temp684_7))
(assert (= temp684_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_8)))
(assert (= temp684_10 #x0000000000000001))
(assert (= temp684_11 temp684_10))
(assert (= temp684_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_11)))
(assert (= temp684_13 #x0000000000000002))
(assert (= temp684_14 temp684_13))
(assert (= temp684_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_14)))
(assert (= temp684_16 #x0000000000000003))
(assert (= temp684_17 temp684_16))
(assert (= temp684_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_17)))
(assert (= temp684_19 #x0000000000000004))
(assert (= temp684_20 temp684_19))
(assert (= temp684_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_20)))
(assert (= temp684_22 #x0000000000000005))
(assert (= temp684_23 temp684_22))
(assert (= temp684_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_23)))
(assert (= temp684_25 #x0000000000000000))
(assert (= temp684_26 temp684_25))
(assert (= temp684_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp684_26)))
(assert (= temp684_28 #x0000000000000001))
(assert (= temp684_29 temp684_28))
(assert (= temp684_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp684_29)))
(assert (= temp684_31 #x0000000000000002))
(assert (= temp684_32 temp684_31))
(assert (= temp684_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp684_32)))
(assert (= temp684_34 #x0000000000000003))
(assert (= temp684_35 temp684_34))
(assert (= temp684_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp684_35)))
(assert (= temp684_37 #x0000000000000004))
(assert (= temp684_38 temp684_37))
(assert (= temp684_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp684_38)))
(assert (= temp684_40 #x0000000000000005))
(assert (= temp684_41 temp684_40))
(assert (= temp684_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp684_41)))
(assert (= temp684_43 temp684_11))
(assert (= temp684_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp684_43)))
(assert (= temp684_45 temp684_14))
(assert (= temp684_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp684_45)))
(assert (= temp684_47 temp684_17))
(assert (= temp684_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp684_47)))
(assert (= temp684_49 temp684_20))
(assert (= temp684_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp684_49)))
(assert (= temp684_51 temp684_23))
(assert (= temp684_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp684_51)))
(assert (= temp684_53 temp684_8))
(assert (= temp684_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp684_53)))
(assert (= temp684_55 temp684_26))
(assert (= temp684_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_55)))
(assert (= temp684_57 temp684_29))
(assert (= temp684_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_57)))
(assert (= temp684_59 temp684_32))
(assert (= temp684_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_59)))
(assert (= temp684_61 temp684_35))
(assert (= temp684_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_61)))
(assert (= temp684_63 temp684_38))
(assert (= temp684_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_63)))
(assert (= temp684_65 temp684_41))
(assert (= temp684_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_65)))
(assert (= temp684_67 temp684_43))
(assert (= temp684_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_67)))
(assert (= temp684_69 temp684_45))
(assert (= temp684_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_69)))
(assert (= temp684_71 temp684_47))
(assert (= temp684_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_71)))
(assert (= temp684_73 temp684_49))
(assert (= temp684_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_73)))
(assert (= temp684_75 temp684_51))
(assert (= temp684_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_75)))
(assert (= temp684_77 temp684_53))
(assert (= temp684_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp684_77)))
(assert (= (and true
        (= temp684_44 temp684_12)
        (= temp684_46 temp684_15)
        (= temp684_48 temp684_18)
        (= temp684_50 temp684_21)
        (= temp684_52 temp684_24)
        (= temp684_54 temp684_9)
        (= temp684_56 temp684_27)
        (= temp684_58 temp684_30)
        (= temp684_60 temp684_33)
        (= temp684_62 temp684_36)
        (= temp684_64 temp684_39)
        (= temp684_66 temp684_42)
        (= temp684_68 temp684_44)
        (= temp684_70 temp684_46)
        (= temp684_72 temp684_48)
        (= temp684_74 temp684_50)
        (= temp684_76 temp684_52)
        (= temp684_78 temp684_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp684_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp684_79))
(assert (= temp684_80 #x0000000000000001))
(assert (= var1184010 temp684_80))
(assert (= var1183975 var1184010))
(assert (= var69428 var1183975))
(assert (= temp684_81 #x0000000000000001))
(assert (= var69428 temp684_81))
(assert (= temp684_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp684_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp684_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp684_83)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp684_84 #x0000000000000000))
(assert (= var69546 temp684_84))
(assert (= temp684_85 #x0000000000000000))
(assert (= var2167086 temp684_85))
(assert (= temp684_86 #x0000000000000000))
(assert (= var2167087 temp684_86))
(assert (= var2491518 var2167086))
(assert (= var2491519 var2167087))
(assert (= temp684_87 #x0000000000000001))
(assert (= var3019162 temp684_87))
(assert (= temp684_88 #x0000000000000001))
(assert (= var3543450 temp684_88))
(assert (= temp684_89 #x000000000000000b))
(assert (= var4461475 temp684_89))
(assert (= temp684_91 #x0000000000000001))
(assert (= temp684_90 temp684_91))
(assert (= temp684_92 #x000000000000000b))
(assert (= var5247907 temp684_92))
(assert (= temp684_94 #x0000000000000001))
(assert (= temp684_93 temp684_94))
(model-add temp684_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp684_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp684_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp684_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






