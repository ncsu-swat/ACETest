(declare-fun temp388_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp388_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp388_3 () (_ BitVec 64))
(declare-fun temp388_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp388_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp388_6 () (_ BitVec 64))
(declare-fun temp388_7 () (_ BitVec 64))
(declare-fun temp388_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp388_9 () (_ BitVec 64))
(declare-fun temp388_10 () (_ BitVec 64))
(declare-fun temp388_11 () (_ BitVec 64))
(declare-fun temp388_12 () (_ BitVec 64))
(declare-fun temp388_13 () (_ BitVec 64))
(declare-fun temp388_14 () (_ BitVec 64))
(declare-fun temp388_15 () (_ BitVec 64))
(declare-fun temp388_16 () (_ BitVec 64))
(declare-fun temp388_17 () (_ BitVec 64))
(declare-fun temp388_18 () (_ BitVec 64))
(declare-fun temp388_19 () (_ BitVec 64))
(declare-fun temp388_20 () (_ BitVec 64))
(declare-fun temp388_21 () (_ BitVec 64))
(declare-fun temp388_22 () (_ BitVec 64))
(declare-fun temp388_23 () (_ BitVec 64))
(declare-fun temp388_24 () (_ BitVec 64))
(declare-fun temp388_25 () (_ BitVec 64))
(declare-fun temp388_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp388_27 () (_ BitVec 64))
(declare-fun temp388_28 () (_ BitVec 64))
(declare-fun temp388_29 () (_ BitVec 64))
(declare-fun temp388_30 () (_ BitVec 64))
(declare-fun temp388_31 () (_ BitVec 64))
(declare-fun temp388_32 () (_ BitVec 64))
(declare-fun temp388_33 () (_ BitVec 64))
(declare-fun temp388_34 () (_ BitVec 64))
(declare-fun temp388_35 () (_ BitVec 64))
(declare-fun temp388_36 () (_ BitVec 64))
(declare-fun temp388_37 () (_ BitVec 64))
(declare-fun temp388_38 () (_ BitVec 64))
(declare-fun temp388_39 () (_ BitVec 64))
(declare-fun temp388_40 () (_ BitVec 64))
(declare-fun temp388_41 () (_ BitVec 64))
(declare-fun temp388_42 () (_ BitVec 64))
(declare-fun temp388_43 () (_ BitVec 64))
(declare-fun temp388_44 () (_ BitVec 64))
(declare-fun temp388_45 () (_ BitVec 64))
(declare-fun temp388_46 () (_ BitVec 64))
(declare-fun temp388_47 () (_ BitVec 64))
(declare-fun temp388_48 () (_ BitVec 64))
(declare-fun temp388_49 () (_ BitVec 64))
(declare-fun temp388_50 () (_ BitVec 64))
(declare-fun temp388_51 () (_ BitVec 64))
(declare-fun temp388_52 () (_ BitVec 64))
(declare-fun temp388_53 () (_ BitVec 64))
(declare-fun temp388_54 () (_ BitVec 64))
(declare-fun temp388_55 () (_ BitVec 64))
(declare-fun temp388_56 () (_ BitVec 64))
(declare-fun temp388_57 () (_ BitVec 64))
(declare-fun temp388_58 () (_ BitVec 64))
(declare-fun temp388_59 () (_ BitVec 64))
(declare-fun temp388_60 () (_ BitVec 64))
(declare-fun temp388_61 () (_ BitVec 64))
(declare-fun temp388_62 () (_ BitVec 64))
(declare-fun temp388_63 () (_ BitVec 64))
(declare-fun temp388_64 () (_ BitVec 64))
(declare-fun temp388_65 () (_ BitVec 64))
(declare-fun temp388_66 () (_ BitVec 64))
(declare-fun temp388_67 () (_ BitVec 64))
(declare-fun temp388_68 () (_ BitVec 64))
(declare-fun temp388_69 () (_ BitVec 64))
(declare-fun temp388_70 () (_ BitVec 64))
(declare-fun temp388_71 () (_ BitVec 64))
(declare-fun temp388_72 () (_ BitVec 64))
(declare-fun temp388_73 () (_ BitVec 64))
(declare-fun temp388_74 () (_ BitVec 64))
(declare-fun temp388_75 () (_ BitVec 64))
(declare-fun temp388_76 () (_ BitVec 64))
(declare-fun temp388_77 () (_ BitVec 64))
(declare-fun temp388_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp388_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp388_80 () (_ BitVec 64))
(declare-fun var1248381 () (_ BitVec 64))
(declare-fun temp388_81 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp388_82 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp388_83 () (_ BitVec 64))
(declare-fun temp388_84 () (_ BitVec 64))
(declare-fun var1970478 () (_ BitVec 64))
(declare-fun temp388_85 () (_ BitVec 64))
(declare-fun var1970479 () (_ BitVec 64))
(declare-fun var2294910 () (_ BitVec 64))
(declare-fun var2294911 () (_ BitVec 64))
(declare-fun temp388_86 () (_ BitVec 64))
(declare-fun var2625838 () (_ BitVec 64))
(declare-fun temp388_87 () (_ BitVec 64))
(declare-fun var2625839 () (_ BitVec 64))
(declare-fun var2950270 () (_ BitVec 64))
(declare-fun var2950271 () (_ BitVec 64))
(declare-fun temp388_88 () (_ BitVec 64))
(declare-fun var3477914 () (_ BitVec 64))
(declare-fun temp388_89 () (_ BitVec 64))
(declare-fun var4002202 () (_ BitVec 64))
(assert (= temp388_1 #x0000000000080000))
(assert (= var461925 temp388_1))
(assert (= temp388_2 #x0000000000080000))
(assert (= var724069 temp388_2))
(assert (= temp388_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp388_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp388_4 #x0000000000000000))
(assert (= var69380 temp388_4))
(assert (= temp388_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp388_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp388_6 #x0000000000000000))
(assert (= var69401 temp388_6))
(assert (= temp388_7 #x0000000000000000))
(assert (= temp388_8 temp388_7))
(assert (= temp388_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_8)))
(assert (= temp388_10 #x0000000000000001))
(assert (= temp388_11 temp388_10))
(assert (= temp388_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_11)))
(assert (= temp388_13 #x0000000000000002))
(assert (= temp388_14 temp388_13))
(assert (= temp388_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_14)))
(assert (= temp388_16 #x0000000000000003))
(assert (= temp388_17 temp388_16))
(assert (= temp388_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_17)))
(assert (= temp388_19 #x0000000000000004))
(assert (= temp388_20 temp388_19))
(assert (= temp388_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_20)))
(assert (= temp388_22 #x0000000000000005))
(assert (= temp388_23 temp388_22))
(assert (= temp388_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_23)))
(assert (= temp388_25 #x0000000000000000))
(assert (= temp388_26 temp388_25))
(assert (= temp388_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp388_26)))
(assert (= temp388_28 #x0000000000000001))
(assert (= temp388_29 temp388_28))
(assert (= temp388_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp388_29)))
(assert (= temp388_31 #x0000000000000002))
(assert (= temp388_32 temp388_31))
(assert (= temp388_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp388_32)))
(assert (= temp388_34 #x0000000000000003))
(assert (= temp388_35 temp388_34))
(assert (= temp388_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp388_35)))
(assert (= temp388_37 #x0000000000000004))
(assert (= temp388_38 temp388_37))
(assert (= temp388_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp388_38)))
(assert (= temp388_40 #x0000000000000005))
(assert (= temp388_41 temp388_40))
(assert (= temp388_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp388_41)))
(assert (= temp388_43 temp388_11))
(assert (= temp388_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp388_43)))
(assert (= temp388_45 temp388_14))
(assert (= temp388_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp388_45)))
(assert (= temp388_47 temp388_17))
(assert (= temp388_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp388_47)))
(assert (= temp388_49 temp388_20))
(assert (= temp388_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp388_49)))
(assert (= temp388_51 temp388_23))
(assert (= temp388_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp388_51)))
(assert (= temp388_53 temp388_8))
(assert (= temp388_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp388_53)))
(assert (= temp388_55 temp388_26))
(assert (= temp388_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_55)))
(assert (= temp388_57 temp388_29))
(assert (= temp388_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_57)))
(assert (= temp388_59 temp388_32))
(assert (= temp388_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_59)))
(assert (= temp388_61 temp388_35))
(assert (= temp388_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_61)))
(assert (= temp388_63 temp388_38))
(assert (= temp388_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_63)))
(assert (= temp388_65 temp388_41))
(assert (= temp388_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_65)))
(assert (= temp388_67 temp388_43))
(assert (= temp388_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_67)))
(assert (= temp388_69 temp388_45))
(assert (= temp388_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_69)))
(assert (= temp388_71 temp388_47))
(assert (= temp388_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_71)))
(assert (= temp388_73 temp388_49))
(assert (= temp388_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_73)))
(assert (= temp388_75 temp388_51))
(assert (= temp388_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_75)))
(assert (= temp388_77 temp388_53))
(assert (= temp388_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_77)))
(assert (= (and true
        (= temp388_44 temp388_12)
        (= temp388_46 temp388_15)
        (= temp388_48 temp388_18)
        (= temp388_50 temp388_21)
        (= temp388_52 temp388_24)
        (= temp388_54 temp388_9)
        (= temp388_56 temp388_27)
        (= temp388_58 temp388_30)
        (= temp388_60 temp388_33)
        (= temp388_62 temp388_36)
        (= temp388_64 temp388_39)
        (= temp388_66 temp388_42)
        (= temp388_68 temp388_44)
        (= temp388_70 temp388_46)
        (= temp388_72 temp388_48)
        (= temp388_74 temp388_50)
        (= temp388_76 temp388_52)
        (= temp388_78 temp388_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp388_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp388_79))
(assert (= temp388_80 #x0000000009c00400))
(assert (= var1248381 temp388_80))
(assert (= temp388_81 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp388_81)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp388_82 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp388_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp388_83 #x0000000000000000))
(assert (= var69546 temp388_83))
(assert (= temp388_84 #x0000000000000000))
(assert (= var1970478 temp388_84))
(assert (= temp388_85 #x0000000000000000))
(assert (= var1970479 temp388_85))
(assert (= var2294910 var1970478))
(assert (= var2294911 var1970479))
(assert (= temp388_86 #x0000000000000000))
(assert (= var2625838 temp388_86))
(assert (= temp388_87 #x0000000000000000))
(assert (= var2625839 temp388_87))
(assert (= var2950270 var2625838))
(assert (= var2950271 var2625839))
(assert (= temp388_88 #x0000000000000001))
(assert (= var3477914 temp388_88))
(assert (= temp388_89 #x0000000000000001))
(assert (= var4002202 temp388_89))
(model-add temp388_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp388_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp388_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp388_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






