(declare-fun temp285_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp285_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp285_3 () (_ BitVec 64))
(declare-fun temp285_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp285_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp285_6 () (_ BitVec 64))
(declare-fun temp285_7 () (_ BitVec 64))
(declare-fun temp285_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp285_9 () (_ BitVec 64))
(declare-fun temp285_10 () (_ BitVec 64))
(declare-fun temp285_11 () (_ BitVec 64))
(declare-fun temp285_12 () (_ BitVec 64))
(declare-fun temp285_13 () (_ BitVec 64))
(declare-fun temp285_14 () (_ BitVec 64))
(declare-fun temp285_15 () (_ BitVec 64))
(declare-fun temp285_16 () (_ BitVec 64))
(declare-fun temp285_17 () (_ BitVec 64))
(declare-fun temp285_18 () (_ BitVec 64))
(declare-fun temp285_19 () (_ BitVec 64))
(declare-fun temp285_20 () (_ BitVec 64))
(declare-fun temp285_21 () (_ BitVec 64))
(declare-fun temp285_22 () (_ BitVec 64))
(declare-fun temp285_23 () (_ BitVec 64))
(declare-fun temp285_24 () (_ BitVec 64))
(declare-fun temp285_25 () (_ BitVec 64))
(declare-fun temp285_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp285_27 () (_ BitVec 64))
(declare-fun temp285_28 () (_ BitVec 64))
(declare-fun temp285_29 () (_ BitVec 64))
(declare-fun temp285_30 () (_ BitVec 64))
(declare-fun temp285_31 () (_ BitVec 64))
(declare-fun temp285_32 () (_ BitVec 64))
(declare-fun temp285_33 () (_ BitVec 64))
(declare-fun temp285_34 () (_ BitVec 64))
(declare-fun temp285_35 () (_ BitVec 64))
(declare-fun temp285_36 () (_ BitVec 64))
(declare-fun temp285_37 () (_ BitVec 64))
(declare-fun temp285_38 () (_ BitVec 64))
(declare-fun temp285_39 () (_ BitVec 64))
(declare-fun temp285_40 () (_ BitVec 64))
(declare-fun temp285_41 () (_ BitVec 64))
(declare-fun temp285_42 () (_ BitVec 64))
(declare-fun temp285_43 () (_ BitVec 64))
(declare-fun temp285_44 () (_ BitVec 64))
(declare-fun temp285_45 () (_ BitVec 64))
(declare-fun temp285_46 () (_ BitVec 64))
(declare-fun temp285_47 () (_ BitVec 64))
(declare-fun temp285_48 () (_ BitVec 64))
(declare-fun temp285_49 () (_ BitVec 64))
(declare-fun temp285_50 () (_ BitVec 64))
(declare-fun temp285_51 () (_ BitVec 64))
(declare-fun temp285_52 () (_ BitVec 64))
(declare-fun temp285_53 () (_ BitVec 64))
(declare-fun temp285_54 () (_ BitVec 64))
(declare-fun temp285_55 () (_ BitVec 64))
(declare-fun temp285_56 () (_ BitVec 64))
(declare-fun temp285_57 () (_ BitVec 64))
(declare-fun temp285_58 () (_ BitVec 64))
(declare-fun temp285_59 () (_ BitVec 64))
(declare-fun temp285_60 () (_ BitVec 64))
(declare-fun temp285_61 () (_ BitVec 64))
(declare-fun temp285_62 () (_ BitVec 64))
(declare-fun temp285_63 () (_ BitVec 64))
(declare-fun temp285_64 () (_ BitVec 64))
(declare-fun temp285_65 () (_ BitVec 64))
(declare-fun temp285_66 () (_ BitVec 64))
(declare-fun temp285_67 () (_ BitVec 64))
(declare-fun temp285_68 () (_ BitVec 64))
(declare-fun temp285_69 () (_ BitVec 64))
(declare-fun temp285_70 () (_ BitVec 64))
(declare-fun temp285_71 () (_ BitVec 64))
(declare-fun temp285_72 () (_ BitVec 64))
(declare-fun temp285_73 () (_ BitVec 64))
(declare-fun temp285_74 () (_ BitVec 64))
(declare-fun temp285_75 () (_ BitVec 64))
(declare-fun temp285_76 () (_ BitVec 64))
(declare-fun temp285_77 () (_ BitVec 64))
(declare-fun temp285_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp285_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp285_80 () (_ BitVec 64))
(declare-fun var1248381 () (_ BitVec 64))
(declare-fun temp285_81 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp285_82 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp285_83 () (_ BitVec 64))
(declare-fun temp285_84 () (_ BitVec 64))
(declare-fun var2101550 () (_ BitVec 64))
(declare-fun temp285_85 () (_ BitVec 64))
(declare-fun var2101551 () (_ BitVec 64))
(declare-fun var2425982 () (_ BitVec 64))
(declare-fun var2425983 () (_ BitVec 64))
(declare-fun temp285_86 () (_ BitVec 64))
(declare-fun var3150234 () (_ BitVec 64))
(declare-fun temp285_87 () (_ BitVec 64))
(declare-fun var3674522 () (_ BitVec 64))
(declare-fun temp285_88 () (_ BitVec 64))
(declare-fun var4592547 () (_ BitVec 64))
(declare-fun temp285_90 () (_ BitVec 64))
(declare-fun temp285_89 () (_ BitVec 64))
(assert (= temp285_1 #x0000000000080000))
(assert (= var461925 temp285_1))
(assert (= temp285_2 #x0000000000080000))
(assert (= var724069 temp285_2))
(assert (= temp285_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp285_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_4 #x0000000000000000))
(assert (= var69380 temp285_4))
(assert (= temp285_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp285_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_6 #x0000000000000000))
(assert (= var69401 temp285_6))
(assert (= temp285_7 #x0000000000000000))
(assert (= temp285_8 temp285_7))
(assert (= temp285_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_8)))
(assert (= temp285_10 #x0000000000000001))
(assert (= temp285_11 temp285_10))
(assert (= temp285_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_11)))
(assert (= temp285_13 #x0000000000000002))
(assert (= temp285_14 temp285_13))
(assert (= temp285_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_14)))
(assert (= temp285_16 #x0000000000000003))
(assert (= temp285_17 temp285_16))
(assert (= temp285_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_17)))
(assert (= temp285_19 #x0000000000000004))
(assert (= temp285_20 temp285_19))
(assert (= temp285_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_20)))
(assert (= temp285_22 #x0000000000000005))
(assert (= temp285_23 temp285_22))
(assert (= temp285_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_23)))
(assert (= temp285_25 #x0000000000000000))
(assert (= temp285_26 temp285_25))
(assert (= temp285_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp285_26)))
(assert (= temp285_28 #x0000000000000001))
(assert (= temp285_29 temp285_28))
(assert (= temp285_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp285_29)))
(assert (= temp285_31 #x0000000000000002))
(assert (= temp285_32 temp285_31))
(assert (= temp285_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp285_32)))
(assert (= temp285_34 #x0000000000000003))
(assert (= temp285_35 temp285_34))
(assert (= temp285_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp285_35)))
(assert (= temp285_37 #x0000000000000004))
(assert (= temp285_38 temp285_37))
(assert (= temp285_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp285_38)))
(assert (= temp285_40 #x0000000000000005))
(assert (= temp285_41 temp285_40))
(assert (= temp285_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp285_41)))
(assert (= temp285_43 temp285_11))
(assert (= temp285_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp285_43)))
(assert (= temp285_45 temp285_14))
(assert (= temp285_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp285_45)))
(assert (= temp285_47 temp285_17))
(assert (= temp285_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp285_47)))
(assert (= temp285_49 temp285_20))
(assert (= temp285_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp285_49)))
(assert (= temp285_51 temp285_23))
(assert (= temp285_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp285_51)))
(assert (= temp285_53 temp285_8))
(assert (= temp285_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp285_53)))
(assert (= temp285_55 temp285_26))
(assert (= temp285_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_55)))
(assert (= temp285_57 temp285_29))
(assert (= temp285_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_57)))
(assert (= temp285_59 temp285_32))
(assert (= temp285_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_59)))
(assert (= temp285_61 temp285_35))
(assert (= temp285_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_61)))
(assert (= temp285_63 temp285_38))
(assert (= temp285_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_63)))
(assert (= temp285_65 temp285_41))
(assert (= temp285_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_65)))
(assert (= temp285_67 temp285_43))
(assert (= temp285_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_67)))
(assert (= temp285_69 temp285_45))
(assert (= temp285_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_69)))
(assert (= temp285_71 temp285_47))
(assert (= temp285_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_71)))
(assert (= temp285_73 temp285_49))
(assert (= temp285_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_73)))
(assert (= temp285_75 temp285_51))
(assert (= temp285_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_75)))
(assert (= temp285_77 temp285_53))
(assert (= temp285_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_77)))
(assert (= (and true
        (= temp285_44 temp285_12)
        (= temp285_46 temp285_15)
        (= temp285_48 temp285_18)
        (= temp285_50 temp285_21)
        (= temp285_52 temp285_24)
        (= temp285_54 temp285_9)
        (= temp285_56 temp285_27)
        (= temp285_58 temp285_30)
        (= temp285_60 temp285_33)
        (= temp285_62 temp285_36)
        (= temp285_64 temp285_39)
        (= temp285_66 temp285_42)
        (= temp285_68 temp285_44)
        (= temp285_70 temp285_46)
        (= temp285_72 temp285_48)
        (= temp285_74 temp285_50)
        (= temp285_76 temp285_52)
        (= temp285_78 temp285_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp285_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp285_79))
(assert (= temp285_80 #x0000000009c00400))
(assert (= var1248381 temp285_80))
(assert (= temp285_81 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp285_81)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_82 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp285_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp285_83 #x0000000000000000))
(assert (= var69546 temp285_83))
(assert (= temp285_84 #x0000000000000000))
(assert (= var2101550 temp285_84))
(assert (= temp285_85 #x0000000000000000))
(assert (= var2101551 temp285_85))
(assert (= var2425982 var2101550))
(assert (= var2425983 var2101551))
(assert (= temp285_86 #x0000000000000001))
(assert (= var3150234 temp285_86))
(assert (= temp285_87 #x0000000000000001))
(assert (= var3674522 temp285_87))
(assert (= temp285_88 #x000000000000000b))
(assert (= var4592547 temp285_88))
(assert (= temp285_90 #x0000000000000001))
(assert (= temp285_89 temp285_90))
(model-add temp285_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp285_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp285_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp285_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






