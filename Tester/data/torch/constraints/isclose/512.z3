(declare-fun temp636_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp636_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp636_3 () (_ BitVec 64))
(declare-fun temp636_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp636_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp636_6 () (_ BitVec 64))
(declare-fun temp636_7 () (_ BitVec 64))
(declare-fun temp636_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp636_9 () (_ BitVec 64))
(declare-fun temp636_10 () (_ BitVec 64))
(declare-fun temp636_11 () (_ BitVec 64))
(declare-fun temp636_12 () (_ BitVec 64))
(declare-fun temp636_13 () (_ BitVec 64))
(declare-fun temp636_14 () (_ BitVec 64))
(declare-fun temp636_15 () (_ BitVec 64))
(declare-fun temp636_16 () (_ BitVec 64))
(declare-fun temp636_17 () (_ BitVec 64))
(declare-fun temp636_18 () (_ BitVec 64))
(declare-fun temp636_19 () (_ BitVec 64))
(declare-fun temp636_20 () (_ BitVec 64))
(declare-fun temp636_21 () (_ BitVec 64))
(declare-fun temp636_22 () (_ BitVec 64))
(declare-fun temp636_23 () (_ BitVec 64))
(declare-fun temp636_24 () (_ BitVec 64))
(declare-fun temp636_25 () (_ BitVec 64))
(declare-fun temp636_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp636_27 () (_ BitVec 64))
(declare-fun temp636_28 () (_ BitVec 64))
(declare-fun temp636_29 () (_ BitVec 64))
(declare-fun temp636_30 () (_ BitVec 64))
(declare-fun temp636_31 () (_ BitVec 64))
(declare-fun temp636_32 () (_ BitVec 64))
(declare-fun temp636_33 () (_ BitVec 64))
(declare-fun temp636_34 () (_ BitVec 64))
(declare-fun temp636_35 () (_ BitVec 64))
(declare-fun temp636_36 () (_ BitVec 64))
(declare-fun temp636_37 () (_ BitVec 64))
(declare-fun temp636_38 () (_ BitVec 64))
(declare-fun temp636_39 () (_ BitVec 64))
(declare-fun temp636_40 () (_ BitVec 64))
(declare-fun temp636_41 () (_ BitVec 64))
(declare-fun temp636_42 () (_ BitVec 64))
(declare-fun temp636_43 () (_ BitVec 64))
(declare-fun temp636_44 () (_ BitVec 64))
(declare-fun temp636_45 () (_ BitVec 64))
(declare-fun temp636_46 () (_ BitVec 64))
(declare-fun temp636_47 () (_ BitVec 64))
(declare-fun temp636_48 () (_ BitVec 64))
(declare-fun temp636_49 () (_ BitVec 64))
(declare-fun temp636_50 () (_ BitVec 64))
(declare-fun temp636_51 () (_ BitVec 64))
(declare-fun temp636_52 () (_ BitVec 64))
(declare-fun temp636_53 () (_ BitVec 64))
(declare-fun temp636_54 () (_ BitVec 64))
(declare-fun temp636_55 () (_ BitVec 64))
(declare-fun temp636_56 () (_ BitVec 64))
(declare-fun temp636_57 () (_ BitVec 64))
(declare-fun temp636_58 () (_ BitVec 64))
(declare-fun temp636_59 () (_ BitVec 64))
(declare-fun temp636_60 () (_ BitVec 64))
(declare-fun temp636_61 () (_ BitVec 64))
(declare-fun temp636_62 () (_ BitVec 64))
(declare-fun temp636_63 () (_ BitVec 64))
(declare-fun temp636_64 () (_ BitVec 64))
(declare-fun temp636_65 () (_ BitVec 64))
(declare-fun temp636_66 () (_ BitVec 64))
(declare-fun temp636_67 () (_ BitVec 64))
(declare-fun temp636_68 () (_ BitVec 64))
(declare-fun temp636_69 () (_ BitVec 64))
(declare-fun temp636_70 () (_ BitVec 64))
(declare-fun temp636_71 () (_ BitVec 64))
(declare-fun temp636_72 () (_ BitVec 64))
(declare-fun temp636_73 () (_ BitVec 64))
(declare-fun temp636_74 () (_ BitVec 64))
(declare-fun temp636_75 () (_ BitVec 64))
(declare-fun temp636_76 () (_ BitVec 64))
(declare-fun temp636_77 () (_ BitVec 64))
(declare-fun temp636_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp636_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp636_80 () (_ BitVec 64))
(declare-fun var1184010 () (_ BitVec 64))
(declare-fun var1183975 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp636_81 () (_ BitVec 64))
(declare-fun temp636_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp636_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp636_84 () (_ BitVec 64))
(declare-fun temp636_85 () (_ BitVec 64))
(declare-fun var1904942 () (_ BitVec 64))
(declare-fun temp636_86 () (_ BitVec 64))
(declare-fun var1904943 () (_ BitVec 64))
(declare-fun var2229374 () (_ BitVec 64))
(declare-fun var2229375 () (_ BitVec 64))
(declare-fun temp636_87 () (_ BitVec 64))
(declare-fun var2560302 () (_ BitVec 64))
(declare-fun temp636_88 () (_ BitVec 64))
(declare-fun var2560303 () (_ BitVec 64))
(declare-fun var2884734 () (_ BitVec 64))
(declare-fun var2884735 () (_ BitVec 64))
(declare-fun temp636_89 () (_ BitVec 64))
(declare-fun var3412378 () (_ BitVec 64))
(declare-fun temp636_90 () (_ BitVec 64))
(declare-fun var3936666 () (_ BitVec 64))
(assert (= temp636_1 #x0000000000080000))
(assert (= var461925 temp636_1))
(assert (= temp636_2 #x0000000000080000))
(assert (= var724069 temp636_2))
(assert (= temp636_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp636_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp636_4 #x0000000000000000))
(assert (= var69380 temp636_4))
(assert (= temp636_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp636_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp636_6 #x0000000000000000))
(assert (= var69401 temp636_6))
(assert (= temp636_7 #x0000000000000000))
(assert (= temp636_8 temp636_7))
(assert (= temp636_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp636_8)))
(assert (= temp636_10 #x0000000000000001))
(assert (= temp636_11 temp636_10))
(assert (= temp636_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp636_11)))
(assert (= temp636_13 #x0000000000000002))
(assert (= temp636_14 temp636_13))
(assert (= temp636_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp636_14)))
(assert (= temp636_16 #x0000000000000003))
(assert (= temp636_17 temp636_16))
(assert (= temp636_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp636_17)))
(assert (= temp636_19 #x0000000000000004))
(assert (= temp636_20 temp636_19))
(assert (= temp636_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp636_20)))
(assert (= temp636_22 #x0000000000000005))
(assert (= temp636_23 temp636_22))
(assert (= temp636_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp636_23)))
(assert (= temp636_25 #x0000000000000000))
(assert (= temp636_26 temp636_25))
(assert (= temp636_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp636_26)))
(assert (= temp636_28 #x0000000000000001))
(assert (= temp636_29 temp636_28))
(assert (= temp636_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp636_29)))
(assert (= temp636_31 #x0000000000000002))
(assert (= temp636_32 temp636_31))
(assert (= temp636_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp636_32)))
(assert (= temp636_34 #x0000000000000003))
(assert (= temp636_35 temp636_34))
(assert (= temp636_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp636_35)))
(assert (= temp636_37 #x0000000000000004))
(assert (= temp636_38 temp636_37))
(assert (= temp636_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp636_38)))
(assert (= temp636_40 #x0000000000000005))
(assert (= temp636_41 temp636_40))
(assert (= temp636_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp636_41)))
(assert (= temp636_43 temp636_11))
(assert (= temp636_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp636_43)))
(assert (= temp636_45 temp636_14))
(assert (= temp636_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp636_45)))
(assert (= temp636_47 temp636_17))
(assert (= temp636_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp636_47)))
(assert (= temp636_49 temp636_20))
(assert (= temp636_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp636_49)))
(assert (= temp636_51 temp636_23))
(assert (= temp636_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp636_51)))
(assert (= temp636_53 temp636_8))
(assert (= temp636_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp636_53)))
(assert (= temp636_55 temp636_26))
(assert (= temp636_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp636_55)))
(assert (= temp636_57 temp636_29))
(assert (= temp636_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp636_57)))
(assert (= temp636_59 temp636_32))
(assert (= temp636_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp636_59)))
(assert (= temp636_61 temp636_35))
(assert (= temp636_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp636_61)))
(assert (= temp636_63 temp636_38))
(assert (= temp636_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp636_63)))
(assert (= temp636_65 temp636_41))
(assert (= temp636_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp636_65)))
(assert (= temp636_67 temp636_43))
(assert (= temp636_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp636_67)))
(assert (= temp636_69 temp636_45))
(assert (= temp636_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp636_69)))
(assert (= temp636_71 temp636_47))
(assert (= temp636_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp636_71)))
(assert (= temp636_73 temp636_49))
(assert (= temp636_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp636_73)))
(assert (= temp636_75 temp636_51))
(assert (= temp636_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp636_75)))
(assert (= temp636_77 temp636_53))
(assert (= temp636_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp636_77)))
(assert (= (and true
        (= temp636_44 temp636_12)
        (= temp636_46 temp636_15)
        (= temp636_48 temp636_18)
        (= temp636_50 temp636_21)
        (= temp636_52 temp636_24)
        (= temp636_54 temp636_9)
        (= temp636_56 temp636_27)
        (= temp636_58 temp636_30)
        (= temp636_60 temp636_33)
        (= temp636_62 temp636_36)
        (= temp636_64 temp636_39)
        (= temp636_66 temp636_42)
        (= temp636_68 temp636_44)
        (= temp636_70 temp636_46)
        (= temp636_72 temp636_48)
        (= temp636_74 temp636_50)
        (= temp636_76 temp636_52)
        (= temp636_78 temp636_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp636_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp636_79))
(assert (= temp636_80 #x0000000000000001))
(assert (= var1184010 temp636_80))
(assert (= var1183975 var1184010))
(assert (= var69428 var1183975))
(assert (= temp636_81 #x0000000000000001))
(assert (= var69428 temp636_81))
(assert (= temp636_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp636_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp636_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp636_83)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp636_84 #x0000000000000000))
(assert (= var69546 temp636_84))
(assert (= temp636_85 #x0000000000000000))
(assert (= var1904942 temp636_85))
(assert (= temp636_86 #x0000000000000000))
(assert (= var1904943 temp636_86))
(assert (= var2229374 var1904942))
(assert (= var2229375 var1904943))
(assert (= temp636_87 #x0000000000000000))
(assert (= var2560302 temp636_87))
(assert (= temp636_88 #x0000000000000000))
(assert (= var2560303 temp636_88))
(assert (= var2884734 var2560302))
(assert (= var2884735 var2560303))
(assert (= temp636_89 #x0000000000000001))
(assert (= var3412378 temp636_89))
(assert (= temp636_90 #x0000000000000001))
(assert (= var3936666 temp636_90))
(model-add temp636_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp636_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp636_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp636_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






