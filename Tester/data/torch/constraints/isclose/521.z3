(declare-fun temp645_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp645_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp645_3 () (_ BitVec 64))
(declare-fun temp645_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp645_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp645_6 () (_ BitVec 64))
(declare-fun temp645_7 () (_ BitVec 64))
(declare-fun temp645_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp645_9 () (_ BitVec 64))
(declare-fun temp645_10 () (_ BitVec 64))
(declare-fun temp645_11 () (_ BitVec 64))
(declare-fun temp645_12 () (_ BitVec 64))
(declare-fun temp645_13 () (_ BitVec 64))
(declare-fun temp645_14 () (_ BitVec 64))
(declare-fun temp645_15 () (_ BitVec 64))
(declare-fun temp645_16 () (_ BitVec 64))
(declare-fun temp645_17 () (_ BitVec 64))
(declare-fun temp645_18 () (_ BitVec 64))
(declare-fun temp645_19 () (_ BitVec 64))
(declare-fun temp645_20 () (_ BitVec 64))
(declare-fun temp645_21 () (_ BitVec 64))
(declare-fun temp645_22 () (_ BitVec 64))
(declare-fun temp645_23 () (_ BitVec 64))
(declare-fun temp645_24 () (_ BitVec 64))
(declare-fun temp645_25 () (_ BitVec 64))
(declare-fun temp645_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp645_27 () (_ BitVec 64))
(declare-fun temp645_28 () (_ BitVec 64))
(declare-fun temp645_29 () (_ BitVec 64))
(declare-fun temp645_30 () (_ BitVec 64))
(declare-fun temp645_31 () (_ BitVec 64))
(declare-fun temp645_32 () (_ BitVec 64))
(declare-fun temp645_33 () (_ BitVec 64))
(declare-fun temp645_34 () (_ BitVec 64))
(declare-fun temp645_35 () (_ BitVec 64))
(declare-fun temp645_36 () (_ BitVec 64))
(declare-fun temp645_37 () (_ BitVec 64))
(declare-fun temp645_38 () (_ BitVec 64))
(declare-fun temp645_39 () (_ BitVec 64))
(declare-fun temp645_40 () (_ BitVec 64))
(declare-fun temp645_41 () (_ BitVec 64))
(declare-fun temp645_42 () (_ BitVec 64))
(declare-fun temp645_43 () (_ BitVec 64))
(declare-fun temp645_44 () (_ BitVec 64))
(declare-fun temp645_45 () (_ BitVec 64))
(declare-fun temp645_46 () (_ BitVec 64))
(declare-fun temp645_47 () (_ BitVec 64))
(declare-fun temp645_48 () (_ BitVec 64))
(declare-fun temp645_49 () (_ BitVec 64))
(declare-fun temp645_50 () (_ BitVec 64))
(declare-fun temp645_51 () (_ BitVec 64))
(declare-fun temp645_52 () (_ BitVec 64))
(declare-fun temp645_53 () (_ BitVec 64))
(declare-fun temp645_54 () (_ BitVec 64))
(declare-fun temp645_55 () (_ BitVec 64))
(declare-fun temp645_56 () (_ BitVec 64))
(declare-fun temp645_57 () (_ BitVec 64))
(declare-fun temp645_58 () (_ BitVec 64))
(declare-fun temp645_59 () (_ BitVec 64))
(declare-fun temp645_60 () (_ BitVec 64))
(declare-fun temp645_61 () (_ BitVec 64))
(declare-fun temp645_62 () (_ BitVec 64))
(declare-fun temp645_63 () (_ BitVec 64))
(declare-fun temp645_64 () (_ BitVec 64))
(declare-fun temp645_65 () (_ BitVec 64))
(declare-fun temp645_66 () (_ BitVec 64))
(declare-fun temp645_67 () (_ BitVec 64))
(declare-fun temp645_68 () (_ BitVec 64))
(declare-fun temp645_69 () (_ BitVec 64))
(declare-fun temp645_70 () (_ BitVec 64))
(declare-fun temp645_71 () (_ BitVec 64))
(declare-fun temp645_72 () (_ BitVec 64))
(declare-fun temp645_73 () (_ BitVec 64))
(declare-fun temp645_74 () (_ BitVec 64))
(declare-fun temp645_75 () (_ BitVec 64))
(declare-fun temp645_76 () (_ BitVec 64))
(declare-fun temp645_77 () (_ BitVec 64))
(declare-fun temp645_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp645_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp645_80 () (_ BitVec 64))
(declare-fun var1184010 () (_ BitVec 64))
(declare-fun var1183975 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp645_81 () (_ BitVec 64))
(declare-fun temp645_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp645_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp645_84 () (_ BitVec 64))
(declare-fun temp645_85 () (_ BitVec 64))
(declare-fun var1904942 () (_ BitVec 64))
(declare-fun temp645_86 () (_ BitVec 64))
(declare-fun var1904943 () (_ BitVec 64))
(declare-fun var2229374 () (_ BitVec 64))
(declare-fun var2229375 () (_ BitVec 64))
(declare-fun temp645_87 () (_ BitVec 64))
(declare-fun var2560302 () (_ BitVec 64))
(declare-fun temp645_88 () (_ BitVec 64))
(declare-fun var2560303 () (_ BitVec 64))
(declare-fun var2884734 () (_ BitVec 64))
(declare-fun var2884735 () (_ BitVec 64))
(declare-fun temp645_89 () (_ BitVec 64))
(declare-fun var3412378 () (_ BitVec 64))
(declare-fun temp645_90 () (_ BitVec 64))
(declare-fun var3936666 () (_ BitVec 64))
(assert (= temp645_1 #x0000000000080000))
(assert (= var461925 temp645_1))
(assert (= temp645_2 #x0000000000080000))
(assert (= var724069 temp645_2))
(assert (= temp645_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp645_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp645_4 #x0000000000000000))
(assert (= var69380 temp645_4))
(assert (= temp645_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp645_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp645_6 #x0000000000000000))
(assert (= var69401 temp645_6))
(assert (= temp645_7 #x0000000000000000))
(assert (= temp645_8 temp645_7))
(assert (= temp645_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_8)))
(assert (= temp645_10 #x0000000000000001))
(assert (= temp645_11 temp645_10))
(assert (= temp645_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_11)))
(assert (= temp645_13 #x0000000000000002))
(assert (= temp645_14 temp645_13))
(assert (= temp645_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_14)))
(assert (= temp645_16 #x0000000000000003))
(assert (= temp645_17 temp645_16))
(assert (= temp645_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_17)))
(assert (= temp645_19 #x0000000000000004))
(assert (= temp645_20 temp645_19))
(assert (= temp645_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_20)))
(assert (= temp645_22 #x0000000000000005))
(assert (= temp645_23 temp645_22))
(assert (= temp645_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_23)))
(assert (= temp645_25 #x0000000000000000))
(assert (= temp645_26 temp645_25))
(assert (= temp645_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp645_26)))
(assert (= temp645_28 #x0000000000000001))
(assert (= temp645_29 temp645_28))
(assert (= temp645_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp645_29)))
(assert (= temp645_31 #x0000000000000002))
(assert (= temp645_32 temp645_31))
(assert (= temp645_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp645_32)))
(assert (= temp645_34 #x0000000000000003))
(assert (= temp645_35 temp645_34))
(assert (= temp645_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp645_35)))
(assert (= temp645_37 #x0000000000000004))
(assert (= temp645_38 temp645_37))
(assert (= temp645_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp645_38)))
(assert (= temp645_40 #x0000000000000005))
(assert (= temp645_41 temp645_40))
(assert (= temp645_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp645_41)))
(assert (= temp645_43 temp645_11))
(assert (= temp645_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp645_43)))
(assert (= temp645_45 temp645_14))
(assert (= temp645_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp645_45)))
(assert (= temp645_47 temp645_17))
(assert (= temp645_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp645_47)))
(assert (= temp645_49 temp645_20))
(assert (= temp645_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp645_49)))
(assert (= temp645_51 temp645_23))
(assert (= temp645_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp645_51)))
(assert (= temp645_53 temp645_8))
(assert (= temp645_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp645_53)))
(assert (= temp645_55 temp645_26))
(assert (= temp645_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_55)))
(assert (= temp645_57 temp645_29))
(assert (= temp645_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_57)))
(assert (= temp645_59 temp645_32))
(assert (= temp645_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_59)))
(assert (= temp645_61 temp645_35))
(assert (= temp645_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_61)))
(assert (= temp645_63 temp645_38))
(assert (= temp645_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_63)))
(assert (= temp645_65 temp645_41))
(assert (= temp645_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_65)))
(assert (= temp645_67 temp645_43))
(assert (= temp645_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_67)))
(assert (= temp645_69 temp645_45))
(assert (= temp645_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_69)))
(assert (= temp645_71 temp645_47))
(assert (= temp645_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_71)))
(assert (= temp645_73 temp645_49))
(assert (= temp645_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_73)))
(assert (= temp645_75 temp645_51))
(assert (= temp645_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_75)))
(assert (= temp645_77 temp645_53))
(assert (= temp645_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_77)))
(assert (= (and true
        (= temp645_44 temp645_12)
        (= temp645_46 temp645_15)
        (= temp645_48 temp645_18)
        (= temp645_50 temp645_21)
        (= temp645_52 temp645_24)
        (= temp645_54 temp645_9)
        (= temp645_56 temp645_27)
        (= temp645_58 temp645_30)
        (= temp645_60 temp645_33)
        (= temp645_62 temp645_36)
        (= temp645_64 temp645_39)
        (= temp645_66 temp645_42)
        (= temp645_68 temp645_44)
        (= temp645_70 temp645_46)
        (= temp645_72 temp645_48)
        (= temp645_74 temp645_50)
        (= temp645_76 temp645_52)
        (= temp645_78 temp645_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp645_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp645_79))
(assert (= temp645_80 #x0000000000000001))
(assert (= var1184010 temp645_80))
(assert (= var1183975 var1184010))
(assert (= var69428 var1183975))
(assert (= temp645_81 #x0000000000000001))
(assert (= var69428 temp645_81))
(assert (= temp645_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp645_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp645_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp645_83)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp645_84 #x0000000000000000))
(assert (= var69546 temp645_84))
(assert (= temp645_85 #x0000000000000000))
(assert (= var1904942 temp645_85))
(assert (= temp645_86 #x0000000000000000))
(assert (= var1904943 temp645_86))
(assert (= var2229374 var1904942))
(assert (= var2229375 var1904943))
(assert (= temp645_87 #x0000000000000000))
(assert (= var2560302 temp645_87))
(assert (= temp645_88 #x0000000000000000))
(assert (= var2560303 temp645_88))
(assert (= var2884734 var2560302))
(assert (= var2884735 var2560303))
(assert (= temp645_89 #x0000000000000001))
(assert (= var3412378 temp645_89))
(assert (= temp645_90 #x0000000000000001))
(assert (= var3936666 temp645_90))
(model-add temp645_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp645_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp645_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp645_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






