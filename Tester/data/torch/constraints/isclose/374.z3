(declare-fun temp498_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp498_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp498_3 () (_ BitVec 64))
(declare-fun temp498_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp498_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp498_6 () (_ BitVec 64))
(declare-fun temp498_7 () (_ BitVec 64))
(declare-fun temp498_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp498_9 () (_ BitVec 64))
(declare-fun temp498_10 () (_ BitVec 64))
(declare-fun temp498_11 () (_ BitVec 64))
(declare-fun temp498_12 () (_ BitVec 64))
(declare-fun temp498_13 () (_ BitVec 64))
(declare-fun temp498_14 () (_ BitVec 64))
(declare-fun temp498_15 () (_ BitVec 64))
(declare-fun temp498_16 () (_ BitVec 64))
(declare-fun temp498_17 () (_ BitVec 64))
(declare-fun temp498_18 () (_ BitVec 64))
(declare-fun temp498_19 () (_ BitVec 64))
(declare-fun temp498_20 () (_ BitVec 64))
(declare-fun temp498_21 () (_ BitVec 64))
(declare-fun temp498_22 () (_ BitVec 64))
(declare-fun temp498_23 () (_ BitVec 64))
(declare-fun temp498_24 () (_ BitVec 64))
(declare-fun temp498_25 () (_ BitVec 64))
(declare-fun temp498_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp498_27 () (_ BitVec 64))
(declare-fun temp498_28 () (_ BitVec 64))
(declare-fun temp498_29 () (_ BitVec 64))
(declare-fun temp498_30 () (_ BitVec 64))
(declare-fun temp498_31 () (_ BitVec 64))
(declare-fun temp498_32 () (_ BitVec 64))
(declare-fun temp498_33 () (_ BitVec 64))
(declare-fun temp498_34 () (_ BitVec 64))
(declare-fun temp498_35 () (_ BitVec 64))
(declare-fun temp498_36 () (_ BitVec 64))
(declare-fun temp498_37 () (_ BitVec 64))
(declare-fun temp498_38 () (_ BitVec 64))
(declare-fun temp498_39 () (_ BitVec 64))
(declare-fun temp498_40 () (_ BitVec 64))
(declare-fun temp498_41 () (_ BitVec 64))
(declare-fun temp498_42 () (_ BitVec 64))
(declare-fun temp498_43 () (_ BitVec 64))
(declare-fun temp498_44 () (_ BitVec 64))
(declare-fun temp498_45 () (_ BitVec 64))
(declare-fun temp498_46 () (_ BitVec 64))
(declare-fun temp498_47 () (_ BitVec 64))
(declare-fun temp498_48 () (_ BitVec 64))
(declare-fun temp498_49 () (_ BitVec 64))
(declare-fun temp498_50 () (_ BitVec 64))
(declare-fun temp498_51 () (_ BitVec 64))
(declare-fun temp498_52 () (_ BitVec 64))
(declare-fun temp498_53 () (_ BitVec 64))
(declare-fun temp498_54 () (_ BitVec 64))
(declare-fun temp498_55 () (_ BitVec 64))
(declare-fun temp498_56 () (_ BitVec 64))
(declare-fun temp498_57 () (_ BitVec 64))
(declare-fun temp498_58 () (_ BitVec 64))
(declare-fun temp498_59 () (_ BitVec 64))
(declare-fun temp498_60 () (_ BitVec 64))
(declare-fun temp498_61 () (_ BitVec 64))
(declare-fun temp498_62 () (_ BitVec 64))
(declare-fun temp498_63 () (_ BitVec 64))
(declare-fun temp498_64 () (_ BitVec 64))
(declare-fun temp498_65 () (_ BitVec 64))
(declare-fun temp498_66 () (_ BitVec 64))
(declare-fun temp498_67 () (_ BitVec 64))
(declare-fun temp498_68 () (_ BitVec 64))
(declare-fun temp498_69 () (_ BitVec 64))
(declare-fun temp498_70 () (_ BitVec 64))
(declare-fun temp498_71 () (_ BitVec 64))
(declare-fun temp498_72 () (_ BitVec 64))
(declare-fun temp498_73 () (_ BitVec 64))
(declare-fun temp498_74 () (_ BitVec 64))
(declare-fun temp498_75 () (_ BitVec 64))
(declare-fun temp498_76 () (_ BitVec 64))
(declare-fun temp498_77 () (_ BitVec 64))
(declare-fun temp498_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp498_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp498_80 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp498_81 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp498_82 () (_ BitVec 64))
(declare-fun temp498_83 () (_ BitVec 64))
(declare-fun var1380654 () (_ BitVec 64))
(declare-fun temp498_84 () (_ BitVec 64))
(declare-fun var1380655 () (_ BitVec 64))
(declare-fun var1705086 () (_ BitVec 64))
(declare-fun var1705087 () (_ BitVec 64))
(declare-fun temp498_85 () (_ BitVec 64))
(declare-fun var2036014 () (_ BitVec 64))
(declare-fun temp498_86 () (_ BitVec 64))
(declare-fun var2036015 () (_ BitVec 64))
(declare-fun var2360446 () (_ BitVec 64))
(declare-fun var2360447 () (_ BitVec 64))
(declare-fun temp498_87 () (_ BitVec 64))
(declare-fun var2888090 () (_ BitVec 64))
(declare-fun temp498_88 () (_ BitVec 64))
(declare-fun var3412378 () (_ BitVec 64))
(declare-fun temp498_89 () (_ BitVec 64))
(declare-fun var4330403 () (_ BitVec 64))
(declare-fun temp498_91 () (_ BitVec 64))
(declare-fun temp498_90 () (_ BitVec 64))
(declare-fun temp498_92 () (_ BitVec 64))
(declare-fun var5116835 () (_ BitVec 64))
(declare-fun temp498_94 () (_ BitVec 64))
(declare-fun temp498_93 () (_ BitVec 64))
(assert (= temp498_1 #x0000000000080000))
(assert (= var461925 temp498_1))
(assert (= temp498_2 #x0000000000080000))
(assert (= var724069 temp498_2))
(assert (= temp498_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp498_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp498_4 #x0000000000000000))
(assert (= var69380 temp498_4))
(assert (= temp498_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp498_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp498_6 #x0000000000000000))
(assert (= var69401 temp498_6))
(assert (= temp498_7 #x0000000000000000))
(assert (= temp498_8 temp498_7))
(assert (= temp498_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp498_8)))
(assert (= temp498_10 #x0000000000000001))
(assert (= temp498_11 temp498_10))
(assert (= temp498_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp498_11)))
(assert (= temp498_13 #x0000000000000002))
(assert (= temp498_14 temp498_13))
(assert (= temp498_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp498_14)))
(assert (= temp498_16 #x0000000000000003))
(assert (= temp498_17 temp498_16))
(assert (= temp498_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp498_17)))
(assert (= temp498_19 #x0000000000000004))
(assert (= temp498_20 temp498_19))
(assert (= temp498_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp498_20)))
(assert (= temp498_22 #x0000000000000005))
(assert (= temp498_23 temp498_22))
(assert (= temp498_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp498_23)))
(assert (= temp498_25 #x0000000000000000))
(assert (= temp498_26 temp498_25))
(assert (= temp498_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp498_26)))
(assert (= temp498_28 #x0000000000000001))
(assert (= temp498_29 temp498_28))
(assert (= temp498_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp498_29)))
(assert (= temp498_31 #x0000000000000002))
(assert (= temp498_32 temp498_31))
(assert (= temp498_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp498_32)))
(assert (= temp498_34 #x0000000000000003))
(assert (= temp498_35 temp498_34))
(assert (= temp498_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp498_35)))
(assert (= temp498_37 #x0000000000000004))
(assert (= temp498_38 temp498_37))
(assert (= temp498_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp498_38)))
(assert (= temp498_40 #x0000000000000005))
(assert (= temp498_41 temp498_40))
(assert (= temp498_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp498_41)))
(assert (= temp498_43 temp498_11))
(assert (= temp498_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp498_43)))
(assert (= temp498_45 temp498_14))
(assert (= temp498_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp498_45)))
(assert (= temp498_47 temp498_17))
(assert (= temp498_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp498_47)))
(assert (= temp498_49 temp498_20))
(assert (= temp498_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp498_49)))
(assert (= temp498_51 temp498_23))
(assert (= temp498_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp498_51)))
(assert (= temp498_53 temp498_8))
(assert (= temp498_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp498_53)))
(assert (= temp498_55 temp498_26))
(assert (= temp498_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp498_55)))
(assert (= temp498_57 temp498_29))
(assert (= temp498_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp498_57)))
(assert (= temp498_59 temp498_32))
(assert (= temp498_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp498_59)))
(assert (= temp498_61 temp498_35))
(assert (= temp498_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp498_61)))
(assert (= temp498_63 temp498_38))
(assert (= temp498_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp498_63)))
(assert (= temp498_65 temp498_41))
(assert (= temp498_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp498_65)))
(assert (= temp498_67 temp498_43))
(assert (= temp498_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp498_67)))
(assert (= temp498_69 temp498_45))
(assert (= temp498_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp498_69)))
(assert (= temp498_71 temp498_47))
(assert (= temp498_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp498_71)))
(assert (= temp498_73 temp498_49))
(assert (= temp498_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp498_73)))
(assert (= temp498_75 temp498_51))
(assert (= temp498_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp498_75)))
(assert (= temp498_77 temp498_53))
(assert (= temp498_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp498_77)))
(assert (= (and true
        (= temp498_44 temp498_12)
        (= temp498_46 temp498_15)
        (= temp498_48 temp498_18)
        (= temp498_50 temp498_21)
        (= temp498_52 temp498_24)
        (= temp498_54 temp498_9)
        (= temp498_56 temp498_27)
        (= temp498_58 temp498_30)
        (= temp498_60 temp498_33)
        (= temp498_62 temp498_36)
        (= temp498_64 temp498_39)
        (= temp498_66 temp498_42)
        (= temp498_68 temp498_44)
        (= temp498_70 temp498_46)
        (= temp498_72 temp498_48)
        (= temp498_74 temp498_50)
        (= temp498_76 temp498_52)
        (= temp498_78 temp498_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp498_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp498_79))
(assert (= temp498_80 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp498_80)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp498_81 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp498_81)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp498_82 #x0000000000000000))
(assert (= var69546 temp498_82))
(assert (= temp498_83 #x0000000000000000))
(assert (= var1380654 temp498_83))
(assert (= temp498_84 #x0000000000000000))
(assert (= var1380655 temp498_84))
(assert (= var1705086 var1380654))
(assert (= var1705087 var1380655))
(assert (= temp498_85 #x0000000000000000))
(assert (= var2036014 temp498_85))
(assert (= temp498_86 #x0000000000000000))
(assert (= var2036015 temp498_86))
(assert (= var2360446 var2036014))
(assert (= var2360447 var2036015))
(assert (= temp498_87 #x0000000000000001))
(assert (= var2888090 temp498_87))
(assert (= temp498_88 #x0000000000000001))
(assert (= var3412378 temp498_88))
(assert (= temp498_89 #x000000000000000b))
(assert (= var4330403 temp498_89))
(assert (= temp498_91 #x0000000000000001))
(assert (= temp498_90 temp498_91))
(assert (= temp498_92 #x000000000000000b))
(assert (= var5116835 temp498_92))
(assert (= temp498_94 #x0000000000000001))
(assert (= temp498_93 temp498_94))
(model-add temp498_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp498_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp498_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp498_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






