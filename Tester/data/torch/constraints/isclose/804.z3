(declare-fun temp1052_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp1052_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp1052_3 () (_ BitVec 64))
(declare-fun temp1052_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp1052_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp1052_6 () (_ BitVec 64))
(declare-fun temp1052_7 () (_ BitVec 64))
(declare-fun temp1052_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1052_9 () (_ BitVec 64))
(declare-fun temp1052_10 () (_ BitVec 64))
(declare-fun temp1052_11 () (_ BitVec 64))
(declare-fun temp1052_12 () (_ BitVec 64))
(declare-fun temp1052_13 () (_ BitVec 64))
(declare-fun temp1052_14 () (_ BitVec 64))
(declare-fun temp1052_15 () (_ BitVec 64))
(declare-fun temp1052_16 () (_ BitVec 64))
(declare-fun temp1052_17 () (_ BitVec 64))
(declare-fun temp1052_18 () (_ BitVec 64))
(declare-fun temp1052_19 () (_ BitVec 64))
(declare-fun temp1052_20 () (_ BitVec 64))
(declare-fun temp1052_21 () (_ BitVec 64))
(declare-fun temp1052_22 () (_ BitVec 64))
(declare-fun temp1052_23 () (_ BitVec 64))
(declare-fun temp1052_24 () (_ BitVec 64))
(declare-fun temp1052_25 () (_ BitVec 64))
(declare-fun temp1052_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1052_27 () (_ BitVec 64))
(declare-fun temp1052_28 () (_ BitVec 64))
(declare-fun temp1052_29 () (_ BitVec 64))
(declare-fun temp1052_30 () (_ BitVec 64))
(declare-fun temp1052_31 () (_ BitVec 64))
(declare-fun temp1052_32 () (_ BitVec 64))
(declare-fun temp1052_33 () (_ BitVec 64))
(declare-fun temp1052_34 () (_ BitVec 64))
(declare-fun temp1052_35 () (_ BitVec 64))
(declare-fun temp1052_36 () (_ BitVec 64))
(declare-fun temp1052_37 () (_ BitVec 64))
(declare-fun temp1052_38 () (_ BitVec 64))
(declare-fun temp1052_39 () (_ BitVec 64))
(declare-fun temp1052_40 () (_ BitVec 64))
(declare-fun temp1052_41 () (_ BitVec 64))
(declare-fun temp1052_42 () (_ BitVec 64))
(declare-fun temp1052_43 () (_ BitVec 64))
(declare-fun temp1052_44 () (_ BitVec 64))
(declare-fun temp1052_45 () (_ BitVec 64))
(declare-fun temp1052_46 () (_ BitVec 64))
(declare-fun temp1052_47 () (_ BitVec 64))
(declare-fun temp1052_48 () (_ BitVec 64))
(declare-fun temp1052_49 () (_ BitVec 64))
(declare-fun temp1052_50 () (_ BitVec 64))
(declare-fun temp1052_51 () (_ BitVec 64))
(declare-fun temp1052_52 () (_ BitVec 64))
(declare-fun temp1052_53 () (_ BitVec 64))
(declare-fun temp1052_54 () (_ BitVec 64))
(declare-fun temp1052_55 () (_ BitVec 64))
(declare-fun temp1052_56 () (_ BitVec 64))
(declare-fun temp1052_57 () (_ BitVec 64))
(declare-fun temp1052_58 () (_ BitVec 64))
(declare-fun temp1052_59 () (_ BitVec 64))
(declare-fun temp1052_60 () (_ BitVec 64))
(declare-fun temp1052_61 () (_ BitVec 64))
(declare-fun temp1052_62 () (_ BitVec 64))
(declare-fun temp1052_63 () (_ BitVec 64))
(declare-fun temp1052_64 () (_ BitVec 64))
(declare-fun temp1052_65 () (_ BitVec 64))
(declare-fun temp1052_66 () (_ BitVec 64))
(declare-fun temp1052_67 () (_ BitVec 64))
(declare-fun temp1052_68 () (_ BitVec 64))
(declare-fun temp1052_69 () (_ BitVec 64))
(declare-fun temp1052_70 () (_ BitVec 64))
(declare-fun temp1052_71 () (_ BitVec 64))
(declare-fun temp1052_72 () (_ BitVec 64))
(declare-fun temp1052_73 () (_ BitVec 64))
(declare-fun temp1052_74 () (_ BitVec 64))
(declare-fun temp1052_75 () (_ BitVec 64))
(declare-fun temp1052_76 () (_ BitVec 64))
(declare-fun temp1052_77 () (_ BitVec 64))
(declare-fun temp1052_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1052_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp1052_80 () (_ BitVec 64))
(declare-fun var1444989 () (_ BitVec 64))
(declare-fun temp1052_81 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp1052_82 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp1052_83 () (_ BitVec 64))
(declare-fun temp1052_84 () (_ BitVec 64))
(declare-fun var2167086 () (_ BitVec 64))
(declare-fun temp1052_85 () (_ BitVec 64))
(declare-fun var2167087 () (_ BitVec 64))
(declare-fun var2491518 () (_ BitVec 64))
(declare-fun var2491519 () (_ BitVec 64))
(declare-fun temp1052_86 () (_ BitVec 64))
(declare-fun var3215770 () (_ BitVec 64))
(declare-fun temp1052_87 () (_ BitVec 64))
(declare-fun var3740058 () (_ BitVec 64))
(assert (= temp1052_1 #x0000000000080000))
(assert (= var461925 temp1052_1))
(assert (= temp1052_2 #x0000000000080000))
(assert (= var724069 temp1052_2))
(assert (= temp1052_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp1052_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1052_4 #x0000000000000000))
(assert (= var69380 temp1052_4))
(assert (= temp1052_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp1052_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1052_6 #x0000000000000000))
(assert (= var69401 temp1052_6))
(assert (= temp1052_7 #x0000000000000000))
(assert (= temp1052_8 temp1052_7))
(assert (= temp1052_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp1052_8)))
(assert (= temp1052_10 #x0000000000000001))
(assert (= temp1052_11 temp1052_10))
(assert (= temp1052_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp1052_11)))
(assert (= temp1052_13 #x0000000000000002))
(assert (= temp1052_14 temp1052_13))
(assert (= temp1052_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp1052_14)))
(assert (= temp1052_16 #x0000000000000003))
(assert (= temp1052_17 temp1052_16))
(assert (= temp1052_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp1052_17)))
(assert (= temp1052_19 #x0000000000000004))
(assert (= temp1052_20 temp1052_19))
(assert (= temp1052_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp1052_20)))
(assert (= temp1052_22 #x0000000000000005))
(assert (= temp1052_23 temp1052_22))
(assert (= temp1052_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp1052_23)))
(assert (= temp1052_25 #x0000000000000000))
(assert (= temp1052_26 temp1052_25))
(assert (= temp1052_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp1052_26)))
(assert (= temp1052_28 #x0000000000000001))
(assert (= temp1052_29 temp1052_28))
(assert (= temp1052_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp1052_29)))
(assert (= temp1052_31 #x0000000000000002))
(assert (= temp1052_32 temp1052_31))
(assert (= temp1052_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp1052_32)))
(assert (= temp1052_34 #x0000000000000003))
(assert (= temp1052_35 temp1052_34))
(assert (= temp1052_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp1052_35)))
(assert (= temp1052_37 #x0000000000000004))
(assert (= temp1052_38 temp1052_37))
(assert (= temp1052_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp1052_38)))
(assert (= temp1052_40 #x0000000000000005))
(assert (= temp1052_41 temp1052_40))
(assert (= temp1052_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp1052_41)))
(assert (= temp1052_43 temp1052_11))
(assert (= temp1052_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp1052_43)))
(assert (= temp1052_45 temp1052_14))
(assert (= temp1052_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp1052_45)))
(assert (= temp1052_47 temp1052_17))
(assert (= temp1052_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp1052_47)))
(assert (= temp1052_49 temp1052_20))
(assert (= temp1052_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp1052_49)))
(assert (= temp1052_51 temp1052_23))
(assert (= temp1052_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp1052_51)))
(assert (= temp1052_53 temp1052_8))
(assert (= temp1052_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp1052_53)))
(assert (= temp1052_55 temp1052_26))
(assert (= temp1052_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp1052_55)))
(assert (= temp1052_57 temp1052_29))
(assert (= temp1052_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp1052_57)))
(assert (= temp1052_59 temp1052_32))
(assert (= temp1052_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp1052_59)))
(assert (= temp1052_61 temp1052_35))
(assert (= temp1052_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp1052_61)))
(assert (= temp1052_63 temp1052_38))
(assert (= temp1052_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp1052_63)))
(assert (= temp1052_65 temp1052_41))
(assert (= temp1052_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp1052_65)))
(assert (= temp1052_67 temp1052_43))
(assert (= temp1052_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp1052_67)))
(assert (= temp1052_69 temp1052_45))
(assert (= temp1052_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp1052_69)))
(assert (= temp1052_71 temp1052_47))
(assert (= temp1052_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp1052_71)))
(assert (= temp1052_73 temp1052_49))
(assert (= temp1052_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp1052_73)))
(assert (= temp1052_75 temp1052_51))
(assert (= temp1052_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp1052_75)))
(assert (= temp1052_77 temp1052_53))
(assert (= temp1052_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp1052_77)))
(assert (= (and true
        (= temp1052_44 temp1052_12)
        (= temp1052_46 temp1052_15)
        (= temp1052_48 temp1052_18)
        (= temp1052_50 temp1052_21)
        (= temp1052_52 temp1052_24)
        (= temp1052_54 temp1052_9)
        (= temp1052_56 temp1052_27)
        (= temp1052_58 temp1052_30)
        (= temp1052_60 temp1052_33)
        (= temp1052_62 temp1052_36)
        (= temp1052_64 temp1052_39)
        (= temp1052_66 temp1052_42)
        (= temp1052_68 temp1052_44)
        (= temp1052_70 temp1052_46)
        (= temp1052_72 temp1052_48)
        (= temp1052_74 temp1052_50)
        (= temp1052_76 temp1052_52)
        (= temp1052_78 temp1052_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp1052_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp1052_79))
(assert (= temp1052_80 #x0000000009c00400))
(assert (= var1444989 temp1052_80))
(assert (= temp1052_81 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp1052_81)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1052_82 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp1052_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp1052_83 #x0000000000000000))
(assert (= var69546 temp1052_83))
(assert (= temp1052_84 #x0000000000000000))
(assert (= var2167086 temp1052_84))
(assert (= temp1052_85 #x0000000000000000))
(assert (= var2167087 temp1052_85))
(assert (= var2491518 var2167086))
(assert (= var2491519 var2167087))
(assert (= temp1052_86 #x0000000000000001))
(assert (= var3215770 temp1052_86))
(assert (= temp1052_87 #x0000000000000001))
(assert (= var3740058 temp1052_87))
(model-add temp1052_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp1052_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp1052_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp1052_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






