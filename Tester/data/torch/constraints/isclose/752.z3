(declare-fun temp1000_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp1000_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp1000_3 () (_ BitVec 64))
(declare-fun temp1000_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp1000_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp1000_6 () (_ BitVec 64))
(declare-fun temp1000_7 () (_ BitVec 64))
(declare-fun temp1000_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1000_9 () (_ BitVec 64))
(declare-fun temp1000_10 () (_ BitVec 64))
(declare-fun temp1000_11 () (_ BitVec 64))
(declare-fun temp1000_12 () (_ BitVec 64))
(declare-fun temp1000_13 () (_ BitVec 64))
(declare-fun temp1000_14 () (_ BitVec 64))
(declare-fun temp1000_15 () (_ BitVec 64))
(declare-fun temp1000_16 () (_ BitVec 64))
(declare-fun temp1000_17 () (_ BitVec 64))
(declare-fun temp1000_18 () (_ BitVec 64))
(declare-fun temp1000_19 () (_ BitVec 64))
(declare-fun temp1000_20 () (_ BitVec 64))
(declare-fun temp1000_21 () (_ BitVec 64))
(declare-fun temp1000_22 () (_ BitVec 64))
(declare-fun temp1000_23 () (_ BitVec 64))
(declare-fun temp1000_24 () (_ BitVec 64))
(declare-fun temp1000_25 () (_ BitVec 64))
(declare-fun temp1000_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1000_27 () (_ BitVec 64))
(declare-fun temp1000_28 () (_ BitVec 64))
(declare-fun temp1000_29 () (_ BitVec 64))
(declare-fun temp1000_30 () (_ BitVec 64))
(declare-fun temp1000_31 () (_ BitVec 64))
(declare-fun temp1000_32 () (_ BitVec 64))
(declare-fun temp1000_33 () (_ BitVec 64))
(declare-fun temp1000_34 () (_ BitVec 64))
(declare-fun temp1000_35 () (_ BitVec 64))
(declare-fun temp1000_36 () (_ BitVec 64))
(declare-fun temp1000_37 () (_ BitVec 64))
(declare-fun temp1000_38 () (_ BitVec 64))
(declare-fun temp1000_39 () (_ BitVec 64))
(declare-fun temp1000_40 () (_ BitVec 64))
(declare-fun temp1000_41 () (_ BitVec 64))
(declare-fun temp1000_42 () (_ BitVec 64))
(declare-fun temp1000_43 () (_ BitVec 64))
(declare-fun temp1000_44 () (_ BitVec 64))
(declare-fun temp1000_45 () (_ BitVec 64))
(declare-fun temp1000_46 () (_ BitVec 64))
(declare-fun temp1000_47 () (_ BitVec 64))
(declare-fun temp1000_48 () (_ BitVec 64))
(declare-fun temp1000_49 () (_ BitVec 64))
(declare-fun temp1000_50 () (_ BitVec 64))
(declare-fun temp1000_51 () (_ BitVec 64))
(declare-fun temp1000_52 () (_ BitVec 64))
(declare-fun temp1000_53 () (_ BitVec 64))
(declare-fun temp1000_54 () (_ BitVec 64))
(declare-fun temp1000_55 () (_ BitVec 64))
(declare-fun temp1000_56 () (_ BitVec 64))
(declare-fun temp1000_57 () (_ BitVec 64))
(declare-fun temp1000_58 () (_ BitVec 64))
(declare-fun temp1000_59 () (_ BitVec 64))
(declare-fun temp1000_60 () (_ BitVec 64))
(declare-fun temp1000_61 () (_ BitVec 64))
(declare-fun temp1000_62 () (_ BitVec 64))
(declare-fun temp1000_63 () (_ BitVec 64))
(declare-fun temp1000_64 () (_ BitVec 64))
(declare-fun temp1000_65 () (_ BitVec 64))
(declare-fun temp1000_66 () (_ BitVec 64))
(declare-fun temp1000_67 () (_ BitVec 64))
(declare-fun temp1000_68 () (_ BitVec 64))
(declare-fun temp1000_69 () (_ BitVec 64))
(declare-fun temp1000_70 () (_ BitVec 64))
(declare-fun temp1000_71 () (_ BitVec 64))
(declare-fun temp1000_72 () (_ BitVec 64))
(declare-fun temp1000_73 () (_ BitVec 64))
(declare-fun temp1000_74 () (_ BitVec 64))
(declare-fun temp1000_75 () (_ BitVec 64))
(declare-fun temp1000_76 () (_ BitVec 64))
(declare-fun temp1000_77 () (_ BitVec 64))
(declare-fun temp1000_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1000_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp1000_80 () (_ BitVec 64))
(declare-fun var1444989 () (_ BitVec 64))
(declare-fun temp1000_81 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp1000_82 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp1000_83 () (_ BitVec 64))
(declare-fun temp1000_84 () (_ BitVec 64))
(declare-fun var2167086 () (_ BitVec 64))
(declare-fun temp1000_85 () (_ BitVec 64))
(declare-fun var2167087 () (_ BitVec 64))
(declare-fun var2491518 () (_ BitVec 64))
(declare-fun var2491519 () (_ BitVec 64))
(declare-fun temp1000_86 () (_ BitVec 64))
(declare-fun var2822446 () (_ BitVec 64))
(declare-fun temp1000_87 () (_ BitVec 64))
(declare-fun var2822447 () (_ BitVec 64))
(declare-fun var3146878 () (_ BitVec 64))
(declare-fun var3146879 () (_ BitVec 64))
(declare-fun temp1000_88 () (_ BitVec 64))
(declare-fun var3674522 () (_ BitVec 64))
(declare-fun temp1000_89 () (_ BitVec 64))
(declare-fun var4198810 () (_ BitVec 64))
(assert (= temp1000_1 #x0000000000080000))
(assert (= var461925 temp1000_1))
(assert (= temp1000_2 #x0000000000080000))
(assert (= var724069 temp1000_2))
(assert (= temp1000_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp1000_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1000_4 #x0000000000000000))
(assert (= var69380 temp1000_4))
(assert (= temp1000_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp1000_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1000_6 #x0000000000000000))
(assert (= var69401 temp1000_6))
(assert (= temp1000_7 #x0000000000000000))
(assert (= temp1000_8 temp1000_7))
(assert (= temp1000_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp1000_8)))
(assert (= temp1000_10 #x0000000000000001))
(assert (= temp1000_11 temp1000_10))
(assert (= temp1000_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp1000_11)))
(assert (= temp1000_13 #x0000000000000002))
(assert (= temp1000_14 temp1000_13))
(assert (= temp1000_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp1000_14)))
(assert (= temp1000_16 #x0000000000000003))
(assert (= temp1000_17 temp1000_16))
(assert (= temp1000_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp1000_17)))
(assert (= temp1000_19 #x0000000000000004))
(assert (= temp1000_20 temp1000_19))
(assert (= temp1000_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp1000_20)))
(assert (= temp1000_22 #x0000000000000005))
(assert (= temp1000_23 temp1000_22))
(assert (= temp1000_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp1000_23)))
(assert (= temp1000_25 #x0000000000000000))
(assert (= temp1000_26 temp1000_25))
(assert (= temp1000_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp1000_26)))
(assert (= temp1000_28 #x0000000000000001))
(assert (= temp1000_29 temp1000_28))
(assert (= temp1000_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp1000_29)))
(assert (= temp1000_31 #x0000000000000002))
(assert (= temp1000_32 temp1000_31))
(assert (= temp1000_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp1000_32)))
(assert (= temp1000_34 #x0000000000000003))
(assert (= temp1000_35 temp1000_34))
(assert (= temp1000_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp1000_35)))
(assert (= temp1000_37 #x0000000000000004))
(assert (= temp1000_38 temp1000_37))
(assert (= temp1000_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp1000_38)))
(assert (= temp1000_40 #x0000000000000005))
(assert (= temp1000_41 temp1000_40))
(assert (= temp1000_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp1000_41)))
(assert (= temp1000_43 temp1000_11))
(assert (= temp1000_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp1000_43)))
(assert (= temp1000_45 temp1000_14))
(assert (= temp1000_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp1000_45)))
(assert (= temp1000_47 temp1000_17))
(assert (= temp1000_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp1000_47)))
(assert (= temp1000_49 temp1000_20))
(assert (= temp1000_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp1000_49)))
(assert (= temp1000_51 temp1000_23))
(assert (= temp1000_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp1000_51)))
(assert (= temp1000_53 temp1000_8))
(assert (= temp1000_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp1000_53)))
(assert (= temp1000_55 temp1000_26))
(assert (= temp1000_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp1000_55)))
(assert (= temp1000_57 temp1000_29))
(assert (= temp1000_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp1000_57)))
(assert (= temp1000_59 temp1000_32))
(assert (= temp1000_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp1000_59)))
(assert (= temp1000_61 temp1000_35))
(assert (= temp1000_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp1000_61)))
(assert (= temp1000_63 temp1000_38))
(assert (= temp1000_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp1000_63)))
(assert (= temp1000_65 temp1000_41))
(assert (= temp1000_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp1000_65)))
(assert (= temp1000_67 temp1000_43))
(assert (= temp1000_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp1000_67)))
(assert (= temp1000_69 temp1000_45))
(assert (= temp1000_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp1000_69)))
(assert (= temp1000_71 temp1000_47))
(assert (= temp1000_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp1000_71)))
(assert (= temp1000_73 temp1000_49))
(assert (= temp1000_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp1000_73)))
(assert (= temp1000_75 temp1000_51))
(assert (= temp1000_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp1000_75)))
(assert (= temp1000_77 temp1000_53))
(assert (= temp1000_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp1000_77)))
(assert (= (and true
        (= temp1000_44 temp1000_12)
        (= temp1000_46 temp1000_15)
        (= temp1000_48 temp1000_18)
        (= temp1000_50 temp1000_21)
        (= temp1000_52 temp1000_24)
        (= temp1000_54 temp1000_9)
        (= temp1000_56 temp1000_27)
        (= temp1000_58 temp1000_30)
        (= temp1000_60 temp1000_33)
        (= temp1000_62 temp1000_36)
        (= temp1000_64 temp1000_39)
        (= temp1000_66 temp1000_42)
        (= temp1000_68 temp1000_44)
        (= temp1000_70 temp1000_46)
        (= temp1000_72 temp1000_48)
        (= temp1000_74 temp1000_50)
        (= temp1000_76 temp1000_52)
        (= temp1000_78 temp1000_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp1000_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp1000_79))
(assert (= temp1000_80 #x0000000009c00400))
(assert (= var1444989 temp1000_80))
(assert (= temp1000_81 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp1000_81)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1000_82 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp1000_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp1000_83 #x0000000000000000))
(assert (= var69546 temp1000_83))
(assert (= temp1000_84 #x0000000000000000))
(assert (= var2167086 temp1000_84))
(assert (= temp1000_85 #x0000000000000000))
(assert (= var2167087 temp1000_85))
(assert (= var2491518 var2167086))
(assert (= var2491519 var2167087))
(assert (= temp1000_86 #x0000000000000000))
(assert (= var2822446 temp1000_86))
(assert (= temp1000_87 #x0000000000000000))
(assert (= var2822447 temp1000_87))
(assert (= var3146878 var2822446))
(assert (= var3146879 var2822447))
(assert (= temp1000_88 #x0000000000000001))
(assert (= var3674522 temp1000_88))
(assert (= temp1000_89 #x0000000000000001))
(assert (= var4198810 temp1000_89))
(model-add temp1000_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp1000_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp1000_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp1000_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






