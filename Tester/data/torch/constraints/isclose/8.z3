(declare-fun temp8_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp8_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp8_3 () (_ BitVec 64))
(declare-fun temp8_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp8_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp8_6 () (_ BitVec 64))
(declare-fun temp8_7 () (_ BitVec 64))
(declare-fun temp8_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8_9 () (_ BitVec 64))
(declare-fun temp8_10 () (_ BitVec 64))
(declare-fun temp8_11 () (_ BitVec 64))
(declare-fun temp8_12 () (_ BitVec 64))
(declare-fun temp8_13 () (_ BitVec 64))
(declare-fun temp8_14 () (_ BitVec 64))
(declare-fun temp8_15 () (_ BitVec 64))
(declare-fun temp8_16 () (_ BitVec 64))
(declare-fun temp8_17 () (_ BitVec 64))
(declare-fun temp8_18 () (_ BitVec 64))
(declare-fun temp8_19 () (_ BitVec 64))
(declare-fun temp8_20 () (_ BitVec 64))
(declare-fun temp8_21 () (_ BitVec 64))
(declare-fun temp8_22 () (_ BitVec 64))
(declare-fun temp8_23 () (_ BitVec 64))
(declare-fun temp8_24 () (_ BitVec 64))
(declare-fun temp8_25 () (_ BitVec 64))
(declare-fun temp8_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8_27 () (_ BitVec 64))
(declare-fun temp8_28 () (_ BitVec 64))
(declare-fun temp8_29 () (_ BitVec 64))
(declare-fun temp8_30 () (_ BitVec 64))
(declare-fun temp8_31 () (_ BitVec 64))
(declare-fun temp8_32 () (_ BitVec 64))
(declare-fun temp8_33 () (_ BitVec 64))
(declare-fun temp8_34 () (_ BitVec 64))
(declare-fun temp8_35 () (_ BitVec 64))
(declare-fun temp8_36 () (_ BitVec 64))
(declare-fun temp8_37 () (_ BitVec 64))
(declare-fun temp8_38 () (_ BitVec 64))
(declare-fun temp8_39 () (_ BitVec 64))
(declare-fun temp8_40 () (_ BitVec 64))
(declare-fun temp8_41 () (_ BitVec 64))
(declare-fun temp8_42 () (_ BitVec 64))
(declare-fun temp8_43 () (_ BitVec 64))
(declare-fun temp8_44 () (_ BitVec 64))
(declare-fun temp8_45 () (_ BitVec 64))
(declare-fun temp8_46 () (_ BitVec 64))
(declare-fun temp8_47 () (_ BitVec 64))
(declare-fun temp8_48 () (_ BitVec 64))
(declare-fun temp8_49 () (_ BitVec 64))
(declare-fun temp8_50 () (_ BitVec 64))
(declare-fun temp8_51 () (_ BitVec 64))
(declare-fun temp8_52 () (_ BitVec 64))
(declare-fun temp8_53 () (_ BitVec 64))
(declare-fun temp8_54 () (_ BitVec 64))
(declare-fun temp8_55 () (_ BitVec 64))
(declare-fun temp8_56 () (_ BitVec 64))
(declare-fun temp8_57 () (_ BitVec 64))
(declare-fun temp8_58 () (_ BitVec 64))
(declare-fun temp8_59 () (_ BitVec 64))
(declare-fun temp8_60 () (_ BitVec 64))
(declare-fun temp8_61 () (_ BitVec 64))
(declare-fun temp8_62 () (_ BitVec 64))
(declare-fun temp8_63 () (_ BitVec 64))
(declare-fun temp8_64 () (_ BitVec 64))
(declare-fun temp8_65 () (_ BitVec 64))
(declare-fun temp8_66 () (_ BitVec 64))
(declare-fun temp8_67 () (_ BitVec 64))
(declare-fun temp8_68 () (_ BitVec 64))
(declare-fun temp8_69 () (_ BitVec 64))
(declare-fun temp8_70 () (_ BitVec 64))
(declare-fun temp8_71 () (_ BitVec 64))
(declare-fun temp8_72 () (_ BitVec 64))
(declare-fun temp8_73 () (_ BitVec 64))
(declare-fun temp8_74 () (_ BitVec 64))
(declare-fun temp8_75 () (_ BitVec 64))
(declare-fun temp8_76 () (_ BitVec 64))
(declare-fun temp8_77 () (_ BitVec 64))
(declare-fun temp8_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp8_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp8_80 () (_ BitVec 64))
(declare-fun var987402 () (_ BitVec 64))
(declare-fun var987367 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp8_81 () (_ BitVec 64))
(declare-fun temp8_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp8_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp8_84 () (_ BitVec 64))
(declare-fun temp8_85 () (_ BitVec 64))
(declare-fun var1708334 () (_ BitVec 64))
(declare-fun temp8_86 () (_ BitVec 64))
(declare-fun var1708335 () (_ BitVec 64))
(declare-fun var2032766 () (_ BitVec 64))
(declare-fun var2032767 () (_ BitVec 64))
(declare-fun temp8_87 () (_ BitVec 64))
(declare-fun var2363694 () (_ BitVec 64))
(declare-fun temp8_88 () (_ BitVec 64))
(declare-fun var2363695 () (_ BitVec 64))
(declare-fun var2688126 () (_ BitVec 64))
(declare-fun var2688127 () (_ BitVec 64))
(declare-fun temp8_89 () (_ BitVec 64))
(declare-fun var3215770 () (_ BitVec 64))
(declare-fun temp8_90 () (_ BitVec 64))
(declare-fun var3740058 () (_ BitVec 64))
(assert (= temp8_1 #x0000000000080000))
(assert (= var461925 temp8_1))
(assert (= temp8_2 #x0000000000080000))
(assert (= var724069 temp8_2))
(assert (= temp8_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp8_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_4 #x0000000000000000))
(assert (= var69380 temp8_4))
(assert (= temp8_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp8_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_6 #x0000000000000000))
(assert (= var69401 temp8_6))
(assert (= temp8_7 #x0000000000000000))
(assert (= temp8_8 temp8_7))
(assert (= temp8_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_8)))
(assert (= temp8_10 #x0000000000000001))
(assert (= temp8_11 temp8_10))
(assert (= temp8_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_11)))
(assert (= temp8_13 #x0000000000000002))
(assert (= temp8_14 temp8_13))
(assert (= temp8_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_14)))
(assert (= temp8_16 #x0000000000000003))
(assert (= temp8_17 temp8_16))
(assert (= temp8_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_17)))
(assert (= temp8_19 #x0000000000000004))
(assert (= temp8_20 temp8_19))
(assert (= temp8_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_20)))
(assert (= temp8_22 #x0000000000000005))
(assert (= temp8_23 temp8_22))
(assert (= temp8_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_23)))
(assert (= temp8_25 #x0000000000000000))
(assert (= temp8_26 temp8_25))
(assert (= temp8_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp8_26)))
(assert (= temp8_28 #x0000000000000001))
(assert (= temp8_29 temp8_28))
(assert (= temp8_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp8_29)))
(assert (= temp8_31 #x0000000000000002))
(assert (= temp8_32 temp8_31))
(assert (= temp8_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp8_32)))
(assert (= temp8_34 #x0000000000000003))
(assert (= temp8_35 temp8_34))
(assert (= temp8_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp8_35)))
(assert (= temp8_37 #x0000000000000004))
(assert (= temp8_38 temp8_37))
(assert (= temp8_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp8_38)))
(assert (= temp8_40 #x0000000000000005))
(assert (= temp8_41 temp8_40))
(assert (= temp8_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp8_41)))
(assert (= temp8_43 temp8_11))
(assert (= temp8_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp8_43)))
(assert (= temp8_45 temp8_14))
(assert (= temp8_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp8_45)))
(assert (= temp8_47 temp8_17))
(assert (= temp8_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp8_47)))
(assert (= temp8_49 temp8_20))
(assert (= temp8_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp8_49)))
(assert (= temp8_51 temp8_23))
(assert (= temp8_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp8_51)))
(assert (= temp8_53 temp8_8))
(assert (= temp8_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp8_53)))
(assert (= temp8_55 temp8_26))
(assert (= temp8_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_55)))
(assert (= temp8_57 temp8_29))
(assert (= temp8_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_57)))
(assert (= temp8_59 temp8_32))
(assert (= temp8_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_59)))
(assert (= temp8_61 temp8_35))
(assert (= temp8_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_61)))
(assert (= temp8_63 temp8_38))
(assert (= temp8_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_63)))
(assert (= temp8_65 temp8_41))
(assert (= temp8_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_65)))
(assert (= temp8_67 temp8_43))
(assert (= temp8_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_67)))
(assert (= temp8_69 temp8_45))
(assert (= temp8_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_69)))
(assert (= temp8_71 temp8_47))
(assert (= temp8_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_71)))
(assert (= temp8_73 temp8_49))
(assert (= temp8_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_73)))
(assert (= temp8_75 temp8_51))
(assert (= temp8_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_75)))
(assert (= temp8_77 temp8_53))
(assert (= temp8_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_77)))
(assert (= (and true
        (= temp8_44 temp8_12)
        (= temp8_46 temp8_15)
        (= temp8_48 temp8_18)
        (= temp8_50 temp8_21)
        (= temp8_52 temp8_24)
        (= temp8_54 temp8_9)
        (= temp8_56 temp8_27)
        (= temp8_58 temp8_30)
        (= temp8_60 temp8_33)
        (= temp8_62 temp8_36)
        (= temp8_64 temp8_39)
        (= temp8_66 temp8_42)
        (= temp8_68 temp8_44)
        (= temp8_70 temp8_46)
        (= temp8_72 temp8_48)
        (= temp8_74 temp8_50)
        (= temp8_76 temp8_52)
        (= temp8_78 temp8_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp8_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp8_79))
(assert (= temp8_80 #x0000000000000001))
(assert (= var987402 temp8_80))
(assert (= var987367 var987402))
(assert (= var69428 var987367))
(assert (= temp8_81 #x0000000000000001))
(assert (= var69428 temp8_81))
(assert (= temp8_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp8_82) #x0000000000000001 #x0000000000000000)))
(assert (= temp8_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp8_83) #x0000000000000001 #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp8_84 #x0000000000000000))
(assert (= var69546 temp8_84))
(assert (= temp8_85 #x0000000000000000))
(assert (= var1708334 temp8_85))
(assert (= temp8_86 #x0000000000000000))
(assert (= var1708335 temp8_86))
(assert (= var2032766 var1708334))
(assert (= var2032767 var1708335))
(assert (= temp8_87 #x0000000000000000))
(assert (= var2363694 temp8_87))
(assert (= temp8_88 #x0000000000000000))
(assert (= var2363695 temp8_88))
(assert (= var2688126 var2363694))
(assert (= var2688127 var2363695))
(assert (= temp8_89 #x0000000000000001))
(assert (= var3215770 temp8_89))
(assert (= temp8_90 #x0000000000000001))
(assert (= var3740058 temp8_90))
(model-add temp8_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp8_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp8_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp8_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






