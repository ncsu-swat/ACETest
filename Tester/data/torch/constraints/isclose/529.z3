(declare-fun temp653_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp653_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp653_3 () (_ BitVec 64))
(declare-fun temp653_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp653_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp653_6 () (_ BitVec 64))
(declare-fun temp653_7 () (_ BitVec 64))
(declare-fun temp653_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp653_9 () (_ BitVec 64))
(declare-fun temp653_10 () (_ BitVec 64))
(declare-fun temp653_11 () (_ BitVec 64))
(declare-fun temp653_12 () (_ BitVec 64))
(declare-fun temp653_13 () (_ BitVec 64))
(declare-fun temp653_14 () (_ BitVec 64))
(declare-fun temp653_15 () (_ BitVec 64))
(declare-fun temp653_16 () (_ BitVec 64))
(declare-fun temp653_17 () (_ BitVec 64))
(declare-fun temp653_18 () (_ BitVec 64))
(declare-fun temp653_19 () (_ BitVec 64))
(declare-fun temp653_20 () (_ BitVec 64))
(declare-fun temp653_21 () (_ BitVec 64))
(declare-fun temp653_22 () (_ BitVec 64))
(declare-fun temp653_23 () (_ BitVec 64))
(declare-fun temp653_24 () (_ BitVec 64))
(declare-fun temp653_25 () (_ BitVec 64))
(declare-fun temp653_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp653_27 () (_ BitVec 64))
(declare-fun temp653_28 () (_ BitVec 64))
(declare-fun temp653_29 () (_ BitVec 64))
(declare-fun temp653_30 () (_ BitVec 64))
(declare-fun temp653_31 () (_ BitVec 64))
(declare-fun temp653_32 () (_ BitVec 64))
(declare-fun temp653_33 () (_ BitVec 64))
(declare-fun temp653_34 () (_ BitVec 64))
(declare-fun temp653_35 () (_ BitVec 64))
(declare-fun temp653_36 () (_ BitVec 64))
(declare-fun temp653_37 () (_ BitVec 64))
(declare-fun temp653_38 () (_ BitVec 64))
(declare-fun temp653_39 () (_ BitVec 64))
(declare-fun temp653_40 () (_ BitVec 64))
(declare-fun temp653_41 () (_ BitVec 64))
(declare-fun temp653_42 () (_ BitVec 64))
(declare-fun temp653_43 () (_ BitVec 64))
(declare-fun temp653_44 () (_ BitVec 64))
(declare-fun temp653_45 () (_ BitVec 64))
(declare-fun temp653_46 () (_ BitVec 64))
(declare-fun temp653_47 () (_ BitVec 64))
(declare-fun temp653_48 () (_ BitVec 64))
(declare-fun temp653_49 () (_ BitVec 64))
(declare-fun temp653_50 () (_ BitVec 64))
(declare-fun temp653_51 () (_ BitVec 64))
(declare-fun temp653_52 () (_ BitVec 64))
(declare-fun temp653_53 () (_ BitVec 64))
(declare-fun temp653_54 () (_ BitVec 64))
(declare-fun temp653_55 () (_ BitVec 64))
(declare-fun temp653_56 () (_ BitVec 64))
(declare-fun temp653_57 () (_ BitVec 64))
(declare-fun temp653_58 () (_ BitVec 64))
(declare-fun temp653_59 () (_ BitVec 64))
(declare-fun temp653_60 () (_ BitVec 64))
(declare-fun temp653_61 () (_ BitVec 64))
(declare-fun temp653_62 () (_ BitVec 64))
(declare-fun temp653_63 () (_ BitVec 64))
(declare-fun temp653_64 () (_ BitVec 64))
(declare-fun temp653_65 () (_ BitVec 64))
(declare-fun temp653_66 () (_ BitVec 64))
(declare-fun temp653_67 () (_ BitVec 64))
(declare-fun temp653_68 () (_ BitVec 64))
(declare-fun temp653_69 () (_ BitVec 64))
(declare-fun temp653_70 () (_ BitVec 64))
(declare-fun temp653_71 () (_ BitVec 64))
(declare-fun temp653_72 () (_ BitVec 64))
(declare-fun temp653_73 () (_ BitVec 64))
(declare-fun temp653_74 () (_ BitVec 64))
(declare-fun temp653_75 () (_ BitVec 64))
(declare-fun temp653_76 () (_ BitVec 64))
(declare-fun temp653_77 () (_ BitVec 64))
(declare-fun temp653_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp653_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp653_80 () (_ BitVec 64))
(declare-fun var1184010 () (_ BitVec 64))
(declare-fun var1183975 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp653_81 () (_ BitVec 64))
(declare-fun temp653_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp653_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp653_84 () (_ BitVec 64))
(declare-fun temp653_85 () (_ BitVec 64))
(declare-fun var1904942 () (_ BitVec 64))
(declare-fun temp653_86 () (_ BitVec 64))
(declare-fun var1904943 () (_ BitVec 64))
(declare-fun var2229374 () (_ BitVec 64))
(declare-fun var2229375 () (_ BitVec 64))
(declare-fun temp653_87 () (_ BitVec 64))
(declare-fun var2953626 () (_ BitVec 64))
(declare-fun temp653_88 () (_ BitVec 64))
(declare-fun var3477914 () (_ BitVec 64))
(declare-fun temp653_89 () (_ BitVec 64))
(declare-fun var4395939 () (_ BitVec 64))
(declare-fun temp653_91 () (_ BitVec 64))
(declare-fun temp653_90 () (_ BitVec 64))
(declare-fun temp653_92 () (_ BitVec 64))
(declare-fun var5182371 () (_ BitVec 64))
(declare-fun temp653_94 () (_ BitVec 64))
(declare-fun temp653_93 () (_ BitVec 64))
(assert (= temp653_1 #x0000000000080000))
(assert (= var461925 temp653_1))
(assert (= temp653_2 #x0000000000080000))
(assert (= var724069 temp653_2))
(assert (= temp653_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp653_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp653_4 #x0000000000000000))
(assert (= var69380 temp653_4))
(assert (= temp653_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp653_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp653_6 #x0000000000000000))
(assert (= var69401 temp653_6))
(assert (= temp653_7 #x0000000000000000))
(assert (= temp653_8 temp653_7))
(assert (= temp653_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp653_8)))
(assert (= temp653_10 #x0000000000000001))
(assert (= temp653_11 temp653_10))
(assert (= temp653_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp653_11)))
(assert (= temp653_13 #x0000000000000002))
(assert (= temp653_14 temp653_13))
(assert (= temp653_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp653_14)))
(assert (= temp653_16 #x0000000000000003))
(assert (= temp653_17 temp653_16))
(assert (= temp653_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp653_17)))
(assert (= temp653_19 #x0000000000000004))
(assert (= temp653_20 temp653_19))
(assert (= temp653_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp653_20)))
(assert (= temp653_22 #x0000000000000005))
(assert (= temp653_23 temp653_22))
(assert (= temp653_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp653_23)))
(assert (= temp653_25 #x0000000000000000))
(assert (= temp653_26 temp653_25))
(assert (= temp653_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp653_26)))
(assert (= temp653_28 #x0000000000000001))
(assert (= temp653_29 temp653_28))
(assert (= temp653_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp653_29)))
(assert (= temp653_31 #x0000000000000002))
(assert (= temp653_32 temp653_31))
(assert (= temp653_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp653_32)))
(assert (= temp653_34 #x0000000000000003))
(assert (= temp653_35 temp653_34))
(assert (= temp653_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp653_35)))
(assert (= temp653_37 #x0000000000000004))
(assert (= temp653_38 temp653_37))
(assert (= temp653_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp653_38)))
(assert (= temp653_40 #x0000000000000005))
(assert (= temp653_41 temp653_40))
(assert (= temp653_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp653_41)))
(assert (= temp653_43 temp653_11))
(assert (= temp653_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp653_43)))
(assert (= temp653_45 temp653_14))
(assert (= temp653_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp653_45)))
(assert (= temp653_47 temp653_17))
(assert (= temp653_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp653_47)))
(assert (= temp653_49 temp653_20))
(assert (= temp653_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp653_49)))
(assert (= temp653_51 temp653_23))
(assert (= temp653_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp653_51)))
(assert (= temp653_53 temp653_8))
(assert (= temp653_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp653_53)))
(assert (= temp653_55 temp653_26))
(assert (= temp653_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp653_55)))
(assert (= temp653_57 temp653_29))
(assert (= temp653_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp653_57)))
(assert (= temp653_59 temp653_32))
(assert (= temp653_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp653_59)))
(assert (= temp653_61 temp653_35))
(assert (= temp653_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp653_61)))
(assert (= temp653_63 temp653_38))
(assert (= temp653_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp653_63)))
(assert (= temp653_65 temp653_41))
(assert (= temp653_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp653_65)))
(assert (= temp653_67 temp653_43))
(assert (= temp653_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp653_67)))
(assert (= temp653_69 temp653_45))
(assert (= temp653_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp653_69)))
(assert (= temp653_71 temp653_47))
(assert (= temp653_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp653_71)))
(assert (= temp653_73 temp653_49))
(assert (= temp653_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp653_73)))
(assert (= temp653_75 temp653_51))
(assert (= temp653_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp653_75)))
(assert (= temp653_77 temp653_53))
(assert (= temp653_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp653_77)))
(assert (= (and true
        (= temp653_44 temp653_12)
        (= temp653_46 temp653_15)
        (= temp653_48 temp653_18)
        (= temp653_50 temp653_21)
        (= temp653_52 temp653_24)
        (= temp653_54 temp653_9)
        (= temp653_56 temp653_27)
        (= temp653_58 temp653_30)
        (= temp653_60 temp653_33)
        (= temp653_62 temp653_36)
        (= temp653_64 temp653_39)
        (= temp653_66 temp653_42)
        (= temp653_68 temp653_44)
        (= temp653_70 temp653_46)
        (= temp653_72 temp653_48)
        (= temp653_74 temp653_50)
        (= temp653_76 temp653_52)
        (= temp653_78 temp653_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp653_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp653_79))
(assert (= temp653_80 #x0000000000000001))
(assert (= var1184010 temp653_80))
(assert (= var1183975 var1184010))
(assert (= var69428 var1183975))
(assert (= temp653_81 #x0000000000000001))
(assert (= var69428 temp653_81))
(assert (= temp653_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp653_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp653_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp653_83)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp653_84 #x0000000000000000))
(assert (= var69546 temp653_84))
(assert (= temp653_85 #x0000000000000000))
(assert (= var1904942 temp653_85))
(assert (= temp653_86 #x0000000000000000))
(assert (= var1904943 temp653_86))
(assert (= var2229374 var1904942))
(assert (= var2229375 var1904943))
(assert (= temp653_87 #x0000000000000001))
(assert (= var2953626 temp653_87))
(assert (= temp653_88 #x0000000000000001))
(assert (= var3477914 temp653_88))
(assert (= temp653_89 #x000000000000000b))
(assert (= var4395939 temp653_89))
(assert (= temp653_91 #x0000000000000001))
(assert (= temp653_90 temp653_91))
(assert (= temp653_92 #x000000000000000b))
(assert (= var5182371 temp653_92))
(assert (= temp653_94 #x0000000000000001))
(assert (= temp653_93 temp653_94))
(model-add temp653_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp653_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp653_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp653_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






