(declare-fun temp901_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp901_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp901_3 () (_ BitVec 64))
(declare-fun temp901_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp901_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp901_6 () (_ BitVec 64))
(declare-fun temp901_7 () (_ BitVec 64))
(declare-fun temp901_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp901_9 () (_ BitVec 64))
(declare-fun temp901_10 () (_ BitVec 64))
(declare-fun temp901_11 () (_ BitVec 64))
(declare-fun temp901_12 () (_ BitVec 64))
(declare-fun temp901_13 () (_ BitVec 64))
(declare-fun temp901_14 () (_ BitVec 64))
(declare-fun temp901_15 () (_ BitVec 64))
(declare-fun temp901_16 () (_ BitVec 64))
(declare-fun temp901_17 () (_ BitVec 64))
(declare-fun temp901_18 () (_ BitVec 64))
(declare-fun temp901_19 () (_ BitVec 64))
(declare-fun temp901_20 () (_ BitVec 64))
(declare-fun temp901_21 () (_ BitVec 64))
(declare-fun temp901_22 () (_ BitVec 64))
(declare-fun temp901_23 () (_ BitVec 64))
(declare-fun temp901_24 () (_ BitVec 64))
(declare-fun temp901_25 () (_ BitVec 64))
(declare-fun temp901_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp901_27 () (_ BitVec 64))
(declare-fun temp901_28 () (_ BitVec 64))
(declare-fun temp901_29 () (_ BitVec 64))
(declare-fun temp901_30 () (_ BitVec 64))
(declare-fun temp901_31 () (_ BitVec 64))
(declare-fun temp901_32 () (_ BitVec 64))
(declare-fun temp901_33 () (_ BitVec 64))
(declare-fun temp901_34 () (_ BitVec 64))
(declare-fun temp901_35 () (_ BitVec 64))
(declare-fun temp901_36 () (_ BitVec 64))
(declare-fun temp901_37 () (_ BitVec 64))
(declare-fun temp901_38 () (_ BitVec 64))
(declare-fun temp901_39 () (_ BitVec 64))
(declare-fun temp901_40 () (_ BitVec 64))
(declare-fun temp901_41 () (_ BitVec 64))
(declare-fun temp901_42 () (_ BitVec 64))
(declare-fun temp901_43 () (_ BitVec 64))
(declare-fun temp901_44 () (_ BitVec 64))
(declare-fun temp901_45 () (_ BitVec 64))
(declare-fun temp901_46 () (_ BitVec 64))
(declare-fun temp901_47 () (_ BitVec 64))
(declare-fun temp901_48 () (_ BitVec 64))
(declare-fun temp901_49 () (_ BitVec 64))
(declare-fun temp901_50 () (_ BitVec 64))
(declare-fun temp901_51 () (_ BitVec 64))
(declare-fun temp901_52 () (_ BitVec 64))
(declare-fun temp901_53 () (_ BitVec 64))
(declare-fun temp901_54 () (_ BitVec 64))
(declare-fun temp901_55 () (_ BitVec 64))
(declare-fun temp901_56 () (_ BitVec 64))
(declare-fun temp901_57 () (_ BitVec 64))
(declare-fun temp901_58 () (_ BitVec 64))
(declare-fun temp901_59 () (_ BitVec 64))
(declare-fun temp901_60 () (_ BitVec 64))
(declare-fun temp901_61 () (_ BitVec 64))
(declare-fun temp901_62 () (_ BitVec 64))
(declare-fun temp901_63 () (_ BitVec 64))
(declare-fun temp901_64 () (_ BitVec 64))
(declare-fun temp901_65 () (_ BitVec 64))
(declare-fun temp901_66 () (_ BitVec 64))
(declare-fun temp901_67 () (_ BitVec 64))
(declare-fun temp901_68 () (_ BitVec 64))
(declare-fun temp901_69 () (_ BitVec 64))
(declare-fun temp901_70 () (_ BitVec 64))
(declare-fun temp901_71 () (_ BitVec 64))
(declare-fun temp901_72 () (_ BitVec 64))
(declare-fun temp901_73 () (_ BitVec 64))
(declare-fun temp901_74 () (_ BitVec 64))
(declare-fun temp901_75 () (_ BitVec 64))
(declare-fun temp901_76 () (_ BitVec 64))
(declare-fun temp901_77 () (_ BitVec 64))
(declare-fun temp901_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp901_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp901_80 () (_ BitVec 64))
(declare-fun var1444989 () (_ BitVec 64))
(declare-fun temp901_81 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp901_82 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp901_83 () (_ BitVec 64))
(declare-fun temp901_84 () (_ BitVec 64))
(declare-fun var2298158 () (_ BitVec 64))
(declare-fun temp901_85 () (_ BitVec 64))
(declare-fun var2298159 () (_ BitVec 64))
(declare-fun var2622590 () (_ BitVec 64))
(declare-fun var2622591 () (_ BitVec 64))
(declare-fun temp901_86 () (_ BitVec 64))
(declare-fun var3346842 () (_ BitVec 64))
(declare-fun temp901_87 () (_ BitVec 64))
(declare-fun var3871130 () (_ BitVec 64))
(declare-fun temp901_88 () (_ BitVec 64))
(declare-fun var4789155 () (_ BitVec 64))
(declare-fun temp901_90 () (_ BitVec 64))
(declare-fun temp901_89 () (_ BitVec 64))
(declare-fun temp901_91 () (_ BitVec 64))
(declare-fun var5575587 () (_ BitVec 64))
(declare-fun temp901_93 () (_ BitVec 64))
(declare-fun temp901_92 () (_ BitVec 64))
(assert (= temp901_1 #x0000000000080000))
(assert (= var461925 temp901_1))
(assert (= temp901_2 #x0000000000080000))
(assert (= var724069 temp901_2))
(assert (= temp901_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp901_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp901_4 #x0000000000000000))
(assert (= var69380 temp901_4))
(assert (= temp901_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp901_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp901_6 #x0000000000000000))
(assert (= var69401 temp901_6))
(assert (= temp901_7 #x0000000000000000))
(assert (= temp901_8 temp901_7))
(assert (= temp901_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp901_8)))
(assert (= temp901_10 #x0000000000000001))
(assert (= temp901_11 temp901_10))
(assert (= temp901_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp901_11)))
(assert (= temp901_13 #x0000000000000002))
(assert (= temp901_14 temp901_13))
(assert (= temp901_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp901_14)))
(assert (= temp901_16 #x0000000000000003))
(assert (= temp901_17 temp901_16))
(assert (= temp901_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp901_17)))
(assert (= temp901_19 #x0000000000000004))
(assert (= temp901_20 temp901_19))
(assert (= temp901_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp901_20)))
(assert (= temp901_22 #x0000000000000005))
(assert (= temp901_23 temp901_22))
(assert (= temp901_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp901_23)))
(assert (= temp901_25 #x0000000000000000))
(assert (= temp901_26 temp901_25))
(assert (= temp901_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp901_26)))
(assert (= temp901_28 #x0000000000000001))
(assert (= temp901_29 temp901_28))
(assert (= temp901_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp901_29)))
(assert (= temp901_31 #x0000000000000002))
(assert (= temp901_32 temp901_31))
(assert (= temp901_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp901_32)))
(assert (= temp901_34 #x0000000000000003))
(assert (= temp901_35 temp901_34))
(assert (= temp901_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp901_35)))
(assert (= temp901_37 #x0000000000000004))
(assert (= temp901_38 temp901_37))
(assert (= temp901_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp901_38)))
(assert (= temp901_40 #x0000000000000005))
(assert (= temp901_41 temp901_40))
(assert (= temp901_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp901_41)))
(assert (= temp901_43 temp901_11))
(assert (= temp901_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp901_43)))
(assert (= temp901_45 temp901_14))
(assert (= temp901_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp901_45)))
(assert (= temp901_47 temp901_17))
(assert (= temp901_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp901_47)))
(assert (= temp901_49 temp901_20))
(assert (= temp901_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp901_49)))
(assert (= temp901_51 temp901_23))
(assert (= temp901_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp901_51)))
(assert (= temp901_53 temp901_8))
(assert (= temp901_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp901_53)))
(assert (= temp901_55 temp901_26))
(assert (= temp901_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp901_55)))
(assert (= temp901_57 temp901_29))
(assert (= temp901_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp901_57)))
(assert (= temp901_59 temp901_32))
(assert (= temp901_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp901_59)))
(assert (= temp901_61 temp901_35))
(assert (= temp901_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp901_61)))
(assert (= temp901_63 temp901_38))
(assert (= temp901_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp901_63)))
(assert (= temp901_65 temp901_41))
(assert (= temp901_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp901_65)))
(assert (= temp901_67 temp901_43))
(assert (= temp901_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp901_67)))
(assert (= temp901_69 temp901_45))
(assert (= temp901_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp901_69)))
(assert (= temp901_71 temp901_47))
(assert (= temp901_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp901_71)))
(assert (= temp901_73 temp901_49))
(assert (= temp901_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp901_73)))
(assert (= temp901_75 temp901_51))
(assert (= temp901_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp901_75)))
(assert (= temp901_77 temp901_53))
(assert (= temp901_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp901_77)))
(assert (= (and true
        (= temp901_44 temp901_12)
        (= temp901_46 temp901_15)
        (= temp901_48 temp901_18)
        (= temp901_50 temp901_21)
        (= temp901_52 temp901_24)
        (= temp901_54 temp901_9)
        (= temp901_56 temp901_27)
        (= temp901_58 temp901_30)
        (= temp901_60 temp901_33)
        (= temp901_62 temp901_36)
        (= temp901_64 temp901_39)
        (= temp901_66 temp901_42)
        (= temp901_68 temp901_44)
        (= temp901_70 temp901_46)
        (= temp901_72 temp901_48)
        (= temp901_74 temp901_50)
        (= temp901_76 temp901_52)
        (= temp901_78 temp901_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp901_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp901_79))
(assert (= temp901_80 #x0000000009c00400))
(assert (= var1444989 temp901_80))
(assert (= temp901_81 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp901_81)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp901_82 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp901_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp901_83 #x0000000000000000))
(assert (= var69546 temp901_83))
(assert (= temp901_84 #x0000000000000000))
(assert (= var2298158 temp901_84))
(assert (= temp901_85 #x0000000000000000))
(assert (= var2298159 temp901_85))
(assert (= var2622590 var2298158))
(assert (= var2622591 var2298159))
(assert (= temp901_86 #x0000000000000001))
(assert (= var3346842 temp901_86))
(assert (= temp901_87 #x0000000000000001))
(assert (= var3871130 temp901_87))
(assert (= temp901_88 #x000000000000000b))
(assert (= var4789155 temp901_88))
(assert (= temp901_90 #x0000000000000001))
(assert (= temp901_89 temp901_90))
(assert (= temp901_91 #x000000000000000b))
(assert (= var5575587 temp901_91))
(assert (= temp901_93 #x0000000000000001))
(assert (= temp901_92 temp901_93))
(model-add temp901_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp901_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp901_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp901_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






