(declare-fun temp63_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp63_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp63_3 () (_ BitVec 64))
(declare-fun temp63_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp63_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp63_6 () (_ BitVec 64))
(declare-fun temp63_7 () (_ BitVec 64))
(declare-fun temp63_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp63_9 () (_ BitVec 64))
(declare-fun temp63_10 () (_ BitVec 64))
(declare-fun temp63_11 () (_ BitVec 64))
(declare-fun temp63_12 () (_ BitVec 64))
(declare-fun temp63_13 () (_ BitVec 64))
(declare-fun temp63_14 () (_ BitVec 64))
(declare-fun temp63_15 () (_ BitVec 64))
(declare-fun temp63_16 () (_ BitVec 64))
(declare-fun temp63_17 () (_ BitVec 64))
(declare-fun temp63_18 () (_ BitVec 64))
(declare-fun temp63_19 () (_ BitVec 64))
(declare-fun temp63_20 () (_ BitVec 64))
(declare-fun temp63_21 () (_ BitVec 64))
(declare-fun temp63_22 () (_ BitVec 64))
(declare-fun temp63_23 () (_ BitVec 64))
(declare-fun temp63_24 () (_ BitVec 64))
(declare-fun temp63_25 () (_ BitVec 64))
(declare-fun temp63_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp63_27 () (_ BitVec 64))
(declare-fun temp63_28 () (_ BitVec 64))
(declare-fun temp63_29 () (_ BitVec 64))
(declare-fun temp63_30 () (_ BitVec 64))
(declare-fun temp63_31 () (_ BitVec 64))
(declare-fun temp63_32 () (_ BitVec 64))
(declare-fun temp63_33 () (_ BitVec 64))
(declare-fun temp63_34 () (_ BitVec 64))
(declare-fun temp63_35 () (_ BitVec 64))
(declare-fun temp63_36 () (_ BitVec 64))
(declare-fun temp63_37 () (_ BitVec 64))
(declare-fun temp63_38 () (_ BitVec 64))
(declare-fun temp63_39 () (_ BitVec 64))
(declare-fun temp63_40 () (_ BitVec 64))
(declare-fun temp63_41 () (_ BitVec 64))
(declare-fun temp63_42 () (_ BitVec 64))
(declare-fun temp63_43 () (_ BitVec 64))
(declare-fun temp63_44 () (_ BitVec 64))
(declare-fun temp63_45 () (_ BitVec 64))
(declare-fun temp63_46 () (_ BitVec 64))
(declare-fun temp63_47 () (_ BitVec 64))
(declare-fun temp63_48 () (_ BitVec 64))
(declare-fun temp63_49 () (_ BitVec 64))
(declare-fun temp63_50 () (_ BitVec 64))
(declare-fun temp63_51 () (_ BitVec 64))
(declare-fun temp63_52 () (_ BitVec 64))
(declare-fun temp63_53 () (_ BitVec 64))
(declare-fun temp63_54 () (_ BitVec 64))
(declare-fun temp63_55 () (_ BitVec 64))
(declare-fun temp63_56 () (_ BitVec 64))
(declare-fun temp63_57 () (_ BitVec 64))
(declare-fun temp63_58 () (_ BitVec 64))
(declare-fun temp63_59 () (_ BitVec 64))
(declare-fun temp63_60 () (_ BitVec 64))
(declare-fun temp63_61 () (_ BitVec 64))
(declare-fun temp63_62 () (_ BitVec 64))
(declare-fun temp63_63 () (_ BitVec 64))
(declare-fun temp63_64 () (_ BitVec 64))
(declare-fun temp63_65 () (_ BitVec 64))
(declare-fun temp63_66 () (_ BitVec 64))
(declare-fun temp63_67 () (_ BitVec 64))
(declare-fun temp63_68 () (_ BitVec 64))
(declare-fun temp63_69 () (_ BitVec 64))
(declare-fun temp63_70 () (_ BitVec 64))
(declare-fun temp63_71 () (_ BitVec 64))
(declare-fun temp63_72 () (_ BitVec 64))
(declare-fun temp63_73 () (_ BitVec 64))
(declare-fun temp63_74 () (_ BitVec 64))
(declare-fun temp63_75 () (_ BitVec 64))
(declare-fun temp63_76 () (_ BitVec 64))
(declare-fun temp63_77 () (_ BitVec 64))
(declare-fun temp63_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp63_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp63_80 () (_ BitVec 64))
(declare-fun var987402 () (_ BitVec 64))
(declare-fun var987367 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp63_81 () (_ BitVec 64))
(declare-fun temp63_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp63_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp63_84 () (_ BitVec 64))
(declare-fun temp63_85 () (_ BitVec 64))
(declare-fun var1970478 () (_ BitVec 64))
(declare-fun temp63_86 () (_ BitVec 64))
(declare-fun var1970479 () (_ BitVec 64))
(declare-fun var2294910 () (_ BitVec 64))
(declare-fun var2294911 () (_ BitVec 64))
(declare-fun temp63_87 () (_ BitVec 64))
(declare-fun var2822554 () (_ BitVec 64))
(declare-fun temp63_88 () (_ BitVec 64))
(declare-fun var3346842 () (_ BitVec 64))
(declare-fun temp63_89 () (_ BitVec 64))
(declare-fun var3871651 () (_ BitVec 64))
(declare-fun temp63_91 () (_ BitVec 64))
(declare-fun temp63_90 () (_ BitVec 64))
(assert (= temp63_1 #x0000000000080000))
(assert (= var461925 temp63_1))
(assert (= temp63_2 #x0000000000080000))
(assert (= var724069 temp63_2))
(assert (= temp63_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp63_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp63_4 #x0000000000000000))
(assert (= var69380 temp63_4))
(assert (= temp63_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp63_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp63_6 #x0000000000000000))
(assert (= var69401 temp63_6))
(assert (= temp63_7 #x0000000000000000))
(assert (= temp63_8 temp63_7))
(assert (= temp63_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_8)))
(assert (= temp63_10 #x0000000000000001))
(assert (= temp63_11 temp63_10))
(assert (= temp63_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_11)))
(assert (= temp63_13 #x0000000000000002))
(assert (= temp63_14 temp63_13))
(assert (= temp63_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_14)))
(assert (= temp63_16 #x0000000000000003))
(assert (= temp63_17 temp63_16))
(assert (= temp63_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_17)))
(assert (= temp63_19 #x0000000000000004))
(assert (= temp63_20 temp63_19))
(assert (= temp63_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_20)))
(assert (= temp63_22 #x0000000000000005))
(assert (= temp63_23 temp63_22))
(assert (= temp63_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_23)))
(assert (= temp63_25 #x0000000000000000))
(assert (= temp63_26 temp63_25))
(assert (= temp63_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp63_26)))
(assert (= temp63_28 #x0000000000000001))
(assert (= temp63_29 temp63_28))
(assert (= temp63_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp63_29)))
(assert (= temp63_31 #x0000000000000002))
(assert (= temp63_32 temp63_31))
(assert (= temp63_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp63_32)))
(assert (= temp63_34 #x0000000000000003))
(assert (= temp63_35 temp63_34))
(assert (= temp63_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp63_35)))
(assert (= temp63_37 #x0000000000000004))
(assert (= temp63_38 temp63_37))
(assert (= temp63_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp63_38)))
(assert (= temp63_40 #x0000000000000005))
(assert (= temp63_41 temp63_40))
(assert (= temp63_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp63_41)))
(assert (= temp63_43 temp63_11))
(assert (= temp63_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp63_43)))
(assert (= temp63_45 temp63_14))
(assert (= temp63_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp63_45)))
(assert (= temp63_47 temp63_17))
(assert (= temp63_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp63_47)))
(assert (= temp63_49 temp63_20))
(assert (= temp63_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp63_49)))
(assert (= temp63_51 temp63_23))
(assert (= temp63_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp63_51)))
(assert (= temp63_53 temp63_8))
(assert (= temp63_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp63_53)))
(assert (= temp63_55 temp63_26))
(assert (= temp63_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_55)))
(assert (= temp63_57 temp63_29))
(assert (= temp63_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_57)))
(assert (= temp63_59 temp63_32))
(assert (= temp63_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_59)))
(assert (= temp63_61 temp63_35))
(assert (= temp63_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_61)))
(assert (= temp63_63 temp63_38))
(assert (= temp63_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_63)))
(assert (= temp63_65 temp63_41))
(assert (= temp63_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_65)))
(assert (= temp63_67 temp63_43))
(assert (= temp63_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_67)))
(assert (= temp63_69 temp63_45))
(assert (= temp63_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_69)))
(assert (= temp63_71 temp63_47))
(assert (= temp63_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_71)))
(assert (= temp63_73 temp63_49))
(assert (= temp63_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_73)))
(assert (= temp63_75 temp63_51))
(assert (= temp63_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_75)))
(assert (= temp63_77 temp63_53))
(assert (= temp63_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_77)))
(assert (= (and true
        (= temp63_44 temp63_12)
        (= temp63_46 temp63_15)
        (= temp63_48 temp63_18)
        (= temp63_50 temp63_21)
        (= temp63_52 temp63_24)
        (= temp63_54 temp63_9)
        (= temp63_56 temp63_27)
        (= temp63_58 temp63_30)
        (= temp63_60 temp63_33)
        (= temp63_62 temp63_36)
        (= temp63_64 temp63_39)
        (= temp63_66 temp63_42)
        (= temp63_68 temp63_44)
        (= temp63_70 temp63_46)
        (= temp63_72 temp63_48)
        (= temp63_74 temp63_50)
        (= temp63_76 temp63_52)
        (= temp63_78 temp63_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp63_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp63_79))
(assert (= temp63_80 #x0000000000000001))
(assert (= var987402 temp63_80))
(assert (= var987367 var987402))
(assert (= var69428 var987367))
(assert (= temp63_81 #x0000000000000001))
(assert (= var69428 temp63_81))
(assert (= temp63_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp63_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp63_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp63_83)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp63_84 #x0000000000000000))
(assert (= var69546 temp63_84))
(assert (= temp63_85 #x0000000000000000))
(assert (= var1970478 temp63_85))
(assert (= temp63_86 #x0000000000000000))
(assert (= var1970479 temp63_86))
(assert (= var2294910 var1970478))
(assert (= var2294911 var1970479))
(assert (= temp63_87 #x0000000000000001))
(assert (= var2822554 temp63_87))
(assert (= temp63_88 #x0000000000000001))
(assert (= var3346842 temp63_88))
(assert (= temp63_89 #x000000000000000b))
(assert (= var3871651 temp63_89))
(assert (= temp63_91 #x0000000000000001))
(assert (= temp63_90 temp63_91))
(model-add temp63_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp63_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp63_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp63_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






