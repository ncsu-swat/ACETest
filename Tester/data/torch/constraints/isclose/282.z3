(declare-fun temp406_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp406_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp406_3 () (_ BitVec 64))
(declare-fun temp406_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp406_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp406_6 () (_ BitVec 64))
(declare-fun temp406_7 () (_ BitVec 64))
(declare-fun temp406_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp406_9 () (_ BitVec 64))
(declare-fun temp406_10 () (_ BitVec 64))
(declare-fun temp406_11 () (_ BitVec 64))
(declare-fun temp406_12 () (_ BitVec 64))
(declare-fun temp406_13 () (_ BitVec 64))
(declare-fun temp406_14 () (_ BitVec 64))
(declare-fun temp406_15 () (_ BitVec 64))
(declare-fun temp406_16 () (_ BitVec 64))
(declare-fun temp406_17 () (_ BitVec 64))
(declare-fun temp406_18 () (_ BitVec 64))
(declare-fun temp406_19 () (_ BitVec 64))
(declare-fun temp406_20 () (_ BitVec 64))
(declare-fun temp406_21 () (_ BitVec 64))
(declare-fun temp406_22 () (_ BitVec 64))
(declare-fun temp406_23 () (_ BitVec 64))
(declare-fun temp406_24 () (_ BitVec 64))
(declare-fun temp406_25 () (_ BitVec 64))
(declare-fun temp406_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp406_27 () (_ BitVec 64))
(declare-fun temp406_28 () (_ BitVec 64))
(declare-fun temp406_29 () (_ BitVec 64))
(declare-fun temp406_30 () (_ BitVec 64))
(declare-fun temp406_31 () (_ BitVec 64))
(declare-fun temp406_32 () (_ BitVec 64))
(declare-fun temp406_33 () (_ BitVec 64))
(declare-fun temp406_34 () (_ BitVec 64))
(declare-fun temp406_35 () (_ BitVec 64))
(declare-fun temp406_36 () (_ BitVec 64))
(declare-fun temp406_37 () (_ BitVec 64))
(declare-fun temp406_38 () (_ BitVec 64))
(declare-fun temp406_39 () (_ BitVec 64))
(declare-fun temp406_40 () (_ BitVec 64))
(declare-fun temp406_41 () (_ BitVec 64))
(declare-fun temp406_42 () (_ BitVec 64))
(declare-fun temp406_43 () (_ BitVec 64))
(declare-fun temp406_44 () (_ BitVec 64))
(declare-fun temp406_45 () (_ BitVec 64))
(declare-fun temp406_46 () (_ BitVec 64))
(declare-fun temp406_47 () (_ BitVec 64))
(declare-fun temp406_48 () (_ BitVec 64))
(declare-fun temp406_49 () (_ BitVec 64))
(declare-fun temp406_50 () (_ BitVec 64))
(declare-fun temp406_51 () (_ BitVec 64))
(declare-fun temp406_52 () (_ BitVec 64))
(declare-fun temp406_53 () (_ BitVec 64))
(declare-fun temp406_54 () (_ BitVec 64))
(declare-fun temp406_55 () (_ BitVec 64))
(declare-fun temp406_56 () (_ BitVec 64))
(declare-fun temp406_57 () (_ BitVec 64))
(declare-fun temp406_58 () (_ BitVec 64))
(declare-fun temp406_59 () (_ BitVec 64))
(declare-fun temp406_60 () (_ BitVec 64))
(declare-fun temp406_61 () (_ BitVec 64))
(declare-fun temp406_62 () (_ BitVec 64))
(declare-fun temp406_63 () (_ BitVec 64))
(declare-fun temp406_64 () (_ BitVec 64))
(declare-fun temp406_65 () (_ BitVec 64))
(declare-fun temp406_66 () (_ BitVec 64))
(declare-fun temp406_67 () (_ BitVec 64))
(declare-fun temp406_68 () (_ BitVec 64))
(declare-fun temp406_69 () (_ BitVec 64))
(declare-fun temp406_70 () (_ BitVec 64))
(declare-fun temp406_71 () (_ BitVec 64))
(declare-fun temp406_72 () (_ BitVec 64))
(declare-fun temp406_73 () (_ BitVec 64))
(declare-fun temp406_74 () (_ BitVec 64))
(declare-fun temp406_75 () (_ BitVec 64))
(declare-fun temp406_76 () (_ BitVec 64))
(declare-fun temp406_77 () (_ BitVec 64))
(declare-fun temp406_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp406_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp406_80 () (_ BitVec 64))
(declare-fun var1248381 () (_ BitVec 64))
(declare-fun temp406_81 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp406_82 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp406_83 () (_ BitVec 64))
(declare-fun temp406_84 () (_ BitVec 64))
(declare-fun var1970478 () (_ BitVec 64))
(declare-fun temp406_85 () (_ BitVec 64))
(declare-fun var1970479 () (_ BitVec 64))
(declare-fun var2294910 () (_ BitVec 64))
(declare-fun var2294911 () (_ BitVec 64))
(declare-fun temp406_86 () (_ BitVec 64))
(declare-fun var3019162 () (_ BitVec 64))
(declare-fun temp406_87 () (_ BitVec 64))
(declare-fun var3543450 () (_ BitVec 64))
(declare-fun temp406_88 () (_ BitVec 64))
(declare-fun var4461475 () (_ BitVec 64))
(declare-fun temp406_90 () (_ BitVec 64))
(declare-fun temp406_89 () (_ BitVec 64))
(assert (= temp406_1 #x0000000000080000))
(assert (= var461925 temp406_1))
(assert (= temp406_2 #x0000000000080000))
(assert (= var724069 temp406_2))
(assert (= temp406_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp406_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp406_4 #x0000000000000000))
(assert (= var69380 temp406_4))
(assert (= temp406_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp406_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp406_6 #x0000000000000000))
(assert (= var69401 temp406_6))
(assert (= temp406_7 #x0000000000000000))
(assert (= temp406_8 temp406_7))
(assert (= temp406_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_8)))
(assert (= temp406_10 #x0000000000000001))
(assert (= temp406_11 temp406_10))
(assert (= temp406_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_11)))
(assert (= temp406_13 #x0000000000000002))
(assert (= temp406_14 temp406_13))
(assert (= temp406_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_14)))
(assert (= temp406_16 #x0000000000000003))
(assert (= temp406_17 temp406_16))
(assert (= temp406_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_17)))
(assert (= temp406_19 #x0000000000000004))
(assert (= temp406_20 temp406_19))
(assert (= temp406_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_20)))
(assert (= temp406_22 #x0000000000000005))
(assert (= temp406_23 temp406_22))
(assert (= temp406_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_23)))
(assert (= temp406_25 #x0000000000000000))
(assert (= temp406_26 temp406_25))
(assert (= temp406_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp406_26)))
(assert (= temp406_28 #x0000000000000001))
(assert (= temp406_29 temp406_28))
(assert (= temp406_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp406_29)))
(assert (= temp406_31 #x0000000000000002))
(assert (= temp406_32 temp406_31))
(assert (= temp406_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp406_32)))
(assert (= temp406_34 #x0000000000000003))
(assert (= temp406_35 temp406_34))
(assert (= temp406_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp406_35)))
(assert (= temp406_37 #x0000000000000004))
(assert (= temp406_38 temp406_37))
(assert (= temp406_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp406_38)))
(assert (= temp406_40 #x0000000000000005))
(assert (= temp406_41 temp406_40))
(assert (= temp406_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp406_41)))
(assert (= temp406_43 temp406_11))
(assert (= temp406_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp406_43)))
(assert (= temp406_45 temp406_14))
(assert (= temp406_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp406_45)))
(assert (= temp406_47 temp406_17))
(assert (= temp406_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp406_47)))
(assert (= temp406_49 temp406_20))
(assert (= temp406_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp406_49)))
(assert (= temp406_51 temp406_23))
(assert (= temp406_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp406_51)))
(assert (= temp406_53 temp406_8))
(assert (= temp406_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp406_53)))
(assert (= temp406_55 temp406_26))
(assert (= temp406_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_55)))
(assert (= temp406_57 temp406_29))
(assert (= temp406_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_57)))
(assert (= temp406_59 temp406_32))
(assert (= temp406_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_59)))
(assert (= temp406_61 temp406_35))
(assert (= temp406_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_61)))
(assert (= temp406_63 temp406_38))
(assert (= temp406_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_63)))
(assert (= temp406_65 temp406_41))
(assert (= temp406_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_65)))
(assert (= temp406_67 temp406_43))
(assert (= temp406_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_67)))
(assert (= temp406_69 temp406_45))
(assert (= temp406_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_69)))
(assert (= temp406_71 temp406_47))
(assert (= temp406_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_71)))
(assert (= temp406_73 temp406_49))
(assert (= temp406_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_73)))
(assert (= temp406_75 temp406_51))
(assert (= temp406_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_75)))
(assert (= temp406_77 temp406_53))
(assert (= temp406_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_77)))
(assert (= (and true
        (= temp406_44 temp406_12)
        (= temp406_46 temp406_15)
        (= temp406_48 temp406_18)
        (= temp406_50 temp406_21)
        (= temp406_52 temp406_24)
        (= temp406_54 temp406_9)
        (= temp406_56 temp406_27)
        (= temp406_58 temp406_30)
        (= temp406_60 temp406_33)
        (= temp406_62 temp406_36)
        (= temp406_64 temp406_39)
        (= temp406_66 temp406_42)
        (= temp406_68 temp406_44)
        (= temp406_70 temp406_46)
        (= temp406_72 temp406_48)
        (= temp406_74 temp406_50)
        (= temp406_76 temp406_52)
        (= temp406_78 temp406_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp406_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp406_79))
(assert (= temp406_80 #x0000000009c00400))
(assert (= var1248381 temp406_80))
(assert (= temp406_81 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp406_81)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp406_82 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp406_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp406_83 #x0000000000000000))
(assert (= var69546 temp406_83))
(assert (= temp406_84 #x0000000000000000))
(assert (= var1970478 temp406_84))
(assert (= temp406_85 #x0000000000000000))
(assert (= var1970479 temp406_85))
(assert (= var2294910 var1970478))
(assert (= var2294911 var1970479))
(assert (= temp406_86 #x0000000000000001))
(assert (= var3019162 temp406_86))
(assert (= temp406_87 #x0000000000000001))
(assert (= var3543450 temp406_87))
(assert (= temp406_88 #x000000000000000b))
(assert (= var4461475 temp406_88))
(assert (= temp406_90 #x0000000000000001))
(assert (= temp406_89 temp406_90))
(model-add temp406_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp406_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp406_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp406_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






