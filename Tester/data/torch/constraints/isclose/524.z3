(declare-fun temp648_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp648_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp648_3 () (_ BitVec 64))
(declare-fun temp648_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp648_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp648_6 () (_ BitVec 64))
(declare-fun temp648_7 () (_ BitVec 64))
(declare-fun temp648_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp648_9 () (_ BitVec 64))
(declare-fun temp648_10 () (_ BitVec 64))
(declare-fun temp648_11 () (_ BitVec 64))
(declare-fun temp648_12 () (_ BitVec 64))
(declare-fun temp648_13 () (_ BitVec 64))
(declare-fun temp648_14 () (_ BitVec 64))
(declare-fun temp648_15 () (_ BitVec 64))
(declare-fun temp648_16 () (_ BitVec 64))
(declare-fun temp648_17 () (_ BitVec 64))
(declare-fun temp648_18 () (_ BitVec 64))
(declare-fun temp648_19 () (_ BitVec 64))
(declare-fun temp648_20 () (_ BitVec 64))
(declare-fun temp648_21 () (_ BitVec 64))
(declare-fun temp648_22 () (_ BitVec 64))
(declare-fun temp648_23 () (_ BitVec 64))
(declare-fun temp648_24 () (_ BitVec 64))
(declare-fun temp648_25 () (_ BitVec 64))
(declare-fun temp648_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp648_27 () (_ BitVec 64))
(declare-fun temp648_28 () (_ BitVec 64))
(declare-fun temp648_29 () (_ BitVec 64))
(declare-fun temp648_30 () (_ BitVec 64))
(declare-fun temp648_31 () (_ BitVec 64))
(declare-fun temp648_32 () (_ BitVec 64))
(declare-fun temp648_33 () (_ BitVec 64))
(declare-fun temp648_34 () (_ BitVec 64))
(declare-fun temp648_35 () (_ BitVec 64))
(declare-fun temp648_36 () (_ BitVec 64))
(declare-fun temp648_37 () (_ BitVec 64))
(declare-fun temp648_38 () (_ BitVec 64))
(declare-fun temp648_39 () (_ BitVec 64))
(declare-fun temp648_40 () (_ BitVec 64))
(declare-fun temp648_41 () (_ BitVec 64))
(declare-fun temp648_42 () (_ BitVec 64))
(declare-fun temp648_43 () (_ BitVec 64))
(declare-fun temp648_44 () (_ BitVec 64))
(declare-fun temp648_45 () (_ BitVec 64))
(declare-fun temp648_46 () (_ BitVec 64))
(declare-fun temp648_47 () (_ BitVec 64))
(declare-fun temp648_48 () (_ BitVec 64))
(declare-fun temp648_49 () (_ BitVec 64))
(declare-fun temp648_50 () (_ BitVec 64))
(declare-fun temp648_51 () (_ BitVec 64))
(declare-fun temp648_52 () (_ BitVec 64))
(declare-fun temp648_53 () (_ BitVec 64))
(declare-fun temp648_54 () (_ BitVec 64))
(declare-fun temp648_55 () (_ BitVec 64))
(declare-fun temp648_56 () (_ BitVec 64))
(declare-fun temp648_57 () (_ BitVec 64))
(declare-fun temp648_58 () (_ BitVec 64))
(declare-fun temp648_59 () (_ BitVec 64))
(declare-fun temp648_60 () (_ BitVec 64))
(declare-fun temp648_61 () (_ BitVec 64))
(declare-fun temp648_62 () (_ BitVec 64))
(declare-fun temp648_63 () (_ BitVec 64))
(declare-fun temp648_64 () (_ BitVec 64))
(declare-fun temp648_65 () (_ BitVec 64))
(declare-fun temp648_66 () (_ BitVec 64))
(declare-fun temp648_67 () (_ BitVec 64))
(declare-fun temp648_68 () (_ BitVec 64))
(declare-fun temp648_69 () (_ BitVec 64))
(declare-fun temp648_70 () (_ BitVec 64))
(declare-fun temp648_71 () (_ BitVec 64))
(declare-fun temp648_72 () (_ BitVec 64))
(declare-fun temp648_73 () (_ BitVec 64))
(declare-fun temp648_74 () (_ BitVec 64))
(declare-fun temp648_75 () (_ BitVec 64))
(declare-fun temp648_76 () (_ BitVec 64))
(declare-fun temp648_77 () (_ BitVec 64))
(declare-fun temp648_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp648_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp648_80 () (_ BitVec 64))
(declare-fun var1184010 () (_ BitVec 64))
(declare-fun var1183975 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp648_81 () (_ BitVec 64))
(declare-fun temp648_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp648_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp648_84 () (_ BitVec 64))
(declare-fun temp648_85 () (_ BitVec 64))
(declare-fun var1904942 () (_ BitVec 64))
(declare-fun temp648_86 () (_ BitVec 64))
(declare-fun var1904943 () (_ BitVec 64))
(declare-fun var2229374 () (_ BitVec 64))
(declare-fun var2229375 () (_ BitVec 64))
(declare-fun temp648_87 () (_ BitVec 64))
(declare-fun var2560302 () (_ BitVec 64))
(declare-fun temp648_88 () (_ BitVec 64))
(declare-fun var2560303 () (_ BitVec 64))
(declare-fun var2884734 () (_ BitVec 64))
(declare-fun var2884735 () (_ BitVec 64))
(declare-fun temp648_89 () (_ BitVec 64))
(declare-fun var3412378 () (_ BitVec 64))
(declare-fun temp648_90 () (_ BitVec 64))
(declare-fun var3936666 () (_ BitVec 64))
(assert (= temp648_1 #x0000000000080000))
(assert (= var461925 temp648_1))
(assert (= temp648_2 #x0000000000080000))
(assert (= var724069 temp648_2))
(assert (= temp648_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp648_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp648_4 #x0000000000000000))
(assert (= var69380 temp648_4))
(assert (= temp648_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp648_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp648_6 #x0000000000000000))
(assert (= var69401 temp648_6))
(assert (= temp648_7 #x0000000000000000))
(assert (= temp648_8 temp648_7))
(assert (= temp648_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp648_8)))
(assert (= temp648_10 #x0000000000000001))
(assert (= temp648_11 temp648_10))
(assert (= temp648_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp648_11)))
(assert (= temp648_13 #x0000000000000002))
(assert (= temp648_14 temp648_13))
(assert (= temp648_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp648_14)))
(assert (= temp648_16 #x0000000000000003))
(assert (= temp648_17 temp648_16))
(assert (= temp648_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp648_17)))
(assert (= temp648_19 #x0000000000000004))
(assert (= temp648_20 temp648_19))
(assert (= temp648_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp648_20)))
(assert (= temp648_22 #x0000000000000005))
(assert (= temp648_23 temp648_22))
(assert (= temp648_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp648_23)))
(assert (= temp648_25 #x0000000000000000))
(assert (= temp648_26 temp648_25))
(assert (= temp648_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp648_26)))
(assert (= temp648_28 #x0000000000000001))
(assert (= temp648_29 temp648_28))
(assert (= temp648_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp648_29)))
(assert (= temp648_31 #x0000000000000002))
(assert (= temp648_32 temp648_31))
(assert (= temp648_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp648_32)))
(assert (= temp648_34 #x0000000000000003))
(assert (= temp648_35 temp648_34))
(assert (= temp648_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp648_35)))
(assert (= temp648_37 #x0000000000000004))
(assert (= temp648_38 temp648_37))
(assert (= temp648_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp648_38)))
(assert (= temp648_40 #x0000000000000005))
(assert (= temp648_41 temp648_40))
(assert (= temp648_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp648_41)))
(assert (= temp648_43 temp648_11))
(assert (= temp648_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp648_43)))
(assert (= temp648_45 temp648_14))
(assert (= temp648_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp648_45)))
(assert (= temp648_47 temp648_17))
(assert (= temp648_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp648_47)))
(assert (= temp648_49 temp648_20))
(assert (= temp648_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp648_49)))
(assert (= temp648_51 temp648_23))
(assert (= temp648_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp648_51)))
(assert (= temp648_53 temp648_8))
(assert (= temp648_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp648_53)))
(assert (= temp648_55 temp648_26))
(assert (= temp648_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp648_55)))
(assert (= temp648_57 temp648_29))
(assert (= temp648_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp648_57)))
(assert (= temp648_59 temp648_32))
(assert (= temp648_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp648_59)))
(assert (= temp648_61 temp648_35))
(assert (= temp648_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp648_61)))
(assert (= temp648_63 temp648_38))
(assert (= temp648_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp648_63)))
(assert (= temp648_65 temp648_41))
(assert (= temp648_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp648_65)))
(assert (= temp648_67 temp648_43))
(assert (= temp648_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp648_67)))
(assert (= temp648_69 temp648_45))
(assert (= temp648_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp648_69)))
(assert (= temp648_71 temp648_47))
(assert (= temp648_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp648_71)))
(assert (= temp648_73 temp648_49))
(assert (= temp648_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp648_73)))
(assert (= temp648_75 temp648_51))
(assert (= temp648_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp648_75)))
(assert (= temp648_77 temp648_53))
(assert (= temp648_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp648_77)))
(assert (= (and true
        (= temp648_44 temp648_12)
        (= temp648_46 temp648_15)
        (= temp648_48 temp648_18)
        (= temp648_50 temp648_21)
        (= temp648_52 temp648_24)
        (= temp648_54 temp648_9)
        (= temp648_56 temp648_27)
        (= temp648_58 temp648_30)
        (= temp648_60 temp648_33)
        (= temp648_62 temp648_36)
        (= temp648_64 temp648_39)
        (= temp648_66 temp648_42)
        (= temp648_68 temp648_44)
        (= temp648_70 temp648_46)
        (= temp648_72 temp648_48)
        (= temp648_74 temp648_50)
        (= temp648_76 temp648_52)
        (= temp648_78 temp648_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp648_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp648_79))
(assert (= temp648_80 #x0000000000000001))
(assert (= var1184010 temp648_80))
(assert (= var1183975 var1184010))
(assert (= var69428 var1183975))
(assert (= temp648_81 #x0000000000000001))
(assert (= var69428 temp648_81))
(assert (= temp648_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp648_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp648_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp648_83)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp648_84 #x0000000000000000))
(assert (= var69546 temp648_84))
(assert (= temp648_85 #x0000000000000000))
(assert (= var1904942 temp648_85))
(assert (= temp648_86 #x0000000000000000))
(assert (= var1904943 temp648_86))
(assert (= var2229374 var1904942))
(assert (= var2229375 var1904943))
(assert (= temp648_87 #x0000000000000000))
(assert (= var2560302 temp648_87))
(assert (= temp648_88 #x0000000000000000))
(assert (= var2560303 temp648_88))
(assert (= var2884734 var2560302))
(assert (= var2884735 var2560303))
(assert (= temp648_89 #x0000000000000001))
(assert (= var3412378 temp648_89))
(assert (= temp648_90 #x0000000000000001))
(assert (= var3936666 temp648_90))
(model-add temp648_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp648_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp648_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp648_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






