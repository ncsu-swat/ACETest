(declare-fun temp408_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp408_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp408_3 () (_ BitVec 64))
(declare-fun temp408_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp408_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp408_6 () (_ BitVec 64))
(declare-fun temp408_7 () (_ BitVec 64))
(declare-fun temp408_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp408_9 () (_ BitVec 64))
(declare-fun temp408_10 () (_ BitVec 64))
(declare-fun temp408_11 () (_ BitVec 64))
(declare-fun temp408_12 () (_ BitVec 64))
(declare-fun temp408_13 () (_ BitVec 64))
(declare-fun temp408_14 () (_ BitVec 64))
(declare-fun temp408_15 () (_ BitVec 64))
(declare-fun temp408_16 () (_ BitVec 64))
(declare-fun temp408_17 () (_ BitVec 64))
(declare-fun temp408_18 () (_ BitVec 64))
(declare-fun temp408_19 () (_ BitVec 64))
(declare-fun temp408_20 () (_ BitVec 64))
(declare-fun temp408_21 () (_ BitVec 64))
(declare-fun temp408_22 () (_ BitVec 64))
(declare-fun temp408_23 () (_ BitVec 64))
(declare-fun temp408_24 () (_ BitVec 64))
(declare-fun temp408_25 () (_ BitVec 64))
(declare-fun temp408_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp408_27 () (_ BitVec 64))
(declare-fun temp408_28 () (_ BitVec 64))
(declare-fun temp408_29 () (_ BitVec 64))
(declare-fun temp408_30 () (_ BitVec 64))
(declare-fun temp408_31 () (_ BitVec 64))
(declare-fun temp408_32 () (_ BitVec 64))
(declare-fun temp408_33 () (_ BitVec 64))
(declare-fun temp408_34 () (_ BitVec 64))
(declare-fun temp408_35 () (_ BitVec 64))
(declare-fun temp408_36 () (_ BitVec 64))
(declare-fun temp408_37 () (_ BitVec 64))
(declare-fun temp408_38 () (_ BitVec 64))
(declare-fun temp408_39 () (_ BitVec 64))
(declare-fun temp408_40 () (_ BitVec 64))
(declare-fun temp408_41 () (_ BitVec 64))
(declare-fun temp408_42 () (_ BitVec 64))
(declare-fun temp408_43 () (_ BitVec 64))
(declare-fun temp408_44 () (_ BitVec 64))
(declare-fun temp408_45 () (_ BitVec 64))
(declare-fun temp408_46 () (_ BitVec 64))
(declare-fun temp408_47 () (_ BitVec 64))
(declare-fun temp408_48 () (_ BitVec 64))
(declare-fun temp408_49 () (_ BitVec 64))
(declare-fun temp408_50 () (_ BitVec 64))
(declare-fun temp408_51 () (_ BitVec 64))
(declare-fun temp408_52 () (_ BitVec 64))
(declare-fun temp408_53 () (_ BitVec 64))
(declare-fun temp408_54 () (_ BitVec 64))
(declare-fun temp408_55 () (_ BitVec 64))
(declare-fun temp408_56 () (_ BitVec 64))
(declare-fun temp408_57 () (_ BitVec 64))
(declare-fun temp408_58 () (_ BitVec 64))
(declare-fun temp408_59 () (_ BitVec 64))
(declare-fun temp408_60 () (_ BitVec 64))
(declare-fun temp408_61 () (_ BitVec 64))
(declare-fun temp408_62 () (_ BitVec 64))
(declare-fun temp408_63 () (_ BitVec 64))
(declare-fun temp408_64 () (_ BitVec 64))
(declare-fun temp408_65 () (_ BitVec 64))
(declare-fun temp408_66 () (_ BitVec 64))
(declare-fun temp408_67 () (_ BitVec 64))
(declare-fun temp408_68 () (_ BitVec 64))
(declare-fun temp408_69 () (_ BitVec 64))
(declare-fun temp408_70 () (_ BitVec 64))
(declare-fun temp408_71 () (_ BitVec 64))
(declare-fun temp408_72 () (_ BitVec 64))
(declare-fun temp408_73 () (_ BitVec 64))
(declare-fun temp408_74 () (_ BitVec 64))
(declare-fun temp408_75 () (_ BitVec 64))
(declare-fun temp408_76 () (_ BitVec 64))
(declare-fun temp408_77 () (_ BitVec 64))
(declare-fun temp408_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp408_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp408_80 () (_ BitVec 64))
(declare-fun var1248381 () (_ BitVec 64))
(declare-fun temp408_81 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp408_82 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp408_83 () (_ BitVec 64))
(declare-fun temp408_84 () (_ BitVec 64))
(declare-fun var1970478 () (_ BitVec 64))
(declare-fun temp408_85 () (_ BitVec 64))
(declare-fun var1970479 () (_ BitVec 64))
(declare-fun var2294910 () (_ BitVec 64))
(declare-fun var2294911 () (_ BitVec 64))
(declare-fun temp408_86 () (_ BitVec 64))
(declare-fun var3019162 () (_ BitVec 64))
(declare-fun temp408_87 () (_ BitVec 64))
(declare-fun var3543450 () (_ BitVec 64))
(declare-fun temp408_88 () (_ BitVec 64))
(declare-fun var4461475 () (_ BitVec 64))
(declare-fun temp408_90 () (_ BitVec 64))
(declare-fun temp408_89 () (_ BitVec 64))
(assert (= temp408_1 #x0000000000080000))
(assert (= var461925 temp408_1))
(assert (= temp408_2 #x0000000000080000))
(assert (= var724069 temp408_2))
(assert (= temp408_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp408_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp408_4 #x0000000000000000))
(assert (= var69380 temp408_4))
(assert (= temp408_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp408_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp408_6 #x0000000000000000))
(assert (= var69401 temp408_6))
(assert (= temp408_7 #x0000000000000000))
(assert (= temp408_8 temp408_7))
(assert (= temp408_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp408_8)))
(assert (= temp408_10 #x0000000000000001))
(assert (= temp408_11 temp408_10))
(assert (= temp408_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp408_11)))
(assert (= temp408_13 #x0000000000000002))
(assert (= temp408_14 temp408_13))
(assert (= temp408_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp408_14)))
(assert (= temp408_16 #x0000000000000003))
(assert (= temp408_17 temp408_16))
(assert (= temp408_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp408_17)))
(assert (= temp408_19 #x0000000000000004))
(assert (= temp408_20 temp408_19))
(assert (= temp408_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp408_20)))
(assert (= temp408_22 #x0000000000000005))
(assert (= temp408_23 temp408_22))
(assert (= temp408_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp408_23)))
(assert (= temp408_25 #x0000000000000000))
(assert (= temp408_26 temp408_25))
(assert (= temp408_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp408_26)))
(assert (= temp408_28 #x0000000000000001))
(assert (= temp408_29 temp408_28))
(assert (= temp408_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp408_29)))
(assert (= temp408_31 #x0000000000000002))
(assert (= temp408_32 temp408_31))
(assert (= temp408_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp408_32)))
(assert (= temp408_34 #x0000000000000003))
(assert (= temp408_35 temp408_34))
(assert (= temp408_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp408_35)))
(assert (= temp408_37 #x0000000000000004))
(assert (= temp408_38 temp408_37))
(assert (= temp408_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp408_38)))
(assert (= temp408_40 #x0000000000000005))
(assert (= temp408_41 temp408_40))
(assert (= temp408_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp408_41)))
(assert (= temp408_43 temp408_11))
(assert (= temp408_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp408_43)))
(assert (= temp408_45 temp408_14))
(assert (= temp408_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp408_45)))
(assert (= temp408_47 temp408_17))
(assert (= temp408_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp408_47)))
(assert (= temp408_49 temp408_20))
(assert (= temp408_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp408_49)))
(assert (= temp408_51 temp408_23))
(assert (= temp408_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp408_51)))
(assert (= temp408_53 temp408_8))
(assert (= temp408_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp408_53)))
(assert (= temp408_55 temp408_26))
(assert (= temp408_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp408_55)))
(assert (= temp408_57 temp408_29))
(assert (= temp408_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp408_57)))
(assert (= temp408_59 temp408_32))
(assert (= temp408_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp408_59)))
(assert (= temp408_61 temp408_35))
(assert (= temp408_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp408_61)))
(assert (= temp408_63 temp408_38))
(assert (= temp408_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp408_63)))
(assert (= temp408_65 temp408_41))
(assert (= temp408_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp408_65)))
(assert (= temp408_67 temp408_43))
(assert (= temp408_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp408_67)))
(assert (= temp408_69 temp408_45))
(assert (= temp408_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp408_69)))
(assert (= temp408_71 temp408_47))
(assert (= temp408_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp408_71)))
(assert (= temp408_73 temp408_49))
(assert (= temp408_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp408_73)))
(assert (= temp408_75 temp408_51))
(assert (= temp408_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp408_75)))
(assert (= temp408_77 temp408_53))
(assert (= temp408_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp408_77)))
(assert (= (and true
        (= temp408_44 temp408_12)
        (= temp408_46 temp408_15)
        (= temp408_48 temp408_18)
        (= temp408_50 temp408_21)
        (= temp408_52 temp408_24)
        (= temp408_54 temp408_9)
        (= temp408_56 temp408_27)
        (= temp408_58 temp408_30)
        (= temp408_60 temp408_33)
        (= temp408_62 temp408_36)
        (= temp408_64 temp408_39)
        (= temp408_66 temp408_42)
        (= temp408_68 temp408_44)
        (= temp408_70 temp408_46)
        (= temp408_72 temp408_48)
        (= temp408_74 temp408_50)
        (= temp408_76 temp408_52)
        (= temp408_78 temp408_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp408_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp408_79))
(assert (= temp408_80 #x0000000009c00400))
(assert (= var1248381 temp408_80))
(assert (= temp408_81 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp408_81)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp408_82 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp408_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp408_83 #x0000000000000000))
(assert (= var69546 temp408_83))
(assert (= temp408_84 #x0000000000000000))
(assert (= var1970478 temp408_84))
(assert (= temp408_85 #x0000000000000000))
(assert (= var1970479 temp408_85))
(assert (= var2294910 var1970478))
(assert (= var2294911 var1970479))
(assert (= temp408_86 #x0000000000000001))
(assert (= var3019162 temp408_86))
(assert (= temp408_87 #x0000000000000001))
(assert (= var3543450 temp408_87))
(assert (= temp408_88 #x000000000000000b))
(assert (= var4461475 temp408_88))
(assert (= temp408_90 #x0000000000000001))
(assert (= temp408_89 temp408_90))
(model-add temp408_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp408_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp408_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp408_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






