(declare-fun temp101_1 () (_ BitVec 64))
(declare-fun var461925 () (_ BitVec 64))
(declare-fun temp101_2 () (_ BitVec 64))
(declare-fun var724069 () (_ BitVec 64))
(declare-fun temp101_3 () (_ BitVec 64))
(declare-fun temp101_4 () (_ BitVec 64))
(declare-fun var69380 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_rtol_NAMEEND () (_ BitVec 64))
(declare-fun temp101_5 () (_ BitVec 64))
(declare-fun ARGNAME_atol_NAMEEND () (_ BitVec 64))
(declare-fun var69401 () (_ BitVec 64))
(declare-fun temp101_6 () (_ BitVec 64))
(declare-fun temp101_7 () (_ BitVec 64))
(declare-fun temp101_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp101_9 () (_ BitVec 64))
(declare-fun temp101_10 () (_ BitVec 64))
(declare-fun temp101_11 () (_ BitVec 64))
(declare-fun temp101_12 () (_ BitVec 64))
(declare-fun temp101_13 () (_ BitVec 64))
(declare-fun temp101_14 () (_ BitVec 64))
(declare-fun temp101_15 () (_ BitVec 64))
(declare-fun temp101_16 () (_ BitVec 64))
(declare-fun temp101_17 () (_ BitVec 64))
(declare-fun temp101_18 () (_ BitVec 64))
(declare-fun temp101_19 () (_ BitVec 64))
(declare-fun temp101_20 () (_ BitVec 64))
(declare-fun temp101_21 () (_ BitVec 64))
(declare-fun temp101_22 () (_ BitVec 64))
(declare-fun temp101_23 () (_ BitVec 64))
(declare-fun temp101_24 () (_ BitVec 64))
(declare-fun temp101_25 () (_ BitVec 64))
(declare-fun temp101_26 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp101_27 () (_ BitVec 64))
(declare-fun temp101_28 () (_ BitVec 64))
(declare-fun temp101_29 () (_ BitVec 64))
(declare-fun temp101_30 () (_ BitVec 64))
(declare-fun temp101_31 () (_ BitVec 64))
(declare-fun temp101_32 () (_ BitVec 64))
(declare-fun temp101_33 () (_ BitVec 64))
(declare-fun temp101_34 () (_ BitVec 64))
(declare-fun temp101_35 () (_ BitVec 64))
(declare-fun temp101_36 () (_ BitVec 64))
(declare-fun temp101_37 () (_ BitVec 64))
(declare-fun temp101_38 () (_ BitVec 64))
(declare-fun temp101_39 () (_ BitVec 64))
(declare-fun temp101_40 () (_ BitVec 64))
(declare-fun temp101_41 () (_ BitVec 64))
(declare-fun temp101_42 () (_ BitVec 64))
(declare-fun temp101_43 () (_ BitVec 64))
(declare-fun temp101_44 () (_ BitVec 64))
(declare-fun temp101_45 () (_ BitVec 64))
(declare-fun temp101_46 () (_ BitVec 64))
(declare-fun temp101_47 () (_ BitVec 64))
(declare-fun temp101_48 () (_ BitVec 64))
(declare-fun temp101_49 () (_ BitVec 64))
(declare-fun temp101_50 () (_ BitVec 64))
(declare-fun temp101_51 () (_ BitVec 64))
(declare-fun temp101_52 () (_ BitVec 64))
(declare-fun temp101_53 () (_ BitVec 64))
(declare-fun temp101_54 () (_ BitVec 64))
(declare-fun temp101_55 () (_ BitVec 64))
(declare-fun temp101_56 () (_ BitVec 64))
(declare-fun temp101_57 () (_ BitVec 64))
(declare-fun temp101_58 () (_ BitVec 64))
(declare-fun temp101_59 () (_ BitVec 64))
(declare-fun temp101_60 () (_ BitVec 64))
(declare-fun temp101_61 () (_ BitVec 64))
(declare-fun temp101_62 () (_ BitVec 64))
(declare-fun temp101_63 () (_ BitVec 64))
(declare-fun temp101_64 () (_ BitVec 64))
(declare-fun temp101_65 () (_ BitVec 64))
(declare-fun temp101_66 () (_ BitVec 64))
(declare-fun temp101_67 () (_ BitVec 64))
(declare-fun temp101_68 () (_ BitVec 64))
(declare-fun temp101_69 () (_ BitVec 64))
(declare-fun temp101_70 () (_ BitVec 64))
(declare-fun temp101_71 () (_ BitVec 64))
(declare-fun temp101_72 () (_ BitVec 64))
(declare-fun temp101_73 () (_ BitVec 64))
(declare-fun temp101_74 () (_ BitVec 64))
(declare-fun temp101_75 () (_ BitVec 64))
(declare-fun temp101_76 () (_ BitVec 64))
(declare-fun temp101_77 () (_ BitVec 64))
(declare-fun temp101_78 () (_ BitVec 64))
(declare-fun ARGNAME_other_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp101_79 () (_ BitVec 64))
(declare-fun ARGNAME_equal_nan_NAMEEND () (_ BitVec 64))
(declare-fun temp101_80 () (_ BitVec 64))
(declare-fun var987402 () (_ BitVec 64))
(declare-fun var987367 () (_ BitVec 64))
(declare-fun var69428 () (_ BitVec 64))
(declare-fun temp101_81 () (_ BitVec 64))
(declare-fun temp101_82 () (_ BitVec 64))
(declare-fun var69543 () (_ BitVec 64))
(declare-fun temp101_83 () (_ BitVec 64))
(declare-fun var69545 () (_ BitVec 64))
(declare-fun var69546 () (_ BitVec 64))
(declare-fun temp101_84 () (_ BitVec 64))
(declare-fun temp101_85 () (_ BitVec 64))
(declare-fun var2363802 () (_ BitVec 64))
(declare-fun temp101_86 () (_ BitVec 64))
(declare-fun var2888090 () (_ BitVec 64))
(assert (= temp101_1 #x0000000000080000))
(assert (= var461925 temp101_1))
(assert (= temp101_2 #x0000000000080000))
(assert (= var724069 temp101_2))
(assert (= temp101_3 #x0000000000000000))
(assert (= var69380
   (ite (bvslt ARGNAME_rtol_NAMEEND temp101_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp101_4 #x0000000000000000))
(assert (= var69380 temp101_4))
(assert (= temp101_5 #x0000000000000000))
(assert (= var69401
   (ite (bvslt ARGNAME_atol_NAMEEND temp101_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp101_6 #x0000000000000000))
(assert (= var69401 temp101_6))
(assert (= temp101_7 #x0000000000000000))
(assert (= temp101_8 temp101_7))
(assert (= temp101_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_8)))
(assert (= temp101_10 #x0000000000000001))
(assert (= temp101_11 temp101_10))
(assert (= temp101_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_11)))
(assert (= temp101_13 #x0000000000000002))
(assert (= temp101_14 temp101_13))
(assert (= temp101_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_14)))
(assert (= temp101_16 #x0000000000000003))
(assert (= temp101_17 temp101_16))
(assert (= temp101_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_17)))
(assert (= temp101_19 #x0000000000000004))
(assert (= temp101_20 temp101_19))
(assert (= temp101_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_20)))
(assert (= temp101_22 #x0000000000000005))
(assert (= temp101_23 temp101_22))
(assert (= temp101_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_23)))
(assert (= temp101_25 #x0000000000000000))
(assert (= temp101_26 temp101_25))
(assert (= temp101_27 (select ARGNAME_other_NAMEEND_DIMSIZE temp101_26)))
(assert (= temp101_28 #x0000000000000001))
(assert (= temp101_29 temp101_28))
(assert (= temp101_30 (select ARGNAME_other_NAMEEND_DIMSIZE temp101_29)))
(assert (= temp101_31 #x0000000000000002))
(assert (= temp101_32 temp101_31))
(assert (= temp101_33 (select ARGNAME_other_NAMEEND_DIMSIZE temp101_32)))
(assert (= temp101_34 #x0000000000000003))
(assert (= temp101_35 temp101_34))
(assert (= temp101_36 (select ARGNAME_other_NAMEEND_DIMSIZE temp101_35)))
(assert (= temp101_37 #x0000000000000004))
(assert (= temp101_38 temp101_37))
(assert (= temp101_39 (select ARGNAME_other_NAMEEND_DIMSIZE temp101_38)))
(assert (= temp101_40 #x0000000000000005))
(assert (= temp101_41 temp101_40))
(assert (= temp101_42 (select ARGNAME_other_NAMEEND_DIMSIZE temp101_41)))
(assert (= temp101_43 temp101_11))
(assert (= temp101_44 (select ARGNAME_other_NAMEEND_DIMSIZE temp101_43)))
(assert (= temp101_45 temp101_14))
(assert (= temp101_46 (select ARGNAME_other_NAMEEND_DIMSIZE temp101_45)))
(assert (= temp101_47 temp101_17))
(assert (= temp101_48 (select ARGNAME_other_NAMEEND_DIMSIZE temp101_47)))
(assert (= temp101_49 temp101_20))
(assert (= temp101_50 (select ARGNAME_other_NAMEEND_DIMSIZE temp101_49)))
(assert (= temp101_51 temp101_23))
(assert (= temp101_52 (select ARGNAME_other_NAMEEND_DIMSIZE temp101_51)))
(assert (= temp101_53 temp101_8))
(assert (= temp101_54 (select ARGNAME_other_NAMEEND_DIMSIZE temp101_53)))
(assert (= temp101_55 temp101_26))
(assert (= temp101_56 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_55)))
(assert (= temp101_57 temp101_29))
(assert (= temp101_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_57)))
(assert (= temp101_59 temp101_32))
(assert (= temp101_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_59)))
(assert (= temp101_61 temp101_35))
(assert (= temp101_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_61)))
(assert (= temp101_63 temp101_38))
(assert (= temp101_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_63)))
(assert (= temp101_65 temp101_41))
(assert (= temp101_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_65)))
(assert (= temp101_67 temp101_43))
(assert (= temp101_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_67)))
(assert (= temp101_69 temp101_45))
(assert (= temp101_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_69)))
(assert (= temp101_71 temp101_47))
(assert (= temp101_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_71)))
(assert (= temp101_73 temp101_49))
(assert (= temp101_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_73)))
(assert (= temp101_75 temp101_51))
(assert (= temp101_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_75)))
(assert (= temp101_77 temp101_53))
(assert (= temp101_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_77)))
(assert (= (and true
        (= temp101_44 temp101_12)
        (= temp101_46 temp101_15)
        (= temp101_48 temp101_18)
        (= temp101_50 temp101_21)
        (= temp101_52 temp101_24)
        (= temp101_54 temp101_9)
        (= temp101_56 temp101_27)
        (= temp101_58 temp101_30)
        (= temp101_60 temp101_33)
        (= temp101_62 temp101_36)
        (= temp101_64 temp101_39)
        (= temp101_66 temp101_42)
        (= temp101_68 temp101_44)
        (= temp101_70 temp101_46)
        (= temp101_72 temp101_48)
        (= temp101_74 temp101_50)
        (= temp101_76 temp101_52)
        (= temp101_78 temp101_54))
   true))
(assert (= ARGNAME_other_NAMEEND_DIM ARGNAME_other_NAMEEND_DIM))
(assert (= temp101_79 #x0000000000000001))
(assert (= ARGNAME_equal_nan_NAMEEND temp101_79))
(assert (= temp101_80 #x0000000000000001))
(assert (= var987402 temp101_80))
(assert (= var987367 var987402))
(assert (= var69428 var987367))
(assert (= temp101_81 #x0000000000000001))
(assert (= var69428 temp101_81))
(assert (= temp101_82 #x0000000000000000))
(assert (= var69543
   (ite (= ARGNAME_rtol_NAMEEND temp101_82)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp101_83 #x0000000000000000))
(assert (= var69545
   (ite (= ARGNAME_atol_NAMEEND temp101_83)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var69546 (bvand var69543 var69545)))
(assert (= temp101_84 #x0000000000000000))
(assert (= var69546 temp101_84))
(assert (= temp101_85 #x0000000000000001))
(assert (= var2363802 temp101_85))
(assert (= temp101_86 #x0000000000000001))
(assert (= var2888090 temp101_86))
(model-add temp101_1 () (_ BitVec 64) #x0000000000080000)
(model-add var461925 () (_ BitVec 64) #x0000000000080000)
(model-add temp101_2 () (_ BitVec 64) #x0000000000080000)
(model-add var724069 () (_ BitVec 64) #x0000000000080000)
(model-add temp101_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp101_4 () (_ BitVec 64) #x0000000000000000)
(model-add var69380 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_rtol_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x8000000000000000))
                #x0000000000000000
                (bvsub #x0000000000000000 #x0000000000000001)))






