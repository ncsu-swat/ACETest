(declare-fun temp64_1 () (_ BitVec 64))
(declare-fun var66699 () (_ BitVec 64))
(declare-fun temp64_3 () (_ BitVec 64))
(declare-fun temp64_2 () (_ BitVec 64))
(declare-fun temp64_4 () (_ BitVec 64))
(declare-fun var398282 () (_ BitVec 64))
(declare-fun temp64_6 () (_ BitVec 64))
(declare-fun temp64_5 () (_ BitVec 64))
(declare-fun temp64_8 () (_ BitVec 64))
(declare-fun temp64_7 () (_ BitVec 64))
(declare-fun temp64_9 () (_ BitVec 64))
(declare-fun var1446858 () (_ BitVec 64))
(declare-fun var74155 () (_ BitVec 64))
(declare-fun var74156 () (_ BitVec 64))
(declare-fun temp64_11 () (_ BitVec 64))
(declare-fun temp64_10 () (_ BitVec 64))
(declare-fun temp64_13 () (_ BitVec 64))
(declare-fun temp64_12 () (_ BitVec 64))
(declare-fun temp64_15 () (_ BitVec 64))
(declare-fun temp64_14 () (_ BitVec 64))
(declare-fun temp64_16 () (_ BitVec 64))
(declare-fun var1842394 () (_ BitVec 64))
(declare-fun temp64_17 () (_ BitVec 64))
(declare-fun var74287 () (_ BitVec 64))
(declare-fun var74108 () (_ BitVec 64))
(declare-fun var74107 () (_ BitVec 64))
(declare-fun temp64_19 () (_ BitVec 64))
(declare-fun temp64_18 () (_ BitVec 64))
(declare-fun temp64_20 () (_ BitVec 64))
(declare-fun var74393 () (_ BitVec 64))
(declare-fun var3548025 () (_ BitVec 64))
(declare-fun temp64_21 () (_ BitVec 64))
(declare-fun var3548029 () (_ BitVec 64))
(declare-fun var74406 () (_ BitVec 64))
(declare-fun temp64_22 () (_ BitVec 64))
(declare-fun var4072313 () (_ BitVec 64))
(declare-fun temp64_23 () (_ BitVec 64))
(declare-fun var4072317 () (_ BitVec 64))
(declare-fun temp64_24 () (_ BitVec 64))
(declare-fun var4072345 () (_ BitVec 64))
(declare-fun temp64_25 () (_ BitVec 64))
(declare-fun var4072357 () (_ BitVec 64))
(declare-fun temp64_26 () (_ BitVec 64))
(declare-fun temp64_27 () (_ BitVec 64))
(declare-fun var74420 () (_ BitVec 64))
(declare-fun var74423 () (_ BitVec 64))
(assert (= temp64_1 #x0000000000000000))
(assert (= var66699 temp64_1))
(assert (= temp64_3 #x0000000000000000))
(assert (= temp64_2 temp64_3))
(assert (= temp64_4 #x0000000000000000))
(assert (= var398282 temp64_4))
(assert (= temp64_6 #x0000000000000000))
(assert (= temp64_5 temp64_6))
(assert (= temp64_8 #x0000000000000000))
(assert (= temp64_7 temp64_8))
(assert (= temp64_9 #x0000000000000000))
(assert (= var1446858 temp64_9))
(assert (= var74155 var66699))
(assert (= var74156 var66699))
(assert (= temp64_11 #x0000000000000001))
(assert (= temp64_10 temp64_11))
(assert (= temp64_13 #x0000000000000001))
(assert (= temp64_12 temp64_13))
(assert (= temp64_15 #x0000000000000002))
(assert (= temp64_14 temp64_15))
(assert (= temp64_16 #x0000000000000000))
(assert (= var1842394 temp64_16))
(assert (= temp64_17 #x0000000000000001))
(assert (= var74287 temp64_17))
(assert (= var74108 (bvadd var74287 var74155)))
(assert (= var74107 var74108))
(assert (= temp64_19 #x0000000000000002))
(assert (= temp64_18 temp64_19))
(assert (= temp64_20 #x0000000000000000))
(assert (= var66699 temp64_20))
(assert (= var74393 var66699))
(assert (= var3548025 var66699))
(assert (= temp64_21 #x0000000000000001))
(assert (= var3548029 temp64_21))
(assert (= var74406 var66699))
(assert (= temp64_22 #x0000000000000001))
(assert (= var4072313 temp64_22))
(assert (= temp64_23 #x0000000000000001))
(assert (= var4072317 temp64_23))
(assert (= temp64_24 #x0000000000000000))
(assert (= var4072345 temp64_24))
(assert (= temp64_25 #x0000000000000000))
(assert (= var4072357 temp64_25))
(assert (= temp64_26 #x0000000000000000))
(assert (= var4072357 temp64_26))
(assert (= temp64_27 #x0000000000000000))
(assert (= var4072345 temp64_27))
(assert (= var74420 var66699))
(assert (= var74423 var66699))
(model-add temp64_1 () (_ BitVec 64) #x0000000000000000)
(model-add var66699 () (_ BitVec 64) #x0000000000000000)
(model-add temp64_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp64_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp64_4 () (_ BitVec 64) #x0000000000000000)
(model-add var398282 () (_ BitVec 64) #x0000000000000000)
(model-add temp64_6 () (_ BitVec 64) #x0000000000000000)
(model-add temp64_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp64_8 () (_ BitVec 64) #x0000000000000000)
(model-add temp64_7 () (_ BitVec 64) #x0000000000000000)
(model-add temp64_9 () (_ BitVec 64) #x0000000000000000)
(model-add var1446858 () (_ BitVec 64) #x0000000000000000)
(model-add var74155 () (_ BitVec 64) #x0000000000000000)
(model-add var74156 () (_ BitVec 64) #x0000000000000000)
(model-add temp64_11 () (_ BitVec 64) #x0000000000000001)
(model-add temp64_10 () (_ BitVec 64) #x0000000000000001)
(model-add temp64_13 () (_ BitVec 64) #x0000000000000001)
(model-add temp64_12 () (_ BitVec 64) #x0000000000000001)
(model-add temp64_15 () (_ BitVec 64) #x0000000000000002)
(model-add temp64_14 () (_ BitVec 64) #x0000000000000002)
(model-add temp64_16 () (_ BitVec 64) #x0000000000000000)
(model-add var1842394 () (_ BitVec 64) #x0000000000000000)
(model-add temp64_17 () (_ BitVec 64) #x0000000000000001)
(model-add var74287 () (_ BitVec 64) #x0000000000000001)
(model-add var74108 () (_ BitVec 64) #x0000000000000001)
(model-add var74107 () (_ BitVec 64) #x0000000000000001)
(model-add temp64_19 () (_ BitVec 64) #x0000000000000002)
(model-add temp64_18 () (_ BitVec 64) #x0000000000000002)
(model-add temp64_20 () (_ BitVec 64) #x0000000000000000)
(model-add var74393 () (_ BitVec 64) #x0000000000000000)
(model-add var3548025 () (_ BitVec 64) #x0000000000000000)
(model-add temp64_21 () (_ BitVec 64) #x0000000000000001)
(model-add var3548029 () (_ BitVec 64) #x0000000000000001)
(model-add var74406 () (_ BitVec 64) #x0000000000000000)
(model-add temp64_22 () (_ BitVec 64) #x0000000000000001)
(model-add var4072313 () (_ BitVec 64) #x0000000000000001)
(model-add temp64_23 () (_ BitVec 64) #x0000000000000001)
(model-add var4072317 () (_ BitVec 64) #x0000000000000001)
(model-add temp64_24 () (_ BitVec 64) #x0000000000000000)
(model-add var4072345 () (_ BitVec 64) #x0000000000000000)
(model-add temp64_25 () (_ BitVec 64) #x0000000000000000)
(model-add var4072357 () (_ BitVec 64) #x0000000000000000)
(model-add temp64_26 () (_ BitVec 64) #x0000000000000000)






