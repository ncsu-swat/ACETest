(declare-fun temp196_2 () (_ BitVec 64))
(declare-fun temp196_1 () (_ BitVec 64))
(declare-fun temp196_4 () (_ BitVec 64))
(declare-fun temp196_3 () (_ BitVec 64))
(declare-fun temp196_5 () (_ BitVec 64))
(declare-fun temp196_6 () (_ BitVec 64))
(declare-fun var1053590 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp196_7 () (_ BitVec 64))
(declare-fun var1053593 () (_ BitVec 64))
(declare-fun temp196_8 () (_ BitVec 64))
(declare-fun temp196_9 () (_ BitVec 64))
(declare-fun ARGNAME_num_samples_NAMEEND () (_ BitVec 64))
(declare-fun var1053653 () (_ BitVec 64))
(declare-fun temp196_10 () (_ BitVec 64))
(declare-fun temp196_11 () (_ BitVec 64))
(declare-fun var1053664 () (_ BitVec 64))
(declare-fun temp196_12 () (_ BitVec 64))
(declare-fun temp196_13 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp196_14 () (_ BitVec 64))
(declare-fun temp196_15 () (_ BitVec 64))
(declare-fun temp196_16 () (_ BitVec 64))
(declare-fun temp196_17 () (_ BitVec 64))
(declare-fun temp196_18 () (_ BitVec 64))
(declare-fun temp196_19 () (_ BitVec 64))
(declare-fun temp196_20 () (_ BitVec 64))
(declare-fun temp196_21 () (_ BitVec 64))
(declare-fun temp196_22 () (_ BitVec 64))
(declare-fun temp196_23 () (_ BitVec 64))
(declare-fun temp196_24 () (_ BitVec 64))
(declare-fun temp196_25 () (_ BitVec 64))
(declare-fun temp196_26 () (_ BitVec 64))
(declare-fun temp196_27 () (_ BitVec 64))
(declare-fun temp196_28 () (_ BitVec 64))
(declare-fun temp196_29 () (_ BitVec 64))
(declare-fun temp196_30 () (_ BitVec 64))
(declare-fun temp196_31 () (_ BitVec 64))
(declare-fun temp196_32 () (_ BitVec 64))
(declare-fun var1053663 () (_ BitVec 64))
(declare-fun var1053668 () (_ BitVec 64))
(declare-fun ARGNAME_replacement_NAMEEND () (_ BitVec 64))
(declare-fun var1053669 () (_ BitVec 64))
(declare-fun temp196_33 () (_ BitVec 64))
(declare-fun temp196_34 () (_ BitVec 64))
(declare-fun var1053679 () (_ BitVec 64))
(declare-fun temp196_35 () (_ BitVec 64))
(declare-fun temp196_36 () (_ BitVec 64))
(declare-fun var1053691 () (_ BitVec 64))
(declare-fun temp196_37 () (_ BitVec 64))
(declare-fun temp196_38 () (_ BitVec 64))
(declare-fun var1049127 () (_ BitVec 64))
(declare-fun temp196_39 () (_ BitVec 64))
(declare-fun temp196_40 () (_ BitVec 64))
(declare-fun temp196_41 () (_ BitVec 64))
(declare-fun var1053718 () (_ BitVec 64))
(declare-fun temp196_43 () (_ BitVec 64))
(declare-fun temp196_42 () (_ BitVec 64))
(declare-fun temp196_44 () (_ BitVec 64))
(declare-fun temp196_45 () (_ BitVec 64))
(declare-fun var2231831 () (_ BitVec 64))
(declare-fun temp196_46 () (_ BitVec 64))
(declare-fun var1053916 () (_ BitVec 64))
(declare-fun temp196_47 () (_ BitVec 64))
(declare-fun temp196_49 () (_ BitVec 64))
(declare-fun temp196_48 () (_ BitVec 64))
(declare-fun temp196_50 () (_ BitVec 64))
(declare-fun var3280407 () (_ BitVec 64))
(declare-fun temp196_51 () (_ BitVec 64))
(declare-fun var1054130 () (_ BitVec 64))
(declare-fun temp196_52 () (_ BitVec 64))
(assert (= temp196_2 #x0000000000000000))
(assert (= temp196_1 temp196_2))
(assert (= temp196_4 #x0000000000000001))
(assert (= temp196_3 temp196_4))
(assert (= temp196_5 #x0000000000000000))
(assert (= var1053590
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp196_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp196_6 #x0000000000000001))
(assert (= var1053590 temp196_6))
(assert (= temp196_7 #x0000000000000003))
(assert (= var1053593
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp196_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp196_8 #x0000000000000001))
(assert (= var1053593 temp196_8))
(assert (= temp196_9 #x0000000000000001))
(assert (= var1053653
   (ite (bvslt ARGNAME_num_samples_NAMEEND temp196_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp196_10 #x0000000000000000))
(assert (= var1053653 temp196_10))
(assert (= temp196_11 #xffffffffffffffff))
(assert (= var1053664 temp196_11))
(assert (= temp196_12 #x0000000000000000))
(assert (= temp196_13 temp196_12))
(assert (= temp196_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp196_13)))
(assert (= temp196_15 #x0000000000000001))
(assert (= temp196_16 temp196_15))
(assert (= temp196_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp196_16)))
(assert (= temp196_18 #x0000000000000002))
(assert (= temp196_19 temp196_18))
(assert (= temp196_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp196_19)))
(assert (= temp196_21 #x0000000000000003))
(assert (= temp196_22 temp196_21))
(assert (= temp196_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp196_22)))
(assert (= temp196_24 #x0000000000000004))
(assert (= temp196_25 temp196_24))
(assert (= temp196_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp196_25)))
(assert (= temp196_27 #x0000000000000005))
(assert (= temp196_28 temp196_27))
(assert (= temp196_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp196_28)))
(assert (= temp196_30 #x0000000000000000))
(assert (= temp196_31
   (ite (bvslt var1053664 temp196_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
        var1053664)))
(assert (= temp196_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp196_31)))
(assert (= var1053663 temp196_32))
(assert (bvslt (ite (bvslt var1053664 temp196_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
            var1053664)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var1053668
   (ite (bvsle ARGNAME_num_samples_NAMEEND var1053663)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1053669 (bvor var1053668 ARGNAME_replacement_NAMEEND)))
(assert (= temp196_33 #x0000000000000001))
(assert (= var1053669 temp196_33))
(assert (= temp196_34 #x0000000001000000))
(assert (= var1053679
   (ite (bvsgt var1053663 temp196_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp196_35 #x0000000000000000))
(assert (= var1053679 temp196_35))
(assert (= temp196_36 #x0000000000000001))
(assert (= var1053691
   (ite (= ARGNAME_input_NAMEEND_DIM temp196_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp196_37 #x0000000000000000))
(assert (= var1053691 temp196_37))
(assert (= temp196_38 #x0000000000000000))
(assert (= var1049127 temp196_38))
(assert (= temp196_39 #x0000000000000000))
(assert (= temp196_40
   (ite (bvslt var1049127 temp196_39)
        (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
        var1049127)))
(assert (= temp196_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp196_40)))
(assert (= var1053718 temp196_41))
(assert (bvslt (ite (bvslt var1049127 temp196_39)
            (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
            var1049127)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp196_43 #x0000000000000002))
(assert (= temp196_42 temp196_43))
(assert (= temp196_44 #x0000000000000000))
(assert (= ARGNAME_replacement_NAMEEND temp196_44))
(assert (= temp196_45 #x0000000000000000))
(assert (= var2231831 temp196_45))
(assert (= temp196_46 #x0000000000000001))
(assert (= var1053916
   (ite (= ARGNAME_input_NAMEEND_DIM temp196_46)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp196_47 #x0000000000000000))
(assert (= var1053916 temp196_47))
(assert (= temp196_49 #x0000000000000001))
(assert (= temp196_48 temp196_49))
(assert (= temp196_50 #x0000000000000000))
(assert (= var3280407 temp196_50))
(assert (= temp196_51 #x0000000000000001))
(assert (= var1054130
   (ite (= ARGNAME_num_samples_NAMEEND temp196_51)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp196_52 #x0000000000000000))
(assert (= var1054130 temp196_52))
(model-add temp196_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp196_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp196_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp196_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp196_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp196_6 () (_ BitVec 64) #x0000000000000001)
(model-add var1053590 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






