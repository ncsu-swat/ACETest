(declare-fun temp180_2 () (_ BitVec 64))
(declare-fun temp180_1 () (_ BitVec 64))
(declare-fun temp180_4 () (_ BitVec 64))
(declare-fun temp180_3 () (_ BitVec 64))
(declare-fun temp180_5 () (_ BitVec 64))
(declare-fun temp180_6 () (_ BitVec 64))
(declare-fun var1053590 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp180_7 () (_ BitVec 64))
(declare-fun var1053593 () (_ BitVec 64))
(declare-fun temp180_8 () (_ BitVec 64))
(declare-fun temp180_9 () (_ BitVec 64))
(declare-fun ARGNAME_num_samples_NAMEEND () (_ BitVec 64))
(declare-fun var1053653 () (_ BitVec 64))
(declare-fun temp180_10 () (_ BitVec 64))
(declare-fun temp180_11 () (_ BitVec 64))
(declare-fun var1053664 () (_ BitVec 64))
(declare-fun temp180_12 () (_ BitVec 64))
(declare-fun temp180_13 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp180_14 () (_ BitVec 64))
(declare-fun temp180_15 () (_ BitVec 64))
(declare-fun temp180_16 () (_ BitVec 64))
(declare-fun temp180_17 () (_ BitVec 64))
(declare-fun temp180_18 () (_ BitVec 64))
(declare-fun temp180_19 () (_ BitVec 64))
(declare-fun temp180_20 () (_ BitVec 64))
(declare-fun temp180_21 () (_ BitVec 64))
(declare-fun temp180_22 () (_ BitVec 64))
(declare-fun temp180_23 () (_ BitVec 64))
(declare-fun temp180_24 () (_ BitVec 64))
(declare-fun temp180_25 () (_ BitVec 64))
(declare-fun temp180_26 () (_ BitVec 64))
(declare-fun temp180_27 () (_ BitVec 64))
(declare-fun temp180_28 () (_ BitVec 64))
(declare-fun temp180_29 () (_ BitVec 64))
(declare-fun temp180_30 () (_ BitVec 64))
(declare-fun temp180_31 () (_ BitVec 64))
(declare-fun temp180_32 () (_ BitVec 64))
(declare-fun var1053663 () (_ BitVec 64))
(declare-fun var1053668 () (_ BitVec 64))
(declare-fun ARGNAME_replacement_NAMEEND () (_ BitVec 64))
(declare-fun var1053669 () (_ BitVec 64))
(declare-fun temp180_33 () (_ BitVec 64))
(declare-fun temp180_34 () (_ BitVec 64))
(declare-fun var1053679 () (_ BitVec 64))
(declare-fun temp180_35 () (_ BitVec 64))
(declare-fun temp180_36 () (_ BitVec 64))
(declare-fun var1053691 () (_ BitVec 64))
(declare-fun temp180_37 () (_ BitVec 64))
(declare-fun temp180_38 () (_ BitVec 64))
(declare-fun var1049127 () (_ BitVec 64))
(declare-fun temp180_39 () (_ BitVec 64))
(declare-fun temp180_40 () (_ BitVec 64))
(declare-fun temp180_41 () (_ BitVec 64))
(declare-fun var1053718 () (_ BitVec 64))
(declare-fun temp180_43 () (_ BitVec 64))
(declare-fun temp180_42 () (_ BitVec 64))
(declare-fun temp180_44 () (_ BitVec 64))
(declare-fun temp180_45 () (_ BitVec 64))
(declare-fun var2231831 () (_ BitVec 64))
(declare-fun temp180_46 () (_ BitVec 64))
(declare-fun var1053916 () (_ BitVec 64))
(declare-fun temp180_47 () (_ BitVec 64))
(declare-fun temp180_49 () (_ BitVec 64))
(declare-fun temp180_48 () (_ BitVec 64))
(declare-fun temp180_50 () (_ BitVec 64))
(declare-fun var3280407 () (_ BitVec 64))
(declare-fun temp180_51 () (_ BitVec 64))
(declare-fun var1054130 () (_ BitVec 64))
(declare-fun temp180_52 () (_ BitVec 64))
(assert (= temp180_2 #x0000000000000000))
(assert (= temp180_1 temp180_2))
(assert (= temp180_4 #x0000000000000001))
(assert (= temp180_3 temp180_4))
(assert (= temp180_5 #x0000000000000000))
(assert (= var1053590
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp180_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp180_6 #x0000000000000001))
(assert (= var1053590 temp180_6))
(assert (= temp180_7 #x0000000000000003))
(assert (= var1053593
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp180_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp180_8 #x0000000000000001))
(assert (= var1053593 temp180_8))
(assert (= temp180_9 #x0000000000000001))
(assert (= var1053653
   (ite (bvslt ARGNAME_num_samples_NAMEEND temp180_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp180_10 #x0000000000000000))
(assert (= var1053653 temp180_10))
(assert (= temp180_11 #xffffffffffffffff))
(assert (= var1053664 temp180_11))
(assert (= temp180_12 #x0000000000000000))
(assert (= temp180_13 temp180_12))
(assert (= temp180_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp180_13)))
(assert (= temp180_15 #x0000000000000001))
(assert (= temp180_16 temp180_15))
(assert (= temp180_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp180_16)))
(assert (= temp180_18 #x0000000000000002))
(assert (= temp180_19 temp180_18))
(assert (= temp180_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp180_19)))
(assert (= temp180_21 #x0000000000000003))
(assert (= temp180_22 temp180_21))
(assert (= temp180_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp180_22)))
(assert (= temp180_24 #x0000000000000004))
(assert (= temp180_25 temp180_24))
(assert (= temp180_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp180_25)))
(assert (= temp180_27 #x0000000000000005))
(assert (= temp180_28 temp180_27))
(assert (= temp180_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp180_28)))
(assert (= temp180_30 #x0000000000000000))
(assert (= temp180_31
   (ite (bvslt var1053664 temp180_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
        var1053664)))
(assert (= temp180_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp180_31)))
(assert (= var1053663 temp180_32))
(assert (bvslt (ite (bvslt var1053664 temp180_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
            var1053664)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var1053668
   (ite (bvsle ARGNAME_num_samples_NAMEEND var1053663)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1053669 (bvor var1053668 ARGNAME_replacement_NAMEEND)))
(assert (= temp180_33 #x0000000000000001))
(assert (= var1053669 temp180_33))
(assert (= temp180_34 #x0000000001000000))
(assert (= var1053679
   (ite (bvsgt var1053663 temp180_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp180_35 #x0000000000000000))
(assert (= var1053679 temp180_35))
(assert (= temp180_36 #x0000000000000001))
(assert (= var1053691
   (ite (= ARGNAME_input_NAMEEND_DIM temp180_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp180_37 #x0000000000000000))
(assert (= var1053691 temp180_37))
(assert (= temp180_38 #x0000000000000000))
(assert (= var1049127 temp180_38))
(assert (= temp180_39 #x0000000000000000))
(assert (= temp180_40
   (ite (bvslt var1049127 temp180_39)
        (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
        var1049127)))
(assert (= temp180_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp180_40)))
(assert (= var1053718 temp180_41))
(assert (bvslt (ite (bvslt var1049127 temp180_39)
            (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
            var1049127)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp180_43 #x0000000000000002))
(assert (= temp180_42 temp180_43))
(assert (= temp180_44 #x0000000000000000))
(assert (= ARGNAME_replacement_NAMEEND temp180_44))
(assert (= temp180_45 #x0000000000000000))
(assert (= var2231831 temp180_45))
(assert (= temp180_46 #x0000000000000001))
(assert (= var1053916
   (ite (= ARGNAME_input_NAMEEND_DIM temp180_46)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp180_47 #x0000000000000000))
(assert (= var1053916 temp180_47))
(assert (= temp180_49 #x0000000000000001))
(assert (= temp180_48 temp180_49))
(assert (= temp180_50 #x0000000000000000))
(assert (= var3280407 temp180_50))
(assert (= temp180_51 #x0000000000000001))
(assert (= var1054130
   (ite (= ARGNAME_num_samples_NAMEEND temp180_51)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp180_52 #x0000000000000000))
(assert (= var1054130 temp180_52))
(model-add temp180_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp180_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp180_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp180_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp180_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp180_6 () (_ BitVec 64) #x0000000000000001)
(model-add var1053590 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






