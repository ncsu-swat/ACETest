(declare-fun temp144_2 () (_ BitVec 64))
(declare-fun temp144_1 () (_ BitVec 64))
(declare-fun temp144_4 () (_ BitVec 64))
(declare-fun temp144_3 () (_ BitVec 64))
(declare-fun temp144_5 () (_ BitVec 64))
(declare-fun temp144_6 () (_ BitVec 64))
(declare-fun var1053590 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp144_7 () (_ BitVec 64))
(declare-fun var1053593 () (_ BitVec 64))
(declare-fun temp144_8 () (_ BitVec 64))
(declare-fun temp144_9 () (_ BitVec 64))
(declare-fun ARGNAME_num_samples_NAMEEND () (_ BitVec 64))
(declare-fun var1053653 () (_ BitVec 64))
(declare-fun temp144_10 () (_ BitVec 64))
(declare-fun temp144_11 () (_ BitVec 64))
(declare-fun var1053664 () (_ BitVec 64))
(declare-fun temp144_12 () (_ BitVec 64))
(declare-fun temp144_13 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp144_14 () (_ BitVec 64))
(declare-fun temp144_15 () (_ BitVec 64))
(declare-fun temp144_16 () (_ BitVec 64))
(declare-fun temp144_17 () (_ BitVec 64))
(declare-fun temp144_18 () (_ BitVec 64))
(declare-fun temp144_19 () (_ BitVec 64))
(declare-fun temp144_20 () (_ BitVec 64))
(declare-fun temp144_21 () (_ BitVec 64))
(declare-fun temp144_22 () (_ BitVec 64))
(declare-fun temp144_23 () (_ BitVec 64))
(declare-fun temp144_24 () (_ BitVec 64))
(declare-fun temp144_25 () (_ BitVec 64))
(declare-fun temp144_26 () (_ BitVec 64))
(declare-fun temp144_27 () (_ BitVec 64))
(declare-fun temp144_28 () (_ BitVec 64))
(declare-fun temp144_29 () (_ BitVec 64))
(declare-fun temp144_30 () (_ BitVec 64))
(declare-fun temp144_31 () (_ BitVec 64))
(declare-fun temp144_32 () (_ BitVec 64))
(declare-fun var1053663 () (_ BitVec 64))
(declare-fun var1053668 () (_ BitVec 64))
(declare-fun ARGNAME_replacement_NAMEEND () (_ BitVec 64))
(declare-fun var1053669 () (_ BitVec 64))
(declare-fun temp144_33 () (_ BitVec 64))
(declare-fun temp144_34 () (_ BitVec 64))
(declare-fun var1053679 () (_ BitVec 64))
(declare-fun temp144_35 () (_ BitVec 64))
(declare-fun temp144_36 () (_ BitVec 64))
(declare-fun var1053691 () (_ BitVec 64))
(declare-fun temp144_37 () (_ BitVec 64))
(declare-fun temp144_38 () (_ BitVec 64))
(declare-fun var1049127 () (_ BitVec 64))
(declare-fun temp144_39 () (_ BitVec 64))
(declare-fun temp144_40 () (_ BitVec 64))
(declare-fun temp144_41 () (_ BitVec 64))
(declare-fun var1053718 () (_ BitVec 64))
(declare-fun temp144_43 () (_ BitVec 64))
(declare-fun temp144_42 () (_ BitVec 64))
(declare-fun temp144_44 () (_ BitVec 64))
(declare-fun temp144_45 () (_ BitVec 64))
(declare-fun var2231831 () (_ BitVec 64))
(declare-fun temp144_46 () (_ BitVec 64))
(declare-fun var1053916 () (_ BitVec 64))
(declare-fun temp144_47 () (_ BitVec 64))
(declare-fun temp144_49 () (_ BitVec 64))
(declare-fun temp144_48 () (_ BitVec 64))
(declare-fun temp144_50 () (_ BitVec 64))
(declare-fun var3280407 () (_ BitVec 64))
(declare-fun temp144_51 () (_ BitVec 64))
(declare-fun var1054130 () (_ BitVec 64))
(declare-fun temp144_52 () (_ BitVec 64))
(assert (= temp144_2 #x0000000000000000))
(assert (= temp144_1 temp144_2))
(assert (= temp144_4 #x0000000000000001))
(assert (= temp144_3 temp144_4))
(assert (= temp144_5 #x0000000000000000))
(assert (= var1053590
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp144_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp144_6 #x0000000000000001))
(assert (= var1053590 temp144_6))
(assert (= temp144_7 #x0000000000000003))
(assert (= var1053593
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp144_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp144_8 #x0000000000000001))
(assert (= var1053593 temp144_8))
(assert (= temp144_9 #x0000000000000001))
(assert (= var1053653
   (ite (bvslt ARGNAME_num_samples_NAMEEND temp144_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp144_10 #x0000000000000000))
(assert (= var1053653 temp144_10))
(assert (= temp144_11 #xffffffffffffffff))
(assert (= var1053664 temp144_11))
(assert (= temp144_12 #x0000000000000000))
(assert (= temp144_13 temp144_12))
(assert (= temp144_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp144_13)))
(assert (= temp144_15 #x0000000000000001))
(assert (= temp144_16 temp144_15))
(assert (= temp144_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp144_16)))
(assert (= temp144_18 #x0000000000000002))
(assert (= temp144_19 temp144_18))
(assert (= temp144_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp144_19)))
(assert (= temp144_21 #x0000000000000003))
(assert (= temp144_22 temp144_21))
(assert (= temp144_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp144_22)))
(assert (= temp144_24 #x0000000000000004))
(assert (= temp144_25 temp144_24))
(assert (= temp144_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp144_25)))
(assert (= temp144_27 #x0000000000000005))
(assert (= temp144_28 temp144_27))
(assert (= temp144_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp144_28)))
(assert (= temp144_30 #x0000000000000000))
(assert (= temp144_31
   (ite (bvslt var1053664 temp144_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
        var1053664)))
(assert (= temp144_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp144_31)))
(assert (= var1053663 temp144_32))
(assert (bvslt (ite (bvslt var1053664 temp144_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
            var1053664)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var1053668
   (ite (bvsle ARGNAME_num_samples_NAMEEND var1053663)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1053669 (bvor var1053668 ARGNAME_replacement_NAMEEND)))
(assert (= temp144_33 #x0000000000000001))
(assert (= var1053669 temp144_33))
(assert (= temp144_34 #x0000000001000000))
(assert (= var1053679
   (ite (bvsgt var1053663 temp144_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp144_35 #x0000000000000000))
(assert (= var1053679 temp144_35))
(assert (= temp144_36 #x0000000000000001))
(assert (= var1053691
   (ite (= ARGNAME_input_NAMEEND_DIM temp144_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp144_37 #x0000000000000000))
(assert (= var1053691 temp144_37))
(assert (= temp144_38 #x0000000000000000))
(assert (= var1049127 temp144_38))
(assert (= temp144_39 #x0000000000000000))
(assert (= temp144_40
   (ite (bvslt var1049127 temp144_39)
        (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
        var1049127)))
(assert (= temp144_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp144_40)))
(assert (= var1053718 temp144_41))
(assert (bvslt (ite (bvslt var1049127 temp144_39)
            (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
            var1049127)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp144_43 #x0000000000000002))
(assert (= temp144_42 temp144_43))
(assert (= temp144_44 #x0000000000000000))
(assert (= ARGNAME_replacement_NAMEEND temp144_44))
(assert (= temp144_45 #x0000000000000000))
(assert (= var2231831 temp144_45))
(assert (= temp144_46 #x0000000000000001))
(assert (= var1053916
   (ite (= ARGNAME_input_NAMEEND_DIM temp144_46)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp144_47 #x0000000000000000))
(assert (= var1053916 temp144_47))
(assert (= temp144_49 #x0000000000000001))
(assert (= temp144_48 temp144_49))
(assert (= temp144_50 #x0000000000000000))
(assert (= var3280407 temp144_50))
(assert (= temp144_51 #x0000000000000001))
(assert (= var1054130
   (ite (= ARGNAME_num_samples_NAMEEND temp144_51)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp144_52 #x0000000000000000))
(assert (= var1054130 temp144_52))
(model-add temp144_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp144_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp144_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp144_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp144_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp144_6 () (_ BitVec 64) #x0000000000000001)
(model-add var1053590 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






