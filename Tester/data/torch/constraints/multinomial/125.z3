(declare-fun temp245_2 () (_ BitVec 64))
(declare-fun temp245_1 () (_ BitVec 64))
(declare-fun temp245_4 () (_ BitVec 64))
(declare-fun temp245_3 () (_ BitVec 64))
(declare-fun temp245_5 () (_ BitVec 64))
(declare-fun temp245_6 () (_ BitVec 64))
(declare-fun var1053590 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp245_7 () (_ BitVec 64))
(declare-fun var1053593 () (_ BitVec 64))
(declare-fun temp245_8 () (_ BitVec 64))
(declare-fun temp245_9 () (_ BitVec 64))
(declare-fun ARGNAME_num_samples_NAMEEND () (_ BitVec 64))
(declare-fun var1053653 () (_ BitVec 64))
(declare-fun temp245_10 () (_ BitVec 64))
(declare-fun temp245_11 () (_ BitVec 64))
(declare-fun var1053664 () (_ BitVec 64))
(declare-fun temp245_12 () (_ BitVec 64))
(declare-fun temp245_13 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp245_14 () (_ BitVec 64))
(declare-fun temp245_15 () (_ BitVec 64))
(declare-fun temp245_16 () (_ BitVec 64))
(declare-fun temp245_17 () (_ BitVec 64))
(declare-fun temp245_18 () (_ BitVec 64))
(declare-fun temp245_19 () (_ BitVec 64))
(declare-fun temp245_20 () (_ BitVec 64))
(declare-fun temp245_21 () (_ BitVec 64))
(declare-fun temp245_22 () (_ BitVec 64))
(declare-fun temp245_23 () (_ BitVec 64))
(declare-fun temp245_24 () (_ BitVec 64))
(declare-fun temp245_25 () (_ BitVec 64))
(declare-fun temp245_26 () (_ BitVec 64))
(declare-fun temp245_27 () (_ BitVec 64))
(declare-fun temp245_28 () (_ BitVec 64))
(declare-fun temp245_29 () (_ BitVec 64))
(declare-fun temp245_30 () (_ BitVec 64))
(declare-fun temp245_31 () (_ BitVec 64))
(declare-fun temp245_32 () (_ BitVec 64))
(declare-fun var1053663 () (_ BitVec 64))
(declare-fun var1053668 () (_ BitVec 64))
(declare-fun ARGNAME_replacement_NAMEEND () (_ BitVec 64))
(declare-fun var1053669 () (_ BitVec 64))
(declare-fun temp245_33 () (_ BitVec 64))
(declare-fun temp245_34 () (_ BitVec 64))
(declare-fun var1053679 () (_ BitVec 64))
(declare-fun temp245_35 () (_ BitVec 64))
(declare-fun temp245_36 () (_ BitVec 64))
(declare-fun var1053691 () (_ BitVec 64))
(declare-fun temp245_37 () (_ BitVec 64))
(declare-fun temp245_38 () (_ BitVec 64))
(declare-fun var1049127 () (_ BitVec 64))
(declare-fun temp245_39 () (_ BitVec 64))
(declare-fun temp245_40 () (_ BitVec 64))
(declare-fun temp245_41 () (_ BitVec 64))
(declare-fun var1053718 () (_ BitVec 64))
(declare-fun temp245_43 () (_ BitVec 64))
(declare-fun temp245_42 () (_ BitVec 64))
(declare-fun temp245_44 () (_ BitVec 64))
(declare-fun temp245_45 () (_ BitVec 64))
(declare-fun var2166295 () (_ BitVec 64))
(declare-fun temp245_46 () (_ BitVec 64))
(declare-fun var1053916 () (_ BitVec 64))
(declare-fun temp245_47 () (_ BitVec 64))
(declare-fun temp245_49 () (_ BitVec 64))
(declare-fun temp245_48 () (_ BitVec 64))
(declare-fun temp245_50 () (_ BitVec 64))
(declare-fun var3214871 () (_ BitVec 64))
(declare-fun temp245_51 () (_ BitVec 64))
(declare-fun var1054130 () (_ BitVec 64))
(declare-fun temp245_52 () (_ BitVec 64))
(assert (= temp245_2 #x0000000000000000))
(assert (= temp245_1 temp245_2))
(assert (= temp245_4 #x0000000000000001))
(assert (= temp245_3 temp245_4))
(assert (= temp245_5 #x0000000000000000))
(assert (= var1053590
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp245_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp245_6 #x0000000000000001))
(assert (= var1053590 temp245_6))
(assert (= temp245_7 #x0000000000000003))
(assert (= var1053593
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp245_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp245_8 #x0000000000000001))
(assert (= var1053593 temp245_8))
(assert (= temp245_9 #x0000000000000001))
(assert (= var1053653
   (ite (bvslt ARGNAME_num_samples_NAMEEND temp245_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp245_10 #x0000000000000000))
(assert (= var1053653 temp245_10))
(assert (= temp245_11 #xffffffffffffffff))
(assert (= var1053664 temp245_11))
(assert (= temp245_12 #x0000000000000000))
(assert (= temp245_13 temp245_12))
(assert (= temp245_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp245_13)))
(assert (= temp245_15 #x0000000000000001))
(assert (= temp245_16 temp245_15))
(assert (= temp245_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp245_16)))
(assert (= temp245_18 #x0000000000000002))
(assert (= temp245_19 temp245_18))
(assert (= temp245_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp245_19)))
(assert (= temp245_21 #x0000000000000003))
(assert (= temp245_22 temp245_21))
(assert (= temp245_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp245_22)))
(assert (= temp245_24 #x0000000000000004))
(assert (= temp245_25 temp245_24))
(assert (= temp245_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp245_25)))
(assert (= temp245_27 #x0000000000000005))
(assert (= temp245_28 temp245_27))
(assert (= temp245_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp245_28)))
(assert (= temp245_30 #x0000000000000000))
(assert (= temp245_31
   (ite (bvslt var1053664 temp245_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
        var1053664)))
(assert (= temp245_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp245_31)))
(assert (= var1053663 temp245_32))
(assert (bvslt (ite (bvslt var1053664 temp245_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
            var1053664)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var1053668
   (ite (bvsle ARGNAME_num_samples_NAMEEND var1053663)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1053669 (bvor var1053668 ARGNAME_replacement_NAMEEND)))
(assert (= temp245_33 #x0000000000000001))
(assert (= var1053669 temp245_33))
(assert (= temp245_34 #x0000000001000000))
(assert (= var1053679
   (ite (bvsgt var1053663 temp245_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp245_35 #x0000000000000000))
(assert (= var1053679 temp245_35))
(assert (= temp245_36 #x0000000000000001))
(assert (= var1053691
   (ite (= ARGNAME_input_NAMEEND_DIM temp245_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp245_37 #x0000000000000000))
(assert (= var1053691 temp245_37))
(assert (= temp245_38 #x0000000000000000))
(assert (= var1049127 temp245_38))
(assert (= temp245_39 #x0000000000000000))
(assert (= temp245_40
   (ite (bvslt var1049127 temp245_39)
        (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
        var1049127)))
(assert (= temp245_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp245_40)))
(assert (= var1053718 temp245_41))
(assert (bvslt (ite (bvslt var1049127 temp245_39)
            (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
            var1049127)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp245_43 #x0000000000000002))
(assert (= temp245_42 temp245_43))
(assert (= temp245_44 #x0000000000000000))
(assert (= ARGNAME_replacement_NAMEEND temp245_44))
(assert (= temp245_45 #x0000000000000000))
(assert (= var2166295 temp245_45))
(assert (= temp245_46 #x0000000000000001))
(assert (= var1053916
   (ite (= ARGNAME_input_NAMEEND_DIM temp245_46)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp245_47 #x0000000000000000))
(assert (= var1053916 temp245_47))
(assert (= temp245_49 #x0000000000000001))
(assert (= temp245_48 temp245_49))
(assert (= temp245_50 #x0000000000000000))
(assert (= var3214871 temp245_50))
(assert (= temp245_51 #x0000000000000001))
(assert (= var1054130
   (ite (= ARGNAME_num_samples_NAMEEND temp245_51)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp245_52 #x0000000000000000))
(assert (= var1054130 temp245_52))
(model-add temp245_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp245_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp245_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp245_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp245_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp245_6 () (_ BitVec 64) #x0000000000000001)
(model-add var1053590 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






