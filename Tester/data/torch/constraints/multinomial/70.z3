(declare-fun temp142_2 () (_ BitVec 64))
(declare-fun temp142_1 () (_ BitVec 64))
(declare-fun temp142_4 () (_ BitVec 64))
(declare-fun temp142_3 () (_ BitVec 64))
(declare-fun temp142_5 () (_ BitVec 64))
(declare-fun temp142_6 () (_ BitVec 64))
(declare-fun var1053590 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp142_7 () (_ BitVec 64))
(declare-fun var1053593 () (_ BitVec 64))
(declare-fun temp142_8 () (_ BitVec 64))
(declare-fun temp142_9 () (_ BitVec 64))
(declare-fun ARGNAME_num_samples_NAMEEND () (_ BitVec 64))
(declare-fun var1053653 () (_ BitVec 64))
(declare-fun temp142_10 () (_ BitVec 64))
(declare-fun temp142_11 () (_ BitVec 64))
(declare-fun var1053664 () (_ BitVec 64))
(declare-fun temp142_12 () (_ BitVec 64))
(declare-fun temp142_13 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp142_14 () (_ BitVec 64))
(declare-fun temp142_15 () (_ BitVec 64))
(declare-fun temp142_16 () (_ BitVec 64))
(declare-fun temp142_17 () (_ BitVec 64))
(declare-fun temp142_18 () (_ BitVec 64))
(declare-fun temp142_19 () (_ BitVec 64))
(declare-fun temp142_20 () (_ BitVec 64))
(declare-fun temp142_21 () (_ BitVec 64))
(declare-fun temp142_22 () (_ BitVec 64))
(declare-fun temp142_23 () (_ BitVec 64))
(declare-fun temp142_24 () (_ BitVec 64))
(declare-fun temp142_25 () (_ BitVec 64))
(declare-fun temp142_26 () (_ BitVec 64))
(declare-fun temp142_27 () (_ BitVec 64))
(declare-fun temp142_28 () (_ BitVec 64))
(declare-fun temp142_29 () (_ BitVec 64))
(declare-fun temp142_30 () (_ BitVec 64))
(declare-fun temp142_31 () (_ BitVec 64))
(declare-fun temp142_32 () (_ BitVec 64))
(declare-fun var1053663 () (_ BitVec 64))
(declare-fun var1053668 () (_ BitVec 64))
(declare-fun ARGNAME_replacement_NAMEEND () (_ BitVec 64))
(declare-fun var1053669 () (_ BitVec 64))
(declare-fun temp142_33 () (_ BitVec 64))
(declare-fun temp142_34 () (_ BitVec 64))
(declare-fun var1053679 () (_ BitVec 64))
(declare-fun temp142_35 () (_ BitVec 64))
(declare-fun temp142_36 () (_ BitVec 64))
(declare-fun var1053691 () (_ BitVec 64))
(declare-fun temp142_37 () (_ BitVec 64))
(declare-fun temp142_38 () (_ BitVec 64))
(declare-fun var1049127 () (_ BitVec 64))
(declare-fun temp142_39 () (_ BitVec 64))
(declare-fun temp142_40 () (_ BitVec 64))
(declare-fun temp142_41 () (_ BitVec 64))
(declare-fun var1053718 () (_ BitVec 64))
(declare-fun temp142_43 () (_ BitVec 64))
(declare-fun temp142_42 () (_ BitVec 64))
(declare-fun temp142_44 () (_ BitVec 64))
(declare-fun temp142_45 () (_ BitVec 64))
(declare-fun var2231831 () (_ BitVec 64))
(declare-fun temp142_46 () (_ BitVec 64))
(declare-fun var1053916 () (_ BitVec 64))
(declare-fun temp142_47 () (_ BitVec 64))
(declare-fun temp142_49 () (_ BitVec 64))
(declare-fun temp142_48 () (_ BitVec 64))
(declare-fun temp142_50 () (_ BitVec 64))
(declare-fun var3280407 () (_ BitVec 64))
(declare-fun temp142_51 () (_ BitVec 64))
(declare-fun var1054130 () (_ BitVec 64))
(declare-fun temp142_52 () (_ BitVec 64))
(assert (= temp142_2 #x0000000000000000))
(assert (= temp142_1 temp142_2))
(assert (= temp142_4 #x0000000000000001))
(assert (= temp142_3 temp142_4))
(assert (= temp142_5 #x0000000000000000))
(assert (= var1053590
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp142_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_6 #x0000000000000001))
(assert (= var1053590 temp142_6))
(assert (= temp142_7 #x0000000000000003))
(assert (= var1053593
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp142_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_8 #x0000000000000001))
(assert (= var1053593 temp142_8))
(assert (= temp142_9 #x0000000000000001))
(assert (= var1053653
   (ite (bvslt ARGNAME_num_samples_NAMEEND temp142_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_10 #x0000000000000000))
(assert (= var1053653 temp142_10))
(assert (= temp142_11 #xffffffffffffffff))
(assert (= var1053664 temp142_11))
(assert (= temp142_12 #x0000000000000000))
(assert (= temp142_13 temp142_12))
(assert (= temp142_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp142_13)))
(assert (= temp142_15 #x0000000000000001))
(assert (= temp142_16 temp142_15))
(assert (= temp142_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp142_16)))
(assert (= temp142_18 #x0000000000000002))
(assert (= temp142_19 temp142_18))
(assert (= temp142_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp142_19)))
(assert (= temp142_21 #x0000000000000003))
(assert (= temp142_22 temp142_21))
(assert (= temp142_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp142_22)))
(assert (= temp142_24 #x0000000000000004))
(assert (= temp142_25 temp142_24))
(assert (= temp142_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp142_25)))
(assert (= temp142_27 #x0000000000000005))
(assert (= temp142_28 temp142_27))
(assert (= temp142_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp142_28)))
(assert (= temp142_30 #x0000000000000000))
(assert (= temp142_31
   (ite (bvslt var1053664 temp142_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
        var1053664)))
(assert (= temp142_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp142_31)))
(assert (= var1053663 temp142_32))
(assert (bvslt (ite (bvslt var1053664 temp142_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
            var1053664)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var1053668
   (ite (bvsle ARGNAME_num_samples_NAMEEND var1053663)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1053669 (bvor var1053668 ARGNAME_replacement_NAMEEND)))
(assert (= temp142_33 #x0000000000000001))
(assert (= var1053669 temp142_33))
(assert (= temp142_34 #x0000000001000000))
(assert (= var1053679
   (ite (bvsgt var1053663 temp142_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp142_35 #x0000000000000000))
(assert (= var1053679 temp142_35))
(assert (= temp142_36 #x0000000000000001))
(assert (= var1053691
   (ite (= ARGNAME_input_NAMEEND_DIM temp142_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_37 #x0000000000000000))
(assert (= var1053691 temp142_37))
(assert (= temp142_38 #x0000000000000000))
(assert (= var1049127 temp142_38))
(assert (= temp142_39 #x0000000000000000))
(assert (= temp142_40
   (ite (bvslt var1049127 temp142_39)
        (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
        var1049127)))
(assert (= temp142_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp142_40)))
(assert (= var1053718 temp142_41))
(assert (bvslt (ite (bvslt var1049127 temp142_39)
            (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
            var1049127)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp142_43 #x0000000000000002))
(assert (= temp142_42 temp142_43))
(assert (= temp142_44 #x0000000000000000))
(assert (= ARGNAME_replacement_NAMEEND temp142_44))
(assert (= temp142_45 #x0000000000000000))
(assert (= var2231831 temp142_45))
(assert (= temp142_46 #x0000000000000001))
(assert (= var1053916
   (ite (= ARGNAME_input_NAMEEND_DIM temp142_46)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_47 #x0000000000000000))
(assert (= var1053916 temp142_47))
(assert (= temp142_49 #x0000000000000001))
(assert (= temp142_48 temp142_49))
(assert (= temp142_50 #x0000000000000000))
(assert (= var3280407 temp142_50))
(assert (= temp142_51 #x0000000000000001))
(assert (= var1054130
   (ite (= ARGNAME_num_samples_NAMEEND temp142_51)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_52 #x0000000000000000))
(assert (= var1054130 temp142_52))
(model-add temp142_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp142_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp142_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp142_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp142_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp142_6 () (_ BitVec 64) #x0000000000000001)
(model-add var1053590 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






