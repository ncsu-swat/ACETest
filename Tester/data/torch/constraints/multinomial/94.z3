(declare-fun temp190_2 () (_ BitVec 64))
(declare-fun temp190_1 () (_ BitVec 64))
(declare-fun temp190_4 () (_ BitVec 64))
(declare-fun temp190_3 () (_ BitVec 64))
(declare-fun temp190_5 () (_ BitVec 64))
(declare-fun temp190_6 () (_ BitVec 64))
(declare-fun var1053590 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp190_7 () (_ BitVec 64))
(declare-fun var1053593 () (_ BitVec 64))
(declare-fun temp190_8 () (_ BitVec 64))
(declare-fun temp190_9 () (_ BitVec 64))
(declare-fun ARGNAME_num_samples_NAMEEND () (_ BitVec 64))
(declare-fun var1053653 () (_ BitVec 64))
(declare-fun temp190_10 () (_ BitVec 64))
(declare-fun temp190_11 () (_ BitVec 64))
(declare-fun var1053664 () (_ BitVec 64))
(declare-fun temp190_12 () (_ BitVec 64))
(declare-fun temp190_13 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp190_14 () (_ BitVec 64))
(declare-fun temp190_15 () (_ BitVec 64))
(declare-fun temp190_16 () (_ BitVec 64))
(declare-fun temp190_17 () (_ BitVec 64))
(declare-fun temp190_18 () (_ BitVec 64))
(declare-fun temp190_19 () (_ BitVec 64))
(declare-fun temp190_20 () (_ BitVec 64))
(declare-fun temp190_21 () (_ BitVec 64))
(declare-fun temp190_22 () (_ BitVec 64))
(declare-fun temp190_23 () (_ BitVec 64))
(declare-fun temp190_24 () (_ BitVec 64))
(declare-fun temp190_25 () (_ BitVec 64))
(declare-fun temp190_26 () (_ BitVec 64))
(declare-fun temp190_27 () (_ BitVec 64))
(declare-fun temp190_28 () (_ BitVec 64))
(declare-fun temp190_29 () (_ BitVec 64))
(declare-fun temp190_30 () (_ BitVec 64))
(declare-fun temp190_31 () (_ BitVec 64))
(declare-fun temp190_32 () (_ BitVec 64))
(declare-fun var1053663 () (_ BitVec 64))
(declare-fun var1053668 () (_ BitVec 64))
(declare-fun ARGNAME_replacement_NAMEEND () (_ BitVec 64))
(declare-fun var1053669 () (_ BitVec 64))
(declare-fun temp190_33 () (_ BitVec 64))
(declare-fun temp190_34 () (_ BitVec 64))
(declare-fun var1053679 () (_ BitVec 64))
(declare-fun temp190_35 () (_ BitVec 64))
(declare-fun temp190_36 () (_ BitVec 64))
(declare-fun var1053691 () (_ BitVec 64))
(declare-fun temp190_37 () (_ BitVec 64))
(declare-fun temp190_38 () (_ BitVec 64))
(declare-fun var1049127 () (_ BitVec 64))
(declare-fun temp190_39 () (_ BitVec 64))
(declare-fun temp190_40 () (_ BitVec 64))
(declare-fun temp190_41 () (_ BitVec 64))
(declare-fun var1053718 () (_ BitVec 64))
(declare-fun temp190_43 () (_ BitVec 64))
(declare-fun temp190_42 () (_ BitVec 64))
(declare-fun temp190_44 () (_ BitVec 64))
(declare-fun temp190_45 () (_ BitVec 64))
(declare-fun var2231831 () (_ BitVec 64))
(declare-fun temp190_46 () (_ BitVec 64))
(declare-fun var1053916 () (_ BitVec 64))
(declare-fun temp190_47 () (_ BitVec 64))
(declare-fun temp190_49 () (_ BitVec 64))
(declare-fun temp190_48 () (_ BitVec 64))
(declare-fun temp190_50 () (_ BitVec 64))
(declare-fun var3280407 () (_ BitVec 64))
(declare-fun temp190_51 () (_ BitVec 64))
(declare-fun var1054130 () (_ BitVec 64))
(declare-fun temp190_52 () (_ BitVec 64))
(assert (= temp190_2 #x0000000000000000))
(assert (= temp190_1 temp190_2))
(assert (= temp190_4 #x0000000000000001))
(assert (= temp190_3 temp190_4))
(assert (= temp190_5 #x0000000000000000))
(assert (= var1053590
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp190_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp190_6 #x0000000000000001))
(assert (= var1053590 temp190_6))
(assert (= temp190_7 #x0000000000000003))
(assert (= var1053593
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp190_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp190_8 #x0000000000000001))
(assert (= var1053593 temp190_8))
(assert (= temp190_9 #x0000000000000001))
(assert (= var1053653
   (ite (bvslt ARGNAME_num_samples_NAMEEND temp190_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp190_10 #x0000000000000000))
(assert (= var1053653 temp190_10))
(assert (= temp190_11 #xffffffffffffffff))
(assert (= var1053664 temp190_11))
(assert (= temp190_12 #x0000000000000000))
(assert (= temp190_13 temp190_12))
(assert (= temp190_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp190_13)))
(assert (= temp190_15 #x0000000000000001))
(assert (= temp190_16 temp190_15))
(assert (= temp190_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp190_16)))
(assert (= temp190_18 #x0000000000000002))
(assert (= temp190_19 temp190_18))
(assert (= temp190_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp190_19)))
(assert (= temp190_21 #x0000000000000003))
(assert (= temp190_22 temp190_21))
(assert (= temp190_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp190_22)))
(assert (= temp190_24 #x0000000000000004))
(assert (= temp190_25 temp190_24))
(assert (= temp190_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp190_25)))
(assert (= temp190_27 #x0000000000000005))
(assert (= temp190_28 temp190_27))
(assert (= temp190_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp190_28)))
(assert (= temp190_30 #x0000000000000000))
(assert (= temp190_31
   (ite (bvslt var1053664 temp190_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
        var1053664)))
(assert (= temp190_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp190_31)))
(assert (= var1053663 temp190_32))
(assert (bvslt (ite (bvslt var1053664 temp190_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
            var1053664)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var1053668
   (ite (bvsle ARGNAME_num_samples_NAMEEND var1053663)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1053669 (bvor var1053668 ARGNAME_replacement_NAMEEND)))
(assert (= temp190_33 #x0000000000000001))
(assert (= var1053669 temp190_33))
(assert (= temp190_34 #x0000000001000000))
(assert (= var1053679
   (ite (bvsgt var1053663 temp190_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp190_35 #x0000000000000000))
(assert (= var1053679 temp190_35))
(assert (= temp190_36 #x0000000000000001))
(assert (= var1053691
   (ite (= ARGNAME_input_NAMEEND_DIM temp190_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp190_37 #x0000000000000000))
(assert (= var1053691 temp190_37))
(assert (= temp190_38 #x0000000000000000))
(assert (= var1049127 temp190_38))
(assert (= temp190_39 #x0000000000000000))
(assert (= temp190_40
   (ite (bvslt var1049127 temp190_39)
        (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
        var1049127)))
(assert (= temp190_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp190_40)))
(assert (= var1053718 temp190_41))
(assert (bvslt (ite (bvslt var1049127 temp190_39)
            (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
            var1049127)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp190_43 #x0000000000000002))
(assert (= temp190_42 temp190_43))
(assert (= temp190_44 #x0000000000000000))
(assert (= ARGNAME_replacement_NAMEEND temp190_44))
(assert (= temp190_45 #x0000000000000000))
(assert (= var2231831 temp190_45))
(assert (= temp190_46 #x0000000000000001))
(assert (= var1053916
   (ite (= ARGNAME_input_NAMEEND_DIM temp190_46)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp190_47 #x0000000000000000))
(assert (= var1053916 temp190_47))
(assert (= temp190_49 #x0000000000000001))
(assert (= temp190_48 temp190_49))
(assert (= temp190_50 #x0000000000000000))
(assert (= var3280407 temp190_50))
(assert (= temp190_51 #x0000000000000001))
(assert (= var1054130
   (ite (= ARGNAME_num_samples_NAMEEND temp190_51)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp190_52 #x0000000000000000))
(assert (= var1054130 temp190_52))
(model-add temp190_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp190_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp190_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp190_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp190_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp190_6 () (_ BitVec 64) #x0000000000000001)
(model-add var1053590 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






