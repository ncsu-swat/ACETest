(declare-fun temp259_2 () (_ BitVec 64))
(declare-fun temp259_1 () (_ BitVec 64))
(declare-fun temp259_4 () (_ BitVec 64))
(declare-fun temp259_3 () (_ BitVec 64))
(declare-fun temp259_5 () (_ BitVec 64))
(declare-fun temp259_6 () (_ BitVec 64))
(declare-fun var1053590 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp259_7 () (_ BitVec 64))
(declare-fun var1053593 () (_ BitVec 64))
(declare-fun temp259_8 () (_ BitVec 64))
(declare-fun temp259_9 () (_ BitVec 64))
(declare-fun ARGNAME_num_samples_NAMEEND () (_ BitVec 64))
(declare-fun var1053653 () (_ BitVec 64))
(declare-fun temp259_10 () (_ BitVec 64))
(declare-fun temp259_11 () (_ BitVec 64))
(declare-fun var1053664 () (_ BitVec 64))
(declare-fun temp259_12 () (_ BitVec 64))
(declare-fun temp259_13 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp259_14 () (_ BitVec 64))
(declare-fun temp259_15 () (_ BitVec 64))
(declare-fun temp259_16 () (_ BitVec 64))
(declare-fun temp259_17 () (_ BitVec 64))
(declare-fun temp259_18 () (_ BitVec 64))
(declare-fun temp259_19 () (_ BitVec 64))
(declare-fun temp259_20 () (_ BitVec 64))
(declare-fun temp259_21 () (_ BitVec 64))
(declare-fun temp259_22 () (_ BitVec 64))
(declare-fun temp259_23 () (_ BitVec 64))
(declare-fun temp259_24 () (_ BitVec 64))
(declare-fun temp259_25 () (_ BitVec 64))
(declare-fun temp259_26 () (_ BitVec 64))
(declare-fun temp259_27 () (_ BitVec 64))
(declare-fun temp259_28 () (_ BitVec 64))
(declare-fun temp259_29 () (_ BitVec 64))
(declare-fun temp259_30 () (_ BitVec 64))
(declare-fun temp259_31 () (_ BitVec 64))
(declare-fun temp259_32 () (_ BitVec 64))
(declare-fun var1053663 () (_ BitVec 64))
(declare-fun var1053668 () (_ BitVec 64))
(declare-fun ARGNAME_replacement_NAMEEND () (_ BitVec 64))
(declare-fun var1053669 () (_ BitVec 64))
(declare-fun temp259_33 () (_ BitVec 64))
(declare-fun temp259_34 () (_ BitVec 64))
(declare-fun var1053679 () (_ BitVec 64))
(declare-fun temp259_35 () (_ BitVec 64))
(declare-fun temp259_36 () (_ BitVec 64))
(declare-fun var1053691 () (_ BitVec 64))
(declare-fun temp259_37 () (_ BitVec 64))
(declare-fun temp259_38 () (_ BitVec 64))
(declare-fun var1049127 () (_ BitVec 64))
(declare-fun temp259_39 () (_ BitVec 64))
(declare-fun temp259_40 () (_ BitVec 64))
(declare-fun temp259_41 () (_ BitVec 64))
(declare-fun var1053718 () (_ BitVec 64))
(declare-fun temp259_43 () (_ BitVec 64))
(declare-fun temp259_42 () (_ BitVec 64))
(declare-fun temp259_44 () (_ BitVec 64))
(declare-fun temp259_45 () (_ BitVec 64))
(declare-fun var2166295 () (_ BitVec 64))
(declare-fun temp259_46 () (_ BitVec 64))
(declare-fun var1053916 () (_ BitVec 64))
(declare-fun temp259_47 () (_ BitVec 64))
(declare-fun temp259_49 () (_ BitVec 64))
(declare-fun temp259_48 () (_ BitVec 64))
(declare-fun temp259_50 () (_ BitVec 64))
(declare-fun var3214871 () (_ BitVec 64))
(declare-fun temp259_51 () (_ BitVec 64))
(declare-fun var1054130 () (_ BitVec 64))
(declare-fun temp259_52 () (_ BitVec 64))
(assert (= temp259_2 #x0000000000000000))
(assert (= temp259_1 temp259_2))
(assert (= temp259_4 #x0000000000000001))
(assert (= temp259_3 temp259_4))
(assert (= temp259_5 #x0000000000000000))
(assert (= var1053590
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp259_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp259_6 #x0000000000000001))
(assert (= var1053590 temp259_6))
(assert (= temp259_7 #x0000000000000003))
(assert (= var1053593
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp259_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp259_8 #x0000000000000001))
(assert (= var1053593 temp259_8))
(assert (= temp259_9 #x0000000000000001))
(assert (= var1053653
   (ite (bvslt ARGNAME_num_samples_NAMEEND temp259_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp259_10 #x0000000000000000))
(assert (= var1053653 temp259_10))
(assert (= temp259_11 #xffffffffffffffff))
(assert (= var1053664 temp259_11))
(assert (= temp259_12 #x0000000000000000))
(assert (= temp259_13 temp259_12))
(assert (= temp259_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp259_13)))
(assert (= temp259_15 #x0000000000000001))
(assert (= temp259_16 temp259_15))
(assert (= temp259_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp259_16)))
(assert (= temp259_18 #x0000000000000002))
(assert (= temp259_19 temp259_18))
(assert (= temp259_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp259_19)))
(assert (= temp259_21 #x0000000000000003))
(assert (= temp259_22 temp259_21))
(assert (= temp259_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp259_22)))
(assert (= temp259_24 #x0000000000000004))
(assert (= temp259_25 temp259_24))
(assert (= temp259_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp259_25)))
(assert (= temp259_27 #x0000000000000005))
(assert (= temp259_28 temp259_27))
(assert (= temp259_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp259_28)))
(assert (= temp259_30 #x0000000000000000))
(assert (= temp259_31
   (ite (bvslt var1053664 temp259_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
        var1053664)))
(assert (= temp259_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp259_31)))
(assert (= var1053663 temp259_32))
(assert (bvslt (ite (bvslt var1053664 temp259_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
            var1053664)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var1053668
   (ite (bvsle ARGNAME_num_samples_NAMEEND var1053663)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1053669 (bvor var1053668 ARGNAME_replacement_NAMEEND)))
(assert (= temp259_33 #x0000000000000001))
(assert (= var1053669 temp259_33))
(assert (= temp259_34 #x0000000001000000))
(assert (= var1053679
   (ite (bvsgt var1053663 temp259_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp259_35 #x0000000000000000))
(assert (= var1053679 temp259_35))
(assert (= temp259_36 #x0000000000000001))
(assert (= var1053691
   (ite (= ARGNAME_input_NAMEEND_DIM temp259_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp259_37 #x0000000000000000))
(assert (= var1053691 temp259_37))
(assert (= temp259_38 #x0000000000000000))
(assert (= var1049127 temp259_38))
(assert (= temp259_39 #x0000000000000000))
(assert (= temp259_40
   (ite (bvslt var1049127 temp259_39)
        (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
        var1049127)))
(assert (= temp259_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp259_40)))
(assert (= var1053718 temp259_41))
(assert (bvslt (ite (bvslt var1049127 temp259_39)
            (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
            var1049127)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp259_43 #x0000000000000002))
(assert (= temp259_42 temp259_43))
(assert (= temp259_44 #x0000000000000000))
(assert (= ARGNAME_replacement_NAMEEND temp259_44))
(assert (= temp259_45 #x0000000000000000))
(assert (= var2166295 temp259_45))
(assert (= temp259_46 #x0000000000000001))
(assert (= var1053916
   (ite (= ARGNAME_input_NAMEEND_DIM temp259_46)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp259_47 #x0000000000000000))
(assert (= var1053916 temp259_47))
(assert (= temp259_49 #x0000000000000001))
(assert (= temp259_48 temp259_49))
(assert (= temp259_50 #x0000000000000000))
(assert (= var3214871 temp259_50))
(assert (= temp259_51 #x0000000000000001))
(assert (= var1054130
   (ite (= ARGNAME_num_samples_NAMEEND temp259_51)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp259_52 #x0000000000000000))
(assert (= var1054130 temp259_52))
(model-add temp259_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp259_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp259_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp259_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp259_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp259_6 () (_ BitVec 64) #x0000000000000001)
(model-add var1053590 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






