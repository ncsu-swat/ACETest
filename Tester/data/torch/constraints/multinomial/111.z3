(declare-fun temp223_2 () (_ BitVec 64))
(declare-fun temp223_1 () (_ BitVec 64))
(declare-fun temp223_4 () (_ BitVec 64))
(declare-fun temp223_3 () (_ BitVec 64))
(declare-fun temp223_5 () (_ BitVec 64))
(declare-fun temp223_6 () (_ BitVec 64))
(declare-fun var1053590 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp223_7 () (_ BitVec 64))
(declare-fun var1053593 () (_ BitVec 64))
(declare-fun temp223_8 () (_ BitVec 64))
(declare-fun temp223_9 () (_ BitVec 64))
(declare-fun ARGNAME_num_samples_NAMEEND () (_ BitVec 64))
(declare-fun var1053653 () (_ BitVec 64))
(declare-fun temp223_10 () (_ BitVec 64))
(declare-fun temp223_11 () (_ BitVec 64))
(declare-fun var1053664 () (_ BitVec 64))
(declare-fun temp223_12 () (_ BitVec 64))
(declare-fun temp223_13 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp223_14 () (_ BitVec 64))
(declare-fun temp223_15 () (_ BitVec 64))
(declare-fun temp223_16 () (_ BitVec 64))
(declare-fun temp223_17 () (_ BitVec 64))
(declare-fun temp223_18 () (_ BitVec 64))
(declare-fun temp223_19 () (_ BitVec 64))
(declare-fun temp223_20 () (_ BitVec 64))
(declare-fun temp223_21 () (_ BitVec 64))
(declare-fun temp223_22 () (_ BitVec 64))
(declare-fun temp223_23 () (_ BitVec 64))
(declare-fun temp223_24 () (_ BitVec 64))
(declare-fun temp223_25 () (_ BitVec 64))
(declare-fun temp223_26 () (_ BitVec 64))
(declare-fun temp223_27 () (_ BitVec 64))
(declare-fun temp223_28 () (_ BitVec 64))
(declare-fun temp223_29 () (_ BitVec 64))
(declare-fun temp223_30 () (_ BitVec 64))
(declare-fun temp223_31 () (_ BitVec 64))
(declare-fun temp223_32 () (_ BitVec 64))
(declare-fun var1053663 () (_ BitVec 64))
(declare-fun var1053668 () (_ BitVec 64))
(declare-fun ARGNAME_replacement_NAMEEND () (_ BitVec 64))
(declare-fun var1053669 () (_ BitVec 64))
(declare-fun temp223_33 () (_ BitVec 64))
(declare-fun temp223_34 () (_ BitVec 64))
(declare-fun var1053679 () (_ BitVec 64))
(declare-fun temp223_35 () (_ BitVec 64))
(declare-fun temp223_36 () (_ BitVec 64))
(declare-fun var1053691 () (_ BitVec 64))
(declare-fun temp223_37 () (_ BitVec 64))
(declare-fun temp223_38 () (_ BitVec 64))
(declare-fun var1049127 () (_ BitVec 64))
(declare-fun temp223_39 () (_ BitVec 64))
(declare-fun temp223_40 () (_ BitVec 64))
(declare-fun temp223_41 () (_ BitVec 64))
(declare-fun var1053718 () (_ BitVec 64))
(declare-fun temp223_43 () (_ BitVec 64))
(declare-fun temp223_42 () (_ BitVec 64))
(declare-fun temp223_44 () (_ BitVec 64))
(declare-fun temp223_45 () (_ BitVec 64))
(declare-fun var2166295 () (_ BitVec 64))
(declare-fun temp223_46 () (_ BitVec 64))
(declare-fun var1053916 () (_ BitVec 64))
(declare-fun temp223_47 () (_ BitVec 64))
(declare-fun temp223_49 () (_ BitVec 64))
(declare-fun temp223_48 () (_ BitVec 64))
(declare-fun temp223_50 () (_ BitVec 64))
(declare-fun var3214871 () (_ BitVec 64))
(declare-fun temp223_51 () (_ BitVec 64))
(declare-fun var1054130 () (_ BitVec 64))
(declare-fun temp223_52 () (_ BitVec 64))
(assert (= temp223_2 #x0000000000000000))
(assert (= temp223_1 temp223_2))
(assert (= temp223_4 #x0000000000000001))
(assert (= temp223_3 temp223_4))
(assert (= temp223_5 #x0000000000000000))
(assert (= var1053590
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp223_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp223_6 #x0000000000000001))
(assert (= var1053590 temp223_6))
(assert (= temp223_7 #x0000000000000003))
(assert (= var1053593
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp223_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp223_8 #x0000000000000001))
(assert (= var1053593 temp223_8))
(assert (= temp223_9 #x0000000000000001))
(assert (= var1053653
   (ite (bvslt ARGNAME_num_samples_NAMEEND temp223_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp223_10 #x0000000000000000))
(assert (= var1053653 temp223_10))
(assert (= temp223_11 #xffffffffffffffff))
(assert (= var1053664 temp223_11))
(assert (= temp223_12 #x0000000000000000))
(assert (= temp223_13 temp223_12))
(assert (= temp223_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp223_13)))
(assert (= temp223_15 #x0000000000000001))
(assert (= temp223_16 temp223_15))
(assert (= temp223_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp223_16)))
(assert (= temp223_18 #x0000000000000002))
(assert (= temp223_19 temp223_18))
(assert (= temp223_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp223_19)))
(assert (= temp223_21 #x0000000000000003))
(assert (= temp223_22 temp223_21))
(assert (= temp223_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp223_22)))
(assert (= temp223_24 #x0000000000000004))
(assert (= temp223_25 temp223_24))
(assert (= temp223_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp223_25)))
(assert (= temp223_27 #x0000000000000005))
(assert (= temp223_28 temp223_27))
(assert (= temp223_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp223_28)))
(assert (= temp223_30 #x0000000000000000))
(assert (= temp223_31
   (ite (bvslt var1053664 temp223_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
        var1053664)))
(assert (= temp223_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp223_31)))
(assert (= var1053663 temp223_32))
(assert (bvslt (ite (bvslt var1053664 temp223_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
            var1053664)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var1053668
   (ite (bvsle ARGNAME_num_samples_NAMEEND var1053663)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1053669 (bvor var1053668 ARGNAME_replacement_NAMEEND)))
(assert (= temp223_33 #x0000000000000001))
(assert (= var1053669 temp223_33))
(assert (= temp223_34 #x0000000001000000))
(assert (= var1053679
   (ite (bvsgt var1053663 temp223_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp223_35 #x0000000000000000))
(assert (= var1053679 temp223_35))
(assert (= temp223_36 #x0000000000000001))
(assert (= var1053691
   (ite (= ARGNAME_input_NAMEEND_DIM temp223_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp223_37 #x0000000000000000))
(assert (= var1053691 temp223_37))
(assert (= temp223_38 #x0000000000000000))
(assert (= var1049127 temp223_38))
(assert (= temp223_39 #x0000000000000000))
(assert (= temp223_40
   (ite (bvslt var1049127 temp223_39)
        (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
        var1049127)))
(assert (= temp223_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp223_40)))
(assert (= var1053718 temp223_41))
(assert (bvslt (ite (bvslt var1049127 temp223_39)
            (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
            var1049127)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp223_43 #x0000000000000002))
(assert (= temp223_42 temp223_43))
(assert (= temp223_44 #x0000000000000000))
(assert (= ARGNAME_replacement_NAMEEND temp223_44))
(assert (= temp223_45 #x0000000000000000))
(assert (= var2166295 temp223_45))
(assert (= temp223_46 #x0000000000000001))
(assert (= var1053916
   (ite (= ARGNAME_input_NAMEEND_DIM temp223_46)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp223_47 #x0000000000000000))
(assert (= var1053916 temp223_47))
(assert (= temp223_49 #x0000000000000001))
(assert (= temp223_48 temp223_49))
(assert (= temp223_50 #x0000000000000000))
(assert (= var3214871 temp223_50))
(assert (= temp223_51 #x0000000000000001))
(assert (= var1054130
   (ite (= ARGNAME_num_samples_NAMEEND temp223_51)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp223_52 #x0000000000000000))
(assert (= var1054130 temp223_52))
(model-add temp223_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp223_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp223_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp223_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp223_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp223_6 () (_ BitVec 64) #x0000000000000001)
(model-add var1053590 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






