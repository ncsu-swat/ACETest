(declare-fun temp261_2 () (_ BitVec 64))
(declare-fun temp261_1 () (_ BitVec 64))
(declare-fun temp261_4 () (_ BitVec 64))
(declare-fun temp261_3 () (_ BitVec 64))
(declare-fun temp261_5 () (_ BitVec 64))
(declare-fun temp261_6 () (_ BitVec 64))
(declare-fun var1053590 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp261_7 () (_ BitVec 64))
(declare-fun var1053593 () (_ BitVec 64))
(declare-fun temp261_8 () (_ BitVec 64))
(declare-fun temp261_9 () (_ BitVec 64))
(declare-fun ARGNAME_num_samples_NAMEEND () (_ BitVec 64))
(declare-fun var1053653 () (_ BitVec 64))
(declare-fun temp261_10 () (_ BitVec 64))
(declare-fun temp261_11 () (_ BitVec 64))
(declare-fun var1053664 () (_ BitVec 64))
(declare-fun temp261_12 () (_ BitVec 64))
(declare-fun temp261_13 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp261_14 () (_ BitVec 64))
(declare-fun temp261_15 () (_ BitVec 64))
(declare-fun temp261_16 () (_ BitVec 64))
(declare-fun temp261_17 () (_ BitVec 64))
(declare-fun temp261_18 () (_ BitVec 64))
(declare-fun temp261_19 () (_ BitVec 64))
(declare-fun temp261_20 () (_ BitVec 64))
(declare-fun temp261_21 () (_ BitVec 64))
(declare-fun temp261_22 () (_ BitVec 64))
(declare-fun temp261_23 () (_ BitVec 64))
(declare-fun temp261_24 () (_ BitVec 64))
(declare-fun temp261_25 () (_ BitVec 64))
(declare-fun temp261_26 () (_ BitVec 64))
(declare-fun temp261_27 () (_ BitVec 64))
(declare-fun temp261_28 () (_ BitVec 64))
(declare-fun temp261_29 () (_ BitVec 64))
(declare-fun temp261_30 () (_ BitVec 64))
(declare-fun temp261_31 () (_ BitVec 64))
(declare-fun temp261_32 () (_ BitVec 64))
(declare-fun var1053663 () (_ BitVec 64))
(declare-fun var1053668 () (_ BitVec 64))
(declare-fun ARGNAME_replacement_NAMEEND () (_ BitVec 64))
(declare-fun var1053669 () (_ BitVec 64))
(declare-fun temp261_33 () (_ BitVec 64))
(declare-fun temp261_34 () (_ BitVec 64))
(declare-fun var1053679 () (_ BitVec 64))
(declare-fun temp261_35 () (_ BitVec 64))
(declare-fun temp261_36 () (_ BitVec 64))
(declare-fun var1053691 () (_ BitVec 64))
(declare-fun temp261_37 () (_ BitVec 64))
(declare-fun temp261_38 () (_ BitVec 64))
(declare-fun var1049127 () (_ BitVec 64))
(declare-fun temp261_39 () (_ BitVec 64))
(declare-fun temp261_40 () (_ BitVec 64))
(declare-fun temp261_41 () (_ BitVec 64))
(declare-fun var1053718 () (_ BitVec 64))
(declare-fun temp261_43 () (_ BitVec 64))
(declare-fun temp261_42 () (_ BitVec 64))
(declare-fun temp261_44 () (_ BitVec 64))
(declare-fun temp261_45 () (_ BitVec 64))
(declare-fun var2166295 () (_ BitVec 64))
(declare-fun temp261_46 () (_ BitVec 64))
(declare-fun var1053916 () (_ BitVec 64))
(declare-fun temp261_47 () (_ BitVec 64))
(declare-fun temp261_49 () (_ BitVec 64))
(declare-fun temp261_48 () (_ BitVec 64))
(declare-fun temp261_50 () (_ BitVec 64))
(declare-fun var3214871 () (_ BitVec 64))
(declare-fun temp261_51 () (_ BitVec 64))
(declare-fun var1054130 () (_ BitVec 64))
(declare-fun temp261_52 () (_ BitVec 64))
(assert (= temp261_2 #x0000000000000000))
(assert (= temp261_1 temp261_2))
(assert (= temp261_4 #x0000000000000001))
(assert (= temp261_3 temp261_4))
(assert (= temp261_5 #x0000000000000000))
(assert (= var1053590
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp261_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp261_6 #x0000000000000001))
(assert (= var1053590 temp261_6))
(assert (= temp261_7 #x0000000000000003))
(assert (= var1053593
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp261_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp261_8 #x0000000000000001))
(assert (= var1053593 temp261_8))
(assert (= temp261_9 #x0000000000000001))
(assert (= var1053653
   (ite (bvslt ARGNAME_num_samples_NAMEEND temp261_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp261_10 #x0000000000000000))
(assert (= var1053653 temp261_10))
(assert (= temp261_11 #xffffffffffffffff))
(assert (= var1053664 temp261_11))
(assert (= temp261_12 #x0000000000000000))
(assert (= temp261_13 temp261_12))
(assert (= temp261_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp261_13)))
(assert (= temp261_15 #x0000000000000001))
(assert (= temp261_16 temp261_15))
(assert (= temp261_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp261_16)))
(assert (= temp261_18 #x0000000000000002))
(assert (= temp261_19 temp261_18))
(assert (= temp261_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp261_19)))
(assert (= temp261_21 #x0000000000000003))
(assert (= temp261_22 temp261_21))
(assert (= temp261_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp261_22)))
(assert (= temp261_24 #x0000000000000004))
(assert (= temp261_25 temp261_24))
(assert (= temp261_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp261_25)))
(assert (= temp261_27 #x0000000000000005))
(assert (= temp261_28 temp261_27))
(assert (= temp261_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp261_28)))
(assert (= temp261_30 #x0000000000000000))
(assert (= temp261_31
   (ite (bvslt var1053664 temp261_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
        var1053664)))
(assert (= temp261_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp261_31)))
(assert (= var1053663 temp261_32))
(assert (bvslt (ite (bvslt var1053664 temp261_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
            var1053664)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var1053668
   (ite (bvsle ARGNAME_num_samples_NAMEEND var1053663)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1053669 (bvor var1053668 ARGNAME_replacement_NAMEEND)))
(assert (= temp261_33 #x0000000000000001))
(assert (= var1053669 temp261_33))
(assert (= temp261_34 #x0000000001000000))
(assert (= var1053679
   (ite (bvsgt var1053663 temp261_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp261_35 #x0000000000000000))
(assert (= var1053679 temp261_35))
(assert (= temp261_36 #x0000000000000001))
(assert (= var1053691
   (ite (= ARGNAME_input_NAMEEND_DIM temp261_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp261_37 #x0000000000000000))
(assert (= var1053691 temp261_37))
(assert (= temp261_38 #x0000000000000000))
(assert (= var1049127 temp261_38))
(assert (= temp261_39 #x0000000000000000))
(assert (= temp261_40
   (ite (bvslt var1049127 temp261_39)
        (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
        var1049127)))
(assert (= temp261_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp261_40)))
(assert (= var1053718 temp261_41))
(assert (bvslt (ite (bvslt var1049127 temp261_39)
            (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
            var1049127)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp261_43 #x0000000000000002))
(assert (= temp261_42 temp261_43))
(assert (= temp261_44 #x0000000000000000))
(assert (= ARGNAME_replacement_NAMEEND temp261_44))
(assert (= temp261_45 #x0000000000000000))
(assert (= var2166295 temp261_45))
(assert (= temp261_46 #x0000000000000001))
(assert (= var1053916
   (ite (= ARGNAME_input_NAMEEND_DIM temp261_46)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp261_47 #x0000000000000000))
(assert (= var1053916 temp261_47))
(assert (= temp261_49 #x0000000000000001))
(assert (= temp261_48 temp261_49))
(assert (= temp261_50 #x0000000000000000))
(assert (= var3214871 temp261_50))
(assert (= temp261_51 #x0000000000000001))
(assert (= var1054130
   (ite (= ARGNAME_num_samples_NAMEEND temp261_51)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp261_52 #x0000000000000000))
(assert (= var1054130 temp261_52))
(model-add temp261_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp261_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp261_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp261_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp261_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp261_6 () (_ BitVec 64) #x0000000000000001)
(model-add var1053590 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






