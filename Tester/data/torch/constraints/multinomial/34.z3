(declare-fun temp66_2 () (_ BitVec 64))
(declare-fun temp66_1 () (_ BitVec 64))
(declare-fun temp66_4 () (_ BitVec 64))
(declare-fun temp66_3 () (_ BitVec 64))
(declare-fun temp66_5 () (_ BitVec 64))
(declare-fun temp66_6 () (_ BitVec 64))
(declare-fun var1053590 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp66_7 () (_ BitVec 64))
(declare-fun var1053593 () (_ BitVec 64))
(declare-fun temp66_8 () (_ BitVec 64))
(declare-fun temp66_9 () (_ BitVec 64))
(declare-fun ARGNAME_num_samples_NAMEEND () (_ BitVec 64))
(declare-fun var1053653 () (_ BitVec 64))
(declare-fun temp66_10 () (_ BitVec 64))
(declare-fun temp66_11 () (_ BitVec 64))
(declare-fun var1053664 () (_ BitVec 64))
(declare-fun temp66_12 () (_ BitVec 64))
(declare-fun temp66_13 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp66_14 () (_ BitVec 64))
(declare-fun temp66_15 () (_ BitVec 64))
(declare-fun temp66_16 () (_ BitVec 64))
(declare-fun temp66_17 () (_ BitVec 64))
(declare-fun temp66_18 () (_ BitVec 64))
(declare-fun temp66_19 () (_ BitVec 64))
(declare-fun temp66_20 () (_ BitVec 64))
(declare-fun temp66_21 () (_ BitVec 64))
(declare-fun temp66_22 () (_ BitVec 64))
(declare-fun temp66_23 () (_ BitVec 64))
(declare-fun temp66_24 () (_ BitVec 64))
(declare-fun temp66_25 () (_ BitVec 64))
(declare-fun temp66_26 () (_ BitVec 64))
(declare-fun temp66_27 () (_ BitVec 64))
(declare-fun temp66_28 () (_ BitVec 64))
(declare-fun temp66_29 () (_ BitVec 64))
(declare-fun temp66_30 () (_ BitVec 64))
(declare-fun temp66_31 () (_ BitVec 64))
(declare-fun temp66_32 () (_ BitVec 64))
(declare-fun var1053663 () (_ BitVec 64))
(declare-fun var1053668 () (_ BitVec 64))
(declare-fun ARGNAME_replacement_NAMEEND () (_ BitVec 64))
(declare-fun var1053669 () (_ BitVec 64))
(declare-fun temp66_33 () (_ BitVec 64))
(declare-fun temp66_34 () (_ BitVec 64))
(declare-fun var1053679 () (_ BitVec 64))
(declare-fun temp66_35 () (_ BitVec 64))
(declare-fun temp66_36 () (_ BitVec 64))
(declare-fun var1053691 () (_ BitVec 64))
(declare-fun temp66_37 () (_ BitVec 64))
(declare-fun temp66_39 () (_ BitVec 64))
(declare-fun temp66_38 () (_ BitVec 64))
(declare-fun temp66_40 () (_ BitVec 64))
(assert (= temp66_2 #x0000000000000000))
(assert (= temp66_1 temp66_2))
(assert (= temp66_4 #x0000000000000001))
(assert (= temp66_3 temp66_4))
(assert (= temp66_5 #x0000000000000000))
(assert (= var1053590
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp66_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_6 #x0000000000000001))
(assert (= var1053590 temp66_6))
(assert (= temp66_7 #x0000000000000003))
(assert (= var1053593
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp66_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_8 #x0000000000000001))
(assert (= var1053593 temp66_8))
(assert (= temp66_9 #x0000000000000001))
(assert (= var1053653
   (ite (bvslt ARGNAME_num_samples_NAMEEND temp66_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_10 #x0000000000000000))
(assert (= var1053653 temp66_10))
(assert (= temp66_11 #xffffffffffffffff))
(assert (= var1053664 temp66_11))
(assert (= temp66_12 #x0000000000000000))
(assert (= temp66_13 temp66_12))
(assert (= temp66_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_13)))
(assert (= temp66_15 #x0000000000000001))
(assert (= temp66_16 temp66_15))
(assert (= temp66_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_16)))
(assert (= temp66_18 #x0000000000000002))
(assert (= temp66_19 temp66_18))
(assert (= temp66_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_19)))
(assert (= temp66_21 #x0000000000000003))
(assert (= temp66_22 temp66_21))
(assert (= temp66_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_22)))
(assert (= temp66_24 #x0000000000000004))
(assert (= temp66_25 temp66_24))
(assert (= temp66_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_25)))
(assert (= temp66_27 #x0000000000000005))
(assert (= temp66_28 temp66_27))
(assert (= temp66_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_28)))
(assert (= temp66_30 #x0000000000000000))
(assert (= temp66_31
   (ite (bvslt var1053664 temp66_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
        var1053664)))
(assert (= temp66_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_31)))
(assert (= var1053663 temp66_32))
(assert (bvslt (ite (bvslt var1053664 temp66_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
            var1053664)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var1053668
   (ite (bvsle ARGNAME_num_samples_NAMEEND var1053663)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1053669 (bvor var1053668 ARGNAME_replacement_NAMEEND)))
(assert (= temp66_33 #x0000000000000001))
(assert (= var1053669 temp66_33))
(assert (= temp66_34 #x0000000001000000))
(assert (= var1053679
   (ite (bvsgt var1053663 temp66_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp66_35 #x0000000000000000))
(assert (= var1053679 temp66_35))
(assert (= temp66_36 #x0000000000000001))
(assert (= var1053691
   (ite (= ARGNAME_input_NAMEEND_DIM temp66_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_37 #x0000000000000001))
(assert (= var1053691 temp66_37))
(assert (= temp66_39 #x0000000000000001))
(assert (= temp66_38 temp66_39))
(assert (= temp66_40 #x0000000000000001))
(assert (= ARGNAME_replacement_NAMEEND temp66_40))
(model-add temp66_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp66_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp66_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp66_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp66_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp66_6 () (_ BitVec 64) #x0000000000000001)
(model-add var1053590 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






