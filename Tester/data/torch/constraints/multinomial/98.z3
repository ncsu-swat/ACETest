(declare-fun temp194_2 () (_ BitVec 64))
(declare-fun temp194_1 () (_ BitVec 64))
(declare-fun temp194_4 () (_ BitVec 64))
(declare-fun temp194_3 () (_ BitVec 64))
(declare-fun temp194_5 () (_ BitVec 64))
(declare-fun temp194_6 () (_ BitVec 64))
(declare-fun var1053590 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp194_7 () (_ BitVec 64))
(declare-fun var1053593 () (_ BitVec 64))
(declare-fun temp194_8 () (_ BitVec 64))
(declare-fun temp194_9 () (_ BitVec 64))
(declare-fun ARGNAME_num_samples_NAMEEND () (_ BitVec 64))
(declare-fun var1053653 () (_ BitVec 64))
(declare-fun temp194_10 () (_ BitVec 64))
(declare-fun temp194_11 () (_ BitVec 64))
(declare-fun var1053664 () (_ BitVec 64))
(declare-fun temp194_12 () (_ BitVec 64))
(declare-fun temp194_13 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp194_14 () (_ BitVec 64))
(declare-fun temp194_15 () (_ BitVec 64))
(declare-fun temp194_16 () (_ BitVec 64))
(declare-fun temp194_17 () (_ BitVec 64))
(declare-fun temp194_18 () (_ BitVec 64))
(declare-fun temp194_19 () (_ BitVec 64))
(declare-fun temp194_20 () (_ BitVec 64))
(declare-fun temp194_21 () (_ BitVec 64))
(declare-fun temp194_22 () (_ BitVec 64))
(declare-fun temp194_23 () (_ BitVec 64))
(declare-fun temp194_24 () (_ BitVec 64))
(declare-fun temp194_25 () (_ BitVec 64))
(declare-fun temp194_26 () (_ BitVec 64))
(declare-fun temp194_27 () (_ BitVec 64))
(declare-fun temp194_28 () (_ BitVec 64))
(declare-fun temp194_29 () (_ BitVec 64))
(declare-fun temp194_30 () (_ BitVec 64))
(declare-fun temp194_31 () (_ BitVec 64))
(declare-fun temp194_32 () (_ BitVec 64))
(declare-fun var1053663 () (_ BitVec 64))
(declare-fun var1053668 () (_ BitVec 64))
(declare-fun ARGNAME_replacement_NAMEEND () (_ BitVec 64))
(declare-fun var1053669 () (_ BitVec 64))
(declare-fun temp194_33 () (_ BitVec 64))
(declare-fun temp194_34 () (_ BitVec 64))
(declare-fun var1053679 () (_ BitVec 64))
(declare-fun temp194_35 () (_ BitVec 64))
(declare-fun temp194_36 () (_ BitVec 64))
(declare-fun var1053691 () (_ BitVec 64))
(declare-fun temp194_37 () (_ BitVec 64))
(declare-fun temp194_38 () (_ BitVec 64))
(declare-fun var1049127 () (_ BitVec 64))
(declare-fun temp194_39 () (_ BitVec 64))
(declare-fun temp194_40 () (_ BitVec 64))
(declare-fun temp194_41 () (_ BitVec 64))
(declare-fun var1053718 () (_ BitVec 64))
(declare-fun temp194_43 () (_ BitVec 64))
(declare-fun temp194_42 () (_ BitVec 64))
(declare-fun temp194_44 () (_ BitVec 64))
(declare-fun temp194_45 () (_ BitVec 64))
(declare-fun var2231831 () (_ BitVec 64))
(declare-fun temp194_46 () (_ BitVec 64))
(declare-fun var1053916 () (_ BitVec 64))
(declare-fun temp194_47 () (_ BitVec 64))
(declare-fun temp194_49 () (_ BitVec 64))
(declare-fun temp194_48 () (_ BitVec 64))
(declare-fun temp194_50 () (_ BitVec 64))
(declare-fun var3280407 () (_ BitVec 64))
(declare-fun temp194_51 () (_ BitVec 64))
(declare-fun var1054130 () (_ BitVec 64))
(declare-fun temp194_52 () (_ BitVec 64))
(assert (= temp194_2 #x0000000000000000))
(assert (= temp194_1 temp194_2))
(assert (= temp194_4 #x0000000000000001))
(assert (= temp194_3 temp194_4))
(assert (= temp194_5 #x0000000000000000))
(assert (= var1053590
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp194_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp194_6 #x0000000000000001))
(assert (= var1053590 temp194_6))
(assert (= temp194_7 #x0000000000000003))
(assert (= var1053593
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp194_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp194_8 #x0000000000000001))
(assert (= var1053593 temp194_8))
(assert (= temp194_9 #x0000000000000001))
(assert (= var1053653
   (ite (bvslt ARGNAME_num_samples_NAMEEND temp194_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp194_10 #x0000000000000000))
(assert (= var1053653 temp194_10))
(assert (= temp194_11 #xffffffffffffffff))
(assert (= var1053664 temp194_11))
(assert (= temp194_12 #x0000000000000000))
(assert (= temp194_13 temp194_12))
(assert (= temp194_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp194_13)))
(assert (= temp194_15 #x0000000000000001))
(assert (= temp194_16 temp194_15))
(assert (= temp194_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp194_16)))
(assert (= temp194_18 #x0000000000000002))
(assert (= temp194_19 temp194_18))
(assert (= temp194_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp194_19)))
(assert (= temp194_21 #x0000000000000003))
(assert (= temp194_22 temp194_21))
(assert (= temp194_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp194_22)))
(assert (= temp194_24 #x0000000000000004))
(assert (= temp194_25 temp194_24))
(assert (= temp194_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp194_25)))
(assert (= temp194_27 #x0000000000000005))
(assert (= temp194_28 temp194_27))
(assert (= temp194_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp194_28)))
(assert (= temp194_30 #x0000000000000000))
(assert (= temp194_31
   (ite (bvslt var1053664 temp194_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
        var1053664)))
(assert (= temp194_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp194_31)))
(assert (= var1053663 temp194_32))
(assert (bvslt (ite (bvslt var1053664 temp194_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
            var1053664)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var1053668
   (ite (bvsle ARGNAME_num_samples_NAMEEND var1053663)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1053669 (bvor var1053668 ARGNAME_replacement_NAMEEND)))
(assert (= temp194_33 #x0000000000000001))
(assert (= var1053669 temp194_33))
(assert (= temp194_34 #x0000000001000000))
(assert (= var1053679
   (ite (bvsgt var1053663 temp194_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp194_35 #x0000000000000000))
(assert (= var1053679 temp194_35))
(assert (= temp194_36 #x0000000000000001))
(assert (= var1053691
   (ite (= ARGNAME_input_NAMEEND_DIM temp194_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp194_37 #x0000000000000000))
(assert (= var1053691 temp194_37))
(assert (= temp194_38 #x0000000000000000))
(assert (= var1049127 temp194_38))
(assert (= temp194_39 #x0000000000000000))
(assert (= temp194_40
   (ite (bvslt var1049127 temp194_39)
        (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
        var1049127)))
(assert (= temp194_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp194_40)))
(assert (= var1053718 temp194_41))
(assert (bvslt (ite (bvslt var1049127 temp194_39)
            (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
            var1049127)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp194_43 #x0000000000000002))
(assert (= temp194_42 temp194_43))
(assert (= temp194_44 #x0000000000000000))
(assert (= ARGNAME_replacement_NAMEEND temp194_44))
(assert (= temp194_45 #x0000000000000000))
(assert (= var2231831 temp194_45))
(assert (= temp194_46 #x0000000000000001))
(assert (= var1053916
   (ite (= ARGNAME_input_NAMEEND_DIM temp194_46)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp194_47 #x0000000000000000))
(assert (= var1053916 temp194_47))
(assert (= temp194_49 #x0000000000000001))
(assert (= temp194_48 temp194_49))
(assert (= temp194_50 #x0000000000000000))
(assert (= var3280407 temp194_50))
(assert (= temp194_51 #x0000000000000001))
(assert (= var1054130
   (ite (= ARGNAME_num_samples_NAMEEND temp194_51)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp194_52 #x0000000000000000))
(assert (= var1054130 temp194_52))
(model-add temp194_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp194_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp194_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp194_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp194_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp194_6 () (_ BitVec 64) #x0000000000000001)
(model-add var1053590 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






