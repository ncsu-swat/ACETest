(declare-fun temp148_2 () (_ BitVec 64))
(declare-fun temp148_1 () (_ BitVec 64))
(declare-fun temp148_4 () (_ BitVec 64))
(declare-fun temp148_3 () (_ BitVec 64))
(declare-fun temp148_5 () (_ BitVec 64))
(declare-fun temp148_6 () (_ BitVec 64))
(declare-fun var1053590 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp148_7 () (_ BitVec 64))
(declare-fun var1053593 () (_ BitVec 64))
(declare-fun temp148_8 () (_ BitVec 64))
(declare-fun temp148_9 () (_ BitVec 64))
(declare-fun ARGNAME_num_samples_NAMEEND () (_ BitVec 64))
(declare-fun var1053653 () (_ BitVec 64))
(declare-fun temp148_10 () (_ BitVec 64))
(declare-fun temp148_11 () (_ BitVec 64))
(declare-fun var1053664 () (_ BitVec 64))
(declare-fun temp148_12 () (_ BitVec 64))
(declare-fun temp148_13 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp148_14 () (_ BitVec 64))
(declare-fun temp148_15 () (_ BitVec 64))
(declare-fun temp148_16 () (_ BitVec 64))
(declare-fun temp148_17 () (_ BitVec 64))
(declare-fun temp148_18 () (_ BitVec 64))
(declare-fun temp148_19 () (_ BitVec 64))
(declare-fun temp148_20 () (_ BitVec 64))
(declare-fun temp148_21 () (_ BitVec 64))
(declare-fun temp148_22 () (_ BitVec 64))
(declare-fun temp148_23 () (_ BitVec 64))
(declare-fun temp148_24 () (_ BitVec 64))
(declare-fun temp148_25 () (_ BitVec 64))
(declare-fun temp148_26 () (_ BitVec 64))
(declare-fun temp148_27 () (_ BitVec 64))
(declare-fun temp148_28 () (_ BitVec 64))
(declare-fun temp148_29 () (_ BitVec 64))
(declare-fun temp148_30 () (_ BitVec 64))
(declare-fun temp148_31 () (_ BitVec 64))
(declare-fun temp148_32 () (_ BitVec 64))
(declare-fun var1053663 () (_ BitVec 64))
(declare-fun var1053668 () (_ BitVec 64))
(declare-fun ARGNAME_replacement_NAMEEND () (_ BitVec 64))
(declare-fun var1053669 () (_ BitVec 64))
(declare-fun temp148_33 () (_ BitVec 64))
(declare-fun temp148_34 () (_ BitVec 64))
(declare-fun var1053679 () (_ BitVec 64))
(declare-fun temp148_35 () (_ BitVec 64))
(declare-fun temp148_36 () (_ BitVec 64))
(declare-fun var1053691 () (_ BitVec 64))
(declare-fun temp148_37 () (_ BitVec 64))
(declare-fun temp148_38 () (_ BitVec 64))
(declare-fun var1049127 () (_ BitVec 64))
(declare-fun temp148_39 () (_ BitVec 64))
(declare-fun temp148_40 () (_ BitVec 64))
(declare-fun temp148_41 () (_ BitVec 64))
(declare-fun var1053718 () (_ BitVec 64))
(declare-fun temp148_43 () (_ BitVec 64))
(declare-fun temp148_42 () (_ BitVec 64))
(declare-fun temp148_44 () (_ BitVec 64))
(declare-fun temp148_45 () (_ BitVec 64))
(declare-fun var2231831 () (_ BitVec 64))
(declare-fun temp148_46 () (_ BitVec 64))
(declare-fun var1053916 () (_ BitVec 64))
(declare-fun temp148_47 () (_ BitVec 64))
(declare-fun temp148_49 () (_ BitVec 64))
(declare-fun temp148_48 () (_ BitVec 64))
(declare-fun temp148_50 () (_ BitVec 64))
(declare-fun var3280407 () (_ BitVec 64))
(declare-fun temp148_51 () (_ BitVec 64))
(declare-fun var1054130 () (_ BitVec 64))
(declare-fun temp148_52 () (_ BitVec 64))
(assert (= temp148_2 #x0000000000000000))
(assert (= temp148_1 temp148_2))
(assert (= temp148_4 #x0000000000000001))
(assert (= temp148_3 temp148_4))
(assert (= temp148_5 #x0000000000000000))
(assert (= var1053590
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp148_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp148_6 #x0000000000000001))
(assert (= var1053590 temp148_6))
(assert (= temp148_7 #x0000000000000003))
(assert (= var1053593
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp148_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp148_8 #x0000000000000001))
(assert (= var1053593 temp148_8))
(assert (= temp148_9 #x0000000000000001))
(assert (= var1053653
   (ite (bvslt ARGNAME_num_samples_NAMEEND temp148_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp148_10 #x0000000000000000))
(assert (= var1053653 temp148_10))
(assert (= temp148_11 #xffffffffffffffff))
(assert (= var1053664 temp148_11))
(assert (= temp148_12 #x0000000000000000))
(assert (= temp148_13 temp148_12))
(assert (= temp148_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp148_13)))
(assert (= temp148_15 #x0000000000000001))
(assert (= temp148_16 temp148_15))
(assert (= temp148_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp148_16)))
(assert (= temp148_18 #x0000000000000002))
(assert (= temp148_19 temp148_18))
(assert (= temp148_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp148_19)))
(assert (= temp148_21 #x0000000000000003))
(assert (= temp148_22 temp148_21))
(assert (= temp148_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp148_22)))
(assert (= temp148_24 #x0000000000000004))
(assert (= temp148_25 temp148_24))
(assert (= temp148_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp148_25)))
(assert (= temp148_27 #x0000000000000005))
(assert (= temp148_28 temp148_27))
(assert (= temp148_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp148_28)))
(assert (= temp148_30 #x0000000000000000))
(assert (= temp148_31
   (ite (bvslt var1053664 temp148_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
        var1053664)))
(assert (= temp148_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp148_31)))
(assert (= var1053663 temp148_32))
(assert (bvslt (ite (bvslt var1053664 temp148_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
            var1053664)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var1053668
   (ite (bvsle ARGNAME_num_samples_NAMEEND var1053663)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1053669 (bvor var1053668 ARGNAME_replacement_NAMEEND)))
(assert (= temp148_33 #x0000000000000001))
(assert (= var1053669 temp148_33))
(assert (= temp148_34 #x0000000001000000))
(assert (= var1053679
   (ite (bvsgt var1053663 temp148_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp148_35 #x0000000000000000))
(assert (= var1053679 temp148_35))
(assert (= temp148_36 #x0000000000000001))
(assert (= var1053691
   (ite (= ARGNAME_input_NAMEEND_DIM temp148_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp148_37 #x0000000000000000))
(assert (= var1053691 temp148_37))
(assert (= temp148_38 #x0000000000000000))
(assert (= var1049127 temp148_38))
(assert (= temp148_39 #x0000000000000000))
(assert (= temp148_40
   (ite (bvslt var1049127 temp148_39)
        (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
        var1049127)))
(assert (= temp148_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp148_40)))
(assert (= var1053718 temp148_41))
(assert (bvslt (ite (bvslt var1049127 temp148_39)
            (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
            var1049127)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp148_43 #x0000000000000002))
(assert (= temp148_42 temp148_43))
(assert (= temp148_44 #x0000000000000000))
(assert (= ARGNAME_replacement_NAMEEND temp148_44))
(assert (= temp148_45 #x0000000000000000))
(assert (= var2231831 temp148_45))
(assert (= temp148_46 #x0000000000000001))
(assert (= var1053916
   (ite (= ARGNAME_input_NAMEEND_DIM temp148_46)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp148_47 #x0000000000000000))
(assert (= var1053916 temp148_47))
(assert (= temp148_49 #x0000000000000001))
(assert (= temp148_48 temp148_49))
(assert (= temp148_50 #x0000000000000000))
(assert (= var3280407 temp148_50))
(assert (= temp148_51 #x0000000000000001))
(assert (= var1054130
   (ite (= ARGNAME_num_samples_NAMEEND temp148_51)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp148_52 #x0000000000000000))
(assert (= var1054130 temp148_52))
(model-add temp148_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp148_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp148_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp148_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp148_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp148_6 () (_ BitVec 64) #x0000000000000001)
(model-add var1053590 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






