(declare-fun temp225_2 () (_ BitVec 64))
(declare-fun temp225_1 () (_ BitVec 64))
(declare-fun temp225_4 () (_ BitVec 64))
(declare-fun temp225_3 () (_ BitVec 64))
(declare-fun temp225_5 () (_ BitVec 64))
(declare-fun temp225_6 () (_ BitVec 64))
(declare-fun var1053590 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp225_7 () (_ BitVec 64))
(declare-fun var1053593 () (_ BitVec 64))
(declare-fun temp225_8 () (_ BitVec 64))
(declare-fun temp225_9 () (_ BitVec 64))
(declare-fun ARGNAME_num_samples_NAMEEND () (_ BitVec 64))
(declare-fun var1053653 () (_ BitVec 64))
(declare-fun temp225_10 () (_ BitVec 64))
(declare-fun temp225_11 () (_ BitVec 64))
(declare-fun var1053664 () (_ BitVec 64))
(declare-fun temp225_12 () (_ BitVec 64))
(declare-fun temp225_13 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp225_14 () (_ BitVec 64))
(declare-fun temp225_15 () (_ BitVec 64))
(declare-fun temp225_16 () (_ BitVec 64))
(declare-fun temp225_17 () (_ BitVec 64))
(declare-fun temp225_18 () (_ BitVec 64))
(declare-fun temp225_19 () (_ BitVec 64))
(declare-fun temp225_20 () (_ BitVec 64))
(declare-fun temp225_21 () (_ BitVec 64))
(declare-fun temp225_22 () (_ BitVec 64))
(declare-fun temp225_23 () (_ BitVec 64))
(declare-fun temp225_24 () (_ BitVec 64))
(declare-fun temp225_25 () (_ BitVec 64))
(declare-fun temp225_26 () (_ BitVec 64))
(declare-fun temp225_27 () (_ BitVec 64))
(declare-fun temp225_28 () (_ BitVec 64))
(declare-fun temp225_29 () (_ BitVec 64))
(declare-fun temp225_30 () (_ BitVec 64))
(declare-fun temp225_31 () (_ BitVec 64))
(declare-fun temp225_32 () (_ BitVec 64))
(declare-fun var1053663 () (_ BitVec 64))
(declare-fun var1053668 () (_ BitVec 64))
(declare-fun ARGNAME_replacement_NAMEEND () (_ BitVec 64))
(declare-fun var1053669 () (_ BitVec 64))
(declare-fun temp225_33 () (_ BitVec 64))
(declare-fun temp225_34 () (_ BitVec 64))
(declare-fun var1053679 () (_ BitVec 64))
(declare-fun temp225_35 () (_ BitVec 64))
(declare-fun temp225_36 () (_ BitVec 64))
(declare-fun var1053691 () (_ BitVec 64))
(declare-fun temp225_37 () (_ BitVec 64))
(declare-fun temp225_38 () (_ BitVec 64))
(declare-fun var1049127 () (_ BitVec 64))
(declare-fun temp225_39 () (_ BitVec 64))
(declare-fun temp225_40 () (_ BitVec 64))
(declare-fun temp225_41 () (_ BitVec 64))
(declare-fun var1053718 () (_ BitVec 64))
(declare-fun temp225_43 () (_ BitVec 64))
(declare-fun temp225_42 () (_ BitVec 64))
(declare-fun temp225_44 () (_ BitVec 64))
(declare-fun temp225_45 () (_ BitVec 64))
(declare-fun var2166295 () (_ BitVec 64))
(declare-fun temp225_46 () (_ BitVec 64))
(declare-fun var1053916 () (_ BitVec 64))
(declare-fun temp225_47 () (_ BitVec 64))
(declare-fun temp225_49 () (_ BitVec 64))
(declare-fun temp225_48 () (_ BitVec 64))
(declare-fun temp225_50 () (_ BitVec 64))
(declare-fun var3214871 () (_ BitVec 64))
(declare-fun temp225_51 () (_ BitVec 64))
(declare-fun var1054130 () (_ BitVec 64))
(declare-fun temp225_52 () (_ BitVec 64))
(assert (= temp225_2 #x0000000000000000))
(assert (= temp225_1 temp225_2))
(assert (= temp225_4 #x0000000000000001))
(assert (= temp225_3 temp225_4))
(assert (= temp225_5 #x0000000000000000))
(assert (= var1053590
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp225_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp225_6 #x0000000000000001))
(assert (= var1053590 temp225_6))
(assert (= temp225_7 #x0000000000000003))
(assert (= var1053593
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp225_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp225_8 #x0000000000000001))
(assert (= var1053593 temp225_8))
(assert (= temp225_9 #x0000000000000001))
(assert (= var1053653
   (ite (bvslt ARGNAME_num_samples_NAMEEND temp225_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp225_10 #x0000000000000000))
(assert (= var1053653 temp225_10))
(assert (= temp225_11 #xffffffffffffffff))
(assert (= var1053664 temp225_11))
(assert (= temp225_12 #x0000000000000000))
(assert (= temp225_13 temp225_12))
(assert (= temp225_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp225_13)))
(assert (= temp225_15 #x0000000000000001))
(assert (= temp225_16 temp225_15))
(assert (= temp225_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp225_16)))
(assert (= temp225_18 #x0000000000000002))
(assert (= temp225_19 temp225_18))
(assert (= temp225_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp225_19)))
(assert (= temp225_21 #x0000000000000003))
(assert (= temp225_22 temp225_21))
(assert (= temp225_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp225_22)))
(assert (= temp225_24 #x0000000000000004))
(assert (= temp225_25 temp225_24))
(assert (= temp225_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp225_25)))
(assert (= temp225_27 #x0000000000000005))
(assert (= temp225_28 temp225_27))
(assert (= temp225_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp225_28)))
(assert (= temp225_30 #x0000000000000000))
(assert (= temp225_31
   (ite (bvslt var1053664 temp225_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
        var1053664)))
(assert (= temp225_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp225_31)))
(assert (= var1053663 temp225_32))
(assert (bvslt (ite (bvslt var1053664 temp225_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
            var1053664)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var1053668
   (ite (bvsle ARGNAME_num_samples_NAMEEND var1053663)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1053669 (bvor var1053668 ARGNAME_replacement_NAMEEND)))
(assert (= temp225_33 #x0000000000000001))
(assert (= var1053669 temp225_33))
(assert (= temp225_34 #x0000000001000000))
(assert (= var1053679
   (ite (bvsgt var1053663 temp225_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp225_35 #x0000000000000000))
(assert (= var1053679 temp225_35))
(assert (= temp225_36 #x0000000000000001))
(assert (= var1053691
   (ite (= ARGNAME_input_NAMEEND_DIM temp225_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp225_37 #x0000000000000000))
(assert (= var1053691 temp225_37))
(assert (= temp225_38 #x0000000000000000))
(assert (= var1049127 temp225_38))
(assert (= temp225_39 #x0000000000000000))
(assert (= temp225_40
   (ite (bvslt var1049127 temp225_39)
        (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
        var1049127)))
(assert (= temp225_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp225_40)))
(assert (= var1053718 temp225_41))
(assert (bvslt (ite (bvslt var1049127 temp225_39)
            (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
            var1049127)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp225_43 #x0000000000000002))
(assert (= temp225_42 temp225_43))
(assert (= temp225_44 #x0000000000000000))
(assert (= ARGNAME_replacement_NAMEEND temp225_44))
(assert (= temp225_45 #x0000000000000000))
(assert (= var2166295 temp225_45))
(assert (= temp225_46 #x0000000000000001))
(assert (= var1053916
   (ite (= ARGNAME_input_NAMEEND_DIM temp225_46)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp225_47 #x0000000000000000))
(assert (= var1053916 temp225_47))
(assert (= temp225_49 #x0000000000000001))
(assert (= temp225_48 temp225_49))
(assert (= temp225_50 #x0000000000000000))
(assert (= var3214871 temp225_50))
(assert (= temp225_51 #x0000000000000001))
(assert (= var1054130
   (ite (= ARGNAME_num_samples_NAMEEND temp225_51)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp225_52 #x0000000000000000))
(assert (= var1054130 temp225_52))
(model-add temp225_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp225_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp225_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp225_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp225_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp225_6 () (_ BitVec 64) #x0000000000000001)
(model-add var1053590 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






