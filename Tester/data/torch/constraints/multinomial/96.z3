(declare-fun temp192_2 () (_ BitVec 64))
(declare-fun temp192_1 () (_ BitVec 64))
(declare-fun temp192_4 () (_ BitVec 64))
(declare-fun temp192_3 () (_ BitVec 64))
(declare-fun temp192_5 () (_ BitVec 64))
(declare-fun temp192_6 () (_ BitVec 64))
(declare-fun var1053590 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp192_7 () (_ BitVec 64))
(declare-fun var1053593 () (_ BitVec 64))
(declare-fun temp192_8 () (_ BitVec 64))
(declare-fun temp192_9 () (_ BitVec 64))
(declare-fun ARGNAME_num_samples_NAMEEND () (_ BitVec 64))
(declare-fun var1053653 () (_ BitVec 64))
(declare-fun temp192_10 () (_ BitVec 64))
(declare-fun temp192_11 () (_ BitVec 64))
(declare-fun var1053664 () (_ BitVec 64))
(declare-fun temp192_12 () (_ BitVec 64))
(declare-fun temp192_13 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp192_14 () (_ BitVec 64))
(declare-fun temp192_15 () (_ BitVec 64))
(declare-fun temp192_16 () (_ BitVec 64))
(declare-fun temp192_17 () (_ BitVec 64))
(declare-fun temp192_18 () (_ BitVec 64))
(declare-fun temp192_19 () (_ BitVec 64))
(declare-fun temp192_20 () (_ BitVec 64))
(declare-fun temp192_21 () (_ BitVec 64))
(declare-fun temp192_22 () (_ BitVec 64))
(declare-fun temp192_23 () (_ BitVec 64))
(declare-fun temp192_24 () (_ BitVec 64))
(declare-fun temp192_25 () (_ BitVec 64))
(declare-fun temp192_26 () (_ BitVec 64))
(declare-fun temp192_27 () (_ BitVec 64))
(declare-fun temp192_28 () (_ BitVec 64))
(declare-fun temp192_29 () (_ BitVec 64))
(declare-fun temp192_30 () (_ BitVec 64))
(declare-fun temp192_31 () (_ BitVec 64))
(declare-fun temp192_32 () (_ BitVec 64))
(declare-fun var1053663 () (_ BitVec 64))
(declare-fun var1053668 () (_ BitVec 64))
(declare-fun ARGNAME_replacement_NAMEEND () (_ BitVec 64))
(declare-fun var1053669 () (_ BitVec 64))
(declare-fun temp192_33 () (_ BitVec 64))
(declare-fun temp192_34 () (_ BitVec 64))
(declare-fun var1053679 () (_ BitVec 64))
(declare-fun temp192_35 () (_ BitVec 64))
(declare-fun temp192_36 () (_ BitVec 64))
(declare-fun var1053691 () (_ BitVec 64))
(declare-fun temp192_37 () (_ BitVec 64))
(declare-fun temp192_38 () (_ BitVec 64))
(declare-fun var1049127 () (_ BitVec 64))
(declare-fun temp192_39 () (_ BitVec 64))
(declare-fun temp192_40 () (_ BitVec 64))
(declare-fun temp192_41 () (_ BitVec 64))
(declare-fun var1053718 () (_ BitVec 64))
(declare-fun temp192_43 () (_ BitVec 64))
(declare-fun temp192_42 () (_ BitVec 64))
(declare-fun temp192_44 () (_ BitVec 64))
(declare-fun temp192_45 () (_ BitVec 64))
(declare-fun var2231831 () (_ BitVec 64))
(declare-fun temp192_46 () (_ BitVec 64))
(declare-fun var1053916 () (_ BitVec 64))
(declare-fun temp192_47 () (_ BitVec 64))
(declare-fun temp192_49 () (_ BitVec 64))
(declare-fun temp192_48 () (_ BitVec 64))
(declare-fun temp192_50 () (_ BitVec 64))
(declare-fun var3280407 () (_ BitVec 64))
(declare-fun temp192_51 () (_ BitVec 64))
(declare-fun var1054130 () (_ BitVec 64))
(declare-fun temp192_52 () (_ BitVec 64))
(assert (= temp192_2 #x0000000000000000))
(assert (= temp192_1 temp192_2))
(assert (= temp192_4 #x0000000000000001))
(assert (= temp192_3 temp192_4))
(assert (= temp192_5 #x0000000000000000))
(assert (= var1053590
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp192_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp192_6 #x0000000000000001))
(assert (= var1053590 temp192_6))
(assert (= temp192_7 #x0000000000000003))
(assert (= var1053593
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp192_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp192_8 #x0000000000000001))
(assert (= var1053593 temp192_8))
(assert (= temp192_9 #x0000000000000001))
(assert (= var1053653
   (ite (bvslt ARGNAME_num_samples_NAMEEND temp192_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp192_10 #x0000000000000000))
(assert (= var1053653 temp192_10))
(assert (= temp192_11 #xffffffffffffffff))
(assert (= var1053664 temp192_11))
(assert (= temp192_12 #x0000000000000000))
(assert (= temp192_13 temp192_12))
(assert (= temp192_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp192_13)))
(assert (= temp192_15 #x0000000000000001))
(assert (= temp192_16 temp192_15))
(assert (= temp192_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp192_16)))
(assert (= temp192_18 #x0000000000000002))
(assert (= temp192_19 temp192_18))
(assert (= temp192_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp192_19)))
(assert (= temp192_21 #x0000000000000003))
(assert (= temp192_22 temp192_21))
(assert (= temp192_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp192_22)))
(assert (= temp192_24 #x0000000000000004))
(assert (= temp192_25 temp192_24))
(assert (= temp192_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp192_25)))
(assert (= temp192_27 #x0000000000000005))
(assert (= temp192_28 temp192_27))
(assert (= temp192_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp192_28)))
(assert (= temp192_30 #x0000000000000000))
(assert (= temp192_31
   (ite (bvslt var1053664 temp192_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
        var1053664)))
(assert (= temp192_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp192_31)))
(assert (= var1053663 temp192_32))
(assert (bvslt (ite (bvslt var1053664 temp192_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
            var1053664)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var1053668
   (ite (bvsle ARGNAME_num_samples_NAMEEND var1053663)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1053669 (bvor var1053668 ARGNAME_replacement_NAMEEND)))
(assert (= temp192_33 #x0000000000000001))
(assert (= var1053669 temp192_33))
(assert (= temp192_34 #x0000000001000000))
(assert (= var1053679
   (ite (bvsgt var1053663 temp192_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp192_35 #x0000000000000000))
(assert (= var1053679 temp192_35))
(assert (= temp192_36 #x0000000000000001))
(assert (= var1053691
   (ite (= ARGNAME_input_NAMEEND_DIM temp192_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp192_37 #x0000000000000000))
(assert (= var1053691 temp192_37))
(assert (= temp192_38 #x0000000000000000))
(assert (= var1049127 temp192_38))
(assert (= temp192_39 #x0000000000000000))
(assert (= temp192_40
   (ite (bvslt var1049127 temp192_39)
        (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
        var1049127)))
(assert (= temp192_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp192_40)))
(assert (= var1053718 temp192_41))
(assert (bvslt (ite (bvslt var1049127 temp192_39)
            (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
            var1049127)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp192_43 #x0000000000000002))
(assert (= temp192_42 temp192_43))
(assert (= temp192_44 #x0000000000000000))
(assert (= ARGNAME_replacement_NAMEEND temp192_44))
(assert (= temp192_45 #x0000000000000000))
(assert (= var2231831 temp192_45))
(assert (= temp192_46 #x0000000000000001))
(assert (= var1053916
   (ite (= ARGNAME_input_NAMEEND_DIM temp192_46)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp192_47 #x0000000000000000))
(assert (= var1053916 temp192_47))
(assert (= temp192_49 #x0000000000000001))
(assert (= temp192_48 temp192_49))
(assert (= temp192_50 #x0000000000000000))
(assert (= var3280407 temp192_50))
(assert (= temp192_51 #x0000000000000001))
(assert (= var1054130
   (ite (= ARGNAME_num_samples_NAMEEND temp192_51)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp192_52 #x0000000000000000))
(assert (= var1054130 temp192_52))
(model-add temp192_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp192_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp192_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp192_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp192_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp192_6 () (_ BitVec 64) #x0000000000000001)
(model-add var1053590 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






