(declare-fun temp176_2 () (_ BitVec 64))
(declare-fun temp176_1 () (_ BitVec 64))
(declare-fun temp176_4 () (_ BitVec 64))
(declare-fun temp176_3 () (_ BitVec 64))
(declare-fun temp176_5 () (_ BitVec 64))
(declare-fun temp176_6 () (_ BitVec 64))
(declare-fun var1053590 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp176_7 () (_ BitVec 64))
(declare-fun var1053593 () (_ BitVec 64))
(declare-fun temp176_8 () (_ BitVec 64))
(declare-fun temp176_9 () (_ BitVec 64))
(declare-fun ARGNAME_num_samples_NAMEEND () (_ BitVec 64))
(declare-fun var1053653 () (_ BitVec 64))
(declare-fun temp176_10 () (_ BitVec 64))
(declare-fun temp176_11 () (_ BitVec 64))
(declare-fun var1053664 () (_ BitVec 64))
(declare-fun temp176_12 () (_ BitVec 64))
(declare-fun temp176_13 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp176_14 () (_ BitVec 64))
(declare-fun temp176_15 () (_ BitVec 64))
(declare-fun temp176_16 () (_ BitVec 64))
(declare-fun temp176_17 () (_ BitVec 64))
(declare-fun temp176_18 () (_ BitVec 64))
(declare-fun temp176_19 () (_ BitVec 64))
(declare-fun temp176_20 () (_ BitVec 64))
(declare-fun temp176_21 () (_ BitVec 64))
(declare-fun temp176_22 () (_ BitVec 64))
(declare-fun temp176_23 () (_ BitVec 64))
(declare-fun temp176_24 () (_ BitVec 64))
(declare-fun temp176_25 () (_ BitVec 64))
(declare-fun temp176_26 () (_ BitVec 64))
(declare-fun temp176_27 () (_ BitVec 64))
(declare-fun temp176_28 () (_ BitVec 64))
(declare-fun temp176_29 () (_ BitVec 64))
(declare-fun temp176_30 () (_ BitVec 64))
(declare-fun temp176_31 () (_ BitVec 64))
(declare-fun temp176_32 () (_ BitVec 64))
(declare-fun var1053663 () (_ BitVec 64))
(declare-fun var1053668 () (_ BitVec 64))
(declare-fun ARGNAME_replacement_NAMEEND () (_ BitVec 64))
(declare-fun var1053669 () (_ BitVec 64))
(declare-fun temp176_33 () (_ BitVec 64))
(declare-fun temp176_34 () (_ BitVec 64))
(declare-fun var1053679 () (_ BitVec 64))
(declare-fun temp176_35 () (_ BitVec 64))
(declare-fun temp176_36 () (_ BitVec 64))
(declare-fun var1053691 () (_ BitVec 64))
(declare-fun temp176_37 () (_ BitVec 64))
(declare-fun temp176_38 () (_ BitVec 64))
(declare-fun var1049127 () (_ BitVec 64))
(declare-fun temp176_39 () (_ BitVec 64))
(declare-fun temp176_40 () (_ BitVec 64))
(declare-fun temp176_41 () (_ BitVec 64))
(declare-fun var1053718 () (_ BitVec 64))
(declare-fun temp176_43 () (_ BitVec 64))
(declare-fun temp176_42 () (_ BitVec 64))
(declare-fun temp176_44 () (_ BitVec 64))
(declare-fun temp176_45 () (_ BitVec 64))
(declare-fun var2231831 () (_ BitVec 64))
(declare-fun temp176_46 () (_ BitVec 64))
(declare-fun var1053916 () (_ BitVec 64))
(declare-fun temp176_47 () (_ BitVec 64))
(declare-fun temp176_49 () (_ BitVec 64))
(declare-fun temp176_48 () (_ BitVec 64))
(declare-fun temp176_50 () (_ BitVec 64))
(declare-fun var3280407 () (_ BitVec 64))
(declare-fun temp176_51 () (_ BitVec 64))
(declare-fun var1054130 () (_ BitVec 64))
(declare-fun temp176_52 () (_ BitVec 64))
(assert (= temp176_2 #x0000000000000000))
(assert (= temp176_1 temp176_2))
(assert (= temp176_4 #x0000000000000001))
(assert (= temp176_3 temp176_4))
(assert (= temp176_5 #x0000000000000000))
(assert (= var1053590
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp176_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp176_6 #x0000000000000001))
(assert (= var1053590 temp176_6))
(assert (= temp176_7 #x0000000000000003))
(assert (= var1053593
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp176_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp176_8 #x0000000000000001))
(assert (= var1053593 temp176_8))
(assert (= temp176_9 #x0000000000000001))
(assert (= var1053653
   (ite (bvslt ARGNAME_num_samples_NAMEEND temp176_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp176_10 #x0000000000000000))
(assert (= var1053653 temp176_10))
(assert (= temp176_11 #xffffffffffffffff))
(assert (= var1053664 temp176_11))
(assert (= temp176_12 #x0000000000000000))
(assert (= temp176_13 temp176_12))
(assert (= temp176_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp176_13)))
(assert (= temp176_15 #x0000000000000001))
(assert (= temp176_16 temp176_15))
(assert (= temp176_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp176_16)))
(assert (= temp176_18 #x0000000000000002))
(assert (= temp176_19 temp176_18))
(assert (= temp176_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp176_19)))
(assert (= temp176_21 #x0000000000000003))
(assert (= temp176_22 temp176_21))
(assert (= temp176_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp176_22)))
(assert (= temp176_24 #x0000000000000004))
(assert (= temp176_25 temp176_24))
(assert (= temp176_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp176_25)))
(assert (= temp176_27 #x0000000000000005))
(assert (= temp176_28 temp176_27))
(assert (= temp176_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp176_28)))
(assert (= temp176_30 #x0000000000000000))
(assert (= temp176_31
   (ite (bvslt var1053664 temp176_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
        var1053664)))
(assert (= temp176_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp176_31)))
(assert (= var1053663 temp176_32))
(assert (bvslt (ite (bvslt var1053664 temp176_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
            var1053664)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var1053668
   (ite (bvsle ARGNAME_num_samples_NAMEEND var1053663)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1053669 (bvor var1053668 ARGNAME_replacement_NAMEEND)))
(assert (= temp176_33 #x0000000000000001))
(assert (= var1053669 temp176_33))
(assert (= temp176_34 #x0000000001000000))
(assert (= var1053679
   (ite (bvsgt var1053663 temp176_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp176_35 #x0000000000000000))
(assert (= var1053679 temp176_35))
(assert (= temp176_36 #x0000000000000001))
(assert (= var1053691
   (ite (= ARGNAME_input_NAMEEND_DIM temp176_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp176_37 #x0000000000000000))
(assert (= var1053691 temp176_37))
(assert (= temp176_38 #x0000000000000000))
(assert (= var1049127 temp176_38))
(assert (= temp176_39 #x0000000000000000))
(assert (= temp176_40
   (ite (bvslt var1049127 temp176_39)
        (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
        var1049127)))
(assert (= temp176_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp176_40)))
(assert (= var1053718 temp176_41))
(assert (bvslt (ite (bvslt var1049127 temp176_39)
            (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
            var1049127)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp176_43 #x0000000000000002))
(assert (= temp176_42 temp176_43))
(assert (= temp176_44 #x0000000000000000))
(assert (= ARGNAME_replacement_NAMEEND temp176_44))
(assert (= temp176_45 #x0000000000000000))
(assert (= var2231831 temp176_45))
(assert (= temp176_46 #x0000000000000001))
(assert (= var1053916
   (ite (= ARGNAME_input_NAMEEND_DIM temp176_46)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp176_47 #x0000000000000000))
(assert (= var1053916 temp176_47))
(assert (= temp176_49 #x0000000000000001))
(assert (= temp176_48 temp176_49))
(assert (= temp176_50 #x0000000000000000))
(assert (= var3280407 temp176_50))
(assert (= temp176_51 #x0000000000000001))
(assert (= var1054130
   (ite (= ARGNAME_num_samples_NAMEEND temp176_51)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp176_52 #x0000000000000000))
(assert (= var1054130 temp176_52))
(model-add temp176_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp176_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp176_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp176_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp176_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp176_6 () (_ BitVec 64) #x0000000000000001)
(model-add var1053590 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






