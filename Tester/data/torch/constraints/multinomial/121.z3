(declare-fun temp241_2 () (_ BitVec 64))
(declare-fun temp241_1 () (_ BitVec 64))
(declare-fun temp241_4 () (_ BitVec 64))
(declare-fun temp241_3 () (_ BitVec 64))
(declare-fun temp241_5 () (_ BitVec 64))
(declare-fun temp241_6 () (_ BitVec 64))
(declare-fun var1053590 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp241_7 () (_ BitVec 64))
(declare-fun var1053593 () (_ BitVec 64))
(declare-fun temp241_8 () (_ BitVec 64))
(declare-fun temp241_9 () (_ BitVec 64))
(declare-fun ARGNAME_num_samples_NAMEEND () (_ BitVec 64))
(declare-fun var1053653 () (_ BitVec 64))
(declare-fun temp241_10 () (_ BitVec 64))
(declare-fun temp241_11 () (_ BitVec 64))
(declare-fun var1053664 () (_ BitVec 64))
(declare-fun temp241_12 () (_ BitVec 64))
(declare-fun temp241_13 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp241_14 () (_ BitVec 64))
(declare-fun temp241_15 () (_ BitVec 64))
(declare-fun temp241_16 () (_ BitVec 64))
(declare-fun temp241_17 () (_ BitVec 64))
(declare-fun temp241_18 () (_ BitVec 64))
(declare-fun temp241_19 () (_ BitVec 64))
(declare-fun temp241_20 () (_ BitVec 64))
(declare-fun temp241_21 () (_ BitVec 64))
(declare-fun temp241_22 () (_ BitVec 64))
(declare-fun temp241_23 () (_ BitVec 64))
(declare-fun temp241_24 () (_ BitVec 64))
(declare-fun temp241_25 () (_ BitVec 64))
(declare-fun temp241_26 () (_ BitVec 64))
(declare-fun temp241_27 () (_ BitVec 64))
(declare-fun temp241_28 () (_ BitVec 64))
(declare-fun temp241_29 () (_ BitVec 64))
(declare-fun temp241_30 () (_ BitVec 64))
(declare-fun temp241_31 () (_ BitVec 64))
(declare-fun temp241_32 () (_ BitVec 64))
(declare-fun var1053663 () (_ BitVec 64))
(declare-fun var1053668 () (_ BitVec 64))
(declare-fun ARGNAME_replacement_NAMEEND () (_ BitVec 64))
(declare-fun var1053669 () (_ BitVec 64))
(declare-fun temp241_33 () (_ BitVec 64))
(declare-fun temp241_34 () (_ BitVec 64))
(declare-fun var1053679 () (_ BitVec 64))
(declare-fun temp241_35 () (_ BitVec 64))
(declare-fun temp241_36 () (_ BitVec 64))
(declare-fun var1053691 () (_ BitVec 64))
(declare-fun temp241_37 () (_ BitVec 64))
(declare-fun temp241_38 () (_ BitVec 64))
(declare-fun var1049127 () (_ BitVec 64))
(declare-fun temp241_39 () (_ BitVec 64))
(declare-fun temp241_40 () (_ BitVec 64))
(declare-fun temp241_41 () (_ BitVec 64))
(declare-fun var1053718 () (_ BitVec 64))
(declare-fun temp241_43 () (_ BitVec 64))
(declare-fun temp241_42 () (_ BitVec 64))
(declare-fun temp241_44 () (_ BitVec 64))
(declare-fun temp241_45 () (_ BitVec 64))
(declare-fun var2166295 () (_ BitVec 64))
(declare-fun temp241_46 () (_ BitVec 64))
(declare-fun var1053916 () (_ BitVec 64))
(declare-fun temp241_47 () (_ BitVec 64))
(declare-fun temp241_49 () (_ BitVec 64))
(declare-fun temp241_48 () (_ BitVec 64))
(declare-fun temp241_50 () (_ BitVec 64))
(declare-fun var3214871 () (_ BitVec 64))
(declare-fun temp241_51 () (_ BitVec 64))
(declare-fun var1054130 () (_ BitVec 64))
(declare-fun temp241_52 () (_ BitVec 64))
(assert (= temp241_2 #x0000000000000000))
(assert (= temp241_1 temp241_2))
(assert (= temp241_4 #x0000000000000001))
(assert (= temp241_3 temp241_4))
(assert (= temp241_5 #x0000000000000000))
(assert (= var1053590
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp241_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp241_6 #x0000000000000001))
(assert (= var1053590 temp241_6))
(assert (= temp241_7 #x0000000000000003))
(assert (= var1053593
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp241_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp241_8 #x0000000000000001))
(assert (= var1053593 temp241_8))
(assert (= temp241_9 #x0000000000000001))
(assert (= var1053653
   (ite (bvslt ARGNAME_num_samples_NAMEEND temp241_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp241_10 #x0000000000000000))
(assert (= var1053653 temp241_10))
(assert (= temp241_11 #xffffffffffffffff))
(assert (= var1053664 temp241_11))
(assert (= temp241_12 #x0000000000000000))
(assert (= temp241_13 temp241_12))
(assert (= temp241_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp241_13)))
(assert (= temp241_15 #x0000000000000001))
(assert (= temp241_16 temp241_15))
(assert (= temp241_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp241_16)))
(assert (= temp241_18 #x0000000000000002))
(assert (= temp241_19 temp241_18))
(assert (= temp241_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp241_19)))
(assert (= temp241_21 #x0000000000000003))
(assert (= temp241_22 temp241_21))
(assert (= temp241_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp241_22)))
(assert (= temp241_24 #x0000000000000004))
(assert (= temp241_25 temp241_24))
(assert (= temp241_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp241_25)))
(assert (= temp241_27 #x0000000000000005))
(assert (= temp241_28 temp241_27))
(assert (= temp241_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp241_28)))
(assert (= temp241_30 #x0000000000000000))
(assert (= temp241_31
   (ite (bvslt var1053664 temp241_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
        var1053664)))
(assert (= temp241_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp241_31)))
(assert (= var1053663 temp241_32))
(assert (bvslt (ite (bvslt var1053664 temp241_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
            var1053664)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var1053668
   (ite (bvsle ARGNAME_num_samples_NAMEEND var1053663)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1053669 (bvor var1053668 ARGNAME_replacement_NAMEEND)))
(assert (= temp241_33 #x0000000000000001))
(assert (= var1053669 temp241_33))
(assert (= temp241_34 #x0000000001000000))
(assert (= var1053679
   (ite (bvsgt var1053663 temp241_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp241_35 #x0000000000000000))
(assert (= var1053679 temp241_35))
(assert (= temp241_36 #x0000000000000001))
(assert (= var1053691
   (ite (= ARGNAME_input_NAMEEND_DIM temp241_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp241_37 #x0000000000000000))
(assert (= var1053691 temp241_37))
(assert (= temp241_38 #x0000000000000000))
(assert (= var1049127 temp241_38))
(assert (= temp241_39 #x0000000000000000))
(assert (= temp241_40
   (ite (bvslt var1049127 temp241_39)
        (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
        var1049127)))
(assert (= temp241_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp241_40)))
(assert (= var1053718 temp241_41))
(assert (bvslt (ite (bvslt var1049127 temp241_39)
            (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
            var1049127)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp241_43 #x0000000000000002))
(assert (= temp241_42 temp241_43))
(assert (= temp241_44 #x0000000000000000))
(assert (= ARGNAME_replacement_NAMEEND temp241_44))
(assert (= temp241_45 #x0000000000000000))
(assert (= var2166295 temp241_45))
(assert (= temp241_46 #x0000000000000001))
(assert (= var1053916
   (ite (= ARGNAME_input_NAMEEND_DIM temp241_46)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp241_47 #x0000000000000000))
(assert (= var1053916 temp241_47))
(assert (= temp241_49 #x0000000000000001))
(assert (= temp241_48 temp241_49))
(assert (= temp241_50 #x0000000000000000))
(assert (= var3214871 temp241_50))
(assert (= temp241_51 #x0000000000000001))
(assert (= var1054130
   (ite (= ARGNAME_num_samples_NAMEEND temp241_51)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp241_52 #x0000000000000000))
(assert (= var1054130 temp241_52))
(model-add temp241_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp241_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp241_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp241_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp241_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp241_6 () (_ BitVec 64) #x0000000000000001)
(model-add var1053590 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






