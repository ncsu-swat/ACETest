(declare-fun temp256_2 () (_ BitVec 64))
(declare-fun temp256_1 () (_ BitVec 64))
(declare-fun temp256_4 () (_ BitVec 64))
(declare-fun temp256_3 () (_ BitVec 64))
(declare-fun temp256_5 () (_ BitVec 64))
(declare-fun temp256_6 () (_ BitVec 64))
(declare-fun var1053590 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp256_7 () (_ BitVec 64))
(declare-fun var1053593 () (_ BitVec 64))
(declare-fun temp256_8 () (_ BitVec 64))
(declare-fun temp256_9 () (_ BitVec 64))
(declare-fun ARGNAME_num_samples_NAMEEND () (_ BitVec 64))
(declare-fun var1053653 () (_ BitVec 64))
(declare-fun temp256_10 () (_ BitVec 64))
(declare-fun temp256_11 () (_ BitVec 64))
(declare-fun var1053664 () (_ BitVec 64))
(declare-fun temp256_12 () (_ BitVec 64))
(declare-fun temp256_13 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp256_14 () (_ BitVec 64))
(declare-fun temp256_15 () (_ BitVec 64))
(declare-fun temp256_16 () (_ BitVec 64))
(declare-fun temp256_17 () (_ BitVec 64))
(declare-fun temp256_18 () (_ BitVec 64))
(declare-fun temp256_19 () (_ BitVec 64))
(declare-fun temp256_20 () (_ BitVec 64))
(declare-fun temp256_21 () (_ BitVec 64))
(declare-fun temp256_22 () (_ BitVec 64))
(declare-fun temp256_23 () (_ BitVec 64))
(declare-fun temp256_24 () (_ BitVec 64))
(declare-fun temp256_25 () (_ BitVec 64))
(declare-fun temp256_26 () (_ BitVec 64))
(declare-fun temp256_27 () (_ BitVec 64))
(declare-fun temp256_28 () (_ BitVec 64))
(declare-fun temp256_29 () (_ BitVec 64))
(declare-fun temp256_30 () (_ BitVec 64))
(declare-fun temp256_31 () (_ BitVec 64))
(declare-fun temp256_32 () (_ BitVec 64))
(declare-fun var1053663 () (_ BitVec 64))
(declare-fun var1053668 () (_ BitVec 64))
(declare-fun ARGNAME_replacement_NAMEEND () (_ BitVec 64))
(declare-fun var1053669 () (_ BitVec 64))
(declare-fun temp256_33 () (_ BitVec 64))
(declare-fun temp256_34 () (_ BitVec 64))
(declare-fun var1053679 () (_ BitVec 64))
(declare-fun temp256_35 () (_ BitVec 64))
(declare-fun temp256_36 () (_ BitVec 64))
(declare-fun var1053691 () (_ BitVec 64))
(declare-fun temp256_37 () (_ BitVec 64))
(declare-fun temp256_38 () (_ BitVec 64))
(declare-fun var1049127 () (_ BitVec 64))
(declare-fun temp256_39 () (_ BitVec 64))
(declare-fun temp256_40 () (_ BitVec 64))
(declare-fun temp256_41 () (_ BitVec 64))
(declare-fun var1053718 () (_ BitVec 64))
(declare-fun temp256_43 () (_ BitVec 64))
(declare-fun temp256_42 () (_ BitVec 64))
(declare-fun temp256_44 () (_ BitVec 64))
(declare-fun temp256_45 () (_ BitVec 64))
(declare-fun var2166295 () (_ BitVec 64))
(declare-fun temp256_46 () (_ BitVec 64))
(declare-fun var1053916 () (_ BitVec 64))
(declare-fun temp256_47 () (_ BitVec 64))
(declare-fun temp256_49 () (_ BitVec 64))
(declare-fun temp256_48 () (_ BitVec 64))
(declare-fun temp256_50 () (_ BitVec 64))
(declare-fun var3214871 () (_ BitVec 64))
(declare-fun temp256_51 () (_ BitVec 64))
(declare-fun var1054130 () (_ BitVec 64))
(declare-fun temp256_52 () (_ BitVec 64))
(declare-fun temp256_54 () (_ BitVec 64))
(declare-fun temp256_53 () (_ BitVec 64))
(assert (= temp256_2 #x0000000000000000))
(assert (= temp256_1 temp256_2))
(assert (= temp256_4 #x0000000000000001))
(assert (= temp256_3 temp256_4))
(assert (= temp256_5 #x0000000000000000))
(assert (= var1053590
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp256_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp256_6 #x0000000000000001))
(assert (= var1053590 temp256_6))
(assert (= temp256_7 #x0000000000000003))
(assert (= var1053593
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp256_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp256_8 #x0000000000000001))
(assert (= var1053593 temp256_8))
(assert (= temp256_9 #x0000000000000001))
(assert (= var1053653
   (ite (bvslt ARGNAME_num_samples_NAMEEND temp256_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp256_10 #x0000000000000000))
(assert (= var1053653 temp256_10))
(assert (= temp256_11 #xffffffffffffffff))
(assert (= var1053664 temp256_11))
(assert (= temp256_12 #x0000000000000000))
(assert (= temp256_13 temp256_12))
(assert (= temp256_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp256_13)))
(assert (= temp256_15 #x0000000000000001))
(assert (= temp256_16 temp256_15))
(assert (= temp256_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp256_16)))
(assert (= temp256_18 #x0000000000000002))
(assert (= temp256_19 temp256_18))
(assert (= temp256_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp256_19)))
(assert (= temp256_21 #x0000000000000003))
(assert (= temp256_22 temp256_21))
(assert (= temp256_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp256_22)))
(assert (= temp256_24 #x0000000000000004))
(assert (= temp256_25 temp256_24))
(assert (= temp256_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp256_25)))
(assert (= temp256_27 #x0000000000000005))
(assert (= temp256_28 temp256_27))
(assert (= temp256_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp256_28)))
(assert (= temp256_30 #x0000000000000000))
(assert (= temp256_31
   (ite (bvslt var1053664 temp256_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
        var1053664)))
(assert (= temp256_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp256_31)))
(assert (= var1053663 temp256_32))
(assert (bvslt (ite (bvslt var1053664 temp256_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
            var1053664)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var1053668
   (ite (bvsle ARGNAME_num_samples_NAMEEND var1053663)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1053669 (bvor var1053668 ARGNAME_replacement_NAMEEND)))
(assert (= temp256_33 #x0000000000000001))
(assert (= var1053669 temp256_33))
(assert (= temp256_34 #x0000000001000000))
(assert (= var1053679
   (ite (bvsgt var1053663 temp256_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp256_35 #x0000000000000000))
(assert (= var1053679 temp256_35))
(assert (= temp256_36 #x0000000000000001))
(assert (= var1053691
   (ite (= ARGNAME_input_NAMEEND_DIM temp256_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp256_37 #x0000000000000000))
(assert (= var1053691 temp256_37))
(assert (= temp256_38 #x0000000000000000))
(assert (= var1049127 temp256_38))
(assert (= temp256_39 #x0000000000000000))
(assert (= temp256_40
   (ite (bvslt var1049127 temp256_39)
        (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
        var1049127)))
(assert (= temp256_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp256_40)))
(assert (= var1053718 temp256_41))
(assert (bvslt (ite (bvslt var1049127 temp256_39)
            (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
            var1049127)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp256_43 #x0000000000000002))
(assert (= temp256_42 temp256_43))
(assert (= temp256_44 #x0000000000000000))
(assert (= ARGNAME_replacement_NAMEEND temp256_44))
(assert (= temp256_45 #x0000000000000000))
(assert (= var2166295 temp256_45))
(assert (= temp256_46 #x0000000000000001))
(assert (= var1053916
   (ite (= ARGNAME_input_NAMEEND_DIM temp256_46)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp256_47 #x0000000000000000))
(assert (= var1053916 temp256_47))
(assert (= temp256_49 #x0000000000000001))
(assert (= temp256_48 temp256_49))
(assert (= temp256_50 #x0000000000000000))
(assert (= var3214871 temp256_50))
(assert (= temp256_51 #x0000000000000001))
(assert (= var1054130
   (ite (= ARGNAME_num_samples_NAMEEND temp256_51)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp256_52 #x0000000000000001))
(assert (= var1054130 temp256_52))
(assert (= temp256_54 #xffffffffffffffff))
(assert (= temp256_53 temp256_54))
(model-add temp256_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp256_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp256_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp256_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp256_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp256_6 () (_ BitVec 64) #x0000000000000001)
(model-add var1053590 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






