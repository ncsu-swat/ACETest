(declare-fun temp0_2 () (_ BitVec 64))
(declare-fun temp0_1 () (_ BitVec 64))
(declare-fun temp0_4 () (_ BitVec 64))
(declare-fun temp0_3 () (_ BitVec 64))
(declare-fun temp0_5 () (_ BitVec 64))
(declare-fun temp0_6 () (_ BitVec 64))
(declare-fun var1053590 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp0_7 () (_ BitVec 64))
(declare-fun var1053593 () (_ BitVec 64))
(declare-fun temp0_8 () (_ BitVec 64))
(declare-fun temp0_9 () (_ BitVec 64))
(declare-fun ARGNAME_num_samples_NAMEEND () (_ BitVec 64))
(declare-fun var1053653 () (_ BitVec 64))
(declare-fun temp0_10 () (_ BitVec 64))
(declare-fun temp0_11 () (_ BitVec 64))
(declare-fun var1053664 () (_ BitVec 64))
(declare-fun temp0_12 () (_ BitVec 64))
(declare-fun temp0_13 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_14 () (_ BitVec 64))
(declare-fun temp0_15 () (_ BitVec 64))
(declare-fun temp0_16 () (_ BitVec 64))
(declare-fun temp0_17 () (_ BitVec 64))
(declare-fun temp0_18 () (_ BitVec 64))
(declare-fun temp0_19 () (_ BitVec 64))
(declare-fun temp0_20 () (_ BitVec 64))
(declare-fun temp0_21 () (_ BitVec 64))
(declare-fun temp0_22 () (_ BitVec 64))
(declare-fun temp0_23 () (_ BitVec 64))
(declare-fun temp0_24 () (_ BitVec 64))
(declare-fun temp0_25 () (_ BitVec 64))
(declare-fun temp0_26 () (_ BitVec 64))
(declare-fun temp0_27 () (_ BitVec 64))
(declare-fun temp0_28 () (_ BitVec 64))
(declare-fun temp0_29 () (_ BitVec 64))
(declare-fun temp0_30 () (_ BitVec 64))
(declare-fun temp0_31 () (_ BitVec 64))
(declare-fun temp0_32 () (_ BitVec 64))
(declare-fun var1053663 () (_ BitVec 64))
(declare-fun var1053668 () (_ BitVec 64))
(declare-fun ARGNAME_replacement_NAMEEND () (_ BitVec 64))
(declare-fun var1053669 () (_ BitVec 64))
(declare-fun temp0_33 () (_ BitVec 64))
(declare-fun temp0_34 () (_ BitVec 64))
(declare-fun var1053679 () (_ BitVec 64))
(declare-fun temp0_35 () (_ BitVec 64))
(declare-fun temp0_36 () (_ BitVec 64))
(declare-fun var1053691 () (_ BitVec 64))
(declare-fun temp0_37 () (_ BitVec 64))
(declare-fun temp0_39 () (_ BitVec 64))
(declare-fun temp0_38 () (_ BitVec 64))
(assert (= temp0_2 #x0000000000000000))
(assert (= temp0_1 temp0_2))
(assert (= temp0_4 #x0000000000000001))
(assert (= temp0_3 temp0_4))
(assert (= temp0_5 #x0000000000000000))
(assert (= var1053590
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp0_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_6 #x0000000000000001))
(assert (= var1053590 temp0_6))
(assert (= temp0_7 #x0000000000000003))
(assert (= var1053593
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp0_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_8 #x0000000000000001))
(assert (= var1053593 temp0_8))
(assert (= temp0_9 #x0000000000000001))
(assert (= var1053653
   (ite (bvslt ARGNAME_num_samples_NAMEEND temp0_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_10 #x0000000000000000))
(assert (= var1053653 temp0_10))
(assert (= temp0_11 #xffffffffffffffff))
(assert (= var1053664 temp0_11))
(assert (= temp0_12 #x0000000000000000))
(assert (= temp0_13 temp0_12))
(assert (= temp0_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_13)))
(assert (= temp0_15 #x0000000000000001))
(assert (= temp0_16 temp0_15))
(assert (= temp0_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_16)))
(assert (= temp0_18 #x0000000000000002))
(assert (= temp0_19 temp0_18))
(assert (= temp0_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_19)))
(assert (= temp0_21 #x0000000000000003))
(assert (= temp0_22 temp0_21))
(assert (= temp0_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_22)))
(assert (= temp0_24 #x0000000000000004))
(assert (= temp0_25 temp0_24))
(assert (= temp0_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_25)))
(assert (= temp0_27 #x0000000000000005))
(assert (= temp0_28 temp0_27))
(assert (= temp0_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_28)))
(assert (= temp0_30 #x0000000000000000))
(assert (= temp0_31
   (ite (bvslt var1053664 temp0_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
        var1053664)))
(assert (= temp0_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_31)))
(assert (= var1053663 temp0_32))
(assert (bvslt (ite (bvslt var1053664 temp0_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
            var1053664)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var1053668
   (ite (bvsle ARGNAME_num_samples_NAMEEND var1053663)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1053669 (bvor var1053668 ARGNAME_replacement_NAMEEND)))
(assert (= temp0_33 #x0000000000000001))
(assert (= var1053669 temp0_33))
(assert (= temp0_34 #x0000000001000000))
(assert (= var1053679
   (ite (bvsgt var1053663 temp0_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_35 #x0000000000000000))
(assert (= var1053679 temp0_35))
(assert (= temp0_36 #x0000000000000001))
(assert (= var1053691
   (ite (= ARGNAME_input_NAMEEND_DIM temp0_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_37 #x0000000000000001))
(assert (= var1053691 temp0_37))
(assert (= temp0_39 #x0000000000000001))
(assert (= temp0_38 temp0_39))
(model-add temp0_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp0_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp0_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp0_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp0_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp0_6 () (_ BitVec 64) #x0000000000000001)
(model-add var1053590 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






