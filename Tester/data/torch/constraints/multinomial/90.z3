(declare-fun temp178_2 () (_ BitVec 64))
(declare-fun temp178_1 () (_ BitVec 64))
(declare-fun temp178_4 () (_ BitVec 64))
(declare-fun temp178_3 () (_ BitVec 64))
(declare-fun temp178_5 () (_ BitVec 64))
(declare-fun temp178_6 () (_ BitVec 64))
(declare-fun var1053590 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp178_7 () (_ BitVec 64))
(declare-fun var1053593 () (_ BitVec 64))
(declare-fun temp178_8 () (_ BitVec 64))
(declare-fun temp178_9 () (_ BitVec 64))
(declare-fun ARGNAME_num_samples_NAMEEND () (_ BitVec 64))
(declare-fun var1053653 () (_ BitVec 64))
(declare-fun temp178_10 () (_ BitVec 64))
(declare-fun temp178_11 () (_ BitVec 64))
(declare-fun var1053664 () (_ BitVec 64))
(declare-fun temp178_12 () (_ BitVec 64))
(declare-fun temp178_13 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp178_14 () (_ BitVec 64))
(declare-fun temp178_15 () (_ BitVec 64))
(declare-fun temp178_16 () (_ BitVec 64))
(declare-fun temp178_17 () (_ BitVec 64))
(declare-fun temp178_18 () (_ BitVec 64))
(declare-fun temp178_19 () (_ BitVec 64))
(declare-fun temp178_20 () (_ BitVec 64))
(declare-fun temp178_21 () (_ BitVec 64))
(declare-fun temp178_22 () (_ BitVec 64))
(declare-fun temp178_23 () (_ BitVec 64))
(declare-fun temp178_24 () (_ BitVec 64))
(declare-fun temp178_25 () (_ BitVec 64))
(declare-fun temp178_26 () (_ BitVec 64))
(declare-fun temp178_27 () (_ BitVec 64))
(declare-fun temp178_28 () (_ BitVec 64))
(declare-fun temp178_29 () (_ BitVec 64))
(declare-fun temp178_30 () (_ BitVec 64))
(declare-fun temp178_31 () (_ BitVec 64))
(declare-fun temp178_32 () (_ BitVec 64))
(declare-fun var1053663 () (_ BitVec 64))
(declare-fun var1053668 () (_ BitVec 64))
(declare-fun ARGNAME_replacement_NAMEEND () (_ BitVec 64))
(declare-fun var1053669 () (_ BitVec 64))
(declare-fun temp178_33 () (_ BitVec 64))
(declare-fun temp178_34 () (_ BitVec 64))
(declare-fun var1053679 () (_ BitVec 64))
(declare-fun temp178_35 () (_ BitVec 64))
(declare-fun temp178_36 () (_ BitVec 64))
(declare-fun var1053691 () (_ BitVec 64))
(declare-fun temp178_37 () (_ BitVec 64))
(declare-fun temp178_38 () (_ BitVec 64))
(declare-fun var1049127 () (_ BitVec 64))
(declare-fun temp178_39 () (_ BitVec 64))
(declare-fun temp178_40 () (_ BitVec 64))
(declare-fun temp178_41 () (_ BitVec 64))
(declare-fun var1053718 () (_ BitVec 64))
(declare-fun temp178_43 () (_ BitVec 64))
(declare-fun temp178_42 () (_ BitVec 64))
(declare-fun temp178_44 () (_ BitVec 64))
(declare-fun temp178_45 () (_ BitVec 64))
(declare-fun var2231831 () (_ BitVec 64))
(declare-fun temp178_46 () (_ BitVec 64))
(declare-fun var1053916 () (_ BitVec 64))
(declare-fun temp178_47 () (_ BitVec 64))
(declare-fun temp178_49 () (_ BitVec 64))
(declare-fun temp178_48 () (_ BitVec 64))
(declare-fun temp178_50 () (_ BitVec 64))
(declare-fun var3280407 () (_ BitVec 64))
(declare-fun temp178_51 () (_ BitVec 64))
(declare-fun var1054130 () (_ BitVec 64))
(declare-fun temp178_52 () (_ BitVec 64))
(assert (= temp178_2 #x0000000000000000))
(assert (= temp178_1 temp178_2))
(assert (= temp178_4 #x0000000000000001))
(assert (= temp178_3 temp178_4))
(assert (= temp178_5 #x0000000000000000))
(assert (= var1053590
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp178_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp178_6 #x0000000000000001))
(assert (= var1053590 temp178_6))
(assert (= temp178_7 #x0000000000000003))
(assert (= var1053593
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp178_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp178_8 #x0000000000000001))
(assert (= var1053593 temp178_8))
(assert (= temp178_9 #x0000000000000001))
(assert (= var1053653
   (ite (bvslt ARGNAME_num_samples_NAMEEND temp178_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp178_10 #x0000000000000000))
(assert (= var1053653 temp178_10))
(assert (= temp178_11 #xffffffffffffffff))
(assert (= var1053664 temp178_11))
(assert (= temp178_12 #x0000000000000000))
(assert (= temp178_13 temp178_12))
(assert (= temp178_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp178_13)))
(assert (= temp178_15 #x0000000000000001))
(assert (= temp178_16 temp178_15))
(assert (= temp178_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp178_16)))
(assert (= temp178_18 #x0000000000000002))
(assert (= temp178_19 temp178_18))
(assert (= temp178_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp178_19)))
(assert (= temp178_21 #x0000000000000003))
(assert (= temp178_22 temp178_21))
(assert (= temp178_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp178_22)))
(assert (= temp178_24 #x0000000000000004))
(assert (= temp178_25 temp178_24))
(assert (= temp178_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp178_25)))
(assert (= temp178_27 #x0000000000000005))
(assert (= temp178_28 temp178_27))
(assert (= temp178_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp178_28)))
(assert (= temp178_30 #x0000000000000000))
(assert (= temp178_31
   (ite (bvslt var1053664 temp178_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
        var1053664)))
(assert (= temp178_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp178_31)))
(assert (= var1053663 temp178_32))
(assert (bvslt (ite (bvslt var1053664 temp178_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
            var1053664)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var1053668
   (ite (bvsle ARGNAME_num_samples_NAMEEND var1053663)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1053669 (bvor var1053668 ARGNAME_replacement_NAMEEND)))
(assert (= temp178_33 #x0000000000000001))
(assert (= var1053669 temp178_33))
(assert (= temp178_34 #x0000000001000000))
(assert (= var1053679
   (ite (bvsgt var1053663 temp178_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp178_35 #x0000000000000000))
(assert (= var1053679 temp178_35))
(assert (= temp178_36 #x0000000000000001))
(assert (= var1053691
   (ite (= ARGNAME_input_NAMEEND_DIM temp178_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp178_37 #x0000000000000000))
(assert (= var1053691 temp178_37))
(assert (= temp178_38 #x0000000000000000))
(assert (= var1049127 temp178_38))
(assert (= temp178_39 #x0000000000000000))
(assert (= temp178_40
   (ite (bvslt var1049127 temp178_39)
        (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
        var1049127)))
(assert (= temp178_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp178_40)))
(assert (= var1053718 temp178_41))
(assert (bvslt (ite (bvslt var1049127 temp178_39)
            (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
            var1049127)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp178_43 #x0000000000000002))
(assert (= temp178_42 temp178_43))
(assert (= temp178_44 #x0000000000000000))
(assert (= ARGNAME_replacement_NAMEEND temp178_44))
(assert (= temp178_45 #x0000000000000000))
(assert (= var2231831 temp178_45))
(assert (= temp178_46 #x0000000000000001))
(assert (= var1053916
   (ite (= ARGNAME_input_NAMEEND_DIM temp178_46)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp178_47 #x0000000000000000))
(assert (= var1053916 temp178_47))
(assert (= temp178_49 #x0000000000000001))
(assert (= temp178_48 temp178_49))
(assert (= temp178_50 #x0000000000000000))
(assert (= var3280407 temp178_50))
(assert (= temp178_51 #x0000000000000001))
(assert (= var1054130
   (ite (= ARGNAME_num_samples_NAMEEND temp178_51)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp178_52 #x0000000000000000))
(assert (= var1054130 temp178_52))
(model-add temp178_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp178_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp178_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp178_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp178_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp178_6 () (_ BitVec 64) #x0000000000000001)
(model-add var1053590 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






