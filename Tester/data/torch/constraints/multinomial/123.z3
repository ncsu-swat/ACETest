(declare-fun temp243_2 () (_ BitVec 64))
(declare-fun temp243_1 () (_ BitVec 64))
(declare-fun temp243_4 () (_ BitVec 64))
(declare-fun temp243_3 () (_ BitVec 64))
(declare-fun temp243_5 () (_ BitVec 64))
(declare-fun temp243_6 () (_ BitVec 64))
(declare-fun var1053590 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp243_7 () (_ BitVec 64))
(declare-fun var1053593 () (_ BitVec 64))
(declare-fun temp243_8 () (_ BitVec 64))
(declare-fun temp243_9 () (_ BitVec 64))
(declare-fun ARGNAME_num_samples_NAMEEND () (_ BitVec 64))
(declare-fun var1053653 () (_ BitVec 64))
(declare-fun temp243_10 () (_ BitVec 64))
(declare-fun temp243_11 () (_ BitVec 64))
(declare-fun var1053664 () (_ BitVec 64))
(declare-fun temp243_12 () (_ BitVec 64))
(declare-fun temp243_13 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp243_14 () (_ BitVec 64))
(declare-fun temp243_15 () (_ BitVec 64))
(declare-fun temp243_16 () (_ BitVec 64))
(declare-fun temp243_17 () (_ BitVec 64))
(declare-fun temp243_18 () (_ BitVec 64))
(declare-fun temp243_19 () (_ BitVec 64))
(declare-fun temp243_20 () (_ BitVec 64))
(declare-fun temp243_21 () (_ BitVec 64))
(declare-fun temp243_22 () (_ BitVec 64))
(declare-fun temp243_23 () (_ BitVec 64))
(declare-fun temp243_24 () (_ BitVec 64))
(declare-fun temp243_25 () (_ BitVec 64))
(declare-fun temp243_26 () (_ BitVec 64))
(declare-fun temp243_27 () (_ BitVec 64))
(declare-fun temp243_28 () (_ BitVec 64))
(declare-fun temp243_29 () (_ BitVec 64))
(declare-fun temp243_30 () (_ BitVec 64))
(declare-fun temp243_31 () (_ BitVec 64))
(declare-fun temp243_32 () (_ BitVec 64))
(declare-fun var1053663 () (_ BitVec 64))
(declare-fun var1053668 () (_ BitVec 64))
(declare-fun ARGNAME_replacement_NAMEEND () (_ BitVec 64))
(declare-fun var1053669 () (_ BitVec 64))
(declare-fun temp243_33 () (_ BitVec 64))
(declare-fun temp243_34 () (_ BitVec 64))
(declare-fun var1053679 () (_ BitVec 64))
(declare-fun temp243_35 () (_ BitVec 64))
(declare-fun temp243_36 () (_ BitVec 64))
(declare-fun var1053691 () (_ BitVec 64))
(declare-fun temp243_37 () (_ BitVec 64))
(declare-fun temp243_38 () (_ BitVec 64))
(declare-fun var1049127 () (_ BitVec 64))
(declare-fun temp243_39 () (_ BitVec 64))
(declare-fun temp243_40 () (_ BitVec 64))
(declare-fun temp243_41 () (_ BitVec 64))
(declare-fun var1053718 () (_ BitVec 64))
(declare-fun temp243_43 () (_ BitVec 64))
(declare-fun temp243_42 () (_ BitVec 64))
(declare-fun temp243_44 () (_ BitVec 64))
(declare-fun temp243_45 () (_ BitVec 64))
(declare-fun var2166295 () (_ BitVec 64))
(declare-fun temp243_46 () (_ BitVec 64))
(declare-fun var1053916 () (_ BitVec 64))
(declare-fun temp243_47 () (_ BitVec 64))
(declare-fun temp243_49 () (_ BitVec 64))
(declare-fun temp243_48 () (_ BitVec 64))
(declare-fun temp243_50 () (_ BitVec 64))
(declare-fun var3214871 () (_ BitVec 64))
(declare-fun temp243_51 () (_ BitVec 64))
(declare-fun var1054130 () (_ BitVec 64))
(declare-fun temp243_52 () (_ BitVec 64))
(assert (= temp243_2 #x0000000000000000))
(assert (= temp243_1 temp243_2))
(assert (= temp243_4 #x0000000000000001))
(assert (= temp243_3 temp243_4))
(assert (= temp243_5 #x0000000000000000))
(assert (= var1053590
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp243_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp243_6 #x0000000000000001))
(assert (= var1053590 temp243_6))
(assert (= temp243_7 #x0000000000000003))
(assert (= var1053593
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp243_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp243_8 #x0000000000000001))
(assert (= var1053593 temp243_8))
(assert (= temp243_9 #x0000000000000001))
(assert (= var1053653
   (ite (bvslt ARGNAME_num_samples_NAMEEND temp243_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp243_10 #x0000000000000000))
(assert (= var1053653 temp243_10))
(assert (= temp243_11 #xffffffffffffffff))
(assert (= var1053664 temp243_11))
(assert (= temp243_12 #x0000000000000000))
(assert (= temp243_13 temp243_12))
(assert (= temp243_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp243_13)))
(assert (= temp243_15 #x0000000000000001))
(assert (= temp243_16 temp243_15))
(assert (= temp243_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp243_16)))
(assert (= temp243_18 #x0000000000000002))
(assert (= temp243_19 temp243_18))
(assert (= temp243_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp243_19)))
(assert (= temp243_21 #x0000000000000003))
(assert (= temp243_22 temp243_21))
(assert (= temp243_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp243_22)))
(assert (= temp243_24 #x0000000000000004))
(assert (= temp243_25 temp243_24))
(assert (= temp243_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp243_25)))
(assert (= temp243_27 #x0000000000000005))
(assert (= temp243_28 temp243_27))
(assert (= temp243_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp243_28)))
(assert (= temp243_30 #x0000000000000000))
(assert (= temp243_31
   (ite (bvslt var1053664 temp243_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
        var1053664)))
(assert (= temp243_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp243_31)))
(assert (= var1053663 temp243_32))
(assert (bvslt (ite (bvslt var1053664 temp243_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
            var1053664)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var1053668
   (ite (bvsle ARGNAME_num_samples_NAMEEND var1053663)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1053669 (bvor var1053668 ARGNAME_replacement_NAMEEND)))
(assert (= temp243_33 #x0000000000000001))
(assert (= var1053669 temp243_33))
(assert (= temp243_34 #x0000000001000000))
(assert (= var1053679
   (ite (bvsgt var1053663 temp243_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp243_35 #x0000000000000000))
(assert (= var1053679 temp243_35))
(assert (= temp243_36 #x0000000000000001))
(assert (= var1053691
   (ite (= ARGNAME_input_NAMEEND_DIM temp243_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp243_37 #x0000000000000000))
(assert (= var1053691 temp243_37))
(assert (= temp243_38 #x0000000000000000))
(assert (= var1049127 temp243_38))
(assert (= temp243_39 #x0000000000000000))
(assert (= temp243_40
   (ite (bvslt var1049127 temp243_39)
        (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
        var1049127)))
(assert (= temp243_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp243_40)))
(assert (= var1053718 temp243_41))
(assert (bvslt (ite (bvslt var1049127 temp243_39)
            (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
            var1049127)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp243_43 #x0000000000000002))
(assert (= temp243_42 temp243_43))
(assert (= temp243_44 #x0000000000000000))
(assert (= ARGNAME_replacement_NAMEEND temp243_44))
(assert (= temp243_45 #x0000000000000000))
(assert (= var2166295 temp243_45))
(assert (= temp243_46 #x0000000000000001))
(assert (= var1053916
   (ite (= ARGNAME_input_NAMEEND_DIM temp243_46)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp243_47 #x0000000000000000))
(assert (= var1053916 temp243_47))
(assert (= temp243_49 #x0000000000000001))
(assert (= temp243_48 temp243_49))
(assert (= temp243_50 #x0000000000000000))
(assert (= var3214871 temp243_50))
(assert (= temp243_51 #x0000000000000001))
(assert (= var1054130
   (ite (= ARGNAME_num_samples_NAMEEND temp243_51)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp243_52 #x0000000000000000))
(assert (= var1054130 temp243_52))
(model-add temp243_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp243_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp243_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp243_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp243_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp243_6 () (_ BitVec 64) #x0000000000000001)
(model-add var1053590 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






