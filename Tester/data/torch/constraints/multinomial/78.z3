(declare-fun temp158_2 () (_ BitVec 64))
(declare-fun temp158_1 () (_ BitVec 64))
(declare-fun temp158_4 () (_ BitVec 64))
(declare-fun temp158_3 () (_ BitVec 64))
(declare-fun temp158_5 () (_ BitVec 64))
(declare-fun temp158_6 () (_ BitVec 64))
(declare-fun var1053590 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp158_7 () (_ BitVec 64))
(declare-fun var1053593 () (_ BitVec 64))
(declare-fun temp158_8 () (_ BitVec 64))
(declare-fun temp158_9 () (_ BitVec 64))
(declare-fun ARGNAME_num_samples_NAMEEND () (_ BitVec 64))
(declare-fun var1053653 () (_ BitVec 64))
(declare-fun temp158_10 () (_ BitVec 64))
(declare-fun temp158_11 () (_ BitVec 64))
(declare-fun var1053664 () (_ BitVec 64))
(declare-fun temp158_12 () (_ BitVec 64))
(declare-fun temp158_13 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp158_14 () (_ BitVec 64))
(declare-fun temp158_15 () (_ BitVec 64))
(declare-fun temp158_16 () (_ BitVec 64))
(declare-fun temp158_17 () (_ BitVec 64))
(declare-fun temp158_18 () (_ BitVec 64))
(declare-fun temp158_19 () (_ BitVec 64))
(declare-fun temp158_20 () (_ BitVec 64))
(declare-fun temp158_21 () (_ BitVec 64))
(declare-fun temp158_22 () (_ BitVec 64))
(declare-fun temp158_23 () (_ BitVec 64))
(declare-fun temp158_24 () (_ BitVec 64))
(declare-fun temp158_25 () (_ BitVec 64))
(declare-fun temp158_26 () (_ BitVec 64))
(declare-fun temp158_27 () (_ BitVec 64))
(declare-fun temp158_28 () (_ BitVec 64))
(declare-fun temp158_29 () (_ BitVec 64))
(declare-fun temp158_30 () (_ BitVec 64))
(declare-fun temp158_31 () (_ BitVec 64))
(declare-fun temp158_32 () (_ BitVec 64))
(declare-fun var1053663 () (_ BitVec 64))
(declare-fun var1053668 () (_ BitVec 64))
(declare-fun ARGNAME_replacement_NAMEEND () (_ BitVec 64))
(declare-fun var1053669 () (_ BitVec 64))
(declare-fun temp158_33 () (_ BitVec 64))
(declare-fun temp158_34 () (_ BitVec 64))
(declare-fun var1053679 () (_ BitVec 64))
(declare-fun temp158_35 () (_ BitVec 64))
(declare-fun temp158_36 () (_ BitVec 64))
(declare-fun var1053691 () (_ BitVec 64))
(declare-fun temp158_37 () (_ BitVec 64))
(declare-fun temp158_38 () (_ BitVec 64))
(declare-fun var1049127 () (_ BitVec 64))
(declare-fun temp158_39 () (_ BitVec 64))
(declare-fun temp158_40 () (_ BitVec 64))
(declare-fun temp158_41 () (_ BitVec 64))
(declare-fun var1053718 () (_ BitVec 64))
(declare-fun temp158_43 () (_ BitVec 64))
(declare-fun temp158_42 () (_ BitVec 64))
(declare-fun temp158_44 () (_ BitVec 64))
(declare-fun temp158_45 () (_ BitVec 64))
(declare-fun var2231831 () (_ BitVec 64))
(declare-fun temp158_46 () (_ BitVec 64))
(declare-fun var1053916 () (_ BitVec 64))
(declare-fun temp158_47 () (_ BitVec 64))
(declare-fun temp158_49 () (_ BitVec 64))
(declare-fun temp158_48 () (_ BitVec 64))
(declare-fun temp158_50 () (_ BitVec 64))
(declare-fun var3280407 () (_ BitVec 64))
(declare-fun temp158_51 () (_ BitVec 64))
(declare-fun var1054130 () (_ BitVec 64))
(declare-fun temp158_52 () (_ BitVec 64))
(assert (= temp158_2 #x0000000000000000))
(assert (= temp158_1 temp158_2))
(assert (= temp158_4 #x0000000000000001))
(assert (= temp158_3 temp158_4))
(assert (= temp158_5 #x0000000000000000))
(assert (= var1053590
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp158_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_6 #x0000000000000001))
(assert (= var1053590 temp158_6))
(assert (= temp158_7 #x0000000000000003))
(assert (= var1053593
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp158_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_8 #x0000000000000001))
(assert (= var1053593 temp158_8))
(assert (= temp158_9 #x0000000000000001))
(assert (= var1053653
   (ite (bvslt ARGNAME_num_samples_NAMEEND temp158_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_10 #x0000000000000000))
(assert (= var1053653 temp158_10))
(assert (= temp158_11 #xffffffffffffffff))
(assert (= var1053664 temp158_11))
(assert (= temp158_12 #x0000000000000000))
(assert (= temp158_13 temp158_12))
(assert (= temp158_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp158_13)))
(assert (= temp158_15 #x0000000000000001))
(assert (= temp158_16 temp158_15))
(assert (= temp158_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp158_16)))
(assert (= temp158_18 #x0000000000000002))
(assert (= temp158_19 temp158_18))
(assert (= temp158_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp158_19)))
(assert (= temp158_21 #x0000000000000003))
(assert (= temp158_22 temp158_21))
(assert (= temp158_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp158_22)))
(assert (= temp158_24 #x0000000000000004))
(assert (= temp158_25 temp158_24))
(assert (= temp158_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp158_25)))
(assert (= temp158_27 #x0000000000000005))
(assert (= temp158_28 temp158_27))
(assert (= temp158_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp158_28)))
(assert (= temp158_30 #x0000000000000000))
(assert (= temp158_31
   (ite (bvslt var1053664 temp158_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
        var1053664)))
(assert (= temp158_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp158_31)))
(assert (= var1053663 temp158_32))
(assert (bvslt (ite (bvslt var1053664 temp158_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
            var1053664)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var1053668
   (ite (bvsle ARGNAME_num_samples_NAMEEND var1053663)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1053669 (bvor var1053668 ARGNAME_replacement_NAMEEND)))
(assert (= temp158_33 #x0000000000000001))
(assert (= var1053669 temp158_33))
(assert (= temp158_34 #x0000000001000000))
(assert (= var1053679
   (ite (bvsgt var1053663 temp158_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp158_35 #x0000000000000000))
(assert (= var1053679 temp158_35))
(assert (= temp158_36 #x0000000000000001))
(assert (= var1053691
   (ite (= ARGNAME_input_NAMEEND_DIM temp158_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_37 #x0000000000000000))
(assert (= var1053691 temp158_37))
(assert (= temp158_38 #x0000000000000000))
(assert (= var1049127 temp158_38))
(assert (= temp158_39 #x0000000000000000))
(assert (= temp158_40
   (ite (bvslt var1049127 temp158_39)
        (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
        var1049127)))
(assert (= temp158_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp158_40)))
(assert (= var1053718 temp158_41))
(assert (bvslt (ite (bvslt var1049127 temp158_39)
            (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
            var1049127)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp158_43 #x0000000000000002))
(assert (= temp158_42 temp158_43))
(assert (= temp158_44 #x0000000000000000))
(assert (= ARGNAME_replacement_NAMEEND temp158_44))
(assert (= temp158_45 #x0000000000000000))
(assert (= var2231831 temp158_45))
(assert (= temp158_46 #x0000000000000001))
(assert (= var1053916
   (ite (= ARGNAME_input_NAMEEND_DIM temp158_46)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_47 #x0000000000000000))
(assert (= var1053916 temp158_47))
(assert (= temp158_49 #x0000000000000001))
(assert (= temp158_48 temp158_49))
(assert (= temp158_50 #x0000000000000000))
(assert (= var3280407 temp158_50))
(assert (= temp158_51 #x0000000000000001))
(assert (= var1054130
   (ite (= ARGNAME_num_samples_NAMEEND temp158_51)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_52 #x0000000000000000))
(assert (= var1054130 temp158_52))
(model-add temp158_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp158_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp158_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp158_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp158_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp158_6 () (_ BitVec 64) #x0000000000000001)
(model-add var1053590 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






