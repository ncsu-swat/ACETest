(declare-fun temp160_2 () (_ BitVec 64))
(declare-fun temp160_1 () (_ BitVec 64))
(declare-fun temp160_4 () (_ BitVec 64))
(declare-fun temp160_3 () (_ BitVec 64))
(declare-fun temp160_5 () (_ BitVec 64))
(declare-fun temp160_6 () (_ BitVec 64))
(declare-fun var1053590 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp160_7 () (_ BitVec 64))
(declare-fun var1053593 () (_ BitVec 64))
(declare-fun temp160_8 () (_ BitVec 64))
(declare-fun temp160_9 () (_ BitVec 64))
(declare-fun ARGNAME_num_samples_NAMEEND () (_ BitVec 64))
(declare-fun var1053653 () (_ BitVec 64))
(declare-fun temp160_10 () (_ BitVec 64))
(declare-fun temp160_11 () (_ BitVec 64))
(declare-fun var1053664 () (_ BitVec 64))
(declare-fun temp160_12 () (_ BitVec 64))
(declare-fun temp160_13 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp160_14 () (_ BitVec 64))
(declare-fun temp160_15 () (_ BitVec 64))
(declare-fun temp160_16 () (_ BitVec 64))
(declare-fun temp160_17 () (_ BitVec 64))
(declare-fun temp160_18 () (_ BitVec 64))
(declare-fun temp160_19 () (_ BitVec 64))
(declare-fun temp160_20 () (_ BitVec 64))
(declare-fun temp160_21 () (_ BitVec 64))
(declare-fun temp160_22 () (_ BitVec 64))
(declare-fun temp160_23 () (_ BitVec 64))
(declare-fun temp160_24 () (_ BitVec 64))
(declare-fun temp160_25 () (_ BitVec 64))
(declare-fun temp160_26 () (_ BitVec 64))
(declare-fun temp160_27 () (_ BitVec 64))
(declare-fun temp160_28 () (_ BitVec 64))
(declare-fun temp160_29 () (_ BitVec 64))
(declare-fun temp160_30 () (_ BitVec 64))
(declare-fun temp160_31 () (_ BitVec 64))
(declare-fun temp160_32 () (_ BitVec 64))
(declare-fun var1053663 () (_ BitVec 64))
(declare-fun var1053668 () (_ BitVec 64))
(declare-fun ARGNAME_replacement_NAMEEND () (_ BitVec 64))
(declare-fun var1053669 () (_ BitVec 64))
(declare-fun temp160_33 () (_ BitVec 64))
(declare-fun temp160_34 () (_ BitVec 64))
(declare-fun var1053679 () (_ BitVec 64))
(declare-fun temp160_35 () (_ BitVec 64))
(declare-fun temp160_36 () (_ BitVec 64))
(declare-fun var1053691 () (_ BitVec 64))
(declare-fun temp160_37 () (_ BitVec 64))
(declare-fun temp160_38 () (_ BitVec 64))
(declare-fun var1049127 () (_ BitVec 64))
(declare-fun temp160_39 () (_ BitVec 64))
(declare-fun temp160_40 () (_ BitVec 64))
(declare-fun temp160_41 () (_ BitVec 64))
(declare-fun var1053718 () (_ BitVec 64))
(declare-fun temp160_43 () (_ BitVec 64))
(declare-fun temp160_42 () (_ BitVec 64))
(declare-fun temp160_44 () (_ BitVec 64))
(declare-fun temp160_45 () (_ BitVec 64))
(declare-fun var2231831 () (_ BitVec 64))
(declare-fun temp160_46 () (_ BitVec 64))
(declare-fun var1053916 () (_ BitVec 64))
(declare-fun temp160_47 () (_ BitVec 64))
(declare-fun temp160_49 () (_ BitVec 64))
(declare-fun temp160_48 () (_ BitVec 64))
(declare-fun temp160_50 () (_ BitVec 64))
(declare-fun var3280407 () (_ BitVec 64))
(declare-fun temp160_51 () (_ BitVec 64))
(declare-fun var1054130 () (_ BitVec 64))
(declare-fun temp160_52 () (_ BitVec 64))
(assert (= temp160_2 #x0000000000000000))
(assert (= temp160_1 temp160_2))
(assert (= temp160_4 #x0000000000000001))
(assert (= temp160_3 temp160_4))
(assert (= temp160_5 #x0000000000000000))
(assert (= var1053590
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp160_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp160_6 #x0000000000000001))
(assert (= var1053590 temp160_6))
(assert (= temp160_7 #x0000000000000003))
(assert (= var1053593
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp160_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp160_8 #x0000000000000001))
(assert (= var1053593 temp160_8))
(assert (= temp160_9 #x0000000000000001))
(assert (= var1053653
   (ite (bvslt ARGNAME_num_samples_NAMEEND temp160_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp160_10 #x0000000000000000))
(assert (= var1053653 temp160_10))
(assert (= temp160_11 #xffffffffffffffff))
(assert (= var1053664 temp160_11))
(assert (= temp160_12 #x0000000000000000))
(assert (= temp160_13 temp160_12))
(assert (= temp160_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp160_13)))
(assert (= temp160_15 #x0000000000000001))
(assert (= temp160_16 temp160_15))
(assert (= temp160_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp160_16)))
(assert (= temp160_18 #x0000000000000002))
(assert (= temp160_19 temp160_18))
(assert (= temp160_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp160_19)))
(assert (= temp160_21 #x0000000000000003))
(assert (= temp160_22 temp160_21))
(assert (= temp160_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp160_22)))
(assert (= temp160_24 #x0000000000000004))
(assert (= temp160_25 temp160_24))
(assert (= temp160_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp160_25)))
(assert (= temp160_27 #x0000000000000005))
(assert (= temp160_28 temp160_27))
(assert (= temp160_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp160_28)))
(assert (= temp160_30 #x0000000000000000))
(assert (= temp160_31
   (ite (bvslt var1053664 temp160_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
        var1053664)))
(assert (= temp160_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp160_31)))
(assert (= var1053663 temp160_32))
(assert (bvslt (ite (bvslt var1053664 temp160_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
            var1053664)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var1053668
   (ite (bvsle ARGNAME_num_samples_NAMEEND var1053663)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1053669 (bvor var1053668 ARGNAME_replacement_NAMEEND)))
(assert (= temp160_33 #x0000000000000001))
(assert (= var1053669 temp160_33))
(assert (= temp160_34 #x0000000001000000))
(assert (= var1053679
   (ite (bvsgt var1053663 temp160_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp160_35 #x0000000000000000))
(assert (= var1053679 temp160_35))
(assert (= temp160_36 #x0000000000000001))
(assert (= var1053691
   (ite (= ARGNAME_input_NAMEEND_DIM temp160_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp160_37 #x0000000000000000))
(assert (= var1053691 temp160_37))
(assert (= temp160_38 #x0000000000000000))
(assert (= var1049127 temp160_38))
(assert (= temp160_39 #x0000000000000000))
(assert (= temp160_40
   (ite (bvslt var1049127 temp160_39)
        (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
        var1049127)))
(assert (= temp160_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp160_40)))
(assert (= var1053718 temp160_41))
(assert (bvslt (ite (bvslt var1049127 temp160_39)
            (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
            var1049127)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp160_43 #x0000000000000002))
(assert (= temp160_42 temp160_43))
(assert (= temp160_44 #x0000000000000000))
(assert (= ARGNAME_replacement_NAMEEND temp160_44))
(assert (= temp160_45 #x0000000000000000))
(assert (= var2231831 temp160_45))
(assert (= temp160_46 #x0000000000000001))
(assert (= var1053916
   (ite (= ARGNAME_input_NAMEEND_DIM temp160_46)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp160_47 #x0000000000000000))
(assert (= var1053916 temp160_47))
(assert (= temp160_49 #x0000000000000001))
(assert (= temp160_48 temp160_49))
(assert (= temp160_50 #x0000000000000000))
(assert (= var3280407 temp160_50))
(assert (= temp160_51 #x0000000000000001))
(assert (= var1054130
   (ite (= ARGNAME_num_samples_NAMEEND temp160_51)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp160_52 #x0000000000000000))
(assert (= var1054130 temp160_52))
(model-add temp160_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp160_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp160_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp160_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp160_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp160_6 () (_ BitVec 64) #x0000000000000001)
(model-add var1053590 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






