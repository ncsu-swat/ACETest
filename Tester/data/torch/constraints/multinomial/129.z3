(declare-fun temp257_2 () (_ BitVec 64))
(declare-fun temp257_1 () (_ BitVec 64))
(declare-fun temp257_4 () (_ BitVec 64))
(declare-fun temp257_3 () (_ BitVec 64))
(declare-fun temp257_5 () (_ BitVec 64))
(declare-fun temp257_6 () (_ BitVec 64))
(declare-fun var1053590 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp257_7 () (_ BitVec 64))
(declare-fun var1053593 () (_ BitVec 64))
(declare-fun temp257_8 () (_ BitVec 64))
(declare-fun temp257_9 () (_ BitVec 64))
(declare-fun ARGNAME_num_samples_NAMEEND () (_ BitVec 64))
(declare-fun var1053653 () (_ BitVec 64))
(declare-fun temp257_10 () (_ BitVec 64))
(declare-fun temp257_11 () (_ BitVec 64))
(declare-fun var1053664 () (_ BitVec 64))
(declare-fun temp257_12 () (_ BitVec 64))
(declare-fun temp257_13 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp257_14 () (_ BitVec 64))
(declare-fun temp257_15 () (_ BitVec 64))
(declare-fun temp257_16 () (_ BitVec 64))
(declare-fun temp257_17 () (_ BitVec 64))
(declare-fun temp257_18 () (_ BitVec 64))
(declare-fun temp257_19 () (_ BitVec 64))
(declare-fun temp257_20 () (_ BitVec 64))
(declare-fun temp257_21 () (_ BitVec 64))
(declare-fun temp257_22 () (_ BitVec 64))
(declare-fun temp257_23 () (_ BitVec 64))
(declare-fun temp257_24 () (_ BitVec 64))
(declare-fun temp257_25 () (_ BitVec 64))
(declare-fun temp257_26 () (_ BitVec 64))
(declare-fun temp257_27 () (_ BitVec 64))
(declare-fun temp257_28 () (_ BitVec 64))
(declare-fun temp257_29 () (_ BitVec 64))
(declare-fun temp257_30 () (_ BitVec 64))
(declare-fun temp257_31 () (_ BitVec 64))
(declare-fun temp257_32 () (_ BitVec 64))
(declare-fun var1053663 () (_ BitVec 64))
(declare-fun var1053668 () (_ BitVec 64))
(declare-fun ARGNAME_replacement_NAMEEND () (_ BitVec 64))
(declare-fun var1053669 () (_ BitVec 64))
(declare-fun temp257_33 () (_ BitVec 64))
(declare-fun temp257_34 () (_ BitVec 64))
(declare-fun var1053679 () (_ BitVec 64))
(declare-fun temp257_35 () (_ BitVec 64))
(declare-fun temp257_36 () (_ BitVec 64))
(declare-fun var1053691 () (_ BitVec 64))
(declare-fun temp257_37 () (_ BitVec 64))
(declare-fun temp257_38 () (_ BitVec 64))
(declare-fun var1049127 () (_ BitVec 64))
(declare-fun temp257_39 () (_ BitVec 64))
(declare-fun temp257_40 () (_ BitVec 64))
(declare-fun temp257_41 () (_ BitVec 64))
(declare-fun var1053718 () (_ BitVec 64))
(declare-fun temp257_43 () (_ BitVec 64))
(declare-fun temp257_42 () (_ BitVec 64))
(declare-fun temp257_44 () (_ BitVec 64))
(declare-fun temp257_45 () (_ BitVec 64))
(declare-fun var2166295 () (_ BitVec 64))
(declare-fun temp257_46 () (_ BitVec 64))
(declare-fun var1053916 () (_ BitVec 64))
(declare-fun temp257_47 () (_ BitVec 64))
(declare-fun temp257_49 () (_ BitVec 64))
(declare-fun temp257_48 () (_ BitVec 64))
(declare-fun temp257_50 () (_ BitVec 64))
(declare-fun var3214871 () (_ BitVec 64))
(declare-fun temp257_51 () (_ BitVec 64))
(declare-fun var1054130 () (_ BitVec 64))
(declare-fun temp257_52 () (_ BitVec 64))
(assert (= temp257_2 #x0000000000000000))
(assert (= temp257_1 temp257_2))
(assert (= temp257_4 #x0000000000000001))
(assert (= temp257_3 temp257_4))
(assert (= temp257_5 #x0000000000000000))
(assert (= var1053590
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp257_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp257_6 #x0000000000000001))
(assert (= var1053590 temp257_6))
(assert (= temp257_7 #x0000000000000003))
(assert (= var1053593
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp257_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp257_8 #x0000000000000001))
(assert (= var1053593 temp257_8))
(assert (= temp257_9 #x0000000000000001))
(assert (= var1053653
   (ite (bvslt ARGNAME_num_samples_NAMEEND temp257_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp257_10 #x0000000000000000))
(assert (= var1053653 temp257_10))
(assert (= temp257_11 #xffffffffffffffff))
(assert (= var1053664 temp257_11))
(assert (= temp257_12 #x0000000000000000))
(assert (= temp257_13 temp257_12))
(assert (= temp257_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp257_13)))
(assert (= temp257_15 #x0000000000000001))
(assert (= temp257_16 temp257_15))
(assert (= temp257_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp257_16)))
(assert (= temp257_18 #x0000000000000002))
(assert (= temp257_19 temp257_18))
(assert (= temp257_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp257_19)))
(assert (= temp257_21 #x0000000000000003))
(assert (= temp257_22 temp257_21))
(assert (= temp257_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp257_22)))
(assert (= temp257_24 #x0000000000000004))
(assert (= temp257_25 temp257_24))
(assert (= temp257_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp257_25)))
(assert (= temp257_27 #x0000000000000005))
(assert (= temp257_28 temp257_27))
(assert (= temp257_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp257_28)))
(assert (= temp257_30 #x0000000000000000))
(assert (= temp257_31
   (ite (bvslt var1053664 temp257_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
        var1053664)))
(assert (= temp257_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp257_31)))
(assert (= var1053663 temp257_32))
(assert (bvslt (ite (bvslt var1053664 temp257_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
            var1053664)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var1053668
   (ite (bvsle ARGNAME_num_samples_NAMEEND var1053663)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1053669 (bvor var1053668 ARGNAME_replacement_NAMEEND)))
(assert (= temp257_33 #x0000000000000001))
(assert (= var1053669 temp257_33))
(assert (= temp257_34 #x0000000001000000))
(assert (= var1053679
   (ite (bvsgt var1053663 temp257_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp257_35 #x0000000000000000))
(assert (= var1053679 temp257_35))
(assert (= temp257_36 #x0000000000000001))
(assert (= var1053691
   (ite (= ARGNAME_input_NAMEEND_DIM temp257_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp257_37 #x0000000000000000))
(assert (= var1053691 temp257_37))
(assert (= temp257_38 #x0000000000000000))
(assert (= var1049127 temp257_38))
(assert (= temp257_39 #x0000000000000000))
(assert (= temp257_40
   (ite (bvslt var1049127 temp257_39)
        (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
        var1049127)))
(assert (= temp257_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp257_40)))
(assert (= var1053718 temp257_41))
(assert (bvslt (ite (bvslt var1049127 temp257_39)
            (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
            var1049127)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp257_43 #x0000000000000002))
(assert (= temp257_42 temp257_43))
(assert (= temp257_44 #x0000000000000000))
(assert (= ARGNAME_replacement_NAMEEND temp257_44))
(assert (= temp257_45 #x0000000000000000))
(assert (= var2166295 temp257_45))
(assert (= temp257_46 #x0000000000000001))
(assert (= var1053916
   (ite (= ARGNAME_input_NAMEEND_DIM temp257_46)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp257_47 #x0000000000000000))
(assert (= var1053916 temp257_47))
(assert (= temp257_49 #x0000000000000001))
(assert (= temp257_48 temp257_49))
(assert (= temp257_50 #x0000000000000000))
(assert (= var3214871 temp257_50))
(assert (= temp257_51 #x0000000000000001))
(assert (= var1054130
   (ite (= ARGNAME_num_samples_NAMEEND temp257_51)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp257_52 #x0000000000000000))
(assert (= var1054130 temp257_52))
(model-add temp257_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp257_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp257_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp257_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp257_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp257_6 () (_ BitVec 64) #x0000000000000001)
(model-add var1053590 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






