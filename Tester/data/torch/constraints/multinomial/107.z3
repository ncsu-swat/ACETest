(declare-fun temp211_2 () (_ BitVec 64))
(declare-fun temp211_1 () (_ BitVec 64))
(declare-fun temp211_4 () (_ BitVec 64))
(declare-fun temp211_3 () (_ BitVec 64))
(declare-fun temp211_5 () (_ BitVec 64))
(declare-fun temp211_6 () (_ BitVec 64))
(declare-fun var1053590 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp211_7 () (_ BitVec 64))
(declare-fun var1053593 () (_ BitVec 64))
(declare-fun temp211_8 () (_ BitVec 64))
(declare-fun temp211_9 () (_ BitVec 64))
(declare-fun ARGNAME_num_samples_NAMEEND () (_ BitVec 64))
(declare-fun var1053653 () (_ BitVec 64))
(declare-fun temp211_10 () (_ BitVec 64))
(declare-fun temp211_11 () (_ BitVec 64))
(declare-fun var1053664 () (_ BitVec 64))
(declare-fun temp211_12 () (_ BitVec 64))
(declare-fun temp211_13 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp211_14 () (_ BitVec 64))
(declare-fun temp211_15 () (_ BitVec 64))
(declare-fun temp211_16 () (_ BitVec 64))
(declare-fun temp211_17 () (_ BitVec 64))
(declare-fun temp211_18 () (_ BitVec 64))
(declare-fun temp211_19 () (_ BitVec 64))
(declare-fun temp211_20 () (_ BitVec 64))
(declare-fun temp211_21 () (_ BitVec 64))
(declare-fun temp211_22 () (_ BitVec 64))
(declare-fun temp211_23 () (_ BitVec 64))
(declare-fun temp211_24 () (_ BitVec 64))
(declare-fun temp211_25 () (_ BitVec 64))
(declare-fun temp211_26 () (_ BitVec 64))
(declare-fun temp211_27 () (_ BitVec 64))
(declare-fun temp211_28 () (_ BitVec 64))
(declare-fun temp211_29 () (_ BitVec 64))
(declare-fun temp211_30 () (_ BitVec 64))
(declare-fun temp211_31 () (_ BitVec 64))
(declare-fun temp211_32 () (_ BitVec 64))
(declare-fun var1053663 () (_ BitVec 64))
(declare-fun var1053668 () (_ BitVec 64))
(declare-fun ARGNAME_replacement_NAMEEND () (_ BitVec 64))
(declare-fun var1053669 () (_ BitVec 64))
(declare-fun temp211_33 () (_ BitVec 64))
(declare-fun temp211_34 () (_ BitVec 64))
(declare-fun var1053679 () (_ BitVec 64))
(declare-fun temp211_35 () (_ BitVec 64))
(declare-fun temp211_36 () (_ BitVec 64))
(declare-fun var1053691 () (_ BitVec 64))
(declare-fun temp211_37 () (_ BitVec 64))
(declare-fun temp211_38 () (_ BitVec 64))
(declare-fun var1049127 () (_ BitVec 64))
(declare-fun temp211_39 () (_ BitVec 64))
(declare-fun temp211_40 () (_ BitVec 64))
(declare-fun temp211_41 () (_ BitVec 64))
(declare-fun var1053718 () (_ BitVec 64))
(declare-fun temp211_43 () (_ BitVec 64))
(declare-fun temp211_42 () (_ BitVec 64))
(declare-fun temp211_44 () (_ BitVec 64))
(declare-fun temp211_45 () (_ BitVec 64))
(declare-fun var2166295 () (_ BitVec 64))
(declare-fun temp211_46 () (_ BitVec 64))
(declare-fun var1053916 () (_ BitVec 64))
(declare-fun temp211_47 () (_ BitVec 64))
(declare-fun temp211_49 () (_ BitVec 64))
(declare-fun temp211_48 () (_ BitVec 64))
(declare-fun temp211_50 () (_ BitVec 64))
(declare-fun var3214871 () (_ BitVec 64))
(declare-fun temp211_51 () (_ BitVec 64))
(declare-fun var1054130 () (_ BitVec 64))
(declare-fun temp211_52 () (_ BitVec 64))
(assert (= temp211_2 #x0000000000000000))
(assert (= temp211_1 temp211_2))
(assert (= temp211_4 #x0000000000000001))
(assert (= temp211_3 temp211_4))
(assert (= temp211_5 #x0000000000000000))
(assert (= var1053590
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp211_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp211_6 #x0000000000000001))
(assert (= var1053590 temp211_6))
(assert (= temp211_7 #x0000000000000003))
(assert (= var1053593
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp211_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp211_8 #x0000000000000001))
(assert (= var1053593 temp211_8))
(assert (= temp211_9 #x0000000000000001))
(assert (= var1053653
   (ite (bvslt ARGNAME_num_samples_NAMEEND temp211_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp211_10 #x0000000000000000))
(assert (= var1053653 temp211_10))
(assert (= temp211_11 #xffffffffffffffff))
(assert (= var1053664 temp211_11))
(assert (= temp211_12 #x0000000000000000))
(assert (= temp211_13 temp211_12))
(assert (= temp211_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp211_13)))
(assert (= temp211_15 #x0000000000000001))
(assert (= temp211_16 temp211_15))
(assert (= temp211_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp211_16)))
(assert (= temp211_18 #x0000000000000002))
(assert (= temp211_19 temp211_18))
(assert (= temp211_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp211_19)))
(assert (= temp211_21 #x0000000000000003))
(assert (= temp211_22 temp211_21))
(assert (= temp211_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp211_22)))
(assert (= temp211_24 #x0000000000000004))
(assert (= temp211_25 temp211_24))
(assert (= temp211_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp211_25)))
(assert (= temp211_27 #x0000000000000005))
(assert (= temp211_28 temp211_27))
(assert (= temp211_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp211_28)))
(assert (= temp211_30 #x0000000000000000))
(assert (= temp211_31
   (ite (bvslt var1053664 temp211_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
        var1053664)))
(assert (= temp211_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp211_31)))
(assert (= var1053663 temp211_32))
(assert (bvslt (ite (bvslt var1053664 temp211_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
            var1053664)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var1053668
   (ite (bvsle ARGNAME_num_samples_NAMEEND var1053663)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1053669 (bvor var1053668 ARGNAME_replacement_NAMEEND)))
(assert (= temp211_33 #x0000000000000001))
(assert (= var1053669 temp211_33))
(assert (= temp211_34 #x0000000001000000))
(assert (= var1053679
   (ite (bvsgt var1053663 temp211_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp211_35 #x0000000000000000))
(assert (= var1053679 temp211_35))
(assert (= temp211_36 #x0000000000000001))
(assert (= var1053691
   (ite (= ARGNAME_input_NAMEEND_DIM temp211_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp211_37 #x0000000000000000))
(assert (= var1053691 temp211_37))
(assert (= temp211_38 #x0000000000000000))
(assert (= var1049127 temp211_38))
(assert (= temp211_39 #x0000000000000000))
(assert (= temp211_40
   (ite (bvslt var1049127 temp211_39)
        (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
        var1049127)))
(assert (= temp211_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp211_40)))
(assert (= var1053718 temp211_41))
(assert (bvslt (ite (bvslt var1049127 temp211_39)
            (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
            var1049127)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp211_43 #x0000000000000002))
(assert (= temp211_42 temp211_43))
(assert (= temp211_44 #x0000000000000000))
(assert (= ARGNAME_replacement_NAMEEND temp211_44))
(assert (= temp211_45 #x0000000000000000))
(assert (= var2166295 temp211_45))
(assert (= temp211_46 #x0000000000000001))
(assert (= var1053916
   (ite (= ARGNAME_input_NAMEEND_DIM temp211_46)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp211_47 #x0000000000000000))
(assert (= var1053916 temp211_47))
(assert (= temp211_49 #x0000000000000001))
(assert (= temp211_48 temp211_49))
(assert (= temp211_50 #x0000000000000000))
(assert (= var3214871 temp211_50))
(assert (= temp211_51 #x0000000000000001))
(assert (= var1054130
   (ite (= ARGNAME_num_samples_NAMEEND temp211_51)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp211_52 #x0000000000000000))
(assert (= var1054130 temp211_52))
(model-add temp211_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp211_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp211_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp211_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp211_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp211_6 () (_ BitVec 64) #x0000000000000001)
(model-add var1053590 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






