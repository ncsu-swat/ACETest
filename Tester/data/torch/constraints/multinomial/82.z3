(declare-fun temp162_2 () (_ BitVec 64))
(declare-fun temp162_1 () (_ BitVec 64))
(declare-fun temp162_4 () (_ BitVec 64))
(declare-fun temp162_3 () (_ BitVec 64))
(declare-fun temp162_5 () (_ BitVec 64))
(declare-fun temp162_6 () (_ BitVec 64))
(declare-fun var1053590 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp162_7 () (_ BitVec 64))
(declare-fun var1053593 () (_ BitVec 64))
(declare-fun temp162_8 () (_ BitVec 64))
(declare-fun temp162_9 () (_ BitVec 64))
(declare-fun ARGNAME_num_samples_NAMEEND () (_ BitVec 64))
(declare-fun var1053653 () (_ BitVec 64))
(declare-fun temp162_10 () (_ BitVec 64))
(declare-fun temp162_11 () (_ BitVec 64))
(declare-fun var1053664 () (_ BitVec 64))
(declare-fun temp162_12 () (_ BitVec 64))
(declare-fun temp162_13 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp162_14 () (_ BitVec 64))
(declare-fun temp162_15 () (_ BitVec 64))
(declare-fun temp162_16 () (_ BitVec 64))
(declare-fun temp162_17 () (_ BitVec 64))
(declare-fun temp162_18 () (_ BitVec 64))
(declare-fun temp162_19 () (_ BitVec 64))
(declare-fun temp162_20 () (_ BitVec 64))
(declare-fun temp162_21 () (_ BitVec 64))
(declare-fun temp162_22 () (_ BitVec 64))
(declare-fun temp162_23 () (_ BitVec 64))
(declare-fun temp162_24 () (_ BitVec 64))
(declare-fun temp162_25 () (_ BitVec 64))
(declare-fun temp162_26 () (_ BitVec 64))
(declare-fun temp162_27 () (_ BitVec 64))
(declare-fun temp162_28 () (_ BitVec 64))
(declare-fun temp162_29 () (_ BitVec 64))
(declare-fun temp162_30 () (_ BitVec 64))
(declare-fun temp162_31 () (_ BitVec 64))
(declare-fun temp162_32 () (_ BitVec 64))
(declare-fun var1053663 () (_ BitVec 64))
(declare-fun var1053668 () (_ BitVec 64))
(declare-fun ARGNAME_replacement_NAMEEND () (_ BitVec 64))
(declare-fun var1053669 () (_ BitVec 64))
(declare-fun temp162_33 () (_ BitVec 64))
(declare-fun temp162_34 () (_ BitVec 64))
(declare-fun var1053679 () (_ BitVec 64))
(declare-fun temp162_35 () (_ BitVec 64))
(declare-fun temp162_36 () (_ BitVec 64))
(declare-fun var1053691 () (_ BitVec 64))
(declare-fun temp162_37 () (_ BitVec 64))
(declare-fun temp162_38 () (_ BitVec 64))
(declare-fun var1049127 () (_ BitVec 64))
(declare-fun temp162_39 () (_ BitVec 64))
(declare-fun temp162_40 () (_ BitVec 64))
(declare-fun temp162_41 () (_ BitVec 64))
(declare-fun var1053718 () (_ BitVec 64))
(declare-fun temp162_43 () (_ BitVec 64))
(declare-fun temp162_42 () (_ BitVec 64))
(declare-fun temp162_44 () (_ BitVec 64))
(declare-fun temp162_45 () (_ BitVec 64))
(declare-fun var2231831 () (_ BitVec 64))
(declare-fun temp162_46 () (_ BitVec 64))
(declare-fun var1053916 () (_ BitVec 64))
(declare-fun temp162_47 () (_ BitVec 64))
(declare-fun temp162_49 () (_ BitVec 64))
(declare-fun temp162_48 () (_ BitVec 64))
(declare-fun temp162_50 () (_ BitVec 64))
(declare-fun var3280407 () (_ BitVec 64))
(declare-fun temp162_51 () (_ BitVec 64))
(declare-fun var1054130 () (_ BitVec 64))
(declare-fun temp162_52 () (_ BitVec 64))
(assert (= temp162_2 #x0000000000000000))
(assert (= temp162_1 temp162_2))
(assert (= temp162_4 #x0000000000000001))
(assert (= temp162_3 temp162_4))
(assert (= temp162_5 #x0000000000000000))
(assert (= var1053590
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp162_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp162_6 #x0000000000000001))
(assert (= var1053590 temp162_6))
(assert (= temp162_7 #x0000000000000003))
(assert (= var1053593
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp162_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp162_8 #x0000000000000001))
(assert (= var1053593 temp162_8))
(assert (= temp162_9 #x0000000000000001))
(assert (= var1053653
   (ite (bvslt ARGNAME_num_samples_NAMEEND temp162_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp162_10 #x0000000000000000))
(assert (= var1053653 temp162_10))
(assert (= temp162_11 #xffffffffffffffff))
(assert (= var1053664 temp162_11))
(assert (= temp162_12 #x0000000000000000))
(assert (= temp162_13 temp162_12))
(assert (= temp162_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp162_13)))
(assert (= temp162_15 #x0000000000000001))
(assert (= temp162_16 temp162_15))
(assert (= temp162_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp162_16)))
(assert (= temp162_18 #x0000000000000002))
(assert (= temp162_19 temp162_18))
(assert (= temp162_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp162_19)))
(assert (= temp162_21 #x0000000000000003))
(assert (= temp162_22 temp162_21))
(assert (= temp162_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp162_22)))
(assert (= temp162_24 #x0000000000000004))
(assert (= temp162_25 temp162_24))
(assert (= temp162_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp162_25)))
(assert (= temp162_27 #x0000000000000005))
(assert (= temp162_28 temp162_27))
(assert (= temp162_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp162_28)))
(assert (= temp162_30 #x0000000000000000))
(assert (= temp162_31
   (ite (bvslt var1053664 temp162_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
        var1053664)))
(assert (= temp162_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp162_31)))
(assert (= var1053663 temp162_32))
(assert (bvslt (ite (bvslt var1053664 temp162_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
            var1053664)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var1053668
   (ite (bvsle ARGNAME_num_samples_NAMEEND var1053663)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1053669 (bvor var1053668 ARGNAME_replacement_NAMEEND)))
(assert (= temp162_33 #x0000000000000001))
(assert (= var1053669 temp162_33))
(assert (= temp162_34 #x0000000001000000))
(assert (= var1053679
   (ite (bvsgt var1053663 temp162_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp162_35 #x0000000000000000))
(assert (= var1053679 temp162_35))
(assert (= temp162_36 #x0000000000000001))
(assert (= var1053691
   (ite (= ARGNAME_input_NAMEEND_DIM temp162_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp162_37 #x0000000000000000))
(assert (= var1053691 temp162_37))
(assert (= temp162_38 #x0000000000000000))
(assert (= var1049127 temp162_38))
(assert (= temp162_39 #x0000000000000000))
(assert (= temp162_40
   (ite (bvslt var1049127 temp162_39)
        (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
        var1049127)))
(assert (= temp162_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp162_40)))
(assert (= var1053718 temp162_41))
(assert (bvslt (ite (bvslt var1049127 temp162_39)
            (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
            var1049127)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp162_43 #x0000000000000002))
(assert (= temp162_42 temp162_43))
(assert (= temp162_44 #x0000000000000000))
(assert (= ARGNAME_replacement_NAMEEND temp162_44))
(assert (= temp162_45 #x0000000000000000))
(assert (= var2231831 temp162_45))
(assert (= temp162_46 #x0000000000000001))
(assert (= var1053916
   (ite (= ARGNAME_input_NAMEEND_DIM temp162_46)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp162_47 #x0000000000000000))
(assert (= var1053916 temp162_47))
(assert (= temp162_49 #x0000000000000001))
(assert (= temp162_48 temp162_49))
(assert (= temp162_50 #x0000000000000000))
(assert (= var3280407 temp162_50))
(assert (= temp162_51 #x0000000000000001))
(assert (= var1054130
   (ite (= ARGNAME_num_samples_NAMEEND temp162_51)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp162_52 #x0000000000000000))
(assert (= var1054130 temp162_52))
(model-add temp162_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp162_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp162_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp162_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp162_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp162_6 () (_ BitVec 64) #x0000000000000001)
(model-add var1053590 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






