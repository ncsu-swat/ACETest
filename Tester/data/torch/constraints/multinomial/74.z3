(declare-fun temp146_2 () (_ BitVec 64))
(declare-fun temp146_1 () (_ BitVec 64))
(declare-fun temp146_4 () (_ BitVec 64))
(declare-fun temp146_3 () (_ BitVec 64))
(declare-fun temp146_5 () (_ BitVec 64))
(declare-fun temp146_6 () (_ BitVec 64))
(declare-fun var1053590 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp146_7 () (_ BitVec 64))
(declare-fun var1053593 () (_ BitVec 64))
(declare-fun temp146_8 () (_ BitVec 64))
(declare-fun temp146_9 () (_ BitVec 64))
(declare-fun ARGNAME_num_samples_NAMEEND () (_ BitVec 64))
(declare-fun var1053653 () (_ BitVec 64))
(declare-fun temp146_10 () (_ BitVec 64))
(declare-fun temp146_11 () (_ BitVec 64))
(declare-fun var1053664 () (_ BitVec 64))
(declare-fun temp146_12 () (_ BitVec 64))
(declare-fun temp146_13 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp146_14 () (_ BitVec 64))
(declare-fun temp146_15 () (_ BitVec 64))
(declare-fun temp146_16 () (_ BitVec 64))
(declare-fun temp146_17 () (_ BitVec 64))
(declare-fun temp146_18 () (_ BitVec 64))
(declare-fun temp146_19 () (_ BitVec 64))
(declare-fun temp146_20 () (_ BitVec 64))
(declare-fun temp146_21 () (_ BitVec 64))
(declare-fun temp146_22 () (_ BitVec 64))
(declare-fun temp146_23 () (_ BitVec 64))
(declare-fun temp146_24 () (_ BitVec 64))
(declare-fun temp146_25 () (_ BitVec 64))
(declare-fun temp146_26 () (_ BitVec 64))
(declare-fun temp146_27 () (_ BitVec 64))
(declare-fun temp146_28 () (_ BitVec 64))
(declare-fun temp146_29 () (_ BitVec 64))
(declare-fun temp146_30 () (_ BitVec 64))
(declare-fun temp146_31 () (_ BitVec 64))
(declare-fun temp146_32 () (_ BitVec 64))
(declare-fun var1053663 () (_ BitVec 64))
(declare-fun var1053668 () (_ BitVec 64))
(declare-fun ARGNAME_replacement_NAMEEND () (_ BitVec 64))
(declare-fun var1053669 () (_ BitVec 64))
(declare-fun temp146_33 () (_ BitVec 64))
(declare-fun temp146_34 () (_ BitVec 64))
(declare-fun var1053679 () (_ BitVec 64))
(declare-fun temp146_35 () (_ BitVec 64))
(declare-fun temp146_36 () (_ BitVec 64))
(declare-fun var1053691 () (_ BitVec 64))
(declare-fun temp146_37 () (_ BitVec 64))
(declare-fun temp146_38 () (_ BitVec 64))
(declare-fun var1049127 () (_ BitVec 64))
(declare-fun temp146_39 () (_ BitVec 64))
(declare-fun temp146_40 () (_ BitVec 64))
(declare-fun temp146_41 () (_ BitVec 64))
(declare-fun var1053718 () (_ BitVec 64))
(declare-fun temp146_43 () (_ BitVec 64))
(declare-fun temp146_42 () (_ BitVec 64))
(declare-fun temp146_44 () (_ BitVec 64))
(declare-fun temp146_45 () (_ BitVec 64))
(declare-fun var2231831 () (_ BitVec 64))
(declare-fun temp146_46 () (_ BitVec 64))
(declare-fun var1053916 () (_ BitVec 64))
(declare-fun temp146_47 () (_ BitVec 64))
(declare-fun temp146_49 () (_ BitVec 64))
(declare-fun temp146_48 () (_ BitVec 64))
(declare-fun temp146_50 () (_ BitVec 64))
(declare-fun var3280407 () (_ BitVec 64))
(declare-fun temp146_51 () (_ BitVec 64))
(declare-fun var1054130 () (_ BitVec 64))
(declare-fun temp146_52 () (_ BitVec 64))
(assert (= temp146_2 #x0000000000000000))
(assert (= temp146_1 temp146_2))
(assert (= temp146_4 #x0000000000000001))
(assert (= temp146_3 temp146_4))
(assert (= temp146_5 #x0000000000000000))
(assert (= var1053590
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp146_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_6 #x0000000000000001))
(assert (= var1053590 temp146_6))
(assert (= temp146_7 #x0000000000000003))
(assert (= var1053593
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp146_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_8 #x0000000000000001))
(assert (= var1053593 temp146_8))
(assert (= temp146_9 #x0000000000000001))
(assert (= var1053653
   (ite (bvslt ARGNAME_num_samples_NAMEEND temp146_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_10 #x0000000000000000))
(assert (= var1053653 temp146_10))
(assert (= temp146_11 #xffffffffffffffff))
(assert (= var1053664 temp146_11))
(assert (= temp146_12 #x0000000000000000))
(assert (= temp146_13 temp146_12))
(assert (= temp146_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp146_13)))
(assert (= temp146_15 #x0000000000000001))
(assert (= temp146_16 temp146_15))
(assert (= temp146_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp146_16)))
(assert (= temp146_18 #x0000000000000002))
(assert (= temp146_19 temp146_18))
(assert (= temp146_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp146_19)))
(assert (= temp146_21 #x0000000000000003))
(assert (= temp146_22 temp146_21))
(assert (= temp146_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp146_22)))
(assert (= temp146_24 #x0000000000000004))
(assert (= temp146_25 temp146_24))
(assert (= temp146_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp146_25)))
(assert (= temp146_27 #x0000000000000005))
(assert (= temp146_28 temp146_27))
(assert (= temp146_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp146_28)))
(assert (= temp146_30 #x0000000000000000))
(assert (= temp146_31
   (ite (bvslt var1053664 temp146_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
        var1053664)))
(assert (= temp146_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp146_31)))
(assert (= var1053663 temp146_32))
(assert (bvslt (ite (bvslt var1053664 temp146_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1053664)
            var1053664)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var1053668
   (ite (bvsle ARGNAME_num_samples_NAMEEND var1053663)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1053669 (bvor var1053668 ARGNAME_replacement_NAMEEND)))
(assert (= temp146_33 #x0000000000000001))
(assert (= var1053669 temp146_33))
(assert (= temp146_34 #x0000000001000000))
(assert (= var1053679
   (ite (bvsgt var1053663 temp146_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp146_35 #x0000000000000000))
(assert (= var1053679 temp146_35))
(assert (= temp146_36 #x0000000000000001))
(assert (= var1053691
   (ite (= ARGNAME_input_NAMEEND_DIM temp146_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_37 #x0000000000000000))
(assert (= var1053691 temp146_37))
(assert (= temp146_38 #x0000000000000000))
(assert (= var1049127 temp146_38))
(assert (= temp146_39 #x0000000000000000))
(assert (= temp146_40
   (ite (bvslt var1049127 temp146_39)
        (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
        var1049127)))
(assert (= temp146_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp146_40)))
(assert (= var1053718 temp146_41))
(assert (bvslt (ite (bvslt var1049127 temp146_39)
            (bvadd ARGNAME_input_NAMEEND_DIM var1049127)
            var1049127)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp146_43 #x0000000000000002))
(assert (= temp146_42 temp146_43))
(assert (= temp146_44 #x0000000000000000))
(assert (= ARGNAME_replacement_NAMEEND temp146_44))
(assert (= temp146_45 #x0000000000000000))
(assert (= var2231831 temp146_45))
(assert (= temp146_46 #x0000000000000001))
(assert (= var1053916
   (ite (= ARGNAME_input_NAMEEND_DIM temp146_46)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_47 #x0000000000000000))
(assert (= var1053916 temp146_47))
(assert (= temp146_49 #x0000000000000001))
(assert (= temp146_48 temp146_49))
(assert (= temp146_50 #x0000000000000000))
(assert (= var3280407 temp146_50))
(assert (= temp146_51 #x0000000000000001))
(assert (= var1054130
   (ite (= ARGNAME_num_samples_NAMEEND temp146_51)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_52 #x0000000000000000))
(assert (= var1054130 temp146_52))
(model-add temp146_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp146_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp146_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp146_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp146_5 () (_ BitVec 64) #x0000000000000000)
(model-add temp146_6 () (_ BitVec 64) #x0000000000000001)
(model-add var1053590 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






