(declare-fun temp1799_1 () (_ BitVec 64))
(declare-fun temp1799_2 () (_ BitVec 64))
(declare-fun var393929 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_group_NAMEEND () (_ BitVec 64))
(declare-fun ARGNAME_C_NAMEEND () (_ BitVec 64))
(declare-fun var393960 () (_ BitVec 64))
(declare-fun temp1799_3 () (_ BitVec 64))
(declare-fun var393961 () (_ BitVec 64))
(declare-fun temp1799_4 () (_ BitVec 64))
(declare-fun temp1799_5 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var394002 () (_ BitVec 64))
(declare-fun temp1799_6 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var394007 () (_ BitVec 64))
(declare-fun temp1799_7 () (_ BitVec 64))
(declare-fun temp1799_8 () (_ BitVec 64))
(declare-fun var722895 () (_ BitVec 64))
(declare-fun temp1799_9 () (_ BitVec 64))
(declare-fun var988274 () (_ BitVec 64))
(declare-fun temp1799_10 () (_ BitVec 64))
(declare-fun var1049956 () (_ BitVec 64))
(declare-fun temp1799_11 () (_ BitVec 64))
(declare-fun temp1799_12 () (_ BitVec 64))
(declare-fun var722929 () (_ BitVec 64))
(declare-fun temp1799_13 () (_ BitVec 64))
(declare-fun temp1799_14 () (_ BitVec 64))
(declare-fun var722983 () (_ BitVec 64))
(declare-fun var722893 () (_ BitVec 64))
(declare-fun var67216 () (_ BitVec 64))
(declare-fun var67220 () (_ BitVec 64))
(declare-fun var1116209 () (_ BitVec 64))
(declare-fun var1249586 () (_ BitVec 64))
(declare-fun temp1799_15 () (_ BitVec 64))
(declare-fun var1312100 () (_ BitVec 64))
(declare-fun var1312108 () (_ BitVec 64))
(declare-fun temp1799_17 () (_ BitVec 64))
(declare-fun temp1799_16 () (_ BitVec 64))
(declare-fun temp1799_19 () (_ BitVec 64))
(declare-fun temp1799_18 () (_ BitVec 64))
(assert (= temp1799_1 #x0000000000000001))
(assert (= var393929
   (ite (bvslt ARGNAME_group_NAMEEND temp1799_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1799_2 #x0000000000000000))
(assert (= var393929 temp1799_2))
(assert (= var393960 (bvsmod ARGNAME_C_NAMEEND ARGNAME_group_NAMEEND)))
(assert (= temp1799_3 #x0000000000000000))
(assert (= var393961
   (ite (= var393960 temp1799_3) #x0000000000000001 #x0000000000000000)))
(assert (= temp1799_4 #x0000000000000001))
(assert (= var393961 temp1799_4))
(assert (= temp1799_5 #x0000000000000001))
(assert (= var394002
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1799_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1799_6 #x0000000000000001))
(assert (= var394002 temp1799_6))
(assert (= var394007
   (ite (= ARGNAME_weight_NAMEEND_NUMELEMENT ARGNAME_C_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1799_7 #x0000000000000001))
(assert (= var394007 temp1799_7))
(assert (= temp1799_8 #x0000000000000000))
(assert (= var722895 temp1799_8))
(assert (= temp1799_9 #x0000000000000002))
(assert (= var988274 temp1799_9))
(assert (= temp1799_10 #x0000000000000001))
(assert (= var1049956 temp1799_10))
(assert (= temp1799_11 #x0000000000000000))
(assert (= var722895 temp1799_11))
(assert (= temp1799_12 #x0000000000000000))
(assert (= var722929 temp1799_12))
(assert (= temp1799_13 #x0000000000000000))
(assert (= var722929 temp1799_13))
(assert (= temp1799_14 #x0000000000000002))
(assert (= var722983 temp1799_14))
(assert (= var722893 var722983))
(assert (= var67216 var722893))
(assert (= var67220 var67216))
(assert (= var1116209 var67220))
(assert (= var1249586 var1116209))
(assert (= temp1799_15 #x0000000000000001))
(assert (= var1312100 temp1799_15))
(assert (= var1312108 var1312100))
(assert (= temp1799_17 #x0000000000000002))
(assert (= temp1799_16 temp1799_17))
(assert (= temp1799_19 #x0000000000000002))
(assert (= temp1799_18 temp1799_19))
(model-add temp1799_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp1799_2 () (_ BitVec 64) #x0000000000000000)
(model-add var393929 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_group_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000001 #x8000000000000000))
                #x0000000000000001
                (bvsub #x0000000000000001 #x0000000000000001)))






