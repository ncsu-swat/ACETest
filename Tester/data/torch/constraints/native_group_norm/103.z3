(declare-fun temp3097_1 () (_ BitVec 64))
(declare-fun temp3097_2 () (_ BitVec 64))
(declare-fun var393929 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_group_NAMEEND () (_ BitVec 64))
(declare-fun ARGNAME_C_NAMEEND () (_ BitVec 64))
(declare-fun var393960 () (_ BitVec 64))
(declare-fun temp3097_3 () (_ BitVec 64))
(declare-fun var393961 () (_ BitVec 64))
(declare-fun temp3097_4 () (_ BitVec 64))
(declare-fun temp3097_5 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var394002 () (_ BitVec 64))
(declare-fun temp3097_6 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var394007 () (_ BitVec 64))
(declare-fun temp3097_7 () (_ BitVec 64))
(declare-fun temp3097_8 () (_ BitVec 64))
(declare-fun var722895 () (_ BitVec 64))
(declare-fun temp3097_9 () (_ BitVec 64))
(declare-fun var722983 () (_ BitVec 64))
(declare-fun var722893 () (_ BitVec 64))
(declare-fun var67216 () (_ BitVec 64))
(declare-fun var67220 () (_ BitVec 64))
(declare-fun var854065 () (_ BitVec 64))
(declare-fun var987442 () (_ BitVec 64))
(declare-fun temp3097_10 () (_ BitVec 64))
(declare-fun var1049956 () (_ BitVec 64))
(declare-fun var1049964 () (_ BitVec 64))
(declare-fun var1118532 () (_ BitVec 64))
(declare-fun temp3097_11 () (_ BitVec 64))
(declare-fun var1118539 () (_ BitVec 64))
(declare-fun temp3097_12 () (_ BitVec 64))
(declare-fun temp3097_13 () (_ BitVec 64))
(declare-fun var1118574 () (_ BitVec 64))
(declare-fun temp3097_14 () (_ BitVec 64))
(declare-fun temp3097_16 () (_ BitVec 64))
(declare-fun temp3097_15 () (_ BitVec 64))
(declare-fun temp3097_18 () (_ BitVec 64))
(declare-fun temp3097_17 () (_ BitVec 64))
(assert (= temp3097_1 #x0000000000000001))
(assert (= var393929
   (ite (bvslt ARGNAME_group_NAMEEND temp3097_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3097_2 #x0000000000000000))
(assert (= var393929 temp3097_2))
(assert (= var393960 (bvsmod ARGNAME_C_NAMEEND ARGNAME_group_NAMEEND)))
(assert (= temp3097_3 #x0000000000000000))
(assert (= var393961
   (ite (= var393960 temp3097_3) #x0000000000000001 #x0000000000000000)))
(assert (= temp3097_4 #x0000000000000001))
(assert (= var393961 temp3097_4))
(assert (= temp3097_5 #x0000000000000001))
(assert (= var394002
   (ite (= ARGNAME_weight_NAMEEND_DIM temp3097_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3097_6 #x0000000000000001))
(assert (= var394002 temp3097_6))
(assert (= var394007
   (ite (= ARGNAME_weight_NAMEEND_NUMELEMENT ARGNAME_C_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3097_7 #x0000000000000001))
(assert (= var394007 temp3097_7))
(assert (= temp3097_8 #x0000000000000000))
(assert (= var722895 temp3097_8))
(assert (= temp3097_9 #x0000000000000000))
(assert (= var722983 temp3097_9))
(assert (= var722893 var722983))
(assert (= var67216 var722893))
(assert (= var67220 var67216))
(assert (= var854065 var67220))
(assert (= var987442 var854065))
(assert (= temp3097_10 #x0000000000000001))
(assert (= var1049956 temp3097_10))
(assert (= var1049964 var1049956))
(assert (= var1118532 var987442))
(assert (= temp3097_11 #x0000000000000002))
(assert (= var1118539
   (ite (= var1118532 temp3097_11) #x0000000000000001 #x0000000000000000)))
(assert (= temp3097_12 #x0000000000000000))
(assert (= var1118539 temp3097_12))
(assert (= temp3097_13 #x0000000000000003))
(assert (= var1118574
   (ite (= var1118532 temp3097_13) #x0000000000000001 #x0000000000000000)))
(assert (= temp3097_14 #x0000000000000000))
(assert (= var1118574 temp3097_14))
(assert (= temp3097_16 #x0000000000000002))
(assert (= temp3097_15 temp3097_16))
(assert (= temp3097_18 #x0000000000000002))
(assert (= temp3097_17 temp3097_18))
(model-add temp3097_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp3097_2 () (_ BitVec 64) #x0000000000000000)
(model-add var393929 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_group_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000001 #x8000000000000000))
                #x0000000000000001
                (bvsub #x0000000000000001 #x0000000000000001)))






