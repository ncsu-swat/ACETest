(declare-fun temp5673_1 () (_ BitVec 64))
(declare-fun temp5673_2 () (_ BitVec 64))
(declare-fun var393929 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_group_NAMEEND () (_ BitVec 64))
(declare-fun ARGNAME_C_NAMEEND () (_ BitVec 64))
(declare-fun var393960 () (_ BitVec 64))
(declare-fun temp5673_3 () (_ BitVec 64))
(declare-fun var393961 () (_ BitVec 64))
(declare-fun temp5673_4 () (_ BitVec 64))
(declare-fun temp5673_5 () (_ BitVec 64))
(declare-fun var722895 () (_ BitVec 64))
(declare-fun temp5673_6 () (_ BitVec 64))
(declare-fun var988274 () (_ BitVec 64))
(declare-fun temp5673_7 () (_ BitVec 64))
(declare-fun var1049956 () (_ BitVec 64))
(declare-fun var1119364 () (_ BitVec 64))
(declare-fun temp5673_8 () (_ BitVec 64))
(declare-fun temp5673_9 () (_ BitVec 64))
(declare-fun var722929 () (_ BitVec 64))
(declare-fun temp5673_10 () (_ BitVec 64))
(declare-fun temp5673_11 () (_ BitVec 64))
(declare-fun var722983 () (_ BitVec 64))
(declare-fun var722893 () (_ BitVec 64))
(declare-fun var67216 () (_ BitVec 64))
(declare-fun var67220 () (_ BitVec 64))
(declare-fun var1181745 () (_ BitVec 64))
(declare-fun var1315122 () (_ BitVec 64))
(declare-fun temp5673_12 () (_ BitVec 64))
(declare-fun var1377636 () (_ BitVec 64))
(declare-fun var1377644 () (_ BitVec 64))
(declare-fun var1446212 () (_ BitVec 64))
(declare-fun temp5673_13 () (_ BitVec 64))
(declare-fun var1446219 () (_ BitVec 64))
(declare-fun temp5673_14 () (_ BitVec 64))
(declare-fun temp5673_15 () (_ BitVec 64))
(declare-fun var1446254 () (_ BitVec 64))
(declare-fun temp5673_16 () (_ BitVec 64))
(declare-fun temp5673_18 () (_ BitVec 64))
(declare-fun temp5673_17 () (_ BitVec 64))
(declare-fun temp5673_20 () (_ BitVec 64))
(declare-fun temp5673_19 () (_ BitVec 64))
(assert (= temp5673_1 #x0000000000000001))
(assert (= var393929
   (ite (bvslt ARGNAME_group_NAMEEND temp5673_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp5673_2 #x0000000000000000))
(assert (= var393929 temp5673_2))
(assert (= var393960 (bvsmod ARGNAME_C_NAMEEND ARGNAME_group_NAMEEND)))
(assert (= temp5673_3 #x0000000000000000))
(assert (= var393961
   (ite (= var393960 temp5673_3) #x0000000000000001 #x0000000000000000)))
(assert (= temp5673_4 #x0000000000000001))
(assert (= var393961 temp5673_4))
(assert (= temp5673_5 #x0000000000000000))
(assert (= var722895 temp5673_5))
(assert (= temp5673_6 #x0000000000000002))
(assert (= var988274 temp5673_6))
(assert (= temp5673_7 #x0000000000000001))
(assert (= var1049956 temp5673_7))
(assert (= var1119364 var988274))
(assert (= temp5673_8 #x0000000000000000))
(assert (= var722895 temp5673_8))
(assert (= temp5673_9 #x0000000000000000))
(assert (= var722929 temp5673_9))
(assert (= temp5673_10 #x0000000000000000))
(assert (= var722929 temp5673_10))
(assert (= temp5673_11 #x0000000000000000))
(assert (= var722983 temp5673_11))
(assert (= var722893 var722983))
(assert (= var67216 var722893))
(assert (= var67220 var67216))
(assert (= var1181745 var67220))
(assert (= var1315122 var1181745))
(assert (= temp5673_12 #x0000000000000001))
(assert (= var1377636 temp5673_12))
(assert (= var1377644 var1377636))
(assert (= var1446212 var1315122))
(assert (= temp5673_13 #x0000000000000002))
(assert (= var1446219
   (ite (= var1446212 temp5673_13) #x0000000000000001 #x0000000000000000)))
(assert (= temp5673_14 #x0000000000000000))
(assert (= var1446219 temp5673_14))
(assert (= temp5673_15 #x0000000000000003))
(assert (= var1446254
   (ite (= var1446212 temp5673_15) #x0000000000000001 #x0000000000000000)))
(assert (= temp5673_16 #x0000000000000000))
(assert (= var1446254 temp5673_16))
(assert (= temp5673_18 #x0000000000000002))
(assert (= temp5673_17 temp5673_18))
(assert (= temp5673_20 #x0000000000000002))
(assert (= temp5673_19 temp5673_20))
(model-add temp5673_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp5673_2 () (_ BitVec 64) #x0000000000000000)
(model-add var393929 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_group_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000001 #x8000000000000000))
                #x0000000000000001
                (bvsub #x0000000000000001 #x0000000000000001)))






