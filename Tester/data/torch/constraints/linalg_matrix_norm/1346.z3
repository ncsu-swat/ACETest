(declare-fun temp10346_1 () (_ BitVec 64))
(declare-fun var266967 () (_ BitVec 64))
(declare-fun var266943 () (_ BitVec 64))
(declare-fun var201281 () (_ BitVec 64))
(declare-fun temp10346_2 () (_ BitVec 64))
(declare-fun temp10346_3 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1643603 () (_ BitVec 64))
(declare-fun temp10346_4 () (_ BitVec 64))
(declare-fun temp10346_5 () (_ BitVec 64))
(declare-fun var2314865 () (_ BitVec 64))
(declare-fun temp10346_6 () (_ BitVec 64))
(declare-fun var2314866 () (_ BitVec 64))
(declare-fun temp10346_7 () (_ BitVec 64))
(declare-fun var2314873 () (_ BitVec 64))
(declare-fun var2314907 () (_ BitVec 64))
(declare-fun temp10346_8 () (_ BitVec 64))
(declare-fun var2831165 () (_ BitVec 64))
(declare-fun temp10346_9 () (_ BitVec 64))
(declare-fun var2896701 () (_ BitVec 64))
(declare-fun temp10346_10 () (_ BitVec 64))
(declare-fun var3409630 () (_ BitVec 64))
(declare-fun var3409574 () (_ BitVec 64))
(declare-fun var3016235 () (_ BitVec 64))
(declare-fun temp10346_11 () (_ BitVec 64))
(declare-fun var3486525 () (_ BitVec 64))
(declare-fun temp10346_12 () (_ BitVec 64))
(declare-fun var3552061 () (_ BitVec 64))
(declare-fun temp10346_13 () (_ BitVec 64))
(declare-fun ARGNAME_keepdim_NAMEEND () (_ BitVec 64))
(declare-fun temp10346_14 () (_ BitVec 64))
(declare-fun var3617597 () (_ BitVec 64))
(declare-fun temp10346_15 () (_ BitVec 64))
(declare-fun var3683133 () (_ BitVec 64))
(declare-fun temp10346_16 () (_ BitVec 64))
(declare-fun var3748669 () (_ BitVec 64))
(declare-fun temp10346_17 () (_ BitVec 64))
(declare-fun var3879741 () (_ BitVec 64))
(declare-fun temp10346_19 () (_ BitVec 64))
(declare-fun temp10346_18 () (_ BitVec 64))
(declare-fun temp10346_20 () (_ BitVec 64))
(declare-fun var3945277 () (_ BitVec 64))
(assert (= temp10346_1 #x0000000000000001))
(assert (= var266967 temp10346_1))
(assert (= var266943 var266967))
(assert (= var201281 var266943))
(assert (= temp10346_2 #x0000000000000001))
(assert (= var201281 temp10346_2))
(assert (= temp10346_3 #x0000000000000002))
(assert (= var1643603
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp10346_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10346_4 #x0000000000000000))
(assert (= var1643603 temp10346_4))
(assert (= temp10346_5 #x0000000000000001))
(assert (= var2314865
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp10346_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10346_6 #x0000000000000001))
(assert (= var2314866
   (ite (= var2314865 #x0000000000000001) ARGNAME_input_NAMEEND_DIM temp10346_6)))
(assert (= temp10346_7 #xffffffffffffffff))
(assert (= var2314873 (bvadd var2314866 temp10346_7)))
(assert (= var2314907 var2314873))
(assert (= temp10346_8 #x0000000000000000))
(assert (= var2831165 temp10346_8))
(assert (= temp10346_9 #x0000000000000001))
(assert (= var2896701 temp10346_9))
(assert (= temp10346_10 #x0000000000000012))
(assert (= var3409630 temp10346_10))
(assert (= var3409574 var3409630))
(assert (= var3016235 var3409574))
(assert (= temp10346_11 #x0000000000000000))
(assert (= var3486525 temp10346_11))
(assert (= temp10346_12 #x0000000000000001))
(assert (= var3552061 temp10346_12))
(assert (= temp10346_13 #x0000000000000000))
(assert (= ARGNAME_keepdim_NAMEEND temp10346_13))
(assert (= temp10346_14 #x0000000000000000))
(assert (= var3617597 temp10346_14))
(assert (= temp10346_15 #x0000000000000001))
(assert (= var3683133 temp10346_15))
(assert (= temp10346_16 #x0000000000000001))
(assert (= var3748669 temp10346_16))
(assert (= temp10346_17 #x0000000000000000))
(assert (= var3879741 temp10346_17))
(assert (= temp10346_19 #x0000000000000001))
(assert (= temp10346_18 temp10346_19))
(assert (= temp10346_20 #x0000000000000001))
(assert (= var3945277 temp10346_20))
(model-add temp10346_1 () (_ BitVec 64) #x0000000000000001)
(model-add var266967 () (_ BitVec 64) #x0000000000000001)
(model-add var266943 () (_ BitVec 64) #x0000000000000001)
(model-add var201281 () (_ BitVec 64) #x0000000000000001)
(model-add temp10346_2 () (_ BitVec 64) #x0000000000000001)




