(declare-fun temp690_1 () (_ BitVec 64))
(declare-fun temp690_2 () (_ BitVec 64))
(declare-fun var201811 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp690_4 () (_ BitVec 64))
(declare-fun temp690_3 () (_ BitVec 64))
(declare-fun temp690_6 () (_ BitVec 64))
(declare-fun temp690_5 () (_ BitVec 64))
(declare-fun temp690_7 () (_ BitVec 64))
(declare-fun var1643329 () (_ BitVec 64))
(declare-fun temp690_8 () (_ BitVec 64))
(declare-fun temp690_9 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp690_10 () (_ BitVec 64))
(declare-fun temp690_11 () (_ BitVec 64))
(declare-fun temp690_12 () (_ BitVec 64))
(declare-fun temp690_13 () (_ BitVec 64))
(declare-fun temp690_14 () (_ BitVec 64))
(declare-fun temp690_15 () (_ BitVec 64))
(declare-fun temp690_16 () (_ BitVec 64))
(declare-fun temp690_17 () (_ BitVec 64))
(declare-fun temp690_18 () (_ BitVec 64))
(declare-fun temp690_19 () (_ BitVec 64))
(declare-fun temp690_20 () (_ BitVec 64))
(declare-fun temp690_21 () (_ BitVec 64))
(declare-fun temp690_22 () (_ BitVec 64))
(declare-fun temp690_23 () (_ BitVec 64))
(declare-fun temp690_24 () (_ BitVec 64))
(declare-fun temp690_25 () (_ BitVec 64))
(declare-fun temp690_26 () (_ BitVec 64))
(declare-fun temp690_27 () (_ BitVec 64))
(declare-fun temp690_28 () (_ BitVec 64))
(declare-fun var1647178 () (_ BitVec 64))
(declare-fun temp690_29 () (_ BitVec 64))
(declare-fun var1643331 () (_ BitVec 64))
(declare-fun temp690_30 () (_ BitVec 64))
(declare-fun temp690_31 () (_ BitVec 64))
(declare-fun temp690_32 () (_ BitVec 64))
(declare-fun var1647182 () (_ BitVec 64))
(declare-fun var2888630 () (_ BitVec 64))
(declare-fun var2888631 () (_ BitVec 64))
(declare-fun var2888632 () (_ BitVec 64))
(declare-fun temp690_33 () (_ BitVec 64))
(declare-fun temp690_34 () (_ BitVec 64))
(declare-fun var7810167 () (_ BitVec 64))
(declare-fun var7874022 () (_ BitVec 64))
(declare-fun var7931526 () (_ BitVec 64))
(declare-fun var7997042 () (_ BitVec 64))
(declare-fun temp690_35 () (_ BitVec 64))
(declare-fun var7874034 () (_ BitVec 64))
(declare-fun temp690_36 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var1256064 () (_ BitVec 64))
(declare-fun temp690_37 () (_ BitVec 64))
(declare-fun temp690_38 () (_ BitVec 64))
(declare-fun var9509101 () (_ BitVec 64))
(assert (= temp690_1 #x0000000000000002))
(assert (= var201811
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp690_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp690_2 #x0000000000000000))
(assert (= var201811 temp690_2))
(assert (= temp690_4 #x0000000000000004))
(assert (= temp690_3 temp690_4))
(assert (= temp690_6 #x0000000000000007))
(assert (= temp690_5 temp690_6))
(assert (= temp690_7 #xffffffffffffffff))
(assert (= var1643329 temp690_7))
(assert (= temp690_8 #x0000000000000000))
(assert (= temp690_9 temp690_8))
(assert (= temp690_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp690_9)))
(assert (= temp690_11 #x0000000000000001))
(assert (= temp690_12 temp690_11))
(assert (= temp690_13 (select ARGNAME_input_NAMEEND_DIMSIZE temp690_12)))
(assert (= temp690_14 #x0000000000000002))
(assert (= temp690_15 temp690_14))
(assert (= temp690_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp690_15)))
(assert (= temp690_17 #x0000000000000003))
(assert (= temp690_18 temp690_17))
(assert (= temp690_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp690_18)))
(assert (= temp690_20 #x0000000000000004))
(assert (= temp690_21 temp690_20))
(assert (= temp690_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp690_21)))
(assert (= temp690_23 #x0000000000000005))
(assert (= temp690_24 temp690_23))
(assert (= temp690_25 (select ARGNAME_input_NAMEEND_DIMSIZE temp690_24)))
(assert (= temp690_26 #x0000000000000000))
(assert (= temp690_27
   (ite (bvslt var1643329 temp690_26)
        (bvadd ARGNAME_input_NAMEEND_DIM var1643329)
        var1643329)))
(assert (= temp690_28 (select ARGNAME_input_NAMEEND_DIMSIZE temp690_27)))
(assert (= var1647178 temp690_28))
(assert (bvslt (ite (bvslt var1643329 temp690_26)
            (bvadd ARGNAME_input_NAMEEND_DIM var1643329)
            var1643329)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp690_29 #xfffffffffffffffe))
(assert (= var1643331 temp690_29))
(assert (= temp690_30 #x0000000000000000))
(assert (= temp690_31
   (ite (bvslt var1643331 temp690_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1643331)
        var1643331)))
(assert (= temp690_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp690_31)))
(assert (= var1647182 temp690_32))
(assert (bvslt (ite (bvslt var1643331 temp690_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1643331)
            var1643331)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var2888630 var1647178))
(assert (= var2888631 var1647182))
(assert (= var2888632
   (ite (bvslt var2888630 var2888631) #x0000000000000001 #x0000000000000000)))
(assert (= temp690_33 (ite (= var2888632 #x0000000000000001) var1647182 var1647178)))
(assert (= temp690_34 #x0000000000000004))
(assert (= var7810167 temp690_34))
(assert (= var7874022 var7810167))
(assert (= var7931526 var7874022))
(assert (= var7997042 var7874022))
(assert (= temp690_35 #x000000000000000b))
(assert (= var7874034
   (ite (= var7874022 temp690_35) #x0000000000000001 #x0000000000000000)))
(assert (= temp690_36 #x0000000000000000))
(assert (= var1256064
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp690_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp690_37 #x0000000000000001))
(assert (= var1256064 temp690_37))
(assert (= temp690_38 #x0000000000000000))
(assert (= var9509101 temp690_38))
(model-add temp690_1 () (_ BitVec 64) #x0000000000000002)
(model-add temp690_2 () (_ BitVec 64) #x0000000000000000)
(model-add var201811 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000002 #x8000000000000000))
                #x0000000000000002
                (bvsub #x0000000000000002 #x0000000000000001)))






