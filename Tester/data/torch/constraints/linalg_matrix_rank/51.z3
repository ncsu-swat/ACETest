(declare-fun temp678_1 () (_ BitVec 64))
(declare-fun temp678_2 () (_ BitVec 64))
(declare-fun var201811 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp678_4 () (_ BitVec 64))
(declare-fun temp678_3 () (_ BitVec 64))
(declare-fun temp678_6 () (_ BitVec 64))
(declare-fun temp678_5 () (_ BitVec 64))
(declare-fun temp678_7 () (_ BitVec 64))
(declare-fun var1643329 () (_ BitVec 64))
(declare-fun temp678_8 () (_ BitVec 64))
(declare-fun temp678_9 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp678_10 () (_ BitVec 64))
(declare-fun temp678_11 () (_ BitVec 64))
(declare-fun temp678_12 () (_ BitVec 64))
(declare-fun temp678_13 () (_ BitVec 64))
(declare-fun temp678_14 () (_ BitVec 64))
(declare-fun temp678_15 () (_ BitVec 64))
(declare-fun temp678_16 () (_ BitVec 64))
(declare-fun temp678_17 () (_ BitVec 64))
(declare-fun temp678_18 () (_ BitVec 64))
(declare-fun temp678_19 () (_ BitVec 64))
(declare-fun temp678_20 () (_ BitVec 64))
(declare-fun temp678_21 () (_ BitVec 64))
(declare-fun temp678_22 () (_ BitVec 64))
(declare-fun temp678_23 () (_ BitVec 64))
(declare-fun temp678_24 () (_ BitVec 64))
(declare-fun temp678_25 () (_ BitVec 64))
(declare-fun temp678_26 () (_ BitVec 64))
(declare-fun temp678_27 () (_ BitVec 64))
(declare-fun temp678_28 () (_ BitVec 64))
(declare-fun var1647178 () (_ BitVec 64))
(declare-fun temp678_29 () (_ BitVec 64))
(declare-fun var1643331 () (_ BitVec 64))
(declare-fun temp678_30 () (_ BitVec 64))
(declare-fun temp678_31 () (_ BitVec 64))
(declare-fun temp678_32 () (_ BitVec 64))
(declare-fun var1647182 () (_ BitVec 64))
(declare-fun var2888630 () (_ BitVec 64))
(declare-fun var2888631 () (_ BitVec 64))
(declare-fun var2888632 () (_ BitVec 64))
(declare-fun temp678_33 () (_ BitVec 64))
(declare-fun temp678_34 () (_ BitVec 64))
(declare-fun var7810167 () (_ BitVec 64))
(declare-fun var7874022 () (_ BitVec 64))
(declare-fun var7931526 () (_ BitVec 64))
(declare-fun var8062578 () (_ BitVec 64))
(declare-fun temp678_35 () (_ BitVec 64))
(declare-fun var7874034 () (_ BitVec 64))
(declare-fun temp678_36 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var1256064 () (_ BitVec 64))
(declare-fun temp678_37 () (_ BitVec 64))
(declare-fun temp678_38 () (_ BitVec 64))
(declare-fun var9574637 () (_ BitVec 64))
(assert (= temp678_1 #x0000000000000002))
(assert (= var201811
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp678_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_2 #x0000000000000000))
(assert (= var201811 temp678_2))
(assert (= temp678_4 #x0000000000000004))
(assert (= temp678_3 temp678_4))
(assert (= temp678_6 #x0000000000000007))
(assert (= temp678_5 temp678_6))
(assert (= temp678_7 #xffffffffffffffff))
(assert (= var1643329 temp678_7))
(assert (= temp678_8 #x0000000000000000))
(assert (= temp678_9 temp678_8))
(assert (= temp678_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp678_9)))
(assert (= temp678_11 #x0000000000000001))
(assert (= temp678_12 temp678_11))
(assert (= temp678_13 (select ARGNAME_input_NAMEEND_DIMSIZE temp678_12)))
(assert (= temp678_14 #x0000000000000002))
(assert (= temp678_15 temp678_14))
(assert (= temp678_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp678_15)))
(assert (= temp678_17 #x0000000000000003))
(assert (= temp678_18 temp678_17))
(assert (= temp678_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp678_18)))
(assert (= temp678_20 #x0000000000000004))
(assert (= temp678_21 temp678_20))
(assert (= temp678_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp678_21)))
(assert (= temp678_23 #x0000000000000005))
(assert (= temp678_24 temp678_23))
(assert (= temp678_25 (select ARGNAME_input_NAMEEND_DIMSIZE temp678_24)))
(assert (= temp678_26 #x0000000000000000))
(assert (= temp678_27
   (ite (bvslt var1643329 temp678_26)
        (bvadd ARGNAME_input_NAMEEND_DIM var1643329)
        var1643329)))
(assert (= temp678_28 (select ARGNAME_input_NAMEEND_DIMSIZE temp678_27)))
(assert (= var1647178 temp678_28))
(assert (bvslt (ite (bvslt var1643329 temp678_26)
            (bvadd ARGNAME_input_NAMEEND_DIM var1643329)
            var1643329)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp678_29 #xfffffffffffffffe))
(assert (= var1643331 temp678_29))
(assert (= temp678_30 #x0000000000000000))
(assert (= temp678_31
   (ite (bvslt var1643331 temp678_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1643331)
        var1643331)))
(assert (= temp678_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp678_31)))
(assert (= var1647182 temp678_32))
(assert (bvslt (ite (bvslt var1643331 temp678_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1643331)
            var1643331)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var2888630 var1647178))
(assert (= var2888631 var1647182))
(assert (= var2888632
   (ite (bvslt var2888630 var2888631) #x0000000000000001 #x0000000000000000)))
(assert (= temp678_33 (ite (= var2888632 #x0000000000000001) var1647182 var1647178)))
(assert (= temp678_34 #x0000000000000004))
(assert (= var7810167 temp678_34))
(assert (= var7874022 var7810167))
(assert (= var7931526 var7874022))
(assert (= var8062578 var7874022))
(assert (= temp678_35 #x000000000000000b))
(assert (= var7874034
   (ite (= var7874022 temp678_35) #x0000000000000001 #x0000000000000000)))
(assert (= temp678_36 #x0000000000000000))
(assert (= var1256064
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp678_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp678_37 #x0000000000000001))
(assert (= var1256064 temp678_37))
(assert (= temp678_38 #x0000000000000000))
(assert (= var9574637 temp678_38))
(model-add temp678_1 () (_ BitVec 64) #x0000000000000002)
(model-add temp678_2 () (_ BitVec 64) #x0000000000000000)
(model-add var201811 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000002 #x8000000000000000))
                #x0000000000000002
                (bvsub #x0000000000000002 #x0000000000000001)))






