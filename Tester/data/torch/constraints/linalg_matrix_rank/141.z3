(declare-fun temp1866_1 () (_ BitVec 64))
(declare-fun temp1866_2 () (_ BitVec 64))
(declare-fun var201811 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1866_4 () (_ BitVec 64))
(declare-fun temp1866_3 () (_ BitVec 64))
(declare-fun temp1866_6 () (_ BitVec 64))
(declare-fun temp1866_5 () (_ BitVec 64))
(declare-fun temp1866_7 () (_ BitVec 64))
(declare-fun var1643329 () (_ BitVec 64))
(declare-fun temp1866_8 () (_ BitVec 64))
(declare-fun temp1866_9 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1866_10 () (_ BitVec 64))
(declare-fun temp1866_11 () (_ BitVec 64))
(declare-fun temp1866_12 () (_ BitVec 64))
(declare-fun temp1866_13 () (_ BitVec 64))
(declare-fun temp1866_14 () (_ BitVec 64))
(declare-fun temp1866_15 () (_ BitVec 64))
(declare-fun temp1866_16 () (_ BitVec 64))
(declare-fun temp1866_17 () (_ BitVec 64))
(declare-fun temp1866_18 () (_ BitVec 64))
(declare-fun temp1866_19 () (_ BitVec 64))
(declare-fun temp1866_20 () (_ BitVec 64))
(declare-fun temp1866_21 () (_ BitVec 64))
(declare-fun temp1866_22 () (_ BitVec 64))
(declare-fun temp1866_23 () (_ BitVec 64))
(declare-fun temp1866_24 () (_ BitVec 64))
(declare-fun temp1866_25 () (_ BitVec 64))
(declare-fun temp1866_26 () (_ BitVec 64))
(declare-fun temp1866_27 () (_ BitVec 64))
(declare-fun temp1866_28 () (_ BitVec 64))
(declare-fun var1647178 () (_ BitVec 64))
(declare-fun temp1866_29 () (_ BitVec 64))
(declare-fun var1643331 () (_ BitVec 64))
(declare-fun temp1866_30 () (_ BitVec 64))
(declare-fun temp1866_31 () (_ BitVec 64))
(declare-fun temp1866_32 () (_ BitVec 64))
(declare-fun var1647182 () (_ BitVec 64))
(declare-fun var2888630 () (_ BitVec 64))
(declare-fun var2888631 () (_ BitVec 64))
(declare-fun var2888632 () (_ BitVec 64))
(declare-fun temp1866_33 () (_ BitVec 64))
(declare-fun temp1866_34 () (_ BitVec 64))
(declare-fun var8006775 () (_ BitVec 64))
(declare-fun var8070630 () (_ BitVec 64))
(declare-fun var8128134 () (_ BitVec 64))
(declare-fun var8193650 () (_ BitVec 64))
(declare-fun temp1866_35 () (_ BitVec 64))
(declare-fun var8070642 () (_ BitVec 64))
(declare-fun temp1866_36 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var1256064 () (_ BitVec 64))
(declare-fun temp1866_37 () (_ BitVec 64))
(declare-fun temp1866_38 () (_ BitVec 64))
(declare-fun var9705709 () (_ BitVec 64))
(assert (= temp1866_1 #x0000000000000002))
(assert (= var201811
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp1866_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1866_2 #x0000000000000000))
(assert (= var201811 temp1866_2))
(assert (= temp1866_4 #x0000000000000004))
(assert (= temp1866_3 temp1866_4))
(assert (= temp1866_6 #x0000000000000007))
(assert (= temp1866_5 temp1866_6))
(assert (= temp1866_7 #xffffffffffffffff))
(assert (= var1643329 temp1866_7))
(assert (= temp1866_8 #x0000000000000000))
(assert (= temp1866_9 temp1866_8))
(assert (= temp1866_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp1866_9)))
(assert (= temp1866_11 #x0000000000000001))
(assert (= temp1866_12 temp1866_11))
(assert (= temp1866_13 (select ARGNAME_input_NAMEEND_DIMSIZE temp1866_12)))
(assert (= temp1866_14 #x0000000000000002))
(assert (= temp1866_15 temp1866_14))
(assert (= temp1866_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp1866_15)))
(assert (= temp1866_17 #x0000000000000003))
(assert (= temp1866_18 temp1866_17))
(assert (= temp1866_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp1866_18)))
(assert (= temp1866_20 #x0000000000000004))
(assert (= temp1866_21 temp1866_20))
(assert (= temp1866_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp1866_21)))
(assert (= temp1866_23 #x0000000000000005))
(assert (= temp1866_24 temp1866_23))
(assert (= temp1866_25 (select ARGNAME_input_NAMEEND_DIMSIZE temp1866_24)))
(assert (= temp1866_26 #x0000000000000000))
(assert (= temp1866_27
   (ite (bvslt var1643329 temp1866_26)
        (bvadd ARGNAME_input_NAMEEND_DIM var1643329)
        var1643329)))
(assert (= temp1866_28 (select ARGNAME_input_NAMEEND_DIMSIZE temp1866_27)))
(assert (= var1647178 temp1866_28))
(assert (bvslt (ite (bvslt var1643329 temp1866_26)
            (bvadd ARGNAME_input_NAMEEND_DIM var1643329)
            var1643329)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1866_29 #xfffffffffffffffe))
(assert (= var1643331 temp1866_29))
(assert (= temp1866_30 #x0000000000000000))
(assert (= temp1866_31
   (ite (bvslt var1643331 temp1866_30)
        (bvadd ARGNAME_input_NAMEEND_DIM var1643331)
        var1643331)))
(assert (= temp1866_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp1866_31)))
(assert (= var1647182 temp1866_32))
(assert (bvslt (ite (bvslt var1643331 temp1866_30)
            (bvadd ARGNAME_input_NAMEEND_DIM var1643331)
            var1643331)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var2888630 var1647178))
(assert (= var2888631 var1647182))
(assert (= var2888632
   (ite (bvslt var2888630 var2888631) #x0000000000000001 #x0000000000000000)))
(assert (= temp1866_33 (ite (= var2888632 #x0000000000000001) var1647182 var1647178)))
(assert (= temp1866_34 #x0000000000000004))
(assert (= var8006775 temp1866_34))
(assert (= var8070630 var8006775))
(assert (= var8128134 var8070630))
(assert (= var8193650 var8070630))
(assert (= temp1866_35 #x000000000000000b))
(assert (= var8070642
   (ite (= var8070630 temp1866_35) #x0000000000000001 #x0000000000000000)))
(assert (= temp1866_36 #x0000000000000000))
(assert (= var1256064
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp1866_36)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1866_37 #x0000000000000001))
(assert (= var1256064 temp1866_37))
(assert (= temp1866_38 #x0000000000000000))
(assert (= var9705709 temp1866_38))
(model-add temp1866_1 () (_ BitVec 64) #x0000000000000002)
(model-add temp1866_2 () (_ BitVec 64) #x0000000000000000)
(model-add var201811 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000002 #x8000000000000000))
                #x0000000000000002
                (bvsub #x0000000000000002 #x0000000000000001)))






