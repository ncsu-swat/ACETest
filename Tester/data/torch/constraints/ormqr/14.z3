(declare-fun temp386_2 () (_ BitVec 64))
(declare-fun temp386_1 () (_ BitVec 64))
(declare-fun temp386_4 () (_ BitVec 64))
(declare-fun temp386_3 () (_ BitVec 64))
(declare-fun temp386_5 () (_ BitVec 64))
(declare-fun temp386_6 () (_ BitVec 64))
(declare-fun var861367 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp386_7 () (_ BitVec 64))
(declare-fun ARGNAME_input3_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var861380 () (_ BitVec 64))
(declare-fun temp386_8 () (_ BitVec 64))
(declare-fun temp386_9 () (_ BitVec 64))
(declare-fun temp386_10 () (_ BitVec 64))
(declare-fun ARGNAME_left_NAMEEND () (_ BitVec 64))
(declare-fun var861392 () (_ BitVec 64))
(declare-fun temp386_11 () (_ BitVec 64))
(declare-fun temp386_12 () (_ BitVec 64))
(declare-fun ARGNAME_input3_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp386_13 () (_ BitVec 64))
(declare-fun temp386_14 () (_ BitVec 64))
(declare-fun temp386_15 () (_ BitVec 64))
(declare-fun temp386_16 () (_ BitVec 64))
(declare-fun temp386_17 () (_ BitVec 64))
(declare-fun temp386_18 () (_ BitVec 64))
(declare-fun temp386_19 () (_ BitVec 64))
(declare-fun temp386_20 () (_ BitVec 64))
(declare-fun temp386_21 () (_ BitVec 64))
(declare-fun temp386_22 () (_ BitVec 64))
(declare-fun temp386_23 () (_ BitVec 64))
(declare-fun temp386_24 () (_ BitVec 64))
(declare-fun temp386_25 () (_ BitVec 64))
(declare-fun temp386_26 () (_ BitVec 64))
(declare-fun temp386_27 () (_ BitVec 64))
(declare-fun temp386_28 () (_ BitVec 64))
(declare-fun temp386_30 () (_ BitVec 64))
(declare-fun temp386_29 () (_ BitVec 64))
(declare-fun temp386_31 () (_ BitVec 64))
(declare-fun temp386_32 () (_ BitVec 64))
(declare-fun var861394 () (_ BitVec 64))
(declare-fun temp386_33 () (_ BitVec 64))
(declare-fun var853595 () (_ BitVec 64))
(declare-fun temp386_34 () (_ BitVec 64))
(declare-fun temp386_35 () (_ BitVec 64))
(declare-fun ARGNAME_input2_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp386_36 () (_ BitVec 64))
(declare-fun temp386_37 () (_ BitVec 64))
(declare-fun temp386_38 () (_ BitVec 64))
(declare-fun temp386_39 () (_ BitVec 64))
(declare-fun temp386_40 () (_ BitVec 64))
(declare-fun temp386_41 () (_ BitVec 64))
(declare-fun temp386_42 () (_ BitVec 64))
(declare-fun temp386_43 () (_ BitVec 64))
(declare-fun temp386_44 () (_ BitVec 64))
(declare-fun temp386_45 () (_ BitVec 64))
(declare-fun temp386_46 () (_ BitVec 64))
(declare-fun temp386_47 () (_ BitVec 64))
(declare-fun temp386_48 () (_ BitVec 64))
(declare-fun temp386_49 () (_ BitVec 64))
(declare-fun temp386_50 () (_ BitVec 64))
(declare-fun temp386_51 () (_ BitVec 64))
(declare-fun temp386_53 () (_ BitVec 64))
(declare-fun ARGNAME_input2_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp386_52 () (_ BitVec 64))
(declare-fun temp386_54 () (_ BitVec 64))
(declare-fun temp386_55 () (_ BitVec 64))
(declare-fun var861396 () (_ BitVec 64))
(declare-fun var861397 () (_ BitVec 64))
(declare-fun temp386_56 () (_ BitVec 64))
(declare-fun var861417 () (_ BitVec 64))
(declare-fun temp386_58 () (_ BitVec 64))
(declare-fun temp386_57 () (_ BitVec 64))
(declare-fun temp386_59 () (_ BitVec 64))
(declare-fun temp386_60 () (_ BitVec 64))
(declare-fun var861418 () (_ BitVec 64))
(declare-fun temp386_61 () (_ BitVec 64))
(declare-fun var853599 () (_ BitVec 64))
(declare-fun temp386_62 () (_ BitVec 64))
(declare-fun temp386_63 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp386_64 () (_ BitVec 64))
(declare-fun temp386_65 () (_ BitVec 64))
(declare-fun temp386_66 () (_ BitVec 64))
(declare-fun temp386_67 () (_ BitVec 64))
(declare-fun temp386_68 () (_ BitVec 64))
(declare-fun temp386_69 () (_ BitVec 64))
(declare-fun temp386_70 () (_ BitVec 64))
(declare-fun temp386_71 () (_ BitVec 64))
(declare-fun temp386_72 () (_ BitVec 64))
(declare-fun temp386_73 () (_ BitVec 64))
(declare-fun temp386_74 () (_ BitVec 64))
(declare-fun temp386_75 () (_ BitVec 64))
(declare-fun temp386_76 () (_ BitVec 64))
(declare-fun temp386_77 () (_ BitVec 64))
(declare-fun temp386_78 () (_ BitVec 64))
(declare-fun temp386_79 () (_ BitVec 64))
(declare-fun temp386_81 () (_ BitVec 64))
(declare-fun temp386_80 () (_ BitVec 64))
(declare-fun temp386_82 () (_ BitVec 64))
(declare-fun temp386_83 () (_ BitVec 64))
(declare-fun var861419 () (_ BitVec 64))
(declare-fun var861420 () (_ BitVec 64))
(declare-fun temp386_84 () (_ BitVec 64))
(declare-fun temp386_85 () (_ BitVec 64))
(declare-fun temp386_87 () (_ BitVec 64))
(declare-fun temp386_86 () (_ BitVec 64))
(declare-fun temp386_88 () (_ BitVec 64))
(declare-fun temp386_89 () (_ BitVec 64))
(declare-fun var861439 () (_ BitVec 64))
(declare-fun temp386_90 () (_ BitVec 64))
(declare-fun temp386_92 () (_ BitVec 64))
(declare-fun temp386_91 () (_ BitVec 64))
(declare-fun temp386_93 () (_ BitVec 64))
(declare-fun temp386_94 () (_ BitVec 64))
(declare-fun var861440 () (_ BitVec 64))
(declare-fun var861441 () (_ BitVec 64))
(declare-fun temp386_95 () (_ BitVec 64))
(declare-fun var861453 () (_ BitVec 64))
(declare-fun temp386_96 () (_ BitVec 64))
(declare-fun var861454 () (_ BitVec 64))
(declare-fun temp386_97 () (_ BitVec 64))
(declare-fun var861485 () (_ BitVec 64))
(declare-fun temp386_98 () (_ BitVec 64))
(declare-fun temp386_99 () (_ BitVec 64))
(declare-fun var861515 () (_ BitVec 64))
(declare-fun temp386_100 () (_ BitVec 64))
(declare-fun temp386_101 () (_ BitVec 64))
(declare-fun var4527402 () (_ BitVec 64))
(declare-fun var4659666 () (_ BitVec 64))
(declare-fun temp386_102 () (_ BitVec 64))
(declare-fun var4722241 () (_ BitVec 64))
(declare-fun var4790756 () (_ BitVec 64))
(declare-fun temp386_104 () (_ BitVec 64))
(declare-fun temp386_103 () (_ BitVec 64))
(declare-fun temp386_106 () (_ BitVec 64))
(declare-fun temp386_105 () (_ BitVec 64))
(assert (= temp386_2 #x0000000000000000))
(assert (= temp386_1 temp386_2))
(assert (= temp386_4 #x0000000000000001))
(assert (= temp386_3 temp386_4))
(assert (= temp386_5 #x0000000000000002))
(assert (= var861367
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp386_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_6 #x0000000000000000))
(assert (= var861367 temp386_6))
(assert (= temp386_7 #x0000000000000002))
(assert (= var861380
   (ite (bvslt ARGNAME_input3_NAMEEND_DIM temp386_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_8 #x0000000000000000))
(assert (= var861380 temp386_8))
(assert (= temp386_9 #xfffffffffffffffe))
(assert (= temp386_10 #xffffffffffffffff))
(assert (= var861392
   (ite (= ARGNAME_left_NAMEEND #x0000000000000001) temp386_9 temp386_10)))
(assert (= temp386_11 #x0000000000000000))
(assert (= temp386_12 temp386_11))
(assert (= temp386_13 (select ARGNAME_input3_NAMEEND_DIMSIZE temp386_12)))
(assert (= temp386_14 #x0000000000000001))
(assert (= temp386_15 temp386_14))
(assert (= temp386_16 (select ARGNAME_input3_NAMEEND_DIMSIZE temp386_15)))
(assert (= temp386_17 #x0000000000000002))
(assert (= temp386_18 temp386_17))
(assert (= temp386_19 (select ARGNAME_input3_NAMEEND_DIMSIZE temp386_18)))
(assert (= temp386_20 #x0000000000000003))
(assert (= temp386_21 temp386_20))
(assert (= temp386_22 (select ARGNAME_input3_NAMEEND_DIMSIZE temp386_21)))
(assert (= temp386_23 #x0000000000000004))
(assert (= temp386_24 temp386_23))
(assert (= temp386_25 (select ARGNAME_input3_NAMEEND_DIMSIZE temp386_24)))
(assert (= temp386_26 #x0000000000000005))
(assert (= temp386_27 temp386_26))
(assert (= temp386_28 (select ARGNAME_input3_NAMEEND_DIMSIZE temp386_27)))
(assert (= temp386_30 #x0000000000000000))
(assert (= temp386_29
   (ite (bvslt var861392 temp386_30)
        (bvadd ARGNAME_input3_NAMEEND_DIM var861392)
        var861392)))
(assert (= temp386_31 temp386_29))
(assert (= temp386_32 (select ARGNAME_input3_NAMEEND_DIMSIZE temp386_31)))
(assert (= var861394 temp386_32))
(assert (bvslt temp386_29 ARGNAME_input3_NAMEEND_DIM))
(assert (= temp386_33 #xffffffffffffffff))
(assert (= var853595 temp386_33))
(assert (= temp386_34 #x0000000000000000))
(assert (= temp386_35 temp386_34))
(assert (= temp386_36 (select ARGNAME_input2_NAMEEND_DIMSIZE temp386_35)))
(assert (= temp386_37 #x0000000000000001))
(assert (= temp386_38 temp386_37))
(assert (= temp386_39 (select ARGNAME_input2_NAMEEND_DIMSIZE temp386_38)))
(assert (= temp386_40 #x0000000000000002))
(assert (= temp386_41 temp386_40))
(assert (= temp386_42 (select ARGNAME_input2_NAMEEND_DIMSIZE temp386_41)))
(assert (= temp386_43 #x0000000000000003))
(assert (= temp386_44 temp386_43))
(assert (= temp386_45 (select ARGNAME_input2_NAMEEND_DIMSIZE temp386_44)))
(assert (= temp386_46 #x0000000000000004))
(assert (= temp386_47 temp386_46))
(assert (= temp386_48 (select ARGNAME_input2_NAMEEND_DIMSIZE temp386_47)))
(assert (= temp386_49 #x0000000000000005))
(assert (= temp386_50 temp386_49))
(assert (= temp386_51 (select ARGNAME_input2_NAMEEND_DIMSIZE temp386_50)))
(assert (= temp386_53 #x0000000000000000))
(assert (= temp386_52
   (ite (bvslt var853595 temp386_53)
        (bvadd ARGNAME_input2_NAMEEND_DIM var853595)
        var853595)))
(assert (= temp386_54 temp386_52))
(assert (= temp386_55 (select ARGNAME_input2_NAMEEND_DIMSIZE temp386_54)))
(assert (= var861396 temp386_55))
(assert (bvslt temp386_52 ARGNAME_input2_NAMEEND_DIM))
(assert (= var861397
   (ite (bvslt var861394 var861396) #x0000000000000001 #x0000000000000000)))
(assert (= temp386_56 #x0000000000000000))
(assert (= var861397 temp386_56))
(assert (= var861417 var861392))
(assert (= temp386_58 #x0000000000000000))
(assert (= temp386_57
   (ite (bvslt var861417 temp386_58)
        (bvadd ARGNAME_input3_NAMEEND_DIM var861417)
        var861417)))
(assert (= temp386_59 temp386_57))
(assert (= temp386_60 (select ARGNAME_input3_NAMEEND_DIMSIZE temp386_59)))
(assert (= var861418 temp386_60))
(assert (bvslt temp386_57 ARGNAME_input3_NAMEEND_DIM))
(assert (= temp386_61 #xfffffffffffffffe))
(assert (= var853599 temp386_61))
(assert (= temp386_62 #x0000000000000000))
(assert (= temp386_63 temp386_62))
(assert (= temp386_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp386_63)))
(assert (= temp386_65 #x0000000000000001))
(assert (= temp386_66 temp386_65))
(assert (= temp386_67 (select ARGNAME_input_NAMEEND_DIMSIZE temp386_66)))
(assert (= temp386_68 #x0000000000000002))
(assert (= temp386_69 temp386_68))
(assert (= temp386_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp386_69)))
(assert (= temp386_71 #x0000000000000003))
(assert (= temp386_72 temp386_71))
(assert (= temp386_73 (select ARGNAME_input_NAMEEND_DIMSIZE temp386_72)))
(assert (= temp386_74 #x0000000000000004))
(assert (= temp386_75 temp386_74))
(assert (= temp386_76 (select ARGNAME_input_NAMEEND_DIMSIZE temp386_75)))
(assert (= temp386_77 #x0000000000000005))
(assert (= temp386_78 temp386_77))
(assert (= temp386_79 (select ARGNAME_input_NAMEEND_DIMSIZE temp386_78)))
(assert (= temp386_81 #x0000000000000000))
(assert (= temp386_80
   (ite (bvslt var853599 temp386_81)
        (bvadd ARGNAME_input_NAMEEND_DIM var853599)
        var853599)))
(assert (= temp386_82 temp386_80))
(assert (= temp386_83 (select ARGNAME_input_NAMEEND_DIMSIZE temp386_82)))
(assert (= var861419 temp386_83))
(assert (bvslt temp386_80 ARGNAME_input_NAMEEND_DIM))
(assert (= var861420
   (ite (= var861418 var861419) #x0000000000000001 #x0000000000000000)))
(assert (= temp386_84 #x0000000000000001))
(assert (= var861420 temp386_84))
(assert (= temp386_85 #xffffffffffffffff))
(assert (= var853595 temp386_85))
(assert (= temp386_87 #x0000000000000000))
(assert (= temp386_86
   (ite (bvslt var853595 temp386_87)
        (bvadd ARGNAME_input2_NAMEEND_DIM var853595)
        var853595)))
(assert (= temp386_88 temp386_86))
(assert (= temp386_89 (select ARGNAME_input2_NAMEEND_DIMSIZE temp386_88)))
(assert (= var861439 temp386_89))
(assert (bvslt temp386_86 ARGNAME_input2_NAMEEND_DIM))
(assert (= temp386_90 #xffffffffffffffff))
(assert (= var853595 temp386_90))
(assert (= temp386_92 #x0000000000000000))
(assert (= temp386_91
   (ite (bvslt var853595 temp386_92)
        (bvadd ARGNAME_input_NAMEEND_DIM var853595)
        var853595)))
(assert (= temp386_93 temp386_91))
(assert (= temp386_94 (select ARGNAME_input_NAMEEND_DIMSIZE temp386_93)))
(assert (= var861440 temp386_94))
(assert (bvslt temp386_91 ARGNAME_input_NAMEEND_DIM))
(assert (= var861441
   (ite (bvsgt var861439 var861440) #x0000000000000001 #x0000000000000000)))
(assert (= temp386_95 #x0000000000000000))
(assert (= var861441 temp386_95))
(assert (= var861453 (bvsub ARGNAME_input_NAMEEND_DIM ARGNAME_input2_NAMEEND_DIM)))
(assert (= temp386_96 #x0000000000000001))
(assert (= var861454
   (ite (= var861453 temp386_96) #x0000000000000001 #x0000000000000000)))
(assert (= temp386_97 #x0000000000000001))
(assert (= var861454 temp386_97))
(assert (= var861485
   (ite (= ARGNAME_input_NAMEEND_DIM ARGNAME_input3_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_98 #x0000000000000001))
(assert (= var861485 temp386_98))
(assert (= temp386_99 #x0000000000000002))
(assert (= var861515
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp386_99)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp386_100 #x0000000000000000))
(assert (= var861515 temp386_100))
(assert (= temp386_101 #x0000000000000000))
(assert (= var4527402 temp386_101))
(assert (= var4659666 var4527402))
(assert (= temp386_102 #x0000000000000001))
(assert (= var4722241 temp386_102))
(assert (= var4790756 var4659666))
(assert (= temp386_104 #x0000000000000000))
(assert (= temp386_103 temp386_104))
(assert (= temp386_106 #x0000000000000001))
(assert (= temp386_105 temp386_106))
(model-add temp386_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp386_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp386_4 () (_ BitVec 64) #x0000000000000001)
(model-add temp386_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp386_5 () (_ BitVec 64) #x0000000000000002)
(model-add temp386_6 () (_ BitVec 64) #x0000000000000000)
(model-add var861367 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000002 #x8000000000000000))
                #x0000000000000002
                (bvsub #x0000000000000002 #x0000000000000001)))






