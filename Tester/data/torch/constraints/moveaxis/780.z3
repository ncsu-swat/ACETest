(declare-fun temp780_1 () (_ BitVec 64))
(declare-fun var154683 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_source_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_destination_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp780_3 () (_ BitVec 64))
(declare-fun temp780_2 () (_ BitVec 64))
(declare-fun temp780_4 () (_ BitVec 64))
(declare-fun var266826 () (_ BitVec 64))
(declare-fun var266828 () (_ BitVec 64))
(declare-fun temp780_6 () (_ BitVec 64))
(declare-fun temp780_5 () (_ BitVec 64))
(declare-fun temp780_7 () (_ BitVec 64))
(declare-fun var594506 () (_ BitVec 64))
(declare-fun var594508 () (_ BitVec 64))
(declare-fun temp780_9 () (_ BitVec 64))
(declare-fun temp780_8 () (_ BitVec 64))
(declare-fun temp780_10 () (_ BitVec 64))
(declare-fun var1053642 () (_ BitVec 64))
(declare-fun temp780_12 () (_ BitVec 64))
(declare-fun temp780_11 () (_ BitVec 64))
(declare-fun temp780_13 () (_ BitVec 64))
(declare-fun var1774538 () (_ BitVec 64))
(declare-fun temp780_14 () (_ BitVec 64))
(declare-fun var2429514 () (_ BitVec 64))
(declare-fun temp780_15 () (_ BitVec 64))
(declare-fun var3871306 () (_ BitVec 64))
(declare-fun temp780_16 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var154805 () (_ BitVec 64))
(declare-fun temp780_17 () (_ BitVec 64))
(declare-fun temp780_19 () (_ BitVec 64))
(declare-fun temp780_18 () (_ BitVec 64))
(declare-fun temp780_20 () (_ BitVec 64))
(declare-fun var5313098 () (_ BitVec 64))
(declare-fun var5313100 () (_ BitVec 64))
(declare-fun temp780_22 () (_ BitVec 64))
(declare-fun temp780_21 () (_ BitVec 64))
(declare-fun temp780_23 () (_ BitVec 64))
(declare-fun var5640778 () (_ BitVec 64))
(declare-fun var5640780 () (_ BitVec 64))
(declare-fun temp780_25 () (_ BitVec 64))
(declare-fun temp780_24 () (_ BitVec 64))
(declare-fun temp780_26 () (_ BitVec 64))
(declare-fun var5968458 () (_ BitVec 64))
(declare-fun var5968460 () (_ BitVec 64))
(declare-fun temp780_28 () (_ BitVec 64))
(declare-fun temp780_27 () (_ BitVec 64))
(declare-fun var6820805 () (_ BitVec 64))
(declare-fun temp780_29 () (_ BitVec 64))
(declare-fun temp780_30 () (_ BitVec 64))
(declare-fun var6886346 () (_ BitVec 64))
(declare-fun temp780_32 () (_ BitVec 64))
(declare-fun temp780_31 () (_ BitVec 64))
(declare-fun temp780_34 () (_ BitVec 64))
(declare-fun temp780_33 () (_ BitVec 64))
(declare-fun var154934 () (_ BitVec 64))
(declare-fun var7801721 () (_ BitVec 64))
(declare-fun temp780_36 () (_ BitVec 64))
(declare-fun temp780_35 () (_ BitVec 64))
(declare-fun var7867713 () (_ BitVec 64))
(declare-fun var7867714 () (_ BitVec 64))
(declare-fun temp780_37 () (_ BitVec 64))
(declare-fun temp780_38 () (_ BitVec 64))
(declare-fun var7933255 () (_ BitVec 64))
(declare-fun var7998802 () (_ BitVec 64))
(declare-fun temp780_39 () (_ BitVec 64))
(declare-fun var8610698 () (_ BitVec 64))
(assert (= var154683
   (ite (= ARGNAME_source_NAMEEND_LEN ARGNAME_destination_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_1 #x0000000000000001))
(assert (= var154683 temp780_1))
(assert (= temp780_3 #x0000000000000000))
(assert (= temp780_2 temp780_3))
(assert (= temp780_4 #x0000000000000005))
(assert (= var266826 temp780_4))
(assert (= var266828 var266826))
(assert (= temp780_6 #x0000000000000000))
(assert (= temp780_5 temp780_6))
(assert (= temp780_7 #x0000000000000005))
(assert (= var594506 temp780_7))
(assert (= var594508 var594506))
(assert (= temp780_9 #x0000000000000000))
(assert (= temp780_8 temp780_9))
(assert (= temp780_10 #x0000000000000000))
(assert (= var1053642 temp780_10))
(assert (= temp780_12 #x0000000000000000))
(assert (= temp780_11 temp780_12))
(assert (= temp780_13 #x0000000000000000))
(assert (= var1774538 temp780_13))
(assert (= temp780_14 #x0000000000000005))
(assert (= var2429514 temp780_14))
(assert (= temp780_15 #x0000000000000005))
(assert (= var3871306 temp780_15))
(assert (= temp780_16 #x0000000000000000))
(assert (= var154805
   (ite (= ARGNAME_input_NAMEEND_DIM temp780_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_17 #x0000000000000000))
(assert (= var154805 temp780_17))
(assert (= temp780_19 #x0000000000000000))
(assert (= temp780_18 temp780_19))
(assert (= temp780_20 #x0000000000000005))
(assert (= var5313098 temp780_20))
(assert (= var5313100 var5313098))
(assert (= temp780_22 #x0000000000000000))
(assert (= temp780_21 temp780_22))
(assert (= temp780_23 #x0000000000000005))
(assert (= var5640778 temp780_23))
(assert (= var5640780 var5640778))
(assert (= temp780_25 #x0000000000000000))
(assert (= temp780_24 temp780_25))
(assert (= temp780_26 #x0000000000000005))
(assert (= var5968458 temp780_26))
(assert (= var5968460 var5968458))
(assert (= temp780_28 #x0000000000000000))
(assert (= temp780_27 temp780_28))
(assert (= var6820805
   (ite (bvslt temp780_27 ARGNAME_source_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_29
   (ite (= var6820805 #x0000000000000001) ARGNAME_source_NAMEEND_LEN temp780_27)))
(assert (= temp780_30 #x0000000000000000))
(assert (= var6886346 temp780_30))
(assert (= temp780_32 #xffffffffffffffff))
(assert (= temp780_31 temp780_32))
(assert (= temp780_34 #xffffffffffffffff))
(assert (= temp780_33 temp780_34))
(assert (= var154934 (bvsub ARGNAME_input_NAMEEND_DIM ARGNAME_source_NAMEEND_LEN)))
(assert (= var7801721 var154934))
(assert (= temp780_36 #x0000000000000000))
(assert (= temp780_35 temp780_36))
(assert (= var7867713 var7801721))
(assert (= var7867714
   (ite (bvslt temp780_35 var7867713) #x0000000000000001 #x0000000000000000)))
(assert (= temp780_37 (ite (= var7867714 #x0000000000000001) var7801721 temp780_35)))
(assert (= temp780_38 #x0000000000000000))
(assert (= var7933255 temp780_38))
(assert (= var7998802 var7933255))
(assert (= temp780_39 #x000000000000003b))
(assert (= var8610698 temp780_39))
(model-add temp780_1 () (_ BitVec 64) #x0000000000000001)
(model-add var154683 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_source_NAMEEND_LEN
           ()
           (_ BitVec 64)
           (ite k!0
                ARGNAME_destination_NAMEEND_LEN
                (bvnot ARGNAME_destination_NAMEEND_LEN)))




