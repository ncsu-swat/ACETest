(declare-fun temp408_1 () (_ BitVec 64))
(declare-fun var154683 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_source_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_destination_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp408_3 () (_ BitVec 64))
(declare-fun temp408_2 () (_ BitVec 64))
(declare-fun temp408_4 () (_ BitVec 64))
(declare-fun var266826 () (_ BitVec 64))
(declare-fun var266828 () (_ BitVec 64))
(declare-fun temp408_6 () (_ BitVec 64))
(declare-fun temp408_5 () (_ BitVec 64))
(declare-fun temp408_7 () (_ BitVec 64))
(declare-fun var594506 () (_ BitVec 64))
(declare-fun var594508 () (_ BitVec 64))
(declare-fun temp408_9 () (_ BitVec 64))
(declare-fun temp408_8 () (_ BitVec 64))
(declare-fun temp408_10 () (_ BitVec 64))
(declare-fun var1053642 () (_ BitVec 64))
(declare-fun temp408_12 () (_ BitVec 64))
(declare-fun temp408_11 () (_ BitVec 64))
(declare-fun temp408_13 () (_ BitVec 64))
(declare-fun var1774538 () (_ BitVec 64))
(declare-fun temp408_14 () (_ BitVec 64))
(declare-fun var2429514 () (_ BitVec 64))
(declare-fun temp408_15 () (_ BitVec 64))
(declare-fun var3871306 () (_ BitVec 64))
(declare-fun temp408_16 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var154805 () (_ BitVec 64))
(declare-fun temp408_17 () (_ BitVec 64))
(declare-fun temp408_19 () (_ BitVec 64))
(declare-fun temp408_18 () (_ BitVec 64))
(declare-fun temp408_20 () (_ BitVec 64))
(declare-fun var5247562 () (_ BitVec 64))
(declare-fun var5247564 () (_ BitVec 64))
(declare-fun temp408_22 () (_ BitVec 64))
(declare-fun temp408_21 () (_ BitVec 64))
(declare-fun temp408_23 () (_ BitVec 64))
(declare-fun var6165066 () (_ BitVec 64))
(declare-fun var6165068 () (_ BitVec 64))
(declare-fun temp408_25 () (_ BitVec 64))
(declare-fun temp408_24 () (_ BitVec 64))
(declare-fun temp408_26 () (_ BitVec 64))
(declare-fun var6492746 () (_ BitVec 64))
(declare-fun var6492748 () (_ BitVec 64))
(declare-fun temp408_28 () (_ BitVec 64))
(declare-fun temp408_27 () (_ BitVec 64))
(declare-fun var7869381 () (_ BitVec 64))
(declare-fun temp408_29 () (_ BitVec 64))
(declare-fun temp408_30 () (_ BitVec 64))
(declare-fun var7934922 () (_ BitVec 64))
(declare-fun temp408_32 () (_ BitVec 64))
(declare-fun temp408_31 () (_ BitVec 64))
(declare-fun temp408_34 () (_ BitVec 64))
(declare-fun temp408_33 () (_ BitVec 64))
(declare-fun var154934 () (_ BitVec 64))
(declare-fun var8850297 () (_ BitVec 64))
(declare-fun temp408_36 () (_ BitVec 64))
(declare-fun temp408_35 () (_ BitVec 64))
(declare-fun var8916289 () (_ BitVec 64))
(declare-fun var8916290 () (_ BitVec 64))
(declare-fun temp408_37 () (_ BitVec 64))
(declare-fun temp408_38 () (_ BitVec 64))
(declare-fun var8981831 () (_ BitVec 64))
(declare-fun var9047378 () (_ BitVec 64))
(assert (= var154683
   (ite (= ARGNAME_source_NAMEEND_LEN ARGNAME_destination_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp408_1 #x0000000000000001))
(assert (= var154683 temp408_1))
(assert (= temp408_3 #x0000000000000000))
(assert (= temp408_2 temp408_3))
(assert (= temp408_4 #x0000000000000005))
(assert (= var266826 temp408_4))
(assert (= var266828 var266826))
(assert (= temp408_6 #x0000000000000000))
(assert (= temp408_5 temp408_6))
(assert (= temp408_7 #x0000000000000005))
(assert (= var594506 temp408_7))
(assert (= var594508 var594506))
(assert (= temp408_9 #x0000000000000000))
(assert (= temp408_8 temp408_9))
(assert (= temp408_10 #x0000000000000000))
(assert (= var1053642 temp408_10))
(assert (= temp408_12 #x0000000000000000))
(assert (= temp408_11 temp408_12))
(assert (= temp408_13 #x0000000000000000))
(assert (= var1774538 temp408_13))
(assert (= temp408_14 #x0000000000000005))
(assert (= var2429514 temp408_14))
(assert (= temp408_15 #x0000000000000005))
(assert (= var3871306 temp408_15))
(assert (= temp408_16 #x0000000000000000))
(assert (= var154805
   (ite (= ARGNAME_input_NAMEEND_DIM temp408_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp408_17 #x0000000000000000))
(assert (= var154805 temp408_17))
(assert (= temp408_19 #x0000000000000000))
(assert (= temp408_18 temp408_19))
(assert (= temp408_20 #x0000000000000005))
(assert (= var5247562 temp408_20))
(assert (= var5247564 var5247562))
(assert (= temp408_22 #x0000000000000000))
(assert (= temp408_21 temp408_22))
(assert (= temp408_23 #x0000000000000005))
(assert (= var6165066 temp408_23))
(assert (= var6165068 var6165066))
(assert (= temp408_25 #x0000000000000000))
(assert (= temp408_24 temp408_25))
(assert (= temp408_26 #x0000000000000005))
(assert (= var6492746 temp408_26))
(assert (= var6492748 var6492746))
(assert (= temp408_28 #x0000000000000000))
(assert (= temp408_27 temp408_28))
(assert (= var7869381
   (ite (bvslt temp408_27 ARGNAME_source_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp408_29
   (ite (= var7869381 #x0000000000000001) ARGNAME_source_NAMEEND_LEN temp408_27)))
(assert (= temp408_30 #x0000000000000000))
(assert (= var7934922 temp408_30))
(assert (= temp408_32 #xffffffffffffffff))
(assert (= temp408_31 temp408_32))
(assert (= temp408_34 #xffffffffffffffff))
(assert (= temp408_33 temp408_34))
(assert (= var154934 (bvsub ARGNAME_input_NAMEEND_DIM ARGNAME_source_NAMEEND_LEN)))
(assert (= var8850297 var154934))
(assert (= temp408_36 #x0000000000000000))
(assert (= temp408_35 temp408_36))
(assert (= var8916289 var8850297))
(assert (= var8916290
   (ite (bvslt temp408_35 var8916289) #x0000000000000001 #x0000000000000000)))
(assert (= temp408_37 (ite (= var8916290 #x0000000000000001) var8850297 temp408_35)))
(assert (= temp408_38 #x0000000000000000))
(assert (= var8981831 temp408_38))
(assert (= var9047378 var8981831))
(model-add temp408_1 () (_ BitVec 64) #x0000000000000001)
(model-add var154683 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_source_NAMEEND_LEN
           ()
           (_ BitVec 64)
           (ite k!0
                ARGNAME_destination_NAMEEND_LEN
                (bvnot ARGNAME_destination_NAMEEND_LEN)))






