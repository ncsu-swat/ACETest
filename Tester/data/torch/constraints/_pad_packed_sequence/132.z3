(declare-fun temp216_1 () (_ BitVec 64))
(declare-fun var133306 () (_ BitVec 64))
(declare-fun var203683 () (_ BitVec 64))
(declare-fun var269248 () (_ BitVec 64))
(declare-fun var400389 () (_ BitVec 64))
(declare-fun temp216_2 () (_ BitVec 64))
(declare-fun temp216_3 () (_ BitVec 64))
(declare-fun var72970 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_total_length_NAMEEND () (_ BitVec 64))
(declare-fun temp216_4 () (_ BitVec 64))
(declare-fun ARGNAME_data_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var73022 () (_ BitVec 64))
(declare-fun var1182202 () (_ BitVec 64))
(declare-fun temp216_6 () (_ BitVec 64))
(declare-fun temp216_5 () (_ BitVec 64))
(declare-fun var1708277 () (_ BitVec 64))
(declare-fun temp216_7 () (_ BitVec 64))
(declare-fun var1708278 () (_ BitVec 64))
(declare-fun temp216_8 () (_ BitVec 64))
(declare-fun temp216_9 () (_ BitVec 64))
(declare-fun var2099757 () (_ BitVec 64))
(declare-fun var2099759 () (_ BitVec 64))
(declare-fun var2167601 () (_ BitVec 64))
(declare-fun var2167602 () (_ BitVec 64))
(declare-fun var2167615 () (_ BitVec 64))
(declare-fun var2167617 () (_ BitVec 64))
(declare-fun temp216_10 () (_ BitVec 64))
(declare-fun var2167640 () (_ BitVec 64))
(declare-fun var2167642 () (_ BitVec 64))
(declare-fun var2298739 () (_ BitVec 64))
(declare-fun temp216_12 () (_ BitVec 64))
(declare-fun temp216_11 () (_ BitVec 64))
(declare-fun temp216_14 () (_ BitVec 64))
(declare-fun temp216_13 () (_ BitVec 64))
(declare-fun temp216_16 () (_ BitVec 64))
(declare-fun temp216_15 () (_ BitVec 64))
(declare-fun temp216_17 () (_ BitVec 64))
(declare-fun var73175 () (_ BitVec 64))
(declare-fun temp216_18 () (_ BitVec 64))
(declare-fun var4786847 () (_ BitVec 64))
(declare-fun temp216_19 () (_ BitVec 64))
(declare-fun var4786851 () (_ BitVec 64))
(declare-fun var73195 () (_ BitVec 64))
(declare-fun temp216_20 () (_ BitVec 64))
(declare-fun var5704351 () (_ BitVec 64))
(declare-fun temp216_21 () (_ BitVec 64))
(declare-fun var5704355 () (_ BitVec 64))
(declare-fun temp216_23 () (_ BitVec 64))
(declare-fun temp216_22 () (_ BitVec 64))
(declare-fun temp216_24 () (_ BitVec 64))
(declare-fun var6556319 () (_ BitVec 64))
(declare-fun temp216_25 () (_ BitVec 64))
(declare-fun var6556323 () (_ BitVec 64))
(declare-fun temp216_27 () (_ BitVec 64))
(declare-fun temp216_26 () (_ BitVec 64))
(declare-fun temp216_28 () (_ BitVec 64))
(declare-fun var8002383 () (_ BitVec 64))
(declare-fun var8067930 () (_ BitVec 64))
(declare-fun var7866619 () (_ BitVec 64))
(declare-fun temp216_29 () (_ BitVec 64))
(declare-fun var73168 () (_ BitVec 64))
(declare-fun temp216_30 () (_ BitVec 64))
(declare-fun ARGNAME_batch_first_NAMEEND () (_ BitVec 64))
(assert (= temp216_1 #x0000000000000000))
(assert (= var133306 temp216_1))
(assert (= var203683 var133306))
(assert (= var269248 var203683))
(assert (= var400389 var269248))
(assert (= temp216_2 #x0000000000000000))
(assert (= var72970
   (ite (bvsgt ARGNAME_total_length_NAMEEND temp216_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp216_3 #x0000000000000001))
(assert (= var72970 temp216_3))
(assert (= temp216_4 #x0000000000000001))
(assert (= var73022 (bvadd ARGNAME_data_NAMEEND_DIM temp216_4)))
(assert (= var1182202 var73022))
(assert (= temp216_6 #xffffffffffffffff))
(assert (= temp216_5 temp216_6))
(assert (= var1708277 var1182202))
(assert (= temp216_7 #x0000000000000000))
(assert (= var1708278
   (ite (= var1708277 temp216_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp216_8 #x0000000000000001))
(assert (= var1708278 temp216_8))
(assert (= temp216_9 #x0000000000000001))
(assert (= var2099757 temp216_9))
(assert (= var2099759 (bvsub ARGNAME_data_NAMEEND_DIM var2099757)))
(assert (= var2167601 var2099757))
(assert (= var2167602 var2099759))
(assert (= var2167615 (bvadd var2167602 var2167601)))
(assert (= var2167617
   (ite (bvsgt var2167615 ARGNAME_data_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp216_10 #x0000000000000000))
(assert (= var2167617 temp216_10))
(assert (= var2167640 var2167601))
(assert (= var2167642 var2167602))
(assert (= var2298739 var2167642))
(assert (= temp216_12 #x0000000000000000))
(assert (= temp216_11 temp216_12))
(assert (= temp216_14 #x0000000000000000))
(assert (= temp216_13 temp216_14))
(assert (= temp216_16 #x0000000000000000))
(assert (= temp216_15 temp216_16))
(assert (= temp216_17 #x0000000000000000))
(assert (= var73175 temp216_17))
(assert (= temp216_18 #x0000000000000000))
(assert (= var4786847 temp216_18))
(assert (= temp216_19 #x0000000000000001))
(assert (= var4786851 temp216_19))
(assert (= var73195 (bvsub temp216_15 temp216_13)))
(assert (= temp216_20 #x0000000000000000))
(assert (= var5704351 temp216_20))
(assert (= temp216_21 #x0000000000000001))
(assert (= var5704355 temp216_21))
(assert (= temp216_23 #x0000000000000000))
(assert (= temp216_22 temp216_23))
(assert (= temp216_24 #x0000000000000001))
(assert (= var6556319 temp216_24))
(assert (= temp216_25 #x0000000000000001))
(assert (= var6556323 temp216_25))
(assert (= temp216_27 #x0000000000000000))
(assert (= temp216_26 temp216_27))
(assert (= temp216_28 #x0000000000000000))
(assert (= var8002383 temp216_28))
(assert (= var8067930 var8002383))
(assert (= var7866619 var8067930))
(assert (= temp216_29 #x0000000000000001))
(assert (= var73168 (bvadd temp216_15 temp216_29)))
(assert (= temp216_30 #x0000000000000000))
(assert (= ARGNAME_batch_first_NAMEEND temp216_30))
(model-add temp216_1 () (_ BitVec 64) #x0000000000000000)
(model-add var133306 () (_ BitVec 64) #x0000000000000000)
(model-add var203683 () (_ BitVec 64) #x0000000000000000)
(model-add var269248 () (_ BitVec 64) #x0000000000000000)
(model-add var400389 () (_ BitVec 64) #x0000000000000000)
(model-add temp216_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp216_3 () (_ BitVec 64) #x0000000000000001)
(model-add var72970 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_total_length_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






