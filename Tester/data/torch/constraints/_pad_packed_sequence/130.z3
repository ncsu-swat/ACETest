(declare-fun temp214_1 () (_ BitVec 64))
(declare-fun var133306 () (_ BitVec 64))
(declare-fun var203683 () (_ BitVec 64))
(declare-fun var269248 () (_ BitVec 64))
(declare-fun var400389 () (_ BitVec 64))
(declare-fun temp214_2 () (_ BitVec 64))
(declare-fun temp214_3 () (_ BitVec 64))
(declare-fun var72970 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_total_length_NAMEEND () (_ BitVec 64))
(declare-fun temp214_4 () (_ BitVec 64))
(declare-fun ARGNAME_data_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var73022 () (_ BitVec 64))
(declare-fun var1182202 () (_ BitVec 64))
(declare-fun temp214_6 () (_ BitVec 64))
(declare-fun temp214_5 () (_ BitVec 64))
(declare-fun var1708277 () (_ BitVec 64))
(declare-fun temp214_7 () (_ BitVec 64))
(declare-fun var1708278 () (_ BitVec 64))
(declare-fun temp214_8 () (_ BitVec 64))
(declare-fun temp214_9 () (_ BitVec 64))
(declare-fun var2099757 () (_ BitVec 64))
(declare-fun var2099759 () (_ BitVec 64))
(declare-fun var2167601 () (_ BitVec 64))
(declare-fun var2167602 () (_ BitVec 64))
(declare-fun var2167615 () (_ BitVec 64))
(declare-fun var2167617 () (_ BitVec 64))
(declare-fun temp214_10 () (_ BitVec 64))
(declare-fun var2167640 () (_ BitVec 64))
(declare-fun var2167642 () (_ BitVec 64))
(declare-fun var2298739 () (_ BitVec 64))
(declare-fun temp214_12 () (_ BitVec 64))
(declare-fun temp214_11 () (_ BitVec 64))
(declare-fun temp214_14 () (_ BitVec 64))
(declare-fun temp214_13 () (_ BitVec 64))
(declare-fun temp214_16 () (_ BitVec 64))
(declare-fun temp214_15 () (_ BitVec 64))
(declare-fun temp214_17 () (_ BitVec 64))
(declare-fun var73175 () (_ BitVec 64))
(declare-fun temp214_18 () (_ BitVec 64))
(declare-fun var4786847 () (_ BitVec 64))
(declare-fun temp214_19 () (_ BitVec 64))
(declare-fun var4786851 () (_ BitVec 64))
(declare-fun var73195 () (_ BitVec 64))
(declare-fun temp214_20 () (_ BitVec 64))
(declare-fun var5704351 () (_ BitVec 64))
(declare-fun temp214_21 () (_ BitVec 64))
(declare-fun var5704355 () (_ BitVec 64))
(declare-fun temp214_23 () (_ BitVec 64))
(declare-fun temp214_22 () (_ BitVec 64))
(declare-fun temp214_24 () (_ BitVec 64))
(declare-fun var6556319 () (_ BitVec 64))
(declare-fun temp214_25 () (_ BitVec 64))
(declare-fun var6556323 () (_ BitVec 64))
(declare-fun temp214_27 () (_ BitVec 64))
(declare-fun temp214_26 () (_ BitVec 64))
(declare-fun temp214_28 () (_ BitVec 64))
(declare-fun var8002383 () (_ BitVec 64))
(declare-fun var8067930 () (_ BitVec 64))
(declare-fun var7866619 () (_ BitVec 64))
(declare-fun temp214_29 () (_ BitVec 64))
(declare-fun var73168 () (_ BitVec 64))
(declare-fun temp214_30 () (_ BitVec 64))
(declare-fun ARGNAME_batch_first_NAMEEND () (_ BitVec 64))
(assert (= temp214_1 #x0000000000000000))
(assert (= var133306 temp214_1))
(assert (= var203683 var133306))
(assert (= var269248 var203683))
(assert (= var400389 var269248))
(assert (= temp214_2 #x0000000000000000))
(assert (= var72970
   (ite (bvsgt ARGNAME_total_length_NAMEEND temp214_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp214_3 #x0000000000000001))
(assert (= var72970 temp214_3))
(assert (= temp214_4 #x0000000000000001))
(assert (= var73022 (bvadd ARGNAME_data_NAMEEND_DIM temp214_4)))
(assert (= var1182202 var73022))
(assert (= temp214_6 #xffffffffffffffff))
(assert (= temp214_5 temp214_6))
(assert (= var1708277 var1182202))
(assert (= temp214_7 #x0000000000000000))
(assert (= var1708278
   (ite (= var1708277 temp214_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp214_8 #x0000000000000001))
(assert (= var1708278 temp214_8))
(assert (= temp214_9 #x0000000000000001))
(assert (= var2099757 temp214_9))
(assert (= var2099759 (bvsub ARGNAME_data_NAMEEND_DIM var2099757)))
(assert (= var2167601 var2099757))
(assert (= var2167602 var2099759))
(assert (= var2167615 (bvadd var2167602 var2167601)))
(assert (= var2167617
   (ite (bvsgt var2167615 ARGNAME_data_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp214_10 #x0000000000000000))
(assert (= var2167617 temp214_10))
(assert (= var2167640 var2167601))
(assert (= var2167642 var2167602))
(assert (= var2298739 var2167642))
(assert (= temp214_12 #x0000000000000000))
(assert (= temp214_11 temp214_12))
(assert (= temp214_14 #x0000000000000000))
(assert (= temp214_13 temp214_14))
(assert (= temp214_16 #x0000000000000000))
(assert (= temp214_15 temp214_16))
(assert (= temp214_17 #x0000000000000000))
(assert (= var73175 temp214_17))
(assert (= temp214_18 #x0000000000000000))
(assert (= var4786847 temp214_18))
(assert (= temp214_19 #x0000000000000001))
(assert (= var4786851 temp214_19))
(assert (= var73195 (bvsub temp214_15 temp214_13)))
(assert (= temp214_20 #x0000000000000000))
(assert (= var5704351 temp214_20))
(assert (= temp214_21 #x0000000000000001))
(assert (= var5704355 temp214_21))
(assert (= temp214_23 #x0000000000000000))
(assert (= temp214_22 temp214_23))
(assert (= temp214_24 #x0000000000000001))
(assert (= var6556319 temp214_24))
(assert (= temp214_25 #x0000000000000001))
(assert (= var6556323 temp214_25))
(assert (= temp214_27 #x0000000000000000))
(assert (= temp214_26 temp214_27))
(assert (= temp214_28 #x0000000000000000))
(assert (= var8002383 temp214_28))
(assert (= var8067930 var8002383))
(assert (= var7866619 var8067930))
(assert (= temp214_29 #x0000000000000001))
(assert (= var73168 (bvadd temp214_15 temp214_29)))
(assert (= temp214_30 #x0000000000000000))
(assert (= ARGNAME_batch_first_NAMEEND temp214_30))
(model-add temp214_1 () (_ BitVec 64) #x0000000000000000)
(model-add var133306 () (_ BitVec 64) #x0000000000000000)
(model-add var203683 () (_ BitVec 64) #x0000000000000000)
(model-add var269248 () (_ BitVec 64) #x0000000000000000)
(model-add var400389 () (_ BitVec 64) #x0000000000000000)
(model-add temp214_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp214_3 () (_ BitVec 64) #x0000000000000001)
(model-add var72970 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_total_length_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))





