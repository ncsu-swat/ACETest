(declare-fun temp10665_1 () (_ BitVec 64))
(declare-fun var133306 () (_ BitVec 64))
(declare-fun var203683 () (_ BitVec 64))
(declare-fun var269248 () (_ BitVec 64))
(declare-fun var400389 () (_ BitVec 64))
(declare-fun temp10665_2 () (_ BitVec 64))
(declare-fun temp10665_3 () (_ BitVec 64))
(declare-fun var72970 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_total_length_NAMEEND () (_ BitVec 64))
(declare-fun temp10665_4 () (_ BitVec 64))
(declare-fun ARGNAME_data_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var73022 () (_ BitVec 64))
(declare-fun var1182202 () (_ BitVec 64))
(declare-fun temp10665_6 () (_ BitVec 64))
(declare-fun temp10665_5 () (_ BitVec 64))
(declare-fun var1708277 () (_ BitVec 64))
(declare-fun temp10665_7 () (_ BitVec 64))
(declare-fun var1708278 () (_ BitVec 64))
(declare-fun temp10665_8 () (_ BitVec 64))
(declare-fun temp10665_9 () (_ BitVec 64))
(declare-fun var2099757 () (_ BitVec 64))
(declare-fun var2099759 () (_ BitVec 64))
(declare-fun var2167601 () (_ BitVec 64))
(declare-fun var2167602 () (_ BitVec 64))
(declare-fun var2167615 () (_ BitVec 64))
(declare-fun var2167617 () (_ BitVec 64))
(declare-fun temp10665_10 () (_ BitVec 64))
(declare-fun var2167640 () (_ BitVec 64))
(declare-fun var2167642 () (_ BitVec 64))
(declare-fun var2298739 () (_ BitVec 64))
(declare-fun temp10665_12 () (_ BitVec 64))
(declare-fun temp10665_11 () (_ BitVec 64))
(declare-fun temp10665_14 () (_ BitVec 64))
(declare-fun temp10665_13 () (_ BitVec 64))
(declare-fun temp10665_16 () (_ BitVec 64))
(declare-fun temp10665_15 () (_ BitVec 64))
(declare-fun temp10665_17 () (_ BitVec 64))
(declare-fun var73175 () (_ BitVec 64))
(declare-fun temp10665_18 () (_ BitVec 64))
(declare-fun var4786847 () (_ BitVec 64))
(declare-fun temp10665_19 () (_ BitVec 64))
(declare-fun var4786851 () (_ BitVec 64))
(declare-fun temp10665_20 () (_ BitVec 64))
(declare-fun var4786903 () (_ BitVec 64))
(declare-fun temp10665_21 () (_ BitVec 64))
(declare-fun var73195 () (_ BitVec 64))
(declare-fun temp10665_22 () (_ BitVec 64))
(declare-fun var5573279 () (_ BitVec 64))
(declare-fun temp10665_23 () (_ BitVec 64))
(declare-fun var5573283 () (_ BitVec 64))
(declare-fun temp10665_24 () (_ BitVec 64))
(declare-fun var5573321 () (_ BitVec 64))
(declare-fun temp10665_25 () (_ BitVec 64))
(declare-fun var5573335 () (_ BitVec 64))
(declare-fun temp10665_26 () (_ BitVec 64))
(declare-fun temp10665_27 () (_ BitVec 64))
(declare-fun temp10665_29 () (_ BitVec 64))
(declare-fun temp10665_28 () (_ BitVec 64))
(declare-fun temp10665_30 () (_ BitVec 64))
(declare-fun var6228639 () (_ BitVec 64))
(declare-fun temp10665_31 () (_ BitVec 64))
(declare-fun var6228643 () (_ BitVec 64))
(declare-fun temp10665_33 () (_ BitVec 64))
(declare-fun temp10665_32 () (_ BitVec 64))
(declare-fun temp10665_34 () (_ BitVec 64))
(declare-fun var7740239 () (_ BitVec 64))
(declare-fun var7805786 () (_ BitVec 64))
(declare-fun var7604475 () (_ BitVec 64))
(declare-fun temp10665_35 () (_ BitVec 64))
(declare-fun var73168 () (_ BitVec 64))
(declare-fun temp10665_36 () (_ BitVec 64))
(declare-fun ARGNAME_batch_first_NAMEEND () (_ BitVec 64))
(declare-fun temp10665_37 () (_ BitVec 64))
(declare-fun var8325297 () (_ BitVec 64))
(declare-fun temp10665_38 () (_ BitVec 64))
(declare-fun var8325298 () (_ BitVec 64))
(assert (= temp10665_1 #x0000000000000000))
(assert (= var133306 temp10665_1))
(assert (= var203683 var133306))
(assert (= var269248 var203683))
(assert (= var400389 var269248))
(assert (= temp10665_2 #x0000000000000000))
(assert (= var72970
   (ite (bvsgt ARGNAME_total_length_NAMEEND temp10665_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10665_3 #x0000000000000001))
(assert (= var72970 temp10665_3))
(assert (= temp10665_4 #x0000000000000001))
(assert (= var73022 (bvadd ARGNAME_data_NAMEEND_DIM temp10665_4)))
(assert (= var1182202 var73022))
(assert (= temp10665_6 #xffffffffffffffff))
(assert (= temp10665_5 temp10665_6))
(assert (= var1708277 var1182202))
(assert (= temp10665_7 #x0000000000000000))
(assert (= var1708278
   (ite (= var1708277 temp10665_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp10665_8 #x0000000000000001))
(assert (= var1708278 temp10665_8))
(assert (= temp10665_9 #x0000000000000001))
(assert (= var2099757 temp10665_9))
(assert (= var2099759 (bvsub ARGNAME_data_NAMEEND_DIM var2099757)))
(assert (= var2167601 var2099757))
(assert (= var2167602 var2099759))
(assert (= var2167615 (bvadd var2167602 var2167601)))
(assert (= var2167617
   (ite (bvsgt var2167615 ARGNAME_data_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10665_10 #x0000000000000000))
(assert (= var2167617 temp10665_10))
(assert (= var2167640 var2167601))
(assert (= var2167642 var2167602))
(assert (= var2298739 var2167642))
(assert (= temp10665_12 #x0000000000000000))
(assert (= temp10665_11 temp10665_12))
(assert (= temp10665_14 #x0000000000000000))
(assert (= temp10665_13 temp10665_14))
(assert (= temp10665_16 #x0000000000000000))
(assert (= temp10665_15 temp10665_16))
(assert (= temp10665_17 #x0000000000000000))
(assert (= var73175 temp10665_17))
(assert (= temp10665_18 #x0000000000000000))
(assert (= var4786847 temp10665_18))
(assert (= temp10665_19 #x0000000000000001))
(assert (= var4786851 temp10665_19))
(assert (= temp10665_20 #x0000000000000000))
(assert (= var4786903 temp10665_20))
(assert (= temp10665_21 #x0000000000000000))
(assert (= var4786903 temp10665_21))
(assert (= var73195 (bvsub temp10665_15 temp10665_13)))
(assert (= temp10665_22 #x0000000000000000))
(assert (= var5573279 temp10665_22))
(assert (= temp10665_23 #x0000000000000001))
(assert (= var5573283 temp10665_23))
(assert (= temp10665_24 #x0000000000000000))
(assert (= var5573321 temp10665_24))
(assert (= temp10665_25 #x0000000000000000))
(assert (= var5573335 temp10665_25))
(assert (= temp10665_26 #x0000000000000000))
(assert (= var5573335 temp10665_26))
(assert (= temp10665_27 #x0000000000000000))
(assert (= var5573321 temp10665_27))
(assert (= temp10665_29 #x0000000000000000))
(assert (= temp10665_28 temp10665_29))
(assert (= temp10665_30 #x0000000000000001))
(assert (= var6228639 temp10665_30))
(assert (= temp10665_31 #x0000000000000001))
(assert (= var6228643 temp10665_31))
(assert (= temp10665_33 #x0000000000000000))
(assert (= temp10665_32 temp10665_33))
(assert (= temp10665_34 #x0000000000000000))
(assert (= var7740239 temp10665_34))
(assert (= var7805786 var7740239))
(assert (= var7604475 var7805786))
(assert (= temp10665_35 #x0000000000000001))
(assert (= var73168 (bvadd temp10665_15 temp10665_35)))
(assert (= temp10665_36 #x0000000000000001))
(assert (= ARGNAME_batch_first_NAMEEND temp10665_36))
(assert (= temp10665_37 #x0000000000000000))
(assert (= var8325297 temp10665_37))
(assert (= temp10665_38 #x0000000000000001))
(assert (= var8325298 temp10665_38))
(model-add temp10665_1 () (_ BitVec 64) #x0000000000000000)
(model-add var133306 () (_ BitVec 64) #x0000000000000000)
(model-add var203683 () (_ BitVec 64) #x0000000000000000)
(model-add var269248 () (_ BitVec 64) #x0000000000000000)
(model-add var400389 () (_ BitVec 64) #x0000000000000000)
(model-add temp10665_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp10665_3 () (_ BitVec 64) #x0000000000000001)
(model-add var72970 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_total_length_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))



