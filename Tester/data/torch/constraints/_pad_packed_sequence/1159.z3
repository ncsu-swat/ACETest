(declare-fun temp10757_1 () (_ BitVec 64))
(declare-fun var133306 () (_ BitVec 64))
(declare-fun var203683 () (_ BitVec 64))
(declare-fun var269248 () (_ BitVec 64))
(declare-fun var400389 () (_ BitVec 64))
(declare-fun temp10757_2 () (_ BitVec 64))
(declare-fun temp10757_3 () (_ BitVec 64))
(declare-fun var72970 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_total_length_NAMEEND () (_ BitVec 64))
(declare-fun temp10757_4 () (_ BitVec 64))
(declare-fun ARGNAME_data_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var73022 () (_ BitVec 64))
(declare-fun var1182202 () (_ BitVec 64))
(declare-fun temp10757_6 () (_ BitVec 64))
(declare-fun temp10757_5 () (_ BitVec 64))
(declare-fun var1708277 () (_ BitVec 64))
(declare-fun temp10757_7 () (_ BitVec 64))
(declare-fun var1708278 () (_ BitVec 64))
(declare-fun temp10757_8 () (_ BitVec 64))
(declare-fun temp10757_9 () (_ BitVec 64))
(declare-fun var2099757 () (_ BitVec 64))
(declare-fun var2099759 () (_ BitVec 64))
(declare-fun var2167601 () (_ BitVec 64))
(declare-fun var2167602 () (_ BitVec 64))
(declare-fun var2167615 () (_ BitVec 64))
(declare-fun var2167617 () (_ BitVec 64))
(declare-fun temp10757_10 () (_ BitVec 64))
(declare-fun var2167640 () (_ BitVec 64))
(declare-fun var2167642 () (_ BitVec 64))
(declare-fun var2298739 () (_ BitVec 64))
(declare-fun temp10757_12 () (_ BitVec 64))
(declare-fun temp10757_11 () (_ BitVec 64))
(declare-fun temp10757_14 () (_ BitVec 64))
(declare-fun temp10757_13 () (_ BitVec 64))
(declare-fun temp10757_16 () (_ BitVec 64))
(declare-fun temp10757_15 () (_ BitVec 64))
(declare-fun temp10757_17 () (_ BitVec 64))
(declare-fun var73175 () (_ BitVec 64))
(declare-fun temp10757_18 () (_ BitVec 64))
(declare-fun var4786847 () (_ BitVec 64))
(declare-fun temp10757_19 () (_ BitVec 64))
(declare-fun var4786851 () (_ BitVec 64))
(declare-fun temp10757_20 () (_ BitVec 64))
(declare-fun var4786903 () (_ BitVec 64))
(declare-fun temp10757_21 () (_ BitVec 64))
(declare-fun var73195 () (_ BitVec 64))
(declare-fun temp10757_22 () (_ BitVec 64))
(declare-fun var5573279 () (_ BitVec 64))
(declare-fun temp10757_23 () (_ BitVec 64))
(declare-fun var5573283 () (_ BitVec 64))
(declare-fun temp10757_24 () (_ BitVec 64))
(declare-fun var5573321 () (_ BitVec 64))
(declare-fun temp10757_25 () (_ BitVec 64))
(declare-fun var5573335 () (_ BitVec 64))
(declare-fun temp10757_26 () (_ BitVec 64))
(declare-fun temp10757_27 () (_ BitVec 64))
(declare-fun temp10757_29 () (_ BitVec 64))
(declare-fun temp10757_28 () (_ BitVec 64))
(declare-fun temp10757_30 () (_ BitVec 64))
(declare-fun var6228639 () (_ BitVec 64))
(declare-fun temp10757_31 () (_ BitVec 64))
(declare-fun var6228643 () (_ BitVec 64))
(declare-fun temp10757_32 () (_ BitVec 64))
(declare-fun var6228681 () (_ BitVec 64))
(declare-fun temp10757_33 () (_ BitVec 64))
(declare-fun var6228695 () (_ BitVec 64))
(declare-fun temp10757_34 () (_ BitVec 64))
(declare-fun temp10757_35 () (_ BitVec 64))
(declare-fun temp10757_37 () (_ BitVec 64))
(declare-fun temp10757_36 () (_ BitVec 64))
(declare-fun temp10757_38 () (_ BitVec 64))
(declare-fun var7478095 () (_ BitVec 64))
(declare-fun var7543642 () (_ BitVec 64))
(declare-fun var7342331 () (_ BitVec 64))
(declare-fun temp10757_39 () (_ BitVec 64))
(declare-fun var73168 () (_ BitVec 64))
(declare-fun temp10757_40 () (_ BitVec 64))
(declare-fun ARGNAME_batch_first_NAMEEND () (_ BitVec 64))
(declare-fun temp10757_41 () (_ BitVec 64))
(declare-fun var7866545 () (_ BitVec 64))
(declare-fun temp10757_42 () (_ BitVec 64))
(declare-fun var7866546 () (_ BitVec 64))
(assert (= temp10757_1 #x0000000000000000))
(assert (= var133306 temp10757_1))
(assert (= var203683 var133306))
(assert (= var269248 var203683))
(assert (= var400389 var269248))
(assert (= temp10757_2 #x0000000000000000))
(assert (= var72970
   (ite (bvsgt ARGNAME_total_length_NAMEEND temp10757_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10757_3 #x0000000000000001))
(assert (= var72970 temp10757_3))
(assert (= temp10757_4 #x0000000000000001))
(assert (= var73022 (bvadd ARGNAME_data_NAMEEND_DIM temp10757_4)))
(assert (= var1182202 var73022))
(assert (= temp10757_6 #xffffffffffffffff))
(assert (= temp10757_5 temp10757_6))
(assert (= var1708277 var1182202))
(assert (= temp10757_7 #x0000000000000000))
(assert (= var1708278
   (ite (= var1708277 temp10757_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp10757_8 #x0000000000000001))
(assert (= var1708278 temp10757_8))
(assert (= temp10757_9 #x0000000000000001))
(assert (= var2099757 temp10757_9))
(assert (= var2099759 (bvsub ARGNAME_data_NAMEEND_DIM var2099757)))
(assert (= var2167601 var2099757))
(assert (= var2167602 var2099759))
(assert (= var2167615 (bvadd var2167602 var2167601)))
(assert (= var2167617
   (ite (bvsgt var2167615 ARGNAME_data_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10757_10 #x0000000000000000))
(assert (= var2167617 temp10757_10))
(assert (= var2167640 var2167601))
(assert (= var2167642 var2167602))
(assert (= var2298739 var2167642))
(assert (= temp10757_12 #x0000000000000000))
(assert (= temp10757_11 temp10757_12))
(assert (= temp10757_14 #x0000000000000000))
(assert (= temp10757_13 temp10757_14))
(assert (= temp10757_16 #x0000000000000000))
(assert (= temp10757_15 temp10757_16))
(assert (= temp10757_17 #x0000000000000000))
(assert (= var73175 temp10757_17))
(assert (= temp10757_18 #x0000000000000000))
(assert (= var4786847 temp10757_18))
(assert (= temp10757_19 #x0000000000000001))
(assert (= var4786851 temp10757_19))
(assert (= temp10757_20 #x0000000000000000))
(assert (= var4786903 temp10757_20))
(assert (= temp10757_21 #x0000000000000000))
(assert (= var4786903 temp10757_21))
(assert (= var73195 (bvsub temp10757_15 temp10757_13)))
(assert (= temp10757_22 #x0000000000000000))
(assert (= var5573279 temp10757_22))
(assert (= temp10757_23 #x0000000000000001))
(assert (= var5573283 temp10757_23))
(assert (= temp10757_24 #x0000000000000000))
(assert (= var5573321 temp10757_24))
(assert (= temp10757_25 #x0000000000000000))
(assert (= var5573335 temp10757_25))
(assert (= temp10757_26 #x0000000000000000))
(assert (= var5573335 temp10757_26))
(assert (= temp10757_27 #x0000000000000000))
(assert (= var5573321 temp10757_27))
(assert (= temp10757_29 #x0000000000000000))
(assert (= temp10757_28 temp10757_29))
(assert (= temp10757_30 #x0000000000000001))
(assert (= var6228639 temp10757_30))
(assert (= temp10757_31 #x0000000000000001))
(assert (= var6228643 temp10757_31))
(assert (= temp10757_32 #x0000000000000000))
(assert (= var6228681 temp10757_32))
(assert (= temp10757_33 #x0000000000000000))
(assert (= var6228695 temp10757_33))
(assert (= temp10757_34 #x0000000000000000))
(assert (= var6228695 temp10757_34))
(assert (= temp10757_35 #x0000000000000000))
(assert (= var6228681 temp10757_35))
(assert (= temp10757_37 #x0000000000000000))
(assert (= temp10757_36 temp10757_37))
(assert (= temp10757_38 #x0000000000000000))
(assert (= var7478095 temp10757_38))
(assert (= var7543642 var7478095))
(assert (= var7342331 var7543642))
(assert (= temp10757_39 #x0000000000000001))
(assert (= var73168 (bvadd temp10757_15 temp10757_39)))
(assert (= temp10757_40 #x0000000000000001))
(assert (= ARGNAME_batch_first_NAMEEND temp10757_40))
(assert (= temp10757_41 #x0000000000000000))
(assert (= var7866545 temp10757_41))
(assert (= temp10757_42 #x0000000000000001))
(assert (= var7866546 temp10757_42))
(model-add temp10757_1 () (_ BitVec 64) #x0000000000000000)
(model-add var133306 () (_ BitVec 64) #x0000000000000000)
(model-add var203683 () (_ BitVec 64) #x0000000000000000)
(model-add var269248 () (_ BitVec 64) #x0000000000000000)
(model-add var400389 () (_ BitVec 64) #x0000000000000000)
(model-add temp10757_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp10757_3 () (_ BitVec 64) #x0000000000000001)
(model-add var72970 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_total_length_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






