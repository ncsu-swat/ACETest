(declare-fun temp58_1 () (_ BitVec 64))
(declare-fun temp58_2 () (_ BitVec 64))
(declare-fun var69002 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_x1_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp58_3 () (_ BitVec 64))
(declare-fun ARGNAME_x2_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var69030 () (_ BitVec 64))
(declare-fun temp58_4 () (_ BitVec 64))
(declare-fun temp58_5 () (_ BitVec 64))
(declare-fun var66347 () (_ BitVec 64))
(declare-fun temp58_6 () (_ BitVec 64))
(declare-fun temp58_7 () (_ BitVec 64))
(declare-fun ARGNAME_x1_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp58_8 () (_ BitVec 64))
(declare-fun temp58_9 () (_ BitVec 64))
(declare-fun temp58_10 () (_ BitVec 64))
(declare-fun temp58_11 () (_ BitVec 64))
(declare-fun temp58_12 () (_ BitVec 64))
(declare-fun temp58_13 () (_ BitVec 64))
(declare-fun temp58_14 () (_ BitVec 64))
(declare-fun temp58_15 () (_ BitVec 64))
(declare-fun temp58_16 () (_ BitVec 64))
(declare-fun temp58_17 () (_ BitVec 64))
(declare-fun temp58_18 () (_ BitVec 64))
(declare-fun temp58_19 () (_ BitVec 64))
(declare-fun temp58_20 () (_ BitVec 64))
(declare-fun temp58_21 () (_ BitVec 64))
(declare-fun temp58_22 () (_ BitVec 64))
(declare-fun temp58_23 () (_ BitVec 64))
(declare-fun temp58_24 () (_ BitVec 64))
(declare-fun temp58_25 () (_ BitVec 64))
(declare-fun temp58_26 () (_ BitVec 64))
(declare-fun var69052 () (_ BitVec 64))
(declare-fun temp58_27 () (_ BitVec 64))
(declare-fun temp58_28 () (_ BitVec 64))
(declare-fun temp58_29 () (_ BitVec 64))
(declare-fun ARGNAME_x2_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp58_30 () (_ BitVec 64))
(declare-fun temp58_31 () (_ BitVec 64))
(declare-fun temp58_32 () (_ BitVec 64))
(declare-fun temp58_33 () (_ BitVec 64))
(declare-fun temp58_34 () (_ BitVec 64))
(declare-fun temp58_35 () (_ BitVec 64))
(declare-fun temp58_36 () (_ BitVec 64))
(declare-fun temp58_37 () (_ BitVec 64))
(declare-fun temp58_38 () (_ BitVec 64))
(declare-fun temp58_39 () (_ BitVec 64))
(declare-fun temp58_40 () (_ BitVec 64))
(declare-fun temp58_41 () (_ BitVec 64))
(declare-fun temp58_42 () (_ BitVec 64))
(declare-fun temp58_43 () (_ BitVec 64))
(declare-fun temp58_44 () (_ BitVec 64))
(declare-fun temp58_45 () (_ BitVec 64))
(declare-fun temp58_46 () (_ BitVec 64))
(declare-fun temp58_47 () (_ BitVec 64))
(declare-fun temp58_48 () (_ BitVec 64))
(declare-fun var69055 () (_ BitVec 64))
(declare-fun var69056 () (_ BitVec 64))
(declare-fun temp58_49 () (_ BitVec 64))
(declare-fun temp58_50 () (_ BitVec 64))
(declare-fun var134718 () (_ BitVec 64))
(declare-fun temp58_51 () (_ BitVec 64))
(declare-fun temp58_52 () (_ BitVec 64))
(declare-fun temp58_53 () (_ BitVec 64))
(declare-fun var134717 () (_ BitVec 64))
(declare-fun temp58_54 () (_ BitVec 64))
(declare-fun temp58_55 () (_ BitVec 64))
(declare-fun temp58_56 () (_ BitVec 64))
(declare-fun temp58_57 () (_ BitVec 64))
(declare-fun var134722 () (_ BitVec 64))
(declare-fun temp58_58 () (_ BitVec 64))
(declare-fun ARGNAME_x1_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var134727 () (_ BitVec 64))
(declare-fun temp58_59 () (_ BitVec 64))
(declare-fun temp58_60 () (_ BitVec 64))
(declare-fun ARGNAME_x2_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var134731 () (_ BitVec 64))
(declare-fun temp58_61 () (_ BitVec 64))
(declare-fun temp58_63 () (_ BitVec 64))
(declare-fun temp58_62 () (_ BitVec 64))
(declare-fun temp58_64 () (_ BitVec 64))
(declare-fun ARGNAME_p_NAMEEND () (_ BitVec 64))
(declare-fun var134768 () (_ BitVec 64))
(declare-fun temp58_65 () (_ BitVec 64))
(declare-fun temp58_66 () (_ BitVec 64))
(declare-fun ARGNAME_compute_mode_NAMEEND () (_ BitVec 64))
(declare-fun temp58_67 () (_ BitVec 64))
(declare-fun var266146 () (_ BitVec 64))
(declare-fun temp58_68 () (_ BitVec 64))
(declare-fun temp58_69 () (_ BitVec 64))
(declare-fun var262955 () (_ BitVec 64))
(declare-fun temp58_70 () (_ BitVec 64))
(declare-fun temp58_71 () (_ BitVec 64))
(declare-fun temp58_72 () (_ BitVec 64))
(declare-fun var266214 () (_ BitVec 64))
(declare-fun temp58_73 () (_ BitVec 64))
(declare-fun temp58_74 () (_ BitVec 64))
(declare-fun temp58_75 () (_ BitVec 64))
(declare-fun temp58_76 () (_ BitVec 64))
(declare-fun var266215 () (_ BitVec 64))
(declare-fun temp58_78 () (_ BitVec 64))
(declare-fun temp58_77 () (_ BitVec 64))
(declare-fun temp58_79 () (_ BitVec 64))
(declare-fun var266224 () (_ BitVec 64))
(declare-fun temp58_80 () (_ BitVec 64))
(declare-fun temp58_81 () (_ BitVec 64))
(declare-fun var265790 () (_ BitVec 64))
(declare-fun temp58_82 () (_ BitVec 64))
(declare-fun temp58_83 () (_ BitVec 64))
(declare-fun temp58_84 () (_ BitVec 64))
(declare-fun var266244 () (_ BitVec 64))
(declare-fun temp58_85 () (_ BitVec 64))
(declare-fun temp58_86 () (_ BitVec 64))
(declare-fun temp58_87 () (_ BitVec 64))
(declare-fun temp58_88 () (_ BitVec 64))
(declare-fun var266245 () (_ BitVec 64))
(declare-fun temp58_89 () (_ BitVec 64))
(declare-fun var266247 () (_ BitVec 64))
(declare-fun temp58_90 () (_ BitVec 64))
(declare-fun temp58_91 () (_ BitVec 64))
(declare-fun temp58_92 () (_ BitVec 64))
(declare-fun var266309 () (_ BitVec 64))
(declare-fun temp58_93 () (_ BitVec 64))
(declare-fun var266324 () (_ BitVec 64))
(declare-fun temp58_94 () (_ BitVec 64))
(declare-fun var1573972 () (_ BitVec 64))
(declare-fun var1639526 () (_ BitVec 64))
(declare-fun temp58_95 () (_ BitVec 64))
(declare-fun var1901652 () (_ BitVec 64))
(declare-fun var1967206 () (_ BitVec 64))
(declare-fun temp58_96 () (_ BitVec 64))
(declare-fun var266486 () (_ BitVec 64))
(declare-fun temp58_97 () (_ BitVec 64))
(declare-fun var266487 () (_ BitVec 64))
(declare-fun var266488 () (_ BitVec 64))
(declare-fun temp58_98 () (_ BitVec 64))
(declare-fun var266641 () (_ BitVec 64))
(declare-fun temp58_99 () (_ BitVec 64))
(assert (= temp58_1 #x0000000000000002))
(assert (= var69002
   (ite (bvslt ARGNAME_x1_NAMEEND_DIM temp58_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_2 #x0000000000000000))
(assert (= var69002 temp58_2))
(assert (= temp58_3 #x0000000000000002))
(assert (= var69030
   (ite (bvslt ARGNAME_x2_NAMEEND_DIM temp58_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_4 #x0000000000000000))
(assert (= var69030 temp58_4))
(assert (= temp58_5 #xffffffffffffffff))
(assert (= var66347 temp58_5))
(assert (= temp58_6 #x0000000000000000))
(assert (= temp58_7 temp58_6))
(assert (= temp58_8 (select ARGNAME_x1_NAMEEND_DIMSIZE temp58_7)))
(assert (= temp58_9 #x0000000000000001))
(assert (= temp58_10 temp58_9))
(assert (= temp58_11 (select ARGNAME_x1_NAMEEND_DIMSIZE temp58_10)))
(assert (= temp58_12 #x0000000000000002))
(assert (= temp58_13 temp58_12))
(assert (= temp58_14 (select ARGNAME_x1_NAMEEND_DIMSIZE temp58_13)))
(assert (= temp58_15 #x0000000000000003))
(assert (= temp58_16 temp58_15))
(assert (= temp58_17 (select ARGNAME_x1_NAMEEND_DIMSIZE temp58_16)))
(assert (= temp58_18 #x0000000000000004))
(assert (= temp58_19 temp58_18))
(assert (= temp58_20 (select ARGNAME_x1_NAMEEND_DIMSIZE temp58_19)))
(assert (= temp58_21 #x0000000000000005))
(assert (= temp58_22 temp58_21))
(assert (= temp58_23 (select ARGNAME_x1_NAMEEND_DIMSIZE temp58_22)))
(assert (= temp58_24 #x0000000000000000))
(assert (= temp58_25
   (ite (bvslt var66347 temp58_24)
        (bvadd ARGNAME_x1_NAMEEND_DIM var66347)
        var66347)))
(assert (= temp58_26 (select ARGNAME_x1_NAMEEND_DIMSIZE temp58_25)))
(assert (= var69052 temp58_26))
(assert (bvslt (ite (bvslt var66347 temp58_24)
            (bvadd ARGNAME_x1_NAMEEND_DIM var66347)
            var66347)
       ARGNAME_x1_NAMEEND_DIM))
(assert (= temp58_27 #xffffffffffffffff))
(assert (= var66347 temp58_27))
(assert (= temp58_28 #x0000000000000000))
(assert (= temp58_29 temp58_28))
(assert (= temp58_30 (select ARGNAME_x2_NAMEEND_DIMSIZE temp58_29)))
(assert (= temp58_31 #x0000000000000001))
(assert (= temp58_32 temp58_31))
(assert (= temp58_33 (select ARGNAME_x2_NAMEEND_DIMSIZE temp58_32)))
(assert (= temp58_34 #x0000000000000002))
(assert (= temp58_35 temp58_34))
(assert (= temp58_36 (select ARGNAME_x2_NAMEEND_DIMSIZE temp58_35)))
(assert (= temp58_37 #x0000000000000003))
(assert (= temp58_38 temp58_37))
(assert (= temp58_39 (select ARGNAME_x2_NAMEEND_DIMSIZE temp58_38)))
(assert (= temp58_40 #x0000000000000004))
(assert (= temp58_41 temp58_40))
(assert (= temp58_42 (select ARGNAME_x2_NAMEEND_DIMSIZE temp58_41)))
(assert (= temp58_43 #x0000000000000005))
(assert (= temp58_44 temp58_43))
(assert (= temp58_45 (select ARGNAME_x2_NAMEEND_DIMSIZE temp58_44)))
(assert (= temp58_46 #x0000000000000000))
(assert (= temp58_47
   (ite (bvslt var66347 temp58_46)
        (bvadd ARGNAME_x2_NAMEEND_DIM var66347)
        var66347)))
(assert (= temp58_48 (select ARGNAME_x2_NAMEEND_DIMSIZE temp58_47)))
(assert (= var69055 temp58_48))
(assert (bvslt (ite (bvslt var66347 temp58_46)
            (bvadd ARGNAME_x2_NAMEEND_DIM var66347)
            var66347)
       ARGNAME_x2_NAMEEND_DIM))
(assert (= var69056 (ite (= var69052 var69055) #x0000000000000001 #x0000000000000000)))
(assert (= temp58_49 #x0000000000000001))
(assert (= var69056 temp58_49))
(assert (= temp58_50 #xfffffffffffffffe))
(assert (= var134718 temp58_50))
(assert (= temp58_51 #x0000000000000000))
(assert (= temp58_52
   (ite (bvslt var134718 temp58_51)
        (bvadd ARGNAME_x1_NAMEEND_DIM var134718)
        var134718)))
(assert (= temp58_53 (select ARGNAME_x1_NAMEEND_DIMSIZE temp58_52)))
(assert (= var134717 temp58_53))
(assert (bvslt (ite (bvslt var134718 temp58_51)
            (bvadd ARGNAME_x1_NAMEEND_DIM var134718)
            var134718)
       ARGNAME_x1_NAMEEND_DIM))
(assert (= temp58_54 #xfffffffffffffffe))
(assert (= var134718 temp58_54))
(assert (= temp58_55 #x0000000000000000))
(assert (= temp58_56
   (ite (bvslt var134718 temp58_55)
        (bvadd ARGNAME_x2_NAMEEND_DIM var134718)
        var134718)))
(assert (= temp58_57 (select ARGNAME_x2_NAMEEND_DIMSIZE temp58_56)))
(assert (= var134722 temp58_57))
(assert (bvslt (ite (bvslt var134718 temp58_55)
            (bvadd ARGNAME_x2_NAMEEND_DIM var134718)
            var134718)
       ARGNAME_x2_NAMEEND_DIM))
(assert (= temp58_58 #x0000000000000000))
(assert (= var134727
   (ite (= ARGNAME_x1_NAMEEND_NUMELEMENT temp58_58)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_59 #x0000000000000000))
(assert (= var134727 temp58_59))
(assert (= temp58_60 #x0000000000000000))
(assert (= var134731
   (ite (= ARGNAME_x2_NAMEEND_NUMELEMENT temp58_60)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_61 #x0000000000000000))
(assert (= var134731 temp58_61))
(assert (= temp58_63 #x0000000000000000))
(assert (= temp58_62 temp58_63))
(assert (= temp58_64 #x0000000000000002))
(assert (= var134768
   (ite (= ARGNAME_p_NAMEEND temp58_64) #x0000000000000001 #x0000000000000000)))
(assert (= temp58_65 #x0000000000000001))
(assert (= var134768 temp58_65))
(assert (= temp58_66 #x0000000000000001))
(assert (or false (= ARGNAME_compute_mode_NAMEEND temp58_66)))
(assert (= temp58_67 #x0000000000000000))
(assert (= var266146
   (ite (bvslt ARGNAME_p_NAMEEND temp58_67)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_68 #x0000000000000000))
(assert (= var266146 temp58_68))
(assert (= temp58_69 #xffffffffffffffff))
(assert (= var262955 temp58_69))
(assert (= temp58_70 #x0000000000000000))
(assert (= temp58_71
   (ite (bvslt var262955 temp58_70)
        (bvadd ARGNAME_x1_NAMEEND_DIM var262955)
        var262955)))
(assert (= temp58_72 (select ARGNAME_x1_NAMEEND_DIMSIZE temp58_71)))
(assert (= var266214 temp58_72))
(assert (bvslt (ite (bvslt var262955 temp58_70)
            (bvadd ARGNAME_x1_NAMEEND_DIM var262955)
            var262955)
       ARGNAME_x1_NAMEEND_DIM))
(assert (= temp58_73 #xffffffffffffffff))
(assert (= var262955 temp58_73))
(assert (= temp58_74 #x0000000000000000))
(assert (= temp58_75
   (ite (bvslt var262955 temp58_74)
        (bvadd ARGNAME_x2_NAMEEND_DIM var262955)
        var262955)))
(assert (= temp58_76 (select ARGNAME_x2_NAMEEND_DIMSIZE temp58_75)))
(assert (= var266215 temp58_76))
(assert (bvslt (ite (bvslt var262955 temp58_74)
            (bvadd ARGNAME_x2_NAMEEND_DIM var262955)
            var262955)
       ARGNAME_x2_NAMEEND_DIM))
(assert (= temp58_78 #x0000000000000000))
(assert (= temp58_77 temp58_78))
(assert (= temp58_79 #x0000000000000002))
(assert (= var266224
   (ite (bvsgt ARGNAME_compute_mode_NAMEEND temp58_79)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_80 #x0000000000000000))
(assert (= var266224 temp58_80))
(assert (= temp58_81 #xfffffffffffffffe))
(assert (= var265790 temp58_81))
(assert (= temp58_82 #x0000000000000000))
(assert (= temp58_83
   (ite (bvslt var265790 temp58_82)
        (bvadd ARGNAME_x1_NAMEEND_DIM var265790)
        var265790)))
(assert (= temp58_84 (select ARGNAME_x1_NAMEEND_DIMSIZE temp58_83)))
(assert (= var266244 temp58_84))
(assert (bvslt (ite (bvslt var265790 temp58_82)
            (bvadd ARGNAME_x1_NAMEEND_DIM var265790)
            var265790)
       ARGNAME_x1_NAMEEND_DIM))
(assert (= temp58_85 #xfffffffffffffffe))
(assert (= var265790 temp58_85))
(assert (= temp58_86 #x0000000000000000))
(assert (= temp58_87
   (ite (bvslt var265790 temp58_86)
        (bvadd ARGNAME_x2_NAMEEND_DIM var265790)
        var265790)))
(assert (= temp58_88 (select ARGNAME_x2_NAMEEND_DIMSIZE temp58_87)))
(assert (= var266245 temp58_88))
(assert (bvslt (ite (bvslt var265790 temp58_86)
            (bvadd ARGNAME_x2_NAMEEND_DIM var265790)
            var265790)
       ARGNAME_x2_NAMEEND_DIM))
(assert (= temp58_89 #x0000000000000002))
(assert (= var266247
   (ite (= ARGNAME_p_NAMEEND temp58_89) #x0000000000000001 #x0000000000000000)))
(assert (= temp58_90 #x0000000000000001))
(assert (= var266247 temp58_90))
(assert (= temp58_91 #x0000000000000001))
(assert (or false (= ARGNAME_compute_mode_NAMEEND temp58_91)))
(assert (= temp58_92 #xfffffffffffffffe))
(assert (= var266309 (bvadd ARGNAME_x1_NAMEEND_DIM temp58_92)))
(assert (= temp58_93 #xfffffffffffffffe))
(assert (= var266324 (bvadd ARGNAME_x2_NAMEEND_DIM temp58_93)))
(assert (= temp58_94 #x0000000000000000))
(assert (= var1573972 temp58_94))
(assert (= var1639526 var1573972))
(assert (= temp58_95 #x0000000000000000))
(assert (= var1901652 temp58_95))
(assert (= var1967206 var1901652))
(assert (= temp58_96 #x0000000000000000))
(assert (= var266486
   (ite (= var266244 temp58_96) #x0000000000000001 #x0000000000000000)))
(assert (= temp58_97 #x0000000000000000))
(assert (= var266487
   (ite (= var266245 temp58_97) #x0000000000000001 #x0000000000000000)))
(assert (= var266488 (bvor var266486 var266487)))
(assert (= temp58_98 #x0000000000000000))
(assert (= var266641
   (ite (= var266214 temp58_98) #x0000000000000001 #x0000000000000000)))
(assert (= temp58_99 #x0000000000000001))
(assert (= var266641 temp58_99))
(model-add temp58_1 () (_ BitVec 64) #x0000000000000002)
(model-add temp58_2 () (_ BitVec 64) #x0000000000000000)
(model-add var69002 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_x1_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000002 #x8000000000000000))
                #x0000000000000002
                (bvsub #x0000000000000002 #x0000000000000001)))






