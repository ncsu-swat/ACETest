(declare-fun temp15_1 () (_ BitVec 64))
(declare-fun temp15_2 () (_ BitVec 64))
(declare-fun var69002 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_x1_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp15_3 () (_ BitVec 64))
(declare-fun ARGNAME_x2_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var69030 () (_ BitVec 64))
(declare-fun temp15_4 () (_ BitVec 64))
(declare-fun temp15_5 () (_ BitVec 64))
(declare-fun var66347 () (_ BitVec 64))
(declare-fun temp15_6 () (_ BitVec 64))
(declare-fun temp15_7 () (_ BitVec 64))
(declare-fun ARGNAME_x1_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp15_8 () (_ BitVec 64))
(declare-fun temp15_9 () (_ BitVec 64))
(declare-fun temp15_10 () (_ BitVec 64))
(declare-fun temp15_11 () (_ BitVec 64))
(declare-fun temp15_12 () (_ BitVec 64))
(declare-fun temp15_13 () (_ BitVec 64))
(declare-fun temp15_14 () (_ BitVec 64))
(declare-fun temp15_15 () (_ BitVec 64))
(declare-fun temp15_16 () (_ BitVec 64))
(declare-fun temp15_17 () (_ BitVec 64))
(declare-fun temp15_18 () (_ BitVec 64))
(declare-fun temp15_19 () (_ BitVec 64))
(declare-fun temp15_20 () (_ BitVec 64))
(declare-fun temp15_21 () (_ BitVec 64))
(declare-fun temp15_22 () (_ BitVec 64))
(declare-fun temp15_23 () (_ BitVec 64))
(declare-fun temp15_24 () (_ BitVec 64))
(declare-fun temp15_25 () (_ BitVec 64))
(declare-fun temp15_26 () (_ BitVec 64))
(declare-fun var69052 () (_ BitVec 64))
(declare-fun temp15_27 () (_ BitVec 64))
(declare-fun temp15_28 () (_ BitVec 64))
(declare-fun temp15_29 () (_ BitVec 64))
(declare-fun ARGNAME_x2_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp15_30 () (_ BitVec 64))
(declare-fun temp15_31 () (_ BitVec 64))
(declare-fun temp15_32 () (_ BitVec 64))
(declare-fun temp15_33 () (_ BitVec 64))
(declare-fun temp15_34 () (_ BitVec 64))
(declare-fun temp15_35 () (_ BitVec 64))
(declare-fun temp15_36 () (_ BitVec 64))
(declare-fun temp15_37 () (_ BitVec 64))
(declare-fun temp15_38 () (_ BitVec 64))
(declare-fun temp15_39 () (_ BitVec 64))
(declare-fun temp15_40 () (_ BitVec 64))
(declare-fun temp15_41 () (_ BitVec 64))
(declare-fun temp15_42 () (_ BitVec 64))
(declare-fun temp15_43 () (_ BitVec 64))
(declare-fun temp15_44 () (_ BitVec 64))
(declare-fun temp15_45 () (_ BitVec 64))
(declare-fun temp15_46 () (_ BitVec 64))
(declare-fun temp15_47 () (_ BitVec 64))
(declare-fun temp15_48 () (_ BitVec 64))
(declare-fun var69055 () (_ BitVec 64))
(declare-fun var69056 () (_ BitVec 64))
(declare-fun temp15_49 () (_ BitVec 64))
(declare-fun temp15_50 () (_ BitVec 64))
(declare-fun var134718 () (_ BitVec 64))
(declare-fun temp15_51 () (_ BitVec 64))
(declare-fun temp15_52 () (_ BitVec 64))
(declare-fun temp15_53 () (_ BitVec 64))
(declare-fun var134717 () (_ BitVec 64))
(declare-fun temp15_54 () (_ BitVec 64))
(declare-fun temp15_55 () (_ BitVec 64))
(declare-fun temp15_56 () (_ BitVec 64))
(declare-fun temp15_57 () (_ BitVec 64))
(declare-fun var134722 () (_ BitVec 64))
(declare-fun temp15_58 () (_ BitVec 64))
(declare-fun ARGNAME_x1_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var134727 () (_ BitVec 64))
(declare-fun temp15_59 () (_ BitVec 64))
(declare-fun temp15_60 () (_ BitVec 64))
(declare-fun ARGNAME_x2_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var134731 () (_ BitVec 64))
(declare-fun temp15_61 () (_ BitVec 64))
(declare-fun temp15_63 () (_ BitVec 64))
(declare-fun temp15_62 () (_ BitVec 64))
(declare-fun temp15_64 () (_ BitVec 64))
(declare-fun ARGNAME_p_NAMEEND () (_ BitVec 64))
(declare-fun var134768 () (_ BitVec 64))
(declare-fun temp15_65 () (_ BitVec 64))
(declare-fun temp15_66 () (_ BitVec 64))
(declare-fun ARGNAME_compute_mode_NAMEEND () (_ BitVec 64))
(declare-fun temp15_67 () (_ BitVec 64))
(declare-fun var266146 () (_ BitVec 64))
(declare-fun temp15_68 () (_ BitVec 64))
(declare-fun temp15_69 () (_ BitVec 64))
(declare-fun var262955 () (_ BitVec 64))
(declare-fun temp15_70 () (_ BitVec 64))
(declare-fun temp15_71 () (_ BitVec 64))
(declare-fun temp15_72 () (_ BitVec 64))
(declare-fun var266214 () (_ BitVec 64))
(declare-fun temp15_73 () (_ BitVec 64))
(declare-fun temp15_74 () (_ BitVec 64))
(declare-fun temp15_75 () (_ BitVec 64))
(declare-fun temp15_76 () (_ BitVec 64))
(declare-fun var266215 () (_ BitVec 64))
(declare-fun temp15_78 () (_ BitVec 64))
(declare-fun temp15_77 () (_ BitVec 64))
(declare-fun temp15_79 () (_ BitVec 64))
(declare-fun var266224 () (_ BitVec 64))
(declare-fun temp15_80 () (_ BitVec 64))
(declare-fun temp15_81 () (_ BitVec 64))
(declare-fun var265790 () (_ BitVec 64))
(declare-fun temp15_82 () (_ BitVec 64))
(declare-fun temp15_83 () (_ BitVec 64))
(declare-fun temp15_84 () (_ BitVec 64))
(declare-fun var266244 () (_ BitVec 64))
(declare-fun temp15_85 () (_ BitVec 64))
(declare-fun temp15_86 () (_ BitVec 64))
(declare-fun temp15_87 () (_ BitVec 64))
(declare-fun temp15_88 () (_ BitVec 64))
(declare-fun var266245 () (_ BitVec 64))
(declare-fun temp15_89 () (_ BitVec 64))
(declare-fun var266247 () (_ BitVec 64))
(declare-fun temp15_90 () (_ BitVec 64))
(declare-fun temp15_91 () (_ BitVec 64))
(declare-fun temp15_92 () (_ BitVec 64))
(declare-fun var266309 () (_ BitVec 64))
(declare-fun temp15_93 () (_ BitVec 64))
(declare-fun var266324 () (_ BitVec 64))
(declare-fun temp15_94 () (_ BitVec 64))
(declare-fun var1573972 () (_ BitVec 64))
(declare-fun var1639526 () (_ BitVec 64))
(declare-fun temp15_95 () (_ BitVec 64))
(declare-fun var1901652 () (_ BitVec 64))
(declare-fun var1967206 () (_ BitVec 64))
(declare-fun temp15_96 () (_ BitVec 64))
(declare-fun var266486 () (_ BitVec 64))
(declare-fun temp15_97 () (_ BitVec 64))
(declare-fun var266487 () (_ BitVec 64))
(declare-fun var266488 () (_ BitVec 64))
(declare-fun temp15_98 () (_ BitVec 64))
(declare-fun var266641 () (_ BitVec 64))
(declare-fun temp15_99 () (_ BitVec 64))
(declare-fun temp15_100 () (_ BitVec 64))
(declare-fun var266673 () (_ BitVec 64))
(declare-fun temp15_101 () (_ BitVec 64))
(declare-fun temp15_102 () (_ BitVec 64))
(declare-fun temp15_104 () (_ BitVec 64))
(declare-fun temp15_103 () (_ BitVec 64))
(declare-fun temp15_106 () (_ BitVec 64))
(declare-fun temp15_105 () (_ BitVec 64))
(declare-fun temp15_108 () (_ BitVec 64))
(declare-fun temp15_107 () (_ BitVec 64))
(declare-fun temp15_110 () (_ BitVec 64))
(declare-fun temp15_109 () (_ BitVec 64))
(assert (= temp15_1 #x0000000000000002))
(assert (= var69002
   (ite (bvslt ARGNAME_x1_NAMEEND_DIM temp15_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp15_2 #x0000000000000000))
(assert (= var69002 temp15_2))
(assert (= temp15_3 #x0000000000000002))
(assert (= var69030
   (ite (bvslt ARGNAME_x2_NAMEEND_DIM temp15_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp15_4 #x0000000000000000))
(assert (= var69030 temp15_4))
(assert (= temp15_5 #xffffffffffffffff))
(assert (= var66347 temp15_5))
(assert (= temp15_6 #x0000000000000000))
(assert (= temp15_7 temp15_6))
(assert (= temp15_8 (select ARGNAME_x1_NAMEEND_DIMSIZE temp15_7)))
(assert (= temp15_9 #x0000000000000001))
(assert (= temp15_10 temp15_9))
(assert (= temp15_11 (select ARGNAME_x1_NAMEEND_DIMSIZE temp15_10)))
(assert (= temp15_12 #x0000000000000002))
(assert (= temp15_13 temp15_12))
(assert (= temp15_14 (select ARGNAME_x1_NAMEEND_DIMSIZE temp15_13)))
(assert (= temp15_15 #x0000000000000003))
(assert (= temp15_16 temp15_15))
(assert (= temp15_17 (select ARGNAME_x1_NAMEEND_DIMSIZE temp15_16)))
(assert (= temp15_18 #x0000000000000004))
(assert (= temp15_19 temp15_18))
(assert (= temp15_20 (select ARGNAME_x1_NAMEEND_DIMSIZE temp15_19)))
(assert (= temp15_21 #x0000000000000005))
(assert (= temp15_22 temp15_21))
(assert (= temp15_23 (select ARGNAME_x1_NAMEEND_DIMSIZE temp15_22)))
(assert (= temp15_24 #x0000000000000000))
(assert (= temp15_25
   (ite (bvslt var66347 temp15_24)
        (bvadd ARGNAME_x1_NAMEEND_DIM var66347)
        var66347)))
(assert (= temp15_26 (select ARGNAME_x1_NAMEEND_DIMSIZE temp15_25)))
(assert (= var69052 temp15_26))
(assert (bvslt (ite (bvslt var66347 temp15_24)
            (bvadd ARGNAME_x1_NAMEEND_DIM var66347)
            var66347)
       ARGNAME_x1_NAMEEND_DIM))
(assert (= temp15_27 #xffffffffffffffff))
(assert (= var66347 temp15_27))
(assert (= temp15_28 #x0000000000000000))
(assert (= temp15_29 temp15_28))
(assert (= temp15_30 (select ARGNAME_x2_NAMEEND_DIMSIZE temp15_29)))
(assert (= temp15_31 #x0000000000000001))
(assert (= temp15_32 temp15_31))
(assert (= temp15_33 (select ARGNAME_x2_NAMEEND_DIMSIZE temp15_32)))
(assert (= temp15_34 #x0000000000000002))
(assert (= temp15_35 temp15_34))
(assert (= temp15_36 (select ARGNAME_x2_NAMEEND_DIMSIZE temp15_35)))
(assert (= temp15_37 #x0000000000000003))
(assert (= temp15_38 temp15_37))
(assert (= temp15_39 (select ARGNAME_x2_NAMEEND_DIMSIZE temp15_38)))
(assert (= temp15_40 #x0000000000000004))
(assert (= temp15_41 temp15_40))
(assert (= temp15_42 (select ARGNAME_x2_NAMEEND_DIMSIZE temp15_41)))
(assert (= temp15_43 #x0000000000000005))
(assert (= temp15_44 temp15_43))
(assert (= temp15_45 (select ARGNAME_x2_NAMEEND_DIMSIZE temp15_44)))
(assert (= temp15_46 #x0000000000000000))
(assert (= temp15_47
   (ite (bvslt var66347 temp15_46)
        (bvadd ARGNAME_x2_NAMEEND_DIM var66347)
        var66347)))
(assert (= temp15_48 (select ARGNAME_x2_NAMEEND_DIMSIZE temp15_47)))
(assert (= var69055 temp15_48))
(assert (bvslt (ite (bvslt var66347 temp15_46)
            (bvadd ARGNAME_x2_NAMEEND_DIM var66347)
            var66347)
       ARGNAME_x2_NAMEEND_DIM))
(assert (= var69056 (ite (= var69052 var69055) #x0000000000000001 #x0000000000000000)))
(assert (= temp15_49 #x0000000000000001))
(assert (= var69056 temp15_49))
(assert (= temp15_50 #xfffffffffffffffe))
(assert (= var134718 temp15_50))
(assert (= temp15_51 #x0000000000000000))
(assert (= temp15_52
   (ite (bvslt var134718 temp15_51)
        (bvadd ARGNAME_x1_NAMEEND_DIM var134718)
        var134718)))
(assert (= temp15_53 (select ARGNAME_x1_NAMEEND_DIMSIZE temp15_52)))
(assert (= var134717 temp15_53))
(assert (bvslt (ite (bvslt var134718 temp15_51)
            (bvadd ARGNAME_x1_NAMEEND_DIM var134718)
            var134718)
       ARGNAME_x1_NAMEEND_DIM))
(assert (= temp15_54 #xfffffffffffffffe))
(assert (= var134718 temp15_54))
(assert (= temp15_55 #x0000000000000000))
(assert (= temp15_56
   (ite (bvslt var134718 temp15_55)
        (bvadd ARGNAME_x2_NAMEEND_DIM var134718)
        var134718)))
(assert (= temp15_57 (select ARGNAME_x2_NAMEEND_DIMSIZE temp15_56)))
(assert (= var134722 temp15_57))
(assert (bvslt (ite (bvslt var134718 temp15_55)
            (bvadd ARGNAME_x2_NAMEEND_DIM var134718)
            var134718)
       ARGNAME_x2_NAMEEND_DIM))
(assert (= temp15_58 #x0000000000000000))
(assert (= var134727
   (ite (= ARGNAME_x1_NAMEEND_NUMELEMENT temp15_58)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp15_59 #x0000000000000000))
(assert (= var134727 temp15_59))
(assert (= temp15_60 #x0000000000000000))
(assert (= var134731
   (ite (= ARGNAME_x2_NAMEEND_NUMELEMENT temp15_60)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp15_61 #x0000000000000000))
(assert (= var134731 temp15_61))
(assert (= temp15_63 #x0000000000000000))
(assert (= temp15_62 temp15_63))
(assert (= temp15_64 #x0000000000000002))
(assert (= var134768
   (ite (= ARGNAME_p_NAMEEND temp15_64) #x0000000000000001 #x0000000000000000)))
(assert (= temp15_65 #x0000000000000001))
(assert (= var134768 temp15_65))
(assert (= temp15_66 #x0000000000000001))
(assert (or false (= ARGNAME_compute_mode_NAMEEND temp15_66)))
(assert (= temp15_67 #x0000000000000000))
(assert (= var266146
   (ite (bvslt ARGNAME_p_NAMEEND temp15_67)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp15_68 #x0000000000000000))
(assert (= var266146 temp15_68))
(assert (= temp15_69 #xffffffffffffffff))
(assert (= var262955 temp15_69))
(assert (= temp15_70 #x0000000000000000))
(assert (= temp15_71
   (ite (bvslt var262955 temp15_70)
        (bvadd ARGNAME_x1_NAMEEND_DIM var262955)
        var262955)))
(assert (= temp15_72 (select ARGNAME_x1_NAMEEND_DIMSIZE temp15_71)))
(assert (= var266214 temp15_72))
(assert (bvslt (ite (bvslt var262955 temp15_70)
            (bvadd ARGNAME_x1_NAMEEND_DIM var262955)
            var262955)
       ARGNAME_x1_NAMEEND_DIM))
(assert (= temp15_73 #xffffffffffffffff))
(assert (= var262955 temp15_73))
(assert (= temp15_74 #x0000000000000000))
(assert (= temp15_75
   (ite (bvslt var262955 temp15_74)
        (bvadd ARGNAME_x2_NAMEEND_DIM var262955)
        var262955)))
(assert (= temp15_76 (select ARGNAME_x2_NAMEEND_DIMSIZE temp15_75)))
(assert (= var266215 temp15_76))
(assert (bvslt (ite (bvslt var262955 temp15_74)
            (bvadd ARGNAME_x2_NAMEEND_DIM var262955)
            var262955)
       ARGNAME_x2_NAMEEND_DIM))
(assert (= temp15_78 #x0000000000000000))
(assert (= temp15_77 temp15_78))
(assert (= temp15_79 #x0000000000000002))
(assert (= var266224
   (ite (bvsgt ARGNAME_compute_mode_NAMEEND temp15_79)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp15_80 #x0000000000000000))
(assert (= var266224 temp15_80))
(assert (= temp15_81 #xfffffffffffffffe))
(assert (= var265790 temp15_81))
(assert (= temp15_82 #x0000000000000000))
(assert (= temp15_83
   (ite (bvslt var265790 temp15_82)
        (bvadd ARGNAME_x1_NAMEEND_DIM var265790)
        var265790)))
(assert (= temp15_84 (select ARGNAME_x1_NAMEEND_DIMSIZE temp15_83)))
(assert (= var266244 temp15_84))
(assert (bvslt (ite (bvslt var265790 temp15_82)
            (bvadd ARGNAME_x1_NAMEEND_DIM var265790)
            var265790)
       ARGNAME_x1_NAMEEND_DIM))
(assert (= temp15_85 #xfffffffffffffffe))
(assert (= var265790 temp15_85))
(assert (= temp15_86 #x0000000000000000))
(assert (= temp15_87
   (ite (bvslt var265790 temp15_86)
        (bvadd ARGNAME_x2_NAMEEND_DIM var265790)
        var265790)))
(assert (= temp15_88 (select ARGNAME_x2_NAMEEND_DIMSIZE temp15_87)))
(assert (= var266245 temp15_88))
(assert (bvslt (ite (bvslt var265790 temp15_86)
            (bvadd ARGNAME_x2_NAMEEND_DIM var265790)
            var265790)
       ARGNAME_x2_NAMEEND_DIM))
(assert (= temp15_89 #x0000000000000002))
(assert (= var266247
   (ite (= ARGNAME_p_NAMEEND temp15_89) #x0000000000000001 #x0000000000000000)))
(assert (= temp15_90 #x0000000000000001))
(assert (= var266247 temp15_90))
(assert (= temp15_91 #x0000000000000001))
(assert (or false (= ARGNAME_compute_mode_NAMEEND temp15_91)))
(assert (= temp15_92 #xfffffffffffffffe))
(assert (= var266309 (bvadd ARGNAME_x1_NAMEEND_DIM temp15_92)))
(assert (= temp15_93 #xfffffffffffffffe))
(assert (= var266324 (bvadd ARGNAME_x2_NAMEEND_DIM temp15_93)))
(assert (= temp15_94 #x0000000000000000))
(assert (= var1573972 temp15_94))
(assert (= var1639526 var1573972))
(assert (= temp15_95 #x0000000000000000))
(assert (= var1901652 temp15_95))
(assert (= var1967206 var1901652))
(assert (= temp15_96 #x0000000000000000))
(assert (= var266486
   (ite (= var266244 temp15_96) #x0000000000000001 #x0000000000000000)))
(assert (= temp15_97 #x0000000000000000))
(assert (= var266487
   (ite (= var266245 temp15_97) #x0000000000000001 #x0000000000000000)))
(assert (= var266488 (bvor var266486 var266487)))
(assert (= temp15_98 #x0000000000000000))
(assert (= var266641
   (ite (= var266214 temp15_98) #x0000000000000001 #x0000000000000000)))
(assert (= temp15_99 #x0000000000000000))
(assert (= var266641 temp15_99))
(assert (= temp15_100 #x0000000000000002))
(assert (= var266673
   (ite (= ARGNAME_p_NAMEEND temp15_100) #x0000000000000001 #x0000000000000000)))
(assert (= temp15_101 #x0000000000000001))
(assert (= var266673 temp15_101))
(assert (= temp15_102 #x0000000000000001))
(assert (or false (= ARGNAME_compute_mode_NAMEEND temp15_102)))
(assert (= temp15_104 #xffffffffffffffff))
(assert (= temp15_103 temp15_104))
(assert (= temp15_106 #xffffffffffffffff))
(assert (= temp15_105 temp15_106))
(assert (= temp15_108 #x0000000000000003))
(assert (= temp15_107 temp15_108))
(assert (= temp15_110 #x0000000000000003))
(assert (= temp15_109 temp15_110))
(model-add temp15_1 () (_ BitVec 64) #x0000000000000002)
(model-add temp15_2 () (_ BitVec 64) #x0000000000000000)
(model-add var69002 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_x1_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000002 #x8000000000000000))
                #x0000000000000002
                (bvsub #x0000000000000002 #x0000000000000001)))






