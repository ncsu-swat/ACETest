(declare-fun temp0_1 () (_ BitVec 64))
(declare-fun temp0_2 () (_ BitVec 64))
(declare-fun var69002 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_x1_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp0_3 () (_ BitVec 64))
(declare-fun ARGNAME_x2_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var69030 () (_ BitVec 64))
(declare-fun temp0_4 () (_ BitVec 64))
(declare-fun temp0_5 () (_ BitVec 64))
(declare-fun var66347 () (_ BitVec 64))
(declare-fun temp0_6 () (_ BitVec 64))
(declare-fun temp0_7 () (_ BitVec 64))
(declare-fun ARGNAME_x1_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_8 () (_ BitVec 64))
(declare-fun temp0_9 () (_ BitVec 64))
(declare-fun temp0_10 () (_ BitVec 64))
(declare-fun temp0_11 () (_ BitVec 64))
(declare-fun temp0_12 () (_ BitVec 64))
(declare-fun temp0_13 () (_ BitVec 64))
(declare-fun temp0_14 () (_ BitVec 64))
(declare-fun temp0_15 () (_ BitVec 64))
(declare-fun temp0_16 () (_ BitVec 64))
(declare-fun temp0_17 () (_ BitVec 64))
(declare-fun temp0_18 () (_ BitVec 64))
(declare-fun temp0_19 () (_ BitVec 64))
(declare-fun temp0_20 () (_ BitVec 64))
(declare-fun temp0_21 () (_ BitVec 64))
(declare-fun temp0_22 () (_ BitVec 64))
(declare-fun temp0_23 () (_ BitVec 64))
(declare-fun temp0_24 () (_ BitVec 64))
(declare-fun temp0_25 () (_ BitVec 64))
(declare-fun temp0_26 () (_ BitVec 64))
(declare-fun var69052 () (_ BitVec 64))
(declare-fun temp0_27 () (_ BitVec 64))
(declare-fun temp0_28 () (_ BitVec 64))
(declare-fun temp0_29 () (_ BitVec 64))
(declare-fun ARGNAME_x2_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_30 () (_ BitVec 64))
(declare-fun temp0_31 () (_ BitVec 64))
(declare-fun temp0_32 () (_ BitVec 64))
(declare-fun temp0_33 () (_ BitVec 64))
(declare-fun temp0_34 () (_ BitVec 64))
(declare-fun temp0_35 () (_ BitVec 64))
(declare-fun temp0_36 () (_ BitVec 64))
(declare-fun temp0_37 () (_ BitVec 64))
(declare-fun temp0_38 () (_ BitVec 64))
(declare-fun temp0_39 () (_ BitVec 64))
(declare-fun temp0_40 () (_ BitVec 64))
(declare-fun temp0_41 () (_ BitVec 64))
(declare-fun temp0_42 () (_ BitVec 64))
(declare-fun temp0_43 () (_ BitVec 64))
(declare-fun temp0_44 () (_ BitVec 64))
(declare-fun temp0_45 () (_ BitVec 64))
(declare-fun temp0_46 () (_ BitVec 64))
(declare-fun temp0_47 () (_ BitVec 64))
(declare-fun temp0_48 () (_ BitVec 64))
(declare-fun var69055 () (_ BitVec 64))
(declare-fun var69056 () (_ BitVec 64))
(declare-fun temp0_49 () (_ BitVec 64))
(declare-fun temp0_50 () (_ BitVec 64))
(declare-fun var134718 () (_ BitVec 64))
(declare-fun temp0_51 () (_ BitVec 64))
(declare-fun temp0_52 () (_ BitVec 64))
(declare-fun temp0_53 () (_ BitVec 64))
(declare-fun var134717 () (_ BitVec 64))
(declare-fun temp0_54 () (_ BitVec 64))
(declare-fun temp0_55 () (_ BitVec 64))
(declare-fun temp0_56 () (_ BitVec 64))
(declare-fun temp0_57 () (_ BitVec 64))
(declare-fun var134722 () (_ BitVec 64))
(declare-fun temp0_58 () (_ BitVec 64))
(declare-fun ARGNAME_x1_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var134727 () (_ BitVec 64))
(declare-fun temp0_59 () (_ BitVec 64))
(declare-fun temp0_60 () (_ BitVec 64))
(declare-fun var268313 () (_ BitVec 64))
(declare-fun temp0_61 () (_ BitVec 64))
(declare-fun temp0_62 () (_ BitVec 64))
(declare-fun var268339 () (_ BitVec 64))
(declare-fun temp0_63 () (_ BitVec 64))
(declare-fun temp0_64 () (_ BitVec 64))
(declare-fun var262955 () (_ BitVec 64))
(declare-fun temp0_65 () (_ BitVec 64))
(declare-fun temp0_66 () (_ BitVec 64))
(declare-fun temp0_67 () (_ BitVec 64))
(declare-fun var268361 () (_ BitVec 64))
(declare-fun temp0_68 () (_ BitVec 64))
(declare-fun temp0_69 () (_ BitVec 64))
(declare-fun temp0_70 () (_ BitVec 64))
(declare-fun temp0_71 () (_ BitVec 64))
(declare-fun var268362 () (_ BitVec 64))
(declare-fun var268363 () (_ BitVec 64))
(declare-fun temp0_72 () (_ BitVec 64))
(assert (= temp0_1 #x0000000000000002))
(assert (= var69002
   (ite (bvslt ARGNAME_x1_NAMEEND_DIM temp0_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_2 #x0000000000000000))
(assert (= var69002 temp0_2))
(assert (= temp0_3 #x0000000000000002))
(assert (= var69030
   (ite (bvslt ARGNAME_x2_NAMEEND_DIM temp0_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_4 #x0000000000000000))
(assert (= var69030 temp0_4))
(assert (= temp0_5 #xffffffffffffffff))
(assert (= var66347 temp0_5))
(assert (= temp0_6 #x0000000000000000))
(assert (= temp0_7 temp0_6))
(assert (= temp0_8 (select ARGNAME_x1_NAMEEND_DIMSIZE temp0_7)))
(assert (= temp0_9 #x0000000000000001))
(assert (= temp0_10 temp0_9))
(assert (= temp0_11 (select ARGNAME_x1_NAMEEND_DIMSIZE temp0_10)))
(assert (= temp0_12 #x0000000000000002))
(assert (= temp0_13 temp0_12))
(assert (= temp0_14 (select ARGNAME_x1_NAMEEND_DIMSIZE temp0_13)))
(assert (= temp0_15 #x0000000000000003))
(assert (= temp0_16 temp0_15))
(assert (= temp0_17 (select ARGNAME_x1_NAMEEND_DIMSIZE temp0_16)))
(assert (= temp0_18 #x0000000000000004))
(assert (= temp0_19 temp0_18))
(assert (= temp0_20 (select ARGNAME_x1_NAMEEND_DIMSIZE temp0_19)))
(assert (= temp0_21 #x0000000000000005))
(assert (= temp0_22 temp0_21))
(assert (= temp0_23 (select ARGNAME_x1_NAMEEND_DIMSIZE temp0_22)))
(assert (= temp0_24 #x0000000000000000))
(assert (= temp0_25
   (ite (bvslt var66347 temp0_24)
        (bvadd ARGNAME_x1_NAMEEND_DIM var66347)
        var66347)))
(assert (= temp0_26 (select ARGNAME_x1_NAMEEND_DIMSIZE temp0_25)))
(assert (= var69052 temp0_26))
(assert (bvslt (ite (bvslt var66347 temp0_24)
            (bvadd ARGNAME_x1_NAMEEND_DIM var66347)
            var66347)
       ARGNAME_x1_NAMEEND_DIM))
(assert (= temp0_27 #xffffffffffffffff))
(assert (= var66347 temp0_27))
(assert (= temp0_28 #x0000000000000000))
(assert (= temp0_29 temp0_28))
(assert (= temp0_30 (select ARGNAME_x2_NAMEEND_DIMSIZE temp0_29)))
(assert (= temp0_31 #x0000000000000001))
(assert (= temp0_32 temp0_31))
(assert (= temp0_33 (select ARGNAME_x2_NAMEEND_DIMSIZE temp0_32)))
(assert (= temp0_34 #x0000000000000002))
(assert (= temp0_35 temp0_34))
(assert (= temp0_36 (select ARGNAME_x2_NAMEEND_DIMSIZE temp0_35)))
(assert (= temp0_37 #x0000000000000003))
(assert (= temp0_38 temp0_37))
(assert (= temp0_39 (select ARGNAME_x2_NAMEEND_DIMSIZE temp0_38)))
(assert (= temp0_40 #x0000000000000004))
(assert (= temp0_41 temp0_40))
(assert (= temp0_42 (select ARGNAME_x2_NAMEEND_DIMSIZE temp0_41)))
(assert (= temp0_43 #x0000000000000005))
(assert (= temp0_44 temp0_43))
(assert (= temp0_45 (select ARGNAME_x2_NAMEEND_DIMSIZE temp0_44)))
(assert (= temp0_46 #x0000000000000000))
(assert (= temp0_47
   (ite (bvslt var66347 temp0_46)
        (bvadd ARGNAME_x2_NAMEEND_DIM var66347)
        var66347)))
(assert (= temp0_48 (select ARGNAME_x2_NAMEEND_DIMSIZE temp0_47)))
(assert (= var69055 temp0_48))
(assert (bvslt (ite (bvslt var66347 temp0_46)
            (bvadd ARGNAME_x2_NAMEEND_DIM var66347)
            var66347)
       ARGNAME_x2_NAMEEND_DIM))
(assert (= var69056 (ite (= var69052 var69055) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_49 #x0000000000000001))
(assert (= var69056 temp0_49))
(assert (= temp0_50 #xfffffffffffffffe))
(assert (= var134718 temp0_50))
(assert (= temp0_51 #x0000000000000000))
(assert (= temp0_52
   (ite (bvslt var134718 temp0_51)
        (bvadd ARGNAME_x1_NAMEEND_DIM var134718)
        var134718)))
(assert (= temp0_53 (select ARGNAME_x1_NAMEEND_DIMSIZE temp0_52)))
(assert (= var134717 temp0_53))
(assert (bvslt (ite (bvslt var134718 temp0_51)
            (bvadd ARGNAME_x1_NAMEEND_DIM var134718)
            var134718)
       ARGNAME_x1_NAMEEND_DIM))
(assert (= temp0_54 #xfffffffffffffffe))
(assert (= var134718 temp0_54))
(assert (= temp0_55 #x0000000000000000))
(assert (= temp0_56
   (ite (bvslt var134718 temp0_55)
        (bvadd ARGNAME_x2_NAMEEND_DIM var134718)
        var134718)))
(assert (= temp0_57 (select ARGNAME_x2_NAMEEND_DIMSIZE temp0_56)))
(assert (= var134722 temp0_57))
(assert (bvslt (ite (bvslt var134718 temp0_55)
            (bvadd ARGNAME_x2_NAMEEND_DIM var134718)
            var134718)
       ARGNAME_x2_NAMEEND_DIM))
(assert (= temp0_58 #x0000000000000000))
(assert (= var134727
   (ite (= ARGNAME_x1_NAMEEND_NUMELEMENT temp0_58)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_59 #x0000000000000001))
(assert (= var134727 temp0_59))
(assert (= temp0_60 #x0000000000000002))
(assert (= var268313
   (ite (bvslt ARGNAME_x1_NAMEEND_DIM temp0_60)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_61 #x0000000000000000))
(assert (= var268313 temp0_61))
(assert (= temp0_62 #x0000000000000002))
(assert (= var268339
   (ite (bvslt ARGNAME_x2_NAMEEND_DIM temp0_62)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_63 #x0000000000000000))
(assert (= var268339 temp0_63))
(assert (= temp0_64 #xffffffffffffffff))
(assert (= var262955 temp0_64))
(assert (= temp0_65 #x0000000000000000))
(assert (= temp0_66
   (ite (bvslt var262955 temp0_65)
        (bvadd ARGNAME_x1_NAMEEND_DIM var262955)
        var262955)))
(assert (= temp0_67 (select ARGNAME_x1_NAMEEND_DIMSIZE temp0_66)))
(assert (= var268361 temp0_67))
(assert (bvslt (ite (bvslt var262955 temp0_65)
            (bvadd ARGNAME_x1_NAMEEND_DIM var262955)
            var262955)
       ARGNAME_x1_NAMEEND_DIM))
(assert (= temp0_68 #xffffffffffffffff))
(assert (= var262955 temp0_68))
(assert (= temp0_69 #x0000000000000000))
(assert (= temp0_70
   (ite (bvslt var262955 temp0_69)
        (bvadd ARGNAME_x2_NAMEEND_DIM var262955)
        var262955)))
(assert (= temp0_71 (select ARGNAME_x2_NAMEEND_DIMSIZE temp0_70)))
(assert (= var268362 temp0_71))
(assert (bvslt (ite (bvslt var262955 temp0_69)
            (bvadd ARGNAME_x2_NAMEEND_DIM var262955)
            var262955)
       ARGNAME_x2_NAMEEND_DIM))
(assert (= var268363
   (ite (= var268361 var268362) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_72 #x0000000000000001))
(assert (= var268363 temp0_72))
(model-add temp0_1 () (_ BitVec 64) #x0000000000000002)
(model-add temp0_2 () (_ BitVec 64) #x0000000000000000)
(model-add var69002 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_x1_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000002 #x8000000000000000))
                #x0000000000000002
                (bvsub #x0000000000000002 #x0000000000000001)))






