(declare-fun temp60_1 () (_ BitVec 64))
(declare-fun temp60_2 () (_ BitVec 64))
(declare-fun var69002 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_x1_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp60_3 () (_ BitVec 64))
(declare-fun ARGNAME_x2_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var69030 () (_ BitVec 64))
(declare-fun temp60_4 () (_ BitVec 64))
(declare-fun temp60_5 () (_ BitVec 64))
(declare-fun var66347 () (_ BitVec 64))
(declare-fun temp60_6 () (_ BitVec 64))
(declare-fun temp60_7 () (_ BitVec 64))
(declare-fun ARGNAME_x1_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp60_8 () (_ BitVec 64))
(declare-fun temp60_9 () (_ BitVec 64))
(declare-fun temp60_10 () (_ BitVec 64))
(declare-fun temp60_11 () (_ BitVec 64))
(declare-fun temp60_12 () (_ BitVec 64))
(declare-fun temp60_13 () (_ BitVec 64))
(declare-fun temp60_14 () (_ BitVec 64))
(declare-fun temp60_15 () (_ BitVec 64))
(declare-fun temp60_16 () (_ BitVec 64))
(declare-fun temp60_17 () (_ BitVec 64))
(declare-fun temp60_18 () (_ BitVec 64))
(declare-fun temp60_19 () (_ BitVec 64))
(declare-fun temp60_20 () (_ BitVec 64))
(declare-fun temp60_21 () (_ BitVec 64))
(declare-fun temp60_22 () (_ BitVec 64))
(declare-fun temp60_23 () (_ BitVec 64))
(declare-fun temp60_24 () (_ BitVec 64))
(declare-fun temp60_25 () (_ BitVec 64))
(declare-fun temp60_26 () (_ BitVec 64))
(declare-fun var69052 () (_ BitVec 64))
(declare-fun temp60_27 () (_ BitVec 64))
(declare-fun temp60_28 () (_ BitVec 64))
(declare-fun temp60_29 () (_ BitVec 64))
(declare-fun ARGNAME_x2_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp60_30 () (_ BitVec 64))
(declare-fun temp60_31 () (_ BitVec 64))
(declare-fun temp60_32 () (_ BitVec 64))
(declare-fun temp60_33 () (_ BitVec 64))
(declare-fun temp60_34 () (_ BitVec 64))
(declare-fun temp60_35 () (_ BitVec 64))
(declare-fun temp60_36 () (_ BitVec 64))
(declare-fun temp60_37 () (_ BitVec 64))
(declare-fun temp60_38 () (_ BitVec 64))
(declare-fun temp60_39 () (_ BitVec 64))
(declare-fun temp60_40 () (_ BitVec 64))
(declare-fun temp60_41 () (_ BitVec 64))
(declare-fun temp60_42 () (_ BitVec 64))
(declare-fun temp60_43 () (_ BitVec 64))
(declare-fun temp60_44 () (_ BitVec 64))
(declare-fun temp60_45 () (_ BitVec 64))
(declare-fun temp60_46 () (_ BitVec 64))
(declare-fun temp60_47 () (_ BitVec 64))
(declare-fun temp60_48 () (_ BitVec 64))
(declare-fun var69055 () (_ BitVec 64))
(declare-fun var69056 () (_ BitVec 64))
(declare-fun temp60_49 () (_ BitVec 64))
(declare-fun temp60_50 () (_ BitVec 64))
(declare-fun var134718 () (_ BitVec 64))
(declare-fun temp60_51 () (_ BitVec 64))
(declare-fun temp60_52 () (_ BitVec 64))
(declare-fun temp60_53 () (_ BitVec 64))
(declare-fun var134717 () (_ BitVec 64))
(declare-fun temp60_54 () (_ BitVec 64))
(declare-fun temp60_55 () (_ BitVec 64))
(declare-fun temp60_56 () (_ BitVec 64))
(declare-fun temp60_57 () (_ BitVec 64))
(declare-fun var134722 () (_ BitVec 64))
(declare-fun temp60_58 () (_ BitVec 64))
(declare-fun ARGNAME_x1_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var134727 () (_ BitVec 64))
(declare-fun temp60_59 () (_ BitVec 64))
(declare-fun temp60_60 () (_ BitVec 64))
(declare-fun ARGNAME_x2_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var134731 () (_ BitVec 64))
(declare-fun temp60_61 () (_ BitVec 64))
(declare-fun temp60_63 () (_ BitVec 64))
(declare-fun temp60_62 () (_ BitVec 64))
(declare-fun temp60_64 () (_ BitVec 64))
(declare-fun ARGNAME_p_NAMEEND () (_ BitVec 64))
(declare-fun var134768 () (_ BitVec 64))
(declare-fun temp60_65 () (_ BitVec 64))
(declare-fun temp60_66 () (_ BitVec 64))
(declare-fun ARGNAME_compute_mode_NAMEEND () (_ BitVec 64))
(declare-fun temp60_67 () (_ BitVec 64))
(declare-fun var266146 () (_ BitVec 64))
(declare-fun temp60_68 () (_ BitVec 64))
(declare-fun temp60_69 () (_ BitVec 64))
(declare-fun var262955 () (_ BitVec 64))
(declare-fun temp60_70 () (_ BitVec 64))
(declare-fun temp60_71 () (_ BitVec 64))
(declare-fun temp60_72 () (_ BitVec 64))
(declare-fun var266214 () (_ BitVec 64))
(declare-fun temp60_73 () (_ BitVec 64))
(declare-fun temp60_74 () (_ BitVec 64))
(declare-fun temp60_75 () (_ BitVec 64))
(declare-fun temp60_76 () (_ BitVec 64))
(declare-fun var266215 () (_ BitVec 64))
(declare-fun temp60_78 () (_ BitVec 64))
(declare-fun temp60_77 () (_ BitVec 64))
(declare-fun temp60_79 () (_ BitVec 64))
(declare-fun var266224 () (_ BitVec 64))
(declare-fun temp60_80 () (_ BitVec 64))
(declare-fun temp60_81 () (_ BitVec 64))
(declare-fun var265790 () (_ BitVec 64))
(declare-fun temp60_82 () (_ BitVec 64))
(declare-fun temp60_83 () (_ BitVec 64))
(declare-fun temp60_84 () (_ BitVec 64))
(declare-fun var266244 () (_ BitVec 64))
(declare-fun temp60_85 () (_ BitVec 64))
(declare-fun temp60_86 () (_ BitVec 64))
(declare-fun temp60_87 () (_ BitVec 64))
(declare-fun temp60_88 () (_ BitVec 64))
(declare-fun var266245 () (_ BitVec 64))
(declare-fun temp60_89 () (_ BitVec 64))
(declare-fun var266247 () (_ BitVec 64))
(declare-fun temp60_90 () (_ BitVec 64))
(declare-fun temp60_91 () (_ BitVec 64))
(declare-fun temp60_92 () (_ BitVec 64))
(declare-fun var266309 () (_ BitVec 64))
(declare-fun temp60_93 () (_ BitVec 64))
(declare-fun var266324 () (_ BitVec 64))
(declare-fun temp60_94 () (_ BitVec 64))
(declare-fun var1573972 () (_ BitVec 64))
(declare-fun var1639526 () (_ BitVec 64))
(declare-fun temp60_95 () (_ BitVec 64))
(declare-fun var1901652 () (_ BitVec 64))
(declare-fun var1967206 () (_ BitVec 64))
(declare-fun temp60_96 () (_ BitVec 64))
(declare-fun var266486 () (_ BitVec 64))
(declare-fun temp60_97 () (_ BitVec 64))
(declare-fun var266487 () (_ BitVec 64))
(declare-fun var266488 () (_ BitVec 64))
(declare-fun temp60_98 () (_ BitVec 64))
(declare-fun var266641 () (_ BitVec 64))
(declare-fun temp60_99 () (_ BitVec 64))
(declare-fun temp60_100 () (_ BitVec 64))
(declare-fun var266673 () (_ BitVec 64))
(declare-fun temp60_101 () (_ BitVec 64))
(declare-fun temp60_102 () (_ BitVec 64))
(declare-fun temp60_104 () (_ BitVec 64))
(declare-fun temp60_103 () (_ BitVec 64))
(declare-fun temp60_106 () (_ BitVec 64))
(declare-fun temp60_105 () (_ BitVec 64))
(declare-fun temp60_108 () (_ BitVec 64))
(declare-fun temp60_107 () (_ BitVec 64))
(declare-fun temp60_110 () (_ BitVec 64))
(declare-fun temp60_109 () (_ BitVec 64))
(assert (= temp60_1 #x0000000000000002))
(assert (= var69002
   (ite (bvslt ARGNAME_x1_NAMEEND_DIM temp60_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_2 #x0000000000000000))
(assert (= var69002 temp60_2))
(assert (= temp60_3 #x0000000000000002))
(assert (= var69030
   (ite (bvslt ARGNAME_x2_NAMEEND_DIM temp60_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_4 #x0000000000000000))
(assert (= var69030 temp60_4))
(assert (= temp60_5 #xffffffffffffffff))
(assert (= var66347 temp60_5))
(assert (= temp60_6 #x0000000000000000))
(assert (= temp60_7 temp60_6))
(assert (= temp60_8 (select ARGNAME_x1_NAMEEND_DIMSIZE temp60_7)))
(assert (= temp60_9 #x0000000000000001))
(assert (= temp60_10 temp60_9))
(assert (= temp60_11 (select ARGNAME_x1_NAMEEND_DIMSIZE temp60_10)))
(assert (= temp60_12 #x0000000000000002))
(assert (= temp60_13 temp60_12))
(assert (= temp60_14 (select ARGNAME_x1_NAMEEND_DIMSIZE temp60_13)))
(assert (= temp60_15 #x0000000000000003))
(assert (= temp60_16 temp60_15))
(assert (= temp60_17 (select ARGNAME_x1_NAMEEND_DIMSIZE temp60_16)))
(assert (= temp60_18 #x0000000000000004))
(assert (= temp60_19 temp60_18))
(assert (= temp60_20 (select ARGNAME_x1_NAMEEND_DIMSIZE temp60_19)))
(assert (= temp60_21 #x0000000000000005))
(assert (= temp60_22 temp60_21))
(assert (= temp60_23 (select ARGNAME_x1_NAMEEND_DIMSIZE temp60_22)))
(assert (= temp60_24 #x0000000000000000))
(assert (= temp60_25
   (ite (bvslt var66347 temp60_24)
        (bvadd ARGNAME_x1_NAMEEND_DIM var66347)
        var66347)))
(assert (= temp60_26 (select ARGNAME_x1_NAMEEND_DIMSIZE temp60_25)))
(assert (= var69052 temp60_26))
(assert (bvslt (ite (bvslt var66347 temp60_24)
            (bvadd ARGNAME_x1_NAMEEND_DIM var66347)
            var66347)
       ARGNAME_x1_NAMEEND_DIM))
(assert (= temp60_27 #xffffffffffffffff))
(assert (= var66347 temp60_27))
(assert (= temp60_28 #x0000000000000000))
(assert (= temp60_29 temp60_28))
(assert (= temp60_30 (select ARGNAME_x2_NAMEEND_DIMSIZE temp60_29)))
(assert (= temp60_31 #x0000000000000001))
(assert (= temp60_32 temp60_31))
(assert (= temp60_33 (select ARGNAME_x2_NAMEEND_DIMSIZE temp60_32)))
(assert (= temp60_34 #x0000000000000002))
(assert (= temp60_35 temp60_34))
(assert (= temp60_36 (select ARGNAME_x2_NAMEEND_DIMSIZE temp60_35)))
(assert (= temp60_37 #x0000000000000003))
(assert (= temp60_38 temp60_37))
(assert (= temp60_39 (select ARGNAME_x2_NAMEEND_DIMSIZE temp60_38)))
(assert (= temp60_40 #x0000000000000004))
(assert (= temp60_41 temp60_40))
(assert (= temp60_42 (select ARGNAME_x2_NAMEEND_DIMSIZE temp60_41)))
(assert (= temp60_43 #x0000000000000005))
(assert (= temp60_44 temp60_43))
(assert (= temp60_45 (select ARGNAME_x2_NAMEEND_DIMSIZE temp60_44)))
(assert (= temp60_46 #x0000000000000000))
(assert (= temp60_47
   (ite (bvslt var66347 temp60_46)
        (bvadd ARGNAME_x2_NAMEEND_DIM var66347)
        var66347)))
(assert (= temp60_48 (select ARGNAME_x2_NAMEEND_DIMSIZE temp60_47)))
(assert (= var69055 temp60_48))
(assert (bvslt (ite (bvslt var66347 temp60_46)
            (bvadd ARGNAME_x2_NAMEEND_DIM var66347)
            var66347)
       ARGNAME_x2_NAMEEND_DIM))
(assert (= var69056 (ite (= var69052 var69055) #x0000000000000001 #x0000000000000000)))
(assert (= temp60_49 #x0000000000000001))
(assert (= var69056 temp60_49))
(assert (= temp60_50 #xfffffffffffffffe))
(assert (= var134718 temp60_50))
(assert (= temp60_51 #x0000000000000000))
(assert (= temp60_52
   (ite (bvslt var134718 temp60_51)
        (bvadd ARGNAME_x1_NAMEEND_DIM var134718)
        var134718)))
(assert (= temp60_53 (select ARGNAME_x1_NAMEEND_DIMSIZE temp60_52)))
(assert (= var134717 temp60_53))
(assert (bvslt (ite (bvslt var134718 temp60_51)
            (bvadd ARGNAME_x1_NAMEEND_DIM var134718)
            var134718)
       ARGNAME_x1_NAMEEND_DIM))
(assert (= temp60_54 #xfffffffffffffffe))
(assert (= var134718 temp60_54))
(assert (= temp60_55 #x0000000000000000))
(assert (= temp60_56
   (ite (bvslt var134718 temp60_55)
        (bvadd ARGNAME_x2_NAMEEND_DIM var134718)
        var134718)))
(assert (= temp60_57 (select ARGNAME_x2_NAMEEND_DIMSIZE temp60_56)))
(assert (= var134722 temp60_57))
(assert (bvslt (ite (bvslt var134718 temp60_55)
            (bvadd ARGNAME_x2_NAMEEND_DIM var134718)
            var134718)
       ARGNAME_x2_NAMEEND_DIM))
(assert (= temp60_58 #x0000000000000000))
(assert (= var134727
   (ite (= ARGNAME_x1_NAMEEND_NUMELEMENT temp60_58)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_59 #x0000000000000000))
(assert (= var134727 temp60_59))
(assert (= temp60_60 #x0000000000000000))
(assert (= var134731
   (ite (= ARGNAME_x2_NAMEEND_NUMELEMENT temp60_60)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_61 #x0000000000000000))
(assert (= var134731 temp60_61))
(assert (= temp60_63 #x0000000000000000))
(assert (= temp60_62 temp60_63))
(assert (= temp60_64 #x0000000000000002))
(assert (= var134768
   (ite (= ARGNAME_p_NAMEEND temp60_64) #x0000000000000001 #x0000000000000000)))
(assert (= temp60_65 #x0000000000000001))
(assert (= var134768 temp60_65))
(assert (= temp60_66 #x0000000000000001))
(assert (or false (= ARGNAME_compute_mode_NAMEEND temp60_66)))
(assert (= temp60_67 #x0000000000000000))
(assert (= var266146
   (ite (bvslt ARGNAME_p_NAMEEND temp60_67)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_68 #x0000000000000000))
(assert (= var266146 temp60_68))
(assert (= temp60_69 #xffffffffffffffff))
(assert (= var262955 temp60_69))
(assert (= temp60_70 #x0000000000000000))
(assert (= temp60_71
   (ite (bvslt var262955 temp60_70)
        (bvadd ARGNAME_x1_NAMEEND_DIM var262955)
        var262955)))
(assert (= temp60_72 (select ARGNAME_x1_NAMEEND_DIMSIZE temp60_71)))
(assert (= var266214 temp60_72))
(assert (bvslt (ite (bvslt var262955 temp60_70)
            (bvadd ARGNAME_x1_NAMEEND_DIM var262955)
            var262955)
       ARGNAME_x1_NAMEEND_DIM))
(assert (= temp60_73 #xffffffffffffffff))
(assert (= var262955 temp60_73))
(assert (= temp60_74 #x0000000000000000))
(assert (= temp60_75
   (ite (bvslt var262955 temp60_74)
        (bvadd ARGNAME_x2_NAMEEND_DIM var262955)
        var262955)))
(assert (= temp60_76 (select ARGNAME_x2_NAMEEND_DIMSIZE temp60_75)))
(assert (= var266215 temp60_76))
(assert (bvslt (ite (bvslt var262955 temp60_74)
            (bvadd ARGNAME_x2_NAMEEND_DIM var262955)
            var262955)
       ARGNAME_x2_NAMEEND_DIM))
(assert (= temp60_78 #x0000000000000000))
(assert (= temp60_77 temp60_78))
(assert (= temp60_79 #x0000000000000002))
(assert (= var266224
   (ite (bvsgt ARGNAME_compute_mode_NAMEEND temp60_79)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_80 #x0000000000000000))
(assert (= var266224 temp60_80))
(assert (= temp60_81 #xfffffffffffffffe))
(assert (= var265790 temp60_81))
(assert (= temp60_82 #x0000000000000000))
(assert (= temp60_83
   (ite (bvslt var265790 temp60_82)
        (bvadd ARGNAME_x1_NAMEEND_DIM var265790)
        var265790)))
(assert (= temp60_84 (select ARGNAME_x1_NAMEEND_DIMSIZE temp60_83)))
(assert (= var266244 temp60_84))
(assert (bvslt (ite (bvslt var265790 temp60_82)
            (bvadd ARGNAME_x1_NAMEEND_DIM var265790)
            var265790)
       ARGNAME_x1_NAMEEND_DIM))
(assert (= temp60_85 #xfffffffffffffffe))
(assert (= var265790 temp60_85))
(assert (= temp60_86 #x0000000000000000))
(assert (= temp60_87
   (ite (bvslt var265790 temp60_86)
        (bvadd ARGNAME_x2_NAMEEND_DIM var265790)
        var265790)))
(assert (= temp60_88 (select ARGNAME_x2_NAMEEND_DIMSIZE temp60_87)))
(assert (= var266245 temp60_88))
(assert (bvslt (ite (bvslt var265790 temp60_86)
            (bvadd ARGNAME_x2_NAMEEND_DIM var265790)
            var265790)
       ARGNAME_x2_NAMEEND_DIM))
(assert (= temp60_89 #x0000000000000002))
(assert (= var266247
   (ite (= ARGNAME_p_NAMEEND temp60_89) #x0000000000000001 #x0000000000000000)))
(assert (= temp60_90 #x0000000000000001))
(assert (= var266247 temp60_90))
(assert (= temp60_91 #x0000000000000001))
(assert (or false (= ARGNAME_compute_mode_NAMEEND temp60_91)))
(assert (= temp60_92 #xfffffffffffffffe))
(assert (= var266309 (bvadd ARGNAME_x1_NAMEEND_DIM temp60_92)))
(assert (= temp60_93 #xfffffffffffffffe))
(assert (= var266324 (bvadd ARGNAME_x2_NAMEEND_DIM temp60_93)))
(assert (= temp60_94 #x0000000000000000))
(assert (= var1573972 temp60_94))
(assert (= var1639526 var1573972))
(assert (= temp60_95 #x0000000000000000))
(assert (= var1901652 temp60_95))
(assert (= var1967206 var1901652))
(assert (= temp60_96 #x0000000000000000))
(assert (= var266486
   (ite (= var266244 temp60_96) #x0000000000000001 #x0000000000000000)))
(assert (= temp60_97 #x0000000000000000))
(assert (= var266487
   (ite (= var266245 temp60_97) #x0000000000000001 #x0000000000000000)))
(assert (= var266488 (bvor var266486 var266487)))
(assert (= temp60_98 #x0000000000000000))
(assert (= var266641
   (ite (= var266214 temp60_98) #x0000000000000001 #x0000000000000000)))
(assert (= temp60_99 #x0000000000000000))
(assert (= var266641 temp60_99))
(assert (= temp60_100 #x0000000000000002))
(assert (= var266673
   (ite (= ARGNAME_p_NAMEEND temp60_100) #x0000000000000001 #x0000000000000000)))
(assert (= temp60_101 #x0000000000000001))
(assert (= var266673 temp60_101))
(assert (= temp60_102 #x0000000000000001))
(assert (or false (= ARGNAME_compute_mode_NAMEEND temp60_102)))
(assert (= temp60_104 #xffffffffffffffff))
(assert (= temp60_103 temp60_104))
(assert (= temp60_106 #xffffffffffffffff))
(assert (= temp60_105 temp60_106))
(assert (= temp60_108 #x0000000000000003))
(assert (= temp60_107 temp60_108))
(assert (= temp60_110 #x0000000000000003))
(assert (= temp60_109 temp60_110))
(model-add temp60_1 () (_ BitVec 64) #x0000000000000002)
(model-add temp60_2 () (_ BitVec 64) #x0000000000000000)
(model-add var69002 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_x1_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000002 #x8000000000000000))
                #x0000000000000002
                (bvsub #x0000000000000002 #x0000000000000001)))






