(declare-fun temp61_1 () (_ BitVec 64))
(declare-fun temp61_2 () (_ BitVec 64))
(declare-fun var69002 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_x1_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp61_3 () (_ BitVec 64))
(declare-fun ARGNAME_x2_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var69030 () (_ BitVec 64))
(declare-fun temp61_4 () (_ BitVec 64))
(declare-fun temp61_5 () (_ BitVec 64))
(declare-fun var66347 () (_ BitVec 64))
(declare-fun temp61_6 () (_ BitVec 64))
(declare-fun temp61_7 () (_ BitVec 64))
(declare-fun ARGNAME_x1_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp61_8 () (_ BitVec 64))
(declare-fun temp61_9 () (_ BitVec 64))
(declare-fun temp61_10 () (_ BitVec 64))
(declare-fun temp61_11 () (_ BitVec 64))
(declare-fun temp61_12 () (_ BitVec 64))
(declare-fun temp61_13 () (_ BitVec 64))
(declare-fun temp61_14 () (_ BitVec 64))
(declare-fun temp61_15 () (_ BitVec 64))
(declare-fun temp61_16 () (_ BitVec 64))
(declare-fun temp61_17 () (_ BitVec 64))
(declare-fun temp61_18 () (_ BitVec 64))
(declare-fun temp61_19 () (_ BitVec 64))
(declare-fun temp61_20 () (_ BitVec 64))
(declare-fun temp61_21 () (_ BitVec 64))
(declare-fun temp61_22 () (_ BitVec 64))
(declare-fun temp61_23 () (_ BitVec 64))
(declare-fun temp61_24 () (_ BitVec 64))
(declare-fun temp61_25 () (_ BitVec 64))
(declare-fun temp61_26 () (_ BitVec 64))
(declare-fun var69052 () (_ BitVec 64))
(declare-fun temp61_27 () (_ BitVec 64))
(declare-fun temp61_28 () (_ BitVec 64))
(declare-fun temp61_29 () (_ BitVec 64))
(declare-fun ARGNAME_x2_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp61_30 () (_ BitVec 64))
(declare-fun temp61_31 () (_ BitVec 64))
(declare-fun temp61_32 () (_ BitVec 64))
(declare-fun temp61_33 () (_ BitVec 64))
(declare-fun temp61_34 () (_ BitVec 64))
(declare-fun temp61_35 () (_ BitVec 64))
(declare-fun temp61_36 () (_ BitVec 64))
(declare-fun temp61_37 () (_ BitVec 64))
(declare-fun temp61_38 () (_ BitVec 64))
(declare-fun temp61_39 () (_ BitVec 64))
(declare-fun temp61_40 () (_ BitVec 64))
(declare-fun temp61_41 () (_ BitVec 64))
(declare-fun temp61_42 () (_ BitVec 64))
(declare-fun temp61_43 () (_ BitVec 64))
(declare-fun temp61_44 () (_ BitVec 64))
(declare-fun temp61_45 () (_ BitVec 64))
(declare-fun temp61_46 () (_ BitVec 64))
(declare-fun temp61_47 () (_ BitVec 64))
(declare-fun temp61_48 () (_ BitVec 64))
(declare-fun var69055 () (_ BitVec 64))
(declare-fun var69056 () (_ BitVec 64))
(declare-fun temp61_49 () (_ BitVec 64))
(declare-fun temp61_50 () (_ BitVec 64))
(declare-fun var134718 () (_ BitVec 64))
(declare-fun temp61_51 () (_ BitVec 64))
(declare-fun temp61_52 () (_ BitVec 64))
(declare-fun temp61_53 () (_ BitVec 64))
(declare-fun var134717 () (_ BitVec 64))
(declare-fun temp61_54 () (_ BitVec 64))
(declare-fun temp61_55 () (_ BitVec 64))
(declare-fun temp61_56 () (_ BitVec 64))
(declare-fun temp61_57 () (_ BitVec 64))
(declare-fun var134722 () (_ BitVec 64))
(declare-fun temp61_58 () (_ BitVec 64))
(declare-fun ARGNAME_x1_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var134727 () (_ BitVec 64))
(declare-fun temp61_59 () (_ BitVec 64))
(declare-fun temp61_60 () (_ BitVec 64))
(declare-fun ARGNAME_x2_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var134731 () (_ BitVec 64))
(declare-fun temp61_61 () (_ BitVec 64))
(declare-fun temp61_63 () (_ BitVec 64))
(declare-fun temp61_62 () (_ BitVec 64))
(declare-fun temp61_64 () (_ BitVec 64))
(declare-fun ARGNAME_p_NAMEEND () (_ BitVec 64))
(declare-fun var134768 () (_ BitVec 64))
(declare-fun temp61_65 () (_ BitVec 64))
(declare-fun temp61_66 () (_ BitVec 64))
(declare-fun ARGNAME_compute_mode_NAMEEND () (_ BitVec 64))
(declare-fun temp61_67 () (_ BitVec 64))
(declare-fun var266146 () (_ BitVec 64))
(declare-fun temp61_68 () (_ BitVec 64))
(declare-fun temp61_69 () (_ BitVec 64))
(declare-fun var262955 () (_ BitVec 64))
(declare-fun temp61_70 () (_ BitVec 64))
(declare-fun temp61_71 () (_ BitVec 64))
(declare-fun temp61_72 () (_ BitVec 64))
(declare-fun var266214 () (_ BitVec 64))
(declare-fun temp61_73 () (_ BitVec 64))
(declare-fun temp61_74 () (_ BitVec 64))
(declare-fun temp61_75 () (_ BitVec 64))
(declare-fun temp61_76 () (_ BitVec 64))
(declare-fun var266215 () (_ BitVec 64))
(declare-fun temp61_78 () (_ BitVec 64))
(declare-fun temp61_77 () (_ BitVec 64))
(declare-fun temp61_79 () (_ BitVec 64))
(declare-fun var266224 () (_ BitVec 64))
(declare-fun temp61_80 () (_ BitVec 64))
(declare-fun temp61_81 () (_ BitVec 64))
(declare-fun var265790 () (_ BitVec 64))
(declare-fun temp61_82 () (_ BitVec 64))
(declare-fun temp61_83 () (_ BitVec 64))
(declare-fun temp61_84 () (_ BitVec 64))
(declare-fun var266244 () (_ BitVec 64))
(declare-fun temp61_85 () (_ BitVec 64))
(declare-fun temp61_86 () (_ BitVec 64))
(declare-fun temp61_87 () (_ BitVec 64))
(declare-fun temp61_88 () (_ BitVec 64))
(declare-fun var266245 () (_ BitVec 64))
(declare-fun temp61_89 () (_ BitVec 64))
(declare-fun var266247 () (_ BitVec 64))
(declare-fun temp61_90 () (_ BitVec 64))
(declare-fun temp61_91 () (_ BitVec 64))
(declare-fun temp61_92 () (_ BitVec 64))
(declare-fun var266309 () (_ BitVec 64))
(declare-fun temp61_93 () (_ BitVec 64))
(declare-fun var266324 () (_ BitVec 64))
(declare-fun temp61_94 () (_ BitVec 64))
(declare-fun var1573972 () (_ BitVec 64))
(declare-fun var1639526 () (_ BitVec 64))
(declare-fun temp61_95 () (_ BitVec 64))
(declare-fun var1901652 () (_ BitVec 64))
(declare-fun var1967206 () (_ BitVec 64))
(declare-fun temp61_96 () (_ BitVec 64))
(declare-fun var266486 () (_ BitVec 64))
(declare-fun temp61_97 () (_ BitVec 64))
(declare-fun var266487 () (_ BitVec 64))
(declare-fun var266488 () (_ BitVec 64))
(declare-fun temp61_98 () (_ BitVec 64))
(declare-fun var266641 () (_ BitVec 64))
(declare-fun temp61_99 () (_ BitVec 64))
(declare-fun temp61_100 () (_ BitVec 64))
(declare-fun var266673 () (_ BitVec 64))
(declare-fun temp61_101 () (_ BitVec 64))
(declare-fun temp61_102 () (_ BitVec 64))
(declare-fun temp61_104 () (_ BitVec 64))
(declare-fun temp61_103 () (_ BitVec 64))
(declare-fun temp61_106 () (_ BitVec 64))
(declare-fun temp61_105 () (_ BitVec 64))
(declare-fun temp61_108 () (_ BitVec 64))
(declare-fun temp61_107 () (_ BitVec 64))
(declare-fun temp61_110 () (_ BitVec 64))
(declare-fun temp61_109 () (_ BitVec 64))
(assert (= temp61_1 #x0000000000000002))
(assert (= var69002
   (ite (bvslt ARGNAME_x1_NAMEEND_DIM temp61_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_2 #x0000000000000000))
(assert (= var69002 temp61_2))
(assert (= temp61_3 #x0000000000000002))
(assert (= var69030
   (ite (bvslt ARGNAME_x2_NAMEEND_DIM temp61_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_4 #x0000000000000000))
(assert (= var69030 temp61_4))
(assert (= temp61_5 #xffffffffffffffff))
(assert (= var66347 temp61_5))
(assert (= temp61_6 #x0000000000000000))
(assert (= temp61_7 temp61_6))
(assert (= temp61_8 (select ARGNAME_x1_NAMEEND_DIMSIZE temp61_7)))
(assert (= temp61_9 #x0000000000000001))
(assert (= temp61_10 temp61_9))
(assert (= temp61_11 (select ARGNAME_x1_NAMEEND_DIMSIZE temp61_10)))
(assert (= temp61_12 #x0000000000000002))
(assert (= temp61_13 temp61_12))
(assert (= temp61_14 (select ARGNAME_x1_NAMEEND_DIMSIZE temp61_13)))
(assert (= temp61_15 #x0000000000000003))
(assert (= temp61_16 temp61_15))
(assert (= temp61_17 (select ARGNAME_x1_NAMEEND_DIMSIZE temp61_16)))
(assert (= temp61_18 #x0000000000000004))
(assert (= temp61_19 temp61_18))
(assert (= temp61_20 (select ARGNAME_x1_NAMEEND_DIMSIZE temp61_19)))
(assert (= temp61_21 #x0000000000000005))
(assert (= temp61_22 temp61_21))
(assert (= temp61_23 (select ARGNAME_x1_NAMEEND_DIMSIZE temp61_22)))
(assert (= temp61_24 #x0000000000000000))
(assert (= temp61_25
   (ite (bvslt var66347 temp61_24)
        (bvadd ARGNAME_x1_NAMEEND_DIM var66347)
        var66347)))
(assert (= temp61_26 (select ARGNAME_x1_NAMEEND_DIMSIZE temp61_25)))
(assert (= var69052 temp61_26))
(assert (bvslt (ite (bvslt var66347 temp61_24)
            (bvadd ARGNAME_x1_NAMEEND_DIM var66347)
            var66347)
       ARGNAME_x1_NAMEEND_DIM))
(assert (= temp61_27 #xffffffffffffffff))
(assert (= var66347 temp61_27))
(assert (= temp61_28 #x0000000000000000))
(assert (= temp61_29 temp61_28))
(assert (= temp61_30 (select ARGNAME_x2_NAMEEND_DIMSIZE temp61_29)))
(assert (= temp61_31 #x0000000000000001))
(assert (= temp61_32 temp61_31))
(assert (= temp61_33 (select ARGNAME_x2_NAMEEND_DIMSIZE temp61_32)))
(assert (= temp61_34 #x0000000000000002))
(assert (= temp61_35 temp61_34))
(assert (= temp61_36 (select ARGNAME_x2_NAMEEND_DIMSIZE temp61_35)))
(assert (= temp61_37 #x0000000000000003))
(assert (= temp61_38 temp61_37))
(assert (= temp61_39 (select ARGNAME_x2_NAMEEND_DIMSIZE temp61_38)))
(assert (= temp61_40 #x0000000000000004))
(assert (= temp61_41 temp61_40))
(assert (= temp61_42 (select ARGNAME_x2_NAMEEND_DIMSIZE temp61_41)))
(assert (= temp61_43 #x0000000000000005))
(assert (= temp61_44 temp61_43))
(assert (= temp61_45 (select ARGNAME_x2_NAMEEND_DIMSIZE temp61_44)))
(assert (= temp61_46 #x0000000000000000))
(assert (= temp61_47
   (ite (bvslt var66347 temp61_46)
        (bvadd ARGNAME_x2_NAMEEND_DIM var66347)
        var66347)))
(assert (= temp61_48 (select ARGNAME_x2_NAMEEND_DIMSIZE temp61_47)))
(assert (= var69055 temp61_48))
(assert (bvslt (ite (bvslt var66347 temp61_46)
            (bvadd ARGNAME_x2_NAMEEND_DIM var66347)
            var66347)
       ARGNAME_x2_NAMEEND_DIM))
(assert (= var69056 (ite (= var69052 var69055) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_49 #x0000000000000001))
(assert (= var69056 temp61_49))
(assert (= temp61_50 #xfffffffffffffffe))
(assert (= var134718 temp61_50))
(assert (= temp61_51 #x0000000000000000))
(assert (= temp61_52
   (ite (bvslt var134718 temp61_51)
        (bvadd ARGNAME_x1_NAMEEND_DIM var134718)
        var134718)))
(assert (= temp61_53 (select ARGNAME_x1_NAMEEND_DIMSIZE temp61_52)))
(assert (= var134717 temp61_53))
(assert (bvslt (ite (bvslt var134718 temp61_51)
            (bvadd ARGNAME_x1_NAMEEND_DIM var134718)
            var134718)
       ARGNAME_x1_NAMEEND_DIM))
(assert (= temp61_54 #xfffffffffffffffe))
(assert (= var134718 temp61_54))
(assert (= temp61_55 #x0000000000000000))
(assert (= temp61_56
   (ite (bvslt var134718 temp61_55)
        (bvadd ARGNAME_x2_NAMEEND_DIM var134718)
        var134718)))
(assert (= temp61_57 (select ARGNAME_x2_NAMEEND_DIMSIZE temp61_56)))
(assert (= var134722 temp61_57))
(assert (bvslt (ite (bvslt var134718 temp61_55)
            (bvadd ARGNAME_x2_NAMEEND_DIM var134718)
            var134718)
       ARGNAME_x2_NAMEEND_DIM))
(assert (= temp61_58 #x0000000000000000))
(assert (= var134727
   (ite (= ARGNAME_x1_NAMEEND_NUMELEMENT temp61_58)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_59 #x0000000000000000))
(assert (= var134727 temp61_59))
(assert (= temp61_60 #x0000000000000000))
(assert (= var134731
   (ite (= ARGNAME_x2_NAMEEND_NUMELEMENT temp61_60)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_61 #x0000000000000000))
(assert (= var134731 temp61_61))
(assert (= temp61_63 #x0000000000000000))
(assert (= temp61_62 temp61_63))
(assert (= temp61_64 #x0000000000000002))
(assert (= var134768
   (ite (= ARGNAME_p_NAMEEND temp61_64) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_65 #x0000000000000001))
(assert (= var134768 temp61_65))
(assert (= temp61_66 #x0000000000000001))
(assert (or false (= ARGNAME_compute_mode_NAMEEND temp61_66)))
(assert (= temp61_67 #x0000000000000000))
(assert (= var266146
   (ite (bvslt ARGNAME_p_NAMEEND temp61_67)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_68 #x0000000000000000))
(assert (= var266146 temp61_68))
(assert (= temp61_69 #xffffffffffffffff))
(assert (= var262955 temp61_69))
(assert (= temp61_70 #x0000000000000000))
(assert (= temp61_71
   (ite (bvslt var262955 temp61_70)
        (bvadd ARGNAME_x1_NAMEEND_DIM var262955)
        var262955)))
(assert (= temp61_72 (select ARGNAME_x1_NAMEEND_DIMSIZE temp61_71)))
(assert (= var266214 temp61_72))
(assert (bvslt (ite (bvslt var262955 temp61_70)
            (bvadd ARGNAME_x1_NAMEEND_DIM var262955)
            var262955)
       ARGNAME_x1_NAMEEND_DIM))
(assert (= temp61_73 #xffffffffffffffff))
(assert (= var262955 temp61_73))
(assert (= temp61_74 #x0000000000000000))
(assert (= temp61_75
   (ite (bvslt var262955 temp61_74)
        (bvadd ARGNAME_x2_NAMEEND_DIM var262955)
        var262955)))
(assert (= temp61_76 (select ARGNAME_x2_NAMEEND_DIMSIZE temp61_75)))
(assert (= var266215 temp61_76))
(assert (bvslt (ite (bvslt var262955 temp61_74)
            (bvadd ARGNAME_x2_NAMEEND_DIM var262955)
            var262955)
       ARGNAME_x2_NAMEEND_DIM))
(assert (= temp61_78 #x0000000000000000))
(assert (= temp61_77 temp61_78))
(assert (= temp61_79 #x0000000000000002))
(assert (= var266224
   (ite (bvsgt ARGNAME_compute_mode_NAMEEND temp61_79)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_80 #x0000000000000000))
(assert (= var266224 temp61_80))
(assert (= temp61_81 #xfffffffffffffffe))
(assert (= var265790 temp61_81))
(assert (= temp61_82 #x0000000000000000))
(assert (= temp61_83
   (ite (bvslt var265790 temp61_82)
        (bvadd ARGNAME_x1_NAMEEND_DIM var265790)
        var265790)))
(assert (= temp61_84 (select ARGNAME_x1_NAMEEND_DIMSIZE temp61_83)))
(assert (= var266244 temp61_84))
(assert (bvslt (ite (bvslt var265790 temp61_82)
            (bvadd ARGNAME_x1_NAMEEND_DIM var265790)
            var265790)
       ARGNAME_x1_NAMEEND_DIM))
(assert (= temp61_85 #xfffffffffffffffe))
(assert (= var265790 temp61_85))
(assert (= temp61_86 #x0000000000000000))
(assert (= temp61_87
   (ite (bvslt var265790 temp61_86)
        (bvadd ARGNAME_x2_NAMEEND_DIM var265790)
        var265790)))
(assert (= temp61_88 (select ARGNAME_x2_NAMEEND_DIMSIZE temp61_87)))
(assert (= var266245 temp61_88))
(assert (bvslt (ite (bvslt var265790 temp61_86)
            (bvadd ARGNAME_x2_NAMEEND_DIM var265790)
            var265790)
       ARGNAME_x2_NAMEEND_DIM))
(assert (= temp61_89 #x0000000000000002))
(assert (= var266247
   (ite (= ARGNAME_p_NAMEEND temp61_89) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_90 #x0000000000000001))
(assert (= var266247 temp61_90))
(assert (= temp61_91 #x0000000000000001))
(assert (or false (= ARGNAME_compute_mode_NAMEEND temp61_91)))
(assert (= temp61_92 #xfffffffffffffffe))
(assert (= var266309 (bvadd ARGNAME_x1_NAMEEND_DIM temp61_92)))
(assert (= temp61_93 #xfffffffffffffffe))
(assert (= var266324 (bvadd ARGNAME_x2_NAMEEND_DIM temp61_93)))
(assert (= temp61_94 #x0000000000000000))
(assert (= var1573972 temp61_94))
(assert (= var1639526 var1573972))
(assert (= temp61_95 #x0000000000000000))
(assert (= var1901652 temp61_95))
(assert (= var1967206 var1901652))
(assert (= temp61_96 #x0000000000000000))
(assert (= var266486
   (ite (= var266244 temp61_96) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_97 #x0000000000000000))
(assert (= var266487
   (ite (= var266245 temp61_97) #x0000000000000001 #x0000000000000000)))
(assert (= var266488 (bvor var266486 var266487)))
(assert (= temp61_98 #x0000000000000000))
(assert (= var266641
   (ite (= var266214 temp61_98) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_99 #x0000000000000000))
(assert (= var266641 temp61_99))
(assert (= temp61_100 #x0000000000000002))
(assert (= var266673
   (ite (= ARGNAME_p_NAMEEND temp61_100) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_101 #x0000000000000001))
(assert (= var266673 temp61_101))
(assert (= temp61_102 #x0000000000000001))
(assert (or false (= ARGNAME_compute_mode_NAMEEND temp61_102)))
(assert (= temp61_104 #xffffffffffffffff))
(assert (= temp61_103 temp61_104))
(assert (= temp61_106 #xffffffffffffffff))
(assert (= temp61_105 temp61_106))
(assert (= temp61_108 #x0000000000000003))
(assert (= temp61_107 temp61_108))
(assert (= temp61_110 #x0000000000000003))
(assert (= temp61_109 temp61_110))
(model-add temp61_1 () (_ BitVec 64) #x0000000000000002)
(model-add temp61_2 () (_ BitVec 64) #x0000000000000000)
(model-add var69002 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_x1_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000002 #x8000000000000000))
                #x0000000000000002
                (bvsub #x0000000000000002 #x0000000000000001)))






