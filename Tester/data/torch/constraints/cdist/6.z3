(declare-fun temp16_1 () (_ BitVec 64))
(declare-fun temp16_2 () (_ BitVec 64))
(declare-fun var69002 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_x1_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp16_3 () (_ BitVec 64))
(declare-fun ARGNAME_x2_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var69030 () (_ BitVec 64))
(declare-fun temp16_4 () (_ BitVec 64))
(declare-fun temp16_5 () (_ BitVec 64))
(declare-fun var66347 () (_ BitVec 64))
(declare-fun temp16_6 () (_ BitVec 64))
(declare-fun temp16_7 () (_ BitVec 64))
(declare-fun ARGNAME_x1_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp16_8 () (_ BitVec 64))
(declare-fun temp16_9 () (_ BitVec 64))
(declare-fun temp16_10 () (_ BitVec 64))
(declare-fun temp16_11 () (_ BitVec 64))
(declare-fun temp16_12 () (_ BitVec 64))
(declare-fun temp16_13 () (_ BitVec 64))
(declare-fun temp16_14 () (_ BitVec 64))
(declare-fun temp16_15 () (_ BitVec 64))
(declare-fun temp16_16 () (_ BitVec 64))
(declare-fun temp16_17 () (_ BitVec 64))
(declare-fun temp16_18 () (_ BitVec 64))
(declare-fun temp16_19 () (_ BitVec 64))
(declare-fun temp16_20 () (_ BitVec 64))
(declare-fun temp16_21 () (_ BitVec 64))
(declare-fun temp16_22 () (_ BitVec 64))
(declare-fun temp16_23 () (_ BitVec 64))
(declare-fun temp16_24 () (_ BitVec 64))
(declare-fun temp16_25 () (_ BitVec 64))
(declare-fun temp16_26 () (_ BitVec 64))
(declare-fun var69052 () (_ BitVec 64))
(declare-fun temp16_27 () (_ BitVec 64))
(declare-fun temp16_28 () (_ BitVec 64))
(declare-fun temp16_29 () (_ BitVec 64))
(declare-fun ARGNAME_x2_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp16_30 () (_ BitVec 64))
(declare-fun temp16_31 () (_ BitVec 64))
(declare-fun temp16_32 () (_ BitVec 64))
(declare-fun temp16_33 () (_ BitVec 64))
(declare-fun temp16_34 () (_ BitVec 64))
(declare-fun temp16_35 () (_ BitVec 64))
(declare-fun temp16_36 () (_ BitVec 64))
(declare-fun temp16_37 () (_ BitVec 64))
(declare-fun temp16_38 () (_ BitVec 64))
(declare-fun temp16_39 () (_ BitVec 64))
(declare-fun temp16_40 () (_ BitVec 64))
(declare-fun temp16_41 () (_ BitVec 64))
(declare-fun temp16_42 () (_ BitVec 64))
(declare-fun temp16_43 () (_ BitVec 64))
(declare-fun temp16_44 () (_ BitVec 64))
(declare-fun temp16_45 () (_ BitVec 64))
(declare-fun temp16_46 () (_ BitVec 64))
(declare-fun temp16_47 () (_ BitVec 64))
(declare-fun temp16_48 () (_ BitVec 64))
(declare-fun var69055 () (_ BitVec 64))
(declare-fun var69056 () (_ BitVec 64))
(declare-fun temp16_49 () (_ BitVec 64))
(declare-fun temp16_50 () (_ BitVec 64))
(declare-fun var134718 () (_ BitVec 64))
(declare-fun temp16_51 () (_ BitVec 64))
(declare-fun temp16_52 () (_ BitVec 64))
(declare-fun temp16_53 () (_ BitVec 64))
(declare-fun var134717 () (_ BitVec 64))
(declare-fun temp16_54 () (_ BitVec 64))
(declare-fun temp16_55 () (_ BitVec 64))
(declare-fun temp16_56 () (_ BitVec 64))
(declare-fun temp16_57 () (_ BitVec 64))
(declare-fun var134722 () (_ BitVec 64))
(declare-fun temp16_58 () (_ BitVec 64))
(declare-fun ARGNAME_x1_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var134727 () (_ BitVec 64))
(declare-fun temp16_59 () (_ BitVec 64))
(declare-fun temp16_60 () (_ BitVec 64))
(declare-fun ARGNAME_x2_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var134731 () (_ BitVec 64))
(declare-fun temp16_61 () (_ BitVec 64))
(declare-fun temp16_63 () (_ BitVec 64))
(declare-fun temp16_62 () (_ BitVec 64))
(declare-fun temp16_64 () (_ BitVec 64))
(declare-fun ARGNAME_p_NAMEEND () (_ BitVec 64))
(declare-fun var134768 () (_ BitVec 64))
(declare-fun temp16_65 () (_ BitVec 64))
(declare-fun temp16_66 () (_ BitVec 64))
(declare-fun ARGNAME_compute_mode_NAMEEND () (_ BitVec 64))
(declare-fun temp16_67 () (_ BitVec 64))
(declare-fun var266146 () (_ BitVec 64))
(declare-fun temp16_68 () (_ BitVec 64))
(declare-fun temp16_69 () (_ BitVec 64))
(declare-fun var262955 () (_ BitVec 64))
(declare-fun temp16_70 () (_ BitVec 64))
(declare-fun temp16_71 () (_ BitVec 64))
(declare-fun temp16_72 () (_ BitVec 64))
(declare-fun var266214 () (_ BitVec 64))
(declare-fun temp16_73 () (_ BitVec 64))
(declare-fun temp16_74 () (_ BitVec 64))
(declare-fun temp16_75 () (_ BitVec 64))
(declare-fun temp16_76 () (_ BitVec 64))
(declare-fun var266215 () (_ BitVec 64))
(declare-fun temp16_78 () (_ BitVec 64))
(declare-fun temp16_77 () (_ BitVec 64))
(declare-fun temp16_79 () (_ BitVec 64))
(declare-fun var266224 () (_ BitVec 64))
(declare-fun temp16_80 () (_ BitVec 64))
(declare-fun temp16_81 () (_ BitVec 64))
(declare-fun var265790 () (_ BitVec 64))
(declare-fun temp16_82 () (_ BitVec 64))
(declare-fun temp16_83 () (_ BitVec 64))
(declare-fun temp16_84 () (_ BitVec 64))
(declare-fun var266244 () (_ BitVec 64))
(declare-fun temp16_85 () (_ BitVec 64))
(declare-fun temp16_86 () (_ BitVec 64))
(declare-fun temp16_87 () (_ BitVec 64))
(declare-fun temp16_88 () (_ BitVec 64))
(declare-fun var266245 () (_ BitVec 64))
(declare-fun temp16_89 () (_ BitVec 64))
(declare-fun var266247 () (_ BitVec 64))
(declare-fun temp16_90 () (_ BitVec 64))
(declare-fun temp16_91 () (_ BitVec 64))
(declare-fun temp16_92 () (_ BitVec 64))
(declare-fun var266309 () (_ BitVec 64))
(declare-fun temp16_93 () (_ BitVec 64))
(declare-fun var266324 () (_ BitVec 64))
(declare-fun temp16_94 () (_ BitVec 64))
(declare-fun var1573972 () (_ BitVec 64))
(declare-fun var1639526 () (_ BitVec 64))
(declare-fun temp16_95 () (_ BitVec 64))
(declare-fun var1901652 () (_ BitVec 64))
(declare-fun var1967206 () (_ BitVec 64))
(declare-fun temp16_96 () (_ BitVec 64))
(declare-fun var266486 () (_ BitVec 64))
(declare-fun temp16_97 () (_ BitVec 64))
(declare-fun var266487 () (_ BitVec 64))
(declare-fun var266488 () (_ BitVec 64))
(declare-fun temp16_98 () (_ BitVec 64))
(declare-fun var266641 () (_ BitVec 64))
(declare-fun temp16_99 () (_ BitVec 64))
(declare-fun temp16_100 () (_ BitVec 64))
(declare-fun var266673 () (_ BitVec 64))
(declare-fun temp16_101 () (_ BitVec 64))
(declare-fun temp16_102 () (_ BitVec 64))
(declare-fun temp16_104 () (_ BitVec 64))
(declare-fun temp16_103 () (_ BitVec 64))
(declare-fun temp16_106 () (_ BitVec 64))
(declare-fun temp16_105 () (_ BitVec 64))
(declare-fun temp16_108 () (_ BitVec 64))
(declare-fun temp16_107 () (_ BitVec 64))
(declare-fun temp16_110 () (_ BitVec 64))
(declare-fun temp16_109 () (_ BitVec 64))
(assert (= temp16_1 #x0000000000000002))
(assert (= var69002
   (ite (bvslt ARGNAME_x1_NAMEEND_DIM temp16_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_2 #x0000000000000000))
(assert (= var69002 temp16_2))
(assert (= temp16_3 #x0000000000000002))
(assert (= var69030
   (ite (bvslt ARGNAME_x2_NAMEEND_DIM temp16_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_4 #x0000000000000000))
(assert (= var69030 temp16_4))
(assert (= temp16_5 #xffffffffffffffff))
(assert (= var66347 temp16_5))
(assert (= temp16_6 #x0000000000000000))
(assert (= temp16_7 temp16_6))
(assert (= temp16_8 (select ARGNAME_x1_NAMEEND_DIMSIZE temp16_7)))
(assert (= temp16_9 #x0000000000000001))
(assert (= temp16_10 temp16_9))
(assert (= temp16_11 (select ARGNAME_x1_NAMEEND_DIMSIZE temp16_10)))
(assert (= temp16_12 #x0000000000000002))
(assert (= temp16_13 temp16_12))
(assert (= temp16_14 (select ARGNAME_x1_NAMEEND_DIMSIZE temp16_13)))
(assert (= temp16_15 #x0000000000000003))
(assert (= temp16_16 temp16_15))
(assert (= temp16_17 (select ARGNAME_x1_NAMEEND_DIMSIZE temp16_16)))
(assert (= temp16_18 #x0000000000000004))
(assert (= temp16_19 temp16_18))
(assert (= temp16_20 (select ARGNAME_x1_NAMEEND_DIMSIZE temp16_19)))
(assert (= temp16_21 #x0000000000000005))
(assert (= temp16_22 temp16_21))
(assert (= temp16_23 (select ARGNAME_x1_NAMEEND_DIMSIZE temp16_22)))
(assert (= temp16_24 #x0000000000000000))
(assert (= temp16_25
   (ite (bvslt var66347 temp16_24)
        (bvadd ARGNAME_x1_NAMEEND_DIM var66347)
        var66347)))
(assert (= temp16_26 (select ARGNAME_x1_NAMEEND_DIMSIZE temp16_25)))
(assert (= var69052 temp16_26))
(assert (bvslt (ite (bvslt var66347 temp16_24)
            (bvadd ARGNAME_x1_NAMEEND_DIM var66347)
            var66347)
       ARGNAME_x1_NAMEEND_DIM))
(assert (= temp16_27 #xffffffffffffffff))
(assert (= var66347 temp16_27))
(assert (= temp16_28 #x0000000000000000))
(assert (= temp16_29 temp16_28))
(assert (= temp16_30 (select ARGNAME_x2_NAMEEND_DIMSIZE temp16_29)))
(assert (= temp16_31 #x0000000000000001))
(assert (= temp16_32 temp16_31))
(assert (= temp16_33 (select ARGNAME_x2_NAMEEND_DIMSIZE temp16_32)))
(assert (= temp16_34 #x0000000000000002))
(assert (= temp16_35 temp16_34))
(assert (= temp16_36 (select ARGNAME_x2_NAMEEND_DIMSIZE temp16_35)))
(assert (= temp16_37 #x0000000000000003))
(assert (= temp16_38 temp16_37))
(assert (= temp16_39 (select ARGNAME_x2_NAMEEND_DIMSIZE temp16_38)))
(assert (= temp16_40 #x0000000000000004))
(assert (= temp16_41 temp16_40))
(assert (= temp16_42 (select ARGNAME_x2_NAMEEND_DIMSIZE temp16_41)))
(assert (= temp16_43 #x0000000000000005))
(assert (= temp16_44 temp16_43))
(assert (= temp16_45 (select ARGNAME_x2_NAMEEND_DIMSIZE temp16_44)))
(assert (= temp16_46 #x0000000000000000))
(assert (= temp16_47
   (ite (bvslt var66347 temp16_46)
        (bvadd ARGNAME_x2_NAMEEND_DIM var66347)
        var66347)))
(assert (= temp16_48 (select ARGNAME_x2_NAMEEND_DIMSIZE temp16_47)))
(assert (= var69055 temp16_48))
(assert (bvslt (ite (bvslt var66347 temp16_46)
            (bvadd ARGNAME_x2_NAMEEND_DIM var66347)
            var66347)
       ARGNAME_x2_NAMEEND_DIM))
(assert (= var69056 (ite (= var69052 var69055) #x0000000000000001 #x0000000000000000)))
(assert (= temp16_49 #x0000000000000001))
(assert (= var69056 temp16_49))
(assert (= temp16_50 #xfffffffffffffffe))
(assert (= var134718 temp16_50))
(assert (= temp16_51 #x0000000000000000))
(assert (= temp16_52
   (ite (bvslt var134718 temp16_51)
        (bvadd ARGNAME_x1_NAMEEND_DIM var134718)
        var134718)))
(assert (= temp16_53 (select ARGNAME_x1_NAMEEND_DIMSIZE temp16_52)))
(assert (= var134717 temp16_53))
(assert (bvslt (ite (bvslt var134718 temp16_51)
            (bvadd ARGNAME_x1_NAMEEND_DIM var134718)
            var134718)
       ARGNAME_x1_NAMEEND_DIM))
(assert (= temp16_54 #xfffffffffffffffe))
(assert (= var134718 temp16_54))
(assert (= temp16_55 #x0000000000000000))
(assert (= temp16_56
   (ite (bvslt var134718 temp16_55)
        (bvadd ARGNAME_x2_NAMEEND_DIM var134718)
        var134718)))
(assert (= temp16_57 (select ARGNAME_x2_NAMEEND_DIMSIZE temp16_56)))
(assert (= var134722 temp16_57))
(assert (bvslt (ite (bvslt var134718 temp16_55)
            (bvadd ARGNAME_x2_NAMEEND_DIM var134718)
            var134718)
       ARGNAME_x2_NAMEEND_DIM))
(assert (= temp16_58 #x0000000000000000))
(assert (= var134727
   (ite (= ARGNAME_x1_NAMEEND_NUMELEMENT temp16_58)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_59 #x0000000000000000))
(assert (= var134727 temp16_59))
(assert (= temp16_60 #x0000000000000000))
(assert (= var134731
   (ite (= ARGNAME_x2_NAMEEND_NUMELEMENT temp16_60)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_61 #x0000000000000000))
(assert (= var134731 temp16_61))
(assert (= temp16_63 #x0000000000000000))
(assert (= temp16_62 temp16_63))
(assert (= temp16_64 #x0000000000000002))
(assert (= var134768
   (ite (= ARGNAME_p_NAMEEND temp16_64) #x0000000000000001 #x0000000000000000)))
(assert (= temp16_65 #x0000000000000001))
(assert (= var134768 temp16_65))
(assert (= temp16_66 #x0000000000000001))
(assert (or false (= ARGNAME_compute_mode_NAMEEND temp16_66)))
(assert (= temp16_67 #x0000000000000000))
(assert (= var266146
   (ite (bvslt ARGNAME_p_NAMEEND temp16_67)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_68 #x0000000000000000))
(assert (= var266146 temp16_68))
(assert (= temp16_69 #xffffffffffffffff))
(assert (= var262955 temp16_69))
(assert (= temp16_70 #x0000000000000000))
(assert (= temp16_71
   (ite (bvslt var262955 temp16_70)
        (bvadd ARGNAME_x1_NAMEEND_DIM var262955)
        var262955)))
(assert (= temp16_72 (select ARGNAME_x1_NAMEEND_DIMSIZE temp16_71)))
(assert (= var266214 temp16_72))
(assert (bvslt (ite (bvslt var262955 temp16_70)
            (bvadd ARGNAME_x1_NAMEEND_DIM var262955)
            var262955)
       ARGNAME_x1_NAMEEND_DIM))
(assert (= temp16_73 #xffffffffffffffff))
(assert (= var262955 temp16_73))
(assert (= temp16_74 #x0000000000000000))
(assert (= temp16_75
   (ite (bvslt var262955 temp16_74)
        (bvadd ARGNAME_x2_NAMEEND_DIM var262955)
        var262955)))
(assert (= temp16_76 (select ARGNAME_x2_NAMEEND_DIMSIZE temp16_75)))
(assert (= var266215 temp16_76))
(assert (bvslt (ite (bvslt var262955 temp16_74)
            (bvadd ARGNAME_x2_NAMEEND_DIM var262955)
            var262955)
       ARGNAME_x2_NAMEEND_DIM))
(assert (= temp16_78 #x0000000000000000))
(assert (= temp16_77 temp16_78))
(assert (= temp16_79 #x0000000000000002))
(assert (= var266224
   (ite (bvsgt ARGNAME_compute_mode_NAMEEND temp16_79)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp16_80 #x0000000000000000))
(assert (= var266224 temp16_80))
(assert (= temp16_81 #xfffffffffffffffe))
(assert (= var265790 temp16_81))
(assert (= temp16_82 #x0000000000000000))
(assert (= temp16_83
   (ite (bvslt var265790 temp16_82)
        (bvadd ARGNAME_x1_NAMEEND_DIM var265790)
        var265790)))
(assert (= temp16_84 (select ARGNAME_x1_NAMEEND_DIMSIZE temp16_83)))
(assert (= var266244 temp16_84))
(assert (bvslt (ite (bvslt var265790 temp16_82)
            (bvadd ARGNAME_x1_NAMEEND_DIM var265790)
            var265790)
       ARGNAME_x1_NAMEEND_DIM))
(assert (= temp16_85 #xfffffffffffffffe))
(assert (= var265790 temp16_85))
(assert (= temp16_86 #x0000000000000000))
(assert (= temp16_87
   (ite (bvslt var265790 temp16_86)
        (bvadd ARGNAME_x2_NAMEEND_DIM var265790)
        var265790)))
(assert (= temp16_88 (select ARGNAME_x2_NAMEEND_DIMSIZE temp16_87)))
(assert (= var266245 temp16_88))
(assert (bvslt (ite (bvslt var265790 temp16_86)
            (bvadd ARGNAME_x2_NAMEEND_DIM var265790)
            var265790)
       ARGNAME_x2_NAMEEND_DIM))
(assert (= temp16_89 #x0000000000000002))
(assert (= var266247
   (ite (= ARGNAME_p_NAMEEND temp16_89) #x0000000000000001 #x0000000000000000)))
(assert (= temp16_90 #x0000000000000001))
(assert (= var266247 temp16_90))
(assert (= temp16_91 #x0000000000000001))
(assert (or false (= ARGNAME_compute_mode_NAMEEND temp16_91)))
(assert (= temp16_92 #xfffffffffffffffe))
(assert (= var266309 (bvadd ARGNAME_x1_NAMEEND_DIM temp16_92)))
(assert (= temp16_93 #xfffffffffffffffe))
(assert (= var266324 (bvadd ARGNAME_x2_NAMEEND_DIM temp16_93)))
(assert (= temp16_94 #x0000000000000000))
(assert (= var1573972 temp16_94))
(assert (= var1639526 var1573972))
(assert (= temp16_95 #x0000000000000000))
(assert (= var1901652 temp16_95))
(assert (= var1967206 var1901652))
(assert (= temp16_96 #x0000000000000000))
(assert (= var266486
   (ite (= var266244 temp16_96) #x0000000000000001 #x0000000000000000)))
(assert (= temp16_97 #x0000000000000000))
(assert (= var266487
   (ite (= var266245 temp16_97) #x0000000000000001 #x0000000000000000)))
(assert (= var266488 (bvor var266486 var266487)))
(assert (= temp16_98 #x0000000000000000))
(assert (= var266641
   (ite (= var266214 temp16_98) #x0000000000000001 #x0000000000000000)))
(assert (= temp16_99 #x0000000000000000))
(assert (= var266641 temp16_99))
(assert (= temp16_100 #x0000000000000002))
(assert (= var266673
   (ite (= ARGNAME_p_NAMEEND temp16_100) #x0000000000000001 #x0000000000000000)))
(assert (= temp16_101 #x0000000000000001))
(assert (= var266673 temp16_101))
(assert (= temp16_102 #x0000000000000001))
(assert (or false (= ARGNAME_compute_mode_NAMEEND temp16_102)))
(assert (= temp16_104 #xffffffffffffffff))
(assert (= temp16_103 temp16_104))
(assert (= temp16_106 #xffffffffffffffff))
(assert (= temp16_105 temp16_106))
(assert (= temp16_108 #x0000000000000003))
(assert (= temp16_107 temp16_108))
(assert (= temp16_110 #x0000000000000003))
(assert (= temp16_109 temp16_110))
(model-add temp16_1 () (_ BitVec 64) #x0000000000000002)
(model-add temp16_2 () (_ BitVec 64) #x0000000000000000)
(model-add var69002 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_x1_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000002 #x8000000000000000))
                #x0000000000000002
                (bvsub #x0000000000000002 #x0000000000000001)))






