(declare-fun temp18231_1 () (_ BitVec 64))
(declare-fun var135532 () (_ BitVec 64))
(declare-fun var135444 () (_ BitVec 64))
(declare-fun var73424 () (_ BitVec 64))
(declare-fun temp18231_2 () (_ BitVec 64))
(declare-fun var859787 () (_ BitVec 64))
(declare-fun temp18231_3 () (_ BitVec 64))
(declare-fun temp18231_4 () (_ BitVec 64))
(declare-fun var921981 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun temp18231_5 () (_ BitVec 64))
(declare-fun ARGNAME_q_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var921994 () (_ BitVec 64))
(declare-fun temp18231_6 () (_ BitVec 64))
(declare-fun temp18231_8 () (_ BitVec 64))
(declare-fun temp18231_7 () (_ BitVec 64))
(declare-fun temp18231_9 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1380908 () (_ BitVec 64))
(declare-fun temp18231_10 () (_ BitVec 64))
(declare-fun temp18231_11 () (_ BitVec 64))
(declare-fun ARGNAME_keepdim_NAMEEND () (_ BitVec 64))
(declare-fun temp18231_13 () (_ BitVec 64))
(declare-fun temp18231_12 () (_ BitVec 64))
(declare-fun temp18231_14 () (_ BitVec 64))
(declare-fun var1381012 () (_ BitVec 64))
(declare-fun temp18231_15 () (_ BitVec 64))
(declare-fun var2953974 () (_ BitVec 64))
(declare-fun temp18231_16 () (_ BitVec 64))
(declare-fun var3149072 () (_ BitVec 64))
(declare-fun temp18231_17 () (_ BitVec 64))
(declare-fun var3280144 () (_ BitVec 64))
(declare-fun temp18231_18 () (_ BitVec 64))
(declare-fun var2954275 () (_ BitVec 64))
(declare-fun temp18231_19 () (_ BitVec 64))
(declare-fun var4069448 () (_ BitVec 64))
(declare-fun temp18231_20 () (_ BitVec 64))
(declare-fun var4069449 () (_ BitVec 64))
(declare-fun temp18231_21 () (_ BitVec 64))
(declare-fun var2954366 () (_ BitVec 64))
(declare-fun temp18231_22 () (_ BitVec 64))
(declare-fun temp18231_23 () (_ BitVec 64))
(declare-fun var5183638 () (_ BitVec 64))
(declare-fun temp18231_24 () (_ BitVec 64))
(declare-fun var6232253 () (_ BitVec 64))
(declare-fun temp18231_25 () (_ BitVec 64))
(declare-fun var6232254 () (_ BitVec 64))
(declare-fun var6232255 () (_ BitVec 64))
(declare-fun var6232256 () (_ BitVec 64))
(declare-fun temp18231_26 () (_ BitVec 64))
(declare-fun temp18231_28 () (_ BitVec 64))
(declare-fun temp18231_27 () (_ BitVec 64))
(declare-fun temp18231_29 () (_ BitVec 64))
(declare-fun var6425872 () (_ BitVec 64))
(declare-fun temp18231_30 () (_ BitVec 64))
(declare-fun var6884624 () (_ BitVec 64))
(declare-fun temp18231_31 () (_ BitVec 64))
(declare-fun var6950160 () (_ BitVec 64))
(declare-fun var2954897 () (_ BitVec 64))
(declare-fun temp18231_32 () (_ BitVec 64))
(declare-fun temp18231_33 () (_ BitVec 64))
(declare-fun temp18231_34 () (_ BitVec 64))
(declare-fun var2954906 () (_ BitVec 64))
(declare-fun temp18231_35 () (_ BitVec 64))
(declare-fun temp18231_36 () (_ BitVec 64))
(declare-fun temp18231_37 () (_ BitVec 64))
(declare-fun var2954910 () (_ BitVec 64))
(declare-fun temp18231_38 () (_ BitVec 64))
(declare-fun temp18231_40 () (_ BitVec 64))
(declare-fun temp18231_39 () (_ BitVec 64))
(declare-fun temp18231_42 () (_ BitVec 64))
(declare-fun temp18231_41 () (_ BitVec 64))
(declare-fun temp18231_43 () (_ BitVec 64))
(declare-fun var2955178 () (_ BitVec 64))
(declare-fun temp18231_44 () (_ BitVec 64))
(assert (= temp18231_1 #x0000000000000000))
(assert (= var135532 temp18231_1))
(assert (= var135444 var135532))
(assert (= var73424 var135444))
(assert (= temp18231_2 #x0000000000000001))
(assert (= var859787 temp18231_2))
(assert (= temp18231_3 #x0000000000000001))
(assert (= var921981
   (ite (bvslt ARGNAME_input_NAMEEND_NUMELEMENT temp18231_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18231_4 #x0000000000000000))
(assert (= var921981 temp18231_4))
(assert (= temp18231_5 #x0000000000000001))
(assert (= var921994
   (ite (bvsgt ARGNAME_q_NAMEEND_DIM temp18231_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18231_6 #x0000000000000000))
(assert (= var921994 temp18231_6))
(assert (= temp18231_8 #x0000000000000000))
(assert (= temp18231_7 temp18231_8))
(assert (= temp18231_9 #x0000000000000000))
(assert (= var1380908
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp18231_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18231_10 #x0000000000000001))
(assert (= var1380908 temp18231_10))
(assert (= temp18231_11 #x0000000000000001))
(assert (= ARGNAME_keepdim_NAMEEND temp18231_11))
(assert (= temp18231_13 #x0000000000000001))
(assert (= temp18231_12 temp18231_13))
(assert (= temp18231_14 #x0000000000000000))
(assert (= var1381012
   (ite (bvsgt ARGNAME_q_NAMEEND_DIM temp18231_14)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18231_15 #x0000000000000000))
(assert (= var1381012 temp18231_15))
(assert (= var2953974 var859787))
(assert (= temp18231_16 #x0000000000000000))
(assert (= var3149072 temp18231_16))
(assert (= temp18231_17 #x0000000000000001))
(assert (= var3280144 temp18231_17))
(assert (= temp18231_18 #xffffffffffffffff))
(assert (= var2954275 (bvadd ARGNAME_input_NAMEEND_DIM temp18231_18)))
(assert (= temp18231_19 #xffffffffffffffff))
(assert (= var4069448 temp18231_19))
(assert (= temp18231_20 #x0000000000000000))
(assert (= var4069449 temp18231_20))
(assert (= temp18231_21 #x0000000000000000))
(assert (= var2954366
   (ite (= ARGNAME_q_NAMEEND_DIM temp18231_21)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18231_22 #x0000000000000000))
(assert (= var2954366 temp18231_22))
(assert (= temp18231_23 #x0000000000000001))
(assert (= var5183638 temp18231_23))
(assert (= temp18231_24 #x0000000000000002))
(assert (= var6232253 temp18231_24))
(assert (= temp18231_25 #x0000000000000018))
(assert (= var6232254 temp18231_25))
(assert (= var6232255 var6232253))
(assert (= var6232256 var6232254))
(assert (= temp18231_26 #x0000000000000001))
(assert (= var2953974 temp18231_26))
(assert (= temp18231_28 #xffffffffffffffff))
(assert (= temp18231_27 temp18231_28))
(assert (= temp18231_29 #x0000000000000001))
(assert (= var6425872 temp18231_29))
(assert (= temp18231_30 #x0000000000000000))
(assert (= var6884624 temp18231_30))
(assert (= temp18231_31 #x0000000000000000))
(assert (= var6950160 temp18231_31))
(assert (= var2954897 var73424))
(assert (= temp18231_32 #x0000000000000001))
(assert (distinct var2954897 temp18231_32))
(assert (= temp18231_33 #x0000000000000002))
(assert (distinct var2954897 temp18231_33))
(assert (= temp18231_34 #x0000000000000004))
(assert (distinct var2954897 temp18231_34))
(assert (= var2954906 var73424))
(assert (= temp18231_35 #x0000000000000000))
(assert (= temp18231_36 #x0000000000000003))
(assert (or false (= var2954906 temp18231_35) (= var2954906 temp18231_36)))
(assert (= temp18231_37 #x0000000000000003))
(assert (= var2954910
   (ite (= var2954906 temp18231_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp18231_38 #x0000000000000000))
(assert (= var2954910 temp18231_38))
(assert (= temp18231_40 #x0000000000000003))
(assert (= temp18231_39 temp18231_40))
(assert (= temp18231_42 #x0000000000000002))
(assert (= temp18231_41 temp18231_42))
(assert (= temp18231_43 #x0000000000000000))
(assert (= var2955178
   (ite (= ARGNAME_q_NAMEEND_DIM temp18231_43)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18231_44 #x0000000000000000))
(assert (= var2955178 temp18231_44))
(model-add temp18231_1 () (_ BitVec 64) #x0000000000000000)
(model-add var135532 () (_ BitVec 64) #x0000000000000000)
(model-add var135444 () (_ BitVec 64) #x0000000000000000)
(model-add var73424 () (_ BitVec 64) #x0000000000000000)
(model-add temp18231_2 () (_ BitVec 64) #x0000000000000001)
(model-add var859787 () (_ BitVec 64) #x0000000000000001)
(model-add temp18231_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp18231_4 () (_ BitVec 64) #x0000000000000000)
(model-add var921981 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_NUMELEMENT
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000001 #x8000000000000000))
                #x0000000000000001
                (bvsub #x0000000000000001 #x0000000000000001)))






