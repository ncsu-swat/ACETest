(declare-fun temp881_1 () (_ BitVec 64))
(declare-fun var135532 () (_ BitVec 64))
(declare-fun var135444 () (_ BitVec 64))
(declare-fun var73424 () (_ BitVec 64))
(declare-fun temp881_2 () (_ BitVec 64))
(declare-fun var859787 () (_ BitVec 64))
(declare-fun temp881_3 () (_ BitVec 64))
(declare-fun temp881_4 () (_ BitVec 64))
(declare-fun var921981 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun temp881_5 () (_ BitVec 64))
(declare-fun ARGNAME_q_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var921994 () (_ BitVec 64))
(declare-fun temp881_6 () (_ BitVec 64))
(declare-fun temp881_8 () (_ BitVec 64))
(declare-fun temp881_7 () (_ BitVec 64))
(declare-fun temp881_9 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1380908 () (_ BitVec 64))
(declare-fun temp881_10 () (_ BitVec 64))
(declare-fun temp881_11 () (_ BitVec 64))
(declare-fun ARGNAME_keepdim_NAMEEND () (_ BitVec 64))
(declare-fun temp881_13 () (_ BitVec 64))
(declare-fun temp881_12 () (_ BitVec 64))
(declare-fun temp881_14 () (_ BitVec 64))
(declare-fun var1381012 () (_ BitVec 64))
(declare-fun temp881_15 () (_ BitVec 64))
(declare-fun var3478262 () (_ BitVec 64))
(declare-fun temp881_16 () (_ BitVec 64))
(declare-fun var3673360 () (_ BitVec 64))
(declare-fun temp881_17 () (_ BitVec 64))
(declare-fun var3804432 () (_ BitVec 64))
(declare-fun temp881_18 () (_ BitVec 64))
(declare-fun var3478563 () (_ BitVec 64))
(declare-fun temp881_19 () (_ BitVec 64))
(declare-fun var4593736 () (_ BitVec 64))
(declare-fun temp881_20 () (_ BitVec 64))
(declare-fun var4593737 () (_ BitVec 64))
(declare-fun temp881_21 () (_ BitVec 64))
(declare-fun var3478654 () (_ BitVec 64))
(declare-fun temp881_22 () (_ BitVec 64))
(declare-fun temp881_23 () (_ BitVec 64))
(declare-fun var5707926 () (_ BitVec 64))
(declare-fun temp881_24 () (_ BitVec 64))
(declare-fun var6756541 () (_ BitVec 64))
(declare-fun temp881_25 () (_ BitVec 64))
(declare-fun var6756542 () (_ BitVec 64))
(declare-fun var6756543 () (_ BitVec 64))
(declare-fun var6756544 () (_ BitVec 64))
(declare-fun temp881_26 () (_ BitVec 64))
(declare-fun temp881_28 () (_ BitVec 64))
(declare-fun temp881_27 () (_ BitVec 64))
(declare-fun temp881_29 () (_ BitVec 64))
(declare-fun var6950160 () (_ BitVec 64))
(declare-fun temp881_30 () (_ BitVec 64))
(declare-fun var7408912 () (_ BitVec 64))
(declare-fun temp881_31 () (_ BitVec 64))
(declare-fun var7474448 () (_ BitVec 64))
(declare-fun var3479185 () (_ BitVec 64))
(declare-fun temp881_32 () (_ BitVec 64))
(declare-fun temp881_33 () (_ BitVec 64))
(declare-fun temp881_34 () (_ BitVec 64))
(declare-fun var3479194 () (_ BitVec 64))
(declare-fun temp881_35 () (_ BitVec 64))
(declare-fun temp881_36 () (_ BitVec 64))
(declare-fun temp881_37 () (_ BitVec 64))
(declare-fun var3479198 () (_ BitVec 64))
(declare-fun temp881_38 () (_ BitVec 64))
(declare-fun temp881_40 () (_ BitVec 64))
(declare-fun temp881_39 () (_ BitVec 64))
(declare-fun temp881_42 () (_ BitVec 64))
(declare-fun temp881_41 () (_ BitVec 64))
(declare-fun temp881_43 () (_ BitVec 64))
(declare-fun var3479466 () (_ BitVec 64))
(declare-fun temp881_44 () (_ BitVec 64))
(assert (= temp881_1 #x0000000000000000))
(assert (= var135532 temp881_1))
(assert (= var135444 var135532))
(assert (= var73424 var135444))
(assert (= temp881_2 #x0000000000000001))
(assert (= var859787 temp881_2))
(assert (= temp881_3 #x0000000000000001))
(assert (= var921981
   (ite (bvslt ARGNAME_input_NAMEEND_NUMELEMENT temp881_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp881_4 #x0000000000000000))
(assert (= var921981 temp881_4))
(assert (= temp881_5 #x0000000000000001))
(assert (= var921994
   (ite (bvsgt ARGNAME_q_NAMEEND_DIM temp881_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp881_6 #x0000000000000000))
(assert (= var921994 temp881_6))
(assert (= temp881_8 #x0000000000000000))
(assert (= temp881_7 temp881_8))
(assert (= temp881_9 #x0000000000000000))
(assert (= var1380908
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp881_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp881_10 #x0000000000000000))
(assert (= var1380908 temp881_10))
(assert (= temp881_11 #x0000000000000001))
(assert (= ARGNAME_keepdim_NAMEEND temp881_11))
(assert (= temp881_13 #x0000000000000001))
(assert (= temp881_12 temp881_13))
(assert (= temp881_14 #x0000000000000000))
(assert (= var1381012
   (ite (bvsgt ARGNAME_q_NAMEEND_DIM temp881_14)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp881_15 #x0000000000000001))
(assert (= var1381012 temp881_15))
(assert (= var3478262 var859787))
(assert (= temp881_16 #x0000000000000000))
(assert (= var3673360 temp881_16))
(assert (= temp881_17 #x0000000000000001))
(assert (= var3804432 temp881_17))
(assert (= temp881_18 #xffffffffffffffff))
(assert (= var3478563 (bvadd ARGNAME_input_NAMEEND_DIM temp881_18)))
(assert (= temp881_19 #xffffffffffffffff))
(assert (= var4593736 temp881_19))
(assert (= temp881_20 #x0000000000000000))
(assert (= var4593737 temp881_20))
(assert (= temp881_21 #x0000000000000000))
(assert (= var3478654
   (ite (= ARGNAME_q_NAMEEND_DIM temp881_21)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp881_22 #x0000000000000000))
(assert (= var3478654 temp881_22))
(assert (= temp881_23 #x0000000000000001))
(assert (= var5707926 temp881_23))
(assert (= temp881_24 #x0000000000000002))
(assert (= var6756541 temp881_24))
(assert (= temp881_25 #x0000000000000018))
(assert (= var6756542 temp881_25))
(assert (= var6756543 var6756541))
(assert (= var6756544 var6756542))
(assert (= temp881_26 #x0000000000000001))
(assert (= var3478262 temp881_26))
(assert (= temp881_28 #xffffffffffffffff))
(assert (= temp881_27 temp881_28))
(assert (= temp881_29 #x0000000000000001))
(assert (= var6950160 temp881_29))
(assert (= temp881_30 #x0000000000000000))
(assert (= var7408912 temp881_30))
(assert (= temp881_31 #x0000000000000000))
(assert (= var7474448 temp881_31))
(assert (= var3479185 var73424))
(assert (= temp881_32 #x0000000000000001))
(assert (distinct var3479185 temp881_32))
(assert (= temp881_33 #x0000000000000002))
(assert (distinct var3479185 temp881_33))
(assert (= temp881_34 #x0000000000000004))
(assert (distinct var3479185 temp881_34))
(assert (= var3479194 var73424))
(assert (= temp881_35 #x0000000000000000))
(assert (= temp881_36 #x0000000000000003))
(assert (or false (= var3479194 temp881_35) (= var3479194 temp881_36)))
(assert (= temp881_37 #x0000000000000003))
(assert (= var3479198
   (ite (= var3479194 temp881_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp881_38 #x0000000000000000))
(assert (= var3479198 temp881_38))
(assert (= temp881_40 #x0000000000000003))
(assert (= temp881_39 temp881_40))
(assert (= temp881_42 #x0000000000000002))
(assert (= temp881_41 temp881_42))
(assert (= temp881_43 #x0000000000000000))
(assert (= var3479466
   (ite (= ARGNAME_q_NAMEEND_DIM temp881_43)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp881_44 #x0000000000000000))
(assert (= var3479466 temp881_44))
(model-add temp881_1 () (_ BitVec 64) #x0000000000000000)
(model-add var135532 () (_ BitVec 64) #x0000000000000000)
(model-add var135444 () (_ BitVec 64) #x0000000000000000)
(model-add var73424 () (_ BitVec 64) #x0000000000000000)
(model-add temp881_2 () (_ BitVec 64) #x0000000000000001)
(model-add var859787 () (_ BitVec 64) #x0000000000000001)
(model-add temp881_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp881_4 () (_ BitVec 64) #x0000000000000000)
(model-add var921981 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_NUMELEMENT
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000001 #x8000000000000000))
                #x0000000000000001
                (bvsub #x0000000000000001 #x0000000000000001)))






