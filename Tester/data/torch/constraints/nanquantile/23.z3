(declare-fun temp1025_1 () (_ BitVec 64))
(declare-fun var135532 () (_ BitVec 64))
(declare-fun var135444 () (_ BitVec 64))
(declare-fun var73424 () (_ BitVec 64))
(declare-fun temp1025_2 () (_ BitVec 64))
(declare-fun var859787 () (_ BitVec 64))
(declare-fun temp1025_3 () (_ BitVec 64))
(declare-fun temp1025_4 () (_ BitVec 64))
(declare-fun var921981 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun temp1025_5 () (_ BitVec 64))
(declare-fun ARGNAME_q_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var921994 () (_ BitVec 64))
(declare-fun temp1025_6 () (_ BitVec 64))
(declare-fun temp1025_8 () (_ BitVec 64))
(declare-fun temp1025_7 () (_ BitVec 64))
(declare-fun temp1025_9 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1380908 () (_ BitVec 64))
(declare-fun temp1025_10 () (_ BitVec 64))
(declare-fun temp1025_11 () (_ BitVec 64))
(declare-fun ARGNAME_keepdim_NAMEEND () (_ BitVec 64))
(declare-fun temp1025_13 () (_ BitVec 64))
(declare-fun temp1025_12 () (_ BitVec 64))
(declare-fun temp1025_14 () (_ BitVec 64))
(declare-fun var1381012 () (_ BitVec 64))
(declare-fun temp1025_15 () (_ BitVec 64))
(declare-fun var3478262 () (_ BitVec 64))
(declare-fun temp1025_16 () (_ BitVec 64))
(declare-fun var3673360 () (_ BitVec 64))
(declare-fun temp1025_17 () (_ BitVec 64))
(declare-fun var3804432 () (_ BitVec 64))
(declare-fun temp1025_18 () (_ BitVec 64))
(declare-fun var3478563 () (_ BitVec 64))
(declare-fun temp1025_19 () (_ BitVec 64))
(declare-fun var4593736 () (_ BitVec 64))
(declare-fun temp1025_20 () (_ BitVec 64))
(declare-fun var4593737 () (_ BitVec 64))
(declare-fun temp1025_21 () (_ BitVec 64))
(declare-fun var3478654 () (_ BitVec 64))
(declare-fun temp1025_22 () (_ BitVec 64))
(declare-fun temp1025_23 () (_ BitVec 64))
(declare-fun var5707926 () (_ BitVec 64))
(declare-fun temp1025_24 () (_ BitVec 64))
(declare-fun var6756541 () (_ BitVec 64))
(declare-fun temp1025_25 () (_ BitVec 64))
(declare-fun var6756542 () (_ BitVec 64))
(declare-fun var6756543 () (_ BitVec 64))
(declare-fun var6756544 () (_ BitVec 64))
(declare-fun temp1025_26 () (_ BitVec 64))
(declare-fun temp1025_28 () (_ BitVec 64))
(declare-fun temp1025_27 () (_ BitVec 64))
(declare-fun temp1025_29 () (_ BitVec 64))
(declare-fun var6950160 () (_ BitVec 64))
(declare-fun temp1025_30 () (_ BitVec 64))
(declare-fun var7408912 () (_ BitVec 64))
(declare-fun temp1025_31 () (_ BitVec 64))
(declare-fun var7474448 () (_ BitVec 64))
(declare-fun var3479185 () (_ BitVec 64))
(declare-fun temp1025_32 () (_ BitVec 64))
(declare-fun temp1025_33 () (_ BitVec 64))
(declare-fun temp1025_34 () (_ BitVec 64))
(declare-fun var3479194 () (_ BitVec 64))
(declare-fun temp1025_35 () (_ BitVec 64))
(declare-fun temp1025_36 () (_ BitVec 64))
(declare-fun temp1025_37 () (_ BitVec 64))
(declare-fun var3479198 () (_ BitVec 64))
(declare-fun temp1025_38 () (_ BitVec 64))
(declare-fun temp1025_40 () (_ BitVec 64))
(declare-fun temp1025_39 () (_ BitVec 64))
(declare-fun temp1025_42 () (_ BitVec 64))
(declare-fun temp1025_41 () (_ BitVec 64))
(declare-fun temp1025_43 () (_ BitVec 64))
(declare-fun var3479466 () (_ BitVec 64))
(declare-fun temp1025_44 () (_ BitVec 64))
(assert (= temp1025_1 #x0000000000000000))
(assert (= var135532 temp1025_1))
(assert (= var135444 var135532))
(assert (= var73424 var135444))
(assert (= temp1025_2 #x0000000000000001))
(assert (= var859787 temp1025_2))
(assert (= temp1025_3 #x0000000000000001))
(assert (= var921981
   (ite (bvslt ARGNAME_input_NAMEEND_NUMELEMENT temp1025_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1025_4 #x0000000000000000))
(assert (= var921981 temp1025_4))
(assert (= temp1025_5 #x0000000000000001))
(assert (= var921994
   (ite (bvsgt ARGNAME_q_NAMEEND_DIM temp1025_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1025_6 #x0000000000000000))
(assert (= var921994 temp1025_6))
(assert (= temp1025_8 #x0000000000000000))
(assert (= temp1025_7 temp1025_8))
(assert (= temp1025_9 #x0000000000000000))
(assert (= var1380908
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp1025_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1025_10 #x0000000000000000))
(assert (= var1380908 temp1025_10))
(assert (= temp1025_11 #x0000000000000001))
(assert (= ARGNAME_keepdim_NAMEEND temp1025_11))
(assert (= temp1025_13 #x0000000000000001))
(assert (= temp1025_12 temp1025_13))
(assert (= temp1025_14 #x0000000000000000))
(assert (= var1381012
   (ite (bvsgt ARGNAME_q_NAMEEND_DIM temp1025_14)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1025_15 #x0000000000000001))
(assert (= var1381012 temp1025_15))
(assert (= var3478262 var859787))
(assert (= temp1025_16 #x0000000000000000))
(assert (= var3673360 temp1025_16))
(assert (= temp1025_17 #x0000000000000001))
(assert (= var3804432 temp1025_17))
(assert (= temp1025_18 #xffffffffffffffff))
(assert (= var3478563 (bvadd ARGNAME_input_NAMEEND_DIM temp1025_18)))
(assert (= temp1025_19 #xffffffffffffffff))
(assert (= var4593736 temp1025_19))
(assert (= temp1025_20 #x0000000000000000))
(assert (= var4593737 temp1025_20))
(assert (= temp1025_21 #x0000000000000000))
(assert (= var3478654
   (ite (= ARGNAME_q_NAMEEND_DIM temp1025_21)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1025_22 #x0000000000000000))
(assert (= var3478654 temp1025_22))
(assert (= temp1025_23 #x0000000000000001))
(assert (= var5707926 temp1025_23))
(assert (= temp1025_24 #x0000000000000002))
(assert (= var6756541 temp1025_24))
(assert (= temp1025_25 #x0000000000000018))
(assert (= var6756542 temp1025_25))
(assert (= var6756543 var6756541))
(assert (= var6756544 var6756542))
(assert (= temp1025_26 #x0000000000000001))
(assert (= var3478262 temp1025_26))
(assert (= temp1025_28 #xffffffffffffffff))
(assert (= temp1025_27 temp1025_28))
(assert (= temp1025_29 #x0000000000000001))
(assert (= var6950160 temp1025_29))
(assert (= temp1025_30 #x0000000000000000))
(assert (= var7408912 temp1025_30))
(assert (= temp1025_31 #x0000000000000000))
(assert (= var7474448 temp1025_31))
(assert (= var3479185 var73424))
(assert (= temp1025_32 #x0000000000000001))
(assert (distinct var3479185 temp1025_32))
(assert (= temp1025_33 #x0000000000000002))
(assert (distinct var3479185 temp1025_33))
(assert (= temp1025_34 #x0000000000000004))
(assert (distinct var3479185 temp1025_34))
(assert (= var3479194 var73424))
(assert (= temp1025_35 #x0000000000000000))
(assert (= temp1025_36 #x0000000000000003))
(assert (or false (= var3479194 temp1025_35) (= var3479194 temp1025_36)))
(assert (= temp1025_37 #x0000000000000003))
(assert (= var3479198
   (ite (= var3479194 temp1025_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp1025_38 #x0000000000000000))
(assert (= var3479198 temp1025_38))
(assert (= temp1025_40 #x0000000000000003))
(assert (= temp1025_39 temp1025_40))
(assert (= temp1025_42 #x0000000000000002))
(assert (= temp1025_41 temp1025_42))
(assert (= temp1025_43 #x0000000000000000))
(assert (= var3479466
   (ite (= ARGNAME_q_NAMEEND_DIM temp1025_43)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1025_44 #x0000000000000000))
(assert (= var3479466 temp1025_44))
(model-add temp1025_1 () (_ BitVec 64) #x0000000000000000)
(model-add var135532 () (_ BitVec 64) #x0000000000000000)
(model-add var135444 () (_ BitVec 64) #x0000000000000000)
(model-add var73424 () (_ BitVec 64) #x0000000000000000)
(model-add temp1025_2 () (_ BitVec 64) #x0000000000000001)
(model-add var859787 () (_ BitVec 64) #x0000000000000001)
(model-add temp1025_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp1025_4 () (_ BitVec 64) #x0000000000000000)
(model-add var921981 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_NUMELEMENT
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000001 #x8000000000000000))
                #x0000000000000001
                (bvsub #x0000000000000001 #x0000000000000001)))






