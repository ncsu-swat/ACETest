(declare-fun temp443_1 () (_ BitVec 64))
(declare-fun var135532 () (_ BitVec 64))
(declare-fun var135444 () (_ BitVec 64))
(declare-fun var73424 () (_ BitVec 64))
(declare-fun temp443_2 () (_ BitVec 64))
(declare-fun var859787 () (_ BitVec 64))
(declare-fun temp443_3 () (_ BitVec 64))
(declare-fun temp443_4 () (_ BitVec 64))
(declare-fun var921981 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun temp443_5 () (_ BitVec 64))
(declare-fun ARGNAME_q_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var921994 () (_ BitVec 64))
(declare-fun temp443_6 () (_ BitVec 64))
(declare-fun temp443_8 () (_ BitVec 64))
(declare-fun temp443_7 () (_ BitVec 64))
(declare-fun temp443_9 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1380908 () (_ BitVec 64))
(declare-fun temp443_10 () (_ BitVec 64))
(declare-fun temp443_11 () (_ BitVec 64))
(declare-fun ARGNAME_keepdim_NAMEEND () (_ BitVec 64))
(declare-fun temp443_13 () (_ BitVec 64))
(declare-fun temp443_12 () (_ BitVec 64))
(declare-fun temp443_14 () (_ BitVec 64))
(declare-fun var1381012 () (_ BitVec 64))
(declare-fun temp443_15 () (_ BitVec 64))
(declare-fun var3478262 () (_ BitVec 64))
(declare-fun temp443_16 () (_ BitVec 64))
(declare-fun var3673360 () (_ BitVec 64))
(declare-fun temp443_17 () (_ BitVec 64))
(declare-fun var3804432 () (_ BitVec 64))
(declare-fun temp443_18 () (_ BitVec 64))
(declare-fun var3478563 () (_ BitVec 64))
(declare-fun temp443_19 () (_ BitVec 64))
(declare-fun var4593736 () (_ BitVec 64))
(declare-fun temp443_20 () (_ BitVec 64))
(declare-fun var4593737 () (_ BitVec 64))
(declare-fun temp443_21 () (_ BitVec 64))
(declare-fun var3478654 () (_ BitVec 64))
(declare-fun temp443_22 () (_ BitVec 64))
(declare-fun temp443_23 () (_ BitVec 64))
(declare-fun var5576854 () (_ BitVec 64))
(declare-fun temp443_24 () (_ BitVec 64))
(declare-fun var6625469 () (_ BitVec 64))
(declare-fun temp443_25 () (_ BitVec 64))
(declare-fun var6625470 () (_ BitVec 64))
(declare-fun var6625471 () (_ BitVec 64))
(declare-fun var6625472 () (_ BitVec 64))
(declare-fun temp443_26 () (_ BitVec 64))
(declare-fun temp443_28 () (_ BitVec 64))
(declare-fun temp443_27 () (_ BitVec 64))
(declare-fun temp443_29 () (_ BitVec 64))
(declare-fun var6819088 () (_ BitVec 64))
(declare-fun temp443_30 () (_ BitVec 64))
(declare-fun var7277840 () (_ BitVec 64))
(declare-fun temp443_31 () (_ BitVec 64))
(declare-fun var7343376 () (_ BitVec 64))
(declare-fun var3479185 () (_ BitVec 64))
(declare-fun temp443_32 () (_ BitVec 64))
(declare-fun temp443_33 () (_ BitVec 64))
(declare-fun temp443_34 () (_ BitVec 64))
(declare-fun var3479194 () (_ BitVec 64))
(declare-fun temp443_35 () (_ BitVec 64))
(declare-fun temp443_36 () (_ BitVec 64))
(declare-fun temp443_37 () (_ BitVec 64))
(declare-fun var3479198 () (_ BitVec 64))
(declare-fun temp443_38 () (_ BitVec 64))
(declare-fun temp443_40 () (_ BitVec 64))
(declare-fun temp443_39 () (_ BitVec 64))
(declare-fun temp443_42 () (_ BitVec 64))
(declare-fun temp443_41 () (_ BitVec 64))
(declare-fun temp443_43 () (_ BitVec 64))
(declare-fun var3479466 () (_ BitVec 64))
(declare-fun temp443_44 () (_ BitVec 64))
(assert (= temp443_1 #x0000000000000000))
(assert (= var135532 temp443_1))
(assert (= var135444 var135532))
(assert (= var73424 var135444))
(assert (= temp443_2 #x0000000000000001))
(assert (= var859787 temp443_2))
(assert (= temp443_3 #x0000000000000001))
(assert (= var921981
   (ite (bvslt ARGNAME_input_NAMEEND_NUMELEMENT temp443_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp443_4 #x0000000000000000))
(assert (= var921981 temp443_4))
(assert (= temp443_5 #x0000000000000001))
(assert (= var921994
   (ite (bvsgt ARGNAME_q_NAMEEND_DIM temp443_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp443_6 #x0000000000000000))
(assert (= var921994 temp443_6))
(assert (= temp443_8 #x0000000000000000))
(assert (= temp443_7 temp443_8))
(assert (= temp443_9 #x0000000000000000))
(assert (= var1380908
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp443_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp443_10 #x0000000000000000))
(assert (= var1380908 temp443_10))
(assert (= temp443_11 #x0000000000000001))
(assert (= ARGNAME_keepdim_NAMEEND temp443_11))
(assert (= temp443_13 #x0000000000000001))
(assert (= temp443_12 temp443_13))
(assert (= temp443_14 #x0000000000000000))
(assert (= var1381012
   (ite (bvsgt ARGNAME_q_NAMEEND_DIM temp443_14)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp443_15 #x0000000000000001))
(assert (= var1381012 temp443_15))
(assert (= var3478262 var859787))
(assert (= temp443_16 #x0000000000000000))
(assert (= var3673360 temp443_16))
(assert (= temp443_17 #x0000000000000001))
(assert (= var3804432 temp443_17))
(assert (= temp443_18 #xffffffffffffffff))
(assert (= var3478563 (bvadd ARGNAME_input_NAMEEND_DIM temp443_18)))
(assert (= temp443_19 #xffffffffffffffff))
(assert (= var4593736 temp443_19))
(assert (= temp443_20 #x0000000000000000))
(assert (= var4593737 temp443_20))
(assert (= temp443_21 #x0000000000000000))
(assert (= var3478654
   (ite (= ARGNAME_q_NAMEEND_DIM temp443_21)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp443_22 #x0000000000000000))
(assert (= var3478654 temp443_22))
(assert (= temp443_23 #x0000000000000001))
(assert (= var5576854 temp443_23))
(assert (= temp443_24 #x0000000000000002))
(assert (= var6625469 temp443_24))
(assert (= temp443_25 #x0000000000000018))
(assert (= var6625470 temp443_25))
(assert (= var6625471 var6625469))
(assert (= var6625472 var6625470))
(assert (= temp443_26 #x0000000000000001))
(assert (= var3478262 temp443_26))
(assert (= temp443_28 #xffffffffffffffff))
(assert (= temp443_27 temp443_28))
(assert (= temp443_29 #x0000000000000001))
(assert (= var6819088 temp443_29))
(assert (= temp443_30 #x0000000000000000))
(assert (= var7277840 temp443_30))
(assert (= temp443_31 #x0000000000000000))
(assert (= var7343376 temp443_31))
(assert (= var3479185 var73424))
(assert (= temp443_32 #x0000000000000001))
(assert (distinct var3479185 temp443_32))
(assert (= temp443_33 #x0000000000000002))
(assert (distinct var3479185 temp443_33))
(assert (= temp443_34 #x0000000000000004))
(assert (distinct var3479185 temp443_34))
(assert (= var3479194 var73424))
(assert (= temp443_35 #x0000000000000000))
(assert (= temp443_36 #x0000000000000003))
(assert (or false (= var3479194 temp443_35) (= var3479194 temp443_36)))
(assert (= temp443_37 #x0000000000000003))
(assert (= var3479198
   (ite (= var3479194 temp443_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp443_38 #x0000000000000000))
(assert (= var3479198 temp443_38))
(assert (= temp443_40 #x0000000000000003))
(assert (= temp443_39 temp443_40))
(assert (= temp443_42 #x0000000000000002))
(assert (= temp443_41 temp443_42))
(assert (= temp443_43 #x0000000000000000))
(assert (= var3479466
   (ite (= ARGNAME_q_NAMEEND_DIM temp443_43)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp443_44 #x0000000000000000))
(assert (= var3479466 temp443_44))
(model-add temp443_1 () (_ BitVec 64) #x0000000000000000)
(model-add var135532 () (_ BitVec 64) #x0000000000000000)
(model-add var135444 () (_ BitVec 64) #x0000000000000000)
(model-add var73424 () (_ BitVec 64) #x0000000000000000)
(model-add temp443_2 () (_ BitVec 64) #x0000000000000001)
(model-add var859787 () (_ BitVec 64) #x0000000000000001)
(model-add temp443_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp443_4 () (_ BitVec 64) #x0000000000000000)
(model-add var921981 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_NUMELEMENT
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000001 #x8000000000000000))
                #x0000000000000001
                (bvsub #x0000000000000001 #x0000000000000001)))






