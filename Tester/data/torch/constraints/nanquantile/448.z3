(declare-fun temp14771_1 () (_ BitVec 64))
(declare-fun var135532 () (_ BitVec 64))
(declare-fun var135444 () (_ BitVec 64))
(declare-fun var73424 () (_ BitVec 64))
(declare-fun temp14771_2 () (_ BitVec 64))
(declare-fun var859787 () (_ BitVec 64))
(declare-fun temp14771_3 () (_ BitVec 64))
(declare-fun temp14771_4 () (_ BitVec 64))
(declare-fun var921981 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun temp14771_5 () (_ BitVec 64))
(declare-fun ARGNAME_q_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var921994 () (_ BitVec 64))
(declare-fun temp14771_6 () (_ BitVec 64))
(declare-fun temp14771_8 () (_ BitVec 64))
(declare-fun temp14771_7 () (_ BitVec 64))
(declare-fun temp14771_9 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1380908 () (_ BitVec 64))
(declare-fun temp14771_10 () (_ BitVec 64))
(declare-fun temp14771_11 () (_ BitVec 64))
(declare-fun ARGNAME_keepdim_NAMEEND () (_ BitVec 64))
(declare-fun temp14771_13 () (_ BitVec 64))
(declare-fun temp14771_12 () (_ BitVec 64))
(declare-fun temp14771_14 () (_ BitVec 64))
(declare-fun var1381012 () (_ BitVec 64))
(declare-fun temp14771_15 () (_ BitVec 64))
(declare-fun var3347190 () (_ BitVec 64))
(declare-fun temp14771_16 () (_ BitVec 64))
(declare-fun var3542288 () (_ BitVec 64))
(declare-fun temp14771_17 () (_ BitVec 64))
(declare-fun var3673360 () (_ BitVec 64))
(declare-fun temp14771_18 () (_ BitVec 64))
(declare-fun var3347491 () (_ BitVec 64))
(declare-fun temp14771_19 () (_ BitVec 64))
(declare-fun var4462664 () (_ BitVec 64))
(declare-fun temp14771_20 () (_ BitVec 64))
(declare-fun var4462665 () (_ BitVec 64))
(declare-fun temp14771_21 () (_ BitVec 64))
(declare-fun var3347582 () (_ BitVec 64))
(declare-fun temp14771_22 () (_ BitVec 64))
(declare-fun temp14771_23 () (_ BitVec 64))
(declare-fun var5576854 () (_ BitVec 64))
(declare-fun temp14771_24 () (_ BitVec 64))
(declare-fun var6625469 () (_ BitVec 64))
(declare-fun temp14771_25 () (_ BitVec 64))
(declare-fun var6625470 () (_ BitVec 64))
(declare-fun var6625471 () (_ BitVec 64))
(declare-fun var6625472 () (_ BitVec 64))
(declare-fun temp14771_26 () (_ BitVec 64))
(declare-fun temp14771_28 () (_ BitVec 64))
(declare-fun temp14771_27 () (_ BitVec 64))
(declare-fun temp14771_29 () (_ BitVec 64))
(declare-fun var6819088 () (_ BitVec 64))
(declare-fun temp14771_30 () (_ BitVec 64))
(declare-fun var7277840 () (_ BitVec 64))
(declare-fun temp14771_31 () (_ BitVec 64))
(declare-fun var7343376 () (_ BitVec 64))
(declare-fun var3348113 () (_ BitVec 64))
(declare-fun temp14771_32 () (_ BitVec 64))
(declare-fun temp14771_33 () (_ BitVec 64))
(declare-fun temp14771_34 () (_ BitVec 64))
(declare-fun var3348122 () (_ BitVec 64))
(declare-fun temp14771_35 () (_ BitVec 64))
(declare-fun temp14771_36 () (_ BitVec 64))
(declare-fun temp14771_37 () (_ BitVec 64))
(declare-fun var3348126 () (_ BitVec 64))
(declare-fun temp14771_38 () (_ BitVec 64))
(declare-fun temp14771_40 () (_ BitVec 64))
(declare-fun temp14771_39 () (_ BitVec 64))
(declare-fun temp14771_42 () (_ BitVec 64))
(declare-fun temp14771_41 () (_ BitVec 64))
(declare-fun temp14771_43 () (_ BitVec 64))
(declare-fun var3348394 () (_ BitVec 64))
(declare-fun temp14771_44 () (_ BitVec 64))
(assert (= temp14771_1 #x0000000000000000))
(assert (= var135532 temp14771_1))
(assert (= var135444 var135532))
(assert (= var73424 var135444))
(assert (= temp14771_2 #x0000000000000001))
(assert (= var859787 temp14771_2))
(assert (= temp14771_3 #x0000000000000001))
(assert (= var921981
   (ite (bvslt ARGNAME_input_NAMEEND_NUMELEMENT temp14771_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp14771_4 #x0000000000000000))
(assert (= var921981 temp14771_4))
(assert (= temp14771_5 #x0000000000000001))
(assert (= var921994
   (ite (bvsgt ARGNAME_q_NAMEEND_DIM temp14771_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp14771_6 #x0000000000000000))
(assert (= var921994 temp14771_6))
(assert (= temp14771_8 #x0000000000000000))
(assert (= temp14771_7 temp14771_8))
(assert (= temp14771_9 #x0000000000000000))
(assert (= var1380908
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp14771_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp14771_10 #x0000000000000001))
(assert (= var1380908 temp14771_10))
(assert (= temp14771_11 #x0000000000000001))
(assert (= ARGNAME_keepdim_NAMEEND temp14771_11))
(assert (= temp14771_13 #x0000000000000001))
(assert (= temp14771_12 temp14771_13))
(assert (= temp14771_14 #x0000000000000000))
(assert (= var1381012
   (ite (bvsgt ARGNAME_q_NAMEEND_DIM temp14771_14)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp14771_15 #x0000000000000001))
(assert (= var1381012 temp14771_15))
(assert (= var3347190 var859787))
(assert (= temp14771_16 #x0000000000000000))
(assert (= var3542288 temp14771_16))
(assert (= temp14771_17 #x0000000000000001))
(assert (= var3673360 temp14771_17))
(assert (= temp14771_18 #xffffffffffffffff))
(assert (= var3347491 (bvadd ARGNAME_input_NAMEEND_DIM temp14771_18)))
(assert (= temp14771_19 #xffffffffffffffff))
(assert (= var4462664 temp14771_19))
(assert (= temp14771_20 #x0000000000000000))
(assert (= var4462665 temp14771_20))
(assert (= temp14771_21 #x0000000000000000))
(assert (= var3347582
   (ite (= ARGNAME_q_NAMEEND_DIM temp14771_21)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp14771_22 #x0000000000000000))
(assert (= var3347582 temp14771_22))
(assert (= temp14771_23 #x0000000000000001))
(assert (= var5576854 temp14771_23))
(assert (= temp14771_24 #x0000000000000002))
(assert (= var6625469 temp14771_24))
(assert (= temp14771_25 #x0000000000000018))
(assert (= var6625470 temp14771_25))
(assert (= var6625471 var6625469))
(assert (= var6625472 var6625470))
(assert (= temp14771_26 #x0000000000000001))
(assert (= var3347190 temp14771_26))
(assert (= temp14771_28 #xffffffffffffffff))
(assert (= temp14771_27 temp14771_28))
(assert (= temp14771_29 #x0000000000000001))
(assert (= var6819088 temp14771_29))
(assert (= temp14771_30 #x0000000000000000))
(assert (= var7277840 temp14771_30))
(assert (= temp14771_31 #x0000000000000000))
(assert (= var7343376 temp14771_31))
(assert (= var3348113 var73424))
(assert (= temp14771_32 #x0000000000000001))
(assert (distinct var3348113 temp14771_32))
(assert (= temp14771_33 #x0000000000000002))
(assert (distinct var3348113 temp14771_33))
(assert (= temp14771_34 #x0000000000000004))
(assert (distinct var3348113 temp14771_34))
(assert (= var3348122 var73424))
(assert (= temp14771_35 #x0000000000000000))
(assert (= temp14771_36 #x0000000000000003))
(assert (or false (= var3348122 temp14771_35) (= var3348122 temp14771_36)))
(assert (= temp14771_37 #x0000000000000003))
(assert (= var3348126
   (ite (= var3348122 temp14771_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp14771_38 #x0000000000000000))
(assert (= var3348126 temp14771_38))
(assert (= temp14771_40 #x0000000000000003))
(assert (= temp14771_39 temp14771_40))
(assert (= temp14771_42 #x0000000000000002))
(assert (= temp14771_41 temp14771_42))
(assert (= temp14771_43 #x0000000000000000))
(assert (= var3348394
   (ite (= ARGNAME_q_NAMEEND_DIM temp14771_43)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp14771_44 #x0000000000000000))
(assert (= var3348394 temp14771_44))
(model-add temp14771_1 () (_ BitVec 64) #x0000000000000000)
(model-add var135532 () (_ BitVec 64) #x0000000000000000)
(model-add var135444 () (_ BitVec 64) #x0000000000000000)
(model-add var73424 () (_ BitVec 64) #x0000000000000000)
(model-add temp14771_2 () (_ BitVec 64) #x0000000000000001)
(model-add var859787 () (_ BitVec 64) #x0000000000000001)
(model-add temp14771_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp14771_4 () (_ BitVec 64) #x0000000000000000)
(model-add var921981 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_NUMELEMENT
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000001 #x8000000000000000))
                #x0000000000000001
                (bvsub #x0000000000000001 #x0000000000000001)))






