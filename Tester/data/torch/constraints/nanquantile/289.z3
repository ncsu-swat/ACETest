(declare-fun temp10380_1 () (_ BitVec 64))
(declare-fun var135532 () (_ BitVec 64))
(declare-fun var135444 () (_ BitVec 64))
(declare-fun var73424 () (_ BitVec 64))
(declare-fun temp10380_2 () (_ BitVec 64))
(declare-fun var859787 () (_ BitVec 64))
(declare-fun temp10380_3 () (_ BitVec 64))
(declare-fun temp10380_4 () (_ BitVec 64))
(declare-fun var921981 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun temp10380_5 () (_ BitVec 64))
(declare-fun ARGNAME_q_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var921994 () (_ BitVec 64))
(declare-fun temp10380_6 () (_ BitVec 64))
(declare-fun temp10380_8 () (_ BitVec 64))
(declare-fun temp10380_7 () (_ BitVec 64))
(declare-fun temp10380_9 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1380908 () (_ BitVec 64))
(declare-fun temp10380_10 () (_ BitVec 64))
(declare-fun temp10380_11 () (_ BitVec 64))
(declare-fun ARGNAME_keepdim_NAMEEND () (_ BitVec 64))
(declare-fun temp10380_12 () (_ BitVec 64))
(declare-fun var1381012 () (_ BitVec 64))
(declare-fun temp10380_13 () (_ BitVec 64))
(declare-fun var2560758 () (_ BitVec 64))
(declare-fun temp10380_14 () (_ BitVec 64))
(declare-fun var2755856 () (_ BitVec 64))
(declare-fun temp10380_15 () (_ BitVec 64))
(declare-fun var2886928 () (_ BitVec 64))
(declare-fun temp10380_16 () (_ BitVec 64))
(declare-fun var2561059 () (_ BitVec 64))
(declare-fun temp10380_17 () (_ BitVec 64))
(declare-fun var3676232 () (_ BitVec 64))
(declare-fun temp10380_18 () (_ BitVec 64))
(declare-fun var3676233 () (_ BitVec 64))
(declare-fun temp10380_19 () (_ BitVec 64))
(declare-fun var2561150 () (_ BitVec 64))
(declare-fun temp10380_20 () (_ BitVec 64))
(declare-fun temp10380_21 () (_ BitVec 64))
(declare-fun var5052566 () (_ BitVec 64))
(declare-fun temp10380_22 () (_ BitVec 64))
(declare-fun var6101181 () (_ BitVec 64))
(declare-fun temp10380_23 () (_ BitVec 64))
(declare-fun var6101182 () (_ BitVec 64))
(declare-fun var6101183 () (_ BitVec 64))
(declare-fun var6101184 () (_ BitVec 64))
(declare-fun temp10380_24 () (_ BitVec 64))
(declare-fun temp10380_26 () (_ BitVec 64))
(declare-fun temp10380_25 () (_ BitVec 64))
(declare-fun temp10380_27 () (_ BitVec 64))
(declare-fun var6294800 () (_ BitVec 64))
(declare-fun temp10380_28 () (_ BitVec 64))
(declare-fun var6753552 () (_ BitVec 64))
(declare-fun temp10380_29 () (_ BitVec 64))
(declare-fun var6819088 () (_ BitVec 64))
(declare-fun var2561681 () (_ BitVec 64))
(declare-fun temp10380_30 () (_ BitVec 64))
(declare-fun temp10380_31 () (_ BitVec 64))
(declare-fun temp10380_32 () (_ BitVec 64))
(declare-fun var2561690 () (_ BitVec 64))
(declare-fun temp10380_33 () (_ BitVec 64))
(declare-fun temp10380_34 () (_ BitVec 64))
(declare-fun temp10380_35 () (_ BitVec 64))
(declare-fun var2561694 () (_ BitVec 64))
(declare-fun temp10380_36 () (_ BitVec 64))
(declare-fun temp10380_38 () (_ BitVec 64))
(declare-fun temp10380_37 () (_ BitVec 64))
(declare-fun temp10380_40 () (_ BitVec 64))
(declare-fun temp10380_39 () (_ BitVec 64))
(declare-fun temp10380_41 () (_ BitVec 64))
(declare-fun var2561962 () (_ BitVec 64))
(declare-fun temp10380_42 () (_ BitVec 64))
(assert (= temp10380_1 #x0000000000000000))
(assert (= var135532 temp10380_1))
(assert (= var135444 var135532))
(assert (= var73424 var135444))
(assert (= temp10380_2 #x0000000000000001))
(assert (= var859787 temp10380_2))
(assert (= temp10380_3 #x0000000000000001))
(assert (= var921981
   (ite (bvslt ARGNAME_input_NAMEEND_NUMELEMENT temp10380_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10380_4 #x0000000000000000))
(assert (= var921981 temp10380_4))
(assert (= temp10380_5 #x0000000000000001))
(assert (= var921994
   (ite (bvsgt ARGNAME_q_NAMEEND_DIM temp10380_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10380_6 #x0000000000000000))
(assert (= var921994 temp10380_6))
(assert (= temp10380_8 #x0000000000000000))
(assert (= temp10380_7 temp10380_8))
(assert (= temp10380_9 #x0000000000000000))
(assert (= var1380908
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp10380_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10380_10 #x0000000000000000))
(assert (= var1380908 temp10380_10))
(assert (= temp10380_11 #x0000000000000000))
(assert (= ARGNAME_keepdim_NAMEEND temp10380_11))
(assert (= temp10380_12 #x0000000000000000))
(assert (= var1381012
   (ite (bvsgt ARGNAME_q_NAMEEND_DIM temp10380_12)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10380_13 #x0000000000000000))
(assert (= var1381012 temp10380_13))
(assert (= var2560758 var859787))
(assert (= temp10380_14 #x0000000000000000))
(assert (= var2755856 temp10380_14))
(assert (= temp10380_15 #x0000000000000001))
(assert (= var2886928 temp10380_15))
(assert (= temp10380_16 #xffffffffffffffff))
(assert (= var2561059 (bvadd ARGNAME_input_NAMEEND_DIM temp10380_16)))
(assert (= temp10380_17 #xffffffffffffffff))
(assert (= var3676232 temp10380_17))
(assert (= temp10380_18 #x0000000000000000))
(assert (= var3676233 temp10380_18))
(assert (= temp10380_19 #x0000000000000000))
(assert (= var2561150
   (ite (= ARGNAME_q_NAMEEND_DIM temp10380_19)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10380_20 #x0000000000000001))
(assert (= var2561150 temp10380_20))
(assert (= temp10380_21 #x0000000000000001))
(assert (= var5052566 temp10380_21))
(assert (= temp10380_22 #x0000000000000002))
(assert (= var6101181 temp10380_22))
(assert (= temp10380_23 #x0000000000000018))
(assert (= var6101182 temp10380_23))
(assert (= var6101183 var6101181))
(assert (= var6101184 var6101182))
(assert (= temp10380_24 #x0000000000000001))
(assert (= var2560758 temp10380_24))
(assert (= temp10380_26 #xffffffffffffffff))
(assert (= temp10380_25 temp10380_26))
(assert (= temp10380_27 #x0000000000000001))
(assert (= var6294800 temp10380_27))
(assert (= temp10380_28 #x0000000000000000))
(assert (= var6753552 temp10380_28))
(assert (= temp10380_29 #x0000000000000000))
(assert (= var6819088 temp10380_29))
(assert (= var2561681 var73424))
(assert (= temp10380_30 #x0000000000000001))
(assert (distinct var2561681 temp10380_30))
(assert (= temp10380_31 #x0000000000000002))
(assert (distinct var2561681 temp10380_31))
(assert (= temp10380_32 #x0000000000000004))
(assert (distinct var2561681 temp10380_32))
(assert (= var2561690 var73424))
(assert (= temp10380_33 #x0000000000000000))
(assert (= temp10380_34 #x0000000000000003))
(assert (or false (= var2561690 temp10380_33) (= var2561690 temp10380_34)))
(assert (= temp10380_35 #x0000000000000003))
(assert (= var2561694
   (ite (= var2561690 temp10380_35) #x0000000000000001 #x0000000000000000)))
(assert (= temp10380_36 #x0000000000000000))
(assert (= var2561694 temp10380_36))
(assert (= temp10380_38 #x0000000000000003))
(assert (= temp10380_37 temp10380_38))
(assert (= temp10380_40 #x0000000000000002))
(assert (= temp10380_39 temp10380_40))
(assert (= temp10380_41 #x0000000000000000))
(assert (= var2561962
   (ite (= ARGNAME_q_NAMEEND_DIM temp10380_41)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10380_42 #x0000000000000001))
(assert (= var2561962 temp10380_42))
(model-add temp10380_1 () (_ BitVec 64) #x0000000000000000)
(model-add var135532 () (_ BitVec 64) #x0000000000000000)
(model-add var135444 () (_ BitVec 64) #x0000000000000000)
(model-add var73424 () (_ BitVec 64) #x0000000000000000)
(model-add temp10380_2 () (_ BitVec 64) #x0000000000000001)
(model-add var859787 () (_ BitVec 64) #x0000000000000001)
(model-add temp10380_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp10380_4 () (_ BitVec 64) #x0000000000000000)
(model-add var921981 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_NUMELEMENT
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000001 #x8000000000000000))
                #x0000000000000001
                (bvsub #x0000000000000001 #x0000000000000001)))






