(declare-fun temp13049_1 () (_ BitVec 64))
(declare-fun var135532 () (_ BitVec 64))
(declare-fun var135444 () (_ BitVec 64))
(declare-fun var73424 () (_ BitVec 64))
(declare-fun temp13049_2 () (_ BitVec 64))
(declare-fun var859787 () (_ BitVec 64))
(declare-fun temp13049_3 () (_ BitVec 64))
(declare-fun temp13049_4 () (_ BitVec 64))
(declare-fun var921981 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun temp13049_5 () (_ BitVec 64))
(declare-fun ARGNAME_q_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var921994 () (_ BitVec 64))
(declare-fun temp13049_6 () (_ BitVec 64))
(declare-fun temp13049_8 () (_ BitVec 64))
(declare-fun temp13049_7 () (_ BitVec 64))
(declare-fun temp13049_9 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1380908 () (_ BitVec 64))
(declare-fun temp13049_10 () (_ BitVec 64))
(declare-fun temp13049_11 () (_ BitVec 64))
(declare-fun ARGNAME_keepdim_NAMEEND () (_ BitVec 64))
(declare-fun temp13049_12 () (_ BitVec 64))
(declare-fun var1381012 () (_ BitVec 64))
(declare-fun temp13049_13 () (_ BitVec 64))
(declare-fun var2560758 () (_ BitVec 64))
(declare-fun temp13049_14 () (_ BitVec 64))
(declare-fun var2561059 () (_ BitVec 64))
(declare-fun temp13049_15 () (_ BitVec 64))
(declare-fun var2889800 () (_ BitVec 64))
(declare-fun temp13049_16 () (_ BitVec 64))
(declare-fun var2889801 () (_ BitVec 64))
(declare-fun temp13049_17 () (_ BitVec 64))
(declare-fun var2561150 () (_ BitVec 64))
(declare-fun temp13049_18 () (_ BitVec 64))
(declare-fun temp13049_19 () (_ BitVec 64))
(declare-fun var4003990 () (_ BitVec 64))
(declare-fun temp13049_20 () (_ BitVec 64))
(declare-fun var5052605 () (_ BitVec 64))
(declare-fun temp13049_21 () (_ BitVec 64))
(declare-fun var5052606 () (_ BitVec 64))
(declare-fun var5052607 () (_ BitVec 64))
(declare-fun var5052608 () (_ BitVec 64))
(declare-fun temp13049_22 () (_ BitVec 64))
(declare-fun temp13049_24 () (_ BitVec 64))
(declare-fun temp13049_23 () (_ BitVec 64))
(declare-fun temp13049_25 () (_ BitVec 64))
(declare-fun var5246224 () (_ BitVec 64))
(declare-fun temp13049_26 () (_ BitVec 64))
(declare-fun var5704976 () (_ BitVec 64))
(declare-fun temp13049_27 () (_ BitVec 64))
(declare-fun var5770512 () (_ BitVec 64))
(declare-fun var2561681 () (_ BitVec 64))
(declare-fun temp13049_28 () (_ BitVec 64))
(declare-fun temp13049_29 () (_ BitVec 64))
(declare-fun temp13049_30 () (_ BitVec 64))
(declare-fun var2561690 () (_ BitVec 64))
(declare-fun temp13049_31 () (_ BitVec 64))
(declare-fun temp13049_32 () (_ BitVec 64))
(declare-fun temp13049_33 () (_ BitVec 64))
(declare-fun var2561694 () (_ BitVec 64))
(declare-fun temp13049_34 () (_ BitVec 64))
(declare-fun temp13049_36 () (_ BitVec 64))
(declare-fun temp13049_35 () (_ BitVec 64))
(declare-fun temp13049_38 () (_ BitVec 64))
(declare-fun temp13049_37 () (_ BitVec 64))
(declare-fun temp13049_39 () (_ BitVec 64))
(declare-fun var2561962 () (_ BitVec 64))
(declare-fun temp13049_40 () (_ BitVec 64))
(assert (= temp13049_1 #x0000000000000000))
(assert (= var135532 temp13049_1))
(assert (= var135444 var135532))
(assert (= var73424 var135444))
(assert (= temp13049_2 #x0000000000000001))
(assert (= var859787 temp13049_2))
(assert (= temp13049_3 #x0000000000000001))
(assert (= var921981
   (ite (bvslt ARGNAME_input_NAMEEND_NUMELEMENT temp13049_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp13049_4 #x0000000000000000))
(assert (= var921981 temp13049_4))
(assert (= temp13049_5 #x0000000000000001))
(assert (= var921994
   (ite (bvsgt ARGNAME_q_NAMEEND_DIM temp13049_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp13049_6 #x0000000000000000))
(assert (= var921994 temp13049_6))
(assert (= temp13049_8 #x0000000000000000))
(assert (= temp13049_7 temp13049_8))
(assert (= temp13049_9 #x0000000000000000))
(assert (= var1380908
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp13049_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp13049_10 #x0000000000000000))
(assert (= var1380908 temp13049_10))
(assert (= temp13049_11 #x0000000000000000))
(assert (= ARGNAME_keepdim_NAMEEND temp13049_11))
(assert (= temp13049_12 #x0000000000000000))
(assert (= var1381012
   (ite (bvsgt ARGNAME_q_NAMEEND_DIM temp13049_12)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp13049_13 #x0000000000000000))
(assert (= var1381012 temp13049_13))
(assert (= var2560758 var859787))
(assert (= temp13049_14 #xffffffffffffffff))
(assert (= var2561059 (bvadd ARGNAME_input_NAMEEND_DIM temp13049_14)))
(assert (= temp13049_15 #xffffffffffffffff))
(assert (= var2889800 temp13049_15))
(assert (= temp13049_16 #x0000000000000000))
(assert (= var2889801 temp13049_16))
(assert (= temp13049_17 #x0000000000000000))
(assert (= var2561150
   (ite (= ARGNAME_q_NAMEEND_DIM temp13049_17)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp13049_18 #x0000000000000000))
(assert (= var2561150 temp13049_18))
(assert (= temp13049_19 #x0000000000000001))
(assert (= var4003990 temp13049_19))
(assert (= temp13049_20 #x0000000000000002))
(assert (= var5052605 temp13049_20))
(assert (= temp13049_21 #x0000000000000018))
(assert (= var5052606 temp13049_21))
(assert (= var5052607 var5052605))
(assert (= var5052608 var5052606))
(assert (= temp13049_22 #x0000000000000001))
(assert (= var2560758 temp13049_22))
(assert (= temp13049_24 #xffffffffffffffff))
(assert (= temp13049_23 temp13049_24))
(assert (= temp13049_25 #x0000000000000001))
(assert (= var5246224 temp13049_25))
(assert (= temp13049_26 #x0000000000000000))
(assert (= var5704976 temp13049_26))
(assert (= temp13049_27 #x0000000000000000))
(assert (= var5770512 temp13049_27))
(assert (= var2561681 var73424))
(assert (= temp13049_28 #x0000000000000001))
(assert (distinct var2561681 temp13049_28))
(assert (= temp13049_29 #x0000000000000002))
(assert (distinct var2561681 temp13049_29))
(assert (= temp13049_30 #x0000000000000004))
(assert (distinct var2561681 temp13049_30))
(assert (= var2561690 var73424))
(assert (= temp13049_31 #x0000000000000000))
(assert (= temp13049_32 #x0000000000000003))
(assert (or false (= var2561690 temp13049_31) (= var2561690 temp13049_32)))
(assert (= temp13049_33 #x0000000000000003))
(assert (= var2561694
   (ite (= var2561690 temp13049_33) #x0000000000000001 #x0000000000000000)))
(assert (= temp13049_34 #x0000000000000000))
(assert (= var2561694 temp13049_34))
(assert (= temp13049_36 #x0000000000000003))
(assert (= temp13049_35 temp13049_36))
(assert (= temp13049_38 #x0000000000000002))
(assert (= temp13049_37 temp13049_38))
(assert (= temp13049_39 #x0000000000000000))
(assert (= var2561962
   (ite (= ARGNAME_q_NAMEEND_DIM temp13049_39)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp13049_40 #x0000000000000000))
(assert (= var2561962 temp13049_40))
(model-add temp13049_1 () (_ BitVec 64) #x0000000000000000)
(model-add var135532 () (_ BitVec 64) #x0000000000000000)
(model-add var135444 () (_ BitVec 64) #x0000000000000000)
(model-add var73424 () (_ BitVec 64) #x0000000000000000)
(model-add temp13049_2 () (_ BitVec 64) #x0000000000000001)
(model-add var859787 () (_ BitVec 64) #x0000000000000001)
(model-add temp13049_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp13049_4 () (_ BitVec 64) #x0000000000000000)
(model-add var921981 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_NUMELEMENT
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000001 #x8000000000000000))
                #x0000000000000001
                (bvsub #x0000000000000001 #x0000000000000001)))






