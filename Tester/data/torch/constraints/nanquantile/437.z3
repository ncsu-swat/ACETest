(declare-fun temp14197_1 () (_ BitVec 64))
(declare-fun var135532 () (_ BitVec 64))
(declare-fun var135444 () (_ BitVec 64))
(declare-fun var73424 () (_ BitVec 64))
(declare-fun temp14197_2 () (_ BitVec 64))
(declare-fun var859787 () (_ BitVec 64))
(declare-fun temp14197_3 () (_ BitVec 64))
(declare-fun temp14197_4 () (_ BitVec 64))
(declare-fun var921981 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun temp14197_5 () (_ BitVec 64))
(declare-fun ARGNAME_q_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var921994 () (_ BitVec 64))
(declare-fun temp14197_6 () (_ BitVec 64))
(declare-fun temp14197_8 () (_ BitVec 64))
(declare-fun temp14197_7 () (_ BitVec 64))
(declare-fun temp14197_9 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1380908 () (_ BitVec 64))
(declare-fun temp14197_10 () (_ BitVec 64))
(declare-fun temp14197_11 () (_ BitVec 64))
(declare-fun ARGNAME_keepdim_NAMEEND () (_ BitVec 64))
(declare-fun temp14197_13 () (_ BitVec 64))
(declare-fun temp14197_12 () (_ BitVec 64))
(declare-fun temp14197_14 () (_ BitVec 64))
(declare-fun var1381012 () (_ BitVec 64))
(declare-fun temp14197_15 () (_ BitVec 64))
(declare-fun var3347190 () (_ BitVec 64))
(declare-fun temp14197_16 () (_ BitVec 64))
(declare-fun var3542288 () (_ BitVec 64))
(declare-fun temp14197_17 () (_ BitVec 64))
(declare-fun var3673360 () (_ BitVec 64))
(declare-fun temp14197_18 () (_ BitVec 64))
(declare-fun var3347491 () (_ BitVec 64))
(declare-fun temp14197_19 () (_ BitVec 64))
(declare-fun var4462664 () (_ BitVec 64))
(declare-fun temp14197_20 () (_ BitVec 64))
(declare-fun var4462665 () (_ BitVec 64))
(declare-fun temp14197_21 () (_ BitVec 64))
(declare-fun var3347582 () (_ BitVec 64))
(declare-fun temp14197_22 () (_ BitVec 64))
(declare-fun temp14197_23 () (_ BitVec 64))
(declare-fun var5445782 () (_ BitVec 64))
(declare-fun temp14197_24 () (_ BitVec 64))
(declare-fun var6494397 () (_ BitVec 64))
(declare-fun temp14197_25 () (_ BitVec 64))
(declare-fun var6494398 () (_ BitVec 64))
(declare-fun var6494399 () (_ BitVec 64))
(declare-fun var6494400 () (_ BitVec 64))
(declare-fun temp14197_26 () (_ BitVec 64))
(declare-fun temp14197_28 () (_ BitVec 64))
(declare-fun temp14197_27 () (_ BitVec 64))
(declare-fun temp14197_29 () (_ BitVec 64))
(declare-fun var6688016 () (_ BitVec 64))
(declare-fun temp14197_30 () (_ BitVec 64))
(declare-fun var7146768 () (_ BitVec 64))
(declare-fun temp14197_31 () (_ BitVec 64))
(declare-fun var7212304 () (_ BitVec 64))
(declare-fun var3348113 () (_ BitVec 64))
(declare-fun temp14197_32 () (_ BitVec 64))
(declare-fun temp14197_33 () (_ BitVec 64))
(declare-fun temp14197_34 () (_ BitVec 64))
(declare-fun var3348122 () (_ BitVec 64))
(declare-fun temp14197_35 () (_ BitVec 64))
(declare-fun temp14197_36 () (_ BitVec 64))
(declare-fun temp14197_37 () (_ BitVec 64))
(declare-fun var3348126 () (_ BitVec 64))
(declare-fun temp14197_38 () (_ BitVec 64))
(declare-fun temp14197_40 () (_ BitVec 64))
(declare-fun temp14197_39 () (_ BitVec 64))
(declare-fun temp14197_42 () (_ BitVec 64))
(declare-fun temp14197_41 () (_ BitVec 64))
(declare-fun temp14197_43 () (_ BitVec 64))
(declare-fun var3348394 () (_ BitVec 64))
(declare-fun temp14197_44 () (_ BitVec 64))
(assert (= temp14197_1 #x0000000000000000))
(assert (= var135532 temp14197_1))
(assert (= var135444 var135532))
(assert (= var73424 var135444))
(assert (= temp14197_2 #x0000000000000001))
(assert (= var859787 temp14197_2))
(assert (= temp14197_3 #x0000000000000001))
(assert (= var921981
   (ite (bvslt ARGNAME_input_NAMEEND_NUMELEMENT temp14197_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp14197_4 #x0000000000000000))
(assert (= var921981 temp14197_4))
(assert (= temp14197_5 #x0000000000000001))
(assert (= var921994
   (ite (bvsgt ARGNAME_q_NAMEEND_DIM temp14197_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp14197_6 #x0000000000000000))
(assert (= var921994 temp14197_6))
(assert (= temp14197_8 #x0000000000000000))
(assert (= temp14197_7 temp14197_8))
(assert (= temp14197_9 #x0000000000000000))
(assert (= var1380908
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM temp14197_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp14197_10 #x0000000000000001))
(assert (= var1380908 temp14197_10))
(assert (= temp14197_11 #x0000000000000001))
(assert (= ARGNAME_keepdim_NAMEEND temp14197_11))
(assert (= temp14197_13 #x0000000000000001))
(assert (= temp14197_12 temp14197_13))
(assert (= temp14197_14 #x0000000000000000))
(assert (= var1381012
   (ite (bvsgt ARGNAME_q_NAMEEND_DIM temp14197_14)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp14197_15 #x0000000000000001))
(assert (= var1381012 temp14197_15))
(assert (= var3347190 var859787))
(assert (= temp14197_16 #x0000000000000000))
(assert (= var3542288 temp14197_16))
(assert (= temp14197_17 #x0000000000000001))
(assert (= var3673360 temp14197_17))
(assert (= temp14197_18 #xffffffffffffffff))
(assert (= var3347491 (bvadd ARGNAME_input_NAMEEND_DIM temp14197_18)))
(assert (= temp14197_19 #xffffffffffffffff))
(assert (= var4462664 temp14197_19))
(assert (= temp14197_20 #x0000000000000000))
(assert (= var4462665 temp14197_20))
(assert (= temp14197_21 #x0000000000000000))
(assert (= var3347582
   (ite (= ARGNAME_q_NAMEEND_DIM temp14197_21)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp14197_22 #x0000000000000000))
(assert (= var3347582 temp14197_22))
(assert (= temp14197_23 #x0000000000000001))
(assert (= var5445782 temp14197_23))
(assert (= temp14197_24 #x0000000000000002))
(assert (= var6494397 temp14197_24))
(assert (= temp14197_25 #x0000000000000018))
(assert (= var6494398 temp14197_25))
(assert (= var6494399 var6494397))
(assert (= var6494400 var6494398))
(assert (= temp14197_26 #x0000000000000001))
(assert (= var3347190 temp14197_26))
(assert (= temp14197_28 #xffffffffffffffff))
(assert (= temp14197_27 temp14197_28))
(assert (= temp14197_29 #x0000000000000001))
(assert (= var6688016 temp14197_29))
(assert (= temp14197_30 #x0000000000000000))
(assert (= var7146768 temp14197_30))
(assert (= temp14197_31 #x0000000000000000))
(assert (= var7212304 temp14197_31))
(assert (= var3348113 var73424))
(assert (= temp14197_32 #x0000000000000001))
(assert (distinct var3348113 temp14197_32))
(assert (= temp14197_33 #x0000000000000002))
(assert (distinct var3348113 temp14197_33))
(assert (= temp14197_34 #x0000000000000004))
(assert (distinct var3348113 temp14197_34))
(assert (= var3348122 var73424))
(assert (= temp14197_35 #x0000000000000000))
(assert (= temp14197_36 #x0000000000000003))
(assert (or false (= var3348122 temp14197_35) (= var3348122 temp14197_36)))
(assert (= temp14197_37 #x0000000000000003))
(assert (= var3348126
   (ite (= var3348122 temp14197_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp14197_38 #x0000000000000000))
(assert (= var3348126 temp14197_38))
(assert (= temp14197_40 #x0000000000000003))
(assert (= temp14197_39 temp14197_40))
(assert (= temp14197_42 #x0000000000000002))
(assert (= temp14197_41 temp14197_42))
(assert (= temp14197_43 #x0000000000000000))
(assert (= var3348394
   (ite (= ARGNAME_q_NAMEEND_DIM temp14197_43)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp14197_44 #x0000000000000000))
(assert (= var3348394 temp14197_44))
(model-add temp14197_1 () (_ BitVec 64) #x0000000000000000)
(model-add var135532 () (_ BitVec 64) #x0000000000000000)
(model-add var135444 () (_ BitVec 64) #x0000000000000000)
(model-add var73424 () (_ BitVec 64) #x0000000000000000)
(model-add temp14197_2 () (_ BitVec 64) #x0000000000000001)
(model-add var859787 () (_ BitVec 64) #x0000000000000001)
(model-add temp14197_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp14197_4 () (_ BitVec 64) #x0000000000000000)
(model-add var921981 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_NUMELEMENT
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000001 #x8000000000000000))
                #x0000000000000001
                (bvsub #x0000000000000001 #x0000000000000001)))






