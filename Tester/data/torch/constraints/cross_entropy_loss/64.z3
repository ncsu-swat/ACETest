(declare-fun temp64_1 () (_ BitVec 64))
(declare-fun var267855 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_target_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp64_2 () (_ BitVec 64))
(declare-fun ARGNAME_ignore_index_NAMEEND () (_ BitVec 64))
(declare-fun var70799 () (_ BitVec 64))
(declare-fun temp64_3 () (_ BitVec 64))
(declare-fun temp64_4 () (_ BitVec 64))
(declare-fun var1051017 () (_ BitVec 64))
(declare-fun var1051020 () (_ BitVec 64))
(declare-fun temp64_5 () (_ BitVec 64))
(declare-fun temp64_6 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp64_7 () (_ BitVec 64))
(declare-fun temp64_8 () (_ BitVec 64))
(declare-fun temp64_9 () (_ BitVec 64))
(declare-fun temp64_10 () (_ BitVec 64))
(declare-fun temp64_11 () (_ BitVec 64))
(declare-fun temp64_12 () (_ BitVec 64))
(declare-fun temp64_13 () (_ BitVec 64))
(declare-fun temp64_14 () (_ BitVec 64))
(declare-fun temp64_15 () (_ BitVec 64))
(declare-fun temp64_16 () (_ BitVec 64))
(declare-fun temp64_17 () (_ BitVec 64))
(declare-fun temp64_18 () (_ BitVec 64))
(declare-fun temp64_19 () (_ BitVec 64))
(declare-fun temp64_20 () (_ BitVec 64))
(declare-fun temp64_21 () (_ BitVec 64))
(declare-fun temp64_22 () (_ BitVec 64))
(declare-fun temp64_23 () (_ BitVec 64))
(declare-fun temp64_24 () (_ BitVec 64))
(declare-fun temp64_25 () (_ BitVec 64))
(declare-fun var1051021 () (_ BitVec 64))
(declare-fun temp64_26 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1051027 () (_ BitVec 64))
(declare-fun temp64_27 () (_ BitVec 64))
(declare-fun var1051030 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var1051031 () (_ BitVec 64))
(declare-fun temp64_28 () (_ BitVec 64))
(declare-fun var1314113 () (_ BitVec 64))
(declare-fun temp64_29 () (_ BitVec 64))
(declare-fun ARGNAME_label_smoothing_NAMEEND () (_ BitVec 64))
(declare-fun var1051085 () (_ BitVec 64))
(declare-fun temp64_30 () (_ BitVec 64))
(declare-fun temp64_32 () (_ BitVec 64))
(declare-fun temp64_31 () (_ BitVec 64))
(declare-fun temp64_33 () (_ BitVec 64))
(declare-fun var1048944 () (_ BitVec 64))
(declare-fun temp64_34 () (_ BitVec 64))
(declare-fun temp64_35 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp64_36 () (_ BitVec 64))
(declare-fun temp64_37 () (_ BitVec 64))
(declare-fun temp64_38 () (_ BitVec 64))
(declare-fun temp64_39 () (_ BitVec 64))
(declare-fun temp64_40 () (_ BitVec 64))
(declare-fun temp64_41 () (_ BitVec 64))
(declare-fun temp64_42 () (_ BitVec 64))
(declare-fun temp64_43 () (_ BitVec 64))
(declare-fun temp64_44 () (_ BitVec 64))
(declare-fun temp64_45 () (_ BitVec 64))
(declare-fun temp64_46 () (_ BitVec 64))
(declare-fun temp64_47 () (_ BitVec 64))
(declare-fun temp64_48 () (_ BitVec 64))
(declare-fun temp64_49 () (_ BitVec 64))
(declare-fun temp64_50 () (_ BitVec 64))
(declare-fun temp64_51 () (_ BitVec 64))
(declare-fun temp64_52 () (_ BitVec 64))
(declare-fun temp64_53 () (_ BitVec 64))
(declare-fun temp64_54 () (_ BitVec 64))
(declare-fun var1051233 () (_ BitVec 64))
(declare-fun temp64_55 () (_ BitVec 64))
(declare-fun var1969577 () (_ BitVec 64))
(declare-fun temp64_56 () (_ BitVec 64))
(declare-fun ARGNAME_reduction_NAMEEND () (_ BitVec 64))
(assert (= var267855
   (ite (= ARGNAME_input_NAMEEND_DIM ARGNAME_target_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp64_1 #x0000000000000001))
(assert (= var267855 temp64_1))
(assert (= temp64_2 #x0000000000000000))
(assert (= var70799
   (ite (bvslt ARGNAME_ignore_index_NAMEEND temp64_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp64_3 #x0000000000000001))
(assert (= var70799 temp64_3))
(assert (= temp64_4 #x0000000000000001))
(assert (= var1051017
   (ite (distinct ARGNAME_input_NAMEEND_DIM temp64_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1051020 var1051017))
(assert (= temp64_5 #x0000000000000000))
(assert (= temp64_6 temp64_5))
(assert (= temp64_7 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_6)))
(assert (= temp64_8 #x0000000000000001))
(assert (= temp64_9 temp64_8))
(assert (= temp64_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_9)))
(assert (= temp64_11 #x0000000000000002))
(assert (= temp64_12 temp64_11))
(assert (= temp64_13 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_12)))
(assert (= temp64_14 #x0000000000000003))
(assert (= temp64_15 temp64_14))
(assert (= temp64_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_15)))
(assert (= temp64_17 #x0000000000000004))
(assert (= temp64_18 temp64_17))
(assert (= temp64_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_18)))
(assert (= temp64_20 #x0000000000000005))
(assert (= temp64_21 temp64_20))
(assert (= temp64_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_21)))
(assert (= temp64_23 #x0000000000000000))
(assert (= temp64_24
   (ite (bvslt var1051020 temp64_23)
        (bvadd ARGNAME_input_NAMEEND_DIM var1051020)
        var1051020)))
(assert (= temp64_25 (select ARGNAME_input_NAMEEND_DIMSIZE temp64_24)))
(assert (= var1051021 temp64_25))
(assert (bvslt (ite (bvslt var1051020 temp64_23)
            (bvadd ARGNAME_input_NAMEEND_DIM var1051020)
            var1051020)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp64_26 #x0000000000000001))
(assert (= var1051027
   (ite (= ARGNAME_weight_NAMEEND_DIM temp64_26)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp64_27 #x0000000000000001))
(assert (= var1051027 temp64_27))
(assert (= var1051030 var1051021))
(assert (= var1051031
   (ite (= ARGNAME_weight_NAMEEND_NUMELEMENT var1051030)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp64_28 #x0000000000000001))
(assert (= var1051031 temp64_28))
(assert (= var1314113 var1051020))
(assert (= temp64_29 #x0000000000000000))
(assert (= var1051085
   (ite (bvsgt ARGNAME_label_smoothing_NAMEEND temp64_29)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp64_30 #x0000000000000000))
(assert (= var1051085 temp64_30))
(assert (= temp64_32 #x0000000000000001))
(assert (= temp64_31 temp64_32))
(assert (= temp64_33 #x0000000000000000))
(assert (= var1048944 temp64_33))
(assert (= temp64_34 #x0000000000000000))
(assert (= temp64_35 temp64_34))
(assert (= temp64_36 (select ARGNAME_weight_NAMEEND_DIMSIZE temp64_35)))
(assert (= temp64_37 #x0000000000000001))
(assert (= temp64_38 temp64_37))
(assert (= temp64_39 (select ARGNAME_weight_NAMEEND_DIMSIZE temp64_38)))
(assert (= temp64_40 #x0000000000000002))
(assert (= temp64_41 temp64_40))
(assert (= temp64_42 (select ARGNAME_weight_NAMEEND_DIMSIZE temp64_41)))
(assert (= temp64_43 #x0000000000000003))
(assert (= temp64_44 temp64_43))
(assert (= temp64_45 (select ARGNAME_weight_NAMEEND_DIMSIZE temp64_44)))
(assert (= temp64_46 #x0000000000000004))
(assert (= temp64_47 temp64_46))
(assert (= temp64_48 (select ARGNAME_weight_NAMEEND_DIMSIZE temp64_47)))
(assert (= temp64_49 #x0000000000000005))
(assert (= temp64_50 temp64_49))
(assert (= temp64_51 (select ARGNAME_weight_NAMEEND_DIMSIZE temp64_50)))
(assert (= temp64_52 #x0000000000000000))
(assert (= temp64_53
   (ite (bvslt var1048944 temp64_52)
        (bvadd ARGNAME_weight_NAMEEND_DIM var1048944)
        var1048944)))
(assert (= temp64_54 (select ARGNAME_weight_NAMEEND_DIMSIZE temp64_53)))
(assert (= var1051233 temp64_54))
(assert (bvslt (ite (bvslt var1048944 temp64_52)
            (bvadd ARGNAME_weight_NAMEEND_DIM var1048944)
            var1048944)
       ARGNAME_weight_NAMEEND_DIM))
(assert (= temp64_55 #x0000000000000001))
(assert (= var1969577 temp64_55))
(assert (= temp64_56 #x0000000000000002))
(assert (or false (= ARGNAME_reduction_NAMEEND temp64_56)))
(model-add temp64_1 () (_ BitVec 64) #x0000000000000001)
(model-add var267855 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0
                ARGNAME_target_NAMEEND_DIM
                (bvnot ARGNAME_target_NAMEEND_DIM)))





