(declare-fun temp78_1 () (_ BitVec 64))
(declare-fun var267855 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_target_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp78_2 () (_ BitVec 64))
(declare-fun ARGNAME_ignore_index_NAMEEND () (_ BitVec 64))
(declare-fun var70799 () (_ BitVec 64))
(declare-fun temp78_3 () (_ BitVec 64))
(declare-fun temp78_4 () (_ BitVec 64))
(declare-fun var1051017 () (_ BitVec 64))
(declare-fun var1051020 () (_ BitVec 64))
(declare-fun temp78_5 () (_ BitVec 64))
(declare-fun temp78_6 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp78_7 () (_ BitVec 64))
(declare-fun temp78_8 () (_ BitVec 64))
(declare-fun temp78_9 () (_ BitVec 64))
(declare-fun temp78_10 () (_ BitVec 64))
(declare-fun temp78_11 () (_ BitVec 64))
(declare-fun temp78_12 () (_ BitVec 64))
(declare-fun temp78_13 () (_ BitVec 64))
(declare-fun temp78_14 () (_ BitVec 64))
(declare-fun temp78_15 () (_ BitVec 64))
(declare-fun temp78_16 () (_ BitVec 64))
(declare-fun temp78_17 () (_ BitVec 64))
(declare-fun temp78_18 () (_ BitVec 64))
(declare-fun temp78_19 () (_ BitVec 64))
(declare-fun temp78_20 () (_ BitVec 64))
(declare-fun temp78_21 () (_ BitVec 64))
(declare-fun temp78_22 () (_ BitVec 64))
(declare-fun temp78_23 () (_ BitVec 64))
(declare-fun temp78_24 () (_ BitVec 64))
(declare-fun temp78_25 () (_ BitVec 64))
(declare-fun var1051021 () (_ BitVec 64))
(declare-fun temp78_26 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1051027 () (_ BitVec 64))
(declare-fun temp78_27 () (_ BitVec 64))
(declare-fun var1051030 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var1051031 () (_ BitVec 64))
(declare-fun temp78_28 () (_ BitVec 64))
(declare-fun var1314113 () (_ BitVec 64))
(declare-fun temp78_29 () (_ BitVec 64))
(declare-fun ARGNAME_label_smoothing_NAMEEND () (_ BitVec 64))
(declare-fun var1051085 () (_ BitVec 64))
(declare-fun temp78_30 () (_ BitVec 64))
(declare-fun temp78_32 () (_ BitVec 64))
(declare-fun temp78_31 () (_ BitVec 64))
(declare-fun temp78_33 () (_ BitVec 64))
(declare-fun var1048944 () (_ BitVec 64))
(declare-fun temp78_34 () (_ BitVec 64))
(declare-fun temp78_35 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp78_36 () (_ BitVec 64))
(declare-fun temp78_37 () (_ BitVec 64))
(declare-fun temp78_38 () (_ BitVec 64))
(declare-fun temp78_39 () (_ BitVec 64))
(declare-fun temp78_40 () (_ BitVec 64))
(declare-fun temp78_41 () (_ BitVec 64))
(declare-fun temp78_42 () (_ BitVec 64))
(declare-fun temp78_43 () (_ BitVec 64))
(declare-fun temp78_44 () (_ BitVec 64))
(declare-fun temp78_45 () (_ BitVec 64))
(declare-fun temp78_46 () (_ BitVec 64))
(declare-fun temp78_47 () (_ BitVec 64))
(declare-fun temp78_48 () (_ BitVec 64))
(declare-fun temp78_49 () (_ BitVec 64))
(declare-fun temp78_50 () (_ BitVec 64))
(declare-fun temp78_51 () (_ BitVec 64))
(declare-fun temp78_52 () (_ BitVec 64))
(declare-fun temp78_53 () (_ BitVec 64))
(declare-fun temp78_54 () (_ BitVec 64))
(declare-fun var1051233 () (_ BitVec 64))
(declare-fun temp78_55 () (_ BitVec 64))
(declare-fun var1969577 () (_ BitVec 64))
(declare-fun temp78_56 () (_ BitVec 64))
(declare-fun ARGNAME_reduction_NAMEEND () (_ BitVec 64))
(assert (= var267855
   (ite (= ARGNAME_input_NAMEEND_DIM ARGNAME_target_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp78_1 #x0000000000000001))
(assert (= var267855 temp78_1))
(assert (= temp78_2 #x0000000000000000))
(assert (= var70799
   (ite (bvslt ARGNAME_ignore_index_NAMEEND temp78_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp78_3 #x0000000000000001))
(assert (= var70799 temp78_3))
(assert (= temp78_4 #x0000000000000001))
(assert (= var1051017
   (ite (distinct ARGNAME_input_NAMEEND_DIM temp78_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1051020 var1051017))
(assert (= temp78_5 #x0000000000000000))
(assert (= temp78_6 temp78_5))
(assert (= temp78_7 (select ARGNAME_input_NAMEEND_DIMSIZE temp78_6)))
(assert (= temp78_8 #x0000000000000001))
(assert (= temp78_9 temp78_8))
(assert (= temp78_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp78_9)))
(assert (= temp78_11 #x0000000000000002))
(assert (= temp78_12 temp78_11))
(assert (= temp78_13 (select ARGNAME_input_NAMEEND_DIMSIZE temp78_12)))
(assert (= temp78_14 #x0000000000000003))
(assert (= temp78_15 temp78_14))
(assert (= temp78_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp78_15)))
(assert (= temp78_17 #x0000000000000004))
(assert (= temp78_18 temp78_17))
(assert (= temp78_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp78_18)))
(assert (= temp78_20 #x0000000000000005))
(assert (= temp78_21 temp78_20))
(assert (= temp78_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp78_21)))
(assert (= temp78_23 #x0000000000000000))
(assert (= temp78_24
   (ite (bvslt var1051020 temp78_23)
        (bvadd ARGNAME_input_NAMEEND_DIM var1051020)
        var1051020)))
(assert (= temp78_25 (select ARGNAME_input_NAMEEND_DIMSIZE temp78_24)))
(assert (= var1051021 temp78_25))
(assert (bvslt (ite (bvslt var1051020 temp78_23)
            (bvadd ARGNAME_input_NAMEEND_DIM var1051020)
            var1051020)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp78_26 #x0000000000000001))
(assert (= var1051027
   (ite (= ARGNAME_weight_NAMEEND_DIM temp78_26)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp78_27 #x0000000000000001))
(assert (= var1051027 temp78_27))
(assert (= var1051030 var1051021))
(assert (= var1051031
   (ite (= ARGNAME_weight_NAMEEND_NUMELEMENT var1051030)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp78_28 #x0000000000000001))
(assert (= var1051031 temp78_28))
(assert (= var1314113 var1051020))
(assert (= temp78_29 #x0000000000000000))
(assert (= var1051085
   (ite (bvsgt ARGNAME_label_smoothing_NAMEEND temp78_29)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp78_30 #x0000000000000000))
(assert (= var1051085 temp78_30))
(assert (= temp78_32 #x0000000000000001))
(assert (= temp78_31 temp78_32))
(assert (= temp78_33 #x0000000000000000))
(assert (= var1048944 temp78_33))
(assert (= temp78_34 #x0000000000000000))
(assert (= temp78_35 temp78_34))
(assert (= temp78_36 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_35)))
(assert (= temp78_37 #x0000000000000001))
(assert (= temp78_38 temp78_37))
(assert (= temp78_39 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_38)))
(assert (= temp78_40 #x0000000000000002))
(assert (= temp78_41 temp78_40))
(assert (= temp78_42 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_41)))
(assert (= temp78_43 #x0000000000000003))
(assert (= temp78_44 temp78_43))
(assert (= temp78_45 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_44)))
(assert (= temp78_46 #x0000000000000004))
(assert (= temp78_47 temp78_46))
(assert (= temp78_48 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_47)))
(assert (= temp78_49 #x0000000000000005))
(assert (= temp78_50 temp78_49))
(assert (= temp78_51 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_50)))
(assert (= temp78_52 #x0000000000000000))
(assert (= temp78_53
   (ite (bvslt var1048944 temp78_52)
        (bvadd ARGNAME_weight_NAMEEND_DIM var1048944)
        var1048944)))
(assert (= temp78_54 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_53)))
(assert (= var1051233 temp78_54))
(assert (bvslt (ite (bvslt var1048944 temp78_52)
            (bvadd ARGNAME_weight_NAMEEND_DIM var1048944)
            var1048944)
       ARGNAME_weight_NAMEEND_DIM))
(assert (= temp78_55 #x0000000000000001))
(assert (= var1969577 temp78_55))
(assert (= temp78_56 #x0000000000000002))
(assert (or false (= ARGNAME_reduction_NAMEEND temp78_56)))
(model-add temp78_1 () (_ BitVec 64) #x0000000000000001)
(model-add var267855 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0
                ARGNAME_target_NAMEEND_DIM
                (bvnot ARGNAME_target_NAMEEND_DIM)))





