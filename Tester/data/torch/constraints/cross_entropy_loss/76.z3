(declare-fun temp76_1 () (_ BitVec 64))
(declare-fun var267855 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_target_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp76_2 () (_ BitVec 64))
(declare-fun ARGNAME_ignore_index_NAMEEND () (_ BitVec 64))
(declare-fun var70799 () (_ BitVec 64))
(declare-fun temp76_3 () (_ BitVec 64))
(declare-fun temp76_4 () (_ BitVec 64))
(declare-fun var1051017 () (_ BitVec 64))
(declare-fun var1051020 () (_ BitVec 64))
(declare-fun temp76_5 () (_ BitVec 64))
(declare-fun temp76_6 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp76_7 () (_ BitVec 64))
(declare-fun temp76_8 () (_ BitVec 64))
(declare-fun temp76_9 () (_ BitVec 64))
(declare-fun temp76_10 () (_ BitVec 64))
(declare-fun temp76_11 () (_ BitVec 64))
(declare-fun temp76_12 () (_ BitVec 64))
(declare-fun temp76_13 () (_ BitVec 64))
(declare-fun temp76_14 () (_ BitVec 64))
(declare-fun temp76_15 () (_ BitVec 64))
(declare-fun temp76_16 () (_ BitVec 64))
(declare-fun temp76_17 () (_ BitVec 64))
(declare-fun temp76_18 () (_ BitVec 64))
(declare-fun temp76_19 () (_ BitVec 64))
(declare-fun temp76_20 () (_ BitVec 64))
(declare-fun temp76_21 () (_ BitVec 64))
(declare-fun temp76_22 () (_ BitVec 64))
(declare-fun temp76_23 () (_ BitVec 64))
(declare-fun temp76_24 () (_ BitVec 64))
(declare-fun temp76_25 () (_ BitVec 64))
(declare-fun var1051021 () (_ BitVec 64))
(declare-fun temp76_26 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1051027 () (_ BitVec 64))
(declare-fun temp76_27 () (_ BitVec 64))
(declare-fun var1051030 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var1051031 () (_ BitVec 64))
(declare-fun temp76_28 () (_ BitVec 64))
(declare-fun var1314113 () (_ BitVec 64))
(declare-fun temp76_29 () (_ BitVec 64))
(declare-fun ARGNAME_label_smoothing_NAMEEND () (_ BitVec 64))
(declare-fun var1051085 () (_ BitVec 64))
(declare-fun temp76_30 () (_ BitVec 64))
(declare-fun temp76_32 () (_ BitVec 64))
(declare-fun temp76_31 () (_ BitVec 64))
(declare-fun temp76_33 () (_ BitVec 64))
(declare-fun var1048944 () (_ BitVec 64))
(declare-fun temp76_34 () (_ BitVec 64))
(declare-fun temp76_35 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp76_36 () (_ BitVec 64))
(declare-fun temp76_37 () (_ BitVec 64))
(declare-fun temp76_38 () (_ BitVec 64))
(declare-fun temp76_39 () (_ BitVec 64))
(declare-fun temp76_40 () (_ BitVec 64))
(declare-fun temp76_41 () (_ BitVec 64))
(declare-fun temp76_42 () (_ BitVec 64))
(declare-fun temp76_43 () (_ BitVec 64))
(declare-fun temp76_44 () (_ BitVec 64))
(declare-fun temp76_45 () (_ BitVec 64))
(declare-fun temp76_46 () (_ BitVec 64))
(declare-fun temp76_47 () (_ BitVec 64))
(declare-fun temp76_48 () (_ BitVec 64))
(declare-fun temp76_49 () (_ BitVec 64))
(declare-fun temp76_50 () (_ BitVec 64))
(declare-fun temp76_51 () (_ BitVec 64))
(declare-fun temp76_52 () (_ BitVec 64))
(declare-fun temp76_53 () (_ BitVec 64))
(declare-fun temp76_54 () (_ BitVec 64))
(declare-fun var1051233 () (_ BitVec 64))
(declare-fun temp76_55 () (_ BitVec 64))
(declare-fun var1969577 () (_ BitVec 64))
(declare-fun temp76_56 () (_ BitVec 64))
(declare-fun ARGNAME_reduction_NAMEEND () (_ BitVec 64))
(assert (= var267855
   (ite (= ARGNAME_input_NAMEEND_DIM ARGNAME_target_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76_1 #x0000000000000001))
(assert (= var267855 temp76_1))
(assert (= temp76_2 #x0000000000000000))
(assert (= var70799
   (ite (bvslt ARGNAME_ignore_index_NAMEEND temp76_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76_3 #x0000000000000001))
(assert (= var70799 temp76_3))
(assert (= temp76_4 #x0000000000000001))
(assert (= var1051017
   (ite (distinct ARGNAME_input_NAMEEND_DIM temp76_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1051020 var1051017))
(assert (= temp76_5 #x0000000000000000))
(assert (= temp76_6 temp76_5))
(assert (= temp76_7 (select ARGNAME_input_NAMEEND_DIMSIZE temp76_6)))
(assert (= temp76_8 #x0000000000000001))
(assert (= temp76_9 temp76_8))
(assert (= temp76_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp76_9)))
(assert (= temp76_11 #x0000000000000002))
(assert (= temp76_12 temp76_11))
(assert (= temp76_13 (select ARGNAME_input_NAMEEND_DIMSIZE temp76_12)))
(assert (= temp76_14 #x0000000000000003))
(assert (= temp76_15 temp76_14))
(assert (= temp76_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp76_15)))
(assert (= temp76_17 #x0000000000000004))
(assert (= temp76_18 temp76_17))
(assert (= temp76_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp76_18)))
(assert (= temp76_20 #x0000000000000005))
(assert (= temp76_21 temp76_20))
(assert (= temp76_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp76_21)))
(assert (= temp76_23 #x0000000000000000))
(assert (= temp76_24
   (ite (bvslt var1051020 temp76_23)
        (bvadd ARGNAME_input_NAMEEND_DIM var1051020)
        var1051020)))
(assert (= temp76_25 (select ARGNAME_input_NAMEEND_DIMSIZE temp76_24)))
(assert (= var1051021 temp76_25))
(assert (bvslt (ite (bvslt var1051020 temp76_23)
            (bvadd ARGNAME_input_NAMEEND_DIM var1051020)
            var1051020)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp76_26 #x0000000000000001))
(assert (= var1051027
   (ite (= ARGNAME_weight_NAMEEND_DIM temp76_26)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76_27 #x0000000000000001))
(assert (= var1051027 temp76_27))
(assert (= var1051030 var1051021))
(assert (= var1051031
   (ite (= ARGNAME_weight_NAMEEND_NUMELEMENT var1051030)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76_28 #x0000000000000001))
(assert (= var1051031 temp76_28))
(assert (= var1314113 var1051020))
(assert (= temp76_29 #x0000000000000000))
(assert (= var1051085
   (ite (bvsgt ARGNAME_label_smoothing_NAMEEND temp76_29)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76_30 #x0000000000000000))
(assert (= var1051085 temp76_30))
(assert (= temp76_32 #x0000000000000001))
(assert (= temp76_31 temp76_32))
(assert (= temp76_33 #x0000000000000000))
(assert (= var1048944 temp76_33))
(assert (= temp76_34 #x0000000000000000))
(assert (= temp76_35 temp76_34))
(assert (= temp76_36 (select ARGNAME_weight_NAMEEND_DIMSIZE temp76_35)))
(assert (= temp76_37 #x0000000000000001))
(assert (= temp76_38 temp76_37))
(assert (= temp76_39 (select ARGNAME_weight_NAMEEND_DIMSIZE temp76_38)))
(assert (= temp76_40 #x0000000000000002))
(assert (= temp76_41 temp76_40))
(assert (= temp76_42 (select ARGNAME_weight_NAMEEND_DIMSIZE temp76_41)))
(assert (= temp76_43 #x0000000000000003))
(assert (= temp76_44 temp76_43))
(assert (= temp76_45 (select ARGNAME_weight_NAMEEND_DIMSIZE temp76_44)))
(assert (= temp76_46 #x0000000000000004))
(assert (= temp76_47 temp76_46))
(assert (= temp76_48 (select ARGNAME_weight_NAMEEND_DIMSIZE temp76_47)))
(assert (= temp76_49 #x0000000000000005))
(assert (= temp76_50 temp76_49))
(assert (= temp76_51 (select ARGNAME_weight_NAMEEND_DIMSIZE temp76_50)))
(assert (= temp76_52 #x0000000000000000))
(assert (= temp76_53
   (ite (bvslt var1048944 temp76_52)
        (bvadd ARGNAME_weight_NAMEEND_DIM var1048944)
        var1048944)))
(assert (= temp76_54 (select ARGNAME_weight_NAMEEND_DIMSIZE temp76_53)))
(assert (= var1051233 temp76_54))
(assert (bvslt (ite (bvslt var1048944 temp76_52)
            (bvadd ARGNAME_weight_NAMEEND_DIM var1048944)
            var1048944)
       ARGNAME_weight_NAMEEND_DIM))
(assert (= temp76_55 #x0000000000000001))
(assert (= var1969577 temp76_55))
(assert (= temp76_56 #x0000000000000001))
(assert (or false (= ARGNAME_reduction_NAMEEND temp76_56)))
(model-add temp76_1 () (_ BitVec 64) #x0000000000000001)
(model-add var267855 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0
                ARGNAME_target_NAMEEND_DIM
                (bvnot ARGNAME_target_NAMEEND_DIM)))





