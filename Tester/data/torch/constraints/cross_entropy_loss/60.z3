(declare-fun temp60_1 () (_ BitVec 64))
(declare-fun var267855 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_target_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp60_2 () (_ BitVec 64))
(declare-fun ARGNAME_ignore_index_NAMEEND () (_ BitVec 64))
(declare-fun var70799 () (_ BitVec 64))
(declare-fun temp60_3 () (_ BitVec 64))
(declare-fun temp60_4 () (_ BitVec 64))
(declare-fun var1051017 () (_ BitVec 64))
(declare-fun var1051020 () (_ BitVec 64))
(declare-fun temp60_5 () (_ BitVec 64))
(declare-fun temp60_6 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp60_7 () (_ BitVec 64))
(declare-fun temp60_8 () (_ BitVec 64))
(declare-fun temp60_9 () (_ BitVec 64))
(declare-fun temp60_10 () (_ BitVec 64))
(declare-fun temp60_11 () (_ BitVec 64))
(declare-fun temp60_12 () (_ BitVec 64))
(declare-fun temp60_13 () (_ BitVec 64))
(declare-fun temp60_14 () (_ BitVec 64))
(declare-fun temp60_15 () (_ BitVec 64))
(declare-fun temp60_16 () (_ BitVec 64))
(declare-fun temp60_17 () (_ BitVec 64))
(declare-fun temp60_18 () (_ BitVec 64))
(declare-fun temp60_19 () (_ BitVec 64))
(declare-fun temp60_20 () (_ BitVec 64))
(declare-fun temp60_21 () (_ BitVec 64))
(declare-fun temp60_22 () (_ BitVec 64))
(declare-fun temp60_23 () (_ BitVec 64))
(declare-fun temp60_24 () (_ BitVec 64))
(declare-fun temp60_25 () (_ BitVec 64))
(declare-fun var1051021 () (_ BitVec 64))
(declare-fun temp60_26 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1051027 () (_ BitVec 64))
(declare-fun temp60_27 () (_ BitVec 64))
(declare-fun var1051030 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var1051031 () (_ BitVec 64))
(declare-fun temp60_28 () (_ BitVec 64))
(declare-fun var1314113 () (_ BitVec 64))
(declare-fun temp60_29 () (_ BitVec 64))
(declare-fun ARGNAME_label_smoothing_NAMEEND () (_ BitVec 64))
(declare-fun var1051085 () (_ BitVec 64))
(declare-fun temp60_30 () (_ BitVec 64))
(declare-fun temp60_32 () (_ BitVec 64))
(declare-fun temp60_31 () (_ BitVec 64))
(declare-fun temp60_33 () (_ BitVec 64))
(declare-fun var1048944 () (_ BitVec 64))
(declare-fun temp60_34 () (_ BitVec 64))
(declare-fun temp60_35 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp60_36 () (_ BitVec 64))
(declare-fun temp60_37 () (_ BitVec 64))
(declare-fun temp60_38 () (_ BitVec 64))
(declare-fun temp60_39 () (_ BitVec 64))
(declare-fun temp60_40 () (_ BitVec 64))
(declare-fun temp60_41 () (_ BitVec 64))
(declare-fun temp60_42 () (_ BitVec 64))
(declare-fun temp60_43 () (_ BitVec 64))
(declare-fun temp60_44 () (_ BitVec 64))
(declare-fun temp60_45 () (_ BitVec 64))
(declare-fun temp60_46 () (_ BitVec 64))
(declare-fun temp60_47 () (_ BitVec 64))
(declare-fun temp60_48 () (_ BitVec 64))
(declare-fun temp60_49 () (_ BitVec 64))
(declare-fun temp60_50 () (_ BitVec 64))
(declare-fun temp60_51 () (_ BitVec 64))
(declare-fun temp60_52 () (_ BitVec 64))
(declare-fun temp60_53 () (_ BitVec 64))
(declare-fun temp60_54 () (_ BitVec 64))
(declare-fun var1051233 () (_ BitVec 64))
(declare-fun temp60_55 () (_ BitVec 64))
(declare-fun var1969577 () (_ BitVec 64))
(declare-fun temp60_56 () (_ BitVec 64))
(declare-fun ARGNAME_reduction_NAMEEND () (_ BitVec 64))
(assert (= var267855
   (ite (= ARGNAME_input_NAMEEND_DIM ARGNAME_target_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_1 #x0000000000000001))
(assert (= var267855 temp60_1))
(assert (= temp60_2 #x0000000000000000))
(assert (= var70799
   (ite (bvslt ARGNAME_ignore_index_NAMEEND temp60_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_3 #x0000000000000001))
(assert (= var70799 temp60_3))
(assert (= temp60_4 #x0000000000000001))
(assert (= var1051017
   (ite (distinct ARGNAME_input_NAMEEND_DIM temp60_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1051020 var1051017))
(assert (= temp60_5 #x0000000000000000))
(assert (= temp60_6 temp60_5))
(assert (= temp60_7 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_6)))
(assert (= temp60_8 #x0000000000000001))
(assert (= temp60_9 temp60_8))
(assert (= temp60_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_9)))
(assert (= temp60_11 #x0000000000000002))
(assert (= temp60_12 temp60_11))
(assert (= temp60_13 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_12)))
(assert (= temp60_14 #x0000000000000003))
(assert (= temp60_15 temp60_14))
(assert (= temp60_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_15)))
(assert (= temp60_17 #x0000000000000004))
(assert (= temp60_18 temp60_17))
(assert (= temp60_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_18)))
(assert (= temp60_20 #x0000000000000005))
(assert (= temp60_21 temp60_20))
(assert (= temp60_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_21)))
(assert (= temp60_23 #x0000000000000000))
(assert (= temp60_24
   (ite (bvslt var1051020 temp60_23)
        (bvadd ARGNAME_input_NAMEEND_DIM var1051020)
        var1051020)))
(assert (= temp60_25 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_24)))
(assert (= var1051021 temp60_25))
(assert (bvslt (ite (bvslt var1051020 temp60_23)
            (bvadd ARGNAME_input_NAMEEND_DIM var1051020)
            var1051020)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp60_26 #x0000000000000001))
(assert (= var1051027
   (ite (= ARGNAME_weight_NAMEEND_DIM temp60_26)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_27 #x0000000000000001))
(assert (= var1051027 temp60_27))
(assert (= var1051030 var1051021))
(assert (= var1051031
   (ite (= ARGNAME_weight_NAMEEND_NUMELEMENT var1051030)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_28 #x0000000000000001))
(assert (= var1051031 temp60_28))
(assert (= var1314113 var1051020))
(assert (= temp60_29 #x0000000000000000))
(assert (= var1051085
   (ite (bvsgt ARGNAME_label_smoothing_NAMEEND temp60_29)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_30 #x0000000000000000))
(assert (= var1051085 temp60_30))
(assert (= temp60_32 #x0000000000000001))
(assert (= temp60_31 temp60_32))
(assert (= temp60_33 #x0000000000000000))
(assert (= var1048944 temp60_33))
(assert (= temp60_34 #x0000000000000000))
(assert (= temp60_35 temp60_34))
(assert (= temp60_36 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_35)))
(assert (= temp60_37 #x0000000000000001))
(assert (= temp60_38 temp60_37))
(assert (= temp60_39 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_38)))
(assert (= temp60_40 #x0000000000000002))
(assert (= temp60_41 temp60_40))
(assert (= temp60_42 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_41)))
(assert (= temp60_43 #x0000000000000003))
(assert (= temp60_44 temp60_43))
(assert (= temp60_45 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_44)))
(assert (= temp60_46 #x0000000000000004))
(assert (= temp60_47 temp60_46))
(assert (= temp60_48 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_47)))
(assert (= temp60_49 #x0000000000000005))
(assert (= temp60_50 temp60_49))
(assert (= temp60_51 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_50)))
(assert (= temp60_52 #x0000000000000000))
(assert (= temp60_53
   (ite (bvslt var1048944 temp60_52)
        (bvadd ARGNAME_weight_NAMEEND_DIM var1048944)
        var1048944)))
(assert (= temp60_54 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_53)))
(assert (= var1051233 temp60_54))
(assert (bvslt (ite (bvslt var1048944 temp60_52)
            (bvadd ARGNAME_weight_NAMEEND_DIM var1048944)
            var1048944)
       ARGNAME_weight_NAMEEND_DIM))
(assert (= temp60_55 #x0000000000000001))
(assert (= var1969577 temp60_55))
(assert (= temp60_56 #x0000000000000002))
(assert (or false (= ARGNAME_reduction_NAMEEND temp60_56)))
(model-add temp60_1 () (_ BitVec 64) #x0000000000000001)
(model-add var267855 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0
                ARGNAME_target_NAMEEND_DIM
                (bvnot ARGNAME_target_NAMEEND_DIM)))






