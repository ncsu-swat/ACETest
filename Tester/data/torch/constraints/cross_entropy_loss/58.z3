(declare-fun temp58_1 () (_ BitVec 64))
(declare-fun var267855 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_target_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp58_2 () (_ BitVec 64))
(declare-fun ARGNAME_ignore_index_NAMEEND () (_ BitVec 64))
(declare-fun var70799 () (_ BitVec 64))
(declare-fun temp58_3 () (_ BitVec 64))
(declare-fun temp58_4 () (_ BitVec 64))
(declare-fun var1051017 () (_ BitVec 64))
(declare-fun var1051020 () (_ BitVec 64))
(declare-fun temp58_5 () (_ BitVec 64))
(declare-fun temp58_6 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp58_7 () (_ BitVec 64))
(declare-fun temp58_8 () (_ BitVec 64))
(declare-fun temp58_9 () (_ BitVec 64))
(declare-fun temp58_10 () (_ BitVec 64))
(declare-fun temp58_11 () (_ BitVec 64))
(declare-fun temp58_12 () (_ BitVec 64))
(declare-fun temp58_13 () (_ BitVec 64))
(declare-fun temp58_14 () (_ BitVec 64))
(declare-fun temp58_15 () (_ BitVec 64))
(declare-fun temp58_16 () (_ BitVec 64))
(declare-fun temp58_17 () (_ BitVec 64))
(declare-fun temp58_18 () (_ BitVec 64))
(declare-fun temp58_19 () (_ BitVec 64))
(declare-fun temp58_20 () (_ BitVec 64))
(declare-fun temp58_21 () (_ BitVec 64))
(declare-fun temp58_22 () (_ BitVec 64))
(declare-fun temp58_23 () (_ BitVec 64))
(declare-fun temp58_24 () (_ BitVec 64))
(declare-fun temp58_25 () (_ BitVec 64))
(declare-fun var1051021 () (_ BitVec 64))
(declare-fun temp58_26 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1051027 () (_ BitVec 64))
(declare-fun temp58_27 () (_ BitVec 64))
(declare-fun var1051030 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var1051031 () (_ BitVec 64))
(declare-fun temp58_28 () (_ BitVec 64))
(declare-fun var1314113 () (_ BitVec 64))
(declare-fun temp58_29 () (_ BitVec 64))
(declare-fun ARGNAME_label_smoothing_NAMEEND () (_ BitVec 64))
(declare-fun var1051085 () (_ BitVec 64))
(declare-fun temp58_30 () (_ BitVec 64))
(declare-fun temp58_32 () (_ BitVec 64))
(declare-fun temp58_31 () (_ BitVec 64))
(declare-fun temp58_33 () (_ BitVec 64))
(declare-fun var1048944 () (_ BitVec 64))
(declare-fun temp58_34 () (_ BitVec 64))
(declare-fun temp58_35 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp58_36 () (_ BitVec 64))
(declare-fun temp58_37 () (_ BitVec 64))
(declare-fun temp58_38 () (_ BitVec 64))
(declare-fun temp58_39 () (_ BitVec 64))
(declare-fun temp58_40 () (_ BitVec 64))
(declare-fun temp58_41 () (_ BitVec 64))
(declare-fun temp58_42 () (_ BitVec 64))
(declare-fun temp58_43 () (_ BitVec 64))
(declare-fun temp58_44 () (_ BitVec 64))
(declare-fun temp58_45 () (_ BitVec 64))
(declare-fun temp58_46 () (_ BitVec 64))
(declare-fun temp58_47 () (_ BitVec 64))
(declare-fun temp58_48 () (_ BitVec 64))
(declare-fun temp58_49 () (_ BitVec 64))
(declare-fun temp58_50 () (_ BitVec 64))
(declare-fun temp58_51 () (_ BitVec 64))
(declare-fun temp58_52 () (_ BitVec 64))
(declare-fun temp58_53 () (_ BitVec 64))
(declare-fun temp58_54 () (_ BitVec 64))
(declare-fun var1051233 () (_ BitVec 64))
(declare-fun temp58_55 () (_ BitVec 64))
(declare-fun var1969577 () (_ BitVec 64))
(declare-fun temp58_56 () (_ BitVec 64))
(declare-fun ARGNAME_reduction_NAMEEND () (_ BitVec 64))
(assert (= var267855
   (ite (= ARGNAME_input_NAMEEND_DIM ARGNAME_target_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_1 #x0000000000000001))
(assert (= var267855 temp58_1))
(assert (= temp58_2 #x0000000000000000))
(assert (= var70799
   (ite (bvslt ARGNAME_ignore_index_NAMEEND temp58_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_3 #x0000000000000001))
(assert (= var70799 temp58_3))
(assert (= temp58_4 #x0000000000000001))
(assert (= var1051017
   (ite (distinct ARGNAME_input_NAMEEND_DIM temp58_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1051020 var1051017))
(assert (= temp58_5 #x0000000000000000))
(assert (= temp58_6 temp58_5))
(assert (= temp58_7 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_6)))
(assert (= temp58_8 #x0000000000000001))
(assert (= temp58_9 temp58_8))
(assert (= temp58_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_9)))
(assert (= temp58_11 #x0000000000000002))
(assert (= temp58_12 temp58_11))
(assert (= temp58_13 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_12)))
(assert (= temp58_14 #x0000000000000003))
(assert (= temp58_15 temp58_14))
(assert (= temp58_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_15)))
(assert (= temp58_17 #x0000000000000004))
(assert (= temp58_18 temp58_17))
(assert (= temp58_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_18)))
(assert (= temp58_20 #x0000000000000005))
(assert (= temp58_21 temp58_20))
(assert (= temp58_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_21)))
(assert (= temp58_23 #x0000000000000000))
(assert (= temp58_24
   (ite (bvslt var1051020 temp58_23)
        (bvadd ARGNAME_input_NAMEEND_DIM var1051020)
        var1051020)))
(assert (= temp58_25 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_24)))
(assert (= var1051021 temp58_25))
(assert (bvslt (ite (bvslt var1051020 temp58_23)
            (bvadd ARGNAME_input_NAMEEND_DIM var1051020)
            var1051020)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp58_26 #x0000000000000001))
(assert (= var1051027
   (ite (= ARGNAME_weight_NAMEEND_DIM temp58_26)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_27 #x0000000000000001))
(assert (= var1051027 temp58_27))
(assert (= var1051030 var1051021))
(assert (= var1051031
   (ite (= ARGNAME_weight_NAMEEND_NUMELEMENT var1051030)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_28 #x0000000000000001))
(assert (= var1051031 temp58_28))
(assert (= var1314113 var1051020))
(assert (= temp58_29 #x0000000000000000))
(assert (= var1051085
   (ite (bvsgt ARGNAME_label_smoothing_NAMEEND temp58_29)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_30 #x0000000000000000))
(assert (= var1051085 temp58_30))
(assert (= temp58_32 #x0000000000000001))
(assert (= temp58_31 temp58_32))
(assert (= temp58_33 #x0000000000000000))
(assert (= var1048944 temp58_33))
(assert (= temp58_34 #x0000000000000000))
(assert (= temp58_35 temp58_34))
(assert (= temp58_36 (select ARGNAME_weight_NAMEEND_DIMSIZE temp58_35)))
(assert (= temp58_37 #x0000000000000001))
(assert (= temp58_38 temp58_37))
(assert (= temp58_39 (select ARGNAME_weight_NAMEEND_DIMSIZE temp58_38)))
(assert (= temp58_40 #x0000000000000002))
(assert (= temp58_41 temp58_40))
(assert (= temp58_42 (select ARGNAME_weight_NAMEEND_DIMSIZE temp58_41)))
(assert (= temp58_43 #x0000000000000003))
(assert (= temp58_44 temp58_43))
(assert (= temp58_45 (select ARGNAME_weight_NAMEEND_DIMSIZE temp58_44)))
(assert (= temp58_46 #x0000000000000004))
(assert (= temp58_47 temp58_46))
(assert (= temp58_48 (select ARGNAME_weight_NAMEEND_DIMSIZE temp58_47)))
(assert (= temp58_49 #x0000000000000005))
(assert (= temp58_50 temp58_49))
(assert (= temp58_51 (select ARGNAME_weight_NAMEEND_DIMSIZE temp58_50)))
(assert (= temp58_52 #x0000000000000000))
(assert (= temp58_53
   (ite (bvslt var1048944 temp58_52)
        (bvadd ARGNAME_weight_NAMEEND_DIM var1048944)
        var1048944)))
(assert (= temp58_54 (select ARGNAME_weight_NAMEEND_DIMSIZE temp58_53)))
(assert (= var1051233 temp58_54))
(assert (bvslt (ite (bvslt var1048944 temp58_52)
            (bvadd ARGNAME_weight_NAMEEND_DIM var1048944)
            var1048944)
       ARGNAME_weight_NAMEEND_DIM))
(assert (= temp58_55 #x0000000000000001))
(assert (= var1969577 temp58_55))
(assert (= temp58_56 #x0000000000000001))
(assert (or false (= ARGNAME_reduction_NAMEEND temp58_56)))
(model-add temp58_1 () (_ BitVec 64) #x0000000000000001)
(model-add var267855 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0
                ARGNAME_target_NAMEEND_DIM
                (bvnot ARGNAME_target_NAMEEND_DIM)))





