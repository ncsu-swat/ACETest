(declare-fun temp608_1 () (_ BitVec 64))
(declare-fun var267855 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_target_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp608_2 () (_ BitVec 64))
(declare-fun ARGNAME_label_smoothing_NAMEEND () (_ BitVec 64))
(declare-fun var70865 () (_ BitVec 64))
(declare-fun temp608_3 () (_ BitVec 64))
(declare-fun temp608_4 () (_ BitVec 64))
(declare-fun var70867 () (_ BitVec 64))
(declare-fun temp608_5 () (_ BitVec 64))
(declare-fun temp608_6 () (_ BitVec 64))
(declare-fun var921507 () (_ BitVec 64))
(declare-fun var921510 () (_ BitVec 64))
(declare-fun var1117505 () (_ BitVec 64))
(declare-fun temp608_7 () (_ BitVec 64))
(declare-fun var2362881 () (_ BitVec 64))
(declare-fun temp608_9 () (_ BitVec 64))
(declare-fun temp608_8 () (_ BitVec 64))
(declare-fun temp608_10 () (_ BitVec 64))
(declare-fun var3216147 () (_ BitVec 64))
(declare-fun temp608_11 () (_ BitVec 64))
(declare-fun temp608_12 () (_ BitVec 64))
(declare-fun var3216148 () (_ BitVec 64))
(declare-fun var3216155 () (_ BitVec 64))
(declare-fun var3216161 () (_ BitVec 64))
(declare-fun temp608_13 () (_ BitVec 64))
(declare-fun var3216162 () (_ BitVec 64))
(declare-fun temp608_14 () (_ BitVec 64))
(declare-fun temp608_15 () (_ BitVec 64))
(declare-fun var3216163 () (_ BitVec 64))
(declare-fun var3216170 () (_ BitVec 64))
(declare-fun temp608_17 () (_ BitVec 64))
(declare-fun temp608_16 () (_ BitVec 64))
(declare-fun temp608_18 () (_ BitVec 64))
(declare-fun ARGNAME_reduction_NAMEEND () (_ BitVec 64))
(assert (= var267855
   (ite (= ARGNAME_input_NAMEEND_DIM ARGNAME_target_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp608_1 #x0000000000000001))
(assert (= var267855 temp608_1))
(assert (= temp608_2 #x0000000000000000))
(assert (= var70865
   (ite (bvsgt ARGNAME_label_smoothing_NAMEEND temp608_2)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp608_3 #x0000000000000001))
(assert (= var70865 temp608_3))
(assert (= temp608_4 #x0000000000000001))
(assert (= var70867
   (ite (bvsgt ARGNAME_label_smoothing_NAMEEND temp608_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp608_5 #x0000000000000000))
(assert (= var70867 temp608_5))
(assert (= temp608_6 #x0000000000000001))
(assert (= var921507
   (ite (distinct ARGNAME_input_NAMEEND_DIM temp608_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var921510 var921507))
(assert (= var1117505 var921510))
(assert (= temp608_7 #x0000000000000000))
(assert (= var2362881 temp608_7))
(assert (= temp608_9 #x0000000000000001))
(assert (= temp608_8 temp608_9))
(assert (= temp608_10 #x0000000000000000))
(assert (= var3216147
   (ite (bvslt temp608_8 temp608_10) #x0000000000000001 #x0000000000000000)))
(assert (= temp608_11 #xffffffffffffffff))
(assert (= temp608_12 #x0000000000000000))
(assert (= var3216148 (ite (= var3216147 #x0000000000000001) temp608_11 temp608_12)))
(assert (= var3216155 var3216148))
(assert (= var3216161 var3216155))
(assert (= temp608_13 #x0000000000000000))
(assert (= var3216162
   (ite (bvslt var3216161 temp608_13) #x0000000000000001 #x0000000000000000)))
(assert (= temp608_14 #x0000000000000000))
(assert (= temp608_15 #xffffffffffffffff))
(assert (= var3216163 (ite (= var3216162 #x0000000000000001) temp608_14 temp608_15)))
(assert (= var3216170 var3216163))
(assert (= temp608_17 #x0000000000000005))
(assert (= temp608_16 temp608_17))
(assert (= temp608_18 #x0000000000000001))
(assert (or false (= ARGNAME_reduction_NAMEEND temp608_18)))
(model-add temp608_1 () (_ BitVec 64) #x0000000000000001)
(model-add var267855 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0
                ARGNAME_target_NAMEEND_DIM
                (bvnot ARGNAME_target_NAMEEND_DIM)))





