(declare-fun temp256_1 () (_ BitVec 64))
(declare-fun var397898 () (_ BitVec 64))
(declare-fun var397900 () (_ BitVec 64))
(declare-fun temp256_3 () (_ BitVec 64))
(declare-fun temp256_2 () (_ BitVec 64))
(declare-fun temp256_4 () (_ BitVec 64))
(declare-fun var1063364 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_shape_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp256_5 () (_ BitVec 64))
(declare-fun temp256_6 () (_ BitVec 64))
(declare-fun ARGNAME_shape_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp256_7 () (_ BitVec 64))
(declare-fun temp256_8 () (_ BitVec 64))
(declare-fun temp256_9 () (_ BitVec 64))
(declare-fun temp256_10 () (_ BitVec 64))
(declare-fun temp256_11 () (_ BitVec 64))
(declare-fun temp256_12 () (_ BitVec 64))
(declare-fun temp256_13 () (_ BitVec 64))
(declare-fun temp256_14 () (_ BitVec 64))
(declare-fun temp256_15 () (_ BitVec 64))
(declare-fun temp256_16 () (_ BitVec 64))
(declare-fun temp256_17 () (_ BitVec 64))
(declare-fun temp256_18 () (_ BitVec 64))
(declare-fun temp256_19 () (_ BitVec 64))
(declare-fun temp256_20 () (_ BitVec 64))
(declare-fun temp256_21 () (_ BitVec 64))
(declare-fun temp256_22 () (_ BitVec 64))
(declare-fun var1063371 () (_ BitVec 64))
(declare-fun temp256_24 () (_ BitVec 64))
(declare-fun temp256_25 () (_ BitVec 64))
(declare-fun temp256_23 () (_ BitVec 64))
(declare-fun temp256_26 () (_ BitVec 64))
(declare-fun var1063376 () (_ BitVec 64))
(declare-fun temp256_27 () (_ BitVec 64))
(declare-fun temp256_28 () (_ BitVec 64))
(declare-fun var1063372 () (_ BitVec 64))
(declare-fun var1063441 () (_ BitVec 64))
(declare-fun temp256_30 () (_ BitVec 64))
(declare-fun var1772204 () (_ BitVec 64))
(declare-fun var1772212 () (_ BitVec 64))
(assert (= temp256_1 #x0000000000000005))
(assert (= var397898 temp256_1))
(assert (= var397900 var397898))
(assert (= temp256_3 #x0000000000000000))
(assert (= temp256_2 temp256_3))
(assert (= var1063364
   (ite (= temp256_2 ARGNAME_shape_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp256_4 #x0000000000000000))
(assert (= var1063364 temp256_4))
(assert (= temp256_5 #x0000000000000000))
(assert (= temp256_6 temp256_5))
(assert (= temp256_7 (select ARGNAME_shape_NAMEEND_VAL temp256_6)))
(assert (= temp256_8 #x0000000000000001))
(assert (= temp256_9 temp256_8))
(assert (= temp256_10 (select ARGNAME_shape_NAMEEND_VAL temp256_9)))
(assert (= temp256_11 #x0000000000000002))
(assert (= temp256_12 temp256_11))
(assert (= temp256_13 (select ARGNAME_shape_NAMEEND_VAL temp256_12)))
(assert (= temp256_14 #x0000000000000003))
(assert (= temp256_15 temp256_14))
(assert (= temp256_16 (select ARGNAME_shape_NAMEEND_VAL temp256_15)))
(assert (= temp256_17 #x0000000000000004))
(assert (= temp256_18 temp256_17))
(assert (= temp256_19 (select ARGNAME_shape_NAMEEND_VAL temp256_18)))
(assert (= temp256_20 #x0000000000000005))
(assert (= temp256_21 temp256_20))
(assert (= temp256_22 (select ARGNAME_shape_NAMEEND_VAL temp256_21)))
(assert (= temp256_24 var1063371))
(assert (= temp256_25 (select ARGNAME_shape_NAMEEND_VAL temp256_24)))
(assert (= temp256_23 temp256_25))
(assert (= temp256_26 #xffffffffffffffff))
(assert (= var1063376
   (ite (= temp256_23 temp256_26) #x0000000000000001 #x0000000000000000)))
(assert (= temp256_27 #x0000000000000001))
(assert (= var1063376 temp256_27))
(assert (= temp256_28 #x0000000000000001))
(assert (= var1063372 (bvadd temp256_2 temp256_28)))
(assert (= var1063441
   (ite (= var1063372 ARGNAME_shape_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp256_30 #x0000000000000001))
(assert (= var1772204 temp256_30))
(assert (= var1772212 var1772204))
(model-add temp256_1 () (_ BitVec 64) #x0000000000000005)
(model-add var397898 () (_ BitVec 64) #x0000000000000005)
(model-add var397900 () (_ BitVec 64) #x0000000000000005)
(model-add temp256_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp256_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp256_4 () (_ BitVec 64) #x0000000000000000)
(model-add var1063364 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_shape_NAMEEND_LEN
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))






