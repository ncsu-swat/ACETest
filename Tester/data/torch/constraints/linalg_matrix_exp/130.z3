(declare-fun temp247_1 () (_ BitVec 64))
(declare-fun temp247_2 () (_ BitVec 64))
(declare-fun var201811 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp247_3 () (_ BitVec 64))
(declare-fun var136001 () (_ BitVec 64))
(declare-fun temp247_4 () (_ BitVec 64))
(declare-fun temp247_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp247_6 () (_ BitVec 64))
(declare-fun temp247_7 () (_ BitVec 64))
(declare-fun temp247_8 () (_ BitVec 64))
(declare-fun temp247_9 () (_ BitVec 64))
(declare-fun temp247_10 () (_ BitVec 64))
(declare-fun temp247_11 () (_ BitVec 64))
(declare-fun temp247_12 () (_ BitVec 64))
(declare-fun temp247_13 () (_ BitVec 64))
(declare-fun temp247_14 () (_ BitVec 64))
(declare-fun temp247_15 () (_ BitVec 64))
(declare-fun temp247_16 () (_ BitVec 64))
(declare-fun temp247_17 () (_ BitVec 64))
(declare-fun temp247_18 () (_ BitVec 64))
(declare-fun temp247_19 () (_ BitVec 64))
(declare-fun temp247_20 () (_ BitVec 64))
(declare-fun temp247_21 () (_ BitVec 64))
(declare-fun temp247_22 () (_ BitVec 64))
(declare-fun temp247_23 () (_ BitVec 64))
(declare-fun temp247_24 () (_ BitVec 64))
(declare-fun var136000 () (_ BitVec 64))
(declare-fun temp247_25 () (_ BitVec 64))
(declare-fun var136003 () (_ BitVec 64))
(declare-fun temp247_26 () (_ BitVec 64))
(declare-fun temp247_27 () (_ BitVec 64))
(declare-fun temp247_28 () (_ BitVec 64))
(declare-fun var136002 () (_ BitVec 64))
(declare-fun var136004 () (_ BitVec 64))
(declare-fun temp247_29 () (_ BitVec 64))
(declare-fun temp247_30 () (_ BitVec 64))
(declare-fun var265930 () (_ BitVec 64))
(declare-fun temp247_31 () (_ BitVec 64))
(declare-fun temp247_32 () (_ BitVec 64))
(declare-fun var70465 () (_ BitVec 64))
(declare-fun temp247_33 () (_ BitVec 64))
(declare-fun temp247_34 () (_ BitVec 64))
(declare-fun temp247_35 () (_ BitVec 64))
(declare-fun var83043 () (_ BitVec 64))
(declare-fun temp247_36 () (_ BitVec 64))
(declare-fun temp247_37 () (_ BitVec 64))
(declare-fun temp247_39 () (_ BitVec 64))
(declare-fun temp247_38 () (_ BitVec 64))
(declare-fun temp247_40 () (_ BitVec 64))
(declare-fun var463683 () (_ BitVec 64))
(declare-fun temp247_41 () (_ BitVec 64))
(declare-fun temp247_42 () (_ BitVec 64))
(declare-fun temp247_43 () (_ BitVec 64))
(declare-fun var476302 () (_ BitVec 64))
(declare-fun temp247_44 () (_ BitVec 64))
(declare-fun var463681 () (_ BitVec 64))
(declare-fun temp247_45 () (_ BitVec 64))
(declare-fun temp247_46 () (_ BitVec 64))
(declare-fun temp247_47 () (_ BitVec 64))
(declare-fun var476305 () (_ BitVec 64))
(declare-fun temp247_49 () (_ BitVec 64))
(declare-fun temp247_48 () (_ BitVec 64))
(declare-fun temp247_51 () (_ BitVec 64))
(declare-fun temp247_50 () (_ BitVec 64))
(declare-fun temp247_52 () (_ BitVec 64))
(declare-fun var1710339 () (_ BitVec 64))
(declare-fun temp247_53 () (_ BitVec 64))
(declare-fun var1789463 () (_ BitVec 64))
(declare-fun temp247_54 () (_ BitVec 64))
(declare-fun var1789464 () (_ BitVec 64))
(declare-fun temp247_55 () (_ BitVec 64))
(declare-fun var804252 () (_ BitVec 64))
(declare-fun temp247_56 () (_ BitVec 64))
(declare-fun var804254 () (_ BitVec 64))
(declare-fun temp247_57 () (_ BitVec 64))
(declare-fun var2248254 () (_ BitVec 64))
(declare-fun temp247_58 () (_ BitVec 64))
(declare-fun var2705385 () (_ BitVec 64))
(declare-fun temp247_59 () (_ BitVec 64))
(declare-fun var3619375 () (_ BitVec 64))
(declare-fun temp247_60 () (_ BitVec 64))
(declare-fun var3619376 () (_ BitVec 64))
(declare-fun temp247_61 () (_ BitVec 64))
(declare-fun var3688478 () (_ BitVec 64))
(declare-fun temp247_63 () (_ BitVec 64))
(declare-fun temp247_62 () (_ BitVec 64))
(declare-fun temp247_64 () (_ BitVec 64))
(declare-fun var804253 () (_ BitVec 64))
(declare-fun temp247_65 () (_ BitVec 64))
(declare-fun var804476 () (_ BitVec 64))
(declare-fun temp247_67 () (_ BitVec 64))
(declare-fun var4410942 () (_ BitVec 64))
(declare-fun temp247_68 () (_ BitVec 64))
(declare-fun var4671465 () (_ BitVec 64))
(assert (= temp247_1 #x0000000000000002))
(assert (= var201811
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp247_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp247_2 #x0000000000000000))
(assert (= var201811 temp247_2))
(assert (= temp247_3 #xffffffffffffffff))
(assert (= var136001 temp247_3))
(assert (= temp247_4 #x0000000000000000))
(assert (= temp247_5 temp247_4))
(assert (= temp247_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp247_5)))
(assert (= temp247_7 #x0000000000000001))
(assert (= temp247_8 temp247_7))
(assert (= temp247_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp247_8)))
(assert (= temp247_10 #x0000000000000002))
(assert (= temp247_11 temp247_10))
(assert (= temp247_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp247_11)))
(assert (= temp247_13 #x0000000000000003))
(assert (= temp247_14 temp247_13))
(assert (= temp247_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp247_14)))
(assert (= temp247_16 #x0000000000000004))
(assert (= temp247_17 temp247_16))
(assert (= temp247_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp247_17)))
(assert (= temp247_19 #x0000000000000005))
(assert (= temp247_20 temp247_19))
(assert (= temp247_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp247_20)))
(assert (= temp247_22 #x0000000000000000))
(assert (= temp247_23
   (ite (bvslt var136001 temp247_22)
        (bvadd ARGNAME_input_NAMEEND_DIM var136001)
        var136001)))
(assert (= temp247_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp247_23)))
(assert (= var136000 temp247_24))
(assert (bvslt (ite (bvslt var136001 temp247_22)
            (bvadd ARGNAME_input_NAMEEND_DIM var136001)
            var136001)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp247_25 #xfffffffffffffffe))
(assert (= var136003 temp247_25))
(assert (= temp247_26 #x0000000000000000))
(assert (= temp247_27
   (ite (bvslt var136003 temp247_26)
        (bvadd ARGNAME_input_NAMEEND_DIM var136003)
        var136003)))
(assert (= temp247_28 (select ARGNAME_input_NAMEEND_DIMSIZE temp247_27)))
(assert (= var136002 temp247_28))
(assert (bvslt (ite (bvslt var136003 temp247_26)
            (bvadd ARGNAME_input_NAMEEND_DIM var136003)
            var136003)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var136004
   (ite (= var136000 var136002) #x0000000000000001 #x0000000000000000)))
(assert (= temp247_29 #x0000000000000001))
(assert (= var136004 temp247_29))
(assert (= temp247_30 #x0000000000000001))
(assert (= var265930 temp247_30))
(assert (= temp247_31 #x0000000000000001))
(assert (= var265930 temp247_31))
(assert (= temp247_32 #xffffffffffffffff))
(assert (= var70465 temp247_32))
(assert (= temp247_33 #x0000000000000000))
(assert (= temp247_34
   (ite (bvslt var70465 temp247_33)
        (bvadd ARGNAME_input_NAMEEND_DIM var70465)
        var70465)))
(assert (= temp247_35 (select ARGNAME_input_NAMEEND_DIMSIZE temp247_34)))
(assert (= var83043 temp247_35))
(assert (bvslt (ite (bvslt var70465 temp247_33)
            (bvadd ARGNAME_input_NAMEEND_DIM var70465)
            var70465)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp247_36 #x0000000000000000))
(assert (distinct var83043 temp247_36))
(assert (= temp247_37 #x0000000000000001))
(assert (distinct var83043 temp247_37))
(assert (= temp247_39 #xffffffffffffffff))
(assert (= temp247_38 temp247_39))
(assert (= temp247_40 #xfffffffffffffffe))
(assert (= var463683 temp247_40))
(assert (= temp247_41 #x0000000000000000))
(assert (= temp247_42
   (ite (bvslt var463683 temp247_41)
        (bvadd ARGNAME_input_NAMEEND_DIM var463683)
        var463683)))
(assert (= temp247_43 (select ARGNAME_input_NAMEEND_DIMSIZE temp247_42)))
(assert (= var476302 temp247_43))
(assert (bvslt (ite (bvslt var463683 temp247_41)
            (bvadd ARGNAME_input_NAMEEND_DIM var463683)
            var463683)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp247_44 #xffffffffffffffff))
(assert (= var463681 temp247_44))
(assert (= temp247_45 #x0000000000000000))
(assert (= temp247_46
   (ite (bvslt var463681 temp247_45)
        (bvadd ARGNAME_input_NAMEEND_DIM var463681)
        var463681)))
(assert (= temp247_47 (select ARGNAME_input_NAMEEND_DIMSIZE temp247_46)))
(assert (= var476305 temp247_47))
(assert (bvslt (ite (bvslt var463681 temp247_45)
            (bvadd ARGNAME_input_NAMEEND_DIM var463681)
            var463681)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp247_49 #x0000000000000003))
(assert (= temp247_48 temp247_49))
(assert (= temp247_51 #xfffffffffffffffe))
(assert (= temp247_50 temp247_51))
(assert (= temp247_52 #x0000000000000000))
(assert (= var1710339 temp247_52))
(assert (= temp247_53 #xffffffffffffffff))
(assert (= var1789463 temp247_53))
(assert (= temp247_54 #x0000000000000000))
(assert (= var1789464 temp247_54))
(assert (= temp247_55 #x0000000000000000))
(assert (= var804252 temp247_55))
(assert (= temp247_56 #x0000000000000000))
(assert (= var804254
   (ite (= var804252 temp247_56) #x0000000000000001 #x0000000000000000)))
(assert (= temp247_57 #x0000000000000001))
(assert (= var804254 temp247_57))
(assert (= var2248254 var804252))
(assert (= temp247_58 #xffffffffffffffff))
(assert (= var2705385 temp247_58))
(assert (= temp247_59 #x0000000000000000))
(assert (= var3619375 temp247_59))
(assert (= temp247_60 #x0000000000000000))
(assert (= var3619376 temp247_60))
(assert (= temp247_61 #x0000000000000000))
(assert (= var3688478 temp247_61))
(assert (= temp247_63 #x0000000000000005))
(assert (= temp247_62 temp247_63))
(assert (= temp247_64 #x0000000000000001))
(assert (= var804253 (bvadd var804252 temp247_64)))
(assert (= temp247_65 #x0000000000000005))
(assert (= var804476
   (ite (= var804253 temp247_65) #x0000000000000001 #x0000000000000000)))
(assert (= temp247_67 #x0000000000000004))
(assert (= var4410942 temp247_67))
(assert (= temp247_68 #xffffffffffffffff))
(assert (= var4671465 temp247_68))
(model-add temp247_1 () (_ BitVec 64) #x0000000000000002)
(model-add temp247_2 () (_ BitVec 64) #x0000000000000000)
(model-add var201811 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000002 #x8000000000000000))
                #x0000000000000002
                (bvsub #x0000000000000002 #x0000000000000001)))






