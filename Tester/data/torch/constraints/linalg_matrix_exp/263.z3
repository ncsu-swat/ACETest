(declare-fun temp812_1 () (_ BitVec 64))
(declare-fun temp812_2 () (_ BitVec 64))
(declare-fun var201811 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp812_3 () (_ BitVec 64))
(declare-fun var136001 () (_ BitVec 64))
(declare-fun temp812_4 () (_ BitVec 64))
(declare-fun temp812_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp812_6 () (_ BitVec 64))
(declare-fun temp812_7 () (_ BitVec 64))
(declare-fun temp812_8 () (_ BitVec 64))
(declare-fun temp812_9 () (_ BitVec 64))
(declare-fun temp812_10 () (_ BitVec 64))
(declare-fun temp812_11 () (_ BitVec 64))
(declare-fun temp812_12 () (_ BitVec 64))
(declare-fun temp812_13 () (_ BitVec 64))
(declare-fun temp812_14 () (_ BitVec 64))
(declare-fun temp812_15 () (_ BitVec 64))
(declare-fun temp812_16 () (_ BitVec 64))
(declare-fun temp812_17 () (_ BitVec 64))
(declare-fun temp812_18 () (_ BitVec 64))
(declare-fun temp812_19 () (_ BitVec 64))
(declare-fun temp812_20 () (_ BitVec 64))
(declare-fun temp812_21 () (_ BitVec 64))
(declare-fun temp812_22 () (_ BitVec 64))
(declare-fun temp812_23 () (_ BitVec 64))
(declare-fun temp812_24 () (_ BitVec 64))
(declare-fun var136000 () (_ BitVec 64))
(declare-fun temp812_25 () (_ BitVec 64))
(declare-fun var136003 () (_ BitVec 64))
(declare-fun temp812_26 () (_ BitVec 64))
(declare-fun temp812_27 () (_ BitVec 64))
(declare-fun temp812_28 () (_ BitVec 64))
(declare-fun var136002 () (_ BitVec 64))
(declare-fun var136004 () (_ BitVec 64))
(declare-fun temp812_29 () (_ BitVec 64))
(declare-fun temp812_30 () (_ BitVec 64))
(declare-fun var265930 () (_ BitVec 64))
(declare-fun temp812_31 () (_ BitVec 64))
(declare-fun temp812_32 () (_ BitVec 64))
(declare-fun var70465 () (_ BitVec 64))
(declare-fun temp812_33 () (_ BitVec 64))
(declare-fun temp812_34 () (_ BitVec 64))
(declare-fun temp812_35 () (_ BitVec 64))
(declare-fun var83043 () (_ BitVec 64))
(declare-fun temp812_36 () (_ BitVec 64))
(declare-fun temp812_37 () (_ BitVec 64))
(declare-fun temp812_39 () (_ BitVec 64))
(declare-fun temp812_38 () (_ BitVec 64))
(declare-fun temp812_40 () (_ BitVec 64))
(declare-fun var529219 () (_ BitVec 64))
(declare-fun temp812_41 () (_ BitVec 64))
(declare-fun temp812_42 () (_ BitVec 64))
(declare-fun temp812_43 () (_ BitVec 64))
(declare-fun var541838 () (_ BitVec 64))
(declare-fun temp812_44 () (_ BitVec 64))
(declare-fun var529217 () (_ BitVec 64))
(declare-fun temp812_45 () (_ BitVec 64))
(declare-fun temp812_46 () (_ BitVec 64))
(declare-fun temp812_47 () (_ BitVec 64))
(declare-fun var541841 () (_ BitVec 64))
(declare-fun temp812_49 () (_ BitVec 64))
(declare-fun temp812_48 () (_ BitVec 64))
(declare-fun temp812_51 () (_ BitVec 64))
(declare-fun temp812_50 () (_ BitVec 64))
(declare-fun temp812_52 () (_ BitVec 64))
(declare-fun var1775875 () (_ BitVec 64))
(declare-fun temp812_53 () (_ BitVec 64))
(declare-fun var1854999 () (_ BitVec 64))
(declare-fun temp812_54 () (_ BitVec 64))
(declare-fun var1855000 () (_ BitVec 64))
(declare-fun temp812_55 () (_ BitVec 64))
(declare-fun var2439727 () (_ BitVec 64))
(declare-fun temp812_56 () (_ BitVec 64))
(declare-fun var2439728 () (_ BitVec 64))
(declare-fun temp812_57 () (_ BitVec 64))
(declare-fun var869788 () (_ BitVec 64))
(declare-fun temp812_58 () (_ BitVec 64))
(declare-fun var869790 () (_ BitVec 64))
(declare-fun temp812_59 () (_ BitVec 64))
(declare-fun var2903614 () (_ BitVec 64))
(declare-fun temp812_60 () (_ BitVec 64))
(declare-fun var3360745 () (_ BitVec 64))
(declare-fun temp812_61 () (_ BitVec 64))
(declare-fun var4016158 () (_ BitVec 64))
(declare-fun temp812_63 () (_ BitVec 64))
(declare-fun temp812_62 () (_ BitVec 64))
(declare-fun temp812_64 () (_ BitVec 64))
(declare-fun var869789 () (_ BitVec 64))
(declare-fun temp812_65 () (_ BitVec 64))
(declare-fun var870012 () (_ BitVec 64))
(declare-fun temp812_67 () (_ BitVec 64))
(declare-fun var4738622 () (_ BitVec 64))
(declare-fun temp812_68 () (_ BitVec 64))
(declare-fun var4999145 () (_ BitVec 64))
(assert (= temp812_1 #x0000000000000002))
(assert (= var201811
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp812_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp812_2 #x0000000000000000))
(assert (= var201811 temp812_2))
(assert (= temp812_3 #xffffffffffffffff))
(assert (= var136001 temp812_3))
(assert (= temp812_4 #x0000000000000000))
(assert (= temp812_5 temp812_4))
(assert (= temp812_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp812_5)))
(assert (= temp812_7 #x0000000000000001))
(assert (= temp812_8 temp812_7))
(assert (= temp812_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp812_8)))
(assert (= temp812_10 #x0000000000000002))
(assert (= temp812_11 temp812_10))
(assert (= temp812_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp812_11)))
(assert (= temp812_13 #x0000000000000003))
(assert (= temp812_14 temp812_13))
(assert (= temp812_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp812_14)))
(assert (= temp812_16 #x0000000000000004))
(assert (= temp812_17 temp812_16))
(assert (= temp812_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp812_17)))
(assert (= temp812_19 #x0000000000000005))
(assert (= temp812_20 temp812_19))
(assert (= temp812_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp812_20)))
(assert (= temp812_22 #x0000000000000000))
(assert (= temp812_23
   (ite (bvslt var136001 temp812_22)
        (bvadd ARGNAME_input_NAMEEND_DIM var136001)
        var136001)))
(assert (= temp812_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp812_23)))
(assert (= var136000 temp812_24))
(assert (bvslt (ite (bvslt var136001 temp812_22)
            (bvadd ARGNAME_input_NAMEEND_DIM var136001)
            var136001)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp812_25 #xfffffffffffffffe))
(assert (= var136003 temp812_25))
(assert (= temp812_26 #x0000000000000000))
(assert (= temp812_27
   (ite (bvslt var136003 temp812_26)
        (bvadd ARGNAME_input_NAMEEND_DIM var136003)
        var136003)))
(assert (= temp812_28 (select ARGNAME_input_NAMEEND_DIMSIZE temp812_27)))
(assert (= var136002 temp812_28))
(assert (bvslt (ite (bvslt var136003 temp812_26)
            (bvadd ARGNAME_input_NAMEEND_DIM var136003)
            var136003)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var136004
   (ite (= var136000 var136002) #x0000000000000001 #x0000000000000000)))
(assert (= temp812_29 #x0000000000000001))
(assert (= var136004 temp812_29))
(assert (= temp812_30 #x0000000000000001))
(assert (= var265930 temp812_30))
(assert (= temp812_31 #x0000000000000001))
(assert (= var265930 temp812_31))
(assert (= temp812_32 #xffffffffffffffff))
(assert (= var70465 temp812_32))
(assert (= temp812_33 #x0000000000000000))
(assert (= temp812_34
   (ite (bvslt var70465 temp812_33)
        (bvadd ARGNAME_input_NAMEEND_DIM var70465)
        var70465)))
(assert (= temp812_35 (select ARGNAME_input_NAMEEND_DIMSIZE temp812_34)))
(assert (= var83043 temp812_35))
(assert (bvslt (ite (bvslt var70465 temp812_33)
            (bvadd ARGNAME_input_NAMEEND_DIM var70465)
            var70465)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp812_36 #x0000000000000000))
(assert (distinct var83043 temp812_36))
(assert (= temp812_37 #x0000000000000001))
(assert (distinct var83043 temp812_37))
(assert (= temp812_39 #xffffffffffffffff))
(assert (= temp812_38 temp812_39))
(assert (= temp812_40 #xfffffffffffffffe))
(assert (= var529219 temp812_40))
(assert (= temp812_41 #x0000000000000000))
(assert (= temp812_42
   (ite (bvslt var529219 temp812_41)
        (bvadd ARGNAME_input_NAMEEND_DIM var529219)
        var529219)))
(assert (= temp812_43 (select ARGNAME_input_NAMEEND_DIMSIZE temp812_42)))
(assert (= var541838 temp812_43))
(assert (bvslt (ite (bvslt var529219 temp812_41)
            (bvadd ARGNAME_input_NAMEEND_DIM var529219)
            var529219)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp812_44 #xffffffffffffffff))
(assert (= var529217 temp812_44))
(assert (= temp812_45 #x0000000000000000))
(assert (= temp812_46
   (ite (bvslt var529217 temp812_45)
        (bvadd ARGNAME_input_NAMEEND_DIM var529217)
        var529217)))
(assert (= temp812_47 (select ARGNAME_input_NAMEEND_DIMSIZE temp812_46)))
(assert (= var541841 temp812_47))
(assert (bvslt (ite (bvslt var529217 temp812_45)
            (bvadd ARGNAME_input_NAMEEND_DIM var529217)
            var529217)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp812_49 #x0000000000000003))
(assert (= temp812_48 temp812_49))
(assert (= temp812_51 #xfffffffffffffffe))
(assert (= temp812_50 temp812_51))
(assert (= temp812_52 #x0000000000000000))
(assert (= var1775875 temp812_52))
(assert (= temp812_53 #xffffffffffffffff))
(assert (= var1854999 temp812_53))
(assert (= temp812_54 #x0000000000000000))
(assert (= var1855000 temp812_54))
(assert (= temp812_55 #x0000000000000000))
(assert (= var2439727 temp812_55))
(assert (= temp812_56 #x0000000000000000))
(assert (= var2439728 temp812_56))
(assert (= temp812_57 #x0000000000000000))
(assert (= var869788 temp812_57))
(assert (= temp812_58 #x0000000000000000))
(assert (= var869790
   (ite (= var869788 temp812_58) #x0000000000000001 #x0000000000000000)))
(assert (= temp812_59 #x0000000000000001))
(assert (= var869790 temp812_59))
(assert (= var2903614 var869788))
(assert (= temp812_60 #xffffffffffffffff))
(assert (= var3360745 temp812_60))
(assert (= temp812_61 #x0000000000000000))
(assert (= var4016158 temp812_61))
(assert (= temp812_63 #x0000000000000005))
(assert (= temp812_62 temp812_63))
(assert (= temp812_64 #x0000000000000001))
(assert (= var869789 (bvadd var869788 temp812_64)))
(assert (= temp812_65 #x0000000000000005))
(assert (= var870012
   (ite (= var869789 temp812_65) #x0000000000000001 #x0000000000000000)))
(assert (= temp812_67 #x0000000000000004))
(assert (= var4738622 temp812_67))
(assert (= temp812_68 #xffffffffffffffff))
(assert (= var4999145 temp812_68))
(model-add temp812_1 () (_ BitVec 64) #x0000000000000002)
(model-add temp812_2 () (_ BitVec 64) #x0000000000000000)
(model-add var201811 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000002 #x8000000000000000))
                #x0000000000000002
                (bvsub #x0000000000000002 #x0000000000000001)))






