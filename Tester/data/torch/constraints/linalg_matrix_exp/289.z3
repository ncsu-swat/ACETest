(declare-fun temp877_1 () (_ BitVec 64))
(declare-fun temp877_2 () (_ BitVec 64))
(declare-fun var201811 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp877_3 () (_ BitVec 64))
(declare-fun var136001 () (_ BitVec 64))
(declare-fun temp877_4 () (_ BitVec 64))
(declare-fun temp877_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp877_6 () (_ BitVec 64))
(declare-fun temp877_7 () (_ BitVec 64))
(declare-fun temp877_8 () (_ BitVec 64))
(declare-fun temp877_9 () (_ BitVec 64))
(declare-fun temp877_10 () (_ BitVec 64))
(declare-fun temp877_11 () (_ BitVec 64))
(declare-fun temp877_12 () (_ BitVec 64))
(declare-fun temp877_13 () (_ BitVec 64))
(declare-fun temp877_14 () (_ BitVec 64))
(declare-fun temp877_15 () (_ BitVec 64))
(declare-fun temp877_16 () (_ BitVec 64))
(declare-fun temp877_17 () (_ BitVec 64))
(declare-fun temp877_18 () (_ BitVec 64))
(declare-fun temp877_19 () (_ BitVec 64))
(declare-fun temp877_20 () (_ BitVec 64))
(declare-fun temp877_21 () (_ BitVec 64))
(declare-fun temp877_22 () (_ BitVec 64))
(declare-fun temp877_23 () (_ BitVec 64))
(declare-fun temp877_24 () (_ BitVec 64))
(declare-fun var136000 () (_ BitVec 64))
(declare-fun temp877_25 () (_ BitVec 64))
(declare-fun var136003 () (_ BitVec 64))
(declare-fun temp877_26 () (_ BitVec 64))
(declare-fun temp877_27 () (_ BitVec 64))
(declare-fun temp877_28 () (_ BitVec 64))
(declare-fun var136002 () (_ BitVec 64))
(declare-fun var136004 () (_ BitVec 64))
(declare-fun temp877_29 () (_ BitVec 64))
(declare-fun temp877_30 () (_ BitVec 64))
(declare-fun var265930 () (_ BitVec 64))
(declare-fun temp877_31 () (_ BitVec 64))
(declare-fun temp877_32 () (_ BitVec 64))
(declare-fun var70465 () (_ BitVec 64))
(declare-fun temp877_33 () (_ BitVec 64))
(declare-fun temp877_34 () (_ BitVec 64))
(declare-fun temp877_35 () (_ BitVec 64))
(declare-fun var83043 () (_ BitVec 64))
(declare-fun temp877_36 () (_ BitVec 64))
(declare-fun temp877_37 () (_ BitVec 64))
(declare-fun temp877_39 () (_ BitVec 64))
(declare-fun temp877_38 () (_ BitVec 64))
(declare-fun temp877_40 () (_ BitVec 64))
(declare-fun var529219 () (_ BitVec 64))
(declare-fun temp877_41 () (_ BitVec 64))
(declare-fun temp877_42 () (_ BitVec 64))
(declare-fun temp877_43 () (_ BitVec 64))
(declare-fun var541838 () (_ BitVec 64))
(declare-fun temp877_44 () (_ BitVec 64))
(declare-fun var529217 () (_ BitVec 64))
(declare-fun temp877_45 () (_ BitVec 64))
(declare-fun temp877_46 () (_ BitVec 64))
(declare-fun temp877_47 () (_ BitVec 64))
(declare-fun var541841 () (_ BitVec 64))
(declare-fun temp877_49 () (_ BitVec 64))
(declare-fun temp877_48 () (_ BitVec 64))
(declare-fun temp877_51 () (_ BitVec 64))
(declare-fun temp877_50 () (_ BitVec 64))
(declare-fun temp877_52 () (_ BitVec 64))
(declare-fun var1775875 () (_ BitVec 64))
(declare-fun temp877_53 () (_ BitVec 64))
(declare-fun var1854999 () (_ BitVec 64))
(declare-fun temp877_54 () (_ BitVec 64))
(declare-fun var1855000 () (_ BitVec 64))
(declare-fun temp877_55 () (_ BitVec 64))
(declare-fun var869788 () (_ BitVec 64))
(declare-fun temp877_56 () (_ BitVec 64))
(declare-fun var869790 () (_ BitVec 64))
(declare-fun temp877_57 () (_ BitVec 64))
(declare-fun var2313790 () (_ BitVec 64))
(declare-fun temp877_58 () (_ BitVec 64))
(declare-fun var2770921 () (_ BitVec 64))
(declare-fun temp877_59 () (_ BitVec 64))
(declare-fun var3684911 () (_ BitVec 64))
(declare-fun temp877_60 () (_ BitVec 64))
(declare-fun var3684912 () (_ BitVec 64))
(declare-fun temp877_61 () (_ BitVec 64))
(declare-fun var3754014 () (_ BitVec 64))
(declare-fun temp877_63 () (_ BitVec 64))
(declare-fun temp877_62 () (_ BitVec 64))
(declare-fun temp877_64 () (_ BitVec 64))
(declare-fun var869789 () (_ BitVec 64))
(declare-fun temp877_65 () (_ BitVec 64))
(declare-fun var870012 () (_ BitVec 64))
(declare-fun temp877_67 () (_ BitVec 64))
(declare-fun var4476478 () (_ BitVec 64))
(declare-fun temp877_68 () (_ BitVec 64))
(declare-fun var4737001 () (_ BitVec 64))
(assert (= temp877_1 #x0000000000000002))
(assert (= var201811
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp877_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp877_2 #x0000000000000000))
(assert (= var201811 temp877_2))
(assert (= temp877_3 #xffffffffffffffff))
(assert (= var136001 temp877_3))
(assert (= temp877_4 #x0000000000000000))
(assert (= temp877_5 temp877_4))
(assert (= temp877_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp877_5)))
(assert (= temp877_7 #x0000000000000001))
(assert (= temp877_8 temp877_7))
(assert (= temp877_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp877_8)))
(assert (= temp877_10 #x0000000000000002))
(assert (= temp877_11 temp877_10))
(assert (= temp877_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp877_11)))
(assert (= temp877_13 #x0000000000000003))
(assert (= temp877_14 temp877_13))
(assert (= temp877_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp877_14)))
(assert (= temp877_16 #x0000000000000004))
(assert (= temp877_17 temp877_16))
(assert (= temp877_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp877_17)))
(assert (= temp877_19 #x0000000000000005))
(assert (= temp877_20 temp877_19))
(assert (= temp877_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp877_20)))
(assert (= temp877_22 #x0000000000000000))
(assert (= temp877_23
   (ite (bvslt var136001 temp877_22)
        (bvadd ARGNAME_input_NAMEEND_DIM var136001)
        var136001)))
(assert (= temp877_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp877_23)))
(assert (= var136000 temp877_24))
(assert (bvslt (ite (bvslt var136001 temp877_22)
            (bvadd ARGNAME_input_NAMEEND_DIM var136001)
            var136001)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp877_25 #xfffffffffffffffe))
(assert (= var136003 temp877_25))
(assert (= temp877_26 #x0000000000000000))
(assert (= temp877_27
   (ite (bvslt var136003 temp877_26)
        (bvadd ARGNAME_input_NAMEEND_DIM var136003)
        var136003)))
(assert (= temp877_28 (select ARGNAME_input_NAMEEND_DIMSIZE temp877_27)))
(assert (= var136002 temp877_28))
(assert (bvslt (ite (bvslt var136003 temp877_26)
            (bvadd ARGNAME_input_NAMEEND_DIM var136003)
            var136003)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var136004
   (ite (= var136000 var136002) #x0000000000000001 #x0000000000000000)))
(assert (= temp877_29 #x0000000000000001))
(assert (= var136004 temp877_29))
(assert (= temp877_30 #x0000000000000001))
(assert (= var265930 temp877_30))
(assert (= temp877_31 #x0000000000000001))
(assert (= var265930 temp877_31))
(assert (= temp877_32 #xffffffffffffffff))
(assert (= var70465 temp877_32))
(assert (= temp877_33 #x0000000000000000))
(assert (= temp877_34
   (ite (bvslt var70465 temp877_33)
        (bvadd ARGNAME_input_NAMEEND_DIM var70465)
        var70465)))
(assert (= temp877_35 (select ARGNAME_input_NAMEEND_DIMSIZE temp877_34)))
(assert (= var83043 temp877_35))
(assert (bvslt (ite (bvslt var70465 temp877_33)
            (bvadd ARGNAME_input_NAMEEND_DIM var70465)
            var70465)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp877_36 #x0000000000000000))
(assert (distinct var83043 temp877_36))
(assert (= temp877_37 #x0000000000000001))
(assert (distinct var83043 temp877_37))
(assert (= temp877_39 #xffffffffffffffff))
(assert (= temp877_38 temp877_39))
(assert (= temp877_40 #xfffffffffffffffe))
(assert (= var529219 temp877_40))
(assert (= temp877_41 #x0000000000000000))
(assert (= temp877_42
   (ite (bvslt var529219 temp877_41)
        (bvadd ARGNAME_input_NAMEEND_DIM var529219)
        var529219)))
(assert (= temp877_43 (select ARGNAME_input_NAMEEND_DIMSIZE temp877_42)))
(assert (= var541838 temp877_43))
(assert (bvslt (ite (bvslt var529219 temp877_41)
            (bvadd ARGNAME_input_NAMEEND_DIM var529219)
            var529219)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp877_44 #xffffffffffffffff))
(assert (= var529217 temp877_44))
(assert (= temp877_45 #x0000000000000000))
(assert (= temp877_46
   (ite (bvslt var529217 temp877_45)
        (bvadd ARGNAME_input_NAMEEND_DIM var529217)
        var529217)))
(assert (= temp877_47 (select ARGNAME_input_NAMEEND_DIMSIZE temp877_46)))
(assert (= var541841 temp877_47))
(assert (bvslt (ite (bvslt var529217 temp877_45)
            (bvadd ARGNAME_input_NAMEEND_DIM var529217)
            var529217)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp877_49 #x0000000000000003))
(assert (= temp877_48 temp877_49))
(assert (= temp877_51 #xfffffffffffffffe))
(assert (= temp877_50 temp877_51))
(assert (= temp877_52 #x0000000000000000))
(assert (= var1775875 temp877_52))
(assert (= temp877_53 #xffffffffffffffff))
(assert (= var1854999 temp877_53))
(assert (= temp877_54 #x0000000000000000))
(assert (= var1855000 temp877_54))
(assert (= temp877_55 #x0000000000000000))
(assert (= var869788 temp877_55))
(assert (= temp877_56 #x0000000000000000))
(assert (= var869790
   (ite (= var869788 temp877_56) #x0000000000000001 #x0000000000000000)))
(assert (= temp877_57 #x0000000000000001))
(assert (= var869790 temp877_57))
(assert (= var2313790 var869788))
(assert (= temp877_58 #xffffffffffffffff))
(assert (= var2770921 temp877_58))
(assert (= temp877_59 #x0000000000000000))
(assert (= var3684911 temp877_59))
(assert (= temp877_60 #x0000000000000000))
(assert (= var3684912 temp877_60))
(assert (= temp877_61 #x0000000000000000))
(assert (= var3754014 temp877_61))
(assert (= temp877_63 #x0000000000000005))
(assert (= temp877_62 temp877_63))
(assert (= temp877_64 #x0000000000000001))
(assert (= var869789 (bvadd var869788 temp877_64)))
(assert (= temp877_65 #x0000000000000005))
(assert (= var870012
   (ite (= var869789 temp877_65) #x0000000000000001 #x0000000000000000)))
(assert (= temp877_67 #x0000000000000004))
(assert (= var4476478 temp877_67))
(assert (= temp877_68 #xffffffffffffffff))
(assert (= var4737001 temp877_68))
(model-add temp877_1 () (_ BitVec 64) #x0000000000000002)
(model-add temp877_2 () (_ BitVec 64) #x0000000000000000)
(model-add var201811 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000002 #x8000000000000000))
                #x0000000000000002
                (bvsub #x0000000000000002 #x0000000000000001)))






