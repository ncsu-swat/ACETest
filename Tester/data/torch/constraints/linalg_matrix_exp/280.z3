(declare-fun temp868_1 () (_ BitVec 64))
(declare-fun temp868_2 () (_ BitVec 64))
(declare-fun var201811 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp868_3 () (_ BitVec 64))
(declare-fun var136001 () (_ BitVec 64))
(declare-fun temp868_4 () (_ BitVec 64))
(declare-fun temp868_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp868_6 () (_ BitVec 64))
(declare-fun temp868_7 () (_ BitVec 64))
(declare-fun temp868_8 () (_ BitVec 64))
(declare-fun temp868_9 () (_ BitVec 64))
(declare-fun temp868_10 () (_ BitVec 64))
(declare-fun temp868_11 () (_ BitVec 64))
(declare-fun temp868_12 () (_ BitVec 64))
(declare-fun temp868_13 () (_ BitVec 64))
(declare-fun temp868_14 () (_ BitVec 64))
(declare-fun temp868_15 () (_ BitVec 64))
(declare-fun temp868_16 () (_ BitVec 64))
(declare-fun temp868_17 () (_ BitVec 64))
(declare-fun temp868_18 () (_ BitVec 64))
(declare-fun temp868_19 () (_ BitVec 64))
(declare-fun temp868_20 () (_ BitVec 64))
(declare-fun temp868_21 () (_ BitVec 64))
(declare-fun temp868_22 () (_ BitVec 64))
(declare-fun temp868_23 () (_ BitVec 64))
(declare-fun temp868_24 () (_ BitVec 64))
(declare-fun var136000 () (_ BitVec 64))
(declare-fun temp868_25 () (_ BitVec 64))
(declare-fun var136003 () (_ BitVec 64))
(declare-fun temp868_26 () (_ BitVec 64))
(declare-fun temp868_27 () (_ BitVec 64))
(declare-fun temp868_28 () (_ BitVec 64))
(declare-fun var136002 () (_ BitVec 64))
(declare-fun var136004 () (_ BitVec 64))
(declare-fun temp868_29 () (_ BitVec 64))
(declare-fun temp868_30 () (_ BitVec 64))
(declare-fun var265930 () (_ BitVec 64))
(declare-fun temp868_31 () (_ BitVec 64))
(declare-fun temp868_32 () (_ BitVec 64))
(declare-fun var70465 () (_ BitVec 64))
(declare-fun temp868_33 () (_ BitVec 64))
(declare-fun temp868_34 () (_ BitVec 64))
(declare-fun temp868_35 () (_ BitVec 64))
(declare-fun var83043 () (_ BitVec 64))
(declare-fun temp868_36 () (_ BitVec 64))
(declare-fun temp868_37 () (_ BitVec 64))
(declare-fun temp868_39 () (_ BitVec 64))
(declare-fun temp868_38 () (_ BitVec 64))
(declare-fun temp868_40 () (_ BitVec 64))
(declare-fun var529219 () (_ BitVec 64))
(declare-fun temp868_41 () (_ BitVec 64))
(declare-fun temp868_42 () (_ BitVec 64))
(declare-fun temp868_43 () (_ BitVec 64))
(declare-fun var541838 () (_ BitVec 64))
(declare-fun temp868_44 () (_ BitVec 64))
(declare-fun var529217 () (_ BitVec 64))
(declare-fun temp868_45 () (_ BitVec 64))
(declare-fun temp868_46 () (_ BitVec 64))
(declare-fun temp868_47 () (_ BitVec 64))
(declare-fun var541841 () (_ BitVec 64))
(declare-fun temp868_49 () (_ BitVec 64))
(declare-fun temp868_48 () (_ BitVec 64))
(declare-fun temp868_51 () (_ BitVec 64))
(declare-fun temp868_50 () (_ BitVec 64))
(declare-fun temp868_52 () (_ BitVec 64))
(declare-fun var1775875 () (_ BitVec 64))
(declare-fun temp868_53 () (_ BitVec 64))
(declare-fun var1854999 () (_ BitVec 64))
(declare-fun temp868_54 () (_ BitVec 64))
(declare-fun var1855000 () (_ BitVec 64))
(declare-fun temp868_55 () (_ BitVec 64))
(declare-fun var869788 () (_ BitVec 64))
(declare-fun temp868_56 () (_ BitVec 64))
(declare-fun var869790 () (_ BitVec 64))
(declare-fun temp868_57 () (_ BitVec 64))
(declare-fun var2313790 () (_ BitVec 64))
(declare-fun temp868_58 () (_ BitVec 64))
(declare-fun var2770921 () (_ BitVec 64))
(declare-fun temp868_59 () (_ BitVec 64))
(declare-fun var869789 () (_ BitVec 64))
(declare-fun temp868_60 () (_ BitVec 64))
(declare-fun var870012 () (_ BitVec 64))
(declare-fun temp868_62 () (_ BitVec 64))
(declare-fun var3296830 () (_ BitVec 64))
(declare-fun temp868_63 () (_ BitVec 64))
(declare-fun var3557353 () (_ BitVec 64))
(declare-fun temp868_64 () (_ BitVec 64))
(declare-fun var4274735 () (_ BitVec 64))
(declare-fun temp868_65 () (_ BitVec 64))
(declare-fun var4274736 () (_ BitVec 64))
(declare-fun temp868_66 () (_ BitVec 64))
(declare-fun var4343838 () (_ BitVec 64))
(declare-fun temp868_67 () (_ BitVec 64))
(declare-fun var4409374 () (_ BitVec 64))
(declare-fun temp868_68 () (_ BitVec 64))
(declare-fun var5066302 () (_ BitVec 64))
(declare-fun temp868_69 () (_ BitVec 64))
(declare-fun var5710667 () (_ BitVec 64))
(declare-fun temp868_70 () (_ BitVec 64))
(declare-fun var5776203 () (_ BitVec 64))
(declare-fun temp868_71 () (_ BitVec 64))
(declare-fun var5907329 () (_ BitVec 64))
(declare-fun temp868_72 () (_ BitVec 64))
(declare-fun var5907330 () (_ BitVec 64))
(declare-fun temp868_73 () (_ BitVec 64))
(declare-fun var5907331 () (_ BitVec 64))
(declare-fun temp868_74 () (_ BitVec 64))
(declare-fun var6494445 () (_ BitVec 64))
(declare-fun temp868_75 () (_ BitVec 64))
(declare-fun var7092783 () (_ BitVec 64))
(declare-fun temp868_76 () (_ BitVec 64))
(declare-fun var7092784 () (_ BitVec 64))
(declare-fun temp868_77 () (_ BitVec 64))
(declare-fun var7486733 () (_ BitVec 64))
(declare-fun temp868_78 () (_ BitVec 64))
(declare-fun var7617805 () (_ BitVec 64))
(declare-fun temp868_79 () (_ BitVec 64))
(declare-fun var8338701 () (_ BitVec 64))
(declare-fun temp868_80 () (_ BitVec 64))
(declare-fun var8394003 () (_ BitVec 64))
(declare-fun temp868_82 () (_ BitVec 64))
(declare-fun temp868_81 () (_ BitVec 64))
(assert (= temp868_1 #x0000000000000002))
(assert (= var201811
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp868_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_2 #x0000000000000000))
(assert (= var201811 temp868_2))
(assert (= temp868_3 #xffffffffffffffff))
(assert (= var136001 temp868_3))
(assert (= temp868_4 #x0000000000000000))
(assert (= temp868_5 temp868_4))
(assert (= temp868_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_5)))
(assert (= temp868_7 #x0000000000000001))
(assert (= temp868_8 temp868_7))
(assert (= temp868_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_8)))
(assert (= temp868_10 #x0000000000000002))
(assert (= temp868_11 temp868_10))
(assert (= temp868_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_11)))
(assert (= temp868_13 #x0000000000000003))
(assert (= temp868_14 temp868_13))
(assert (= temp868_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_14)))
(assert (= temp868_16 #x0000000000000004))
(assert (= temp868_17 temp868_16))
(assert (= temp868_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_17)))
(assert (= temp868_19 #x0000000000000005))
(assert (= temp868_20 temp868_19))
(assert (= temp868_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_20)))
(assert (= temp868_22 #x0000000000000000))
(assert (= temp868_23
   (ite (bvslt var136001 temp868_22)
        (bvadd ARGNAME_input_NAMEEND_DIM var136001)
        var136001)))
(assert (= temp868_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_23)))
(assert (= var136000 temp868_24))
(assert (bvslt (ite (bvslt var136001 temp868_22)
            (bvadd ARGNAME_input_NAMEEND_DIM var136001)
            var136001)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp868_25 #xfffffffffffffffe))
(assert (= var136003 temp868_25))
(assert (= temp868_26 #x0000000000000000))
(assert (= temp868_27
   (ite (bvslt var136003 temp868_26)
        (bvadd ARGNAME_input_NAMEEND_DIM var136003)
        var136003)))
(assert (= temp868_28 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_27)))
(assert (= var136002 temp868_28))
(assert (bvslt (ite (bvslt var136003 temp868_26)
            (bvadd ARGNAME_input_NAMEEND_DIM var136003)
            var136003)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var136004
   (ite (= var136000 var136002) #x0000000000000001 #x0000000000000000)))
(assert (= temp868_29 #x0000000000000001))
(assert (= var136004 temp868_29))
(assert (= temp868_30 #x0000000000000001))
(assert (= var265930 temp868_30))
(assert (= temp868_31 #x0000000000000001))
(assert (= var265930 temp868_31))
(assert (= temp868_32 #xffffffffffffffff))
(assert (= var70465 temp868_32))
(assert (= temp868_33 #x0000000000000000))
(assert (= temp868_34
   (ite (bvslt var70465 temp868_33)
        (bvadd ARGNAME_input_NAMEEND_DIM var70465)
        var70465)))
(assert (= temp868_35 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_34)))
(assert (= var83043 temp868_35))
(assert (bvslt (ite (bvslt var70465 temp868_33)
            (bvadd ARGNAME_input_NAMEEND_DIM var70465)
            var70465)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp868_36 #x0000000000000000))
(assert (distinct var83043 temp868_36))
(assert (= temp868_37 #x0000000000000001))
(assert (distinct var83043 temp868_37))
(assert (= temp868_39 #xffffffffffffffff))
(assert (= temp868_38 temp868_39))
(assert (= temp868_40 #xfffffffffffffffe))
(assert (= var529219 temp868_40))
(assert (= temp868_41 #x0000000000000000))
(assert (= temp868_42
   (ite (bvslt var529219 temp868_41)
        (bvadd ARGNAME_input_NAMEEND_DIM var529219)
        var529219)))
(assert (= temp868_43 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_42)))
(assert (= var541838 temp868_43))
(assert (bvslt (ite (bvslt var529219 temp868_41)
            (bvadd ARGNAME_input_NAMEEND_DIM var529219)
            var529219)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp868_44 #xffffffffffffffff))
(assert (= var529217 temp868_44))
(assert (= temp868_45 #x0000000000000000))
(assert (= temp868_46
   (ite (bvslt var529217 temp868_45)
        (bvadd ARGNAME_input_NAMEEND_DIM var529217)
        var529217)))
(assert (= temp868_47 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_46)))
(assert (= var541841 temp868_47))
(assert (bvslt (ite (bvslt var529217 temp868_45)
            (bvadd ARGNAME_input_NAMEEND_DIM var529217)
            var529217)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp868_49 #x0000000000000003))
(assert (= temp868_48 temp868_49))
(assert (= temp868_51 #xfffffffffffffffe))
(assert (= temp868_50 temp868_51))
(assert (= temp868_52 #x0000000000000000))
(assert (= var1775875 temp868_52))
(assert (= temp868_53 #xffffffffffffffff))
(assert (= var1854999 temp868_53))
(assert (= temp868_54 #x0000000000000000))
(assert (= var1855000 temp868_54))
(assert (= temp868_55 #x0000000000000000))
(assert (= var869788 temp868_55))
(assert (= temp868_56 #x0000000000000000))
(assert (= var869790
   (ite (= var869788 temp868_56) #x0000000000000001 #x0000000000000000)))
(assert (= temp868_57 #x0000000000000001))
(assert (= var869790 temp868_57))
(assert (= var2313790 var869788))
(assert (= temp868_58 #xffffffffffffffff))
(assert (= var2770921 temp868_58))
(assert (= temp868_59 #x0000000000000001))
(assert (= var869789 (bvadd var869788 temp868_59)))
(assert (= temp868_60 #x0000000000000005))
(assert (= var870012
   (ite (= var869789 temp868_60) #x0000000000000001 #x0000000000000000)))
(assert (= temp868_62 #x0000000000000004))
(assert (= var3296830 temp868_62))
(assert (= temp868_63 #xffffffffffffffff))
(assert (= var3557353 temp868_63))
(assert (= temp868_64 #x0000000000000000))
(assert (= var4274735 temp868_64))
(assert (= temp868_65 #x0000000000000000))
(assert (= var4274736 temp868_65))
(assert (= temp868_66 #x0000000000000000))
(assert (= var4343838 temp868_66))
(assert (= temp868_67 #x0000000000000000))
(assert (= var4409374 temp868_67))
(assert (= temp868_68 #x0000000000000005))
(assert (= var5066302 temp868_68))
(assert (= temp868_69 #xffffffffffffffff))
(assert (= var5710667 temp868_69))
(assert (= temp868_70 #xffffffffffffffff))
(assert (= var5776203 temp868_70))
(assert (= temp868_71 #x0000000000000004))
(assert (= var5907329 temp868_71))
(assert (= temp868_72 #x0000000000000000))
(assert (= var5907330 temp868_72))
(assert (= temp868_73 #x0000000000000000))
(assert (= var5907331 temp868_73))
(assert (= temp868_74 #x0000000000000002))
(assert (= var6494445 temp868_74))
(assert (= temp868_75 #x0000000000000000))
(assert (= var7092783 temp868_75))
(assert (= temp868_76 #x0000000000000000))
(assert (= var7092784 temp868_76))
(assert (= temp868_77 #x0000000000000000))
(assert (= var7486733 temp868_77))
(assert (= temp868_78 #x0000000000000000))
(assert (= var7617805 temp868_78))
(assert (= temp868_79 #x0000000000000000))
(assert (= var8338701 temp868_79))
(assert (= temp868_80 #x0000000000000000))
(assert (= var8394003 temp868_80))
(assert (= temp868_82 #x0000000000000005))
(assert (= temp868_81 temp868_82))
(model-add temp868_1 () (_ BitVec 64) #x0000000000000002)
(model-add temp868_2 () (_ BitVec 64) #x0000000000000000)
(model-add var201811 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000002 #x8000000000000000))
                #x0000000000000002
                (bvsub #x0000000000000002 #x0000000000000001)))






