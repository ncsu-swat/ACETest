(declare-fun temp866_1 () (_ BitVec 64))
(declare-fun temp866_2 () (_ BitVec 64))
(declare-fun var201811 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp866_3 () (_ BitVec 64))
(declare-fun var136001 () (_ BitVec 64))
(declare-fun temp866_4 () (_ BitVec 64))
(declare-fun temp866_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp866_6 () (_ BitVec 64))
(declare-fun temp866_7 () (_ BitVec 64))
(declare-fun temp866_8 () (_ BitVec 64))
(declare-fun temp866_9 () (_ BitVec 64))
(declare-fun temp866_10 () (_ BitVec 64))
(declare-fun temp866_11 () (_ BitVec 64))
(declare-fun temp866_12 () (_ BitVec 64))
(declare-fun temp866_13 () (_ BitVec 64))
(declare-fun temp866_14 () (_ BitVec 64))
(declare-fun temp866_15 () (_ BitVec 64))
(declare-fun temp866_16 () (_ BitVec 64))
(declare-fun temp866_17 () (_ BitVec 64))
(declare-fun temp866_18 () (_ BitVec 64))
(declare-fun temp866_19 () (_ BitVec 64))
(declare-fun temp866_20 () (_ BitVec 64))
(declare-fun temp866_21 () (_ BitVec 64))
(declare-fun temp866_22 () (_ BitVec 64))
(declare-fun temp866_23 () (_ BitVec 64))
(declare-fun temp866_24 () (_ BitVec 64))
(declare-fun var136000 () (_ BitVec 64))
(declare-fun temp866_25 () (_ BitVec 64))
(declare-fun var136003 () (_ BitVec 64))
(declare-fun temp866_26 () (_ BitVec 64))
(declare-fun temp866_27 () (_ BitVec 64))
(declare-fun temp866_28 () (_ BitVec 64))
(declare-fun var136002 () (_ BitVec 64))
(declare-fun var136004 () (_ BitVec 64))
(declare-fun temp866_29 () (_ BitVec 64))
(declare-fun temp866_30 () (_ BitVec 64))
(declare-fun var265930 () (_ BitVec 64))
(declare-fun temp866_31 () (_ BitVec 64))
(declare-fun temp866_32 () (_ BitVec 64))
(declare-fun var70465 () (_ BitVec 64))
(declare-fun temp866_33 () (_ BitVec 64))
(declare-fun temp866_34 () (_ BitVec 64))
(declare-fun temp866_35 () (_ BitVec 64))
(declare-fun var83043 () (_ BitVec 64))
(declare-fun temp866_36 () (_ BitVec 64))
(declare-fun temp866_37 () (_ BitVec 64))
(declare-fun temp866_39 () (_ BitVec 64))
(declare-fun temp866_38 () (_ BitVec 64))
(declare-fun temp866_40 () (_ BitVec 64))
(declare-fun var529219 () (_ BitVec 64))
(declare-fun temp866_41 () (_ BitVec 64))
(declare-fun temp866_42 () (_ BitVec 64))
(declare-fun temp866_43 () (_ BitVec 64))
(declare-fun var541838 () (_ BitVec 64))
(declare-fun temp866_44 () (_ BitVec 64))
(declare-fun var529217 () (_ BitVec 64))
(declare-fun temp866_45 () (_ BitVec 64))
(declare-fun temp866_46 () (_ BitVec 64))
(declare-fun temp866_47 () (_ BitVec 64))
(declare-fun var541841 () (_ BitVec 64))
(declare-fun temp866_49 () (_ BitVec 64))
(declare-fun temp866_48 () (_ BitVec 64))
(declare-fun temp866_51 () (_ BitVec 64))
(declare-fun temp866_50 () (_ BitVec 64))
(declare-fun temp866_52 () (_ BitVec 64))
(declare-fun var1775875 () (_ BitVec 64))
(declare-fun temp866_53 () (_ BitVec 64))
(declare-fun var1854999 () (_ BitVec 64))
(declare-fun temp866_54 () (_ BitVec 64))
(declare-fun var1855000 () (_ BitVec 64))
(declare-fun temp866_55 () (_ BitVec 64))
(declare-fun var869788 () (_ BitVec 64))
(declare-fun temp866_56 () (_ BitVec 64))
(declare-fun var869790 () (_ BitVec 64))
(declare-fun temp866_57 () (_ BitVec 64))
(declare-fun var2313790 () (_ BitVec 64))
(declare-fun temp866_58 () (_ BitVec 64))
(declare-fun var2770921 () (_ BitVec 64))
(declare-fun temp866_59 () (_ BitVec 64))
(declare-fun var869789 () (_ BitVec 64))
(declare-fun temp866_60 () (_ BitVec 64))
(declare-fun var870012 () (_ BitVec 64))
(declare-fun temp866_62 () (_ BitVec 64))
(declare-fun var3296830 () (_ BitVec 64))
(declare-fun temp866_63 () (_ BitVec 64))
(declare-fun var3557353 () (_ BitVec 64))
(declare-fun temp866_64 () (_ BitVec 64))
(declare-fun var4274735 () (_ BitVec 64))
(declare-fun temp866_65 () (_ BitVec 64))
(declare-fun var4274736 () (_ BitVec 64))
(declare-fun temp866_66 () (_ BitVec 64))
(declare-fun var4343838 () (_ BitVec 64))
(declare-fun temp866_67 () (_ BitVec 64))
(declare-fun var4409374 () (_ BitVec 64))
(declare-fun temp866_68 () (_ BitVec 64))
(declare-fun var5066302 () (_ BitVec 64))
(declare-fun temp866_69 () (_ BitVec 64))
(declare-fun var5710667 () (_ BitVec 64))
(declare-fun temp866_70 () (_ BitVec 64))
(declare-fun var5776203 () (_ BitVec 64))
(declare-fun temp866_71 () (_ BitVec 64))
(declare-fun var5907329 () (_ BitVec 64))
(declare-fun temp866_72 () (_ BitVec 64))
(declare-fun var5907330 () (_ BitVec 64))
(declare-fun temp866_73 () (_ BitVec 64))
(declare-fun var5907331 () (_ BitVec 64))
(declare-fun temp866_74 () (_ BitVec 64))
(declare-fun var6494445 () (_ BitVec 64))
(declare-fun temp866_75 () (_ BitVec 64))
(declare-fun var7290125 () (_ BitVec 64))
(declare-fun temp866_76 () (_ BitVec 64))
(declare-fun var7421197 () (_ BitVec 64))
(declare-fun temp866_77 () (_ BitVec 64))
(declare-fun var7748877 () (_ BitVec 64))
(declare-fun temp866_78 () (_ BitVec 64))
(declare-fun var7804179 () (_ BitVec 64))
(declare-fun temp866_80 () (_ BitVec 64))
(declare-fun temp866_79 () (_ BitVec 64))
(assert (= temp866_1 #x0000000000000002))
(assert (= var201811
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp866_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp866_2 #x0000000000000000))
(assert (= var201811 temp866_2))
(assert (= temp866_3 #xffffffffffffffff))
(assert (= var136001 temp866_3))
(assert (= temp866_4 #x0000000000000000))
(assert (= temp866_5 temp866_4))
(assert (= temp866_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_5)))
(assert (= temp866_7 #x0000000000000001))
(assert (= temp866_8 temp866_7))
(assert (= temp866_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_8)))
(assert (= temp866_10 #x0000000000000002))
(assert (= temp866_11 temp866_10))
(assert (= temp866_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_11)))
(assert (= temp866_13 #x0000000000000003))
(assert (= temp866_14 temp866_13))
(assert (= temp866_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_14)))
(assert (= temp866_16 #x0000000000000004))
(assert (= temp866_17 temp866_16))
(assert (= temp866_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_17)))
(assert (= temp866_19 #x0000000000000005))
(assert (= temp866_20 temp866_19))
(assert (= temp866_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_20)))
(assert (= temp866_22 #x0000000000000000))
(assert (= temp866_23
   (ite (bvslt var136001 temp866_22)
        (bvadd ARGNAME_input_NAMEEND_DIM var136001)
        var136001)))
(assert (= temp866_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_23)))
(assert (= var136000 temp866_24))
(assert (bvslt (ite (bvslt var136001 temp866_22)
            (bvadd ARGNAME_input_NAMEEND_DIM var136001)
            var136001)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp866_25 #xfffffffffffffffe))
(assert (= var136003 temp866_25))
(assert (= temp866_26 #x0000000000000000))
(assert (= temp866_27
   (ite (bvslt var136003 temp866_26)
        (bvadd ARGNAME_input_NAMEEND_DIM var136003)
        var136003)))
(assert (= temp866_28 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_27)))
(assert (= var136002 temp866_28))
(assert (bvslt (ite (bvslt var136003 temp866_26)
            (bvadd ARGNAME_input_NAMEEND_DIM var136003)
            var136003)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var136004
   (ite (= var136000 var136002) #x0000000000000001 #x0000000000000000)))
(assert (= temp866_29 #x0000000000000001))
(assert (= var136004 temp866_29))
(assert (= temp866_30 #x0000000000000001))
(assert (= var265930 temp866_30))
(assert (= temp866_31 #x0000000000000001))
(assert (= var265930 temp866_31))
(assert (= temp866_32 #xffffffffffffffff))
(assert (= var70465 temp866_32))
(assert (= temp866_33 #x0000000000000000))
(assert (= temp866_34
   (ite (bvslt var70465 temp866_33)
        (bvadd ARGNAME_input_NAMEEND_DIM var70465)
        var70465)))
(assert (= temp866_35 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_34)))
(assert (= var83043 temp866_35))
(assert (bvslt (ite (bvslt var70465 temp866_33)
            (bvadd ARGNAME_input_NAMEEND_DIM var70465)
            var70465)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp866_36 #x0000000000000000))
(assert (distinct var83043 temp866_36))
(assert (= temp866_37 #x0000000000000001))
(assert (distinct var83043 temp866_37))
(assert (= temp866_39 #xffffffffffffffff))
(assert (= temp866_38 temp866_39))
(assert (= temp866_40 #xfffffffffffffffe))
(assert (= var529219 temp866_40))
(assert (= temp866_41 #x0000000000000000))
(assert (= temp866_42
   (ite (bvslt var529219 temp866_41)
        (bvadd ARGNAME_input_NAMEEND_DIM var529219)
        var529219)))
(assert (= temp866_43 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_42)))
(assert (= var541838 temp866_43))
(assert (bvslt (ite (bvslt var529219 temp866_41)
            (bvadd ARGNAME_input_NAMEEND_DIM var529219)
            var529219)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp866_44 #xffffffffffffffff))
(assert (= var529217 temp866_44))
(assert (= temp866_45 #x0000000000000000))
(assert (= temp866_46
   (ite (bvslt var529217 temp866_45)
        (bvadd ARGNAME_input_NAMEEND_DIM var529217)
        var529217)))
(assert (= temp866_47 (select ARGNAME_input_NAMEEND_DIMSIZE temp866_46)))
(assert (= var541841 temp866_47))
(assert (bvslt (ite (bvslt var529217 temp866_45)
            (bvadd ARGNAME_input_NAMEEND_DIM var529217)
            var529217)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp866_49 #x0000000000000003))
(assert (= temp866_48 temp866_49))
(assert (= temp866_51 #xfffffffffffffffe))
(assert (= temp866_50 temp866_51))
(assert (= temp866_52 #x0000000000000000))
(assert (= var1775875 temp866_52))
(assert (= temp866_53 #xffffffffffffffff))
(assert (= var1854999 temp866_53))
(assert (= temp866_54 #x0000000000000000))
(assert (= var1855000 temp866_54))
(assert (= temp866_55 #x0000000000000000))
(assert (= var869788 temp866_55))
(assert (= temp866_56 #x0000000000000000))
(assert (= var869790
   (ite (= var869788 temp866_56) #x0000000000000001 #x0000000000000000)))
(assert (= temp866_57 #x0000000000000001))
(assert (= var869790 temp866_57))
(assert (= var2313790 var869788))
(assert (= temp866_58 #xffffffffffffffff))
(assert (= var2770921 temp866_58))
(assert (= temp866_59 #x0000000000000001))
(assert (= var869789 (bvadd var869788 temp866_59)))
(assert (= temp866_60 #x0000000000000005))
(assert (= var870012
   (ite (= var869789 temp866_60) #x0000000000000001 #x0000000000000000)))
(assert (= temp866_62 #x0000000000000004))
(assert (= var3296830 temp866_62))
(assert (= temp866_63 #xffffffffffffffff))
(assert (= var3557353 temp866_63))
(assert (= temp866_64 #x0000000000000000))
(assert (= var4274735 temp866_64))
(assert (= temp866_65 #x0000000000000000))
(assert (= var4274736 temp866_65))
(assert (= temp866_66 #x0000000000000000))
(assert (= var4343838 temp866_66))
(assert (= temp866_67 #x0000000000000000))
(assert (= var4409374 temp866_67))
(assert (= temp866_68 #x0000000000000005))
(assert (= var5066302 temp866_68))
(assert (= temp866_69 #xffffffffffffffff))
(assert (= var5710667 temp866_69))
(assert (= temp866_70 #xffffffffffffffff))
(assert (= var5776203 temp866_70))
(assert (= temp866_71 #x0000000000000004))
(assert (= var5907329 temp866_71))
(assert (= temp866_72 #x0000000000000000))
(assert (= var5907330 temp866_72))
(assert (= temp866_73 #x0000000000000000))
(assert (= var5907331 temp866_73))
(assert (= temp866_74 #x0000000000000002))
(assert (= var6494445 temp866_74))
(assert (= temp866_75 #x0000000000000000))
(assert (= var7290125 temp866_75))
(assert (= temp866_76 #x0000000000000000))
(assert (= var7421197 temp866_76))
(assert (= temp866_77 #x0000000000000000))
(assert (= var7748877 temp866_77))
(assert (= temp866_78 #x0000000000000000))
(assert (= var7804179 temp866_78))
(assert (= temp866_80 #x0000000000000005))
(assert (= temp866_79 temp866_80))
(model-add temp866_1 () (_ BitVec 64) #x0000000000000002)
(model-add temp866_2 () (_ BitVec 64) #x0000000000000000)
(model-add var201811 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000002 #x8000000000000000))
                #x0000000000000002
                (bvsub #x0000000000000002 #x0000000000000001)))






