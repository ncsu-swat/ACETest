(declare-fun temp668_1 () (_ BitVec 64))
(declare-fun temp668_2 () (_ BitVec 64))
(declare-fun var201811 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp668_3 () (_ BitVec 64))
(declare-fun var136001 () (_ BitVec 64))
(declare-fun temp668_4 () (_ BitVec 64))
(declare-fun temp668_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp668_6 () (_ BitVec 64))
(declare-fun temp668_7 () (_ BitVec 64))
(declare-fun temp668_8 () (_ BitVec 64))
(declare-fun temp668_9 () (_ BitVec 64))
(declare-fun temp668_10 () (_ BitVec 64))
(declare-fun temp668_11 () (_ BitVec 64))
(declare-fun temp668_12 () (_ BitVec 64))
(declare-fun temp668_13 () (_ BitVec 64))
(declare-fun temp668_14 () (_ BitVec 64))
(declare-fun temp668_15 () (_ BitVec 64))
(declare-fun temp668_16 () (_ BitVec 64))
(declare-fun temp668_17 () (_ BitVec 64))
(declare-fun temp668_18 () (_ BitVec 64))
(declare-fun temp668_19 () (_ BitVec 64))
(declare-fun temp668_20 () (_ BitVec 64))
(declare-fun temp668_21 () (_ BitVec 64))
(declare-fun temp668_22 () (_ BitVec 64))
(declare-fun temp668_23 () (_ BitVec 64))
(declare-fun temp668_24 () (_ BitVec 64))
(declare-fun var136000 () (_ BitVec 64))
(declare-fun temp668_25 () (_ BitVec 64))
(declare-fun var136003 () (_ BitVec 64))
(declare-fun temp668_26 () (_ BitVec 64))
(declare-fun temp668_27 () (_ BitVec 64))
(declare-fun temp668_28 () (_ BitVec 64))
(declare-fun var136002 () (_ BitVec 64))
(declare-fun var136004 () (_ BitVec 64))
(declare-fun temp668_29 () (_ BitVec 64))
(declare-fun temp668_30 () (_ BitVec 64))
(declare-fun var265930 () (_ BitVec 64))
(declare-fun temp668_31 () (_ BitVec 64))
(declare-fun temp668_32 () (_ BitVec 64))
(declare-fun var70465 () (_ BitVec 64))
(declare-fun temp668_33 () (_ BitVec 64))
(declare-fun temp668_34 () (_ BitVec 64))
(declare-fun temp668_35 () (_ BitVec 64))
(declare-fun var83043 () (_ BitVec 64))
(declare-fun temp668_36 () (_ BitVec 64))
(declare-fun temp668_37 () (_ BitVec 64))
(declare-fun temp668_39 () (_ BitVec 64))
(declare-fun temp668_38 () (_ BitVec 64))
(declare-fun temp668_40 () (_ BitVec 64))
(declare-fun var529219 () (_ BitVec 64))
(declare-fun temp668_41 () (_ BitVec 64))
(declare-fun temp668_42 () (_ BitVec 64))
(declare-fun temp668_43 () (_ BitVec 64))
(declare-fun var541838 () (_ BitVec 64))
(declare-fun temp668_44 () (_ BitVec 64))
(declare-fun var529217 () (_ BitVec 64))
(declare-fun temp668_45 () (_ BitVec 64))
(declare-fun temp668_46 () (_ BitVec 64))
(declare-fun temp668_47 () (_ BitVec 64))
(declare-fun var541841 () (_ BitVec 64))
(declare-fun temp668_49 () (_ BitVec 64))
(declare-fun temp668_48 () (_ BitVec 64))
(declare-fun temp668_51 () (_ BitVec 64))
(declare-fun temp668_50 () (_ BitVec 64))
(declare-fun temp668_52 () (_ BitVec 64))
(declare-fun var1710339 () (_ BitVec 64))
(declare-fun temp668_53 () (_ BitVec 64))
(declare-fun var1789463 () (_ BitVec 64))
(declare-fun temp668_54 () (_ BitVec 64))
(declare-fun var1789464 () (_ BitVec 64))
(declare-fun temp668_55 () (_ BitVec 64))
(declare-fun var2374191 () (_ BitVec 64))
(declare-fun temp668_56 () (_ BitVec 64))
(declare-fun var2374192 () (_ BitVec 64))
(declare-fun temp668_57 () (_ BitVec 64))
(declare-fun var804252 () (_ BitVec 64))
(declare-fun temp668_58 () (_ BitVec 64))
(declare-fun var804254 () (_ BitVec 64))
(declare-fun temp668_59 () (_ BitVec 64))
(declare-fun var2838078 () (_ BitVec 64))
(declare-fun temp668_60 () (_ BitVec 64))
(declare-fun var3295209 () (_ BitVec 64))
(declare-fun temp668_61 () (_ BitVec 64))
(declare-fun var3950622 () (_ BitVec 64))
(declare-fun temp668_63 () (_ BitVec 64))
(declare-fun temp668_62 () (_ BitVec 64))
(declare-fun temp668_64 () (_ BitVec 64))
(declare-fun var804253 () (_ BitVec 64))
(declare-fun temp668_65 () (_ BitVec 64))
(declare-fun var804476 () (_ BitVec 64))
(declare-fun temp668_67 () (_ BitVec 64))
(declare-fun var4673086 () (_ BitVec 64))
(declare-fun temp668_68 () (_ BitVec 64))
(declare-fun var4933609 () (_ BitVec 64))
(declare-fun temp668_69 () (_ BitVec 64))
(declare-fun var5392414 () (_ BitVec 64))
(declare-fun temp668_70 () (_ BitVec 64))
(declare-fun var5457950 () (_ BitVec 64))
(declare-fun temp668_71 () (_ BitVec 64))
(declare-fun var6114878 () (_ BitVec 64))
(declare-fun temp668_72 () (_ BitVec 64))
(declare-fun var6759243 () (_ BitVec 64))
(declare-fun temp668_73 () (_ BitVec 64))
(declare-fun var6824779 () (_ BitVec 64))
(declare-fun temp668_74 () (_ BitVec 64))
(declare-fun var6955905 () (_ BitVec 64))
(declare-fun temp668_75 () (_ BitVec 64))
(declare-fun var6955906 () (_ BitVec 64))
(declare-fun temp668_76 () (_ BitVec 64))
(declare-fun var6955907 () (_ BitVec 64))
(declare-fun temp668_77 () (_ BitVec 64))
(declare-fun var7543021 () (_ BitVec 64))
(declare-fun temp668_78 () (_ BitVec 64))
(declare-fun var8141359 () (_ BitVec 64))
(declare-fun temp668_79 () (_ BitVec 64))
(declare-fun var8141360 () (_ BitVec 64))
(declare-fun temp668_81 () (_ BitVec 64))
(declare-fun temp668_80 () (_ BitVec 64))
(assert (= temp668_1 #x0000000000000002))
(assert (= var201811
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp668_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_2 #x0000000000000000))
(assert (= var201811 temp668_2))
(assert (= temp668_3 #xffffffffffffffff))
(assert (= var136001 temp668_3))
(assert (= temp668_4 #x0000000000000000))
(assert (= temp668_5 temp668_4))
(assert (= temp668_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_5)))
(assert (= temp668_7 #x0000000000000001))
(assert (= temp668_8 temp668_7))
(assert (= temp668_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_8)))
(assert (= temp668_10 #x0000000000000002))
(assert (= temp668_11 temp668_10))
(assert (= temp668_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_11)))
(assert (= temp668_13 #x0000000000000003))
(assert (= temp668_14 temp668_13))
(assert (= temp668_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_14)))
(assert (= temp668_16 #x0000000000000004))
(assert (= temp668_17 temp668_16))
(assert (= temp668_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_17)))
(assert (= temp668_19 #x0000000000000005))
(assert (= temp668_20 temp668_19))
(assert (= temp668_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_20)))
(assert (= temp668_22 #x0000000000000000))
(assert (= temp668_23
   (ite (bvslt var136001 temp668_22)
        (bvadd ARGNAME_input_NAMEEND_DIM var136001)
        var136001)))
(assert (= temp668_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_23)))
(assert (= var136000 temp668_24))
(assert (bvslt (ite (bvslt var136001 temp668_22)
            (bvadd ARGNAME_input_NAMEEND_DIM var136001)
            var136001)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp668_25 #xfffffffffffffffe))
(assert (= var136003 temp668_25))
(assert (= temp668_26 #x0000000000000000))
(assert (= temp668_27
   (ite (bvslt var136003 temp668_26)
        (bvadd ARGNAME_input_NAMEEND_DIM var136003)
        var136003)))
(assert (= temp668_28 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_27)))
(assert (= var136002 temp668_28))
(assert (bvslt (ite (bvslt var136003 temp668_26)
            (bvadd ARGNAME_input_NAMEEND_DIM var136003)
            var136003)
       ARGNAME_input_NAMEEND_DIM))
(assert (= var136004
   (ite (= var136000 var136002) #x0000000000000001 #x0000000000000000)))
(assert (= temp668_29 #x0000000000000001))
(assert (= var136004 temp668_29))
(assert (= temp668_30 #x0000000000000001))
(assert (= var265930 temp668_30))
(assert (= temp668_31 #x0000000000000001))
(assert (= var265930 temp668_31))
(assert (= temp668_32 #xffffffffffffffff))
(assert (= var70465 temp668_32))
(assert (= temp668_33 #x0000000000000000))
(assert (= temp668_34
   (ite (bvslt var70465 temp668_33)
        (bvadd ARGNAME_input_NAMEEND_DIM var70465)
        var70465)))
(assert (= temp668_35 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_34)))
(assert (= var83043 temp668_35))
(assert (bvslt (ite (bvslt var70465 temp668_33)
            (bvadd ARGNAME_input_NAMEEND_DIM var70465)
            var70465)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp668_36 #x0000000000000000))
(assert (distinct var83043 temp668_36))
(assert (= temp668_37 #x0000000000000001))
(assert (distinct var83043 temp668_37))
(assert (= temp668_39 #xffffffffffffffff))
(assert (= temp668_38 temp668_39))
(assert (= temp668_40 #xfffffffffffffffe))
(assert (= var529219 temp668_40))
(assert (= temp668_41 #x0000000000000000))
(assert (= temp668_42
   (ite (bvslt var529219 temp668_41)
        (bvadd ARGNAME_input_NAMEEND_DIM var529219)
        var529219)))
(assert (= temp668_43 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_42)))
(assert (= var541838 temp668_43))
(assert (bvslt (ite (bvslt var529219 temp668_41)
            (bvadd ARGNAME_input_NAMEEND_DIM var529219)
            var529219)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp668_44 #xffffffffffffffff))
(assert (= var529217 temp668_44))
(assert (= temp668_45 #x0000000000000000))
(assert (= temp668_46
   (ite (bvslt var529217 temp668_45)
        (bvadd ARGNAME_input_NAMEEND_DIM var529217)
        var529217)))
(assert (= temp668_47 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_46)))
(assert (= var541841 temp668_47))
(assert (bvslt (ite (bvslt var529217 temp668_45)
            (bvadd ARGNAME_input_NAMEEND_DIM var529217)
            var529217)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp668_49 #x0000000000000003))
(assert (= temp668_48 temp668_49))
(assert (= temp668_51 #xfffffffffffffffe))
(assert (= temp668_50 temp668_51))
(assert (= temp668_52 #x0000000000000000))
(assert (= var1710339 temp668_52))
(assert (= temp668_53 #xffffffffffffffff))
(assert (= var1789463 temp668_53))
(assert (= temp668_54 #x0000000000000000))
(assert (= var1789464 temp668_54))
(assert (= temp668_55 #x0000000000000000))
(assert (= var2374191 temp668_55))
(assert (= temp668_56 #x0000000000000000))
(assert (= var2374192 temp668_56))
(assert (= temp668_57 #x0000000000000000))
(assert (= var804252 temp668_57))
(assert (= temp668_58 #x0000000000000000))
(assert (= var804254
   (ite (= var804252 temp668_58) #x0000000000000001 #x0000000000000000)))
(assert (= temp668_59 #x0000000000000001))
(assert (= var804254 temp668_59))
(assert (= var2838078 var804252))
(assert (= temp668_60 #xffffffffffffffff))
(assert (= var3295209 temp668_60))
(assert (= temp668_61 #x0000000000000000))
(assert (= var3950622 temp668_61))
(assert (= temp668_63 #x0000000000000005))
(assert (= temp668_62 temp668_63))
(assert (= temp668_64 #x0000000000000001))
(assert (= var804253 (bvadd var804252 temp668_64)))
(assert (= temp668_65 #x0000000000000005))
(assert (= var804476
   (ite (= var804253 temp668_65) #x0000000000000001 #x0000000000000000)))
(assert (= temp668_67 #x0000000000000004))
(assert (= var4673086 temp668_67))
(assert (= temp668_68 #xffffffffffffffff))
(assert (= var4933609 temp668_68))
(assert (= temp668_69 #x0000000000000000))
(assert (= var5392414 temp668_69))
(assert (= temp668_70 #x0000000000000000))
(assert (= var5457950 temp668_70))
(assert (= temp668_71 #x0000000000000005))
(assert (= var6114878 temp668_71))
(assert (= temp668_72 #xffffffffffffffff))
(assert (= var6759243 temp668_72))
(assert (= temp668_73 #xffffffffffffffff))
(assert (= var6824779 temp668_73))
(assert (= temp668_74 #x0000000000000004))
(assert (= var6955905 temp668_74))
(assert (= temp668_75 #x0000000000000000))
(assert (= var6955906 temp668_75))
(assert (= temp668_76 #x0000000000000000))
(assert (= var6955907 temp668_76))
(assert (= temp668_77 #x0000000000000002))
(assert (= var7543021 temp668_77))
(assert (= temp668_78 #x0000000000000000))
(assert (= var8141359 temp668_78))
(assert (= temp668_79 #x0000000000000000))
(assert (= var8141360 temp668_79))
(assert (= temp668_81 #x0000000000000005))
(assert (= temp668_80 temp668_81))
(model-add temp668_1 () (_ BitVec 64) #x0000000000000002)
(model-add temp668_2 () (_ BitVec 64) #x0000000000000000)
(model-add var201811 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000002 #x8000000000000000))
                #x0000000000000002
                (bvsub #x0000000000000002 #x0000000000000001)))






