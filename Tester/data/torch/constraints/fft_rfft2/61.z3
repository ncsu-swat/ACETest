(declare-fun temp125_2 () (_ BitVec 64))
(declare-fun temp125_1 () (_ BitVec 64))
(declare-fun temp125_3 () (_ BitVec 64))
(declare-fun var3606326 () (_ BitVec 64))
(declare-fun var3805404 () (_ BitVec 64))
(declare-fun temp125_4 () (_ BitVec 64))
(declare-fun var3936599 () (_ BitVec 64))
(declare-fun temp125_5 () (_ BitVec 64))
(declare-fun var3936600 () (_ BitVec 64))
(declare-fun temp125_7 () (_ BitVec 64))
(declare-fun temp125_6 () (_ BitVec 64))
(declare-fun temp125_8 () (_ BitVec 64))
(declare-fun var4524072 () (_ BitVec 64))
(declare-fun temp125_9 () (_ BitVec 64))
(declare-fun var4524114 () (_ BitVec 64))
(declare-fun var4524059 () (_ BitVec 64))
(declare-fun var4524058 () (_ BitVec 64))
(declare-fun temp125_10 () (_ BitVec 64))
(declare-fun var4524063 () (_ BitVec 64))
(declare-fun temp125_11 () (_ BitVec 64))
(declare-fun var4524065 () (_ BitVec 64))
(declare-fun temp125_12 () (_ BitVec 64))
(declare-fun temp125_13 () (_ BitVec 64))
(declare-fun var5311642 () (_ BitVec 64))
(declare-fun temp125_14 () (_ BitVec 64))
(declare-fun var5703886 () (_ BitVec 64))
(declare-fun temp125_15 () (_ BitVec 64))
(declare-fun var5703963 () (_ BitVec 64))
(declare-fun var5703884 () (_ BitVec 64))
(declare-fun var532113 () (_ BitVec 64))
(declare-fun var532115 () (_ BitVec 64))
(declare-fun var6692575 () (_ BitVec 64))
(declare-fun temp125_17 () (_ BitVec 64))
(declare-fun temp125_16 () (_ BitVec 64))
(assert (= temp125_2 #x0000000000000000))
(assert (= temp125_1 temp125_2))
(assert (= temp125_3 #x0000000000000000))
(assert (= var3606326 temp125_3))
(assert (= var3805404 var3606326))
(assert (= temp125_4 #x0000000000000000))
(assert (= var3936599 temp125_4))
(assert (= temp125_5 #x0000000000000000))
(assert (= var3936600 temp125_5))
(assert (= temp125_7 #x0000000000000000))
(assert (= temp125_6 temp125_7))
(assert (= temp125_8 #x0000000000000000))
(assert (= var4524072 temp125_8))
(assert (= temp125_9 #x0000000000000001))
(assert (= var4524114 temp125_9))
(assert (= var4524059 var4524114))
(assert (= var4524058 var4524059))
(assert (= temp125_10 #x0000000000000001))
(assert (= var4524063 (bvand var4524058 temp125_10)))
(assert (= temp125_11 #x0000000000000000))
(assert (= var4524065
   (ite (= var4524063 temp125_11) #x0000000000000001 #x0000000000000000)))
(assert (= temp125_12 #x0000000000000000))
(assert (= var4524065 temp125_12))
(assert (= temp125_13 #x0000000000000000))
(assert (= var5311642 temp125_13))
(assert (= temp125_14 #x0000000000000001))
(assert (= var5703886 temp125_14))
(assert (= temp125_15 #x0000000000000001))
(assert (= var5703963 temp125_15))
(assert (= var5703884 var5703963))
(assert (= var532113 var5703884))
(assert (= var532115 var532113))
(assert (= var6692575 var532115))
(assert (= temp125_17 #x0000000000000005))
(assert (= temp125_16 temp125_17))
(model-add temp125_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp125_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp125_3 () (_ BitVec 64) #x0000000000000000)
(model-add var3606326 () (_ BitVec 64) #x0000000000000000)
(model-add var3805404 () (_ BitVec 64) #x0000000000000000)
(model-add temp125_4 () (_ BitVec 64) #x0000000000000000)
(model-add var3936599 () (_ BitVec 64) #x0000000000000000)
(model-add temp125_5 () (_ BitVec 64) #x0000000000000000)
(model-add var3936600 () (_ BitVec 64) #x0000000000000000)
(model-add temp125_7 () (_ BitVec 64) #x0000000000000000)
(model-add temp125_6 () (_ BitVec 64) #x0000000000000000)
(model-add temp125_8 () (_ BitVec 64) #x0000000000000000)
(model-add var4524072 () (_ BitVec 64) #x0000000000000000)
(model-add temp125_9 () (_ BitVec 64) #x0000000000000001)
(model-add var4524114 () (_ BitVec 64) #x0000000000000001)
(model-add var4524059 () (_ BitVec 64) #x0000000000000001)
(model-add var4524058 () (_ BitVec 64) #x0000000000000001)
(model-add temp125_10 () (_ BitVec 64) #x0000000000000001)
(model-add var4524063 () (_ BitVec 64) #x0000000000000001)
(model-add temp125_11 () (_ BitVec 64) #x0000000000000000)
(model-add var4524065 () (_ BitVec 64) #x0000000000000000)
(model-add temp125_12 () (_ BitVec 64) #x0000000000000000)




