(declare-fun temp126_2 () (_ BitVec 64))
(declare-fun temp126_1 () (_ BitVec 64))
(declare-fun temp126_3 () (_ BitVec 64))
(declare-fun var3606326 () (_ BitVec 64))
(declare-fun var3805404 () (_ BitVec 64))
(declare-fun temp126_4 () (_ BitVec 64))
(declare-fun var3936599 () (_ BitVec 64))
(declare-fun temp126_5 () (_ BitVec 64))
(declare-fun var3936600 () (_ BitVec 64))
(declare-fun temp126_7 () (_ BitVec 64))
(declare-fun temp126_6 () (_ BitVec 64))
(declare-fun temp126_8 () (_ BitVec 64))
(declare-fun var4524072 () (_ BitVec 64))
(declare-fun temp126_9 () (_ BitVec 64))
(declare-fun var4524114 () (_ BitVec 64))
(declare-fun var4524059 () (_ BitVec 64))
(declare-fun var4524058 () (_ BitVec 64))
(declare-fun temp126_10 () (_ BitVec 64))
(declare-fun var4524063 () (_ BitVec 64))
(declare-fun temp126_11 () (_ BitVec 64))
(declare-fun var4524065 () (_ BitVec 64))
(declare-fun temp126_12 () (_ BitVec 64))
(declare-fun temp126_13 () (_ BitVec 64))
(declare-fun var5311642 () (_ BitVec 64))
(declare-fun temp126_14 () (_ BitVec 64))
(declare-fun var5703886 () (_ BitVec 64))
(declare-fun temp126_15 () (_ BitVec 64))
(declare-fun var5703963 () (_ BitVec 64))
(declare-fun var5703884 () (_ BitVec 64))
(declare-fun var532113 () (_ BitVec 64))
(declare-fun var532115 () (_ BitVec 64))
(declare-fun var6692575 () (_ BitVec 64))
(declare-fun temp126_17 () (_ BitVec 64))
(declare-fun temp126_16 () (_ BitVec 64))
(assert (= temp126_2 #x0000000000000000))
(assert (= temp126_1 temp126_2))
(assert (= temp126_3 #x0000000000000000))
(assert (= var3606326 temp126_3))
(assert (= var3805404 var3606326))
(assert (= temp126_4 #x0000000000000000))
(assert (= var3936599 temp126_4))
(assert (= temp126_5 #x0000000000000000))
(assert (= var3936600 temp126_5))
(assert (= temp126_7 #x0000000000000000))
(assert (= temp126_6 temp126_7))
(assert (= temp126_8 #x0000000000000000))
(assert (= var4524072 temp126_8))
(assert (= temp126_9 #x0000000000000001))
(assert (= var4524114 temp126_9))
(assert (= var4524059 var4524114))
(assert (= var4524058 var4524059))
(assert (= temp126_10 #x0000000000000001))
(assert (= var4524063 (bvand var4524058 temp126_10)))
(assert (= temp126_11 #x0000000000000000))
(assert (= var4524065
   (ite (= var4524063 temp126_11) #x0000000000000001 #x0000000000000000)))
(assert (= temp126_12 #x0000000000000000))
(assert (= var4524065 temp126_12))
(assert (= temp126_13 #x0000000000000000))
(assert (= var5311642 temp126_13))
(assert (= temp126_14 #x0000000000000001))
(assert (= var5703886 temp126_14))
(assert (= temp126_15 #x0000000000000001))
(assert (= var5703963 temp126_15))
(assert (= var5703884 var5703963))
(assert (= var532113 var5703884))
(assert (= var532115 var532113))
(assert (= var6692575 var532115))
(assert (= temp126_17 #x0000000000000005))
(assert (= temp126_16 temp126_17))
(model-add temp126_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp126_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp126_3 () (_ BitVec 64) #x0000000000000000)
(model-add var3606326 () (_ BitVec 64) #x0000000000000000)
(model-add var3805404 () (_ BitVec 64) #x0000000000000000)
(model-add temp126_4 () (_ BitVec 64) #x0000000000000000)
(model-add var3936599 () (_ BitVec 64) #x0000000000000000)
(model-add temp126_5 () (_ BitVec 64) #x0000000000000000)
(model-add var3936600 () (_ BitVec 64) #x0000000000000000)
(model-add temp126_7 () (_ BitVec 64) #x0000000000000000)
(model-add temp126_6 () (_ BitVec 64) #x0000000000000000)
(model-add temp126_8 () (_ BitVec 64) #x0000000000000000)
(model-add var4524072 () (_ BitVec 64) #x0000000000000000)
(model-add temp126_9 () (_ BitVec 64) #x0000000000000001)
(model-add var4524114 () (_ BitVec 64) #x0000000000000001)
(model-add var4524059 () (_ BitVec 64) #x0000000000000001)
(model-add var4524058 () (_ BitVec 64) #x0000000000000001)
(model-add temp126_10 () (_ BitVec 64) #x0000000000000001)
(model-add var4524063 () (_ BitVec 64) #x0000000000000001)
(model-add temp126_11 () (_ BitVec 64) #x0000000000000000)
(model-add var4524065 () (_ BitVec 64) #x0000000000000000)
(model-add temp126_12 () (_ BitVec 64) #x0000000000000000)




