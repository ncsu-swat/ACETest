(declare-fun temp588_1 () (_ BitVec 64))
(declare-fun temp588_2 () (_ BitVec 64))
(declare-fun var218410 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_sizes_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp588_3 () (_ BitVec 64))
(declare-fun var791114 () (_ BitVec 64))
(declare-fun var791116 () (_ BitVec 64))
(declare-fun temp588_4 () (_ BitVec 64))
(declare-fun var987722 () (_ BitVec 64))
(declare-fun temp588_6 () (_ BitVec 64))
(declare-fun temp588_5 () (_ BitVec 64))
(declare-fun var1259972 () (_ BitVec 64))
(declare-fun temp588_7 () (_ BitVec 64))
(declare-fun temp588_8 () (_ BitVec 64))
(declare-fun temp588_9 () (_ BitVec 64))
(declare-fun ARGNAME_sizes_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp588_10 () (_ BitVec 64))
(declare-fun temp588_11 () (_ BitVec 64))
(declare-fun temp588_12 () (_ BitVec 64))
(declare-fun temp588_13 () (_ BitVec 64))
(declare-fun temp588_14 () (_ BitVec 64))
(declare-fun temp588_15 () (_ BitVec 64))
(declare-fun temp588_16 () (_ BitVec 64))
(declare-fun temp588_17 () (_ BitVec 64))
(declare-fun temp588_18 () (_ BitVec 64))
(declare-fun temp588_19 () (_ BitVec 64))
(declare-fun temp588_20 () (_ BitVec 64))
(declare-fun temp588_21 () (_ BitVec 64))
(declare-fun temp588_22 () (_ BitVec 64))
(declare-fun temp588_23 () (_ BitVec 64))
(declare-fun temp588_24 () (_ BitVec 64))
(declare-fun temp588_25 () (_ BitVec 64))
(declare-fun var1259979 () (_ BitVec 64))
(declare-fun temp588_27 () (_ BitVec 64))
(declare-fun temp588_28 () (_ BitVec 64))
(declare-fun temp588_26 () (_ BitVec 64))
(declare-fun temp588_29 () (_ BitVec 64))
(declare-fun var1259984 () (_ BitVec 64))
(declare-fun temp588_30 () (_ BitVec 64))
(declare-fun var1260005 () (_ BitVec 64))
(declare-fun temp588_32 () (_ BitVec 64))
(declare-fun temp588_33 () (_ BitVec 64))
(declare-fun temp588_31 () (_ BitVec 64))
(declare-fun temp588_34 () (_ BitVec 64))
(declare-fun var1260008 () (_ BitVec 64))
(declare-fun var1260010 () (_ BitVec 64))
(declare-fun temp588_37 () (_ BitVec 64))
(declare-fun temp588_38 () (_ BitVec 64))
(declare-fun temp588_36 () (_ BitVec 64))
(declare-fun temp588_39 () (_ BitVec 64))
(declare-fun var1259980 () (_ BitVec 64))
(declare-fun var1260049 () (_ BitVec 64))
(declare-fun temp588_41 () (_ BitVec 64))
(declare-fun var1774154 () (_ BitVec 64))
(declare-fun var1774156 () (_ BitVec 64))
(declare-fun temp588_42 () (_ BitVec 64))
(declare-fun var3040138 () (_ BitVec 64))
(assert (= temp588_1 #x0000000000000000))
(assert (= var218410
   (ite (= ARGNAME_sizes_NAMEEND_LEN temp588_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp588_2 #x0000000000000000))
(assert (= var218410 temp588_2))
(assert (= temp588_3 #x0000000000000005))
(assert (= var791114 temp588_3))
(assert (= var791116 var791114))
(assert (= temp588_4 #x0000000000000005))
(assert (= var987722 temp588_4))
(assert (= temp588_6 #x0000000000000000))
(assert (= temp588_5 temp588_6))
(assert (= var1259972
   (ite (= temp588_5 ARGNAME_sizes_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp588_7 #x0000000000000000))
(assert (= var1259972 temp588_7))
(assert (= temp588_8 #x0000000000000000))
(assert (= temp588_9 temp588_8))
(assert (= temp588_10 (select ARGNAME_sizes_NAMEEND_VAL temp588_9)))
(assert (= temp588_11 #x0000000000000001))
(assert (= temp588_12 temp588_11))
(assert (= temp588_13 (select ARGNAME_sizes_NAMEEND_VAL temp588_12)))
(assert (= temp588_14 #x0000000000000002))
(assert (= temp588_15 temp588_14))
(assert (= temp588_16 (select ARGNAME_sizes_NAMEEND_VAL temp588_15)))
(assert (= temp588_17 #x0000000000000003))
(assert (= temp588_18 temp588_17))
(assert (= temp588_19 (select ARGNAME_sizes_NAMEEND_VAL temp588_18)))
(assert (= temp588_20 #x0000000000000004))
(assert (= temp588_21 temp588_20))
(assert (= temp588_22 (select ARGNAME_sizes_NAMEEND_VAL temp588_21)))
(assert (= temp588_23 #x0000000000000005))
(assert (= temp588_24 temp588_23))
(assert (= temp588_25 (select ARGNAME_sizes_NAMEEND_VAL temp588_24)))
(assert (= temp588_27 var1259979))
(assert (= temp588_28 (select ARGNAME_sizes_NAMEEND_VAL temp588_27)))
(assert (= temp588_26 temp588_28))
(assert (= temp588_29 #xffffffffffffffff))
(assert (= var1259984
   (ite (= temp588_26 temp588_29) #x0000000000000001 #x0000000000000000)))
(assert (= temp588_30 #x0000000000000000))
(assert (= var1259984 temp588_30))
(assert (= temp588_32 var1260005))
(assert (= temp588_33 (select ARGNAME_sizes_NAMEEND_VAL temp588_32)))
(assert (= temp588_31 temp588_33))
(assert (= temp588_34 #xffffffffffffffff))
(assert (= var1260008
   (ite (bvsgt temp588_31 temp588_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp588_37 var1260010))
(assert (= temp588_38 (select ARGNAME_sizes_NAMEEND_VAL temp588_37)))
(assert (= temp588_36 temp588_38))
(assert (= temp588_39 #x0000000000000001))
(assert (= var1259980 (bvadd temp588_5 temp588_39)))
(assert (= var1260049
   (ite (= var1259980 ARGNAME_sizes_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp588_41 #x0000000000000005))
(assert (= var1774154 temp588_41))
(assert (= var1774156 var1774154))
(assert (= temp588_42 #x000000000000003b))
(assert (= var3040138 temp588_42))
(model-add temp588_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp588_2 () (_ BitVec 64) #x0000000000000000)
(model-add var218410 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_sizes_NAMEEND_LEN
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))






