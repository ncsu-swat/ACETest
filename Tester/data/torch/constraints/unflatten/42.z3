(declare-fun temp64_1 () (_ BitVec 64))
(declare-fun temp64_2 () (_ BitVec 64))
(declare-fun var218410 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_sizes_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp64_3 () (_ BitVec 64))
(declare-fun var791114 () (_ BitVec 64))
(declare-fun var791116 () (_ BitVec 64))
(declare-fun temp64_4 () (_ BitVec 64))
(declare-fun var987722 () (_ BitVec 64))
(declare-fun temp64_6 () (_ BitVec 64))
(declare-fun temp64_5 () (_ BitVec 64))
(declare-fun var1259972 () (_ BitVec 64))
(declare-fun temp64_7 () (_ BitVec 64))
(declare-fun temp64_8 () (_ BitVec 64))
(declare-fun temp64_9 () (_ BitVec 64))
(declare-fun ARGNAME_sizes_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp64_10 () (_ BitVec 64))
(declare-fun temp64_11 () (_ BitVec 64))
(declare-fun temp64_12 () (_ BitVec 64))
(declare-fun temp64_13 () (_ BitVec 64))
(declare-fun temp64_14 () (_ BitVec 64))
(declare-fun temp64_15 () (_ BitVec 64))
(declare-fun temp64_16 () (_ BitVec 64))
(declare-fun temp64_17 () (_ BitVec 64))
(declare-fun temp64_18 () (_ BitVec 64))
(declare-fun temp64_19 () (_ BitVec 64))
(declare-fun temp64_20 () (_ BitVec 64))
(declare-fun temp64_21 () (_ BitVec 64))
(declare-fun temp64_22 () (_ BitVec 64))
(declare-fun temp64_23 () (_ BitVec 64))
(declare-fun temp64_24 () (_ BitVec 64))
(declare-fun temp64_25 () (_ BitVec 64))
(declare-fun var1259979 () (_ BitVec 64))
(declare-fun temp64_27 () (_ BitVec 64))
(declare-fun temp64_28 () (_ BitVec 64))
(declare-fun temp64_26 () (_ BitVec 64))
(declare-fun temp64_29 () (_ BitVec 64))
(declare-fun var1259984 () (_ BitVec 64))
(declare-fun temp64_30 () (_ BitVec 64))
(declare-fun var1260005 () (_ BitVec 64))
(declare-fun temp64_32 () (_ BitVec 64))
(declare-fun temp64_33 () (_ BitVec 64))
(declare-fun temp64_31 () (_ BitVec 64))
(declare-fun temp64_34 () (_ BitVec 64))
(declare-fun var1260008 () (_ BitVec 64))
(declare-fun var1260010 () (_ BitVec 64))
(declare-fun temp64_37 () (_ BitVec 64))
(declare-fun temp64_38 () (_ BitVec 64))
(declare-fun temp64_36 () (_ BitVec 64))
(declare-fun temp64_39 () (_ BitVec 64))
(declare-fun var1259980 () (_ BitVec 64))
(declare-fun var1260049 () (_ BitVec 64))
(declare-fun temp64_41 () (_ BitVec 64))
(declare-fun var1839690 () (_ BitVec 64))
(declare-fun var1839692 () (_ BitVec 64))
(assert (= temp64_1 #x0000000000000000))
(assert (= var218410
   (ite (= ARGNAME_sizes_NAMEEND_LEN temp64_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp64_2 #x0000000000000000))
(assert (= var218410 temp64_2))
(assert (= temp64_3 #x0000000000000005))
(assert (= var791114 temp64_3))
(assert (= var791116 var791114))
(assert (= temp64_4 #x0000000000000005))
(assert (= var987722 temp64_4))
(assert (= temp64_6 #x0000000000000000))
(assert (= temp64_5 temp64_6))
(assert (= var1259972
   (ite (= temp64_5 ARGNAME_sizes_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp64_7 #x0000000000000000))
(assert (= var1259972 temp64_7))
(assert (= temp64_8 #x0000000000000000))
(assert (= temp64_9 temp64_8))
(assert (= temp64_10 (select ARGNAME_sizes_NAMEEND_VAL temp64_9)))
(assert (= temp64_11 #x0000000000000001))
(assert (= temp64_12 temp64_11))
(assert (= temp64_13 (select ARGNAME_sizes_NAMEEND_VAL temp64_12)))
(assert (= temp64_14 #x0000000000000002))
(assert (= temp64_15 temp64_14))
(assert (= temp64_16 (select ARGNAME_sizes_NAMEEND_VAL temp64_15)))
(assert (= temp64_17 #x0000000000000003))
(assert (= temp64_18 temp64_17))
(assert (= temp64_19 (select ARGNAME_sizes_NAMEEND_VAL temp64_18)))
(assert (= temp64_20 #x0000000000000004))
(assert (= temp64_21 temp64_20))
(assert (= temp64_22 (select ARGNAME_sizes_NAMEEND_VAL temp64_21)))
(assert (= temp64_23 #x0000000000000005))
(assert (= temp64_24 temp64_23))
(assert (= temp64_25 (select ARGNAME_sizes_NAMEEND_VAL temp64_24)))
(assert (= temp64_27 var1259979))
(assert (= temp64_28 (select ARGNAME_sizes_NAMEEND_VAL temp64_27)))
(assert (= temp64_26 temp64_28))
(assert (= temp64_29 #xffffffffffffffff))
(assert (= var1259984
   (ite (= temp64_26 temp64_29) #x0000000000000001 #x0000000000000000)))
(assert (= temp64_30 #x0000000000000000))
(assert (= var1259984 temp64_30))
(assert (= temp64_32 var1260005))
(assert (= temp64_33 (select ARGNAME_sizes_NAMEEND_VAL temp64_32)))
(assert (= temp64_31 temp64_33))
(assert (= temp64_34 #xffffffffffffffff))
(assert (= var1260008
   (ite (bvsgt temp64_31 temp64_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp64_37 var1260010))
(assert (= temp64_38 (select ARGNAME_sizes_NAMEEND_VAL temp64_37)))
(assert (= temp64_36 temp64_38))
(assert (= temp64_39 #x0000000000000001))
(assert (= var1259980 (bvadd temp64_5 temp64_39)))
(assert (= var1260049
   (ite (= var1259980 ARGNAME_sizes_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp64_41 #x0000000000000005))
(assert (= var1839690 temp64_41))
(assert (= var1839692 var1839690))
(model-add temp64_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp64_2 () (_ BitVec 64) #x0000000000000000)
(model-add var218410 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_sizes_NAMEEND_LEN
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))






