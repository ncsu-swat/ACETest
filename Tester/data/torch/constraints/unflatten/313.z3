(declare-fun temp601_1 () (_ BitVec 64))
(declare-fun temp601_2 () (_ BitVec 64))
(declare-fun var218410 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_sizes_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp601_3 () (_ BitVec 64))
(declare-fun var791114 () (_ BitVec 64))
(declare-fun var791116 () (_ BitVec 64))
(declare-fun temp601_4 () (_ BitVec 64))
(declare-fun var987722 () (_ BitVec 64))
(declare-fun temp601_6 () (_ BitVec 64))
(declare-fun temp601_5 () (_ BitVec 64))
(declare-fun var1259972 () (_ BitVec 64))
(declare-fun temp601_7 () (_ BitVec 64))
(declare-fun temp601_8 () (_ BitVec 64))
(declare-fun temp601_9 () (_ BitVec 64))
(declare-fun ARGNAME_sizes_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp601_10 () (_ BitVec 64))
(declare-fun temp601_11 () (_ BitVec 64))
(declare-fun temp601_12 () (_ BitVec 64))
(declare-fun temp601_13 () (_ BitVec 64))
(declare-fun temp601_14 () (_ BitVec 64))
(declare-fun temp601_15 () (_ BitVec 64))
(declare-fun temp601_16 () (_ BitVec 64))
(declare-fun temp601_17 () (_ BitVec 64))
(declare-fun temp601_18 () (_ BitVec 64))
(declare-fun temp601_19 () (_ BitVec 64))
(declare-fun temp601_20 () (_ BitVec 64))
(declare-fun temp601_21 () (_ BitVec 64))
(declare-fun temp601_22 () (_ BitVec 64))
(declare-fun temp601_23 () (_ BitVec 64))
(declare-fun temp601_24 () (_ BitVec 64))
(declare-fun temp601_25 () (_ BitVec 64))
(declare-fun var1259979 () (_ BitVec 64))
(declare-fun temp601_27 () (_ BitVec 64))
(declare-fun temp601_28 () (_ BitVec 64))
(declare-fun temp601_26 () (_ BitVec 64))
(declare-fun temp601_29 () (_ BitVec 64))
(declare-fun var1259984 () (_ BitVec 64))
(declare-fun temp601_30 () (_ BitVec 64))
(declare-fun var1260005 () (_ BitVec 64))
(declare-fun temp601_32 () (_ BitVec 64))
(declare-fun temp601_33 () (_ BitVec 64))
(declare-fun temp601_31 () (_ BitVec 64))
(declare-fun temp601_34 () (_ BitVec 64))
(declare-fun var1260008 () (_ BitVec 64))
(declare-fun var1260010 () (_ BitVec 64))
(declare-fun temp601_37 () (_ BitVec 64))
(declare-fun temp601_38 () (_ BitVec 64))
(declare-fun temp601_36 () (_ BitVec 64))
(declare-fun temp601_39 () (_ BitVec 64))
(declare-fun var1259980 () (_ BitVec 64))
(declare-fun var1260049 () (_ BitVec 64))
(assert (= temp601_1 #x0000000000000000))
(assert (= var218410
   (ite (= ARGNAME_sizes_NAMEEND_LEN temp601_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp601_2 #x0000000000000000))
(assert (= var218410 temp601_2))
(assert (= temp601_3 #x0000000000000005))
(assert (= var791114 temp601_3))
(assert (= var791116 var791114))
(assert (= temp601_4 #x0000000000000005))
(assert (= var987722 temp601_4))
(assert (= temp601_6 #x0000000000000000))
(assert (= temp601_5 temp601_6))
(assert (= var1259972
   (ite (= temp601_5 ARGNAME_sizes_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp601_7 #x0000000000000000))
(assert (= var1259972 temp601_7))
(assert (= temp601_8 #x0000000000000000))
(assert (= temp601_9 temp601_8))
(assert (= temp601_10 (select ARGNAME_sizes_NAMEEND_VAL temp601_9)))
(assert (= temp601_11 #x0000000000000001))
(assert (= temp601_12 temp601_11))
(assert (= temp601_13 (select ARGNAME_sizes_NAMEEND_VAL temp601_12)))
(assert (= temp601_14 #x0000000000000002))
(assert (= temp601_15 temp601_14))
(assert (= temp601_16 (select ARGNAME_sizes_NAMEEND_VAL temp601_15)))
(assert (= temp601_17 #x0000000000000003))
(assert (= temp601_18 temp601_17))
(assert (= temp601_19 (select ARGNAME_sizes_NAMEEND_VAL temp601_18)))
(assert (= temp601_20 #x0000000000000004))
(assert (= temp601_21 temp601_20))
(assert (= temp601_22 (select ARGNAME_sizes_NAMEEND_VAL temp601_21)))
(assert (= temp601_23 #x0000000000000005))
(assert (= temp601_24 temp601_23))
(assert (= temp601_25 (select ARGNAME_sizes_NAMEEND_VAL temp601_24)))
(assert (= temp601_27 var1259979))
(assert (= temp601_28 (select ARGNAME_sizes_NAMEEND_VAL temp601_27)))
(assert (= temp601_26 temp601_28))
(assert (= temp601_29 #xffffffffffffffff))
(assert (= var1259984
   (ite (= temp601_26 temp601_29) #x0000000000000001 #x0000000000000000)))
(assert (= temp601_30 #x0000000000000000))
(assert (= var1259984 temp601_30))
(assert (= temp601_32 var1260005))
(assert (= temp601_33 (select ARGNAME_sizes_NAMEEND_VAL temp601_32)))
(assert (= temp601_31 temp601_33))
(assert (= temp601_34 #xffffffffffffffff))
(assert (= var1260008
   (ite (bvsgt temp601_31 temp601_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp601_37 var1260010))
(assert (= temp601_38 (select ARGNAME_sizes_NAMEEND_VAL temp601_37)))
(assert (= temp601_36 temp601_38))
(assert (= temp601_39 #x0000000000000001))
(assert (= var1259980 (bvadd temp601_5 temp601_39)))
(assert (= var1260049
   (ite (= var1259980 ARGNAME_sizes_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(model-add temp601_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp601_2 () (_ BitVec 64) #x0000000000000000)
(model-add var218410 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_sizes_NAMEEND_LEN
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))






