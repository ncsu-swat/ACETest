(declare-fun temp388_1 () (_ BitVec 64))
(declare-fun temp388_2 () (_ BitVec 64))
(declare-fun var218410 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_sizes_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp388_3 () (_ BitVec 64))
(declare-fun var660042 () (_ BitVec 64))
(declare-fun var660044 () (_ BitVec 64))
(declare-fun temp388_4 () (_ BitVec 64))
(declare-fun var856650 () (_ BitVec 64))
(declare-fun temp388_6 () (_ BitVec 64))
(declare-fun temp388_5 () (_ BitVec 64))
(declare-fun var1128900 () (_ BitVec 64))
(declare-fun temp388_7 () (_ BitVec 64))
(declare-fun temp388_8 () (_ BitVec 64))
(declare-fun temp388_9 () (_ BitVec 64))
(declare-fun ARGNAME_sizes_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp388_10 () (_ BitVec 64))
(declare-fun temp388_11 () (_ BitVec 64))
(declare-fun temp388_12 () (_ BitVec 64))
(declare-fun temp388_13 () (_ BitVec 64))
(declare-fun temp388_14 () (_ BitVec 64))
(declare-fun temp388_15 () (_ BitVec 64))
(declare-fun temp388_16 () (_ BitVec 64))
(declare-fun temp388_17 () (_ BitVec 64))
(declare-fun temp388_18 () (_ BitVec 64))
(declare-fun temp388_19 () (_ BitVec 64))
(declare-fun temp388_20 () (_ BitVec 64))
(declare-fun temp388_21 () (_ BitVec 64))
(declare-fun temp388_22 () (_ BitVec 64))
(declare-fun temp388_23 () (_ BitVec 64))
(declare-fun temp388_24 () (_ BitVec 64))
(declare-fun temp388_25 () (_ BitVec 64))
(declare-fun var1128907 () (_ BitVec 64))
(declare-fun temp388_27 () (_ BitVec 64))
(declare-fun temp388_28 () (_ BitVec 64))
(declare-fun temp388_26 () (_ BitVec 64))
(declare-fun temp388_29 () (_ BitVec 64))
(declare-fun var1128912 () (_ BitVec 64))
(declare-fun temp388_30 () (_ BitVec 64))
(declare-fun var1128933 () (_ BitVec 64))
(declare-fun temp388_32 () (_ BitVec 64))
(declare-fun temp388_33 () (_ BitVec 64))
(declare-fun temp388_31 () (_ BitVec 64))
(declare-fun temp388_34 () (_ BitVec 64))
(declare-fun var1128936 () (_ BitVec 64))
(declare-fun var1128938 () (_ BitVec 64))
(declare-fun temp388_37 () (_ BitVec 64))
(declare-fun temp388_38 () (_ BitVec 64))
(declare-fun temp388_36 () (_ BitVec 64))
(declare-fun temp388_39 () (_ BitVec 64))
(declare-fun var1128908 () (_ BitVec 64))
(declare-fun var1128977 () (_ BitVec 64))
(declare-fun temp388_41 () (_ BitVec 64))
(declare-fun var1643082 () (_ BitVec 64))
(declare-fun var1643084 () (_ BitVec 64))
(assert (= temp388_1 #x0000000000000000))
(assert (= var218410
   (ite (= ARGNAME_sizes_NAMEEND_LEN temp388_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp388_2 #x0000000000000000))
(assert (= var218410 temp388_2))
(assert (= temp388_3 #x0000000000000005))
(assert (= var660042 temp388_3))
(assert (= var660044 var660042))
(assert (= temp388_4 #x0000000000000005))
(assert (= var856650 temp388_4))
(assert (= temp388_6 #x0000000000000000))
(assert (= temp388_5 temp388_6))
(assert (= var1128900
   (ite (= temp388_5 ARGNAME_sizes_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp388_7 #x0000000000000000))
(assert (= var1128900 temp388_7))
(assert (= temp388_8 #x0000000000000000))
(assert (= temp388_9 temp388_8))
(assert (= temp388_10 (select ARGNAME_sizes_NAMEEND_VAL temp388_9)))
(assert (= temp388_11 #x0000000000000001))
(assert (= temp388_12 temp388_11))
(assert (= temp388_13 (select ARGNAME_sizes_NAMEEND_VAL temp388_12)))
(assert (= temp388_14 #x0000000000000002))
(assert (= temp388_15 temp388_14))
(assert (= temp388_16 (select ARGNAME_sizes_NAMEEND_VAL temp388_15)))
(assert (= temp388_17 #x0000000000000003))
(assert (= temp388_18 temp388_17))
(assert (= temp388_19 (select ARGNAME_sizes_NAMEEND_VAL temp388_18)))
(assert (= temp388_20 #x0000000000000004))
(assert (= temp388_21 temp388_20))
(assert (= temp388_22 (select ARGNAME_sizes_NAMEEND_VAL temp388_21)))
(assert (= temp388_23 #x0000000000000005))
(assert (= temp388_24 temp388_23))
(assert (= temp388_25 (select ARGNAME_sizes_NAMEEND_VAL temp388_24)))
(assert (= temp388_27 var1128907))
(assert (= temp388_28 (select ARGNAME_sizes_NAMEEND_VAL temp388_27)))
(assert (= temp388_26 temp388_28))
(assert (= temp388_29 #xffffffffffffffff))
(assert (= var1128912
   (ite (= temp388_26 temp388_29) #x0000000000000001 #x0000000000000000)))
(assert (= temp388_30 #x0000000000000000))
(assert (= var1128912 temp388_30))
(assert (= temp388_32 var1128933))
(assert (= temp388_33 (select ARGNAME_sizes_NAMEEND_VAL temp388_32)))
(assert (= temp388_31 temp388_33))
(assert (= temp388_34 #xffffffffffffffff))
(assert (= var1128936
   (ite (bvsgt temp388_31 temp388_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp388_37 var1128938))
(assert (= temp388_38 (select ARGNAME_sizes_NAMEEND_VAL temp388_37)))
(assert (= temp388_36 temp388_38))
(assert (= temp388_39 #x0000000000000001))
(assert (= var1128908 (bvadd temp388_5 temp388_39)))
(assert (= var1128977
   (ite (= var1128908 ARGNAME_sizes_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp388_41 #x0000000000000005))
(assert (= var1643082 temp388_41))
(assert (= var1643084 var1643082))
(model-add temp388_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp388_2 () (_ BitVec 64) #x0000000000000000)
(model-add var218410 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_sizes_NAMEEND_LEN
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))






