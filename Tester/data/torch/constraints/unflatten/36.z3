(declare-fun temp58_1 () (_ BitVec 64))
(declare-fun temp58_2 () (_ BitVec 64))
(declare-fun var218410 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_sizes_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp58_3 () (_ BitVec 64))
(declare-fun var791114 () (_ BitVec 64))
(declare-fun var791116 () (_ BitVec 64))
(declare-fun temp58_4 () (_ BitVec 64))
(declare-fun var987722 () (_ BitVec 64))
(declare-fun temp58_6 () (_ BitVec 64))
(declare-fun temp58_5 () (_ BitVec 64))
(declare-fun var1259972 () (_ BitVec 64))
(declare-fun temp58_7 () (_ BitVec 64))
(declare-fun temp58_8 () (_ BitVec 64))
(declare-fun temp58_9 () (_ BitVec 64))
(declare-fun ARGNAME_sizes_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp58_10 () (_ BitVec 64))
(declare-fun temp58_11 () (_ BitVec 64))
(declare-fun temp58_12 () (_ BitVec 64))
(declare-fun temp58_13 () (_ BitVec 64))
(declare-fun temp58_14 () (_ BitVec 64))
(declare-fun temp58_15 () (_ BitVec 64))
(declare-fun temp58_16 () (_ BitVec 64))
(declare-fun temp58_17 () (_ BitVec 64))
(declare-fun temp58_18 () (_ BitVec 64))
(declare-fun temp58_19 () (_ BitVec 64))
(declare-fun temp58_20 () (_ BitVec 64))
(declare-fun temp58_21 () (_ BitVec 64))
(declare-fun temp58_22 () (_ BitVec 64))
(declare-fun temp58_23 () (_ BitVec 64))
(declare-fun temp58_24 () (_ BitVec 64))
(declare-fun temp58_25 () (_ BitVec 64))
(declare-fun var1259979 () (_ BitVec 64))
(declare-fun temp58_27 () (_ BitVec 64))
(declare-fun temp58_28 () (_ BitVec 64))
(declare-fun temp58_26 () (_ BitVec 64))
(declare-fun temp58_29 () (_ BitVec 64))
(declare-fun var1259984 () (_ BitVec 64))
(declare-fun temp58_30 () (_ BitVec 64))
(declare-fun var1260005 () (_ BitVec 64))
(declare-fun temp58_32 () (_ BitVec 64))
(declare-fun temp58_33 () (_ BitVec 64))
(declare-fun temp58_31 () (_ BitVec 64))
(declare-fun temp58_34 () (_ BitVec 64))
(declare-fun var1260008 () (_ BitVec 64))
(declare-fun var1260010 () (_ BitVec 64))
(declare-fun temp58_37 () (_ BitVec 64))
(declare-fun temp58_38 () (_ BitVec 64))
(declare-fun temp58_36 () (_ BitVec 64))
(declare-fun temp58_39 () (_ BitVec 64))
(declare-fun var1259980 () (_ BitVec 64))
(declare-fun var1260049 () (_ BitVec 64))
(declare-fun temp58_41 () (_ BitVec 64))
(declare-fun var1970762 () (_ BitVec 64))
(declare-fun var1970764 () (_ BitVec 64))
(assert (= temp58_1 #x0000000000000000))
(assert (= var218410
   (ite (= ARGNAME_sizes_NAMEEND_LEN temp58_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_2 #x0000000000000000))
(assert (= var218410 temp58_2))
(assert (= temp58_3 #x0000000000000005))
(assert (= var791114 temp58_3))
(assert (= var791116 var791114))
(assert (= temp58_4 #x0000000000000005))
(assert (= var987722 temp58_4))
(assert (= temp58_6 #x0000000000000000))
(assert (= temp58_5 temp58_6))
(assert (= var1259972
   (ite (= temp58_5 ARGNAME_sizes_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_7 #x0000000000000000))
(assert (= var1259972 temp58_7))
(assert (= temp58_8 #x0000000000000000))
(assert (= temp58_9 temp58_8))
(assert (= temp58_10 (select ARGNAME_sizes_NAMEEND_VAL temp58_9)))
(assert (= temp58_11 #x0000000000000001))
(assert (= temp58_12 temp58_11))
(assert (= temp58_13 (select ARGNAME_sizes_NAMEEND_VAL temp58_12)))
(assert (= temp58_14 #x0000000000000002))
(assert (= temp58_15 temp58_14))
(assert (= temp58_16 (select ARGNAME_sizes_NAMEEND_VAL temp58_15)))
(assert (= temp58_17 #x0000000000000003))
(assert (= temp58_18 temp58_17))
(assert (= temp58_19 (select ARGNAME_sizes_NAMEEND_VAL temp58_18)))
(assert (= temp58_20 #x0000000000000004))
(assert (= temp58_21 temp58_20))
(assert (= temp58_22 (select ARGNAME_sizes_NAMEEND_VAL temp58_21)))
(assert (= temp58_23 #x0000000000000005))
(assert (= temp58_24 temp58_23))
(assert (= temp58_25 (select ARGNAME_sizes_NAMEEND_VAL temp58_24)))
(assert (= temp58_27 var1259979))
(assert (= temp58_28 (select ARGNAME_sizes_NAMEEND_VAL temp58_27)))
(assert (= temp58_26 temp58_28))
(assert (= temp58_29 #xffffffffffffffff))
(assert (= var1259984
   (ite (= temp58_26 temp58_29) #x0000000000000001 #x0000000000000000)))
(assert (= temp58_30 #x0000000000000000))
(assert (= var1259984 temp58_30))
(assert (= temp58_32 var1260005))
(assert (= temp58_33 (select ARGNAME_sizes_NAMEEND_VAL temp58_32)))
(assert (= temp58_31 temp58_33))
(assert (= temp58_34 #xffffffffffffffff))
(assert (= var1260008
   (ite (bvsgt temp58_31 temp58_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp58_37 var1260010))
(assert (= temp58_38 (select ARGNAME_sizes_NAMEEND_VAL temp58_37)))
(assert (= temp58_36 temp58_38))
(assert (= temp58_39 #x0000000000000001))
(assert (= var1259980 (bvadd temp58_5 temp58_39)))
(assert (= var1260049
   (ite (= var1259980 ARGNAME_sizes_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_41 #x0000000000000005))
(assert (= var1970762 temp58_41))
(assert (= var1970764 var1970762))
(model-add temp58_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp58_2 () (_ BitVec 64) #x0000000000000000)
(model-add var218410 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_sizes_NAMEEND_LEN
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))






