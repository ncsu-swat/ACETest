(declare-fun temp668_1 () (_ BitVec 64))
(declare-fun temp668_2 () (_ BitVec 64))
(declare-fun var218410 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_sizes_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp668_3 () (_ BitVec 64))
(declare-fun var725578 () (_ BitVec 64))
(declare-fun var725580 () (_ BitVec 64))
(declare-fun temp668_4 () (_ BitVec 64))
(declare-fun var922186 () (_ BitVec 64))
(declare-fun temp668_6 () (_ BitVec 64))
(declare-fun temp668_5 () (_ BitVec 64))
(declare-fun var1194436 () (_ BitVec 64))
(declare-fun temp668_7 () (_ BitVec 64))
(declare-fun temp668_8 () (_ BitVec 64))
(declare-fun temp668_9 () (_ BitVec 64))
(declare-fun ARGNAME_sizes_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp668_10 () (_ BitVec 64))
(declare-fun temp668_11 () (_ BitVec 64))
(declare-fun temp668_12 () (_ BitVec 64))
(declare-fun temp668_13 () (_ BitVec 64))
(declare-fun temp668_14 () (_ BitVec 64))
(declare-fun temp668_15 () (_ BitVec 64))
(declare-fun temp668_16 () (_ BitVec 64))
(declare-fun temp668_17 () (_ BitVec 64))
(declare-fun temp668_18 () (_ BitVec 64))
(declare-fun temp668_19 () (_ BitVec 64))
(declare-fun temp668_20 () (_ BitVec 64))
(declare-fun temp668_21 () (_ BitVec 64))
(declare-fun temp668_22 () (_ BitVec 64))
(declare-fun temp668_23 () (_ BitVec 64))
(declare-fun temp668_24 () (_ BitVec 64))
(declare-fun temp668_25 () (_ BitVec 64))
(declare-fun var1194443 () (_ BitVec 64))
(declare-fun temp668_27 () (_ BitVec 64))
(declare-fun temp668_28 () (_ BitVec 64))
(declare-fun temp668_26 () (_ BitVec 64))
(declare-fun temp668_29 () (_ BitVec 64))
(declare-fun var1194448 () (_ BitVec 64))
(declare-fun temp668_30 () (_ BitVec 64))
(declare-fun var1194469 () (_ BitVec 64))
(declare-fun temp668_32 () (_ BitVec 64))
(declare-fun temp668_33 () (_ BitVec 64))
(declare-fun temp668_31 () (_ BitVec 64))
(declare-fun temp668_34 () (_ BitVec 64))
(declare-fun var1194472 () (_ BitVec 64))
(declare-fun var1194474 () (_ BitVec 64))
(declare-fun temp668_37 () (_ BitVec 64))
(declare-fun temp668_38 () (_ BitVec 64))
(declare-fun temp668_36 () (_ BitVec 64))
(declare-fun temp668_39 () (_ BitVec 64))
(declare-fun var1194444 () (_ BitVec 64))
(declare-fun var1194513 () (_ BitVec 64))
(assert (= temp668_1 #x0000000000000000))
(assert (= var218410
   (ite (= ARGNAME_sizes_NAMEEND_LEN temp668_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_2 #x0000000000000000))
(assert (= var218410 temp668_2))
(assert (= temp668_3 #x0000000000000005))
(assert (= var725578 temp668_3))
(assert (= var725580 var725578))
(assert (= temp668_4 #x0000000000000005))
(assert (= var922186 temp668_4))
(assert (= temp668_6 #x0000000000000000))
(assert (= temp668_5 temp668_6))
(assert (= var1194436
   (ite (= temp668_5 ARGNAME_sizes_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_7 #x0000000000000000))
(assert (= var1194436 temp668_7))
(assert (= temp668_8 #x0000000000000000))
(assert (= temp668_9 temp668_8))
(assert (= temp668_10 (select ARGNAME_sizes_NAMEEND_VAL temp668_9)))
(assert (= temp668_11 #x0000000000000001))
(assert (= temp668_12 temp668_11))
(assert (= temp668_13 (select ARGNAME_sizes_NAMEEND_VAL temp668_12)))
(assert (= temp668_14 #x0000000000000002))
(assert (= temp668_15 temp668_14))
(assert (= temp668_16 (select ARGNAME_sizes_NAMEEND_VAL temp668_15)))
(assert (= temp668_17 #x0000000000000003))
(assert (= temp668_18 temp668_17))
(assert (= temp668_19 (select ARGNAME_sizes_NAMEEND_VAL temp668_18)))
(assert (= temp668_20 #x0000000000000004))
(assert (= temp668_21 temp668_20))
(assert (= temp668_22 (select ARGNAME_sizes_NAMEEND_VAL temp668_21)))
(assert (= temp668_23 #x0000000000000005))
(assert (= temp668_24 temp668_23))
(assert (= temp668_25 (select ARGNAME_sizes_NAMEEND_VAL temp668_24)))
(assert (= temp668_27 var1194443))
(assert (= temp668_28 (select ARGNAME_sizes_NAMEEND_VAL temp668_27)))
(assert (= temp668_26 temp668_28))
(assert (= temp668_29 #xffffffffffffffff))
(assert (= var1194448
   (ite (= temp668_26 temp668_29) #x0000000000000001 #x0000000000000000)))
(assert (= temp668_30 #x0000000000000000))
(assert (= var1194448 temp668_30))
(assert (= temp668_32 var1194469))
(assert (= temp668_33 (select ARGNAME_sizes_NAMEEND_VAL temp668_32)))
(assert (= temp668_31 temp668_33))
(assert (= temp668_34 #xffffffffffffffff))
(assert (= var1194472
   (ite (bvsgt temp668_31 temp668_34) #x0000000000000001 #x0000000000000000)))
(assert (= temp668_37 var1194474))
(assert (= temp668_38 (select ARGNAME_sizes_NAMEEND_VAL temp668_37)))
(assert (= temp668_36 temp668_38))
(assert (= temp668_39 #x0000000000000001))
(assert (= var1194444 (bvadd temp668_5 temp668_39)))
(assert (= var1194513
   (ite (= var1194444 ARGNAME_sizes_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(model-add temp668_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp668_2 () (_ BitVec 64) #x0000000000000000)
(model-add var218410 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_sizes_NAMEEND_LEN
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))






