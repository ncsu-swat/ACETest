(declare-fun temp5748_1 () (_ BitVec 64))
(declare-fun temp5748_2 () (_ BitVec 64))
(declare-fun var82670 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp5748_3 () (_ BitVec 64))
(declare-fun ARGNAME_sections_NAMEEND () (_ BitVec 64))
(declare-fun var82695 () (_ BitVec 64))
(declare-fun temp5748_4 () (_ BitVec 64))
(declare-fun temp5748_5 () (_ BitVec 64))
(declare-fun var67369 () (_ BitVec 64))
(declare-fun temp5748_6 () (_ BitVec 64))
(declare-fun temp5748_7 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp5748_8 () (_ BitVec 64))
(declare-fun temp5748_9 () (_ BitVec 64))
(declare-fun temp5748_10 () (_ BitVec 64))
(declare-fun temp5748_11 () (_ BitVec 64))
(declare-fun temp5748_12 () (_ BitVec 64))
(declare-fun temp5748_13 () (_ BitVec 64))
(declare-fun temp5748_14 () (_ BitVec 64))
(declare-fun temp5748_15 () (_ BitVec 64))
(declare-fun temp5748_16 () (_ BitVec 64))
(declare-fun temp5748_17 () (_ BitVec 64))
(declare-fun temp5748_18 () (_ BitVec 64))
(declare-fun temp5748_19 () (_ BitVec 64))
(declare-fun temp5748_20 () (_ BitVec 64))
(declare-fun temp5748_21 () (_ BitVec 64))
(declare-fun temp5748_22 () (_ BitVec 64))
(declare-fun temp5748_23 () (_ BitVec 64))
(declare-fun temp5748_25 () (_ BitVec 64))
(declare-fun temp5748_26 () (_ BitVec 64))
(declare-fun temp5748_24 () (_ BitVec 64))
(declare-fun var82709 () (_ BitVec 64))
(declare-fun temp5748_27 () (_ BitVec 64))
(declare-fun var82710 () (_ BitVec 64))
(declare-fun temp5748_28 () (_ BitVec 64))
(declare-fun var140605 () (_ BitVec 64))
(declare-fun temp5748_29 () (_ BitVec 64))
(declare-fun var140635 () (_ BitVec 64))
(declare-fun temp5748_30 () (_ BitVec 64))
(declare-fun temp5748_31 () (_ BitVec 64))
(declare-fun var140664 () (_ BitVec 64))
(declare-fun temp5748_32 () (_ BitVec 64))
(declare-fun temp5748_34 () (_ BitVec 64))
(declare-fun temp5748_33 () (_ BitVec 64))
(declare-fun temp5748_36 () (_ BitVec 64))
(declare-fun temp5748_35 () (_ BitVec 64))
(declare-fun var462146 () (_ BitVec 64))
(declare-fun temp5748_37 () (_ BitVec 64))
(declare-fun temp5748_38 () (_ BitVec 64))
(declare-fun var527687 () (_ BitVec 64))
(declare-fun var593234 () (_ BitVec 64))
(declare-fun temp5748_39 () (_ BitVec 64))
(declare-fun var1130139 () (_ BitVec 64))
(declare-fun temp5748_40 () (_ BitVec 64))
(declare-fun var1130188 () (_ BitVec 64))
(declare-fun temp5748_41 () (_ BitVec 64))
(declare-fun temp5748_42 () (_ BitVec 64))
(declare-fun var1380938 () (_ BitVec 64))
(declare-fun temp5748_43 () (_ BitVec 64))
(declare-fun var2101834 () (_ BitVec 64))
(declare-fun temp5748_44 () (_ BitVec 64))
(declare-fun var1130297 () (_ BitVec 64))
(declare-fun temp5748_45 () (_ BitVec 64))
(declare-fun var1130305 () (_ BitVec 64))
(declare-fun temp5748_46 () (_ BitVec 64))
(declare-fun temp5748_47 () (_ BitVec 64))
(declare-fun var1130340 () (_ BitVec 64))
(declare-fun temp5748_48 () (_ BitVec 64))
(declare-fun var1130348 () (_ BitVec 64))
(declare-fun temp5748_49 () (_ BitVec 64))
(declare-fun var1130358 () (_ BitVec 64))
(declare-fun temp5748_50 () (_ BitVec 64))
(declare-fun temp5748_51 () (_ BitVec 64))
(declare-fun var3226268 () (_ BitVec 64))
(declare-fun var3226272 () (_ BitVec 64))
(declare-fun temp5748_53 () (_ BitVec 64))
(declare-fun temp5748_52 () (_ BitVec 64))
(assert (= temp5748_1 #x0000000000000003))
(assert (= var82670
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp5748_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp5748_2 #x0000000000000000))
(assert (= var82670 temp5748_2))
(assert (= temp5748_3 #x0000000000000000))
(assert (= var82695
   (ite (= ARGNAME_sections_NAMEEND temp5748_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp5748_4 #x0000000000000000))
(assert (= var82695 temp5748_4))
(assert (= temp5748_5 #x0000000000000002))
(assert (= var67369 temp5748_5))
(assert (= temp5748_6 #x0000000000000000))
(assert (= temp5748_7 temp5748_6))
(assert (= temp5748_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp5748_7)))
(assert (= temp5748_9 #x0000000000000001))
(assert (= temp5748_10 temp5748_9))
(assert (= temp5748_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp5748_10)))
(assert (= temp5748_12 #x0000000000000002))
(assert (= temp5748_13 temp5748_12))
(assert (= temp5748_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp5748_13)))
(assert (= temp5748_15 #x0000000000000003))
(assert (= temp5748_16 temp5748_15))
(assert (= temp5748_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp5748_16)))
(assert (= temp5748_18 #x0000000000000004))
(assert (= temp5748_19 temp5748_18))
(assert (= temp5748_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp5748_19)))
(assert (= temp5748_21 #x0000000000000005))
(assert (= temp5748_22 temp5748_21))
(assert (= temp5748_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp5748_22)))
(assert (= temp5748_25 var67369))
(assert (= temp5748_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp5748_25)))
(assert (= temp5748_24 temp5748_26))
(assert (= var82709 (bvsmod temp5748_24 ARGNAME_sections_NAMEEND)))
(assert (= temp5748_27 #x0000000000000000))
(assert (= var82710
   (ite (= var82709 temp5748_27) #x0000000000000001 #x0000000000000000)))
(assert (= temp5748_28 #x0000000000000001))
(assert (= var82710 temp5748_28))
(assert (= var140605 var67369))
(assert (= temp5748_29 #x0000000000000001))
(assert (= var140635
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp5748_29)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp5748_30 #x0000000000000000))
(assert (= var140635 temp5748_30))
(assert (= temp5748_31 #x0000000000000001))
(assert (= var140664
   (ite (bvslt ARGNAME_sections_NAMEEND temp5748_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp5748_32 #x0000000000000000))
(assert (= var140664 temp5748_32))
(assert (= temp5748_34 #x0000000000000000))
(assert (= temp5748_33 temp5748_34))
(assert (= temp5748_36 #x0000000000000000))
(assert (= temp5748_35 temp5748_36))
(assert (= var462146
   (ite (bvslt temp5748_35 ARGNAME_sections_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp5748_37
   (ite (= var462146 #x0000000000000001) ARGNAME_sections_NAMEEND temp5748_35)))
(assert (= temp5748_38 #x0000000000000000))
(assert (= var527687 temp5748_38))
(assert (= var593234 var527687))
(assert (= temp5748_39 #x0000000000000001))
(assert (= var1130139 temp5748_39))
(assert (= temp5748_40 #x0000000000000000))
(assert (= var1130188
   (ite (= ARGNAME_input_NAMEEND_DIM temp5748_40)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp5748_41 #x0000000000000000))
(assert (= var1130188 temp5748_41))
(assert (= temp5748_42 #x0000000000000005))
(assert (= var1380938 temp5748_42))
(assert (= temp5748_43 #x0000000000000005))
(assert (= var2101834 temp5748_43))
(assert (= temp5748_44 #x0000000000000000))
(assert (= var1130297 temp5748_44))
(assert (= temp5748_45 #x0000000000000001))
(assert (= var1130305
   (ite (bvslt var1130139 temp5748_45) #x0000000000000001 #x0000000000000000)))
(assert (= temp5748_46 #x0000000000000000))
(assert (= var1130305 temp5748_46))
(assert (= temp5748_47 #x0000000000000000))
(assert (= var1130340
   (ite (bvslt var1130297 temp5748_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp5748_48 #x0000000000000000))
(assert (= var1130340 temp5748_48))
(assert (= var1130348 var1130297))
(assert (= temp5748_49 #x0000000000000000))
(assert (= var1130358
   (ite (bvslt var1130348 temp5748_49) #x0000000000000001 #x0000000000000000)))
(assert (= temp5748_50 #x0000000000000000))
(assert (= var1130358 temp5748_50))
(assert (= temp5748_51 #x0000000000000000))
(assert (= var3226268 temp5748_51))
(assert (= var3226272 var1130139))
(assert (= temp5748_53 #x0000000000000000))
(assert (= temp5748_52 temp5748_53))
(model-add temp5748_1 () (_ BitVec 64) #x0000000000000003)
(model-add temp5748_2 () (_ BitVec 64) #x0000000000000000)
(model-add var82670 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





