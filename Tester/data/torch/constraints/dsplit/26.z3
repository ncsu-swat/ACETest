(declare-fun temp62_1 () (_ BitVec 64))
(declare-fun temp62_2 () (_ BitVec 64))
(declare-fun var82670 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp62_3 () (_ BitVec 64))
(declare-fun ARGNAME_sections_NAMEEND () (_ BitVec 64))
(declare-fun var82695 () (_ BitVec 64))
(declare-fun temp62_4 () (_ BitVec 64))
(declare-fun temp62_5 () (_ BitVec 64))
(declare-fun var67369 () (_ BitVec 64))
(declare-fun temp62_6 () (_ BitVec 64))
(declare-fun temp62_7 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp62_8 () (_ BitVec 64))
(declare-fun temp62_9 () (_ BitVec 64))
(declare-fun temp62_10 () (_ BitVec 64))
(declare-fun temp62_11 () (_ BitVec 64))
(declare-fun temp62_12 () (_ BitVec 64))
(declare-fun temp62_13 () (_ BitVec 64))
(declare-fun temp62_14 () (_ BitVec 64))
(declare-fun temp62_15 () (_ BitVec 64))
(declare-fun temp62_16 () (_ BitVec 64))
(declare-fun temp62_17 () (_ BitVec 64))
(declare-fun temp62_18 () (_ BitVec 64))
(declare-fun temp62_19 () (_ BitVec 64))
(declare-fun temp62_20 () (_ BitVec 64))
(declare-fun temp62_21 () (_ BitVec 64))
(declare-fun temp62_22 () (_ BitVec 64))
(declare-fun temp62_23 () (_ BitVec 64))
(declare-fun temp62_25 () (_ BitVec 64))
(declare-fun temp62_26 () (_ BitVec 64))
(declare-fun temp62_24 () (_ BitVec 64))
(declare-fun var82709 () (_ BitVec 64))
(declare-fun temp62_27 () (_ BitVec 64))
(declare-fun var82710 () (_ BitVec 64))
(declare-fun temp62_28 () (_ BitVec 64))
(declare-fun var140605 () (_ BitVec 64))
(declare-fun temp62_29 () (_ BitVec 64))
(declare-fun var140635 () (_ BitVec 64))
(declare-fun temp62_30 () (_ BitVec 64))
(declare-fun temp62_31 () (_ BitVec 64))
(declare-fun var140664 () (_ BitVec 64))
(declare-fun temp62_32 () (_ BitVec 64))
(declare-fun temp62_34 () (_ BitVec 64))
(declare-fun temp62_33 () (_ BitVec 64))
(declare-fun temp62_36 () (_ BitVec 64))
(declare-fun temp62_35 () (_ BitVec 64))
(declare-fun var462146 () (_ BitVec 64))
(declare-fun temp62_37 () (_ BitVec 64))
(declare-fun temp62_38 () (_ BitVec 64))
(declare-fun var527687 () (_ BitVec 64))
(declare-fun var593234 () (_ BitVec 64))
(declare-fun temp62_39 () (_ BitVec 64))
(declare-fun var1130139 () (_ BitVec 64))
(declare-fun temp62_40 () (_ BitVec 64))
(declare-fun var1130188 () (_ BitVec 64))
(declare-fun temp62_41 () (_ BitVec 64))
(declare-fun temp62_42 () (_ BitVec 64))
(declare-fun var1380938 () (_ BitVec 64))
(declare-fun temp62_43 () (_ BitVec 64))
(declare-fun var2101834 () (_ BitVec 64))
(declare-fun temp62_44 () (_ BitVec 64))
(declare-fun var1130305 () (_ BitVec 64))
(declare-fun temp62_45 () (_ BitVec 64))
(declare-fun temp62_46 () (_ BitVec 64))
(declare-fun var1130369 () (_ BitVec 64))
(declare-fun temp62_47 () (_ BitVec 64))
(declare-fun var1130393 () (_ BitVec 64))
(declare-fun var1130394 () (_ BitVec 64))
(declare-fun temp62_48 () (_ BitVec 64))
(declare-fun var3422876 () (_ BitVec 64))
(declare-fun var3422877 () (_ BitVec 64))
(declare-fun var3422880 () (_ BitVec 64))
(declare-fun temp62_49 () (_ BitVec 64))
(declare-fun temp62_50 () (_ BitVec 64))
(declare-fun var4072313 () (_ BitVec 64))
(declare-fun var4072317 () (_ BitVec 64))
(declare-fun temp62_51 () (_ BitVec 64))
(declare-fun temp62_52 () (_ BitVec 64))
(declare-fun var4399993 () (_ BitVec 64))
(declare-fun var4399997 () (_ BitVec 64))
(declare-fun temp62_54 () (_ BitVec 64))
(declare-fun temp62_53 () (_ BitVec 64))
(assert (= temp62_1 #x0000000000000003))
(assert (= var82670
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp62_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_2 #x0000000000000000))
(assert (= var82670 temp62_2))
(assert (= temp62_3 #x0000000000000000))
(assert (= var82695
   (ite (= ARGNAME_sections_NAMEEND temp62_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_4 #x0000000000000000))
(assert (= var82695 temp62_4))
(assert (= temp62_5 #x0000000000000002))
(assert (= var67369 temp62_5))
(assert (= temp62_6 #x0000000000000000))
(assert (= temp62_7 temp62_6))
(assert (= temp62_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp62_7)))
(assert (= temp62_9 #x0000000000000001))
(assert (= temp62_10 temp62_9))
(assert (= temp62_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp62_10)))
(assert (= temp62_12 #x0000000000000002))
(assert (= temp62_13 temp62_12))
(assert (= temp62_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp62_13)))
(assert (= temp62_15 #x0000000000000003))
(assert (= temp62_16 temp62_15))
(assert (= temp62_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp62_16)))
(assert (= temp62_18 #x0000000000000004))
(assert (= temp62_19 temp62_18))
(assert (= temp62_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp62_19)))
(assert (= temp62_21 #x0000000000000005))
(assert (= temp62_22 temp62_21))
(assert (= temp62_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp62_22)))
(assert (= temp62_25 var67369))
(assert (= temp62_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp62_25)))
(assert (= temp62_24 temp62_26))
(assert (= var82709 (bvsmod temp62_24 ARGNAME_sections_NAMEEND)))
(assert (= temp62_27 #x0000000000000000))
(assert (= var82710 (ite (= var82709 temp62_27) #x0000000000000001 #x0000000000000000)))
(assert (= temp62_28 #x0000000000000001))
(assert (= var82710 temp62_28))
(assert (= var140605 var67369))
(assert (= temp62_29 #x0000000000000001))
(assert (= var140635
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp62_29)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_30 #x0000000000000000))
(assert (= var140635 temp62_30))
(assert (= temp62_31 #x0000000000000001))
(assert (= var140664
   (ite (bvslt ARGNAME_sections_NAMEEND temp62_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_32 #x0000000000000000))
(assert (= var140664 temp62_32))
(assert (= temp62_34 #x0000000000000000))
(assert (= temp62_33 temp62_34))
(assert (= temp62_36 #x0000000000000000))
(assert (= temp62_35 temp62_36))
(assert (= var462146
   (ite (bvslt temp62_35 ARGNAME_sections_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_37
   (ite (= var462146 #x0000000000000001) ARGNAME_sections_NAMEEND temp62_35)))
(assert (= temp62_38 #x0000000000000000))
(assert (= var527687 temp62_38))
(assert (= var593234 var527687))
(assert (= temp62_39 #x0000000000000001))
(assert (= var1130139 temp62_39))
(assert (= temp62_40 #x0000000000000000))
(assert (= var1130188
   (ite (= ARGNAME_input_NAMEEND_DIM temp62_40)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_41 #x0000000000000000))
(assert (= var1130188 temp62_41))
(assert (= temp62_42 #x0000000000000005))
(assert (= var1380938 temp62_42))
(assert (= temp62_43 #x0000000000000005))
(assert (= var2101834 temp62_43))
(assert (= temp62_44 #x0000000000000001))
(assert (= var1130305
   (ite (bvslt var1130139 temp62_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp62_45 #x0000000000000000))
(assert (= var1130305 temp62_45))
(assert (= temp62_46 #x0000000000000000))
(assert (= var1130369 temp62_46))
(assert (= temp62_47 #xffffffffffffffff))
(assert (= var1130393 (bvxor var1130369 temp62_47)))
(assert (= var1130394 (bvadd var1130393 var1130139)))
(assert (= temp62_48 #x0000000000000000))
(assert (= var3422876 temp62_48))
(assert (= var3422877 var1130369))
(assert (= var3422880 var1130139))
(assert (= temp62_49 #x0000000000000000))
(assert (= var3422876 temp62_49))
(assert (= temp62_50 #x0000000000000000))
(assert (= var4072313 temp62_50))
(assert (= var4072317 var3422880))
(assert (= temp62_51 #x0000000000000000))
(assert (= var3422876 temp62_51))
(assert (= temp62_52 #x0000000000000000))
(assert (= var4399993 temp62_52))
(assert (= var4399997 var3422880))
(assert (= temp62_54 #x0000000000000000))
(assert (= temp62_53 temp62_54))
(model-add temp62_1 () (_ BitVec 64) #x0000000000000003)
(model-add temp62_2 () (_ BitVec 64) #x0000000000000000)
(model-add var82670 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






