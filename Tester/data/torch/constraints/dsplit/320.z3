(declare-fun temp668_1 () (_ BitVec 64))
(declare-fun temp668_2 () (_ BitVec 64))
(declare-fun var82670 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp668_3 () (_ BitVec 64))
(declare-fun ARGNAME_sections_NAMEEND () (_ BitVec 64))
(declare-fun var82695 () (_ BitVec 64))
(declare-fun temp668_4 () (_ BitVec 64))
(declare-fun temp668_5 () (_ BitVec 64))
(declare-fun var67369 () (_ BitVec 64))
(declare-fun temp668_6 () (_ BitVec 64))
(declare-fun temp668_7 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp668_8 () (_ BitVec 64))
(declare-fun temp668_9 () (_ BitVec 64))
(declare-fun temp668_10 () (_ BitVec 64))
(declare-fun temp668_11 () (_ BitVec 64))
(declare-fun temp668_12 () (_ BitVec 64))
(declare-fun temp668_13 () (_ BitVec 64))
(declare-fun temp668_14 () (_ BitVec 64))
(declare-fun temp668_15 () (_ BitVec 64))
(declare-fun temp668_16 () (_ BitVec 64))
(declare-fun temp668_17 () (_ BitVec 64))
(declare-fun temp668_18 () (_ BitVec 64))
(declare-fun temp668_19 () (_ BitVec 64))
(declare-fun temp668_20 () (_ BitVec 64))
(declare-fun temp668_21 () (_ BitVec 64))
(declare-fun temp668_22 () (_ BitVec 64))
(declare-fun temp668_23 () (_ BitVec 64))
(declare-fun temp668_25 () (_ BitVec 64))
(declare-fun temp668_26 () (_ BitVec 64))
(declare-fun temp668_24 () (_ BitVec 64))
(declare-fun var82709 () (_ BitVec 64))
(declare-fun temp668_27 () (_ BitVec 64))
(declare-fun var82710 () (_ BitVec 64))
(declare-fun temp668_28 () (_ BitVec 64))
(declare-fun var140605 () (_ BitVec 64))
(declare-fun temp668_29 () (_ BitVec 64))
(declare-fun var140635 () (_ BitVec 64))
(declare-fun temp668_30 () (_ BitVec 64))
(declare-fun temp668_31 () (_ BitVec 64))
(declare-fun var140664 () (_ BitVec 64))
(declare-fun temp668_32 () (_ BitVec 64))
(declare-fun temp668_34 () (_ BitVec 64))
(declare-fun temp668_33 () (_ BitVec 64))
(declare-fun temp668_36 () (_ BitVec 64))
(declare-fun temp668_35 () (_ BitVec 64))
(declare-fun var462146 () (_ BitVec 64))
(declare-fun temp668_37 () (_ BitVec 64))
(declare-fun temp668_38 () (_ BitVec 64))
(declare-fun var527687 () (_ BitVec 64))
(declare-fun var593234 () (_ BitVec 64))
(declare-fun temp668_39 () (_ BitVec 64))
(declare-fun var1130139 () (_ BitVec 64))
(declare-fun temp668_40 () (_ BitVec 64))
(declare-fun var1130188 () (_ BitVec 64))
(declare-fun temp668_41 () (_ BitVec 64))
(declare-fun temp668_42 () (_ BitVec 64))
(declare-fun var1380938 () (_ BitVec 64))
(declare-fun temp668_43 () (_ BitVec 64))
(declare-fun var2101834 () (_ BitVec 64))
(declare-fun temp668_44 () (_ BitVec 64))
(declare-fun var1130305 () (_ BitVec 64))
(declare-fun temp668_45 () (_ BitVec 64))
(declare-fun temp668_46 () (_ BitVec 64))
(declare-fun var1130369 () (_ BitVec 64))
(declare-fun temp668_47 () (_ BitVec 64))
(declare-fun var1130393 () (_ BitVec 64))
(declare-fun var1130394 () (_ BitVec 64))
(declare-fun temp668_48 () (_ BitVec 64))
(declare-fun var3291804 () (_ BitVec 64))
(declare-fun var3291805 () (_ BitVec 64))
(declare-fun var3291808 () (_ BitVec 64))
(declare-fun temp668_50 () (_ BitVec 64))
(declare-fun temp668_49 () (_ BitVec 64))
(assert (= temp668_1 #x0000000000000003))
(assert (= var82670
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp668_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_2 #x0000000000000000))
(assert (= var82670 temp668_2))
(assert (= temp668_3 #x0000000000000000))
(assert (= var82695
   (ite (= ARGNAME_sections_NAMEEND temp668_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_4 #x0000000000000000))
(assert (= var82695 temp668_4))
(assert (= temp668_5 #x0000000000000002))
(assert (= var67369 temp668_5))
(assert (= temp668_6 #x0000000000000000))
(assert (= temp668_7 temp668_6))
(assert (= temp668_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_7)))
(assert (= temp668_9 #x0000000000000001))
(assert (= temp668_10 temp668_9))
(assert (= temp668_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_10)))
(assert (= temp668_12 #x0000000000000002))
(assert (= temp668_13 temp668_12))
(assert (= temp668_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_13)))
(assert (= temp668_15 #x0000000000000003))
(assert (= temp668_16 temp668_15))
(assert (= temp668_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_16)))
(assert (= temp668_18 #x0000000000000004))
(assert (= temp668_19 temp668_18))
(assert (= temp668_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_19)))
(assert (= temp668_21 #x0000000000000005))
(assert (= temp668_22 temp668_21))
(assert (= temp668_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_22)))
(assert (= temp668_25 var67369))
(assert (= temp668_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_25)))
(assert (= temp668_24 temp668_26))
(assert (= var82709 (bvsmod temp668_24 ARGNAME_sections_NAMEEND)))
(assert (= temp668_27 #x0000000000000000))
(assert (= var82710 (ite (= var82709 temp668_27) #x0000000000000001 #x0000000000000000)))
(assert (= temp668_28 #x0000000000000001))
(assert (= var82710 temp668_28))
(assert (= var140605 var67369))
(assert (= temp668_29 #x0000000000000001))
(assert (= var140635
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp668_29)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_30 #x0000000000000000))
(assert (= var140635 temp668_30))
(assert (= temp668_31 #x0000000000000001))
(assert (= var140664
   (ite (bvslt ARGNAME_sections_NAMEEND temp668_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_32 #x0000000000000000))
(assert (= var140664 temp668_32))
(assert (= temp668_34 #x0000000000000000))
(assert (= temp668_33 temp668_34))
(assert (= temp668_36 #x0000000000000000))
(assert (= temp668_35 temp668_36))
(assert (= var462146
   (ite (bvslt temp668_35 ARGNAME_sections_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_37
   (ite (= var462146 #x0000000000000001) ARGNAME_sections_NAMEEND temp668_35)))
(assert (= temp668_38 #x0000000000000000))
(assert (= var527687 temp668_38))
(assert (= var593234 var527687))
(assert (= temp668_39 #x0000000000000001))
(assert (= var1130139 temp668_39))
(assert (= temp668_40 #x0000000000000000))
(assert (= var1130188
   (ite (= ARGNAME_input_NAMEEND_DIM temp668_40)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_41 #x0000000000000000))
(assert (= var1130188 temp668_41))
(assert (= temp668_42 #x0000000000000005))
(assert (= var1380938 temp668_42))
(assert (= temp668_43 #x0000000000000005))
(assert (= var2101834 temp668_43))
(assert (= temp668_44 #x0000000000000001))
(assert (= var1130305
   (ite (bvslt var1130139 temp668_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp668_45 #x0000000000000000))
(assert (= var1130305 temp668_45))
(assert (= temp668_46 #x0000000000000000))
(assert (= var1130369 temp668_46))
(assert (= temp668_47 #xffffffffffffffff))
(assert (= var1130393 (bvxor var1130369 temp668_47)))
(assert (= var1130394 (bvadd var1130393 var1130139)))
(assert (= temp668_48 #x0000000000000000))
(assert (= var3291804 temp668_48))
(assert (= var3291805 var1130369))
(assert (= var3291808 var1130139))
(assert (= temp668_50 #x0000000000000000))
(assert (= temp668_49 temp668_50))
(model-add temp668_1 () (_ BitVec 64) #x0000000000000003)
(model-add temp668_2 () (_ BitVec 64) #x0000000000000000)
(model-add var82670 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




