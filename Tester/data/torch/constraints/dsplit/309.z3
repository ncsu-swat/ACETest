(declare-fun temp645_1 () (_ BitVec 64))
(declare-fun temp645_2 () (_ BitVec 64))
(declare-fun var82670 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp645_3 () (_ BitVec 64))
(declare-fun ARGNAME_sections_NAMEEND () (_ BitVec 64))
(declare-fun var82695 () (_ BitVec 64))
(declare-fun temp645_4 () (_ BitVec 64))
(declare-fun temp645_5 () (_ BitVec 64))
(declare-fun var67369 () (_ BitVec 64))
(declare-fun temp645_6 () (_ BitVec 64))
(declare-fun temp645_7 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp645_8 () (_ BitVec 64))
(declare-fun temp645_9 () (_ BitVec 64))
(declare-fun temp645_10 () (_ BitVec 64))
(declare-fun temp645_11 () (_ BitVec 64))
(declare-fun temp645_12 () (_ BitVec 64))
(declare-fun temp645_13 () (_ BitVec 64))
(declare-fun temp645_14 () (_ BitVec 64))
(declare-fun temp645_15 () (_ BitVec 64))
(declare-fun temp645_16 () (_ BitVec 64))
(declare-fun temp645_17 () (_ BitVec 64))
(declare-fun temp645_18 () (_ BitVec 64))
(declare-fun temp645_19 () (_ BitVec 64))
(declare-fun temp645_20 () (_ BitVec 64))
(declare-fun temp645_21 () (_ BitVec 64))
(declare-fun temp645_22 () (_ BitVec 64))
(declare-fun temp645_23 () (_ BitVec 64))
(declare-fun temp645_25 () (_ BitVec 64))
(declare-fun temp645_26 () (_ BitVec 64))
(declare-fun temp645_24 () (_ BitVec 64))
(declare-fun var82709 () (_ BitVec 64))
(declare-fun temp645_27 () (_ BitVec 64))
(declare-fun var82710 () (_ BitVec 64))
(declare-fun temp645_28 () (_ BitVec 64))
(declare-fun var140605 () (_ BitVec 64))
(declare-fun temp645_29 () (_ BitVec 64))
(declare-fun var140635 () (_ BitVec 64))
(declare-fun temp645_30 () (_ BitVec 64))
(declare-fun temp645_31 () (_ BitVec 64))
(declare-fun var140664 () (_ BitVec 64))
(declare-fun temp645_32 () (_ BitVec 64))
(declare-fun temp645_34 () (_ BitVec 64))
(declare-fun temp645_33 () (_ BitVec 64))
(declare-fun temp645_36 () (_ BitVec 64))
(declare-fun temp645_35 () (_ BitVec 64))
(declare-fun var462146 () (_ BitVec 64))
(declare-fun temp645_37 () (_ BitVec 64))
(declare-fun temp645_38 () (_ BitVec 64))
(declare-fun var527687 () (_ BitVec 64))
(declare-fun var593234 () (_ BitVec 64))
(declare-fun temp645_39 () (_ BitVec 64))
(declare-fun var1130139 () (_ BitVec 64))
(declare-fun temp645_40 () (_ BitVec 64))
(declare-fun var1130188 () (_ BitVec 64))
(declare-fun temp645_41 () (_ BitVec 64))
(declare-fun temp645_42 () (_ BitVec 64))
(declare-fun var1380938 () (_ BitVec 64))
(declare-fun temp645_43 () (_ BitVec 64))
(declare-fun var2101834 () (_ BitVec 64))
(declare-fun temp645_44 () (_ BitVec 64))
(declare-fun var1130305 () (_ BitVec 64))
(declare-fun temp645_45 () (_ BitVec 64))
(declare-fun temp645_46 () (_ BitVec 64))
(declare-fun var1130369 () (_ BitVec 64))
(declare-fun temp645_47 () (_ BitVec 64))
(declare-fun var1130393 () (_ BitVec 64))
(declare-fun var1130394 () (_ BitVec 64))
(declare-fun temp645_48 () (_ BitVec 64))
(declare-fun var3226268 () (_ BitVec 64))
(declare-fun var3226269 () (_ BitVec 64))
(declare-fun var3226272 () (_ BitVec 64))
(declare-fun temp645_50 () (_ BitVec 64))
(declare-fun temp645_49 () (_ BitVec 64))
(assert (= temp645_1 #x0000000000000003))
(assert (= var82670
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp645_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp645_2 #x0000000000000000))
(assert (= var82670 temp645_2))
(assert (= temp645_3 #x0000000000000000))
(assert (= var82695
   (ite (= ARGNAME_sections_NAMEEND temp645_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp645_4 #x0000000000000000))
(assert (= var82695 temp645_4))
(assert (= temp645_5 #x0000000000000002))
(assert (= var67369 temp645_5))
(assert (= temp645_6 #x0000000000000000))
(assert (= temp645_7 temp645_6))
(assert (= temp645_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_7)))
(assert (= temp645_9 #x0000000000000001))
(assert (= temp645_10 temp645_9))
(assert (= temp645_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_10)))
(assert (= temp645_12 #x0000000000000002))
(assert (= temp645_13 temp645_12))
(assert (= temp645_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_13)))
(assert (= temp645_15 #x0000000000000003))
(assert (= temp645_16 temp645_15))
(assert (= temp645_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_16)))
(assert (= temp645_18 #x0000000000000004))
(assert (= temp645_19 temp645_18))
(assert (= temp645_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_19)))
(assert (= temp645_21 #x0000000000000005))
(assert (= temp645_22 temp645_21))
(assert (= temp645_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_22)))
(assert (= temp645_25 var67369))
(assert (= temp645_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_25)))
(assert (= temp645_24 temp645_26))
(assert (= var82709 (bvsmod temp645_24 ARGNAME_sections_NAMEEND)))
(assert (= temp645_27 #x0000000000000000))
(assert (= var82710 (ite (= var82709 temp645_27) #x0000000000000001 #x0000000000000000)))
(assert (= temp645_28 #x0000000000000001))
(assert (= var82710 temp645_28))
(assert (= var140605 var67369))
(assert (= temp645_29 #x0000000000000001))
(assert (= var140635
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp645_29)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp645_30 #x0000000000000000))
(assert (= var140635 temp645_30))
(assert (= temp645_31 #x0000000000000001))
(assert (= var140664
   (ite (bvslt ARGNAME_sections_NAMEEND temp645_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp645_32 #x0000000000000000))
(assert (= var140664 temp645_32))
(assert (= temp645_34 #x0000000000000000))
(assert (= temp645_33 temp645_34))
(assert (= temp645_36 #x0000000000000000))
(assert (= temp645_35 temp645_36))
(assert (= var462146
   (ite (bvslt temp645_35 ARGNAME_sections_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp645_37
   (ite (= var462146 #x0000000000000001) ARGNAME_sections_NAMEEND temp645_35)))
(assert (= temp645_38 #x0000000000000000))
(assert (= var527687 temp645_38))
(assert (= var593234 var527687))
(assert (= temp645_39 #x0000000000000001))
(assert (= var1130139 temp645_39))
(assert (= temp645_40 #x0000000000000000))
(assert (= var1130188
   (ite (= ARGNAME_input_NAMEEND_DIM temp645_40)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp645_41 #x0000000000000000))
(assert (= var1130188 temp645_41))
(assert (= temp645_42 #x0000000000000005))
(assert (= var1380938 temp645_42))
(assert (= temp645_43 #x0000000000000005))
(assert (= var2101834 temp645_43))
(assert (= temp645_44 #x0000000000000001))
(assert (= var1130305
   (ite (bvslt var1130139 temp645_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp645_45 #x0000000000000000))
(assert (= var1130305 temp645_45))
(assert (= temp645_46 #x0000000000000000))
(assert (= var1130369 temp645_46))
(assert (= temp645_47 #xffffffffffffffff))
(assert (= var1130393 (bvxor var1130369 temp645_47)))
(assert (= var1130394 (bvadd var1130393 var1130139)))
(assert (= temp645_48 #x0000000000000000))
(assert (= var3226268 temp645_48))
(assert (= var3226269 var1130369))
(assert (= var3226272 var1130139))
(assert (= temp645_50 #x0000000000000000))
(assert (= temp645_49 temp645_50))
(model-add temp645_1 () (_ BitVec 64) #x0000000000000003)
(model-add temp645_2 () (_ BitVec 64) #x0000000000000000)
(model-add var82670 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






