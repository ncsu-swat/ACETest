(declare-fun temp3652_1 () (_ BitVec 64))
(declare-fun temp3652_2 () (_ BitVec 64))
(declare-fun var82670 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp3652_3 () (_ BitVec 64))
(declare-fun ARGNAME_sections_NAMEEND () (_ BitVec 64))
(declare-fun var82695 () (_ BitVec 64))
(declare-fun temp3652_4 () (_ BitVec 64))
(declare-fun temp3652_5 () (_ BitVec 64))
(declare-fun var67369 () (_ BitVec 64))
(declare-fun temp3652_6 () (_ BitVec 64))
(declare-fun temp3652_7 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp3652_8 () (_ BitVec 64))
(declare-fun temp3652_9 () (_ BitVec 64))
(declare-fun temp3652_10 () (_ BitVec 64))
(declare-fun temp3652_11 () (_ BitVec 64))
(declare-fun temp3652_12 () (_ BitVec 64))
(declare-fun temp3652_13 () (_ BitVec 64))
(declare-fun temp3652_14 () (_ BitVec 64))
(declare-fun temp3652_15 () (_ BitVec 64))
(declare-fun temp3652_16 () (_ BitVec 64))
(declare-fun temp3652_17 () (_ BitVec 64))
(declare-fun temp3652_18 () (_ BitVec 64))
(declare-fun temp3652_19 () (_ BitVec 64))
(declare-fun temp3652_20 () (_ BitVec 64))
(declare-fun temp3652_21 () (_ BitVec 64))
(declare-fun temp3652_22 () (_ BitVec 64))
(declare-fun temp3652_23 () (_ BitVec 64))
(declare-fun temp3652_25 () (_ BitVec 64))
(declare-fun temp3652_26 () (_ BitVec 64))
(declare-fun temp3652_24 () (_ BitVec 64))
(declare-fun var82709 () (_ BitVec 64))
(declare-fun temp3652_27 () (_ BitVec 64))
(declare-fun var82710 () (_ BitVec 64))
(declare-fun temp3652_28 () (_ BitVec 64))
(declare-fun var140605 () (_ BitVec 64))
(declare-fun temp3652_29 () (_ BitVec 64))
(declare-fun var140635 () (_ BitVec 64))
(declare-fun temp3652_30 () (_ BitVec 64))
(declare-fun temp3652_31 () (_ BitVec 64))
(declare-fun var140664 () (_ BitVec 64))
(declare-fun temp3652_32 () (_ BitVec 64))
(declare-fun temp3652_34 () (_ BitVec 64))
(declare-fun temp3652_33 () (_ BitVec 64))
(declare-fun temp3652_36 () (_ BitVec 64))
(declare-fun temp3652_35 () (_ BitVec 64))
(declare-fun var462146 () (_ BitVec 64))
(declare-fun temp3652_37 () (_ BitVec 64))
(declare-fun temp3652_38 () (_ BitVec 64))
(declare-fun var527687 () (_ BitVec 64))
(declare-fun var593234 () (_ BitVec 64))
(declare-fun temp3652_39 () (_ BitVec 64))
(declare-fun var1130139 () (_ BitVec 64))
(declare-fun temp3652_40 () (_ BitVec 64))
(declare-fun var1130188 () (_ BitVec 64))
(declare-fun temp3652_41 () (_ BitVec 64))
(declare-fun temp3652_42 () (_ BitVec 64))
(declare-fun var1380938 () (_ BitVec 64))
(declare-fun temp3652_43 () (_ BitVec 64))
(declare-fun var2101834 () (_ BitVec 64))
(declare-fun temp3652_44 () (_ BitVec 64))
(declare-fun var1130305 () (_ BitVec 64))
(declare-fun temp3652_45 () (_ BitVec 64))
(declare-fun temp3652_46 () (_ BitVec 64))
(declare-fun var3422876 () (_ BitVec 64))
(declare-fun var3422880 () (_ BitVec 64))
(declare-fun temp3652_47 () (_ BitVec 64))
(declare-fun temp3652_48 () (_ BitVec 64))
(declare-fun var4072313 () (_ BitVec 64))
(declare-fun var4072317 () (_ BitVec 64))
(declare-fun temp3652_49 () (_ BitVec 64))
(declare-fun temp3652_50 () (_ BitVec 64))
(declare-fun var4399993 () (_ BitVec 64))
(declare-fun var4399997 () (_ BitVec 64))
(declare-fun temp3652_52 () (_ BitVec 64))
(declare-fun temp3652_51 () (_ BitVec 64))
(assert (= temp3652_1 #x0000000000000003))
(assert (= var82670
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp3652_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3652_2 #x0000000000000000))
(assert (= var82670 temp3652_2))
(assert (= temp3652_3 #x0000000000000000))
(assert (= var82695
   (ite (= ARGNAME_sections_NAMEEND temp3652_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3652_4 #x0000000000000000))
(assert (= var82695 temp3652_4))
(assert (= temp3652_5 #x0000000000000002))
(assert (= var67369 temp3652_5))
(assert (= temp3652_6 #x0000000000000000))
(assert (= temp3652_7 temp3652_6))
(assert (= temp3652_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp3652_7)))
(assert (= temp3652_9 #x0000000000000001))
(assert (= temp3652_10 temp3652_9))
(assert (= temp3652_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp3652_10)))
(assert (= temp3652_12 #x0000000000000002))
(assert (= temp3652_13 temp3652_12))
(assert (= temp3652_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp3652_13)))
(assert (= temp3652_15 #x0000000000000003))
(assert (= temp3652_16 temp3652_15))
(assert (= temp3652_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp3652_16)))
(assert (= temp3652_18 #x0000000000000004))
(assert (= temp3652_19 temp3652_18))
(assert (= temp3652_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp3652_19)))
(assert (= temp3652_21 #x0000000000000005))
(assert (= temp3652_22 temp3652_21))
(assert (= temp3652_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp3652_22)))
(assert (= temp3652_25 var67369))
(assert (= temp3652_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp3652_25)))
(assert (= temp3652_24 temp3652_26))
(assert (= var82709 (bvsmod temp3652_24 ARGNAME_sections_NAMEEND)))
(assert (= temp3652_27 #x0000000000000000))
(assert (= var82710
   (ite (= var82709 temp3652_27) #x0000000000000001 #x0000000000000000)))
(assert (= temp3652_28 #x0000000000000001))
(assert (= var82710 temp3652_28))
(assert (= var140605 var67369))
(assert (= temp3652_29 #x0000000000000001))
(assert (= var140635
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp3652_29)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3652_30 #x0000000000000000))
(assert (= var140635 temp3652_30))
(assert (= temp3652_31 #x0000000000000001))
(assert (= var140664
   (ite (bvslt ARGNAME_sections_NAMEEND temp3652_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3652_32 #x0000000000000000))
(assert (= var140664 temp3652_32))
(assert (= temp3652_34 #x0000000000000000))
(assert (= temp3652_33 temp3652_34))
(assert (= temp3652_36 #x0000000000000000))
(assert (= temp3652_35 temp3652_36))
(assert (= var462146
   (ite (bvslt temp3652_35 ARGNAME_sections_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3652_37
   (ite (= var462146 #x0000000000000001) ARGNAME_sections_NAMEEND temp3652_35)))
(assert (= temp3652_38 #x0000000000000000))
(assert (= var527687 temp3652_38))
(assert (= var593234 var527687))
(assert (= temp3652_39 #x0000000000000001))
(assert (= var1130139 temp3652_39))
(assert (= temp3652_40 #x0000000000000000))
(assert (= var1130188
   (ite (= ARGNAME_input_NAMEEND_DIM temp3652_40)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3652_41 #x0000000000000000))
(assert (= var1130188 temp3652_41))
(assert (= temp3652_42 #x0000000000000005))
(assert (= var1380938 temp3652_42))
(assert (= temp3652_43 #x0000000000000005))
(assert (= var2101834 temp3652_43))
(assert (= temp3652_44 #x0000000000000001))
(assert (= var1130305
   (ite (bvslt var1130139 temp3652_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp3652_45 #x0000000000000000))
(assert (= var1130305 temp3652_45))
(assert (= temp3652_46 #x0000000000000000))
(assert (= var3422876 temp3652_46))
(assert (= var3422880 var1130139))
(assert (= temp3652_47 #x0000000000000000))
(assert (= var3422876 temp3652_47))
(assert (= temp3652_48 #x0000000000000000))
(assert (= var4072313 temp3652_48))
(assert (= var4072317 var3422880))
(assert (= temp3652_49 #x0000000000000000))
(assert (= var3422876 temp3652_49))
(assert (= temp3652_50 #x0000000000000000))
(assert (= var4399993 temp3652_50))
(assert (= var4399997 var3422880))
(assert (= temp3652_52 #x0000000000000000))
(assert (= temp3652_51 temp3652_52))
(model-add temp3652_1 () (_ BitVec 64) #x0000000000000003)
(model-add temp3652_2 () (_ BitVec 64) #x0000000000000000)
(model-add var82670 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






