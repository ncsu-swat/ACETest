(declare-fun temp895_1 () (_ BitVec 64))
(declare-fun temp895_2 () (_ BitVec 64))
(declare-fun var82670 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp895_3 () (_ BitVec 64))
(declare-fun ARGNAME_sections_NAMEEND () (_ BitVec 64))
(declare-fun var82695 () (_ BitVec 64))
(declare-fun temp895_4 () (_ BitVec 64))
(declare-fun temp895_5 () (_ BitVec 64))
(declare-fun var67369 () (_ BitVec 64))
(declare-fun temp895_6 () (_ BitVec 64))
(declare-fun temp895_7 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp895_8 () (_ BitVec 64))
(declare-fun temp895_9 () (_ BitVec 64))
(declare-fun temp895_10 () (_ BitVec 64))
(declare-fun temp895_11 () (_ BitVec 64))
(declare-fun temp895_12 () (_ BitVec 64))
(declare-fun temp895_13 () (_ BitVec 64))
(declare-fun temp895_14 () (_ BitVec 64))
(declare-fun temp895_15 () (_ BitVec 64))
(declare-fun temp895_16 () (_ BitVec 64))
(declare-fun temp895_17 () (_ BitVec 64))
(declare-fun temp895_18 () (_ BitVec 64))
(declare-fun temp895_19 () (_ BitVec 64))
(declare-fun temp895_20 () (_ BitVec 64))
(declare-fun temp895_21 () (_ BitVec 64))
(declare-fun temp895_22 () (_ BitVec 64))
(declare-fun temp895_23 () (_ BitVec 64))
(declare-fun temp895_25 () (_ BitVec 64))
(declare-fun temp895_26 () (_ BitVec 64))
(declare-fun temp895_24 () (_ BitVec 64))
(declare-fun var82709 () (_ BitVec 64))
(declare-fun temp895_27 () (_ BitVec 64))
(declare-fun var82710 () (_ BitVec 64))
(declare-fun temp895_28 () (_ BitVec 64))
(declare-fun var140605 () (_ BitVec 64))
(declare-fun temp895_29 () (_ BitVec 64))
(declare-fun var140635 () (_ BitVec 64))
(declare-fun temp895_30 () (_ BitVec 64))
(declare-fun temp895_31 () (_ BitVec 64))
(declare-fun var140664 () (_ BitVec 64))
(declare-fun temp895_32 () (_ BitVec 64))
(declare-fun temp895_34 () (_ BitVec 64))
(declare-fun temp895_33 () (_ BitVec 64))
(declare-fun temp895_36 () (_ BitVec 64))
(declare-fun temp895_35 () (_ BitVec 64))
(declare-fun var462146 () (_ BitVec 64))
(declare-fun temp895_37 () (_ BitVec 64))
(declare-fun temp895_38 () (_ BitVec 64))
(declare-fun var527687 () (_ BitVec 64))
(declare-fun var593234 () (_ BitVec 64))
(declare-fun temp895_39 () (_ BitVec 64))
(declare-fun var1130139 () (_ BitVec 64))
(declare-fun temp895_40 () (_ BitVec 64))
(declare-fun var1130188 () (_ BitVec 64))
(declare-fun temp895_41 () (_ BitVec 64))
(declare-fun temp895_42 () (_ BitVec 64))
(declare-fun var1380938 () (_ BitVec 64))
(declare-fun temp895_43 () (_ BitVec 64))
(declare-fun var2101834 () (_ BitVec 64))
(declare-fun temp895_44 () (_ BitVec 64))
(declare-fun var1130304 () (_ BitVec 64))
(declare-fun temp895_45 () (_ BitVec 64))
(declare-fun var1130305 () (_ BitVec 64))
(declare-fun temp895_46 () (_ BitVec 64))
(declare-fun temp895_47 () (_ BitVec 64))
(declare-fun var1130349 () (_ BitVec 64))
(declare-fun temp895_48 () (_ BitVec 64))
(declare-fun temp895_49 () (_ BitVec 64))
(declare-fun var1130369 () (_ BitVec 64))
(declare-fun temp895_50 () (_ BitVec 64))
(declare-fun var1130393 () (_ BitVec 64))
(declare-fun var1130394 () (_ BitVec 64))
(declare-fun temp895_51 () (_ BitVec 64))
(declare-fun var3357340 () (_ BitVec 64))
(declare-fun var3357341 () (_ BitVec 64))
(declare-fun var3357344 () (_ BitVec 64))
(declare-fun temp895_53 () (_ BitVec 64))
(declare-fun temp895_52 () (_ BitVec 64))
(assert (= temp895_1 #x0000000000000003))
(assert (= var82670
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp895_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp895_2 #x0000000000000000))
(assert (= var82670 temp895_2))
(assert (= temp895_3 #x0000000000000000))
(assert (= var82695
   (ite (= ARGNAME_sections_NAMEEND temp895_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp895_4 #x0000000000000000))
(assert (= var82695 temp895_4))
(assert (= temp895_5 #x0000000000000002))
(assert (= var67369 temp895_5))
(assert (= temp895_6 #x0000000000000000))
(assert (= temp895_7 temp895_6))
(assert (= temp895_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp895_7)))
(assert (= temp895_9 #x0000000000000001))
(assert (= temp895_10 temp895_9))
(assert (= temp895_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp895_10)))
(assert (= temp895_12 #x0000000000000002))
(assert (= temp895_13 temp895_12))
(assert (= temp895_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp895_13)))
(assert (= temp895_15 #x0000000000000003))
(assert (= temp895_16 temp895_15))
(assert (= temp895_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp895_16)))
(assert (= temp895_18 #x0000000000000004))
(assert (= temp895_19 temp895_18))
(assert (= temp895_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp895_19)))
(assert (= temp895_21 #x0000000000000005))
(assert (= temp895_22 temp895_21))
(assert (= temp895_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp895_22)))
(assert (= temp895_25 var67369))
(assert (= temp895_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp895_25)))
(assert (= temp895_24 temp895_26))
(assert (= var82709 (bvsmod temp895_24 ARGNAME_sections_NAMEEND)))
(assert (= temp895_27 #x0000000000000000))
(assert (= var82710 (ite (= var82709 temp895_27) #x0000000000000001 #x0000000000000000)))
(assert (= temp895_28 #x0000000000000001))
(assert (= var82710 temp895_28))
(assert (= var140605 var67369))
(assert (= temp895_29 #x0000000000000001))
(assert (= var140635
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp895_29)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp895_30 #x0000000000000000))
(assert (= var140635 temp895_30))
(assert (= temp895_31 #x0000000000000001))
(assert (= var140664
   (ite (bvslt ARGNAME_sections_NAMEEND temp895_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp895_32 #x0000000000000000))
(assert (= var140664 temp895_32))
(assert (= temp895_34 #x0000000000000000))
(assert (= temp895_33 temp895_34))
(assert (= temp895_36 #x0000000000000000))
(assert (= temp895_35 temp895_36))
(assert (= var462146
   (ite (bvslt temp895_35 ARGNAME_sections_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp895_37
   (ite (= var462146 #x0000000000000001) ARGNAME_sections_NAMEEND temp895_35)))
(assert (= temp895_38 #x0000000000000000))
(assert (= var527687 temp895_38))
(assert (= var593234 var527687))
(assert (= temp895_39 #x0000000000000001))
(assert (= var1130139 temp895_39))
(assert (= temp895_40 #x0000000000000000))
(assert (= var1130188
   (ite (= ARGNAME_input_NAMEEND_DIM temp895_40)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp895_41 #x0000000000000000))
(assert (= var1130188 temp895_41))
(assert (= temp895_42 #x0000000000000005))
(assert (= var1380938 temp895_42))
(assert (= temp895_43 #x0000000000000005))
(assert (= var2101834 temp895_43))
(assert (= temp895_44 #xffffffffffffffff))
(assert (= var1130304 temp895_44))
(assert (= temp895_45 #x0000000000000001))
(assert (= var1130305
   (ite (bvslt var1130139 temp895_45) #x0000000000000001 #x0000000000000000)))
(assert (= temp895_46 #x0000000000000000))
(assert (= var1130305 temp895_46))
(assert (= temp895_47 #x0000000000000000))
(assert (= var1130349
   (ite (bvslt var1130304 temp895_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp895_48 #x0000000000000001))
(assert (= var1130349 temp895_48))
(assert (= temp895_49 #x0000000000000000))
(assert (= var1130369 temp895_49))
(assert (= temp895_50 #xffffffffffffffff))
(assert (= var1130393 (bvxor var1130369 temp895_50)))
(assert (= var1130394 (bvadd var1130393 var1130139)))
(assert (= temp895_51 #x0000000000000000))
(assert (= var3357340 temp895_51))
(assert (= var3357341 var1130369))
(assert (= var3357344 var1130139))
(assert (= temp895_53 #x0000000000000000))
(assert (= temp895_52 temp895_53))
(model-add temp895_1 () (_ BitVec 64) #x0000000000000003)
(model-add temp895_2 () (_ BitVec 64) #x0000000000000000)
(model-add var82670 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




