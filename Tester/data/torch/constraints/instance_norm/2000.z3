(declare-fun temp11000_1 () (_ BitVec 64))
(declare-fun ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64))
(declare-fun temp11000_2 () (_ BitVec 64))
(declare-fun var985537 () (_ BitVec 64))
(declare-fun var985545 () (_ BitVec 64))
(declare-fun temp11000_3 () (_ BitVec 64))
(declare-fun temp11000_4 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11000_5 () (_ BitVec 64))
(declare-fun temp11000_6 () (_ BitVec 64))
(declare-fun temp11000_7 () (_ BitVec 64))
(declare-fun temp11000_8 () (_ BitVec 64))
(declare-fun temp11000_9 () (_ BitVec 64))
(declare-fun temp11000_10 () (_ BitVec 64))
(declare-fun temp11000_11 () (_ BitVec 64))
(declare-fun temp11000_12 () (_ BitVec 64))
(declare-fun temp11000_13 () (_ BitVec 64))
(declare-fun temp11000_14 () (_ BitVec 64))
(declare-fun temp11000_15 () (_ BitVec 64))
(declare-fun temp11000_16 () (_ BitVec 64))
(declare-fun temp11000_17 () (_ BitVec 64))
(declare-fun temp11000_18 () (_ BitVec 64))
(declare-fun temp11000_19 () (_ BitVec 64))
(declare-fun temp11000_20 () (_ BitVec 64))
(declare-fun temp11000_21 () (_ BitVec 64))
(declare-fun temp11000_22 () (_ BitVec 64))
(declare-fun temp11000_23 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11000_24 () (_ BitVec 64))
(declare-fun temp11000_25 () (_ BitVec 64))
(declare-fun temp11000_26 () (_ BitVec 64))
(declare-fun temp11000_27 () (_ BitVec 64))
(declare-fun temp11000_28 () (_ BitVec 64))
(declare-fun var2039185 () (_ BitVec 64))
(declare-fun temp11000_29 () (_ BitVec 64))
(declare-fun var2235793 () (_ BitVec 64))
(declare-fun temp11000_30 () (_ BitVec 64))
(declare-fun temp11000_31 () (_ BitVec 64))
(declare-fun temp11000_32 () (_ BitVec 64))
(declare-fun temp11000_33 () (_ BitVec 64))
(declare-fun temp11000_34 () (_ BitVec 64))
(declare-fun var2753483 () (_ BitVec 64))
(declare-fun temp11000_35 () (_ BitVec 64))
(declare-fun var2756010 () (_ BitVec 64))
(declare-fun temp11000_36 () (_ BitVec 64))
(declare-fun temp11000_38 () (_ BitVec 64))
(declare-fun temp11000_37 () (_ BitVec 64))
(declare-fun temp11000_40 () (_ BitVec 64))
(declare-fun temp11000_39 () (_ BitVec 64))
(declare-fun temp11000_41 () (_ BitVec 64))
(declare-fun temp11000_42 () (_ BitVec 64))
(declare-fun temp11000_44 () (_ BitVec 64))
(declare-fun temp11000_43 () (_ BitVec 64))
(declare-fun temp11000_46 () (_ BitVec 64))
(declare-fun temp11000_45 () (_ BitVec 64))
(declare-fun temp11000_47 () (_ BitVec 64))
(declare-fun temp11000_48 () (_ BitVec 64))
(declare-fun temp11000_50 () (_ BitVec 64))
(declare-fun temp11000_49 () (_ BitVec 64))
(declare-fun temp11000_52 () (_ BitVec 64))
(declare-fun temp11000_51 () (_ BitVec 64))
(declare-fun temp11000_53 () (_ BitVec 64))
(declare-fun var9767361 () (_ BitVec 64))
(declare-fun var9767369 () (_ BitVec 64))
(assert (= temp11000_1 #x0000000000000001))
(assert (= ARGNAME_use_input_stats_NAMEEND temp11000_1))
(assert (= temp11000_2 #x0000000000000002))
(assert (= var985537 temp11000_2))
(assert (= var985545 var985537))
(assert (= temp11000_3 #x0000000000000000))
(assert (= temp11000_4 temp11000_3))
(assert (= temp11000_5 (select ARGNAME_input_NAMEEND_DIMSIZE temp11000_4)))
(assert (= temp11000_6 #x0000000000000001))
(assert (= temp11000_7 temp11000_6))
(assert (= temp11000_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp11000_7)))
(assert (= temp11000_9 #x0000000000000002))
(assert (= temp11000_10 temp11000_9))
(assert (= temp11000_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp11000_10)))
(assert (= temp11000_12 #x0000000000000003))
(assert (= temp11000_13 temp11000_12))
(assert (= temp11000_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp11000_13)))
(assert (= temp11000_15 #x0000000000000004))
(assert (= temp11000_16 temp11000_15))
(assert (= temp11000_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp11000_16)))
(assert (= temp11000_18 #x0000000000000005))
(assert (= temp11000_19 temp11000_18))
(assert (= temp11000_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp11000_19)))
(assert (= temp11000_21 #x0000000000000000))
(assert (= temp11000_22 temp11000_21))
(assert (= temp11000_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp11000_22)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp11000_21))
(assert (bvsge temp11000_21 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp11000_24 #x0000000000000001))
(assert (= temp11000_25 temp11000_24))
(assert (= temp11000_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp11000_25)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp11000_24))
(assert (bvsge temp11000_24 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp11000_27 temp11000_26))
(assert (= temp11000_28 #x0000000000000001))
(assert (= var2039185 temp11000_28))
(assert (= temp11000_29 #x0000000000000000))
(assert (= var2235793 temp11000_29))
(assert (= temp11000_30 temp11000_23))
(assert (= temp11000_31 temp11000_23))
(assert (= temp11000_32 temp11000_23))
(assert (= temp11000_33 temp11000_23))
(assert (= temp11000_34 #x0000000000000001))
(assert (= var2753483 temp11000_34))
(assert (= temp11000_35 #x0000000000000000))
(assert (= var2756010 temp11000_35))
(assert (= temp11000_36 #x0000000000000000))
(assert (= var2756010 temp11000_36))
(assert (= temp11000_38 #x0000000000000000))
(assert (= temp11000_37 temp11000_38))
(assert (= temp11000_40 #x0000000000000002))
(assert (= temp11000_39 temp11000_40))
(assert (= temp11000_41 temp11000_23))
(assert (= temp11000_42 temp11000_26))
(assert (= temp11000_44 #x0000000000000002))
(assert (= temp11000_43 temp11000_44))
(assert (= temp11000_46 #x0000000000000000))
(assert (= temp11000_45 temp11000_46))
(assert (= temp11000_47 temp11000_23))
(assert (= temp11000_48 temp11000_26))
(assert (= temp11000_50 #x0000000000000002))
(assert (= temp11000_49 temp11000_50))
(assert (= temp11000_52 #x0000000000000000))
(assert (= temp11000_51 temp11000_52))
(assert (= temp11000_53 #x0000000000000002))
(assert (= var9767361 temp11000_53))
(assert (= var9767369 var9767361))
(model-add temp11000_1 () (_ BitVec 64) #x0000000000000001)
(model-add ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64) #x0000000000000001)





