(declare-fun temp10800_1 () (_ BitVec 64))
(declare-fun ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64))
(declare-fun temp10800_2 () (_ BitVec 64))
(declare-fun var985537 () (_ BitVec 64))
(declare-fun var985545 () (_ BitVec 64))
(declare-fun temp10800_3 () (_ BitVec 64))
(declare-fun temp10800_4 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10800_5 () (_ BitVec 64))
(declare-fun temp10800_6 () (_ BitVec 64))
(declare-fun temp10800_7 () (_ BitVec 64))
(declare-fun temp10800_8 () (_ BitVec 64))
(declare-fun temp10800_9 () (_ BitVec 64))
(declare-fun temp10800_10 () (_ BitVec 64))
(declare-fun temp10800_11 () (_ BitVec 64))
(declare-fun temp10800_12 () (_ BitVec 64))
(declare-fun temp10800_13 () (_ BitVec 64))
(declare-fun temp10800_14 () (_ BitVec 64))
(declare-fun temp10800_15 () (_ BitVec 64))
(declare-fun temp10800_16 () (_ BitVec 64))
(declare-fun temp10800_17 () (_ BitVec 64))
(declare-fun temp10800_18 () (_ BitVec 64))
(declare-fun temp10800_19 () (_ BitVec 64))
(declare-fun temp10800_20 () (_ BitVec 64))
(declare-fun temp10800_21 () (_ BitVec 64))
(declare-fun temp10800_22 () (_ BitVec 64))
(declare-fun temp10800_23 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10800_24 () (_ BitVec 64))
(declare-fun temp10800_25 () (_ BitVec 64))
(declare-fun temp10800_26 () (_ BitVec 64))
(declare-fun temp10800_27 () (_ BitVec 64))
(declare-fun temp10800_28 () (_ BitVec 64))
(declare-fun var2039185 () (_ BitVec 64))
(declare-fun temp10800_29 () (_ BitVec 64))
(declare-fun var2235793 () (_ BitVec 64))
(declare-fun temp10800_30 () (_ BitVec 64))
(declare-fun temp10800_31 () (_ BitVec 64))
(declare-fun temp10800_32 () (_ BitVec 64))
(declare-fun temp10800_33 () (_ BitVec 64))
(declare-fun temp10800_34 () (_ BitVec 64))
(declare-fun var2753483 () (_ BitVec 64))
(declare-fun temp10800_35 () (_ BitVec 64))
(declare-fun var2756010 () (_ BitVec 64))
(declare-fun temp10800_36 () (_ BitVec 64))
(declare-fun temp10800_38 () (_ BitVec 64))
(declare-fun temp10800_37 () (_ BitVec 64))
(declare-fun temp10800_40 () (_ BitVec 64))
(declare-fun temp10800_39 () (_ BitVec 64))
(declare-fun temp10800_41 () (_ BitVec 64))
(declare-fun temp10800_42 () (_ BitVec 64))
(declare-fun temp10800_44 () (_ BitVec 64))
(declare-fun temp10800_43 () (_ BitVec 64))
(declare-fun temp10800_46 () (_ BitVec 64))
(declare-fun temp10800_45 () (_ BitVec 64))
(declare-fun temp10800_47 () (_ BitVec 64))
(declare-fun temp10800_48 () (_ BitVec 64))
(declare-fun temp10800_50 () (_ BitVec 64))
(declare-fun temp10800_49 () (_ BitVec 64))
(declare-fun temp10800_52 () (_ BitVec 64))
(declare-fun temp10800_51 () (_ BitVec 64))
(declare-fun temp10800_53 () (_ BitVec 64))
(declare-fun var9308609 () (_ BitVec 64))
(declare-fun var9308617 () (_ BitVec 64))
(assert (= temp10800_1 #x0000000000000001))
(assert (= ARGNAME_use_input_stats_NAMEEND temp10800_1))
(assert (= temp10800_2 #x0000000000000002))
(assert (= var985537 temp10800_2))
(assert (= var985545 var985537))
(assert (= temp10800_3 #x0000000000000000))
(assert (= temp10800_4 temp10800_3))
(assert (= temp10800_5 (select ARGNAME_input_NAMEEND_DIMSIZE temp10800_4)))
(assert (= temp10800_6 #x0000000000000001))
(assert (= temp10800_7 temp10800_6))
(assert (= temp10800_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp10800_7)))
(assert (= temp10800_9 #x0000000000000002))
(assert (= temp10800_10 temp10800_9))
(assert (= temp10800_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp10800_10)))
(assert (= temp10800_12 #x0000000000000003))
(assert (= temp10800_13 temp10800_12))
(assert (= temp10800_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp10800_13)))
(assert (= temp10800_15 #x0000000000000004))
(assert (= temp10800_16 temp10800_15))
(assert (= temp10800_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp10800_16)))
(assert (= temp10800_18 #x0000000000000005))
(assert (= temp10800_19 temp10800_18))
(assert (= temp10800_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp10800_19)))
(assert (= temp10800_21 #x0000000000000000))
(assert (= temp10800_22 temp10800_21))
(assert (= temp10800_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp10800_22)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp10800_21))
(assert (bvsge temp10800_21 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp10800_24 #x0000000000000001))
(assert (= temp10800_25 temp10800_24))
(assert (= temp10800_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp10800_25)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp10800_24))
(assert (bvsge temp10800_24 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp10800_27 temp10800_26))
(assert (= temp10800_28 #x0000000000000001))
(assert (= var2039185 temp10800_28))
(assert (= temp10800_29 #x0000000000000000))
(assert (= var2235793 temp10800_29))
(assert (= temp10800_30 temp10800_23))
(assert (= temp10800_31 temp10800_23))
(assert (= temp10800_32 temp10800_23))
(assert (= temp10800_33 temp10800_23))
(assert (= temp10800_34 #x0000000000000001))
(assert (= var2753483 temp10800_34))
(assert (= temp10800_35 #x0000000000000000))
(assert (= var2756010 temp10800_35))
(assert (= temp10800_36 #x0000000000000000))
(assert (= var2756010 temp10800_36))
(assert (= temp10800_38 #x0000000000000000))
(assert (= temp10800_37 temp10800_38))
(assert (= temp10800_40 #x0000000000000000))
(assert (= temp10800_39 temp10800_40))
(assert (= temp10800_41 temp10800_23))
(assert (= temp10800_42 temp10800_26))
(assert (= temp10800_44 #x0000000000000002))
(assert (= temp10800_43 temp10800_44))
(assert (= temp10800_46 #x0000000000000000))
(assert (= temp10800_45 temp10800_46))
(assert (= temp10800_47 temp10800_23))
(assert (= temp10800_48 temp10800_26))
(assert (= temp10800_50 #x0000000000000002))
(assert (= temp10800_49 temp10800_50))
(assert (= temp10800_52 #x0000000000000000))
(assert (= temp10800_51 temp10800_52))
(assert (= temp10800_53 #x0000000000000002))
(assert (= var9308609 temp10800_53))
(assert (= var9308617 var9308609))
(model-add temp10800_1 () (_ BitVec 64) #x0000000000000001)
(model-add ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64) #x0000000000000001)





