(declare-fun temp10101_1 () (_ BitVec 64))
(declare-fun ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64))
(declare-fun temp10101_2 () (_ BitVec 64))
(declare-fun var985537 () (_ BitVec 64))
(declare-fun var985545 () (_ BitVec 64))
(declare-fun temp10101_3 () (_ BitVec 64))
(declare-fun temp10101_4 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10101_5 () (_ BitVec 64))
(declare-fun temp10101_6 () (_ BitVec 64))
(declare-fun temp10101_7 () (_ BitVec 64))
(declare-fun temp10101_8 () (_ BitVec 64))
(declare-fun temp10101_9 () (_ BitVec 64))
(declare-fun temp10101_10 () (_ BitVec 64))
(declare-fun temp10101_11 () (_ BitVec 64))
(declare-fun temp10101_12 () (_ BitVec 64))
(declare-fun temp10101_13 () (_ BitVec 64))
(declare-fun temp10101_14 () (_ BitVec 64))
(declare-fun temp10101_15 () (_ BitVec 64))
(declare-fun temp10101_16 () (_ BitVec 64))
(declare-fun temp10101_17 () (_ BitVec 64))
(declare-fun temp10101_18 () (_ BitVec 64))
(declare-fun temp10101_19 () (_ BitVec 64))
(declare-fun temp10101_20 () (_ BitVec 64))
(declare-fun temp10101_21 () (_ BitVec 64))
(declare-fun temp10101_22 () (_ BitVec 64))
(declare-fun temp10101_23 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10101_24 () (_ BitVec 64))
(declare-fun temp10101_25 () (_ BitVec 64))
(declare-fun temp10101_26 () (_ BitVec 64))
(declare-fun temp10101_27 () (_ BitVec 64))
(declare-fun temp10101_28 () (_ BitVec 64))
(declare-fun var2039185 () (_ BitVec 64))
(declare-fun temp10101_29 () (_ BitVec 64))
(declare-fun var2235793 () (_ BitVec 64))
(declare-fun temp10101_30 () (_ BitVec 64))
(declare-fun temp10101_31 () (_ BitVec 64))
(declare-fun temp10101_32 () (_ BitVec 64))
(declare-fun temp10101_33 () (_ BitVec 64))
(declare-fun temp10101_34 () (_ BitVec 64))
(declare-fun var2753483 () (_ BitVec 64))
(declare-fun temp10101_35 () (_ BitVec 64))
(declare-fun var2756010 () (_ BitVec 64))
(declare-fun temp10101_36 () (_ BitVec 64))
(declare-fun temp10101_38 () (_ BitVec 64))
(declare-fun temp10101_37 () (_ BitVec 64))
(declare-fun temp10101_40 () (_ BitVec 64))
(declare-fun temp10101_39 () (_ BitVec 64))
(declare-fun temp10101_41 () (_ BitVec 64))
(declare-fun temp10101_42 () (_ BitVec 64))
(declare-fun temp10101_44 () (_ BitVec 64))
(declare-fun temp10101_43 () (_ BitVec 64))
(declare-fun temp10101_46 () (_ BitVec 64))
(declare-fun temp10101_45 () (_ BitVec 64))
(declare-fun temp10101_47 () (_ BitVec 64))
(declare-fun temp10101_48 () (_ BitVec 64))
(declare-fun temp10101_50 () (_ BitVec 64))
(declare-fun temp10101_49 () (_ BitVec 64))
(declare-fun temp10101_52 () (_ BitVec 64))
(declare-fun temp10101_51 () (_ BitVec 64))
(declare-fun temp10101_53 () (_ BitVec 64))
(declare-fun var8980929 () (_ BitVec 64))
(declare-fun var8980937 () (_ BitVec 64))
(assert (= temp10101_1 #x0000000000000001))
(assert (= ARGNAME_use_input_stats_NAMEEND temp10101_1))
(assert (= temp10101_2 #x0000000000000002))
(assert (= var985537 temp10101_2))
(assert (= var985545 var985537))
(assert (= temp10101_3 #x0000000000000000))
(assert (= temp10101_4 temp10101_3))
(assert (= temp10101_5 (select ARGNAME_input_NAMEEND_DIMSIZE temp10101_4)))
(assert (= temp10101_6 #x0000000000000001))
(assert (= temp10101_7 temp10101_6))
(assert (= temp10101_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp10101_7)))
(assert (= temp10101_9 #x0000000000000002))
(assert (= temp10101_10 temp10101_9))
(assert (= temp10101_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp10101_10)))
(assert (= temp10101_12 #x0000000000000003))
(assert (= temp10101_13 temp10101_12))
(assert (= temp10101_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp10101_13)))
(assert (= temp10101_15 #x0000000000000004))
(assert (= temp10101_16 temp10101_15))
(assert (= temp10101_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp10101_16)))
(assert (= temp10101_18 #x0000000000000005))
(assert (= temp10101_19 temp10101_18))
(assert (= temp10101_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp10101_19)))
(assert (= temp10101_21 #x0000000000000000))
(assert (= temp10101_22 temp10101_21))
(assert (= temp10101_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp10101_22)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp10101_21))
(assert (bvsge temp10101_21 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp10101_24 #x0000000000000001))
(assert (= temp10101_25 temp10101_24))
(assert (= temp10101_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp10101_25)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp10101_24))
(assert (bvsge temp10101_24 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp10101_27 temp10101_26))
(assert (= temp10101_28 #x0000000000000001))
(assert (= var2039185 temp10101_28))
(assert (= temp10101_29 #x0000000000000000))
(assert (= var2235793 temp10101_29))
(assert (= temp10101_30 temp10101_23))
(assert (= temp10101_31 temp10101_23))
(assert (= temp10101_32 temp10101_23))
(assert (= temp10101_33 temp10101_23))
(assert (= temp10101_34 #x0000000000000001))
(assert (= var2753483 temp10101_34))
(assert (= temp10101_35 #x0000000000000000))
(assert (= var2756010 temp10101_35))
(assert (= temp10101_36 #x0000000000000000))
(assert (= var2756010 temp10101_36))
(assert (= temp10101_38 #x0000000000000000))
(assert (= temp10101_37 temp10101_38))
(assert (= temp10101_40 #x0000000000000000))
(assert (= temp10101_39 temp10101_40))
(assert (= temp10101_41 temp10101_23))
(assert (= temp10101_42 temp10101_26))
(assert (= temp10101_44 #x0000000000000002))
(assert (= temp10101_43 temp10101_44))
(assert (= temp10101_46 #x0000000000000000))
(assert (= temp10101_45 temp10101_46))
(assert (= temp10101_47 temp10101_23))
(assert (= temp10101_48 temp10101_26))
(assert (= temp10101_50 #x0000000000000002))
(assert (= temp10101_49 temp10101_50))
(assert (= temp10101_52 #x0000000000000000))
(assert (= temp10101_51 temp10101_52))
(assert (= temp10101_53 #x0000000000000002))
(assert (= var8980929 temp10101_53))
(assert (= var8980937 var8980929))
(model-add temp10101_1 () (_ BitVec 64) #x0000000000000001)
(model-add ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64) #x0000000000000001)





