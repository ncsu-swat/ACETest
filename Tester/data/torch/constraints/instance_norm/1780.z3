(declare-fun temp10780_1 () (_ BitVec 64))
(declare-fun ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64))
(declare-fun temp10780_2 () (_ BitVec 64))
(declare-fun var985537 () (_ BitVec 64))
(declare-fun var985545 () (_ BitVec 64))
(declare-fun temp10780_3 () (_ BitVec 64))
(declare-fun temp10780_4 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10780_5 () (_ BitVec 64))
(declare-fun temp10780_6 () (_ BitVec 64))
(declare-fun temp10780_7 () (_ BitVec 64))
(declare-fun temp10780_8 () (_ BitVec 64))
(declare-fun temp10780_9 () (_ BitVec 64))
(declare-fun temp10780_10 () (_ BitVec 64))
(declare-fun temp10780_11 () (_ BitVec 64))
(declare-fun temp10780_12 () (_ BitVec 64))
(declare-fun temp10780_13 () (_ BitVec 64))
(declare-fun temp10780_14 () (_ BitVec 64))
(declare-fun temp10780_15 () (_ BitVec 64))
(declare-fun temp10780_16 () (_ BitVec 64))
(declare-fun temp10780_17 () (_ BitVec 64))
(declare-fun temp10780_18 () (_ BitVec 64))
(declare-fun temp10780_19 () (_ BitVec 64))
(declare-fun temp10780_20 () (_ BitVec 64))
(declare-fun temp10780_21 () (_ BitVec 64))
(declare-fun temp10780_22 () (_ BitVec 64))
(declare-fun temp10780_23 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10780_24 () (_ BitVec 64))
(declare-fun temp10780_25 () (_ BitVec 64))
(declare-fun temp10780_26 () (_ BitVec 64))
(declare-fun temp10780_27 () (_ BitVec 64))
(declare-fun temp10780_28 () (_ BitVec 64))
(declare-fun var2039185 () (_ BitVec 64))
(declare-fun temp10780_29 () (_ BitVec 64))
(declare-fun var2235793 () (_ BitVec 64))
(declare-fun temp10780_30 () (_ BitVec 64))
(declare-fun temp10780_31 () (_ BitVec 64))
(declare-fun temp10780_32 () (_ BitVec 64))
(declare-fun temp10780_33 () (_ BitVec 64))
(declare-fun temp10780_34 () (_ BitVec 64))
(declare-fun var2753483 () (_ BitVec 64))
(declare-fun temp10780_35 () (_ BitVec 64))
(declare-fun var2756010 () (_ BitVec 64))
(declare-fun temp10780_36 () (_ BitVec 64))
(declare-fun temp10780_38 () (_ BitVec 64))
(declare-fun temp10780_37 () (_ BitVec 64))
(declare-fun temp10780_40 () (_ BitVec 64))
(declare-fun temp10780_39 () (_ BitVec 64))
(declare-fun temp10780_41 () (_ BitVec 64))
(declare-fun temp10780_42 () (_ BitVec 64))
(declare-fun temp10780_44 () (_ BitVec 64))
(declare-fun temp10780_43 () (_ BitVec 64))
(declare-fun temp10780_46 () (_ BitVec 64))
(declare-fun temp10780_45 () (_ BitVec 64))
(declare-fun temp10780_47 () (_ BitVec 64))
(declare-fun temp10780_48 () (_ BitVec 64))
(declare-fun temp10780_50 () (_ BitVec 64))
(declare-fun temp10780_49 () (_ BitVec 64))
(declare-fun temp10780_52 () (_ BitVec 64))
(declare-fun temp10780_51 () (_ BitVec 64))
(declare-fun temp10780_53 () (_ BitVec 64))
(declare-fun var9308609 () (_ BitVec 64))
(declare-fun var9308617 () (_ BitVec 64))
(assert (= temp10780_1 #x0000000000000001))
(assert (= ARGNAME_use_input_stats_NAMEEND temp10780_1))
(assert (= temp10780_2 #x0000000000000002))
(assert (= var985537 temp10780_2))
(assert (= var985545 var985537))
(assert (= temp10780_3 #x0000000000000000))
(assert (= temp10780_4 temp10780_3))
(assert (= temp10780_5 (select ARGNAME_input_NAMEEND_DIMSIZE temp10780_4)))
(assert (= temp10780_6 #x0000000000000001))
(assert (= temp10780_7 temp10780_6))
(assert (= temp10780_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp10780_7)))
(assert (= temp10780_9 #x0000000000000002))
(assert (= temp10780_10 temp10780_9))
(assert (= temp10780_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp10780_10)))
(assert (= temp10780_12 #x0000000000000003))
(assert (= temp10780_13 temp10780_12))
(assert (= temp10780_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp10780_13)))
(assert (= temp10780_15 #x0000000000000004))
(assert (= temp10780_16 temp10780_15))
(assert (= temp10780_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp10780_16)))
(assert (= temp10780_18 #x0000000000000005))
(assert (= temp10780_19 temp10780_18))
(assert (= temp10780_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp10780_19)))
(assert (= temp10780_21 #x0000000000000000))
(assert (= temp10780_22 temp10780_21))
(assert (= temp10780_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp10780_22)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp10780_21))
(assert (bvsge temp10780_21 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp10780_24 #x0000000000000001))
(assert (= temp10780_25 temp10780_24))
(assert (= temp10780_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp10780_25)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp10780_24))
(assert (bvsge temp10780_24 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp10780_27 temp10780_26))
(assert (= temp10780_28 #x0000000000000001))
(assert (= var2039185 temp10780_28))
(assert (= temp10780_29 #x0000000000000000))
(assert (= var2235793 temp10780_29))
(assert (= temp10780_30 temp10780_23))
(assert (= temp10780_31 temp10780_23))
(assert (= temp10780_32 temp10780_23))
(assert (= temp10780_33 temp10780_23))
(assert (= temp10780_34 #x0000000000000001))
(assert (= var2753483 temp10780_34))
(assert (= temp10780_35 #x0000000000000000))
(assert (= var2756010 temp10780_35))
(assert (= temp10780_36 #x0000000000000000))
(assert (= var2756010 temp10780_36))
(assert (= temp10780_38 #x0000000000000000))
(assert (= temp10780_37 temp10780_38))
(assert (= temp10780_40 #x0000000000000000))
(assert (= temp10780_39 temp10780_40))
(assert (= temp10780_41 temp10780_23))
(assert (= temp10780_42 temp10780_26))
(assert (= temp10780_44 #x0000000000000002))
(assert (= temp10780_43 temp10780_44))
(assert (= temp10780_46 #x0000000000000000))
(assert (= temp10780_45 temp10780_46))
(assert (= temp10780_47 temp10780_23))
(assert (= temp10780_48 temp10780_26))
(assert (= temp10780_50 #x0000000000000002))
(assert (= temp10780_49 temp10780_50))
(assert (= temp10780_52 #x0000000000000000))
(assert (= temp10780_51 temp10780_52))
(assert (= temp10780_53 #x0000000000000002))
(assert (= var9308609 temp10780_53))
(assert (= var9308617 var9308609))
(model-add temp10780_1 () (_ BitVec 64) #x0000000000000001)
(model-add ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64) #x0000000000000001)



