(declare-fun temp10861_1 () (_ BitVec 64))
(declare-fun ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64))
(declare-fun temp10861_2 () (_ BitVec 64))
(declare-fun var985537 () (_ BitVec 64))
(declare-fun var985545 () (_ BitVec 64))
(declare-fun temp10861_3 () (_ BitVec 64))
(declare-fun temp10861_4 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10861_5 () (_ BitVec 64))
(declare-fun temp10861_6 () (_ BitVec 64))
(declare-fun temp10861_7 () (_ BitVec 64))
(declare-fun temp10861_8 () (_ BitVec 64))
(declare-fun temp10861_9 () (_ BitVec 64))
(declare-fun temp10861_10 () (_ BitVec 64))
(declare-fun temp10861_11 () (_ BitVec 64))
(declare-fun temp10861_12 () (_ BitVec 64))
(declare-fun temp10861_13 () (_ BitVec 64))
(declare-fun temp10861_14 () (_ BitVec 64))
(declare-fun temp10861_15 () (_ BitVec 64))
(declare-fun temp10861_16 () (_ BitVec 64))
(declare-fun temp10861_17 () (_ BitVec 64))
(declare-fun temp10861_18 () (_ BitVec 64))
(declare-fun temp10861_19 () (_ BitVec 64))
(declare-fun temp10861_20 () (_ BitVec 64))
(declare-fun temp10861_21 () (_ BitVec 64))
(declare-fun temp10861_22 () (_ BitVec 64))
(declare-fun temp10861_23 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10861_24 () (_ BitVec 64))
(declare-fun temp10861_25 () (_ BitVec 64))
(declare-fun temp10861_26 () (_ BitVec 64))
(declare-fun temp10861_27 () (_ BitVec 64))
(declare-fun temp10861_28 () (_ BitVec 64))
(declare-fun var2039185 () (_ BitVec 64))
(declare-fun temp10861_29 () (_ BitVec 64))
(declare-fun var2235793 () (_ BitVec 64))
(declare-fun temp10861_30 () (_ BitVec 64))
(declare-fun temp10861_31 () (_ BitVec 64))
(declare-fun temp10861_32 () (_ BitVec 64))
(declare-fun temp10861_33 () (_ BitVec 64))
(declare-fun temp10861_34 () (_ BitVec 64))
(declare-fun var2753483 () (_ BitVec 64))
(declare-fun temp10861_35 () (_ BitVec 64))
(declare-fun var2756010 () (_ BitVec 64))
(declare-fun temp10861_36 () (_ BitVec 64))
(declare-fun temp10861_38 () (_ BitVec 64))
(declare-fun temp10861_37 () (_ BitVec 64))
(declare-fun temp10861_40 () (_ BitVec 64))
(declare-fun temp10861_39 () (_ BitVec 64))
(declare-fun temp10861_41 () (_ BitVec 64))
(declare-fun temp10861_42 () (_ BitVec 64))
(declare-fun temp10861_44 () (_ BitVec 64))
(declare-fun temp10861_43 () (_ BitVec 64))
(declare-fun temp10861_46 () (_ BitVec 64))
(declare-fun temp10861_45 () (_ BitVec 64))
(declare-fun temp10861_47 () (_ BitVec 64))
(declare-fun temp10861_48 () (_ BitVec 64))
(declare-fun temp10861_50 () (_ BitVec 64))
(declare-fun temp10861_49 () (_ BitVec 64))
(declare-fun temp10861_52 () (_ BitVec 64))
(declare-fun temp10861_51 () (_ BitVec 64))
(declare-fun temp10861_53 () (_ BitVec 64))
(declare-fun var9308609 () (_ BitVec 64))
(declare-fun var9308617 () (_ BitVec 64))
(assert (= temp10861_1 #x0000000000000001))
(assert (= ARGNAME_use_input_stats_NAMEEND temp10861_1))
(assert (= temp10861_2 #x0000000000000002))
(assert (= var985537 temp10861_2))
(assert (= var985545 var985537))
(assert (= temp10861_3 #x0000000000000000))
(assert (= temp10861_4 temp10861_3))
(assert (= temp10861_5 (select ARGNAME_input_NAMEEND_DIMSIZE temp10861_4)))
(assert (= temp10861_6 #x0000000000000001))
(assert (= temp10861_7 temp10861_6))
(assert (= temp10861_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp10861_7)))
(assert (= temp10861_9 #x0000000000000002))
(assert (= temp10861_10 temp10861_9))
(assert (= temp10861_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp10861_10)))
(assert (= temp10861_12 #x0000000000000003))
(assert (= temp10861_13 temp10861_12))
(assert (= temp10861_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp10861_13)))
(assert (= temp10861_15 #x0000000000000004))
(assert (= temp10861_16 temp10861_15))
(assert (= temp10861_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp10861_16)))
(assert (= temp10861_18 #x0000000000000005))
(assert (= temp10861_19 temp10861_18))
(assert (= temp10861_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp10861_19)))
(assert (= temp10861_21 #x0000000000000000))
(assert (= temp10861_22 temp10861_21))
(assert (= temp10861_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp10861_22)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp10861_21))
(assert (bvsge temp10861_21 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp10861_24 #x0000000000000001))
(assert (= temp10861_25 temp10861_24))
(assert (= temp10861_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp10861_25)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp10861_24))
(assert (bvsge temp10861_24 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp10861_27 temp10861_26))
(assert (= temp10861_28 #x0000000000000001))
(assert (= var2039185 temp10861_28))
(assert (= temp10861_29 #x0000000000000000))
(assert (= var2235793 temp10861_29))
(assert (= temp10861_30 temp10861_23))
(assert (= temp10861_31 temp10861_23))
(assert (= temp10861_32 temp10861_23))
(assert (= temp10861_33 temp10861_23))
(assert (= temp10861_34 #x0000000000000001))
(assert (= var2753483 temp10861_34))
(assert (= temp10861_35 #x0000000000000000))
(assert (= var2756010 temp10861_35))
(assert (= temp10861_36 #x0000000000000000))
(assert (= var2756010 temp10861_36))
(assert (= temp10861_38 #x0000000000000000))
(assert (= temp10861_37 temp10861_38))
(assert (= temp10861_40 #x0000000000000000))
(assert (= temp10861_39 temp10861_40))
(assert (= temp10861_41 temp10861_23))
(assert (= temp10861_42 temp10861_26))
(assert (= temp10861_44 #x0000000000000002))
(assert (= temp10861_43 temp10861_44))
(assert (= temp10861_46 #x0000000000000000))
(assert (= temp10861_45 temp10861_46))
(assert (= temp10861_47 temp10861_23))
(assert (= temp10861_48 temp10861_26))
(assert (= temp10861_50 #x0000000000000002))
(assert (= temp10861_49 temp10861_50))
(assert (= temp10861_52 #x0000000000000000))
(assert (= temp10861_51 temp10861_52))
(assert (= temp10861_53 #x0000000000000002))
(assert (= var9308609 temp10861_53))
(assert (= var9308617 var9308609))
(model-add temp10861_1 () (_ BitVec 64) #x0000000000000001)
(model-add ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64) #x0000000000000001)




