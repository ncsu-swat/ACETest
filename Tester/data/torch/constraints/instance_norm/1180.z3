(declare-fun temp10180_1 () (_ BitVec 64))
(declare-fun ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64))
(declare-fun temp10180_2 () (_ BitVec 64))
(declare-fun var985537 () (_ BitVec 64))
(declare-fun var985545 () (_ BitVec 64))
(declare-fun temp10180_3 () (_ BitVec 64))
(declare-fun temp10180_4 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10180_5 () (_ BitVec 64))
(declare-fun temp10180_6 () (_ BitVec 64))
(declare-fun temp10180_7 () (_ BitVec 64))
(declare-fun temp10180_8 () (_ BitVec 64))
(declare-fun temp10180_9 () (_ BitVec 64))
(declare-fun temp10180_10 () (_ BitVec 64))
(declare-fun temp10180_11 () (_ BitVec 64))
(declare-fun temp10180_12 () (_ BitVec 64))
(declare-fun temp10180_13 () (_ BitVec 64))
(declare-fun temp10180_14 () (_ BitVec 64))
(declare-fun temp10180_15 () (_ BitVec 64))
(declare-fun temp10180_16 () (_ BitVec 64))
(declare-fun temp10180_17 () (_ BitVec 64))
(declare-fun temp10180_18 () (_ BitVec 64))
(declare-fun temp10180_19 () (_ BitVec 64))
(declare-fun temp10180_20 () (_ BitVec 64))
(declare-fun temp10180_21 () (_ BitVec 64))
(declare-fun temp10180_22 () (_ BitVec 64))
(declare-fun temp10180_23 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10180_24 () (_ BitVec 64))
(declare-fun temp10180_25 () (_ BitVec 64))
(declare-fun temp10180_26 () (_ BitVec 64))
(declare-fun temp10180_27 () (_ BitVec 64))
(declare-fun temp10180_28 () (_ BitVec 64))
(declare-fun var2039185 () (_ BitVec 64))
(declare-fun temp10180_29 () (_ BitVec 64))
(declare-fun var2235793 () (_ BitVec 64))
(declare-fun temp10180_30 () (_ BitVec 64))
(declare-fun temp10180_31 () (_ BitVec 64))
(declare-fun temp10180_32 () (_ BitVec 64))
(declare-fun temp10180_33 () (_ BitVec 64))
(declare-fun temp10180_34 () (_ BitVec 64))
(declare-fun var2753483 () (_ BitVec 64))
(declare-fun temp10180_35 () (_ BitVec 64))
(declare-fun var2756010 () (_ BitVec 64))
(declare-fun temp10180_36 () (_ BitVec 64))
(declare-fun temp10180_38 () (_ BitVec 64))
(declare-fun temp10180_37 () (_ BitVec 64))
(declare-fun temp10180_40 () (_ BitVec 64))
(declare-fun temp10180_39 () (_ BitVec 64))
(declare-fun temp10180_41 () (_ BitVec 64))
(declare-fun temp10180_42 () (_ BitVec 64))
(declare-fun temp10180_44 () (_ BitVec 64))
(declare-fun temp10180_43 () (_ BitVec 64))
(declare-fun temp10180_46 () (_ BitVec 64))
(declare-fun temp10180_45 () (_ BitVec 64))
(declare-fun temp10180_47 () (_ BitVec 64))
(declare-fun temp10180_48 () (_ BitVec 64))
(declare-fun temp10180_50 () (_ BitVec 64))
(declare-fun temp10180_49 () (_ BitVec 64))
(declare-fun temp10180_52 () (_ BitVec 64))
(declare-fun temp10180_51 () (_ BitVec 64))
(declare-fun temp10180_53 () (_ BitVec 64))
(declare-fun var9046465 () (_ BitVec 64))
(declare-fun var9046473 () (_ BitVec 64))
(assert (= temp10180_1 #x0000000000000001))
(assert (= ARGNAME_use_input_stats_NAMEEND temp10180_1))
(assert (= temp10180_2 #x0000000000000002))
(assert (= var985537 temp10180_2))
(assert (= var985545 var985537))
(assert (= temp10180_3 #x0000000000000000))
(assert (= temp10180_4 temp10180_3))
(assert (= temp10180_5 (select ARGNAME_input_NAMEEND_DIMSIZE temp10180_4)))
(assert (= temp10180_6 #x0000000000000001))
(assert (= temp10180_7 temp10180_6))
(assert (= temp10180_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp10180_7)))
(assert (= temp10180_9 #x0000000000000002))
(assert (= temp10180_10 temp10180_9))
(assert (= temp10180_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp10180_10)))
(assert (= temp10180_12 #x0000000000000003))
(assert (= temp10180_13 temp10180_12))
(assert (= temp10180_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp10180_13)))
(assert (= temp10180_15 #x0000000000000004))
(assert (= temp10180_16 temp10180_15))
(assert (= temp10180_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp10180_16)))
(assert (= temp10180_18 #x0000000000000005))
(assert (= temp10180_19 temp10180_18))
(assert (= temp10180_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp10180_19)))
(assert (= temp10180_21 #x0000000000000000))
(assert (= temp10180_22 temp10180_21))
(assert (= temp10180_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp10180_22)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp10180_21))
(assert (bvsge temp10180_21 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp10180_24 #x0000000000000001))
(assert (= temp10180_25 temp10180_24))
(assert (= temp10180_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp10180_25)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp10180_24))
(assert (bvsge temp10180_24 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp10180_27 temp10180_26))
(assert (= temp10180_28 #x0000000000000001))
(assert (= var2039185 temp10180_28))
(assert (= temp10180_29 #x0000000000000000))
(assert (= var2235793 temp10180_29))
(assert (= temp10180_30 temp10180_23))
(assert (= temp10180_31 temp10180_23))
(assert (= temp10180_32 temp10180_23))
(assert (= temp10180_33 temp10180_23))
(assert (= temp10180_34 #x0000000000000001))
(assert (= var2753483 temp10180_34))
(assert (= temp10180_35 #x0000000000000000))
(assert (= var2756010 temp10180_35))
(assert (= temp10180_36 #x0000000000000000))
(assert (= var2756010 temp10180_36))
(assert (= temp10180_38 #x0000000000000000))
(assert (= temp10180_37 temp10180_38))
(assert (= temp10180_40 #x0000000000000000))
(assert (= temp10180_39 temp10180_40))
(assert (= temp10180_41 temp10180_23))
(assert (= temp10180_42 temp10180_26))
(assert (= temp10180_44 #x0000000000000002))
(assert (= temp10180_43 temp10180_44))
(assert (= temp10180_46 #x0000000000000000))
(assert (= temp10180_45 temp10180_46))
(assert (= temp10180_47 temp10180_23))
(assert (= temp10180_48 temp10180_26))
(assert (= temp10180_50 #x0000000000000002))
(assert (= temp10180_49 temp10180_50))
(assert (= temp10180_52 #x0000000000000000))
(assert (= temp10180_51 temp10180_52))
(assert (= temp10180_53 #x0000000000000002))
(assert (= var9046465 temp10180_53))
(assert (= var9046473 var9046465))
(model-add temp10180_1 () (_ BitVec 64) #x0000000000000001)
(model-add ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64) #x0000000000000001)



