(declare-fun temp10006_1 () (_ BitVec 64))
(declare-fun ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64))
(declare-fun temp10006_2 () (_ BitVec 64))
(declare-fun var985537 () (_ BitVec 64))
(declare-fun var985545 () (_ BitVec 64))
(declare-fun temp10006_3 () (_ BitVec 64))
(declare-fun temp10006_4 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10006_5 () (_ BitVec 64))
(declare-fun temp10006_6 () (_ BitVec 64))
(declare-fun temp10006_7 () (_ BitVec 64))
(declare-fun temp10006_8 () (_ BitVec 64))
(declare-fun temp10006_9 () (_ BitVec 64))
(declare-fun temp10006_10 () (_ BitVec 64))
(declare-fun temp10006_11 () (_ BitVec 64))
(declare-fun temp10006_12 () (_ BitVec 64))
(declare-fun temp10006_13 () (_ BitVec 64))
(declare-fun temp10006_14 () (_ BitVec 64))
(declare-fun temp10006_15 () (_ BitVec 64))
(declare-fun temp10006_16 () (_ BitVec 64))
(declare-fun temp10006_17 () (_ BitVec 64))
(declare-fun temp10006_18 () (_ BitVec 64))
(declare-fun temp10006_19 () (_ BitVec 64))
(declare-fun temp10006_20 () (_ BitVec 64))
(declare-fun temp10006_21 () (_ BitVec 64))
(declare-fun temp10006_22 () (_ BitVec 64))
(declare-fun temp10006_23 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10006_24 () (_ BitVec 64))
(declare-fun temp10006_25 () (_ BitVec 64))
(declare-fun temp10006_26 () (_ BitVec 64))
(declare-fun temp10006_27 () (_ BitVec 64))
(declare-fun temp10006_28 () (_ BitVec 64))
(declare-fun var2039185 () (_ BitVec 64))
(declare-fun temp10006_29 () (_ BitVec 64))
(declare-fun var2235793 () (_ BitVec 64))
(declare-fun temp10006_30 () (_ BitVec 64))
(declare-fun temp10006_31 () (_ BitVec 64))
(declare-fun temp10006_32 () (_ BitVec 64))
(declare-fun temp10006_33 () (_ BitVec 64))
(declare-fun temp10006_34 () (_ BitVec 64))
(declare-fun var2753483 () (_ BitVec 64))
(declare-fun temp10006_35 () (_ BitVec 64))
(declare-fun var2756010 () (_ BitVec 64))
(declare-fun temp10006_36 () (_ BitVec 64))
(declare-fun temp10006_38 () (_ BitVec 64))
(declare-fun temp10006_37 () (_ BitVec 64))
(declare-fun temp10006_40 () (_ BitVec 64))
(declare-fun temp10006_39 () (_ BitVec 64))
(declare-fun temp10006_41 () (_ BitVec 64))
(declare-fun temp10006_42 () (_ BitVec 64))
(declare-fun temp10006_44 () (_ BitVec 64))
(declare-fun temp10006_43 () (_ BitVec 64))
(declare-fun temp10006_46 () (_ BitVec 64))
(declare-fun temp10006_45 () (_ BitVec 64))
(declare-fun temp10006_47 () (_ BitVec 64))
(declare-fun temp10006_48 () (_ BitVec 64))
(declare-fun temp10006_50 () (_ BitVec 64))
(declare-fun temp10006_49 () (_ BitVec 64))
(declare-fun temp10006_52 () (_ BitVec 64))
(declare-fun temp10006_51 () (_ BitVec 64))
(declare-fun temp10006_53 () (_ BitVec 64))
(declare-fun var8849857 () (_ BitVec 64))
(declare-fun var8849865 () (_ BitVec 64))
(assert (= temp10006_1 #x0000000000000001))
(assert (= ARGNAME_use_input_stats_NAMEEND temp10006_1))
(assert (= temp10006_2 #x0000000000000002))
(assert (= var985537 temp10006_2))
(assert (= var985545 var985537))
(assert (= temp10006_3 #x0000000000000000))
(assert (= temp10006_4 temp10006_3))
(assert (= temp10006_5 (select ARGNAME_input_NAMEEND_DIMSIZE temp10006_4)))
(assert (= temp10006_6 #x0000000000000001))
(assert (= temp10006_7 temp10006_6))
(assert (= temp10006_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp10006_7)))
(assert (= temp10006_9 #x0000000000000002))
(assert (= temp10006_10 temp10006_9))
(assert (= temp10006_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp10006_10)))
(assert (= temp10006_12 #x0000000000000003))
(assert (= temp10006_13 temp10006_12))
(assert (= temp10006_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp10006_13)))
(assert (= temp10006_15 #x0000000000000004))
(assert (= temp10006_16 temp10006_15))
(assert (= temp10006_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp10006_16)))
(assert (= temp10006_18 #x0000000000000005))
(assert (= temp10006_19 temp10006_18))
(assert (= temp10006_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp10006_19)))
(assert (= temp10006_21 #x0000000000000000))
(assert (= temp10006_22 temp10006_21))
(assert (= temp10006_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp10006_22)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp10006_21))
(assert (bvsge temp10006_21 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp10006_24 #x0000000000000001))
(assert (= temp10006_25 temp10006_24))
(assert (= temp10006_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp10006_25)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp10006_24))
(assert (bvsge temp10006_24 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp10006_27 temp10006_26))
(assert (= temp10006_28 #x0000000000000001))
(assert (= var2039185 temp10006_28))
(assert (= temp10006_29 #x0000000000000000))
(assert (= var2235793 temp10006_29))
(assert (= temp10006_30 temp10006_23))
(assert (= temp10006_31 temp10006_23))
(assert (= temp10006_32 temp10006_23))
(assert (= temp10006_33 temp10006_23))
(assert (= temp10006_34 #x0000000000000001))
(assert (= var2753483 temp10006_34))
(assert (= temp10006_35 #x0000000000000000))
(assert (= var2756010 temp10006_35))
(assert (= temp10006_36 #x0000000000000000))
(assert (= var2756010 temp10006_36))
(assert (= temp10006_38 #x0000000000000000))
(assert (= temp10006_37 temp10006_38))
(assert (= temp10006_40 #x0000000000000000))
(assert (= temp10006_39 temp10006_40))
(assert (= temp10006_41 temp10006_23))
(assert (= temp10006_42 temp10006_26))
(assert (= temp10006_44 #x0000000000000002))
(assert (= temp10006_43 temp10006_44))
(assert (= temp10006_46 #x0000000000000000))
(assert (= temp10006_45 temp10006_46))
(assert (= temp10006_47 temp10006_23))
(assert (= temp10006_48 temp10006_26))
(assert (= temp10006_50 #x0000000000000002))
(assert (= temp10006_49 temp10006_50))
(assert (= temp10006_52 #x0000000000000000))
(assert (= temp10006_51 temp10006_52))
(assert (= temp10006_53 #x0000000000000002))
(assert (= var8849857 temp10006_53))
(assert (= var8849865 var8849857))
(model-add temp10006_1 () (_ BitVec 64) #x0000000000000001)
(model-add ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64) #x0000000000000001)






