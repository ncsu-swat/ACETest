(declare-fun temp10787_1 () (_ BitVec 64))
(declare-fun ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64))
(declare-fun temp10787_2 () (_ BitVec 64))
(declare-fun var985537 () (_ BitVec 64))
(declare-fun var985545 () (_ BitVec 64))
(declare-fun temp10787_3 () (_ BitVec 64))
(declare-fun temp10787_4 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10787_5 () (_ BitVec 64))
(declare-fun temp10787_6 () (_ BitVec 64))
(declare-fun temp10787_7 () (_ BitVec 64))
(declare-fun temp10787_8 () (_ BitVec 64))
(declare-fun temp10787_9 () (_ BitVec 64))
(declare-fun temp10787_10 () (_ BitVec 64))
(declare-fun temp10787_11 () (_ BitVec 64))
(declare-fun temp10787_12 () (_ BitVec 64))
(declare-fun temp10787_13 () (_ BitVec 64))
(declare-fun temp10787_14 () (_ BitVec 64))
(declare-fun temp10787_15 () (_ BitVec 64))
(declare-fun temp10787_16 () (_ BitVec 64))
(declare-fun temp10787_17 () (_ BitVec 64))
(declare-fun temp10787_18 () (_ BitVec 64))
(declare-fun temp10787_19 () (_ BitVec 64))
(declare-fun temp10787_20 () (_ BitVec 64))
(declare-fun temp10787_21 () (_ BitVec 64))
(declare-fun temp10787_22 () (_ BitVec 64))
(declare-fun temp10787_23 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10787_24 () (_ BitVec 64))
(declare-fun temp10787_25 () (_ BitVec 64))
(declare-fun temp10787_26 () (_ BitVec 64))
(declare-fun temp10787_27 () (_ BitVec 64))
(declare-fun temp10787_28 () (_ BitVec 64))
(declare-fun var2039185 () (_ BitVec 64))
(declare-fun temp10787_29 () (_ BitVec 64))
(declare-fun var2235793 () (_ BitVec 64))
(declare-fun temp10787_30 () (_ BitVec 64))
(declare-fun temp10787_31 () (_ BitVec 64))
(declare-fun temp10787_32 () (_ BitVec 64))
(declare-fun temp10787_33 () (_ BitVec 64))
(declare-fun temp10787_34 () (_ BitVec 64))
(declare-fun var2753483 () (_ BitVec 64))
(declare-fun temp10787_35 () (_ BitVec 64))
(declare-fun var2756010 () (_ BitVec 64))
(declare-fun temp10787_36 () (_ BitVec 64))
(declare-fun temp10787_38 () (_ BitVec 64))
(declare-fun temp10787_37 () (_ BitVec 64))
(declare-fun temp10787_40 () (_ BitVec 64))
(declare-fun temp10787_39 () (_ BitVec 64))
(declare-fun temp10787_41 () (_ BitVec 64))
(declare-fun temp10787_42 () (_ BitVec 64))
(declare-fun temp10787_44 () (_ BitVec 64))
(declare-fun temp10787_43 () (_ BitVec 64))
(declare-fun temp10787_46 () (_ BitVec 64))
(declare-fun temp10787_45 () (_ BitVec 64))
(declare-fun temp10787_47 () (_ BitVec 64))
(declare-fun temp10787_48 () (_ BitVec 64))
(declare-fun temp10787_50 () (_ BitVec 64))
(declare-fun temp10787_49 () (_ BitVec 64))
(declare-fun temp10787_52 () (_ BitVec 64))
(declare-fun temp10787_51 () (_ BitVec 64))
(declare-fun temp10787_53 () (_ BitVec 64))
(declare-fun var9308609 () (_ BitVec 64))
(declare-fun var9308617 () (_ BitVec 64))
(assert (= temp10787_1 #x0000000000000001))
(assert (= ARGNAME_use_input_stats_NAMEEND temp10787_1))
(assert (= temp10787_2 #x0000000000000002))
(assert (= var985537 temp10787_2))
(assert (= var985545 var985537))
(assert (= temp10787_3 #x0000000000000000))
(assert (= temp10787_4 temp10787_3))
(assert (= temp10787_5 (select ARGNAME_input_NAMEEND_DIMSIZE temp10787_4)))
(assert (= temp10787_6 #x0000000000000001))
(assert (= temp10787_7 temp10787_6))
(assert (= temp10787_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp10787_7)))
(assert (= temp10787_9 #x0000000000000002))
(assert (= temp10787_10 temp10787_9))
(assert (= temp10787_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp10787_10)))
(assert (= temp10787_12 #x0000000000000003))
(assert (= temp10787_13 temp10787_12))
(assert (= temp10787_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp10787_13)))
(assert (= temp10787_15 #x0000000000000004))
(assert (= temp10787_16 temp10787_15))
(assert (= temp10787_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp10787_16)))
(assert (= temp10787_18 #x0000000000000005))
(assert (= temp10787_19 temp10787_18))
(assert (= temp10787_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp10787_19)))
(assert (= temp10787_21 #x0000000000000000))
(assert (= temp10787_22 temp10787_21))
(assert (= temp10787_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp10787_22)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp10787_21))
(assert (bvsge temp10787_21 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp10787_24 #x0000000000000001))
(assert (= temp10787_25 temp10787_24))
(assert (= temp10787_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp10787_25)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp10787_24))
(assert (bvsge temp10787_24 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp10787_27 temp10787_26))
(assert (= temp10787_28 #x0000000000000001))
(assert (= var2039185 temp10787_28))
(assert (= temp10787_29 #x0000000000000000))
(assert (= var2235793 temp10787_29))
(assert (= temp10787_30 temp10787_23))
(assert (= temp10787_31 temp10787_23))
(assert (= temp10787_32 temp10787_23))
(assert (= temp10787_33 temp10787_23))
(assert (= temp10787_34 #x0000000000000001))
(assert (= var2753483 temp10787_34))
(assert (= temp10787_35 #x0000000000000000))
(assert (= var2756010 temp10787_35))
(assert (= temp10787_36 #x0000000000000000))
(assert (= var2756010 temp10787_36))
(assert (= temp10787_38 #x0000000000000000))
(assert (= temp10787_37 temp10787_38))
(assert (= temp10787_40 #x0000000000000000))
(assert (= temp10787_39 temp10787_40))
(assert (= temp10787_41 temp10787_23))
(assert (= temp10787_42 temp10787_26))
(assert (= temp10787_44 #x0000000000000002))
(assert (= temp10787_43 temp10787_44))
(assert (= temp10787_46 #x0000000000000000))
(assert (= temp10787_45 temp10787_46))
(assert (= temp10787_47 temp10787_23))
(assert (= temp10787_48 temp10787_26))
(assert (= temp10787_50 #x0000000000000002))
(assert (= temp10787_49 temp10787_50))
(assert (= temp10787_52 #x0000000000000000))
(assert (= temp10787_51 temp10787_52))
(assert (= temp10787_53 #x0000000000000002))
(assert (= var9308609 temp10787_53))
(assert (= var9308617 var9308609))
(model-add temp10787_1 () (_ BitVec 64) #x0000000000000001)
(model-add ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64) #x0000000000000001)





