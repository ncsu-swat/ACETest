(declare-fun temp10001_1 () (_ BitVec 64))
(declare-fun ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64))
(declare-fun temp10001_2 () (_ BitVec 64))
(declare-fun var985537 () (_ BitVec 64))
(declare-fun var985545 () (_ BitVec 64))
(declare-fun temp10001_3 () (_ BitVec 64))
(declare-fun temp10001_4 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10001_5 () (_ BitVec 64))
(declare-fun temp10001_6 () (_ BitVec 64))
(declare-fun temp10001_7 () (_ BitVec 64))
(declare-fun temp10001_8 () (_ BitVec 64))
(declare-fun temp10001_9 () (_ BitVec 64))
(declare-fun temp10001_10 () (_ BitVec 64))
(declare-fun temp10001_11 () (_ BitVec 64))
(declare-fun temp10001_12 () (_ BitVec 64))
(declare-fun temp10001_13 () (_ BitVec 64))
(declare-fun temp10001_14 () (_ BitVec 64))
(declare-fun temp10001_15 () (_ BitVec 64))
(declare-fun temp10001_16 () (_ BitVec 64))
(declare-fun temp10001_17 () (_ BitVec 64))
(declare-fun temp10001_18 () (_ BitVec 64))
(declare-fun temp10001_19 () (_ BitVec 64))
(declare-fun temp10001_20 () (_ BitVec 64))
(declare-fun temp10001_21 () (_ BitVec 64))
(declare-fun temp10001_22 () (_ BitVec 64))
(declare-fun temp10001_23 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10001_24 () (_ BitVec 64))
(declare-fun temp10001_25 () (_ BitVec 64))
(declare-fun temp10001_26 () (_ BitVec 64))
(declare-fun temp10001_27 () (_ BitVec 64))
(declare-fun temp10001_28 () (_ BitVec 64))
(declare-fun var2039185 () (_ BitVec 64))
(declare-fun temp10001_29 () (_ BitVec 64))
(declare-fun var2235793 () (_ BitVec 64))
(declare-fun temp10001_30 () (_ BitVec 64))
(declare-fun temp10001_31 () (_ BitVec 64))
(declare-fun temp10001_32 () (_ BitVec 64))
(declare-fun temp10001_33 () (_ BitVec 64))
(declare-fun temp10001_34 () (_ BitVec 64))
(declare-fun var2753483 () (_ BitVec 64))
(declare-fun temp10001_35 () (_ BitVec 64))
(declare-fun var2756010 () (_ BitVec 64))
(declare-fun temp10001_36 () (_ BitVec 64))
(declare-fun temp10001_38 () (_ BitVec 64))
(declare-fun temp10001_37 () (_ BitVec 64))
(declare-fun temp10001_40 () (_ BitVec 64))
(declare-fun temp10001_39 () (_ BitVec 64))
(declare-fun temp10001_41 () (_ BitVec 64))
(declare-fun temp10001_42 () (_ BitVec 64))
(declare-fun temp10001_44 () (_ BitVec 64))
(declare-fun temp10001_43 () (_ BitVec 64))
(declare-fun temp10001_46 () (_ BitVec 64))
(declare-fun temp10001_45 () (_ BitVec 64))
(declare-fun temp10001_47 () (_ BitVec 64))
(declare-fun temp10001_48 () (_ BitVec 64))
(declare-fun temp10001_50 () (_ BitVec 64))
(declare-fun temp10001_49 () (_ BitVec 64))
(declare-fun temp10001_52 () (_ BitVec 64))
(declare-fun temp10001_51 () (_ BitVec 64))
(declare-fun temp10001_53 () (_ BitVec 64))
(declare-fun var8849857 () (_ BitVec 64))
(declare-fun var8849865 () (_ BitVec 64))
(assert (= temp10001_1 #x0000000000000001))
(assert (= ARGNAME_use_input_stats_NAMEEND temp10001_1))
(assert (= temp10001_2 #x0000000000000002))
(assert (= var985537 temp10001_2))
(assert (= var985545 var985537))
(assert (= temp10001_3 #x0000000000000000))
(assert (= temp10001_4 temp10001_3))
(assert (= temp10001_5 (select ARGNAME_input_NAMEEND_DIMSIZE temp10001_4)))
(assert (= temp10001_6 #x0000000000000001))
(assert (= temp10001_7 temp10001_6))
(assert (= temp10001_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp10001_7)))
(assert (= temp10001_9 #x0000000000000002))
(assert (= temp10001_10 temp10001_9))
(assert (= temp10001_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp10001_10)))
(assert (= temp10001_12 #x0000000000000003))
(assert (= temp10001_13 temp10001_12))
(assert (= temp10001_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp10001_13)))
(assert (= temp10001_15 #x0000000000000004))
(assert (= temp10001_16 temp10001_15))
(assert (= temp10001_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp10001_16)))
(assert (= temp10001_18 #x0000000000000005))
(assert (= temp10001_19 temp10001_18))
(assert (= temp10001_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp10001_19)))
(assert (= temp10001_21 #x0000000000000000))
(assert (= temp10001_22 temp10001_21))
(assert (= temp10001_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp10001_22)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp10001_21))
(assert (bvsge temp10001_21 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp10001_24 #x0000000000000001))
(assert (= temp10001_25 temp10001_24))
(assert (= temp10001_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp10001_25)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp10001_24))
(assert (bvsge temp10001_24 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp10001_27 temp10001_26))
(assert (= temp10001_28 #x0000000000000001))
(assert (= var2039185 temp10001_28))
(assert (= temp10001_29 #x0000000000000000))
(assert (= var2235793 temp10001_29))
(assert (= temp10001_30 temp10001_23))
(assert (= temp10001_31 temp10001_23))
(assert (= temp10001_32 temp10001_23))
(assert (= temp10001_33 temp10001_23))
(assert (= temp10001_34 #x0000000000000001))
(assert (= var2753483 temp10001_34))
(assert (= temp10001_35 #x0000000000000000))
(assert (= var2756010 temp10001_35))
(assert (= temp10001_36 #x0000000000000000))
(assert (= var2756010 temp10001_36))
(assert (= temp10001_38 #x0000000000000000))
(assert (= temp10001_37 temp10001_38))
(assert (= temp10001_40 #x0000000000000000))
(assert (= temp10001_39 temp10001_40))
(assert (= temp10001_41 temp10001_23))
(assert (= temp10001_42 temp10001_26))
(assert (= temp10001_44 #x0000000000000002))
(assert (= temp10001_43 temp10001_44))
(assert (= temp10001_46 #x0000000000000000))
(assert (= temp10001_45 temp10001_46))
(assert (= temp10001_47 temp10001_23))
(assert (= temp10001_48 temp10001_26))
(assert (= temp10001_50 #x0000000000000002))
(assert (= temp10001_49 temp10001_50))
(assert (= temp10001_52 #x0000000000000000))
(assert (= temp10001_51 temp10001_52))
(assert (= temp10001_53 #x0000000000000002))
(assert (= var8849857 temp10001_53))
(assert (= var8849865 var8849857))
(model-add temp10001_1 () (_ BitVec 64) #x0000000000000001)
(model-add ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64) #x0000000000000001)



