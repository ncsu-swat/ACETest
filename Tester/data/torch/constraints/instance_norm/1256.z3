(declare-fun temp10256_1 () (_ BitVec 64))
(declare-fun ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64))
(declare-fun temp10256_2 () (_ BitVec 64))
(declare-fun var985537 () (_ BitVec 64))
(declare-fun var985545 () (_ BitVec 64))
(declare-fun temp10256_3 () (_ BitVec 64))
(declare-fun temp10256_4 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10256_5 () (_ BitVec 64))
(declare-fun temp10256_6 () (_ BitVec 64))
(declare-fun temp10256_7 () (_ BitVec 64))
(declare-fun temp10256_8 () (_ BitVec 64))
(declare-fun temp10256_9 () (_ BitVec 64))
(declare-fun temp10256_10 () (_ BitVec 64))
(declare-fun temp10256_11 () (_ BitVec 64))
(declare-fun temp10256_12 () (_ BitVec 64))
(declare-fun temp10256_13 () (_ BitVec 64))
(declare-fun temp10256_14 () (_ BitVec 64))
(declare-fun temp10256_15 () (_ BitVec 64))
(declare-fun temp10256_16 () (_ BitVec 64))
(declare-fun temp10256_17 () (_ BitVec 64))
(declare-fun temp10256_18 () (_ BitVec 64))
(declare-fun temp10256_19 () (_ BitVec 64))
(declare-fun temp10256_20 () (_ BitVec 64))
(declare-fun temp10256_21 () (_ BitVec 64))
(declare-fun temp10256_22 () (_ BitVec 64))
(declare-fun temp10256_23 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10256_24 () (_ BitVec 64))
(declare-fun temp10256_25 () (_ BitVec 64))
(declare-fun temp10256_26 () (_ BitVec 64))
(declare-fun temp10256_27 () (_ BitVec 64))
(declare-fun temp10256_28 () (_ BitVec 64))
(declare-fun var2039185 () (_ BitVec 64))
(declare-fun temp10256_29 () (_ BitVec 64))
(declare-fun var2235793 () (_ BitVec 64))
(declare-fun temp10256_30 () (_ BitVec 64))
(declare-fun temp10256_31 () (_ BitVec 64))
(declare-fun temp10256_32 () (_ BitVec 64))
(declare-fun temp10256_33 () (_ BitVec 64))
(declare-fun temp10256_34 () (_ BitVec 64))
(declare-fun var2753483 () (_ BitVec 64))
(declare-fun temp10256_35 () (_ BitVec 64))
(declare-fun var2756010 () (_ BitVec 64))
(declare-fun temp10256_36 () (_ BitVec 64))
(declare-fun temp10256_38 () (_ BitVec 64))
(declare-fun temp10256_37 () (_ BitVec 64))
(declare-fun temp10256_40 () (_ BitVec 64))
(declare-fun temp10256_39 () (_ BitVec 64))
(declare-fun temp10256_41 () (_ BitVec 64))
(declare-fun temp10256_42 () (_ BitVec 64))
(declare-fun temp10256_44 () (_ BitVec 64))
(declare-fun temp10256_43 () (_ BitVec 64))
(declare-fun temp10256_46 () (_ BitVec 64))
(declare-fun temp10256_45 () (_ BitVec 64))
(declare-fun temp10256_47 () (_ BitVec 64))
(declare-fun temp10256_48 () (_ BitVec 64))
(declare-fun temp10256_50 () (_ BitVec 64))
(declare-fun temp10256_49 () (_ BitVec 64))
(declare-fun temp10256_52 () (_ BitVec 64))
(declare-fun temp10256_51 () (_ BitVec 64))
(declare-fun temp10256_53 () (_ BitVec 64))
(declare-fun var9177537 () (_ BitVec 64))
(declare-fun var9177545 () (_ BitVec 64))
(assert (= temp10256_1 #x0000000000000001))
(assert (= ARGNAME_use_input_stats_NAMEEND temp10256_1))
(assert (= temp10256_2 #x0000000000000002))
(assert (= var985537 temp10256_2))
(assert (= var985545 var985537))
(assert (= temp10256_3 #x0000000000000000))
(assert (= temp10256_4 temp10256_3))
(assert (= temp10256_5 (select ARGNAME_input_NAMEEND_DIMSIZE temp10256_4)))
(assert (= temp10256_6 #x0000000000000001))
(assert (= temp10256_7 temp10256_6))
(assert (= temp10256_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp10256_7)))
(assert (= temp10256_9 #x0000000000000002))
(assert (= temp10256_10 temp10256_9))
(assert (= temp10256_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp10256_10)))
(assert (= temp10256_12 #x0000000000000003))
(assert (= temp10256_13 temp10256_12))
(assert (= temp10256_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp10256_13)))
(assert (= temp10256_15 #x0000000000000004))
(assert (= temp10256_16 temp10256_15))
(assert (= temp10256_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp10256_16)))
(assert (= temp10256_18 #x0000000000000005))
(assert (= temp10256_19 temp10256_18))
(assert (= temp10256_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp10256_19)))
(assert (= temp10256_21 #x0000000000000000))
(assert (= temp10256_22 temp10256_21))
(assert (= temp10256_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp10256_22)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp10256_21))
(assert (bvsge temp10256_21 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp10256_24 #x0000000000000001))
(assert (= temp10256_25 temp10256_24))
(assert (= temp10256_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp10256_25)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp10256_24))
(assert (bvsge temp10256_24 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp10256_27 temp10256_26))
(assert (= temp10256_28 #x0000000000000001))
(assert (= var2039185 temp10256_28))
(assert (= temp10256_29 #x0000000000000000))
(assert (= var2235793 temp10256_29))
(assert (= temp10256_30 temp10256_23))
(assert (= temp10256_31 temp10256_23))
(assert (= temp10256_32 temp10256_23))
(assert (= temp10256_33 temp10256_23))
(assert (= temp10256_34 #x0000000000000001))
(assert (= var2753483 temp10256_34))
(assert (= temp10256_35 #x0000000000000000))
(assert (= var2756010 temp10256_35))
(assert (= temp10256_36 #x0000000000000000))
(assert (= var2756010 temp10256_36))
(assert (= temp10256_38 #x0000000000000000))
(assert (= temp10256_37 temp10256_38))
(assert (= temp10256_40 #x0000000000000000))
(assert (= temp10256_39 temp10256_40))
(assert (= temp10256_41 temp10256_23))
(assert (= temp10256_42 temp10256_26))
(assert (= temp10256_44 #x0000000000000002))
(assert (= temp10256_43 temp10256_44))
(assert (= temp10256_46 #x0000000000000000))
(assert (= temp10256_45 temp10256_46))
(assert (= temp10256_47 temp10256_23))
(assert (= temp10256_48 temp10256_26))
(assert (= temp10256_50 #x0000000000000002))
(assert (= temp10256_49 temp10256_50))
(assert (= temp10256_52 #x0000000000000000))
(assert (= temp10256_51 temp10256_52))
(assert (= temp10256_53 #x0000000000000002))
(assert (= var9177537 temp10256_53))
(assert (= var9177545 var9177537))
(model-add temp10256_1 () (_ BitVec 64) #x0000000000000001)
(model-add ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64) #x0000000000000001)




