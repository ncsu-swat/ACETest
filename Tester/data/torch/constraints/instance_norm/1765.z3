(declare-fun temp10765_1 () (_ BitVec 64))
(declare-fun ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64))
(declare-fun temp10765_2 () (_ BitVec 64))
(declare-fun var985537 () (_ BitVec 64))
(declare-fun var985545 () (_ BitVec 64))
(declare-fun temp10765_3 () (_ BitVec 64))
(declare-fun temp10765_4 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10765_5 () (_ BitVec 64))
(declare-fun temp10765_6 () (_ BitVec 64))
(declare-fun temp10765_7 () (_ BitVec 64))
(declare-fun temp10765_8 () (_ BitVec 64))
(declare-fun temp10765_9 () (_ BitVec 64))
(declare-fun temp10765_10 () (_ BitVec 64))
(declare-fun temp10765_11 () (_ BitVec 64))
(declare-fun temp10765_12 () (_ BitVec 64))
(declare-fun temp10765_13 () (_ BitVec 64))
(declare-fun temp10765_14 () (_ BitVec 64))
(declare-fun temp10765_15 () (_ BitVec 64))
(declare-fun temp10765_16 () (_ BitVec 64))
(declare-fun temp10765_17 () (_ BitVec 64))
(declare-fun temp10765_18 () (_ BitVec 64))
(declare-fun temp10765_19 () (_ BitVec 64))
(declare-fun temp10765_20 () (_ BitVec 64))
(declare-fun temp10765_21 () (_ BitVec 64))
(declare-fun temp10765_22 () (_ BitVec 64))
(declare-fun temp10765_23 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10765_24 () (_ BitVec 64))
(declare-fun temp10765_25 () (_ BitVec 64))
(declare-fun temp10765_26 () (_ BitVec 64))
(declare-fun temp10765_27 () (_ BitVec 64))
(declare-fun temp10765_28 () (_ BitVec 64))
(declare-fun var2039185 () (_ BitVec 64))
(declare-fun temp10765_29 () (_ BitVec 64))
(declare-fun var2235793 () (_ BitVec 64))
(declare-fun temp10765_30 () (_ BitVec 64))
(declare-fun temp10765_31 () (_ BitVec 64))
(declare-fun temp10765_32 () (_ BitVec 64))
(declare-fun temp10765_33 () (_ BitVec 64))
(declare-fun temp10765_34 () (_ BitVec 64))
(declare-fun var2753483 () (_ BitVec 64))
(declare-fun temp10765_35 () (_ BitVec 64))
(declare-fun var2756010 () (_ BitVec 64))
(declare-fun temp10765_36 () (_ BitVec 64))
(declare-fun temp10765_38 () (_ BitVec 64))
(declare-fun temp10765_37 () (_ BitVec 64))
(declare-fun temp10765_40 () (_ BitVec 64))
(declare-fun temp10765_39 () (_ BitVec 64))
(declare-fun temp10765_41 () (_ BitVec 64))
(declare-fun temp10765_42 () (_ BitVec 64))
(declare-fun temp10765_44 () (_ BitVec 64))
(declare-fun temp10765_43 () (_ BitVec 64))
(declare-fun temp10765_46 () (_ BitVec 64))
(declare-fun temp10765_45 () (_ BitVec 64))
(declare-fun temp10765_47 () (_ BitVec 64))
(declare-fun temp10765_48 () (_ BitVec 64))
(declare-fun temp10765_50 () (_ BitVec 64))
(declare-fun temp10765_49 () (_ BitVec 64))
(declare-fun temp10765_52 () (_ BitVec 64))
(declare-fun temp10765_51 () (_ BitVec 64))
(declare-fun temp10765_53 () (_ BitVec 64))
(declare-fun var9308609 () (_ BitVec 64))
(declare-fun var9308617 () (_ BitVec 64))
(assert (= temp10765_1 #x0000000000000001))
(assert (= ARGNAME_use_input_stats_NAMEEND temp10765_1))
(assert (= temp10765_2 #x0000000000000002))
(assert (= var985537 temp10765_2))
(assert (= var985545 var985537))
(assert (= temp10765_3 #x0000000000000000))
(assert (= temp10765_4 temp10765_3))
(assert (= temp10765_5 (select ARGNAME_input_NAMEEND_DIMSIZE temp10765_4)))
(assert (= temp10765_6 #x0000000000000001))
(assert (= temp10765_7 temp10765_6))
(assert (= temp10765_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp10765_7)))
(assert (= temp10765_9 #x0000000000000002))
(assert (= temp10765_10 temp10765_9))
(assert (= temp10765_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp10765_10)))
(assert (= temp10765_12 #x0000000000000003))
(assert (= temp10765_13 temp10765_12))
(assert (= temp10765_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp10765_13)))
(assert (= temp10765_15 #x0000000000000004))
(assert (= temp10765_16 temp10765_15))
(assert (= temp10765_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp10765_16)))
(assert (= temp10765_18 #x0000000000000005))
(assert (= temp10765_19 temp10765_18))
(assert (= temp10765_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp10765_19)))
(assert (= temp10765_21 #x0000000000000000))
(assert (= temp10765_22 temp10765_21))
(assert (= temp10765_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp10765_22)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp10765_21))
(assert (bvsge temp10765_21 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp10765_24 #x0000000000000001))
(assert (= temp10765_25 temp10765_24))
(assert (= temp10765_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp10765_25)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp10765_24))
(assert (bvsge temp10765_24 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp10765_27 temp10765_26))
(assert (= temp10765_28 #x0000000000000001))
(assert (= var2039185 temp10765_28))
(assert (= temp10765_29 #x0000000000000000))
(assert (= var2235793 temp10765_29))
(assert (= temp10765_30 temp10765_23))
(assert (= temp10765_31 temp10765_23))
(assert (= temp10765_32 temp10765_23))
(assert (= temp10765_33 temp10765_23))
(assert (= temp10765_34 #x0000000000000001))
(assert (= var2753483 temp10765_34))
(assert (= temp10765_35 #x0000000000000000))
(assert (= var2756010 temp10765_35))
(assert (= temp10765_36 #x0000000000000000))
(assert (= var2756010 temp10765_36))
(assert (= temp10765_38 #x0000000000000000))
(assert (= temp10765_37 temp10765_38))
(assert (= temp10765_40 #x0000000000000000))
(assert (= temp10765_39 temp10765_40))
(assert (= temp10765_41 temp10765_23))
(assert (= temp10765_42 temp10765_26))
(assert (= temp10765_44 #x0000000000000002))
(assert (= temp10765_43 temp10765_44))
(assert (= temp10765_46 #x0000000000000000))
(assert (= temp10765_45 temp10765_46))
(assert (= temp10765_47 temp10765_23))
(assert (= temp10765_48 temp10765_26))
(assert (= temp10765_50 #x0000000000000002))
(assert (= temp10765_49 temp10765_50))
(assert (= temp10765_52 #x0000000000000000))
(assert (= temp10765_51 temp10765_52))
(assert (= temp10765_53 #x0000000000000002))
(assert (= var9308609 temp10765_53))
(assert (= var9308617 var9308609))
(model-add temp10765_1 () (_ BitVec 64) #x0000000000000001)
(model-add ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64) #x0000000000000001)





