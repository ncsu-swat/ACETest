(declare-fun temp10886_1 () (_ BitVec 64))
(declare-fun ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64))
(declare-fun temp10886_2 () (_ BitVec 64))
(declare-fun var985537 () (_ BitVec 64))
(declare-fun var985545 () (_ BitVec 64))
(declare-fun temp10886_3 () (_ BitVec 64))
(declare-fun temp10886_4 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10886_5 () (_ BitVec 64))
(declare-fun temp10886_6 () (_ BitVec 64))
(declare-fun temp10886_7 () (_ BitVec 64))
(declare-fun temp10886_8 () (_ BitVec 64))
(declare-fun temp10886_9 () (_ BitVec 64))
(declare-fun temp10886_10 () (_ BitVec 64))
(declare-fun temp10886_11 () (_ BitVec 64))
(declare-fun temp10886_12 () (_ BitVec 64))
(declare-fun temp10886_13 () (_ BitVec 64))
(declare-fun temp10886_14 () (_ BitVec 64))
(declare-fun temp10886_15 () (_ BitVec 64))
(declare-fun temp10886_16 () (_ BitVec 64))
(declare-fun temp10886_17 () (_ BitVec 64))
(declare-fun temp10886_18 () (_ BitVec 64))
(declare-fun temp10886_19 () (_ BitVec 64))
(declare-fun temp10886_20 () (_ BitVec 64))
(declare-fun temp10886_21 () (_ BitVec 64))
(declare-fun temp10886_22 () (_ BitVec 64))
(declare-fun temp10886_23 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10886_24 () (_ BitVec 64))
(declare-fun temp10886_25 () (_ BitVec 64))
(declare-fun temp10886_26 () (_ BitVec 64))
(declare-fun temp10886_27 () (_ BitVec 64))
(declare-fun temp10886_28 () (_ BitVec 64))
(declare-fun var2039185 () (_ BitVec 64))
(declare-fun temp10886_29 () (_ BitVec 64))
(declare-fun var2235793 () (_ BitVec 64))
(declare-fun temp10886_30 () (_ BitVec 64))
(declare-fun temp10886_31 () (_ BitVec 64))
(declare-fun temp10886_32 () (_ BitVec 64))
(declare-fun temp10886_33 () (_ BitVec 64))
(declare-fun temp10886_34 () (_ BitVec 64))
(declare-fun var2753483 () (_ BitVec 64))
(declare-fun temp10886_35 () (_ BitVec 64))
(declare-fun var2756010 () (_ BitVec 64))
(declare-fun temp10886_36 () (_ BitVec 64))
(declare-fun temp10886_38 () (_ BitVec 64))
(declare-fun temp10886_37 () (_ BitVec 64))
(declare-fun temp10886_40 () (_ BitVec 64))
(declare-fun temp10886_39 () (_ BitVec 64))
(declare-fun temp10886_41 () (_ BitVec 64))
(declare-fun temp10886_42 () (_ BitVec 64))
(declare-fun temp10886_44 () (_ BitVec 64))
(declare-fun temp10886_43 () (_ BitVec 64))
(declare-fun temp10886_46 () (_ BitVec 64))
(declare-fun temp10886_45 () (_ BitVec 64))
(declare-fun temp10886_47 () (_ BitVec 64))
(declare-fun temp10886_48 () (_ BitVec 64))
(declare-fun temp10886_50 () (_ BitVec 64))
(declare-fun temp10886_49 () (_ BitVec 64))
(declare-fun temp10886_52 () (_ BitVec 64))
(declare-fun temp10886_51 () (_ BitVec 64))
(declare-fun temp10886_53 () (_ BitVec 64))
(declare-fun var9308609 () (_ BitVec 64))
(declare-fun var9308617 () (_ BitVec 64))
(assert (= temp10886_1 #x0000000000000001))
(assert (= ARGNAME_use_input_stats_NAMEEND temp10886_1))
(assert (= temp10886_2 #x0000000000000002))
(assert (= var985537 temp10886_2))
(assert (= var985545 var985537))
(assert (= temp10886_3 #x0000000000000000))
(assert (= temp10886_4 temp10886_3))
(assert (= temp10886_5 (select ARGNAME_input_NAMEEND_DIMSIZE temp10886_4)))
(assert (= temp10886_6 #x0000000000000001))
(assert (= temp10886_7 temp10886_6))
(assert (= temp10886_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp10886_7)))
(assert (= temp10886_9 #x0000000000000002))
(assert (= temp10886_10 temp10886_9))
(assert (= temp10886_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp10886_10)))
(assert (= temp10886_12 #x0000000000000003))
(assert (= temp10886_13 temp10886_12))
(assert (= temp10886_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp10886_13)))
(assert (= temp10886_15 #x0000000000000004))
(assert (= temp10886_16 temp10886_15))
(assert (= temp10886_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp10886_16)))
(assert (= temp10886_18 #x0000000000000005))
(assert (= temp10886_19 temp10886_18))
(assert (= temp10886_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp10886_19)))
(assert (= temp10886_21 #x0000000000000000))
(assert (= temp10886_22 temp10886_21))
(assert (= temp10886_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp10886_22)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp10886_21))
(assert (bvsge temp10886_21 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp10886_24 #x0000000000000001))
(assert (= temp10886_25 temp10886_24))
(assert (= temp10886_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp10886_25)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp10886_24))
(assert (bvsge temp10886_24 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp10886_27 temp10886_26))
(assert (= temp10886_28 #x0000000000000001))
(assert (= var2039185 temp10886_28))
(assert (= temp10886_29 #x0000000000000000))
(assert (= var2235793 temp10886_29))
(assert (= temp10886_30 temp10886_23))
(assert (= temp10886_31 temp10886_23))
(assert (= temp10886_32 temp10886_23))
(assert (= temp10886_33 temp10886_23))
(assert (= temp10886_34 #x0000000000000001))
(assert (= var2753483 temp10886_34))
(assert (= temp10886_35 #x0000000000000000))
(assert (= var2756010 temp10886_35))
(assert (= temp10886_36 #x0000000000000000))
(assert (= var2756010 temp10886_36))
(assert (= temp10886_38 #x0000000000000000))
(assert (= temp10886_37 temp10886_38))
(assert (= temp10886_40 #x0000000000000000))
(assert (= temp10886_39 temp10886_40))
(assert (= temp10886_41 temp10886_23))
(assert (= temp10886_42 temp10886_26))
(assert (= temp10886_44 #x0000000000000002))
(assert (= temp10886_43 temp10886_44))
(assert (= temp10886_46 #x0000000000000000))
(assert (= temp10886_45 temp10886_46))
(assert (= temp10886_47 temp10886_23))
(assert (= temp10886_48 temp10886_26))
(assert (= temp10886_50 #x0000000000000002))
(assert (= temp10886_49 temp10886_50))
(assert (= temp10886_52 #x0000000000000000))
(assert (= temp10886_51 temp10886_52))
(assert (= temp10886_53 #x0000000000000002))
(assert (= var9308609 temp10886_53))
(assert (= var9308617 var9308609))
(model-add temp10886_1 () (_ BitVec 64) #x0000000000000001)
(model-add ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64) #x0000000000000001)



