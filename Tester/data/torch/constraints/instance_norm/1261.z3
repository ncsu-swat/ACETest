(declare-fun temp10261_1 () (_ BitVec 64))
(declare-fun ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64))
(declare-fun temp10261_2 () (_ BitVec 64))
(declare-fun var985537 () (_ BitVec 64))
(declare-fun var985545 () (_ BitVec 64))
(declare-fun temp10261_3 () (_ BitVec 64))
(declare-fun temp10261_4 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10261_5 () (_ BitVec 64))
(declare-fun temp10261_6 () (_ BitVec 64))
(declare-fun temp10261_7 () (_ BitVec 64))
(declare-fun temp10261_8 () (_ BitVec 64))
(declare-fun temp10261_9 () (_ BitVec 64))
(declare-fun temp10261_10 () (_ BitVec 64))
(declare-fun temp10261_11 () (_ BitVec 64))
(declare-fun temp10261_12 () (_ BitVec 64))
(declare-fun temp10261_13 () (_ BitVec 64))
(declare-fun temp10261_14 () (_ BitVec 64))
(declare-fun temp10261_15 () (_ BitVec 64))
(declare-fun temp10261_16 () (_ BitVec 64))
(declare-fun temp10261_17 () (_ BitVec 64))
(declare-fun temp10261_18 () (_ BitVec 64))
(declare-fun temp10261_19 () (_ BitVec 64))
(declare-fun temp10261_20 () (_ BitVec 64))
(declare-fun temp10261_21 () (_ BitVec 64))
(declare-fun temp10261_22 () (_ BitVec 64))
(declare-fun temp10261_23 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10261_24 () (_ BitVec 64))
(declare-fun temp10261_25 () (_ BitVec 64))
(declare-fun temp10261_26 () (_ BitVec 64))
(declare-fun temp10261_27 () (_ BitVec 64))
(declare-fun temp10261_28 () (_ BitVec 64))
(declare-fun var2039185 () (_ BitVec 64))
(declare-fun temp10261_29 () (_ BitVec 64))
(declare-fun var2235793 () (_ BitVec 64))
(declare-fun temp10261_30 () (_ BitVec 64))
(declare-fun temp10261_31 () (_ BitVec 64))
(declare-fun temp10261_32 () (_ BitVec 64))
(declare-fun temp10261_33 () (_ BitVec 64))
(declare-fun temp10261_34 () (_ BitVec 64))
(declare-fun var2753483 () (_ BitVec 64))
(declare-fun temp10261_35 () (_ BitVec 64))
(declare-fun var2756010 () (_ BitVec 64))
(declare-fun temp10261_36 () (_ BitVec 64))
(declare-fun temp10261_38 () (_ BitVec 64))
(declare-fun temp10261_37 () (_ BitVec 64))
(declare-fun temp10261_40 () (_ BitVec 64))
(declare-fun temp10261_39 () (_ BitVec 64))
(declare-fun temp10261_41 () (_ BitVec 64))
(declare-fun temp10261_42 () (_ BitVec 64))
(declare-fun temp10261_44 () (_ BitVec 64))
(declare-fun temp10261_43 () (_ BitVec 64))
(declare-fun temp10261_46 () (_ BitVec 64))
(declare-fun temp10261_45 () (_ BitVec 64))
(declare-fun temp10261_47 () (_ BitVec 64))
(declare-fun temp10261_48 () (_ BitVec 64))
(declare-fun temp10261_50 () (_ BitVec 64))
(declare-fun temp10261_49 () (_ BitVec 64))
(declare-fun temp10261_52 () (_ BitVec 64))
(declare-fun temp10261_51 () (_ BitVec 64))
(declare-fun temp10261_53 () (_ BitVec 64))
(declare-fun var9177537 () (_ BitVec 64))
(declare-fun var9177545 () (_ BitVec 64))
(assert (= temp10261_1 #x0000000000000001))
(assert (= ARGNAME_use_input_stats_NAMEEND temp10261_1))
(assert (= temp10261_2 #x0000000000000002))
(assert (= var985537 temp10261_2))
(assert (= var985545 var985537))
(assert (= temp10261_3 #x0000000000000000))
(assert (= temp10261_4 temp10261_3))
(assert (= temp10261_5 (select ARGNAME_input_NAMEEND_DIMSIZE temp10261_4)))
(assert (= temp10261_6 #x0000000000000001))
(assert (= temp10261_7 temp10261_6))
(assert (= temp10261_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp10261_7)))
(assert (= temp10261_9 #x0000000000000002))
(assert (= temp10261_10 temp10261_9))
(assert (= temp10261_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp10261_10)))
(assert (= temp10261_12 #x0000000000000003))
(assert (= temp10261_13 temp10261_12))
(assert (= temp10261_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp10261_13)))
(assert (= temp10261_15 #x0000000000000004))
(assert (= temp10261_16 temp10261_15))
(assert (= temp10261_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp10261_16)))
(assert (= temp10261_18 #x0000000000000005))
(assert (= temp10261_19 temp10261_18))
(assert (= temp10261_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp10261_19)))
(assert (= temp10261_21 #x0000000000000000))
(assert (= temp10261_22 temp10261_21))
(assert (= temp10261_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp10261_22)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp10261_21))
(assert (bvsge temp10261_21 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp10261_24 #x0000000000000001))
(assert (= temp10261_25 temp10261_24))
(assert (= temp10261_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp10261_25)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp10261_24))
(assert (bvsge temp10261_24 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp10261_27 temp10261_26))
(assert (= temp10261_28 #x0000000000000001))
(assert (= var2039185 temp10261_28))
(assert (= temp10261_29 #x0000000000000000))
(assert (= var2235793 temp10261_29))
(assert (= temp10261_30 temp10261_23))
(assert (= temp10261_31 temp10261_23))
(assert (= temp10261_32 temp10261_23))
(assert (= temp10261_33 temp10261_23))
(assert (= temp10261_34 #x0000000000000001))
(assert (= var2753483 temp10261_34))
(assert (= temp10261_35 #x0000000000000000))
(assert (= var2756010 temp10261_35))
(assert (= temp10261_36 #x0000000000000000))
(assert (= var2756010 temp10261_36))
(assert (= temp10261_38 #x0000000000000000))
(assert (= temp10261_37 temp10261_38))
(assert (= temp10261_40 #x0000000000000000))
(assert (= temp10261_39 temp10261_40))
(assert (= temp10261_41 temp10261_23))
(assert (= temp10261_42 temp10261_26))
(assert (= temp10261_44 #x0000000000000002))
(assert (= temp10261_43 temp10261_44))
(assert (= temp10261_46 #x0000000000000000))
(assert (= temp10261_45 temp10261_46))
(assert (= temp10261_47 temp10261_23))
(assert (= temp10261_48 temp10261_26))
(assert (= temp10261_50 #x0000000000000002))
(assert (= temp10261_49 temp10261_50))
(assert (= temp10261_52 #x0000000000000000))
(assert (= temp10261_51 temp10261_52))
(assert (= temp10261_53 #x0000000000000002))
(assert (= var9177537 temp10261_53))
(assert (= var9177545 var9177537))
(model-add temp10261_1 () (_ BitVec 64) #x0000000000000001)
(model-add ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64) #x0000000000000001)




