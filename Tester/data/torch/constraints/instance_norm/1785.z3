(declare-fun temp10785_1 () (_ BitVec 64))
(declare-fun ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64))
(declare-fun temp10785_2 () (_ BitVec 64))
(declare-fun var985537 () (_ BitVec 64))
(declare-fun var985545 () (_ BitVec 64))
(declare-fun temp10785_3 () (_ BitVec 64))
(declare-fun temp10785_4 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10785_5 () (_ BitVec 64))
(declare-fun temp10785_6 () (_ BitVec 64))
(declare-fun temp10785_7 () (_ BitVec 64))
(declare-fun temp10785_8 () (_ BitVec 64))
(declare-fun temp10785_9 () (_ BitVec 64))
(declare-fun temp10785_10 () (_ BitVec 64))
(declare-fun temp10785_11 () (_ BitVec 64))
(declare-fun temp10785_12 () (_ BitVec 64))
(declare-fun temp10785_13 () (_ BitVec 64))
(declare-fun temp10785_14 () (_ BitVec 64))
(declare-fun temp10785_15 () (_ BitVec 64))
(declare-fun temp10785_16 () (_ BitVec 64))
(declare-fun temp10785_17 () (_ BitVec 64))
(declare-fun temp10785_18 () (_ BitVec 64))
(declare-fun temp10785_19 () (_ BitVec 64))
(declare-fun temp10785_20 () (_ BitVec 64))
(declare-fun temp10785_21 () (_ BitVec 64))
(declare-fun temp10785_22 () (_ BitVec 64))
(declare-fun temp10785_23 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10785_24 () (_ BitVec 64))
(declare-fun temp10785_25 () (_ BitVec 64))
(declare-fun temp10785_26 () (_ BitVec 64))
(declare-fun temp10785_27 () (_ BitVec 64))
(declare-fun temp10785_28 () (_ BitVec 64))
(declare-fun var2039185 () (_ BitVec 64))
(declare-fun temp10785_29 () (_ BitVec 64))
(declare-fun var2235793 () (_ BitVec 64))
(declare-fun temp10785_30 () (_ BitVec 64))
(declare-fun temp10785_31 () (_ BitVec 64))
(declare-fun temp10785_32 () (_ BitVec 64))
(declare-fun temp10785_33 () (_ BitVec 64))
(declare-fun temp10785_34 () (_ BitVec 64))
(declare-fun var2753483 () (_ BitVec 64))
(declare-fun temp10785_35 () (_ BitVec 64))
(declare-fun var2756010 () (_ BitVec 64))
(declare-fun temp10785_36 () (_ BitVec 64))
(declare-fun temp10785_38 () (_ BitVec 64))
(declare-fun temp10785_37 () (_ BitVec 64))
(declare-fun temp10785_40 () (_ BitVec 64))
(declare-fun temp10785_39 () (_ BitVec 64))
(declare-fun temp10785_41 () (_ BitVec 64))
(declare-fun temp10785_42 () (_ BitVec 64))
(declare-fun temp10785_44 () (_ BitVec 64))
(declare-fun temp10785_43 () (_ BitVec 64))
(declare-fun temp10785_46 () (_ BitVec 64))
(declare-fun temp10785_45 () (_ BitVec 64))
(declare-fun temp10785_47 () (_ BitVec 64))
(declare-fun temp10785_48 () (_ BitVec 64))
(declare-fun temp10785_50 () (_ BitVec 64))
(declare-fun temp10785_49 () (_ BitVec 64))
(declare-fun temp10785_52 () (_ BitVec 64))
(declare-fun temp10785_51 () (_ BitVec 64))
(declare-fun temp10785_53 () (_ BitVec 64))
(declare-fun var9308609 () (_ BitVec 64))
(declare-fun var9308617 () (_ BitVec 64))
(assert (= temp10785_1 #x0000000000000001))
(assert (= ARGNAME_use_input_stats_NAMEEND temp10785_1))
(assert (= temp10785_2 #x0000000000000002))
(assert (= var985537 temp10785_2))
(assert (= var985545 var985537))
(assert (= temp10785_3 #x0000000000000000))
(assert (= temp10785_4 temp10785_3))
(assert (= temp10785_5 (select ARGNAME_input_NAMEEND_DIMSIZE temp10785_4)))
(assert (= temp10785_6 #x0000000000000001))
(assert (= temp10785_7 temp10785_6))
(assert (= temp10785_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp10785_7)))
(assert (= temp10785_9 #x0000000000000002))
(assert (= temp10785_10 temp10785_9))
(assert (= temp10785_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp10785_10)))
(assert (= temp10785_12 #x0000000000000003))
(assert (= temp10785_13 temp10785_12))
(assert (= temp10785_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp10785_13)))
(assert (= temp10785_15 #x0000000000000004))
(assert (= temp10785_16 temp10785_15))
(assert (= temp10785_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp10785_16)))
(assert (= temp10785_18 #x0000000000000005))
(assert (= temp10785_19 temp10785_18))
(assert (= temp10785_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp10785_19)))
(assert (= temp10785_21 #x0000000000000000))
(assert (= temp10785_22 temp10785_21))
(assert (= temp10785_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp10785_22)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp10785_21))
(assert (bvsge temp10785_21 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp10785_24 #x0000000000000001))
(assert (= temp10785_25 temp10785_24))
(assert (= temp10785_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp10785_25)))
(assert (bvsgt ARGNAME_input_NAMEEND_DIM temp10785_24))
(assert (bvsge temp10785_24 (bvneg ARGNAME_input_NAMEEND_DIM)))
(assert (= temp10785_27 temp10785_26))
(assert (= temp10785_28 #x0000000000000001))
(assert (= var2039185 temp10785_28))
(assert (= temp10785_29 #x0000000000000000))
(assert (= var2235793 temp10785_29))
(assert (= temp10785_30 temp10785_23))
(assert (= temp10785_31 temp10785_23))
(assert (= temp10785_32 temp10785_23))
(assert (= temp10785_33 temp10785_23))
(assert (= temp10785_34 #x0000000000000001))
(assert (= var2753483 temp10785_34))
(assert (= temp10785_35 #x0000000000000000))
(assert (= var2756010 temp10785_35))
(assert (= temp10785_36 #x0000000000000000))
(assert (= var2756010 temp10785_36))
(assert (= temp10785_38 #x0000000000000000))
(assert (= temp10785_37 temp10785_38))
(assert (= temp10785_40 #x0000000000000000))
(assert (= temp10785_39 temp10785_40))
(assert (= temp10785_41 temp10785_23))
(assert (= temp10785_42 temp10785_26))
(assert (= temp10785_44 #x0000000000000002))
(assert (= temp10785_43 temp10785_44))
(assert (= temp10785_46 #x0000000000000000))
(assert (= temp10785_45 temp10785_46))
(assert (= temp10785_47 temp10785_23))
(assert (= temp10785_48 temp10785_26))
(assert (= temp10785_50 #x0000000000000002))
(assert (= temp10785_49 temp10785_50))
(assert (= temp10785_52 #x0000000000000000))
(assert (= temp10785_51 temp10785_52))
(assert (= temp10785_53 #x0000000000000002))
(assert (= var9308609 temp10785_53))
(assert (= var9308617 var9308609))
(model-add temp10785_1 () (_ BitVec 64) #x0000000000000001)
(model-add ARGNAME_use_input_stats_NAMEEND () (_ BitVec 64) #x0000000000000001)





