(declare-fun temp3_1 () (_ BitVec 64))
(declare-fun temp3_2 () (_ BitVec 64))
(declare-fun var265912 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp3_3 () (_ BitVec 64))
(declare-fun var198235 () (_ BitVec 64))
(declare-fun temp3_4 () (_ BitVec 64))
(declare-fun temp3_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp3_6 () (_ BitVec 64))
(declare-fun temp3_7 () (_ BitVec 64))
(declare-fun temp3_8 () (_ BitVec 64))
(declare-fun temp3_9 () (_ BitVec 64))
(declare-fun temp3_10 () (_ BitVec 64))
(declare-fun temp3_11 () (_ BitVec 64))
(declare-fun temp3_12 () (_ BitVec 64))
(declare-fun temp3_13 () (_ BitVec 64))
(declare-fun temp3_14 () (_ BitVec 64))
(declare-fun temp3_15 () (_ BitVec 64))
(declare-fun temp3_16 () (_ BitVec 64))
(declare-fun temp3_17 () (_ BitVec 64))
(declare-fun temp3_18 () (_ BitVec 64))
(declare-fun temp3_19 () (_ BitVec 64))
(declare-fun temp3_20 () (_ BitVec 64))
(declare-fun temp3_21 () (_ BitVec 64))
(declare-fun temp3_23 () (_ BitVec 64))
(declare-fun temp3_22 () (_ BitVec 64))
(declare-fun temp3_24 () (_ BitVec 64))
(declare-fun temp3_25 () (_ BitVec 64))
(declare-fun var198234 () (_ BitVec 64))
(declare-fun temp3_26 () (_ BitVec 64))
(declare-fun var198239 () (_ BitVec 64))
(declare-fun temp3_28 () (_ BitVec 64))
(declare-fun temp3_27 () (_ BitVec 64))
(declare-fun temp3_29 () (_ BitVec 64))
(declare-fun temp3_30 () (_ BitVec 64))
(declare-fun var198238 () (_ BitVec 64))
(declare-fun var198240 () (_ BitVec 64))
(declare-fun temp3_31 () (_ BitVec 64))
(assert (= temp3_1 #x0000000000000002))
(assert (= var265912
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp3_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3_2 #x0000000000000000))
(assert (= var265912 temp3_2))
(assert (= temp3_3 #xffffffffffffffff))
(assert (= var198235 temp3_3))
(assert (= temp3_4 #x0000000000000000))
(assert (= temp3_5 temp3_4))
(assert (= temp3_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp3_5)))
(assert (= temp3_7 #x0000000000000001))
(assert (= temp3_8 temp3_7))
(assert (= temp3_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp3_8)))
(assert (= temp3_10 #x0000000000000002))
(assert (= temp3_11 temp3_10))
(assert (= temp3_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp3_11)))
(assert (= temp3_13 #x0000000000000003))
(assert (= temp3_14 temp3_13))
(assert (= temp3_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp3_14)))
(assert (= temp3_16 #x0000000000000004))
(assert (= temp3_17 temp3_16))
(assert (= temp3_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp3_17)))
(assert (= temp3_19 #x0000000000000005))
(assert (= temp3_20 temp3_19))
(assert (= temp3_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp3_20)))
(assert (= temp3_23 #x0000000000000000))
(assert (= temp3_22
   (ite (bvslt var198235 temp3_23)
        (bvadd ARGNAME_input_NAMEEND_DIM var198235)
        var198235)))
(assert (= temp3_24 temp3_22))
(assert (= temp3_25 (select ARGNAME_input_NAMEEND_DIMSIZE temp3_24)))
(assert (= var198234 temp3_25))
(assert (bvslt temp3_22 ARGNAME_input_NAMEEND_DIM))
(assert (= temp3_26 #xfffffffffffffffe))
(assert (= var198239 temp3_26))
(assert (= temp3_28 #x0000000000000000))
(assert (= temp3_27
   (ite (bvslt var198239 temp3_28)
        (bvadd ARGNAME_input_NAMEEND_DIM var198239)
        var198239)))
(assert (= temp3_29 temp3_27))
(assert (= temp3_30 (select ARGNAME_input_NAMEEND_DIMSIZE temp3_29)))
(assert (= var198238 temp3_30))
(assert (bvslt temp3_27 ARGNAME_input_NAMEEND_DIM))
(assert (= var198240
   (ite (= var198234 var198238) #x0000000000000001 #x0000000000000000)))
(assert (= temp3_31 #x0000000000000001))
(assert (= var198240 temp3_31))
(model-add temp3_1 () (_ BitVec 64) #x0000000000000002)
(model-add temp3_2 () (_ BitVec 64) #x0000000000000000)
(model-add var265912 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000002 #x8000000000000000))
                #x0000000000000002
                (bvsub #x0000000000000002 #x0000000000000001)))






