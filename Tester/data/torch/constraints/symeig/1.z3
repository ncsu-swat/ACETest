(declare-fun temp1_1 () (_ BitVec 64))
(declare-fun temp1_2 () (_ BitVec 64))
(declare-fun var265912 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1_3 () (_ BitVec 64))
(declare-fun var198235 () (_ BitVec 64))
(declare-fun temp1_4 () (_ BitVec 64))
(declare-fun temp1_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_6 () (_ BitVec 64))
(declare-fun temp1_7 () (_ BitVec 64))
(declare-fun temp1_8 () (_ BitVec 64))
(declare-fun temp1_9 () (_ BitVec 64))
(declare-fun temp1_10 () (_ BitVec 64))
(declare-fun temp1_11 () (_ BitVec 64))
(declare-fun temp1_12 () (_ BitVec 64))
(declare-fun temp1_13 () (_ BitVec 64))
(declare-fun temp1_14 () (_ BitVec 64))
(declare-fun temp1_15 () (_ BitVec 64))
(declare-fun temp1_16 () (_ BitVec 64))
(declare-fun temp1_17 () (_ BitVec 64))
(declare-fun temp1_18 () (_ BitVec 64))
(declare-fun temp1_19 () (_ BitVec 64))
(declare-fun temp1_20 () (_ BitVec 64))
(declare-fun temp1_21 () (_ BitVec 64))
(declare-fun temp1_23 () (_ BitVec 64))
(declare-fun temp1_22 () (_ BitVec 64))
(declare-fun temp1_24 () (_ BitVec 64))
(declare-fun temp1_25 () (_ BitVec 64))
(declare-fun var198234 () (_ BitVec 64))
(declare-fun temp1_26 () (_ BitVec 64))
(declare-fun var198239 () (_ BitVec 64))
(declare-fun temp1_28 () (_ BitVec 64))
(declare-fun temp1_27 () (_ BitVec 64))
(declare-fun temp1_29 () (_ BitVec 64))
(declare-fun temp1_30 () (_ BitVec 64))
(declare-fun var198238 () (_ BitVec 64))
(declare-fun var198240 () (_ BitVec 64))
(declare-fun temp1_31 () (_ BitVec 64))
(assert (= temp1_1 #x0000000000000002))
(assert (= var265912
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp1_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_2 #x0000000000000000))
(assert (= var265912 temp1_2))
(assert (= temp1_3 #xffffffffffffffff))
(assert (= var198235 temp1_3))
(assert (= temp1_4 #x0000000000000000))
(assert (= temp1_5 temp1_4))
(assert (= temp1_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_5)))
(assert (= temp1_7 #x0000000000000001))
(assert (= temp1_8 temp1_7))
(assert (= temp1_9 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_8)))
(assert (= temp1_10 #x0000000000000002))
(assert (= temp1_11 temp1_10))
(assert (= temp1_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_11)))
(assert (= temp1_13 #x0000000000000003))
(assert (= temp1_14 temp1_13))
(assert (= temp1_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_14)))
(assert (= temp1_16 #x0000000000000004))
(assert (= temp1_17 temp1_16))
(assert (= temp1_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_17)))
(assert (= temp1_19 #x0000000000000005))
(assert (= temp1_20 temp1_19))
(assert (= temp1_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_20)))
(assert (= temp1_23 #x0000000000000000))
(assert (= temp1_22
   (ite (bvslt var198235 temp1_23)
        (bvadd ARGNAME_input_NAMEEND_DIM var198235)
        var198235)))
(assert (= temp1_24 temp1_22))
(assert (= temp1_25 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_24)))
(assert (= var198234 temp1_25))
(assert (bvslt temp1_22 ARGNAME_input_NAMEEND_DIM))
(assert (= temp1_26 #xfffffffffffffffe))
(assert (= var198239 temp1_26))
(assert (= temp1_28 #x0000000000000000))
(assert (= temp1_27
   (ite (bvslt var198239 temp1_28)
        (bvadd ARGNAME_input_NAMEEND_DIM var198239)
        var198239)))
(assert (= temp1_29 temp1_27))
(assert (= temp1_30 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_29)))
(assert (= var198238 temp1_30))
(assert (bvslt temp1_27 ARGNAME_input_NAMEEND_DIM))
(assert (= var198240
   (ite (= var198234 var198238) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_31 #x0000000000000001))
(assert (= var198240 temp1_31))
(model-add temp1_1 () (_ BitVec 64) #x0000000000000002)
(model-add temp1_2 () (_ BitVec 64) #x0000000000000000)
(model-add var265912 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000002 #x8000000000000000))
                #x0000000000000002
                (bvsub #x0000000000000002 #x0000000000000001)))











