(declare-fun temp0_1 () (_ BitVec 64))
(declare-fun temp0_2 () (_ BitVec 64))
(declare-fun var137781 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp0_3 () (_ BitVec 64))
(declare-fun var198400 () (_ BitVec 64))
(declare-fun temp0_4 () (_ BitVec 64))
(declare-fun temp0_5 () (_ BitVec 64))
(declare-fun temp0_6 () (_ BitVec 64))
(declare-fun temp0_7 () (_ BitVec 64))
(declare-fun temp0_8 () (_ BitVec 64))
(declare-fun temp0_9 () (_ BitVec 64))
(declare-fun var203378 () (_ BitVec 64))
(declare-fun var203396 () (_ BitVec 64))
(declare-fun temp0_11 () (_ BitVec 64))
(declare-fun temp0_10 () (_ BitVec 64))
(declare-fun temp0_12 () (_ BitVec 64))
(declare-fun var594485 () (_ BitVec 64))
(declare-fun temp0_13 () (_ BitVec 64))
(declare-fun var1115904 () (_ BitVec 64))
(declare-fun temp0_14 () (_ BitVec 64))
(declare-fun temp0_15 () (_ BitVec 64))
(declare-fun temp0_16 () (_ BitVec 64))
(declare-fun temp0_17 () (_ BitVec 64))
(declare-fun temp0_18 () (_ BitVec 64))
(declare-fun temp0_19 () (_ BitVec 64))
(declare-fun var1120882 () (_ BitVec 64))
(declare-fun var1120900 () (_ BitVec 64))
(declare-fun temp0_21 () (_ BitVec 64))
(declare-fun temp0_20 () (_ BitVec 64))
(declare-fun temp0_22 () (_ BitVec 64))
(declare-fun var1511989 () (_ BitVec 64))
(declare-fun temp0_23 () (_ BitVec 64))
(declare-fun ARGNAME_n_NAMEEND () (_ BitVec 64))
(declare-fun var72219 () (_ BitVec 64))
(declare-fun temp0_24 () (_ BitVec 64))
(assert (= temp0_1 #x0000000000000001))
(assert (= var137781
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp0_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_2 #x0000000000000000))
(assert (= var137781 temp0_2))
(assert (= temp0_3 #x0000000000000000))
(assert (= var198400 temp0_3))
(assert (= temp0_4 #x0000000000000000))
(assert (= temp0_5 #x0000000000000000))
(assert (= temp0_6 #x0000000000000000))
(assert (= temp0_7 #x0000000000000000))
(assert (= temp0_8 #x0000000000000000))
(assert (= temp0_9 #xffffffffffffffff))
(assert (let ((a!1 (or (= (ite (bvslt var203378 temp0_4)
                       (bvadd var203396 var203378)
                       var203378)
                  temp0_8)
               (= (ite (bvslt var203378 temp0_4)
                       (bvadd var203396 var203378)
                       var203378)
                  temp0_9))))
  (or (and (bvsgt var203396 temp0_5) (bvslt var203378 var203396))
      (and (= var203396 temp0_6) (distinct var198400 temp0_7) a!1))))
(assert (= temp0_11 #x0000000000000000))
(assert (= temp0_10 temp0_11))
(assert (= temp0_12 #x0000000000000000))
(assert (= var594485 temp0_12))
(assert (= temp0_13 #x0000000000000000))
(assert (= var1115904 temp0_13))
(assert (= temp0_14 #x0000000000000000))
(assert (= temp0_15 #x0000000000000000))
(assert (= temp0_16 #x0000000000000000))
(assert (= temp0_17 #x0000000000000000))
(assert (= temp0_18 #x0000000000000000))
(assert (= temp0_19 #xffffffffffffffff))
(assert (let ((a!1 (or (= (ite (bvslt var1120882 temp0_14)
                       (bvadd var1120900 var1120882)
                       var1120882)
                  temp0_18)
               (= (ite (bvslt var1120882 temp0_14)
                       (bvadd var1120900 var1120882)
                       var1120882)
                  temp0_19))))
  (or (and (bvsgt var1120900 temp0_15) (bvslt var1120882 var1120900))
      (and (= var1120900 temp0_16) (distinct var1115904 temp0_17) a!1))))
(assert (= temp0_21 #x0000000000000000))
(assert (= temp0_20 temp0_21))
(assert (= temp0_22 #x0000000000000000))
(assert (= var1511989 temp0_22))
(assert (= temp0_23 #x0000000000000000))
(assert (= var72219
   (ite (= ARGNAME_n_NAMEEND temp0_23) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_24 #x0000000000000001))
(assert (= var72219 temp0_24))
(model-add temp0_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp0_2 () (_ BitVec 64) #x0000000000000000)
(model-add var137781 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000001 #x8000000000000000))
                #x0000000000000001
                (bvsub #x0000000000000001 #x0000000000000001)))






