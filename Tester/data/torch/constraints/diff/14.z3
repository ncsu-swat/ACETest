(declare-fun temp14_1 () (_ BitVec 64))
(declare-fun temp14_2 () (_ BitVec 64))
(declare-fun var137781 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp14_3 () (_ BitVec 64))
(declare-fun var198400 () (_ BitVec 64))
(declare-fun temp14_4 () (_ BitVec 64))
(declare-fun temp14_5 () (_ BitVec 64))
(declare-fun temp14_6 () (_ BitVec 64))
(declare-fun temp14_7 () (_ BitVec 64))
(declare-fun temp14_8 () (_ BitVec 64))
(declare-fun temp14_9 () (_ BitVec 64))
(declare-fun var203378 () (_ BitVec 64))
(declare-fun var203396 () (_ BitVec 64))
(declare-fun temp14_11 () (_ BitVec 64))
(declare-fun temp14_10 () (_ BitVec 64))
(declare-fun temp14_12 () (_ BitVec 64))
(declare-fun var594485 () (_ BitVec 64))
(declare-fun temp14_13 () (_ BitVec 64))
(declare-fun var853760 () (_ BitVec 64))
(declare-fun temp14_14 () (_ BitVec 64))
(declare-fun temp14_15 () (_ BitVec 64))
(declare-fun temp14_16 () (_ BitVec 64))
(declare-fun temp14_17 () (_ BitVec 64))
(declare-fun temp14_18 () (_ BitVec 64))
(declare-fun temp14_19 () (_ BitVec 64))
(declare-fun var858738 () (_ BitVec 64))
(declare-fun var858756 () (_ BitVec 64))
(declare-fun temp14_21 () (_ BitVec 64))
(declare-fun temp14_20 () (_ BitVec 64))
(declare-fun temp14_22 () (_ BitVec 64))
(declare-fun var1249845 () (_ BitVec 64))
(declare-fun temp14_23 () (_ BitVec 64))
(declare-fun ARGNAME_n_NAMEEND () (_ BitVec 64))
(declare-fun var72216 () (_ BitVec 64))
(assert (= temp14_1 #x0000000000000001))
(assert (= var137781
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp14_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp14_2 #x0000000000000000))
(assert (= var137781 temp14_2))
(assert (= temp14_3 #x0000000000000000))
(assert (= var198400 temp14_3))
(assert (= temp14_4 #x0000000000000000))
(assert (= temp14_5 #x0000000000000000))
(assert (= temp14_6 #x0000000000000000))
(assert (= temp14_7 #x0000000000000000))
(assert (= temp14_8 #x0000000000000000))
(assert (= temp14_9 #xffffffffffffffff))
(assert (let ((a!1 (or (= (ite (bvslt var203378 temp14_4)
                       (bvadd var203396 var203378)
                       var203378)
                  temp14_8)
               (= (ite (bvslt var203378 temp14_4)
                       (bvadd var203396 var203378)
                       var203378)
                  temp14_9))))
  (or (and (bvsgt var203396 temp14_5) (bvslt var203378 var203396))
      (and (= var203396 temp14_6) (distinct var198400 temp14_7) a!1))))
(assert (= temp14_11 #x0000000000000000))
(assert (= temp14_10 temp14_11))
(assert (= temp14_12 #x0000000000000000))
(assert (= var594485 temp14_12))
(assert (= temp14_13 #x0000000000000000))
(assert (= var853760 temp14_13))
(assert (= temp14_14 #x0000000000000000))
(assert (= temp14_15 #x0000000000000000))
(assert (= temp14_16 #x0000000000000000))
(assert (= temp14_17 #x0000000000000000))
(assert (= temp14_18 #x0000000000000000))
(assert (= temp14_19 #xffffffffffffffff))
(assert (let ((a!1 (or (= (ite (bvslt var858738 temp14_14)
                       (bvadd var858756 var858738)
                       var858738)
                  temp14_18)
               (= (ite (bvslt var858738 temp14_14)
                       (bvadd var858756 var858738)
                       var858738)
                  temp14_19))))
  (or (and (bvsgt var858756 temp14_15) (bvslt var858738 var858756))
      (and (= var858756 temp14_16) (distinct var853760 temp14_17) a!1))))
(assert (= temp14_21 #x0000000000000000))
(assert (= temp14_20 temp14_21))
(assert (= temp14_22 #x0000000000000000))
(assert (= var1249845 temp14_22))
(assert (= temp14_23 #x0000000000000000))
(assert (= var72216
   (ite (= ARGNAME_n_NAMEEND temp14_23) #x0000000000000001 #x0000000000000000)))
(model-add temp14_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp14_2 () (_ BitVec 64) #x0000000000000000)
(model-add var137781 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000001 #x8000000000000000))
                #x0000000000000001
                (bvsub #x0000000000000001 #x0000000000000001)))






