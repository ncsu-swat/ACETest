(declare-fun temp378_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp378_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp378_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp378_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp378_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp378_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp378_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp378_8 () (_ BitVec 64))
(declare-fun temp378_10 () (_ BitVec 64))
(declare-fun temp378_9 () (_ BitVec 64))
(declare-fun temp378_12 () (_ BitVec 64))
(declare-fun temp378_11 () (_ BitVec 64))
(declare-fun temp378_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp378_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp378_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp378_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp378_17 () (_ BitVec 64))
(declare-fun temp378_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp378_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp378_20 () (_ BitVec 64))
(declare-fun temp378_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp378_22 () (_ BitVec 64))
(declare-fun temp378_23 () (_ BitVec 64))
(declare-fun temp378_24 () (_ BitVec 64))
(declare-fun temp378_25 () (_ BitVec 64))
(declare-fun temp378_26 () (_ BitVec 64))
(declare-fun temp378_27 () (_ BitVec 64))
(declare-fun temp378_28 () (_ BitVec 64))
(declare-fun temp378_29 () (_ BitVec 64))
(declare-fun temp378_30 () (_ BitVec 64))
(declare-fun temp378_31 () (_ BitVec 64))
(declare-fun temp378_32 () (_ BitVec 64))
(declare-fun temp378_33 () (_ BitVec 64))
(declare-fun temp378_34 () (_ BitVec 64))
(declare-fun temp378_35 () (_ BitVec 64))
(declare-fun temp378_36 () (_ BitVec 64))
(declare-fun temp378_37 () (_ BitVec 64))
(declare-fun temp378_38 () (_ BitVec 64))
(declare-fun temp378_39 () (_ BitVec 64))
(declare-fun temp378_40 () (_ BitVec 64))
(declare-fun temp378_41 () (_ BitVec 64))
(declare-fun temp378_42 () (_ BitVec 64))
(declare-fun temp378_43 () (_ BitVec 64))
(declare-fun temp378_44 () (_ BitVec 64))
(declare-fun temp378_45 () (_ BitVec 64))
(declare-fun temp378_46 () (_ BitVec 64))
(declare-fun temp378_47 () (_ BitVec 64))
(declare-fun temp378_48 () (_ BitVec 64))
(declare-fun temp378_49 () (_ BitVec 64))
(declare-fun temp378_50 () (_ BitVec 64))
(declare-fun temp378_51 () (_ BitVec 64))
(declare-fun temp378_52 () (_ BitVec 64))
(declare-fun temp378_53 () (_ BitVec 64))
(declare-fun temp378_54 () (_ BitVec 64))
(declare-fun temp378_55 () (_ BitVec 64))
(declare-fun temp378_56 () (_ BitVec 64))
(declare-fun temp378_57 () (_ BitVec 64))
(declare-fun temp378_58 () (_ BitVec 64))
(declare-fun temp378_59 () (_ BitVec 64))
(declare-fun temp378_60 () (_ BitVec 64))
(declare-fun temp378_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp378_62 () (_ BitVec 64))
(declare-fun temp378_63 () (_ BitVec 64))
(declare-fun temp378_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp378_65 () (_ BitVec 64))
(declare-fun temp378_66 () (_ BitVec 64))
(declare-fun temp378_67 () (_ BitVec 64))
(declare-fun temp378_68 () (_ BitVec 64))
(declare-fun temp378_69 () (_ BitVec 64))
(declare-fun temp378_70 () (_ BitVec 64))
(declare-fun temp378_71 () (_ BitVec 64))
(declare-fun temp378_72 () (_ BitVec 64))
(declare-fun temp378_73 () (_ BitVec 64))
(declare-fun temp378_74 () (_ BitVec 64))
(declare-fun temp378_75 () (_ BitVec 64))
(declare-fun temp378_76 () (_ BitVec 64))
(declare-fun temp378_77 () (_ BitVec 64))
(declare-fun temp378_78 () (_ BitVec 64))
(declare-fun temp378_79 () (_ BitVec 64))
(declare-fun temp378_80 () (_ BitVec 64))
(declare-fun temp378_81 () (_ BitVec 64))
(declare-fun temp378_82 () (_ BitVec 64))
(declare-fun temp378_83 () (_ BitVec 64))
(declare-fun temp378_84 () (_ BitVec 64))
(declare-fun temp378_85 () (_ BitVec 64))
(declare-fun temp378_86 () (_ BitVec 64))
(declare-fun temp378_87 () (_ BitVec 64))
(declare-fun temp378_88 () (_ BitVec 64))
(declare-fun temp378_89 () (_ BitVec 64))
(declare-fun temp378_90 () (_ BitVec 64))
(declare-fun temp378_91 () (_ BitVec 64))
(declare-fun temp378_92 () (_ BitVec 64))
(declare-fun temp378_93 () (_ BitVec 64))
(declare-fun temp378_94 () (_ BitVec 64))
(declare-fun temp378_95 () (_ BitVec 64))
(declare-fun temp378_96 () (_ BitVec 64))
(declare-fun temp378_97 () (_ BitVec 64))
(declare-fun temp378_98 () (_ BitVec 64))
(declare-fun temp378_99 () (_ BitVec 64))
(declare-fun temp378_100 () (_ BitVec 64))
(declare-fun temp378_101 () (_ BitVec 64))
(declare-fun temp378_102 () (_ BitVec 64))
(declare-fun temp378_103 () (_ BitVec 64))
(declare-fun temp378_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp378_105 () (_ BitVec 64))
(declare-fun temp378_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp378_107 () (_ BitVec 64))
(declare-fun temp378_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp378_109 () (_ BitVec 64))
(declare-fun temp378_110 () (_ BitVec 64))
(declare-fun temp378_111 () (_ BitVec 64))
(declare-fun temp378_112 () (_ BitVec 64))
(declare-fun temp378_113 () (_ BitVec 64))
(declare-fun temp378_114 () (_ BitVec 64))
(declare-fun temp378_115 () (_ BitVec 64))
(declare-fun temp378_116 () (_ BitVec 64))
(declare-fun temp378_117 () (_ BitVec 64))
(declare-fun temp378_118 () (_ BitVec 64))
(declare-fun temp378_119 () (_ BitVec 64))
(declare-fun temp378_120 () (_ BitVec 64))
(declare-fun temp378_121 () (_ BitVec 64))
(declare-fun temp378_122 () (_ BitVec 64))
(declare-fun temp378_123 () (_ BitVec 64))
(declare-fun temp378_124 () (_ BitVec 64))
(declare-fun temp378_126 () (_ BitVec 64))
(declare-fun temp378_127 () (_ BitVec 64))
(declare-fun temp378_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp378_128 () (_ BitVec 64))
(declare-fun temp378_129 () (_ BitVec 64))
(declare-fun temp378_131 () (_ BitVec 64))
(declare-fun temp378_132 () (_ BitVec 64))
(declare-fun temp378_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp378_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp378_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp378_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp378_136 () (_ BitVec 64))
(declare-fun temp378_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp378_139 () (_ BitVec 64))
(declare-fun temp378_140 () (_ BitVec 64))
(declare-fun temp378_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp378_141 () (_ BitVec 64))
(declare-fun temp378_143 () (_ BitVec 64))
(declare-fun temp378_144 () (_ BitVec 64))
(declare-fun temp378_142 () (_ BitVec 64))
(declare-fun temp378_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp378_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp378_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp378_148 () (_ BitVec 64))
(declare-fun temp378_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp378_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp378_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp378_152 () (_ BitVec 64))
(assert (= temp378_1 #x0000000000000001))
(assert (= var465453 temp378_1))
(assert (= temp378_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp378_2)))
(assert (= temp378_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp378_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp378_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp378_4)))
(assert (= temp378_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp378_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp378_6 #x0000000000000000))
(assert (= var465488 temp378_6))
(assert (= temp378_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp378_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp378_8 #x0000000000000001))
(assert (= var465522 temp378_8))
(assert (= temp378_10 #x0000000000000000))
(assert (= temp378_9 temp378_10))
(assert (= temp378_12 #x0000000000000001))
(assert (= temp378_11 temp378_12))
(assert (= temp378_13 #x0000000000000000))
(assert (= var863614 temp378_13))
(assert (= temp378_14 #x0000000000000001))
(assert (= var863635 temp378_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp378_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp378_15)))
(assert (= temp378_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp378_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp378_17 #x0000000000000000))
(assert (= var997373 temp378_17))
(assert (= temp378_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp378_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp378_19 #x0000000000000000))
(assert (= var997418 temp378_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp378_20 #x0000000000000000))
(assert (= temp378_21 temp378_20))
(assert (= temp378_22 (select ARGNAME_padding_NAMEEND_VAL temp378_21)))
(assert (= temp378_23 #x0000000000000001))
(assert (= temp378_24 temp378_23))
(assert (= temp378_25 (select ARGNAME_padding_NAMEEND_VAL temp378_24)))
(assert (= temp378_26 #x0000000000000002))
(assert (= temp378_27 temp378_26))
(assert (= temp378_28 (select ARGNAME_padding_NAMEEND_VAL temp378_27)))
(assert (= temp378_29 #x0000000000000003))
(assert (= temp378_30 temp378_29))
(assert (= temp378_31 (select ARGNAME_padding_NAMEEND_VAL temp378_30)))
(assert (= temp378_32 #x0000000000000004))
(assert (= temp378_33 temp378_32))
(assert (= temp378_34 (select ARGNAME_padding_NAMEEND_VAL temp378_33)))
(assert (= temp378_35 #x0000000000000005))
(assert (= temp378_36 temp378_35))
(assert (= temp378_37 (select ARGNAME_padding_NAMEEND_VAL temp378_36)))
(assert (= temp378_38 #x0000000000000000))
(assert (= temp378_39 #x0000000000000000))
(assert (= temp378_40 temp378_39))
(assert (= temp378_41 (select ARGNAME_padding_NAMEEND_VAL temp378_40)))
(assert (= temp378_42 #x0000000000000000))
(assert (= temp378_43 #x0000000000000001))
(assert (= temp378_44 temp378_43))
(assert (= temp378_45 (select ARGNAME_padding_NAMEEND_VAL temp378_44)))
(assert (= temp378_46 #x0000000000000000))
(assert (= temp378_47 #x0000000000000002))
(assert (= temp378_48 temp378_47))
(assert (= temp378_49 (select ARGNAME_padding_NAMEEND_VAL temp378_48)))
(assert (= temp378_50 #x0000000000000000))
(assert (= temp378_51 #x0000000000000003))
(assert (= temp378_52 temp378_51))
(assert (= temp378_53 (select ARGNAME_padding_NAMEEND_VAL temp378_52)))
(assert (= temp378_54 #x0000000000000000))
(assert (= temp378_55 #x0000000000000004))
(assert (= temp378_56 temp378_55))
(assert (= temp378_57 (select ARGNAME_padding_NAMEEND_VAL temp378_56)))
(assert (= temp378_58 #x0000000000000000))
(assert (= temp378_59 #x0000000000000005))
(assert (= temp378_60 temp378_59))
(assert (= temp378_61 (select ARGNAME_padding_NAMEEND_VAL temp378_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp378_41 temp378_38)
             (bvslt temp378_45 temp378_42)
             (bvslt temp378_49 temp378_46)
             (bvslt temp378_53 temp378_50)
             (bvslt temp378_57 temp378_54)
             (bvslt temp378_61 temp378_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp378_62 #x0000000000000000))
(assert (= var1716002 temp378_62))
(assert (= temp378_63 #x0000000000000000))
(assert (= temp378_64 temp378_63))
(assert (= temp378_65 (select ARGNAME_stride_NAMEEND_VAL temp378_64)))
(assert (= temp378_66 #x0000000000000001))
(assert (= temp378_67 temp378_66))
(assert (= temp378_68 (select ARGNAME_stride_NAMEEND_VAL temp378_67)))
(assert (= temp378_69 #x0000000000000002))
(assert (= temp378_70 temp378_69))
(assert (= temp378_71 (select ARGNAME_stride_NAMEEND_VAL temp378_70)))
(assert (= temp378_72 #x0000000000000003))
(assert (= temp378_73 temp378_72))
(assert (= temp378_74 (select ARGNAME_stride_NAMEEND_VAL temp378_73)))
(assert (= temp378_75 #x0000000000000004))
(assert (= temp378_76 temp378_75))
(assert (= temp378_77 (select ARGNAME_stride_NAMEEND_VAL temp378_76)))
(assert (= temp378_78 #x0000000000000005))
(assert (= temp378_79 temp378_78))
(assert (= temp378_80 (select ARGNAME_stride_NAMEEND_VAL temp378_79)))
(assert (= temp378_81 #x0000000000000000))
(assert (= temp378_82 #x0000000000000000))
(assert (= temp378_83 temp378_82))
(assert (= temp378_84 (select ARGNAME_stride_NAMEEND_VAL temp378_83)))
(assert (= temp378_85 #x0000000000000000))
(assert (= temp378_86 #x0000000000000001))
(assert (= temp378_87 temp378_86))
(assert (= temp378_88 (select ARGNAME_stride_NAMEEND_VAL temp378_87)))
(assert (= temp378_89 #x0000000000000000))
(assert (= temp378_90 #x0000000000000002))
(assert (= temp378_91 temp378_90))
(assert (= temp378_92 (select ARGNAME_stride_NAMEEND_VAL temp378_91)))
(assert (= temp378_93 #x0000000000000000))
(assert (= temp378_94 #x0000000000000003))
(assert (= temp378_95 temp378_94))
(assert (= temp378_96 (select ARGNAME_stride_NAMEEND_VAL temp378_95)))
(assert (= temp378_97 #x0000000000000000))
(assert (= temp378_98 #x0000000000000004))
(assert (= temp378_99 temp378_98))
(assert (= temp378_100 (select ARGNAME_stride_NAMEEND_VAL temp378_99)))
(assert (= temp378_101 #x0000000000000000))
(assert (= temp378_102 #x0000000000000005))
(assert (= temp378_103 temp378_102))
(assert (= temp378_104 (select ARGNAME_stride_NAMEEND_VAL temp378_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp378_84 temp378_81)
             (bvsle temp378_88 temp378_85)
             (bvsle temp378_92 temp378_89)
             (bvsle temp378_96 temp378_93)
             (bvsle temp378_100 temp378_97)
             (bvsle temp378_104 temp378_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp378_105 #x0000000000000000))
(assert (= var1716023 temp378_105))
(assert (= temp378_106 #x0000000000000000))
(assert (= var1704114 temp378_106))
(assert (= temp378_107 #x0000000000000000))
(assert (= temp378_108 temp378_107))
(assert (= temp378_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp378_108)))
(assert (= temp378_110 #x0000000000000001))
(assert (= temp378_111 temp378_110))
(assert (= temp378_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp378_111)))
(assert (= temp378_113 #x0000000000000002))
(assert (= temp378_114 temp378_113))
(assert (= temp378_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp378_114)))
(assert (= temp378_116 #x0000000000000003))
(assert (= temp378_117 temp378_116))
(assert (= temp378_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp378_117)))
(assert (= temp378_119 #x0000000000000004))
(assert (= temp378_120 temp378_119))
(assert (= temp378_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp378_120)))
(assert (= temp378_122 #x0000000000000005))
(assert (= temp378_123 temp378_122))
(assert (= temp378_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp378_123)))
(assert (= temp378_126 var1704114))
(assert (= temp378_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp378_126)))
(assert (= temp378_125 temp378_127))
(assert (= var1716068
   (ite (bvslt temp378_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp378_128 #x0000000000000000))
(assert (= var1716068 temp378_128))
(assert (= temp378_129 #x0000000000000000))
(assert (= var1704114 temp378_129))
(assert (= temp378_131 var1704114))
(assert (= temp378_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp378_131)))
(assert (= temp378_130 temp378_132))
(assert (= var1716090 (bvsmod temp378_130 ARGNAME_groups_NAMEEND)))
(assert (= temp378_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp378_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp378_134 #x0000000000000001))
(assert (= var1716091 temp378_134))
(assert (= var1716110 var1716000))
(assert (= temp378_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp378_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp378_136 #x0000000000000001))
(assert (= var1716111 temp378_136))
(assert (= temp378_137 #x0000000000000001))
(assert (= var1705002 temp378_137))
(assert (= temp378_139 var1705002))
(assert (= temp378_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp378_139)))
(assert (= temp378_138 temp378_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp378_138)))
(assert (= temp378_141 #x0000000000000000))
(assert (= var1704114 temp378_141))
(assert (= temp378_143 var1704114))
(assert (= temp378_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp378_143)))
(assert (= temp378_142 temp378_144))
(assert (= temp378_145 #x0000000000000002))
(assert (= var1979241 temp378_145))
(assert (= temp378_146 #x0000000000000001))
(assert (= var1716281 temp378_146))
(assert (= temp378_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp378_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp378_148 #x0000000000000001))
(assert (= var997490 temp378_148))
(assert (= temp378_149 #x0000000000000001))
(assert (= var997620 temp378_149))
(assert (= var3486185 var997620))
(assert (= temp378_150 #x0000000000000000))
(assert (= var3686207 temp378_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp378_151 #x0000000000000002))
(assert (= var3815043 temp378_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp378_152 #x0000000000000001))
(assert (= var997490 temp378_152))
(model-add temp378_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp378_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp378_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp378_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp378_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp378_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






