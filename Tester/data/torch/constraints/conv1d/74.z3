(declare-fun temp98_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp98_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp98_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp98_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp98_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp98_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp98_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp98_8 () (_ BitVec 64))
(declare-fun temp98_10 () (_ BitVec 64))
(declare-fun temp98_9 () (_ BitVec 64))
(declare-fun temp98_12 () (_ BitVec 64))
(declare-fun temp98_11 () (_ BitVec 64))
(declare-fun temp98_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp98_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp98_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp98_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp98_17 () (_ BitVec 64))
(declare-fun temp98_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp98_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp98_20 () (_ BitVec 64))
(declare-fun temp98_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp98_22 () (_ BitVec 64))
(declare-fun temp98_23 () (_ BitVec 64))
(declare-fun temp98_24 () (_ BitVec 64))
(declare-fun temp98_25 () (_ BitVec 64))
(declare-fun temp98_26 () (_ BitVec 64))
(declare-fun temp98_27 () (_ BitVec 64))
(declare-fun temp98_28 () (_ BitVec 64))
(declare-fun temp98_29 () (_ BitVec 64))
(declare-fun temp98_30 () (_ BitVec 64))
(declare-fun temp98_31 () (_ BitVec 64))
(declare-fun temp98_32 () (_ BitVec 64))
(declare-fun temp98_33 () (_ BitVec 64))
(declare-fun temp98_34 () (_ BitVec 64))
(declare-fun temp98_35 () (_ BitVec 64))
(declare-fun temp98_36 () (_ BitVec 64))
(declare-fun temp98_37 () (_ BitVec 64))
(declare-fun temp98_38 () (_ BitVec 64))
(declare-fun temp98_39 () (_ BitVec 64))
(declare-fun temp98_40 () (_ BitVec 64))
(declare-fun temp98_41 () (_ BitVec 64))
(declare-fun temp98_42 () (_ BitVec 64))
(declare-fun temp98_43 () (_ BitVec 64))
(declare-fun temp98_44 () (_ BitVec 64))
(declare-fun temp98_45 () (_ BitVec 64))
(declare-fun temp98_46 () (_ BitVec 64))
(declare-fun temp98_47 () (_ BitVec 64))
(declare-fun temp98_48 () (_ BitVec 64))
(declare-fun temp98_49 () (_ BitVec 64))
(declare-fun temp98_50 () (_ BitVec 64))
(declare-fun temp98_51 () (_ BitVec 64))
(declare-fun temp98_52 () (_ BitVec 64))
(declare-fun temp98_53 () (_ BitVec 64))
(declare-fun temp98_54 () (_ BitVec 64))
(declare-fun temp98_55 () (_ BitVec 64))
(declare-fun temp98_56 () (_ BitVec 64))
(declare-fun temp98_57 () (_ BitVec 64))
(declare-fun temp98_58 () (_ BitVec 64))
(declare-fun temp98_59 () (_ BitVec 64))
(declare-fun temp98_60 () (_ BitVec 64))
(declare-fun temp98_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp98_62 () (_ BitVec 64))
(declare-fun temp98_63 () (_ BitVec 64))
(declare-fun temp98_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp98_65 () (_ BitVec 64))
(declare-fun temp98_66 () (_ BitVec 64))
(declare-fun temp98_67 () (_ BitVec 64))
(declare-fun temp98_68 () (_ BitVec 64))
(declare-fun temp98_69 () (_ BitVec 64))
(declare-fun temp98_70 () (_ BitVec 64))
(declare-fun temp98_71 () (_ BitVec 64))
(declare-fun temp98_72 () (_ BitVec 64))
(declare-fun temp98_73 () (_ BitVec 64))
(declare-fun temp98_74 () (_ BitVec 64))
(declare-fun temp98_75 () (_ BitVec 64))
(declare-fun temp98_76 () (_ BitVec 64))
(declare-fun temp98_77 () (_ BitVec 64))
(declare-fun temp98_78 () (_ BitVec 64))
(declare-fun temp98_79 () (_ BitVec 64))
(declare-fun temp98_80 () (_ BitVec 64))
(declare-fun temp98_81 () (_ BitVec 64))
(declare-fun temp98_82 () (_ BitVec 64))
(declare-fun temp98_83 () (_ BitVec 64))
(declare-fun temp98_84 () (_ BitVec 64))
(declare-fun temp98_85 () (_ BitVec 64))
(declare-fun temp98_86 () (_ BitVec 64))
(declare-fun temp98_87 () (_ BitVec 64))
(declare-fun temp98_88 () (_ BitVec 64))
(declare-fun temp98_89 () (_ BitVec 64))
(declare-fun temp98_90 () (_ BitVec 64))
(declare-fun temp98_91 () (_ BitVec 64))
(declare-fun temp98_92 () (_ BitVec 64))
(declare-fun temp98_93 () (_ BitVec 64))
(declare-fun temp98_94 () (_ BitVec 64))
(declare-fun temp98_95 () (_ BitVec 64))
(declare-fun temp98_96 () (_ BitVec 64))
(declare-fun temp98_97 () (_ BitVec 64))
(declare-fun temp98_98 () (_ BitVec 64))
(declare-fun temp98_99 () (_ BitVec 64))
(declare-fun temp98_100 () (_ BitVec 64))
(declare-fun temp98_101 () (_ BitVec 64))
(declare-fun temp98_102 () (_ BitVec 64))
(declare-fun temp98_103 () (_ BitVec 64))
(declare-fun temp98_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp98_105 () (_ BitVec 64))
(declare-fun temp98_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp98_107 () (_ BitVec 64))
(declare-fun temp98_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp98_109 () (_ BitVec 64))
(declare-fun temp98_110 () (_ BitVec 64))
(declare-fun temp98_111 () (_ BitVec 64))
(declare-fun temp98_112 () (_ BitVec 64))
(declare-fun temp98_113 () (_ BitVec 64))
(declare-fun temp98_114 () (_ BitVec 64))
(declare-fun temp98_115 () (_ BitVec 64))
(declare-fun temp98_116 () (_ BitVec 64))
(declare-fun temp98_117 () (_ BitVec 64))
(declare-fun temp98_118 () (_ BitVec 64))
(declare-fun temp98_119 () (_ BitVec 64))
(declare-fun temp98_120 () (_ BitVec 64))
(declare-fun temp98_121 () (_ BitVec 64))
(declare-fun temp98_122 () (_ BitVec 64))
(declare-fun temp98_123 () (_ BitVec 64))
(declare-fun temp98_124 () (_ BitVec 64))
(declare-fun temp98_126 () (_ BitVec 64))
(declare-fun temp98_127 () (_ BitVec 64))
(declare-fun temp98_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp98_128 () (_ BitVec 64))
(declare-fun temp98_129 () (_ BitVec 64))
(declare-fun temp98_131 () (_ BitVec 64))
(declare-fun temp98_132 () (_ BitVec 64))
(declare-fun temp98_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp98_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp98_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp98_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp98_136 () (_ BitVec 64))
(declare-fun temp98_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp98_139 () (_ BitVec 64))
(declare-fun temp98_140 () (_ BitVec 64))
(declare-fun temp98_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp98_141 () (_ BitVec 64))
(declare-fun temp98_143 () (_ BitVec 64))
(declare-fun temp98_144 () (_ BitVec 64))
(declare-fun temp98_142 () (_ BitVec 64))
(declare-fun temp98_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp98_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp98_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp98_148 () (_ BitVec 64))
(declare-fun temp98_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp98_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp98_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp98_153 () (_ BitVec 64))
(declare-fun temp98_152 () (_ BitVec 64))
(declare-fun temp98_155 () (_ BitVec 64))
(declare-fun temp98_154 () (_ BitVec 64))
(declare-fun temp98_156 () (_ BitVec 64))
(assert (= temp98_1 #x0000000000000001))
(assert (= var465453 temp98_1))
(assert (= temp98_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp98_2)))
(assert (= temp98_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp98_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp98_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp98_4)))
(assert (= temp98_5 #x0000000000000000))
(assert (= var465487 (ite (= var465486 temp98_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp98_6 #x0000000000000000))
(assert (= var465488 temp98_6))
(assert (= temp98_7 #x0000000000000000))
(assert (= var465522 (ite (= var465485 temp98_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp98_8 #x0000000000000001))
(assert (= var465522 temp98_8))
(assert (= temp98_10 #x0000000000000000))
(assert (= temp98_9 temp98_10))
(assert (= temp98_12 #x0000000000000001))
(assert (= temp98_11 temp98_12))
(assert (= temp98_13 #x0000000000000000))
(assert (= var863614 temp98_13))
(assert (= temp98_14 #x0000000000000001))
(assert (= var863635 temp98_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp98_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp98_15)))
(assert (= temp98_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp98_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_17 #x0000000000000000))
(assert (= var997373 temp98_17))
(assert (= temp98_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp98_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_19 #x0000000000000000))
(assert (= var997418 temp98_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp98_20 #x0000000000000000))
(assert (= temp98_21 temp98_20))
(assert (= temp98_22 (select ARGNAME_padding_NAMEEND_VAL temp98_21)))
(assert (= temp98_23 #x0000000000000001))
(assert (= temp98_24 temp98_23))
(assert (= temp98_25 (select ARGNAME_padding_NAMEEND_VAL temp98_24)))
(assert (= temp98_26 #x0000000000000002))
(assert (= temp98_27 temp98_26))
(assert (= temp98_28 (select ARGNAME_padding_NAMEEND_VAL temp98_27)))
(assert (= temp98_29 #x0000000000000003))
(assert (= temp98_30 temp98_29))
(assert (= temp98_31 (select ARGNAME_padding_NAMEEND_VAL temp98_30)))
(assert (= temp98_32 #x0000000000000004))
(assert (= temp98_33 temp98_32))
(assert (= temp98_34 (select ARGNAME_padding_NAMEEND_VAL temp98_33)))
(assert (= temp98_35 #x0000000000000005))
(assert (= temp98_36 temp98_35))
(assert (= temp98_37 (select ARGNAME_padding_NAMEEND_VAL temp98_36)))
(assert (= temp98_38 #x0000000000000000))
(assert (= temp98_39 #x0000000000000000))
(assert (= temp98_40 temp98_39))
(assert (= temp98_41 (select ARGNAME_padding_NAMEEND_VAL temp98_40)))
(assert (= temp98_42 #x0000000000000000))
(assert (= temp98_43 #x0000000000000001))
(assert (= temp98_44 temp98_43))
(assert (= temp98_45 (select ARGNAME_padding_NAMEEND_VAL temp98_44)))
(assert (= temp98_46 #x0000000000000000))
(assert (= temp98_47 #x0000000000000002))
(assert (= temp98_48 temp98_47))
(assert (= temp98_49 (select ARGNAME_padding_NAMEEND_VAL temp98_48)))
(assert (= temp98_50 #x0000000000000000))
(assert (= temp98_51 #x0000000000000003))
(assert (= temp98_52 temp98_51))
(assert (= temp98_53 (select ARGNAME_padding_NAMEEND_VAL temp98_52)))
(assert (= temp98_54 #x0000000000000000))
(assert (= temp98_55 #x0000000000000004))
(assert (= temp98_56 temp98_55))
(assert (= temp98_57 (select ARGNAME_padding_NAMEEND_VAL temp98_56)))
(assert (= temp98_58 #x0000000000000000))
(assert (= temp98_59 #x0000000000000005))
(assert (= temp98_60 temp98_59))
(assert (= temp98_61 (select ARGNAME_padding_NAMEEND_VAL temp98_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp98_41 temp98_38)
             (bvslt temp98_45 temp98_42)
             (bvslt temp98_49 temp98_46)
             (bvslt temp98_53 temp98_50)
             (bvslt temp98_57 temp98_54)
             (bvslt temp98_61 temp98_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_62 #x0000000000000000))
(assert (= var1716002 temp98_62))
(assert (= temp98_63 #x0000000000000000))
(assert (= temp98_64 temp98_63))
(assert (= temp98_65 (select ARGNAME_stride_NAMEEND_VAL temp98_64)))
(assert (= temp98_66 #x0000000000000001))
(assert (= temp98_67 temp98_66))
(assert (= temp98_68 (select ARGNAME_stride_NAMEEND_VAL temp98_67)))
(assert (= temp98_69 #x0000000000000002))
(assert (= temp98_70 temp98_69))
(assert (= temp98_71 (select ARGNAME_stride_NAMEEND_VAL temp98_70)))
(assert (= temp98_72 #x0000000000000003))
(assert (= temp98_73 temp98_72))
(assert (= temp98_74 (select ARGNAME_stride_NAMEEND_VAL temp98_73)))
(assert (= temp98_75 #x0000000000000004))
(assert (= temp98_76 temp98_75))
(assert (= temp98_77 (select ARGNAME_stride_NAMEEND_VAL temp98_76)))
(assert (= temp98_78 #x0000000000000005))
(assert (= temp98_79 temp98_78))
(assert (= temp98_80 (select ARGNAME_stride_NAMEEND_VAL temp98_79)))
(assert (= temp98_81 #x0000000000000000))
(assert (= temp98_82 #x0000000000000000))
(assert (= temp98_83 temp98_82))
(assert (= temp98_84 (select ARGNAME_stride_NAMEEND_VAL temp98_83)))
(assert (= temp98_85 #x0000000000000000))
(assert (= temp98_86 #x0000000000000001))
(assert (= temp98_87 temp98_86))
(assert (= temp98_88 (select ARGNAME_stride_NAMEEND_VAL temp98_87)))
(assert (= temp98_89 #x0000000000000000))
(assert (= temp98_90 #x0000000000000002))
(assert (= temp98_91 temp98_90))
(assert (= temp98_92 (select ARGNAME_stride_NAMEEND_VAL temp98_91)))
(assert (= temp98_93 #x0000000000000000))
(assert (= temp98_94 #x0000000000000003))
(assert (= temp98_95 temp98_94))
(assert (= temp98_96 (select ARGNAME_stride_NAMEEND_VAL temp98_95)))
(assert (= temp98_97 #x0000000000000000))
(assert (= temp98_98 #x0000000000000004))
(assert (= temp98_99 temp98_98))
(assert (= temp98_100 (select ARGNAME_stride_NAMEEND_VAL temp98_99)))
(assert (= temp98_101 #x0000000000000000))
(assert (= temp98_102 #x0000000000000005))
(assert (= temp98_103 temp98_102))
(assert (= temp98_104 (select ARGNAME_stride_NAMEEND_VAL temp98_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp98_84 temp98_81)
             (bvsle temp98_88 temp98_85)
             (bvsle temp98_92 temp98_89)
             (bvsle temp98_96 temp98_93)
             (bvsle temp98_100 temp98_97)
             (bvsle temp98_104 temp98_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_105 #x0000000000000000))
(assert (= var1716023 temp98_105))
(assert (= temp98_106 #x0000000000000000))
(assert (= var1704114 temp98_106))
(assert (= temp98_107 #x0000000000000000))
(assert (= temp98_108 temp98_107))
(assert (= temp98_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_108)))
(assert (= temp98_110 #x0000000000000001))
(assert (= temp98_111 temp98_110))
(assert (= temp98_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_111)))
(assert (= temp98_113 #x0000000000000002))
(assert (= temp98_114 temp98_113))
(assert (= temp98_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_114)))
(assert (= temp98_116 #x0000000000000003))
(assert (= temp98_117 temp98_116))
(assert (= temp98_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_117)))
(assert (= temp98_119 #x0000000000000004))
(assert (= temp98_120 temp98_119))
(assert (= temp98_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_120)))
(assert (= temp98_122 #x0000000000000005))
(assert (= temp98_123 temp98_122))
(assert (= temp98_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_123)))
(assert (= temp98_126 var1704114))
(assert (= temp98_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_126)))
(assert (= temp98_125 temp98_127))
(assert (= var1716068
   (ite (bvslt temp98_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_128 #x0000000000000000))
(assert (= var1716068 temp98_128))
(assert (= temp98_129 #x0000000000000000))
(assert (= var1704114 temp98_129))
(assert (= temp98_131 var1704114))
(assert (= temp98_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_131)))
(assert (= temp98_130 temp98_132))
(assert (= var1716090 (bvsmod temp98_130 ARGNAME_groups_NAMEEND)))
(assert (= temp98_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp98_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp98_134 #x0000000000000001))
(assert (= var1716091 temp98_134))
(assert (= var1716110 var1716000))
(assert (= temp98_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp98_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp98_136 #x0000000000000001))
(assert (= var1716111 temp98_136))
(assert (= temp98_137 #x0000000000000001))
(assert (= var1705002 temp98_137))
(assert (= temp98_139 var1705002))
(assert (= temp98_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_139)))
(assert (= temp98_138 temp98_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp98_138)))
(assert (= temp98_141 #x0000000000000000))
(assert (= var1704114 temp98_141))
(assert (= temp98_143 var1704114))
(assert (= temp98_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp98_143)))
(assert (= temp98_142 temp98_144))
(assert (= temp98_145 #x0000000000000002))
(assert (= var1979241 temp98_145))
(assert (= temp98_146 #x0000000000000001))
(assert (= var1716281 temp98_146))
(assert (= temp98_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp98_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_148 #x0000000000000001))
(assert (= var997490 temp98_148))
(assert (= temp98_149 #x0000000000000001))
(assert (= var997620 temp98_149))
(assert (= var3486185 var997620))
(assert (= temp98_150 #x0000000000000000))
(assert (= var3686207 temp98_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp98_151 #x0000000000000002))
(assert (= var3815043 temp98_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp98_153 #xffffffffffffffff))
(assert (= temp98_152 temp98_153))
(assert (= temp98_155 #xffffffffffffffff))
(assert (= temp98_154 temp98_155))
(assert (= temp98_156 #x0000000000000001))
(assert (= var997490 temp98_156))
(model-add temp98_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp98_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp98_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp98_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp98_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp98_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






