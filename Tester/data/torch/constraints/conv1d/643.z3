(declare-fun temp855_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp855_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp855_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp855_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp855_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp855_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp855_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp855_8 () (_ BitVec 64))
(declare-fun temp855_10 () (_ BitVec 64))
(declare-fun temp855_9 () (_ BitVec 64))
(declare-fun temp855_12 () (_ BitVec 64))
(declare-fun temp855_11 () (_ BitVec 64))
(declare-fun temp855_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp855_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp855_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp855_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp855_17 () (_ BitVec 64))
(declare-fun temp855_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp855_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp855_20 () (_ BitVec 64))
(declare-fun temp855_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp855_22 () (_ BitVec 64))
(declare-fun temp855_23 () (_ BitVec 64))
(declare-fun temp855_24 () (_ BitVec 64))
(declare-fun temp855_25 () (_ BitVec 64))
(declare-fun temp855_26 () (_ BitVec 64))
(declare-fun temp855_27 () (_ BitVec 64))
(declare-fun temp855_28 () (_ BitVec 64))
(declare-fun temp855_29 () (_ BitVec 64))
(declare-fun temp855_30 () (_ BitVec 64))
(declare-fun temp855_31 () (_ BitVec 64))
(declare-fun temp855_32 () (_ BitVec 64))
(declare-fun temp855_33 () (_ BitVec 64))
(declare-fun temp855_34 () (_ BitVec 64))
(declare-fun temp855_35 () (_ BitVec 64))
(declare-fun temp855_36 () (_ BitVec 64))
(declare-fun temp855_37 () (_ BitVec 64))
(declare-fun temp855_38 () (_ BitVec 64))
(declare-fun temp855_39 () (_ BitVec 64))
(declare-fun temp855_40 () (_ BitVec 64))
(declare-fun temp855_41 () (_ BitVec 64))
(declare-fun temp855_42 () (_ BitVec 64))
(declare-fun temp855_43 () (_ BitVec 64))
(declare-fun temp855_44 () (_ BitVec 64))
(declare-fun temp855_45 () (_ BitVec 64))
(declare-fun temp855_46 () (_ BitVec 64))
(declare-fun temp855_47 () (_ BitVec 64))
(declare-fun temp855_48 () (_ BitVec 64))
(declare-fun temp855_49 () (_ BitVec 64))
(declare-fun temp855_50 () (_ BitVec 64))
(declare-fun temp855_51 () (_ BitVec 64))
(declare-fun temp855_52 () (_ BitVec 64))
(declare-fun temp855_53 () (_ BitVec 64))
(declare-fun temp855_54 () (_ BitVec 64))
(declare-fun temp855_55 () (_ BitVec 64))
(declare-fun temp855_56 () (_ BitVec 64))
(declare-fun temp855_57 () (_ BitVec 64))
(declare-fun temp855_58 () (_ BitVec 64))
(declare-fun temp855_59 () (_ BitVec 64))
(declare-fun temp855_60 () (_ BitVec 64))
(declare-fun temp855_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp855_62 () (_ BitVec 64))
(declare-fun temp855_63 () (_ BitVec 64))
(declare-fun temp855_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp855_65 () (_ BitVec 64))
(declare-fun temp855_66 () (_ BitVec 64))
(declare-fun temp855_67 () (_ BitVec 64))
(declare-fun temp855_68 () (_ BitVec 64))
(declare-fun temp855_69 () (_ BitVec 64))
(declare-fun temp855_70 () (_ BitVec 64))
(declare-fun temp855_71 () (_ BitVec 64))
(declare-fun temp855_72 () (_ BitVec 64))
(declare-fun temp855_73 () (_ BitVec 64))
(declare-fun temp855_74 () (_ BitVec 64))
(declare-fun temp855_75 () (_ BitVec 64))
(declare-fun temp855_76 () (_ BitVec 64))
(declare-fun temp855_77 () (_ BitVec 64))
(declare-fun temp855_78 () (_ BitVec 64))
(declare-fun temp855_79 () (_ BitVec 64))
(declare-fun temp855_80 () (_ BitVec 64))
(declare-fun temp855_81 () (_ BitVec 64))
(declare-fun temp855_82 () (_ BitVec 64))
(declare-fun temp855_83 () (_ BitVec 64))
(declare-fun temp855_84 () (_ BitVec 64))
(declare-fun temp855_85 () (_ BitVec 64))
(declare-fun temp855_86 () (_ BitVec 64))
(declare-fun temp855_87 () (_ BitVec 64))
(declare-fun temp855_88 () (_ BitVec 64))
(declare-fun temp855_89 () (_ BitVec 64))
(declare-fun temp855_90 () (_ BitVec 64))
(declare-fun temp855_91 () (_ BitVec 64))
(declare-fun temp855_92 () (_ BitVec 64))
(declare-fun temp855_93 () (_ BitVec 64))
(declare-fun temp855_94 () (_ BitVec 64))
(declare-fun temp855_95 () (_ BitVec 64))
(declare-fun temp855_96 () (_ BitVec 64))
(declare-fun temp855_97 () (_ BitVec 64))
(declare-fun temp855_98 () (_ BitVec 64))
(declare-fun temp855_99 () (_ BitVec 64))
(declare-fun temp855_100 () (_ BitVec 64))
(declare-fun temp855_101 () (_ BitVec 64))
(declare-fun temp855_102 () (_ BitVec 64))
(declare-fun temp855_103 () (_ BitVec 64))
(declare-fun temp855_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp855_105 () (_ BitVec 64))
(declare-fun temp855_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp855_107 () (_ BitVec 64))
(declare-fun temp855_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp855_109 () (_ BitVec 64))
(declare-fun temp855_110 () (_ BitVec 64))
(declare-fun temp855_111 () (_ BitVec 64))
(declare-fun temp855_112 () (_ BitVec 64))
(declare-fun temp855_113 () (_ BitVec 64))
(declare-fun temp855_114 () (_ BitVec 64))
(declare-fun temp855_115 () (_ BitVec 64))
(declare-fun temp855_116 () (_ BitVec 64))
(declare-fun temp855_117 () (_ BitVec 64))
(declare-fun temp855_118 () (_ BitVec 64))
(declare-fun temp855_119 () (_ BitVec 64))
(declare-fun temp855_120 () (_ BitVec 64))
(declare-fun temp855_121 () (_ BitVec 64))
(declare-fun temp855_122 () (_ BitVec 64))
(declare-fun temp855_123 () (_ BitVec 64))
(declare-fun temp855_124 () (_ BitVec 64))
(declare-fun temp855_126 () (_ BitVec 64))
(declare-fun temp855_127 () (_ BitVec 64))
(declare-fun temp855_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp855_128 () (_ BitVec 64))
(declare-fun temp855_129 () (_ BitVec 64))
(declare-fun temp855_131 () (_ BitVec 64))
(declare-fun temp855_132 () (_ BitVec 64))
(declare-fun temp855_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp855_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp855_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp855_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp855_136 () (_ BitVec 64))
(declare-fun temp855_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp855_139 () (_ BitVec 64))
(declare-fun temp855_140 () (_ BitVec 64))
(declare-fun temp855_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp855_141 () (_ BitVec 64))
(declare-fun temp855_143 () (_ BitVec 64))
(declare-fun temp855_144 () (_ BitVec 64))
(declare-fun temp855_142 () (_ BitVec 64))
(declare-fun temp855_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp855_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp855_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp855_148 () (_ BitVec 64))
(declare-fun temp855_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp855_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp855_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var5058960 () (_ BitVec 64))
(declare-fun temp855_152 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun temp855_153 () (_ BitVec 64))
(assert (= temp855_1 #x0000000000000001))
(assert (= var465453 temp855_1))
(assert (= temp855_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp855_2)))
(assert (= temp855_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp855_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp855_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp855_4)))
(assert (= temp855_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp855_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp855_6 #x0000000000000000))
(assert (= var465488 temp855_6))
(assert (= temp855_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp855_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp855_8 #x0000000000000001))
(assert (= var465522 temp855_8))
(assert (= temp855_10 #x0000000000000000))
(assert (= temp855_9 temp855_10))
(assert (= temp855_12 #x0000000000000001))
(assert (= temp855_11 temp855_12))
(assert (= temp855_13 #x0000000000000000))
(assert (= var863614 temp855_13))
(assert (= temp855_14 #x0000000000000001))
(assert (= var863635 temp855_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp855_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp855_15)))
(assert (= temp855_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp855_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp855_17 #x0000000000000000))
(assert (= var997373 temp855_17))
(assert (= temp855_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp855_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp855_19 #x0000000000000000))
(assert (= var997418 temp855_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp855_20 #x0000000000000000))
(assert (= temp855_21 temp855_20))
(assert (= temp855_22 (select ARGNAME_padding_NAMEEND_VAL temp855_21)))
(assert (= temp855_23 #x0000000000000001))
(assert (= temp855_24 temp855_23))
(assert (= temp855_25 (select ARGNAME_padding_NAMEEND_VAL temp855_24)))
(assert (= temp855_26 #x0000000000000002))
(assert (= temp855_27 temp855_26))
(assert (= temp855_28 (select ARGNAME_padding_NAMEEND_VAL temp855_27)))
(assert (= temp855_29 #x0000000000000003))
(assert (= temp855_30 temp855_29))
(assert (= temp855_31 (select ARGNAME_padding_NAMEEND_VAL temp855_30)))
(assert (= temp855_32 #x0000000000000004))
(assert (= temp855_33 temp855_32))
(assert (= temp855_34 (select ARGNAME_padding_NAMEEND_VAL temp855_33)))
(assert (= temp855_35 #x0000000000000005))
(assert (= temp855_36 temp855_35))
(assert (= temp855_37 (select ARGNAME_padding_NAMEEND_VAL temp855_36)))
(assert (= temp855_38 #x0000000000000000))
(assert (= temp855_39 #x0000000000000000))
(assert (= temp855_40 temp855_39))
(assert (= temp855_41 (select ARGNAME_padding_NAMEEND_VAL temp855_40)))
(assert (= temp855_42 #x0000000000000000))
(assert (= temp855_43 #x0000000000000001))
(assert (= temp855_44 temp855_43))
(assert (= temp855_45 (select ARGNAME_padding_NAMEEND_VAL temp855_44)))
(assert (= temp855_46 #x0000000000000000))
(assert (= temp855_47 #x0000000000000002))
(assert (= temp855_48 temp855_47))
(assert (= temp855_49 (select ARGNAME_padding_NAMEEND_VAL temp855_48)))
(assert (= temp855_50 #x0000000000000000))
(assert (= temp855_51 #x0000000000000003))
(assert (= temp855_52 temp855_51))
(assert (= temp855_53 (select ARGNAME_padding_NAMEEND_VAL temp855_52)))
(assert (= temp855_54 #x0000000000000000))
(assert (= temp855_55 #x0000000000000004))
(assert (= temp855_56 temp855_55))
(assert (= temp855_57 (select ARGNAME_padding_NAMEEND_VAL temp855_56)))
(assert (= temp855_58 #x0000000000000000))
(assert (= temp855_59 #x0000000000000005))
(assert (= temp855_60 temp855_59))
(assert (= temp855_61 (select ARGNAME_padding_NAMEEND_VAL temp855_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp855_41 temp855_38)
             (bvslt temp855_45 temp855_42)
             (bvslt temp855_49 temp855_46)
             (bvslt temp855_53 temp855_50)
             (bvslt temp855_57 temp855_54)
             (bvslt temp855_61 temp855_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp855_62 #x0000000000000000))
(assert (= var1716002 temp855_62))
(assert (= temp855_63 #x0000000000000000))
(assert (= temp855_64 temp855_63))
(assert (= temp855_65 (select ARGNAME_stride_NAMEEND_VAL temp855_64)))
(assert (= temp855_66 #x0000000000000001))
(assert (= temp855_67 temp855_66))
(assert (= temp855_68 (select ARGNAME_stride_NAMEEND_VAL temp855_67)))
(assert (= temp855_69 #x0000000000000002))
(assert (= temp855_70 temp855_69))
(assert (= temp855_71 (select ARGNAME_stride_NAMEEND_VAL temp855_70)))
(assert (= temp855_72 #x0000000000000003))
(assert (= temp855_73 temp855_72))
(assert (= temp855_74 (select ARGNAME_stride_NAMEEND_VAL temp855_73)))
(assert (= temp855_75 #x0000000000000004))
(assert (= temp855_76 temp855_75))
(assert (= temp855_77 (select ARGNAME_stride_NAMEEND_VAL temp855_76)))
(assert (= temp855_78 #x0000000000000005))
(assert (= temp855_79 temp855_78))
(assert (= temp855_80 (select ARGNAME_stride_NAMEEND_VAL temp855_79)))
(assert (= temp855_81 #x0000000000000000))
(assert (= temp855_82 #x0000000000000000))
(assert (= temp855_83 temp855_82))
(assert (= temp855_84 (select ARGNAME_stride_NAMEEND_VAL temp855_83)))
(assert (= temp855_85 #x0000000000000000))
(assert (= temp855_86 #x0000000000000001))
(assert (= temp855_87 temp855_86))
(assert (= temp855_88 (select ARGNAME_stride_NAMEEND_VAL temp855_87)))
(assert (= temp855_89 #x0000000000000000))
(assert (= temp855_90 #x0000000000000002))
(assert (= temp855_91 temp855_90))
(assert (= temp855_92 (select ARGNAME_stride_NAMEEND_VAL temp855_91)))
(assert (= temp855_93 #x0000000000000000))
(assert (= temp855_94 #x0000000000000003))
(assert (= temp855_95 temp855_94))
(assert (= temp855_96 (select ARGNAME_stride_NAMEEND_VAL temp855_95)))
(assert (= temp855_97 #x0000000000000000))
(assert (= temp855_98 #x0000000000000004))
(assert (= temp855_99 temp855_98))
(assert (= temp855_100 (select ARGNAME_stride_NAMEEND_VAL temp855_99)))
(assert (= temp855_101 #x0000000000000000))
(assert (= temp855_102 #x0000000000000005))
(assert (= temp855_103 temp855_102))
(assert (= temp855_104 (select ARGNAME_stride_NAMEEND_VAL temp855_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp855_84 temp855_81)
             (bvsle temp855_88 temp855_85)
             (bvsle temp855_92 temp855_89)
             (bvsle temp855_96 temp855_93)
             (bvsle temp855_100 temp855_97)
             (bvsle temp855_104 temp855_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp855_105 #x0000000000000000))
(assert (= var1716023 temp855_105))
(assert (= temp855_106 #x0000000000000000))
(assert (= var1704114 temp855_106))
(assert (= temp855_107 #x0000000000000000))
(assert (= temp855_108 temp855_107))
(assert (= temp855_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp855_108)))
(assert (= temp855_110 #x0000000000000001))
(assert (= temp855_111 temp855_110))
(assert (= temp855_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp855_111)))
(assert (= temp855_113 #x0000000000000002))
(assert (= temp855_114 temp855_113))
(assert (= temp855_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp855_114)))
(assert (= temp855_116 #x0000000000000003))
(assert (= temp855_117 temp855_116))
(assert (= temp855_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp855_117)))
(assert (= temp855_119 #x0000000000000004))
(assert (= temp855_120 temp855_119))
(assert (= temp855_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp855_120)))
(assert (= temp855_122 #x0000000000000005))
(assert (= temp855_123 temp855_122))
(assert (= temp855_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp855_123)))
(assert (= temp855_126 var1704114))
(assert (= temp855_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp855_126)))
(assert (= temp855_125 temp855_127))
(assert (= var1716068
   (ite (bvslt temp855_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp855_128 #x0000000000000000))
(assert (= var1716068 temp855_128))
(assert (= temp855_129 #x0000000000000000))
(assert (= var1704114 temp855_129))
(assert (= temp855_131 var1704114))
(assert (= temp855_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp855_131)))
(assert (= temp855_130 temp855_132))
(assert (= var1716090 (bvsmod temp855_130 ARGNAME_groups_NAMEEND)))
(assert (= temp855_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp855_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp855_134 #x0000000000000001))
(assert (= var1716091 temp855_134))
(assert (= var1716110 var1716000))
(assert (= temp855_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp855_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp855_136 #x0000000000000001))
(assert (= var1716111 temp855_136))
(assert (= temp855_137 #x0000000000000001))
(assert (= var1705002 temp855_137))
(assert (= temp855_139 var1705002))
(assert (= temp855_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp855_139)))
(assert (= temp855_138 temp855_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp855_138)))
(assert (= temp855_141 #x0000000000000000))
(assert (= var1704114 temp855_141))
(assert (= temp855_143 var1704114))
(assert (= temp855_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp855_143)))
(assert (= temp855_142 temp855_144))
(assert (= temp855_145 #x0000000000000002))
(assert (= var1979241 temp855_145))
(assert (= temp855_146 #x0000000000000001))
(assert (= var1716281 temp855_146))
(assert (= temp855_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp855_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp855_148 #x0000000000000001))
(assert (= var997490 temp855_148))
(assert (= temp855_149 #x0000000000000001))
(assert (= var997620 temp855_149))
(assert (= var3486185 var997620))
(assert (= temp855_150 #x0000000000000000))
(assert (= var3686207 temp855_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp855_151 #x0000000000000002))
(assert (= var3815043 temp855_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4796816 var997633))
(assert (= var5058960 var997633))
(assert (= temp855_152 #x0000000000000000))
(assert (= var5386640 temp855_152))
(assert (= temp855_153 #x0000000000000001))
(assert (= var997490 temp855_153))
(model-add temp855_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp855_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp855_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp855_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp855_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp855_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






