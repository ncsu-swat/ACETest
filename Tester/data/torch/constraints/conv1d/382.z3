(declare-fun temp508_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp508_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp508_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp508_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp508_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp508_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp508_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp508_8 () (_ BitVec 64))
(declare-fun temp508_10 () (_ BitVec 64))
(declare-fun temp508_9 () (_ BitVec 64))
(declare-fun temp508_12 () (_ BitVec 64))
(declare-fun temp508_11 () (_ BitVec 64))
(declare-fun temp508_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp508_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp508_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp508_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp508_17 () (_ BitVec 64))
(declare-fun temp508_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp508_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp508_20 () (_ BitVec 64))
(declare-fun temp508_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp508_22 () (_ BitVec 64))
(declare-fun temp508_23 () (_ BitVec 64))
(declare-fun temp508_24 () (_ BitVec 64))
(declare-fun temp508_25 () (_ BitVec 64))
(declare-fun temp508_26 () (_ BitVec 64))
(declare-fun temp508_27 () (_ BitVec 64))
(declare-fun temp508_28 () (_ BitVec 64))
(declare-fun temp508_29 () (_ BitVec 64))
(declare-fun temp508_30 () (_ BitVec 64))
(declare-fun temp508_31 () (_ BitVec 64))
(declare-fun temp508_32 () (_ BitVec 64))
(declare-fun temp508_33 () (_ BitVec 64))
(declare-fun temp508_34 () (_ BitVec 64))
(declare-fun temp508_35 () (_ BitVec 64))
(declare-fun temp508_36 () (_ BitVec 64))
(declare-fun temp508_37 () (_ BitVec 64))
(declare-fun temp508_38 () (_ BitVec 64))
(declare-fun temp508_39 () (_ BitVec 64))
(declare-fun temp508_40 () (_ BitVec 64))
(declare-fun temp508_41 () (_ BitVec 64))
(declare-fun temp508_42 () (_ BitVec 64))
(declare-fun temp508_43 () (_ BitVec 64))
(declare-fun temp508_44 () (_ BitVec 64))
(declare-fun temp508_45 () (_ BitVec 64))
(declare-fun temp508_46 () (_ BitVec 64))
(declare-fun temp508_47 () (_ BitVec 64))
(declare-fun temp508_48 () (_ BitVec 64))
(declare-fun temp508_49 () (_ BitVec 64))
(declare-fun temp508_50 () (_ BitVec 64))
(declare-fun temp508_51 () (_ BitVec 64))
(declare-fun temp508_52 () (_ BitVec 64))
(declare-fun temp508_53 () (_ BitVec 64))
(declare-fun temp508_54 () (_ BitVec 64))
(declare-fun temp508_55 () (_ BitVec 64))
(declare-fun temp508_56 () (_ BitVec 64))
(declare-fun temp508_57 () (_ BitVec 64))
(declare-fun temp508_58 () (_ BitVec 64))
(declare-fun temp508_59 () (_ BitVec 64))
(declare-fun temp508_60 () (_ BitVec 64))
(declare-fun temp508_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp508_62 () (_ BitVec 64))
(declare-fun temp508_63 () (_ BitVec 64))
(declare-fun temp508_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp508_65 () (_ BitVec 64))
(declare-fun temp508_66 () (_ BitVec 64))
(declare-fun temp508_67 () (_ BitVec 64))
(declare-fun temp508_68 () (_ BitVec 64))
(declare-fun temp508_69 () (_ BitVec 64))
(declare-fun temp508_70 () (_ BitVec 64))
(declare-fun temp508_71 () (_ BitVec 64))
(declare-fun temp508_72 () (_ BitVec 64))
(declare-fun temp508_73 () (_ BitVec 64))
(declare-fun temp508_74 () (_ BitVec 64))
(declare-fun temp508_75 () (_ BitVec 64))
(declare-fun temp508_76 () (_ BitVec 64))
(declare-fun temp508_77 () (_ BitVec 64))
(declare-fun temp508_78 () (_ BitVec 64))
(declare-fun temp508_79 () (_ BitVec 64))
(declare-fun temp508_80 () (_ BitVec 64))
(declare-fun temp508_81 () (_ BitVec 64))
(declare-fun temp508_82 () (_ BitVec 64))
(declare-fun temp508_83 () (_ BitVec 64))
(declare-fun temp508_84 () (_ BitVec 64))
(declare-fun temp508_85 () (_ BitVec 64))
(declare-fun temp508_86 () (_ BitVec 64))
(declare-fun temp508_87 () (_ BitVec 64))
(declare-fun temp508_88 () (_ BitVec 64))
(declare-fun temp508_89 () (_ BitVec 64))
(declare-fun temp508_90 () (_ BitVec 64))
(declare-fun temp508_91 () (_ BitVec 64))
(declare-fun temp508_92 () (_ BitVec 64))
(declare-fun temp508_93 () (_ BitVec 64))
(declare-fun temp508_94 () (_ BitVec 64))
(declare-fun temp508_95 () (_ BitVec 64))
(declare-fun temp508_96 () (_ BitVec 64))
(declare-fun temp508_97 () (_ BitVec 64))
(declare-fun temp508_98 () (_ BitVec 64))
(declare-fun temp508_99 () (_ BitVec 64))
(declare-fun temp508_100 () (_ BitVec 64))
(declare-fun temp508_101 () (_ BitVec 64))
(declare-fun temp508_102 () (_ BitVec 64))
(declare-fun temp508_103 () (_ BitVec 64))
(declare-fun temp508_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp508_105 () (_ BitVec 64))
(declare-fun temp508_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp508_107 () (_ BitVec 64))
(declare-fun temp508_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp508_109 () (_ BitVec 64))
(declare-fun temp508_110 () (_ BitVec 64))
(declare-fun temp508_111 () (_ BitVec 64))
(declare-fun temp508_112 () (_ BitVec 64))
(declare-fun temp508_113 () (_ BitVec 64))
(declare-fun temp508_114 () (_ BitVec 64))
(declare-fun temp508_115 () (_ BitVec 64))
(declare-fun temp508_116 () (_ BitVec 64))
(declare-fun temp508_117 () (_ BitVec 64))
(declare-fun temp508_118 () (_ BitVec 64))
(declare-fun temp508_119 () (_ BitVec 64))
(declare-fun temp508_120 () (_ BitVec 64))
(declare-fun temp508_121 () (_ BitVec 64))
(declare-fun temp508_122 () (_ BitVec 64))
(declare-fun temp508_123 () (_ BitVec 64))
(declare-fun temp508_124 () (_ BitVec 64))
(declare-fun temp508_126 () (_ BitVec 64))
(declare-fun temp508_127 () (_ BitVec 64))
(declare-fun temp508_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp508_128 () (_ BitVec 64))
(declare-fun temp508_129 () (_ BitVec 64))
(declare-fun temp508_131 () (_ BitVec 64))
(declare-fun temp508_132 () (_ BitVec 64))
(declare-fun temp508_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp508_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp508_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp508_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp508_136 () (_ BitVec 64))
(declare-fun temp508_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp508_139 () (_ BitVec 64))
(declare-fun temp508_140 () (_ BitVec 64))
(declare-fun temp508_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp508_141 () (_ BitVec 64))
(declare-fun temp508_143 () (_ BitVec 64))
(declare-fun temp508_144 () (_ BitVec 64))
(declare-fun temp508_142 () (_ BitVec 64))
(declare-fun temp508_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp508_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp508_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp508_148 () (_ BitVec 64))
(declare-fun temp508_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp508_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp508_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var3944848 () (_ BitVec 64))
(declare-fun var4206992 () (_ BitVec 64))
(declare-fun temp508_152 () (_ BitVec 64))
(declare-fun var998846 () (_ BitVec 64))
(declare-fun temp508_153 () (_ BitVec 64))
(declare-fun temp508_154 () (_ BitVec 64))
(declare-fun var4535939 () (_ BitVec 64))
(declare-fun temp508_155 () (_ BitVec 64))
(assert (= temp508_1 #x0000000000000001))
(assert (= var465453 temp508_1))
(assert (= temp508_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp508_2)))
(assert (= temp508_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp508_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp508_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp508_4)))
(assert (= temp508_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp508_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp508_6 #x0000000000000000))
(assert (= var465488 temp508_6))
(assert (= temp508_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp508_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp508_8 #x0000000000000001))
(assert (= var465522 temp508_8))
(assert (= temp508_10 #x0000000000000000))
(assert (= temp508_9 temp508_10))
(assert (= temp508_12 #x0000000000000001))
(assert (= temp508_11 temp508_12))
(assert (= temp508_13 #x0000000000000000))
(assert (= var863614 temp508_13))
(assert (= temp508_14 #x0000000000000001))
(assert (= var863635 temp508_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp508_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp508_15)))
(assert (= temp508_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp508_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp508_17 #x0000000000000000))
(assert (= var997373 temp508_17))
(assert (= temp508_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp508_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp508_19 #x0000000000000000))
(assert (= var997418 temp508_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp508_20 #x0000000000000000))
(assert (= temp508_21 temp508_20))
(assert (= temp508_22 (select ARGNAME_padding_NAMEEND_VAL temp508_21)))
(assert (= temp508_23 #x0000000000000001))
(assert (= temp508_24 temp508_23))
(assert (= temp508_25 (select ARGNAME_padding_NAMEEND_VAL temp508_24)))
(assert (= temp508_26 #x0000000000000002))
(assert (= temp508_27 temp508_26))
(assert (= temp508_28 (select ARGNAME_padding_NAMEEND_VAL temp508_27)))
(assert (= temp508_29 #x0000000000000003))
(assert (= temp508_30 temp508_29))
(assert (= temp508_31 (select ARGNAME_padding_NAMEEND_VAL temp508_30)))
(assert (= temp508_32 #x0000000000000004))
(assert (= temp508_33 temp508_32))
(assert (= temp508_34 (select ARGNAME_padding_NAMEEND_VAL temp508_33)))
(assert (= temp508_35 #x0000000000000005))
(assert (= temp508_36 temp508_35))
(assert (= temp508_37 (select ARGNAME_padding_NAMEEND_VAL temp508_36)))
(assert (= temp508_38 #x0000000000000000))
(assert (= temp508_39 #x0000000000000000))
(assert (= temp508_40 temp508_39))
(assert (= temp508_41 (select ARGNAME_padding_NAMEEND_VAL temp508_40)))
(assert (= temp508_42 #x0000000000000000))
(assert (= temp508_43 #x0000000000000001))
(assert (= temp508_44 temp508_43))
(assert (= temp508_45 (select ARGNAME_padding_NAMEEND_VAL temp508_44)))
(assert (= temp508_46 #x0000000000000000))
(assert (= temp508_47 #x0000000000000002))
(assert (= temp508_48 temp508_47))
(assert (= temp508_49 (select ARGNAME_padding_NAMEEND_VAL temp508_48)))
(assert (= temp508_50 #x0000000000000000))
(assert (= temp508_51 #x0000000000000003))
(assert (= temp508_52 temp508_51))
(assert (= temp508_53 (select ARGNAME_padding_NAMEEND_VAL temp508_52)))
(assert (= temp508_54 #x0000000000000000))
(assert (= temp508_55 #x0000000000000004))
(assert (= temp508_56 temp508_55))
(assert (= temp508_57 (select ARGNAME_padding_NAMEEND_VAL temp508_56)))
(assert (= temp508_58 #x0000000000000000))
(assert (= temp508_59 #x0000000000000005))
(assert (= temp508_60 temp508_59))
(assert (= temp508_61 (select ARGNAME_padding_NAMEEND_VAL temp508_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp508_41 temp508_38)
             (bvslt temp508_45 temp508_42)
             (bvslt temp508_49 temp508_46)
             (bvslt temp508_53 temp508_50)
             (bvslt temp508_57 temp508_54)
             (bvslt temp508_61 temp508_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp508_62 #x0000000000000000))
(assert (= var1716002 temp508_62))
(assert (= temp508_63 #x0000000000000000))
(assert (= temp508_64 temp508_63))
(assert (= temp508_65 (select ARGNAME_stride_NAMEEND_VAL temp508_64)))
(assert (= temp508_66 #x0000000000000001))
(assert (= temp508_67 temp508_66))
(assert (= temp508_68 (select ARGNAME_stride_NAMEEND_VAL temp508_67)))
(assert (= temp508_69 #x0000000000000002))
(assert (= temp508_70 temp508_69))
(assert (= temp508_71 (select ARGNAME_stride_NAMEEND_VAL temp508_70)))
(assert (= temp508_72 #x0000000000000003))
(assert (= temp508_73 temp508_72))
(assert (= temp508_74 (select ARGNAME_stride_NAMEEND_VAL temp508_73)))
(assert (= temp508_75 #x0000000000000004))
(assert (= temp508_76 temp508_75))
(assert (= temp508_77 (select ARGNAME_stride_NAMEEND_VAL temp508_76)))
(assert (= temp508_78 #x0000000000000005))
(assert (= temp508_79 temp508_78))
(assert (= temp508_80 (select ARGNAME_stride_NAMEEND_VAL temp508_79)))
(assert (= temp508_81 #x0000000000000000))
(assert (= temp508_82 #x0000000000000000))
(assert (= temp508_83 temp508_82))
(assert (= temp508_84 (select ARGNAME_stride_NAMEEND_VAL temp508_83)))
(assert (= temp508_85 #x0000000000000000))
(assert (= temp508_86 #x0000000000000001))
(assert (= temp508_87 temp508_86))
(assert (= temp508_88 (select ARGNAME_stride_NAMEEND_VAL temp508_87)))
(assert (= temp508_89 #x0000000000000000))
(assert (= temp508_90 #x0000000000000002))
(assert (= temp508_91 temp508_90))
(assert (= temp508_92 (select ARGNAME_stride_NAMEEND_VAL temp508_91)))
(assert (= temp508_93 #x0000000000000000))
(assert (= temp508_94 #x0000000000000003))
(assert (= temp508_95 temp508_94))
(assert (= temp508_96 (select ARGNAME_stride_NAMEEND_VAL temp508_95)))
(assert (= temp508_97 #x0000000000000000))
(assert (= temp508_98 #x0000000000000004))
(assert (= temp508_99 temp508_98))
(assert (= temp508_100 (select ARGNAME_stride_NAMEEND_VAL temp508_99)))
(assert (= temp508_101 #x0000000000000000))
(assert (= temp508_102 #x0000000000000005))
(assert (= temp508_103 temp508_102))
(assert (= temp508_104 (select ARGNAME_stride_NAMEEND_VAL temp508_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp508_84 temp508_81)
             (bvsle temp508_88 temp508_85)
             (bvsle temp508_92 temp508_89)
             (bvsle temp508_96 temp508_93)
             (bvsle temp508_100 temp508_97)
             (bvsle temp508_104 temp508_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp508_105 #x0000000000000000))
(assert (= var1716023 temp508_105))
(assert (= temp508_106 #x0000000000000000))
(assert (= var1704114 temp508_106))
(assert (= temp508_107 #x0000000000000000))
(assert (= temp508_108 temp508_107))
(assert (= temp508_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp508_108)))
(assert (= temp508_110 #x0000000000000001))
(assert (= temp508_111 temp508_110))
(assert (= temp508_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp508_111)))
(assert (= temp508_113 #x0000000000000002))
(assert (= temp508_114 temp508_113))
(assert (= temp508_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp508_114)))
(assert (= temp508_116 #x0000000000000003))
(assert (= temp508_117 temp508_116))
(assert (= temp508_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp508_117)))
(assert (= temp508_119 #x0000000000000004))
(assert (= temp508_120 temp508_119))
(assert (= temp508_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp508_120)))
(assert (= temp508_122 #x0000000000000005))
(assert (= temp508_123 temp508_122))
(assert (= temp508_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp508_123)))
(assert (= temp508_126 var1704114))
(assert (= temp508_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp508_126)))
(assert (= temp508_125 temp508_127))
(assert (= var1716068
   (ite (bvslt temp508_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp508_128 #x0000000000000000))
(assert (= var1716068 temp508_128))
(assert (= temp508_129 #x0000000000000000))
(assert (= var1704114 temp508_129))
(assert (= temp508_131 var1704114))
(assert (= temp508_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp508_131)))
(assert (= temp508_130 temp508_132))
(assert (= var1716090 (bvsmod temp508_130 ARGNAME_groups_NAMEEND)))
(assert (= temp508_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp508_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp508_134 #x0000000000000001))
(assert (= var1716091 temp508_134))
(assert (= var1716110 var1716000))
(assert (= temp508_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp508_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp508_136 #x0000000000000001))
(assert (= var1716111 temp508_136))
(assert (= temp508_137 #x0000000000000001))
(assert (= var1705002 temp508_137))
(assert (= temp508_139 var1705002))
(assert (= temp508_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp508_139)))
(assert (= temp508_138 temp508_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp508_138)))
(assert (= temp508_141 #x0000000000000000))
(assert (= var1704114 temp508_141))
(assert (= temp508_143 var1704114))
(assert (= temp508_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp508_143)))
(assert (= temp508_142 temp508_144))
(assert (= temp508_145 #x0000000000000002))
(assert (= var1979241 temp508_145))
(assert (= temp508_146 #x0000000000000001))
(assert (= var1716281 temp508_146))
(assert (= temp508_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp508_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp508_148 #x0000000000000001))
(assert (= var997490 temp508_148))
(assert (= temp508_149 #x0000000000000001))
(assert (= var997620 temp508_149))
(assert (= var3486185 var997620))
(assert (= temp508_150 #x0000000000000000))
(assert (= var3686207 temp508_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp508_151 #x0000000000000002))
(assert (= var3815043 temp508_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var3944848 var997633))
(assert (= var4206992 var997633))
(assert (= temp508_152 #x0000000000000001))
(assert (= var998846
   (ite (= ARGNAME_groups_NAMEEND temp508_152)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp508_153 #x0000000000000000))
(assert (= var998846 temp508_153))
(assert (= temp508_154 #x0000000000000002))
(assert (= var4535939 temp508_154))
(assert (= temp508_155 #x0000000000000001))
(assert (= var997490 temp508_155))
(model-add temp508_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp508_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp508_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp508_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp508_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp508_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)





