(declare-fun temp122_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp122_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp122_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp122_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp122_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp122_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp122_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp122_8 () (_ BitVec 64))
(declare-fun temp122_10 () (_ BitVec 64))
(declare-fun temp122_9 () (_ BitVec 64))
(declare-fun temp122_12 () (_ BitVec 64))
(declare-fun temp122_11 () (_ BitVec 64))
(declare-fun temp122_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp122_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp122_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp122_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp122_17 () (_ BitVec 64))
(declare-fun temp122_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp122_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp122_20 () (_ BitVec 64))
(declare-fun temp122_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp122_22 () (_ BitVec 64))
(declare-fun temp122_23 () (_ BitVec 64))
(declare-fun temp122_24 () (_ BitVec 64))
(declare-fun temp122_25 () (_ BitVec 64))
(declare-fun temp122_26 () (_ BitVec 64))
(declare-fun temp122_27 () (_ BitVec 64))
(declare-fun temp122_28 () (_ BitVec 64))
(declare-fun temp122_29 () (_ BitVec 64))
(declare-fun temp122_30 () (_ BitVec 64))
(declare-fun temp122_31 () (_ BitVec 64))
(declare-fun temp122_32 () (_ BitVec 64))
(declare-fun temp122_33 () (_ BitVec 64))
(declare-fun temp122_34 () (_ BitVec 64))
(declare-fun temp122_35 () (_ BitVec 64))
(declare-fun temp122_36 () (_ BitVec 64))
(declare-fun temp122_37 () (_ BitVec 64))
(declare-fun temp122_38 () (_ BitVec 64))
(declare-fun temp122_39 () (_ BitVec 64))
(declare-fun temp122_40 () (_ BitVec 64))
(declare-fun temp122_41 () (_ BitVec 64))
(declare-fun temp122_42 () (_ BitVec 64))
(declare-fun temp122_43 () (_ BitVec 64))
(declare-fun temp122_44 () (_ BitVec 64))
(declare-fun temp122_45 () (_ BitVec 64))
(declare-fun temp122_46 () (_ BitVec 64))
(declare-fun temp122_47 () (_ BitVec 64))
(declare-fun temp122_48 () (_ BitVec 64))
(declare-fun temp122_49 () (_ BitVec 64))
(declare-fun temp122_50 () (_ BitVec 64))
(declare-fun temp122_51 () (_ BitVec 64))
(declare-fun temp122_52 () (_ BitVec 64))
(declare-fun temp122_53 () (_ BitVec 64))
(declare-fun temp122_54 () (_ BitVec 64))
(declare-fun temp122_55 () (_ BitVec 64))
(declare-fun temp122_56 () (_ BitVec 64))
(declare-fun temp122_57 () (_ BitVec 64))
(declare-fun temp122_58 () (_ BitVec 64))
(declare-fun temp122_59 () (_ BitVec 64))
(declare-fun temp122_60 () (_ BitVec 64))
(declare-fun temp122_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp122_62 () (_ BitVec 64))
(declare-fun temp122_63 () (_ BitVec 64))
(declare-fun temp122_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp122_65 () (_ BitVec 64))
(declare-fun temp122_66 () (_ BitVec 64))
(declare-fun temp122_67 () (_ BitVec 64))
(declare-fun temp122_68 () (_ BitVec 64))
(declare-fun temp122_69 () (_ BitVec 64))
(declare-fun temp122_70 () (_ BitVec 64))
(declare-fun temp122_71 () (_ BitVec 64))
(declare-fun temp122_72 () (_ BitVec 64))
(declare-fun temp122_73 () (_ BitVec 64))
(declare-fun temp122_74 () (_ BitVec 64))
(declare-fun temp122_75 () (_ BitVec 64))
(declare-fun temp122_76 () (_ BitVec 64))
(declare-fun temp122_77 () (_ BitVec 64))
(declare-fun temp122_78 () (_ BitVec 64))
(declare-fun temp122_79 () (_ BitVec 64))
(declare-fun temp122_80 () (_ BitVec 64))
(declare-fun temp122_81 () (_ BitVec 64))
(declare-fun temp122_82 () (_ BitVec 64))
(declare-fun temp122_83 () (_ BitVec 64))
(declare-fun temp122_84 () (_ BitVec 64))
(declare-fun temp122_85 () (_ BitVec 64))
(declare-fun temp122_86 () (_ BitVec 64))
(declare-fun temp122_87 () (_ BitVec 64))
(declare-fun temp122_88 () (_ BitVec 64))
(declare-fun temp122_89 () (_ BitVec 64))
(declare-fun temp122_90 () (_ BitVec 64))
(declare-fun temp122_91 () (_ BitVec 64))
(declare-fun temp122_92 () (_ BitVec 64))
(declare-fun temp122_93 () (_ BitVec 64))
(declare-fun temp122_94 () (_ BitVec 64))
(declare-fun temp122_95 () (_ BitVec 64))
(declare-fun temp122_96 () (_ BitVec 64))
(declare-fun temp122_97 () (_ BitVec 64))
(declare-fun temp122_98 () (_ BitVec 64))
(declare-fun temp122_99 () (_ BitVec 64))
(declare-fun temp122_100 () (_ BitVec 64))
(declare-fun temp122_101 () (_ BitVec 64))
(declare-fun temp122_102 () (_ BitVec 64))
(declare-fun temp122_103 () (_ BitVec 64))
(declare-fun temp122_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp122_105 () (_ BitVec 64))
(declare-fun temp122_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp122_107 () (_ BitVec 64))
(declare-fun temp122_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp122_109 () (_ BitVec 64))
(declare-fun temp122_110 () (_ BitVec 64))
(declare-fun temp122_111 () (_ BitVec 64))
(declare-fun temp122_112 () (_ BitVec 64))
(declare-fun temp122_113 () (_ BitVec 64))
(declare-fun temp122_114 () (_ BitVec 64))
(declare-fun temp122_115 () (_ BitVec 64))
(declare-fun temp122_116 () (_ BitVec 64))
(declare-fun temp122_117 () (_ BitVec 64))
(declare-fun temp122_118 () (_ BitVec 64))
(declare-fun temp122_119 () (_ BitVec 64))
(declare-fun temp122_120 () (_ BitVec 64))
(declare-fun temp122_121 () (_ BitVec 64))
(declare-fun temp122_122 () (_ BitVec 64))
(declare-fun temp122_123 () (_ BitVec 64))
(declare-fun temp122_124 () (_ BitVec 64))
(declare-fun temp122_126 () (_ BitVec 64))
(declare-fun temp122_127 () (_ BitVec 64))
(declare-fun temp122_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp122_128 () (_ BitVec 64))
(declare-fun temp122_129 () (_ BitVec 64))
(declare-fun temp122_131 () (_ BitVec 64))
(declare-fun temp122_132 () (_ BitVec 64))
(declare-fun temp122_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp122_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp122_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp122_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp122_136 () (_ BitVec 64))
(declare-fun temp122_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp122_139 () (_ BitVec 64))
(declare-fun temp122_140 () (_ BitVec 64))
(declare-fun temp122_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp122_141 () (_ BitVec 64))
(declare-fun temp122_143 () (_ BitVec 64))
(declare-fun temp122_144 () (_ BitVec 64))
(declare-fun temp122_142 () (_ BitVec 64))
(declare-fun temp122_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp122_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp122_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp122_148 () (_ BitVec 64))
(declare-fun temp122_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp122_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp122_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp122_153 () (_ BitVec 64))
(declare-fun temp122_152 () (_ BitVec 64))
(declare-fun temp122_155 () (_ BitVec 64))
(declare-fun temp122_154 () (_ BitVec 64))
(declare-fun temp122_156 () (_ BitVec 64))
(assert (= temp122_1 #x0000000000000001))
(assert (= var465453 temp122_1))
(assert (= temp122_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp122_2)))
(assert (= temp122_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp122_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp122_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp122_4)))
(assert (= temp122_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp122_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp122_6 #x0000000000000000))
(assert (= var465488 temp122_6))
(assert (= temp122_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp122_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp122_8 #x0000000000000001))
(assert (= var465522 temp122_8))
(assert (= temp122_10 #x0000000000000000))
(assert (= temp122_9 temp122_10))
(assert (= temp122_12 #x0000000000000001))
(assert (= temp122_11 temp122_12))
(assert (= temp122_13 #x0000000000000000))
(assert (= var863614 temp122_13))
(assert (= temp122_14 #x0000000000000001))
(assert (= var863635 temp122_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp122_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp122_15)))
(assert (= temp122_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp122_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp122_17 #x0000000000000000))
(assert (= var997373 temp122_17))
(assert (= temp122_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp122_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp122_19 #x0000000000000000))
(assert (= var997418 temp122_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp122_20 #x0000000000000000))
(assert (= temp122_21 temp122_20))
(assert (= temp122_22 (select ARGNAME_padding_NAMEEND_VAL temp122_21)))
(assert (= temp122_23 #x0000000000000001))
(assert (= temp122_24 temp122_23))
(assert (= temp122_25 (select ARGNAME_padding_NAMEEND_VAL temp122_24)))
(assert (= temp122_26 #x0000000000000002))
(assert (= temp122_27 temp122_26))
(assert (= temp122_28 (select ARGNAME_padding_NAMEEND_VAL temp122_27)))
(assert (= temp122_29 #x0000000000000003))
(assert (= temp122_30 temp122_29))
(assert (= temp122_31 (select ARGNAME_padding_NAMEEND_VAL temp122_30)))
(assert (= temp122_32 #x0000000000000004))
(assert (= temp122_33 temp122_32))
(assert (= temp122_34 (select ARGNAME_padding_NAMEEND_VAL temp122_33)))
(assert (= temp122_35 #x0000000000000005))
(assert (= temp122_36 temp122_35))
(assert (= temp122_37 (select ARGNAME_padding_NAMEEND_VAL temp122_36)))
(assert (= temp122_38 #x0000000000000000))
(assert (= temp122_39 #x0000000000000000))
(assert (= temp122_40 temp122_39))
(assert (= temp122_41 (select ARGNAME_padding_NAMEEND_VAL temp122_40)))
(assert (= temp122_42 #x0000000000000000))
(assert (= temp122_43 #x0000000000000001))
(assert (= temp122_44 temp122_43))
(assert (= temp122_45 (select ARGNAME_padding_NAMEEND_VAL temp122_44)))
(assert (= temp122_46 #x0000000000000000))
(assert (= temp122_47 #x0000000000000002))
(assert (= temp122_48 temp122_47))
(assert (= temp122_49 (select ARGNAME_padding_NAMEEND_VAL temp122_48)))
(assert (= temp122_50 #x0000000000000000))
(assert (= temp122_51 #x0000000000000003))
(assert (= temp122_52 temp122_51))
(assert (= temp122_53 (select ARGNAME_padding_NAMEEND_VAL temp122_52)))
(assert (= temp122_54 #x0000000000000000))
(assert (= temp122_55 #x0000000000000004))
(assert (= temp122_56 temp122_55))
(assert (= temp122_57 (select ARGNAME_padding_NAMEEND_VAL temp122_56)))
(assert (= temp122_58 #x0000000000000000))
(assert (= temp122_59 #x0000000000000005))
(assert (= temp122_60 temp122_59))
(assert (= temp122_61 (select ARGNAME_padding_NAMEEND_VAL temp122_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp122_41 temp122_38)
             (bvslt temp122_45 temp122_42)
             (bvslt temp122_49 temp122_46)
             (bvslt temp122_53 temp122_50)
             (bvslt temp122_57 temp122_54)
             (bvslt temp122_61 temp122_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp122_62 #x0000000000000000))
(assert (= var1716002 temp122_62))
(assert (= temp122_63 #x0000000000000000))
(assert (= temp122_64 temp122_63))
(assert (= temp122_65 (select ARGNAME_stride_NAMEEND_VAL temp122_64)))
(assert (= temp122_66 #x0000000000000001))
(assert (= temp122_67 temp122_66))
(assert (= temp122_68 (select ARGNAME_stride_NAMEEND_VAL temp122_67)))
(assert (= temp122_69 #x0000000000000002))
(assert (= temp122_70 temp122_69))
(assert (= temp122_71 (select ARGNAME_stride_NAMEEND_VAL temp122_70)))
(assert (= temp122_72 #x0000000000000003))
(assert (= temp122_73 temp122_72))
(assert (= temp122_74 (select ARGNAME_stride_NAMEEND_VAL temp122_73)))
(assert (= temp122_75 #x0000000000000004))
(assert (= temp122_76 temp122_75))
(assert (= temp122_77 (select ARGNAME_stride_NAMEEND_VAL temp122_76)))
(assert (= temp122_78 #x0000000000000005))
(assert (= temp122_79 temp122_78))
(assert (= temp122_80 (select ARGNAME_stride_NAMEEND_VAL temp122_79)))
(assert (= temp122_81 #x0000000000000000))
(assert (= temp122_82 #x0000000000000000))
(assert (= temp122_83 temp122_82))
(assert (= temp122_84 (select ARGNAME_stride_NAMEEND_VAL temp122_83)))
(assert (= temp122_85 #x0000000000000000))
(assert (= temp122_86 #x0000000000000001))
(assert (= temp122_87 temp122_86))
(assert (= temp122_88 (select ARGNAME_stride_NAMEEND_VAL temp122_87)))
(assert (= temp122_89 #x0000000000000000))
(assert (= temp122_90 #x0000000000000002))
(assert (= temp122_91 temp122_90))
(assert (= temp122_92 (select ARGNAME_stride_NAMEEND_VAL temp122_91)))
(assert (= temp122_93 #x0000000000000000))
(assert (= temp122_94 #x0000000000000003))
(assert (= temp122_95 temp122_94))
(assert (= temp122_96 (select ARGNAME_stride_NAMEEND_VAL temp122_95)))
(assert (= temp122_97 #x0000000000000000))
(assert (= temp122_98 #x0000000000000004))
(assert (= temp122_99 temp122_98))
(assert (= temp122_100 (select ARGNAME_stride_NAMEEND_VAL temp122_99)))
(assert (= temp122_101 #x0000000000000000))
(assert (= temp122_102 #x0000000000000005))
(assert (= temp122_103 temp122_102))
(assert (= temp122_104 (select ARGNAME_stride_NAMEEND_VAL temp122_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp122_84 temp122_81)
             (bvsle temp122_88 temp122_85)
             (bvsle temp122_92 temp122_89)
             (bvsle temp122_96 temp122_93)
             (bvsle temp122_100 temp122_97)
             (bvsle temp122_104 temp122_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp122_105 #x0000000000000000))
(assert (= var1716023 temp122_105))
(assert (= temp122_106 #x0000000000000000))
(assert (= var1704114 temp122_106))
(assert (= temp122_107 #x0000000000000000))
(assert (= temp122_108 temp122_107))
(assert (= temp122_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp122_108)))
(assert (= temp122_110 #x0000000000000001))
(assert (= temp122_111 temp122_110))
(assert (= temp122_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp122_111)))
(assert (= temp122_113 #x0000000000000002))
(assert (= temp122_114 temp122_113))
(assert (= temp122_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp122_114)))
(assert (= temp122_116 #x0000000000000003))
(assert (= temp122_117 temp122_116))
(assert (= temp122_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp122_117)))
(assert (= temp122_119 #x0000000000000004))
(assert (= temp122_120 temp122_119))
(assert (= temp122_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp122_120)))
(assert (= temp122_122 #x0000000000000005))
(assert (= temp122_123 temp122_122))
(assert (= temp122_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp122_123)))
(assert (= temp122_126 var1704114))
(assert (= temp122_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp122_126)))
(assert (= temp122_125 temp122_127))
(assert (= var1716068
   (ite (bvslt temp122_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp122_128 #x0000000000000000))
(assert (= var1716068 temp122_128))
(assert (= temp122_129 #x0000000000000000))
(assert (= var1704114 temp122_129))
(assert (= temp122_131 var1704114))
(assert (= temp122_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp122_131)))
(assert (= temp122_130 temp122_132))
(assert (= var1716090 (bvsmod temp122_130 ARGNAME_groups_NAMEEND)))
(assert (= temp122_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp122_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp122_134 #x0000000000000001))
(assert (= var1716091 temp122_134))
(assert (= var1716110 var1716000))
(assert (= temp122_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp122_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp122_136 #x0000000000000001))
(assert (= var1716111 temp122_136))
(assert (= temp122_137 #x0000000000000001))
(assert (= var1705002 temp122_137))
(assert (= temp122_139 var1705002))
(assert (= temp122_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp122_139)))
(assert (= temp122_138 temp122_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp122_138)))
(assert (= temp122_141 #x0000000000000000))
(assert (= var1704114 temp122_141))
(assert (= temp122_143 var1704114))
(assert (= temp122_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp122_143)))
(assert (= temp122_142 temp122_144))
(assert (= temp122_145 #x0000000000000002))
(assert (= var1979241 temp122_145))
(assert (= temp122_146 #x0000000000000001))
(assert (= var1716281 temp122_146))
(assert (= temp122_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp122_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp122_148 #x0000000000000001))
(assert (= var997490 temp122_148))
(assert (= temp122_149 #x0000000000000001))
(assert (= var997620 temp122_149))
(assert (= var3486185 var997620))
(assert (= temp122_150 #x0000000000000000))
(assert (= var3686207 temp122_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp122_151 #x0000000000000002))
(assert (= var3815043 temp122_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp122_153 #xffffffffffffffff))
(assert (= temp122_152 temp122_153))
(assert (= temp122_155 #xffffffffffffffff))
(assert (= temp122_154 temp122_155))
(assert (= temp122_156 #x0000000000000001))
(assert (= var997490 temp122_156))
(model-add temp122_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp122_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp122_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp122_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp122_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp122_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






