(declare-fun temp468_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp468_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp468_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp468_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp468_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp468_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp468_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp468_8 () (_ BitVec 64))
(declare-fun temp468_10 () (_ BitVec 64))
(declare-fun temp468_9 () (_ BitVec 64))
(declare-fun temp468_12 () (_ BitVec 64))
(declare-fun temp468_11 () (_ BitVec 64))
(declare-fun temp468_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp468_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp468_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp468_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp468_17 () (_ BitVec 64))
(declare-fun temp468_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp468_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp468_20 () (_ BitVec 64))
(declare-fun temp468_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp468_22 () (_ BitVec 64))
(declare-fun temp468_23 () (_ BitVec 64))
(declare-fun temp468_24 () (_ BitVec 64))
(declare-fun temp468_25 () (_ BitVec 64))
(declare-fun temp468_26 () (_ BitVec 64))
(declare-fun temp468_27 () (_ BitVec 64))
(declare-fun temp468_28 () (_ BitVec 64))
(declare-fun temp468_29 () (_ BitVec 64))
(declare-fun temp468_30 () (_ BitVec 64))
(declare-fun temp468_31 () (_ BitVec 64))
(declare-fun temp468_32 () (_ BitVec 64))
(declare-fun temp468_33 () (_ BitVec 64))
(declare-fun temp468_34 () (_ BitVec 64))
(declare-fun temp468_35 () (_ BitVec 64))
(declare-fun temp468_36 () (_ BitVec 64))
(declare-fun temp468_37 () (_ BitVec 64))
(declare-fun temp468_38 () (_ BitVec 64))
(declare-fun temp468_39 () (_ BitVec 64))
(declare-fun temp468_40 () (_ BitVec 64))
(declare-fun temp468_41 () (_ BitVec 64))
(declare-fun temp468_42 () (_ BitVec 64))
(declare-fun temp468_43 () (_ BitVec 64))
(declare-fun temp468_44 () (_ BitVec 64))
(declare-fun temp468_45 () (_ BitVec 64))
(declare-fun temp468_46 () (_ BitVec 64))
(declare-fun temp468_47 () (_ BitVec 64))
(declare-fun temp468_48 () (_ BitVec 64))
(declare-fun temp468_49 () (_ BitVec 64))
(declare-fun temp468_50 () (_ BitVec 64))
(declare-fun temp468_51 () (_ BitVec 64))
(declare-fun temp468_52 () (_ BitVec 64))
(declare-fun temp468_53 () (_ BitVec 64))
(declare-fun temp468_54 () (_ BitVec 64))
(declare-fun temp468_55 () (_ BitVec 64))
(declare-fun temp468_56 () (_ BitVec 64))
(declare-fun temp468_57 () (_ BitVec 64))
(declare-fun temp468_58 () (_ BitVec 64))
(declare-fun temp468_59 () (_ BitVec 64))
(declare-fun temp468_60 () (_ BitVec 64))
(declare-fun temp468_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp468_62 () (_ BitVec 64))
(declare-fun temp468_63 () (_ BitVec 64))
(declare-fun temp468_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp468_65 () (_ BitVec 64))
(declare-fun temp468_66 () (_ BitVec 64))
(declare-fun temp468_67 () (_ BitVec 64))
(declare-fun temp468_68 () (_ BitVec 64))
(declare-fun temp468_69 () (_ BitVec 64))
(declare-fun temp468_70 () (_ BitVec 64))
(declare-fun temp468_71 () (_ BitVec 64))
(declare-fun temp468_72 () (_ BitVec 64))
(declare-fun temp468_73 () (_ BitVec 64))
(declare-fun temp468_74 () (_ BitVec 64))
(declare-fun temp468_75 () (_ BitVec 64))
(declare-fun temp468_76 () (_ BitVec 64))
(declare-fun temp468_77 () (_ BitVec 64))
(declare-fun temp468_78 () (_ BitVec 64))
(declare-fun temp468_79 () (_ BitVec 64))
(declare-fun temp468_80 () (_ BitVec 64))
(declare-fun temp468_81 () (_ BitVec 64))
(declare-fun temp468_82 () (_ BitVec 64))
(declare-fun temp468_83 () (_ BitVec 64))
(declare-fun temp468_84 () (_ BitVec 64))
(declare-fun temp468_85 () (_ BitVec 64))
(declare-fun temp468_86 () (_ BitVec 64))
(declare-fun temp468_87 () (_ BitVec 64))
(declare-fun temp468_88 () (_ BitVec 64))
(declare-fun temp468_89 () (_ BitVec 64))
(declare-fun temp468_90 () (_ BitVec 64))
(declare-fun temp468_91 () (_ BitVec 64))
(declare-fun temp468_92 () (_ BitVec 64))
(declare-fun temp468_93 () (_ BitVec 64))
(declare-fun temp468_94 () (_ BitVec 64))
(declare-fun temp468_95 () (_ BitVec 64))
(declare-fun temp468_96 () (_ BitVec 64))
(declare-fun temp468_97 () (_ BitVec 64))
(declare-fun temp468_98 () (_ BitVec 64))
(declare-fun temp468_99 () (_ BitVec 64))
(declare-fun temp468_100 () (_ BitVec 64))
(declare-fun temp468_101 () (_ BitVec 64))
(declare-fun temp468_102 () (_ BitVec 64))
(declare-fun temp468_103 () (_ BitVec 64))
(declare-fun temp468_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp468_105 () (_ BitVec 64))
(declare-fun temp468_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp468_107 () (_ BitVec 64))
(declare-fun temp468_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp468_109 () (_ BitVec 64))
(declare-fun temp468_110 () (_ BitVec 64))
(declare-fun temp468_111 () (_ BitVec 64))
(declare-fun temp468_112 () (_ BitVec 64))
(declare-fun temp468_113 () (_ BitVec 64))
(declare-fun temp468_114 () (_ BitVec 64))
(declare-fun temp468_115 () (_ BitVec 64))
(declare-fun temp468_116 () (_ BitVec 64))
(declare-fun temp468_117 () (_ BitVec 64))
(declare-fun temp468_118 () (_ BitVec 64))
(declare-fun temp468_119 () (_ BitVec 64))
(declare-fun temp468_120 () (_ BitVec 64))
(declare-fun temp468_121 () (_ BitVec 64))
(declare-fun temp468_122 () (_ BitVec 64))
(declare-fun temp468_123 () (_ BitVec 64))
(declare-fun temp468_124 () (_ BitVec 64))
(declare-fun temp468_126 () (_ BitVec 64))
(declare-fun temp468_127 () (_ BitVec 64))
(declare-fun temp468_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp468_128 () (_ BitVec 64))
(declare-fun temp468_129 () (_ BitVec 64))
(declare-fun temp468_131 () (_ BitVec 64))
(declare-fun temp468_132 () (_ BitVec 64))
(declare-fun temp468_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp468_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp468_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp468_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp468_136 () (_ BitVec 64))
(declare-fun temp468_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp468_139 () (_ BitVec 64))
(declare-fun temp468_140 () (_ BitVec 64))
(declare-fun temp468_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp468_141 () (_ BitVec 64))
(declare-fun temp468_143 () (_ BitVec 64))
(declare-fun temp468_144 () (_ BitVec 64))
(declare-fun temp468_142 () (_ BitVec 64))
(declare-fun temp468_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp468_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp468_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp468_148 () (_ BitVec 64))
(declare-fun temp468_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp468_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp468_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var3944848 () (_ BitVec 64))
(declare-fun var4206992 () (_ BitVec 64))
(declare-fun temp468_152 () (_ BitVec 64))
(declare-fun var998846 () (_ BitVec 64))
(declare-fun temp468_153 () (_ BitVec 64))
(declare-fun temp468_154 () (_ BitVec 64))
(declare-fun var4535939 () (_ BitVec 64))
(declare-fun temp468_155 () (_ BitVec 64))
(assert (= temp468_1 #x0000000000000001))
(assert (= var465453 temp468_1))
(assert (= temp468_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp468_2)))
(assert (= temp468_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp468_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp468_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp468_4)))
(assert (= temp468_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp468_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp468_6 #x0000000000000000))
(assert (= var465488 temp468_6))
(assert (= temp468_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp468_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp468_8 #x0000000000000001))
(assert (= var465522 temp468_8))
(assert (= temp468_10 #x0000000000000000))
(assert (= temp468_9 temp468_10))
(assert (= temp468_12 #x0000000000000001))
(assert (= temp468_11 temp468_12))
(assert (= temp468_13 #x0000000000000000))
(assert (= var863614 temp468_13))
(assert (= temp468_14 #x0000000000000001))
(assert (= var863635 temp468_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp468_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp468_15)))
(assert (= temp468_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp468_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_17 #x0000000000000000))
(assert (= var997373 temp468_17))
(assert (= temp468_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp468_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_19 #x0000000000000000))
(assert (= var997418 temp468_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp468_20 #x0000000000000000))
(assert (= temp468_21 temp468_20))
(assert (= temp468_22 (select ARGNAME_padding_NAMEEND_VAL temp468_21)))
(assert (= temp468_23 #x0000000000000001))
(assert (= temp468_24 temp468_23))
(assert (= temp468_25 (select ARGNAME_padding_NAMEEND_VAL temp468_24)))
(assert (= temp468_26 #x0000000000000002))
(assert (= temp468_27 temp468_26))
(assert (= temp468_28 (select ARGNAME_padding_NAMEEND_VAL temp468_27)))
(assert (= temp468_29 #x0000000000000003))
(assert (= temp468_30 temp468_29))
(assert (= temp468_31 (select ARGNAME_padding_NAMEEND_VAL temp468_30)))
(assert (= temp468_32 #x0000000000000004))
(assert (= temp468_33 temp468_32))
(assert (= temp468_34 (select ARGNAME_padding_NAMEEND_VAL temp468_33)))
(assert (= temp468_35 #x0000000000000005))
(assert (= temp468_36 temp468_35))
(assert (= temp468_37 (select ARGNAME_padding_NAMEEND_VAL temp468_36)))
(assert (= temp468_38 #x0000000000000000))
(assert (= temp468_39 #x0000000000000000))
(assert (= temp468_40 temp468_39))
(assert (= temp468_41 (select ARGNAME_padding_NAMEEND_VAL temp468_40)))
(assert (= temp468_42 #x0000000000000000))
(assert (= temp468_43 #x0000000000000001))
(assert (= temp468_44 temp468_43))
(assert (= temp468_45 (select ARGNAME_padding_NAMEEND_VAL temp468_44)))
(assert (= temp468_46 #x0000000000000000))
(assert (= temp468_47 #x0000000000000002))
(assert (= temp468_48 temp468_47))
(assert (= temp468_49 (select ARGNAME_padding_NAMEEND_VAL temp468_48)))
(assert (= temp468_50 #x0000000000000000))
(assert (= temp468_51 #x0000000000000003))
(assert (= temp468_52 temp468_51))
(assert (= temp468_53 (select ARGNAME_padding_NAMEEND_VAL temp468_52)))
(assert (= temp468_54 #x0000000000000000))
(assert (= temp468_55 #x0000000000000004))
(assert (= temp468_56 temp468_55))
(assert (= temp468_57 (select ARGNAME_padding_NAMEEND_VAL temp468_56)))
(assert (= temp468_58 #x0000000000000000))
(assert (= temp468_59 #x0000000000000005))
(assert (= temp468_60 temp468_59))
(assert (= temp468_61 (select ARGNAME_padding_NAMEEND_VAL temp468_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp468_41 temp468_38)
             (bvslt temp468_45 temp468_42)
             (bvslt temp468_49 temp468_46)
             (bvslt temp468_53 temp468_50)
             (bvslt temp468_57 temp468_54)
             (bvslt temp468_61 temp468_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_62 #x0000000000000000))
(assert (= var1716002 temp468_62))
(assert (= temp468_63 #x0000000000000000))
(assert (= temp468_64 temp468_63))
(assert (= temp468_65 (select ARGNAME_stride_NAMEEND_VAL temp468_64)))
(assert (= temp468_66 #x0000000000000001))
(assert (= temp468_67 temp468_66))
(assert (= temp468_68 (select ARGNAME_stride_NAMEEND_VAL temp468_67)))
(assert (= temp468_69 #x0000000000000002))
(assert (= temp468_70 temp468_69))
(assert (= temp468_71 (select ARGNAME_stride_NAMEEND_VAL temp468_70)))
(assert (= temp468_72 #x0000000000000003))
(assert (= temp468_73 temp468_72))
(assert (= temp468_74 (select ARGNAME_stride_NAMEEND_VAL temp468_73)))
(assert (= temp468_75 #x0000000000000004))
(assert (= temp468_76 temp468_75))
(assert (= temp468_77 (select ARGNAME_stride_NAMEEND_VAL temp468_76)))
(assert (= temp468_78 #x0000000000000005))
(assert (= temp468_79 temp468_78))
(assert (= temp468_80 (select ARGNAME_stride_NAMEEND_VAL temp468_79)))
(assert (= temp468_81 #x0000000000000000))
(assert (= temp468_82 #x0000000000000000))
(assert (= temp468_83 temp468_82))
(assert (= temp468_84 (select ARGNAME_stride_NAMEEND_VAL temp468_83)))
(assert (= temp468_85 #x0000000000000000))
(assert (= temp468_86 #x0000000000000001))
(assert (= temp468_87 temp468_86))
(assert (= temp468_88 (select ARGNAME_stride_NAMEEND_VAL temp468_87)))
(assert (= temp468_89 #x0000000000000000))
(assert (= temp468_90 #x0000000000000002))
(assert (= temp468_91 temp468_90))
(assert (= temp468_92 (select ARGNAME_stride_NAMEEND_VAL temp468_91)))
(assert (= temp468_93 #x0000000000000000))
(assert (= temp468_94 #x0000000000000003))
(assert (= temp468_95 temp468_94))
(assert (= temp468_96 (select ARGNAME_stride_NAMEEND_VAL temp468_95)))
(assert (= temp468_97 #x0000000000000000))
(assert (= temp468_98 #x0000000000000004))
(assert (= temp468_99 temp468_98))
(assert (= temp468_100 (select ARGNAME_stride_NAMEEND_VAL temp468_99)))
(assert (= temp468_101 #x0000000000000000))
(assert (= temp468_102 #x0000000000000005))
(assert (= temp468_103 temp468_102))
(assert (= temp468_104 (select ARGNAME_stride_NAMEEND_VAL temp468_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp468_84 temp468_81)
             (bvsle temp468_88 temp468_85)
             (bvsle temp468_92 temp468_89)
             (bvsle temp468_96 temp468_93)
             (bvsle temp468_100 temp468_97)
             (bvsle temp468_104 temp468_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_105 #x0000000000000000))
(assert (= var1716023 temp468_105))
(assert (= temp468_106 #x0000000000000000))
(assert (= var1704114 temp468_106))
(assert (= temp468_107 #x0000000000000000))
(assert (= temp468_108 temp468_107))
(assert (= temp468_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_108)))
(assert (= temp468_110 #x0000000000000001))
(assert (= temp468_111 temp468_110))
(assert (= temp468_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_111)))
(assert (= temp468_113 #x0000000000000002))
(assert (= temp468_114 temp468_113))
(assert (= temp468_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_114)))
(assert (= temp468_116 #x0000000000000003))
(assert (= temp468_117 temp468_116))
(assert (= temp468_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_117)))
(assert (= temp468_119 #x0000000000000004))
(assert (= temp468_120 temp468_119))
(assert (= temp468_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_120)))
(assert (= temp468_122 #x0000000000000005))
(assert (= temp468_123 temp468_122))
(assert (= temp468_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_123)))
(assert (= temp468_126 var1704114))
(assert (= temp468_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_126)))
(assert (= temp468_125 temp468_127))
(assert (= var1716068
   (ite (bvslt temp468_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_128 #x0000000000000000))
(assert (= var1716068 temp468_128))
(assert (= temp468_129 #x0000000000000000))
(assert (= var1704114 temp468_129))
(assert (= temp468_131 var1704114))
(assert (= temp468_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_131)))
(assert (= temp468_130 temp468_132))
(assert (= var1716090 (bvsmod temp468_130 ARGNAME_groups_NAMEEND)))
(assert (= temp468_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp468_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp468_134 #x0000000000000001))
(assert (= var1716091 temp468_134))
(assert (= var1716110 var1716000))
(assert (= temp468_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp468_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp468_136 #x0000000000000001))
(assert (= var1716111 temp468_136))
(assert (= temp468_137 #x0000000000000001))
(assert (= var1705002 temp468_137))
(assert (= temp468_139 var1705002))
(assert (= temp468_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_139)))
(assert (= temp468_138 temp468_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp468_138)))
(assert (= temp468_141 #x0000000000000000))
(assert (= var1704114 temp468_141))
(assert (= temp468_143 var1704114))
(assert (= temp468_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp468_143)))
(assert (= temp468_142 temp468_144))
(assert (= temp468_145 #x0000000000000002))
(assert (= var1979241 temp468_145))
(assert (= temp468_146 #x0000000000000001))
(assert (= var1716281 temp468_146))
(assert (= temp468_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp468_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_148 #x0000000000000001))
(assert (= var997490 temp468_148))
(assert (= temp468_149 #x0000000000000001))
(assert (= var997620 temp468_149))
(assert (= var3486185 var997620))
(assert (= temp468_150 #x0000000000000000))
(assert (= var3686207 temp468_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp468_151 #x0000000000000002))
(assert (= var3815043 temp468_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var3944848 var997633))
(assert (= var4206992 var997633))
(assert (= temp468_152 #x0000000000000001))
(assert (= var998846
   (ite (= ARGNAME_groups_NAMEEND temp468_152)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp468_153 #x0000000000000001))
(assert (= var998846 temp468_153))
(assert (= temp468_154 #x0000000000000002))
(assert (= var4535939 temp468_154))
(assert (= temp468_155 #x0000000000000001))
(assert (= var997490 temp468_155))
(model-add temp468_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp468_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp468_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp468_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp468_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp468_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






