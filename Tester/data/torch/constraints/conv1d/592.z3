(declare-fun temp788_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp788_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp788_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp788_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp788_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp788_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp788_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp788_8 () (_ BitVec 64))
(declare-fun temp788_10 () (_ BitVec 64))
(declare-fun temp788_9 () (_ BitVec 64))
(declare-fun temp788_12 () (_ BitVec 64))
(declare-fun temp788_11 () (_ BitVec 64))
(declare-fun temp788_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp788_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp788_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp788_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp788_17 () (_ BitVec 64))
(declare-fun temp788_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp788_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp788_20 () (_ BitVec 64))
(declare-fun temp788_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp788_22 () (_ BitVec 64))
(declare-fun temp788_23 () (_ BitVec 64))
(declare-fun temp788_24 () (_ BitVec 64))
(declare-fun temp788_25 () (_ BitVec 64))
(declare-fun temp788_26 () (_ BitVec 64))
(declare-fun temp788_27 () (_ BitVec 64))
(declare-fun temp788_28 () (_ BitVec 64))
(declare-fun temp788_29 () (_ BitVec 64))
(declare-fun temp788_30 () (_ BitVec 64))
(declare-fun temp788_31 () (_ BitVec 64))
(declare-fun temp788_32 () (_ BitVec 64))
(declare-fun temp788_33 () (_ BitVec 64))
(declare-fun temp788_34 () (_ BitVec 64))
(declare-fun temp788_35 () (_ BitVec 64))
(declare-fun temp788_36 () (_ BitVec 64))
(declare-fun temp788_37 () (_ BitVec 64))
(declare-fun temp788_38 () (_ BitVec 64))
(declare-fun temp788_39 () (_ BitVec 64))
(declare-fun temp788_40 () (_ BitVec 64))
(declare-fun temp788_41 () (_ BitVec 64))
(declare-fun temp788_42 () (_ BitVec 64))
(declare-fun temp788_43 () (_ BitVec 64))
(declare-fun temp788_44 () (_ BitVec 64))
(declare-fun temp788_45 () (_ BitVec 64))
(declare-fun temp788_46 () (_ BitVec 64))
(declare-fun temp788_47 () (_ BitVec 64))
(declare-fun temp788_48 () (_ BitVec 64))
(declare-fun temp788_49 () (_ BitVec 64))
(declare-fun temp788_50 () (_ BitVec 64))
(declare-fun temp788_51 () (_ BitVec 64))
(declare-fun temp788_52 () (_ BitVec 64))
(declare-fun temp788_53 () (_ BitVec 64))
(declare-fun temp788_54 () (_ BitVec 64))
(declare-fun temp788_55 () (_ BitVec 64))
(declare-fun temp788_56 () (_ BitVec 64))
(declare-fun temp788_57 () (_ BitVec 64))
(declare-fun temp788_58 () (_ BitVec 64))
(declare-fun temp788_59 () (_ BitVec 64))
(declare-fun temp788_60 () (_ BitVec 64))
(declare-fun temp788_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp788_62 () (_ BitVec 64))
(declare-fun temp788_63 () (_ BitVec 64))
(declare-fun temp788_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp788_65 () (_ BitVec 64))
(declare-fun temp788_66 () (_ BitVec 64))
(declare-fun temp788_67 () (_ BitVec 64))
(declare-fun temp788_68 () (_ BitVec 64))
(declare-fun temp788_69 () (_ BitVec 64))
(declare-fun temp788_70 () (_ BitVec 64))
(declare-fun temp788_71 () (_ BitVec 64))
(declare-fun temp788_72 () (_ BitVec 64))
(declare-fun temp788_73 () (_ BitVec 64))
(declare-fun temp788_74 () (_ BitVec 64))
(declare-fun temp788_75 () (_ BitVec 64))
(declare-fun temp788_76 () (_ BitVec 64))
(declare-fun temp788_77 () (_ BitVec 64))
(declare-fun temp788_78 () (_ BitVec 64))
(declare-fun temp788_79 () (_ BitVec 64))
(declare-fun temp788_80 () (_ BitVec 64))
(declare-fun temp788_81 () (_ BitVec 64))
(declare-fun temp788_82 () (_ BitVec 64))
(declare-fun temp788_83 () (_ BitVec 64))
(declare-fun temp788_84 () (_ BitVec 64))
(declare-fun temp788_85 () (_ BitVec 64))
(declare-fun temp788_86 () (_ BitVec 64))
(declare-fun temp788_87 () (_ BitVec 64))
(declare-fun temp788_88 () (_ BitVec 64))
(declare-fun temp788_89 () (_ BitVec 64))
(declare-fun temp788_90 () (_ BitVec 64))
(declare-fun temp788_91 () (_ BitVec 64))
(declare-fun temp788_92 () (_ BitVec 64))
(declare-fun temp788_93 () (_ BitVec 64))
(declare-fun temp788_94 () (_ BitVec 64))
(declare-fun temp788_95 () (_ BitVec 64))
(declare-fun temp788_96 () (_ BitVec 64))
(declare-fun temp788_97 () (_ BitVec 64))
(declare-fun temp788_98 () (_ BitVec 64))
(declare-fun temp788_99 () (_ BitVec 64))
(declare-fun temp788_100 () (_ BitVec 64))
(declare-fun temp788_101 () (_ BitVec 64))
(declare-fun temp788_102 () (_ BitVec 64))
(declare-fun temp788_103 () (_ BitVec 64))
(declare-fun temp788_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp788_105 () (_ BitVec 64))
(declare-fun temp788_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp788_107 () (_ BitVec 64))
(declare-fun temp788_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp788_109 () (_ BitVec 64))
(declare-fun temp788_110 () (_ BitVec 64))
(declare-fun temp788_111 () (_ BitVec 64))
(declare-fun temp788_112 () (_ BitVec 64))
(declare-fun temp788_113 () (_ BitVec 64))
(declare-fun temp788_114 () (_ BitVec 64))
(declare-fun temp788_115 () (_ BitVec 64))
(declare-fun temp788_116 () (_ BitVec 64))
(declare-fun temp788_117 () (_ BitVec 64))
(declare-fun temp788_118 () (_ BitVec 64))
(declare-fun temp788_119 () (_ BitVec 64))
(declare-fun temp788_120 () (_ BitVec 64))
(declare-fun temp788_121 () (_ BitVec 64))
(declare-fun temp788_122 () (_ BitVec 64))
(declare-fun temp788_123 () (_ BitVec 64))
(declare-fun temp788_124 () (_ BitVec 64))
(declare-fun temp788_126 () (_ BitVec 64))
(declare-fun temp788_127 () (_ BitVec 64))
(declare-fun temp788_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp788_128 () (_ BitVec 64))
(declare-fun temp788_129 () (_ BitVec 64))
(declare-fun temp788_131 () (_ BitVec 64))
(declare-fun temp788_132 () (_ BitVec 64))
(declare-fun temp788_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp788_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp788_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp788_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp788_136 () (_ BitVec 64))
(declare-fun temp788_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp788_139 () (_ BitVec 64))
(declare-fun temp788_140 () (_ BitVec 64))
(declare-fun temp788_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp788_141 () (_ BitVec 64))
(declare-fun temp788_143 () (_ BitVec 64))
(declare-fun temp788_144 () (_ BitVec 64))
(declare-fun temp788_142 () (_ BitVec 64))
(declare-fun temp788_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp788_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp788_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp788_148 () (_ BitVec 64))
(declare-fun temp788_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp788_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp788_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4272528 () (_ BitVec 64))
(declare-fun var998252 () (_ BitVec 64))
(declare-fun temp788_152 () (_ BitVec 64))
(declare-fun var998253 () (_ BitVec 64))
(declare-fun temp788_153 () (_ BitVec 64))
(assert (= temp788_1 #x0000000000000001))
(assert (= var465453 temp788_1))
(assert (= temp788_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp788_2)))
(assert (= temp788_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp788_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp788_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp788_4)))
(assert (= temp788_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp788_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp788_6 #x0000000000000000))
(assert (= var465488 temp788_6))
(assert (= temp788_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp788_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp788_8 #x0000000000000001))
(assert (= var465522 temp788_8))
(assert (= temp788_10 #x0000000000000000))
(assert (= temp788_9 temp788_10))
(assert (= temp788_12 #x0000000000000001))
(assert (= temp788_11 temp788_12))
(assert (= temp788_13 #x0000000000000000))
(assert (= var863614 temp788_13))
(assert (= temp788_14 #x0000000000000001))
(assert (= var863635 temp788_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp788_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp788_15)))
(assert (= temp788_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp788_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp788_17 #x0000000000000000))
(assert (= var997373 temp788_17))
(assert (= temp788_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp788_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp788_19 #x0000000000000000))
(assert (= var997418 temp788_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp788_20 #x0000000000000000))
(assert (= temp788_21 temp788_20))
(assert (= temp788_22 (select ARGNAME_padding_NAMEEND_VAL temp788_21)))
(assert (= temp788_23 #x0000000000000001))
(assert (= temp788_24 temp788_23))
(assert (= temp788_25 (select ARGNAME_padding_NAMEEND_VAL temp788_24)))
(assert (= temp788_26 #x0000000000000002))
(assert (= temp788_27 temp788_26))
(assert (= temp788_28 (select ARGNAME_padding_NAMEEND_VAL temp788_27)))
(assert (= temp788_29 #x0000000000000003))
(assert (= temp788_30 temp788_29))
(assert (= temp788_31 (select ARGNAME_padding_NAMEEND_VAL temp788_30)))
(assert (= temp788_32 #x0000000000000004))
(assert (= temp788_33 temp788_32))
(assert (= temp788_34 (select ARGNAME_padding_NAMEEND_VAL temp788_33)))
(assert (= temp788_35 #x0000000000000005))
(assert (= temp788_36 temp788_35))
(assert (= temp788_37 (select ARGNAME_padding_NAMEEND_VAL temp788_36)))
(assert (= temp788_38 #x0000000000000000))
(assert (= temp788_39 #x0000000000000000))
(assert (= temp788_40 temp788_39))
(assert (= temp788_41 (select ARGNAME_padding_NAMEEND_VAL temp788_40)))
(assert (= temp788_42 #x0000000000000000))
(assert (= temp788_43 #x0000000000000001))
(assert (= temp788_44 temp788_43))
(assert (= temp788_45 (select ARGNAME_padding_NAMEEND_VAL temp788_44)))
(assert (= temp788_46 #x0000000000000000))
(assert (= temp788_47 #x0000000000000002))
(assert (= temp788_48 temp788_47))
(assert (= temp788_49 (select ARGNAME_padding_NAMEEND_VAL temp788_48)))
(assert (= temp788_50 #x0000000000000000))
(assert (= temp788_51 #x0000000000000003))
(assert (= temp788_52 temp788_51))
(assert (= temp788_53 (select ARGNAME_padding_NAMEEND_VAL temp788_52)))
(assert (= temp788_54 #x0000000000000000))
(assert (= temp788_55 #x0000000000000004))
(assert (= temp788_56 temp788_55))
(assert (= temp788_57 (select ARGNAME_padding_NAMEEND_VAL temp788_56)))
(assert (= temp788_58 #x0000000000000000))
(assert (= temp788_59 #x0000000000000005))
(assert (= temp788_60 temp788_59))
(assert (= temp788_61 (select ARGNAME_padding_NAMEEND_VAL temp788_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp788_41 temp788_38)
             (bvslt temp788_45 temp788_42)
             (bvslt temp788_49 temp788_46)
             (bvslt temp788_53 temp788_50)
             (bvslt temp788_57 temp788_54)
             (bvslt temp788_61 temp788_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp788_62 #x0000000000000000))
(assert (= var1716002 temp788_62))
(assert (= temp788_63 #x0000000000000000))
(assert (= temp788_64 temp788_63))
(assert (= temp788_65 (select ARGNAME_stride_NAMEEND_VAL temp788_64)))
(assert (= temp788_66 #x0000000000000001))
(assert (= temp788_67 temp788_66))
(assert (= temp788_68 (select ARGNAME_stride_NAMEEND_VAL temp788_67)))
(assert (= temp788_69 #x0000000000000002))
(assert (= temp788_70 temp788_69))
(assert (= temp788_71 (select ARGNAME_stride_NAMEEND_VAL temp788_70)))
(assert (= temp788_72 #x0000000000000003))
(assert (= temp788_73 temp788_72))
(assert (= temp788_74 (select ARGNAME_stride_NAMEEND_VAL temp788_73)))
(assert (= temp788_75 #x0000000000000004))
(assert (= temp788_76 temp788_75))
(assert (= temp788_77 (select ARGNAME_stride_NAMEEND_VAL temp788_76)))
(assert (= temp788_78 #x0000000000000005))
(assert (= temp788_79 temp788_78))
(assert (= temp788_80 (select ARGNAME_stride_NAMEEND_VAL temp788_79)))
(assert (= temp788_81 #x0000000000000000))
(assert (= temp788_82 #x0000000000000000))
(assert (= temp788_83 temp788_82))
(assert (= temp788_84 (select ARGNAME_stride_NAMEEND_VAL temp788_83)))
(assert (= temp788_85 #x0000000000000000))
(assert (= temp788_86 #x0000000000000001))
(assert (= temp788_87 temp788_86))
(assert (= temp788_88 (select ARGNAME_stride_NAMEEND_VAL temp788_87)))
(assert (= temp788_89 #x0000000000000000))
(assert (= temp788_90 #x0000000000000002))
(assert (= temp788_91 temp788_90))
(assert (= temp788_92 (select ARGNAME_stride_NAMEEND_VAL temp788_91)))
(assert (= temp788_93 #x0000000000000000))
(assert (= temp788_94 #x0000000000000003))
(assert (= temp788_95 temp788_94))
(assert (= temp788_96 (select ARGNAME_stride_NAMEEND_VAL temp788_95)))
(assert (= temp788_97 #x0000000000000000))
(assert (= temp788_98 #x0000000000000004))
(assert (= temp788_99 temp788_98))
(assert (= temp788_100 (select ARGNAME_stride_NAMEEND_VAL temp788_99)))
(assert (= temp788_101 #x0000000000000000))
(assert (= temp788_102 #x0000000000000005))
(assert (= temp788_103 temp788_102))
(assert (= temp788_104 (select ARGNAME_stride_NAMEEND_VAL temp788_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp788_84 temp788_81)
             (bvsle temp788_88 temp788_85)
             (bvsle temp788_92 temp788_89)
             (bvsle temp788_96 temp788_93)
             (bvsle temp788_100 temp788_97)
             (bvsle temp788_104 temp788_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp788_105 #x0000000000000000))
(assert (= var1716023 temp788_105))
(assert (= temp788_106 #x0000000000000000))
(assert (= var1704114 temp788_106))
(assert (= temp788_107 #x0000000000000000))
(assert (= temp788_108 temp788_107))
(assert (= temp788_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp788_108)))
(assert (= temp788_110 #x0000000000000001))
(assert (= temp788_111 temp788_110))
(assert (= temp788_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp788_111)))
(assert (= temp788_113 #x0000000000000002))
(assert (= temp788_114 temp788_113))
(assert (= temp788_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp788_114)))
(assert (= temp788_116 #x0000000000000003))
(assert (= temp788_117 temp788_116))
(assert (= temp788_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp788_117)))
(assert (= temp788_119 #x0000000000000004))
(assert (= temp788_120 temp788_119))
(assert (= temp788_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp788_120)))
(assert (= temp788_122 #x0000000000000005))
(assert (= temp788_123 temp788_122))
(assert (= temp788_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp788_123)))
(assert (= temp788_126 var1704114))
(assert (= temp788_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp788_126)))
(assert (= temp788_125 temp788_127))
(assert (= var1716068
   (ite (bvslt temp788_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp788_128 #x0000000000000000))
(assert (= var1716068 temp788_128))
(assert (= temp788_129 #x0000000000000000))
(assert (= var1704114 temp788_129))
(assert (= temp788_131 var1704114))
(assert (= temp788_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp788_131)))
(assert (= temp788_130 temp788_132))
(assert (= var1716090 (bvsmod temp788_130 ARGNAME_groups_NAMEEND)))
(assert (= temp788_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp788_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp788_134 #x0000000000000001))
(assert (= var1716091 temp788_134))
(assert (= var1716110 var1716000))
(assert (= temp788_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp788_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp788_136 #x0000000000000001))
(assert (= var1716111 temp788_136))
(assert (= temp788_137 #x0000000000000001))
(assert (= var1705002 temp788_137))
(assert (= temp788_139 var1705002))
(assert (= temp788_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp788_139)))
(assert (= temp788_138 temp788_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp788_138)))
(assert (= temp788_141 #x0000000000000000))
(assert (= var1704114 temp788_141))
(assert (= temp788_143 var1704114))
(assert (= temp788_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp788_143)))
(assert (= temp788_142 temp788_144))
(assert (= temp788_145 #x0000000000000002))
(assert (= var1979241 temp788_145))
(assert (= temp788_146 #x0000000000000001))
(assert (= var1716281 temp788_146))
(assert (= temp788_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp788_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp788_148 #x0000000000000001))
(assert (= var997490 temp788_148))
(assert (= temp788_149 #x0000000000000001))
(assert (= var997620 temp788_149))
(assert (= var3486185 var997620))
(assert (= temp788_150 #x0000000000000000))
(assert (= var3686207 temp788_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp788_151 #x0000000000000002))
(assert (= var3815043 temp788_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4272528 var997633))
(assert (= var998252 var997345))
(assert (= temp788_152 #x0000000000000000))
(assert (= var998253
   (ite (distinct var998252 temp788_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp788_153 #x0000000000000001))
(assert (= var997490 temp788_153))
(model-add temp788_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp788_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp788_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp788_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp788_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp788_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






