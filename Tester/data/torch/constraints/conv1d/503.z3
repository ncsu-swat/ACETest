(declare-fun temp669_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp669_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp669_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp669_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp669_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp669_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp669_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp669_8 () (_ BitVec 64))
(declare-fun temp669_10 () (_ BitVec 64))
(declare-fun temp669_9 () (_ BitVec 64))
(declare-fun temp669_12 () (_ BitVec 64))
(declare-fun temp669_11 () (_ BitVec 64))
(declare-fun temp669_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp669_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp669_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp669_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp669_17 () (_ BitVec 64))
(declare-fun temp669_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp669_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp669_20 () (_ BitVec 64))
(declare-fun temp669_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp669_22 () (_ BitVec 64))
(declare-fun temp669_23 () (_ BitVec 64))
(declare-fun temp669_24 () (_ BitVec 64))
(declare-fun temp669_25 () (_ BitVec 64))
(declare-fun temp669_26 () (_ BitVec 64))
(declare-fun temp669_27 () (_ BitVec 64))
(declare-fun temp669_28 () (_ BitVec 64))
(declare-fun temp669_29 () (_ BitVec 64))
(declare-fun temp669_30 () (_ BitVec 64))
(declare-fun temp669_31 () (_ BitVec 64))
(declare-fun temp669_32 () (_ BitVec 64))
(declare-fun temp669_33 () (_ BitVec 64))
(declare-fun temp669_34 () (_ BitVec 64))
(declare-fun temp669_35 () (_ BitVec 64))
(declare-fun temp669_36 () (_ BitVec 64))
(declare-fun temp669_37 () (_ BitVec 64))
(declare-fun temp669_38 () (_ BitVec 64))
(declare-fun temp669_39 () (_ BitVec 64))
(declare-fun temp669_40 () (_ BitVec 64))
(declare-fun temp669_41 () (_ BitVec 64))
(declare-fun temp669_42 () (_ BitVec 64))
(declare-fun temp669_43 () (_ BitVec 64))
(declare-fun temp669_44 () (_ BitVec 64))
(declare-fun temp669_45 () (_ BitVec 64))
(declare-fun temp669_46 () (_ BitVec 64))
(declare-fun temp669_47 () (_ BitVec 64))
(declare-fun temp669_48 () (_ BitVec 64))
(declare-fun temp669_49 () (_ BitVec 64))
(declare-fun temp669_50 () (_ BitVec 64))
(declare-fun temp669_51 () (_ BitVec 64))
(declare-fun temp669_52 () (_ BitVec 64))
(declare-fun temp669_53 () (_ BitVec 64))
(declare-fun temp669_54 () (_ BitVec 64))
(declare-fun temp669_55 () (_ BitVec 64))
(declare-fun temp669_56 () (_ BitVec 64))
(declare-fun temp669_57 () (_ BitVec 64))
(declare-fun temp669_58 () (_ BitVec 64))
(declare-fun temp669_59 () (_ BitVec 64))
(declare-fun temp669_60 () (_ BitVec 64))
(declare-fun temp669_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp669_62 () (_ BitVec 64))
(declare-fun temp669_63 () (_ BitVec 64))
(declare-fun temp669_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp669_65 () (_ BitVec 64))
(declare-fun temp669_66 () (_ BitVec 64))
(declare-fun temp669_67 () (_ BitVec 64))
(declare-fun temp669_68 () (_ BitVec 64))
(declare-fun temp669_69 () (_ BitVec 64))
(declare-fun temp669_70 () (_ BitVec 64))
(declare-fun temp669_71 () (_ BitVec 64))
(declare-fun temp669_72 () (_ BitVec 64))
(declare-fun temp669_73 () (_ BitVec 64))
(declare-fun temp669_74 () (_ BitVec 64))
(declare-fun temp669_75 () (_ BitVec 64))
(declare-fun temp669_76 () (_ BitVec 64))
(declare-fun temp669_77 () (_ BitVec 64))
(declare-fun temp669_78 () (_ BitVec 64))
(declare-fun temp669_79 () (_ BitVec 64))
(declare-fun temp669_80 () (_ BitVec 64))
(declare-fun temp669_81 () (_ BitVec 64))
(declare-fun temp669_82 () (_ BitVec 64))
(declare-fun temp669_83 () (_ BitVec 64))
(declare-fun temp669_84 () (_ BitVec 64))
(declare-fun temp669_85 () (_ BitVec 64))
(declare-fun temp669_86 () (_ BitVec 64))
(declare-fun temp669_87 () (_ BitVec 64))
(declare-fun temp669_88 () (_ BitVec 64))
(declare-fun temp669_89 () (_ BitVec 64))
(declare-fun temp669_90 () (_ BitVec 64))
(declare-fun temp669_91 () (_ BitVec 64))
(declare-fun temp669_92 () (_ BitVec 64))
(declare-fun temp669_93 () (_ BitVec 64))
(declare-fun temp669_94 () (_ BitVec 64))
(declare-fun temp669_95 () (_ BitVec 64))
(declare-fun temp669_96 () (_ BitVec 64))
(declare-fun temp669_97 () (_ BitVec 64))
(declare-fun temp669_98 () (_ BitVec 64))
(declare-fun temp669_99 () (_ BitVec 64))
(declare-fun temp669_100 () (_ BitVec 64))
(declare-fun temp669_101 () (_ BitVec 64))
(declare-fun temp669_102 () (_ BitVec 64))
(declare-fun temp669_103 () (_ BitVec 64))
(declare-fun temp669_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp669_105 () (_ BitVec 64))
(declare-fun temp669_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp669_107 () (_ BitVec 64))
(declare-fun temp669_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp669_109 () (_ BitVec 64))
(declare-fun temp669_110 () (_ BitVec 64))
(declare-fun temp669_111 () (_ BitVec 64))
(declare-fun temp669_112 () (_ BitVec 64))
(declare-fun temp669_113 () (_ BitVec 64))
(declare-fun temp669_114 () (_ BitVec 64))
(declare-fun temp669_115 () (_ BitVec 64))
(declare-fun temp669_116 () (_ BitVec 64))
(declare-fun temp669_117 () (_ BitVec 64))
(declare-fun temp669_118 () (_ BitVec 64))
(declare-fun temp669_119 () (_ BitVec 64))
(declare-fun temp669_120 () (_ BitVec 64))
(declare-fun temp669_121 () (_ BitVec 64))
(declare-fun temp669_122 () (_ BitVec 64))
(declare-fun temp669_123 () (_ BitVec 64))
(declare-fun temp669_124 () (_ BitVec 64))
(declare-fun temp669_126 () (_ BitVec 64))
(declare-fun temp669_127 () (_ BitVec 64))
(declare-fun temp669_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp669_128 () (_ BitVec 64))
(declare-fun temp669_129 () (_ BitVec 64))
(declare-fun temp669_131 () (_ BitVec 64))
(declare-fun temp669_132 () (_ BitVec 64))
(declare-fun temp669_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp669_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp669_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp669_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp669_136 () (_ BitVec 64))
(declare-fun temp669_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp669_139 () (_ BitVec 64))
(declare-fun temp669_140 () (_ BitVec 64))
(declare-fun temp669_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp669_141 () (_ BitVec 64))
(declare-fun temp669_143 () (_ BitVec 64))
(declare-fun temp669_144 () (_ BitVec 64))
(declare-fun temp669_142 () (_ BitVec 64))
(declare-fun temp669_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp669_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp669_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp669_148 () (_ BitVec 64))
(declare-fun temp669_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp669_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp669_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp669_153 () (_ BitVec 64))
(declare-fun temp669_152 () (_ BitVec 64))
(declare-fun temp669_155 () (_ BitVec 64))
(declare-fun temp669_154 () (_ BitVec 64))
(declare-fun temp669_156 () (_ BitVec 64))
(assert (= temp669_1 #x0000000000000001))
(assert (= var465453 temp669_1))
(assert (= temp669_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp669_2)))
(assert (= temp669_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp669_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp669_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp669_4)))
(assert (= temp669_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp669_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp669_6 #x0000000000000000))
(assert (= var465488 temp669_6))
(assert (= temp669_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp669_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp669_8 #x0000000000000001))
(assert (= var465522 temp669_8))
(assert (= temp669_10 #x0000000000000000))
(assert (= temp669_9 temp669_10))
(assert (= temp669_12 #x0000000000000001))
(assert (= temp669_11 temp669_12))
(assert (= temp669_13 #x0000000000000000))
(assert (= var863614 temp669_13))
(assert (= temp669_14 #x0000000000000001))
(assert (= var863635 temp669_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp669_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp669_15)))
(assert (= temp669_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp669_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp669_17 #x0000000000000000))
(assert (= var997373 temp669_17))
(assert (= temp669_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp669_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp669_19 #x0000000000000000))
(assert (= var997418 temp669_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp669_20 #x0000000000000000))
(assert (= temp669_21 temp669_20))
(assert (= temp669_22 (select ARGNAME_padding_NAMEEND_VAL temp669_21)))
(assert (= temp669_23 #x0000000000000001))
(assert (= temp669_24 temp669_23))
(assert (= temp669_25 (select ARGNAME_padding_NAMEEND_VAL temp669_24)))
(assert (= temp669_26 #x0000000000000002))
(assert (= temp669_27 temp669_26))
(assert (= temp669_28 (select ARGNAME_padding_NAMEEND_VAL temp669_27)))
(assert (= temp669_29 #x0000000000000003))
(assert (= temp669_30 temp669_29))
(assert (= temp669_31 (select ARGNAME_padding_NAMEEND_VAL temp669_30)))
(assert (= temp669_32 #x0000000000000004))
(assert (= temp669_33 temp669_32))
(assert (= temp669_34 (select ARGNAME_padding_NAMEEND_VAL temp669_33)))
(assert (= temp669_35 #x0000000000000005))
(assert (= temp669_36 temp669_35))
(assert (= temp669_37 (select ARGNAME_padding_NAMEEND_VAL temp669_36)))
(assert (= temp669_38 #x0000000000000000))
(assert (= temp669_39 #x0000000000000000))
(assert (= temp669_40 temp669_39))
(assert (= temp669_41 (select ARGNAME_padding_NAMEEND_VAL temp669_40)))
(assert (= temp669_42 #x0000000000000000))
(assert (= temp669_43 #x0000000000000001))
(assert (= temp669_44 temp669_43))
(assert (= temp669_45 (select ARGNAME_padding_NAMEEND_VAL temp669_44)))
(assert (= temp669_46 #x0000000000000000))
(assert (= temp669_47 #x0000000000000002))
(assert (= temp669_48 temp669_47))
(assert (= temp669_49 (select ARGNAME_padding_NAMEEND_VAL temp669_48)))
(assert (= temp669_50 #x0000000000000000))
(assert (= temp669_51 #x0000000000000003))
(assert (= temp669_52 temp669_51))
(assert (= temp669_53 (select ARGNAME_padding_NAMEEND_VAL temp669_52)))
(assert (= temp669_54 #x0000000000000000))
(assert (= temp669_55 #x0000000000000004))
(assert (= temp669_56 temp669_55))
(assert (= temp669_57 (select ARGNAME_padding_NAMEEND_VAL temp669_56)))
(assert (= temp669_58 #x0000000000000000))
(assert (= temp669_59 #x0000000000000005))
(assert (= temp669_60 temp669_59))
(assert (= temp669_61 (select ARGNAME_padding_NAMEEND_VAL temp669_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp669_41 temp669_38)
             (bvslt temp669_45 temp669_42)
             (bvslt temp669_49 temp669_46)
             (bvslt temp669_53 temp669_50)
             (bvslt temp669_57 temp669_54)
             (bvslt temp669_61 temp669_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp669_62 #x0000000000000000))
(assert (= var1716002 temp669_62))
(assert (= temp669_63 #x0000000000000000))
(assert (= temp669_64 temp669_63))
(assert (= temp669_65 (select ARGNAME_stride_NAMEEND_VAL temp669_64)))
(assert (= temp669_66 #x0000000000000001))
(assert (= temp669_67 temp669_66))
(assert (= temp669_68 (select ARGNAME_stride_NAMEEND_VAL temp669_67)))
(assert (= temp669_69 #x0000000000000002))
(assert (= temp669_70 temp669_69))
(assert (= temp669_71 (select ARGNAME_stride_NAMEEND_VAL temp669_70)))
(assert (= temp669_72 #x0000000000000003))
(assert (= temp669_73 temp669_72))
(assert (= temp669_74 (select ARGNAME_stride_NAMEEND_VAL temp669_73)))
(assert (= temp669_75 #x0000000000000004))
(assert (= temp669_76 temp669_75))
(assert (= temp669_77 (select ARGNAME_stride_NAMEEND_VAL temp669_76)))
(assert (= temp669_78 #x0000000000000005))
(assert (= temp669_79 temp669_78))
(assert (= temp669_80 (select ARGNAME_stride_NAMEEND_VAL temp669_79)))
(assert (= temp669_81 #x0000000000000000))
(assert (= temp669_82 #x0000000000000000))
(assert (= temp669_83 temp669_82))
(assert (= temp669_84 (select ARGNAME_stride_NAMEEND_VAL temp669_83)))
(assert (= temp669_85 #x0000000000000000))
(assert (= temp669_86 #x0000000000000001))
(assert (= temp669_87 temp669_86))
(assert (= temp669_88 (select ARGNAME_stride_NAMEEND_VAL temp669_87)))
(assert (= temp669_89 #x0000000000000000))
(assert (= temp669_90 #x0000000000000002))
(assert (= temp669_91 temp669_90))
(assert (= temp669_92 (select ARGNAME_stride_NAMEEND_VAL temp669_91)))
(assert (= temp669_93 #x0000000000000000))
(assert (= temp669_94 #x0000000000000003))
(assert (= temp669_95 temp669_94))
(assert (= temp669_96 (select ARGNAME_stride_NAMEEND_VAL temp669_95)))
(assert (= temp669_97 #x0000000000000000))
(assert (= temp669_98 #x0000000000000004))
(assert (= temp669_99 temp669_98))
(assert (= temp669_100 (select ARGNAME_stride_NAMEEND_VAL temp669_99)))
(assert (= temp669_101 #x0000000000000000))
(assert (= temp669_102 #x0000000000000005))
(assert (= temp669_103 temp669_102))
(assert (= temp669_104 (select ARGNAME_stride_NAMEEND_VAL temp669_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp669_84 temp669_81)
             (bvsle temp669_88 temp669_85)
             (bvsle temp669_92 temp669_89)
             (bvsle temp669_96 temp669_93)
             (bvsle temp669_100 temp669_97)
             (bvsle temp669_104 temp669_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp669_105 #x0000000000000000))
(assert (= var1716023 temp669_105))
(assert (= temp669_106 #x0000000000000000))
(assert (= var1704114 temp669_106))
(assert (= temp669_107 #x0000000000000000))
(assert (= temp669_108 temp669_107))
(assert (= temp669_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp669_108)))
(assert (= temp669_110 #x0000000000000001))
(assert (= temp669_111 temp669_110))
(assert (= temp669_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp669_111)))
(assert (= temp669_113 #x0000000000000002))
(assert (= temp669_114 temp669_113))
(assert (= temp669_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp669_114)))
(assert (= temp669_116 #x0000000000000003))
(assert (= temp669_117 temp669_116))
(assert (= temp669_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp669_117)))
(assert (= temp669_119 #x0000000000000004))
(assert (= temp669_120 temp669_119))
(assert (= temp669_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp669_120)))
(assert (= temp669_122 #x0000000000000005))
(assert (= temp669_123 temp669_122))
(assert (= temp669_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp669_123)))
(assert (= temp669_126 var1704114))
(assert (= temp669_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp669_126)))
(assert (= temp669_125 temp669_127))
(assert (= var1716068
   (ite (bvslt temp669_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp669_128 #x0000000000000000))
(assert (= var1716068 temp669_128))
(assert (= temp669_129 #x0000000000000000))
(assert (= var1704114 temp669_129))
(assert (= temp669_131 var1704114))
(assert (= temp669_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp669_131)))
(assert (= temp669_130 temp669_132))
(assert (= var1716090 (bvsmod temp669_130 ARGNAME_groups_NAMEEND)))
(assert (= temp669_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp669_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp669_134 #x0000000000000001))
(assert (= var1716091 temp669_134))
(assert (= var1716110 var1716000))
(assert (= temp669_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp669_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp669_136 #x0000000000000001))
(assert (= var1716111 temp669_136))
(assert (= temp669_137 #x0000000000000001))
(assert (= var1705002 temp669_137))
(assert (= temp669_139 var1705002))
(assert (= temp669_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp669_139)))
(assert (= temp669_138 temp669_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp669_138)))
(assert (= temp669_141 #x0000000000000000))
(assert (= var1704114 temp669_141))
(assert (= temp669_143 var1704114))
(assert (= temp669_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp669_143)))
(assert (= temp669_142 temp669_144))
(assert (= temp669_145 #x0000000000000002))
(assert (= var1979241 temp669_145))
(assert (= temp669_146 #x0000000000000001))
(assert (= var1716281 temp669_146))
(assert (= temp669_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp669_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp669_148 #x0000000000000001))
(assert (= var997490 temp669_148))
(assert (= temp669_149 #x0000000000000001))
(assert (= var997620 temp669_149))
(assert (= var3486185 var997620))
(assert (= temp669_150 #x0000000000000000))
(assert (= var3686207 temp669_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp669_151 #x0000000000000002))
(assert (= var3815043 temp669_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp669_153 #xffffffffffffffff))
(assert (= temp669_152 temp669_153))
(assert (= temp669_155 #xffffffffffffffff))
(assert (= temp669_154 temp669_155))
(assert (= temp669_156 #x0000000000000001))
(assert (= var997490 temp669_156))
(model-add temp669_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp669_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp669_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp669_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp669_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp669_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






