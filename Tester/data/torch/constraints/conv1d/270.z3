(declare-fun temp358_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp358_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp358_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp358_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp358_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp358_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp358_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp358_8 () (_ BitVec 64))
(declare-fun temp358_10 () (_ BitVec 64))
(declare-fun temp358_9 () (_ BitVec 64))
(declare-fun temp358_12 () (_ BitVec 64))
(declare-fun temp358_11 () (_ BitVec 64))
(declare-fun temp358_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp358_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp358_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp358_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp358_17 () (_ BitVec 64))
(declare-fun temp358_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp358_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp358_20 () (_ BitVec 64))
(declare-fun temp358_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp358_22 () (_ BitVec 64))
(declare-fun temp358_23 () (_ BitVec 64))
(declare-fun temp358_24 () (_ BitVec 64))
(declare-fun temp358_25 () (_ BitVec 64))
(declare-fun temp358_26 () (_ BitVec 64))
(declare-fun temp358_27 () (_ BitVec 64))
(declare-fun temp358_28 () (_ BitVec 64))
(declare-fun temp358_29 () (_ BitVec 64))
(declare-fun temp358_30 () (_ BitVec 64))
(declare-fun temp358_31 () (_ BitVec 64))
(declare-fun temp358_32 () (_ BitVec 64))
(declare-fun temp358_33 () (_ BitVec 64))
(declare-fun temp358_34 () (_ BitVec 64))
(declare-fun temp358_35 () (_ BitVec 64))
(declare-fun temp358_36 () (_ BitVec 64))
(declare-fun temp358_37 () (_ BitVec 64))
(declare-fun temp358_38 () (_ BitVec 64))
(declare-fun temp358_39 () (_ BitVec 64))
(declare-fun temp358_40 () (_ BitVec 64))
(declare-fun temp358_41 () (_ BitVec 64))
(declare-fun temp358_42 () (_ BitVec 64))
(declare-fun temp358_43 () (_ BitVec 64))
(declare-fun temp358_44 () (_ BitVec 64))
(declare-fun temp358_45 () (_ BitVec 64))
(declare-fun temp358_46 () (_ BitVec 64))
(declare-fun temp358_47 () (_ BitVec 64))
(declare-fun temp358_48 () (_ BitVec 64))
(declare-fun temp358_49 () (_ BitVec 64))
(declare-fun temp358_50 () (_ BitVec 64))
(declare-fun temp358_51 () (_ BitVec 64))
(declare-fun temp358_52 () (_ BitVec 64))
(declare-fun temp358_53 () (_ BitVec 64))
(declare-fun temp358_54 () (_ BitVec 64))
(declare-fun temp358_55 () (_ BitVec 64))
(declare-fun temp358_56 () (_ BitVec 64))
(declare-fun temp358_57 () (_ BitVec 64))
(declare-fun temp358_58 () (_ BitVec 64))
(declare-fun temp358_59 () (_ BitVec 64))
(declare-fun temp358_60 () (_ BitVec 64))
(declare-fun temp358_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp358_62 () (_ BitVec 64))
(declare-fun temp358_63 () (_ BitVec 64))
(declare-fun temp358_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp358_65 () (_ BitVec 64))
(declare-fun temp358_66 () (_ BitVec 64))
(declare-fun temp358_67 () (_ BitVec 64))
(declare-fun temp358_68 () (_ BitVec 64))
(declare-fun temp358_69 () (_ BitVec 64))
(declare-fun temp358_70 () (_ BitVec 64))
(declare-fun temp358_71 () (_ BitVec 64))
(declare-fun temp358_72 () (_ BitVec 64))
(declare-fun temp358_73 () (_ BitVec 64))
(declare-fun temp358_74 () (_ BitVec 64))
(declare-fun temp358_75 () (_ BitVec 64))
(declare-fun temp358_76 () (_ BitVec 64))
(declare-fun temp358_77 () (_ BitVec 64))
(declare-fun temp358_78 () (_ BitVec 64))
(declare-fun temp358_79 () (_ BitVec 64))
(declare-fun temp358_80 () (_ BitVec 64))
(declare-fun temp358_81 () (_ BitVec 64))
(declare-fun temp358_82 () (_ BitVec 64))
(declare-fun temp358_83 () (_ BitVec 64))
(declare-fun temp358_84 () (_ BitVec 64))
(declare-fun temp358_85 () (_ BitVec 64))
(declare-fun temp358_86 () (_ BitVec 64))
(declare-fun temp358_87 () (_ BitVec 64))
(declare-fun temp358_88 () (_ BitVec 64))
(declare-fun temp358_89 () (_ BitVec 64))
(declare-fun temp358_90 () (_ BitVec 64))
(declare-fun temp358_91 () (_ BitVec 64))
(declare-fun temp358_92 () (_ BitVec 64))
(declare-fun temp358_93 () (_ BitVec 64))
(declare-fun temp358_94 () (_ BitVec 64))
(declare-fun temp358_95 () (_ BitVec 64))
(declare-fun temp358_96 () (_ BitVec 64))
(declare-fun temp358_97 () (_ BitVec 64))
(declare-fun temp358_98 () (_ BitVec 64))
(declare-fun temp358_99 () (_ BitVec 64))
(declare-fun temp358_100 () (_ BitVec 64))
(declare-fun temp358_101 () (_ BitVec 64))
(declare-fun temp358_102 () (_ BitVec 64))
(declare-fun temp358_103 () (_ BitVec 64))
(declare-fun temp358_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp358_105 () (_ BitVec 64))
(declare-fun temp358_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp358_107 () (_ BitVec 64))
(declare-fun temp358_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp358_109 () (_ BitVec 64))
(declare-fun temp358_110 () (_ BitVec 64))
(declare-fun temp358_111 () (_ BitVec 64))
(declare-fun temp358_112 () (_ BitVec 64))
(declare-fun temp358_113 () (_ BitVec 64))
(declare-fun temp358_114 () (_ BitVec 64))
(declare-fun temp358_115 () (_ BitVec 64))
(declare-fun temp358_116 () (_ BitVec 64))
(declare-fun temp358_117 () (_ BitVec 64))
(declare-fun temp358_118 () (_ BitVec 64))
(declare-fun temp358_119 () (_ BitVec 64))
(declare-fun temp358_120 () (_ BitVec 64))
(declare-fun temp358_121 () (_ BitVec 64))
(declare-fun temp358_122 () (_ BitVec 64))
(declare-fun temp358_123 () (_ BitVec 64))
(declare-fun temp358_124 () (_ BitVec 64))
(declare-fun temp358_126 () (_ BitVec 64))
(declare-fun temp358_127 () (_ BitVec 64))
(declare-fun temp358_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp358_128 () (_ BitVec 64))
(declare-fun temp358_129 () (_ BitVec 64))
(declare-fun temp358_131 () (_ BitVec 64))
(declare-fun temp358_132 () (_ BitVec 64))
(declare-fun temp358_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp358_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp358_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp358_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp358_136 () (_ BitVec 64))
(declare-fun temp358_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp358_139 () (_ BitVec 64))
(declare-fun temp358_140 () (_ BitVec 64))
(declare-fun temp358_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp358_141 () (_ BitVec 64))
(declare-fun temp358_143 () (_ BitVec 64))
(declare-fun temp358_144 () (_ BitVec 64))
(declare-fun temp358_142 () (_ BitVec 64))
(declare-fun temp358_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp358_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp358_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp358_148 () (_ BitVec 64))
(declare-fun temp358_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp358_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp358_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp358_152 () (_ BitVec 64))
(assert (= temp358_1 #x0000000000000001))
(assert (= var465453 temp358_1))
(assert (= temp358_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp358_2)))
(assert (= temp358_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp358_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp358_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp358_4)))
(assert (= temp358_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp358_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp358_6 #x0000000000000000))
(assert (= var465488 temp358_6))
(assert (= temp358_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp358_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp358_8 #x0000000000000001))
(assert (= var465522 temp358_8))
(assert (= temp358_10 #x0000000000000000))
(assert (= temp358_9 temp358_10))
(assert (= temp358_12 #x0000000000000001))
(assert (= temp358_11 temp358_12))
(assert (= temp358_13 #x0000000000000000))
(assert (= var863614 temp358_13))
(assert (= temp358_14 #x0000000000000001))
(assert (= var863635 temp358_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp358_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp358_15)))
(assert (= temp358_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp358_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_17 #x0000000000000000))
(assert (= var997373 temp358_17))
(assert (= temp358_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp358_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_19 #x0000000000000000))
(assert (= var997418 temp358_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp358_20 #x0000000000000000))
(assert (= temp358_21 temp358_20))
(assert (= temp358_22 (select ARGNAME_padding_NAMEEND_VAL temp358_21)))
(assert (= temp358_23 #x0000000000000001))
(assert (= temp358_24 temp358_23))
(assert (= temp358_25 (select ARGNAME_padding_NAMEEND_VAL temp358_24)))
(assert (= temp358_26 #x0000000000000002))
(assert (= temp358_27 temp358_26))
(assert (= temp358_28 (select ARGNAME_padding_NAMEEND_VAL temp358_27)))
(assert (= temp358_29 #x0000000000000003))
(assert (= temp358_30 temp358_29))
(assert (= temp358_31 (select ARGNAME_padding_NAMEEND_VAL temp358_30)))
(assert (= temp358_32 #x0000000000000004))
(assert (= temp358_33 temp358_32))
(assert (= temp358_34 (select ARGNAME_padding_NAMEEND_VAL temp358_33)))
(assert (= temp358_35 #x0000000000000005))
(assert (= temp358_36 temp358_35))
(assert (= temp358_37 (select ARGNAME_padding_NAMEEND_VAL temp358_36)))
(assert (= temp358_38 #x0000000000000000))
(assert (= temp358_39 #x0000000000000000))
(assert (= temp358_40 temp358_39))
(assert (= temp358_41 (select ARGNAME_padding_NAMEEND_VAL temp358_40)))
(assert (= temp358_42 #x0000000000000000))
(assert (= temp358_43 #x0000000000000001))
(assert (= temp358_44 temp358_43))
(assert (= temp358_45 (select ARGNAME_padding_NAMEEND_VAL temp358_44)))
(assert (= temp358_46 #x0000000000000000))
(assert (= temp358_47 #x0000000000000002))
(assert (= temp358_48 temp358_47))
(assert (= temp358_49 (select ARGNAME_padding_NAMEEND_VAL temp358_48)))
(assert (= temp358_50 #x0000000000000000))
(assert (= temp358_51 #x0000000000000003))
(assert (= temp358_52 temp358_51))
(assert (= temp358_53 (select ARGNAME_padding_NAMEEND_VAL temp358_52)))
(assert (= temp358_54 #x0000000000000000))
(assert (= temp358_55 #x0000000000000004))
(assert (= temp358_56 temp358_55))
(assert (= temp358_57 (select ARGNAME_padding_NAMEEND_VAL temp358_56)))
(assert (= temp358_58 #x0000000000000000))
(assert (= temp358_59 #x0000000000000005))
(assert (= temp358_60 temp358_59))
(assert (= temp358_61 (select ARGNAME_padding_NAMEEND_VAL temp358_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp358_41 temp358_38)
             (bvslt temp358_45 temp358_42)
             (bvslt temp358_49 temp358_46)
             (bvslt temp358_53 temp358_50)
             (bvslt temp358_57 temp358_54)
             (bvslt temp358_61 temp358_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_62 #x0000000000000000))
(assert (= var1716002 temp358_62))
(assert (= temp358_63 #x0000000000000000))
(assert (= temp358_64 temp358_63))
(assert (= temp358_65 (select ARGNAME_stride_NAMEEND_VAL temp358_64)))
(assert (= temp358_66 #x0000000000000001))
(assert (= temp358_67 temp358_66))
(assert (= temp358_68 (select ARGNAME_stride_NAMEEND_VAL temp358_67)))
(assert (= temp358_69 #x0000000000000002))
(assert (= temp358_70 temp358_69))
(assert (= temp358_71 (select ARGNAME_stride_NAMEEND_VAL temp358_70)))
(assert (= temp358_72 #x0000000000000003))
(assert (= temp358_73 temp358_72))
(assert (= temp358_74 (select ARGNAME_stride_NAMEEND_VAL temp358_73)))
(assert (= temp358_75 #x0000000000000004))
(assert (= temp358_76 temp358_75))
(assert (= temp358_77 (select ARGNAME_stride_NAMEEND_VAL temp358_76)))
(assert (= temp358_78 #x0000000000000005))
(assert (= temp358_79 temp358_78))
(assert (= temp358_80 (select ARGNAME_stride_NAMEEND_VAL temp358_79)))
(assert (= temp358_81 #x0000000000000000))
(assert (= temp358_82 #x0000000000000000))
(assert (= temp358_83 temp358_82))
(assert (= temp358_84 (select ARGNAME_stride_NAMEEND_VAL temp358_83)))
(assert (= temp358_85 #x0000000000000000))
(assert (= temp358_86 #x0000000000000001))
(assert (= temp358_87 temp358_86))
(assert (= temp358_88 (select ARGNAME_stride_NAMEEND_VAL temp358_87)))
(assert (= temp358_89 #x0000000000000000))
(assert (= temp358_90 #x0000000000000002))
(assert (= temp358_91 temp358_90))
(assert (= temp358_92 (select ARGNAME_stride_NAMEEND_VAL temp358_91)))
(assert (= temp358_93 #x0000000000000000))
(assert (= temp358_94 #x0000000000000003))
(assert (= temp358_95 temp358_94))
(assert (= temp358_96 (select ARGNAME_stride_NAMEEND_VAL temp358_95)))
(assert (= temp358_97 #x0000000000000000))
(assert (= temp358_98 #x0000000000000004))
(assert (= temp358_99 temp358_98))
(assert (= temp358_100 (select ARGNAME_stride_NAMEEND_VAL temp358_99)))
(assert (= temp358_101 #x0000000000000000))
(assert (= temp358_102 #x0000000000000005))
(assert (= temp358_103 temp358_102))
(assert (= temp358_104 (select ARGNAME_stride_NAMEEND_VAL temp358_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp358_84 temp358_81)
             (bvsle temp358_88 temp358_85)
             (bvsle temp358_92 temp358_89)
             (bvsle temp358_96 temp358_93)
             (bvsle temp358_100 temp358_97)
             (bvsle temp358_104 temp358_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_105 #x0000000000000000))
(assert (= var1716023 temp358_105))
(assert (= temp358_106 #x0000000000000000))
(assert (= var1704114 temp358_106))
(assert (= temp358_107 #x0000000000000000))
(assert (= temp358_108 temp358_107))
(assert (= temp358_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_108)))
(assert (= temp358_110 #x0000000000000001))
(assert (= temp358_111 temp358_110))
(assert (= temp358_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_111)))
(assert (= temp358_113 #x0000000000000002))
(assert (= temp358_114 temp358_113))
(assert (= temp358_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_114)))
(assert (= temp358_116 #x0000000000000003))
(assert (= temp358_117 temp358_116))
(assert (= temp358_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_117)))
(assert (= temp358_119 #x0000000000000004))
(assert (= temp358_120 temp358_119))
(assert (= temp358_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_120)))
(assert (= temp358_122 #x0000000000000005))
(assert (= temp358_123 temp358_122))
(assert (= temp358_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_123)))
(assert (= temp358_126 var1704114))
(assert (= temp358_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_126)))
(assert (= temp358_125 temp358_127))
(assert (= var1716068
   (ite (bvslt temp358_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_128 #x0000000000000000))
(assert (= var1716068 temp358_128))
(assert (= temp358_129 #x0000000000000000))
(assert (= var1704114 temp358_129))
(assert (= temp358_131 var1704114))
(assert (= temp358_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_131)))
(assert (= temp358_130 temp358_132))
(assert (= var1716090 (bvsmod temp358_130 ARGNAME_groups_NAMEEND)))
(assert (= temp358_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp358_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp358_134 #x0000000000000001))
(assert (= var1716091 temp358_134))
(assert (= var1716110 var1716000))
(assert (= temp358_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp358_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp358_136 #x0000000000000001))
(assert (= var1716111 temp358_136))
(assert (= temp358_137 #x0000000000000001))
(assert (= var1705002 temp358_137))
(assert (= temp358_139 var1705002))
(assert (= temp358_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_139)))
(assert (= temp358_138 temp358_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp358_138)))
(assert (= temp358_141 #x0000000000000000))
(assert (= var1704114 temp358_141))
(assert (= temp358_143 var1704114))
(assert (= temp358_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_143)))
(assert (= temp358_142 temp358_144))
(assert (= temp358_145 #x0000000000000002))
(assert (= var1979241 temp358_145))
(assert (= temp358_146 #x0000000000000001))
(assert (= var1716281 temp358_146))
(assert (= temp358_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp358_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_148 #x0000000000000001))
(assert (= var997490 temp358_148))
(assert (= temp358_149 #x0000000000000001))
(assert (= var997620 temp358_149))
(assert (= var3486185 var997620))
(assert (= temp358_150 #x0000000000000000))
(assert (= var3686207 temp358_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp358_151 #x0000000000000002))
(assert (= var3815043 temp358_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp358_152 #x0000000000000001))
(assert (= var997490 temp358_152))
(model-add temp358_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp358_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp358_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp358_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp358_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp358_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






