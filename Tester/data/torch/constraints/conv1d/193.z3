(declare-fun temp255_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp255_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp255_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp255_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp255_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp255_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp255_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp255_8 () (_ BitVec 64))
(declare-fun temp255_10 () (_ BitVec 64))
(declare-fun temp255_9 () (_ BitVec 64))
(declare-fun temp255_12 () (_ BitVec 64))
(declare-fun temp255_11 () (_ BitVec 64))
(declare-fun temp255_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp255_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp255_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp255_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp255_17 () (_ BitVec 64))
(declare-fun temp255_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp255_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp255_20 () (_ BitVec 64))
(declare-fun temp255_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp255_22 () (_ BitVec 64))
(declare-fun temp255_23 () (_ BitVec 64))
(declare-fun temp255_24 () (_ BitVec 64))
(declare-fun temp255_25 () (_ BitVec 64))
(declare-fun temp255_26 () (_ BitVec 64))
(declare-fun temp255_27 () (_ BitVec 64))
(declare-fun temp255_28 () (_ BitVec 64))
(declare-fun temp255_29 () (_ BitVec 64))
(declare-fun temp255_30 () (_ BitVec 64))
(declare-fun temp255_31 () (_ BitVec 64))
(declare-fun temp255_32 () (_ BitVec 64))
(declare-fun temp255_33 () (_ BitVec 64))
(declare-fun temp255_34 () (_ BitVec 64))
(declare-fun temp255_35 () (_ BitVec 64))
(declare-fun temp255_36 () (_ BitVec 64))
(declare-fun temp255_37 () (_ BitVec 64))
(declare-fun temp255_38 () (_ BitVec 64))
(declare-fun temp255_39 () (_ BitVec 64))
(declare-fun temp255_40 () (_ BitVec 64))
(declare-fun temp255_41 () (_ BitVec 64))
(declare-fun temp255_42 () (_ BitVec 64))
(declare-fun temp255_43 () (_ BitVec 64))
(declare-fun temp255_44 () (_ BitVec 64))
(declare-fun temp255_45 () (_ BitVec 64))
(declare-fun temp255_46 () (_ BitVec 64))
(declare-fun temp255_47 () (_ BitVec 64))
(declare-fun temp255_48 () (_ BitVec 64))
(declare-fun temp255_49 () (_ BitVec 64))
(declare-fun temp255_50 () (_ BitVec 64))
(declare-fun temp255_51 () (_ BitVec 64))
(declare-fun temp255_52 () (_ BitVec 64))
(declare-fun temp255_53 () (_ BitVec 64))
(declare-fun temp255_54 () (_ BitVec 64))
(declare-fun temp255_55 () (_ BitVec 64))
(declare-fun temp255_56 () (_ BitVec 64))
(declare-fun temp255_57 () (_ BitVec 64))
(declare-fun temp255_58 () (_ BitVec 64))
(declare-fun temp255_59 () (_ BitVec 64))
(declare-fun temp255_60 () (_ BitVec 64))
(declare-fun temp255_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp255_62 () (_ BitVec 64))
(declare-fun temp255_63 () (_ BitVec 64))
(declare-fun temp255_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp255_65 () (_ BitVec 64))
(declare-fun temp255_66 () (_ BitVec 64))
(declare-fun temp255_67 () (_ BitVec 64))
(declare-fun temp255_68 () (_ BitVec 64))
(declare-fun temp255_69 () (_ BitVec 64))
(declare-fun temp255_70 () (_ BitVec 64))
(declare-fun temp255_71 () (_ BitVec 64))
(declare-fun temp255_72 () (_ BitVec 64))
(declare-fun temp255_73 () (_ BitVec 64))
(declare-fun temp255_74 () (_ BitVec 64))
(declare-fun temp255_75 () (_ BitVec 64))
(declare-fun temp255_76 () (_ BitVec 64))
(declare-fun temp255_77 () (_ BitVec 64))
(declare-fun temp255_78 () (_ BitVec 64))
(declare-fun temp255_79 () (_ BitVec 64))
(declare-fun temp255_80 () (_ BitVec 64))
(declare-fun temp255_81 () (_ BitVec 64))
(declare-fun temp255_82 () (_ BitVec 64))
(declare-fun temp255_83 () (_ BitVec 64))
(declare-fun temp255_84 () (_ BitVec 64))
(declare-fun temp255_85 () (_ BitVec 64))
(declare-fun temp255_86 () (_ BitVec 64))
(declare-fun temp255_87 () (_ BitVec 64))
(declare-fun temp255_88 () (_ BitVec 64))
(declare-fun temp255_89 () (_ BitVec 64))
(declare-fun temp255_90 () (_ BitVec 64))
(declare-fun temp255_91 () (_ BitVec 64))
(declare-fun temp255_92 () (_ BitVec 64))
(declare-fun temp255_93 () (_ BitVec 64))
(declare-fun temp255_94 () (_ BitVec 64))
(declare-fun temp255_95 () (_ BitVec 64))
(declare-fun temp255_96 () (_ BitVec 64))
(declare-fun temp255_97 () (_ BitVec 64))
(declare-fun temp255_98 () (_ BitVec 64))
(declare-fun temp255_99 () (_ BitVec 64))
(declare-fun temp255_100 () (_ BitVec 64))
(declare-fun temp255_101 () (_ BitVec 64))
(declare-fun temp255_102 () (_ BitVec 64))
(declare-fun temp255_103 () (_ BitVec 64))
(declare-fun temp255_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp255_105 () (_ BitVec 64))
(declare-fun temp255_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp255_107 () (_ BitVec 64))
(declare-fun temp255_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp255_109 () (_ BitVec 64))
(declare-fun temp255_110 () (_ BitVec 64))
(declare-fun temp255_111 () (_ BitVec 64))
(declare-fun temp255_112 () (_ BitVec 64))
(declare-fun temp255_113 () (_ BitVec 64))
(declare-fun temp255_114 () (_ BitVec 64))
(declare-fun temp255_115 () (_ BitVec 64))
(declare-fun temp255_116 () (_ BitVec 64))
(declare-fun temp255_117 () (_ BitVec 64))
(declare-fun temp255_118 () (_ BitVec 64))
(declare-fun temp255_119 () (_ BitVec 64))
(declare-fun temp255_120 () (_ BitVec 64))
(declare-fun temp255_121 () (_ BitVec 64))
(declare-fun temp255_122 () (_ BitVec 64))
(declare-fun temp255_123 () (_ BitVec 64))
(declare-fun temp255_124 () (_ BitVec 64))
(declare-fun temp255_126 () (_ BitVec 64))
(declare-fun temp255_127 () (_ BitVec 64))
(declare-fun temp255_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp255_128 () (_ BitVec 64))
(declare-fun temp255_129 () (_ BitVec 64))
(declare-fun temp255_131 () (_ BitVec 64))
(declare-fun temp255_132 () (_ BitVec 64))
(declare-fun temp255_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp255_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp255_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp255_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp255_136 () (_ BitVec 64))
(declare-fun temp255_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp255_139 () (_ BitVec 64))
(declare-fun temp255_140 () (_ BitVec 64))
(declare-fun temp255_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp255_141 () (_ BitVec 64))
(declare-fun temp255_143 () (_ BitVec 64))
(declare-fun temp255_144 () (_ BitVec 64))
(declare-fun temp255_142 () (_ BitVec 64))
(declare-fun temp255_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp255_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp255_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp255_148 () (_ BitVec 64))
(declare-fun temp255_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp255_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp255_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4272528 () (_ BitVec 64))
(declare-fun var998394 () (_ BitVec 64))
(declare-fun temp255_152 () (_ BitVec 64))
(declare-fun var998395 () (_ BitVec 64))
(declare-fun temp255_153 () (_ BitVec 64))
(assert (= temp255_1 #x0000000000000001))
(assert (= var465453 temp255_1))
(assert (= temp255_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp255_2)))
(assert (= temp255_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp255_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp255_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp255_4)))
(assert (= temp255_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp255_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp255_6 #x0000000000000000))
(assert (= var465488 temp255_6))
(assert (= temp255_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp255_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp255_8 #x0000000000000001))
(assert (= var465522 temp255_8))
(assert (= temp255_10 #x0000000000000000))
(assert (= temp255_9 temp255_10))
(assert (= temp255_12 #x0000000000000001))
(assert (= temp255_11 temp255_12))
(assert (= temp255_13 #x0000000000000000))
(assert (= var863614 temp255_13))
(assert (= temp255_14 #x0000000000000001))
(assert (= var863635 temp255_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp255_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp255_15)))
(assert (= temp255_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp255_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp255_17 #x0000000000000000))
(assert (= var997373 temp255_17))
(assert (= temp255_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp255_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp255_19 #x0000000000000000))
(assert (= var997418 temp255_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp255_20 #x0000000000000000))
(assert (= temp255_21 temp255_20))
(assert (= temp255_22 (select ARGNAME_padding_NAMEEND_VAL temp255_21)))
(assert (= temp255_23 #x0000000000000001))
(assert (= temp255_24 temp255_23))
(assert (= temp255_25 (select ARGNAME_padding_NAMEEND_VAL temp255_24)))
(assert (= temp255_26 #x0000000000000002))
(assert (= temp255_27 temp255_26))
(assert (= temp255_28 (select ARGNAME_padding_NAMEEND_VAL temp255_27)))
(assert (= temp255_29 #x0000000000000003))
(assert (= temp255_30 temp255_29))
(assert (= temp255_31 (select ARGNAME_padding_NAMEEND_VAL temp255_30)))
(assert (= temp255_32 #x0000000000000004))
(assert (= temp255_33 temp255_32))
(assert (= temp255_34 (select ARGNAME_padding_NAMEEND_VAL temp255_33)))
(assert (= temp255_35 #x0000000000000005))
(assert (= temp255_36 temp255_35))
(assert (= temp255_37 (select ARGNAME_padding_NAMEEND_VAL temp255_36)))
(assert (= temp255_38 #x0000000000000000))
(assert (= temp255_39 #x0000000000000000))
(assert (= temp255_40 temp255_39))
(assert (= temp255_41 (select ARGNAME_padding_NAMEEND_VAL temp255_40)))
(assert (= temp255_42 #x0000000000000000))
(assert (= temp255_43 #x0000000000000001))
(assert (= temp255_44 temp255_43))
(assert (= temp255_45 (select ARGNAME_padding_NAMEEND_VAL temp255_44)))
(assert (= temp255_46 #x0000000000000000))
(assert (= temp255_47 #x0000000000000002))
(assert (= temp255_48 temp255_47))
(assert (= temp255_49 (select ARGNAME_padding_NAMEEND_VAL temp255_48)))
(assert (= temp255_50 #x0000000000000000))
(assert (= temp255_51 #x0000000000000003))
(assert (= temp255_52 temp255_51))
(assert (= temp255_53 (select ARGNAME_padding_NAMEEND_VAL temp255_52)))
(assert (= temp255_54 #x0000000000000000))
(assert (= temp255_55 #x0000000000000004))
(assert (= temp255_56 temp255_55))
(assert (= temp255_57 (select ARGNAME_padding_NAMEEND_VAL temp255_56)))
(assert (= temp255_58 #x0000000000000000))
(assert (= temp255_59 #x0000000000000005))
(assert (= temp255_60 temp255_59))
(assert (= temp255_61 (select ARGNAME_padding_NAMEEND_VAL temp255_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp255_41 temp255_38)
             (bvslt temp255_45 temp255_42)
             (bvslt temp255_49 temp255_46)
             (bvslt temp255_53 temp255_50)
             (bvslt temp255_57 temp255_54)
             (bvslt temp255_61 temp255_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp255_62 #x0000000000000000))
(assert (= var1716002 temp255_62))
(assert (= temp255_63 #x0000000000000000))
(assert (= temp255_64 temp255_63))
(assert (= temp255_65 (select ARGNAME_stride_NAMEEND_VAL temp255_64)))
(assert (= temp255_66 #x0000000000000001))
(assert (= temp255_67 temp255_66))
(assert (= temp255_68 (select ARGNAME_stride_NAMEEND_VAL temp255_67)))
(assert (= temp255_69 #x0000000000000002))
(assert (= temp255_70 temp255_69))
(assert (= temp255_71 (select ARGNAME_stride_NAMEEND_VAL temp255_70)))
(assert (= temp255_72 #x0000000000000003))
(assert (= temp255_73 temp255_72))
(assert (= temp255_74 (select ARGNAME_stride_NAMEEND_VAL temp255_73)))
(assert (= temp255_75 #x0000000000000004))
(assert (= temp255_76 temp255_75))
(assert (= temp255_77 (select ARGNAME_stride_NAMEEND_VAL temp255_76)))
(assert (= temp255_78 #x0000000000000005))
(assert (= temp255_79 temp255_78))
(assert (= temp255_80 (select ARGNAME_stride_NAMEEND_VAL temp255_79)))
(assert (= temp255_81 #x0000000000000000))
(assert (= temp255_82 #x0000000000000000))
(assert (= temp255_83 temp255_82))
(assert (= temp255_84 (select ARGNAME_stride_NAMEEND_VAL temp255_83)))
(assert (= temp255_85 #x0000000000000000))
(assert (= temp255_86 #x0000000000000001))
(assert (= temp255_87 temp255_86))
(assert (= temp255_88 (select ARGNAME_stride_NAMEEND_VAL temp255_87)))
(assert (= temp255_89 #x0000000000000000))
(assert (= temp255_90 #x0000000000000002))
(assert (= temp255_91 temp255_90))
(assert (= temp255_92 (select ARGNAME_stride_NAMEEND_VAL temp255_91)))
(assert (= temp255_93 #x0000000000000000))
(assert (= temp255_94 #x0000000000000003))
(assert (= temp255_95 temp255_94))
(assert (= temp255_96 (select ARGNAME_stride_NAMEEND_VAL temp255_95)))
(assert (= temp255_97 #x0000000000000000))
(assert (= temp255_98 #x0000000000000004))
(assert (= temp255_99 temp255_98))
(assert (= temp255_100 (select ARGNAME_stride_NAMEEND_VAL temp255_99)))
(assert (= temp255_101 #x0000000000000000))
(assert (= temp255_102 #x0000000000000005))
(assert (= temp255_103 temp255_102))
(assert (= temp255_104 (select ARGNAME_stride_NAMEEND_VAL temp255_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp255_84 temp255_81)
             (bvsle temp255_88 temp255_85)
             (bvsle temp255_92 temp255_89)
             (bvsle temp255_96 temp255_93)
             (bvsle temp255_100 temp255_97)
             (bvsle temp255_104 temp255_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp255_105 #x0000000000000000))
(assert (= var1716023 temp255_105))
(assert (= temp255_106 #x0000000000000000))
(assert (= var1704114 temp255_106))
(assert (= temp255_107 #x0000000000000000))
(assert (= temp255_108 temp255_107))
(assert (= temp255_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp255_108)))
(assert (= temp255_110 #x0000000000000001))
(assert (= temp255_111 temp255_110))
(assert (= temp255_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp255_111)))
(assert (= temp255_113 #x0000000000000002))
(assert (= temp255_114 temp255_113))
(assert (= temp255_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp255_114)))
(assert (= temp255_116 #x0000000000000003))
(assert (= temp255_117 temp255_116))
(assert (= temp255_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp255_117)))
(assert (= temp255_119 #x0000000000000004))
(assert (= temp255_120 temp255_119))
(assert (= temp255_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp255_120)))
(assert (= temp255_122 #x0000000000000005))
(assert (= temp255_123 temp255_122))
(assert (= temp255_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp255_123)))
(assert (= temp255_126 var1704114))
(assert (= temp255_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp255_126)))
(assert (= temp255_125 temp255_127))
(assert (= var1716068
   (ite (bvslt temp255_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp255_128 #x0000000000000000))
(assert (= var1716068 temp255_128))
(assert (= temp255_129 #x0000000000000000))
(assert (= var1704114 temp255_129))
(assert (= temp255_131 var1704114))
(assert (= temp255_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp255_131)))
(assert (= temp255_130 temp255_132))
(assert (= var1716090 (bvsmod temp255_130 ARGNAME_groups_NAMEEND)))
(assert (= temp255_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp255_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp255_134 #x0000000000000001))
(assert (= var1716091 temp255_134))
(assert (= var1716110 var1716000))
(assert (= temp255_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp255_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp255_136 #x0000000000000001))
(assert (= var1716111 temp255_136))
(assert (= temp255_137 #x0000000000000001))
(assert (= var1705002 temp255_137))
(assert (= temp255_139 var1705002))
(assert (= temp255_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp255_139)))
(assert (= temp255_138 temp255_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp255_138)))
(assert (= temp255_141 #x0000000000000000))
(assert (= var1704114 temp255_141))
(assert (= temp255_143 var1704114))
(assert (= temp255_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp255_143)))
(assert (= temp255_142 temp255_144))
(assert (= temp255_145 #x0000000000000002))
(assert (= var1979241 temp255_145))
(assert (= temp255_146 #x0000000000000001))
(assert (= var1716281 temp255_146))
(assert (= temp255_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp255_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp255_148 #x0000000000000001))
(assert (= var997490 temp255_148))
(assert (= temp255_149 #x0000000000000001))
(assert (= var997620 temp255_149))
(assert (= var3486185 var997620))
(assert (= temp255_150 #x0000000000000000))
(assert (= var3686207 temp255_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp255_151 #x0000000000000002))
(assert (= var3815043 temp255_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4272528 var997633))
(assert (= var998394 var997345))
(assert (= temp255_152 #x0000000000000000))
(assert (= var998395
   (ite (distinct var998394 temp255_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp255_153 #x0000000000000001))
(assert (= var997490 temp255_153))
(model-add temp255_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp255_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp255_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp255_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp255_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp255_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






