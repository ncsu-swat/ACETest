(declare-fun temp858_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp858_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp858_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp858_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp858_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp858_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp858_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp858_8 () (_ BitVec 64))
(declare-fun temp858_10 () (_ BitVec 64))
(declare-fun temp858_9 () (_ BitVec 64))
(declare-fun temp858_12 () (_ BitVec 64))
(declare-fun temp858_11 () (_ BitVec 64))
(declare-fun temp858_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp858_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp858_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp858_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp858_17 () (_ BitVec 64))
(declare-fun temp858_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp858_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp858_20 () (_ BitVec 64))
(declare-fun temp858_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp858_22 () (_ BitVec 64))
(declare-fun temp858_23 () (_ BitVec 64))
(declare-fun temp858_24 () (_ BitVec 64))
(declare-fun temp858_25 () (_ BitVec 64))
(declare-fun temp858_26 () (_ BitVec 64))
(declare-fun temp858_27 () (_ BitVec 64))
(declare-fun temp858_28 () (_ BitVec 64))
(declare-fun temp858_29 () (_ BitVec 64))
(declare-fun temp858_30 () (_ BitVec 64))
(declare-fun temp858_31 () (_ BitVec 64))
(declare-fun temp858_32 () (_ BitVec 64))
(declare-fun temp858_33 () (_ BitVec 64))
(declare-fun temp858_34 () (_ BitVec 64))
(declare-fun temp858_35 () (_ BitVec 64))
(declare-fun temp858_36 () (_ BitVec 64))
(declare-fun temp858_37 () (_ BitVec 64))
(declare-fun temp858_38 () (_ BitVec 64))
(declare-fun temp858_39 () (_ BitVec 64))
(declare-fun temp858_40 () (_ BitVec 64))
(declare-fun temp858_41 () (_ BitVec 64))
(declare-fun temp858_42 () (_ BitVec 64))
(declare-fun temp858_43 () (_ BitVec 64))
(declare-fun temp858_44 () (_ BitVec 64))
(declare-fun temp858_45 () (_ BitVec 64))
(declare-fun temp858_46 () (_ BitVec 64))
(declare-fun temp858_47 () (_ BitVec 64))
(declare-fun temp858_48 () (_ BitVec 64))
(declare-fun temp858_49 () (_ BitVec 64))
(declare-fun temp858_50 () (_ BitVec 64))
(declare-fun temp858_51 () (_ BitVec 64))
(declare-fun temp858_52 () (_ BitVec 64))
(declare-fun temp858_53 () (_ BitVec 64))
(declare-fun temp858_54 () (_ BitVec 64))
(declare-fun temp858_55 () (_ BitVec 64))
(declare-fun temp858_56 () (_ BitVec 64))
(declare-fun temp858_57 () (_ BitVec 64))
(declare-fun temp858_58 () (_ BitVec 64))
(declare-fun temp858_59 () (_ BitVec 64))
(declare-fun temp858_60 () (_ BitVec 64))
(declare-fun temp858_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp858_62 () (_ BitVec 64))
(declare-fun temp858_63 () (_ BitVec 64))
(declare-fun temp858_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp858_65 () (_ BitVec 64))
(declare-fun temp858_66 () (_ BitVec 64))
(declare-fun temp858_67 () (_ BitVec 64))
(declare-fun temp858_68 () (_ BitVec 64))
(declare-fun temp858_69 () (_ BitVec 64))
(declare-fun temp858_70 () (_ BitVec 64))
(declare-fun temp858_71 () (_ BitVec 64))
(declare-fun temp858_72 () (_ BitVec 64))
(declare-fun temp858_73 () (_ BitVec 64))
(declare-fun temp858_74 () (_ BitVec 64))
(declare-fun temp858_75 () (_ BitVec 64))
(declare-fun temp858_76 () (_ BitVec 64))
(declare-fun temp858_77 () (_ BitVec 64))
(declare-fun temp858_78 () (_ BitVec 64))
(declare-fun temp858_79 () (_ BitVec 64))
(declare-fun temp858_80 () (_ BitVec 64))
(declare-fun temp858_81 () (_ BitVec 64))
(declare-fun temp858_82 () (_ BitVec 64))
(declare-fun temp858_83 () (_ BitVec 64))
(declare-fun temp858_84 () (_ BitVec 64))
(declare-fun temp858_85 () (_ BitVec 64))
(declare-fun temp858_86 () (_ BitVec 64))
(declare-fun temp858_87 () (_ BitVec 64))
(declare-fun temp858_88 () (_ BitVec 64))
(declare-fun temp858_89 () (_ BitVec 64))
(declare-fun temp858_90 () (_ BitVec 64))
(declare-fun temp858_91 () (_ BitVec 64))
(declare-fun temp858_92 () (_ BitVec 64))
(declare-fun temp858_93 () (_ BitVec 64))
(declare-fun temp858_94 () (_ BitVec 64))
(declare-fun temp858_95 () (_ BitVec 64))
(declare-fun temp858_96 () (_ BitVec 64))
(declare-fun temp858_97 () (_ BitVec 64))
(declare-fun temp858_98 () (_ BitVec 64))
(declare-fun temp858_99 () (_ BitVec 64))
(declare-fun temp858_100 () (_ BitVec 64))
(declare-fun temp858_101 () (_ BitVec 64))
(declare-fun temp858_102 () (_ BitVec 64))
(declare-fun temp858_103 () (_ BitVec 64))
(declare-fun temp858_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp858_105 () (_ BitVec 64))
(declare-fun temp858_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp858_107 () (_ BitVec 64))
(declare-fun temp858_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp858_109 () (_ BitVec 64))
(declare-fun temp858_110 () (_ BitVec 64))
(declare-fun temp858_111 () (_ BitVec 64))
(declare-fun temp858_112 () (_ BitVec 64))
(declare-fun temp858_113 () (_ BitVec 64))
(declare-fun temp858_114 () (_ BitVec 64))
(declare-fun temp858_115 () (_ BitVec 64))
(declare-fun temp858_116 () (_ BitVec 64))
(declare-fun temp858_117 () (_ BitVec 64))
(declare-fun temp858_118 () (_ BitVec 64))
(declare-fun temp858_119 () (_ BitVec 64))
(declare-fun temp858_120 () (_ BitVec 64))
(declare-fun temp858_121 () (_ BitVec 64))
(declare-fun temp858_122 () (_ BitVec 64))
(declare-fun temp858_123 () (_ BitVec 64))
(declare-fun temp858_124 () (_ BitVec 64))
(declare-fun temp858_126 () (_ BitVec 64))
(declare-fun temp858_127 () (_ BitVec 64))
(declare-fun temp858_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp858_128 () (_ BitVec 64))
(declare-fun temp858_129 () (_ BitVec 64))
(declare-fun temp858_131 () (_ BitVec 64))
(declare-fun temp858_132 () (_ BitVec 64))
(declare-fun temp858_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp858_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp858_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp858_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp858_136 () (_ BitVec 64))
(declare-fun temp858_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp858_139 () (_ BitVec 64))
(declare-fun temp858_140 () (_ BitVec 64))
(declare-fun temp858_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp858_141 () (_ BitVec 64))
(declare-fun temp858_143 () (_ BitVec 64))
(declare-fun temp858_144 () (_ BitVec 64))
(declare-fun temp858_142 () (_ BitVec 64))
(declare-fun temp858_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp858_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp858_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp858_148 () (_ BitVec 64))
(declare-fun temp858_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp858_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp858_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var5058960 () (_ BitVec 64))
(declare-fun temp858_152 () (_ BitVec 64))
(assert (= temp858_1 #x0000000000000001))
(assert (= var465453 temp858_1))
(assert (= temp858_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp858_2)))
(assert (= temp858_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp858_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp858_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp858_4)))
(assert (= temp858_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp858_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp858_6 #x0000000000000000))
(assert (= var465488 temp858_6))
(assert (= temp858_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp858_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp858_8 #x0000000000000001))
(assert (= var465522 temp858_8))
(assert (= temp858_10 #x0000000000000000))
(assert (= temp858_9 temp858_10))
(assert (= temp858_12 #x0000000000000001))
(assert (= temp858_11 temp858_12))
(assert (= temp858_13 #x0000000000000000))
(assert (= var863614 temp858_13))
(assert (= temp858_14 #x0000000000000001))
(assert (= var863635 temp858_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp858_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp858_15)))
(assert (= temp858_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp858_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp858_17 #x0000000000000000))
(assert (= var997373 temp858_17))
(assert (= temp858_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp858_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp858_19 #x0000000000000000))
(assert (= var997418 temp858_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp858_20 #x0000000000000000))
(assert (= temp858_21 temp858_20))
(assert (= temp858_22 (select ARGNAME_padding_NAMEEND_VAL temp858_21)))
(assert (= temp858_23 #x0000000000000001))
(assert (= temp858_24 temp858_23))
(assert (= temp858_25 (select ARGNAME_padding_NAMEEND_VAL temp858_24)))
(assert (= temp858_26 #x0000000000000002))
(assert (= temp858_27 temp858_26))
(assert (= temp858_28 (select ARGNAME_padding_NAMEEND_VAL temp858_27)))
(assert (= temp858_29 #x0000000000000003))
(assert (= temp858_30 temp858_29))
(assert (= temp858_31 (select ARGNAME_padding_NAMEEND_VAL temp858_30)))
(assert (= temp858_32 #x0000000000000004))
(assert (= temp858_33 temp858_32))
(assert (= temp858_34 (select ARGNAME_padding_NAMEEND_VAL temp858_33)))
(assert (= temp858_35 #x0000000000000005))
(assert (= temp858_36 temp858_35))
(assert (= temp858_37 (select ARGNAME_padding_NAMEEND_VAL temp858_36)))
(assert (= temp858_38 #x0000000000000000))
(assert (= temp858_39 #x0000000000000000))
(assert (= temp858_40 temp858_39))
(assert (= temp858_41 (select ARGNAME_padding_NAMEEND_VAL temp858_40)))
(assert (= temp858_42 #x0000000000000000))
(assert (= temp858_43 #x0000000000000001))
(assert (= temp858_44 temp858_43))
(assert (= temp858_45 (select ARGNAME_padding_NAMEEND_VAL temp858_44)))
(assert (= temp858_46 #x0000000000000000))
(assert (= temp858_47 #x0000000000000002))
(assert (= temp858_48 temp858_47))
(assert (= temp858_49 (select ARGNAME_padding_NAMEEND_VAL temp858_48)))
(assert (= temp858_50 #x0000000000000000))
(assert (= temp858_51 #x0000000000000003))
(assert (= temp858_52 temp858_51))
(assert (= temp858_53 (select ARGNAME_padding_NAMEEND_VAL temp858_52)))
(assert (= temp858_54 #x0000000000000000))
(assert (= temp858_55 #x0000000000000004))
(assert (= temp858_56 temp858_55))
(assert (= temp858_57 (select ARGNAME_padding_NAMEEND_VAL temp858_56)))
(assert (= temp858_58 #x0000000000000000))
(assert (= temp858_59 #x0000000000000005))
(assert (= temp858_60 temp858_59))
(assert (= temp858_61 (select ARGNAME_padding_NAMEEND_VAL temp858_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp858_41 temp858_38)
             (bvslt temp858_45 temp858_42)
             (bvslt temp858_49 temp858_46)
             (bvslt temp858_53 temp858_50)
             (bvslt temp858_57 temp858_54)
             (bvslt temp858_61 temp858_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp858_62 #x0000000000000000))
(assert (= var1716002 temp858_62))
(assert (= temp858_63 #x0000000000000000))
(assert (= temp858_64 temp858_63))
(assert (= temp858_65 (select ARGNAME_stride_NAMEEND_VAL temp858_64)))
(assert (= temp858_66 #x0000000000000001))
(assert (= temp858_67 temp858_66))
(assert (= temp858_68 (select ARGNAME_stride_NAMEEND_VAL temp858_67)))
(assert (= temp858_69 #x0000000000000002))
(assert (= temp858_70 temp858_69))
(assert (= temp858_71 (select ARGNAME_stride_NAMEEND_VAL temp858_70)))
(assert (= temp858_72 #x0000000000000003))
(assert (= temp858_73 temp858_72))
(assert (= temp858_74 (select ARGNAME_stride_NAMEEND_VAL temp858_73)))
(assert (= temp858_75 #x0000000000000004))
(assert (= temp858_76 temp858_75))
(assert (= temp858_77 (select ARGNAME_stride_NAMEEND_VAL temp858_76)))
(assert (= temp858_78 #x0000000000000005))
(assert (= temp858_79 temp858_78))
(assert (= temp858_80 (select ARGNAME_stride_NAMEEND_VAL temp858_79)))
(assert (= temp858_81 #x0000000000000000))
(assert (= temp858_82 #x0000000000000000))
(assert (= temp858_83 temp858_82))
(assert (= temp858_84 (select ARGNAME_stride_NAMEEND_VAL temp858_83)))
(assert (= temp858_85 #x0000000000000000))
(assert (= temp858_86 #x0000000000000001))
(assert (= temp858_87 temp858_86))
(assert (= temp858_88 (select ARGNAME_stride_NAMEEND_VAL temp858_87)))
(assert (= temp858_89 #x0000000000000000))
(assert (= temp858_90 #x0000000000000002))
(assert (= temp858_91 temp858_90))
(assert (= temp858_92 (select ARGNAME_stride_NAMEEND_VAL temp858_91)))
(assert (= temp858_93 #x0000000000000000))
(assert (= temp858_94 #x0000000000000003))
(assert (= temp858_95 temp858_94))
(assert (= temp858_96 (select ARGNAME_stride_NAMEEND_VAL temp858_95)))
(assert (= temp858_97 #x0000000000000000))
(assert (= temp858_98 #x0000000000000004))
(assert (= temp858_99 temp858_98))
(assert (= temp858_100 (select ARGNAME_stride_NAMEEND_VAL temp858_99)))
(assert (= temp858_101 #x0000000000000000))
(assert (= temp858_102 #x0000000000000005))
(assert (= temp858_103 temp858_102))
(assert (= temp858_104 (select ARGNAME_stride_NAMEEND_VAL temp858_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp858_84 temp858_81)
             (bvsle temp858_88 temp858_85)
             (bvsle temp858_92 temp858_89)
             (bvsle temp858_96 temp858_93)
             (bvsle temp858_100 temp858_97)
             (bvsle temp858_104 temp858_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp858_105 #x0000000000000000))
(assert (= var1716023 temp858_105))
(assert (= temp858_106 #x0000000000000000))
(assert (= var1704114 temp858_106))
(assert (= temp858_107 #x0000000000000000))
(assert (= temp858_108 temp858_107))
(assert (= temp858_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp858_108)))
(assert (= temp858_110 #x0000000000000001))
(assert (= temp858_111 temp858_110))
(assert (= temp858_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp858_111)))
(assert (= temp858_113 #x0000000000000002))
(assert (= temp858_114 temp858_113))
(assert (= temp858_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp858_114)))
(assert (= temp858_116 #x0000000000000003))
(assert (= temp858_117 temp858_116))
(assert (= temp858_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp858_117)))
(assert (= temp858_119 #x0000000000000004))
(assert (= temp858_120 temp858_119))
(assert (= temp858_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp858_120)))
(assert (= temp858_122 #x0000000000000005))
(assert (= temp858_123 temp858_122))
(assert (= temp858_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp858_123)))
(assert (= temp858_126 var1704114))
(assert (= temp858_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp858_126)))
(assert (= temp858_125 temp858_127))
(assert (= var1716068
   (ite (bvslt temp858_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp858_128 #x0000000000000000))
(assert (= var1716068 temp858_128))
(assert (= temp858_129 #x0000000000000000))
(assert (= var1704114 temp858_129))
(assert (= temp858_131 var1704114))
(assert (= temp858_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp858_131)))
(assert (= temp858_130 temp858_132))
(assert (= var1716090 (bvsmod temp858_130 ARGNAME_groups_NAMEEND)))
(assert (= temp858_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp858_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp858_134 #x0000000000000001))
(assert (= var1716091 temp858_134))
(assert (= var1716110 var1716000))
(assert (= temp858_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp858_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp858_136 #x0000000000000001))
(assert (= var1716111 temp858_136))
(assert (= temp858_137 #x0000000000000001))
(assert (= var1705002 temp858_137))
(assert (= temp858_139 var1705002))
(assert (= temp858_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp858_139)))
(assert (= temp858_138 temp858_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp858_138)))
(assert (= temp858_141 #x0000000000000000))
(assert (= var1704114 temp858_141))
(assert (= temp858_143 var1704114))
(assert (= temp858_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp858_143)))
(assert (= temp858_142 temp858_144))
(assert (= temp858_145 #x0000000000000002))
(assert (= var1979241 temp858_145))
(assert (= temp858_146 #x0000000000000001))
(assert (= var1716281 temp858_146))
(assert (= temp858_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp858_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp858_148 #x0000000000000001))
(assert (= var997490 temp858_148))
(assert (= temp858_149 #x0000000000000001))
(assert (= var997620 temp858_149))
(assert (= var3486185 var997620))
(assert (= temp858_150 #x0000000000000000))
(assert (= var3686207 temp858_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp858_151 #x0000000000000002))
(assert (= var3815043 temp858_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4796816 var997633))
(assert (= var5058960 var997633))
(assert (= temp858_152 #x0000000000000001))
(assert (= var997490 temp858_152))
(model-add temp858_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp858_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp858_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp858_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp858_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp858_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






