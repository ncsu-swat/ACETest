(declare-fun temp690_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp690_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp690_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp690_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp690_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp690_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp690_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp690_8 () (_ BitVec 64))
(declare-fun temp690_10 () (_ BitVec 64))
(declare-fun temp690_9 () (_ BitVec 64))
(declare-fun temp690_12 () (_ BitVec 64))
(declare-fun temp690_11 () (_ BitVec 64))
(declare-fun temp690_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp690_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp690_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp690_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp690_17 () (_ BitVec 64))
(declare-fun temp690_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp690_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp690_20 () (_ BitVec 64))
(declare-fun temp690_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp690_22 () (_ BitVec 64))
(declare-fun temp690_23 () (_ BitVec 64))
(declare-fun temp690_24 () (_ BitVec 64))
(declare-fun temp690_25 () (_ BitVec 64))
(declare-fun temp690_26 () (_ BitVec 64))
(declare-fun temp690_27 () (_ BitVec 64))
(declare-fun temp690_28 () (_ BitVec 64))
(declare-fun temp690_29 () (_ BitVec 64))
(declare-fun temp690_30 () (_ BitVec 64))
(declare-fun temp690_31 () (_ BitVec 64))
(declare-fun temp690_32 () (_ BitVec 64))
(declare-fun temp690_33 () (_ BitVec 64))
(declare-fun temp690_34 () (_ BitVec 64))
(declare-fun temp690_35 () (_ BitVec 64))
(declare-fun temp690_36 () (_ BitVec 64))
(declare-fun temp690_37 () (_ BitVec 64))
(declare-fun temp690_38 () (_ BitVec 64))
(declare-fun temp690_39 () (_ BitVec 64))
(declare-fun temp690_40 () (_ BitVec 64))
(declare-fun temp690_41 () (_ BitVec 64))
(declare-fun temp690_42 () (_ BitVec 64))
(declare-fun temp690_43 () (_ BitVec 64))
(declare-fun temp690_44 () (_ BitVec 64))
(declare-fun temp690_45 () (_ BitVec 64))
(declare-fun temp690_46 () (_ BitVec 64))
(declare-fun temp690_47 () (_ BitVec 64))
(declare-fun temp690_48 () (_ BitVec 64))
(declare-fun temp690_49 () (_ BitVec 64))
(declare-fun temp690_50 () (_ BitVec 64))
(declare-fun temp690_51 () (_ BitVec 64))
(declare-fun temp690_52 () (_ BitVec 64))
(declare-fun temp690_53 () (_ BitVec 64))
(declare-fun temp690_54 () (_ BitVec 64))
(declare-fun temp690_55 () (_ BitVec 64))
(declare-fun temp690_56 () (_ BitVec 64))
(declare-fun temp690_57 () (_ BitVec 64))
(declare-fun temp690_58 () (_ BitVec 64))
(declare-fun temp690_59 () (_ BitVec 64))
(declare-fun temp690_60 () (_ BitVec 64))
(declare-fun temp690_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp690_62 () (_ BitVec 64))
(declare-fun temp690_63 () (_ BitVec 64))
(declare-fun temp690_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp690_65 () (_ BitVec 64))
(declare-fun temp690_66 () (_ BitVec 64))
(declare-fun temp690_67 () (_ BitVec 64))
(declare-fun temp690_68 () (_ BitVec 64))
(declare-fun temp690_69 () (_ BitVec 64))
(declare-fun temp690_70 () (_ BitVec 64))
(declare-fun temp690_71 () (_ BitVec 64))
(declare-fun temp690_72 () (_ BitVec 64))
(declare-fun temp690_73 () (_ BitVec 64))
(declare-fun temp690_74 () (_ BitVec 64))
(declare-fun temp690_75 () (_ BitVec 64))
(declare-fun temp690_76 () (_ BitVec 64))
(declare-fun temp690_77 () (_ BitVec 64))
(declare-fun temp690_78 () (_ BitVec 64))
(declare-fun temp690_79 () (_ BitVec 64))
(declare-fun temp690_80 () (_ BitVec 64))
(declare-fun temp690_81 () (_ BitVec 64))
(declare-fun temp690_82 () (_ BitVec 64))
(declare-fun temp690_83 () (_ BitVec 64))
(declare-fun temp690_84 () (_ BitVec 64))
(declare-fun temp690_85 () (_ BitVec 64))
(declare-fun temp690_86 () (_ BitVec 64))
(declare-fun temp690_87 () (_ BitVec 64))
(declare-fun temp690_88 () (_ BitVec 64))
(declare-fun temp690_89 () (_ BitVec 64))
(declare-fun temp690_90 () (_ BitVec 64))
(declare-fun temp690_91 () (_ BitVec 64))
(declare-fun temp690_92 () (_ BitVec 64))
(declare-fun temp690_93 () (_ BitVec 64))
(declare-fun temp690_94 () (_ BitVec 64))
(declare-fun temp690_95 () (_ BitVec 64))
(declare-fun temp690_96 () (_ BitVec 64))
(declare-fun temp690_97 () (_ BitVec 64))
(declare-fun temp690_98 () (_ BitVec 64))
(declare-fun temp690_99 () (_ BitVec 64))
(declare-fun temp690_100 () (_ BitVec 64))
(declare-fun temp690_101 () (_ BitVec 64))
(declare-fun temp690_102 () (_ BitVec 64))
(declare-fun temp690_103 () (_ BitVec 64))
(declare-fun temp690_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp690_105 () (_ BitVec 64))
(declare-fun temp690_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp690_107 () (_ BitVec 64))
(declare-fun temp690_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp690_109 () (_ BitVec 64))
(declare-fun temp690_110 () (_ BitVec 64))
(declare-fun temp690_111 () (_ BitVec 64))
(declare-fun temp690_112 () (_ BitVec 64))
(declare-fun temp690_113 () (_ BitVec 64))
(declare-fun temp690_114 () (_ BitVec 64))
(declare-fun temp690_115 () (_ BitVec 64))
(declare-fun temp690_116 () (_ BitVec 64))
(declare-fun temp690_117 () (_ BitVec 64))
(declare-fun temp690_118 () (_ BitVec 64))
(declare-fun temp690_119 () (_ BitVec 64))
(declare-fun temp690_120 () (_ BitVec 64))
(declare-fun temp690_121 () (_ BitVec 64))
(declare-fun temp690_122 () (_ BitVec 64))
(declare-fun temp690_123 () (_ BitVec 64))
(declare-fun temp690_124 () (_ BitVec 64))
(declare-fun temp690_126 () (_ BitVec 64))
(declare-fun temp690_127 () (_ BitVec 64))
(declare-fun temp690_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp690_128 () (_ BitVec 64))
(declare-fun temp690_129 () (_ BitVec 64))
(declare-fun temp690_131 () (_ BitVec 64))
(declare-fun temp690_132 () (_ BitVec 64))
(declare-fun temp690_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp690_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp690_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp690_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp690_136 () (_ BitVec 64))
(declare-fun temp690_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp690_139 () (_ BitVec 64))
(declare-fun temp690_140 () (_ BitVec 64))
(declare-fun temp690_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp690_141 () (_ BitVec 64))
(declare-fun temp690_143 () (_ BitVec 64))
(declare-fun temp690_144 () (_ BitVec 64))
(declare-fun temp690_142 () (_ BitVec 64))
(declare-fun temp690_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp690_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp690_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp690_148 () (_ BitVec 64))
(declare-fun temp690_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp690_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp690_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp690_153 () (_ BitVec 64))
(declare-fun temp690_152 () (_ BitVec 64))
(declare-fun temp690_155 () (_ BitVec 64))
(declare-fun temp690_154 () (_ BitVec 64))
(declare-fun temp690_156 () (_ BitVec 64))
(assert (= temp690_1 #x0000000000000001))
(assert (= var465453 temp690_1))
(assert (= temp690_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp690_2)))
(assert (= temp690_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp690_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp690_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp690_4)))
(assert (= temp690_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp690_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp690_6 #x0000000000000000))
(assert (= var465488 temp690_6))
(assert (= temp690_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp690_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp690_8 #x0000000000000001))
(assert (= var465522 temp690_8))
(assert (= temp690_10 #x0000000000000000))
(assert (= temp690_9 temp690_10))
(assert (= temp690_12 #x0000000000000001))
(assert (= temp690_11 temp690_12))
(assert (= temp690_13 #x0000000000000000))
(assert (= var863614 temp690_13))
(assert (= temp690_14 #x0000000000000001))
(assert (= var863635 temp690_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp690_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp690_15)))
(assert (= temp690_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp690_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp690_17 #x0000000000000000))
(assert (= var997373 temp690_17))
(assert (= temp690_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp690_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp690_19 #x0000000000000000))
(assert (= var997418 temp690_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp690_20 #x0000000000000000))
(assert (= temp690_21 temp690_20))
(assert (= temp690_22 (select ARGNAME_padding_NAMEEND_VAL temp690_21)))
(assert (= temp690_23 #x0000000000000001))
(assert (= temp690_24 temp690_23))
(assert (= temp690_25 (select ARGNAME_padding_NAMEEND_VAL temp690_24)))
(assert (= temp690_26 #x0000000000000002))
(assert (= temp690_27 temp690_26))
(assert (= temp690_28 (select ARGNAME_padding_NAMEEND_VAL temp690_27)))
(assert (= temp690_29 #x0000000000000003))
(assert (= temp690_30 temp690_29))
(assert (= temp690_31 (select ARGNAME_padding_NAMEEND_VAL temp690_30)))
(assert (= temp690_32 #x0000000000000004))
(assert (= temp690_33 temp690_32))
(assert (= temp690_34 (select ARGNAME_padding_NAMEEND_VAL temp690_33)))
(assert (= temp690_35 #x0000000000000005))
(assert (= temp690_36 temp690_35))
(assert (= temp690_37 (select ARGNAME_padding_NAMEEND_VAL temp690_36)))
(assert (= temp690_38 #x0000000000000000))
(assert (= temp690_39 #x0000000000000000))
(assert (= temp690_40 temp690_39))
(assert (= temp690_41 (select ARGNAME_padding_NAMEEND_VAL temp690_40)))
(assert (= temp690_42 #x0000000000000000))
(assert (= temp690_43 #x0000000000000001))
(assert (= temp690_44 temp690_43))
(assert (= temp690_45 (select ARGNAME_padding_NAMEEND_VAL temp690_44)))
(assert (= temp690_46 #x0000000000000000))
(assert (= temp690_47 #x0000000000000002))
(assert (= temp690_48 temp690_47))
(assert (= temp690_49 (select ARGNAME_padding_NAMEEND_VAL temp690_48)))
(assert (= temp690_50 #x0000000000000000))
(assert (= temp690_51 #x0000000000000003))
(assert (= temp690_52 temp690_51))
(assert (= temp690_53 (select ARGNAME_padding_NAMEEND_VAL temp690_52)))
(assert (= temp690_54 #x0000000000000000))
(assert (= temp690_55 #x0000000000000004))
(assert (= temp690_56 temp690_55))
(assert (= temp690_57 (select ARGNAME_padding_NAMEEND_VAL temp690_56)))
(assert (= temp690_58 #x0000000000000000))
(assert (= temp690_59 #x0000000000000005))
(assert (= temp690_60 temp690_59))
(assert (= temp690_61 (select ARGNAME_padding_NAMEEND_VAL temp690_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp690_41 temp690_38)
             (bvslt temp690_45 temp690_42)
             (bvslt temp690_49 temp690_46)
             (bvslt temp690_53 temp690_50)
             (bvslt temp690_57 temp690_54)
             (bvslt temp690_61 temp690_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp690_62 #x0000000000000000))
(assert (= var1716002 temp690_62))
(assert (= temp690_63 #x0000000000000000))
(assert (= temp690_64 temp690_63))
(assert (= temp690_65 (select ARGNAME_stride_NAMEEND_VAL temp690_64)))
(assert (= temp690_66 #x0000000000000001))
(assert (= temp690_67 temp690_66))
(assert (= temp690_68 (select ARGNAME_stride_NAMEEND_VAL temp690_67)))
(assert (= temp690_69 #x0000000000000002))
(assert (= temp690_70 temp690_69))
(assert (= temp690_71 (select ARGNAME_stride_NAMEEND_VAL temp690_70)))
(assert (= temp690_72 #x0000000000000003))
(assert (= temp690_73 temp690_72))
(assert (= temp690_74 (select ARGNAME_stride_NAMEEND_VAL temp690_73)))
(assert (= temp690_75 #x0000000000000004))
(assert (= temp690_76 temp690_75))
(assert (= temp690_77 (select ARGNAME_stride_NAMEEND_VAL temp690_76)))
(assert (= temp690_78 #x0000000000000005))
(assert (= temp690_79 temp690_78))
(assert (= temp690_80 (select ARGNAME_stride_NAMEEND_VAL temp690_79)))
(assert (= temp690_81 #x0000000000000000))
(assert (= temp690_82 #x0000000000000000))
(assert (= temp690_83 temp690_82))
(assert (= temp690_84 (select ARGNAME_stride_NAMEEND_VAL temp690_83)))
(assert (= temp690_85 #x0000000000000000))
(assert (= temp690_86 #x0000000000000001))
(assert (= temp690_87 temp690_86))
(assert (= temp690_88 (select ARGNAME_stride_NAMEEND_VAL temp690_87)))
(assert (= temp690_89 #x0000000000000000))
(assert (= temp690_90 #x0000000000000002))
(assert (= temp690_91 temp690_90))
(assert (= temp690_92 (select ARGNAME_stride_NAMEEND_VAL temp690_91)))
(assert (= temp690_93 #x0000000000000000))
(assert (= temp690_94 #x0000000000000003))
(assert (= temp690_95 temp690_94))
(assert (= temp690_96 (select ARGNAME_stride_NAMEEND_VAL temp690_95)))
(assert (= temp690_97 #x0000000000000000))
(assert (= temp690_98 #x0000000000000004))
(assert (= temp690_99 temp690_98))
(assert (= temp690_100 (select ARGNAME_stride_NAMEEND_VAL temp690_99)))
(assert (= temp690_101 #x0000000000000000))
(assert (= temp690_102 #x0000000000000005))
(assert (= temp690_103 temp690_102))
(assert (= temp690_104 (select ARGNAME_stride_NAMEEND_VAL temp690_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp690_84 temp690_81)
             (bvsle temp690_88 temp690_85)
             (bvsle temp690_92 temp690_89)
             (bvsle temp690_96 temp690_93)
             (bvsle temp690_100 temp690_97)
             (bvsle temp690_104 temp690_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp690_105 #x0000000000000000))
(assert (= var1716023 temp690_105))
(assert (= temp690_106 #x0000000000000000))
(assert (= var1704114 temp690_106))
(assert (= temp690_107 #x0000000000000000))
(assert (= temp690_108 temp690_107))
(assert (= temp690_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp690_108)))
(assert (= temp690_110 #x0000000000000001))
(assert (= temp690_111 temp690_110))
(assert (= temp690_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp690_111)))
(assert (= temp690_113 #x0000000000000002))
(assert (= temp690_114 temp690_113))
(assert (= temp690_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp690_114)))
(assert (= temp690_116 #x0000000000000003))
(assert (= temp690_117 temp690_116))
(assert (= temp690_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp690_117)))
(assert (= temp690_119 #x0000000000000004))
(assert (= temp690_120 temp690_119))
(assert (= temp690_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp690_120)))
(assert (= temp690_122 #x0000000000000005))
(assert (= temp690_123 temp690_122))
(assert (= temp690_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp690_123)))
(assert (= temp690_126 var1704114))
(assert (= temp690_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp690_126)))
(assert (= temp690_125 temp690_127))
(assert (= var1716068
   (ite (bvslt temp690_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp690_128 #x0000000000000000))
(assert (= var1716068 temp690_128))
(assert (= temp690_129 #x0000000000000000))
(assert (= var1704114 temp690_129))
(assert (= temp690_131 var1704114))
(assert (= temp690_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp690_131)))
(assert (= temp690_130 temp690_132))
(assert (= var1716090 (bvsmod temp690_130 ARGNAME_groups_NAMEEND)))
(assert (= temp690_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp690_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp690_134 #x0000000000000001))
(assert (= var1716091 temp690_134))
(assert (= var1716110 var1716000))
(assert (= temp690_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp690_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp690_136 #x0000000000000001))
(assert (= var1716111 temp690_136))
(assert (= temp690_137 #x0000000000000001))
(assert (= var1705002 temp690_137))
(assert (= temp690_139 var1705002))
(assert (= temp690_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp690_139)))
(assert (= temp690_138 temp690_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp690_138)))
(assert (= temp690_141 #x0000000000000000))
(assert (= var1704114 temp690_141))
(assert (= temp690_143 var1704114))
(assert (= temp690_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp690_143)))
(assert (= temp690_142 temp690_144))
(assert (= temp690_145 #x0000000000000002))
(assert (= var1979241 temp690_145))
(assert (= temp690_146 #x0000000000000001))
(assert (= var1716281 temp690_146))
(assert (= temp690_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp690_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp690_148 #x0000000000000001))
(assert (= var997490 temp690_148))
(assert (= temp690_149 #x0000000000000001))
(assert (= var997620 temp690_149))
(assert (= var3486185 var997620))
(assert (= temp690_150 #x0000000000000000))
(assert (= var3686207 temp690_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp690_151 #x0000000000000002))
(assert (= var3815043 temp690_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp690_153 #xffffffffffffffff))
(assert (= temp690_152 temp690_153))
(assert (= temp690_155 #xffffffffffffffff))
(assert (= temp690_154 temp690_155))
(assert (= temp690_156 #x0000000000000001))
(assert (= var997490 temp690_156))
(model-add temp690_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp690_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp690_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp690_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp690_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp690_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






