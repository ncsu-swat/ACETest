(declare-fun temp10116_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp10116_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp10116_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp10116_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp10116_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp10116_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp10116_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp10116_8 () (_ BitVec 64))
(declare-fun temp10116_10 () (_ BitVec 64))
(declare-fun temp10116_9 () (_ BitVec 64))
(declare-fun temp10116_12 () (_ BitVec 64))
(declare-fun temp10116_11 () (_ BitVec 64))
(declare-fun temp10116_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp10116_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp10116_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp10116_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp10116_17 () (_ BitVec 64))
(declare-fun temp10116_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp10116_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp10116_20 () (_ BitVec 64))
(declare-fun temp10116_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10116_22 () (_ BitVec 64))
(declare-fun temp10116_23 () (_ BitVec 64))
(declare-fun temp10116_24 () (_ BitVec 64))
(declare-fun temp10116_25 () (_ BitVec 64))
(declare-fun temp10116_26 () (_ BitVec 64))
(declare-fun temp10116_27 () (_ BitVec 64))
(declare-fun temp10116_28 () (_ BitVec 64))
(declare-fun temp10116_29 () (_ BitVec 64))
(declare-fun temp10116_30 () (_ BitVec 64))
(declare-fun temp10116_31 () (_ BitVec 64))
(declare-fun temp10116_32 () (_ BitVec 64))
(declare-fun temp10116_33 () (_ BitVec 64))
(declare-fun temp10116_34 () (_ BitVec 64))
(declare-fun temp10116_35 () (_ BitVec 64))
(declare-fun temp10116_36 () (_ BitVec 64))
(declare-fun temp10116_37 () (_ BitVec 64))
(declare-fun temp10116_38 () (_ BitVec 64))
(declare-fun temp10116_39 () (_ BitVec 64))
(declare-fun temp10116_40 () (_ BitVec 64))
(declare-fun temp10116_41 () (_ BitVec 64))
(declare-fun temp10116_42 () (_ BitVec 64))
(declare-fun temp10116_43 () (_ BitVec 64))
(declare-fun temp10116_44 () (_ BitVec 64))
(declare-fun temp10116_45 () (_ BitVec 64))
(declare-fun temp10116_46 () (_ BitVec 64))
(declare-fun temp10116_47 () (_ BitVec 64))
(declare-fun temp10116_48 () (_ BitVec 64))
(declare-fun temp10116_49 () (_ BitVec 64))
(declare-fun temp10116_50 () (_ BitVec 64))
(declare-fun temp10116_51 () (_ BitVec 64))
(declare-fun temp10116_52 () (_ BitVec 64))
(declare-fun temp10116_53 () (_ BitVec 64))
(declare-fun temp10116_54 () (_ BitVec 64))
(declare-fun temp10116_55 () (_ BitVec 64))
(declare-fun temp10116_56 () (_ BitVec 64))
(declare-fun temp10116_57 () (_ BitVec 64))
(declare-fun temp10116_58 () (_ BitVec 64))
(declare-fun temp10116_59 () (_ BitVec 64))
(declare-fun temp10116_60 () (_ BitVec 64))
(declare-fun temp10116_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp10116_62 () (_ BitVec 64))
(declare-fun temp10116_63 () (_ BitVec 64))
(declare-fun temp10116_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10116_65 () (_ BitVec 64))
(declare-fun temp10116_66 () (_ BitVec 64))
(declare-fun temp10116_67 () (_ BitVec 64))
(declare-fun temp10116_68 () (_ BitVec 64))
(declare-fun temp10116_69 () (_ BitVec 64))
(declare-fun temp10116_70 () (_ BitVec 64))
(declare-fun temp10116_71 () (_ BitVec 64))
(declare-fun temp10116_72 () (_ BitVec 64))
(declare-fun temp10116_73 () (_ BitVec 64))
(declare-fun temp10116_74 () (_ BitVec 64))
(declare-fun temp10116_75 () (_ BitVec 64))
(declare-fun temp10116_76 () (_ BitVec 64))
(declare-fun temp10116_77 () (_ BitVec 64))
(declare-fun temp10116_78 () (_ BitVec 64))
(declare-fun temp10116_79 () (_ BitVec 64))
(declare-fun temp10116_80 () (_ BitVec 64))
(declare-fun temp10116_81 () (_ BitVec 64))
(declare-fun temp10116_82 () (_ BitVec 64))
(declare-fun temp10116_83 () (_ BitVec 64))
(declare-fun temp10116_84 () (_ BitVec 64))
(declare-fun temp10116_85 () (_ BitVec 64))
(declare-fun temp10116_86 () (_ BitVec 64))
(declare-fun temp10116_87 () (_ BitVec 64))
(declare-fun temp10116_88 () (_ BitVec 64))
(declare-fun temp10116_89 () (_ BitVec 64))
(declare-fun temp10116_90 () (_ BitVec 64))
(declare-fun temp10116_91 () (_ BitVec 64))
(declare-fun temp10116_92 () (_ BitVec 64))
(declare-fun temp10116_93 () (_ BitVec 64))
(declare-fun temp10116_94 () (_ BitVec 64))
(declare-fun temp10116_95 () (_ BitVec 64))
(declare-fun temp10116_96 () (_ BitVec 64))
(declare-fun temp10116_97 () (_ BitVec 64))
(declare-fun temp10116_98 () (_ BitVec 64))
(declare-fun temp10116_99 () (_ BitVec 64))
(declare-fun temp10116_100 () (_ BitVec 64))
(declare-fun temp10116_101 () (_ BitVec 64))
(declare-fun temp10116_102 () (_ BitVec 64))
(declare-fun temp10116_103 () (_ BitVec 64))
(declare-fun temp10116_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp10116_105 () (_ BitVec 64))
(declare-fun temp10116_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp10116_107 () (_ BitVec 64))
(declare-fun temp10116_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10116_109 () (_ BitVec 64))
(declare-fun temp10116_110 () (_ BitVec 64))
(declare-fun temp10116_111 () (_ BitVec 64))
(declare-fun temp10116_112 () (_ BitVec 64))
(declare-fun temp10116_113 () (_ BitVec 64))
(declare-fun temp10116_114 () (_ BitVec 64))
(declare-fun temp10116_115 () (_ BitVec 64))
(declare-fun temp10116_116 () (_ BitVec 64))
(declare-fun temp10116_117 () (_ BitVec 64))
(declare-fun temp10116_118 () (_ BitVec 64))
(declare-fun temp10116_119 () (_ BitVec 64))
(declare-fun temp10116_120 () (_ BitVec 64))
(declare-fun temp10116_121 () (_ BitVec 64))
(declare-fun temp10116_122 () (_ BitVec 64))
(declare-fun temp10116_123 () (_ BitVec 64))
(declare-fun temp10116_124 () (_ BitVec 64))
(declare-fun temp10116_126 () (_ BitVec 64))
(declare-fun temp10116_127 () (_ BitVec 64))
(declare-fun temp10116_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp10116_128 () (_ BitVec 64))
(declare-fun temp10116_129 () (_ BitVec 64))
(declare-fun temp10116_131 () (_ BitVec 64))
(declare-fun temp10116_132 () (_ BitVec 64))
(declare-fun temp10116_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp10116_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp10116_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp10116_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp10116_136 () (_ BitVec 64))
(declare-fun temp10116_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp10116_139 () (_ BitVec 64))
(declare-fun temp10116_140 () (_ BitVec 64))
(declare-fun temp10116_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp10116_141 () (_ BitVec 64))
(declare-fun temp10116_143 () (_ BitVec 64))
(declare-fun temp10116_144 () (_ BitVec 64))
(declare-fun temp10116_142 () (_ BitVec 64))
(declare-fun temp10116_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp10116_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp10116_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp10116_148 () (_ BitVec 64))
(declare-fun temp10116_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp10116_150 () (_ BitVec 64))
(declare-fun var3486352 () (_ BitVec 64))
(declare-fun var3486179 () (_ BitVec 64))
(declare-fun var997629 () (_ BitVec 64))
(declare-fun var3751705 () (_ BitVec 64))
(declare-fun temp10116_151 () (_ BitVec 64))
(declare-fun temp10116_152 () (_ BitVec 64))
(declare-fun temp10116_153 () (_ BitVec 64))
(declare-fun var3946115 () (_ BitVec 64))
(declare-fun var3946117 () (_ BitVec 64))
(declare-fun var4011660 () (_ BitVec 64))
(declare-fun var4011661 () (_ BitVec 64))
(declare-fun temp10116_154 () (_ BitVec 64))
(declare-fun var997820 () (_ BitVec 64))
(declare-fun temp10116_155 () (_ BitVec 64))
(declare-fun var997821 () (_ BitVec 64))
(declare-fun var5324621 () (_ BitVec 64))
(declare-fun temp10116_157 () (_ BitVec 64))
(declare-fun temp10116_156 () (_ BitVec 64))
(declare-fun temp10116_158 () (_ BitVec 64))
(declare-fun var5901802 () (_ BitVec 64))
(declare-fun temp10116_160 () (_ BitVec 64))
(declare-fun temp10116_159 () (_ BitVec 64))
(declare-fun temp10116_161 () (_ BitVec 64))
(assert (= temp10116_1 #x0000000000000001))
(assert (= var465453 temp10116_1))
(assert (= temp10116_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp10116_2)))
(assert (= temp10116_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp10116_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp10116_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp10116_4)))
(assert (= temp10116_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp10116_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp10116_6 #x0000000000000000))
(assert (= var465488 temp10116_6))
(assert (= temp10116_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp10116_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp10116_8 #x0000000000000001))
(assert (= var465522 temp10116_8))
(assert (= temp10116_10 #x0000000000000000))
(assert (= temp10116_9 temp10116_10))
(assert (= temp10116_12 #x0000000000000001))
(assert (= temp10116_11 temp10116_12))
(assert (= temp10116_13 #x0000000000000000))
(assert (= var863614 temp10116_13))
(assert (= temp10116_14 #x0000000000000001))
(assert (= var863635 temp10116_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp10116_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp10116_15)))
(assert (= temp10116_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10116_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10116_17 #x0000000000000000))
(assert (= var997373 temp10116_17))
(assert (= temp10116_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp10116_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10116_19 #x0000000000000000))
(assert (= var997418 temp10116_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp10116_20 #x0000000000000000))
(assert (= temp10116_21 temp10116_20))
(assert (= temp10116_22 (select ARGNAME_padding_NAMEEND_VAL temp10116_21)))
(assert (= temp10116_23 #x0000000000000001))
(assert (= temp10116_24 temp10116_23))
(assert (= temp10116_25 (select ARGNAME_padding_NAMEEND_VAL temp10116_24)))
(assert (= temp10116_26 #x0000000000000002))
(assert (= temp10116_27 temp10116_26))
(assert (= temp10116_28 (select ARGNAME_padding_NAMEEND_VAL temp10116_27)))
(assert (= temp10116_29 #x0000000000000003))
(assert (= temp10116_30 temp10116_29))
(assert (= temp10116_31 (select ARGNAME_padding_NAMEEND_VAL temp10116_30)))
(assert (= temp10116_32 #x0000000000000004))
(assert (= temp10116_33 temp10116_32))
(assert (= temp10116_34 (select ARGNAME_padding_NAMEEND_VAL temp10116_33)))
(assert (= temp10116_35 #x0000000000000005))
(assert (= temp10116_36 temp10116_35))
(assert (= temp10116_37 (select ARGNAME_padding_NAMEEND_VAL temp10116_36)))
(assert (= temp10116_38 #x0000000000000000))
(assert (= temp10116_39 #x0000000000000000))
(assert (= temp10116_40 temp10116_39))
(assert (= temp10116_41 (select ARGNAME_padding_NAMEEND_VAL temp10116_40)))
(assert (= temp10116_42 #x0000000000000000))
(assert (= temp10116_43 #x0000000000000001))
(assert (= temp10116_44 temp10116_43))
(assert (= temp10116_45 (select ARGNAME_padding_NAMEEND_VAL temp10116_44)))
(assert (= temp10116_46 #x0000000000000000))
(assert (= temp10116_47 #x0000000000000002))
(assert (= temp10116_48 temp10116_47))
(assert (= temp10116_49 (select ARGNAME_padding_NAMEEND_VAL temp10116_48)))
(assert (= temp10116_50 #x0000000000000000))
(assert (= temp10116_51 #x0000000000000003))
(assert (= temp10116_52 temp10116_51))
(assert (= temp10116_53 (select ARGNAME_padding_NAMEEND_VAL temp10116_52)))
(assert (= temp10116_54 #x0000000000000000))
(assert (= temp10116_55 #x0000000000000004))
(assert (= temp10116_56 temp10116_55))
(assert (= temp10116_57 (select ARGNAME_padding_NAMEEND_VAL temp10116_56)))
(assert (= temp10116_58 #x0000000000000000))
(assert (= temp10116_59 #x0000000000000005))
(assert (= temp10116_60 temp10116_59))
(assert (= temp10116_61 (select ARGNAME_padding_NAMEEND_VAL temp10116_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp10116_41 temp10116_38)
             (bvslt temp10116_45 temp10116_42)
             (bvslt temp10116_49 temp10116_46)
             (bvslt temp10116_53 temp10116_50)
             (bvslt temp10116_57 temp10116_54)
             (bvslt temp10116_61 temp10116_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10116_62 #x0000000000000000))
(assert (= var1716002 temp10116_62))
(assert (= temp10116_63 #x0000000000000000))
(assert (= temp10116_64 temp10116_63))
(assert (= temp10116_65 (select ARGNAME_stride_NAMEEND_VAL temp10116_64)))
(assert (= temp10116_66 #x0000000000000001))
(assert (= temp10116_67 temp10116_66))
(assert (= temp10116_68 (select ARGNAME_stride_NAMEEND_VAL temp10116_67)))
(assert (= temp10116_69 #x0000000000000002))
(assert (= temp10116_70 temp10116_69))
(assert (= temp10116_71 (select ARGNAME_stride_NAMEEND_VAL temp10116_70)))
(assert (= temp10116_72 #x0000000000000003))
(assert (= temp10116_73 temp10116_72))
(assert (= temp10116_74 (select ARGNAME_stride_NAMEEND_VAL temp10116_73)))
(assert (= temp10116_75 #x0000000000000004))
(assert (= temp10116_76 temp10116_75))
(assert (= temp10116_77 (select ARGNAME_stride_NAMEEND_VAL temp10116_76)))
(assert (= temp10116_78 #x0000000000000005))
(assert (= temp10116_79 temp10116_78))
(assert (= temp10116_80 (select ARGNAME_stride_NAMEEND_VAL temp10116_79)))
(assert (= temp10116_81 #x0000000000000000))
(assert (= temp10116_82 #x0000000000000000))
(assert (= temp10116_83 temp10116_82))
(assert (= temp10116_84 (select ARGNAME_stride_NAMEEND_VAL temp10116_83)))
(assert (= temp10116_85 #x0000000000000000))
(assert (= temp10116_86 #x0000000000000001))
(assert (= temp10116_87 temp10116_86))
(assert (= temp10116_88 (select ARGNAME_stride_NAMEEND_VAL temp10116_87)))
(assert (= temp10116_89 #x0000000000000000))
(assert (= temp10116_90 #x0000000000000002))
(assert (= temp10116_91 temp10116_90))
(assert (= temp10116_92 (select ARGNAME_stride_NAMEEND_VAL temp10116_91)))
(assert (= temp10116_93 #x0000000000000000))
(assert (= temp10116_94 #x0000000000000003))
(assert (= temp10116_95 temp10116_94))
(assert (= temp10116_96 (select ARGNAME_stride_NAMEEND_VAL temp10116_95)))
(assert (= temp10116_97 #x0000000000000000))
(assert (= temp10116_98 #x0000000000000004))
(assert (= temp10116_99 temp10116_98))
(assert (= temp10116_100 (select ARGNAME_stride_NAMEEND_VAL temp10116_99)))
(assert (= temp10116_101 #x0000000000000000))
(assert (= temp10116_102 #x0000000000000005))
(assert (= temp10116_103 temp10116_102))
(assert (= temp10116_104 (select ARGNAME_stride_NAMEEND_VAL temp10116_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp10116_84 temp10116_81)
             (bvsle temp10116_88 temp10116_85)
             (bvsle temp10116_92 temp10116_89)
             (bvsle temp10116_96 temp10116_93)
             (bvsle temp10116_100 temp10116_97)
             (bvsle temp10116_104 temp10116_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10116_105 #x0000000000000000))
(assert (= var1716023 temp10116_105))
(assert (= temp10116_106 #x0000000000000000))
(assert (= var1704114 temp10116_106))
(assert (= temp10116_107 #x0000000000000000))
(assert (= temp10116_108 temp10116_107))
(assert (= temp10116_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10116_108)))
(assert (= temp10116_110 #x0000000000000001))
(assert (= temp10116_111 temp10116_110))
(assert (= temp10116_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10116_111)))
(assert (= temp10116_113 #x0000000000000002))
(assert (= temp10116_114 temp10116_113))
(assert (= temp10116_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10116_114)))
(assert (= temp10116_116 #x0000000000000003))
(assert (= temp10116_117 temp10116_116))
(assert (= temp10116_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10116_117)))
(assert (= temp10116_119 #x0000000000000004))
(assert (= temp10116_120 temp10116_119))
(assert (= temp10116_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10116_120)))
(assert (= temp10116_122 #x0000000000000005))
(assert (= temp10116_123 temp10116_122))
(assert (= temp10116_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10116_123)))
(assert (= temp10116_126 var1704114))
(assert (= temp10116_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10116_126)))
(assert (= temp10116_125 temp10116_127))
(assert (= var1716068
   (ite (bvslt temp10116_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10116_128 #x0000000000000000))
(assert (= var1716068 temp10116_128))
(assert (= temp10116_129 #x0000000000000000))
(assert (= var1704114 temp10116_129))
(assert (= temp10116_131 var1704114))
(assert (= temp10116_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10116_131)))
(assert (= temp10116_130 temp10116_132))
(assert (= var1716090 (bvsmod temp10116_130 ARGNAME_groups_NAMEEND)))
(assert (= temp10116_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp10116_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp10116_134 #x0000000000000001))
(assert (= var1716091 temp10116_134))
(assert (= var1716110 var1716000))
(assert (= temp10116_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp10116_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp10116_136 #x0000000000000001))
(assert (= var1716111 temp10116_136))
(assert (= temp10116_137 #x0000000000000001))
(assert (= var1705002 temp10116_137))
(assert (= temp10116_139 var1705002))
(assert (= temp10116_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10116_139)))
(assert (= temp10116_138 temp10116_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp10116_138)))
(assert (= temp10116_141 #x0000000000000000))
(assert (= var1704114 temp10116_141))
(assert (= temp10116_143 var1704114))
(assert (= temp10116_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10116_143)))
(assert (= temp10116_142 temp10116_144))
(assert (= temp10116_145 #x0000000000000002))
(assert (= var1979241 temp10116_145))
(assert (= temp10116_146 #x0000000000000001))
(assert (= var1716281 temp10116_146))
(assert (= temp10116_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10116_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10116_148 #x0000000000000001))
(assert (= var997490 temp10116_148))
(assert (= temp10116_149 #x0000000000000001))
(assert (= var997620 temp10116_149))
(assert (= var3486185 var997620))
(assert (= temp10116_150 #x0000000000000002))
(assert (= var3486352 temp10116_150))
(assert (= var3486179 var3486352))
(assert (= var997629 var3486179))
(assert (= var3751705 var997629))
(assert (= temp10116_151 #x0000000000000002))
(assert (= temp10116_152 #x0000000000000003))
(assert (or false (= var3751705 temp10116_151) (= var3751705 temp10116_152)))
(assert (= temp10116_153 #x0000000000000002))
(assert (= var3946115 temp10116_153))
(assert (= var3946117 (bvsub ARGNAME_weight_NAMEEND_DIM var3946115)))
(assert (= var4011660 var3946115))
(assert (= var4011661 var3946117))
(assert (= temp10116_154 #x0000000000000002))
(assert (or false (= var997629 temp10116_154)))
(assert (= var997820 var997345))
(assert (= temp10116_155 #x0000000000000000))
(assert (= var997821
   (ite (distinct var997820 temp10116_155)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var5324621 var997821))
(assert (= temp10116_157 #x0000000000000001))
(assert (= temp10116_156 temp10116_157))
(assert (= temp10116_158 #x0000000000000001))
(assert (= var5901802 temp10116_158))
(assert (= temp10116_160 #xffffffffffffffff))
(assert (= temp10116_159 temp10116_160))
(assert (= temp10116_161 #x0000000000000001))
(assert (= var997490 temp10116_161))
(model-add temp10116_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp10116_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp10116_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp10116_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp10116_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp10116_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






