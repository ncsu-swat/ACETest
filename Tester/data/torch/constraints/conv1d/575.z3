(declare-fun temp765_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp765_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp765_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp765_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp765_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp765_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp765_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp765_8 () (_ BitVec 64))
(declare-fun temp765_10 () (_ BitVec 64))
(declare-fun temp765_9 () (_ BitVec 64))
(declare-fun temp765_12 () (_ BitVec 64))
(declare-fun temp765_11 () (_ BitVec 64))
(declare-fun temp765_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp765_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp765_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp765_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp765_17 () (_ BitVec 64))
(declare-fun temp765_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp765_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp765_20 () (_ BitVec 64))
(declare-fun temp765_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp765_22 () (_ BitVec 64))
(declare-fun temp765_23 () (_ BitVec 64))
(declare-fun temp765_24 () (_ BitVec 64))
(declare-fun temp765_25 () (_ BitVec 64))
(declare-fun temp765_26 () (_ BitVec 64))
(declare-fun temp765_27 () (_ BitVec 64))
(declare-fun temp765_28 () (_ BitVec 64))
(declare-fun temp765_29 () (_ BitVec 64))
(declare-fun temp765_30 () (_ BitVec 64))
(declare-fun temp765_31 () (_ BitVec 64))
(declare-fun temp765_32 () (_ BitVec 64))
(declare-fun temp765_33 () (_ BitVec 64))
(declare-fun temp765_34 () (_ BitVec 64))
(declare-fun temp765_35 () (_ BitVec 64))
(declare-fun temp765_36 () (_ BitVec 64))
(declare-fun temp765_37 () (_ BitVec 64))
(declare-fun temp765_38 () (_ BitVec 64))
(declare-fun temp765_39 () (_ BitVec 64))
(declare-fun temp765_40 () (_ BitVec 64))
(declare-fun temp765_41 () (_ BitVec 64))
(declare-fun temp765_42 () (_ BitVec 64))
(declare-fun temp765_43 () (_ BitVec 64))
(declare-fun temp765_44 () (_ BitVec 64))
(declare-fun temp765_45 () (_ BitVec 64))
(declare-fun temp765_46 () (_ BitVec 64))
(declare-fun temp765_47 () (_ BitVec 64))
(declare-fun temp765_48 () (_ BitVec 64))
(declare-fun temp765_49 () (_ BitVec 64))
(declare-fun temp765_50 () (_ BitVec 64))
(declare-fun temp765_51 () (_ BitVec 64))
(declare-fun temp765_52 () (_ BitVec 64))
(declare-fun temp765_53 () (_ BitVec 64))
(declare-fun temp765_54 () (_ BitVec 64))
(declare-fun temp765_55 () (_ BitVec 64))
(declare-fun temp765_56 () (_ BitVec 64))
(declare-fun temp765_57 () (_ BitVec 64))
(declare-fun temp765_58 () (_ BitVec 64))
(declare-fun temp765_59 () (_ BitVec 64))
(declare-fun temp765_60 () (_ BitVec 64))
(declare-fun temp765_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp765_62 () (_ BitVec 64))
(declare-fun temp765_63 () (_ BitVec 64))
(declare-fun temp765_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp765_65 () (_ BitVec 64))
(declare-fun temp765_66 () (_ BitVec 64))
(declare-fun temp765_67 () (_ BitVec 64))
(declare-fun temp765_68 () (_ BitVec 64))
(declare-fun temp765_69 () (_ BitVec 64))
(declare-fun temp765_70 () (_ BitVec 64))
(declare-fun temp765_71 () (_ BitVec 64))
(declare-fun temp765_72 () (_ BitVec 64))
(declare-fun temp765_73 () (_ BitVec 64))
(declare-fun temp765_74 () (_ BitVec 64))
(declare-fun temp765_75 () (_ BitVec 64))
(declare-fun temp765_76 () (_ BitVec 64))
(declare-fun temp765_77 () (_ BitVec 64))
(declare-fun temp765_78 () (_ BitVec 64))
(declare-fun temp765_79 () (_ BitVec 64))
(declare-fun temp765_80 () (_ BitVec 64))
(declare-fun temp765_81 () (_ BitVec 64))
(declare-fun temp765_82 () (_ BitVec 64))
(declare-fun temp765_83 () (_ BitVec 64))
(declare-fun temp765_84 () (_ BitVec 64))
(declare-fun temp765_85 () (_ BitVec 64))
(declare-fun temp765_86 () (_ BitVec 64))
(declare-fun temp765_87 () (_ BitVec 64))
(declare-fun temp765_88 () (_ BitVec 64))
(declare-fun temp765_89 () (_ BitVec 64))
(declare-fun temp765_90 () (_ BitVec 64))
(declare-fun temp765_91 () (_ BitVec 64))
(declare-fun temp765_92 () (_ BitVec 64))
(declare-fun temp765_93 () (_ BitVec 64))
(declare-fun temp765_94 () (_ BitVec 64))
(declare-fun temp765_95 () (_ BitVec 64))
(declare-fun temp765_96 () (_ BitVec 64))
(declare-fun temp765_97 () (_ BitVec 64))
(declare-fun temp765_98 () (_ BitVec 64))
(declare-fun temp765_99 () (_ BitVec 64))
(declare-fun temp765_100 () (_ BitVec 64))
(declare-fun temp765_101 () (_ BitVec 64))
(declare-fun temp765_102 () (_ BitVec 64))
(declare-fun temp765_103 () (_ BitVec 64))
(declare-fun temp765_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp765_105 () (_ BitVec 64))
(declare-fun temp765_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp765_107 () (_ BitVec 64))
(declare-fun temp765_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp765_109 () (_ BitVec 64))
(declare-fun temp765_110 () (_ BitVec 64))
(declare-fun temp765_111 () (_ BitVec 64))
(declare-fun temp765_112 () (_ BitVec 64))
(declare-fun temp765_113 () (_ BitVec 64))
(declare-fun temp765_114 () (_ BitVec 64))
(declare-fun temp765_115 () (_ BitVec 64))
(declare-fun temp765_116 () (_ BitVec 64))
(declare-fun temp765_117 () (_ BitVec 64))
(declare-fun temp765_118 () (_ BitVec 64))
(declare-fun temp765_119 () (_ BitVec 64))
(declare-fun temp765_120 () (_ BitVec 64))
(declare-fun temp765_121 () (_ BitVec 64))
(declare-fun temp765_122 () (_ BitVec 64))
(declare-fun temp765_123 () (_ BitVec 64))
(declare-fun temp765_124 () (_ BitVec 64))
(declare-fun temp765_126 () (_ BitVec 64))
(declare-fun temp765_127 () (_ BitVec 64))
(declare-fun temp765_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp765_128 () (_ BitVec 64))
(declare-fun temp765_129 () (_ BitVec 64))
(declare-fun temp765_131 () (_ BitVec 64))
(declare-fun temp765_132 () (_ BitVec 64))
(declare-fun temp765_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp765_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp765_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp765_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp765_136 () (_ BitVec 64))
(declare-fun temp765_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp765_139 () (_ BitVec 64))
(declare-fun temp765_140 () (_ BitVec 64))
(declare-fun temp765_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp765_141 () (_ BitVec 64))
(declare-fun temp765_143 () (_ BitVec 64))
(declare-fun temp765_144 () (_ BitVec 64))
(declare-fun temp765_142 () (_ BitVec 64))
(declare-fun temp765_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp765_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp765_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp765_148 () (_ BitVec 64))
(declare-fun temp765_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp765_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp765_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp765_153 () (_ BitVec 64))
(declare-fun temp765_152 () (_ BitVec 64))
(declare-fun temp765_154 () (_ BitVec 64))
(assert (= temp765_1 #x0000000000000001))
(assert (= var465453 temp765_1))
(assert (= temp765_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp765_2)))
(assert (= temp765_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp765_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp765_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp765_4)))
(assert (= temp765_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp765_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp765_6 #x0000000000000000))
(assert (= var465488 temp765_6))
(assert (= temp765_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp765_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp765_8 #x0000000000000001))
(assert (= var465522 temp765_8))
(assert (= temp765_10 #x0000000000000000))
(assert (= temp765_9 temp765_10))
(assert (= temp765_12 #x0000000000000001))
(assert (= temp765_11 temp765_12))
(assert (= temp765_13 #x0000000000000000))
(assert (= var863614 temp765_13))
(assert (= temp765_14 #x0000000000000001))
(assert (= var863635 temp765_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp765_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp765_15)))
(assert (= temp765_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp765_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp765_17 #x0000000000000000))
(assert (= var997373 temp765_17))
(assert (= temp765_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp765_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp765_19 #x0000000000000000))
(assert (= var997418 temp765_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp765_20 #x0000000000000000))
(assert (= temp765_21 temp765_20))
(assert (= temp765_22 (select ARGNAME_padding_NAMEEND_VAL temp765_21)))
(assert (= temp765_23 #x0000000000000001))
(assert (= temp765_24 temp765_23))
(assert (= temp765_25 (select ARGNAME_padding_NAMEEND_VAL temp765_24)))
(assert (= temp765_26 #x0000000000000002))
(assert (= temp765_27 temp765_26))
(assert (= temp765_28 (select ARGNAME_padding_NAMEEND_VAL temp765_27)))
(assert (= temp765_29 #x0000000000000003))
(assert (= temp765_30 temp765_29))
(assert (= temp765_31 (select ARGNAME_padding_NAMEEND_VAL temp765_30)))
(assert (= temp765_32 #x0000000000000004))
(assert (= temp765_33 temp765_32))
(assert (= temp765_34 (select ARGNAME_padding_NAMEEND_VAL temp765_33)))
(assert (= temp765_35 #x0000000000000005))
(assert (= temp765_36 temp765_35))
(assert (= temp765_37 (select ARGNAME_padding_NAMEEND_VAL temp765_36)))
(assert (= temp765_38 #x0000000000000000))
(assert (= temp765_39 #x0000000000000000))
(assert (= temp765_40 temp765_39))
(assert (= temp765_41 (select ARGNAME_padding_NAMEEND_VAL temp765_40)))
(assert (= temp765_42 #x0000000000000000))
(assert (= temp765_43 #x0000000000000001))
(assert (= temp765_44 temp765_43))
(assert (= temp765_45 (select ARGNAME_padding_NAMEEND_VAL temp765_44)))
(assert (= temp765_46 #x0000000000000000))
(assert (= temp765_47 #x0000000000000002))
(assert (= temp765_48 temp765_47))
(assert (= temp765_49 (select ARGNAME_padding_NAMEEND_VAL temp765_48)))
(assert (= temp765_50 #x0000000000000000))
(assert (= temp765_51 #x0000000000000003))
(assert (= temp765_52 temp765_51))
(assert (= temp765_53 (select ARGNAME_padding_NAMEEND_VAL temp765_52)))
(assert (= temp765_54 #x0000000000000000))
(assert (= temp765_55 #x0000000000000004))
(assert (= temp765_56 temp765_55))
(assert (= temp765_57 (select ARGNAME_padding_NAMEEND_VAL temp765_56)))
(assert (= temp765_58 #x0000000000000000))
(assert (= temp765_59 #x0000000000000005))
(assert (= temp765_60 temp765_59))
(assert (= temp765_61 (select ARGNAME_padding_NAMEEND_VAL temp765_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp765_41 temp765_38)
             (bvslt temp765_45 temp765_42)
             (bvslt temp765_49 temp765_46)
             (bvslt temp765_53 temp765_50)
             (bvslt temp765_57 temp765_54)
             (bvslt temp765_61 temp765_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp765_62 #x0000000000000000))
(assert (= var1716002 temp765_62))
(assert (= temp765_63 #x0000000000000000))
(assert (= temp765_64 temp765_63))
(assert (= temp765_65 (select ARGNAME_stride_NAMEEND_VAL temp765_64)))
(assert (= temp765_66 #x0000000000000001))
(assert (= temp765_67 temp765_66))
(assert (= temp765_68 (select ARGNAME_stride_NAMEEND_VAL temp765_67)))
(assert (= temp765_69 #x0000000000000002))
(assert (= temp765_70 temp765_69))
(assert (= temp765_71 (select ARGNAME_stride_NAMEEND_VAL temp765_70)))
(assert (= temp765_72 #x0000000000000003))
(assert (= temp765_73 temp765_72))
(assert (= temp765_74 (select ARGNAME_stride_NAMEEND_VAL temp765_73)))
(assert (= temp765_75 #x0000000000000004))
(assert (= temp765_76 temp765_75))
(assert (= temp765_77 (select ARGNAME_stride_NAMEEND_VAL temp765_76)))
(assert (= temp765_78 #x0000000000000005))
(assert (= temp765_79 temp765_78))
(assert (= temp765_80 (select ARGNAME_stride_NAMEEND_VAL temp765_79)))
(assert (= temp765_81 #x0000000000000000))
(assert (= temp765_82 #x0000000000000000))
(assert (= temp765_83 temp765_82))
(assert (= temp765_84 (select ARGNAME_stride_NAMEEND_VAL temp765_83)))
(assert (= temp765_85 #x0000000000000000))
(assert (= temp765_86 #x0000000000000001))
(assert (= temp765_87 temp765_86))
(assert (= temp765_88 (select ARGNAME_stride_NAMEEND_VAL temp765_87)))
(assert (= temp765_89 #x0000000000000000))
(assert (= temp765_90 #x0000000000000002))
(assert (= temp765_91 temp765_90))
(assert (= temp765_92 (select ARGNAME_stride_NAMEEND_VAL temp765_91)))
(assert (= temp765_93 #x0000000000000000))
(assert (= temp765_94 #x0000000000000003))
(assert (= temp765_95 temp765_94))
(assert (= temp765_96 (select ARGNAME_stride_NAMEEND_VAL temp765_95)))
(assert (= temp765_97 #x0000000000000000))
(assert (= temp765_98 #x0000000000000004))
(assert (= temp765_99 temp765_98))
(assert (= temp765_100 (select ARGNAME_stride_NAMEEND_VAL temp765_99)))
(assert (= temp765_101 #x0000000000000000))
(assert (= temp765_102 #x0000000000000005))
(assert (= temp765_103 temp765_102))
(assert (= temp765_104 (select ARGNAME_stride_NAMEEND_VAL temp765_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp765_84 temp765_81)
             (bvsle temp765_88 temp765_85)
             (bvsle temp765_92 temp765_89)
             (bvsle temp765_96 temp765_93)
             (bvsle temp765_100 temp765_97)
             (bvsle temp765_104 temp765_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp765_105 #x0000000000000000))
(assert (= var1716023 temp765_105))
(assert (= temp765_106 #x0000000000000000))
(assert (= var1704114 temp765_106))
(assert (= temp765_107 #x0000000000000000))
(assert (= temp765_108 temp765_107))
(assert (= temp765_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp765_108)))
(assert (= temp765_110 #x0000000000000001))
(assert (= temp765_111 temp765_110))
(assert (= temp765_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp765_111)))
(assert (= temp765_113 #x0000000000000002))
(assert (= temp765_114 temp765_113))
(assert (= temp765_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp765_114)))
(assert (= temp765_116 #x0000000000000003))
(assert (= temp765_117 temp765_116))
(assert (= temp765_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp765_117)))
(assert (= temp765_119 #x0000000000000004))
(assert (= temp765_120 temp765_119))
(assert (= temp765_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp765_120)))
(assert (= temp765_122 #x0000000000000005))
(assert (= temp765_123 temp765_122))
(assert (= temp765_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp765_123)))
(assert (= temp765_126 var1704114))
(assert (= temp765_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp765_126)))
(assert (= temp765_125 temp765_127))
(assert (= var1716068
   (ite (bvslt temp765_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp765_128 #x0000000000000000))
(assert (= var1716068 temp765_128))
(assert (= temp765_129 #x0000000000000000))
(assert (= var1704114 temp765_129))
(assert (= temp765_131 var1704114))
(assert (= temp765_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp765_131)))
(assert (= temp765_130 temp765_132))
(assert (= var1716090 (bvsmod temp765_130 ARGNAME_groups_NAMEEND)))
(assert (= temp765_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp765_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp765_134 #x0000000000000001))
(assert (= var1716091 temp765_134))
(assert (= var1716110 var1716000))
(assert (= temp765_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp765_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp765_136 #x0000000000000001))
(assert (= var1716111 temp765_136))
(assert (= temp765_137 #x0000000000000001))
(assert (= var1705002 temp765_137))
(assert (= temp765_139 var1705002))
(assert (= temp765_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp765_139)))
(assert (= temp765_138 temp765_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp765_138)))
(assert (= temp765_141 #x0000000000000000))
(assert (= var1704114 temp765_141))
(assert (= temp765_143 var1704114))
(assert (= temp765_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp765_143)))
(assert (= temp765_142 temp765_144))
(assert (= temp765_145 #x0000000000000002))
(assert (= var1979241 temp765_145))
(assert (= temp765_146 #x0000000000000001))
(assert (= var1716281 temp765_146))
(assert (= temp765_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp765_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp765_148 #x0000000000000001))
(assert (= var997490 temp765_148))
(assert (= temp765_149 #x0000000000000001))
(assert (= var997620 temp765_149))
(assert (= var3486185 var997620))
(assert (= temp765_150 #x0000000000000000))
(assert (= var3686207 temp765_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp765_151 #x0000000000000002))
(assert (= var3815043 temp765_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp765_153 #xffffffffffffffff))
(assert (= temp765_152 temp765_153))
(assert (= temp765_154 #x0000000000000001))
(assert (= var997490 temp765_154))
(model-add temp765_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp765_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp765_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp765_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp765_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp765_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






