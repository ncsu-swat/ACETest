(declare-fun temp10133_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp10133_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp10133_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp10133_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp10133_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp10133_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp10133_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp10133_8 () (_ BitVec 64))
(declare-fun temp10133_10 () (_ BitVec 64))
(declare-fun temp10133_9 () (_ BitVec 64))
(declare-fun temp10133_12 () (_ BitVec 64))
(declare-fun temp10133_11 () (_ BitVec 64))
(declare-fun temp10133_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp10133_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp10133_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp10133_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp10133_17 () (_ BitVec 64))
(declare-fun temp10133_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp10133_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp10133_20 () (_ BitVec 64))
(declare-fun temp10133_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10133_22 () (_ BitVec 64))
(declare-fun temp10133_23 () (_ BitVec 64))
(declare-fun temp10133_24 () (_ BitVec 64))
(declare-fun temp10133_25 () (_ BitVec 64))
(declare-fun temp10133_26 () (_ BitVec 64))
(declare-fun temp10133_27 () (_ BitVec 64))
(declare-fun temp10133_28 () (_ BitVec 64))
(declare-fun temp10133_29 () (_ BitVec 64))
(declare-fun temp10133_30 () (_ BitVec 64))
(declare-fun temp10133_31 () (_ BitVec 64))
(declare-fun temp10133_32 () (_ BitVec 64))
(declare-fun temp10133_33 () (_ BitVec 64))
(declare-fun temp10133_34 () (_ BitVec 64))
(declare-fun temp10133_35 () (_ BitVec 64))
(declare-fun temp10133_36 () (_ BitVec 64))
(declare-fun temp10133_37 () (_ BitVec 64))
(declare-fun temp10133_38 () (_ BitVec 64))
(declare-fun temp10133_39 () (_ BitVec 64))
(declare-fun temp10133_40 () (_ BitVec 64))
(declare-fun temp10133_41 () (_ BitVec 64))
(declare-fun temp10133_42 () (_ BitVec 64))
(declare-fun temp10133_43 () (_ BitVec 64))
(declare-fun temp10133_44 () (_ BitVec 64))
(declare-fun temp10133_45 () (_ BitVec 64))
(declare-fun temp10133_46 () (_ BitVec 64))
(declare-fun temp10133_47 () (_ BitVec 64))
(declare-fun temp10133_48 () (_ BitVec 64))
(declare-fun temp10133_49 () (_ BitVec 64))
(declare-fun temp10133_50 () (_ BitVec 64))
(declare-fun temp10133_51 () (_ BitVec 64))
(declare-fun temp10133_52 () (_ BitVec 64))
(declare-fun temp10133_53 () (_ BitVec 64))
(declare-fun temp10133_54 () (_ BitVec 64))
(declare-fun temp10133_55 () (_ BitVec 64))
(declare-fun temp10133_56 () (_ BitVec 64))
(declare-fun temp10133_57 () (_ BitVec 64))
(declare-fun temp10133_58 () (_ BitVec 64))
(declare-fun temp10133_59 () (_ BitVec 64))
(declare-fun temp10133_60 () (_ BitVec 64))
(declare-fun temp10133_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp10133_62 () (_ BitVec 64))
(declare-fun temp10133_63 () (_ BitVec 64))
(declare-fun temp10133_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10133_65 () (_ BitVec 64))
(declare-fun temp10133_66 () (_ BitVec 64))
(declare-fun temp10133_67 () (_ BitVec 64))
(declare-fun temp10133_68 () (_ BitVec 64))
(declare-fun temp10133_69 () (_ BitVec 64))
(declare-fun temp10133_70 () (_ BitVec 64))
(declare-fun temp10133_71 () (_ BitVec 64))
(declare-fun temp10133_72 () (_ BitVec 64))
(declare-fun temp10133_73 () (_ BitVec 64))
(declare-fun temp10133_74 () (_ BitVec 64))
(declare-fun temp10133_75 () (_ BitVec 64))
(declare-fun temp10133_76 () (_ BitVec 64))
(declare-fun temp10133_77 () (_ BitVec 64))
(declare-fun temp10133_78 () (_ BitVec 64))
(declare-fun temp10133_79 () (_ BitVec 64))
(declare-fun temp10133_80 () (_ BitVec 64))
(declare-fun temp10133_81 () (_ BitVec 64))
(declare-fun temp10133_82 () (_ BitVec 64))
(declare-fun temp10133_83 () (_ BitVec 64))
(declare-fun temp10133_84 () (_ BitVec 64))
(declare-fun temp10133_85 () (_ BitVec 64))
(declare-fun temp10133_86 () (_ BitVec 64))
(declare-fun temp10133_87 () (_ BitVec 64))
(declare-fun temp10133_88 () (_ BitVec 64))
(declare-fun temp10133_89 () (_ BitVec 64))
(declare-fun temp10133_90 () (_ BitVec 64))
(declare-fun temp10133_91 () (_ BitVec 64))
(declare-fun temp10133_92 () (_ BitVec 64))
(declare-fun temp10133_93 () (_ BitVec 64))
(declare-fun temp10133_94 () (_ BitVec 64))
(declare-fun temp10133_95 () (_ BitVec 64))
(declare-fun temp10133_96 () (_ BitVec 64))
(declare-fun temp10133_97 () (_ BitVec 64))
(declare-fun temp10133_98 () (_ BitVec 64))
(declare-fun temp10133_99 () (_ BitVec 64))
(declare-fun temp10133_100 () (_ BitVec 64))
(declare-fun temp10133_101 () (_ BitVec 64))
(declare-fun temp10133_102 () (_ BitVec 64))
(declare-fun temp10133_103 () (_ BitVec 64))
(declare-fun temp10133_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp10133_105 () (_ BitVec 64))
(declare-fun temp10133_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp10133_107 () (_ BitVec 64))
(declare-fun temp10133_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10133_109 () (_ BitVec 64))
(declare-fun temp10133_110 () (_ BitVec 64))
(declare-fun temp10133_111 () (_ BitVec 64))
(declare-fun temp10133_112 () (_ BitVec 64))
(declare-fun temp10133_113 () (_ BitVec 64))
(declare-fun temp10133_114 () (_ BitVec 64))
(declare-fun temp10133_115 () (_ BitVec 64))
(declare-fun temp10133_116 () (_ BitVec 64))
(declare-fun temp10133_117 () (_ BitVec 64))
(declare-fun temp10133_118 () (_ BitVec 64))
(declare-fun temp10133_119 () (_ BitVec 64))
(declare-fun temp10133_120 () (_ BitVec 64))
(declare-fun temp10133_121 () (_ BitVec 64))
(declare-fun temp10133_122 () (_ BitVec 64))
(declare-fun temp10133_123 () (_ BitVec 64))
(declare-fun temp10133_124 () (_ BitVec 64))
(declare-fun temp10133_126 () (_ BitVec 64))
(declare-fun temp10133_127 () (_ BitVec 64))
(declare-fun temp10133_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp10133_128 () (_ BitVec 64))
(declare-fun temp10133_129 () (_ BitVec 64))
(declare-fun temp10133_131 () (_ BitVec 64))
(declare-fun temp10133_132 () (_ BitVec 64))
(declare-fun temp10133_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp10133_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp10133_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp10133_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp10133_136 () (_ BitVec 64))
(declare-fun temp10133_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp10133_139 () (_ BitVec 64))
(declare-fun temp10133_140 () (_ BitVec 64))
(declare-fun temp10133_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp10133_141 () (_ BitVec 64))
(declare-fun temp10133_143 () (_ BitVec 64))
(declare-fun temp10133_144 () (_ BitVec 64))
(declare-fun temp10133_142 () (_ BitVec 64))
(declare-fun temp10133_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp10133_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp10133_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp10133_148 () (_ BitVec 64))
(declare-fun temp10133_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp10133_150 () (_ BitVec 64))
(declare-fun var3486352 () (_ BitVec 64))
(declare-fun var3486179 () (_ BitVec 64))
(declare-fun var997629 () (_ BitVec 64))
(declare-fun var3751705 () (_ BitVec 64))
(declare-fun temp10133_151 () (_ BitVec 64))
(declare-fun temp10133_152 () (_ BitVec 64))
(declare-fun temp10133_153 () (_ BitVec 64))
(declare-fun var3946115 () (_ BitVec 64))
(declare-fun var3946117 () (_ BitVec 64))
(declare-fun var4011660 () (_ BitVec 64))
(declare-fun var4011661 () (_ BitVec 64))
(declare-fun temp10133_154 () (_ BitVec 64))
(declare-fun var997820 () (_ BitVec 64))
(declare-fun temp10133_155 () (_ BitVec 64))
(declare-fun var997821 () (_ BitVec 64))
(declare-fun var5128013 () (_ BitVec 64))
(declare-fun temp10133_157 () (_ BitVec 64))
(declare-fun temp10133_156 () (_ BitVec 64))
(declare-fun temp10133_158 () (_ BitVec 64))
(declare-fun var5705194 () (_ BitVec 64))
(declare-fun temp10133_160 () (_ BitVec 64))
(declare-fun temp10133_159 () (_ BitVec 64))
(declare-fun temp10133_161 () (_ BitVec 64))
(assert (= temp10133_1 #x0000000000000001))
(assert (= var465453 temp10133_1))
(assert (= temp10133_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp10133_2)))
(assert (= temp10133_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp10133_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp10133_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp10133_4)))
(assert (= temp10133_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp10133_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp10133_6 #x0000000000000000))
(assert (= var465488 temp10133_6))
(assert (= temp10133_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp10133_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp10133_8 #x0000000000000001))
(assert (= var465522 temp10133_8))
(assert (= temp10133_10 #x0000000000000000))
(assert (= temp10133_9 temp10133_10))
(assert (= temp10133_12 #x0000000000000001))
(assert (= temp10133_11 temp10133_12))
(assert (= temp10133_13 #x0000000000000000))
(assert (= var863614 temp10133_13))
(assert (= temp10133_14 #x0000000000000001))
(assert (= var863635 temp10133_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp10133_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp10133_15)))
(assert (= temp10133_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10133_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10133_17 #x0000000000000000))
(assert (= var997373 temp10133_17))
(assert (= temp10133_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp10133_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10133_19 #x0000000000000000))
(assert (= var997418 temp10133_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp10133_20 #x0000000000000000))
(assert (= temp10133_21 temp10133_20))
(assert (= temp10133_22 (select ARGNAME_padding_NAMEEND_VAL temp10133_21)))
(assert (= temp10133_23 #x0000000000000001))
(assert (= temp10133_24 temp10133_23))
(assert (= temp10133_25 (select ARGNAME_padding_NAMEEND_VAL temp10133_24)))
(assert (= temp10133_26 #x0000000000000002))
(assert (= temp10133_27 temp10133_26))
(assert (= temp10133_28 (select ARGNAME_padding_NAMEEND_VAL temp10133_27)))
(assert (= temp10133_29 #x0000000000000003))
(assert (= temp10133_30 temp10133_29))
(assert (= temp10133_31 (select ARGNAME_padding_NAMEEND_VAL temp10133_30)))
(assert (= temp10133_32 #x0000000000000004))
(assert (= temp10133_33 temp10133_32))
(assert (= temp10133_34 (select ARGNAME_padding_NAMEEND_VAL temp10133_33)))
(assert (= temp10133_35 #x0000000000000005))
(assert (= temp10133_36 temp10133_35))
(assert (= temp10133_37 (select ARGNAME_padding_NAMEEND_VAL temp10133_36)))
(assert (= temp10133_38 #x0000000000000000))
(assert (= temp10133_39 #x0000000000000000))
(assert (= temp10133_40 temp10133_39))
(assert (= temp10133_41 (select ARGNAME_padding_NAMEEND_VAL temp10133_40)))
(assert (= temp10133_42 #x0000000000000000))
(assert (= temp10133_43 #x0000000000000001))
(assert (= temp10133_44 temp10133_43))
(assert (= temp10133_45 (select ARGNAME_padding_NAMEEND_VAL temp10133_44)))
(assert (= temp10133_46 #x0000000000000000))
(assert (= temp10133_47 #x0000000000000002))
(assert (= temp10133_48 temp10133_47))
(assert (= temp10133_49 (select ARGNAME_padding_NAMEEND_VAL temp10133_48)))
(assert (= temp10133_50 #x0000000000000000))
(assert (= temp10133_51 #x0000000000000003))
(assert (= temp10133_52 temp10133_51))
(assert (= temp10133_53 (select ARGNAME_padding_NAMEEND_VAL temp10133_52)))
(assert (= temp10133_54 #x0000000000000000))
(assert (= temp10133_55 #x0000000000000004))
(assert (= temp10133_56 temp10133_55))
(assert (= temp10133_57 (select ARGNAME_padding_NAMEEND_VAL temp10133_56)))
(assert (= temp10133_58 #x0000000000000000))
(assert (= temp10133_59 #x0000000000000005))
(assert (= temp10133_60 temp10133_59))
(assert (= temp10133_61 (select ARGNAME_padding_NAMEEND_VAL temp10133_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp10133_41 temp10133_38)
             (bvslt temp10133_45 temp10133_42)
             (bvslt temp10133_49 temp10133_46)
             (bvslt temp10133_53 temp10133_50)
             (bvslt temp10133_57 temp10133_54)
             (bvslt temp10133_61 temp10133_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10133_62 #x0000000000000000))
(assert (= var1716002 temp10133_62))
(assert (= temp10133_63 #x0000000000000000))
(assert (= temp10133_64 temp10133_63))
(assert (= temp10133_65 (select ARGNAME_stride_NAMEEND_VAL temp10133_64)))
(assert (= temp10133_66 #x0000000000000001))
(assert (= temp10133_67 temp10133_66))
(assert (= temp10133_68 (select ARGNAME_stride_NAMEEND_VAL temp10133_67)))
(assert (= temp10133_69 #x0000000000000002))
(assert (= temp10133_70 temp10133_69))
(assert (= temp10133_71 (select ARGNAME_stride_NAMEEND_VAL temp10133_70)))
(assert (= temp10133_72 #x0000000000000003))
(assert (= temp10133_73 temp10133_72))
(assert (= temp10133_74 (select ARGNAME_stride_NAMEEND_VAL temp10133_73)))
(assert (= temp10133_75 #x0000000000000004))
(assert (= temp10133_76 temp10133_75))
(assert (= temp10133_77 (select ARGNAME_stride_NAMEEND_VAL temp10133_76)))
(assert (= temp10133_78 #x0000000000000005))
(assert (= temp10133_79 temp10133_78))
(assert (= temp10133_80 (select ARGNAME_stride_NAMEEND_VAL temp10133_79)))
(assert (= temp10133_81 #x0000000000000000))
(assert (= temp10133_82 #x0000000000000000))
(assert (= temp10133_83 temp10133_82))
(assert (= temp10133_84 (select ARGNAME_stride_NAMEEND_VAL temp10133_83)))
(assert (= temp10133_85 #x0000000000000000))
(assert (= temp10133_86 #x0000000000000001))
(assert (= temp10133_87 temp10133_86))
(assert (= temp10133_88 (select ARGNAME_stride_NAMEEND_VAL temp10133_87)))
(assert (= temp10133_89 #x0000000000000000))
(assert (= temp10133_90 #x0000000000000002))
(assert (= temp10133_91 temp10133_90))
(assert (= temp10133_92 (select ARGNAME_stride_NAMEEND_VAL temp10133_91)))
(assert (= temp10133_93 #x0000000000000000))
(assert (= temp10133_94 #x0000000000000003))
(assert (= temp10133_95 temp10133_94))
(assert (= temp10133_96 (select ARGNAME_stride_NAMEEND_VAL temp10133_95)))
(assert (= temp10133_97 #x0000000000000000))
(assert (= temp10133_98 #x0000000000000004))
(assert (= temp10133_99 temp10133_98))
(assert (= temp10133_100 (select ARGNAME_stride_NAMEEND_VAL temp10133_99)))
(assert (= temp10133_101 #x0000000000000000))
(assert (= temp10133_102 #x0000000000000005))
(assert (= temp10133_103 temp10133_102))
(assert (= temp10133_104 (select ARGNAME_stride_NAMEEND_VAL temp10133_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp10133_84 temp10133_81)
             (bvsle temp10133_88 temp10133_85)
             (bvsle temp10133_92 temp10133_89)
             (bvsle temp10133_96 temp10133_93)
             (bvsle temp10133_100 temp10133_97)
             (bvsle temp10133_104 temp10133_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10133_105 #x0000000000000000))
(assert (= var1716023 temp10133_105))
(assert (= temp10133_106 #x0000000000000000))
(assert (= var1704114 temp10133_106))
(assert (= temp10133_107 #x0000000000000000))
(assert (= temp10133_108 temp10133_107))
(assert (= temp10133_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10133_108)))
(assert (= temp10133_110 #x0000000000000001))
(assert (= temp10133_111 temp10133_110))
(assert (= temp10133_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10133_111)))
(assert (= temp10133_113 #x0000000000000002))
(assert (= temp10133_114 temp10133_113))
(assert (= temp10133_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10133_114)))
(assert (= temp10133_116 #x0000000000000003))
(assert (= temp10133_117 temp10133_116))
(assert (= temp10133_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10133_117)))
(assert (= temp10133_119 #x0000000000000004))
(assert (= temp10133_120 temp10133_119))
(assert (= temp10133_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10133_120)))
(assert (= temp10133_122 #x0000000000000005))
(assert (= temp10133_123 temp10133_122))
(assert (= temp10133_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10133_123)))
(assert (= temp10133_126 var1704114))
(assert (= temp10133_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10133_126)))
(assert (= temp10133_125 temp10133_127))
(assert (= var1716068
   (ite (bvslt temp10133_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10133_128 #x0000000000000000))
(assert (= var1716068 temp10133_128))
(assert (= temp10133_129 #x0000000000000000))
(assert (= var1704114 temp10133_129))
(assert (= temp10133_131 var1704114))
(assert (= temp10133_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10133_131)))
(assert (= temp10133_130 temp10133_132))
(assert (= var1716090 (bvsmod temp10133_130 ARGNAME_groups_NAMEEND)))
(assert (= temp10133_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp10133_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp10133_134 #x0000000000000001))
(assert (= var1716091 temp10133_134))
(assert (= var1716110 var1716000))
(assert (= temp10133_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp10133_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp10133_136 #x0000000000000001))
(assert (= var1716111 temp10133_136))
(assert (= temp10133_137 #x0000000000000001))
(assert (= var1705002 temp10133_137))
(assert (= temp10133_139 var1705002))
(assert (= temp10133_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10133_139)))
(assert (= temp10133_138 temp10133_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp10133_138)))
(assert (= temp10133_141 #x0000000000000000))
(assert (= var1704114 temp10133_141))
(assert (= temp10133_143 var1704114))
(assert (= temp10133_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10133_143)))
(assert (= temp10133_142 temp10133_144))
(assert (= temp10133_145 #x0000000000000002))
(assert (= var1979241 temp10133_145))
(assert (= temp10133_146 #x0000000000000001))
(assert (= var1716281 temp10133_146))
(assert (= temp10133_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10133_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10133_148 #x0000000000000001))
(assert (= var997490 temp10133_148))
(assert (= temp10133_149 #x0000000000000001))
(assert (= var997620 temp10133_149))
(assert (= var3486185 var997620))
(assert (= temp10133_150 #x0000000000000002))
(assert (= var3486352 temp10133_150))
(assert (= var3486179 var3486352))
(assert (= var997629 var3486179))
(assert (= var3751705 var997629))
(assert (= temp10133_151 #x0000000000000002))
(assert (= temp10133_152 #x0000000000000003))
(assert (or false (= var3751705 temp10133_151) (= var3751705 temp10133_152)))
(assert (= temp10133_153 #x0000000000000002))
(assert (= var3946115 temp10133_153))
(assert (= var3946117 (bvsub ARGNAME_weight_NAMEEND_DIM var3946115)))
(assert (= var4011660 var3946115))
(assert (= var4011661 var3946117))
(assert (= temp10133_154 #x0000000000000002))
(assert (or false (= var997629 temp10133_154)))
(assert (= var997820 var997345))
(assert (= temp10133_155 #x0000000000000000))
(assert (= var997821
   (ite (distinct var997820 temp10133_155)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var5128013 var997821))
(assert (= temp10133_157 #x0000000000000001))
(assert (= temp10133_156 temp10133_157))
(assert (= temp10133_158 #x0000000000000001))
(assert (= var5705194 temp10133_158))
(assert (= temp10133_160 #xffffffffffffffff))
(assert (= temp10133_159 temp10133_160))
(assert (= temp10133_161 #x0000000000000001))
(assert (= var997490 temp10133_161))
(model-add temp10133_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp10133_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp10133_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp10133_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp10133_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp10133_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






