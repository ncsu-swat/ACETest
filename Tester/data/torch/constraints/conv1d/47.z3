(declare-fun temp61_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp61_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp61_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp61_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp61_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp61_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp61_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp61_8 () (_ BitVec 64))
(declare-fun temp61_10 () (_ BitVec 64))
(declare-fun temp61_9 () (_ BitVec 64))
(declare-fun temp61_12 () (_ BitVec 64))
(declare-fun temp61_11 () (_ BitVec 64))
(declare-fun temp61_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp61_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp61_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp61_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp61_17 () (_ BitVec 64))
(declare-fun temp61_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp61_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp61_20 () (_ BitVec 64))
(declare-fun temp61_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp61_22 () (_ BitVec 64))
(declare-fun temp61_23 () (_ BitVec 64))
(declare-fun temp61_24 () (_ BitVec 64))
(declare-fun temp61_25 () (_ BitVec 64))
(declare-fun temp61_26 () (_ BitVec 64))
(declare-fun temp61_27 () (_ BitVec 64))
(declare-fun temp61_28 () (_ BitVec 64))
(declare-fun temp61_29 () (_ BitVec 64))
(declare-fun temp61_30 () (_ BitVec 64))
(declare-fun temp61_31 () (_ BitVec 64))
(declare-fun temp61_32 () (_ BitVec 64))
(declare-fun temp61_33 () (_ BitVec 64))
(declare-fun temp61_34 () (_ BitVec 64))
(declare-fun temp61_35 () (_ BitVec 64))
(declare-fun temp61_36 () (_ BitVec 64))
(declare-fun temp61_37 () (_ BitVec 64))
(declare-fun temp61_38 () (_ BitVec 64))
(declare-fun temp61_39 () (_ BitVec 64))
(declare-fun temp61_40 () (_ BitVec 64))
(declare-fun temp61_41 () (_ BitVec 64))
(declare-fun temp61_42 () (_ BitVec 64))
(declare-fun temp61_43 () (_ BitVec 64))
(declare-fun temp61_44 () (_ BitVec 64))
(declare-fun temp61_45 () (_ BitVec 64))
(declare-fun temp61_46 () (_ BitVec 64))
(declare-fun temp61_47 () (_ BitVec 64))
(declare-fun temp61_48 () (_ BitVec 64))
(declare-fun temp61_49 () (_ BitVec 64))
(declare-fun temp61_50 () (_ BitVec 64))
(declare-fun temp61_51 () (_ BitVec 64))
(declare-fun temp61_52 () (_ BitVec 64))
(declare-fun temp61_53 () (_ BitVec 64))
(declare-fun temp61_54 () (_ BitVec 64))
(declare-fun temp61_55 () (_ BitVec 64))
(declare-fun temp61_56 () (_ BitVec 64))
(declare-fun temp61_57 () (_ BitVec 64))
(declare-fun temp61_58 () (_ BitVec 64))
(declare-fun temp61_59 () (_ BitVec 64))
(declare-fun temp61_60 () (_ BitVec 64))
(declare-fun temp61_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp61_62 () (_ BitVec 64))
(declare-fun temp61_63 () (_ BitVec 64))
(declare-fun temp61_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp61_65 () (_ BitVec 64))
(declare-fun temp61_66 () (_ BitVec 64))
(declare-fun temp61_67 () (_ BitVec 64))
(declare-fun temp61_68 () (_ BitVec 64))
(declare-fun temp61_69 () (_ BitVec 64))
(declare-fun temp61_70 () (_ BitVec 64))
(declare-fun temp61_71 () (_ BitVec 64))
(declare-fun temp61_72 () (_ BitVec 64))
(declare-fun temp61_73 () (_ BitVec 64))
(declare-fun temp61_74 () (_ BitVec 64))
(declare-fun temp61_75 () (_ BitVec 64))
(declare-fun temp61_76 () (_ BitVec 64))
(declare-fun temp61_77 () (_ BitVec 64))
(declare-fun temp61_78 () (_ BitVec 64))
(declare-fun temp61_79 () (_ BitVec 64))
(declare-fun temp61_80 () (_ BitVec 64))
(declare-fun temp61_81 () (_ BitVec 64))
(declare-fun temp61_82 () (_ BitVec 64))
(declare-fun temp61_83 () (_ BitVec 64))
(declare-fun temp61_84 () (_ BitVec 64))
(declare-fun temp61_85 () (_ BitVec 64))
(declare-fun temp61_86 () (_ BitVec 64))
(declare-fun temp61_87 () (_ BitVec 64))
(declare-fun temp61_88 () (_ BitVec 64))
(declare-fun temp61_89 () (_ BitVec 64))
(declare-fun temp61_90 () (_ BitVec 64))
(declare-fun temp61_91 () (_ BitVec 64))
(declare-fun temp61_92 () (_ BitVec 64))
(declare-fun temp61_93 () (_ BitVec 64))
(declare-fun temp61_94 () (_ BitVec 64))
(declare-fun temp61_95 () (_ BitVec 64))
(declare-fun temp61_96 () (_ BitVec 64))
(declare-fun temp61_97 () (_ BitVec 64))
(declare-fun temp61_98 () (_ BitVec 64))
(declare-fun temp61_99 () (_ BitVec 64))
(declare-fun temp61_100 () (_ BitVec 64))
(declare-fun temp61_101 () (_ BitVec 64))
(declare-fun temp61_102 () (_ BitVec 64))
(declare-fun temp61_103 () (_ BitVec 64))
(declare-fun temp61_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp61_105 () (_ BitVec 64))
(declare-fun temp61_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp61_107 () (_ BitVec 64))
(declare-fun temp61_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp61_109 () (_ BitVec 64))
(declare-fun temp61_110 () (_ BitVec 64))
(declare-fun temp61_111 () (_ BitVec 64))
(declare-fun temp61_112 () (_ BitVec 64))
(declare-fun temp61_113 () (_ BitVec 64))
(declare-fun temp61_114 () (_ BitVec 64))
(declare-fun temp61_115 () (_ BitVec 64))
(declare-fun temp61_116 () (_ BitVec 64))
(declare-fun temp61_117 () (_ BitVec 64))
(declare-fun temp61_118 () (_ BitVec 64))
(declare-fun temp61_119 () (_ BitVec 64))
(declare-fun temp61_120 () (_ BitVec 64))
(declare-fun temp61_121 () (_ BitVec 64))
(declare-fun temp61_122 () (_ BitVec 64))
(declare-fun temp61_123 () (_ BitVec 64))
(declare-fun temp61_124 () (_ BitVec 64))
(declare-fun temp61_126 () (_ BitVec 64))
(declare-fun temp61_127 () (_ BitVec 64))
(declare-fun temp61_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp61_128 () (_ BitVec 64))
(declare-fun temp61_129 () (_ BitVec 64))
(declare-fun temp61_131 () (_ BitVec 64))
(declare-fun temp61_132 () (_ BitVec 64))
(declare-fun temp61_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp61_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp61_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp61_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp61_136 () (_ BitVec 64))
(declare-fun temp61_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp61_139 () (_ BitVec 64))
(declare-fun temp61_140 () (_ BitVec 64))
(declare-fun temp61_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp61_141 () (_ BitVec 64))
(declare-fun temp61_143 () (_ BitVec 64))
(declare-fun temp61_144 () (_ BitVec 64))
(declare-fun temp61_142 () (_ BitVec 64))
(declare-fun temp61_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp61_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp61_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp61_148 () (_ BitVec 64))
(declare-fun temp61_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp61_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp61_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var997926 () (_ BitVec 64))
(declare-fun temp61_152 () (_ BitVec 64))
(declare-fun var997927 () (_ BitVec 64))
(declare-fun temp61_153 () (_ BitVec 64))
(assert (= temp61_1 #x0000000000000001))
(assert (= var465453 temp61_1))
(assert (= temp61_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp61_2)))
(assert (= temp61_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp61_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp61_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp61_4)))
(assert (= temp61_5 #x0000000000000000))
(assert (= var465487 (ite (= var465486 temp61_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp61_6 #x0000000000000000))
(assert (= var465488 temp61_6))
(assert (= temp61_7 #x0000000000000000))
(assert (= var465522 (ite (= var465485 temp61_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_8 #x0000000000000001))
(assert (= var465522 temp61_8))
(assert (= temp61_10 #x0000000000000000))
(assert (= temp61_9 temp61_10))
(assert (= temp61_12 #x0000000000000001))
(assert (= temp61_11 temp61_12))
(assert (= temp61_13 #x0000000000000000))
(assert (= var863614 temp61_13))
(assert (= temp61_14 #x0000000000000001))
(assert (= var863635 temp61_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp61_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp61_15)))
(assert (= temp61_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp61_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_17 #x0000000000000000))
(assert (= var997373 temp61_17))
(assert (= temp61_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp61_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_19 #x0000000000000000))
(assert (= var997418 temp61_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp61_20 #x0000000000000000))
(assert (= temp61_21 temp61_20))
(assert (= temp61_22 (select ARGNAME_padding_NAMEEND_VAL temp61_21)))
(assert (= temp61_23 #x0000000000000001))
(assert (= temp61_24 temp61_23))
(assert (= temp61_25 (select ARGNAME_padding_NAMEEND_VAL temp61_24)))
(assert (= temp61_26 #x0000000000000002))
(assert (= temp61_27 temp61_26))
(assert (= temp61_28 (select ARGNAME_padding_NAMEEND_VAL temp61_27)))
(assert (= temp61_29 #x0000000000000003))
(assert (= temp61_30 temp61_29))
(assert (= temp61_31 (select ARGNAME_padding_NAMEEND_VAL temp61_30)))
(assert (= temp61_32 #x0000000000000004))
(assert (= temp61_33 temp61_32))
(assert (= temp61_34 (select ARGNAME_padding_NAMEEND_VAL temp61_33)))
(assert (= temp61_35 #x0000000000000005))
(assert (= temp61_36 temp61_35))
(assert (= temp61_37 (select ARGNAME_padding_NAMEEND_VAL temp61_36)))
(assert (= temp61_38 #x0000000000000000))
(assert (= temp61_39 #x0000000000000000))
(assert (= temp61_40 temp61_39))
(assert (= temp61_41 (select ARGNAME_padding_NAMEEND_VAL temp61_40)))
(assert (= temp61_42 #x0000000000000000))
(assert (= temp61_43 #x0000000000000001))
(assert (= temp61_44 temp61_43))
(assert (= temp61_45 (select ARGNAME_padding_NAMEEND_VAL temp61_44)))
(assert (= temp61_46 #x0000000000000000))
(assert (= temp61_47 #x0000000000000002))
(assert (= temp61_48 temp61_47))
(assert (= temp61_49 (select ARGNAME_padding_NAMEEND_VAL temp61_48)))
(assert (= temp61_50 #x0000000000000000))
(assert (= temp61_51 #x0000000000000003))
(assert (= temp61_52 temp61_51))
(assert (= temp61_53 (select ARGNAME_padding_NAMEEND_VAL temp61_52)))
(assert (= temp61_54 #x0000000000000000))
(assert (= temp61_55 #x0000000000000004))
(assert (= temp61_56 temp61_55))
(assert (= temp61_57 (select ARGNAME_padding_NAMEEND_VAL temp61_56)))
(assert (= temp61_58 #x0000000000000000))
(assert (= temp61_59 #x0000000000000005))
(assert (= temp61_60 temp61_59))
(assert (= temp61_61 (select ARGNAME_padding_NAMEEND_VAL temp61_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp61_41 temp61_38)
             (bvslt temp61_45 temp61_42)
             (bvslt temp61_49 temp61_46)
             (bvslt temp61_53 temp61_50)
             (bvslt temp61_57 temp61_54)
             (bvslt temp61_61 temp61_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_62 #x0000000000000000))
(assert (= var1716002 temp61_62))
(assert (= temp61_63 #x0000000000000000))
(assert (= temp61_64 temp61_63))
(assert (= temp61_65 (select ARGNAME_stride_NAMEEND_VAL temp61_64)))
(assert (= temp61_66 #x0000000000000001))
(assert (= temp61_67 temp61_66))
(assert (= temp61_68 (select ARGNAME_stride_NAMEEND_VAL temp61_67)))
(assert (= temp61_69 #x0000000000000002))
(assert (= temp61_70 temp61_69))
(assert (= temp61_71 (select ARGNAME_stride_NAMEEND_VAL temp61_70)))
(assert (= temp61_72 #x0000000000000003))
(assert (= temp61_73 temp61_72))
(assert (= temp61_74 (select ARGNAME_stride_NAMEEND_VAL temp61_73)))
(assert (= temp61_75 #x0000000000000004))
(assert (= temp61_76 temp61_75))
(assert (= temp61_77 (select ARGNAME_stride_NAMEEND_VAL temp61_76)))
(assert (= temp61_78 #x0000000000000005))
(assert (= temp61_79 temp61_78))
(assert (= temp61_80 (select ARGNAME_stride_NAMEEND_VAL temp61_79)))
(assert (= temp61_81 #x0000000000000000))
(assert (= temp61_82 #x0000000000000000))
(assert (= temp61_83 temp61_82))
(assert (= temp61_84 (select ARGNAME_stride_NAMEEND_VAL temp61_83)))
(assert (= temp61_85 #x0000000000000000))
(assert (= temp61_86 #x0000000000000001))
(assert (= temp61_87 temp61_86))
(assert (= temp61_88 (select ARGNAME_stride_NAMEEND_VAL temp61_87)))
(assert (= temp61_89 #x0000000000000000))
(assert (= temp61_90 #x0000000000000002))
(assert (= temp61_91 temp61_90))
(assert (= temp61_92 (select ARGNAME_stride_NAMEEND_VAL temp61_91)))
(assert (= temp61_93 #x0000000000000000))
(assert (= temp61_94 #x0000000000000003))
(assert (= temp61_95 temp61_94))
(assert (= temp61_96 (select ARGNAME_stride_NAMEEND_VAL temp61_95)))
(assert (= temp61_97 #x0000000000000000))
(assert (= temp61_98 #x0000000000000004))
(assert (= temp61_99 temp61_98))
(assert (= temp61_100 (select ARGNAME_stride_NAMEEND_VAL temp61_99)))
(assert (= temp61_101 #x0000000000000000))
(assert (= temp61_102 #x0000000000000005))
(assert (= temp61_103 temp61_102))
(assert (= temp61_104 (select ARGNAME_stride_NAMEEND_VAL temp61_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp61_84 temp61_81)
             (bvsle temp61_88 temp61_85)
             (bvsle temp61_92 temp61_89)
             (bvsle temp61_96 temp61_93)
             (bvsle temp61_100 temp61_97)
             (bvsle temp61_104 temp61_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_105 #x0000000000000000))
(assert (= var1716023 temp61_105))
(assert (= temp61_106 #x0000000000000000))
(assert (= var1704114 temp61_106))
(assert (= temp61_107 #x0000000000000000))
(assert (= temp61_108 temp61_107))
(assert (= temp61_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp61_108)))
(assert (= temp61_110 #x0000000000000001))
(assert (= temp61_111 temp61_110))
(assert (= temp61_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp61_111)))
(assert (= temp61_113 #x0000000000000002))
(assert (= temp61_114 temp61_113))
(assert (= temp61_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp61_114)))
(assert (= temp61_116 #x0000000000000003))
(assert (= temp61_117 temp61_116))
(assert (= temp61_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp61_117)))
(assert (= temp61_119 #x0000000000000004))
(assert (= temp61_120 temp61_119))
(assert (= temp61_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp61_120)))
(assert (= temp61_122 #x0000000000000005))
(assert (= temp61_123 temp61_122))
(assert (= temp61_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp61_123)))
(assert (= temp61_126 var1704114))
(assert (= temp61_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp61_126)))
(assert (= temp61_125 temp61_127))
(assert (= var1716068
   (ite (bvslt temp61_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_128 #x0000000000000000))
(assert (= var1716068 temp61_128))
(assert (= temp61_129 #x0000000000000000))
(assert (= var1704114 temp61_129))
(assert (= temp61_131 var1704114))
(assert (= temp61_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp61_131)))
(assert (= temp61_130 temp61_132))
(assert (= var1716090 (bvsmod temp61_130 ARGNAME_groups_NAMEEND)))
(assert (= temp61_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp61_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_134 #x0000000000000001))
(assert (= var1716091 temp61_134))
(assert (= var1716110 var1716000))
(assert (= temp61_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp61_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_136 #x0000000000000001))
(assert (= var1716111 temp61_136))
(assert (= temp61_137 #x0000000000000001))
(assert (= var1705002 temp61_137))
(assert (= temp61_139 var1705002))
(assert (= temp61_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp61_139)))
(assert (= temp61_138 temp61_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp61_138)))
(assert (= temp61_141 #x0000000000000000))
(assert (= var1704114 temp61_141))
(assert (= temp61_143 var1704114))
(assert (= temp61_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp61_143)))
(assert (= temp61_142 temp61_144))
(assert (= temp61_145 #x0000000000000002))
(assert (= var1979241 temp61_145))
(assert (= temp61_146 #x0000000000000001))
(assert (= var1716281 temp61_146))
(assert (= temp61_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp61_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_148 #x0000000000000001))
(assert (= var997490 temp61_148))
(assert (= temp61_149 #x0000000000000001))
(assert (= var997620 temp61_149))
(assert (= var3486185 var997620))
(assert (= temp61_150 #x0000000000000000))
(assert (= var3686207 temp61_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp61_151 #x0000000000000002))
(assert (= var3815043 temp61_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4469136 var997633))
(assert (= var997926 var997345))
(assert (= temp61_152 #x0000000000000000))
(assert (= var997927
   (ite (distinct var997926 temp61_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_153 #x0000000000000001))
(assert (= var997490 temp61_153))
(model-add temp61_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp61_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp61_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp61_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp61_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp61_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






