(declare-fun temp1301_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp1301_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp1301_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp1301_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp1301_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp1301_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp1301_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp1301_8 () (_ BitVec 64))
(declare-fun temp1301_10 () (_ BitVec 64))
(declare-fun temp1301_9 () (_ BitVec 64))
(declare-fun temp1301_12 () (_ BitVec 64))
(declare-fun temp1301_11 () (_ BitVec 64))
(declare-fun temp1301_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp1301_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp1301_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp1301_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp1301_17 () (_ BitVec 64))
(declare-fun temp1301_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp1301_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp1301_20 () (_ BitVec 64))
(declare-fun temp1301_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1301_22 () (_ BitVec 64))
(declare-fun temp1301_23 () (_ BitVec 64))
(declare-fun temp1301_24 () (_ BitVec 64))
(declare-fun temp1301_25 () (_ BitVec 64))
(declare-fun temp1301_26 () (_ BitVec 64))
(declare-fun temp1301_27 () (_ BitVec 64))
(declare-fun temp1301_28 () (_ BitVec 64))
(declare-fun temp1301_29 () (_ BitVec 64))
(declare-fun temp1301_30 () (_ BitVec 64))
(declare-fun temp1301_31 () (_ BitVec 64))
(declare-fun temp1301_32 () (_ BitVec 64))
(declare-fun temp1301_33 () (_ BitVec 64))
(declare-fun temp1301_34 () (_ BitVec 64))
(declare-fun temp1301_35 () (_ BitVec 64))
(declare-fun temp1301_36 () (_ BitVec 64))
(declare-fun temp1301_37 () (_ BitVec 64))
(declare-fun temp1301_38 () (_ BitVec 64))
(declare-fun temp1301_39 () (_ BitVec 64))
(declare-fun temp1301_40 () (_ BitVec 64))
(declare-fun temp1301_41 () (_ BitVec 64))
(declare-fun temp1301_42 () (_ BitVec 64))
(declare-fun temp1301_43 () (_ BitVec 64))
(declare-fun temp1301_44 () (_ BitVec 64))
(declare-fun temp1301_45 () (_ BitVec 64))
(declare-fun temp1301_46 () (_ BitVec 64))
(declare-fun temp1301_47 () (_ BitVec 64))
(declare-fun temp1301_48 () (_ BitVec 64))
(declare-fun temp1301_49 () (_ BitVec 64))
(declare-fun temp1301_50 () (_ BitVec 64))
(declare-fun temp1301_51 () (_ BitVec 64))
(declare-fun temp1301_52 () (_ BitVec 64))
(declare-fun temp1301_53 () (_ BitVec 64))
(declare-fun temp1301_54 () (_ BitVec 64))
(declare-fun temp1301_55 () (_ BitVec 64))
(declare-fun temp1301_56 () (_ BitVec 64))
(declare-fun temp1301_57 () (_ BitVec 64))
(declare-fun temp1301_58 () (_ BitVec 64))
(declare-fun temp1301_59 () (_ BitVec 64))
(declare-fun temp1301_60 () (_ BitVec 64))
(declare-fun temp1301_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp1301_62 () (_ BitVec 64))
(declare-fun temp1301_63 () (_ BitVec 64))
(declare-fun temp1301_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1301_65 () (_ BitVec 64))
(declare-fun temp1301_66 () (_ BitVec 64))
(declare-fun temp1301_67 () (_ BitVec 64))
(declare-fun temp1301_68 () (_ BitVec 64))
(declare-fun temp1301_69 () (_ BitVec 64))
(declare-fun temp1301_70 () (_ BitVec 64))
(declare-fun temp1301_71 () (_ BitVec 64))
(declare-fun temp1301_72 () (_ BitVec 64))
(declare-fun temp1301_73 () (_ BitVec 64))
(declare-fun temp1301_74 () (_ BitVec 64))
(declare-fun temp1301_75 () (_ BitVec 64))
(declare-fun temp1301_76 () (_ BitVec 64))
(declare-fun temp1301_77 () (_ BitVec 64))
(declare-fun temp1301_78 () (_ BitVec 64))
(declare-fun temp1301_79 () (_ BitVec 64))
(declare-fun temp1301_80 () (_ BitVec 64))
(declare-fun temp1301_81 () (_ BitVec 64))
(declare-fun temp1301_82 () (_ BitVec 64))
(declare-fun temp1301_83 () (_ BitVec 64))
(declare-fun temp1301_84 () (_ BitVec 64))
(declare-fun temp1301_85 () (_ BitVec 64))
(declare-fun temp1301_86 () (_ BitVec 64))
(declare-fun temp1301_87 () (_ BitVec 64))
(declare-fun temp1301_88 () (_ BitVec 64))
(declare-fun temp1301_89 () (_ BitVec 64))
(declare-fun temp1301_90 () (_ BitVec 64))
(declare-fun temp1301_91 () (_ BitVec 64))
(declare-fun temp1301_92 () (_ BitVec 64))
(declare-fun temp1301_93 () (_ BitVec 64))
(declare-fun temp1301_94 () (_ BitVec 64))
(declare-fun temp1301_95 () (_ BitVec 64))
(declare-fun temp1301_96 () (_ BitVec 64))
(declare-fun temp1301_97 () (_ BitVec 64))
(declare-fun temp1301_98 () (_ BitVec 64))
(declare-fun temp1301_99 () (_ BitVec 64))
(declare-fun temp1301_100 () (_ BitVec 64))
(declare-fun temp1301_101 () (_ BitVec 64))
(declare-fun temp1301_102 () (_ BitVec 64))
(declare-fun temp1301_103 () (_ BitVec 64))
(declare-fun temp1301_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp1301_105 () (_ BitVec 64))
(declare-fun temp1301_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp1301_107 () (_ BitVec 64))
(declare-fun temp1301_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1301_109 () (_ BitVec 64))
(declare-fun temp1301_110 () (_ BitVec 64))
(declare-fun temp1301_111 () (_ BitVec 64))
(declare-fun temp1301_112 () (_ BitVec 64))
(declare-fun temp1301_113 () (_ BitVec 64))
(declare-fun temp1301_114 () (_ BitVec 64))
(declare-fun temp1301_115 () (_ BitVec 64))
(declare-fun temp1301_116 () (_ BitVec 64))
(declare-fun temp1301_117 () (_ BitVec 64))
(declare-fun temp1301_118 () (_ BitVec 64))
(declare-fun temp1301_119 () (_ BitVec 64))
(declare-fun temp1301_120 () (_ BitVec 64))
(declare-fun temp1301_121 () (_ BitVec 64))
(declare-fun temp1301_122 () (_ BitVec 64))
(declare-fun temp1301_123 () (_ BitVec 64))
(declare-fun temp1301_124 () (_ BitVec 64))
(declare-fun temp1301_126 () (_ BitVec 64))
(declare-fun temp1301_127 () (_ BitVec 64))
(declare-fun temp1301_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp1301_128 () (_ BitVec 64))
(declare-fun temp1301_129 () (_ BitVec 64))
(declare-fun temp1301_131 () (_ BitVec 64))
(declare-fun temp1301_132 () (_ BitVec 64))
(declare-fun temp1301_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp1301_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp1301_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp1301_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp1301_136 () (_ BitVec 64))
(declare-fun temp1301_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp1301_139 () (_ BitVec 64))
(declare-fun temp1301_140 () (_ BitVec 64))
(declare-fun temp1301_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp1301_141 () (_ BitVec 64))
(declare-fun temp1301_143 () (_ BitVec 64))
(declare-fun temp1301_144 () (_ BitVec 64))
(declare-fun temp1301_142 () (_ BitVec 64))
(declare-fun temp1301_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp1301_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp1301_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp1301_148 () (_ BitVec 64))
(declare-fun temp1301_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp1301_150 () (_ BitVec 64))
(declare-fun var3880579 () (_ BitVec 64))
(declare-fun var3880581 () (_ BitVec 64))
(declare-fun var3946124 () (_ BitVec 64))
(declare-fun var3946125 () (_ BitVec 64))
(declare-fun temp1301_152 () (_ BitVec 64))
(declare-fun temp1301_151 () (_ BitVec 64))
(declare-fun temp1301_153 () (_ BitVec 64))
(assert (= temp1301_1 #x0000000000000001))
(assert (= var465453 temp1301_1))
(assert (= temp1301_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp1301_2)))
(assert (= temp1301_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp1301_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp1301_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp1301_4)))
(assert (= temp1301_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp1301_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp1301_6 #x0000000000000000))
(assert (= var465488 temp1301_6))
(assert (= temp1301_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp1301_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1301_8 #x0000000000000001))
(assert (= var465522 temp1301_8))
(assert (= temp1301_10 #x0000000000000000))
(assert (= temp1301_9 temp1301_10))
(assert (= temp1301_12 #x0000000000000001))
(assert (= temp1301_11 temp1301_12))
(assert (= temp1301_13 #x0000000000000000))
(assert (= var863614 temp1301_13))
(assert (= temp1301_14 #x0000000000000001))
(assert (= var863635 temp1301_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp1301_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp1301_15)))
(assert (= temp1301_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1301_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_17 #x0000000000000000))
(assert (= var997373 temp1301_17))
(assert (= temp1301_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp1301_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_19 #x0000000000000000))
(assert (= var997418 temp1301_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp1301_20 #x0000000000000000))
(assert (= temp1301_21 temp1301_20))
(assert (= temp1301_22 (select ARGNAME_padding_NAMEEND_VAL temp1301_21)))
(assert (= temp1301_23 #x0000000000000001))
(assert (= temp1301_24 temp1301_23))
(assert (= temp1301_25 (select ARGNAME_padding_NAMEEND_VAL temp1301_24)))
(assert (= temp1301_26 #x0000000000000002))
(assert (= temp1301_27 temp1301_26))
(assert (= temp1301_28 (select ARGNAME_padding_NAMEEND_VAL temp1301_27)))
(assert (= temp1301_29 #x0000000000000003))
(assert (= temp1301_30 temp1301_29))
(assert (= temp1301_31 (select ARGNAME_padding_NAMEEND_VAL temp1301_30)))
(assert (= temp1301_32 #x0000000000000004))
(assert (= temp1301_33 temp1301_32))
(assert (= temp1301_34 (select ARGNAME_padding_NAMEEND_VAL temp1301_33)))
(assert (= temp1301_35 #x0000000000000005))
(assert (= temp1301_36 temp1301_35))
(assert (= temp1301_37 (select ARGNAME_padding_NAMEEND_VAL temp1301_36)))
(assert (= temp1301_38 #x0000000000000000))
(assert (= temp1301_39 #x0000000000000000))
(assert (= temp1301_40 temp1301_39))
(assert (= temp1301_41 (select ARGNAME_padding_NAMEEND_VAL temp1301_40)))
(assert (= temp1301_42 #x0000000000000000))
(assert (= temp1301_43 #x0000000000000001))
(assert (= temp1301_44 temp1301_43))
(assert (= temp1301_45 (select ARGNAME_padding_NAMEEND_VAL temp1301_44)))
(assert (= temp1301_46 #x0000000000000000))
(assert (= temp1301_47 #x0000000000000002))
(assert (= temp1301_48 temp1301_47))
(assert (= temp1301_49 (select ARGNAME_padding_NAMEEND_VAL temp1301_48)))
(assert (= temp1301_50 #x0000000000000000))
(assert (= temp1301_51 #x0000000000000003))
(assert (= temp1301_52 temp1301_51))
(assert (= temp1301_53 (select ARGNAME_padding_NAMEEND_VAL temp1301_52)))
(assert (= temp1301_54 #x0000000000000000))
(assert (= temp1301_55 #x0000000000000004))
(assert (= temp1301_56 temp1301_55))
(assert (= temp1301_57 (select ARGNAME_padding_NAMEEND_VAL temp1301_56)))
(assert (= temp1301_58 #x0000000000000000))
(assert (= temp1301_59 #x0000000000000005))
(assert (= temp1301_60 temp1301_59))
(assert (= temp1301_61 (select ARGNAME_padding_NAMEEND_VAL temp1301_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp1301_41 temp1301_38)
             (bvslt temp1301_45 temp1301_42)
             (bvslt temp1301_49 temp1301_46)
             (bvslt temp1301_53 temp1301_50)
             (bvslt temp1301_57 temp1301_54)
             (bvslt temp1301_61 temp1301_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_62 #x0000000000000000))
(assert (= var1716002 temp1301_62))
(assert (= temp1301_63 #x0000000000000000))
(assert (= temp1301_64 temp1301_63))
(assert (= temp1301_65 (select ARGNAME_stride_NAMEEND_VAL temp1301_64)))
(assert (= temp1301_66 #x0000000000000001))
(assert (= temp1301_67 temp1301_66))
(assert (= temp1301_68 (select ARGNAME_stride_NAMEEND_VAL temp1301_67)))
(assert (= temp1301_69 #x0000000000000002))
(assert (= temp1301_70 temp1301_69))
(assert (= temp1301_71 (select ARGNAME_stride_NAMEEND_VAL temp1301_70)))
(assert (= temp1301_72 #x0000000000000003))
(assert (= temp1301_73 temp1301_72))
(assert (= temp1301_74 (select ARGNAME_stride_NAMEEND_VAL temp1301_73)))
(assert (= temp1301_75 #x0000000000000004))
(assert (= temp1301_76 temp1301_75))
(assert (= temp1301_77 (select ARGNAME_stride_NAMEEND_VAL temp1301_76)))
(assert (= temp1301_78 #x0000000000000005))
(assert (= temp1301_79 temp1301_78))
(assert (= temp1301_80 (select ARGNAME_stride_NAMEEND_VAL temp1301_79)))
(assert (= temp1301_81 #x0000000000000000))
(assert (= temp1301_82 #x0000000000000000))
(assert (= temp1301_83 temp1301_82))
(assert (= temp1301_84 (select ARGNAME_stride_NAMEEND_VAL temp1301_83)))
(assert (= temp1301_85 #x0000000000000000))
(assert (= temp1301_86 #x0000000000000001))
(assert (= temp1301_87 temp1301_86))
(assert (= temp1301_88 (select ARGNAME_stride_NAMEEND_VAL temp1301_87)))
(assert (= temp1301_89 #x0000000000000000))
(assert (= temp1301_90 #x0000000000000002))
(assert (= temp1301_91 temp1301_90))
(assert (= temp1301_92 (select ARGNAME_stride_NAMEEND_VAL temp1301_91)))
(assert (= temp1301_93 #x0000000000000000))
(assert (= temp1301_94 #x0000000000000003))
(assert (= temp1301_95 temp1301_94))
(assert (= temp1301_96 (select ARGNAME_stride_NAMEEND_VAL temp1301_95)))
(assert (= temp1301_97 #x0000000000000000))
(assert (= temp1301_98 #x0000000000000004))
(assert (= temp1301_99 temp1301_98))
(assert (= temp1301_100 (select ARGNAME_stride_NAMEEND_VAL temp1301_99)))
(assert (= temp1301_101 #x0000000000000000))
(assert (= temp1301_102 #x0000000000000005))
(assert (= temp1301_103 temp1301_102))
(assert (= temp1301_104 (select ARGNAME_stride_NAMEEND_VAL temp1301_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp1301_84 temp1301_81)
             (bvsle temp1301_88 temp1301_85)
             (bvsle temp1301_92 temp1301_89)
             (bvsle temp1301_96 temp1301_93)
             (bvsle temp1301_100 temp1301_97)
             (bvsle temp1301_104 temp1301_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_105 #x0000000000000000))
(assert (= var1716023 temp1301_105))
(assert (= temp1301_106 #x0000000000000000))
(assert (= var1704114 temp1301_106))
(assert (= temp1301_107 #x0000000000000000))
(assert (= temp1301_108 temp1301_107))
(assert (= temp1301_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_108)))
(assert (= temp1301_110 #x0000000000000001))
(assert (= temp1301_111 temp1301_110))
(assert (= temp1301_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_111)))
(assert (= temp1301_113 #x0000000000000002))
(assert (= temp1301_114 temp1301_113))
(assert (= temp1301_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_114)))
(assert (= temp1301_116 #x0000000000000003))
(assert (= temp1301_117 temp1301_116))
(assert (= temp1301_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_117)))
(assert (= temp1301_119 #x0000000000000004))
(assert (= temp1301_120 temp1301_119))
(assert (= temp1301_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_120)))
(assert (= temp1301_122 #x0000000000000005))
(assert (= temp1301_123 temp1301_122))
(assert (= temp1301_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_123)))
(assert (= temp1301_126 var1704114))
(assert (= temp1301_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_126)))
(assert (= temp1301_125 temp1301_127))
(assert (= var1716068
   (ite (bvslt temp1301_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_128 #x0000000000000000))
(assert (= var1716068 temp1301_128))
(assert (= temp1301_129 #x0000000000000000))
(assert (= var1704114 temp1301_129))
(assert (= temp1301_131 var1704114))
(assert (= temp1301_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_131)))
(assert (= temp1301_130 temp1301_132))
(assert (= var1716090 (bvsmod temp1301_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1301_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp1301_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1301_134 #x0000000000000001))
(assert (= var1716091 temp1301_134))
(assert (= var1716110 var1716000))
(assert (= temp1301_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp1301_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1301_136 #x0000000000000001))
(assert (= var1716111 temp1301_136))
(assert (= temp1301_137 #x0000000000000001))
(assert (= var1705002 temp1301_137))
(assert (= temp1301_139 var1705002))
(assert (= temp1301_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_139)))
(assert (= temp1301_138 temp1301_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp1301_138)))
(assert (= temp1301_141 #x0000000000000000))
(assert (= var1704114 temp1301_141))
(assert (= temp1301_143 var1704114))
(assert (= temp1301_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1301_143)))
(assert (= temp1301_142 temp1301_144))
(assert (= temp1301_145 #x0000000000000002))
(assert (= var1979241 temp1301_145))
(assert (= temp1301_146 #x0000000000000001))
(assert (= var1716281 temp1301_146))
(assert (= temp1301_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1301_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1301_148 #x0000000000000001))
(assert (= var997490 temp1301_148))
(assert (= temp1301_149 #x0000000000000001))
(assert (= var997620 temp1301_149))
(assert (= var3486185 var997620))
(assert (= temp1301_150 #x0000000000000002))
(assert (= var3880579 temp1301_150))
(assert (= var3880581 (bvsub ARGNAME_weight_NAMEEND_DIM var3880579)))
(assert (= var3946124 var3880579))
(assert (= var3946125 var3880581))
(assert (= temp1301_152 #xffffffffffffffff))
(assert (= temp1301_151 temp1301_152))
(assert (= temp1301_153 #x0000000000000001))
(assert (= var997490 temp1301_153))
(model-add temp1301_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp1301_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp1301_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1301_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp1301_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1301_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






