(declare-fun temp53_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp53_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp53_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp53_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp53_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp53_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp53_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp53_8 () (_ BitVec 64))
(declare-fun temp53_10 () (_ BitVec 64))
(declare-fun temp53_9 () (_ BitVec 64))
(declare-fun temp53_12 () (_ BitVec 64))
(declare-fun temp53_11 () (_ BitVec 64))
(declare-fun temp53_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp53_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp53_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp53_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp53_17 () (_ BitVec 64))
(declare-fun temp53_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp53_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp53_20 () (_ BitVec 64))
(declare-fun temp53_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp53_22 () (_ BitVec 64))
(declare-fun temp53_23 () (_ BitVec 64))
(declare-fun temp53_24 () (_ BitVec 64))
(declare-fun temp53_25 () (_ BitVec 64))
(declare-fun temp53_26 () (_ BitVec 64))
(declare-fun temp53_27 () (_ BitVec 64))
(declare-fun temp53_28 () (_ BitVec 64))
(declare-fun temp53_29 () (_ BitVec 64))
(declare-fun temp53_30 () (_ BitVec 64))
(declare-fun temp53_31 () (_ BitVec 64))
(declare-fun temp53_32 () (_ BitVec 64))
(declare-fun temp53_33 () (_ BitVec 64))
(declare-fun temp53_34 () (_ BitVec 64))
(declare-fun temp53_35 () (_ BitVec 64))
(declare-fun temp53_36 () (_ BitVec 64))
(declare-fun temp53_37 () (_ BitVec 64))
(declare-fun temp53_38 () (_ BitVec 64))
(declare-fun temp53_39 () (_ BitVec 64))
(declare-fun temp53_40 () (_ BitVec 64))
(declare-fun temp53_41 () (_ BitVec 64))
(declare-fun temp53_42 () (_ BitVec 64))
(declare-fun temp53_43 () (_ BitVec 64))
(declare-fun temp53_44 () (_ BitVec 64))
(declare-fun temp53_45 () (_ BitVec 64))
(declare-fun temp53_46 () (_ BitVec 64))
(declare-fun temp53_47 () (_ BitVec 64))
(declare-fun temp53_48 () (_ BitVec 64))
(declare-fun temp53_49 () (_ BitVec 64))
(declare-fun temp53_50 () (_ BitVec 64))
(declare-fun temp53_51 () (_ BitVec 64))
(declare-fun temp53_52 () (_ BitVec 64))
(declare-fun temp53_53 () (_ BitVec 64))
(declare-fun temp53_54 () (_ BitVec 64))
(declare-fun temp53_55 () (_ BitVec 64))
(declare-fun temp53_56 () (_ BitVec 64))
(declare-fun temp53_57 () (_ BitVec 64))
(declare-fun temp53_58 () (_ BitVec 64))
(declare-fun temp53_59 () (_ BitVec 64))
(declare-fun temp53_60 () (_ BitVec 64))
(declare-fun temp53_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp53_62 () (_ BitVec 64))
(declare-fun temp53_63 () (_ BitVec 64))
(declare-fun temp53_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp53_65 () (_ BitVec 64))
(declare-fun temp53_66 () (_ BitVec 64))
(declare-fun temp53_67 () (_ BitVec 64))
(declare-fun temp53_68 () (_ BitVec 64))
(declare-fun temp53_69 () (_ BitVec 64))
(declare-fun temp53_70 () (_ BitVec 64))
(declare-fun temp53_71 () (_ BitVec 64))
(declare-fun temp53_72 () (_ BitVec 64))
(declare-fun temp53_73 () (_ BitVec 64))
(declare-fun temp53_74 () (_ BitVec 64))
(declare-fun temp53_75 () (_ BitVec 64))
(declare-fun temp53_76 () (_ BitVec 64))
(declare-fun temp53_77 () (_ BitVec 64))
(declare-fun temp53_78 () (_ BitVec 64))
(declare-fun temp53_79 () (_ BitVec 64))
(declare-fun temp53_80 () (_ BitVec 64))
(declare-fun temp53_81 () (_ BitVec 64))
(declare-fun temp53_82 () (_ BitVec 64))
(declare-fun temp53_83 () (_ BitVec 64))
(declare-fun temp53_84 () (_ BitVec 64))
(declare-fun temp53_85 () (_ BitVec 64))
(declare-fun temp53_86 () (_ BitVec 64))
(declare-fun temp53_87 () (_ BitVec 64))
(declare-fun temp53_88 () (_ BitVec 64))
(declare-fun temp53_89 () (_ BitVec 64))
(declare-fun temp53_90 () (_ BitVec 64))
(declare-fun temp53_91 () (_ BitVec 64))
(declare-fun temp53_92 () (_ BitVec 64))
(declare-fun temp53_93 () (_ BitVec 64))
(declare-fun temp53_94 () (_ BitVec 64))
(declare-fun temp53_95 () (_ BitVec 64))
(declare-fun temp53_96 () (_ BitVec 64))
(declare-fun temp53_97 () (_ BitVec 64))
(declare-fun temp53_98 () (_ BitVec 64))
(declare-fun temp53_99 () (_ BitVec 64))
(declare-fun temp53_100 () (_ BitVec 64))
(declare-fun temp53_101 () (_ BitVec 64))
(declare-fun temp53_102 () (_ BitVec 64))
(declare-fun temp53_103 () (_ BitVec 64))
(declare-fun temp53_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp53_105 () (_ BitVec 64))
(declare-fun temp53_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp53_107 () (_ BitVec 64))
(declare-fun temp53_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp53_109 () (_ BitVec 64))
(declare-fun temp53_110 () (_ BitVec 64))
(declare-fun temp53_111 () (_ BitVec 64))
(declare-fun temp53_112 () (_ BitVec 64))
(declare-fun temp53_113 () (_ BitVec 64))
(declare-fun temp53_114 () (_ BitVec 64))
(declare-fun temp53_115 () (_ BitVec 64))
(declare-fun temp53_116 () (_ BitVec 64))
(declare-fun temp53_117 () (_ BitVec 64))
(declare-fun temp53_118 () (_ BitVec 64))
(declare-fun temp53_119 () (_ BitVec 64))
(declare-fun temp53_120 () (_ BitVec 64))
(declare-fun temp53_121 () (_ BitVec 64))
(declare-fun temp53_122 () (_ BitVec 64))
(declare-fun temp53_123 () (_ BitVec 64))
(declare-fun temp53_124 () (_ BitVec 64))
(declare-fun temp53_126 () (_ BitVec 64))
(declare-fun temp53_127 () (_ BitVec 64))
(declare-fun temp53_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp53_128 () (_ BitVec 64))
(declare-fun temp53_129 () (_ BitVec 64))
(declare-fun temp53_131 () (_ BitVec 64))
(declare-fun temp53_132 () (_ BitVec 64))
(declare-fun temp53_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp53_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp53_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp53_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp53_136 () (_ BitVec 64))
(declare-fun temp53_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp53_139 () (_ BitVec 64))
(declare-fun temp53_140 () (_ BitVec 64))
(declare-fun temp53_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp53_141 () (_ BitVec 64))
(declare-fun temp53_143 () (_ BitVec 64))
(declare-fun temp53_144 () (_ BitVec 64))
(declare-fun temp53_142 () (_ BitVec 64))
(declare-fun temp53_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp53_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp53_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp53_148 () (_ BitVec 64))
(declare-fun temp53_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp53_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp53_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4272528 () (_ BitVec 64))
(declare-fun var997820 () (_ BitVec 64))
(declare-fun temp53_152 () (_ BitVec 64))
(declare-fun var997821 () (_ BitVec 64))
(declare-fun var4996941 () (_ BitVec 64))
(declare-fun temp53_154 () (_ BitVec 64))
(declare-fun temp53_153 () (_ BitVec 64))
(declare-fun temp53_155 () (_ BitVec 64))
(declare-fun var5574122 () (_ BitVec 64))
(declare-fun temp53_157 () (_ BitVec 64))
(declare-fun temp53_156 () (_ BitVec 64))
(declare-fun temp53_158 () (_ BitVec 64))
(assert (= temp53_1 #x0000000000000001))
(assert (= var465453 temp53_1))
(assert (= temp53_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp53_2)))
(assert (= temp53_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp53_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp53_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp53_4)))
(assert (= temp53_5 #x0000000000000000))
(assert (= var465487 (ite (= var465486 temp53_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp53_6 #x0000000000000000))
(assert (= var465488 temp53_6))
(assert (= temp53_7 #x0000000000000000))
(assert (= var465522 (ite (= var465485 temp53_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp53_8 #x0000000000000001))
(assert (= var465522 temp53_8))
(assert (= temp53_10 #x0000000000000000))
(assert (= temp53_9 temp53_10))
(assert (= temp53_12 #x0000000000000001))
(assert (= temp53_11 temp53_12))
(assert (= temp53_13 #x0000000000000000))
(assert (= var863614 temp53_13))
(assert (= temp53_14 #x0000000000000001))
(assert (= var863635 temp53_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp53_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp53_15)))
(assert (= temp53_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp53_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp53_17 #x0000000000000000))
(assert (= var997373 temp53_17))
(assert (= temp53_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp53_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp53_19 #x0000000000000000))
(assert (= var997418 temp53_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp53_20 #x0000000000000000))
(assert (= temp53_21 temp53_20))
(assert (= temp53_22 (select ARGNAME_padding_NAMEEND_VAL temp53_21)))
(assert (= temp53_23 #x0000000000000001))
(assert (= temp53_24 temp53_23))
(assert (= temp53_25 (select ARGNAME_padding_NAMEEND_VAL temp53_24)))
(assert (= temp53_26 #x0000000000000002))
(assert (= temp53_27 temp53_26))
(assert (= temp53_28 (select ARGNAME_padding_NAMEEND_VAL temp53_27)))
(assert (= temp53_29 #x0000000000000003))
(assert (= temp53_30 temp53_29))
(assert (= temp53_31 (select ARGNAME_padding_NAMEEND_VAL temp53_30)))
(assert (= temp53_32 #x0000000000000004))
(assert (= temp53_33 temp53_32))
(assert (= temp53_34 (select ARGNAME_padding_NAMEEND_VAL temp53_33)))
(assert (= temp53_35 #x0000000000000005))
(assert (= temp53_36 temp53_35))
(assert (= temp53_37 (select ARGNAME_padding_NAMEEND_VAL temp53_36)))
(assert (= temp53_38 #x0000000000000000))
(assert (= temp53_39 #x0000000000000000))
(assert (= temp53_40 temp53_39))
(assert (= temp53_41 (select ARGNAME_padding_NAMEEND_VAL temp53_40)))
(assert (= temp53_42 #x0000000000000000))
(assert (= temp53_43 #x0000000000000001))
(assert (= temp53_44 temp53_43))
(assert (= temp53_45 (select ARGNAME_padding_NAMEEND_VAL temp53_44)))
(assert (= temp53_46 #x0000000000000000))
(assert (= temp53_47 #x0000000000000002))
(assert (= temp53_48 temp53_47))
(assert (= temp53_49 (select ARGNAME_padding_NAMEEND_VAL temp53_48)))
(assert (= temp53_50 #x0000000000000000))
(assert (= temp53_51 #x0000000000000003))
(assert (= temp53_52 temp53_51))
(assert (= temp53_53 (select ARGNAME_padding_NAMEEND_VAL temp53_52)))
(assert (= temp53_54 #x0000000000000000))
(assert (= temp53_55 #x0000000000000004))
(assert (= temp53_56 temp53_55))
(assert (= temp53_57 (select ARGNAME_padding_NAMEEND_VAL temp53_56)))
(assert (= temp53_58 #x0000000000000000))
(assert (= temp53_59 #x0000000000000005))
(assert (= temp53_60 temp53_59))
(assert (= temp53_61 (select ARGNAME_padding_NAMEEND_VAL temp53_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp53_41 temp53_38)
             (bvslt temp53_45 temp53_42)
             (bvslt temp53_49 temp53_46)
             (bvslt temp53_53 temp53_50)
             (bvslt temp53_57 temp53_54)
             (bvslt temp53_61 temp53_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp53_62 #x0000000000000000))
(assert (= var1716002 temp53_62))
(assert (= temp53_63 #x0000000000000000))
(assert (= temp53_64 temp53_63))
(assert (= temp53_65 (select ARGNAME_stride_NAMEEND_VAL temp53_64)))
(assert (= temp53_66 #x0000000000000001))
(assert (= temp53_67 temp53_66))
(assert (= temp53_68 (select ARGNAME_stride_NAMEEND_VAL temp53_67)))
(assert (= temp53_69 #x0000000000000002))
(assert (= temp53_70 temp53_69))
(assert (= temp53_71 (select ARGNAME_stride_NAMEEND_VAL temp53_70)))
(assert (= temp53_72 #x0000000000000003))
(assert (= temp53_73 temp53_72))
(assert (= temp53_74 (select ARGNAME_stride_NAMEEND_VAL temp53_73)))
(assert (= temp53_75 #x0000000000000004))
(assert (= temp53_76 temp53_75))
(assert (= temp53_77 (select ARGNAME_stride_NAMEEND_VAL temp53_76)))
(assert (= temp53_78 #x0000000000000005))
(assert (= temp53_79 temp53_78))
(assert (= temp53_80 (select ARGNAME_stride_NAMEEND_VAL temp53_79)))
(assert (= temp53_81 #x0000000000000000))
(assert (= temp53_82 #x0000000000000000))
(assert (= temp53_83 temp53_82))
(assert (= temp53_84 (select ARGNAME_stride_NAMEEND_VAL temp53_83)))
(assert (= temp53_85 #x0000000000000000))
(assert (= temp53_86 #x0000000000000001))
(assert (= temp53_87 temp53_86))
(assert (= temp53_88 (select ARGNAME_stride_NAMEEND_VAL temp53_87)))
(assert (= temp53_89 #x0000000000000000))
(assert (= temp53_90 #x0000000000000002))
(assert (= temp53_91 temp53_90))
(assert (= temp53_92 (select ARGNAME_stride_NAMEEND_VAL temp53_91)))
(assert (= temp53_93 #x0000000000000000))
(assert (= temp53_94 #x0000000000000003))
(assert (= temp53_95 temp53_94))
(assert (= temp53_96 (select ARGNAME_stride_NAMEEND_VAL temp53_95)))
(assert (= temp53_97 #x0000000000000000))
(assert (= temp53_98 #x0000000000000004))
(assert (= temp53_99 temp53_98))
(assert (= temp53_100 (select ARGNAME_stride_NAMEEND_VAL temp53_99)))
(assert (= temp53_101 #x0000000000000000))
(assert (= temp53_102 #x0000000000000005))
(assert (= temp53_103 temp53_102))
(assert (= temp53_104 (select ARGNAME_stride_NAMEEND_VAL temp53_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp53_84 temp53_81)
             (bvsle temp53_88 temp53_85)
             (bvsle temp53_92 temp53_89)
             (bvsle temp53_96 temp53_93)
             (bvsle temp53_100 temp53_97)
             (bvsle temp53_104 temp53_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp53_105 #x0000000000000000))
(assert (= var1716023 temp53_105))
(assert (= temp53_106 #x0000000000000000))
(assert (= var1704114 temp53_106))
(assert (= temp53_107 #x0000000000000000))
(assert (= temp53_108 temp53_107))
(assert (= temp53_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp53_108)))
(assert (= temp53_110 #x0000000000000001))
(assert (= temp53_111 temp53_110))
(assert (= temp53_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp53_111)))
(assert (= temp53_113 #x0000000000000002))
(assert (= temp53_114 temp53_113))
(assert (= temp53_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp53_114)))
(assert (= temp53_116 #x0000000000000003))
(assert (= temp53_117 temp53_116))
(assert (= temp53_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp53_117)))
(assert (= temp53_119 #x0000000000000004))
(assert (= temp53_120 temp53_119))
(assert (= temp53_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp53_120)))
(assert (= temp53_122 #x0000000000000005))
(assert (= temp53_123 temp53_122))
(assert (= temp53_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp53_123)))
(assert (= temp53_126 var1704114))
(assert (= temp53_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp53_126)))
(assert (= temp53_125 temp53_127))
(assert (= var1716068
   (ite (bvslt temp53_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp53_128 #x0000000000000000))
(assert (= var1716068 temp53_128))
(assert (= temp53_129 #x0000000000000000))
(assert (= var1704114 temp53_129))
(assert (= temp53_131 var1704114))
(assert (= temp53_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp53_131)))
(assert (= temp53_130 temp53_132))
(assert (= var1716090 (bvsmod temp53_130 ARGNAME_groups_NAMEEND)))
(assert (= temp53_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp53_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp53_134 #x0000000000000001))
(assert (= var1716091 temp53_134))
(assert (= var1716110 var1716000))
(assert (= temp53_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp53_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp53_136 #x0000000000000001))
(assert (= var1716111 temp53_136))
(assert (= temp53_137 #x0000000000000001))
(assert (= var1705002 temp53_137))
(assert (= temp53_139 var1705002))
(assert (= temp53_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp53_139)))
(assert (= temp53_138 temp53_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp53_138)))
(assert (= temp53_141 #x0000000000000000))
(assert (= var1704114 temp53_141))
(assert (= temp53_143 var1704114))
(assert (= temp53_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp53_143)))
(assert (= temp53_142 temp53_144))
(assert (= temp53_145 #x0000000000000002))
(assert (= var1979241 temp53_145))
(assert (= temp53_146 #x0000000000000001))
(assert (= var1716281 temp53_146))
(assert (= temp53_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp53_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp53_148 #x0000000000000001))
(assert (= var997490 temp53_148))
(assert (= temp53_149 #x0000000000000001))
(assert (= var997620 temp53_149))
(assert (= var3486185 var997620))
(assert (= temp53_150 #x0000000000000000))
(assert (= var3686207 temp53_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp53_151 #x0000000000000002))
(assert (= var3815043 temp53_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4272528 var997633))
(assert (= var997820 var997345))
(assert (= temp53_152 #x0000000000000000))
(assert (= var997821
   (ite (distinct var997820 temp53_152) #x0000000000000001 #x0000000000000000)))
(assert (= var4996941 var997821))
(assert (= temp53_154 #x0000000000000001))
(assert (= temp53_153 temp53_154))
(assert (= temp53_155 #x0000000000000001))
(assert (= var5574122 temp53_155))
(assert (= temp53_157 #xffffffffffffffff))
(assert (= temp53_156 temp53_157))
(assert (= temp53_158 #x0000000000000001))
(assert (= var997490 temp53_158))
(model-add temp53_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp53_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp53_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp53_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp53_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp53_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






