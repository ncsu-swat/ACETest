(declare-fun temp1061_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp1061_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp1061_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp1061_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp1061_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp1061_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp1061_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp1061_8 () (_ BitVec 64))
(declare-fun temp1061_10 () (_ BitVec 64))
(declare-fun temp1061_9 () (_ BitVec 64))
(declare-fun temp1061_12 () (_ BitVec 64))
(declare-fun temp1061_11 () (_ BitVec 64))
(declare-fun temp1061_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp1061_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp1061_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp1061_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp1061_17 () (_ BitVec 64))
(declare-fun temp1061_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp1061_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp1061_20 () (_ BitVec 64))
(declare-fun temp1061_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1061_22 () (_ BitVec 64))
(declare-fun temp1061_23 () (_ BitVec 64))
(declare-fun temp1061_24 () (_ BitVec 64))
(declare-fun temp1061_25 () (_ BitVec 64))
(declare-fun temp1061_26 () (_ BitVec 64))
(declare-fun temp1061_27 () (_ BitVec 64))
(declare-fun temp1061_28 () (_ BitVec 64))
(declare-fun temp1061_29 () (_ BitVec 64))
(declare-fun temp1061_30 () (_ BitVec 64))
(declare-fun temp1061_31 () (_ BitVec 64))
(declare-fun temp1061_32 () (_ BitVec 64))
(declare-fun temp1061_33 () (_ BitVec 64))
(declare-fun temp1061_34 () (_ BitVec 64))
(declare-fun temp1061_35 () (_ BitVec 64))
(declare-fun temp1061_36 () (_ BitVec 64))
(declare-fun temp1061_37 () (_ BitVec 64))
(declare-fun temp1061_38 () (_ BitVec 64))
(declare-fun temp1061_39 () (_ BitVec 64))
(declare-fun temp1061_40 () (_ BitVec 64))
(declare-fun temp1061_41 () (_ BitVec 64))
(declare-fun temp1061_42 () (_ BitVec 64))
(declare-fun temp1061_43 () (_ BitVec 64))
(declare-fun temp1061_44 () (_ BitVec 64))
(declare-fun temp1061_45 () (_ BitVec 64))
(declare-fun temp1061_46 () (_ BitVec 64))
(declare-fun temp1061_47 () (_ BitVec 64))
(declare-fun temp1061_48 () (_ BitVec 64))
(declare-fun temp1061_49 () (_ BitVec 64))
(declare-fun temp1061_50 () (_ BitVec 64))
(declare-fun temp1061_51 () (_ BitVec 64))
(declare-fun temp1061_52 () (_ BitVec 64))
(declare-fun temp1061_53 () (_ BitVec 64))
(declare-fun temp1061_54 () (_ BitVec 64))
(declare-fun temp1061_55 () (_ BitVec 64))
(declare-fun temp1061_56 () (_ BitVec 64))
(declare-fun temp1061_57 () (_ BitVec 64))
(declare-fun temp1061_58 () (_ BitVec 64))
(declare-fun temp1061_59 () (_ BitVec 64))
(declare-fun temp1061_60 () (_ BitVec 64))
(declare-fun temp1061_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp1061_62 () (_ BitVec 64))
(declare-fun temp1061_63 () (_ BitVec 64))
(declare-fun temp1061_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1061_65 () (_ BitVec 64))
(declare-fun temp1061_66 () (_ BitVec 64))
(declare-fun temp1061_67 () (_ BitVec 64))
(declare-fun temp1061_68 () (_ BitVec 64))
(declare-fun temp1061_69 () (_ BitVec 64))
(declare-fun temp1061_70 () (_ BitVec 64))
(declare-fun temp1061_71 () (_ BitVec 64))
(declare-fun temp1061_72 () (_ BitVec 64))
(declare-fun temp1061_73 () (_ BitVec 64))
(declare-fun temp1061_74 () (_ BitVec 64))
(declare-fun temp1061_75 () (_ BitVec 64))
(declare-fun temp1061_76 () (_ BitVec 64))
(declare-fun temp1061_77 () (_ BitVec 64))
(declare-fun temp1061_78 () (_ BitVec 64))
(declare-fun temp1061_79 () (_ BitVec 64))
(declare-fun temp1061_80 () (_ BitVec 64))
(declare-fun temp1061_81 () (_ BitVec 64))
(declare-fun temp1061_82 () (_ BitVec 64))
(declare-fun temp1061_83 () (_ BitVec 64))
(declare-fun temp1061_84 () (_ BitVec 64))
(declare-fun temp1061_85 () (_ BitVec 64))
(declare-fun temp1061_86 () (_ BitVec 64))
(declare-fun temp1061_87 () (_ BitVec 64))
(declare-fun temp1061_88 () (_ BitVec 64))
(declare-fun temp1061_89 () (_ BitVec 64))
(declare-fun temp1061_90 () (_ BitVec 64))
(declare-fun temp1061_91 () (_ BitVec 64))
(declare-fun temp1061_92 () (_ BitVec 64))
(declare-fun temp1061_93 () (_ BitVec 64))
(declare-fun temp1061_94 () (_ BitVec 64))
(declare-fun temp1061_95 () (_ BitVec 64))
(declare-fun temp1061_96 () (_ BitVec 64))
(declare-fun temp1061_97 () (_ BitVec 64))
(declare-fun temp1061_98 () (_ BitVec 64))
(declare-fun temp1061_99 () (_ BitVec 64))
(declare-fun temp1061_100 () (_ BitVec 64))
(declare-fun temp1061_101 () (_ BitVec 64))
(declare-fun temp1061_102 () (_ BitVec 64))
(declare-fun temp1061_103 () (_ BitVec 64))
(declare-fun temp1061_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp1061_105 () (_ BitVec 64))
(declare-fun temp1061_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp1061_107 () (_ BitVec 64))
(declare-fun temp1061_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1061_109 () (_ BitVec 64))
(declare-fun temp1061_110 () (_ BitVec 64))
(declare-fun temp1061_111 () (_ BitVec 64))
(declare-fun temp1061_112 () (_ BitVec 64))
(declare-fun temp1061_113 () (_ BitVec 64))
(declare-fun temp1061_114 () (_ BitVec 64))
(declare-fun temp1061_115 () (_ BitVec 64))
(declare-fun temp1061_116 () (_ BitVec 64))
(declare-fun temp1061_117 () (_ BitVec 64))
(declare-fun temp1061_118 () (_ BitVec 64))
(declare-fun temp1061_119 () (_ BitVec 64))
(declare-fun temp1061_120 () (_ BitVec 64))
(declare-fun temp1061_121 () (_ BitVec 64))
(declare-fun temp1061_122 () (_ BitVec 64))
(declare-fun temp1061_123 () (_ BitVec 64))
(declare-fun temp1061_124 () (_ BitVec 64))
(declare-fun temp1061_126 () (_ BitVec 64))
(declare-fun temp1061_127 () (_ BitVec 64))
(declare-fun temp1061_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp1061_128 () (_ BitVec 64))
(declare-fun temp1061_129 () (_ BitVec 64))
(declare-fun temp1061_131 () (_ BitVec 64))
(declare-fun temp1061_132 () (_ BitVec 64))
(declare-fun temp1061_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp1061_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp1061_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp1061_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp1061_136 () (_ BitVec 64))
(declare-fun temp1061_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp1061_139 () (_ BitVec 64))
(declare-fun temp1061_140 () (_ BitVec 64))
(declare-fun temp1061_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp1061_141 () (_ BitVec 64))
(declare-fun temp1061_143 () (_ BitVec 64))
(declare-fun temp1061_144 () (_ BitVec 64))
(declare-fun temp1061_142 () (_ BitVec 64))
(declare-fun temp1061_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp1061_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp1061_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp1061_148 () (_ BitVec 64))
(declare-fun temp1061_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp1061_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp1061_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var3944848 () (_ BitVec 64))
(declare-fun var4206992 () (_ BitVec 64))
(declare-fun temp1061_152 () (_ BitVec 64))
(declare-fun var998846 () (_ BitVec 64))
(declare-fun temp1061_153 () (_ BitVec 64))
(declare-fun temp1061_154 () (_ BitVec 64))
(declare-fun var4535939 () (_ BitVec 64))
(declare-fun temp1061_155 () (_ BitVec 64))
(assert (= temp1061_1 #x0000000000000001))
(assert (= var465453 temp1061_1))
(assert (= temp1061_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp1061_2)))
(assert (= temp1061_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp1061_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp1061_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp1061_4)))
(assert (= temp1061_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp1061_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp1061_6 #x0000000000000000))
(assert (= var465488 temp1061_6))
(assert (= temp1061_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp1061_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1061_8 #x0000000000000001))
(assert (= var465522 temp1061_8))
(assert (= temp1061_10 #x0000000000000000))
(assert (= temp1061_9 temp1061_10))
(assert (= temp1061_12 #x0000000000000001))
(assert (= temp1061_11 temp1061_12))
(assert (= temp1061_13 #x0000000000000000))
(assert (= var863614 temp1061_13))
(assert (= temp1061_14 #x0000000000000001))
(assert (= var863635 temp1061_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp1061_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp1061_15)))
(assert (= temp1061_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1061_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1061_17 #x0000000000000000))
(assert (= var997373 temp1061_17))
(assert (= temp1061_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp1061_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1061_19 #x0000000000000000))
(assert (= var997418 temp1061_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp1061_20 #x0000000000000000))
(assert (= temp1061_21 temp1061_20))
(assert (= temp1061_22 (select ARGNAME_padding_NAMEEND_VAL temp1061_21)))
(assert (= temp1061_23 #x0000000000000001))
(assert (= temp1061_24 temp1061_23))
(assert (= temp1061_25 (select ARGNAME_padding_NAMEEND_VAL temp1061_24)))
(assert (= temp1061_26 #x0000000000000002))
(assert (= temp1061_27 temp1061_26))
(assert (= temp1061_28 (select ARGNAME_padding_NAMEEND_VAL temp1061_27)))
(assert (= temp1061_29 #x0000000000000003))
(assert (= temp1061_30 temp1061_29))
(assert (= temp1061_31 (select ARGNAME_padding_NAMEEND_VAL temp1061_30)))
(assert (= temp1061_32 #x0000000000000004))
(assert (= temp1061_33 temp1061_32))
(assert (= temp1061_34 (select ARGNAME_padding_NAMEEND_VAL temp1061_33)))
(assert (= temp1061_35 #x0000000000000005))
(assert (= temp1061_36 temp1061_35))
(assert (= temp1061_37 (select ARGNAME_padding_NAMEEND_VAL temp1061_36)))
(assert (= temp1061_38 #x0000000000000000))
(assert (= temp1061_39 #x0000000000000000))
(assert (= temp1061_40 temp1061_39))
(assert (= temp1061_41 (select ARGNAME_padding_NAMEEND_VAL temp1061_40)))
(assert (= temp1061_42 #x0000000000000000))
(assert (= temp1061_43 #x0000000000000001))
(assert (= temp1061_44 temp1061_43))
(assert (= temp1061_45 (select ARGNAME_padding_NAMEEND_VAL temp1061_44)))
(assert (= temp1061_46 #x0000000000000000))
(assert (= temp1061_47 #x0000000000000002))
(assert (= temp1061_48 temp1061_47))
(assert (= temp1061_49 (select ARGNAME_padding_NAMEEND_VAL temp1061_48)))
(assert (= temp1061_50 #x0000000000000000))
(assert (= temp1061_51 #x0000000000000003))
(assert (= temp1061_52 temp1061_51))
(assert (= temp1061_53 (select ARGNAME_padding_NAMEEND_VAL temp1061_52)))
(assert (= temp1061_54 #x0000000000000000))
(assert (= temp1061_55 #x0000000000000004))
(assert (= temp1061_56 temp1061_55))
(assert (= temp1061_57 (select ARGNAME_padding_NAMEEND_VAL temp1061_56)))
(assert (= temp1061_58 #x0000000000000000))
(assert (= temp1061_59 #x0000000000000005))
(assert (= temp1061_60 temp1061_59))
(assert (= temp1061_61 (select ARGNAME_padding_NAMEEND_VAL temp1061_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp1061_41 temp1061_38)
             (bvslt temp1061_45 temp1061_42)
             (bvslt temp1061_49 temp1061_46)
             (bvslt temp1061_53 temp1061_50)
             (bvslt temp1061_57 temp1061_54)
             (bvslt temp1061_61 temp1061_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1061_62 #x0000000000000000))
(assert (= var1716002 temp1061_62))
(assert (= temp1061_63 #x0000000000000000))
(assert (= temp1061_64 temp1061_63))
(assert (= temp1061_65 (select ARGNAME_stride_NAMEEND_VAL temp1061_64)))
(assert (= temp1061_66 #x0000000000000001))
(assert (= temp1061_67 temp1061_66))
(assert (= temp1061_68 (select ARGNAME_stride_NAMEEND_VAL temp1061_67)))
(assert (= temp1061_69 #x0000000000000002))
(assert (= temp1061_70 temp1061_69))
(assert (= temp1061_71 (select ARGNAME_stride_NAMEEND_VAL temp1061_70)))
(assert (= temp1061_72 #x0000000000000003))
(assert (= temp1061_73 temp1061_72))
(assert (= temp1061_74 (select ARGNAME_stride_NAMEEND_VAL temp1061_73)))
(assert (= temp1061_75 #x0000000000000004))
(assert (= temp1061_76 temp1061_75))
(assert (= temp1061_77 (select ARGNAME_stride_NAMEEND_VAL temp1061_76)))
(assert (= temp1061_78 #x0000000000000005))
(assert (= temp1061_79 temp1061_78))
(assert (= temp1061_80 (select ARGNAME_stride_NAMEEND_VAL temp1061_79)))
(assert (= temp1061_81 #x0000000000000000))
(assert (= temp1061_82 #x0000000000000000))
(assert (= temp1061_83 temp1061_82))
(assert (= temp1061_84 (select ARGNAME_stride_NAMEEND_VAL temp1061_83)))
(assert (= temp1061_85 #x0000000000000000))
(assert (= temp1061_86 #x0000000000000001))
(assert (= temp1061_87 temp1061_86))
(assert (= temp1061_88 (select ARGNAME_stride_NAMEEND_VAL temp1061_87)))
(assert (= temp1061_89 #x0000000000000000))
(assert (= temp1061_90 #x0000000000000002))
(assert (= temp1061_91 temp1061_90))
(assert (= temp1061_92 (select ARGNAME_stride_NAMEEND_VAL temp1061_91)))
(assert (= temp1061_93 #x0000000000000000))
(assert (= temp1061_94 #x0000000000000003))
(assert (= temp1061_95 temp1061_94))
(assert (= temp1061_96 (select ARGNAME_stride_NAMEEND_VAL temp1061_95)))
(assert (= temp1061_97 #x0000000000000000))
(assert (= temp1061_98 #x0000000000000004))
(assert (= temp1061_99 temp1061_98))
(assert (= temp1061_100 (select ARGNAME_stride_NAMEEND_VAL temp1061_99)))
(assert (= temp1061_101 #x0000000000000000))
(assert (= temp1061_102 #x0000000000000005))
(assert (= temp1061_103 temp1061_102))
(assert (= temp1061_104 (select ARGNAME_stride_NAMEEND_VAL temp1061_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp1061_84 temp1061_81)
             (bvsle temp1061_88 temp1061_85)
             (bvsle temp1061_92 temp1061_89)
             (bvsle temp1061_96 temp1061_93)
             (bvsle temp1061_100 temp1061_97)
             (bvsle temp1061_104 temp1061_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1061_105 #x0000000000000000))
(assert (= var1716023 temp1061_105))
(assert (= temp1061_106 #x0000000000000000))
(assert (= var1704114 temp1061_106))
(assert (= temp1061_107 #x0000000000000000))
(assert (= temp1061_108 temp1061_107))
(assert (= temp1061_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1061_108)))
(assert (= temp1061_110 #x0000000000000001))
(assert (= temp1061_111 temp1061_110))
(assert (= temp1061_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1061_111)))
(assert (= temp1061_113 #x0000000000000002))
(assert (= temp1061_114 temp1061_113))
(assert (= temp1061_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1061_114)))
(assert (= temp1061_116 #x0000000000000003))
(assert (= temp1061_117 temp1061_116))
(assert (= temp1061_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1061_117)))
(assert (= temp1061_119 #x0000000000000004))
(assert (= temp1061_120 temp1061_119))
(assert (= temp1061_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1061_120)))
(assert (= temp1061_122 #x0000000000000005))
(assert (= temp1061_123 temp1061_122))
(assert (= temp1061_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1061_123)))
(assert (= temp1061_126 var1704114))
(assert (= temp1061_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1061_126)))
(assert (= temp1061_125 temp1061_127))
(assert (= var1716068
   (ite (bvslt temp1061_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1061_128 #x0000000000000000))
(assert (= var1716068 temp1061_128))
(assert (= temp1061_129 #x0000000000000000))
(assert (= var1704114 temp1061_129))
(assert (= temp1061_131 var1704114))
(assert (= temp1061_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1061_131)))
(assert (= temp1061_130 temp1061_132))
(assert (= var1716090 (bvsmod temp1061_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1061_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp1061_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1061_134 #x0000000000000001))
(assert (= var1716091 temp1061_134))
(assert (= var1716110 var1716000))
(assert (= temp1061_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp1061_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1061_136 #x0000000000000001))
(assert (= var1716111 temp1061_136))
(assert (= temp1061_137 #x0000000000000001))
(assert (= var1705002 temp1061_137))
(assert (= temp1061_139 var1705002))
(assert (= temp1061_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1061_139)))
(assert (= temp1061_138 temp1061_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp1061_138)))
(assert (= temp1061_141 #x0000000000000000))
(assert (= var1704114 temp1061_141))
(assert (= temp1061_143 var1704114))
(assert (= temp1061_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1061_143)))
(assert (= temp1061_142 temp1061_144))
(assert (= temp1061_145 #x0000000000000002))
(assert (= var1979241 temp1061_145))
(assert (= temp1061_146 #x0000000000000001))
(assert (= var1716281 temp1061_146))
(assert (= temp1061_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1061_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1061_148 #x0000000000000001))
(assert (= var997490 temp1061_148))
(assert (= temp1061_149 #x0000000000000001))
(assert (= var997620 temp1061_149))
(assert (= var3486185 var997620))
(assert (= temp1061_150 #x0000000000000000))
(assert (= var3686207 temp1061_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp1061_151 #x0000000000000002))
(assert (= var3815043 temp1061_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var3944848 var997633))
(assert (= var4206992 var997633))
(assert (= temp1061_152 #x0000000000000001))
(assert (= var998846
   (ite (= ARGNAME_groups_NAMEEND temp1061_152)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1061_153 #x0000000000000001))
(assert (= var998846 temp1061_153))
(assert (= temp1061_154 #x0000000000000002))
(assert (= var4535939 temp1061_154))
(assert (= temp1061_155 #x0000000000000001))
(assert (= var997490 temp1061_155))
(model-add temp1061_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp1061_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp1061_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1061_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp1061_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1061_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






