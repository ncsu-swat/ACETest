(declare-fun temp46_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp46_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp46_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp46_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp46_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp46_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp46_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp46_8 () (_ BitVec 64))
(declare-fun temp46_10 () (_ BitVec 64))
(declare-fun temp46_9 () (_ BitVec 64))
(declare-fun temp46_12 () (_ BitVec 64))
(declare-fun temp46_11 () (_ BitVec 64))
(declare-fun temp46_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp46_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp46_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp46_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp46_17 () (_ BitVec 64))
(declare-fun temp46_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp46_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp46_20 () (_ BitVec 64))
(declare-fun temp46_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp46_22 () (_ BitVec 64))
(declare-fun temp46_23 () (_ BitVec 64))
(declare-fun temp46_24 () (_ BitVec 64))
(declare-fun temp46_25 () (_ BitVec 64))
(declare-fun temp46_26 () (_ BitVec 64))
(declare-fun temp46_27 () (_ BitVec 64))
(declare-fun temp46_28 () (_ BitVec 64))
(declare-fun temp46_29 () (_ BitVec 64))
(declare-fun temp46_30 () (_ BitVec 64))
(declare-fun temp46_31 () (_ BitVec 64))
(declare-fun temp46_32 () (_ BitVec 64))
(declare-fun temp46_33 () (_ BitVec 64))
(declare-fun temp46_34 () (_ BitVec 64))
(declare-fun temp46_35 () (_ BitVec 64))
(declare-fun temp46_36 () (_ BitVec 64))
(declare-fun temp46_37 () (_ BitVec 64))
(declare-fun temp46_38 () (_ BitVec 64))
(declare-fun temp46_39 () (_ BitVec 64))
(declare-fun temp46_40 () (_ BitVec 64))
(declare-fun temp46_41 () (_ BitVec 64))
(declare-fun temp46_42 () (_ BitVec 64))
(declare-fun temp46_43 () (_ BitVec 64))
(declare-fun temp46_44 () (_ BitVec 64))
(declare-fun temp46_45 () (_ BitVec 64))
(declare-fun temp46_46 () (_ BitVec 64))
(declare-fun temp46_47 () (_ BitVec 64))
(declare-fun temp46_48 () (_ BitVec 64))
(declare-fun temp46_49 () (_ BitVec 64))
(declare-fun temp46_50 () (_ BitVec 64))
(declare-fun temp46_51 () (_ BitVec 64))
(declare-fun temp46_52 () (_ BitVec 64))
(declare-fun temp46_53 () (_ BitVec 64))
(declare-fun temp46_54 () (_ BitVec 64))
(declare-fun temp46_55 () (_ BitVec 64))
(declare-fun temp46_56 () (_ BitVec 64))
(declare-fun temp46_57 () (_ BitVec 64))
(declare-fun temp46_58 () (_ BitVec 64))
(declare-fun temp46_59 () (_ BitVec 64))
(declare-fun temp46_60 () (_ BitVec 64))
(declare-fun temp46_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp46_62 () (_ BitVec 64))
(declare-fun temp46_63 () (_ BitVec 64))
(declare-fun temp46_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp46_65 () (_ BitVec 64))
(declare-fun temp46_66 () (_ BitVec 64))
(declare-fun temp46_67 () (_ BitVec 64))
(declare-fun temp46_68 () (_ BitVec 64))
(declare-fun temp46_69 () (_ BitVec 64))
(declare-fun temp46_70 () (_ BitVec 64))
(declare-fun temp46_71 () (_ BitVec 64))
(declare-fun temp46_72 () (_ BitVec 64))
(declare-fun temp46_73 () (_ BitVec 64))
(declare-fun temp46_74 () (_ BitVec 64))
(declare-fun temp46_75 () (_ BitVec 64))
(declare-fun temp46_76 () (_ BitVec 64))
(declare-fun temp46_77 () (_ BitVec 64))
(declare-fun temp46_78 () (_ BitVec 64))
(declare-fun temp46_79 () (_ BitVec 64))
(declare-fun temp46_80 () (_ BitVec 64))
(declare-fun temp46_81 () (_ BitVec 64))
(declare-fun temp46_82 () (_ BitVec 64))
(declare-fun temp46_83 () (_ BitVec 64))
(declare-fun temp46_84 () (_ BitVec 64))
(declare-fun temp46_85 () (_ BitVec 64))
(declare-fun temp46_86 () (_ BitVec 64))
(declare-fun temp46_87 () (_ BitVec 64))
(declare-fun temp46_88 () (_ BitVec 64))
(declare-fun temp46_89 () (_ BitVec 64))
(declare-fun temp46_90 () (_ BitVec 64))
(declare-fun temp46_91 () (_ BitVec 64))
(declare-fun temp46_92 () (_ BitVec 64))
(declare-fun temp46_93 () (_ BitVec 64))
(declare-fun temp46_94 () (_ BitVec 64))
(declare-fun temp46_95 () (_ BitVec 64))
(declare-fun temp46_96 () (_ BitVec 64))
(declare-fun temp46_97 () (_ BitVec 64))
(declare-fun temp46_98 () (_ BitVec 64))
(declare-fun temp46_99 () (_ BitVec 64))
(declare-fun temp46_100 () (_ BitVec 64))
(declare-fun temp46_101 () (_ BitVec 64))
(declare-fun temp46_102 () (_ BitVec 64))
(declare-fun temp46_103 () (_ BitVec 64))
(declare-fun temp46_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp46_105 () (_ BitVec 64))
(declare-fun temp46_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp46_107 () (_ BitVec 64))
(declare-fun temp46_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp46_109 () (_ BitVec 64))
(declare-fun temp46_110 () (_ BitVec 64))
(declare-fun temp46_111 () (_ BitVec 64))
(declare-fun temp46_112 () (_ BitVec 64))
(declare-fun temp46_113 () (_ BitVec 64))
(declare-fun temp46_114 () (_ BitVec 64))
(declare-fun temp46_115 () (_ BitVec 64))
(declare-fun temp46_116 () (_ BitVec 64))
(declare-fun temp46_117 () (_ BitVec 64))
(declare-fun temp46_118 () (_ BitVec 64))
(declare-fun temp46_119 () (_ BitVec 64))
(declare-fun temp46_120 () (_ BitVec 64))
(declare-fun temp46_121 () (_ BitVec 64))
(declare-fun temp46_122 () (_ BitVec 64))
(declare-fun temp46_123 () (_ BitVec 64))
(declare-fun temp46_124 () (_ BitVec 64))
(declare-fun temp46_126 () (_ BitVec 64))
(declare-fun temp46_127 () (_ BitVec 64))
(declare-fun temp46_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp46_128 () (_ BitVec 64))
(declare-fun temp46_129 () (_ BitVec 64))
(declare-fun temp46_131 () (_ BitVec 64))
(declare-fun temp46_132 () (_ BitVec 64))
(declare-fun temp46_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp46_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp46_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp46_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp46_136 () (_ BitVec 64))
(declare-fun temp46_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp46_139 () (_ BitVec 64))
(declare-fun temp46_140 () (_ BitVec 64))
(declare-fun temp46_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp46_141 () (_ BitVec 64))
(declare-fun temp46_143 () (_ BitVec 64))
(declare-fun temp46_144 () (_ BitVec 64))
(declare-fun temp46_142 () (_ BitVec 64))
(declare-fun temp46_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp46_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp46_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp46_148 () (_ BitVec 64))
(declare-fun temp46_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp46_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp46_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4272528 () (_ BitVec 64))
(declare-fun var997820 () (_ BitVec 64))
(declare-fun temp46_152 () (_ BitVec 64))
(declare-fun var997821 () (_ BitVec 64))
(declare-fun var4996941 () (_ BitVec 64))
(declare-fun temp46_153 () (_ BitVec 64))
(assert (= temp46_1 #x0000000000000001))
(assert (= var465453 temp46_1))
(assert (= temp46_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp46_2)))
(assert (= temp46_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp46_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp46_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp46_4)))
(assert (= temp46_5 #x0000000000000000))
(assert (= var465487 (ite (= var465486 temp46_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp46_6 #x0000000000000000))
(assert (= var465488 temp46_6))
(assert (= temp46_7 #x0000000000000000))
(assert (= var465522 (ite (= var465485 temp46_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp46_8 #x0000000000000001))
(assert (= var465522 temp46_8))
(assert (= temp46_10 #x0000000000000000))
(assert (= temp46_9 temp46_10))
(assert (= temp46_12 #x0000000000000001))
(assert (= temp46_11 temp46_12))
(assert (= temp46_13 #x0000000000000000))
(assert (= var863614 temp46_13))
(assert (= temp46_14 #x0000000000000001))
(assert (= var863635 temp46_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp46_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp46_15)))
(assert (= temp46_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp46_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp46_17 #x0000000000000000))
(assert (= var997373 temp46_17))
(assert (= temp46_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp46_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp46_19 #x0000000000000000))
(assert (= var997418 temp46_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp46_20 #x0000000000000000))
(assert (= temp46_21 temp46_20))
(assert (= temp46_22 (select ARGNAME_padding_NAMEEND_VAL temp46_21)))
(assert (= temp46_23 #x0000000000000001))
(assert (= temp46_24 temp46_23))
(assert (= temp46_25 (select ARGNAME_padding_NAMEEND_VAL temp46_24)))
(assert (= temp46_26 #x0000000000000002))
(assert (= temp46_27 temp46_26))
(assert (= temp46_28 (select ARGNAME_padding_NAMEEND_VAL temp46_27)))
(assert (= temp46_29 #x0000000000000003))
(assert (= temp46_30 temp46_29))
(assert (= temp46_31 (select ARGNAME_padding_NAMEEND_VAL temp46_30)))
(assert (= temp46_32 #x0000000000000004))
(assert (= temp46_33 temp46_32))
(assert (= temp46_34 (select ARGNAME_padding_NAMEEND_VAL temp46_33)))
(assert (= temp46_35 #x0000000000000005))
(assert (= temp46_36 temp46_35))
(assert (= temp46_37 (select ARGNAME_padding_NAMEEND_VAL temp46_36)))
(assert (= temp46_38 #x0000000000000000))
(assert (= temp46_39 #x0000000000000000))
(assert (= temp46_40 temp46_39))
(assert (= temp46_41 (select ARGNAME_padding_NAMEEND_VAL temp46_40)))
(assert (= temp46_42 #x0000000000000000))
(assert (= temp46_43 #x0000000000000001))
(assert (= temp46_44 temp46_43))
(assert (= temp46_45 (select ARGNAME_padding_NAMEEND_VAL temp46_44)))
(assert (= temp46_46 #x0000000000000000))
(assert (= temp46_47 #x0000000000000002))
(assert (= temp46_48 temp46_47))
(assert (= temp46_49 (select ARGNAME_padding_NAMEEND_VAL temp46_48)))
(assert (= temp46_50 #x0000000000000000))
(assert (= temp46_51 #x0000000000000003))
(assert (= temp46_52 temp46_51))
(assert (= temp46_53 (select ARGNAME_padding_NAMEEND_VAL temp46_52)))
(assert (= temp46_54 #x0000000000000000))
(assert (= temp46_55 #x0000000000000004))
(assert (= temp46_56 temp46_55))
(assert (= temp46_57 (select ARGNAME_padding_NAMEEND_VAL temp46_56)))
(assert (= temp46_58 #x0000000000000000))
(assert (= temp46_59 #x0000000000000005))
(assert (= temp46_60 temp46_59))
(assert (= temp46_61 (select ARGNAME_padding_NAMEEND_VAL temp46_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp46_41 temp46_38)
             (bvslt temp46_45 temp46_42)
             (bvslt temp46_49 temp46_46)
             (bvslt temp46_53 temp46_50)
             (bvslt temp46_57 temp46_54)
             (bvslt temp46_61 temp46_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp46_62 #x0000000000000000))
(assert (= var1716002 temp46_62))
(assert (= temp46_63 #x0000000000000000))
(assert (= temp46_64 temp46_63))
(assert (= temp46_65 (select ARGNAME_stride_NAMEEND_VAL temp46_64)))
(assert (= temp46_66 #x0000000000000001))
(assert (= temp46_67 temp46_66))
(assert (= temp46_68 (select ARGNAME_stride_NAMEEND_VAL temp46_67)))
(assert (= temp46_69 #x0000000000000002))
(assert (= temp46_70 temp46_69))
(assert (= temp46_71 (select ARGNAME_stride_NAMEEND_VAL temp46_70)))
(assert (= temp46_72 #x0000000000000003))
(assert (= temp46_73 temp46_72))
(assert (= temp46_74 (select ARGNAME_stride_NAMEEND_VAL temp46_73)))
(assert (= temp46_75 #x0000000000000004))
(assert (= temp46_76 temp46_75))
(assert (= temp46_77 (select ARGNAME_stride_NAMEEND_VAL temp46_76)))
(assert (= temp46_78 #x0000000000000005))
(assert (= temp46_79 temp46_78))
(assert (= temp46_80 (select ARGNAME_stride_NAMEEND_VAL temp46_79)))
(assert (= temp46_81 #x0000000000000000))
(assert (= temp46_82 #x0000000000000000))
(assert (= temp46_83 temp46_82))
(assert (= temp46_84 (select ARGNAME_stride_NAMEEND_VAL temp46_83)))
(assert (= temp46_85 #x0000000000000000))
(assert (= temp46_86 #x0000000000000001))
(assert (= temp46_87 temp46_86))
(assert (= temp46_88 (select ARGNAME_stride_NAMEEND_VAL temp46_87)))
(assert (= temp46_89 #x0000000000000000))
(assert (= temp46_90 #x0000000000000002))
(assert (= temp46_91 temp46_90))
(assert (= temp46_92 (select ARGNAME_stride_NAMEEND_VAL temp46_91)))
(assert (= temp46_93 #x0000000000000000))
(assert (= temp46_94 #x0000000000000003))
(assert (= temp46_95 temp46_94))
(assert (= temp46_96 (select ARGNAME_stride_NAMEEND_VAL temp46_95)))
(assert (= temp46_97 #x0000000000000000))
(assert (= temp46_98 #x0000000000000004))
(assert (= temp46_99 temp46_98))
(assert (= temp46_100 (select ARGNAME_stride_NAMEEND_VAL temp46_99)))
(assert (= temp46_101 #x0000000000000000))
(assert (= temp46_102 #x0000000000000005))
(assert (= temp46_103 temp46_102))
(assert (= temp46_104 (select ARGNAME_stride_NAMEEND_VAL temp46_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp46_84 temp46_81)
             (bvsle temp46_88 temp46_85)
             (bvsle temp46_92 temp46_89)
             (bvsle temp46_96 temp46_93)
             (bvsle temp46_100 temp46_97)
             (bvsle temp46_104 temp46_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp46_105 #x0000000000000000))
(assert (= var1716023 temp46_105))
(assert (= temp46_106 #x0000000000000000))
(assert (= var1704114 temp46_106))
(assert (= temp46_107 #x0000000000000000))
(assert (= temp46_108 temp46_107))
(assert (= temp46_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp46_108)))
(assert (= temp46_110 #x0000000000000001))
(assert (= temp46_111 temp46_110))
(assert (= temp46_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp46_111)))
(assert (= temp46_113 #x0000000000000002))
(assert (= temp46_114 temp46_113))
(assert (= temp46_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp46_114)))
(assert (= temp46_116 #x0000000000000003))
(assert (= temp46_117 temp46_116))
(assert (= temp46_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp46_117)))
(assert (= temp46_119 #x0000000000000004))
(assert (= temp46_120 temp46_119))
(assert (= temp46_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp46_120)))
(assert (= temp46_122 #x0000000000000005))
(assert (= temp46_123 temp46_122))
(assert (= temp46_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp46_123)))
(assert (= temp46_126 var1704114))
(assert (= temp46_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp46_126)))
(assert (= temp46_125 temp46_127))
(assert (= var1716068
   (ite (bvslt temp46_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp46_128 #x0000000000000000))
(assert (= var1716068 temp46_128))
(assert (= temp46_129 #x0000000000000000))
(assert (= var1704114 temp46_129))
(assert (= temp46_131 var1704114))
(assert (= temp46_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp46_131)))
(assert (= temp46_130 temp46_132))
(assert (= var1716090 (bvsmod temp46_130 ARGNAME_groups_NAMEEND)))
(assert (= temp46_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp46_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp46_134 #x0000000000000001))
(assert (= var1716091 temp46_134))
(assert (= var1716110 var1716000))
(assert (= temp46_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp46_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp46_136 #x0000000000000001))
(assert (= var1716111 temp46_136))
(assert (= temp46_137 #x0000000000000001))
(assert (= var1705002 temp46_137))
(assert (= temp46_139 var1705002))
(assert (= temp46_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp46_139)))
(assert (= temp46_138 temp46_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp46_138)))
(assert (= temp46_141 #x0000000000000000))
(assert (= var1704114 temp46_141))
(assert (= temp46_143 var1704114))
(assert (= temp46_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp46_143)))
(assert (= temp46_142 temp46_144))
(assert (= temp46_145 #x0000000000000002))
(assert (= var1979241 temp46_145))
(assert (= temp46_146 #x0000000000000001))
(assert (= var1716281 temp46_146))
(assert (= temp46_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp46_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp46_148 #x0000000000000001))
(assert (= var997490 temp46_148))
(assert (= temp46_149 #x0000000000000001))
(assert (= var997620 temp46_149))
(assert (= var3486185 var997620))
(assert (= temp46_150 #x0000000000000000))
(assert (= var3686207 temp46_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp46_151 #x0000000000000002))
(assert (= var3815043 temp46_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4272528 var997633))
(assert (= var997820 var997345))
(assert (= temp46_152 #x0000000000000000))
(assert (= var997821
   (ite (distinct var997820 temp46_152) #x0000000000000001 #x0000000000000000)))
(assert (= var4996941 var997821))
(assert (= temp46_153 #x0000000000000001))
(assert (= var997490 temp46_153))
(model-add temp46_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp46_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp46_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp46_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp46_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp46_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)





