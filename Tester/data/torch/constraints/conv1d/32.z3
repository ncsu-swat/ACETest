(declare-fun temp42_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp42_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp42_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp42_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp42_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp42_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp42_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp42_8 () (_ BitVec 64))
(declare-fun temp42_10 () (_ BitVec 64))
(declare-fun temp42_9 () (_ BitVec 64))
(declare-fun temp42_12 () (_ BitVec 64))
(declare-fun temp42_11 () (_ BitVec 64))
(declare-fun temp42_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp42_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp42_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp42_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp42_17 () (_ BitVec 64))
(declare-fun temp42_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp42_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp42_20 () (_ BitVec 64))
(declare-fun temp42_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp42_22 () (_ BitVec 64))
(declare-fun temp42_23 () (_ BitVec 64))
(declare-fun temp42_24 () (_ BitVec 64))
(declare-fun temp42_25 () (_ BitVec 64))
(declare-fun temp42_26 () (_ BitVec 64))
(declare-fun temp42_27 () (_ BitVec 64))
(declare-fun temp42_28 () (_ BitVec 64))
(declare-fun temp42_29 () (_ BitVec 64))
(declare-fun temp42_30 () (_ BitVec 64))
(declare-fun temp42_31 () (_ BitVec 64))
(declare-fun temp42_32 () (_ BitVec 64))
(declare-fun temp42_33 () (_ BitVec 64))
(declare-fun temp42_34 () (_ BitVec 64))
(declare-fun temp42_35 () (_ BitVec 64))
(declare-fun temp42_36 () (_ BitVec 64))
(declare-fun temp42_37 () (_ BitVec 64))
(declare-fun temp42_38 () (_ BitVec 64))
(declare-fun temp42_39 () (_ BitVec 64))
(declare-fun temp42_40 () (_ BitVec 64))
(declare-fun temp42_41 () (_ BitVec 64))
(declare-fun temp42_42 () (_ BitVec 64))
(declare-fun temp42_43 () (_ BitVec 64))
(declare-fun temp42_44 () (_ BitVec 64))
(declare-fun temp42_45 () (_ BitVec 64))
(declare-fun temp42_46 () (_ BitVec 64))
(declare-fun temp42_47 () (_ BitVec 64))
(declare-fun temp42_48 () (_ BitVec 64))
(declare-fun temp42_49 () (_ BitVec 64))
(declare-fun temp42_50 () (_ BitVec 64))
(declare-fun temp42_51 () (_ BitVec 64))
(declare-fun temp42_52 () (_ BitVec 64))
(declare-fun temp42_53 () (_ BitVec 64))
(declare-fun temp42_54 () (_ BitVec 64))
(declare-fun temp42_55 () (_ BitVec 64))
(declare-fun temp42_56 () (_ BitVec 64))
(declare-fun temp42_57 () (_ BitVec 64))
(declare-fun temp42_58 () (_ BitVec 64))
(declare-fun temp42_59 () (_ BitVec 64))
(declare-fun temp42_60 () (_ BitVec 64))
(declare-fun temp42_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp42_62 () (_ BitVec 64))
(declare-fun temp42_63 () (_ BitVec 64))
(declare-fun temp42_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp42_65 () (_ BitVec 64))
(declare-fun temp42_66 () (_ BitVec 64))
(declare-fun temp42_67 () (_ BitVec 64))
(declare-fun temp42_68 () (_ BitVec 64))
(declare-fun temp42_69 () (_ BitVec 64))
(declare-fun temp42_70 () (_ BitVec 64))
(declare-fun temp42_71 () (_ BitVec 64))
(declare-fun temp42_72 () (_ BitVec 64))
(declare-fun temp42_73 () (_ BitVec 64))
(declare-fun temp42_74 () (_ BitVec 64))
(declare-fun temp42_75 () (_ BitVec 64))
(declare-fun temp42_76 () (_ BitVec 64))
(declare-fun temp42_77 () (_ BitVec 64))
(declare-fun temp42_78 () (_ BitVec 64))
(declare-fun temp42_79 () (_ BitVec 64))
(declare-fun temp42_80 () (_ BitVec 64))
(declare-fun temp42_81 () (_ BitVec 64))
(declare-fun temp42_82 () (_ BitVec 64))
(declare-fun temp42_83 () (_ BitVec 64))
(declare-fun temp42_84 () (_ BitVec 64))
(declare-fun temp42_85 () (_ BitVec 64))
(declare-fun temp42_86 () (_ BitVec 64))
(declare-fun temp42_87 () (_ BitVec 64))
(declare-fun temp42_88 () (_ BitVec 64))
(declare-fun temp42_89 () (_ BitVec 64))
(declare-fun temp42_90 () (_ BitVec 64))
(declare-fun temp42_91 () (_ BitVec 64))
(declare-fun temp42_92 () (_ BitVec 64))
(declare-fun temp42_93 () (_ BitVec 64))
(declare-fun temp42_94 () (_ BitVec 64))
(declare-fun temp42_95 () (_ BitVec 64))
(declare-fun temp42_96 () (_ BitVec 64))
(declare-fun temp42_97 () (_ BitVec 64))
(declare-fun temp42_98 () (_ BitVec 64))
(declare-fun temp42_99 () (_ BitVec 64))
(declare-fun temp42_100 () (_ BitVec 64))
(declare-fun temp42_101 () (_ BitVec 64))
(declare-fun temp42_102 () (_ BitVec 64))
(declare-fun temp42_103 () (_ BitVec 64))
(declare-fun temp42_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp42_105 () (_ BitVec 64))
(declare-fun temp42_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp42_107 () (_ BitVec 64))
(declare-fun temp42_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp42_109 () (_ BitVec 64))
(declare-fun temp42_110 () (_ BitVec 64))
(declare-fun temp42_111 () (_ BitVec 64))
(declare-fun temp42_112 () (_ BitVec 64))
(declare-fun temp42_113 () (_ BitVec 64))
(declare-fun temp42_114 () (_ BitVec 64))
(declare-fun temp42_115 () (_ BitVec 64))
(declare-fun temp42_116 () (_ BitVec 64))
(declare-fun temp42_117 () (_ BitVec 64))
(declare-fun temp42_118 () (_ BitVec 64))
(declare-fun temp42_119 () (_ BitVec 64))
(declare-fun temp42_120 () (_ BitVec 64))
(declare-fun temp42_121 () (_ BitVec 64))
(declare-fun temp42_122 () (_ BitVec 64))
(declare-fun temp42_123 () (_ BitVec 64))
(declare-fun temp42_124 () (_ BitVec 64))
(declare-fun temp42_126 () (_ BitVec 64))
(declare-fun temp42_127 () (_ BitVec 64))
(declare-fun temp42_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp42_128 () (_ BitVec 64))
(declare-fun temp42_129 () (_ BitVec 64))
(declare-fun temp42_131 () (_ BitVec 64))
(declare-fun temp42_132 () (_ BitVec 64))
(declare-fun temp42_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp42_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp42_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp42_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp42_136 () (_ BitVec 64))
(declare-fun temp42_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp42_139 () (_ BitVec 64))
(declare-fun temp42_140 () (_ BitVec 64))
(declare-fun temp42_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp42_141 () (_ BitVec 64))
(declare-fun temp42_143 () (_ BitVec 64))
(declare-fun temp42_144 () (_ BitVec 64))
(declare-fun temp42_142 () (_ BitVec 64))
(declare-fun temp42_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp42_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp42_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp42_148 () (_ BitVec 64))
(declare-fun temp42_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp42_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp42_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4272528 () (_ BitVec 64))
(declare-fun var997820 () (_ BitVec 64))
(declare-fun temp42_152 () (_ BitVec 64))
(declare-fun var997821 () (_ BitVec 64))
(declare-fun var4996941 () (_ BitVec 64))
(declare-fun temp42_153 () (_ BitVec 64))
(assert (= temp42_1 #x0000000000000001))
(assert (= var465453 temp42_1))
(assert (= temp42_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp42_2)))
(assert (= temp42_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp42_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp42_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp42_4)))
(assert (= temp42_5 #x0000000000000000))
(assert (= var465487 (ite (= var465486 temp42_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp42_6 #x0000000000000000))
(assert (= var465488 temp42_6))
(assert (= temp42_7 #x0000000000000000))
(assert (= var465522 (ite (= var465485 temp42_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp42_8 #x0000000000000001))
(assert (= var465522 temp42_8))
(assert (= temp42_10 #x0000000000000000))
(assert (= temp42_9 temp42_10))
(assert (= temp42_12 #x0000000000000001))
(assert (= temp42_11 temp42_12))
(assert (= temp42_13 #x0000000000000000))
(assert (= var863614 temp42_13))
(assert (= temp42_14 #x0000000000000001))
(assert (= var863635 temp42_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp42_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp42_15)))
(assert (= temp42_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp42_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_17 #x0000000000000000))
(assert (= var997373 temp42_17))
(assert (= temp42_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp42_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_19 #x0000000000000000))
(assert (= var997418 temp42_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp42_20 #x0000000000000000))
(assert (= temp42_21 temp42_20))
(assert (= temp42_22 (select ARGNAME_padding_NAMEEND_VAL temp42_21)))
(assert (= temp42_23 #x0000000000000001))
(assert (= temp42_24 temp42_23))
(assert (= temp42_25 (select ARGNAME_padding_NAMEEND_VAL temp42_24)))
(assert (= temp42_26 #x0000000000000002))
(assert (= temp42_27 temp42_26))
(assert (= temp42_28 (select ARGNAME_padding_NAMEEND_VAL temp42_27)))
(assert (= temp42_29 #x0000000000000003))
(assert (= temp42_30 temp42_29))
(assert (= temp42_31 (select ARGNAME_padding_NAMEEND_VAL temp42_30)))
(assert (= temp42_32 #x0000000000000004))
(assert (= temp42_33 temp42_32))
(assert (= temp42_34 (select ARGNAME_padding_NAMEEND_VAL temp42_33)))
(assert (= temp42_35 #x0000000000000005))
(assert (= temp42_36 temp42_35))
(assert (= temp42_37 (select ARGNAME_padding_NAMEEND_VAL temp42_36)))
(assert (= temp42_38 #x0000000000000000))
(assert (= temp42_39 #x0000000000000000))
(assert (= temp42_40 temp42_39))
(assert (= temp42_41 (select ARGNAME_padding_NAMEEND_VAL temp42_40)))
(assert (= temp42_42 #x0000000000000000))
(assert (= temp42_43 #x0000000000000001))
(assert (= temp42_44 temp42_43))
(assert (= temp42_45 (select ARGNAME_padding_NAMEEND_VAL temp42_44)))
(assert (= temp42_46 #x0000000000000000))
(assert (= temp42_47 #x0000000000000002))
(assert (= temp42_48 temp42_47))
(assert (= temp42_49 (select ARGNAME_padding_NAMEEND_VAL temp42_48)))
(assert (= temp42_50 #x0000000000000000))
(assert (= temp42_51 #x0000000000000003))
(assert (= temp42_52 temp42_51))
(assert (= temp42_53 (select ARGNAME_padding_NAMEEND_VAL temp42_52)))
(assert (= temp42_54 #x0000000000000000))
(assert (= temp42_55 #x0000000000000004))
(assert (= temp42_56 temp42_55))
(assert (= temp42_57 (select ARGNAME_padding_NAMEEND_VAL temp42_56)))
(assert (= temp42_58 #x0000000000000000))
(assert (= temp42_59 #x0000000000000005))
(assert (= temp42_60 temp42_59))
(assert (= temp42_61 (select ARGNAME_padding_NAMEEND_VAL temp42_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp42_41 temp42_38)
             (bvslt temp42_45 temp42_42)
             (bvslt temp42_49 temp42_46)
             (bvslt temp42_53 temp42_50)
             (bvslt temp42_57 temp42_54)
             (bvslt temp42_61 temp42_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_62 #x0000000000000000))
(assert (= var1716002 temp42_62))
(assert (= temp42_63 #x0000000000000000))
(assert (= temp42_64 temp42_63))
(assert (= temp42_65 (select ARGNAME_stride_NAMEEND_VAL temp42_64)))
(assert (= temp42_66 #x0000000000000001))
(assert (= temp42_67 temp42_66))
(assert (= temp42_68 (select ARGNAME_stride_NAMEEND_VAL temp42_67)))
(assert (= temp42_69 #x0000000000000002))
(assert (= temp42_70 temp42_69))
(assert (= temp42_71 (select ARGNAME_stride_NAMEEND_VAL temp42_70)))
(assert (= temp42_72 #x0000000000000003))
(assert (= temp42_73 temp42_72))
(assert (= temp42_74 (select ARGNAME_stride_NAMEEND_VAL temp42_73)))
(assert (= temp42_75 #x0000000000000004))
(assert (= temp42_76 temp42_75))
(assert (= temp42_77 (select ARGNAME_stride_NAMEEND_VAL temp42_76)))
(assert (= temp42_78 #x0000000000000005))
(assert (= temp42_79 temp42_78))
(assert (= temp42_80 (select ARGNAME_stride_NAMEEND_VAL temp42_79)))
(assert (= temp42_81 #x0000000000000000))
(assert (= temp42_82 #x0000000000000000))
(assert (= temp42_83 temp42_82))
(assert (= temp42_84 (select ARGNAME_stride_NAMEEND_VAL temp42_83)))
(assert (= temp42_85 #x0000000000000000))
(assert (= temp42_86 #x0000000000000001))
(assert (= temp42_87 temp42_86))
(assert (= temp42_88 (select ARGNAME_stride_NAMEEND_VAL temp42_87)))
(assert (= temp42_89 #x0000000000000000))
(assert (= temp42_90 #x0000000000000002))
(assert (= temp42_91 temp42_90))
(assert (= temp42_92 (select ARGNAME_stride_NAMEEND_VAL temp42_91)))
(assert (= temp42_93 #x0000000000000000))
(assert (= temp42_94 #x0000000000000003))
(assert (= temp42_95 temp42_94))
(assert (= temp42_96 (select ARGNAME_stride_NAMEEND_VAL temp42_95)))
(assert (= temp42_97 #x0000000000000000))
(assert (= temp42_98 #x0000000000000004))
(assert (= temp42_99 temp42_98))
(assert (= temp42_100 (select ARGNAME_stride_NAMEEND_VAL temp42_99)))
(assert (= temp42_101 #x0000000000000000))
(assert (= temp42_102 #x0000000000000005))
(assert (= temp42_103 temp42_102))
(assert (= temp42_104 (select ARGNAME_stride_NAMEEND_VAL temp42_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp42_84 temp42_81)
             (bvsle temp42_88 temp42_85)
             (bvsle temp42_92 temp42_89)
             (bvsle temp42_96 temp42_93)
             (bvsle temp42_100 temp42_97)
             (bvsle temp42_104 temp42_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_105 #x0000000000000000))
(assert (= var1716023 temp42_105))
(assert (= temp42_106 #x0000000000000000))
(assert (= var1704114 temp42_106))
(assert (= temp42_107 #x0000000000000000))
(assert (= temp42_108 temp42_107))
(assert (= temp42_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_108)))
(assert (= temp42_110 #x0000000000000001))
(assert (= temp42_111 temp42_110))
(assert (= temp42_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_111)))
(assert (= temp42_113 #x0000000000000002))
(assert (= temp42_114 temp42_113))
(assert (= temp42_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_114)))
(assert (= temp42_116 #x0000000000000003))
(assert (= temp42_117 temp42_116))
(assert (= temp42_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_117)))
(assert (= temp42_119 #x0000000000000004))
(assert (= temp42_120 temp42_119))
(assert (= temp42_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_120)))
(assert (= temp42_122 #x0000000000000005))
(assert (= temp42_123 temp42_122))
(assert (= temp42_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_123)))
(assert (= temp42_126 var1704114))
(assert (= temp42_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_126)))
(assert (= temp42_125 temp42_127))
(assert (= var1716068
   (ite (bvslt temp42_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_128 #x0000000000000000))
(assert (= var1716068 temp42_128))
(assert (= temp42_129 #x0000000000000000))
(assert (= var1704114 temp42_129))
(assert (= temp42_131 var1704114))
(assert (= temp42_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_131)))
(assert (= temp42_130 temp42_132))
(assert (= var1716090 (bvsmod temp42_130 ARGNAME_groups_NAMEEND)))
(assert (= temp42_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp42_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp42_134 #x0000000000000001))
(assert (= var1716091 temp42_134))
(assert (= var1716110 var1716000))
(assert (= temp42_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp42_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp42_136 #x0000000000000001))
(assert (= var1716111 temp42_136))
(assert (= temp42_137 #x0000000000000001))
(assert (= var1705002 temp42_137))
(assert (= temp42_139 var1705002))
(assert (= temp42_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_139)))
(assert (= temp42_138 temp42_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp42_138)))
(assert (= temp42_141 #x0000000000000000))
(assert (= var1704114 temp42_141))
(assert (= temp42_143 var1704114))
(assert (= temp42_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_143)))
(assert (= temp42_142 temp42_144))
(assert (= temp42_145 #x0000000000000002))
(assert (= var1979241 temp42_145))
(assert (= temp42_146 #x0000000000000001))
(assert (= var1716281 temp42_146))
(assert (= temp42_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp42_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_148 #x0000000000000001))
(assert (= var997490 temp42_148))
(assert (= temp42_149 #x0000000000000001))
(assert (= var997620 temp42_149))
(assert (= var3486185 var997620))
(assert (= temp42_150 #x0000000000000000))
(assert (= var3686207 temp42_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp42_151 #x0000000000000002))
(assert (= var3815043 temp42_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4272528 var997633))
(assert (= var997820 var997345))
(assert (= temp42_152 #x0000000000000000))
(assert (= var997821
   (ite (distinct var997820 temp42_152) #x0000000000000001 #x0000000000000000)))
(assert (= var4996941 var997821))
(assert (= temp42_153 #x0000000000000001))
(assert (= var997490 temp42_153))
(model-add temp42_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp42_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp42_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp42_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp42_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp42_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






