(declare-fun temp667_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp667_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp667_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp667_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp667_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp667_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp667_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp667_8 () (_ BitVec 64))
(declare-fun temp667_10 () (_ BitVec 64))
(declare-fun temp667_9 () (_ BitVec 64))
(declare-fun temp667_12 () (_ BitVec 64))
(declare-fun temp667_11 () (_ BitVec 64))
(declare-fun temp667_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp667_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp667_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp667_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp667_17 () (_ BitVec 64))
(declare-fun temp667_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp667_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp667_20 () (_ BitVec 64))
(declare-fun temp667_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp667_22 () (_ BitVec 64))
(declare-fun temp667_23 () (_ BitVec 64))
(declare-fun temp667_24 () (_ BitVec 64))
(declare-fun temp667_25 () (_ BitVec 64))
(declare-fun temp667_26 () (_ BitVec 64))
(declare-fun temp667_27 () (_ BitVec 64))
(declare-fun temp667_28 () (_ BitVec 64))
(declare-fun temp667_29 () (_ BitVec 64))
(declare-fun temp667_30 () (_ BitVec 64))
(declare-fun temp667_31 () (_ BitVec 64))
(declare-fun temp667_32 () (_ BitVec 64))
(declare-fun temp667_33 () (_ BitVec 64))
(declare-fun temp667_34 () (_ BitVec 64))
(declare-fun temp667_35 () (_ BitVec 64))
(declare-fun temp667_36 () (_ BitVec 64))
(declare-fun temp667_37 () (_ BitVec 64))
(declare-fun temp667_38 () (_ BitVec 64))
(declare-fun temp667_39 () (_ BitVec 64))
(declare-fun temp667_40 () (_ BitVec 64))
(declare-fun temp667_41 () (_ BitVec 64))
(declare-fun temp667_42 () (_ BitVec 64))
(declare-fun temp667_43 () (_ BitVec 64))
(declare-fun temp667_44 () (_ BitVec 64))
(declare-fun temp667_45 () (_ BitVec 64))
(declare-fun temp667_46 () (_ BitVec 64))
(declare-fun temp667_47 () (_ BitVec 64))
(declare-fun temp667_48 () (_ BitVec 64))
(declare-fun temp667_49 () (_ BitVec 64))
(declare-fun temp667_50 () (_ BitVec 64))
(declare-fun temp667_51 () (_ BitVec 64))
(declare-fun temp667_52 () (_ BitVec 64))
(declare-fun temp667_53 () (_ BitVec 64))
(declare-fun temp667_54 () (_ BitVec 64))
(declare-fun temp667_55 () (_ BitVec 64))
(declare-fun temp667_56 () (_ BitVec 64))
(declare-fun temp667_57 () (_ BitVec 64))
(declare-fun temp667_58 () (_ BitVec 64))
(declare-fun temp667_59 () (_ BitVec 64))
(declare-fun temp667_60 () (_ BitVec 64))
(declare-fun temp667_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp667_62 () (_ BitVec 64))
(declare-fun temp667_63 () (_ BitVec 64))
(declare-fun temp667_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp667_65 () (_ BitVec 64))
(declare-fun temp667_66 () (_ BitVec 64))
(declare-fun temp667_67 () (_ BitVec 64))
(declare-fun temp667_68 () (_ BitVec 64))
(declare-fun temp667_69 () (_ BitVec 64))
(declare-fun temp667_70 () (_ BitVec 64))
(declare-fun temp667_71 () (_ BitVec 64))
(declare-fun temp667_72 () (_ BitVec 64))
(declare-fun temp667_73 () (_ BitVec 64))
(declare-fun temp667_74 () (_ BitVec 64))
(declare-fun temp667_75 () (_ BitVec 64))
(declare-fun temp667_76 () (_ BitVec 64))
(declare-fun temp667_77 () (_ BitVec 64))
(declare-fun temp667_78 () (_ BitVec 64))
(declare-fun temp667_79 () (_ BitVec 64))
(declare-fun temp667_80 () (_ BitVec 64))
(declare-fun temp667_81 () (_ BitVec 64))
(declare-fun temp667_82 () (_ BitVec 64))
(declare-fun temp667_83 () (_ BitVec 64))
(declare-fun temp667_84 () (_ BitVec 64))
(declare-fun temp667_85 () (_ BitVec 64))
(declare-fun temp667_86 () (_ BitVec 64))
(declare-fun temp667_87 () (_ BitVec 64))
(declare-fun temp667_88 () (_ BitVec 64))
(declare-fun temp667_89 () (_ BitVec 64))
(declare-fun temp667_90 () (_ BitVec 64))
(declare-fun temp667_91 () (_ BitVec 64))
(declare-fun temp667_92 () (_ BitVec 64))
(declare-fun temp667_93 () (_ BitVec 64))
(declare-fun temp667_94 () (_ BitVec 64))
(declare-fun temp667_95 () (_ BitVec 64))
(declare-fun temp667_96 () (_ BitVec 64))
(declare-fun temp667_97 () (_ BitVec 64))
(declare-fun temp667_98 () (_ BitVec 64))
(declare-fun temp667_99 () (_ BitVec 64))
(declare-fun temp667_100 () (_ BitVec 64))
(declare-fun temp667_101 () (_ BitVec 64))
(declare-fun temp667_102 () (_ BitVec 64))
(declare-fun temp667_103 () (_ BitVec 64))
(declare-fun temp667_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp667_105 () (_ BitVec 64))
(declare-fun temp667_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp667_107 () (_ BitVec 64))
(declare-fun temp667_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp667_109 () (_ BitVec 64))
(declare-fun temp667_110 () (_ BitVec 64))
(declare-fun temp667_111 () (_ BitVec 64))
(declare-fun temp667_112 () (_ BitVec 64))
(declare-fun temp667_113 () (_ BitVec 64))
(declare-fun temp667_114 () (_ BitVec 64))
(declare-fun temp667_115 () (_ BitVec 64))
(declare-fun temp667_116 () (_ BitVec 64))
(declare-fun temp667_117 () (_ BitVec 64))
(declare-fun temp667_118 () (_ BitVec 64))
(declare-fun temp667_119 () (_ BitVec 64))
(declare-fun temp667_120 () (_ BitVec 64))
(declare-fun temp667_121 () (_ BitVec 64))
(declare-fun temp667_122 () (_ BitVec 64))
(declare-fun temp667_123 () (_ BitVec 64))
(declare-fun temp667_124 () (_ BitVec 64))
(declare-fun temp667_126 () (_ BitVec 64))
(declare-fun temp667_127 () (_ BitVec 64))
(declare-fun temp667_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp667_128 () (_ BitVec 64))
(declare-fun temp667_129 () (_ BitVec 64))
(declare-fun temp667_131 () (_ BitVec 64))
(declare-fun temp667_132 () (_ BitVec 64))
(declare-fun temp667_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp667_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp667_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp667_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp667_136 () (_ BitVec 64))
(declare-fun temp667_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp667_139 () (_ BitVec 64))
(declare-fun temp667_140 () (_ BitVec 64))
(declare-fun temp667_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp667_141 () (_ BitVec 64))
(declare-fun temp667_143 () (_ BitVec 64))
(declare-fun temp667_144 () (_ BitVec 64))
(declare-fun temp667_142 () (_ BitVec 64))
(declare-fun temp667_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp667_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp667_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp667_148 () (_ BitVec 64))
(declare-fun temp667_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp667_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp667_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp667_153 () (_ BitVec 64))
(declare-fun temp667_152 () (_ BitVec 64))
(declare-fun temp667_155 () (_ BitVec 64))
(declare-fun temp667_154 () (_ BitVec 64))
(declare-fun temp667_156 () (_ BitVec 64))
(assert (= temp667_1 #x0000000000000001))
(assert (= var465453 temp667_1))
(assert (= temp667_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp667_2)))
(assert (= temp667_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp667_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp667_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp667_4)))
(assert (= temp667_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp667_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp667_6 #x0000000000000000))
(assert (= var465488 temp667_6))
(assert (= temp667_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp667_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp667_8 #x0000000000000001))
(assert (= var465522 temp667_8))
(assert (= temp667_10 #x0000000000000000))
(assert (= temp667_9 temp667_10))
(assert (= temp667_12 #x0000000000000001))
(assert (= temp667_11 temp667_12))
(assert (= temp667_13 #x0000000000000000))
(assert (= var863614 temp667_13))
(assert (= temp667_14 #x0000000000000001))
(assert (= var863635 temp667_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp667_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp667_15)))
(assert (= temp667_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp667_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_17 #x0000000000000000))
(assert (= var997373 temp667_17))
(assert (= temp667_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp667_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_19 #x0000000000000000))
(assert (= var997418 temp667_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp667_20 #x0000000000000000))
(assert (= temp667_21 temp667_20))
(assert (= temp667_22 (select ARGNAME_padding_NAMEEND_VAL temp667_21)))
(assert (= temp667_23 #x0000000000000001))
(assert (= temp667_24 temp667_23))
(assert (= temp667_25 (select ARGNAME_padding_NAMEEND_VAL temp667_24)))
(assert (= temp667_26 #x0000000000000002))
(assert (= temp667_27 temp667_26))
(assert (= temp667_28 (select ARGNAME_padding_NAMEEND_VAL temp667_27)))
(assert (= temp667_29 #x0000000000000003))
(assert (= temp667_30 temp667_29))
(assert (= temp667_31 (select ARGNAME_padding_NAMEEND_VAL temp667_30)))
(assert (= temp667_32 #x0000000000000004))
(assert (= temp667_33 temp667_32))
(assert (= temp667_34 (select ARGNAME_padding_NAMEEND_VAL temp667_33)))
(assert (= temp667_35 #x0000000000000005))
(assert (= temp667_36 temp667_35))
(assert (= temp667_37 (select ARGNAME_padding_NAMEEND_VAL temp667_36)))
(assert (= temp667_38 #x0000000000000000))
(assert (= temp667_39 #x0000000000000000))
(assert (= temp667_40 temp667_39))
(assert (= temp667_41 (select ARGNAME_padding_NAMEEND_VAL temp667_40)))
(assert (= temp667_42 #x0000000000000000))
(assert (= temp667_43 #x0000000000000001))
(assert (= temp667_44 temp667_43))
(assert (= temp667_45 (select ARGNAME_padding_NAMEEND_VAL temp667_44)))
(assert (= temp667_46 #x0000000000000000))
(assert (= temp667_47 #x0000000000000002))
(assert (= temp667_48 temp667_47))
(assert (= temp667_49 (select ARGNAME_padding_NAMEEND_VAL temp667_48)))
(assert (= temp667_50 #x0000000000000000))
(assert (= temp667_51 #x0000000000000003))
(assert (= temp667_52 temp667_51))
(assert (= temp667_53 (select ARGNAME_padding_NAMEEND_VAL temp667_52)))
(assert (= temp667_54 #x0000000000000000))
(assert (= temp667_55 #x0000000000000004))
(assert (= temp667_56 temp667_55))
(assert (= temp667_57 (select ARGNAME_padding_NAMEEND_VAL temp667_56)))
(assert (= temp667_58 #x0000000000000000))
(assert (= temp667_59 #x0000000000000005))
(assert (= temp667_60 temp667_59))
(assert (= temp667_61 (select ARGNAME_padding_NAMEEND_VAL temp667_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp667_41 temp667_38)
             (bvslt temp667_45 temp667_42)
             (bvslt temp667_49 temp667_46)
             (bvslt temp667_53 temp667_50)
             (bvslt temp667_57 temp667_54)
             (bvslt temp667_61 temp667_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_62 #x0000000000000000))
(assert (= var1716002 temp667_62))
(assert (= temp667_63 #x0000000000000000))
(assert (= temp667_64 temp667_63))
(assert (= temp667_65 (select ARGNAME_stride_NAMEEND_VAL temp667_64)))
(assert (= temp667_66 #x0000000000000001))
(assert (= temp667_67 temp667_66))
(assert (= temp667_68 (select ARGNAME_stride_NAMEEND_VAL temp667_67)))
(assert (= temp667_69 #x0000000000000002))
(assert (= temp667_70 temp667_69))
(assert (= temp667_71 (select ARGNAME_stride_NAMEEND_VAL temp667_70)))
(assert (= temp667_72 #x0000000000000003))
(assert (= temp667_73 temp667_72))
(assert (= temp667_74 (select ARGNAME_stride_NAMEEND_VAL temp667_73)))
(assert (= temp667_75 #x0000000000000004))
(assert (= temp667_76 temp667_75))
(assert (= temp667_77 (select ARGNAME_stride_NAMEEND_VAL temp667_76)))
(assert (= temp667_78 #x0000000000000005))
(assert (= temp667_79 temp667_78))
(assert (= temp667_80 (select ARGNAME_stride_NAMEEND_VAL temp667_79)))
(assert (= temp667_81 #x0000000000000000))
(assert (= temp667_82 #x0000000000000000))
(assert (= temp667_83 temp667_82))
(assert (= temp667_84 (select ARGNAME_stride_NAMEEND_VAL temp667_83)))
(assert (= temp667_85 #x0000000000000000))
(assert (= temp667_86 #x0000000000000001))
(assert (= temp667_87 temp667_86))
(assert (= temp667_88 (select ARGNAME_stride_NAMEEND_VAL temp667_87)))
(assert (= temp667_89 #x0000000000000000))
(assert (= temp667_90 #x0000000000000002))
(assert (= temp667_91 temp667_90))
(assert (= temp667_92 (select ARGNAME_stride_NAMEEND_VAL temp667_91)))
(assert (= temp667_93 #x0000000000000000))
(assert (= temp667_94 #x0000000000000003))
(assert (= temp667_95 temp667_94))
(assert (= temp667_96 (select ARGNAME_stride_NAMEEND_VAL temp667_95)))
(assert (= temp667_97 #x0000000000000000))
(assert (= temp667_98 #x0000000000000004))
(assert (= temp667_99 temp667_98))
(assert (= temp667_100 (select ARGNAME_stride_NAMEEND_VAL temp667_99)))
(assert (= temp667_101 #x0000000000000000))
(assert (= temp667_102 #x0000000000000005))
(assert (= temp667_103 temp667_102))
(assert (= temp667_104 (select ARGNAME_stride_NAMEEND_VAL temp667_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp667_84 temp667_81)
             (bvsle temp667_88 temp667_85)
             (bvsle temp667_92 temp667_89)
             (bvsle temp667_96 temp667_93)
             (bvsle temp667_100 temp667_97)
             (bvsle temp667_104 temp667_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_105 #x0000000000000000))
(assert (= var1716023 temp667_105))
(assert (= temp667_106 #x0000000000000000))
(assert (= var1704114 temp667_106))
(assert (= temp667_107 #x0000000000000000))
(assert (= temp667_108 temp667_107))
(assert (= temp667_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp667_108)))
(assert (= temp667_110 #x0000000000000001))
(assert (= temp667_111 temp667_110))
(assert (= temp667_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp667_111)))
(assert (= temp667_113 #x0000000000000002))
(assert (= temp667_114 temp667_113))
(assert (= temp667_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp667_114)))
(assert (= temp667_116 #x0000000000000003))
(assert (= temp667_117 temp667_116))
(assert (= temp667_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp667_117)))
(assert (= temp667_119 #x0000000000000004))
(assert (= temp667_120 temp667_119))
(assert (= temp667_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp667_120)))
(assert (= temp667_122 #x0000000000000005))
(assert (= temp667_123 temp667_122))
(assert (= temp667_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp667_123)))
(assert (= temp667_126 var1704114))
(assert (= temp667_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp667_126)))
(assert (= temp667_125 temp667_127))
(assert (= var1716068
   (ite (bvslt temp667_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_128 #x0000000000000000))
(assert (= var1716068 temp667_128))
(assert (= temp667_129 #x0000000000000000))
(assert (= var1704114 temp667_129))
(assert (= temp667_131 var1704114))
(assert (= temp667_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp667_131)))
(assert (= temp667_130 temp667_132))
(assert (= var1716090 (bvsmod temp667_130 ARGNAME_groups_NAMEEND)))
(assert (= temp667_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp667_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp667_134 #x0000000000000001))
(assert (= var1716091 temp667_134))
(assert (= var1716110 var1716000))
(assert (= temp667_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp667_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp667_136 #x0000000000000001))
(assert (= var1716111 temp667_136))
(assert (= temp667_137 #x0000000000000001))
(assert (= var1705002 temp667_137))
(assert (= temp667_139 var1705002))
(assert (= temp667_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp667_139)))
(assert (= temp667_138 temp667_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp667_138)))
(assert (= temp667_141 #x0000000000000000))
(assert (= var1704114 temp667_141))
(assert (= temp667_143 var1704114))
(assert (= temp667_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp667_143)))
(assert (= temp667_142 temp667_144))
(assert (= temp667_145 #x0000000000000002))
(assert (= var1979241 temp667_145))
(assert (= temp667_146 #x0000000000000001))
(assert (= var1716281 temp667_146))
(assert (= temp667_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp667_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp667_148 #x0000000000000001))
(assert (= var997490 temp667_148))
(assert (= temp667_149 #x0000000000000001))
(assert (= var997620 temp667_149))
(assert (= var3486185 var997620))
(assert (= temp667_150 #x0000000000000000))
(assert (= var3686207 temp667_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp667_151 #x0000000000000002))
(assert (= var3815043 temp667_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp667_153 #xffffffffffffffff))
(assert (= temp667_152 temp667_153))
(assert (= temp667_155 #xffffffffffffffff))
(assert (= temp667_154 temp667_155))
(assert (= temp667_156 #x0000000000000001))
(assert (= var997490 temp667_156))
(model-add temp667_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp667_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp667_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp667_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp667_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp667_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






