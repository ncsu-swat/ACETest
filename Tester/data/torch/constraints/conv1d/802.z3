(declare-fun temp1068_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp1068_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp1068_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp1068_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp1068_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp1068_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp1068_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp1068_8 () (_ BitVec 64))
(declare-fun temp1068_10 () (_ BitVec 64))
(declare-fun temp1068_9 () (_ BitVec 64))
(declare-fun temp1068_12 () (_ BitVec 64))
(declare-fun temp1068_11 () (_ BitVec 64))
(declare-fun temp1068_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp1068_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp1068_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp1068_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp1068_17 () (_ BitVec 64))
(declare-fun temp1068_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp1068_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp1068_20 () (_ BitVec 64))
(declare-fun temp1068_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1068_22 () (_ BitVec 64))
(declare-fun temp1068_23 () (_ BitVec 64))
(declare-fun temp1068_24 () (_ BitVec 64))
(declare-fun temp1068_25 () (_ BitVec 64))
(declare-fun temp1068_26 () (_ BitVec 64))
(declare-fun temp1068_27 () (_ BitVec 64))
(declare-fun temp1068_28 () (_ BitVec 64))
(declare-fun temp1068_29 () (_ BitVec 64))
(declare-fun temp1068_30 () (_ BitVec 64))
(declare-fun temp1068_31 () (_ BitVec 64))
(declare-fun temp1068_32 () (_ BitVec 64))
(declare-fun temp1068_33 () (_ BitVec 64))
(declare-fun temp1068_34 () (_ BitVec 64))
(declare-fun temp1068_35 () (_ BitVec 64))
(declare-fun temp1068_36 () (_ BitVec 64))
(declare-fun temp1068_37 () (_ BitVec 64))
(declare-fun temp1068_38 () (_ BitVec 64))
(declare-fun temp1068_39 () (_ BitVec 64))
(declare-fun temp1068_40 () (_ BitVec 64))
(declare-fun temp1068_41 () (_ BitVec 64))
(declare-fun temp1068_42 () (_ BitVec 64))
(declare-fun temp1068_43 () (_ BitVec 64))
(declare-fun temp1068_44 () (_ BitVec 64))
(declare-fun temp1068_45 () (_ BitVec 64))
(declare-fun temp1068_46 () (_ BitVec 64))
(declare-fun temp1068_47 () (_ BitVec 64))
(declare-fun temp1068_48 () (_ BitVec 64))
(declare-fun temp1068_49 () (_ BitVec 64))
(declare-fun temp1068_50 () (_ BitVec 64))
(declare-fun temp1068_51 () (_ BitVec 64))
(declare-fun temp1068_52 () (_ BitVec 64))
(declare-fun temp1068_53 () (_ BitVec 64))
(declare-fun temp1068_54 () (_ BitVec 64))
(declare-fun temp1068_55 () (_ BitVec 64))
(declare-fun temp1068_56 () (_ BitVec 64))
(declare-fun temp1068_57 () (_ BitVec 64))
(declare-fun temp1068_58 () (_ BitVec 64))
(declare-fun temp1068_59 () (_ BitVec 64))
(declare-fun temp1068_60 () (_ BitVec 64))
(declare-fun temp1068_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp1068_62 () (_ BitVec 64))
(declare-fun temp1068_63 () (_ BitVec 64))
(declare-fun temp1068_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1068_65 () (_ BitVec 64))
(declare-fun temp1068_66 () (_ BitVec 64))
(declare-fun temp1068_67 () (_ BitVec 64))
(declare-fun temp1068_68 () (_ BitVec 64))
(declare-fun temp1068_69 () (_ BitVec 64))
(declare-fun temp1068_70 () (_ BitVec 64))
(declare-fun temp1068_71 () (_ BitVec 64))
(declare-fun temp1068_72 () (_ BitVec 64))
(declare-fun temp1068_73 () (_ BitVec 64))
(declare-fun temp1068_74 () (_ BitVec 64))
(declare-fun temp1068_75 () (_ BitVec 64))
(declare-fun temp1068_76 () (_ BitVec 64))
(declare-fun temp1068_77 () (_ BitVec 64))
(declare-fun temp1068_78 () (_ BitVec 64))
(declare-fun temp1068_79 () (_ BitVec 64))
(declare-fun temp1068_80 () (_ BitVec 64))
(declare-fun temp1068_81 () (_ BitVec 64))
(declare-fun temp1068_82 () (_ BitVec 64))
(declare-fun temp1068_83 () (_ BitVec 64))
(declare-fun temp1068_84 () (_ BitVec 64))
(declare-fun temp1068_85 () (_ BitVec 64))
(declare-fun temp1068_86 () (_ BitVec 64))
(declare-fun temp1068_87 () (_ BitVec 64))
(declare-fun temp1068_88 () (_ BitVec 64))
(declare-fun temp1068_89 () (_ BitVec 64))
(declare-fun temp1068_90 () (_ BitVec 64))
(declare-fun temp1068_91 () (_ BitVec 64))
(declare-fun temp1068_92 () (_ BitVec 64))
(declare-fun temp1068_93 () (_ BitVec 64))
(declare-fun temp1068_94 () (_ BitVec 64))
(declare-fun temp1068_95 () (_ BitVec 64))
(declare-fun temp1068_96 () (_ BitVec 64))
(declare-fun temp1068_97 () (_ BitVec 64))
(declare-fun temp1068_98 () (_ BitVec 64))
(declare-fun temp1068_99 () (_ BitVec 64))
(declare-fun temp1068_100 () (_ BitVec 64))
(declare-fun temp1068_101 () (_ BitVec 64))
(declare-fun temp1068_102 () (_ BitVec 64))
(declare-fun temp1068_103 () (_ BitVec 64))
(declare-fun temp1068_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp1068_105 () (_ BitVec 64))
(declare-fun temp1068_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp1068_107 () (_ BitVec 64))
(declare-fun temp1068_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1068_109 () (_ BitVec 64))
(declare-fun temp1068_110 () (_ BitVec 64))
(declare-fun temp1068_111 () (_ BitVec 64))
(declare-fun temp1068_112 () (_ BitVec 64))
(declare-fun temp1068_113 () (_ BitVec 64))
(declare-fun temp1068_114 () (_ BitVec 64))
(declare-fun temp1068_115 () (_ BitVec 64))
(declare-fun temp1068_116 () (_ BitVec 64))
(declare-fun temp1068_117 () (_ BitVec 64))
(declare-fun temp1068_118 () (_ BitVec 64))
(declare-fun temp1068_119 () (_ BitVec 64))
(declare-fun temp1068_120 () (_ BitVec 64))
(declare-fun temp1068_121 () (_ BitVec 64))
(declare-fun temp1068_122 () (_ BitVec 64))
(declare-fun temp1068_123 () (_ BitVec 64))
(declare-fun temp1068_124 () (_ BitVec 64))
(declare-fun temp1068_126 () (_ BitVec 64))
(declare-fun temp1068_127 () (_ BitVec 64))
(declare-fun temp1068_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp1068_128 () (_ BitVec 64))
(declare-fun temp1068_129 () (_ BitVec 64))
(declare-fun temp1068_131 () (_ BitVec 64))
(declare-fun temp1068_132 () (_ BitVec 64))
(declare-fun temp1068_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp1068_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp1068_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp1068_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp1068_136 () (_ BitVec 64))
(declare-fun temp1068_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp1068_139 () (_ BitVec 64))
(declare-fun temp1068_140 () (_ BitVec 64))
(declare-fun temp1068_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp1068_141 () (_ BitVec 64))
(declare-fun temp1068_143 () (_ BitVec 64))
(declare-fun temp1068_144 () (_ BitVec 64))
(declare-fun temp1068_142 () (_ BitVec 64))
(declare-fun temp1068_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp1068_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp1068_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp1068_148 () (_ BitVec 64))
(declare-fun temp1068_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp1068_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp1068_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var3944848 () (_ BitVec 64))
(declare-fun var4206992 () (_ BitVec 64))
(declare-fun temp1068_152 () (_ BitVec 64))
(declare-fun var998846 () (_ BitVec 64))
(declare-fun temp1068_153 () (_ BitVec 64))
(declare-fun temp1068_154 () (_ BitVec 64))
(declare-fun var4535939 () (_ BitVec 64))
(declare-fun temp1068_155 () (_ BitVec 64))
(assert (= temp1068_1 #x0000000000000001))
(assert (= var465453 temp1068_1))
(assert (= temp1068_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp1068_2)))
(assert (= temp1068_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp1068_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp1068_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp1068_4)))
(assert (= temp1068_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp1068_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp1068_6 #x0000000000000000))
(assert (= var465488 temp1068_6))
(assert (= temp1068_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp1068_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1068_8 #x0000000000000001))
(assert (= var465522 temp1068_8))
(assert (= temp1068_10 #x0000000000000000))
(assert (= temp1068_9 temp1068_10))
(assert (= temp1068_12 #x0000000000000001))
(assert (= temp1068_11 temp1068_12))
(assert (= temp1068_13 #x0000000000000000))
(assert (= var863614 temp1068_13))
(assert (= temp1068_14 #x0000000000000001))
(assert (= var863635 temp1068_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp1068_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp1068_15)))
(assert (= temp1068_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1068_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1068_17 #x0000000000000000))
(assert (= var997373 temp1068_17))
(assert (= temp1068_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp1068_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1068_19 #x0000000000000000))
(assert (= var997418 temp1068_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp1068_20 #x0000000000000000))
(assert (= temp1068_21 temp1068_20))
(assert (= temp1068_22 (select ARGNAME_padding_NAMEEND_VAL temp1068_21)))
(assert (= temp1068_23 #x0000000000000001))
(assert (= temp1068_24 temp1068_23))
(assert (= temp1068_25 (select ARGNAME_padding_NAMEEND_VAL temp1068_24)))
(assert (= temp1068_26 #x0000000000000002))
(assert (= temp1068_27 temp1068_26))
(assert (= temp1068_28 (select ARGNAME_padding_NAMEEND_VAL temp1068_27)))
(assert (= temp1068_29 #x0000000000000003))
(assert (= temp1068_30 temp1068_29))
(assert (= temp1068_31 (select ARGNAME_padding_NAMEEND_VAL temp1068_30)))
(assert (= temp1068_32 #x0000000000000004))
(assert (= temp1068_33 temp1068_32))
(assert (= temp1068_34 (select ARGNAME_padding_NAMEEND_VAL temp1068_33)))
(assert (= temp1068_35 #x0000000000000005))
(assert (= temp1068_36 temp1068_35))
(assert (= temp1068_37 (select ARGNAME_padding_NAMEEND_VAL temp1068_36)))
(assert (= temp1068_38 #x0000000000000000))
(assert (= temp1068_39 #x0000000000000000))
(assert (= temp1068_40 temp1068_39))
(assert (= temp1068_41 (select ARGNAME_padding_NAMEEND_VAL temp1068_40)))
(assert (= temp1068_42 #x0000000000000000))
(assert (= temp1068_43 #x0000000000000001))
(assert (= temp1068_44 temp1068_43))
(assert (= temp1068_45 (select ARGNAME_padding_NAMEEND_VAL temp1068_44)))
(assert (= temp1068_46 #x0000000000000000))
(assert (= temp1068_47 #x0000000000000002))
(assert (= temp1068_48 temp1068_47))
(assert (= temp1068_49 (select ARGNAME_padding_NAMEEND_VAL temp1068_48)))
(assert (= temp1068_50 #x0000000000000000))
(assert (= temp1068_51 #x0000000000000003))
(assert (= temp1068_52 temp1068_51))
(assert (= temp1068_53 (select ARGNAME_padding_NAMEEND_VAL temp1068_52)))
(assert (= temp1068_54 #x0000000000000000))
(assert (= temp1068_55 #x0000000000000004))
(assert (= temp1068_56 temp1068_55))
(assert (= temp1068_57 (select ARGNAME_padding_NAMEEND_VAL temp1068_56)))
(assert (= temp1068_58 #x0000000000000000))
(assert (= temp1068_59 #x0000000000000005))
(assert (= temp1068_60 temp1068_59))
(assert (= temp1068_61 (select ARGNAME_padding_NAMEEND_VAL temp1068_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp1068_41 temp1068_38)
             (bvslt temp1068_45 temp1068_42)
             (bvslt temp1068_49 temp1068_46)
             (bvslt temp1068_53 temp1068_50)
             (bvslt temp1068_57 temp1068_54)
             (bvslt temp1068_61 temp1068_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1068_62 #x0000000000000000))
(assert (= var1716002 temp1068_62))
(assert (= temp1068_63 #x0000000000000000))
(assert (= temp1068_64 temp1068_63))
(assert (= temp1068_65 (select ARGNAME_stride_NAMEEND_VAL temp1068_64)))
(assert (= temp1068_66 #x0000000000000001))
(assert (= temp1068_67 temp1068_66))
(assert (= temp1068_68 (select ARGNAME_stride_NAMEEND_VAL temp1068_67)))
(assert (= temp1068_69 #x0000000000000002))
(assert (= temp1068_70 temp1068_69))
(assert (= temp1068_71 (select ARGNAME_stride_NAMEEND_VAL temp1068_70)))
(assert (= temp1068_72 #x0000000000000003))
(assert (= temp1068_73 temp1068_72))
(assert (= temp1068_74 (select ARGNAME_stride_NAMEEND_VAL temp1068_73)))
(assert (= temp1068_75 #x0000000000000004))
(assert (= temp1068_76 temp1068_75))
(assert (= temp1068_77 (select ARGNAME_stride_NAMEEND_VAL temp1068_76)))
(assert (= temp1068_78 #x0000000000000005))
(assert (= temp1068_79 temp1068_78))
(assert (= temp1068_80 (select ARGNAME_stride_NAMEEND_VAL temp1068_79)))
(assert (= temp1068_81 #x0000000000000000))
(assert (= temp1068_82 #x0000000000000000))
(assert (= temp1068_83 temp1068_82))
(assert (= temp1068_84 (select ARGNAME_stride_NAMEEND_VAL temp1068_83)))
(assert (= temp1068_85 #x0000000000000000))
(assert (= temp1068_86 #x0000000000000001))
(assert (= temp1068_87 temp1068_86))
(assert (= temp1068_88 (select ARGNAME_stride_NAMEEND_VAL temp1068_87)))
(assert (= temp1068_89 #x0000000000000000))
(assert (= temp1068_90 #x0000000000000002))
(assert (= temp1068_91 temp1068_90))
(assert (= temp1068_92 (select ARGNAME_stride_NAMEEND_VAL temp1068_91)))
(assert (= temp1068_93 #x0000000000000000))
(assert (= temp1068_94 #x0000000000000003))
(assert (= temp1068_95 temp1068_94))
(assert (= temp1068_96 (select ARGNAME_stride_NAMEEND_VAL temp1068_95)))
(assert (= temp1068_97 #x0000000000000000))
(assert (= temp1068_98 #x0000000000000004))
(assert (= temp1068_99 temp1068_98))
(assert (= temp1068_100 (select ARGNAME_stride_NAMEEND_VAL temp1068_99)))
(assert (= temp1068_101 #x0000000000000000))
(assert (= temp1068_102 #x0000000000000005))
(assert (= temp1068_103 temp1068_102))
(assert (= temp1068_104 (select ARGNAME_stride_NAMEEND_VAL temp1068_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp1068_84 temp1068_81)
             (bvsle temp1068_88 temp1068_85)
             (bvsle temp1068_92 temp1068_89)
             (bvsle temp1068_96 temp1068_93)
             (bvsle temp1068_100 temp1068_97)
             (bvsle temp1068_104 temp1068_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1068_105 #x0000000000000000))
(assert (= var1716023 temp1068_105))
(assert (= temp1068_106 #x0000000000000000))
(assert (= var1704114 temp1068_106))
(assert (= temp1068_107 #x0000000000000000))
(assert (= temp1068_108 temp1068_107))
(assert (= temp1068_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1068_108)))
(assert (= temp1068_110 #x0000000000000001))
(assert (= temp1068_111 temp1068_110))
(assert (= temp1068_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1068_111)))
(assert (= temp1068_113 #x0000000000000002))
(assert (= temp1068_114 temp1068_113))
(assert (= temp1068_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1068_114)))
(assert (= temp1068_116 #x0000000000000003))
(assert (= temp1068_117 temp1068_116))
(assert (= temp1068_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1068_117)))
(assert (= temp1068_119 #x0000000000000004))
(assert (= temp1068_120 temp1068_119))
(assert (= temp1068_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1068_120)))
(assert (= temp1068_122 #x0000000000000005))
(assert (= temp1068_123 temp1068_122))
(assert (= temp1068_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1068_123)))
(assert (= temp1068_126 var1704114))
(assert (= temp1068_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1068_126)))
(assert (= temp1068_125 temp1068_127))
(assert (= var1716068
   (ite (bvslt temp1068_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1068_128 #x0000000000000000))
(assert (= var1716068 temp1068_128))
(assert (= temp1068_129 #x0000000000000000))
(assert (= var1704114 temp1068_129))
(assert (= temp1068_131 var1704114))
(assert (= temp1068_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1068_131)))
(assert (= temp1068_130 temp1068_132))
(assert (= var1716090 (bvsmod temp1068_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1068_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp1068_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1068_134 #x0000000000000001))
(assert (= var1716091 temp1068_134))
(assert (= var1716110 var1716000))
(assert (= temp1068_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp1068_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1068_136 #x0000000000000001))
(assert (= var1716111 temp1068_136))
(assert (= temp1068_137 #x0000000000000001))
(assert (= var1705002 temp1068_137))
(assert (= temp1068_139 var1705002))
(assert (= temp1068_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1068_139)))
(assert (= temp1068_138 temp1068_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp1068_138)))
(assert (= temp1068_141 #x0000000000000000))
(assert (= var1704114 temp1068_141))
(assert (= temp1068_143 var1704114))
(assert (= temp1068_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1068_143)))
(assert (= temp1068_142 temp1068_144))
(assert (= temp1068_145 #x0000000000000002))
(assert (= var1979241 temp1068_145))
(assert (= temp1068_146 #x0000000000000001))
(assert (= var1716281 temp1068_146))
(assert (= temp1068_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1068_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1068_148 #x0000000000000001))
(assert (= var997490 temp1068_148))
(assert (= temp1068_149 #x0000000000000001))
(assert (= var997620 temp1068_149))
(assert (= var3486185 var997620))
(assert (= temp1068_150 #x0000000000000000))
(assert (= var3686207 temp1068_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp1068_151 #x0000000000000002))
(assert (= var3815043 temp1068_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var3944848 var997633))
(assert (= var4206992 var997633))
(assert (= temp1068_152 #x0000000000000001))
(assert (= var998846
   (ite (= ARGNAME_groups_NAMEEND temp1068_152)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1068_153 #x0000000000000000))
(assert (= var998846 temp1068_153))
(assert (= temp1068_154 #x0000000000000002))
(assert (= var4535939 temp1068_154))
(assert (= temp1068_155 #x0000000000000001))
(assert (= var997490 temp1068_155))
(model-add temp1068_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp1068_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp1068_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1068_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp1068_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1068_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






