(declare-fun temp29_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp29_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp29_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp29_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp29_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp29_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp29_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp29_8 () (_ BitVec 64))
(declare-fun temp29_10 () (_ BitVec 64))
(declare-fun temp29_9 () (_ BitVec 64))
(declare-fun temp29_12 () (_ BitVec 64))
(declare-fun temp29_11 () (_ BitVec 64))
(declare-fun temp29_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp29_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp29_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp29_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp29_17 () (_ BitVec 64))
(declare-fun temp29_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp29_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp29_20 () (_ BitVec 64))
(declare-fun temp29_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp29_22 () (_ BitVec 64))
(declare-fun temp29_23 () (_ BitVec 64))
(declare-fun temp29_24 () (_ BitVec 64))
(declare-fun temp29_25 () (_ BitVec 64))
(declare-fun temp29_26 () (_ BitVec 64))
(declare-fun temp29_27 () (_ BitVec 64))
(declare-fun temp29_28 () (_ BitVec 64))
(declare-fun temp29_29 () (_ BitVec 64))
(declare-fun temp29_30 () (_ BitVec 64))
(declare-fun temp29_31 () (_ BitVec 64))
(declare-fun temp29_32 () (_ BitVec 64))
(declare-fun temp29_33 () (_ BitVec 64))
(declare-fun temp29_34 () (_ BitVec 64))
(declare-fun temp29_35 () (_ BitVec 64))
(declare-fun temp29_36 () (_ BitVec 64))
(declare-fun temp29_37 () (_ BitVec 64))
(declare-fun temp29_38 () (_ BitVec 64))
(declare-fun temp29_39 () (_ BitVec 64))
(declare-fun temp29_40 () (_ BitVec 64))
(declare-fun temp29_41 () (_ BitVec 64))
(declare-fun temp29_42 () (_ BitVec 64))
(declare-fun temp29_43 () (_ BitVec 64))
(declare-fun temp29_44 () (_ BitVec 64))
(declare-fun temp29_45 () (_ BitVec 64))
(declare-fun temp29_46 () (_ BitVec 64))
(declare-fun temp29_47 () (_ BitVec 64))
(declare-fun temp29_48 () (_ BitVec 64))
(declare-fun temp29_49 () (_ BitVec 64))
(declare-fun temp29_50 () (_ BitVec 64))
(declare-fun temp29_51 () (_ BitVec 64))
(declare-fun temp29_52 () (_ BitVec 64))
(declare-fun temp29_53 () (_ BitVec 64))
(declare-fun temp29_54 () (_ BitVec 64))
(declare-fun temp29_55 () (_ BitVec 64))
(declare-fun temp29_56 () (_ BitVec 64))
(declare-fun temp29_57 () (_ BitVec 64))
(declare-fun temp29_58 () (_ BitVec 64))
(declare-fun temp29_59 () (_ BitVec 64))
(declare-fun temp29_60 () (_ BitVec 64))
(declare-fun temp29_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp29_62 () (_ BitVec 64))
(declare-fun temp29_63 () (_ BitVec 64))
(declare-fun temp29_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp29_65 () (_ BitVec 64))
(declare-fun temp29_66 () (_ BitVec 64))
(declare-fun temp29_67 () (_ BitVec 64))
(declare-fun temp29_68 () (_ BitVec 64))
(declare-fun temp29_69 () (_ BitVec 64))
(declare-fun temp29_70 () (_ BitVec 64))
(declare-fun temp29_71 () (_ BitVec 64))
(declare-fun temp29_72 () (_ BitVec 64))
(declare-fun temp29_73 () (_ BitVec 64))
(declare-fun temp29_74 () (_ BitVec 64))
(declare-fun temp29_75 () (_ BitVec 64))
(declare-fun temp29_76 () (_ BitVec 64))
(declare-fun temp29_77 () (_ BitVec 64))
(declare-fun temp29_78 () (_ BitVec 64))
(declare-fun temp29_79 () (_ BitVec 64))
(declare-fun temp29_80 () (_ BitVec 64))
(declare-fun temp29_81 () (_ BitVec 64))
(declare-fun temp29_82 () (_ BitVec 64))
(declare-fun temp29_83 () (_ BitVec 64))
(declare-fun temp29_84 () (_ BitVec 64))
(declare-fun temp29_85 () (_ BitVec 64))
(declare-fun temp29_86 () (_ BitVec 64))
(declare-fun temp29_87 () (_ BitVec 64))
(declare-fun temp29_88 () (_ BitVec 64))
(declare-fun temp29_89 () (_ BitVec 64))
(declare-fun temp29_90 () (_ BitVec 64))
(declare-fun temp29_91 () (_ BitVec 64))
(declare-fun temp29_92 () (_ BitVec 64))
(declare-fun temp29_93 () (_ BitVec 64))
(declare-fun temp29_94 () (_ BitVec 64))
(declare-fun temp29_95 () (_ BitVec 64))
(declare-fun temp29_96 () (_ BitVec 64))
(declare-fun temp29_97 () (_ BitVec 64))
(declare-fun temp29_98 () (_ BitVec 64))
(declare-fun temp29_99 () (_ BitVec 64))
(declare-fun temp29_100 () (_ BitVec 64))
(declare-fun temp29_101 () (_ BitVec 64))
(declare-fun temp29_102 () (_ BitVec 64))
(declare-fun temp29_103 () (_ BitVec 64))
(declare-fun temp29_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp29_105 () (_ BitVec 64))
(declare-fun temp29_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp29_107 () (_ BitVec 64))
(declare-fun temp29_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp29_109 () (_ BitVec 64))
(declare-fun temp29_110 () (_ BitVec 64))
(declare-fun temp29_111 () (_ BitVec 64))
(declare-fun temp29_112 () (_ BitVec 64))
(declare-fun temp29_113 () (_ BitVec 64))
(declare-fun temp29_114 () (_ BitVec 64))
(declare-fun temp29_115 () (_ BitVec 64))
(declare-fun temp29_116 () (_ BitVec 64))
(declare-fun temp29_117 () (_ BitVec 64))
(declare-fun temp29_118 () (_ BitVec 64))
(declare-fun temp29_119 () (_ BitVec 64))
(declare-fun temp29_120 () (_ BitVec 64))
(declare-fun temp29_121 () (_ BitVec 64))
(declare-fun temp29_122 () (_ BitVec 64))
(declare-fun temp29_123 () (_ BitVec 64))
(declare-fun temp29_124 () (_ BitVec 64))
(declare-fun temp29_126 () (_ BitVec 64))
(declare-fun temp29_127 () (_ BitVec 64))
(declare-fun temp29_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp29_128 () (_ BitVec 64))
(declare-fun temp29_129 () (_ BitVec 64))
(declare-fun temp29_131 () (_ BitVec 64))
(declare-fun temp29_132 () (_ BitVec 64))
(declare-fun temp29_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp29_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp29_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp29_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp29_136 () (_ BitVec 64))
(declare-fun temp29_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp29_139 () (_ BitVec 64))
(declare-fun temp29_140 () (_ BitVec 64))
(declare-fun temp29_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp29_141 () (_ BitVec 64))
(declare-fun temp29_143 () (_ BitVec 64))
(declare-fun temp29_144 () (_ BitVec 64))
(declare-fun temp29_142 () (_ BitVec 64))
(declare-fun temp29_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp29_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp29_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp29_148 () (_ BitVec 64))
(declare-fun temp29_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp29_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp29_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var997820 () (_ BitVec 64))
(declare-fun temp29_152 () (_ BitVec 64))
(declare-fun var997821 () (_ BitVec 64))
(declare-fun var5193549 () (_ BitVec 64))
(declare-fun temp29_153 () (_ BitVec 64))
(assert (= temp29_1 #x0000000000000001))
(assert (= var465453 temp29_1))
(assert (= temp29_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp29_2)))
(assert (= temp29_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp29_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp29_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp29_4)))
(assert (= temp29_5 #x0000000000000000))
(assert (= var465487 (ite (= var465486 temp29_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp29_6 #x0000000000000000))
(assert (= var465488 temp29_6))
(assert (= temp29_7 #x0000000000000000))
(assert (= var465522 (ite (= var465485 temp29_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp29_8 #x0000000000000001))
(assert (= var465522 temp29_8))
(assert (= temp29_10 #x0000000000000000))
(assert (= temp29_9 temp29_10))
(assert (= temp29_12 #x0000000000000001))
(assert (= temp29_11 temp29_12))
(assert (= temp29_13 #x0000000000000000))
(assert (= var863614 temp29_13))
(assert (= temp29_14 #x0000000000000001))
(assert (= var863635 temp29_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp29_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp29_15)))
(assert (= temp29_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp29_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_17 #x0000000000000000))
(assert (= var997373 temp29_17))
(assert (= temp29_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp29_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_19 #x0000000000000000))
(assert (= var997418 temp29_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp29_20 #x0000000000000000))
(assert (= temp29_21 temp29_20))
(assert (= temp29_22 (select ARGNAME_padding_NAMEEND_VAL temp29_21)))
(assert (= temp29_23 #x0000000000000001))
(assert (= temp29_24 temp29_23))
(assert (= temp29_25 (select ARGNAME_padding_NAMEEND_VAL temp29_24)))
(assert (= temp29_26 #x0000000000000002))
(assert (= temp29_27 temp29_26))
(assert (= temp29_28 (select ARGNAME_padding_NAMEEND_VAL temp29_27)))
(assert (= temp29_29 #x0000000000000003))
(assert (= temp29_30 temp29_29))
(assert (= temp29_31 (select ARGNAME_padding_NAMEEND_VAL temp29_30)))
(assert (= temp29_32 #x0000000000000004))
(assert (= temp29_33 temp29_32))
(assert (= temp29_34 (select ARGNAME_padding_NAMEEND_VAL temp29_33)))
(assert (= temp29_35 #x0000000000000005))
(assert (= temp29_36 temp29_35))
(assert (= temp29_37 (select ARGNAME_padding_NAMEEND_VAL temp29_36)))
(assert (= temp29_38 #x0000000000000000))
(assert (= temp29_39 #x0000000000000000))
(assert (= temp29_40 temp29_39))
(assert (= temp29_41 (select ARGNAME_padding_NAMEEND_VAL temp29_40)))
(assert (= temp29_42 #x0000000000000000))
(assert (= temp29_43 #x0000000000000001))
(assert (= temp29_44 temp29_43))
(assert (= temp29_45 (select ARGNAME_padding_NAMEEND_VAL temp29_44)))
(assert (= temp29_46 #x0000000000000000))
(assert (= temp29_47 #x0000000000000002))
(assert (= temp29_48 temp29_47))
(assert (= temp29_49 (select ARGNAME_padding_NAMEEND_VAL temp29_48)))
(assert (= temp29_50 #x0000000000000000))
(assert (= temp29_51 #x0000000000000003))
(assert (= temp29_52 temp29_51))
(assert (= temp29_53 (select ARGNAME_padding_NAMEEND_VAL temp29_52)))
(assert (= temp29_54 #x0000000000000000))
(assert (= temp29_55 #x0000000000000004))
(assert (= temp29_56 temp29_55))
(assert (= temp29_57 (select ARGNAME_padding_NAMEEND_VAL temp29_56)))
(assert (= temp29_58 #x0000000000000000))
(assert (= temp29_59 #x0000000000000005))
(assert (= temp29_60 temp29_59))
(assert (= temp29_61 (select ARGNAME_padding_NAMEEND_VAL temp29_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp29_41 temp29_38)
             (bvslt temp29_45 temp29_42)
             (bvslt temp29_49 temp29_46)
             (bvslt temp29_53 temp29_50)
             (bvslt temp29_57 temp29_54)
             (bvslt temp29_61 temp29_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_62 #x0000000000000000))
(assert (= var1716002 temp29_62))
(assert (= temp29_63 #x0000000000000000))
(assert (= temp29_64 temp29_63))
(assert (= temp29_65 (select ARGNAME_stride_NAMEEND_VAL temp29_64)))
(assert (= temp29_66 #x0000000000000001))
(assert (= temp29_67 temp29_66))
(assert (= temp29_68 (select ARGNAME_stride_NAMEEND_VAL temp29_67)))
(assert (= temp29_69 #x0000000000000002))
(assert (= temp29_70 temp29_69))
(assert (= temp29_71 (select ARGNAME_stride_NAMEEND_VAL temp29_70)))
(assert (= temp29_72 #x0000000000000003))
(assert (= temp29_73 temp29_72))
(assert (= temp29_74 (select ARGNAME_stride_NAMEEND_VAL temp29_73)))
(assert (= temp29_75 #x0000000000000004))
(assert (= temp29_76 temp29_75))
(assert (= temp29_77 (select ARGNAME_stride_NAMEEND_VAL temp29_76)))
(assert (= temp29_78 #x0000000000000005))
(assert (= temp29_79 temp29_78))
(assert (= temp29_80 (select ARGNAME_stride_NAMEEND_VAL temp29_79)))
(assert (= temp29_81 #x0000000000000000))
(assert (= temp29_82 #x0000000000000000))
(assert (= temp29_83 temp29_82))
(assert (= temp29_84 (select ARGNAME_stride_NAMEEND_VAL temp29_83)))
(assert (= temp29_85 #x0000000000000000))
(assert (= temp29_86 #x0000000000000001))
(assert (= temp29_87 temp29_86))
(assert (= temp29_88 (select ARGNAME_stride_NAMEEND_VAL temp29_87)))
(assert (= temp29_89 #x0000000000000000))
(assert (= temp29_90 #x0000000000000002))
(assert (= temp29_91 temp29_90))
(assert (= temp29_92 (select ARGNAME_stride_NAMEEND_VAL temp29_91)))
(assert (= temp29_93 #x0000000000000000))
(assert (= temp29_94 #x0000000000000003))
(assert (= temp29_95 temp29_94))
(assert (= temp29_96 (select ARGNAME_stride_NAMEEND_VAL temp29_95)))
(assert (= temp29_97 #x0000000000000000))
(assert (= temp29_98 #x0000000000000004))
(assert (= temp29_99 temp29_98))
(assert (= temp29_100 (select ARGNAME_stride_NAMEEND_VAL temp29_99)))
(assert (= temp29_101 #x0000000000000000))
(assert (= temp29_102 #x0000000000000005))
(assert (= temp29_103 temp29_102))
(assert (= temp29_104 (select ARGNAME_stride_NAMEEND_VAL temp29_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp29_84 temp29_81)
             (bvsle temp29_88 temp29_85)
             (bvsle temp29_92 temp29_89)
             (bvsle temp29_96 temp29_93)
             (bvsle temp29_100 temp29_97)
             (bvsle temp29_104 temp29_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_105 #x0000000000000000))
(assert (= var1716023 temp29_105))
(assert (= temp29_106 #x0000000000000000))
(assert (= var1704114 temp29_106))
(assert (= temp29_107 #x0000000000000000))
(assert (= temp29_108 temp29_107))
(assert (= temp29_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_108)))
(assert (= temp29_110 #x0000000000000001))
(assert (= temp29_111 temp29_110))
(assert (= temp29_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_111)))
(assert (= temp29_113 #x0000000000000002))
(assert (= temp29_114 temp29_113))
(assert (= temp29_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_114)))
(assert (= temp29_116 #x0000000000000003))
(assert (= temp29_117 temp29_116))
(assert (= temp29_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_117)))
(assert (= temp29_119 #x0000000000000004))
(assert (= temp29_120 temp29_119))
(assert (= temp29_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_120)))
(assert (= temp29_122 #x0000000000000005))
(assert (= temp29_123 temp29_122))
(assert (= temp29_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_123)))
(assert (= temp29_126 var1704114))
(assert (= temp29_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_126)))
(assert (= temp29_125 temp29_127))
(assert (= var1716068
   (ite (bvslt temp29_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_128 #x0000000000000000))
(assert (= var1716068 temp29_128))
(assert (= temp29_129 #x0000000000000000))
(assert (= var1704114 temp29_129))
(assert (= temp29_131 var1704114))
(assert (= temp29_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_131)))
(assert (= temp29_130 temp29_132))
(assert (= var1716090 (bvsmod temp29_130 ARGNAME_groups_NAMEEND)))
(assert (= temp29_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp29_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp29_134 #x0000000000000001))
(assert (= var1716091 temp29_134))
(assert (= var1716110 var1716000))
(assert (= temp29_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp29_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp29_136 #x0000000000000001))
(assert (= var1716111 temp29_136))
(assert (= temp29_137 #x0000000000000001))
(assert (= var1705002 temp29_137))
(assert (= temp29_139 var1705002))
(assert (= temp29_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_139)))
(assert (= temp29_138 temp29_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp29_138)))
(assert (= temp29_141 #x0000000000000000))
(assert (= var1704114 temp29_141))
(assert (= temp29_143 var1704114))
(assert (= temp29_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_143)))
(assert (= temp29_142 temp29_144))
(assert (= temp29_145 #x0000000000000002))
(assert (= var1979241 temp29_145))
(assert (= temp29_146 #x0000000000000001))
(assert (= var1716281 temp29_146))
(assert (= temp29_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp29_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_148 #x0000000000000001))
(assert (= var997490 temp29_148))
(assert (= temp29_149 #x0000000000000001))
(assert (= var997620 temp29_149))
(assert (= var3486185 var997620))
(assert (= temp29_150 #x0000000000000000))
(assert (= var3686207 temp29_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp29_151 #x0000000000000002))
(assert (= var3815043 temp29_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4469136 var997633))
(assert (= var997820 var997345))
(assert (= temp29_152 #x0000000000000000))
(assert (= var997821
   (ite (distinct var997820 temp29_152) #x0000000000000001 #x0000000000000000)))
(assert (= var5193549 var997821))
(assert (= temp29_153 #x0000000000000001))
(assert (= var997490 temp29_153))
(model-add temp29_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp29_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp29_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp29_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp29_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp29_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






